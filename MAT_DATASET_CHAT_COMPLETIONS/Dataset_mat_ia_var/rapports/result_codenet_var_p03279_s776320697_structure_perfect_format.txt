================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import bisect
from collections import defaultdict

class Bit:
    def __init__(self, n, MOD):
        self.size = n
        self.tree = [0] * (n + 1)
        self.depth = n.bit_length()
        self.mod = MOD

    def sum(self, i):
        s = 0
        while i > 0:
            s += self.tree[i]
            i -= i & -i
        return s % self.mod

    def add(self, i, x):
        while i <= self.size:
            self.tree[i] = (self.tree[i] + x) % self.mod
            i += i & -i

    def debug_print(self):
        for i in range(1, self.size + 1):
            j = (i & -i).bit_length()
            print('  ' * j, self.tree[i])

    def lower_bound(self, x):
        sum_ = 0
        pos = 0
        for i in range(self.depth, -1, -1):
            k = pos + (1 << i)
            if k <= self.size and sum_ + self.tree[k] < x:
                sum_ += self.tree[k]
                pos += 1 << i
        return pos + 1, sum_

n, m = map(int, input().split())
xxx = list(map(int, input().split()))
yyy = list(map(int, input().split()))
ab = defaultdict(set)
coordinates = set()

for x in xxx:
    if x < yyy[0] or yyy[-1] < x:
        continue
    i = bisect(yyy, x)
    a = x - yyy[i - 1]
    b = yyy[i] - x
    ab[a].add(b)
    coordinates.add(b)

cor_dict = {b: i for i, b in enumerate(sorted(coordinates), start=2)}
cdg = cor_dict.get
MOD = 10 ** 9 + 7
bit = Bit(len(coordinates) + 1, MOD)
bit.add(1, 1)

for a in sorted(ab):
    bbb = sorted(map(cdg, ab[a]), reverse=True)
    for b in bbb:
        bit.add(b, bit.sum(b - 1))

print(bit.sum(bit.size))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.055610984563827515
    2. 'import' → logprob: -2.9306108951568604
    3. '.' → logprob: -7.4306111335754395
    4. ' ' → logprob: -9.555610656738281
    5. '_import' → logprob: -10.805610656738281
    6. '.import' → logprob: -11.055610656738281
    7. '_' → logprob: -11.680610656738281
    8. ' .' → logprob: -11.805610656738281
    9. '```' → logprob: -12.430610656738281
    10. '	import' → logprob: -13.305610656738281

Token 4: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.043759625405073166
    2. 'ins' → logprob: -3.29375958442688
    3. ' bis' → logprob: -5.168759822845459
    4. ' ins' → logprob: -12.1687593460083
    5. 'b' → logprob: -12.9187593460083
    6. '```' → logprob: -13.7937593460083
    7. '_ins' → logprob: -14.4187593460083
    8. '*' → logprob: -15.4187593460083
    9. '.ins' → logprob: -15.5437593460083
    10. 'in' → logprob: -16.168760299682617

Token 5: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0019508942496031523
    2. 'e' → logprob: -6.251950740814209
    3. 'ec' → logprob: -11.126951217651367
    4. 'ct' → logprob: -12.626951217651367
    5. 'ectl' → logprob: -13.626951217651367
    6. 'ext' → logprob: -14.251951217651367
    7. 't' → logprob: -14.626951217651367
    8. 'sect' → logprob: -14.626951217651367
    9. 'ected' → logprob: -14.876951217651367
    10. 'n' → logprob: -15.376951217651367

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1282517910003662
    2. '.' → logprob: -2.128251791000366
    3. '_' → logprob: -7.253252029418945
    4. '_left' → logprob: -9.503252029418945
    5. '.b' → logprob: -9.503252029418945
    6. '```' → logprob: -9.628252029418945
    7. '`' → logprob: -9.753252029418945
    8. ' (' → logprob: -9.878252029418945
    9. '(
' → logprob: -10.503252029418945
    10. '._' → logprob: -10.628252029418945

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3016843795776367
    2. '_' → logprob: -1.4266843795776367
    3. '.' → logprob: -4.051684379577637
    4. '._' → logprob: -7.801684379577637
    5. '(
' → logprob: -7.801684379577637
    6. '_left' → logprob: -8.301684379577637
    7. ' (' → logprob: -8.551684379577637
    8. ',' → logprob: -8.676684379577637
    9. '[' → logprob: -9.176684379577637
    10. '`' → logprob: -9.426684379577637

Token 8: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1334393471479416
    2. ' collections' → logprob: -3.383439302444458
    3. 'math' → logprob: -3.758439302444458
    4. ' sys' → logprob: -3.758439302444458
    5. ' itertools' → logprob: -4.008439540863037
    6. 'collections' → logprob: -4.633439540863037
    7. ' typing' → logprob: -5.508439540863037
    8. ' heap' → logprob: -5.633439540863037
    9. 'sys' → logprob: -5.633439540863037
    10. 'heap' → logprob: -6.258439540863037

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3192615211009979
    2. ' import' → logprob: -1.3192615509033203
    3. '.' → logprob: -5.44426155090332
    4. '<|end|>' → logprob: -6.94426155090332
    5. ' ' → logprob: -7.81926155090332
    6. '```' → logprob: -8.81926155090332
    7. '.Counter' → logprob: -10.56926155090332
    8. ' defaultdict' → logprob: -10.69426155090332
    9. '.import' → logprob: -10.69426155090332
    10. '_import' → logprob: -10.94426155090332

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.9454764723777771
    2. ' deque' → logprob: -1.4454765319824219
    3. ' abc' → logprob: -1.6954765319824219
    4. 'deque' → logprob: -1.8204765319824219
    5. 'abc' → logprob: -3.570476531982422
    6. ' named' → logprob: -7.070476531982422
    7. ' import' → logprob: -8.320476531982422
    8. 'default' → logprob: -8.570476531982422
    9. ' ' → logprob: -8.570476531982422
    10. 'import' → logprob: -8.570476531982422

Token 11: '

' (ID: 279)
  Prédit: '_

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_

' → logprob: -0.7466654777526855
    2. '

' → logprob: -1.1216654777526855
    3. '
' → logprob: -2.7466654777526855
    4. '(' → logprob: -3.2466654777526855
    5. '_' → logprob: -3.8716654777526855
    6. '\n' → logprob: -4.4966654777526855
    7. '(

' → logprob: -4.7466654777526855
    8. '`

' → logprob: -4.8716654777526855
    9. '_
' → logprob: -4.9966654777526855
    10. '\' → logprob: -5.1216654777526855

Token 12: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04362235590815544
    2. '(
' → logprob: -4.0436224937438965
    3. '_' → logprob: -4.2936224937438965
    4. 'def' → logprob: -5.2936224937438965
    5. 'd' → logprob: -5.6686224937438965
    6. '\' → logprob: -7.1686224937438965
    7. '(

' → logprob: -7.5436224937438965
    8. '_
' → logprob: -7.9186224937438965
    9. '\(' → logprob: -9.043622016906738
    10. 's' → logprob: -9.043622016906738

Token 13: ' Bit' (ID: 9422)
  Prédit: ' Sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sorted' → logprob: -0.8894166350364685
    2. ' ' → logprob: -1.0144166946411133
    3. ' Binary' → logprob: -3.1394166946411133
    4. ' Mult' → logprob: -3.2644166946411133
    5. ' Segment' → logprob: -3.8894166946411133
    6. ' Ordered' → logprob: -4.014416694641113
    7. ' S' → logprob: -4.139416694641113
    8. ' Default' → logprob: -4.264416694641113
    9. ' Trie' → logprob: -4.264416694641113
    10. ' Sparse' → logprob: -4.889416694641113

Token 14: ':
' (ID: 734)
  Prédit: 'Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -0.12913179397583008
    2. ':' → logprob: -2.50413179397583
    3. '   ' → logprob: -5.00413179397583
    4. 'set' → logprob: -5.25413179397583
    5. ' :' → logprob: -5.50413179397583
    6. ' ' → logprob: -5.50413179397583
    7. 'array' → logprob: -5.50413179397583
    8. 'vector' → logprob: -5.62913179397583
    9. '  ' → logprob: -6.00413179397583
    10. ' Vector' → logprob: -6.25413179397583

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013134466484189034
    2. '   ' → logprob: -5.138134479522705
    3. '(object' → logprob: -6.138134479522705
    4. '():' → logprob: -6.763134479522705
    5. ' :' → logprob: -6.763134479522705
    6. '(' → logprob: -7.013134479522705
    7. '(n' → logprob: -7.638134479522705
    8. '):' → logprob: -8.138134002685547
    9. '```' → logprob: -8.263134002685547
    10. '    ' → logprob: -8.513134002685547

Token 16: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10209306329488754
    2. ':' → logprob: -2.602092981338501
    3. '(object' → logprob: -5.35209321975708
    4. '(' → logprob: -5.85209321975708
    5. '```' → logprob: -5.85209321975708
    6. 'def' (adapté à ' def') → logprob: -5.85209321975708
    7. '    ' → logprob: -5.97709321975708
    8. ' ' → logprob: -6.35209321975708
    9. ' def' → logprob: -6.85209321975708
    10. '  ' → logprob: -7.10209321975708

Token 17: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0771569237112999
    2. 'init' → logprob: -3.4521570205688477
    3. ' init' → logprob: -3.7021570205688477
    4. '   ' → logprob: -4.577157020568848
    5. '__' → logprob: -5.577157020568848
    6. ' _' → logprob: -7.202157020568848
    7. '  ' → logprob: -7.327157020568848
    8. 'it' → logprob: -7.452157020568848
    9. ' ' → logprob: -7.827157020568848
    10. 'n' → logprob: -7.952157020568848

Token 18: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.75
    3. 'ini' → logprob: -16.625
    4. 'int' → logprob: -17.125
    5. 'inite' → logprob: -19.75
    6. 'in' → logprob: -20.125
    7. 'inti' → logprob: -20.125
    8. 'innit' → logprob: -20.125
    9. '_init' → logprob: -20.375
    10. '	init' → logprob: -20.625

Token 19: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.19647489488124847
    2. '(' → logprob: -2.57147479057312
    3. '__' → logprob: -2.82147479057312
    4. ' (' → logprob: -3.44647479057312
    5. '(self' → logprob: -5.696475028991699
    6. '_' → logprob: -6.071475028991699
    7. '<|end|>' → logprob: -6.571475028991699
    8. '__((' → logprob: -7.196475028991699
    9. '__(
' → logprob: -7.196475028991699
    10. '_(' → logprob: -7.696475028991699

Token 20: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007145775598473847
    2. ' self' → logprob: -7.2507147789001465
    3. ')' → logprob: -12.750714302062988
    4. ' ' → logprob: -13.875714302062988
    5. '	self' → logprob: -15.250714302062988
    6. ',self' → logprob: -15.750714302062988
    7. '0' → logprob: -16.250715255737305
    8. '(self' → logprob: -16.500715255737305
    9. ',' → logprob: -17.000715255737305
    10. 's' → logprob: -17.500715255737305

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5410137176513672
    2. ' ,' → logprob: -0.9160137176513672
    3. ')' → logprob: -5.291013717651367
    4. ' )' → logprob: -5.541013717651367
    5. ' ' → logprob: -5.666013717651367
    6. 'self' → logprob: -5.916013717651367
    7. ' self' → logprob: -6.666013717651367
    8. '<|end|>' → logprob: -7.166013717651367
    9. ',self' → logprob: -8.166013717651367
    10. '  ' → logprob: -9.541013717651367

Token 22: ' n' (ID: 297)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7837826609611511
    2. ' n' → logprob: -1.033782720565796
    3. 'self' → logprob: -2.408782720565796
    4. ' size' → logprob: -2.658782720565796
    5. 'n' → logprob: -3.658782720565796
    6. 'size' → logprob: -6.283782482147217
    7. '   ' → logprob: -10.408782958984375
    8. ' ' → logprob: -10.783782958984375
    9. ' capacity' → logprob: -11.283782958984375
    10. ' N' → logprob: -12.658782958984375

Token 23: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00951712392270565
    2. ')' → logprob: -4.884517192840576
    3. ' ):' → logprob: -6.509517192840576
    4. '):
' → logprob: -8.384516716003418
    5. ',' → logprob: -9.509516716003418
    6. ':' → logprob: -9.634516716003418
    7. ' )' → logprob: -10.634516716003418
    8. ' ' → logprob: -11.759516716003418
    9. 'n' → logprob: -13.009516716003418
    10. '   ' → logprob: -13.634516716003418

Token 24: ' MOD' (ID: 32868)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.442394733428955
    2. ' )' → logprob: -1.817394733428955
    3. '):' → logprob: -2.317394733428955
    4. '   ' → logprob: -2.817394733428955
    5. ' default' → logprob: -2.942394733428955
    6. ' ):' → logprob: -3.192394733428955
    7. ' def' → logprob: -3.442394733428955
    8. ' size' → logprob: -3.442394733428955
    9. ' init' → logprob: -3.442394733428955
    10. '):
' → logprob: -3.567394733428955

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005280603654682636
    2. ')' → logprob: -5.255280494689941
    3. ' ):' → logprob: -10.505280494689941
    4. '):
' → logprob: -11.630280494689941
    5. ',' → logprob: -12.380280494689941
    6. '=' → logprob: -13.005280494689941
    7. ':' → logprob: -13.380280494689941
    8. ' ' → logprob: -14.630280494689941
    9. ')：' → logprob: -14.880280494689941
    10. '):
' → logprob: -15.005280494689941

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05374778062105179
    2. '):' → logprob: -3.4287478923797607
    3. ':' → logprob: -5.053747653961182
    4. ')' → logprob: -5.178747653961182
    5. 'n' → logprob: -5.928747653961182
    6. '    ' → logprob: -6.678747653961182
    7. ' ):' → logprob: -6.678747653961182
    8. '        ' → logprob: -7.303747653961182
    9. '   ' → logprob: -7.553747653961182
    10. ',' → logprob: -7.678747653961182

Token 27: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09015834331512451
    2. 'self' (adapté à ' self') → logprob: -2.715158462524414
    3. ' self' → logprob: -4.090158462524414
    4. '```' → logprob: -7.090158462524414
    5. ' ' → logprob: -7.465158462524414
    6. '   ' → logprob: -7.965158462524414
    7. '        ' → logprob: -7.965158462524414
    8. ' 
' → logprob: -8.840158462524414
    9. '        
' → logprob: -8.965158462524414
    10. ')' → logprob: -9.215158462524414

Token 28: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.41498589515686035
    2. '.n' → logprob: -1.5399858951568604
    3. ' =' → logprob: -4.039985656738281
    4. ' n' → logprob: -4.164985656738281
    5. '._' → logprob: -4.164985656738281
    6. 'n' → logprob: -4.289985656738281
    7. ' ' → logprob: -4.289985656738281
    8. '_size' → logprob: -4.789985656738281
    9. '.size' → logprob: -4.914985656738281
    10. '=' → logprob: -5.414985656738281

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47416412830352783
    2. '=' → logprob: -0.9741641283035278
    3. ' ' → logprob: -9.474164009094238
    4. '=n' → logprob: -12.849164009094238
    5. '=int' → logprob: -13.349164009094238
    6. ',' → logprob: -13.599164009094238
    7. ')' → logprob: -13.974164009094238
    8. '=len' → logprob: -14.599164009094238
    9. '=}' → logprob: -14.599164009094238
    10. '  ' → logprob: -14.724164009094238

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011047935113310814
    2. 'n' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.76104736328125
    4. '	n' → logprob: -16.76104736328125
    5. ' ' → logprob: -18.13604736328125
    6. ')n' → logprob: -19.01104736328125
    7. '$n' → logprob: -19.38604736328125
    8. '(n' → logprob: -19.38604736328125
    9. '`' → logprob: -19.51104736328125
    10. '```' → logprob: -19.76104736328125

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40048009157180786
    2. '<|end|>' → logprob: -1.150480031967163
    3. '       ' → logprob: -5.150480270385742
    4. '+' → logprob: -5.650480270385742
    5. '<|end|>' → logprob: -6.275480270385742
    6. ' 
' → logprob: -7.150480270385742
    7. ')' → logprob: -7.900480270385742
    8. '  
' → logprob: -8.400480270385742
    9. '*' → logprob: -8.775480270385742
    10. ' ' → logprob: -9.150480270385742

Token 32: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.174208402633667
    2. '
' → logprob: -1.924208402633667
    3. 'self' (adapté à ' self') → logprob: -4.799208641052246
    4. '        
' → logprob: -6.299208641052246
    5. ' self' → logprob: -7.049208641052246
    6. ' 
' → logprob: -7.299208641052246
    7. '   ' → logprob: -7.674208641052246
    8. '```' → logprob: -7.799208641052246
    9. ' ' → logprob: -7.924208641052246
    10. '  
' → logprob: -8.049208641052246

Token 34: '.tree' (ID: 49211)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7154974341392517
    2. '=' → logprob: -0.9654974341392517
    3. '.MOD' → logprob: -2.5904974937438965
    4. '   ' → logprob: -4.3404974937438965
    5. '._' → logprob: -4.3404974937438965
    6. '.mod' → logprob: -4.3404974937438965
    7. '.data' → logprob: -5.8404974937438965
    8. '_MOD' → logprob: -6.0904974937438965
    9. '.Mod' → logprob: -6.0904974937438965
    10. 'MOD' → logprob: -6.2154974937438965

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067372736521065235
    2. '=' → logprob: -5.006737232208252
    3. '<|end|>' → logprob: -11.00673770904541
    4. ' ' → logprob: -13.13173770904541
    5. '<|end|>' → logprob: -13.75673770904541
    6. '=[]' → logprob: -14.63173770904541
    7. '[' → logprob: -14.75673770904541
    8. ')' → logprob: -14.88173770904541
    9. ']' → logprob: -15.13173770904541
    10. ' =[' → logprob: -15.88173770904541

Token 36: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.011048170737922192
    2. '[' → logprob: -4.511048316955566
    3. ' defaultdict' → logprob: -15.136048316955566
    4. '[n' → logprob: -16.76104736328125
    5. '[int' → logprob: -16.76104736328125
    6. ' ' → logprob: -17.26104736328125
    7. '0' → logprob: -18.38604736328125
    8. '[a' → logprob: -19.38604736328125
    9. ' [-' → logprob: -19.63604736328125
    10. ' ' → logprob: -19.63604736328125

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '۰' → logprob: -17.875030517578125
    4. '00' → logprob: -20.375030517578125
    5. '000' → logprob: -20.750030517578125
    6. '०' → logprob: -21.000030517578125
    7. '０' → logprob: -21.250030517578125
    8. '٠' → logprob: -21.500030517578125
    9. '০' → logprob: -21.625030517578125
    10. '012' → logprob: -22.125030517578125

Token 38: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007094927132129669
    2. ']*(' → logprob: -5.007094860076904
    3. ']*' → logprob: -7.882094860076904
    4. ' ]' → logprob: -13.757095336914062
    5. ')' → logprob: -14.132095336914062
    6. ']+' → logprob: -16.382095336914062
    7. ',' → logprob: -16.632095336914062
    8. '](' → logprob: -16.882095336914062
    9. ' ' → logprob: -17.007095336914062
    10. '}' → logprob: -17.882095336914062

Token 39: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14605316519737244
    2. ' *' → logprob: -2.1460530757904053
    3. '*(' → logprob: -4.896053314208984
    4. ']' → logprob: -5.271053314208984
    5. ']*(' → logprob: -6.271053314208984
    6. ',' → logprob: -6.771053314208984
    7. ')' → logprob: -6.896053314208984
    8. '+' → logprob: -7.771053314208984
    9. '(n' → logprob: -8.021053314208984
    10. '0' → logprob: -8.271053314208984

Token 40: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.399378566537052e-05
    2. ' (' → logprob: -9.500083923339844
    3. '(' → logprob: -11.750083923339844
    4. '(self' → logprob: -14.375083923339844
    5. '((' → logprob: -15.000083923339844
    6. '(size' → logprob: -15.625083923339844
    7. '   ' → logprob: -16.125083923339844
    8. '(nn' → logprob: -18.000083923339844
    9. '(N' → logprob: -18.250083923339844
    10. ' ' → logprob: -18.625083923339844

Token 41: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0064450036734342575
    2. 'n' → logprob: -5.256444931030273
    3. ' (' → logprob: -6.881444931030273
    4. '(' → logprob: -9.006444931030273
    5. ' n' → logprob: -10.006444931030273
    6. '(self' → logprob: -11.131444931030273
    7. 'self' → logprob: -13.881444931030273
    8. '   ' → logprob: -16.256444931030273
    9. '[n' → logprob: -16.381444931030273
    10. ' self' → logprob: -17.006444931030273

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038042064756155014
    2. ' +' → logprob: -3.2880420684814453
    3. '+
' → logprob: -15.538042068481445
    4. ' +
' → logprob: -15.663042068481445
    5. ' plus' → logprob: -16.038042068481445
    6. ' ' → logprob: -16.038042068481445
    7. '+n' → logprob: -17.163042068481445
    8. '＋' → logprob: -17.663042068481445
    9. '+)' → logprob: -18.538042068481445
    10. '1' → logprob: -18.913042068481445

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '2' → logprob: -17.376171112060547
    4. '```' → logprob: -18.001171112060547
    5. '   ' → logprob: -18.251171112060547
    6. '  ' → logprob: -19.251171112060547
    7. '１' → logprob: -20.251171112060547
    8. '۱' → logprob: -20.313671112060547
    9. ')' → logprob: -20.688671112060547
    10. '' → logprob: -21.001171112060547

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.75
    3. '2' → logprob: -16.125
    4. '```' → logprob: -16.75
    5. '１' → logprob: -18.5625
    6. '   ' → logprob: -18.625
    7. '۱' → logprob: -18.6875
    8. '१' → logprob: -18.9375
    9. '' → logprob: -19.1875
    10. '{' → logprob: -19.25

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.040457421680912e-05
    2. ')
' → logprob: -9.750070571899414
    3. ' )' → logprob: -11.625070571899414
    4. '<|end|>' → logprob: -13.750070571899414
    5. '),' → logprob: -14.750070571899414
    6. '       ' → logprob: -15.125070571899414
    7. '}' → logprob: -15.125070571899414
    8. ')

' → logprob: -16.000070571899414
    9. ')
' → logprob: -16.125070571899414
    10. '   ' → logprob: -16.125070571899414

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025836186483502388
    2. '        
' → logprob: -5.150835990905762
    3. '    
' → logprob: -5.150835990905762
    4. '
' → logprob: -5.400835990905762
    5. ' 
' → logprob: -5.400835990905762
    6. '   ' → logprob: -5.900835990905762
    7. '  
' → logprob: -7.775835990905762
    8. '<|end|>' → logprob: -7.775835990905762
    9. ' ' → logprob: -8.150835990905762
    10. '        ' → logprob: -8.400835990905762

Token 47: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004950881935656071
    2. ' self' → logprob: -6.129951000213623
    3. 'self' (adapté à ' self') → logprob: -6.379951000213623
    4. '   ' → logprob: -7.254951000213623
    5. '	' → logprob: -9.754950523376465
    6. '\t' → logprob: -9.754950523376465
    7. '        
' → logprob: -9.754950523376465
    8. ' ' → logprob: -10.254950523376465
    9. ' ' → logprob: -10.379950523376465
    10. '	self' → logprob: -10.629950523376465

Token 48: '.depth' (ID: 89791)
  Prédit: '.MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.007753318641334772
    2. '.M' → logprob: -5.132753372192383
    3. '.mod' → logprob: -7.507753372192383
    4. '.' → logprob: -7.507753372192383
    5. ' .' → logprob: -7.757753372192383
    6. '.Mod' → logprob: -9.007753372192383
    7. '.MODE' → logprob: -9.632753372192383
    8. 'MOD' → logprob: -9.632753372192383
    9. '_MOD' → logprob: -11.757753372192383
    10. ' MOD' → logprob: -12.632753372192383

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22708852589130402
    2. '=' → logprob: -1.8520885705947876
    3. ' ' → logprob: -3.602088451385498
    4. '_mod' → logprob: -4.852088451385498
    5. '<|end|>' → logprob: -5.977088451385498
    6. ',' → logprob: -6.352088451385498
    7. '_' → logprob: -6.602088451385498
    8. ' +=' → logprob: -6.977088451385498
    9. ' ,' → logprob: -6.977088451385498
    10. 'mod' → logprob: -7.102088451385498

Token 50: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8376247882843018
    2. ' ' → logprob: -1.4626247882843018
    3. ' [' → logprob: -1.5876247882843018
    4. '[' → logprob: -2.7126247882843018
    5. '1' → logprob: -3.7126247882843018
    6. ' n' → logprob: -4.462624549865723
    7. 'n' → logprob: -4.587624549865723
    8. '20' → logprob: -4.712624549865723
    9. 'int' → logprob: -6.087624549865723
    10. '[int' → logprob: -6.087624549865723

Token 51: '.bit' (ID: 61866)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09764449298381805
    2. '
' → logprob: -2.847644567489624
    3. '<|end|>' → logprob: -3.722644567489624
    4. '   ' → logprob: -5.847644329071045
    5. '<|end|>' → logprob: -6.222644329071045
    6. '+' → logprob: -6.222644329071045
    7. '        
' → logprob: -6.972644329071045
    8. '        ' → logprob: -7.472644329071045
    9. '    
' → logprob: -7.597644329071045
    10. ' 
' → logprob: -7.597644329071045

Token 52: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -11.750009536743164
    3. '_l' → logprob: -14.125009536743164
    4. 'length' → logprob: -15.000009536743164
    5. '_count' → logprob: -15.250009536743164
    6. '```' → logprob: -16.125009536743164
    7. '_LENGTH' → logprob: -16.375009536743164
    8. '_width' → logprob: -16.625009536743164
    9. '\' → logprob: -16.750009536743164
    10. 'ength' → logprob: -17.125009536743164

Token 53: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08921010792255402
    2. '(' → logprob: -2.464210033416748
    3. '()+' → logprob: -9.214210510253906
    4. '(
' → logprob: -10.214210510253906
    5. '()
' → logprob: -10.339210510253906
    6. ' ()' → logprob: -10.964210510253906
    7. '()`' → logprob: -10.964210510253906
    8. '```' → logprob: -11.339210510253906
    9. '()[' → logprob: -11.964210510253906
    10. '()

' → logprob: -12.089210510253906

Token 54: '       ' (ID: 309)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0153735876083374
    2. ' 
' → logprob: -1.6403735876083374
    3. '<|end|>' → logprob: -1.6403735876083374
    4. '   ' → logprob: -2.140373706817627
    5. '
' → logprob: -2.890373706817627
    6. '  
' → logprob: -3.640373706817627
    7. '       ' → logprob: -3.890373706817627
    8. '        
' → logprob: -4.640373706817627
    9. '<|end|>' → logprob: -5.265373706817627
    10. ' ' → logprob: -5.640373706817627

Token 55: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02643568441271782
    2. '   ' → logprob: -4.901435852050781
    3. '
' → logprob: -5.151435852050781
    4. '    
' → logprob: -5.901435852050781
    5. '	self' → logprob: -6.151435852050781
    6. ' 
' → logprob: -6.401435852050781
    7. ' ' → logprob: -6.651435852050781
    8. ' self' → logprob: -6.651435852050781
    9. '<|end|>' → logprob: -7.026435852050781
    10. 'self' (adapté à ' self') → logprob: -7.151435852050781

Token 56: '.mod' (ID: 19046)
  Prédit: '.MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MOD' → logprob: -0.06578195840120316
    2. '.M' → logprob: -2.940782070159912
    3. '.' → logprob: -4.565782070159912
    4. '.mod' → logprob: -9.315781593322754
    5. '.Mod' → logprob: -9.315781593322754
    6. 'MOD' → logprob: -9.565781593322754
    7. ' .' → logprob: -9.940781593322754
    8. '.MODE' → logprob: -10.065781593322754
    9. '._' → logprob: -10.690781593322754
    10. '.MULT' → logprob: -11.190781593322754

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016194608062505722
    2. '=' → logprob: -4.141194820404053
    3. ' ' → logprob: -9.016194343566895
    4. ' =
' → logprob: -10.891194343566895
    5. '<|end|>' → logprob: -11.891194343566895
    6. '  ' → logprob: -12.391194343566895
    7. ',' → logprob: -13.391194343566895
    8. '   ' → logprob: -13.641194343566895
    9. ' ==' → logprob: -13.641194343566895
    10. ' +=' → logprob: -14.141194343566895

Token 58: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.00861729308962822
    2. 'MOD' → logprob: -4.758617401123047
    3. ' ' → logprob: -13.633617401123047
    4. ' ' → logprob: -13.883617401123047
    5. '_MOD' → logprob: -14.633617401123047
    6. '.MOD' → logprob: -16.383617401123047
    7. ' MO' → logprob: -17.883617401123047
    8. ' MODE' → logprob: -18.008617401123047
    9. ' MODULE' → logprob: -18.508617401123047
    10. '1' → logprob: -18.758617401123047

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18132628500461578
    2. '   ' → logprob: -2.306326389312744
    3. '    
' → logprob: -3.056326389312744
    4. '<|end|>' → logprob: -5.056326389312744
    5. 'def' → logprob: -5.181326389312744
    6. ' 
' → logprob: -6.431326389312744
    7. '  
' → logprob: -6.431326389312744
    8. '```' → logprob: -6.931326389312744
    9. '' → logprob: -7.431326389312744
    10. '   
' → logprob: -7.556326389312744

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2041219472885132
    2. '   ' → logprob: -1.2041219472885132
    3. '    
' → logprob: -1.2041219472885132
    4. 'def' → logprob: -3.3291220664978027
    5. ' 
' → logprob: -3.8291220664978027
    6. '  
' → logprob: -3.9541220664978027
    7. '<|end|>' → logprob: -4.579122066497803
    8. '   
' → logprob: -5.829122066497803
    9. ' def' → logprob: -5.954122066497803
    10. '        
' → logprob: -5.954122066497803

Token 61: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.030399203300476
    2. 'def' (adapté à ' def') → logprob: -1.030399203300476
    3. ' def' → logprob: -2.1553993225097656
    4. '   ' → logprob: -3.0303993225097656
    5. ' 
' → logprob: -3.2803993225097656
    6. '<|end|>' → logprob: -3.4053993225097656
    7. '    
' → logprob: -3.6553993225097656
    8. '```' → logprob: -4.530399322509766
    9. '  
' → logprob: -5.155399322509766
    10. '	def' → logprob: -5.905399322509766

Token 62: ' sum' (ID: 4215)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.02593354322016239
    2. ' add' → logprob: -4.525933742523193
    3. 'update' → logprob: -4.775933742523193
    4. '_update' → logprob: -5.150933742523193
    5. ' ' → logprob: -8.650933265686035
    6. '_add' → logprob: -9.275933265686035
    7. 'add' → logprob: -9.400933265686035
    8. ' upd' → logprob: -9.900933265686035
    9. ' _' → logprob: -10.025933265686035
    10. ' low' → logprob: -10.900933265686035

Token 63: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05131976678967476
    2. '(' → logprob: -3.0513198375701904
    3. ' (' → logprob: -6.176319599151611
    4. '(s' → logprob: -8.05132007598877
    5. '_' → logprob: -9.67632007598877
    6. '<|end|>' → logprob: -9.80132007598877
    7. '_prefix' → logprob: -10.17632007598877
    8. '_range' → logprob: -10.42632007598877
    9. '_query' → logprob: -10.42632007598877
    10. '_up' → logprob: -10.80132007598877

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014352317666634917
    2. ' ,' → logprob: -6.876435279846191
    3. 'self' → logprob: -8.501435279846191
    4. '(self' → logprob: -9.626435279846191
    5. ')' → logprob: -10.376435279846191
    6. '_,' → logprob: -10.501435279846191
    7. ',self' → logprob: -10.626435279846191
    8. 's' → logprob: -12.001435279846191
    9. '       ' → logprob: -12.001435279846191
    10. '   ' → logprob: -12.126435279846191

Token 65: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6090930104255676
    2. ' i' → logprob: -0.9840930104255676
    3. 'idx' → logprob: -3.734092950820923
    4. 'self' → logprob: -3.859092950820923
    5. ' idx' → logprob: -4.359093189239502
    6. 'index' → logprob: -4.609093189239502
    7. 'r' → logprob: -5.734093189239502
    8. ' self' → logprob: -5.859093189239502
    9. '   ' → logprob: -5.984093189239502
    10. 'k' → logprob: -6.484093189239502

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020818589255213737
    2. '):
' → logprob: -6.877081871032715
    3. ')' → logprob: -7.002081871032715
    4. ' ):' → logprob: -9.502081871032715
    5. ':' → logprob: -10.752081871032715
    6. ',' → logprob: -11.127081871032715
    7. '+' → logprob: -11.127081871032715
    8. '   ' → logprob: -12.252081871032715
    9. '):
' → logprob: -13.752081871032715
    10. ' ' → logprob: -13.877081871032715

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.484641969203949
    2. ':' → logprob: -1.7346420288085938
    3. '<|end|>' → logprob: -1.9846420288085938
    4. '<|end|>' → logprob: -3.8596420288085938
    5. '   ' → logprob: -4.359642028808594
    6. '=' → logprob: -4.984642028808594
    7. '(i' → logprob: -4.984642028808594
    8. 'i' → logprob: -4.984642028808594
    9. ' i' → logprob: -5.734642028808594
    10. ',' → logprob: -6.359642028808594

Token 68: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.961444616317749
    2. '       ' → logprob: -1.586444616317749
    3. ' res' → logprob: -2.086444616317749
    4. '        ' → logprob: -3.211444616317749
    5. '    ' → logprob: -3.211444616317749
    6. ' result' → logprob: -3.336444616317749
    7. ' ' → logprob: -3.336444616317749
    8. 'result' → logprob: -3.336444616317749
    9. 'res' → logprob: -3.461444616317749
    10. 's' (adapté à ' s') → logprob: -3.711444616317749

Token 69: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5237762928009033
    2. ' =' → logprob: -1.0237762928009033
    3. '=' → logprob: -3.6487762928009033
    4. ' ' → logprob: -4.273776054382324
    5. '+=' → logprob: -5.398776054382324
    6. '  ' → logprob: -5.898776054382324
    7. '   ' → logprob: -7.648776054382324
    8. ' |=' → logprob: -8.398776054382324
    9. ',' → logprob: -9.148776054382324
    10. '       ' → logprob: -9.398776054382324

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021573305130005
    2. ' ' → logprob: -2.3502156734466553
    3. '       ' → logprob: -11.725215911865234
    4. '   ' → logprob: -14.100215911865234
    5. 'self' → logprob: -16.725215911865234
    6. '        ' → logprob: -16.975215911865234
    7. ' self' → logprob: -17.225215911865234
    8. '۰' → logprob: -17.725215911865234
    9. '  ' → logprob: -17.975215911865234
    10. '    ' → logprob: -18.225215911865234

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'self' → logprob: -16.000003814697266
    4. 's' → logprob: -17.000003814697266
    5. '(' → logprob: -17.500003814697266
    6. '۰' → logprob: -17.750003814697266
    7. '   ' → logprob: -18.750003814697266
    8. 'i' → logprob: -19.000003814697266
    9. '```' → logprob: -19.125003814697266
    10. '       ' → logprob: -19.625003814697266

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1523127257823944
    2. '       ' → logprob: -2.652312755584717
    3. ' while' → logprob: -2.652312755584717
    4. '   ' → logprob: -9.027312278747559
    5. 'i' → logprob: -9.527312278747559
    6. '	while' → logprob: -9.527312278747559
    7. ' ' → logprob: -11.277312278747559
    8. '        ' → logprob: -12.027312278747559
    9. 'While' → logprob: -12.027312278747559
    10. ' i' → logprob: -12.527312278747559

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132743537425995
    2. 'i' → logprob: -1.3132743835449219
    3. '	i' → logprob: -11.813274383544922
    4. ' ' → logprob: -12.813274383544922
    5. '(i' → logprob: -14.063274383544922
    6. '   ' → logprob: -14.188274383544922
    7. ' ' → logprob: -15.063274383544922
    8. '  ' → logprob: -15.313274383544922
    9. '0' → logprob: -15.688274383544922
    10. 'I' → logprob: -17.063274383544922

Token 76: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.002824966097250581
    2. ' >' → logprob: -5.877824783325195
    3. '>=' → logprob: -11.877824783325195
    4. '&gt' → logprob: -12.127824783325195
    5. '">' → logprob: -13.002824783325195
    6. '<|end|>' → logprob: -13.252824783325195
    7. ')>' → logprob: -14.502824783325195
    8. ':' → logprob: -14.627824783325195
    9. '0' → logprob: -14.627824783325195
    10. 'and' → logprob: -14.752824783325195

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34845560789108276
    2. ' ' → logprob: -1.2234556674957275
    3. '<|end|>' → logprob: -11.723455429077148
    4. '   ' → logprob: -13.973455429077148
    5. '  ' → logprob: -14.723455429077148
    6. '>' → logprob: -14.848455429077148
    7. '=' → logprob: -15.348455429077148
    8. '    ' → logprob: -15.848455429077148
    9. '<|end|>' → logprob: -15.848455429077148
    10. '```' → logprob: -16.22345542907715

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.375021934509277
    4. '>' → logprob: -17.87502098083496
    5. '```' → logprob: -19.25002098083496
    6. ':' → logprob: -19.25002098083496
    7. '.' → logprob: -19.62502098083496
    8. '<|end|>' → logprob: -19.62502098083496
    9. '   ' → logprob: -19.75002098083496
    10. '=' → logprob: -19.75002098083496

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0443248488008976
    2. ':
' → logprob: -3.1693248748779297
    3. '       ' → logprob: -7.04432487487793
    4. ',' → logprob: -8.79432487487793
    5. '           ' → logprob: -9.29432487487793
    6. '<|end|>' → logprob: -9.29432487487793
    7. ' and' → logprob: -10.16932487487793
    8. '<|end|>' → logprob: -10.91932487487793
    9. '):
' → logprob: -11.16932487487793
    10. '):' → logprob: -11.29432487487793

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1256866604089737
    2. '       ' → logprob: -2.6256866455078125
    3. '
' → logprob: -3.6256866455078125
    4. ' s' → logprob: -4.3756866455078125
    5. 's' → logprob: -6.3756866455078125
    6. '<|end|>' → logprob: -7.1256866455078125
    7. '```' → logprob: -7.1256866455078125
    8. ',' → logprob: -7.3756866455078125
    9. '        ' → logprob: -8.375686645507812
    10. ' 
' → logprob: -8.375686645507812

Token 81: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.6561152338981628
    2. ' s' → logprob: -0.7811152338981628
    3. '           ' → logprob: -3.9061152935028076
    4. '               ' → logprob: -5.9061150550842285
    5. ' ' → logprob: -8.906115531921387
    6. '```' → logprob: -9.281115531921387
    7. '       ' → logprob: -9.781115531921387
    8. '   ' → logprob: -10.906115531921387
    9. '<|end|>' → logprob: -10.906115531921387
    10. '
' → logprob: -11.281115531921387

Token 82: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47681471705436707
    2. '+=' → logprob: -0.9768147468566895
    3. '=' → logprob: -6.6018147468566895
    4. ' =' → logprob: -6.7268147468566895
    5. ' ^=' → logprob: -9.101814270019531
    6. '+' → logprob: -10.101814270019531
    7. ' +' → logprob: -11.351814270019531
    8. ' ' → logprob: -12.226814270019531
    9. '+=(' → logprob: -12.851814270019531
    10. ']+=' → logprob: -12.976814270019531

Token 83: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04859054833650589
    2. ' self' → logprob: -3.048590660095215
    3. '           ' → logprob: -13.173590660095215
    4. '(self' → logprob: -14.173590660095215
    5. '[self' → logprob: -15.423590660095215
    6. '	self' → logprob: -15.798590660095215
    7. '       ' → logprob: -16.5485897064209
    8. '```' → logprob: -16.7985897064209
    9. '*self' → logprob: -17.1735897064209
    10. ' ' → logprob: -17.4235897064209

Token 84: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -7.958325295476243e-05
    2. '.' → logprob: -9.625079154968262
    3. ' .' → logprob: -11.875079154968262
    4. 'tree' → logprob: -12.250079154968262
    5. '	tree' → logprob: -14.375079154968262
    6. '`.' → logprob: -15.125079154968262
    7. '.t' → logprob: -15.625079154968262
    8. ' tree' → logprob: -16.500080108642578
    9. '.table' → logprob: -16.625080108642578
    10. '[' → logprob: -16.750080108642578

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[' → logprob: -11.375011444091797
    3. 'i' → logprob: -16.875011444091797
    4. ' [' → logprob: -17.625011444091797
    5. '```' → logprob: -19.250011444091797
    6. '[
' → logprob: -20.250011444091797
    7. '[I' → logprob: -20.250011444091797
    8. '   ' → logprob: -20.375011444091797
    9. '	i' → logprob: -20.375011444091797
    10. ' i' → logprob: -20.625011444091797

Token 86: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10016093403100967
    2. ']%' → logprob: -2.725160837173462
    3. ' ]' → logprob: -3.600160837173462
    4. ')' → logprob: -6.225161075592041
    5. ')%' → logprob: -8.725160598754883
    6. '%' → logprob: -8.975160598754883
    7. ' )' → logprob: -9.475160598754883
    8. ']
' → logprob: -10.600160598754883
    9. '<|end|>' → logprob: -10.725160598754883
    10. ' %' → logprob: -10.725160598754883

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19213788211345673
    2. '%' → logprob: -2.1921379566192627
    3. ' %' → logprob: -2.9421379566192627
    4. '
' → logprob: -5.317137718200684
    5. ' s' → logprob: -6.317137718200684
    6. ' ' → logprob: -6.942137718200684
    7. ' %=' → logprob: -7.317137718200684
    8. '%i' → logprob: -7.942137718200684
    9. '%s' → logprob: -8.567137718200684
    10. '       ' → logprob: -8.692137718200684

Token 88: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2929156422615051
    2. 's' → logprob: -1.7929155826568604
    3. '           ' → logprob: -2.7929155826568604
    4. ' i' → logprob: -3.7929155826568604
    5. 'i' (adapté à ' i') → logprob: -5.6679158210754395
    6. ' ' → logprob: -9.167915344238281
    7. '            ' → logprob: -10.417915344238281
    8. '   ' → logprob: -10.792915344238281
    9. '       ' → logprob: -11.417915344238281
    10. '
' → logprob: -12.042915344238281

Token 89: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.02288983203470707
    2. '-=' → logprob: -4.022889614105225
    3. '-' → logprob: -6.647889614105225
    4. '>' → logprob: -6.772889614105225
    5. '=' → logprob: -7.647889614105225
    6. ' &' → logprob: -8.272890090942383
    7. '    ' → logprob: -8.272890090942383
    8. '   ' → logprob: -8.522890090942383
    9. ' &=' → logprob: -8.522890090942383
    10. ' ' → logprob: -8.772890090942383

Token 90: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001940057729370892
    2. ' i' → logprob: -6.2519402503967285
    3. '(i' → logprob: -12.37693977355957
    4. ' ' → logprob: -13.37693977355957
    5. '1' → logprob: -13.50193977355957
    6. '   ' → logprob: -13.62693977355957
    7. '	i' → logprob: -13.75193977355957
    8. ' (' → logprob: -13.87693977355957
    9. '  ' → logprob: -14.25193977355957
    10. '(' → logprob: -14.87693977355957

Token 91: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.08318697661161423
    2. ' &' → logprob: -2.5831868648529053
    3. 'nd' → logprob: -6.708187103271484
    4. '&t' → logprob: -6.708187103271484
    5. '&i' → logprob: -7.333187103271484
    6. '&r' → logprob: -8.708187103271484
    7. 'nt' → logprob: -8.958187103271484
    8. 'n' → logprob: -9.208187103271484
    9. ' ' → logprob: -9.458187103271484
    10. '-' → logprob: -9.708187103271484

Token 92: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.05300629884004593
    2. '-' → logprob: -3.303006410598755
    3. ' -' → logprob: -4.553006172180176
    4. 'i' → logprob: -5.553006172180176
    5. ' i' → logprob: -7.803006172180176
    6. '(-' → logprob: -10.428006172180176
    7. '(i' → logprob: -13.678006172180176
    8. '	i' → logprob: -13.803006172180176
    9. ' (-' → logprob: -13.928006172180176
    10. '_i' → logprob: -15.178006172180176

Token 93: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2664456789934775e-06
    2. ' i' → logprob: -13.625000953674316
    3. '	i' → logprob: -18.625001907348633
    4. ''i' → logprob: -20.000001907348633
    5. '_i' → logprob: -20.500001907348633
    6. '<|end|>' → logprob: -20.500001907348633
    7. '-i' → logprob: -21.000001907348633
    8. '<|end|>' → logprob: -21.375001907348633
    9. ')i' → logprob: -21.750001907348633
    10. '```' → logprob: -21.750001907348633

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07744733989238739
    2. '           ' → logprob: -2.9524474143981934
    3. '```' → logprob: -5.327447414398193
    4. ' ' → logprob: -5.452447414398193
    5. '        
' → logprob: -5.702447414398193
    6. '   ' → logprob: -5.952447414398193
    7. '\n' → logprob: -6.452447414398193
    8. '
' → logprob: -6.952447414398193
    9. '               ' → logprob: -7.577447414398193
    10. '[' → logprob: -7.702447414398193

Token 96: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05587414652109146
    2. 'return' (adapté à ' return') → logprob: -3.1808741092681885
    3. ' return' → logprob: -4.430874347686768
    4. 's' → logprob: -7.680874347686768
    5. '   ' → logprob: -8.30587387084961
    6. ' s' → logprob: -9.93087387084961
    7. '	return' → logprob: -9.93087387084961
    8. ' ' → logprob: -10.55587387084961
    9. '	' → logprob: -10.68087387084961
    10. '           ' → logprob: -11.18087387084961

Token 97: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1426766961812973
    2. ' s' → logprob: -2.017676591873169
    3. '(s' → logprob: -14.01767635345459
    4. ' ' → logprob: -15.01767635345459
    5. '	s' → logprob: -15.89267635345459
    6. '   ' → logprob: -16.142677307128906
    7. '{s' → logprob: -16.642677307128906
    8. '`s' → logprob: -17.267677307128906
    9. '"s' → logprob: -17.642677307128906
    10. '  ' → logprob: -17.642677307128906

Token 98: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5431520938873291
    2. ' %' → logprob: -1.418152093887329
    3. '<|end|>' → logprob: -1.793152093887329
    4. '   ' → logprob: -5.29315185546875
    5. '
' → logprob: -5.79315185546875
    6. ' ' → logprob: -6.91815185546875
    7. '<|end|>' → logprob: -7.41815185546875
    8. '%n' → logprob: -8.66815185546875
    9. '    ' → logprob: -9.54315185546875
    10. '    
' → logprob: -9.54315185546875

Token 99: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008619539439678192
    2. ' self' → logprob: -4.75861930847168
    3. '(self' → logprob: -12.25861930847168
    4. '	self' → logprob: -16.00861930847168
    5. '[self' → logprob: -17.00861930847168
    6. '       ' → logprob: -17.00861930847168
    7. '$self' → logprob: -18.38361930847168
    8. '*self' → logprob: -19.63361930847168
    9. '_self' → logprob: -19.75861930847168
    10. ' ' → logprob: -19.88361930847168

Token 100: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -1.4378848391061183e-05
    2. '.' → logprob: -11.500014305114746
    3. ' .' → logprob: -12.500014305114746
    4. '.m' → logprob: -15.750014305114746
    5. '.mode' → logprob: -16.250015258789062
    6. '.cod' → logprob: -16.625015258789062
    7. 'mod' → logprob: -17.625015258789062
    8. '.MOD' → logprob: -17.875015258789062
    9. '	mod' → logprob: -18.000015258789062
    10. '.mods' → logprob: -18.000015258789062

Token 101: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32156503200531006
    2. 'def' (adapté à ' def') → logprob: -1.32156503200531
    3. ' def' → logprob: -4.9465651512146
    4. ' ' → logprob: -7.3215651512146
    5. '    
' → logprob: -8.071564674377441
    6. '  ' → logprob: -9.946564674377441
    7. '  
' → logprob: -10.196564674377441
    8. ' 
' → logprob: -10.446564674377441
    9. '	def' → logprob: -10.446564674377441
    10. '   
' → logprob: -11.321564674377441

Token 104: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1048106774687767
    2. ' update' → logprob: -2.3548107147216797
    3. 'add' → logprob: -5.97981071472168
    4. 'update' → logprob: -6.22981071472168
    5. ' def' → logprob: -10.35481071472168
    6. ' ' → logprob: -10.72981071472168
    7. ' modify' → logprob: -11.97981071472168
    8. 'def' → logprob: -12.10481071472168
    9. '```' → logprob: -12.35481071472168
    10. ' upd' → logprob: -12.72981071472168

Token 105: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023250321100931615
    2. '(' → logprob: -8.375232696533203
    3. ' (' → logprob: -13.375232696533203
    4. '(s' → logprob: -15.750232696533203
    5. 'self' → logprob: -16.500232696533203
    6. '(
' → logprob: -17.000232696533203
    7. ' ' → logprob: -17.125232696533203
    8. '   ' → logprob: -17.250232696533203
    9. '(sel' → logprob: -17.375232696533203
    10. ' self' → logprob: -17.750232696533203

Token 106: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0023968173190951347
    2. '(' → logprob: -6.127396583557129
    3. ',' → logprob: -8.877396583557129
    4. ' (' → logprob: -10.002396583557129
    5. '(i' → logprob: -11.377396583557129
    6. ')' → logprob: -12.627396583557129
    7. ' ' → logprob: -12.752396583557129
    8. 'self' → logprob: -12.752396583557129
    9. '(s' → logprob: -13.377396583557129
    10. '(
' → logprob: -13.752396583557129

Token 107: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12694008648395538
    2. 'i' → logprob: -2.1269400119781494
    3. 'self' → logprob: -12.25193977355957
    4. ' self' → logprob: -12.87693977355957
    5. ' ' → logprob: -13.00193977355957
    6. 'index' → logprob: -14.25193977355957
    7. '   ' → logprob: -14.25193977355957
    8. '	i' → logprob: -15.12693977355957
    9. ' index' → logprob: -15.50193977355957
    10. ')' → logprob: -15.75193977355957

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. ' ,' → logprob: -10.000048637390137
    3. ',value' → logprob: -13.000048637390137
    4. ',val' → logprob: -14.625048637390137
    5. ',n' → logprob: -15.625048637390137
    6. ',i' → logprob: -15.875048637390137
    7. ',int' → logprob: -16.625049591064453
    8. '‌,' → logprob: -16.625049591064453
    9. 'self' → logprob: -16.750049591064453
    10. ',self' → logprob: -16.875049591064453

Token 109: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4938785433769226
    2. 'v' → logprob: -1.1188786029815674
    3. ' x' → logprob: -3.4938786029815674
    4. ' v' → logprob: -3.6188786029815674
    5. 'delta' → logprob: -5.493878364562988
    6. 'val' → logprob: -7.118878364562988
    7. 'value' → logprob: -7.743878364562988
    8. ' delta' → logprob: -7.868878364562988
    9. ' val' → logprob: -9.743878364562988
    10. ' ' → logprob: -10.368878364562988

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006429764907807112
    2. '):
' → logprob: -7.750642776489258
    3. ',' → logprob: -8.750642776489258
    4. ')' → logprob: -10.750642776489258
    5. ' ):' → logprob: -10.750642776489258
    6. ':' → logprob: -12.125642776489258
    7. '   ' → logprob: -13.125642776489258
    8. '):
' → logprob: -13.250642776489258
    9. ' ' → logprob: -14.125642776489258
    10. '       ' → logprob: -15.375642776489258

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018897335976362228
    2. '<|end|>' → logprob: -6.501889705657959
    3. ',' → logprob: -9.251890182495117
    4. '
' → logprob: -10.251890182495117
    5. '```' → logprob: -10.376890182495117
    6. '        ' → logprob: -10.501890182495117
    7. ')' → logprob: -10.501890182495117
    8. '   ' → logprob: -10.626890182495117
    9. ' i' → logprob: -10.876890182495117
    10. '        
' → logprob: -10.876890182495117

Token 112: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4454076588153839
    2. '       ' → logprob: -1.0704076290130615
    3. 'while' (adapté à ' while') → logprob: -4.195407867431641
    4. ' i' → logprob: -6.820407867431641
    5. '   ' → logprob: -9.44540786743164
    6. '        ' → logprob: -9.82040786743164
    7. ' n' → logprob: -9.82040786743164
    8. 'n' → logprob: -9.82040786743164
    9. '```' → logprob: -10.07040786743164
    10. '	while' → logprob: -10.57040786743164

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132667541503906
    2. 'i' → logprob: -1.3132667541503906
    3. '   ' → logprob: -12.81326675415039
    4. '(i' → logprob: -13.81326675415039
    5. '	i' → logprob: -14.18826675415039
    6. 'self' → logprob: -15.06326675415039
    7. '    ' → logprob: -17.31326675415039
    8. ' ' → logprob: -17.31326675415039
    9. '  ' → logprob: -17.43826675415039
    10. ',i' → logprob: -17.81326675415039

Token 114: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4740781784057617
    2. '<=' → logprob: -0.9740781784057617
    3. ' <' → logprob: -14.599078178405762
    4. '<' → logprob: -14.974078178405762
    5. ' ≤' → logprob: -16.224079132080078
    6. '≤' → logprob: -16.474079132080078
    7. '+=' → logprob: -16.724079132080078
    8. ' +=' → logprob: -17.099079132080078
    9. ' ' → logprob: -17.224079132080078
    10. '   ' → logprob: -17.724079132080078

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '(self' → logprob: -17.126928329467773
    4. '	self' → logprob: -18.126928329467773
    5. '   ' → logprob: -18.501928329467773
    6. '=self' → logprob: -18.751928329467773
    7. '[self' → logprob: -19.126928329467773
    8. '       ' → logprob: -19.501928329467773
    9. '
' → logprob: -19.876928329467773
    10. ':self' → logprob: -20.126928329467773

Token 116: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.16219933331012726
    2. 'size' → logprob: -1.9121993780136108
    3. 'self' → logprob: -6.2871994972229
    4. ' size' → logprob: -9.162199020385742
    5. '<size' → logprob: -13.162199020385742
    6. '	size' → logprob: -13.912199020385742
    7. 'n' → logprob: -14.162199020385742
    8. ':size' → logprob: -14.287199020385742
    9. 's' → logprob: -14.412199020385742
    10. '_size' → logprob: -14.662199020385742

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42912575602531433
    2. ':
' → logprob: -1.0541257858276367
    3. '       ' → logprob: -8.429125785827637
    4. '):
' → logprob: -9.679125785827637
    5. ',' → logprob: -10.054125785827637
    6. ' :
' → logprob: -10.179125785827637
    7. '           ' → logprob: -10.429125785827637
    8. '   ' → logprob: -11.304125785827637
    9. ':
' → logprob: -12.179125785827637
    10. ' :' → logprob: -12.429125785827637

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.036524842376821e-05
    2. 'self' → logprob: -11.250040054321289
    3. ' self' → logprob: -12.125040054321289
    4. '```' → logprob: -12.125040054321289
    5. '       ' → logprob: -12.375040054321289
    6. 'x' → logprob: -13.125040054321289
    7. '   ' → logprob: -13.125040054321289
    8. '	       ' → logprob: -13.125040054321289
    9. '<|end|>' → logprob: -13.250040054321289
    10. '
' → logprob: -14.000040054321289

Token 119: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15354008972644806
    2. '           ' → logprob: -2.5285401344299316
    3. ' self' → logprob: -2.7785401344299316
    4. '               ' → logprob: -8.403539657592773
    5. '(self' → logprob: -9.028539657592773
    6. '	self' → logprob: -10.153539657592773
    7. '   ' → logprob: -11.278539657592773
    8. ' ' → logprob: -11.653539657592773
    9. '```' → logprob: -11.653539657592773
    10. '       ' → logprob: -12.403539657592773

Token 120: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.020790379494428635
    2. '.' → logprob: -3.8957903385162354
    3. ' .' → logprob: -8.645790100097656
    4. '>.' → logprob: -10.645790100097656
    5. '`.' → logprob: -11.395790100097656
    6. '].' → logprob: -12.145790100097656
    7. '.thread' → logprob: -12.145790100097656
    8. '.py' → logprob: -12.520790100097656
    9. '.user' → logprob: -12.520790100097656
    10. '	tree' → logprob: -12.770790100097656

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. '[I' → logprob: -15.125001907348633
    4. '```' → logprob: -17.500001907348633
    5. '[u' → logprob: -18.875001907348633
    6. '[int' → logprob: -18.875001907348633
    7. '[index' → logprob: -19.125001907348633
    8. '[idx' → logprob: -19.625001907348633
    9. '[self' → logprob: -19.750001907348633
    10. '[x' → logprob: -20.000001907348633

Token 122: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.314298152923584
    2. ' +=' → logprob: -1.814298152923584
    3. '=' → logprob: -2.439298152923584
    4. ' =' → logprob: -3.939298152923584
    5. ']+=' → logprob: -9.939298629760742
    6. '           ' → logprob: -12.439298629760742
    7. '        ' → logprob: -12.814298629760742
    8. ' ' → logprob: -13.439298629760742
    9. '+' → logprob: -13.689298629760742
    10. '+=(' → logprob: -13.939298629760742

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15714500844478607
    2. '+=' → logprob: -2.1571450233459473
    3. ' =' → logprob: -3.6571450233459473
    4. ' +=' → logprob: -5.532145023345947
    5. '%=' → logprob: -15.032144546508789
    6. '=(' → logprob: -15.157144546508789
    7. ']+=' → logprob: -15.282144546508789
    8. '+=(' → logprob: -15.282144546508789
    9. '.=' → logprob: -16.03214454650879
    10. '+' → logprob: -16.03214454650879

Token 124: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3869796097278595
    2. ' (' → logprob: -1.136979579925537
    3. '(x' → logprob: -10.886980056762695
    4. '(' → logprob: -11.261980056762695
    5. '(val' → logprob: -11.511980056762695
    6. '(value' → logprob: -11.636980056762695
    7. ' ' → logprob: -11.636980056762695
    8. '   ' → logprob: -12.386980056762695
    9. '(s' → logprob: -12.761980056762695
    10. '(i' → logprob: -12.886980056762695

Token 125: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019342314917594194
    2. ' self' → logprob: -6.251934051513672
    3. '(self' → logprob: -12.251934051513672
    4. '           ' → logprob: -14.376934051513672
    5. '[self' → logprob: -16.126934051513672
    6. '	self' → logprob: -17.001934051513672
    7. '```' → logprob: -17.126934051513672
    8. '   ' → logprob: -17.876934051513672
    9. ' ' → logprob: -18.001934051513672
    10. '
' → logprob: -19.251934051513672

Token 126: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00039063513395376503
    2. 'tree' → logprob: -7.875390529632568
    3. '	tree' → logprob: -11.875391006469727
    4. '.' → logprob: -12.875391006469727
    5. ' tree' → logprob: -15.125391006469727
    6. '/tree' → logprob: -15.875391006469727
    7. '_tree' → logprob: -16.000391006469727
    8. '(tree' → logprob: -16.250391006469727
    9. '-tree' → logprob: -16.500391006469727
    10. ' .' → logprob: -16.750391006469727

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. 'i' → logprob: -13.750001907348633
    3. '```' → logprob: -15.000001907348633
    4. '[' → logprob: -15.375001907348633
    5. ',i' → logprob: -16.375001907348633
    6. '(i' → logprob: -17.500001907348633
    7. '[I' → logprob: -17.500001907348633
    8. '[
' → logprob: -18.250001907348633
    9. '{i' → logprob: -18.250001907348633
    10. ' i' → logprob: -18.500001907348633

Token 128: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1890886127948761
    2. ' +' → logprob: -1.9390885829925537
    3. ']' → logprob: -4.064088821411133
    4. '[i' → logprob: -5.189088821411133
    5. ']+' → logprob: -5.689088821411133
    6. '+i' → logprob: -6.439088821411133
    7. '+x' → logprob: -8.314088821411133
    8. ' ' → logprob: -8.814088821411133
    9. 'x' → logprob: -9.814088821411133
    10. '[' → logprob: -9.814088821411133

Token 129: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869016468524933
    2. ' +' → logprob: -1.136901617050171
    3. '+x' → logprob: -10.63690185546875
    4. '+self' → logprob: -12.38690185546875
    5. '+[' → logprob: -13.63690185546875
    6. '[' → logprob: -14.63690185546875
    7. ' ' → logprob: -15.51190185546875
    8. ' plus' → logprob: -16.13690185546875
    9. '+
' → logprob: -16.63690185546875
    10. '＋' → logprob: -16.76190185546875

Token 130: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759394764900208
    2. ' x' → logprob: -0.8259394764900208
    3. '	x' → logprob: -17.200939178466797
    4. ')x' → logprob: -19.200939178466797
    5. ' ' → logprob: -20.950939178466797
    6. '(x' → logprob: -21.325939178466797
    7. '    ' → logprob: -21.825939178466797
    8. '$x' → logprob: -22.075939178466797
    9. '           ' → logprob: -22.325939178466797
    10. '   ' → logprob: -22.450939178466797

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')%' → logprob: -12.750005722045898
    3. ' )' → logprob: -12.750005722045898
    4. '       ' → logprob: -17.5000057220459
    5. '   ' → logprob: -18.3750057220459
    6. ')
' → logprob: -19.0000057220459
    7. '           ' → logprob: -19.3750057220459
    8. '```' → logprob: -19.7500057220459
    9. '）' → logprob: -20.1250057220459
    10. ')i' → logprob: -20.3750057220459

Token 132: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6940553784370422
    2. ' %' → logprob: -0.6940553784370422
    3. '%i' → logprob: -7.069055557250977
    4. '%n' → logprob: -10.444055557250977
    5. ')' → logprob: -11.569055557250977
    6. ')%' → logprob: -12.069055557250977
    7. '%x' → logprob: -12.819055557250977
    8. '%s' → logprob: -13.444055557250977
    9. '%b' → logprob: -13.444055557250977
    10. '
' → logprob: -13.569055557250977

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804171830415726
    2. ' self' → logprob: -3.288041830062866
    3. '(self' → logprob: -15.913042068481445
    4. '	self' → logprob: -16.038042068481445
    5. '       ' → logprob: -18.913042068481445
    6. '<|end|>' → logprob: -19.038042068481445
    7. '[self' → logprob: -19.288042068481445
    8. ' ' → logprob: -19.413042068481445
    9. '$self' → logprob: -19.663042068481445
    10. '_self' → logprob: -19.913042068481445

Token 134: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -1.318681188422488e-05
    2. 'mod' → logprob: -11.25001335144043
    3. '.' → logprob: -16.25001335144043
    4. '	mod' → logprob: -17.75001335144043
    5. 'MOD' → logprob: -18.12501335144043
    6. '_mod' → logprob: -18.75001335144043
    7. ' mod' → logprob: -20.00001335144043
    8. '_MOD' → logprob: -20.75001335144043
    9. '.MOD' → logprob: -20.75001335144043
    10. '(mod' → logprob: -20.87501335144043

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005211008246988058
    2. 'i' → logprob: -7.750521183013916
    3. ' i' → logprob: -9.875520706176758
    4. ',' → logprob: -11.000520706176758
    5. '   ' → logprob: -12.000520706176758
    6. ',i' → logprob: -12.000520706176758
    7. '
' → logprob: -12.625520706176758
    8. '```' → logprob: -13.250520706176758
    9. '       ' → logprob: -13.625520706176758
    10. '<|end|>' → logprob: -14.625520706176758

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030562616884708405
    2. 'i' → logprob: -6.003056049346924
    3. '   ' → logprob: -8.128056526184082
    4. ' i' → logprob: -8.628056526184082
    5. '       ' → logprob: -9.378056526184082
    6. '```' → logprob: -11.753056526184082
    7. '               ' → logprob: -12.128056526184082
    8. ',i' → logprob: -12.378056526184082
    9. ' ' → logprob: -13.628056526184082
    10. ',' → logprob: -14.503056526184082

Token 137: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0019643204286694527
    2. ' i' → logprob: -6.251964092254639
    3. '           ' → logprob: -10.251964569091797
    4. '   ' → logprob: -15.251964569091797
    5. '       ' → logprob: -16.001964569091797
    6. '	i' → logprob: -17.001964569091797
    7. '               ' → logprob: -17.501964569091797
    8. '  ' → logprob: -17.626964569091797
    9. ' ' → logprob: -19.126964569091797
    10. ',i' → logprob: -19.876964569091797

Token 138: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07891886681318283
    2. ' +=' → logprob: -2.578918933868408
    3. ' <<=' → logprob: -10.95391845703125
    4. '=' → logprob: -12.07891845703125
    5. '|' → logprob: -13.07891845703125
    6. ']+=' → logprob: -13.45391845703125
    7. '<<' → logprob: -14.20391845703125
    8. '+=(' → logprob: -14.82891845703125
    9. '```' → logprob: -15.32891845703125
    10. '+' → logprob: -15.32891845703125

Token 139: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07889088988304138
    2. ' i' → logprob: -2.578890800476074
    3. '	i' → logprob: -14.453890800476074
    4. '(i' → logprob: -14.703890800476074
    5. ' (' → logprob: -16.45389175415039
    6. '  ' → logprob: -16.45389175415039
    7. ' ' → logprob: -17.07889175415039
    8. '   ' → logprob: -17.32889175415039
    9. '{i' → logprob: -18.07889175415039
    10. '_i' → logprob: -18.32889175415039

Token 140: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.04868081584572792
    2. '&i' → logprob: -3.2986807823181152
    3. '&' → logprob: -4.548680782318115
    4. '&amp' → logprob: -14.673681259155273
    5. '&I' → logprob: -14.798681259155273
    6. ' i' → logprob: -15.173681259155273
    7. 'i' → logprob: -15.298681259155273
    8. ' ' → logprob: -15.798681259155273
    9. '&id' → logprob: -16.298681259155273
    10. '[i' → logprob: -16.548681259155273

Token 141: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.08645140379667282
    2. ' -' → logprob: -3.086451292037964
    3. '-' → logprob: -3.336451292037964
    4. ' i' → logprob: -7.086451530456543
    5. 'i' → logprob: -7.211451530456543
    6. '(-' → logprob: -11.586451530456543
    7. '	i' → logprob: -13.211451530456543
    8. ' (-' → logprob: -13.961451530456543
    9. '-I' → logprob: -14.086451530456543
    10. ' ' → logprob: -14.211451530456543

Token 142: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002678920282050967
    2. ' i' → logprob: -8.25026798248291
    3. '-i' → logprob: -12.00026798248291
    4. '	i' → logprob: -15.12526798248291
    5. '-' → logprob: -15.62526798248291
    6. '_i' → logprob: -18.250267028808594
    7. ''i' → logprob: -19.625267028808594
    8. ',i' → logprob: -19.625267028808594
    9. ' -' → logprob: -19.750267028808594
    10. '(i' → logprob: -20.250267028808594

Token 143: '

' (ID: 279)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016197188524529338
    2. ' i' → logprob: -6.626619815826416
    3. '-' → logprob: -8.501619338989258
    4. '-i' → logprob: -9.626619338989258
    5. 'x' → logprob: -11.501619338989258
    6. ' -' → logprob: -11.626619338989258
    7. '1' → logprob: -12.501619338989258
    8. '(i' → logprob: -14.251619338989258
    9. ' ' → logprob: -14.626619338989258
    10. '0' → logprob: -15.001619338989258

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6099159121513367
    2. 'def' → logprob: -1.6099159717559814
    3. '<|end|>' → logprob: -1.9849159717559814
    4. '
' → logprob: -3.1099159717559814
    5. ' ' → logprob: -4.109915733337402
    6. ' def' → logprob: -4.234915733337402
    7. 'class' → logprob: -4.484915733337402
    8. '```' → logprob: -4.859915733337402
    9. ')' → logprob: -5.234915733337402
    10. '#' → logprob: -5.859915733337402

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.030817296355962753
    2. 'class' → logprob: -3.6558172702789307
    3. ' def' → logprob: -6.28081750869751
    4. ')' → logprob: -6.65581750869751
    5. '   ' → logprob: -7.15581750869751
    6. '#' → logprob: -8.405817031860352
    7. ']' → logprob: -8.655817031860352
    8. '```' → logprob: -9.905817031860352
    9. 'de' → logprob: -11.030817031860352
    10. ' ' → logprob: -11.030817031860352

Token 146: ' debug' (ID: 15199)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.6033422350883484
    2. 'build' → logprob: -1.3533422946929932
    3. 'range' → logprob: -1.8533422946929932
    4. 'get' → logprob: -4.353342056274414
    5. 'lower' → logprob: -4.978342056274414
    6. 'clear' → logprob: -5.103342056274414
    7. 'reset' → logprob: -5.228342056274414
    8. 'multiply' → logprob: -6.853342056274414
    9. 'mul' → logprob: -7.228342056274414
    10. ' query' → logprob: -7.228342056274414

Token 147: '_print' (ID: 31509)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01331704668700695
    2. '(' → logprob: -4.388317108154297
    3. '():' → logprob: -8.013317108154297
    4. 'self' → logprob: -8.513317108154297
    5. ' (' → logprob: -9.513317108154297
    6. '   ' → logprob: -9.888317108154297
    7. '(s' → logprob: -10.513317108154297
    8. '_' → logprob: -10.638317108154297
    9. '_(' → logprob: -10.638317108154297
    10. '()' → logprob: -10.888317108154297

Token 148: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002537847962230444
    2. '(' → logprob: -6.002537727355957
    3. '   ' → logprob: -10.627537727355957
    4. ' (' → logprob: -10.877537727355957
    5. 'self' → logprob: -11.502537727355957
    6. '(s' → logprob: -12.752537727355957
    7. '(
' → logprob: -13.252537727355957
    8. ' ' → logprob: -13.377537727355957
    9. '()' → logprob: -14.127537727355957
    10. '       ' → logprob: -14.127537727355957

Token 149: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19710056483745575
    2. ',' → logprob: -1.9471005201339722
    3. '):
' → logprob: -3.5721006393432617
    4. 'self' → logprob: -4.947100639343262
    5. ' ,' → logprob: -8.322100639343262
    6. ')' → logprob: -8.322100639343262
    7. ' ):' → logprob: -8.447100639343262
    8. '   ' → logprob: -9.697100639343262
    9. '):

' → logprob: -9.697100639343262
    10. '(self' → logprob: -9.822100639343262

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011891605099663138
    2. '   ' → logprob: -7.001189231872559
    3. '(' → logprob: -8.751189231872559
    4. 'print' → logprob: -10.876189231872559
    5. ' for' → logprob: -10.876189231872559
    6. '()' → logprob: -11.376189231872559
    7. '	' → logprob: -11.501189231872559
    8. '[' → logprob: -11.751189231872559
    9. '	   ' → logprob: -12.001189231872559
    10. '```' → logprob: -12.126189231872559

Token 151: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6315566897392273
    2. 'for' (adapté à ' for') → logprob: -1.631556749343872
    3. 'print' → logprob: -1.631556749343872
    4. ' print' → logprob: -2.881556749343872
    5. '       ' → logprob: -3.881556749343872
    6. '   ' → logprob: -8.131556510925293
    7. 'return' → logprob: -12.006556510925293
    8. '	for' → logprob: -12.006556510925293
    9. '```' → logprob: -12.506556510925293
    10. ' return' → logprob: -13.131556510925293

Token 152: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10048550367355347
    2. ' i' → logprob: -2.3504855632781982
    3. 'j' → logprob: -9.100485801696777
    4. 'idx' → logprob: -9.850485801696777
    5. ' idx' → logprob: -10.475485801696777
    6. 'v' → logprob: -10.475485801696777
    7. 'value' → logprob: -11.100485801696777
    8. ' j' → logprob: -11.225485801696777
    9. 'x' → logprob: -11.850485801696777
    10. 'val' → logprob: -12.225485801696777

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02987394668161869
    2. 'in' → logprob: -3.529873847961426
    3. ',' → logprob: -10.029873847961426
    4. ' ' → logprob: -10.654873847961426
    5. '   ' → logprob: -11.154873847961426
    6. '(' → logprob: -11.404873847961426
    7. '	in' → logprob: -12.154873847961426
    8. '    ' → logprob: -12.279873847961426
    9. '  ' → logprob: -12.404873847961426
    10. 'range' → logprob: -12.779873847961426

Token 154: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380459688603878
    2. ' range' → logprob: -3.288045883178711
    3. '(range' → logprob: -13.038045883178711
    4. '   ' → logprob: -13.788045883178711
    5. ' ' → logprob: -14.288045883178711
    6. '  ' → logprob: -14.663045883178711
    7. '	range' → logprob: -16.66304588317871
    8. ')' → logprob: -17.28804588317871
    9. '
' → logprob: -17.41304588317871
    10. '    ' → logprob: -17.78804588317871

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.759734732331708e-05
    2. '(self' → logprob: -11.000017166137695
    3. '1' → logprob: -14.000017166137695
    4. '(len' → logprob: -17.250017166137695
    5. 'self' → logprob: -18.125017166137695
    6. '   ' → logprob: -18.500017166137695
    7. '(
' → logprob: -18.500017166137695
    8. ' (' → logprob: -19.000017166137695
    9. ' ' → logprob: -19.250017166137695
    10. ' self' → logprob: -21.000017166137695

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0060060597024858
    2. 'self' → logprob: -5.131006240844727
    3. ' ' → logprob: -9.756006240844727
    4. ' self' → logprob: -11.631006240844727
    5. 'len' → logprob: -12.006006240844727
    6. '   ' → logprob: -12.381006240844727
    7. '(self' → logprob: -16.381006240844727
    8. '0' → logprob: -16.756006240844727
    9. '       ' → logprob: -17.006006240844727
    10. '  ' → logprob: -17.131006240844727

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002648786408826709
    2. ' ,' → logprob: -6.002648830413818
    3. ',len' → logprob: -9.25264835357666
    4. ',self' → logprob: -9.50264835357666
    5. '   ' → logprob: -14.00264835357666
    6. ',n' → logprob: -14.75264835357666
    7. ',
' → logprob: -15.25264835357666
    8. 'self' → logprob: -15.62764835357666
    9. ' ' → logprob: -15.87764835357666
    10. ')' → logprob: -16.002649307250977

Token 158: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006009306525811553
    2. 'len' → logprob: -8.000600814819336
    3. ' self' → logprob: -8.250600814819336
    4. '   ' → logprob: -12.875600814819336
    5. ' len' → logprob: -13.500600814819336
    6. '  ' → logprob: -16.500600814819336
    7. '    ' → logprob: -16.750600814819336
    8. '
' → logprob: -17.000600814819336
    9. ' ' → logprob: -17.750600814819336
    10. '```' → logprob: -18.125600814819336

Token 159: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.008129963040119e-06
    2. '.' → logprob: -13.125003814697266
    3. 'size' → logprob: -13.250003814697266
    4. ' .' → logprob: -16.500003814697266
    5. '.n' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.625003814697266
    7. '.length' → logprob: -17.750003814697266
    8. ' size' → logprob: -17.875003814697266
    9. ').' → logprob: -18.625003814697266
    10. '.len' → logprob: -19.000003814697266

Token 160: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11282965540885925
    2. ' +' → logprob: -2.2378296852111816
    3. '):' → logprob: -12.862829208374023
    4. '   ' → logprob: -13.487829208374023
    5. '+
' → logprob: -13.987829208374023
    6. '()+' → logprob: -13.987829208374023
    7. '):
' → logprob: -14.112829208374023
    8. ' +
' → logprob: -15.362829208374023
    9. ',' → logprob: -15.737829208374023
    10. ' ' → logprob: -16.112829208374023

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.750045776367188
    4. '2' → logprob: -20.375045776367188
    5. '```' → logprob: -20.625045776367188
    6. ')' → logprob: -21.875045776367188
    7. '
' → logprob: -22.250045776367188
    8. '۱' → logprob: -22.500045776367188
    9. '  ' → logprob: -22.750045776367188
    10. '       ' → logprob: -23.000045776367188

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -17.125001907348633
    5. ')' → logprob: -17.500001907348633
    6. '
' → logprob: -18.375001907348633
    7. '+' → logprob: -18.750001907348633
    8. '2' → logprob: -19.000001907348633
    9. '):
' → logprob: -19.250001907348633
    10. '۱' → logprob: -20.000001907348633

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5763639211654663
    2. '):
' → logprob: -0.8263639211654663
    3. ':' → logprob: -7.951364040374756
    4. '):
' → logprob: -10.826363563537598
    5. '       ' → logprob: -11.201363563537598
    6. ')' → logprob: -11.451363563537598
    7. ' ):' → logprob: -11.951363563537598
    8. ':
' → logprob: -11.951363563537598
    9. '   ' → logprob: -12.076363563537598
    10. ' ):
' → logprob: -12.201363563537598

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3396328091621399
    2. ' print' → logprob: -1.3396327495574951
    3. 'print' → logprob: -3.964632749557495
    4. '       ' → logprob: -4.964632987976074
    5. '   ' → logprob: -10.589632987976074
    6. '.print' → logprob: -12.089632987976074
    7. '```' → logprob: -12.214632987976074
    8. ',' → logprob: -12.339632987976074
    9. '	print' → logprob: -12.339632987976074
    10. '	       ' → logprob: -12.589632987976074

Token 165: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005373560823500156
    2. ' print' → logprob: -5.255373477935791
    3. '           ' → logprob: -8.88037395477295
    4. '   ' → logprob: -15.38037395477295
    5. '```' → logprob: -15.88037395477295
    6. '       ' → logprob: -16.130373001098633
    7. '               ' → logprob: -17.005373001098633
    8. '	print' → logprob: -17.130373001098633
    9. '            ' → logprob: -17.755373001098633
    10. '    ' → logprob: -18.505373001098633

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8745707869529724
    2. ' in' → logprob: -1.2495708465576172
    3. ' =' → logprob: -2.499570846557617
    4. ',' → logprob: -2.499570846557617
    5. 'in' → logprob: -2.624570846557617
    6. '   ' → logprob: -3.499570846557617
    7. '    ' → logprob: -4.874570846557617
    8. ':' → logprob: -5.374570846557617
    9. '(' → logprob: -5.874570846557617
    10. '        ' → logprob: -6.374570846557617

Token 167: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09455624222755432
    2. 'self' → logprob: -2.4695563316345215
    3. '1' → logprob: -5.4695563316345215
    4. '0' → logprob: -7.2195563316345215
    5. ' i' → logprob: -8.469555854797363
    6. '(i' → logprob: -8.469555854797363
    7. ' self' → logprob: -9.219555854797363
    8. ' ' → logprob: -10.469555854797363
    9. '(self' → logprob: -11.094555854797363
    10. 'bis' → logprob: -11.219555854797363

Token 168: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024661246687173843
    2. '1' → logprob: -4.274661064147949
    3. 'self' → logprob: -4.774661064147949
    4. ' i' → logprob: -6.774661064147949
    5. '(i' → logprob: -7.899661064147949
    6. ')' → logprob: -9.39966106414795
    7. 'j' → logprob: -9.64966106414795
    8. '(' → logprob: -9.77466106414795
    9. ' ' → logprob: -9.77466106414795
    10. '2' → logprob: -9.89966106414795

Token 169: ' &' (ID: 827)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.26408228278160095
    2. '+' → logprob: -2.264082193374634
    3. ' ^' → logprob: -3.014082193374634
    4. '-' → logprob: -3.389082193374634
    5. '   ' → logprob: -4.514082431793213
    6. '&' → logprob: -4.639082431793213
    7. '>>' → logprob: -4.889082431793213
    8. ')' → logprob: -5.889082431793213
    9. '^(' → logprob: -5.889082431793213
    10. '<<' → logprob: -6.014082431793213

Token 170: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.5363290309906006
    2. ' -' → logprob: -1.0363290309906006
    3. '-' → logprob: -3.4113290309906006
    4. '(-' → logprob: -3.7863290309906006
    5. '-j' → logprob: -6.03632926940918
    6. ' (-' → logprob: -7.16132926940918
    7. '-s' → logprob: -8.53632926940918
    8. '-n' → logprob: -8.78632926940918
    9. '-k' → logprob: -9.03632926940918
    10. '-int' → logprob: -9.03632926940918

Token 171: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002918446552939713
    2. 'j' → logprob: -8.75029182434082
    3. ' i' → logprob: -9.12529182434082
    4. ')i' → logprob: -11.50029182434082
    5. ')' → logprob: -12.12529182434082
    6. '	i' → logprob: -13.12529182434082
    7. '   ' → logprob: -13.25029182434082
    8. ''i' → logprob: -13.93779182434082
    9. '-i' → logprob: -14.50029182434082
    10. '```' → logprob: -14.87529182434082

Token 172: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04106704145669937
    2. ')
' → logprob: -3.416067123413086
    3. ')>>' → logprob: -5.666067123413086
    4. ')<<' → logprob: -5.791067123413086
    5. ').' → logprob: -7.791067123413086
    6. ')-' → logprob: -9.791067123413086
    7. ')#' → logprob: -10.166067123413086
    8. ' )' → logprob: -10.166067123413086
    9. ')+' → logprob: -10.291067123413086
    10. '<<' → logprob: -10.416067123413086

Token 173: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0064286524429917336
    2. '.bit' → logprob: -5.1314287185668945
    3. ' bit' → logprob: -7.8814287185668945
    4. ' ' → logprob: -10.506428718566895
    5. 'j' → logprob: -11.006428718566895
    6. '```' → logprob: -11.256428718566895
    7. '__' → logprob: -11.506428718566895
    8. '_bit' → logprob: -11.506428718566895
    9. '-bit' → logprob: -11.631428718566895
    10. '(bit' → logprob: -12.006428718566895

Token 174: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -8.41866585687967e-06
    2. 'length' → logprob: -11.750008583068848
    3. '_' → logprob: -15.500008583068848
    4. 'Length' → logprob: -16.50000762939453
    5. '_l' → logprob: -17.12500762939453
    6. '_LENGTH' → logprob: -17.25000762939453
    7. '0' → logprob: -17.75000762939453
    8. '_width' → logprob: -17.87500762939453
    9. '```' → logprob: -18.12500762939453
    10. '_size' → logprob: -18.50000762939453

Token 175: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004634472541511059
    2. '()-' → logprob: -5.379634380340576
    3. '()
' → logprob: -11.879634857177734
    4. ' ()' → logprob: -13.504634857177734
    5. '()+' → logprob: -13.504634857177734
    6. '(' → logprob: -13.754634857177734
    7. '()>' → logprob: -14.254634857177734
    8. '()<' → logprob: -14.629634857177734
    9. '()]' → logprob: -15.004634857177734
    10. '-' → logprob: -15.129634857177734

Token 176: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058435697108507156
    2. '           ' → logprob: -3.3084356784820557
    3. '<|end|>' → logprob: -4.558435916900635
    4. '        ' → logprob: -6.058435916900635
    5. '	       ' → logprob: -6.183435916900635
    6. ',' → logprob: -6.683435916900635
    7. '#' → logprob: -7.183435916900635
    8. '        
' → logprob: -7.808435916900635
    9. '   ' → logprob: -7.808435916900635
    10. ' ' → logprob: -8.058435440063477

Token 177: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5006075501441956
    2. '           ' → logprob: -1.3756074905395508
    3. ' print' → logprob: -2.000607490539551
    4. '       ' → logprob: -5.250607490539551
    5. '        ' → logprob: -8.62560749053955
    6. '   ' → logprob: -9.12560749053955
    7. '            ' → logprob: -9.25060749053955
    8. '         ' → logprob: -9.87560749053955
    9. '          ' → logprob: -10.12560749053955
    10. '               ' → logprob: -10.37560749053955

Token 178: '('' (ID: 706)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.09064611792564392
    2. '(i' → logprob: -3.0906460285186768
    3. '(' → logprob: -3.3406460285186768
    4. '("' → logprob: -5.715646266937256
    5. '('' → logprob: -6.090646266937256
    6. '((' → logprob: -9.340645790100098
    7. '(self' → logprob: -9.465645790100098
    8. '(j' → logprob: -11.590645790100098
    9. '("("' → logprob: -11.965645790100098
    10. 'f' → logprob: -12.090645790100098

Token 179: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.3602713346481323
    2. ''' → logprob: -1.4852713346481323
    3. 'i' → logprob: -1.8602713346481323
    4. ' f' → logprob: -2.610271453857422
    5. '('' → logprob: -2.860271453857422
    6. ' i' → logprob: -2.860271453857422
    7. 'f' → logprob: -3.110271453857422
    8. '(f' → logprob: -3.235271453857422
    9. ' '' → logprob: -3.485271453857422
    10. ''i' → logprob: -3.985271453857422

Token 180: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.846849262714386
    2. ''' → logprob: -1.2218492031097412
    3. '(i' → logprob: -2.971849203109741
    4. ''*' → logprob: -2.971849203109741
    5. 'f' → logprob: -3.221849203109741
    6. ' '' → logprob: -3.471849203109741
    7. '(f' → logprob: -3.846849203109741
    8. '('' → logprob: -4.22184944152832
    9. ''i' → logprob: -4.34684944152832
    10. '   ' → logprob: -4.97184944152832

Token 181: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04470406100153923
    2. 'f' → logprob: -4.044703960418701
    3. ''i' → logprob: -4.919703960418701
    4. ''*' → logprob: -5.294703960418701
    5. '(i' → logprob: -5.544703960418701
    6. ''' → logprob: -5.544703960418701
    7. ''f' → logprob: -7.044703960418701
    8. '[i' → logprob: -7.169703960418701
    9. ')' → logprob: -7.419703960418701
    10. '*i' → logprob: -7.669703960418701

Token 182: ' j' (ID: 441)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00540747307240963
    2. 'j' → logprob: -5.880407333374023
    3. '(self' → logprob: -6.505407333374023
    4. '(' → logprob: -7.130407333374023
    5. '(i' → logprob: -8.630407333374023
    6. ' (' → logprob: -9.505407333374023
    7. 'self' → logprob: -10.380407333374023
    8. '(max' → logprob: -12.255407333374023
    9. '(depth' → logprob: -12.755407333374023
    10. '(
' → logprob: -12.880407333374023

Token 183: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39374369382858276
    2. ',' → logprob: -1.1437437534332275
    3. ' +' → logprob: -6.143743515014648
    4. ',i' → logprob: -6.518743515014648
    5. ',end' → logprob: -6.643743515014648
    6. '+i' → logprob: -6.643743515014648
    7. ' ,' → logprob: -8.518743515014648
    8. ')' → logprob: -8.893743515014648
    9. '+,' → logprob: -9.268743515014648
    10. ',f' → logprob: -10.018743515014648

Token 184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07338099181652069
    2. 'i' → logprob: -2.698380947113037
    3. 'f' → logprob: -5.823380947113037
    4. ' self' → logprob: -8.323381423950195
    5. 'j' → logprob: -9.823381423950195
    6. 'str' → logprob: -10.323381423950195
    7. ' i' → logprob: -10.448381423950195
    8. '[i' → logprob: -10.823381423950195
    9. 'repr' → logprob: -10.948381423950195
    10. 'end' → logprob: -11.073381423950195

Token 185: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0001483564410591498
    2. '.' → logprob: -10.00014877319336
    3. ' .' → logprob: -10.12514877319336
    4. ').' → logprob: -10.37514877319336
    5. '.i' → logprob: -11.62514877319336
    6. 'tree' → logprob: -11.62514877319336
    7. '`.' → logprob: -13.25014877319336
    8. '.t' → logprob: -13.37514877319336
    9. '.size' → logprob: -13.50014877319336
    10. '.user' → logprob: -13.87514877319336

Token 186: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.625011444091797
    3. '[j' → logprob: -13.250011444091797
    4. ')' → logprob: -14.625011444091797
    5. 'i' → logprob: -15.500011444091797
    6. '[I' → logprob: -16.500011444091797
    7. ')i' → logprob: -16.625011444091797
    8. ')[' → logprob: -16.625011444091797
    9. '   ' → logprob: -17.000011444091797
    10. '[
' → logprob: -17.000011444091797

Token 187: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013083349040243775
    2. ',' → logprob: -9.375130653381348
    3. ' )' → logprob: -10.250130653381348
    4. ')
' → logprob: -12.375130653381348
    5. ',)' → logprob: -13.000130653381348
    6. '))' → logprob: -13.750130653381348
    7. ')#' → logprob: -14.875130653381348
    8. ')`' → logprob: -15.000130653381348
    9. '})' → logprob: -15.375130653381348
    10. ')")' → logprob: -15.375130653381348

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8956310749053955
    2. '<|end|>' → logprob: -1.1456310749053955
    3. ')' → logprob: -2.2706310749053955
    4. ' ' → logprob: -2.6456310749053955
    5. '    ' → logprob: -4.020630836486816
    6. '\' → logprob: -4.020630836486816
    7. '\n' → logprob: -4.145630836486816
    8. '
' → logprob: -4.270630836486816
    9. '       ' → logprob: -5.520630836486816
    10. 'def' → logprob: -5.645630836486816

Token 189: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5041351914405823
    2. '   ' → logprob: -1.0041351318359375
    3. 'class' → logprob: -5.1291351318359375
    4. ')' → logprob: -5.3791351318359375
    5. ' ' → logprob: -5.7541351318359375
    6. '#' → logprob: -5.8791351318359375
    7. ' def' → logprob: -5.8791351318359375
    8. '<|end|>' → logprob: -6.1291351318359375
    9. '
' → logprob: -6.8791351318359375
    10. '```' → logprob: -7.0041351318359375

Token 190: ' lower' (ID: 6931)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.4844334125518799
    2. 'range' → logprob: -1.9844334125518799
    3. 'clear' → logprob: -2.60943341255188
    4. 'lower' → logprob: -2.60943341255188
    5. 'query' → logprob: -3.23443341255188
    6. 'update' → logprob: -4.484433174133301
    7. 'reset' → logprob: -4.484433174133301
    8. 'merge' → logprob: -5.234433174133301
    9. 'sum' → logprob: -5.234433174133301
    10. 'prefix' → logprob: -5.359433174133301

Token 191: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.00013738969573751092
    2. '_' → logprob: -9.250137329101562
    3. 'bound' → logprob: -10.250137329101562
    4. '_bounds' → logprob: -13.500137329101562
    5. '(self' → logprob: -14.000137329101562
    6. '_upper' → logprob: -14.250137329101562
    7. '_than' → logprob: -14.750137329101562
    8. '(bound' → logprob: -15.000137329101562
    9. ' bound' → logprob: -15.125137329101562
    10. '_b' → logprob: -15.500137329101562

Token 192: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.6789137084269896e-05
    2. '(' → logprob: -10.25003719329834
    3. ' (' → logprob: -13.87503719329834
    4. 'self' → logprob: -15.75003719329834
    5. '(
' → logprob: -15.75003719329834
    6. '(s' → logprob: -16.500036239624023
    7. '   ' → logprob: -17.375036239624023
    8. '(this' → logprob: -17.500036239624023
    9. '(sel' → logprob: -17.750036239624023
    10. 'def' → logprob: -18.500036239624023

Token 193: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025434501469135284
    2. ',' → logprob: -4.025434494018555
    3. 'self' → logprob: -5.275434494018555
    4. '(' → logprob: -6.900434494018555
    5. ' (' → logprob: -7.900434494018555
    6. ',self' → logprob: -8.275434494018555
    7. '   ' → logprob: -8.900434494018555
    8. ' self' → logprob: -9.025434494018555
    9. ')' → logprob: -9.775434494018555
    10. ')(' → logprob: -9.900434494018555

Token 194: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06015419214963913
    2. ' self' → logprob: -3.3101541996002197
    3. 'w' → logprob: -4.060153961181641
    4. 'x' → logprob: -5.810153961181641
    5. ' w' → logprob: -6.560153961181641
    6. ' x' → logprob: -8.93515396118164
    7. 'val' → logprob: -10.81015396118164
    8. 'value' → logprob: -11.18515396118164
    9. '(self' → logprob: -11.18515396118164
    10. ' ' → logprob: -11.31015396118164

Token 195: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010125647531822324
    2. 'self' → logprob: -7.501012802124023
    3. '):' → logprob: -8.126012802124023
    4. ' ,' → logprob: -9.126012802124023
    5. ',self' → logprob: -10.626012802124023
    6. '   ' → logprob: -11.376012802124023
    7. '       ' → logprob: -11.626012802124023
    8. '):
' → logprob: -13.001012802124023
    9. '(self' → logprob: -13.001012802124023
    10. ',
' → logprob: -13.001012802124023

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008396602235734463
    2. ' i' → logprob: -4.883396625518799
    3. '   ' → logprob: -7.383396625518799
    4. 'i' → logprob: -8.88339614868164
    5. '    ' → logprob: -11.38339614868164
    6. '      ' → logprob: -12.75839614868164
    7. ' pos' → logprob: -13.00839614868164
    8. '```' → logprob: -13.25839614868164
    9. 'pos' → logprob: -13.38339614868164
    10. ' index' → logprob: -13.50839614868164

Token 197: ' sum' (ID: 4215)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.043872930109500885
    2. 'idx' → logprob: -3.918872833251953
    3. '       ' → logprob: -4.543872833251953
    4. 'i' → logprob: -4.668872833251953
    5. '   ' → logprob: -6.043872833251953
    6. ' pos' → logprob: -8.293872833251953
    7. 's' → logprob: -9.168872833251953
    8. 'index' → logprob: -9.293872833251953
    9. 'sum' (adapté à ' sum') → logprob: -9.543872833251953
    10. 'res' → logprob: -10.043872833251953

Token 198: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15468506515026093
    2. ' =' → logprob: -2.0296850204467773
    3. '_' → logprob: -4.654685020446777
    4. '_=' → logprob: -6.404685020446777
    5. ',' → logprob: -7.654685020446777
    6. 's' → logprob: -9.404685020446777
    7. ' ' → logprob: -10.279685020446777
    8. '_idx' → logprob: -10.529685020446777
    9. '_,' → logprob: -11.029685020446777
    10. '   ' → logprob: -11.154685020446777

Token 199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06201092526316643
    2. ' =' → logprob: -2.8120110034942627
    3. ',' → logprob: -10.187010765075684
    4. ' ' → logprob: -12.312010765075684
    5. '   ' → logprob: -14.937010765075684
    6. 's' → logprob: -15.562010765075684
    7. '=
' → logprob: -15.937010765075684
    8. '＝' → logprob: -16.56201171875
    9. '  ' → logprob: -16.81201171875
    10. '_=' → logprob: -16.81201171875

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.625158309936523
    4. '۰' → logprob: -20.500158309936523
    5. '=' → logprob: -20.750158309936523
    6. '  ' → logprob: -21.000158309936523
    7. '０' → logprob: -21.125158309936523
    8. '    ' → logprob: -22.250158309936523
    9. 'pos' → logprob: -22.500158309936523
    10. '       ' → logprob: -22.875158309936523

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'pos' → logprob: -15.125003814697266
    4. 'idx' → logprob: -16.500003814697266
    5. 'i' → logprob: -17.375003814697266
    6. '   ' → logprob: -19.375003814697266
    7. '۰' → logprob: -19.375003814697266
    8. '０' → logprob: -19.500003814697266
    9. '
' → logprob: -20.250003814697266
    10. 'ans' → logprob: -20.375003814697266

Token 202: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04917655140161514
    2. ',' → logprob: -3.1741764545440674
    3. 'pos' → logprob: -6.2991766929626465
    4. ',pos' → logprob: -7.2991766929626465
    5. ' and' → logprob: -7.5491766929626465
    6. '   ' → logprob: -7.5491766929626465
    7. '
' → logprob: -7.5491766929626465
    8. ' index' → logprob: -8.049176216125488
    9. ' i' → logprob: -8.049176216125488
    10. 'idx' → logprob: -8.174176216125488

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3379431664943695
    2. 'pos' → logprob: -1.587943196296692
    3. ' pos' → logprob: -3.2129430770874023
    4. ',' → logprob: -3.8379430770874023
    5. ',pos' → logprob: -5.087943077087402
    6. 'i' → logprob: -5.587943077087402
    7. 'idx' → logprob: -5.837943077087402
    8. ' i' → logprob: -6.212943077087402
    9. '   ' → logprob: -6.587943077087402
    10. ' idx' → logprob: -6.837943077087402

Token 204: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0001605115394340828
    2. 'idx' → logprob: -9.250160217285156
    3. 'i' → logprob: -10.000160217285156
    4. ' pos' → logprob: -11.000160217285156
    5. 'k' → logprob: -14.250160217285156
    6. 'mask' → logprob: -14.625160217285156
    7. 'index' → logprob: -14.625160217285156
    8. '   ' → logprob: -15.000160217285156
    9. 'ipos' → logprob: -16.625160217285156
    10. 'res' → logprob: -17.000160217285156

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759517550468445
    2. ' =' → logprob: -0.8259517550468445
    3. ' ' → logprob: -11.82595157623291
    4. ' +=' → logprob: -12.82595157623291
    5. ' <<=' → logprob: -14.32595157623291
    6. '+=' → logprob: -14.45095157623291
    7. ' |=' → logprob: -14.82595157623291
    8. ' ,' → logprob: -15.57595157623291
    9. '   ' → logprob: -15.82595157623291
    10. '    ' → logprob: -15.95095157623291

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '00' → logprob: -18.250030517578125
    4. '000' → logprob: -18.250030517578125
    5. '۰' → logprob: -19.000030517578125
    6. '   ' → logprob: -19.000030517578125
    7. '```' → logprob: -20.250030517578125
    8. '=' → logprob: -20.500030517578125
    9. '  ' → logprob: -21.000030517578125
    10. '０' → logprob: -22.062530517578125

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '000' → logprob: -19.125003814697266
    4. '۰' → logprob: -19.875003814697266
    5. '   ' → logprob: -20.000003814697266
    6. '00' → logprob: -20.625003814697266
    7. '1' → logprob: -20.750003814697266
    8. '-' → logprob: -21.375003814697266
    9. '```' → logprob: -21.875003814697266
    10. '  ' → logprob: -21.937503814697266

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03322074934840202
    2. ' for' → logprob: -3.7832207679748535
    3. '
' → logprob: -4.9082207679748535
    4. '        
' → logprob: -6.6582207679748535
    5. '   ' → logprob: -7.5332207679748535
    6. 'for' → logprob: -8.533220291137695
    7. ',' → logprob: -9.533220291137695
    8. ' 
' → logprob: -9.533220291137695
    9. '    
' → logprob: -9.658220291137695
    10. '    ' → logprob: -9.783220291137695

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1840047389268875
    2. ' for' → logprob: -1.809004783630371
    3. 'for' → logprob: -5.934004783630371
    4. '   ' → logprob: -6.559004783630371
    5. ' i' → logprob: -9.809004783630371
    6. '    ' → logprob: -10.309004783630371
    7. '        
' → logprob: -11.184004783630371
    8. ' bit' → logprob: -11.434004783630371
    9. '	' → logprob: -11.809004783630371
    10. '	for' → logprob: -11.809004783630371

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00907859392464161
    2. ' for' → logprob: -5.134078502655029
    3. 'i' → logprob: -6.384078502655029
    4. '   ' → logprob: -7.009078502655029
    5. 'k' → logprob: -8.259078979492188
    6. '       ' → logprob: -8.384078979492188
    7. 'd' → logprob: -10.634078979492188
    8. ' i' → logprob: -10.634078979492188
    9. 'bit' → logprob: -11.884078979492188
    10. ' ' → logprob: -12.509078979492188

Token 211: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3544115126132965
    2. 'd' → logprob: -1.3544114828109741
    3. ' i' → logprob: -3.7294116020202637
    4. 'k' → logprob: -4.354411602020264
    5. ' d' → logprob: -5.729411602020264
    6. 'j' → logprob: -9.354411125183105
    7. ' k' → logprob: -9.604411125183105
    8. 'depth' → logprob: -11.479411125183105
    9. 'bit' → logprob: -11.604411125183105
    10. 'shift' → logprob: -11.604411125183105

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016038356348872185
    2. 'in' → logprob: -4.141038417816162
    3. 's' → logprob: -13.766037940979004
    4. ' ' → logprob: -14.016037940979004
    5. '   ' → logprob: -15.266037940979004
    6. '=' → logprob: -15.391037940979004
    7. '  ' → logprob: -15.391037940979004
    8. '	in' → logprob: -15.641037940979004
    9. 'range' → logprob: -15.766037940979004
    10. 'n' → logprob: -15.766037940979004

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26962411403656006
    2. 're' → logprob: -1.51962411403656
    3. ' reversed' → logprob: -4.51962423324585
    4. ' range' → logprob: -5.01962423324585
    5. '   ' → logprob: -10.394623756408691
    6. ' ' → logprob: -12.519623756408691
    7. '[' → logprob: -13.019623756408691
    8. 'reverse' → logprob: -13.769623756408691
    9. '  ' → logprob: -14.769623756408691
    10. '(range' → logprob: -14.894623756408691

Token 214: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009625543025322258
    2. 'self' → logprob: -7.000962734222412
    3. '(' → logprob: -10.625962257385254
    4. '   ' → logprob: -11.625962257385254
    5. ' (' → logprob: -11.750962257385254
    6. ' self' → logprob: -12.250962257385254
    7. '
' → logprob: -13.875962257385254
    8. 's' → logprob: -14.000962257385254
    9. '[self' → logprob: -14.000962257385254
    10. '	self' → logprob: -14.250962257385254

Token 215: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.04128485545516014
    2. 'self' → logprob: -3.2912847995758057
    3. 'depth' → logprob: -6.291285037994385
    4. '.size' → logprob: -8.166284561157227
    5. '.self' → logprob: -8.166284561157227
    6. '.bit' → logprob: -8.416284561157227
    7. ' self' → logprob: -8.666284561157227
    8. '.bits' → logprob: -9.041284561157227
    9. '   ' → logprob: -9.416284561157227
    10. '
' → logprob: -10.416284561157227

Token 216: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21548186242580414
    2. '-' → logprob: -1.8404818773269653
    3. ',' → logprob: -3.465481758117676
    4. ' ,' → logprob: -5.590481758117676
    5. ' ' → logprob: -10.090481758117676
    6. ',-' → logprob: -10.215481758117676
    7. '  ' → logprob: -11.590481758117676
    8. '   ' → logprob: -11.590481758117676
    9. ' -,' → logprob: -12.840481758117676
    10. '-,' → logprob: -13.090481758117676

Token 217: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018164105713367462
    2. ' -' → logprob: -4.018164157867432
    3. '0' → logprob: -11.393163681030273
    4. ' ' → logprob: -13.018163681030273
    5. '   ' → logprob: -14.893163681030273
    6. '  ' → logprob: -16.018163681030273
    7. '
' → logprob: -17.018163681030273
    8. '    ' → logprob: -17.268163681030273
    9. '-re' → logprob: -18.018163681030273
    10. '```' → logprob: -18.393163681030273

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.522638169466518e-05
    2. ' ' → logprob: -10.625024795532227
    3. '
' → logprob: -15.125024795532227
    4. '   ' → logprob: -15.125024795532227
    5. '  ' → logprob: -16.000024795532227
    6. ' -' → logprob: -16.250024795532227
    7. '```' → logprob: -17.375024795532227
    8. '

' → logprob: -17.500024795532227
    9. '-' → logprob: -17.625024795532227
    10. '１' → logprob: -18.687524795532227

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0451844222843647
    2. ' ,' → logprob: -3.920184373855591
    3. '-' → logprob: -4.54518461227417
    4. ',-' → logprob: -4.79518461227417
    5. ' -' → logprob: -5.29518461227417
    6. ' ,-' → logprob: -8.795184135437012
    7. ',
' → logprob: -9.295184135437012
    8. '   ' → logprob: -9.420184135437012
    9. ' ' → logprob: -10.795184135437012
    10. '):
' → logprob: -10.920184135437012

Token 220: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028060602489858866
    2. ' -' → logprob: -5.877806186676025
    3. ' ' → logprob: -15.002805709838867
    4. '   ' → logprob: -15.127805709838867
    5. '1' → logprob: -15.377805709838867
    6. '  ' → logprob: -15.502805709838867
    7. '0' → logprob: -17.377805709838867
    8. '
' → logprob: -17.502805709838867
    9. '-
' → logprob: -17.627805709838867
    10. '```' → logprob: -18.002805709838867

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.62500286102295
    4. '
' → logprob: -16.250003814697266
    5. '  ' → logprob: -17.625003814697266
    6. '```' → logprob: -18.500003814697266
    7. ')' → logprob: -18.875003814697266
    8. '       ' → logprob: -19.250003814697266
    9. '2' → logprob: -19.375003814697266
    10. '

' → logprob: -19.625003814697266

Token 222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2611103951931
    2. '):' → logprob: -1.5111104249954224
    3. ' ):
' → logprob: -6.136110305786133
    4. '1' → logprob: -6.261110305786133
    5. '   ' → logprob: -6.636110305786133
    6. '       ' → logprob: -6.636110305786133
    7. ' ):' → logprob: -6.636110305786133
    8. ',' → logprob: -7.511110305786133
    9. ':' → logprob: -8.011110305786133
    10. '-' → logprob: -10.011110305786133

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0514206625521183
    2. '   ' → logprob: -4.17642068862915
    3. '       ' → logprob: -4.30142068862915
    4. ' ' → logprob: -4.80142068862915
    5. '    ' → logprob: -5.17642068862915
    6. '        ' → logprob: -5.67642068862915
    7. '1' → logprob: -6.42642068862915
    8. ' 
' → logprob: -7.67642068862915
    9. ' if' → logprob: -7.92642068862915
    10. '            ' → logprob: -8.051420211791992

Token 224: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6880590319633484
    2. 'k' (adapté à ' k') → logprob: -1.0630590915679932
    3. '           ' → logprob: -2.938059091567993
    4. 'bit' → logprob: -3.813059091567993
    5. ' next' → logprob: -3.813059091567993
    6. ' bit' → logprob: -3.938059091567993
    7. 'next' → logprob: -4.563058853149414
    8. ' nxt' → logprob: -4.813058853149414
    9. 'step' → logprob: -5.563058853149414
    10. ' step' → logprob: -5.563058853149414

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760095119476318
    2. ' =' → logprob: -0.8260095119476318
    3. ' ' → logprob: -9.951009750366211
    4. '   ' → logprob: -11.701009750366211
    5. ' <<=' → logprob: -12.576009750366211
    6. '1' → logprob: -12.701009750366211
    7. 'w' → logprob: -12.951009750366211
    8. '  ' → logprob: -13.201009750366211
    9. '<' → logprob: -14.576009750366211
    10. '	' → logprob: -15.076009750366211

Token 226: ' pos' (ID: 1253)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038175977766513824
    2. 'pos' → logprob: -3.2881760597229004
    3. ' ' → logprob: -9.413175582885742
    4. '(' → logprob: -10.288175582885742
    5. ' pos' → logprob: -11.163175582885742
    6. '(pos' → logprob: -12.413175582885742
    7. '   ' → logprob: -15.038175582885742
    8. ' (' → logprob: -16.913175582885742
    9. '[pos' → logprob: -16.913175582885742
    10. '  ' → logprob: -17.413175582885742

Token 227: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28144556283950806
    2. '+' → logprob: -1.4064455032348633
    3. '|' → logprob: -8.656445503234863
    4. ' |' → logprob: -9.406445503234863
    5. '+(' → logprob: -10.656445503234863
    6. ' ' → logprob: -11.906445503234863
    7. '   ' → logprob: -12.656445503234863
    8. '    ' → logprob: -13.406445503234863
    9. ' +=' → logprob: -14.281445503234863
    10. '+=' → logprob: -14.281445503234863

Token 228: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.60414821645827e-06
    2. '1' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.875004768371582
    4. '[' → logprob: -17.250003814697266
    5. '((' → logprob: -17.500003814697266
    6. '(i' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ' ' → logprob: -18.750003814697266
    9. '```' → logprob: -20.375003814697266
    10. '(self' → logprob: -20.750003814697266

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(' → logprob: -17.125
    3. ' ' → logprob: -18.625
    4. ')' → logprob: -20.125
    5. '   ' → logprob: -21.25
    6. '0' → logprob: -21.75
    7. '```' → logprob: -22.875
    8. '[' → logprob: -23.25
    9. '
' → logprob: -23.375
    10. '' → logprob: -23.5

Token 230: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07889056205749512
    2. ' <<' → logprob: -2.578890562057495
    3. '<<<' → logprob: -15.078890800476074
    4. '<' → logprob: -15.703890800476074
    5. '<<(' → logprob: -15.703890800476074
    6. ' ' → logprob: -17.453889846801758
    7. ' <<=' → logprob: -17.703889846801758
    8. ' ' → logprob: -17.953889846801758
    9. ')<<' → logprob: -18.203889846801758
    10. '<<<<' → logprob: -18.453889846801758

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.4121114822482923e-06
    2. ' i' → logprob: -12.625003814697266
    3. ')i' → logprob: -18.500003814697266
    4. '	i' → logprob: -18.875003814697266
    5. '<|end|>' → logprob: -19.750003814697266
    6. '(i' → logprob: -20.250003814697266
    7. ')' → logprob: -21.500003814697266
    8. '   ' → logprob: -21.750003814697266
    9. '```' → logprob: -21.875003814697266
    10. '{i' → logprob: -22.250003814697266

Token 232: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3137092888355255
    2. ')' → logprob: -1.3137092590332031
    3. ' )
' → logprob: -7.813709259033203
    4. ' )' → logprob: -10.188709259033203
    5. ')
' → logprob: -12.813709259033203
    6. ')

' → logprob: -13.688709259033203
    7. '           ' → logprob: -14.938709259033203
    8. ')>
' → logprob: -15.188709259033203
    9. ')#' → logprob: -15.938709259033203
    10. 'if' → logprob: -15.938709259033203

Token 233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6082031726837158
    2. '<|end|>' → logprob: -1.8582031726837158
    3. ' if' → logprob: -1.9832031726837158
    4. '
' → logprob: -3.233203172683716
    5. '       ' → logprob: -3.233203172683716
    6. ' ' → logprob: -3.733203172683716
    7. '<|end|>' → logprob: -4.358202934265137
    8. ':' → logprob: -4.733202934265137
    9. '        ' → logprob: -4.733202934265137
    10. '[' → logprob: -5.108202934265137

Token 234: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22604946792125702
    2. 'if' (adapté à ' if') → logprob: -1.6010494232177734
    3. '           ' → logprob: -7.476049423217773
    4. '
' → logprob: -10.851049423217773
    5. ' ' → logprob: -10.976049423217773
    6. '<|end|>' → logprob: -12.101049423217773
    7. '	if' → logprob: -12.226049423217773
    8. ' 
' → logprob: -12.726049423217773
    9. '       ' → logprob: -12.851049423217773
    10. '```' → logprob: -12.976049423217773

Token 235: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016045745462179184
    2. ' k' → logprob: -4.141045570373535
    3. '           ' → logprob: -12.266045570373535
    4. '   ' → logprob: -13.016045570373535
    5. '	k' → logprob: -13.016045570373535
    6. '  ' → logprob: -14.516045570373535
    7. 'self' → logprob: -14.891045570373535
    8. ' ' → logprob: -14.891045570373535
    9. '(k' → logprob: -15.141045570373535
    10. '    ' → logprob: -15.391045570373535

Token 236: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759421586990356
    2. '<=' → logprob: -0.8259421586990356
    3. ')<=' → logprob: -13.700942039489746
    4. '<' → logprob: -15.075942039489746
    5. ']<=' → logprob: -15.450942039489746
    6. '```' → logprob: -15.575942039489746
    7. ' ' → logprob: -15.575942039489746
    8. '<|end|>' → logprob: -15.700942039489746
    9. '[' → logprob: -16.075942993164062
    10. 'self' → logprob: -16.200942993164062

Token 237: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001234428636962548
    2. ' self' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.500123977661133
    4. '       ' → logprob: -19.125123977661133
    5. '(self' → logprob: -20.250123977661133
    6. '
' → logprob: -20.375123977661133
    7. '=self' → logprob: -20.625123977661133
    8. ' ' → logprob: -20.875123977661133
    9. '	self' → logprob: -20.875123977661133
    10. '[self' → logprob: -21.375123977661133

Token 238: '.size' (ID: 4463)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.004218959249556065
    2. '.size' → logprob: -5.504219055175781
    3. ' size' → logprob: -8.879219055175781
    4. '	size' → logprob: -15.254219055175781
    5. '<size' → logprob: -15.379219055175781
    6. 'self' → logprob: -15.629219055175781
    7. 's' → logprob: -16.12921905517578
    8. '(size' → logprob: -16.25421905517578
    9. '.' → logprob: -16.37921905517578
    10. '_size' → logprob: -16.50421905517578

Token 239: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269284337759018
    2. 'and' → logprob: -2.1269283294677734
    3. '           ' → logprob: -15.376928329467773
    4. ' ' → logprob: -16.876928329467773
    5. '          ' → logprob: -17.126928329467773
    6. '	and' → logprob: -17.251928329467773
    7. ' и' → logprob: -18.001928329467773
    8. '        ' → logprob: -18.501928329467773
    9. ',' → logprob: -18.626928329467773
    10. '            ' → logprob: -18.751928329467773

Token 240: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.01150859147310257
    2. ' sum' → logprob: -4.511508464813232
    3. '           ' → logprob: -8.26150894165039
    4. '(sum' → logprob: -9.26150894165039
    5. '               ' → logprob: -9.76150894165039
    6. '   ' → logprob: -10.88650894165039
    7. 'self' → logprob: -10.88650894165039
    8. ' ' → logprob: -12.88650894165039
    9. '       ' → logprob: -13.63650894165039
    10. '  ' → logprob: -13.63650894165039

Token 241: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0068824379704892635
    2. ' +' → logprob: -5.506882667541504
    3. '+' → logprob: -5.881882667541504
    4. ' _' → logprob: -12.631882667541504
    5. '   ' → logprob: -13.756882667541504
    6. '```' → logprob: -13.881882667541504
    7. '_<' → logprob: -14.131882667541504
    8. ' ' → logprob: -14.506882667541504
    9. '    ' → logprob: -14.631882667541504
    10. '        ' → logprob: -14.631882667541504

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3927921950817108
    2. ' +' → logprob: -1.2677922248840332
    3. '+x' → logprob: -3.142792224884033
    4. '+k' → logprob: -8.767791748046875
    5. '<' → logprob: -11.517791748046875
    6. '+y' → logprob: -11.892791748046875
    7. '+i' → logprob: -12.017791748046875
    8. '+s' → logprob: -12.392791748046875
    9. ' ' → logprob: -12.517791748046875
    10. '+c' → logprob: -12.642791748046875

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018458699923940003
    2. ' self' → logprob: -8.625185012817383
    3. '(self' → logprob: -12.875185012817383
    4. '[self' → logprob: -13.375185012817383
    5. '=self' → logprob: -14.875185012817383
    6. '	self' → logprob: -15.750185012817383
    7. '           ' → logprob: -16.000185012817383
    8. '       ' → logprob: -16.375185012817383
    9. '
' → logprob: -16.875185012817383
    10. '   ' → logprob: -17.000185012817383

Token 244: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0046459767036139965
    2. 'tree' → logprob: -5.379645824432373
    3. '.' → logprob: -11.504646301269531
    4. ' .' → logprob: -11.879646301269531
    5. ' tree' → logprob: -12.754646301269531
    6. '	tree' → logprob: -13.129646301269531
    7. 'tre' → logprob: -14.379646301269531
    8. '.t' → logprob: -14.629646301269531
    9. '(tree' → logprob: -14.629646301269531
    10. 'Tree' → logprob: -14.879646301269531

Token 245: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: 0.0
    2. 'k' → logprob: -18.375
    3. '[' → logprob: -18.875
    4. '[
' → logprob: -21.75
    5. '[j' → logprob: -22.25
    6. '(k' → logprob: -23.25
    7. '{k' → logprob: -23.25
    8. '[i' → logprob: -23.375
    9. '	k' → logprob: -24.5
    10. ' [' → logprob: -24.5

Token 246: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12695781886577606
    2. ' <' → logprob: -2.126957893371582
    3. '<x' → logprob: -11.876957893371582
    4. ' ' → logprob: -12.001957893371582
    5. '[' → logprob: -12.126957893371582
    6. ')' → logprob: -12.876957893371582
    7. '<int' → logprob: -13.876957893371582
    8. '<n' → logprob: -14.001957893371582
    9. 'x' → logprob: -14.126957893371582
    10. '<num' → logprob: -14.251957893371582

Token 247: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06197642162442207
    2. ' <' → logprob: -2.811976432800293
    3. '<x' → logprob: -12.311976432800293
    4. '<int' → logprob: -14.061976432800293
    5. '[' → logprob: -14.436976432800293
    6. ' ' → logprob: -14.686976432800293
    7. '<
' → logprob: -15.061976432800293
    8. '<=' → logprob: -15.061976432800293
    9. '<num' → logprob: -15.186976432800293
    10. '<n' → logprob: -15.311976432800293

Token 248: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -18.50247573852539
    4. '
' → logprob: -18.75247573852539
    5. '   ' → logprob: -19.62747573852539
    6. ' ' → logprob: -20.50247573852539
    7. '       ' → logprob: -21.50247573852539
    8. '```' → logprob: -21.87747573852539
    9. '           ' → logprob: -22.00247573852539
    10. '(x' → logprob: -22.12747573852539

Token 249: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5759557485580444
    2. ':' → logprob: -0.8259557485580444
    3. ':
' → logprob: -11.700955390930176
    4. '):
' → logprob: -12.950955390930176
    5. ' :
' → logprob: -12.950955390930176
    6. '           ' → logprob: -13.575955390930176
    7. ':

' → logprob: -13.950955390930176
    8. '):' → logprob: -14.700955390930176
    9. ' :' → logprob: -14.700955390930176
    10. '       ' → logprob: -15.825955390930176

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010315393097698689
    2. '           ' → logprob: -5.010315418243408
    3. ' sum' → logprob: -6.760315418243408
    4. ' pos' → logprob: -7.010315418243408
    5. 'pos' → logprob: -7.760315418243408
    6. '            ' → logprob: -8.13531494140625
    7. '                
' → logprob: -8.38531494140625
    8. ':
' → logprob: -9.01031494140625
    9. '```' → logprob: -9.38531494140625
    10. 'sum' → logprob: -9.88531494140625

Token 251: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3001770079135895
    2. 'sum' (adapté à ' sum') → logprob: -2.1751770973205566
    3. ' pos' → logprob: -2.4251770973205566
    4. 'pos' → logprob: -3.0501770973205566
    5. '                   ' → logprob: -4.800177097320557
    6. '               ' → logprob: -6.675177097320557
    7. '   ' → logprob: -8.050176620483398
    8. ' ' → logprob: -10.175176620483398
    9. '           ' → logprob: -10.800176620483398
    10. '  ' → logprob: -11.675176620483398

Token 252: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3782830137643032e-05
    2. '+=' → logprob: -11.87501335144043
    3. '_=' → logprob: -12.50001335144043
    4. '_,' → logprob: -13.62501335144043
    5. ' +=' → logprob: -13.62501335144043
    6. '+' → logprob: -14.50001335144043
    7. '        ' → logprob: -16.75001335144043
    8. '            ' → logprob: -17.12501335144043
    9. '    ' → logprob: -17.50001335144043
    10. '__' → logprob: -17.62501335144043

Token 253: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1269504725933075
    2. ' +=' → logprob: -2.12695050239563
    3. '=' → logprob: -11.25195026397705
    4. '+' → logprob: -11.87695026397705
    5. ',' → logprob: -13.75195026397705
    6. ']+=' → logprob: -14.62695026397705
    7. '   ' → logprob: -15.75195026397705
    8. ' +' → logprob: -16.001951217651367
    9. '+=(' → logprob: -16.126951217651367
    10. '           ' → logprob: -16.251951217651367

Token 254: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011720098555088043
    2. ' self' → logprob: -6.751172065734863
    3. '           ' → logprob: -14.001172065734863
    4. '               ' → logprob: -15.001172065734863
    5. '[self' → logprob: -15.626172065734863
    6. '(self' → logprob: -15.751172065734863
    7. '	self' → logprob: -15.876172065734863
    8. '   ' → logprob: -16.751171112060547
    9. '                   ' → logprob: -16.876171112060547
    10. '       ' → logprob: -16.876171112060547

Token 255: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -7.088138227118179e-05
    2. 'tree' → logprob: -9.625070571899414
    3. '.' → logprob: -12.500070571899414
    4. ' .' → logprob: -14.625070571899414
    5. '	tree' → logprob: -14.625070571899414
    6. ' tree' → logprob: -16.375070571899414
    7. '.table' → logprob: -18.000070571899414
    8. '(tree' → logprob: -18.250070571899414
    9. '[' → logprob: -18.375070571899414
    10. 'TREE' → logprob: -18.500070571899414

Token 256: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.2664456789934775e-06
    2. 'k' → logprob: -13.750000953674316
    3. '[' → logprob: -16.000001907348633
    4. '[key' → logprob: -17.875001907348633
    5. ' k' → logprob: -18.375001907348633
    6. '{k' → logprob: -18.500001907348633
    7. ',k' → logprob: -18.750001907348633
    8. '	k' → logprob: -18.875001907348633
    9. '(k' → logprob: -18.875001907348633
    10. '[j' → logprob: -19.500001907348633

Token 257: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01916508376598358
    2. '
' → logprob: -4.2691650390625
    3. ',' → logprob: -6.0191650390625
    4. '           ' → logprob: -6.3941650390625
    5. '                   ' → logprob: -7.7691650390625
    6. ')' → logprob: -9.5191650390625
    7. ')
' → logprob: -9.6441650390625
    8. '                
' → logprob: -10.1441650390625
    9. '<|end|>' → logprob: -10.2691650390625
    10. '              ' → logprob: -10.3941650390625

Token 258: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.040979284793138504
    2. 'pos' → logprob: -3.4159793853759766
    3. ' pos' → logprob: -5.165979385375977
    4. ' 
' → logprob: -6.915979385375977
    5. ',pos' → logprob: -8.540979385375977
    6. '
' → logprob: -8.665979385375977
    7. '```' → logprob: -9.415979385375977
    8. '                
' → logprob: -9.915979385375977
    9. '  
' → logprob: -10.415979385375977
    10. '[pos' → logprob: -10.790979385375977

Token 259: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0019286326132714748
    2. ' pos' → logprob: -6.251928806304932
    3. '               ' → logprob: -17.751928329467773
    4. '	pos' → logprob: -21.376928329467773
    5. 'position' → logprob: -23.626928329467773
    6. '_pos' → logprob: -23.751928329467773
    7. ',pos' → logprob: -23.876928329467773
    8. '[pos' → logprob: -23.876928329467773
    9. '                   ' → logprob: -24.001928329467773
    10. '           ' → logprob: -24.001928329467773

Token 260: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759909749031067
    2. '=' → logprob: -0.8259909749031067
    3. ' +=' → logprob: -10.075990676879883
    4. '+=' → logprob: -11.575990676879883
    5. '.=' → logprob: -17.075990676879883
    6. ' ' → logprob: -17.075990676879883
    7. ' |=' → logprob: -17.700990676879883
    8. '=k' → logprob: -17.950990676879883
    9. '＝' → logprob: -18.200990676879883
    10. ' =)' → logprob: -18.950990676879883

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008734888397157192
    2. '(' → logprob: -4.758734703063965
    3. ' ' → logprob: -9.133734703063965
    4. ' (' → logprob: -11.508734703063965
    5. 'k' → logprob: -13.133734703063965
    6. '(k' → logprob: -15.258734703063965
    7. '```' → logprob: -17.00873565673828
    8. '`' → logprob: -17.88373565673828
    9. '   ' → logprob: -18.38373565673828
    10. ' k' → logprob: -18.75873565673828

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003178306156769395
    2. '(' → logprob: -5.753178119659424
    3. ' ' → logprob: -14.503178596496582
    4. ' (' → logprob: -16.003177642822266
    5. '```' → logprob: -18.753177642822266
    6. '[' → logprob: -18.878177642822266
    7. '{' → logprob: -19.503177642822266
    8. '(k' → logprob: -19.628177642822266
    9. 'k' → logprob: -19.878177642822266
    10. '`' → logprob: -20.378177642822266

Token 263: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.07971196621656418
    2. ' <<' → logprob: -2.5797119140625
    3. '(' → logprob: -8.4547119140625
    4. 'k' → logprob: -8.7047119140625
    5. '<' → logprob: -8.8297119140625
    6. '<<(' → logprob: -9.0797119140625
    7. ' (' → logprob: -9.7047119140625
    8. ' <<=' → logprob: -10.0797119140625
    9. ' k' → logprob: -11.0797119140625
    10. '(k' → logprob: -11.3297119140625

Token 264: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.2729995988775045e-06
    2. ' i' → logprob: -12.000006675720215
    3. '	i' → logprob: -19.1250057220459
    4. '<|end|>' → logprob: -19.2500057220459
    5. '(i' → logprob: -21.2500057220459
    6. '<|end|>' → logprob: -21.6250057220459
    7. '*i' → logprob: -22.0000057220459
    8. '```' → logprob: -22.1250057220459
    9. '
' → logprob: -22.5000057220459
    10. ')i' → logprob: -22.8750057220459

Token 265: '
' (ID: 198)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0014047559816390276
    2. ' k' → logprob: -7.126404762268066
    3. '<|end|>' → logprob: -7.751404762268066
    4. '           ' → logprob: -9.751404762268066
    5. ',k' → logprob: -10.501404762268066
    6. '               ' → logprob: -10.501404762268066
    7. '```' → logprob: -11.501404762268066
    8. '                   ' → logprob: -11.626404762268066
    9. '(k' → logprob: -11.626404762268066
    10. '          ' → logprob: -12.501404762268066

Token 266: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6002960801124573
    2. 'return' (adapté à ' return') → logprob: -0.9752960801124573
    3. '           ' → logprob: -3.6002960205078125
    4. '   ' → logprob: -3.9752960205078125
    5. ' return' → logprob: -4.1002960205078125
    6. 'pos' → logprob: -5.7252960205078125
    7. '+' → logprob: -6.4752960205078125
    8. '               ' → logprob: -6.8502960205078125
    9. '      ' → logprob: -7.3502960205078125
    10. '```' → logprob: -7.4752960205078125

Token 268: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0004306692280806601
    2. ' pos' → logprob: -7.750430583953857
    3. '   ' → logprob: -20.000431060791016
    4. '(pos' → logprob: -20.250431060791016
    5. '	pos' → logprob: -20.375431060791016
    6. '[pos' → logprob: -22.250431060791016
    7. ' ' → logprob: -23.000431060791016
    8. '_pos' → logprob: -23.250431060791016
    9. 'post' → logprob: -23.500431060791016
    10. '.pos' → logprob: -24.125431060791016

Token 269: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05989689752459526
    2. '<|end|>' → logprob: -2.934896945953369
    3. ' +' → logprob: -6.059896945953369
    4. '+=' → logprob: -7.309896945953369
    5. '           ' → logprob: -7.434896945953369
    6. ' +=' → logprob: -7.934896945953369
    7. '+
' → logprob: -8.684896469116211
    8. '+k' → logprob: -9.059896469116211
    9. '       ' → logprob: -9.059896469116211
    10. '++' → logprob: -9.309896469116211

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '0' → logprob: -18.125001907348633
    4. '```' → logprob: -18.250001907348633
    5. '<|end|>' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.750001907348633
    7. '[' → logprob: -21.000001907348633
    8. 'def' → logprob: -21.250001907348633
    9. '`' → logprob: -21.625001907348633
    10. '(' → logprob: -21.750001907348633

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -17.75
    4. '0' → logprob: -18.125
    5. '<|end|>' → logprob: -19.75
    6. '`' → logprob: -21.375
    7. '[' → logprob: -22.0
    8. '-' → logprob: -22.375
    9. '2' → logprob: -22.625
    10. '۱' → logprob: -22.625

Token 272: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' sum' (ID: 4215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: '_

' (ID: 44557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.319261908531189
    2. '=' → logprob: -1.319261908531189
    3. '<|end|>' → logprob: -1.944261908531189
    4. ' =' → logprob: -2.3192620277404785
    5. ')' → logprob: -3.0692620277404785
    6. ' +' → logprob: -3.4442620277404785
    7. '   ' → logprob: -3.6942620277404785
    8. '.' → logprob: -3.9442620277404785
    9. '       ' → logprob: -4.1942620277404785
    10. ',' → logprob: -4.3192620277404785

Token 277: ' m' (ID: 284)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.21625326573848724
    2. 'm' → logprob: -2.5912532806396484
    3. ' MOD' → logprob: -2.8412532806396484
    4. 'k' → logprob: -4.091253280639648
    5. 'mod' → logprob: -4.341253280639648
    6. 'q' → logprob: -4.466253280639648
    7. ' m' → logprob: -4.841253280639648
    8. ' k' → logprob: -5.591253280639648
    9. ' q' → logprob: -5.591253280639648
    10. 'M' → logprob: -6.466253280639648

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5768051743507385
    2. ' =' → logprob: -0.8268051743507385
    3. ',' → logprob: -7.076805114746094
    4. '=input' → logprob: -11.076805114746094
    5. ' ' → logprob: -13.326805114746094
    6. ' =
' → logprob: -13.451805114746094
    7. ' ,' → logprob: -15.076805114746094
    8. ')' → logprob: -15.326805114746094
    9. '=

' → logprob: -15.326805114746094
    10. '=
' → logprob: -15.701805114746094

Token 279: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10024474561214447
    2. ' map' → logprob: -2.3502447605133057
    3. '0' → logprob: -10.600244522094727
    4. 'list' → logprob: -12.225244522094727
    5. ' ' → logprob: -12.600244522094727
    6. 'input' → logprob: -13.475244522094727
    7. '	map' → logprob: -13.725244522094727
    8. '[' → logprob: -14.475244522094727
    9. 'm' → logprob: -14.600244522094727
    10. '5' → logprob: -14.975244522094727

Token 280: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003715662460308522
    2. 'int' → logprob: -8.000371932983398
    3. '(str' → logprob: -10.875371932983398
    4. '(' → logprob: -12.375371932983398
    5. '(input' → logprob: -12.500371932983398
    6. '[int' → logprob: -12.625371932983398
    7. 'input' → logprob: -12.750371932983398
    8. '=int' → logprob: -13.125371932983398
    9. 'str' → logprob: -15.000371932983398
    10. '<int' → logprob: -15.250371932983398

Token 281: ',' (ID: 11)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1694343090057373
    2. '(input' → logprob: -2.9194343090057373
    3. 'input' → logprob: -3.1694343090057373
    4. '()' → logprob: -3.7944343090057373
    5. '(),' → logprob: -4.294434547424316
    6. ',input' → logprob: -4.294434547424316
    7. '=input' → logprob: -5.419434547424316
    8. '(' → logprob: -6.044434547424316
    9. ',' → logprob: -6.419434547424316
    10. ' input' → logprob: -7.044434547424316

Token 282: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009124171338044107
    2. ' input' → logprob: -7.000912189483643
    3. 'int' → logprob: -14.7509126663208
    4. 'str' → logprob: -16.250911712646484
    5. 'map' → logprob: -16.375911712646484
    6. 'list' → logprob: -16.375911712646484
    7. 'n' → logprob: -16.625911712646484
    8. '=input' → logprob: -17.625911712646484
    9. '0' → logprob: -18.000911712646484
    10. 'open' → logprob: -18.250911712646484

Token 283: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005056116497144103
    2. '()' → logprob: -7.625505447387695
    3. '())' → logprob: -11.000505447387695
    4. '()
' → logprob: -14.500505447387695
    5. '()[' → logprob: -15.500505447387695
    6. '(' → logprob: -16.750505447387695
    7. '()>' → logprob: -17.250505447387695
    8. ' ().' → logprob: -17.500505447387695
    9. ')' → logprob: -17.750505447387695
    10. '()]' → logprob: -17.875505447387695

Token 284: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027337539358995855
    2. 'strip' → logprob: -8.250273704528809
    3. '(split' → logprob: -12.375273704528809
    4. 'rstrip' → logprob: -12.875273704528809
    5. '())' → logprob: -13.625273704528809
    6. '()' → logprob: -13.750273704528809
    7. ')' → logprob: -13.875273704528809
    8. ' split' → logprob: -13.875273704528809
    9. '().' → logprob: -14.125273704528809
    10. 'spl' → logprob: -15.000273704528809

Token 285: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1684718132019043
    2. '())' → logprob: -1.9184718132019043
    3. '()' → logprob: -4.918471813201904
    4. '))' → logprob: -7.043471813201904
    5. '(' → logprob: -11.168472290039062
    6. '()))' → logprob: -11.293472290039062
    7. ')")' → logprob: -14.293472290039062
    8. ')`' → logprob: -14.668472290039062
    9. '')' → logprob: -14.793472290039062
    10. '())
' → logprob: -14.793472290039062

Token 286: 'xxx' (ID: 49993)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.26114022731781006
    2. 'a' → logprob: -2.6361403465270996
    3. 'for' → logprob: -3.7611403465270996
    4. 's' → logprob: -3.8861403465270996
    5. 'pos' → logprob: -3.8861403465270996
    6. 'm' → logprob: -4.2611403465271
    7. 'x' → logprob: -4.2611403465271
    8. 'positions' → logprob: -4.3861403465271
    9. 'c' → logprob: -5.0111403465271
    10. 'q' → logprob: -5.0111403465271

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.603345513343811
    2. ' =' → logprob: -0.853345513343811
    3. '_' → logprob: -4.8533453941345215
    4. ',' → logprob: -4.9783453941345215
    5. 's' → logprob: -5.9783453941345215
    6. 'a' → logprob: -6.7283453941345215
    7. '_list' → logprob: -6.8533453941345215
    8. 'nums' → logprob: -7.4783453941345215
    9. 'for' → logprob: -7.6033453941345215
    10. '_values' → logprob: -7.7283453941345215

Token 288: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.49628010392189026
    2. '[' → logprob: -1.6212800741195679
    3. 'default' → logprob: -1.7462800741195679
    4. 'list' → logprob: -4.746280193328857
    5. 'Bit' → logprob: -5.621280193328857
    6. '[]
' → logprob: -6.121280193328857
    7. 'def' → logprob: -6.871280193328857
    8. '[n' → logprob: -7.121280193328857
    9. '{}' → logprob: -7.621280193328857
    10. '[list' → logprob: -7.871280193328857

Token 289: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002457238151691854
    2. '(' → logprob: -9.000246047973633
    3. '(range' → logprob: -9.375246047973633
    4. '()' → logprob: -10.875246047973633
    5. '(int' → logprob: -11.375246047973633
    6. '(input' → logprob: -12.500246047973633
    7. 'map' → logprob: -13.500246047973633
    8. '(
' → logprob: -14.000246047973633
    9. '(x' → logprob: -15.000246047973633
    10. '(...)' → logprob: -15.750246047973633

Token 290: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00044663884909823537
    2. 'int' → logprob: -7.750446796417236
    3. '(' → logprob: -12.250446319580078
    4. '[int' → logprob: -12.375446319580078
    5. '=int' → logprob: -12.375446319580078
    6. '(str' → logprob: -13.875446319580078
    7. '<int' → logprob: -14.125446319580078
    8. ',int' → logprob: -14.625446319580078
    9. 'list' → logprob: -16.250446319580078
    10. '```' → logprob: -16.250446319580078

Token 291: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.703096866607666
    2. ',input' → logprob: -1.078096866607666
    3. ',' → logprob: -1.828096866607666
    4. 'input' → logprob: -5.828096866607666
    5. '(' → logprob: -7.078096866607666
    6. '=input' → logprob: -9.453096389770508
    7. '   ' → logprob: -9.953096389770508
    8. ' ,' → logprob: -10.953096389770508
    9. ' (' → logprob: -10.953096389770508
    10. '```' → logprob: -11.328096389770508

Token 292: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7610454708337784e-05
    2. ' input' → logprob: -10.500027656555176
    3. ' ' → logprob: -19.12502670288086
    4. '(input' → logprob: -19.12502670288086
    5. '<input' → logprob: -19.87502670288086
    6. '   ' → logprob: -20.62502670288086
    7. '=input' → logprob: -20.87502670288086
    8. 'int' → logprob: -21.12502670288086
    9. 'x' → logprob: -21.12502670288086
    10. ')' → logprob: -21.50002670288086

Token 293: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010652327910065651
    2. '()' → logprob: -9.250106811523438
    3. '()))' → logprob: -12.125106811523438
    4. '())' → logprob: -13.375106811523438
    5. '()[' → logprob: -13.375106811523438
    6. '(' → logprob: -14.625106811523438
    7. '()));' → logprob: -15.250106811523438
    8. ' ().' → logprob: -15.750106811523438
    9. '(),' → logprob: -16.000106811523438
    10. ')' → logprob: -16.125106811523438

Token 294: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.619311974034645e-05
    2. 'strip' → logprob: -10.250036239624023
    3. '(split' → logprob: -14.875036239624023
    4. ' split' → logprob: -15.500036239624023
    5. 'rstrip' → logprob: -16.500036239624023
    6. 'spl' → logprob: -18.125036239624023
    7. '_split' → logprob: -18.375036239624023
    8. 'read' → logprob: -18.625036239624023
    9. 'plit' → logprob: -19.500036239624023
    10. '.split' → logprob: -19.875036239624023

Token 295: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20476628839969635
    2. '))' → logprob: -1.7047662734985352
    3. '()' → logprob: -5.829766273498535
    4. '(' → logprob: -8.579766273498535
    5. '())' → logprob: -9.204766273498535
    6. '()))
' → logprob: -9.329766273498535
    7. ')' → logprob: -10.829766273498535
    8. '()));' → logprob: -12.454766273498535
    9. '1' → logprob: -13.704766273498535
    10. '   ' → logprob: -14.079766273498535

Token 296: 'yyy' (ID: 77541)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740792512893677
    2. ' =' → logprob: -0.9740792512893677
    3. ',' → logprob: -13.474079132080078
    4. ' ' → logprob: -14.599079132080078
    5. '=list' → logprob: -16.099079132080078
    6. '   ' → logprob: -16.599079132080078
    7. '=[]' → logprob: -16.974079132080078
    8. '=input' → logprob: -17.474079132080078
    9. ')' → logprob: -17.599079132080078
    10. ' ' → logprob: -17.599079132080078

Token 298: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.519893501419574e-05
    2. ' list' → logprob: -9.37509536743164
    3. '[' → logprob: -12.00009536743164
    4. '[list' → logprob: -12.75009536743164
    5. '[]' → logprob: -14.00009536743164
    6. 'map' → logprob: -15.50009536743164
    7. ' [' → logprob: -16.50009536743164
    8. '(list' → logprob: -16.87509536743164
    9. 'sorted' → logprob: -18.00009536743164
    10. 'List' → logprob: -18.12509536743164

Token 299: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07008348405361176
    2. '(int' → logprob: -2.6950833797454834
    3. 'map' → logprob: -9.195083618164062
    4. '<int' → logprob: -11.195083618164062
    5. '(' → logprob: -11.570083618164062
    6. '[int' → logprob: -12.195083618164062
    7. 'int' → logprob: -12.195083618164062
    8. ' map' → logprob: -12.445083618164062
    9. ',map' → logprob: -13.070083618164062
    10. '=int' → logprob: -13.695083618164062

Token 300: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13112862408161163
    2. 'int' → logprob: -2.1311285495758057
    3. '=int' → logprob: -5.881128787994385
    4. '[int' → logprob: -6.631128787994385
    5. '<int' → logprob: -9.881128311157227
    6. ',int' → logprob: -10.756128311157227
    7. ']int' → logprob: -12.881128311157227
    8. ' int' → logprob: -13.256128311157227
    9. ':int' → logprob: -13.506128311157227
    10. '```' → logprob: -13.756128311157227

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31873011589050293
    2. ',int' → logprob: -1.318730115890503
    3. '(int' → logprob: -5.568730354309082
    4. 'int' → logprob: -6.443730354309082
    5. '[int' → logprob: -10.943730354309082
    6. ',input' → logprob: -11.943730354309082
    7. '(),' → logprob: -11.943730354309082
    8. '=int' → logprob: -12.318730354309082
    9. '<int' → logprob: -12.443730354309082
    10. '(' → logprob: -12.818730354309082

Token 302: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.6312321753939614e-05
    2. 'input' → logprob: -10.250036239624023
    3. '(int' → logprob: -14.375036239624023
    4. ' int' → logprob: -15.375036239624023
    5. '[int' → logprob: -16.750036239624023
    6. '=int' → logprob: -19.750036239624023
    7. '   ' → logprob: -20.875036239624023
    8. 'ints' → logprob: -21.125036239624023
    9. '<int' → logprob: -21.500036239624023
    10. 'list' → logprob: -22.125036239624023

Token 303: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0020791208371520042
    2. '()' → logprob: -6.377079010009766
    3. '()[' → logprob: -8.627079010009766
    4. '()))' → logprob: -9.502079010009766
    5. '.split' → logprob: -10.002079010009766
    6. '(),' → logprob: -11.252079010009766
    7. '())' → logprob: -11.377079010009766
    8. 'split' → logprob: -11.752079010009766
    9. '))' → logprob: -12.252079010009766
    10. '()))
' → logprob: -12.377079010009766

Token 304: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.7994282795116305e-05
    2. '1' → logprob: -11.12504768371582
    3. 's' → logprob: -11.12504768371582
    4. 'int' → logprob: -12.25004768371582
    5. 'spl' → logprob: -12.75004768371582
    6. '(split' → logprob: -13.25004768371582
    7. '.split' → logprob: -13.87504768371582
    8. '().' → logprob: -13.87504768371582
    9. 'strip' → logprob: -14.12504768371582
    10. '```' → logprob: -14.12504768371582

Token 305: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020294437126722187
    2. '()))' → logprob: -9.000203132629395
    3. ')' → logprob: -10.250203132629395
    4. '))
' → logprob: -10.375203132629395
    5. '[]' → logprob: -12.375203132629395
    6. '()' → logprob: -12.750203132629395
    7. ')))' → logprob: -12.875203132629395
    8. ' ))' → logprob: -13.875203132629395
    9. '[' → logprob: -14.250203132629395
    10. '1' → logprob: -14.625203132629395

Token 306: 'ab' (ID: 378)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6502705812454224
    2. 'for' → logprob: -1.1502705812454224
    3. 'xxx' → logprob: -3.275270462036133
    4. 'a' → logprob: -4.150270462036133
    5. 'x' → logprob: -4.275270462036133
    6. 'freq' → logprob: -4.900270462036133
    7. 'res' → logprob: -5.025270462036133
    8. 'result' → logprob: -5.025270462036133
    9. 'count' → logprob: -5.150270462036133
    10. '#' → logprob: -5.400270462036133

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7517446279525757
    2. '=' → logprob: -1.3767446279525757
    3. 's' → logprob: -1.3767446279525757
    4. 'a' → logprob: -4.626744747161865
    5. ',' → logprob: -4.751744747161865
    6. '=[]' → logprob: -5.626744747161865
    7. 'x' → logprob: -7.626744747161865
    8. '=[' → logprob: -8.126744270324707
    9. '=input' → logprob: -9.376744270324707
    10. '=list' → logprob: -9.376744270324707

Token 308: ' defaultdict' (ID: 107098)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10546775162220001
    2. '[list' → logprob: -2.3554677963256836
    3. ' [' → logprob: -5.855467796325684
    4. '[int' → logprob: -6.605467796325684
    5. '[input' → logprob: -7.980467796325684
    6. '[array' → logprob: -8.980467796325684
    7. '[x' → logprob: -9.355467796325684
    8. '[List' → logprob: -9.605467796325684
    9. '[]' → logprob: -9.605467796325684
    10. '[n' → logprob: -9.730467796325684

Token 309: '(set' (ID: 25904)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.1525571346282959
    2. 'list' → logprob: -2.152557134628296
    3. '(lambda' → logprob: -3.902557134628296
    4. '(int' → logprob: -5.402557373046875
    5. 'int' → logprob: -8.027557373046875
    6. '(<' → logprob: -8.652557373046875
    7. 'lambda' → logprob: -9.652557373046875
    8. '(' → logprob: -11.652557373046875
    9. '<int' → logprob: -11.902557373046875
    10. 'def' → logprob: -11.902557373046875

Token 310: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.674858301877975e-05
    2. ')
' → logprob: -9.500096321105957
    3. '())' → logprob: -11.125096321105957
    4. ')`' → logprob: -12.625096321105957
    5. '()' → logprob: -13.625096321105957
    6. '))' → logprob: -14.000096321105957
    7. ' )' → logprob: -15.000096321105957
    8. ')

' → logprob: -15.000096321105957
    9. 'list' → logprob: -15.250096321105957
    10. '[int' → logprob: -15.625096321105957

Token 311: 'coordinates' (ID: 74508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012307076249271631
    2. ' for' → logprob: -7.501230716705322
    3. 'n' → logprob: -8.001230239868164
    4. 'a' → logprob: -8.626230239868164
    5. 'x' → logprob: -10.001230239868164
    6. 'i' → logprob: -10.126230239868164
    7. '<|end|>' → logprob: -10.626230239868164
    8. 'm' → logprob: -12.126230239868164
    9. ')' → logprob: -12.376230239868164
    10. 'next' → logprob: -12.751230239868164

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762512683868408
    2. ' =' → logprob: -0.8262512683868408
    3. '_' → logprob: -8.951251029968262
    4. ',' → logprob: -10.076251029968262
    5. 's' → logprob: -10.701251029968262
    6. '_=' → logprob: -10.701251029968262
    7. '<|end|>' → logprob: -10.826251029968262
    8. 'A' → logprob: -11.201251029968262
    9. ' ' → logprob: -11.826251029968262
    10. '=[]' → logprob: -12.201251029968262

Token 313: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.23025020956993103
    2. 'set' → logprob: -1.7302502393722534
    3. 'sorted' → logprob: -3.730250120162964
    4. ' []' → logprob: -6.480250358581543
    5. 'xxx' → logprob: -6.855250358581543
    6. ' set' → logprob: -7.355250358581543
    7. 'list' → logprob: -7.480250358581543
    8. '[' → logprob: -8.230250358581543
    9. ' sorted' → logprob: -9.105250358581543
    10. '[]
' → logprob: -9.480250358581543

Token 314: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013035668234806508
    2. '(' → logprob: -9.500130653381348
    3. '()
' → logprob: -10.625130653381348
    4. '((' → logprob: -11.750130653381348
    5. '();' → logprob: -11.875130653381348
    6. '(x' → logprob: -12.000130653381348
    7. '([(' → logprob: -12.750130653381348
    8. '(),' → logprob: -13.625130653381348
    9. '()\' → logprob: -13.875130653381348
    10. '(()' → logprob: -14.125130653381348

Token 315: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032713564578443766
    2. ' for' → logprob: -5.753271579742432
    3. 'a' → logprob: -10.253271102905273
    4. 'x' → logprob: -10.378271102905273
    5. 'coordinates' → logprob: -11.753271102905273
    6. '
' → logprob: -12.128271102905273
    7. '   ' → logprob: -12.628271102905273
    8. '```' → logprob: -13.253271102905273
    9. 'i' → logprob: -13.503271102905273
    10. '#' → logprob: -14.003271102905273

Token 316: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09264551848173141
    2. 'i' → logprob: -3.0926454067230225
    3. ' x' → logprob: -3.8426454067230225
    4. 'a' → logprob: -4.342645645141602
    5. ' i' → logprob: -5.967645645141602
    6. '_' → logprob: -6.092645645141602
    7. '_x' → logprob: -6.342645645141602
    8. ' _' → logprob: -7.592645645141602
    9. 'v' → logprob: -7.967645645141602
    10. ' a' → logprob: -8.717645645141602

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1306496411561966
    2. 'in' → logprob: -2.1306495666503906
    3. '_' → logprob: -6.380649566650391
    4. 'x' → logprob: -6.505649566650391
    5. ',' → logprob: -8.13064956665039
    6. ' ' → logprob: -9.50564956665039
    7. '_in' → logprob: -10.00564956665039
    8. 'xx' → logprob: -10.13064956665039
    9. 'i' → logprob: -10.88064956665039
    10. 'y' → logprob: -11.13064956665039

Token 318: ' xxx' (ID: 33484)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.007414482068270445
    2. ' xxx' → logprob: -5.5074143409729
    3. 'range' → logprob: -5.7574143409729
    4. ' range' → logprob: -8.882414817810059
    5. 'yyy' → logprob: -11.882414817810059
    6. '(x' → logprob: -12.382414817810059
    7. 'enumer' → logprob: -12.632414817810059
    8. 'ab' → logprob: -12.632414817810059
    9. 'xx' → logprob: -12.882414817810059
    10. '[' → logprob: -13.257414817810059

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004913396667689085
    2. ':
' → logprob: -5.379913330078125
    3. ',' → logprob: -9.129913330078125
    4. ' :' → logprob: -9.629913330078125
    5. ' in' → logprob: -10.004913330078125
    6. 'in' → logprob: -10.254913330078125
    7. '   ' → logprob: -10.879913330078125
    8. '):' → logprob: -11.504913330078125
    9. ')' → logprob: -13.004913330078125
    10. '):
' → logprob: -13.754913330078125

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005355193745344877
    2. ' coordinates' → logprob: -5.380355358123779
    3. 'coordinates' → logprob: -7.255355358123779
    4. '   ' → logprob: -12.005354881286621
    5. ' for' → logprob: -12.380354881286621
    6. '    ' → logprob: -12.505354881286621
    7. '.coordinates' → logprob: -12.755354881286621
    8. ' if' → logprob: -13.380354881286621
    9. '       ' → logprob: -13.505354881286621
    10. 'Coordinates' → logprob: -13.630354881286621

Token 321: ' if' (ID: 538)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.013619893230497837
    2. '   ' → logprob: -5.013619899749756
    3. ' coordinates' → logprob: -5.013619899749756
    4. 'ab' → logprob: -8.763619422912598
    5. 'for' → logprob: -10.513619422912598
    6. ' ' → logprob: -10.888619422912598
    7. '  ' → logprob: -12.013619422912598
    8. 'if' (adapté à ' if') → logprob: -12.763619422912598
    9. 'co' → logprob: -12.763619422912598
    10. 'x' → logprob: -12.888619422912598

Token 322: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.633799135684967
    2. ' x' → logprob: -0.758799135684967
    3. '(x' → logprob: -7.883799076080322
    4. ' not' → logprob: -8.88379955291748
    5. 'n' → logprob: -9.00879955291748
    6. ' (' → logprob: -9.13379955291748
    7. ' ' → logprob: -9.13379955291748
    8. ' n' → logprob: -9.88379955291748
    9. 'not' → logprob: -10.07129955291748
    10. '(' → logprob: -10.82129955291748

Token 323: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.621732771396637
    2. '>' → logprob: -1.9967327117919922
    3. ' in' → logprob: -2.121732711791992
    4. ' not' → logprob: -2.246732711791992
    5. ' >=' → logprob: -3.121732711791992
    6. ' <' → logprob: -3.996732711791992
    7. ' !=' → logprob: -4.496732711791992
    8. ' ==' → logprob: -4.496732711791992
    9. '>=' → logprob: -4.871732711791992
    10. ' <=' → logprob: -6.121732711791992

Token 324: ' y' (ID: 342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7648653388023376
    2. 'm' → logprob: -0.7648653388023376
    3. 'n' → logprob: -3.8898653984069824
    4. '1' → logprob: -4.139865398406982
    5. ' ' → logprob: -4.639865398406982
    6. '100' → logprob: -4.889865398406982
    7. '=' → logprob: -5.389865398406982
    8. 'y' → logprob: -6.014865398406982
    9. '>' → logprob: -6.639865398406982
    10. '999' → logprob: -6.764865398406982

Token 325: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.22690632939338684
    2. 'y' → logprob: -1.6019062995910645
    3. '=' → logprob: -8.101906776428223
    4. 'yyy' → logprob: -8.101906776428223
    5. '_' → logprob: -9.101906776428223
    6. ' y' → logprob: -9.351906776428223
    7. '[' → logprob: -9.351906776428223
    8. ' =' → logprob: -9.476906776428223
    9. '0' → logprob: -9.726906776428223
    10. ' ' → logprob: -9.851906776428223

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027858057990670204
    2. ':' → logprob: -3.652858018875122
    3. '[-' → logprob: -7.527858257293701
    4. '[m' → logprob: -7.902858257293701
    5. '[x' → logprob: -9.027857780456543
    6. '[n' → logprob: -9.277857780456543
    7. '0' → logprob: -9.777857780456543
    8. '[i' → logprob: -9.902857780456543
    9. '):' → logprob: -10.152857780456543
    10. ':
' → logprob: -10.652857780456543

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009921472519636154
    2. 'm' → logprob: -4.884921550750732
    3. '-' → logprob: -6.384921550750732
    4. 'x' → logprob: -8.009921073913574
    5. ' ' → logprob: -9.134921073913574
    6. '[' → logprob: -9.384921073913574
    7. 'n' → logprob: -10.884921073913574
    8. '1' → logprob: -11.259921073913574
    9. 'len' → logprob: -11.634921073913574
    10. '[m' → logprob: -11.759921073913574

Token 328: ']' (ID: 60)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01198633387684822
    2. ']:
' → logprob: -4.761986255645752
    3. ':' → logprob: -6.636986255645752
    4. ']' → logprob: -6.886986255645752
    5. '):' → logprob: -7.386986255645752
    6. ']):' → logprob: -9.01198673248291
    7. '[' → logprob: -9.88698673248291
    8. ']>' → logprob: -9.88698673248291
    9. ']:
' → logprob: -10.26198673248291
    10. '):
' → logprob: -10.88698673248291

Token 329: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43960317969322205
    2. ':
' → logprob: -1.0646032094955444
    3. '       ' → logprob: -5.064603328704834
    4. ' and' → logprob: -5.814603328704834
    5. '   ' → logprob: -6.814603328704834
    6. '):
' → logprob: -8.814602851867676
    7. ' or' → logprob: -9.689602851867676
    8. ',' → logprob: -9.939602851867676
    9. '):' → logprob: -10.064602851867676
    10. 'and' → logprob: -10.189602851867676

Token 330: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006991946138441563
    2. ' x' → logprob: -5.006991863250732
    3. 'True' → logprob: -10.00699234008789
    4. 'y' → logprob: -10.25699234008789
    5. '(x' → logprob: -10.25699234008789
    6. '(' → logprob: -10.38199234008789
    7. 'n' → logprob: -11.00699234008789
    8. 'False' → logprob: -11.00699234008789
    9. ' (' → logprob: -11.13199234008789
    10. ' ' → logprob: -11.13199234008789

Token 331: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.251688152551651
    2. 'x' → logprob: -2.626688241958618
    3. 'yyy' → logprob: -2.626688241958618
    4. '>' → logprob: -3.376688241958618
    5. ' >' → logprob: -4.376688003540039
    6. 'y' → logprob: -4.501688003540039
    7. '[' → logprob: -5.751688003540039
    8. '>x' → logprob: -6.126688003540039
    9. '0' → logprob: -6.376688003540039
    10. 'yyyy' → logprob: -6.626688003540039

Token 332: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018904492259025574
    2. '[-' → logprob: -4.143904685974121
    3. ':' → logprob: -7.143904685974121
    4. '0' → logprob: -7.268904685974121
    5. '[i' → logprob: -8.268904685974121
    6. '])' → logprob: -8.893904685974121
    7. ']' → logprob: -9.018904685974121
    8. '   ' → logprob: -9.143904685974121
    9. '[len' → logprob: -9.268904685974121
    10. ']>' → logprob: -9.768904685974121

Token 333: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6952831745147705
    2. '0' → logprob: -0.8202831745147705
    3. '1' → logprob: -2.8202831745147705
    4. ' -' → logprob: -6.945282936096191
    5. ' ' → logprob: -9.195282936096191
    6. ']' → logprob: -10.570282936096191
    7. ':' → logprob: -11.070282936096191
    8. '```' → logprob: -11.070282936096191
    9. '
' → logprob: -11.820282936096191
    10. 'len' → logprob: -12.070282936096191

Token 334: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5762501955032349
    2. ' <' → logprob: -1.8262501955032349
    3. ']:' → logprob: -1.8262501955032349
    4. '>' → logprob: -1.9512501955032349
    5. ']>' → logprob: -2.3262500762939453
    6. ' >' → logprob: -2.7012500762939453
    7. '<' → logprob: -3.5762500762939453
    8. ':' → logprob: -3.5762500762939453
    9. '):' → logprob: -3.5762500762939453
    10. '<|end|>' → logprob: -4.076250076293945

Token 335: ' <' (ID: 464)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1676013469696045
    2. '>' → logprob: -1.7926013469696045
    3. ' <' → logprob: -1.9176013469696045
    4. '<|end|>' → logprob: -2.5426013469696045
    5. ' >' → logprob: -2.6676013469696045
    6. ' <=' → logprob: -2.7926013469696045
    7. '<=' → logprob: -3.0426013469696045
    8. '<' → logprob: -3.2926013469696045
    9. '<x' → logprob: -4.667601585388184
    10. ' and' → logprob: -4.667601585388184

Token 336: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008615988306701183
    2. ' x' → logprob: -4.758615970611572
    3. '<|end|>' → logprob: -14.75861644744873
    4. ' ' → logprob: -15.38361644744873
    5. '=' → logprob: -15.38361644744873
    6. '	x' → logprob: -16.383615493774414
    7. ')x' → logprob: -16.383615493774414
    8. '0' → logprob: -16.508615493774414
    9. '=x' → logprob: -16.633615493774414
    10. '(x' → logprob: -16.758615493774414

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32138705253601074
    2. ':
' → logprob: -1.3213870525360107
    3. '   ' → logprob: -5.07138729095459
    4. '       ' → logprob: -6.44638729095459
    5. 'continue' → logprob: -9.94638729095459
    6. ' continue' → logprob: -10.07138729095459
    7. '	continue' → logprob: -10.19638729095459
    8. ':return' → logprob: -10.69638729095459
    9. ' or' → logprob: -10.82138729095459
    10. ',' → logprob: -10.94638729095459

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028978737071156502
    2. '   ' → logprob: -3.9039788246154785
    3. ' continue' → logprob: -5.1539788246154785
    4. 'continue' → logprob: -6.4039788246154785
    5. ':
' → logprob: -8.15397834777832
    6. '	continue' → logprob: -8.27897834777832
    7. ':' → logprob: -8.27897834777832
    8. ',' → logprob: -9.90397834777832
    9. ' coordinates' → logprob: -10.40397834777832
    10. '	' → logprob: -10.77897834777832

Token 339: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0711023807525635
    2. ' continue' → logprob: -1.1961023807525635
    3. ' coordinates' → logprob: -1.4461023807525635
    4. 'continue' (adapté à ' continue') → logprob: -2.9461023807525635
    5. 'coordinates' → logprob: -3.0711023807525635
    6. '       ' → logprob: -4.196102142333984
    7. '    ' → logprob: -6.571102142333984
    8. '           ' → logprob: -6.696102142333984
    9. ' pass' → logprob: -7.321102142333984
    10. ' for' → logprob: -7.946102142333984

Token 340: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007829484529793262
    2. '
' → logprob: -5.382829666137695
    3. '    
' → logprob: -6.507829666137695
    4. 'coordinates' → logprob: -7.257829666137695
    5. ' coordinates' → logprob: -8.007829666137695
    6. '<|end|>' → logprob: -8.882829666137695
    7. '       ' → logprob: -9.007829666137695
    8. '  
' → logprob: -9.632829666137695
    9. ',' → logprob: -9.632829666137695
    10. ')' → logprob: -10.007829666137695

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0057279132306575775
    2. '<|end|>' → logprob: -5.755727767944336
    3. '    
' → logprob: -7.255727767944336
    4. '
' → logprob: -7.505727767944336
    5. ' ' → logprob: -8.130727767944336
    6. ' for' → logprob: -8.380727767944336
    7. ' coordinates' → logprob: -9.255727767944336
    8. '       ' → logprob: -9.255727767944336
    9. '  ' → logprob: -9.380727767944336
    10. ' x' → logprob: -9.755727767944336

Token 342: ' i' (ID: 575)
  Prédit: 'coordinates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coordinates' → logprob: -0.2421582192182541
    2. '   ' → logprob: -1.7421581745147705
    3. ' coordinates' → logprob: -4.11715841293335
    4. 'for' → logprob: -4.24215841293335
    5. ' for' → logprob: -5.11715841293335
    6. 'ab' → logprob: -6.86715841293335
    7. '       ' → logprob: -7.74215841293335
    8. ' ' → logprob: -7.99215841293335
    9. 'x' → logprob: -8.242157936096191
    10. '.coordinates' → logprob: -8.867157936096191

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05932963639497757
    2. 'f' → logprob: -3.6843297481536865
    3. 'nd' → logprob: -4.309329509735107
    4. '=' → logprob: -4.309329509735107
    5. 'dx' → logprob: -5.434329509735107
    6. 'n' → logprob: -7.309329509735107
    7. 'x' → logprob: -8.934329986572266
    8. 'd' → logprob: -9.059329986572266
    9. ',' → logprob: -9.309329986572266
    10. 'nt' → logprob: -9.434329986572266

Token 344: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.026325728744268417
    2. ' bis' → logprob: -3.6513257026672363
    3. '0' → logprob: -11.026326179504395
    4. ' ' → logprob: -12.651326179504395
    5. '   ' → logprob: -12.901326179504395
    6. '	b' → logprob: -13.901326179504395
    7. 'b' → logprob: -14.526326179504395
    8. '1' → logprob: -14.651326179504395
    9. 'bi' → logprob: -14.651326179504395
    10. '
' → logprob: -16.151325225830078

Token 345: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0008199920994229615
    2. '(x' → logprob: -8.12582015991211
    3. '```' → logprob: -8.87582015991211
    4. 'sect' → logprob: -10.00082015991211
    5. 'xxx' → logprob: -10.25082015991211
    6. 'ct' → logprob: -10.37582015991211
    7. '...' → logprob: -10.37582015991211
    8. '<' → logprob: -10.50082015991211
    9. '   ' → logprob: -10.62582015991211
    10. 'x' → logprob: -11.25082015991211

Token 346: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09434224665164948
    2. '_left' → logprob: -2.7193422317504883
    3. '_right' → logprob: -3.8443422317504883
    4. 'right' → logprob: -6.469342231750488
    5. 'left' → logprob: -7.594342231750488
    6. '(ab' → logprob: -8.344342231750488
    7. 'ab' → logprob: -8.969342231750488
    8. 'Right' → logprob: -9.219342231750488
    9. 'Left' → logprob: -10.219342231750488
    10. 'xxx' → logprob: -10.219342231750488

Token 347: 'yyy' (ID: 77541)
  Prédit: 'yyy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.03467436879873276
    2. '(' → logprob: -3.5346744060516357
    3. 'yy' → logprob: -5.659674167633057
    4. 'ab' → logprob: -7.409674167633057
    5. 'xy' → logprob: -8.659674644470215
    6. 'xxx' → logprob: -8.784674644470215
    7. 'right' → logprob: -9.284674644470215
    8. 'yyyy' → logprob: -9.409674644470215
    9. '```' → logprob: -9.909674644470215
    10. '   ' → logprob: -10.284674644470215

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5803536772727966
    2. ',x' → logprob: -0.9553536772727966
    3. ',i' → logprob: -3.2053537368774414
    4. '(x' → logprob: -4.330353736877441
    5. ',y' → logprob: -6.955353736877441
    6. '(i' → logprob: -7.455353736877441
    7. ' ,' → logprob: -9.705353736877441
    8. ',right' → logprob: -9.830353736877441
    9. '_left' → logprob: -9.955353736877441
    10. ',b' → logprob: -10.580353736877441

Token 349: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015414038207381964
    2. ' x' → logprob: -6.501541614532471
    3. '0' → logprob: -11.376541137695312
    4. 'i' → logprob: -11.376541137695312
    5. ')' → logprob: -12.126541137695312
    6. ')x' → logprob: -12.876541137695312
    7. '(x' → logprob: -13.001541137695312
    8. '1' → logprob: -13.501541137695312
    9. '   ' → logprob: -13.751541137695312
    10. ' ' → logprob: -14.626541137695312

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01219550333917141
    2. ')
' → logprob: -4.512195587158203
    3. ')-' → logprob: -6.887195587158203
    4. ' )' → logprob: -9.637195587158203
    5. '1' → logprob: -11.262195587158203
    6. ')+' → logprob: -11.637195587158203
    7. ')i' → logprob: -12.137195587158203
    8. '0' → logprob: -12.387195587158203
    9. ',' → logprob: -12.637195587158203
    10. ')>' → logprob: -13.012195587158203

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019787870347499847
    2. ' if' → logprob: -4.894787788391113
    3. '
' → logprob: -5.394787788391113
    4. '<|end|>' → logprob: -5.394787788391113
    5. 'if' → logprob: -6.769787788391113
    6. '    
' → logprob: -7.394787788391113
    7. ')' → logprob: -8.519787788391113
    8. '  ' → logprob: -9.144787788391113
    9. 'ab' → logprob: -9.144787788391113
    10. ' for' → logprob: -9.144787788391113

Token 352: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12755201756954193
    2. 'if' → logprob: -3.127552032470703
    3. ' if' → logprob: -3.502552032470703
    4. 'ab' → logprob: -3.627552032470703
    5. ' ab' → logprob: -4.627552032470703
    6. 'pos' → logprob: -5.002552032470703
    7. ' pos' → logprob: -6.752552032470703
    8. 'i' → logprob: -7.877552032470703
    9. 'j' → logprob: -8.252552032470703
    10. 'for' → logprob: -8.627552032470703

Token 353: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010820831172168255
    2. ' =' → logprob: -4.6358208656311035
    3. '=' → logprob: -7.3858208656311035
    4. ',' → logprob: -8.635820388793945
    5. 'bb' → logprob: -9.760820388793945
    6. 'bs' → logprob: -10.010820388793945
    7. ' +=' → logprob: -10.510820388793945
    8. '   ' → logprob: -11.010820388793945
    9. '  ' → logprob: -11.510820388793945
    10. ',b' → logprob: -11.635820388793945

Token 354: ' x' (ID: 1215)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.8640748858451843
    2. ' y' → logprob: -0.9890748858451843
    3. 'y' → logprob: -2.739074945449829
    4. 'i' → logprob: -2.739074945449829
    5. ' i' → logprob: -3.739074945449829
    6. 'xxx' → logprob: -4.23907470703125
    7. '(' → logprob: -4.61407470703125
    8. 'x' → logprob: -5.48907470703125
    9. ' bis' → logprob: -5.73907470703125
    10. ' (' → logprob: -5.73907470703125

Token 355: ' -' (ID: 533)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.27854499220848083
    2. '
' → logprob: -1.5285450220108032
    3. 'if' → logprob: -4.903544902801514
    4. '-' → logprob: -5.153544902801514
    5. ',' → logprob: -5.528544902801514
    6. 'i' → logprob: -5.653544902801514
    7. ' -' → logprob: -6.778544902801514
    8. ' if' → logprob: -7.028544902801514
    9. '[i' → logprob: -7.653544902801514
    10. 'ab' → logprob: -7.653544902801514

Token 356: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.001041978714056313
    2. ' y' → logprob: -7.126041889190674
    3. 'yy' → logprob: -8.626042366027832
    4. '1' → logprob: -11.126042366027832
    5. '   ' → logprob: -11.751042366027832
    6. ' ' → logprob: -11.751042366027832
    7. 'xxx' → logprob: -12.001042366027832
    8. '  ' → logprob: -12.001042366027832
    9. '(' → logprob: -12.626042366027832
    10. '0' → logprob: -12.751042366027832

Token 357: 'yy' (ID: 7496)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6476301550865173
    2. 'yy' → logprob: -0.7726301550865173
    3. 'yyy' → logprob: -4.272630214691162
    4. 'i' → logprob: -8.397629737854004
    5. 'x' → logprob: -8.897629737854004
    6. '[i' → logprob: -9.022629737854004
    7. '[' → logprob: -9.147629737854004
    8. '0' → logprob: -9.522629737854004
    9. 'e' → logprob: -10.022629737854004
    10. ' ' → logprob: -10.272629737854004

Token 358: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017386233957950026
    2. 'i' → logprob: -8.750173568725586
    3. '[' → logprob: -11.250173568725586
    4. 'a' → logprob: -14.500173568725586
    5. '[max' → logprob: -15.250173568725586
    6. '[b' → logprob: -15.625173568725586
    7. '[pos' → logprob: -15.625173568725586
    8. '[m' → logprob: -15.875173568725586
    9. '[
' → logprob: -16.125173568725586
    10. '1' → logprob: -16.125173568725586

Token 359: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015600931365042925
    2. ' -' → logprob: -6.751560211181641
    3. '[i' → logprob: -7.876560211181641
    4. ']' → logprob: -12.25156021118164
    5. '[' → logprob: -12.87656021118164
    6. '1' → logprob: -13.75156021118164
    7. 'i' → logprob: -14.75156021118164
    8. '])' → logprob: -14.87656021118164
    9. ')' → logprob: -15.00156021118164
    10. '   ' → logprob: -15.75156021118164

Token 360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. ' ' → logprob: -10.875020980834961
    3. '2' → logprob: -13.250020980834961
    4. '   ' → logprob: -16.25002098083496
    5. '  ' → logprob: -17.87502098083496
    6. '```' → logprob: -18.81252098083496
    7. ']' → logprob: -18.87502098083496
    8. '１' → logprob: -19.18752098083496
    9. 'i' → logprob: -19.18752098083496
    10. '-' → logprob: -19.37502098083496

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. '2' → logprob: -11.12502670288086
    3. ' ' → logprob: -11.37502670288086
    4. '   ' → logprob: -15.12502670288086
    5. ']' → logprob: -16.06252670288086
    6. '  ' → logprob: -16.93752670288086
    7. '```' → logprob: -17.56252670288086
    8. '۱' → logprob: -17.81252670288086
    9. '
' → logprob: -17.87502670288086
    10. '11' → logprob: -17.87502670288086

Token 362: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2750994861125946
    2. ']
' → logprob: -1.525099515914917
    3. ')' → logprob: -4.275099277496338
    4. ')
' → logprob: -4.775099277496338
    5. '])' → logprob: -8.150099754333496
    6. '])
' → logprob: -9.275099754333496
    7. '<|end|>' → logprob: -10.150099754333496
    8. '   ' → logprob: -10.525099754333496
    9. ')]' → logprob: -11.025099754333496
    10. ']
' → logprob: -11.150099754333496

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4855351150035858
    2. '
' → logprob: -1.1105351448059082
    3. 'b' → logprob: -3.360535144805908
    4. '<|end|>' → logprob: -4.485535144805908
    5. ' b' → logprob: -5.735535144805908
    6. ' ' → logprob: -5.985535144805908
    7. ' if' → logprob: -7.110535144805908
    8. ' 
' → logprob: -7.235535144805908
    9. '    
' → logprob: -7.860535144805908
    10. ',' → logprob: -8.48553466796875

Token 364: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.3333670198917389
    2. ' b' → logprob: -1.3333669900894165
    3. '   ' → logprob: -3.958367109298706
    4. 'a' → logprob: -7.958366870880127
    5. 'i' → logprob: -9.208367347717285
    6. ' i' → logprob: -9.458367347717285
    7. ' if' → logprob: -9.583367347717285
    8. ' a' → logprob: -10.208367347717285
    9. '...' → logprob: -10.333367347717285
    10. '1' → logprob: -10.583367347717285

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024331748485565
    2. '=' → logprob: -1.910243272781372
    3. ' ' → logprob: -11.785243034362793
    4. ',' → logprob: -12.285243034362793
    5. '   ' → logprob: -12.285243034362793
    6. ')' → logprob: -14.910243034362793
    7. '    ' → logprob: -15.035243034362793
    8. '  ' → logprob: -15.160243034362793
    9. ' =
' → logprob: -15.785243034362793
    10. 'a' → logprob: -16.16024398803711

Token 366: ' y' (ID: 342)
  Prédit: 'yyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.055751703679561615
    2. ' y' → logprob: -2.9307518005371094
    3. ' ' → logprob: -8.43075180053711
    4. 'abs' → logprob: -8.55575180053711
    5. '  ' → logprob: -8.68075180053711
    6. '   ' → logprob: -9.80575180053711
    7. 'xxx' → logprob: -10.18075180053711
    8. 'yy' → logprob: -10.30575180053711
    9. '(' → logprob: -10.43075180053711
    10. 'ypy' → logprob: -10.93075180053711

Token 367: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.3051978051662445
    2. '[i' → logprob: -1.555197834968567
    3. 'y' → logprob: -3.5551977157592773
    4. 'yyy' → logprob: -3.9301977157592773
    5. 'i' → logprob: -6.305197715759277
    6. 'yp' → logprob: -7.055197715759277
    7. 'py' → logprob: -7.930197715759277
    8. 'yb' → logprob: -8.930197715759277
    9. '[y' → logprob: -10.180197715759277
    10. '[' → logprob: -10.430197715759277

Token 368: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3133488595485687
    2. '[i' → logprob: -1.3133488893508911
    3. ' i' → logprob: -9.813348770141602
    4. '[' → logprob: -10.438348770141602
    5. '   ' → logprob: -14.188348770141602
    6. '[min' → logprob: -14.188348770141602
    7. '	i' → logprob: -14.438348770141602
    8. '[
' → logprob: -15.313348770141602
    9. '{i' → logprob: -15.813348770141602
    10. '(i' → logprob: -16.0633487701416

Token 369: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1906156837940216
    2. '-' → logprob: -1.8156156539916992
    3. ']-' → logprob: -5.065615653991699
    4. ' -' → logprob: -5.440615653991699
    5. 'i' → logprob: -10.3156156539917
    6. ' ]' → logprob: -10.4406156539917
    7. '   ' → logprob: -10.9406156539917
    8. ']
' → logprob: -11.3156156539917
    9. '1' → logprob: -11.5656156539917
    10. ']+' → logprob: -11.5656156539917

Token 370: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11282751709222794
    2. '-' → logprob: -2.2378275394439697
    3. ' ' → logprob: -13.36282730102539
    4. '-x' → logprob: -13.61282730102539
    5. '...' → logprob: -14.73782730102539
    6. ')' → logprob: -14.73782730102539
    7. '[' → logprob: -14.86282730102539
    8. ',' → logprob: -15.61282730102539
    9. ' -
' → logprob: -15.86282730102539
    10. ']' → logprob: -15.98782730102539

Token 371: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.5577775128767826e-06
    2. ' x' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -18.8750057220459
    4. ')x' → logprob: -20.0000057220459
    5. '	x' → logprob: -20.5000057220459
    6. '{x' → logprob: -21.7500057220459
    7. '"x' → logprob: -21.7500057220459
    8. '$x' → logprob: -22.1250057220459
    9. '<|end|>' → logprob: -22.2500057220459
    10. ''x' → logprob: -22.2500057220459

Token 372: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08338823914527893
    2. '
' → logprob: -2.583388328552246
    3. 'ab' → logprob: -5.833388328552246
    4. ' ab' → logprob: -7.583388328552246
    5. ',' → logprob: -8.208388328552246
    6. '    
' → logprob: -8.833388328552246
    7. '  ' → logprob: -8.958388328552246
    8. ' ' → logprob: -9.583388328552246
    9. '
' → logprob: -9.708388328552246
    10. ')' → logprob: -9.833388328552246

Token 373: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 374: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -0.9191630482673645
    2. ' ab' → logprob: -1.0441629886627197
    3. '   ' → logprob: -1.4191629886627197
    4. 'if' → logprob: -5.544163227081299
    5. ' if' → logprob: -6.294163227081299
    6. '       ' → logprob: -7.169163227081299
    7. '
' → logprob: -8.16916275024414
    8. '           ' → logprob: -9.16916275024414
    9. '(ab' → logprob: -9.91916275024414
    10. ' ' → logprob: -10.04416275024414

Token 375: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.20221669971942902
    2. '[i' → logprob: -1.7022167444229126
    3. '[' → logprob: -7.702216625213623
    4. '[x' → logprob: -8.077217102050781
    5. '[(' → logprob: -10.952217102050781
    6. 'a' → logprob: -11.327217102050781
    7. '[b' → logprob: -12.077217102050781
    8. '[y' → logprob: -13.077217102050781
    9. '```' → logprob: -14.452217102050781
    10. '[int' → logprob: -14.702217102050781

Token 376: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.8802491215174086e-05
    2. ']' → logprob: -11.000028610229492
    3. '.add' → logprob: -11.750028610229492
    4. '][' → logprob: -13.000028610229492
    5. ' ].' → logprob: -13.500028610229492
    6. 'add' → logprob: -15.625028610229492
    7. ']
' → logprob: -16.375028610229492
    8. '.' → logprob: -16.500028610229492
    9. '   ' → logprob: -17.375028610229492
    10. '[' → logprob: -17.375028610229492

Token 377: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. ' add' → logprob: -16.0
    3. '.add' → logprob: -17.375
    4. 'update' → logprob: -19.875
    5. 'append' → logprob: -20.0
    6. '	add' → logprob: -20.625
    7. ')add' → logprob: -21.25
    8. '_add' → logprob: -22.125
    9. 'ad' → logprob: -22.375
    10. '   ' → logprob: -22.5

Token 378: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005218821112066507
    2. 'b' → logprob: -5.880218982696533
    3. '(i' → logprob: -6.380218982696533
    4. '((' → logprob: -7.630218982696533
    5. '(x' → logprob: -8.505218505859375
    6. '(' → logprob: -11.005218505859375
    7. '(y' → logprob: -11.880218505859375
    8. '(a' → logprob: -13.005218505859375
    9. 'i' → logprob: -13.505218505859375
    10. ' b' → logprob: -15.755218505859375

Token 379: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4881879400927573e-05
    2. ' )' → logprob: -11.000035285949707
    3. ')
' → logprob: -11.250035285949707
    4. '   ' → logprob: -13.375035285949707
    5. '<|end|>' → logprob: -13.750035285949707
    6. '       ' → logprob: -14.000035285949707
    7. ')}' → logprob: -14.500035285949707
    8. '))' → logprob: -15.500035285949707
    9. '())' → logprob: -16.00003433227539
    10. ')}}' → logprob: -16.12503433227539

Token 380: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' coordinates' (ID: 27933)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.11550631374120712
    2. '.update' → logprob: -2.740506410598755
    3. '.' → logprob: -3.115506410598755
    4. '.setdefault' → logprob: -9.615506172180176
    5. '.union' → logprob: -10.115506172180176
    6. ' .' → logprob: -10.115506172180176
    7. '.insert' → logprob: -11.490506172180176
    8. ').' → logprob: -11.740506172180176
    9. '.append' → logprob: -12.115506172180176
    10. ' ' → logprob: -12.615506172180176

Token 383: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.13349682092666626
    2. '((' → logprob: -2.5084967613220215
    3. '(b' → logprob: -3.2584967613220215
    4. '(x' → logprob: -5.7584967613220215
    5. '(' → logprob: -6.5084967613220215
    6. '(ab' → logprob: -8.50849723815918
    7. '(i' → logprob: -9.00849723815918
    8. 'a' → logprob: -9.25849723815918
    9. 'b' → logprob: -10.13349723815918
    10. '(abs' → logprob: -12.38349723815918

Token 384: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.625004768371582
    5. ')}' → logprob: -16.0000057220459
    6. '))' → logprob: -17.0000057220459
    7. '())' → logprob: -17.1250057220459
    8. '}' → logprob: -17.7500057220459
    9. ')}}' → logprob: -17.8750057220459
    10. '),' → logprob: -18.3750057220459

Token 385: 'cor' (ID: 11111)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '_dict' (ID: 11295)
  Prédit: 'din'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'din' → logprob: -0.5298259854316711
    2. 'd' → logprob: -0.9048259854316711
    3. 'dict' → logprob: -5.9048261642456055
    4. 'ordinates' → logprob: -7.1548261642456055
    5. 'rect' → logprob: -7.2798261642456055
    6. 'ds' → logprob: -7.5298261642456055
    7. '#' → logprob: -7.5298261642456055
    8. 'di' → logprob: -8.154826164245605
    9. '```' → logprob: -8.279826164245605
    10. 'rd' → logprob: -8.404826164245605

Token 387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5234746336936951
    2. ' =' → logprob: -0.8984746336936951
    3. '={}' → logprob: -8.77347469329834
    4. 's' → logprob: -10.14847469329834
    5. '<|end|>' → logprob: -10.27347469329834
    6. ',' → logprob: -10.89847469329834
    7. '={'' → logprob: -11.14847469329834
    8. '=create' → logprob: -11.14847469329834
    9. '=[]' → logprob: -11.39847469329834
    10. '={"' → logprob: -11.52347469329834

Token 388: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10270284861326218
    2. '{}' → logprob: -2.3527028560638428
    3. 'default' → logprob: -6.227702617645264
    4. 'dict' → logprob: -7.727702617645264
    5. ' {' → logprob: -10.227703094482422
    6. '{x' → logprob: -11.352703094482422
    7. ' defaultdict' → logprob: -11.727703094482422
    8. '{id' → logprob: -11.977703094482422
    9. '{}
' → logprob: -12.477703094482422
    10. ' {}' → logprob: -13.227703094482422

Token 389: 'b' (ID: 65)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6470992565155029
    2. 'b' → logprob: -1.272099256515503
    3. 'v' → logprob: -2.272099256515503
    4. 'x' → logprob: -2.647099256515503
    5. 'coord' → logprob: -4.522099494934082
    6. 'k' → logprob: -5.522099494934082
    7. 'y' → logprob: -6.147099494934082
    8. 'val' → logprob: -6.147099494934082
    9. 'co' → logprob: -6.272099494934082
    10. 'cor' → logprob: -7.897099494934082

Token 390: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00199917727150023
    2. ':b' → logprob: -6.376999378204346
    3. ':i' → logprob: -8.376998901367188
    4. 'b' → logprob: -10.376998901367188
    5. ':index' → logprob: -11.626998901367188
    6. ' :' → logprob: -11.876998901367188
    7. ':list' → logprob: -12.251998901367188
    8. ':k' → logprob: -12.501998901367188
    9. ':value' → logprob: -12.876998901367188
    10. 'a' → logprob: -13.376998901367188

Token 391: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.033320944756269455
    2. 'idx' → logprob: -3.533320903778076
    3. ' i' → logprob: -6.033320903778076
    4. ' idx' → logprob: -7.283320903778076
    5. '0' → logprob: -8.533321380615234
    6. 'index' → logprob: -8.783321380615234
    7. 'b' → logprob: -9.658321380615234
    8. 'bis' → logprob: -10.158321380615234
    9. 'ix' → logprob: -11.408321380615234
    10. ' ' → logprob: -12.158321380615234

Token 392: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08281657099723816
    2. ' for' → logprob: -2.7078166007995605
    3. ' +' → logprob: -4.7078166007995605
    4. 'for' → logprob: -5.7078166007995605
    5. 'n' → logprob: -7.8328166007995605
    6. '+b' → logprob: -10.332816123962402
    7. 'b' → logprob: -12.207816123962402
    8. 'nt' → logprob: -12.332816123962402
    9. ' ' → logprob: -12.332816123962402
    10. 'x' → logprob: -12.707816123962402

Token 393: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001657565007917583
    2. ' i' → logprob: -8.750165939331055
    3. 'b' → logprob: -12.375165939331055
    4. ',' → logprob: -13.000165939331055
    5. ',i' → logprob: -14.125165939331055
    6. '
' → logprob: -17.250165939331055
    7. '	i' → logprob: -17.625165939331055
    8. ' ' → logprob: -18.500165939331055
    9. 'cor' → logprob: -18.625165939331055
    10. ')i' → logprob: -18.875165939331055

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6392597556114197
    2. 'b' → logprob: -1.0142598152160645
    3. 'enumer' → logprob: -2.7642598152160645
    4. ',b' → logprob: -3.5142598152160645
    5. 'i' → logprob: -4.5142598152160645
    6. ',i' → logprob: -6.2642598152160645
    7. 'range' → logprob: -6.2642598152160645
    8. 'coordinates' → logprob: -7.1392598152160645
    9. ' b' → logprob: -7.3892598152160645
    10. 'in' → logprob: -8.014259338378906

Token 395: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002615742268972099
    2. ' b' → logprob: -8.250261306762695
    3. 'enumer' → logprob: -15.375261306762695
    4. '(b' → logprob: -16.500261306762695
    5. '	b' → logprob: -18.000261306762695
    6. ')b' → logprob: -19.000261306762695
    7. '
' → logprob: -19.125261306762695
    8. ',b' → logprob: -19.250261306762695
    9. ' enumerate' → logprob: -20.000261306762695
    10. '_b' → logprob: -20.125261306762695

Token 396: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869019150733948
    2. 'in' → logprob: -1.13690185546875
    3. 'enumer' → logprob: -10.63690185546875
    4. ',' → logprob: -12.76190185546875
    5. 'b' → logprob: -13.76190185546875
    6. 'n' → logprob: -14.13690185546875
    7. ' ' → logprob: -14.63690185546875
    8. '
' → logprob: -15.26190185546875
    9. ')' → logprob: -15.38690185546875
    10. '```' → logprob: -15.88690185546875

Token 397: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00091217877343297
    2. ' enumerate' → logprob: -7.000912189483643
    3. '
' → logprob: -14.625911712646484
    4. 'enum' → logprob: -15.500911712646484
    5. '```' → logprob: -16.625911712646484
    6. 'en' → logprob: -17.250911712646484
    7. 'in' → logprob: -18.625911712646484
    8. 'b' → logprob: -19.625911712646484
    9. '

' → logprob: -20.000911712646484
    10. '
' → logprob: -20.000911712646484

Token 398: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.004082909319549799
    2. 'sorted' → logprob: -5.504082679748535
    3. '(co' → logprob: -12.504082679748535
    4. '(' → logprob: -14.629082679748535
    5. 'coordinates' → logprob: -16.00408363342285
    6. ' sorted' → logprob: -16.12908363342285
    7. 'co' → logprob: -19.75408363342285
    8. '
' → logprob: -19.75408363342285
    9. '(sort' → logprob: -20.37908363342285
    10. '(range' → logprob: -20.50408363342285

Token 399: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.0007104054093360901
    2. 'coordinates' → logprob: -7.250710487365723
    3. 'co' → logprob: -15.125710487365723
    4. '```' → logprob: -16.375709533691406
    5. ')' → logprob: -16.625709533691406
    6. '(list' → logprob: -16.875709533691406
    7. '   ' → logprob: -17.625709533691406
    8. ' coordinates' → logprob: -17.750709533691406
    9. '.coordinates' → logprob: -18.125709533691406
    10. '
' → logprob: -18.125709533691406

Token 400: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -4.4418171455617994e-05
    2. 'ordin' → logprob: -11.000044822692871
    3. 'coordinates' → logprob: -11.375044822692871
    4. 'rd' → logprob: -11.500044822692871
    5. 'ordi' → logprob: -13.500044822692871
    6. 'ord' → logprob: -13.500044822692871
    7. 'or' → logprob: -13.625044822692871
    8. 'ordinate' → logprob: -13.875044822692871
    9. 'ordan' → logprob: -15.000044822692871
    10. 'o' → logprob: -15.750044822692871

Token 401: '),' (ID: 936)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.0019080507336184382
    2. '))' → logprob: -6.376907825469971
    3. ',' → logprob: -9.126908302307129
    4. ')' → logprob: -10.126908302307129
    5. ')}}' → logprob: -10.751908302307129
    6. '}' → logprob: -11.001908302307129
    7. '})' → logprob: -12.251908302307129
    8. ');}' → logprob: -12.251908302307129
    9. ')}
' → logprob: -12.501908302307129
    10. ' )' → logprob: -12.876908302307129

Token 402: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.13155783712863922
    2. '1' → logprob: -2.1315579414367676
    3. ' start' → logprob: -5.506557941436768
    4. '0' → logprob: -8.50655746459961
    5. ' ' → logprob: -8.63155746459961
    6. 'reverse' → logprob: -8.75655746459961
    7. 'key' → logprob: -11.13155746459961
    8. ')' → logprob: -13.25655746459961
    9. ',start' → logprob: -14.50655746459961
    10. '2' → logprob: -14.63155746459961

Token 403: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.4391956685576588e-05
    2. '(' → logprob: -10.875024795532227
    3. '1' → logprob: -12.125024795532227
    4. '=
' → logprob: -17.000024795532227
    5. '=(' → logprob: -19.625024795532227
    6. '(
' → logprob: -19.875024795532227
    7. 'def' → logprob: -20.000024795532227
    8. '=True' → logprob: -20.125024795532227
    9. ' =' → logprob: -20.250024795532227
    10. '   ' → logprob: -20.500024795532227

Token 404: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027802068507298827
    2. '0' → logprob: -8.25027847290039
    3. '2' → logprob: -11.75027847290039
    4. ' ' → logprob: -11.75027847290039
    5. '   ' → logprob: -14.25027847290039
    6. '
' → logprob: -16.25027847290039
    7. '```' → logprob: -16.50027847290039
    8. '=' → logprob: -16.56277847290039
    9. ')' → logprob: -17.31277847290039
    10. '3' → logprob: -17.68777847290039

Token 405: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.000500370399095118
    2. ')' → logprob: -7.625500202178955
    3. '}' → logprob: -11.750500679016113
    4. ' )' → logprob: -12.625500679016113
    5. ');}' → logprob: -14.500500679016113
    6. '))' → logprob: -15.125500679016113
    7. ')}}' → logprob: -15.875500679016113
    8. '})' → logprob: -16.000499725341797
    9. ')}
' → logprob: -16.875499725341797
    10. ')]' → logprob: -17.375499725341797

Token 406: 'cd' (ID: 8301)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20426027476787567
    2. ' for' → logprob: -2.0792603492736816
    3. '   ' → logprob: -3.8292603492736816
    4. '       ' → logprob: -3.8292603492736816
    5. 'pos' → logprob: -5.079260349273682
    6. 'i' → logprob: -5.704260349273682
    7. 'x' → logprob: -6.954260349273682
    8. '
' → logprob: -7.204260349273682
    9. '           ' → logprob: -7.329260349273682
    10. 'max' → logprob: -7.954260349273682

Token 407: 'g' (ID: 70)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.09962188452482224
    2. '_dict' → logprob: -2.8496217727661133
    3. ' =' → logprob: -3.9746217727661133
    4. 'ic' → logprob: -5.099621772766113
    5. 'ct' → logprob: -6.099621772766113
    6. 'f' → logprob: -6.349621772766113
    7. 'dict' → logprob: -6.349621772766113
    8. 'd' → logprob: -7.099621772766113
    9. 'c' → logprob: -7.349621772766113
    10. '=' → logprob: -7.474621772766113

Token 408: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3221651017665863
    2. '=' → logprob: -1.3221651315689087
    3. ' ' → logprob: -5.947165012359619
    4. '.setdefault' → logprob: -6.447165012359619
    5. '_dict' → logprob: -6.947165012359619
    6. '<|end|>' → logprob: -7.322165012359619
    7. '[' → logprob: -7.572165012359619
    8. '={'' → logprob: -8.197165489196777
    9. '={}' → logprob: -8.197165489196777
    10. 's' → logprob: -8.322165489196777

Token 409: ' cor' (ID: 1907)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.08623117208480835
    2. '[' → logprob: -3.461231231689453
    3. 'Bit' → logprob: -3.586231231689453
    4. '{' → logprob: -3.961231231689453
    5. ' defaultdict' → logprob: -6.086231231689453
    6. ' [' → logprob: -7.836231231689453
    7. '[[' → logprob: -8.086231231689453
    8. ' Bit' → logprob: -8.086231231689453
    9. 'len' → logprob: -8.211231231689453
    10. 'bit' → logprob: -8.711231231689453

Token 410: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -1.0445148944854736
    2. 'dict' → logprob: -1.0445148944854736
    3. 't' → logprob: -2.1695148944854736
    4. 'Dict' → logprob: -2.4195148944854736
    5. 'default' → logprob: -3.4195148944854736
    6. 'ef' → logprob: -3.9195148944854736
    7. 'ict' → logprob: -4.2945146560668945
    8. '=' → logprob: -5.2945146560668945
    9. 'f' → logprob: -5.6695146560668945
    10. '[' → logprob: -5.7945146560668945

Token 411: '.get' (ID: 775)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8079707622528076
    2. '(co' → logprob: -1.0579707622528076
    3. '(ab' → logprob: -2.5579707622528076
    4. '(b' → logprob: -2.8079707622528076
    5. '(a' → logprob: -3.5579707622528076
    6. '<|end|>' → logprob: -3.6829707622528076
    7. '(max' → logprob: -4.807971000671387
    8. '(min' → logprob: -5.682971000671387
    9. '(c' → logprob: -7.307971000671387
    10. 'coordinates' → logprob: -7.682971000671387

Token 413: 'MOD' (ID: 52135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1782529205083847
    2. 'res' → logprob: -3.303252935409546
    3. 'bit' → logprob: -4.178252696990967
    4. 'ans' → logprob: -4.303252696990967
    5. 'result' → logprob: -4.553252696990967
    6. 'pos' → logprob: -4.928252696990967
    7. 'def' → logprob: -5.178252696990967
    8. 'x' → logprob: -5.303252696990967
    9. 'count' → logprob: -5.428252696990967
    10. 'size' → logprob: -5.428252696990967

Token 414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696076929569244
    2. '=' → logprob: -2.1269607543945312
    3. ',' → logprob: -10.626960754394531
    4. ' =
' → logprob: -12.501960754394531
    5. ':' → logprob: -13.251960754394531
    6. ')' → logprob: -13.376960754394531
    7. ' ' → logprob: -15.001960754394531
    8. ' =)' → logprob: -15.501960754394531
    9. '   ' → logprob: -15.751960754394531
    10. '[' → logprob: -16.00196075439453

Token 415: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16733668744564056
    2. '998' → logprob: -1.9173367023468018
    3. '100' → logprob: -5.042336463928223
    4. ' ' → logprob: -7.417336463928223
    5. '1' → logprob: -10.667336463928223
    6. '999' → logprob: -12.917336463928223
    7. '2' → logprob: -14.917336463928223
    8. 'int' → logprob: -15.292336463928223
    9. '123' → logprob: -15.417336463928223
    10. '109' → logprob: -15.417336463928223

Token 416: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.39655235409736633
    2. '998' → logprob: -1.146552324295044
    3. '100' → logprob: -4.646552562713623
    4. '1' → logprob: -11.021552085876465
    5. '999' → logprob: -11.396552085876465
    6. ' ' → logprob: -13.021552085876465
    7. '2' → logprob: -13.146552085876465
    8. '200' → logprob: -13.396552085876465
    9. '123' → logprob: -14.021552085876465
    10. 'int' → logprob: -14.146552085876465

Token 417: ' **' (ID: 6240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9618650078773499
    2. '0' → logprob: -1.336864948272705
    3. '**' → logprob: -1.586864948272705
    4. '^' → logprob: -3.336864948272705
    5. '#' → logprob: -4.586864948272705
    6. 'n' → logprob: -4.711864948272705
    7. '6' → logprob: -4.711864948272705
    8. '+' → logprob: -4.711864948272705
    9. ')' → logprob: -4.836864948272705
    10. ' 
' → logprob: -4.961864948272705

Token 418: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.5
    3. ' ' → logprob: -18.875
    4. '18' → logprob: -19.125
    5. '+' → logprob: -19.25
    6. '```' → logprob: -20.375
    7. '19' → logprob: -20.75
    8. '10' → logprob: -21.375
    9. '15' → logprob: -21.375
    10. '   ' → logprob: -22.375

Token 419: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.7432603272027336e-06
    2. '09' → logprob: -14.000001907348633
    3. '18' → logprob: -15.125001907348633
    4. '+' → logprob: -15.125001907348633
    5. '```' → logprob: -16.750001907348633
    6. '15' → logprob: -17.250001907348633
    7. '6' → logprob: -17.375001907348633
    8. '10' → logprob: -17.375001907348633
    9. '99' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.625001907348633

Token 420: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005441978108137846
    2. ' +' → logprob: -5.505442142486572
    3. '7' → logprob: -6.630442142486572
    4. '+
' → logprob: -10.255441665649414
    5. ' +
' → logprob: -13.130441665649414
    6. ' ' → logprob: -13.505441665649414
    7. '```' → logprob: -13.755441665649414
    8. '＋' → logprob: -14.005441665649414
    9. '
' → logprob: -14.692941665649414
    10. ' plus' → logprob: -15.442941665649414

Token 421: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -15.375
    3. '9' → logprob: -18.875
    4. '```' → logprob: -19.5
    5. ' ' → logprob: -19.625
    6. '07' → logprob: -20.625
    7. '   ' → logprob: -20.875
    8. '

' → logprob: -21.375
    9. ' +' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 422: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.625
    3. '9' → logprob: -18.625
    4. ' ' → logprob: -18.875
    5. '```' → logprob: -19.625
    6. '07' → logprob: -20.375
    7. '
' → logprob: -21.25
    8. '

' → logprob: -21.375
    9. '   ' → logprob: -21.5
    10. '７' → logprob: -21.875

Token 423: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.010766588151454926
    2. 'class' → logprob: -5.510766506195068
    3. ' bit' → logprob: -6.010766506195068
    4. '
' → logprob: -6.260766506195068
    5. 'bits' → logprob: -8.260766983032227
    6. 'def' → logprob: -8.385766983032227
    7. 'tree' → logprob: -9.010766983032227
    8. 'b' → logprob: -9.135766983032227
    9. 'cnt' → logprob: -9.135766983032227
    10. 'BIT' → logprob: -9.135766983032227

Token 424: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.002228287048637867
    2. ' bit' → logprob: -6.752228260040283
    3. 'bits' → logprob: -9.002228736877441
    4. 'class' → logprob: -9.127228736877441
    5. 'bt' → logprob: -9.252228736877441
    6. 'def' → logprob: -9.252228736877441
    7. 'BIT' → logprob: -9.502228736877441
    8. 'b' → logprob: -9.502228736877441
    9. 'dp' → logprob: -10.252228736877441
    10. 'cnt' → logprob: -10.377228736877441

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008618239313364029
    2. '=' → logprob: -4.758618354797363
    3. ' ' → logprob: -13.508618354797363
    4. '.' → logprob: -13.883618354797363
    5. ')' → logprob: -15.008618354797363
    6. ',' → logprob: -15.258618354797363
    7. '1' → logprob: -15.383618354797363
    8. '(' → logprob: -15.633618354797363
    9. '  ' → logprob: -16.133617401123047
    10. 's' → logprob: -16.758617401123047

Token 426: ' Bit' (ID: 9422)
  Prédit: 'Bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bit' → logprob: -0.005234002135694027
    2. ' Bit' → logprob: -5.2552337646484375
    3. '(Bit' → logprob: -15.130233764648438
    4. '.Bit' → logprob: -18.880233764648438
    5. 'bit' → logprob: -19.130233764648438
    6. ' ' → logprob: -19.380233764648438
    7. 'BIT' → logprob: -19.880233764648438
    8. 'Bi' → logprob: -20.255233764648438
    9. '
' → logprob: -20.505233764648438
    10. 'Bits' → logprob: -20.630233764648438

Token 427: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0013644045684486628
    2. '(' → logprob: -7.626364231109619
    3. 'len' → logprob: -7.876364231109619
    4. '(n' → logprob: -8.251364707946777
    5. '(m' → logprob: -8.376364707946777
    6. 'm' → logprob: -14.001364707946777
    7. '<|end|>' → logprob: -14.001364707946777
    8. '[len' → logprob: -14.126364707946777
    9. '((' → logprob: -14.376364707946777
    10. '=len' → logprob: -14.751364707946777

Token 428: '(co' (ID: 41772)
  Prédit: '(co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(co' → logprob: -0.1603124737739563
    2. '(c' → logprob: -1.9103124141693115
    3. 'coordinates' → logprob: -9.66031265258789
    4. 'cor' → logprob: -10.91031265258789
    5. '(' → logprob: -13.03531265258789
    6. '(coords' → logprob: -13.53531265258789
    7. '(coord' → logprob: -13.78531265258789
    8. '(sorted' → logprob: -14.28531265258789
    9. 'co' → logprob: -15.53531265258789
    10. ' coordinates' → logprob: -15.78531265258789

Token 429: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -0.31384438276290894
    2. 'rd' → logprob: -1.5638444423675537
    3. 'r' → logprob: -2.8138444423675537
    4. 'coordinates' → logprob: -10.688844680786133
    5. 'or' → logprob: -11.063844680786133
    6. 'ordin' → logprob: -11.813844680786133
    7. 'ordinate' → logprob: -12.438844680786133
    8. 'ord' → logprob: -12.563844680786133
    9. 'cor' → logprob: -12.813844680786133
    10. '

' → logprob: -13.813844680786133

Token 430: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007670156192034483
    2. '))' → logprob: -5.132669925689697
    3. ',' → logprob: -7.007669925689697
    4. '+' → logprob: -7.507669925689697
    5. ' +' → logprob: -8.882670402526855
    6. '),' → logprob: -9.007670402526855
    7. ')))' → logprob: -12.007670402526855
    8. ' )' → logprob: -12.132670402526855
    9. ')+' → logprob: -12.632670402526855
    10. ',)' → logprob: -12.882670402526855

Token 431: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06782198697328568
    2. ',' → logprob: -2.817821979522705
    3. '+' → logprob: -5.442821979522705
    4. ' +' → logprob: -7.442821979522705
    5. '))' → logprob: -7.567821979522705
    6. '),' → logprob: -8.192822456359863
    7. ',)' → logprob: -10.317822456359863
    8. ')
' → logprob: -10.692822456359863
    9. ' )' → logprob: -11.192822456359863
    10. ' ,' → logprob: -11.567822456359863

Token 432: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23395201563835144
    2. '3' → logprob: -1.8589520454406738
    3. '5' → logprob: -3.358952045440674
    4. '4' → logprob: -4.733952045440674
    5. '10' → logprob: -4.858952045440674
    6. ' ' → logprob: -6.858952045440674
    7. '1' → logprob: -7.983952045440674
    8. 'len' → logprob: -11.108951568603516
    9. '100' → logprob: -11.608951568603516
    10. '7' → logprob: -11.733951568603516

Token 433: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6692551374435425
    2. '5' → logprob: -1.5442551374435425
    3. '3' → logprob: -1.9192551374435425
    4. '10' → logprob: -2.294255256652832
    5. '4' → logprob: -3.669255256652832
    6. '1' → logprob: -7.169255256652832
    7. '100' → logprob: -8.294255256652832
    8. '20' → logprob: -9.419255256652832
    9. '50' → logprob: -9.544255256652832
    10. ' ' → logprob: -9.669255256652832

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009761521592736244
    2. ')' → logprob: -4.634761333465576
    3. ',)' → logprob: -13.009761810302734
    4. ' ,' → logprob: -13.509761810302734
    5. ',
' → logprob: -14.384761810302734
    6. '),' → logprob: -14.509761810302734
    7. ')
' → logprob: -14.759761810302734
    8. '```' → logprob: -15.759761810302734
    9. '1' → logprob: -16.259761810302734
    10. '0' → logprob: -17.134761810302734

Token 435: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.836499985889532e-05
    2. ' MOD' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.500059127807617
    4. '_MOD' → logprob: -19.500059127807617
    5. '10' → logprob: -19.625059127807617
    6. 'mod' → logprob: -20.500059127807617
    7. ' ' → logprob: -20.875059127807617
    8. '.MOD' → logprob: -21.625059127807617
    9. 'Mod' → logprob: -21.750059127807617
    10. 'MO' → logprob: -22.375059127807617

Token 436: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -14.750005722045898
    4. ')

' → logprob: -17.1250057220459
    5. ')
' → logprob: -17.2500057220459
    6. '),' → logprob: -17.6250057220459
    7. ')`' → logprob: -17.7500057220459
    8. ')add' → logprob: -18.2500057220459
    9. ')#' → logprob: -18.3750057220459
    10. '<|end|>' → logprob: -18.6250057220459

Token 437: 'bit' (ID: 6516)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1583222597837448
    2. '               ' → logprob: -2.158322334289551
    3. '       ' → logprob: -3.658322334289551
    4. '            ' → logprob: -6.658322334289551
    5. '   ' → logprob: -6.783322334289551
    6. '          ' → logprob: -7.033322334289551
    7. '        ' → logprob: -7.658322334289551
    8. '                ' → logprob: -8.15832233428955
    9. 'for' → logprob: -8.40832233428955
    10. '              ' → logprob: -8.40832233428955

Token 438: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.437205970287323
    2. '.add' → logprob: -1.6872060298919678
    3. '.lower' → logprob: -1.8122060298919678
    4. '<|end|>' → logprob: -5.937205791473389
    5. '.bit' → logprob: -6.562205791473389
    6. '.debug' → logprob: -6.812205791473389
    7. '<|end|>' → logprob: -9.562206268310547
    8. ' .' → logprob: -9.812206268310547
    9. '.upper' → logprob: -9.937206268310547
    10. ' ' → logprob: -10.187206268310547

Token 439: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012530884705483913
    2. '<|end|>' → logprob: -7.501253128051758
    3. '(c' → logprob: -7.626253128051758
    4. '(co' → logprob: -8.876253128051758
    5. '1' → logprob: -10.501253128051758
    6. '(
' → logprob: -10.876253128051758
    7. '0' → logprob: -12.001253128051758
    8. '2' → logprob: -12.626253128051758
    9. '(ab' → logprob: -12.876253128051758
    10. '(cd' → logprob: -12.876253128051758

Token 440: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24974006414413452
    2. '1' → logprob: -1.6247401237487793
    3. '0' → logprob: -4.499740123748779
    4. 'cor' → logprob: -4.624740123748779
    5. 'cd' → logprob: -6.124740123748779
    6. '3' → logprob: -8.124739646911621
    7. ' ' → logprob: -8.249739646911621
    8. ')' → logprob: -9.249739646911621
    9. ' cor' → logprob: -9.624739646911621
    10. 'len' → logprob: -9.749739646911621

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ')' → logprob: -12.125016212463379
    3. '<|end|>' → logprob: -12.375016212463379
    4. '1' → logprob: -12.500016212463379
    5. ' ,' → logprob: -14.000016212463379
    6. '0' → logprob: -14.125016212463379
    7. ',
' → logprob: -14.875016212463379
    8. '2' → logprob: -15.500016212463379
    9. ',b' → logprob: -15.500016212463379
    10. ',)' → logprob: -15.625016212463379

Token 442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -10.500075340270996
    3. '0' → logprob: -10.625075340270996
    4. 'n' → logprob: -12.125075340270996
    5. 'len' → logprob: -12.625075340270996
    6. '2' → logprob: -12.875075340270996
    7. 'pow' → logprob: -13.000075340270996
    8. ')' → logprob: -13.125075340270996
    9. 'm' → logprob: -13.625075340270996
    10. '   ' → logprob: -13.750075340270996

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036382899270392954
    2. ' ' → logprob: -9.000364303588867
    3. '0' → logprob: -9.625364303588867
    4. 'n' → logprob: -9.750364303588867
    5. '2' → logprob: -10.625364303588867
    6. 'len' → logprob: -10.875364303588867
    7. 'pow' → logprob: -11.125364303588867
    8. 'm' → logprob: -11.625364303588867
    9. '-' → logprob: -12.000364303588867
    10. '3' → logprob: -12.125364303588867

Token 444: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.875008583068848
    4. ')#' → logprob: -16.62500762939453
    5. '),' → logprob: -17.75000762939453
    6. '))' → logprob: -18.12500762939453
    7. '+' → logprob: -18.12500762939453
    8. ')

' → logprob: -18.25000762939453
    9. ')`' → logprob: -18.37500762939453
    10. ')
' → logprob: -19.25000762939453

Token 445: 'for' (ID: 1938)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35577085614204407
    2. '           ' → logprob: -1.7307708263397217
    3. 'for' → logprob: -2.2307708263397217
    4. '   ' → logprob: -4.730771064758301
    5. '               ' → logprob: -5.980771064758301
    6. ' for' → logprob: -6.230771064758301
    7. '```' → logprob: -7.605771064758301
    8. '        ' → logprob: -7.855771064758301
    9. 'i' → logprob: -8.8557710647583
    10. '	for' → logprob: -9.3557710647583

Token 446: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016420478001236916
    2. ' a' → logprob: -4.141420364379883
    3. 'b' → logprob: -8.516420364379883
    4. '(a' → logprob: -9.391420364379883
    5. 'key' → logprob: -10.766420364379883
    6. ' b' → logprob: -10.891420364379883
    7. '_a' → logprob: -11.016420364379883
    8. 'i' → logprob: -11.766420364379883
    9. ' key' → logprob: -12.266420364379883
    10. ' (' → logprob: -12.266420364379883

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29603713750839233
    2. 'in' → logprob: -1.421037197113037
    3. ',' → logprob: -4.296037197113037
    4. 'a' → logprob: -7.296037197113037
    5. ',a' → logprob: -9.171036720275879
    6. ',b' → logprob: -9.296036720275879
    7. 'sorted' → logprob: -9.421036720275879
    8. 'b' → logprob: -9.671036720275879
    9. 's' → logprob: -10.046036720275879
    10. ',in' → logprob: -11.046036720275879

Token 448: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0008497710223309696
    2. 'ab' → logprob: -7.125849723815918
    3. ' sorted' → logprob: -10.250849723815918
    4. 'range' → logprob: -11.625849723815918
    5. 'a' → logprob: -14.875849723815918
    6. '(sorted' → logprob: -15.125849723815918
    7. 'list' → logprob: -15.250849723815918
    8. '   ' → logprob: -16.500850677490234
    9. 'cor' → logprob: -17.000850677490234
    10. ' ab' → logprob: -17.500850677490234

Token 449: '(ab' (ID: 115191)
  Prédit: '(ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.00012356207298580557
    2. 'ab' → logprob: -9.000123977661133
    3. '(a' → logprob: -15.875123977661133
    4. '_ab' → logprob: -19.125123977661133
    5. '(
' → logprob: -19.375123977661133
    6. '#ab' → logprob: -19.625123977661133
    7. '(list' → logprob: -19.875123977661133
    8. '(abs' → logprob: -20.125123977661133
    9. ' ab' → logprob: -20.875123977661133
    10. ''ab' → logprob: -21.750123977661133

Token 450: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03660019859671593
    2. '):
' → logprob: -4.036600112915039
    3. '.keys' → logprob: -4.036600112915039
    4. ')' → logprob: -7.911600112915039
    5. '):
' → logprob: -8.661600112915039
    6. ')):' → logprob: -10.536600112915039
    7. '):

' → logprob: -11.411600112915039
    8. ']):' → logprob: -11.661600112915039
    9. ':' → logprob: -12.036600112915039
    10. '[]):' → logprob: -12.286600112915039

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01831265166401863
    2. ' for' → logprob: -4.268312454223633
    3. 'for' → logprob: -5.518312454223633
    4. '    
' → logprob: -9.393312454223633
    5. ' ' → logprob: -11.143312454223633
    6. ',' → logprob: -11.893312454223633
    7. 'b' → logprob: -12.518312454223633
    8. '   ' → logprob: -13.143312454223633
    9. 'count' → logprob: -13.268312454223633
    10. '```' → logprob: -13.393312454223633

Token 452: ' b' (ID: 287)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.989340603351593
    2. 'tmp' → logprob: -1.4893405437469482
    3. 'cur' → logprob: -2.6143405437469482
    4. 'temp' → logprob: -2.8643405437469482
    5. 's' → logprob: -3.3643405437469482
    6. 'sum' → logprob: -3.4893405437469482
    7. 'for' → logprob: -3.8643405437469482
    8. 'res' → logprob: -4.364340782165527
    9. 'c' → logprob: -4.489340782165527
    10. 'cnt' → logprob: -4.614340782165527

Token 453: 'bb' (ID: 10029)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19818682968616486
    2. '_set' → logprob: -2.4481868743896484
    3. 'set' → logprob: -2.9481868743896484
    4. '_list' → logprob: -3.9481868743896484
    5. '_values' → logprob: -4.698186874389648
    6. ' =' → logprob: -5.323186874389648
    7. '=' → logprob: -6.448186874389648
    8. 'values' → logprob: -6.698186874389648
    9. 'list' → logprob: -6.698186874389648
    10. 'for' → logprob: -6.948186874389648

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760811567306519
    2. '=' → logprob: -0.8260811567306519
    3. 's' → logprob: -10.326081275939941
    4. '   ' → logprob: -10.701081275939941
    5. ' in' → logprob: -10.826081275939941
    6. 'sorted' → logprob: -10.951081275939941
    7. ':' → logprob: -11.701081275939941
    8. 'for' → logprob: -11.951081275939941
    9. ' ' → logprob: -12.326081275939941
    10. '=set' → logprob: -12.451081275939941

Token 455: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.029336383566260338
    2. '[' → logprob: -4.154336452484131
    3. '[]' → logprob: -5.279336452484131
    4. 'list' → logprob: -5.904336452484131
    5. 'ab' → logprob: -5.904336452484131
    6. '[]
' → logprob: -6.279336452484131
    7. ' sorted' → logprob: -8.404335975646973
    8. '[list' → logprob: -8.654335975646973
    9. 'default' → logprob: -9.529335975646973
    10. '[(' → logprob: -9.779335975646973

Token 456: '(map' (ID: 16946)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.0014123775763437152
    2. 'ab' → logprob: -7.001412391662598
    3. '(list' → logprob: -7.626412391662598
    4. 'list' → logprob: -11.251412391662598
    5. '(b' → logprob: -15.751412391662598
    6. '#ab' → logprob: -16.12641143798828
    7. '([' → logprob: -16.50141143798828
    8. '(
' → logprob: -17.00141143798828
    9. '_ab' → logprob: -17.12641143798828
    10. '((' → logprob: -17.50141143798828

Token 457: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.35281750559806824
    2. '(ab' → logprob: -1.2278175354003906
    3. '(cd' → logprob: -6.227817535400391
    4. 'ab' → logprob: -6.352817535400391
    5. 'cd' → logprob: -7.602817535400391
    6. 'cor' → logprob: -9.85281753540039
    7. '(lambda' → logprob: -10.72781753540039
    8. '(b' → logprob: -11.35281753540039
    9. '(' → logprob: -11.35281753540039
    10. 'cdf' → logprob: -11.47781753540039

Token 458: 'dg' (ID: 49449)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.4809715151786804
    2. 'or' → logprob: -1.3559715747833252
    3. 'd' → logprob: -2.355971574783325
    4. 'cor' → logprob: -4.605971336364746
    5. 'cd' → logprob: -4.855971336364746
    6. '(ab' → logprob: -5.480971336364746
    7. 'od' → logprob: -7.105971336364746
    8. '   ' → logprob: -7.355971336364746
    9. 'b' → logprob: -7.480971336364746
    10. ' cor' → logprob: -7.605971336364746

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04508107900619507
    2. '(ab' → logprob: -3.17008113861084
    3. '   ' → logprob: -7.17008113861084
    4. '(lambda' → logprob: -7.92008113861084
    5. ' ,' → logprob: -8.29508113861084
    6. ',b' → logprob: -8.54508113861084
    7. 'b' → logprob: -8.79508113861084
    8. '(b' → logprob: -8.79508113861084
    9. 'ab' → logprob: -9.67008113861084
    10. ',(' → logprob: -10.42008113861084

Token 460: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.0011730826226994395
    2. ' ab' → logprob: -6.75117301940918
    3. '   ' → logprob: -13.87617301940918
    4. '(ab' → logprob: -14.00117301940918
    5. '#ab' → logprob: -15.00117301940918
    6. 'list' → logprob: -15.37617301940918
    7. 'lambda' → logprob: -15.75117301940918
    8. 'abbr' → logprob: -16.37617301940918
    9. '_ab' → logprob: -16.75117301940918
    10. '
' → logprob: -16.87617301940918

Token 461: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.0868278524139896e-05
    2. '[b' → logprob: -10.12506103515625
    3. '   ' → logprob: -11.62506103515625
    4. 'a' → logprob: -11.62506103515625
    5. ')' → logprob: -14.25006103515625
    6. ')[' → logprob: -14.62506103515625
    7. '))' → logprob: -15.12506103515625
    8. '(a' → logprob: -15.37506103515625
    9. ' [' → logprob: -15.50006103515625
    10. '[' → logprob: -15.50006103515625

Token 462: ']),' (ID: 19560)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.2060960978269577
    2. '[a' → logprob: -2.2060961723327637
    3. ']))
' → logprob: -2.7060961723327637
    4. 'a' → logprob: -6.081096172332764
    5. '))' → logprob: -6.456096172332764
    6. '[b' → logprob: -6.581096172332764
    7. ')))' → logprob: -6.706096172332764
    8. ']),' → logprob: -7.331096172332764
    9. '(a' → logprob: -7.331096172332764
    10. '   ' → logprob: -8.081095695495605

Token 463: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.07703916728496552
    2. ' reverse' → logprob: -2.9520392417907715
    3. 'key' → logprob: -4.3270392417907715
    4. ' key' → logprob: -5.4520392417907715
    5. ')' → logprob: -5.7020392417907715
    6. '   ' → logprob: -8.327038764953613
    7. 'lambda' → logprob: -8.452038764953613
    8. '()' → logprob: -9.327038764953613
    9. '       ' → logprob: -9.452038764953613
    10. ' ' → logprob: -9.827038764953613

Token 464: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00034261439577676356
    2. '=' → logprob: -8.25034236907959
    3. '(True' → logprob: -9.62534236907959
    4. 'True' → logprob: -12.00034236907959
    5. '   ' → logprob: -12.37534236907959
    6. '       ' → logprob: -13.00034236907959
    7. '()' → logprob: -13.37534236907959
    8. '```' → logprob: -15.25034236907959
    9. ' =' → logprob: -15.50034236907959
    10. '           ' → logprob: -15.87534236907959

Token 465: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6975063681602478
    2. '):
' → logprob: -1.4475064277648926
    3. ')
' → logprob: -1.8225064277648926
    4. '):' → logprob: -2.3225064277648926
    5. '   ' → logprob: -4.947506427764893
    6. '):
' → logprob: -9.822505950927734
    7. ':' → logprob: -9.822505950927734
    8. ',' → logprob: -10.197505950927734
    9. ')
' → logprob: -10.572505950927734
    10. ':
' → logprob: -10.822505950927734

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2911064624786377
    2. '
' → logprob: -2.0411064624786377
    3. ')' → logprob: -3.5411064624786377
    4. '    
' → logprob: -3.6661064624786377
    5. ',' → logprob: -4.166106224060059
    6. '):
' → logprob: -5.041106224060059
    7. '```' → logprob: -5.041106224060059
    8. '       ' → logprob: -5.166106224060059
    9. '<|end|>' → logprob: -5.291106224060059
    10. ':' → logprob: -5.541106224060059

Token 467: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05559880658984184
    2. ' for' → logprob: -2.930598735809326
    3. '   ' → logprob: -7.305598735809326
    4. '
' → logprob: -11.180599212646484
    5. '_for' → logprob: -11.430599212646484
    6. '    
' → logprob: -11.805599212646484
    7. '       ' → logprob: -12.930599212646484
    8. '	for' → logprob: -12.930599212646484
    9. 'i' → logprob: -13.680599212646484
    10. '    ' → logprob: -13.680599212646484

Token 468: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12273003160953522
    2. 'x' → logprob: -2.622730016708374
    3. 'bb' → logprob: -3.997730016708374
    4. 'c' → logprob: -5.247730255126953
    5. ' b' → logprob: -5.497730255126953
    6. 'i' → logprob: -5.497730255126953
    7. 'pos' → logprob: -5.622730255126953
    8. 'j' → logprob: -6.622730255126953
    9. 'v' → logprob: -6.622730255126953
    10. 'bbb' → logprob: -6.747730255126953

Token 469: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0386538952589035
    2. 'in' → logprob: -3.28865385055542
    3. 'b' → logprob: -8.163654327392578
    4. ' ' → logprob: -9.413654327392578
    5. 'bbb' → logprob: -9.413654327392578
    6. '   ' → logprob: -10.163654327392578
    7. ')' → logprob: -10.288654327392578
    8. ',' → logprob: -10.538654327392578
    9. '  ' → logprob: -10.538654327392578
    10. '	in' → logprob: -11.913654327392578

Token 470: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -5.4192871175473556e-05
    2. ' b' → logprob: -10.125054359436035
    3. 'bb' → logprob: -11.250054359436035
    4. 'b' → logprob: -14.000054359436035
    5. 'bbbb' → logprob: -16.62505340576172
    6. '	b' → logprob: -17.12505340576172
    7. 'range' → logprob: -17.87505340576172
    8. ' range' → logprob: -18.37505340576172
    9. '   ' → logprob: -18.62505340576172
    10. 'bbc' → logprob: -18.75005340576172

Token 471: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.3732260465621948
    2. 'bbb' → logprob: -1.3732260465621948
    3. 'b' → logprob: -2.8732261657714844
    4. '   ' → logprob: -7.248226165771484
    5. ' ' → logprob: -7.998226165771484
    6. '  ' → logprob: -8.498226165771484
    7. 'bbbb' → logprob: -9.498226165771484
    8. '...' → logprob: -9.623226165771484
    9. ':' → logprob: -10.123226165771484
    10. '+' → logprob: -10.248226165771484

Token 472: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18540585041046143
    2. ':
' → logprob: -1.8104058504104614
    3. '   ' → logprob: -5.685405731201172
    4. ',' → logprob: -6.935405731201172
    5. '):
' → logprob: -7.060405731201172
    6. '       ' → logprob: -8.310405731201172
    7. '<|end|>' → logprob: -9.560405731201172
    8. '):' → logprob: -10.685405731201172
    9. ':
' → logprob: -10.810405731201172
    10. '():
' → logprob: -11.810405731201172

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7492305040359497
    2. ' bit' → logprob: -0.9992305040359497
    3. '   ' → logprob: -2.49923038482666
    4. ' ' → logprob: -3.62423038482666
    5. 'bit' → logprob: -3.87423038482666
    6. '    ' → logprob: -4.24923038482666
    7. ' 
' → logprob: -5.49923038482666
    8. '        
' → logprob: -6.12423038482666
    9. '    
' → logprob: -6.49923038482666
    10. '<|end|>' → logprob: -6.74923038482666

Token 474: ' bit' (ID: 3546)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.460816353559494
    2. 'v' → logprob: -1.9608163833618164
    3. 'val' → logprob: -2.7108163833618164
    4. 'x' → logprob: -3.0858163833618164
    5. 'dp' → logprob: -3.0858163833618164
    6. ' s' → logprob: -3.9608163833618164
    7. 'cur' → logprob: -4.335816383361816
    8. 'sum' → logprob: -4.710816383361816
    9. 'tmp' → logprob: -5.210816383361816
    10. 'bit' (adapté à ' bit') → logprob: -5.835816383361816

Token 475: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.5175266265869141
    2. 'sum' → logprob: -1.642526626586914
    3. '_sum' → logprob: -2.017526626586914
    4. '.sum' → logprob: -3.267526626586914
    5. '.' → logprob: -4.142526626586914
    6. '_val' → logprob: -4.517526626586914
    7. '_value' → logprob: -5.142526626586914
    8. 'val' → logprob: -6.142526626586914
    9. 'add' → logprob: -6.517526626586914
    10. 'value' → logprob: -7.017526626586914

Token 476: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.787507714354433e-05
    2. '(' → logprob: -10.12504768371582
    3. '(
' → logprob: -12.37504768371582
    4. 'b' → logprob: -12.75004768371582
    5. ')b' → logprob: -15.37504768371582
    6. ',b' → logprob: -16.25004768371582
    7. ' (' → logprob: -16.75004768371582
    8. '	b' → logprob: -17.87504768371582
    9. ' b' → logprob: -18.12504768371582
    10. ')' → logprob: -18.12504768371582

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008797810296528041
    2. '-' → logprob: -7.750879764556885
    3. ',-' → logprob: -8.125880241394043
    4. ' ,' → logprob: -9.375880241394043
    5. ' -' → logprob: -10.250880241394043
    6. '   ' → logprob: -10.875880241394043
    7. '       ' → logprob: -11.625880241394043
    8. '  ' → logprob: -13.750880241394043
    9. ',b' → logprob: -14.000880241394043
    10. '           ' → logprob: -14.000880241394043

Token 478: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.03884104639291763
    2. ' bit' → logprob: -3.2888410091400146
    3. '(bit' → logprob: -7.288841247558594
    4. '-bit' → logprob: -9.288841247558594
    5. ' (' → logprob: -12.038841247558594
    6. '-' → logprob: -12.413841247558594
    7. '(' → logprob: -12.788841247558594
    8. ' -' → logprob: -13.038841247558594
    9. 'bitr' → logprob: -13.288841247558594
    10. '.bit' → logprob: -13.663841247558594

Token 479: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -13.250004768371582
    3. ').' → logprob: -13.250004768371582
    4. 'sum' → logprob: -13.750004768371582
    5. '.size' → logprob: -15.375004768371582
    6. ' .' → logprob: -16.1250057220459
    7. ',sum' → logprob: -17.0000057220459
    8. ' sum' → logprob: -17.1250057220459
    9. '	sum' → logprob: -17.3750057220459
    10. '```' → logprob: -17.6250057220459

Token 480: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.394135612528771e-05
    2. 'b' → logprob: -10.250043869018555
    3. '(' → logprob: -11.875043869018555
    4. '	b' → logprob: -14.500043869018555
    5. ')b' → logprob: -15.000043869018555
    6. ' b' → logprob: -15.125043869018555
    7. ' (' → logprob: -15.750043869018555
    8. ')' → logprob: -16.375043869018555
    9. '   ' → logprob: -16.625043869018555
    10. '(
' → logprob: -16.750043869018555

Token 481: ' -' (ID: 533)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.46534109115600586
    2. ')' → logprob: -1.5903410911560059
    3. '(b' → logprob: -1.9653410911560059
    4. '-' → logprob: -4.215341091156006
    5. ')b' → logprob: -5.215341091156006
    6. ' b' → logprob: -5.715341091156006
    7. ' -' → logprob: -6.215341091156006
    8. '(' → logprob: -6.465341091156006
    9. ')-' → logprob: -8.215341567993164
    10. '))' → logprob: -8.715341567993164

Token 482: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -10.62502670288086
    3. '   ' → logprob: -14.56252670288086
    4. ')' → logprob: -14.81252670288086
    5. '2' → logprob: -15.18752670288086
    6. '-' → logprob: -15.50002670288086
    7. '```' → logprob: -15.50002670288086
    8. 'b' → logprob: -16.43752670288086
    9. '
' → logprob: -16.93752670288086
    10. '  ' → logprob: -17.43752670288086

Token 483: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. '2' → logprob: -15.625003814697266
    4. '```' → logprob: -15.750003814697266
    5. ')' → logprob: -16.187503814697266
    6. '
' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.562503814697266
    8. '0' → logprob: -17.687503814697266
    9. '(' → logprob: -17.812503814697266
    10. '3' → logprob: -18.187503814697266

Token 484: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05520530417561531
    2. ')' → logprob: -2.9302053451538086
    3. ' ))' → logprob: -8.930205345153809
    4. '))
' → logprob: -9.055205345153809
    5. ' )' → logprob: -10.305205345153809
    6. ')
' → logprob: -11.305205345153809
    7. ')))' → logprob: -11.430205345153809
    8. ')b' → logprob: -11.680205345153809
    9. ')*' → logprob: -13.180205345153809
    10. '       ' → logprob: -13.555205345153809

Token 485: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.00029947367147542536
    2. '(' → logprob: -8.500299453735352
    3. '(sum' → logprob: -10.250299453735352
    4. '(max' → logprob: -10.625299453735352
    5. '((' → logprob: -11.125299453735352
    6. '()' → logprob: -11.750299453735352
    7. 'bit' → logprob: -12.625299453735352
    8. '(len' → logprob: -12.750299453735352
    9. '(bits' → logprob: -13.000299453735352
    10. '(b' → logprob: -14.000299453735352

Token 487: '.sum' (ID: 35381)
  Prédit: '.sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sum' → logprob: -6.301394023466855e-05
    2. '.' → logprob: -10.125062942504883
    3. ' .' → logprob: -11.125062942504883
    4. '.size' → logprob: -12.500062942504883
    5. '.lower' → logprob: -12.625062942504883
    6. ').' → logprob: -15.000062942504883
    7. 'sum' → logprob: -15.125062942504883
    8. '.tree' → logprob: -15.375062942504883
    9. '.Sum' → logprob: -15.875062942504883
    10. ' sum' → logprob: -17.375062942504883

Token 488: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.3133820593357086
    2. '(len' → logprob: -1.3133820295333862
    3. '(' → logprob: -9.938382148742676
    4. '(bits' → logprob: -10.688382148742676
    5. '(n' → logprob: -10.938382148742676
    6. 'bit' → logprob: -11.313382148742676
    7. 'len' → logprob: -11.688382148742676
    8. '((' → logprob: -12.813382148742676
    9. ')' → logprob: -12.938382148742676
    10. '(b' → logprob: -13.313382148742676

Token 489: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.002786692464724183
    2. '.bit' → logprob: -6.002786636352539
    3. 'size' → logprob: -8.502786636352539
    4. 'bit' → logprob: -9.252786636352539
    5. '.len' → logprob: -12.627786636352539
    6. ' .' → logprob: -13.252786636352539
    7. 'len' → logprob: -13.252786636352539
    8. ')' → logprob: -13.502786636352539
    9. ' bit' → logprob: -13.502786636352539
    10. '(bit' → logprob: -14.252786636352539

Token 490: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.001786563778296113
    2. ')' → logprob: -6.376786708831787
    3. '))
' → logprob: -10.001786231994629
    4. ' ))' → logprob: -10.376786231994629
    5. '()))' → logprob: -13.001786231994629
    6. '-' → logprob: -13.376786231994629
    7. ')
' → logprob: -13.376786231994629
    8. ')))' → logprob: -14.251786231994629
    9. ' -' → logprob: -14.501786231994629
    10. ' )' → logprob: -14.876786231994629


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 488
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 211
Tokens correctement prédits (top 10): 415
Précision stricte (1ère position): 40.57%
Précision adaptée (1ère position): 43.24%
Précision (top 10): 85.04%
================================================================================
