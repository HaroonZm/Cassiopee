================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import itemgetter

*N, M = map(int, input().split())
M = int(M)
A = list(map(int, input().split()))
criteria = (lambda arr, m:
    reduce(lambda acc, x: acc + int(x >= sum(arr) / (4 * m)), arr, 0))
outcome = (lambda k, m: ('Yes', 'No')[k < m])
print(outcome(criteria(A, M), M))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.2578085660934448
    2. 'partial' → logprob: -1.7578085660934448
    3. 'reduce' → logprob: -3.3828086853027344
    4. ' wraps' → logprob: -4.007808685302734
    5. 'l' → logprob: -6.757808685302734
    6. ' partial' → logprob: -7.257808685302734
    7. 'cache' → logprob: -8.382808685302734
    8. '```' → logprob: -8.632808685302734
    9. 'cached' → logprob: -9.007808685302734
    10. 'cmp' → logprob: -9.257808685302734

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0199317317456007
    2. '.' → logprob: -4.519931793212891
    3. '(lambda' → logprob: -5.019931793212891
    4. ' (' → logprob: -7.019931793212891
    5. ',' → logprob: -7.769931793212891
    6. '```' → logprob: -8.01993179321289
    7. '\' → logprob: -9.01993179321289
    8. ''' → logprob: -9.64493179321289
    9. '(
' → logprob: -9.89493179321289
    10. '`' → logprob: -10.01993179321289

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0320768803358078
    2. 'def' → logprob: -4.157076835632324
    3. '\' → logprob: -4.657076835632324
    4. ' ' → logprob: -6.032076835632324
    5. '(
' → logprob: -6.907076835632324
    6. ',' → logprob: -7.157076835632324
    7. '(lambda' → logprob: -7.907076835632324
    8. '```' → logprob: -8.282076835632324
    9. ' (' → logprob: -8.407076835632324
    10. 'd' → logprob: -8.657076835632324

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.16519209742546082
    2. ' itertools' → logprob: -2.290192127227783
    3. ' collections' → logprob: -3.915192127227783
    4. ' math' → logprob: -4.040192127227783
    5. 'operator' → logprob: -4.415192127227783
    6. 'collections' → logprob: -7.665192127227783
    7. ' typing' → logprob: -8.040191650390625
    8. 'math' → logprob: -8.165191650390625
    9. ' os' → logprob: -8.665191650390625
    10. ' ' → logprob: -9.665191650390625

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02017967775464058
    2. 'import' → logprob: -4.020179748535156
    3. '.' → logprob: -6.770179748535156
    4. ' ' → logprob: -7.270179748535156
    5. ' .' → logprob: -9.145179748535156
    6. '.import' → logprob: -9.770179748535156
    7. '	import' → logprob: -11.520179748535156
    8. '_import' → logprob: -13.145179748535156
    9. '-import' → logprob: -13.395179748535156
    10. '<|end|>' → logprob: -13.645179748535156

Token 8: ' item' (ID: 2169)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.11154454201459885
    2. ' import' → logprob: -2.486544609069824
    3. 'add' → logprob: -4.486544609069824
    4. ' mul' → logprob: -4.861544609069824
    5. ' ' → logprob: -6.361544609069824
    6. 'import' → logprob: -7.111544609069824
    7. ' item' → logprob: -7.986544609069824
    8. 'mul' → logprob: -8.111544609069824
    9. ' icon' → logprob: -10.611544609069824
    10. 'item' → logprob: -10.736544609069824

Token 9: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0025056246668100357
    2. 'get' → logprob: -6.002505779266357
    3. 'getitem' → logprob: -10.7525053024292
    4. 'gett' → logprob: -11.8775053024292
    5. 'item' → logprob: -14.1275053024292
    6. 'g' → logprob: -15.3775053024292
    7. 'attr' → logprob: -16.127506256103516
    8. '_get' → logprob: -16.127506256103516
    9. '.get' → logprob: -16.377506256103516
    10. '   ' → logprob: -16.752506256103516

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5537190437316895
    2. ',' → logprob: -1.8037190437316895
    3. '\n' → logprob: -2.0537190437316895
    4. '\' → logprob: -2.9287190437316895
    5. '(
' → logprob: -3.0537190437316895
    6. ',
' → logprob: -5.1787190437316895
    7. '.' → logprob: -5.3037190437316895
    8. '
' → logprob: -5.8037190437316895
    9. '()' → logprob: -5.8037190437316895
    10. 'newline' → logprob: -6.1787190437316895

Token 11: '*N' (ID: 107360)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5185778737068176
    2. ',' → logprob: -2.268577814102173
    3. '=' → logprob: -2.518577814102173
    4. '.' → logprob: -2.643577814102173
    5. 'def' → logprob: -3.393577814102173
    6. 'data' → logprob: -3.518577814102173
    7. '[' → logprob: -4.018578052520752
    8. '\' → logprob: -4.518578052520752
    9. '`' → logprob: -4.768578052520752
    10. '#' → logprob: -5.018578052520752

Token 12: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9858299493789673
    2. 'ext' → logprob: -1.3608299493789673
    3. 'ame' → logprob: -1.8608299493789673
    4. 'ames' → logprob: -3.1108298301696777
    5. 'a' → logprob: -3.8608298301696777
    6. 'am' → logprob: -4.110829830169678
    7. '*' → logprob: -4.235829830169678
    8. ' =' → logprob: -4.235829830169678
    9. 'items' → logprob: -4.735829830169678
    10. 'one' → logprob: -4.985829830169678

Token 13: ' M' (ID: 391)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19782792031764984
    2. '=' → logprob: -1.822827935218811
    3. ' ' → logprob: -4.6978278160095215
    4. ')' → logprob: -5.6978278160095215
    5. ',' → logprob: -6.3228278160095215
    6. 'items' → logprob: -7.3228278160095215
    7. '*' → logprob: -7.4478278160095215
    8. ' )' → logprob: -7.6978278160095215
    9. ' *' → logprob: -7.8228278160095215
    10. ' ,' → logprob: -7.9478278160095215

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2580890953540802
    2. ' =' → logprob: -1.5080890655517578
    3. ',' → logprob: -5.133089065551758
    4. ')' → logprob: -8.883089065551758
    5. '*' → logprob: -10.008089065551758
    6. '*=' → logprob: -10.883089065551758
    7. ' ' → logprob: -11.508089065551758
    8. ' ,' → logprob: -11.758089065551758
    9. ')=' → logprob: -12.508089065551758
    10. '.' → logprob: -13.133089065551758

Token 15: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22907836735248566
    2. 'map' → logprob: -1.9790784120559692
    3. ' ' → logprob: -3.3540782928466797
    4. ' input' → logprob: -4.85407829284668
    5. '0' → logprob: -4.85407829284668
    6. 'input' → logprob: -5.10407829284668
    7. '*' → logprob: -6.10407829284668
    8. '5' → logprob: -7.10407829284668
    9. 'range' → logprob: -7.10407829284668
    10. ' N' → logprob: -7.22907829284668

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06288928538560867
    2. '(' → logprob: -3.312889337539673
    3. '(lambda' → logprob: -3.812889337539673
    4. '(str' → logprob: -7.187889099121094
    5. '(input' → logprob: -7.562889099121094
    6. 'int' → logprob: -8.062889099121094
    7. '(*' → logprob: -8.312889099121094
    8. '[int' → logprob: -8.687889099121094
    9. '<|end|>' → logprob: -9.437889099121094
    10. '<int' → logprob: -9.437889099121094

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7028547525405884
    2. ')' → logprob: -1.0778547525405884
    3. '(' → logprob: -2.577854633331299
    4. ',' → logprob: -2.952854633331299
    5. 'input' → logprob: -4.202854633331299
    6. ',input' → logprob: -4.702854633331299
    7. '(N' → logprob: -6.202854633331299
    8. '(int' → logprob: -6.702854633331299
    9. '(stdin' → logprob: -6.702854633331299
    10. '(*' → logprob: -6.952854633331299

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2520909607410431
    2. 'input' → logprob: -1.5020909309387207
    3. ')' → logprob: -8.877091407775879
    4. '(input' → logprob: -11.377091407775879
    5. ' )' → logprob: -11.752091407775879
    6. ',input' → logprob: -13.752091407775879
    7. '=input' → logprob: -14.502091407775879
    8. ' (' → logprob: -15.002091407775879
    9. ' ' → logprob: -15.252091407775879
    10. '```' → logprob: -16.127090454101562

Token 19: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2973299026489258
    2. '().' → logprob: -1.4223299026489258
    3. '()' → logprob: -4.672329902648926
    4. ')' → logprob: -5.297329902648926
    5. '());' → logprob: -6.797329902648926
    6. '()),' → logprob: -8.422329902648926
    7. '()))' → logprob: -9.672329902648926
    8. '(' → logprob: -9.797329902648926
    9. '();)' → logprob: -10.047329902648926
    10. '(),' → logprob: -10.422329902648926

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00032950565218925476
    2. 'strip' → logprob: -8.375329971313477
    3. 'rstrip' → logprob: -10.250329971313477
    4. ' split' → logprob: -10.500329971313477
    5. 'read' → logprob: -10.625329971313477
    6. ')' → logprob: -12.000329971313477
    7. '(split' → logprob: -12.375329971313477
    8. '```' → logprob: -14.500329971313477
    9. 'spl' → logprob: -14.750329971313477
    10. '().' → logprob: -16.250329971313477

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20933930575847626
    2. '())' → logprob: -2.0843393802642822
    3. '))' → logprob: -2.8343393802642822
    4. '()' → logprob: -5.334339141845703
    5. '()))' → logprob: -7.209339141845703
    6. '),' → logprob: -10.209339141845703
    7. ')))' → logprob: -10.709339141845703
    8. '*)' → logprob: -10.959339141845703
    9. '(' → logprob: -11.334339141845703
    10. ')
' → logprob: -11.459339141845703

Token 22: 'M' (ID: 44)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7029873132705688
    2. ')' → logprob: -1.5779873132705688
    3. 'for' → logprob: -2.0779871940612793
    4. ',' → logprob: -3.3279871940612793
    5. '*N' → logprob: -3.9529871940612793
    6. 'items' → logprob: -4.077987194061279
    7. '<|end|>' → logprob: -4.327987194061279
    8. 'values' → logprob: -4.452987194061279
    9. 'tokens' → logprob: -4.577987194061279
    10. '`' → logprob: -4.952987194061279

Token 23: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4618208706378937
    2. ')' → logprob: -2.2118208408355713
    3. '=' → logprob: -2.7118208408355713
    4. '<|end|>' → logprob: -2.7118208408355713
    5. ' ' → logprob: -2.8368208408355713
    6. '*' → logprob: -3.5868208408355713
    7. '[' → logprob: -4.46182107925415
    8. ' =' → logprob: -4.58682107925415
    9. ' ,' → logprob: -5.21182107925415
    10. '#' → logprob: -5.71182107925415

Token 24: ' int' (ID: 677)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0827960968017578
    2. ' int' → logprob: -2.082796096801758
    3. ' min' → logprob: -2.207796096801758
    4. 'int' → logprob: -2.332796096801758
    5. 'M' → logprob: -2.832796096801758
    6. ' ' → logprob: -3.082796096801758
    7. ' sorted' → logprob: -3.082796096801758
    8. 'min' → logprob: -3.207796096801758
    9. 'sorted' → logprob: -4.082796096801758
    10. ' list' → logprob: -4.207796096801758

Token 25: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24868598580360413
    2. ')' → logprob: -2.3736860752105713
    3. '()' → logprob: -2.8736860752105713
    4. '(input' → logprob: -3.8736860752105713
    5. '('' → logprob: -4.123685836791992
    6. '(M' → logprob: -4.873685836791992
    7. '(N' → logprob: -4.998685836791992
    8. '*' → logprob: -5.623685836791992
    9. '('\' → logprob: -5.748685836791992
    10. '```' → logprob: -6.998685836791992

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021867557370569557
    2. '))' → logprob: -9.625218391418457
    3. '*' → logprob: -10.125218391418457
    4. ')
' → logprob: -10.625218391418457
    5. '*)' → logprob: -11.250218391418457
    6. '<|end|>' → logprob: -11.250218391418457
    7. '**' → logprob: -11.500218391418457
    8. ' )' → logprob: -12.000218391418457
    9. ')*' → logprob: -12.250218391418457
    10. ')**' → logprob: -12.250218391418457

Token 27: 'A' (ID: 32)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8013498187065125
    2. '<|end|>' → logprob: -1.3013498783111572
    3. ')' → logprob: -2.0513498783111572
    4. '*' → logprob: -2.5513498783111572
    5. '#' → logprob: -3.5513498783111572
    6. '
' → logprob: -4.176349639892578
    7. '=' → logprob: -5.051349639892578
    8. '[' → logprob: -5.676349639892578
    9. '*N' → logprob: -5.926349639892578
    10. '```' → logprob: -6.051349639892578

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38812318444252014
    2. '=' → logprob: -1.5131231546401978
    3. ',' → logprob: -2.3881232738494873
    4. '[' → logprob: -5.888123035430908
    5. 's' → logprob: -6.263123035430908
    6. '*' → logprob: -7.013123035430908
    7. ' ' → logprob: -7.263123035430908
    8. '<|end|>' → logprob: -7.763123035430908
    9. ')' → logprob: -8.013123512268066
    10. '.' → logprob: -8.513123512268066

Token 29: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.24075956642627716
    2. ' list' → logprob: -2.3657596111297607
    3. '[' → logprob: -3.2407596111297607
    4. '[]' → logprob: -3.6157596111297607
    5. '[list' → logprob: -3.9907596111297607
    6. ' [' → logprob: -4.365759372711182
    7. '[input' → logprob: -4.865759372711182
    8. '[int' → logprob: -5.615759372711182
    9. 'map' → logprob: -5.615759372711182
    10. '[*' → logprob: -5.865759372711182

Token 30: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48271334171295166
    2. '(map' → logprob: -0.9827133417129517
    3. '(range' → logprob: -5.482713222503662
    4. '<|end|>' → logprob: -6.732713222503662
    5. '(input' → logprob: -6.982713222503662
    6. '(filter' → logprob: -7.232713222503662
    7. '(int' → logprob: -7.982713222503662
    8. '(item' → logprob: -7.982713222503662
    9. '()' → logprob: -8.23271369934082
    10. '(eval' → logprob: -9.48271369934082

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010875897714868188
    2. '(' → logprob: -7.001087665557861
    3. 'int' → logprob: -8.876087188720703
    4. '<int' → logprob: -11.126087188720703
    5. '[int' → logprob: -11.751087188720703
    6. '(input' → logprob: -12.501087188720703
    7. '=int' → logprob: -13.126087188720703
    8. ',int' → logprob: -13.626087188720703
    9. '<|end|>' → logprob: -13.626087188720703
    10. '(lambda' → logprob: -13.751087188720703

Token 32: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.251257985830307
    2. ',input' → logprob: -2.25125789642334
    3. '(' → logprob: -2.62625789642334
    4. ',' → logprob: -3.12625789642334
    5. 'input' → logprob: -7.50125789642334
    6. ' ,' → logprob: -9.75125789642334
    7. ' (' → logprob: -10.87625789642334
    8. ')' → logprob: -11.50125789642334
    9. '(),' → logprob: -11.75125789642334
    10. ' input' → logprob: -11.87625789642334

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11285137385129929
    2. ' input' → logprob: -2.23785138130188
    3. '(input' → logprob: -11.2378511428833
    4. ',input' → logprob: -12.3628511428833
    5. ' ' → logprob: -12.7378511428833
    6. ')' → logprob: -12.7378511428833
    7. '=input' → logprob: -12.9878511428833
    8. '	input' → logprob: -13.8628511428833
    9. 'list' → logprob: -14.8628511428833
    10. '<input' → logprob: -15.1128511428833

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.6087021473795176e-05
    2. '()' → logprob: -10.125045776367188
    3. '())' → logprob: -13.500045776367188
    4. '()))' → logprob: -13.500045776367188
    5. ' ().' → logprob: -14.125045776367188
    6. '(' → logprob: -14.250045776367188
    7. ')' → logprob: -14.250045776367188
    8. '()));' → logprob: -15.625045776367188
    9. '().'' → logprob: -15.750045776367188
    10. '().__' → logprob: -15.750045776367188

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.36574100604048e-06
    2. '(split' → logprob: -13.125004768371582
    3. 'strip' → logprob: -13.625004768371582
    4. ' split' → logprob: -13.875004768371582
    5. 'rstrip' → logprob: -16.375003814697266
    6. ')' → logprob: -16.750003814697266
    7. '()' → logprob: -17.125003814697266
    8. '().' → logprob: -17.375003814697266
    9. '.split' → logprob: -17.875003814697266
    10. '())' → logprob: -17.875003814697266

Token 36: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12833966314792633
    2. ')' → logprob: -2.2533397674560547
    3. '()))' → logprob: -4.253339767456055
    4. '())' → logprob: -7.003339767456055
    5. '(' → logprob: -8.628339767456055
    6. '()' → logprob: -9.753339767456055
    7. ')))' → logprob: -11.128339767456055
    8. '),' → logprob: -12.253339767456055
    9. ''))' → logprob: -12.753339767456055
    10. '))
' → logprob: -13.128339767456055

Token 37: 'criteria' (ID: 33611)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9191103577613831
    2. 'for' → logprob: -1.7941102981567383
    3. ')' → logprob: -2.0441102981567383
    4. '#' → logprob: -2.0441102981567383
    5. '[' → logprob: -2.6691102981567383
    6. '=' → logprob: -3.6691102981567383
    7. '
' → logprob: -3.9191102981567383
    8. ',' → logprob: -3.9191102981567383
    9. ' for' → logprob: -5.294110298156738
    10. '(' → logprob: -5.294110298156738

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5284215807914734
    2. 's' → logprob: -1.2784216403961182
    3. '=' → logprob: -2.028421640396118
    4. '_' → logprob: -8.778421401977539
    5. ',' → logprob: -9.528421401977539
    6. '[' → logprob: -9.903421401977539
    7. '.' → logprob: -10.528421401977539
    8. '[:]' → logprob: -11.278421401977539
    9. '=[]' → logprob: -11.403421401977539
    10. '_s' → logprob: -11.528421401977539

Token 39: ' (' (ID: 350)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -1.1288458108901978
    2. ' [' → logprob: -1.5038458108901978
    3. 'item' → logprob: -2.003845691680908
    4. '[' → logprob: -2.753845691680908
    5. ' lambda' → logprob: -2.878845691680908
    6. '[item' → logprob: -3.003845691680908
    7. 'sorted' → logprob: -3.378845691680908
    8. ' sorted' → logprob: -3.628845691680908
    9. 'lambda' → logprob: -3.878845691680908
    10. ' list' → logprob: -4.503845691680908

Token 40: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6479280591011047
    2. ')' → logprob: -2.14792799949646
    3. 'item' → logprob: -2.27292799949646
    4. 'sum' → logprob: -2.89792799949646
    5. 'min' → logprob: -3.77292799949646
    6. ''' → logprob: -3.77292799949646
    7. ' lambda' → logprob: -3.77292799949646
    8. '(lambda' → logprob: -4.022928237915039
    9. '(' → logprob: -4.147928237915039
    10. 'len' → logprob: -4.272928237915039

Token 41: ' arr' (ID: 1724)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08786506950855255
    2. 'x' → logprob: -2.712865114212036
    3. ' a' → logprob: -4.712864875793457
    4. 'a' → logprob: -5.962864875793457
    5. ' lst' → logprob: -6.837864875793457
    6. ' lambda' → logprob: -7.462864875793457
    7. ' item' → logprob: -7.587864875793457
    8. ' A' → logprob: -7.712864875793457
    9. ' i' → logprob: -7.962864875793457
    10. ' t' → logprob: -8.087864875793457

Token 42: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44815436005592346
    2. ',' → logprob: -1.073154330253601
    3. ' :' → logprob: -4.073154449462891
    4. ' ,' → logprob: -6.823154449462891
    5. ',index' → logprob: -8.44815444946289
    6. 's' → logprob: -8.69815444946289
    7. ',i' → logprob: -8.82315444946289
    8. 'sorted' → logprob: -9.07315444946289
    9. ',:' → logprob: -9.44815444946289
    10. ',n' → logprob: -9.57315444946289

Token 43: ' m' (ID: 284)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.7390972375869751
    2. ' idx' → logprob: -2.2390971183776855
    3. ' x' → logprob: -3.1140971183776855
    4. ' k' → logprob: -3.2390971183776855
    5. 'idx' → logprob: -3.6140971183776855
    6. 'key' → logprob: -3.6140971183776855
    7. ' n' → logprob: -3.7390971183776855
    8. ' func' → logprob: -3.7390971183776855
    9. ' i' → logprob: -3.8640971183776855
    10. ' index' → logprob: -3.9890971183776855

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07322888821363449
    2. ',' → logprob: -3.1982288360595703
    3. ' :' → logprob: -3.5732288360595703
    4. ',:' → logprob: -7.44822883605957
    5. ' ,' → logprob: -8.44822883605957
    6. ':,' → logprob: -8.82322883605957
    7. '=' → logprob: -9.57322883605957
    8. ':n' → logprob: -9.82322883605957
    9. '_:' → logprob: -10.07322883605957
    10. 's' → logprob: -10.19822883605957

Token 45: '   ' (ID: 271)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.774273157119751
    2. ' reduce' → logprob: -1.024273157119751
    3. ' all' → logprob: -2.899273157119751
    4. 'all' → logprob: -3.149273157119751
    5. ' sorted' → logprob: -4.524272918701172
    6. 'sorted' → logprob: -4.524272918701172
    7. ' min' → logprob: -4.899272918701172
    8. 'min' → logprob: -5.024272918701172
    9. ' sum' → logprob: -5.149272918701172
    10. 'sum' → logprob: -5.149272918701172

Token 46: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' (adapté à ' reduce') → logprob: -0.6557196378707886
    2. ' reduce' → logprob: -1.4057196378707886
    3. 'all' → logprob: -2.530719757080078
    4. ' all' → logprob: -3.155719757080078
    5. 'sorted' → logprob: -4.030719757080078
    6. 'min' → logprob: -4.530719757080078
    7. ' sorted' → logprob: -4.655719757080078
    8. '[' → logprob: -4.780719757080078
    9. 'max' → logprob: -4.905719757080078
    10. 'sum' → logprob: -5.030719757080078

Token 47: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.11605799943208694
    2. '(' → logprob: -2.241058111190796
    3. '(item' → logprob: -6.116057872772217
    4. '(operator' → logprob: -7.366057872772217
    5. '(
' → logprob: -8.116058349609375
    6. 'lambda' → logprob: -10.366058349609375
    7. ')' → logprob: -10.991058349609375
    8. '((' → logprob: -11.616058349609375
    9. '(min' → logprob: -11.866058349609375
    10. '(max' → logprob: -12.116058349609375

Token 48: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.17033714056015015
    2. 'lambda' → logprob: -2.795337200164795
    3. ' item' → logprob: -3.420337200164795
    4. ' x' → logprob: -3.920337200164795
    5. ' a' → logprob: -4.295337200164795
    6. ' acc' → logprob: -4.545337200164795
    7. '(lambda' → logprob: -5.795337200164795
    8. 'a' → logprob: -5.920337200164795
    9. 'item' → logprob: -6.170337200164795
    10. ' ' → logprob: -6.420337200164795

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014396385522559285
    2. ' ,' → logprob: -7.251439571380615
    3. 'lambda' → logprob: -7.876439571380615
    4. ',item' → logprob: -8.626440048217773
    5. '=lambda' → logprob: -9.251440048217773
    6. '(lambda' → logprob: -10.126440048217773
    7. ' lambda' → logprob: -11.251440048217773
    8. ',index' → logprob: -12.376440048217773
    9. ',
' → logprob: -12.501440048217773
    10. '   ' → logprob: -13.751440048217773

Token 50: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5110579133033752
    2. 'x' → logprob: -2.2610578536987305
    3. ' i' → logprob: -2.2610578536987305
    4. 'i' → logprob: -3.8860578536987305
    5. ' arr' → logprob: -4.0110578536987305
    6. ' cur' → logprob: -4.1360578536987305
    7. ' acc' → logprob: -4.2610578536987305
    8. ' idx' → logprob: -4.3860578536987305
    9. ' a' → logprob: -4.7610578536987305
    10. ' _:' → logprob: -4.8860578536987305

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006059267558157444
    2. ',' → logprob: -5.381059169769287
    3. ' :' → logprob: -6.881059169769287
    4. ',:' → logprob: -8.131059646606445
    5. 's' → logprob: -10.881059646606445
    6. ':x' → logprob: -11.131059646606445
    7. ':
' → logprob: -11.506059646606445
    8. ':item' → logprob: -11.506059646606445
    9. ',x' → logprob: -12.256059646606445
    10. '+:' → logprob: -12.443559646606445

Token 52: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.640317976474762
    2. ' acc' → logprob: -0.890317976474762
    3. '(acc' → logprob: -3.015317916870117
    4. '(' → logprob: -5.140317916870117
    5. ' (' → logprob: -5.640317916870117
    6. 'item' → logprob: -7.577817916870117
    7. ' ' → logprob: -7.702817916870117
    8. '*' → logprob: -8.702817916870117
    9. ' item' → logprob: -8.765317916870117
    10. ')' → logprob: -8.952817916870117

Token 53: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49123579263687134
    2. ' +' → logprob: -0.9912357926368713
    3. ',' → logprob: -5.616235733032227
    4. '*' → logprob: -5.741235733032227
    5. ':' → logprob: -6.366235733032227
    6. '[' → logprob: -6.741235733032227
    7. '+:' → logprob: -6.991235733032227
    8. '+[' → logprob: -6.991235733032227
    9. ' if' → logprob: -7.116235733032227
    10. '|' → logprob: -7.241235733032227

Token 54: ' int' (ID: 677)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7102892398834229
    2. '(x' → logprob: -1.2102892398834229
    3. '(' → logprob: -2.460289239883423
    4. '1' → logprob: -2.960289239883423
    5. 'x' → logprob: -4.335289001464844
    6. ' x' → logprob: -4.335289001464844
    7. ' ' → logprob: -4.835289001464844
    8. '(int' → logprob: -4.960289001464844
    9. ' [' → logprob: -5.085289001464844
    10. '[x' → logprob: -5.335289001464844

Token 55: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02681572176516056
    2. '(' → logprob: -4.151815891265869
    3. '((' → logprob: -5.651815891265869
    4. '(arr' → logprob: -5.651815891265869
    5. '(abs' → logprob: -6.776815891265869
    6. '(m' → logprob: -7.651815891265869
    7. '(not' → logprob: -7.901815891265869
    8. '(len' → logprob: -8.276815414428711
    9. '(bool' → logprob: -8.401815414428711
    10. '(M' → logprob: -8.526815414428711

Token 56: ' >=' (ID: 5064)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.083633303642273
    2. '%' → logprob: -1.333633303642273
    3. '[' → logprob: -1.958633303642273
    4. '>=' → logprob: -2.2086334228515625
    5. ' >=' → logprob: -2.4586334228515625
    6. '<=' → logprob: -4.3336334228515625
    7. '==' → logprob: -4.5836334228515625
    8. ' in' → logprob: -4.8336334228515625
    9. ' <=' → logprob: -5.2086334228515625
    10. ' ==' → logprob: -5.7086334228515625

Token 57: ' sum' (ID: 4215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0509481355547905
    2. ' m' → logprob: -3.050948143005371
    3. 'arr' → logprob: -6.425948143005371
    4. 'M' → logprob: -8.300948143005371
    5. 'criteria' → logprob: -8.425948143005371
    6. '0' → logprob: -9.550948143005371
    7. ' arr' → logprob: -9.800948143005371
    8. ' criteria' → logprob: -10.050948143005371
    9. ' ' → logprob: -10.300948143005371
    10. ' M' → logprob: -10.425948143005371

Token 58: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.01229441910982132
    2. '(acc' → logprob: -5.387294292449951
    3. 'arr' → logprob: -5.637294292449951
    4. '(A' → logprob: -7.012294292449951
    5. '(x' → logprob: -7.012294292449951
    6. '(' → logprob: -7.012294292449951
    7. '([' → logprob: -7.887294292449951
    8. '(criteria' → logprob: -8.01229476928711
    9. 'criteria' → logprob: -8.51229476928711
    10. '[arr' → logprob: -9.51229476928711

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7517334818840027
    2. '[:' → logprob: -1.2517335414886475
    3. ')/' → logprob: -1.6267335414886475
    4. ')//' → logprob: -4.001733303070068
    5. '(arr' → logprob: -4.626733303070068
    6. '[-' → logprob: -5.001733303070068
    7. '[:]' → logprob: -5.376733303070068
    8. 'arr' → logprob: -6.501733303070068
    9. '   ' → logprob: -6.876733303070068
    10. '[:-' → logprob: -7.001733303070068

Token 60: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.9998517632484436
    2. '/N' → logprob: -1.3748517036437988
    3. ' /' → logprob: -1.7498517036437988
    4. '//' → logprob: -2.874851703643799
    5. ')' → logprob: -3.624851703643799
    6. ' //' → logprob: -3.874851703643799
    7. '/n' → logprob: -3.874851703643799
    8. '*' → logprob: -3.874851703643799
    9. '   ' → logprob: -4.124851703643799
    10. '/M' → logprob: -4.124851703643799

Token 61: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04472491890192032
    2. 'len' → logprob: -3.669724941253662
    3. ' m' → logprob: -4.794724941253662
    4. 'N' → logprob: -5.419724941253662
    5. 'M' → logprob: -5.669724941253662
    6. 'n' → logprob: -7.544724941253662
    7. ' len' → logprob: -7.919724941253662
    8. '(' → logprob: -8.044724464416504
    9. '(len' → logprob: -8.294724464416504
    10. '(m' → logprob: -9.044724464416504

Token 62: '4' (ID: 19)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014455175027251244
    2. 'M' → logprob: -4.889455318450928
    3. 'len' → logprob: -5.514455318450928
    4. 'N' → logprob: -6.514455318450928
    5. 'n' → logprob: -7.389455318450928
    6. ' m' → logprob: -7.764455318450928
    7. '(' → logprob: -9.63945484161377
    8. '2' → logprob: -9.88945484161377
    9. '(m' → logprob: -10.38945484161377
    10. ' M' → logprob: -10.88945484161377

Token 63: ' *' (ID: 425)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10623543709516525
    2. '*m' → logprob: -2.4812355041503906
    3. ' *' → logprob: -4.856235504150391
    4. ' m' → logprob: -4.981235504150391
    5. '*' → logprob: -6.106235504150391
    6. ' ' → logprob: -9.23123550415039
    7. '   ' → logprob: -9.35623550415039
    8. '	m' → logprob: -11.48123550415039
    9. 'M' → logprob: -11.48123550415039
    10. ' ' → logprob: -11.54373550415039

Token 64: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009145628428086638
    2. 'M' → logprob: -7.625914573669434
    3. ' m' → logprob: -7.875914573669434
    4. '*m' → logprob: -11.000914573669434
    5. 'len' → logprob: -11.375914573669434
    6. 'n' → logprob: -12.375914573669434
    7. 'N' → logprob: -12.500914573669434
    8. ' ' → logprob: -13.125914573669434
    9. ' M' → logprob: -13.375914573669434
    10. '   ' → logprob: -13.500914573669434

Token 65: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.12533694505691528
    2. ')' → logprob: -3.0003368854522705
    3. '))),' → logprob: -3.5003368854522705
    4. '))' → logprob: -4.00033712387085
    5. ' ' → logprob: -4.25033712387085
    6. ')))' → logprob: -6.87533712387085
    7. ')),
' → logprob: -6.87533712387085
    8. ')*' → logprob: -7.62533712387085
    9. ' )' → logprob: -7.62533712387085
    10. ')))),' → logprob: -8.000336647033691

Token 66: ' arr' (ID: 1724)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014293970540165901
    2. ' A' → logprob: -4.264294147491455
    3. '   ' → logprob: -10.264293670654297
    4. '*A' → logprob: -10.264293670654297
    5. 'arr' → logprob: -11.014293670654297
    6. ' ' → logprob: -11.139293670654297
    7. '  ' → logprob: -11.389293670654297
    8. 'criteria' → logprob: -12.014293670654297
    9. '	A' → logprob: -12.514293670654297
    10. ')' → logprob: -14.264293670654297

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7338046431541443
    2. '))' → logprob: -0.7338046431541443
    3. ')' → logprob: -3.358804702758789
    4. ')))' → logprob: -5.733804702758789
    5. '),' → logprob: -7.233804702758789
    6. ' ,' → logprob: -7.608804702758789
    7. '))
' → logprob: -8.858804702758789
    8. ' ))' → logprob: -9.108804702758789
    9. '   ' → logprob: -9.733804702758789
    10. ')
' → logprob: -10.358804702758789

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001969554228708148
    2. ' ' → logprob: -6.251969337463379
    3. '   ' → logprob: -11.001969337463379
    4. '  ' → logprob: -12.251969337463379
    5. '1' → logprob: -12.501969337463379
    6. 'len' → logprob: -13.001969337463379
    7. '    ' → logprob: -13.251969337463379
    8. 'N' → logprob: -13.376969337463379
    9. 'M' → logprob: -13.501969337463379
    10. 'criteria' → logprob: -14.001969337463379

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004144648555666208
    2. ' ' → logprob: -7.8754143714904785
    3. '   ' → logprob: -10.875414848327637
    4. '  ' → logprob: -12.875414848327637
    5. '*' → logprob: -13.375414848327637
    6. '1' → logprob: -13.375414848327637
    7. ')' → logprob: -13.625414848327637
    8. '    ' → logprob: -13.625414848327637
    9. 'N' → logprob: -14.000414848327637
    10. 'criteria' → logprob: -14.187914848327637

Token 70: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4413313865661621
    2. '))' → logprob: -1.066331386566162
    3. ')
' → logprob: -4.816331386566162
    4. ')))' → logprob: -6.066331386566162
    5. '))
' → logprob: -7.066331386566162
    6. '   ' → logprob: -8.44133186340332
    7. ',' → logprob: -8.56633186340332
    8. '),' → logprob: -8.69133186340332
    9. ' )' → logprob: -8.69133186340332
    10. ' ' → logprob: -9.19133186340332

Token 71: 'out' (ID: 468)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7358638644218445
    2. ')' → logprob: -1.3608639240264893
    3. '
' → logprob: -2.9858639240264893
    4. '(' → logprob: -3.3608639240264893
    5. ')
' → logprob: -3.4858639240264893
    6. ' ' → logprob: -3.8608639240264893
    7. 'for' → logprob: -3.9858639240264893
    8. '\n' → logprob: -4.48586368560791
    9. ' if' → logprob: -4.61086368560791
    10. '*' → logprob: -4.86086368560791

Token 72: 'come' (ID: 2512)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.04176288843154907
    2. '=' → logprob: -3.2917628288269043
    3. 'puts' → logprob: -6.291762828826904
    4. '```' → logprob: -7.541762828826904
    5. ' =' → logprob: -8.166763305664062
    6. '_put' → logprob: -8.291763305664062
    7. '(' → logprob: -9.291763305664062
    8. '_' → logprob: -9.291763305664062
    9. 'pt' → logprob: -9.416763305664062
    10. 'p' → logprob: -9.541763305664062

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3335382640361786
    2. '=' → logprob: -1.458538293838501
    3. '(' → logprob: -3.083538293838501
    4. 's' → logprob: -5.458538055419922
    5. ' ' → logprob: -7.708538055419922
    6. '   ' → logprob: -9.708538055419922
    7. '_' → logprob: -9.833538055419922
    8. ',' → logprob: -10.083538055419922
    9. ')' → logprob: -10.083538055419922
    10. ':' → logprob: -10.083538055419922

Token 74: ' (' (ID: 350)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.22580578923225403
    2. '"' → logprob: -2.9758057594299316
    3. ''' → logprob: -2.9758057594299316
    4. ' criteria' → logprob: -3.1008057594299316
    5. 'item' → logprob: -4.225805759429932
    6. '(criteria' → logprob: -4.350805759429932
    7. 'lambda' → logprob: -5.100805759429932
    8. ' '' → logprob: -5.850805759429932
    9. ' "' → logprob: -6.100805759429932
    10. ' item' → logprob: -6.225805759429932

Token 75: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04370544105768204
    2. ' lambda' → logprob: -3.293705463409424
    3. 'criteria' → logprob: -5.793705463409424
    4. '(lambda' → logprob: -6.918705463409424
    5. '   ' → logprob: -7.043705463409424
    6. ' criteria' → logprob: -7.918705463409424
    7. 'item' → logprob: -9.793704986572266
    8. ')' → logprob: -9.793704986572266
    9. ' ' → logprob: -9.793704986572266
    10. 'A' → logprob: -10.418704986572266

Token 76: ' k' (ID: 372)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.22971145808696747
    2. ' arr' → logprob: -1.7297114133834839
    3. 'A' → logprob: -4.604711532592773
    4. ' A' → logprob: -5.229711532592773
    5. 'a' → logprob: -5.854711532592773
    6. ' a' → logprob: -5.979711532592773
    7. ' x' → logprob: -6.729711532592773
    8. 'x' → logprob: -6.729711532592773
    9. 'criteria' → logprob: -7.354711532592773
    10. 'N' → logprob: -7.604711532592773

Token 77: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04857555776834488
    2. ',' → logprob: -3.5485756397247314
    3. ' :' → logprob: -4.048575401306152
    4. ',k' → logprob: -7.673575401306152
    5. ':k' → logprob: -9.048575401306152
    6. '   ' → logprob: -9.798575401306152
    7. ':list' → logprob: -9.923575401306152
    8. ' ' → logprob: -10.298575401306152
    9. ' ,' → logprob: -10.298575401306152
    10. 'k' → logprob: -10.423575401306152

Token 78: ' m' (ID: 284)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.9582959413528442
    2. ' arr' → logprob: -1.3332959413528442
    3. ' m' → logprob: -1.5832959413528442
    4. 'm' → logprob: -2.2082958221435547
    5. ' n' → logprob: -5.583295822143555
    6. 'a' → logprob: -5.583295822143555
    7. ' a' → logprob: -5.708295822143555
    8. ':' → logprob: -5.833295822143555
    9. ' M' → logprob: -6.083295822143555
    10. ' A' → logprob: -6.083295822143555

Token 79: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015154958702623844
    2. ',' → logprob: -4.640154838562012
    3. ' :' → logprob: -5.390154838562012
    4. ',:' → logprob: -8.265154838562012
    5. ':
' → logprob: -8.515154838562012
    6. ',k' → logprob: -8.890154838562012
    7. ':k' → logprob: -9.390154838562012
    8. ':(' → logprob: -10.515154838562012
    9. '   ' → logprob: -10.890154838562012
    10. ':n' → logprob: -11.765154838562012

Token 80: ' ('' (ID: 9906)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.5622723698616028
    2. ' criteria' → logprob: -1.937272310256958
    3. 'k' → logprob: -2.562272310256958
    4. 'all' → logprob: -2.937272310256958
    5. ' all' → logprob: -3.312272310256958
    6. ' k' → logprob: -3.562272310256958
    7. 'sum' → logprob: -3.687272310256958
    8. ' sum' → logprob: -3.937272310256958
    9. '   ' → logprob: -4.937272548675537
    10. '"' → logprob: -4.937272548675537

Token 81: 'Yes' (ID: 13022)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9939166307449341
    2. 'Yes' → logprob: -1.368916630744934
    3. 'True' → logprob: -2.7439165115356445
    4. 'M' → logprob: -2.8689165115356445
    5. '"' → logprob: -3.6189165115356445
    6. 'Accepted' → logprob: -3.6189165115356445
    7. ' k' → logprob: -4.1189165115356445
    8. 'm' → logprob: -4.4314165115356445
    9. 'YES' → logprob: -4.4939165115356445
    10. ''' → logprob: -4.4939165115356445

Token 82: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.050146862864494324
    2. '',' → logprob: -3.1751468181610107
    3. '')' → logprob: -5.55014705657959
    4. ' if' → logprob: -6.55014705657959
    5. ' '' → logprob: -7.17514705657959
    6. 'if' → logprob: -7.55014705657959
    7. '','' → logprob: -8.55014705657959
    8. ' ',' → logprob: -10.05014705657959
    9. ''[' → logprob: -10.55014705657959
    10. '\n' → logprob: -10.67514705657959

Token 83: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38719281554222107
    2. ' '' → logprob: -1.1371928453445435
    3. ')' → logprob: -9.512192726135254
    4. ' lambda' → logprob: -9.512192726135254
    5. '"' → logprob: -10.137192726135254
    6. ' ' → logprob: -10.512192726135254
    7. '('' → logprob: -10.512192726135254
    8. 'lambda' → logprob: -11.137192726135254
    9. ' ('' → logprob: -11.387192726135254
    10. ' 
' → logprob: -11.887192726135254

Token 84: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0704057365655899
    2. ' No' → logprob: -2.8204057216644287
    3. ''' → logprob: -4.820405960083008
    4. ' '' → logprob: -8.570405960083008
    5. '')' → logprob: -9.445405960083008
    6. ' ' → logprob: -10.570405960083008
    7. '',' → logprob: -10.945405960083008
    8. ' ')' → logprob: -11.070405960083008
    9. '_No' → logprob: -13.195405960083008
    10. 'None' → logprob: -13.195405960083008

Token 85: '')[' (ID: 28534)
  Prédit: '')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')[' → logprob: -0.017737677320837975
    2. '')['' → logprob: -4.892737865447998
    3. '')' → logprob: -5.017737865447998
    4. ')['' → logprob: -6.142737865447998
    5. ')[' → logprob: -7.017737865447998
    6. ' ')[' → logprob: -8.76773738861084
    7. ''' → logprob: -9.14273738861084
    8. ''[' → logprob: -9.89273738861084
    9. '['' → logprob: -10.01773738861084
    10. ')' → logprob: -10.51773738861084

Token 86: 'k' (ID: 74)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.3696756362915039
    2. ' criteria' → logprob: -1.244675636291504
    3. 'not' → logprob: -5.119675636291504
    4. ' not' → logprob: -5.244675636291504
    5. 'k' → logprob: -5.619675636291504
    6. '(criteria' → logprob: -5.994675636291504
    7. ' int' → logprob: -6.994675636291504
    8. ' k' → logprob: -6.994675636291504
    9. 'int' → logprob: -7.869675636291504
    10. '   ' → logprob: -7.869675636291504

Token 87: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16203582286834717
    2. ' <' → logprob: -1.9120358228683472
    3. '<m' → logprob: -7.162035942077637
    4. '<M' → logprob: -7.162035942077637
    5. ' ' → logprob: -9.662035942077637
    6. '>=' → logprob: -10.037035942077637
    7. '<=' → logprob: -10.162035942077637
    8. '[' → logprob: -10.412035942077637
    9. ' >=' → logprob: -10.912035942077637
    10. '*' → logprob: -11.287035942077637

Token 88: ' m' (ID: 284)
  Prédit: 'criteria'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criteria' → logprob: -0.005834118463099003
    2. ' criteria' → logprob: -5.630834102630615
    3. 'm' → logprob: -6.255834102630615
    4. '(criteria' → logprob: -9.005834579467773
    5. ' m' → logprob: -10.255834579467773
    6. 'criter' → logprob: -10.755834579467773
    7. 'M' → logprob: -10.880834579467773
    8. 'crit' → logprob: -11.130834579467773
    9. '   ' → logprob: -11.380834579467773
    10. ' ' → logprob: -11.630834579467773

Token 89: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012924972688779235
    2. '])
' → logprob: -7.251292705535889
    3. ']' → logprob: -8.37629222869873
    4. '])

' → logprob: -8.50129222869873
    5. ')' → logprob: -9.50129222869873
    6. ' ])' → logprob: -10.50129222869873
    7. ')])' → logprob: -11.25129222869873
    8. '*' → logprob: -12.12629222869873
    9. '))' → logprob: -12.12629222869873
    10. ')]' → logprob: -12.25129222869873

Token 90: 'print' (ID: 1598)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04193757846951485
    2. 'count' → logprob: -3.7919375896453857
    3. 'K' → logprob: -4.791937351226807
    4. 'result' → logprob: -6.791937351226807
    5. 'cnt' → logprob: -6.791937351226807
    6. 'criteria' → logprob: -6.916937351226807
    7. 'res' → logprob: -7.041937351226807
    8. 'for' → logprob: -7.416937351226807
    9. 'print' → logprob: -7.541937351226807
    10. 'pass' → logprob: -7.666937351226807

Token 91: '(out' (ID: 20090)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10346653312444687
    2. '(out' → logprob: -2.603466510772705
    3. '('' → logprob: -3.853466510772705
    4. '(criteria' → logprob: -6.103466510772705
    5. ' (' → logprob: -8.728466987609863
    6. '(('' → logprob: -8.853466987609863
    7. '((' → logprob: -8.978466987609863
    8. '(*' → logprob: -9.353466987609863
    9. '("' → logprob: -9.353466987609863
    10. '("("' → logprob: -9.978466987609863

Token 92: 'come' (ID: 2512)
  Prédit: 'come'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'come' → logprob: -0.3499738872051239
    2. 'ome' → logprob: -1.2249739170074463
    3. 'ame' → logprob: -6.724973678588867
    4. '(' → logprob: -9.349973678588867
    5. '```' → logprob: -9.974973678588867
    6. 'com' → logprob: -10.099973678588867
    7. '   ' → logprob: -10.849973678588867
    8. 'o' → logprob: -11.099973678588867
    9. 'e' → logprob: -11.099973678588867
    10. '(*' → logprob: -11.349973678588867

Token 93: '(criteria' (ID: 134919)
  Prédit: '(criteria'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(criteria' → logprob: -0.0016125775873661041
    2. '(' → logprob: -6.501612663269043
    3. ' (' → logprob: -9.751612663269043
    4. '((' → logprob: -11.126612663269043
    5. 'criteria' → logprob: -11.251612663269043
    6. '$criteria' → logprob: -11.751612663269043
    7. '(N' → logprob: -12.626612663269043
    8. '(
' → logprob: -12.626612663269043
    9. ')' → logprob: -12.876612663269043
    10. ' ' → logprob: -14.251612663269043

Token 94: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0004158953088335693
    2. '(' → logprob: -8.250415802001953
    3. '(N' → logprob: -9.250415802001953
    4. ',' → logprob: -11.250415802001953
    5. ',A' → logprob: -11.250415802001953
    6. '(
' → logprob: -11.750415802001953
    7. ')' → logprob: -12.125415802001953
    8. '*(' → logprob: -12.250415802001953
    9. 'A' → logprob: -12.625415802001953
    10. '(M' → logprob: -12.875415802001953

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01735042594373226
    2. ',M' → logprob: -4.142350196838379
    3. ',N' → logprob: -7.017350196838379
    4. ' ,' → logprob: -7.892350196838379
    5. 'M' → logprob: -10.767350196838379
    6. 'N' → logprob: -12.517350196838379
    7. ',m' → logprob: -12.517350196838379
    8. ' ' → logprob: -12.517350196838379
    9. '*,' → logprob: -13.017350196838379
    10. '(M' → logprob: -13.142350196838379

Token 96: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005934843793511391
    2. ' M' → logprob: -5.130934715270996
    3. 'N' → logprob: -13.005934715270996
    4. '*M' → logprob: -13.130934715270996
    5. ' ' → logprob: -13.630934715270996
    6. '   ' → logprob: -15.380934715270996
    7. '  ' → logprob: -15.505934715270996
    8. '*' → logprob: -16.755935668945312
    9. '	M' → logprob: -16.755935668945312
    10. ')' → logprob: -16.755935668945312

Token 97: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7716817259788513
    2. '))' → logprob: -1.021681785583496
    3. ')' → logprob: -1.771681785583496
    4. ')))' → logprob: -4.896681785583496
    5. ' )' → logprob: -10.146681785583496
    6. ' ),' → logprob: -10.271681785583496
    7. ',' → logprob: -10.271681785583496
    8. ' ' → logprob: -10.646681785583496
    9. ' ))' → logprob: -10.771681785583496
    10. ')),' → logprob: -10.896681785583496

Token 98: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.029757894575595856
    2. ' M' → logprob: -3.5297579765319824
    3. ' ' → logprob: -12.529757499694824
    4. '*M' → logprob: -13.404757499694824
    5. '   ' → logprob: -13.904757499694824
    6. '  ' → logprob: -14.529757499694824
    7. '    ' → logprob: -15.279757499694824
    8. '	M' → logprob: -15.529757499694824
    9. ' ' → logprob: -15.654757499694824
    10. 'N' → logprob: -16.27975845336914

Token 99: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018160121515393257
    2. ')' → logprob: -4.018160343170166
    3. '))
' → logprob: -12.268159866333008
    4. ')))' → logprob: -12.768159866333008
    5. ')
' → logprob: -13.768159866333008
    6. ' ))' → logprob: -14.143159866333008
    7. '),' → logprob: -15.018159866333008
    8. ' )' → logprob: -15.643159866333008
    9. ' ' → logprob: -16.518159866333008
    10. '))

' → logprob: -17.143159866333008


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 35.05%
Précision adaptée (1ère position): 36.08%
Précision (top 10): 72.16%
================================================================================
