================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys; sys.setrecursionlimit(10**7)
import math
from pprint import pprint, pformat
import bisect

class Foo:
    x = 0
    y = 1
    z = 2
    def __init__(foo, arr, choices):
        foo.stuff = list(arr)
        foo.choices = choices[:]
        foo.hist = ["X"] * len(foo.choices)
        foo.idx = 0
        foo.outside = False
        foo.answer = "Yes"
        foo.predict = False
        sm = 0
        for xx in arr:
            sm += xx
        if sm == 2:
            foo.predict = True
        elif sm == 0:
            foo.answer = "No"; foo.outside = True

    def available(foo):
        return (foo.idx + 1) < len(foo.choices)

    def exec(foo):
        i = 0
        while i < len(foo.choices):
            if foo.outside: break
            foo.idx = i
            foo._act(foo.choices[i])
            i += 1

    def _act(foo, op):
        if op == "AB": foo._dothis(foo.x, foo.y)
        if op == "AC": foo._dothis(foo.x, foo.z)
        if op == "BC": foo._dothis(foo.y, foo.z)

    def _dothis(foo, p, q):
        if foo.stuff[p] < foo.stuff[q]:
            foo.moveit(q, p)
        elif foo.stuff[p] > foo.stuff[q]:
            foo.moveit(p, q)
        else:
            if foo.predict:
                if foo.lookahead(p):
                    foo.moveit(q, p)
                else:
                    foo.moveit(p, q)
            else:
                foo.moveit(p, q)

    def moveit(foo, src, dst):
        foo.hist[foo.idx] = Foo.tochar(dst)
        foo.stuff[src] -= 1
        foo.stuff[dst] += 1
        if foo.stuff[src] < 0:
            foo.answer = "No"
            foo.outside = True

    @staticmethod
    def tochar(idx): return 'ABC'[idx]

    def lookahead(foo, zz):
        if not foo.available(): return False
        nxt = foo.choices[foo.idx+1]
        x = Foo.tochar(zz)
        return (x in nxt)

    def show(foo):
        print(foo.answer)
        if foo.answer == "No": return
        for s in foo.hist: print(s)

def RUN():
    n, a, b, c = map(int, input().split())
    arr = [a, b, c]
    seq = []
    for _ in range(n): seq.append(input())
    x = Foo(arr, seq)
    x.exec()
    x.show()
RUN()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ';' (ID: 26)
  → Token d'amorce (pas de prédiction)

Token 3: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06647410243749619
    2. '\' → logprob: -3.691474199295044
    3. '<|end|>' → logprob: -4.066473960876465
    4. '\n' → logprob: -4.566473960876465
    5. 'import' → logprob: -5.941473960876465
    6. '[' → logprob: -6.566473960876465
    7. 'newline' → logprob: -6.816473960876465
    8. '<|end|>' → logprob: -6.816473960876465
    9. ',' → logprob: -7.191473960876465
    10. '.readline' → logprob: -7.191473960876465

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.919942486798391e-05
    2. ' .' → logprob: -10.375059127807617
    3. '.readline' → logprob: -13.000059127807617
    4. '.import' → logprob: -13.125059127807617
    5. '[' → logprob: -13.250059127807617
    6. '.setdefault' → logprob: -13.250059127807617
    7. '."""' → logprob: -13.375059127807617
    8. '.stdout' → logprob: -13.625059127807617
    9. '.
' → logprob: -13.750059127807617
    10. '.user' → logprob: -13.875059127807617

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5810330510139465
    2. '_trace' → logprob: -1.0810329914093018
    3. '_version' → logprob: -3.7060329914093018
    4. ' _' → logprob: -3.9560329914093018
    5. '_ex' → logprob: -4.831033229827881
    6. '_exc' → logprob: -4.831033229827881
    7. '_soft' → logprob: -5.081033229827881
    8. 'trace' → logprob: -5.331033229827881
    9. '_encoding' → logprob: -5.581033229827881
    10. '_set' → logprob: -6.206033229827881

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0003123439964838326
    2. 'ursive' → logprob: -8.875312805175781
    3. 'ur' → logprob: -9.250312805175781
    4. 'urs' → logprob: -9.625312805175781
    5. 'urf' → logprob: -12.500312805175781
    6. 'urse' → logprob: -13.375312805175781
    7. 'ursor' → logprob: -13.500312805175781
    8. 'limit' → logprob: -14.125312805175781
    9. 'ursively' → logprob: -14.250312805175781
    10. 'usion' → logprob: -14.500312805175781

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.062000297009944916
    2. '_limit' → logprob: -2.812000274658203
    3. '_depth' → logprob: -11.312000274658203
    4. 'lim' → logprob: -11.437000274658203
    5. 'depth' → logprob: -12.187000274658203
    6. ' limit' → logprob: -12.812000274658203
    7. 'Limit' → logprob: -14.562000274658203
    8. '_threshold' → logprob: -14.812000274658203
    9. '-limit' → logprob: -15.187000274658203
    10. '_lim' → logprob: -15.437000274658203

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4736459888808895e-05
    2. ' (' → logprob: -12.500014305114746
    3. '(
' → logprob: -12.750014305114746
    4. '((' → logprob: -13.125014305114746
    5. '(

' → logprob: -13.250014305114746
    6. '```' → logprob: -13.250014305114746
    7. '("("' → logprob: -13.875014305114746
    8. '('' → logprob: -14.875014305114746
    9. '(
' → logprob: -15.750014305114746
    10. '(`' → logprob: -15.875014305114746

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06200186535716057
    2. '100' → logprob: -2.812001943588257
    3. '999' → logprob: -11.437002182006836
    4. '300' → logprob: -11.687002182006836
    5. ' ' → logprob: -11.687002182006836
    6. '500' → logprob: -12.437002182006836
    7. '200' → logprob: -14.187002182006836
    8. '150' → logprob: -14.562002182006836
    9. '1' → logprob: -14.937002182006836
    10. '   ' → logprob: -15.187002182006836

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032425589859485626
    2. '00' → logprob: -4.032425403594971
    3. '4' → logprob: -4.407425403594971
    4. '000' → logprob: -6.782425403594971
    5. '3' → logprob: -7.657425403594971
    6. '5' → logprob: -8.532425880432129
    7. '6' → logprob: -9.157425880432129
    8. ')' → logprob: -10.282425880432129
    9. '2' → logprob: -10.407425880432129
    10. '```' → logprob: -11.907425880432129

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014179375022649765
    2. '9' → logprob: -4.764179229736328
    3. '6' → logprob: -5.264179229736328
    4. '8' → logprob: -7.889179229736328
    5. '```' → logprob: -14.639179229736328
    6. ' ' → logprob: -14.889179229736328
    7. '(' → logprob: -16.514179229736328
    8. '``' → logprob: -17.139179229736328
    9. '5' → logprob: -18.389179229736328
    10. ')' → logprob: -18.764179229736328

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.943783253314905e-05
    2. '))' → logprob: -9.750059127807617
    3. ' )' → logprob: -14.250059127807617
    4. ')))' → logprob: -15.000059127807617
    5. ')
' → logprob: -16.875059127807617
    6. ')`' → logprob: -17.500059127807617
    7. '')' → logprob: -17.750059127807617
    8. '`)' → logprob: -17.875059127807617
    9. ' ' → logprob: -18.375059127807617
    10. ')}}' → logprob: -18.500059127807617

Token 13: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.5590739250183105
    2. '\n' → logprob: -1.1840739250183105
    3. '
' → logprob: -3.0590739250183105
    4. 'import' → logprob: -3.6840739250183105
    5. '```' → logprob: -4.3090739250183105
    6. '(' → logprob: -4.9340739250183105
    7. ')' → logprob: -4.9340739250183105
    8. '#' → logprob: -5.1840739250183105
    9. '' → logprob: -5.4340739250183105
    10. '()' → logprob: -6.3090739250183105

Token 14: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.4690839648246765
    2. ' math' → logprob: -1.2190840244293213
    3. ' collections' → logprob: -3.3440840244293213
    4. ' threading' → logprob: -3.7190840244293213
    5. ' numpy' → logprob: -4.344083786010742
    6. ' itertools' → logprob: -5.969083786010742
    7. ' functools' → logprob: -6.469083786010742
    8. ' random' → logprob: -7.219083786010742
    9. ' time' → logprob: -7.719083786010742
    10. ' sys' → logprob: -7.844083786010742

Token 15: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.4264405369758606
    2. '.' → logprob: -1.4264404773712158
    3. 'import' → logprob: -3.426440477371216
    4. 'def' → logprob: -3.676440477371216
    5. '```' → logprob: -4.051440715789795
    6. '
' → logprob: -4.926440715789795
    7. '\n' → logprob: -5.051440715789795
    8. ',' → logprob: -5.426440715789795
    9. '<|end|>' → logprob: -5.551440715789795
    10. '

' → logprob: -6.551440715789795

Token 16: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6864744424819946
    2. '```' → logprob: -2.186474323272705
    3. 'def' → logprob: -2.311474323272705
    4. '\' → logprob: -2.311474323272705
    5. '

' → logprob: -2.436474323272705
    6. 'import' → logprob: -2.936474323272705
    7. '\n' → logprob: -3.936474323272705
    8. ',' → logprob: -5.061474323272705
    9. '<|end|>' → logprob: -5.436474323272705
    10. ')' → logprob: -6.186474323272705

Token 17: ' pprint' (ID: 123034)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.030106235295534134
    2. 'collections' → logprob: -4.655106067657471
    3. ' itertools' → logprob: -4.655106067657471
    4. ' functools' → logprob: -4.905106067657471
    5. ' math' → logprob: -6.155106067657471
    6. ' typing' → logprob: -7.780106067657471
    7. ' fractions' → logprob: -8.530106544494629
    8. ' ' → logprob: -9.155106544494629
    9. ' os' → logprob: -9.280106544494629
    10. ' sym' → logprob: -9.655106544494629

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004208751488476992
    2. 'import' → logprob: -5.629208564758301
    3. '.' → logprob: -8.0042085647583
    4. ' ' → logprob: -8.7542085647583
    5. ' pprint' → logprob: -9.5042085647583
    6. '	import' → logprob: -11.0042085647583
    7. 'from' → logprob: -12.3792085647583
    8. ' importar' → logprob: -12.7542085647583
    9. ' impor' → logprob: -12.7542085647583
    10. ' im' → logprob: -12.8792085647583

Token 19: ' pprint' (ID: 123034)
  Prédit: ' pprint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pprint' → logprob: -0.03030679002404213
    2. 'p' → logprob: -3.530306816101074
    3. 'pp' → logprob: -7.530306816101074
    4. ' p' → logprob: -11.530306816101074
    5. ' pp' → logprob: -12.155306816101074
    6. ' Pretty' → logprob: -12.655306816101074
    7. '.p' → logprob: -14.780306816101074
    8. ' pretty' → logprob: -14.905306816101074
    9. 'Pretty' → logprob: -14.905306816101074
    10. 'pretty' → logprob: -15.655306816101074

Token 20: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08013433963060379
    2. '\' → logprob: -3.455134391784668
    3. 'import' → logprob: -4.330134391784668
    4. 'd' → logprob: -4.830134391784668
    5. '
' → logprob: -5.080134391784668
    6. '#' → logprob: -5.455134391784668
    7. '' → logprob: -5.580134391784668
    8. '```' → logprob: -5.580134391784668
    9. '

' → logprob: -6.830134391784668
    10. 'de' → logprob: -6.830134391784668

Token 21: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016823207959532738
    2. 'deque' → logprob: -4.2668232917785645
    3. ' p' → logprob: -6.2668232917785645
    4. 'pp' → logprob: -8.141822814941406
    5. 'del' → logprob: -9.141822814941406
    6. 're' → logprob: -9.516822814941406
    7. '```' → logprob: -10.141822814941406
    8. ' deque' → logprob: -10.266822814941406
    9. 'de' → logprob: -10.516822814941406
    10. 'Pretty' → logprob: -10.766822814941406

Token 22: 'format' (ID: 4078)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.021261269226670265
    2. 'print' → logprob: -3.896261215209961
    3. 'p' → logprob: -7.771261215209961
    4. 'format' → logprob: -9.146261215209961
    5. 'ro' → logprob: -9.896261215209961
    6. 'op' → logprob: -10.271261215209961
    7. 'db' → logprob: -10.771261215209961
    8. 'er' → logprob: -11.646261215209961
    9. 'pr' → logprob: -12.021261215209961
    10. 'sql' → logprob: -12.146261215209961

Token 23: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2629979848861694
    2. 'def' → logprob: -1.2629979848861694
    3. '
' → logprob: -1.8879979848861694
    4. '#' → logprob: -3.012998104095459
    5. '

' → logprob: -3.262998104095459
    6. '' → logprob: -3.387998104095459
    7. 'd' → logprob: -3.387998104095459
    8. '```' → logprob: -3.387998104095459
    9. '\n' → logprob: -3.387998104095459
    10. 'import' → logprob: -3.512998104095459

Token 24: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7635734677314758
    2. '
' → logprob: -0.8885734677314758
    3. 'def' → logprob: -2.888573408126831
    4. 'd' → logprob: -3.263573408126831
    5. '```' → logprob: -4.51357364654541
    6. 'import' → logprob: -4.63857364654541
    7. '' → logprob: -6.38857364654541
    8. '
' → logprob: -6.88857364654541
    9. '\' → logprob: -6.88857364654541
    10. '#' → logprob: -7.38857364654541

Token 25: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.22930264472961426
    2. ' itertools' → logprob: -2.1043026447296143
    3. 'collections' → logprob: -3.3543026447296143
    4. ' os' → logprob: -3.6043026447296143
    5. ' re' → logprob: -4.229302406311035
    6. ' functools' → logprob: -5.854302406311035
    7. ' numpy' → logprob: -7.229302406311035
    8. ' json' → logprob: -7.354302406311035
    9. ' heap' → logprob: -7.354302406311035
    10. ' random' → logprob: -7.479302406311035

Token 26: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.6308184266090393
    2. '.' → logprob: -0.8808184266090393
    3. 't' → logprob: -3.3808183670043945
    4. '\' → logprob: -5.8808183670043945
    5. 'ection' → logprob: -6.2558183670043945
    6. '```' → logprob: -6.5058183670043945
    7. '<|end|>' → logprob: -7.0058183670043945
    8. 'earch' → logprob: -7.1308183670043945
    9. '' → logprob: -7.1308183670043945
    10. '_' → logprob: -7.2558183670043945

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2754110097885132
    2. 'import' → logprob: -1.4004110097885132
    3. '

' → logprob: -1.7754110097885132
    4. '\' → logprob: -2.0254111289978027
    5. '' → logprob: -3.0254111289978027
    6. '\n' → logprob: -3.5254111289978027
    7. '```' → logprob: -3.9004111289978027
    8. '#' → logprob: -4.150411128997803
    9. ',' → logprob: -4.275411128997803
    10. 'def' → logprob: -4.525411128997803

Token 28: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8853764533996582
    2. 'def' → logprob: -1.6353764533996582
    3. '

' → logprob: -2.010376453399658
    4. '```' → logprob: -2.385376453399658
    5. '\n' → logprob: -2.510376453399658
    6. 'import' → logprob: -3.385376453399658
    7. '\' → logprob: -3.885376453399658
    8. 'class' → logprob: -4.260376453399658
    9. '#' → logprob: -5.885376453399658
    10. 'n' → logprob: -6.135376453399658

Token 29: ' Foo' (ID: 69516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5599970817565918
    2. ' Solution' → logprob: -2.059997081756592
    3. ' Binary' → logprob: -2.934997081756592
    4. ' Node' → logprob: -3.434997081756592
    5. ' My' → logprob: -3.434997081756592
    6. ' Segment' → logprob: -3.559997081756592
    7. ' Solver' → logprob: -3.559997081756592
    8. ' S' → logprob: -3.684997081756592
    9. ' Trie' → logprob: -3.934997081756592
    10. ' Tree' → logprob: -4.309997081756592

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034845535992644727
    2. '(' → logprob: -8.125348091125488
    3. ' :' → logprob: -10.875348091125488
    4. '():' → logprob: -10.875348091125488
    5. ':
' → logprob: -12.625348091125488
    6. '(:' → logprob: -13.000348091125488
    7. '```' → logprob: -13.250348091125488
    8. '):' → logprob: -13.375348091125488
    9. '<|end|>' → logprob: -14.000348091125488
    10. '(F' → logprob: -14.125348091125488

Token 31: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2516789734363556
    2. '<|end|>' → logprob: -1.8766789436340332
    3. ' 
' → logprob: -3.376678943634033
    4. '   ' → logprob: -4.126678943634033
    5. '    ' → logprob: -4.626678943634033
    6. '    
' → logprob: -5.751678943634033
    7. ' def' → logprob: -6.751678943634033
    8. '<|end|>' → logprob: -7.001678943634033
    9. '  ' → logprob: -7.251678943634033
    10. '\' → logprob: -7.501678943634033

Token 32: ' x' (ID: 1215)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04101429879665375
    2. 'def' → logprob: -3.2910141944885254
    3. '    ' → logprob: -6.416014194488525
    4. ' ' → logprob: -7.541014194488525
    5. ' pass' → logprob: -7.791014194488525
    6. '   ' → logprob: -8.916014671325684
    7. ' __' → logprob: -9.041014671325684
    8. ' 
' → logprob: -10.541014671325684
    9. '     
' → logprob: -10.666014671325684
    10. 'pass' → logprob: -10.916014671325684

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06144878640770912
    2. '=' → logprob: -2.936448812484741
    3. ':' → logprob: -5.561448574066162
    4. '   ' → logprob: -6.186448574066162
    5. ' ' → logprob: -8.43644905090332
    6. '  ' → logprob: -8.68644905090332
    7. ' :' → logprob: -9.68644905090332
    8. '<|end|>' → logprob: -9.81144905090332
    9. ',' → logprob: -10.18644905090332
    10. '    ' → logprob: -10.43644905090332

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06653522700071335
    2. ' ' → logprob: -3.566535234451294
    3. '[]' → logprob: -3.816535234451294
    4. '10' → logprob: -5.066534996032715
    5. ' []' → logprob: -5.441534996032715
    6. '1' → logprob: -7.066534996032715
    7. '42' → logprob: -7.191534996032715
    8. '100' → logprob: -7.316534996032715
    9. 'None' → logprob: -7.691534996032715
    10. '5' → logprob: -8.441534996032715

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06067498028278351
    2. '[]' → logprob: -3.3106749057769775
    3. '10' → logprob: -4.310675144195557
    4. '100' → logprob: -5.935675144195557
    5. '1' → logprob: -6.310675144195557
    6. 'None' → logprob: -6.810675144195557
    7. '42' → logprob: -6.935675144195557
    8. '5' → logprob: -7.185675144195557
    9. '123' → logprob: -7.185675144195557
    10. '{}' → logprob: -7.685675144195557

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4859286844730377
    2. '<|end|>' → logprob: -0.9859286546707153
    3. '<|end|>' → logprob: -5.235928535461426
    4. '\n' → logprob: -6.235928535461426
    5. '\' → logprob: -6.610928535461426
    6. '

' → logprob: -7.110928535461426
    7. '   ' → logprob: -7.235928535461426
    8. '    
' → logprob: -7.360928535461426
    9. '
    
' → logprob: -8.360928535461426
    10. ' ' → logprob: -8.985928535461426

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02119697816669941
    2. '

' → logprob: -4.6461968421936035
    3. '<|end|>' → logprob: -5.2711968421936035
    4. '\n' → logprob: -6.3961968421936035
    5. '   ' → logprob: -6.6461968421936035
    6. '    
' → logprob: -6.7711968421936035
    7. ' 
' → logprob: -7.7711968421936035
    8. '  
' → logprob: -8.146197319030762
    9. '<|end|>' → logprob: -8.146197319030762
    10. ' ' → logprob: -8.146197319030762

Token 38: ' y' (ID: 342)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02321729063987732
    2. '<|end|>' → logprob: -4.64821720123291
    3. '\n' → logprob: -5.27321720123291
    4. 'def' → logprob: -6.39821720123291
    5. '    
' → logprob: -6.52321720123291
    6. ' 
' → logprob: -7.14821720123291
    7. '   ' → logprob: -7.14821720123291
    8. '\' → logprob: -7.14821720123291
    9. '<|end|>' → logprob: -7.14821720123291
    10. '

' → logprob: -7.77321720123291

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03379576653242111
    2. '=' → logprob: -3.4087958335876465
    3. ' ' → logprob: -9.033795356750488
    4. '   ' → logprob: -11.283795356750488
    5. '  ' → logprob: -11.783795356750488
    6. '<|end|>' → logprob: -12.283795356750488
    7. '    ' → logprob: -13.158795356750488
    8. ',' → logprob: -13.408795356750488
    9. '=None' → logprob: -14.783795356750488
    10. ' =)' → logprob: -14.908795356750488

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6373124718666077
    2. ' ' → logprob: -0.7623124718666077
    3. '1' → logprob: -5.762312412261963
    4. ' None' → logprob: -6.887312412261963
    5. 'None' → logprob: -7.887312412261963
    6. ' []' → logprob: -9.762312889099121
    7. '[]' → logprob: -10.387312889099121
    8. '10' → logprob: -11.012312889099121
    9. '  ' → logprob: -11.137312889099121
    10. '   ' → logprob: -12.637312889099121

Token 41: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08113401383161545
    2. '1' → logprob: -2.581134080886841
    3. ' ' → logprob: -6.331133842468262
    4. '10' → logprob: -8.206133842468262
    5. 'None' → logprob: -9.581133842468262
    6. '100' → logprob: -10.206133842468262
    7. '5' → logprob: -10.831133842468262
    8. 'x' → logprob: -11.331133842468262
    9. '42' → logprob: -11.456133842468262
    10. '[]' → logprob: -12.206133842468262

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5332940816879272
    2. '<|end|>' → logprob: -0.9082940816879272
    3. '<|end|>' → logprob: -5.783294200897217
    4. '   ' → logprob: -5.783294200897217
    5. ' ' → logprob: -6.408294200897217
    6. '    
' → logprob: -7.408294200897217
    7. '\n' → logprob: -7.783294200897217
    8. '  ' → logprob: -8.533293724060059
    9. '    ' → logprob: -8.658293724060059
    10. '\' → logprob: -8.783293724060059

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04731065407395363
    2. '   ' → logprob: -3.7973105907440186
    3. '<|end|>' → logprob: -3.9223105907440186
    4. '    
' → logprob: -6.422310829162598
    5. '```' → logprob: -7.297310829162598
    6. '\n' → logprob: -7.547310829162598
    7. '<|end|>' → logprob: -7.922310829162598
    8. ' 
' → logprob: -8.797310829162598
    9. ' ' → logprob: -9.297310829162598
    10. '    ' → logprob: -9.547310829162598

Token 44: ' z' (ID: 579)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02831820212304592
    2. '   ' → logprob: -4.278318405151367
    3. '<|end|>' → logprob: -5.153318405151367
    4. '    
' → logprob: -5.903318405151367
    5. '\n' → logprob: -6.028318405151367
    6. '\' → logprob: -7.528318405151367
    7. '```' → logprob: -7.653318405151367
    8. 'def' → logprob: -7.653318405151367
    9. '    ' → logprob: -8.028318405151367
    10. ' ' → logprob: -8.153318405151367

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022576153278351
    2. '=' → logprob: -2.3502256870269775
    3. ' ' → logprob: -11.475225448608398
    4. '  ' → logprob: -11.975225448608398
    5. '   ' → logprob: -13.350225448608398
    6. ',' → logprob: -15.725225448608398
    7. ':' → logprob: -15.975225448608398
    8. '=None' → logprob: -15.975225448608398
    9. '.' → logprob: -16.3502254486084
    10. ' =)' → logprob: -16.7252254486084

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08375196158885956
    2. '2' → logprob: -2.583751916885376
    3. '0' → logprob: -5.583752155303955
    4. ' None' → logprob: -7.208752155303955
    5. 'None' → logprob: -9.083751678466797
    6. 'x' → logprob: -9.958751678466797
    7. ' x' → logprob: -9.958751678466797
    8. '  ' → logprob: -10.458751678466797
    9. '1' → logprob: -11.208751678466797
    10. ' (' → logprob: -11.208751678466797

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11932050436735153
    2. ' ' → logprob: -2.7443203926086426
    3. '0' → logprob: -3.1193203926086426
    4. 'x' → logprob: -5.994320392608643
    5. '1' → logprob: -7.869320392608643
    6. 'None' → logprob: -8.2443208694458
    7. '10' → logprob: -8.8693208694458
    8. '[]' → logprob: -8.9943208694458
    9. ' x' → logprob: -8.9943208694458
    10. '-' → logprob: -9.1193208694458

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12232326716184616
    2. '<|end|>' → logprob: -2.2473232746124268
    3. '   ' → logprob: -5.497323036193848
    4. '<|end|>' → logprob: -6.497323036193848
    5. '\n' → logprob: -6.872323036193848
    6. '    
' → logprob: -7.372323036193848
    7. ' ' → logprob: -7.747323036193848
    8. '\' → logprob: -7.747323036193848
    9. ':' → logprob: -8.122323036193848
    10. '```' → logprob: -8.622323036193848

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10235405713319778
    2. '   ' → logprob: -3.102354049682617
    3. '<|end|>' → logprob: -3.227354049682617
    4. '\n' → logprob: -5.227354049682617
    5. '    
' → logprob: -5.977354049682617
    6. '<|end|>' → logprob: -6.852354049682617
    7. '\' → logprob: -7.352354049682617
    8. '```' → logprob: -7.352354049682617
    9. ' ' → logprob: -7.477354049682617
    10. ' 
' → logprob: -7.727354049682617

Token 50: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053124215453863144
    2. '<|end|>' → logprob: -3.303124189376831
    3. '\n' → logprob: -5.42812442779541
    4. '   ' → logprob: -5.55312442779541
    5. ' ' → logprob: -6.30312442779541
    6. 'def' (adapté à ' def') → logprob: -6.67812442779541
    7. ' 
' → logprob: -7.17812442779541
    8. '    
' → logprob: -7.30312442779541
    9. '\' → logprob: -7.67812442779541
    10. '<|end|>' → logprob: -7.80312442779541

Token 51: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007549246773123741
    2. ' ' → logprob: -5.757549285888672
    3. '__' → logprob: -5.757549285888672
    4. ' _' → logprob: -7.257549285888672
    5. '_' → logprob: -8.507549285888672
    6. ' init' → logprob: -9.382549285888672
    7. ' ' → logprob: -9.507549285888672
    8. ' foo' → logprob: -10.132549285888672
    9. '_init' → logprob: -10.632549285888672
    10. ' space' → logprob: -10.757549285888672

Token 52: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1398757123970427e-05
    2. 'ini' → logprob: -11.500011444091797
    3. 'i' → logprob: -13.750011444091797
    4. 'in' → logprob: -15.750011444091797
    5. ' init' → logprob: -17.125011444091797
    6. '_init' → logprob: -18.000011444091797
    7. 'int' → logprob: -18.250011444091797
    8. 'inite' → logprob: -19.375011444091797
    9. 'new' → logprob: -19.875011444091797
    10. 'call' → logprob: -21.125011444091797

Token 53: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.16076050698757172
    2. '__' → logprob: -1.910760521888733
    3. '__(
' → logprob: -8.160760879516602
    4. '_' → logprob: -9.160760879516602
    5. '__('' → logprob: -10.035760879516602
    6. '(' → logprob: -10.160760879516602
    7. '__((' → logprob: -10.785760879516602
    8. '___' → logprob: -10.910760879516602
    9. '__(*' → logprob: -12.035760879516602
    10. '_(' → logprob: -12.160760879516602

Token 54: 'foo' (ID: 16660)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000145137935760431
    2. ' self' → logprob: -8.875144958496094
    3. ')' → logprob: -12.375144958496094
    4. '(self' → logprob: -14.500144958496094
    5. '	self' → logprob: -16.000144958496094
    6. ' ' → logprob: -16.250144958496094
    7. '   ' → logprob: -16.750144958496094
    8. '$self' → logprob: -16.750144958496094
    9. ',self' → logprob: -17.500144958496094
    10. '_self' → logprob: -17.500144958496094

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009303605183959007
    2. 'self' → logprob: -4.884303569793701
    3. ' ,' → logprob: -6.884303569793701
    4. ',self' → logprob: -7.759303569793701
    5. '   ' → logprob: -9.13430404663086
    6. ' self' → logprob: -10.38430404663086
    7. ')' → logprob: -10.50930404663086
    8. '):' → logprob: -10.50930404663086
    9. '(self' → logprob: -10.50930404663086
    10. 'foo' → logprob: -12.50930404663086

Token 56: ' arr' (ID: 1724)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.859408974647522
    2. ' x' → logprob: -1.734408974647522
    3. ' bar' → logprob: -1.984408974647522
    4. 'self' → logprob: -2.2344088554382324
    5. 'x' → logprob: -2.7344088554382324
    6. 'bar' → logprob: -3.4844088554382324
    7. ' value' → logprob: -4.109408855438232
    8. 'value' → logprob: -4.609408855438232
    9. ' a' → logprob: -4.859408855438232
    10. ' val' → logprob: -5.109408855438232

Token 57: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002253387589007616
    2. ':' → logprob: -6.377253532409668
    3. ')' → logprob: -7.877253532409668
    4. ',' → logprob: -9.127253532409668
    5. ' ):' → logprob: -10.252253532409668
    6. '):
' → logprob: -11.752253532409668
    7. '=' → logprob: -11.752253532409668
    8. '=None' → logprob: -12.127253532409668
    9. '[' → logprob: -13.127253532409668
    10. '=[]' → logprob: -13.752253532409668

Token 58: ' choices' (ID: 14494)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3874878883361816
    2. ' foo' → logprob: -1.8874878883361816
    3. ' idx' → logprob: -2.0124878883361816
    4. ' start' → logprob: -2.3874878883361816
    5. ' size' → logprob: -2.3874878883361816
    6. ' index' → logprob: -2.3874878883361816
    7. ' length' → logprob: -3.2624878883361816
    8. ' depth' → logprob: -3.7624878883361816
    9. ' val' → logprob: -4.512487888336182
    10. ' arr' → logprob: -4.637487888336182

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028117671608924866
    2. ')' → logprob: -6.002811908721924
    3. ',' → logprob: -8.252811431884766
    4. '=' → logprob: -10.377811431884766
    5. ':' → logprob: -11.002811431884766
    6. '):
' → logprob: -11.252811431884766
    7. ' ):' → logprob: -12.127811431884766
    8. '=None' → logprob: -12.877811431884766
    9. ' ' → logprob: -13.752811431884766
    10. '=[]' → logprob: -14.377811431884766

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009436001069843769
    2. ':' → logprob: -5.259436130523682
    3. '   ' → logprob: -6.384436130523682
    4. '<|end|>' → logprob: -7.634436130523682
    5. '(foo' → logprob: -7.759436130523682
    6. ',' → logprob: -8.259435653686523
    7. '	' → logprob: -8.759435653686523
    8. 'foo' → logprob: -8.759435653686523
    9. '<|end|>' → logprob: -8.759435653686523
    10. ' foo' → logprob: -8.884435653686523

Token 61: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.31387409567832947
    2. 'foo' (adapté à ' foo') → logprob: -1.3138741254806519
    3. '   ' → logprob: -7.813874244689941
    4. '       ' → logprob: -8.938874244689941
    5. 'fo' → logprob: -10.563874244689941
    6. 'foobar' → logprob: -11.313874244689941
    7. '(foo' → logprob: -11.688874244689941
    8. ' fo' → logprob: -11.688874244689941
    9. '    ' → logprob: -12.313874244689941
    10. '.foo' → logprob: -12.813874244689941

Token 62: '.st' (ID: 1980)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1687728464603424
    2. '.arr' → logprob: -1.91877281665802
    3. '.x' → logprob: -5.0437726974487305
    4. ' .' → logprob: -6.2937726974487305
    5. '.xyz' → logprob: -10.79377269744873
    6. '.foo' → logprob: -11.16877269744873
    7. '.py' → logprob: -11.29377269744873
    8. '.y' → logprob: -11.41877269744873
    9. '.array' → logprob: -11.41877269744873
    10. '   ' → logprob: -11.41877269744873

Token 63: 'uff' (ID: 1972)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.24831193685531616
    2. 'ack' → logprob: -1.748311996459961
    3. 'art' → logprob: -3.998311996459961
    4. 'ates' → logprob: -4.748311996459961
    5. 'orage' → logprob: -5.248311996459961
    6. 'ep' → logprob: -5.748311996459961
    7. 'ore' → logprob: -5.748311996459961
    8. 'r' → logprob: -6.873311996459961
    9. 'atus' → logprob: -7.123311996459961
    10. 'ats' → logprob: -7.123311996459961

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2254454344511032
    2. '=' → logprob: -1.6004453897476196
    3. '   ' → logprob: -10.725445747375488
    4. ',' → logprob: -12.100445747375488
    5. '.' → logprob: -13.725445747375488
    6. '    ' → logprob: -13.850445747375488
    7. ' ' → logprob: -14.350445747375488
    8. '[' → logprob: -14.725445747375488
    9. ')' → logprob: -14.975445747375488
    10. '=[]' → logprob: -14.975445747375488

Token 65: ' list' (ID: 1562)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.5776035785675049
    2. 'arr' → logprob: -0.8276035785675049
    3. '[]' → logprob: -7.077603340148926
    4. ' []' → logprob: -7.327603340148926
    5. '[' → logprob: -10.077603340148926
    6. 'choices' → logprob: -10.577603340148926
    7. ' choices' → logprob: -10.577603340148926
    8. '[arr' → logprob: -10.827603340148926
    9. ' [' → logprob: -11.077603340148926
    10. '	arr' → logprob: -11.577603340148926

Token 66: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0017951317131519318
    2. '(' → logprob: -6.376795291900635
    3. '[arr' → logprob: -10.126794815063477
    4. 'arr' → logprob: -10.626794815063477
    5. '(range' → logprob: -11.251794815063477
    6. '()' → logprob: -11.376794815063477
    7. '(filter' → logprob: -14.126794815063477
    8. '(copy' → logprob: -14.126794815063477
    9. '<arr' → logprob: -14.376794815063477
    10. '(map' → logprob: -14.751794815063477

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.500005722045898
    3. '       ' → logprob: -13.875005722045898
    4. '   ' → logprob: -15.125005722045898
    5. '[' → logprob: -16.3750057220459
    6. ')
' → logprob: -16.6250057220459
    7. ')))' → logprob: -17.0000057220459
    8. '),' → logprob: -17.2500057220459
    9. ' ' → logprob: -17.7500057220459
    10. '))' → logprob: -17.8750057220459

Token 68: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.8612380623817444
    2. '       ' → logprob: -1.1112380027770996
    3. '<|end|>' → logprob: -2.1112380027770996
    4. ' foo' → logprob: -2.7362380027770996
    5. '<|end|>' → logprob: -3.3612380027770996
    6. '(foo' → logprob: -4.7362380027771
    7. ' ' → logprob: -5.7362380027771
    8. '.' → logprob: -5.8612380027771
    9. '   ' → logprob: -5.9862380027771
    10. '.foo' → logprob: -6.7362380027771

Token 70: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002016331272898242
    2. '.choice' → logprob: -9.625201225280762
    3. '.x' → logprob: -10.250201225280762
    4. '.y' → logprob: -10.375201225280762
    5. '.st' → logprob: -10.625201225280762
    6. '.s' → logprob: -10.875201225280762
    7. ' .' → logprob: -11.125201225280762
    8. 'choices' → logprob: -12.625201225280762
    9. '_choices' → logprob: -14.250201225280762
    10. '.options' → logprob: -14.375201225280762

Token 71: 'choices' (ID: 56195)
  Prédit: 'choices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.00019614976190496236
    2. 'stuff' → logprob: -9.50019645690918
    3. '_choices' → logprob: -9.50019645690918
    4. 'x' → logprob: -11.50019645690918
    5. ' choices' → logprob: -11.62519645690918
    6. 'choice' → logprob: -12.00019645690918
    7. 'cho' → logprob: -12.50019645690918
    8. 'arr' → logprob: -12.75019645690918
    9. 'z' → logprob: -13.50019645690918
    10. 'append' → logprob: -13.87519645690918

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231583118438721
    2. '=' → logprob: -0.8981583118438721
    3. '<|end|>' → logprob: -11.023158073425293
    4. ' ' → logprob: -12.398158073425293
    5. ')' → logprob: -12.398158073425293
    6. '[:]' → logprob: -12.773158073425293
    7. ',' → logprob: -13.023158073425293
    8. '    ' → logprob: -13.898158073425293
    9. '=[]' → logprob: -13.898158073425293
    10. '.extend' → logprob: -14.773158073425293

Token 73: ' choices' (ID: 14494)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.31564754247665405
    2. ' choices' → logprob: -2.065647602081299
    3. 'list' → logprob: -2.190647602081299
    4. ' list' → logprob: -3.440647602081299
    5. 'choice' → logprob: -10.81564712524414
    6. '   ' → logprob: -11.81564712524414
    7. '_choices' → logprob: -11.81564712524414
    8. ' choice' → logprob: -12.06564712524414
    9. 'Choices' → logprob: -12.94064712524414
    10. ' ' → logprob: -13.12814712524414

Token 74: '[:' (ID: 7808)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5532159209251404
    2. '<|end|>' → logprob: -1.6782159805297852
    3. '   ' → logprob: -2.553215980529785
    4. '    
' → logprob: -2.678215980529785
    5. '       ' → logprob: -3.928215980529785
    6. ' ' → logprob: -3.928215980529785
    7. ' 
' → logprob: -4.178215980529785
    8. '\n' → logprob: -4.428215980529785
    9. '    ' → logprob: -5.303215980529785
    10. '  
' → logprob: -5.428215980529785

Token 75: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002370416419580579
    2. ' ]' → logprob: -6.252370357513428
    3. ')' → logprob: -7.877370357513428
    4. '])' → logprob: -10.627370834350586
    5. ' ' → logprob: -11.877370834350586
    6. '1' → logprob: -11.877370834350586
    7. ']
' → logprob: -12.127370834350586
    8. ')]' → logprob: -12.502370834350586
    9. ']()' → logprob: -12.877370834350586
    10. '<|end|>' → logprob: -13.002370834350586

Token 76: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' foo' (ID: 30551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '.hist' (ID: 116240)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0290182176977396
    2. '.x' → logprob: -3.7790181636810303
    3. '.st' → logprob: -6.654018402099609
    4. '.s' → logprob: -7.279018402099609
    5. '.z' → logprob: -7.529018402099609
    6. '.next' → logprob: -7.779018402099609
    7. '.y' → logprob: -8.27901840209961
    8. '<|end|>' → logprob: -8.27901840209961
    9. '._' → logprob: -8.65401840209961
    10. ' .' → logprob: -8.77901840209961

Token 79: ' =' (ID: 314)
  Prédit: 'ory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ory' → logprob: -3.15441757265944e-05
    2. '```' → logprob: -11.875031471252441
    3. 'orical' → logprob: -12.250031471252441
    4. 'or' → logprob: -12.250031471252441
    5. 'oly' → logprob: -13.000031471252441
    6. 'orry' → logprob: -13.375031471252441
    7. '[]' → logprob: -13.750031471252441
    8. 'o' → logprob: -13.875031471252441
    9. 'ort' → logprob: -14.000031471252441
    10. '=' → logprob: -14.000031471252441

Token 80: ' ["' (ID: 9129)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0620131678879261
    2. ' []' → logprob: -2.8120131492614746
    3. '{}' → logprob: -10.937013626098633
    4. '[' → logprob: -11.187013626098633
    5. '[]}' → logprob: -11.562013626098633
    6. '[:]' → logprob: -13.687013626098633
    7. '[]
' → logprob: -14.437013626098633
    8. ' [' → logprob: -14.687013626098633
    9. '[][]' → logprob: -14.687013626098633
    10. ' {}' → logprob: -14.812013626098633

Token 81: 'X' (ID: 55)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.7995867133140564
    2. '[' → logprob: -1.5495867729187012
    3. 'start' → logprob: -1.7995867729187012
    4. '{' → logprob: -3.049586772918701
    5. '["' → logprob: -3.299586772918701
    6. 'init' → logprob: -3.924586772918701
    7. ']' → logprob: -4.049586772918701
    8. '("' → logprob: -5.299586772918701
    9. 'initial' → logprob: -5.299586772918701
    10. '"' → logprob: -5.549586772918701

Token 82: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.002889871597290039
    2. ' "]' → logprob: -7.377889633178711
    3. ']' → logprob: -7.502889633178711
    4. '']' → logprob: -8.002889633178711
    5. '"' → logprob: -8.502889633178711
    6. '0' → logprob: -8.502889633178711
    7. ':' → logprob: -9.252889633178711
    8. '"]]' → logprob: -9.252889633178711
    9. '",' → logprob: -9.502889633178711
    10. '("' → logprob: -9.502889633178711

Token 83: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02435263991355896
    2. ' len' → logprob: -5.149352550506592
    3. '10' → logprob: -5.274352550506592
    4. '(len' → logprob: -5.399352550506592
    5. '3' → logprob: -6.149352550506592
    6. 'foo' → logprob: -6.649352550506592
    7. '5' → logprob: -7.024352550506592
    8. '20' → logprob: -7.149352550506592
    9. '6' → logprob: -7.649352550506592
    10. '(' → logprob: -7.774352550506592

Token 85: '(foo' (ID: 171155)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.1147620677947998
    2. '(' → logprob: -2.3647620677948
    3. '(foo' → logprob: -4.239762306213379
    4. 'arr' → logprob: -10.864762306213379
    5. '(st' → logprob: -12.489762306213379
    6. '(choice' → logprob: -13.239762306213379
    7. '(array' → logprob: -13.489762306213379
    8. '	arr' → logprob: -13.614762306213379
    9. '(argv' → logprob: -13.739762306213379
    10. '(arg' → logprob: -13.864762306213379

Token 86: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6339429020881653
    2. '.st' → logprob: -0.7589429020881653
    3. 'choices' → logprob: -7.6339430809021
    4. '.s' → logprob: -7.8839430809021
    5. ').' → logprob: -9.008942604064941
    6. '.arr' → logprob: -9.508942604064941
    7. ')' → logprob: -9.633942604064941
    8. ' .' → logprob: -10.133942604064941
    9. '.choice' → logprob: -10.133942604064941
    10. '   ' → logprob: -11.008942604064941

Token 87: 'choices' (ID: 56195)
  Prédit: 'stuff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stuff' → logprob: -0.070351742208004
    2. 'choices' → logprob: -2.6953518390655518
    3. 'arr' → logprob: -8.945351600646973
    4. 'staff' → logprob: -9.945351600646973
    5. 'Stuff' → logprob: -10.570351600646973
    6. 'st' → logprob: -10.570351600646973
    7. 'choice' → logprob: -10.820351600646973
    8. 'cho' → logprob: -11.195351600646973
    9. 'hist' → logprob: -11.257851600646973
    10. 'stash' → logprob: -11.570351600646973

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013512482109945267
    2. ' )' → logprob: -9.12513542175293
    3. ')
' → logprob: -12.12513542175293
    4. ']' → logprob: -12.50013542175293
    5. '<|end|>' → logprob: -12.50013542175293
    6. '   ' → logprob: -13.00013542175293
    7. '))' → logprob: -13.12513542175293
    8. ')])' → logprob: -13.62513542175293
    9. '[' → logprob: -13.75013542175293
    10. ')))' → logprob: -13.75013542175293

Token 89: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' foo' (ID: 30551)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7316792607307434
    2. 'foo' (adapté à ' foo') → logprob: -2.1066792011260986
    3. ' foo' → logprob: -2.3566792011260986
    4. ' ' → logprob: -2.3566792011260986
    5. '<|end|>' → logprob: -2.6066792011260986
    6. '   ' → logprob: -2.9816792011260986
    7. ' 
' → logprob: -3.8566792011260986
    8. '    
' → logprob: -4.731679439544678
    9. '<|end|>' → logprob: -5.106679439544678
    10. '    ' → logprob: -5.356679439544678

Token 91: '.idx' (ID: 119077)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06144116446375847
    2. '.hist' → logprob: -3.93644118309021
    3. '.x' → logprob: -4.561440944671631
    4. '.s' → logprob: -5.061440944671631
    5. '.st' → logprob: -5.436440944671631
    6. '.next' → logprob: -6.186440944671631
    7. '.mainloop' → logprob: -6.561440944671631
    8. '.py' → logprob: -6.811440944671631
    9. '.readline' → logprob: -7.186440944671631
    10. '.y' → logprob: -7.186440944671631

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01488547120243311
    2. '=' → logprob: -4.264885425567627
    3. ' ' → logprob: -7.389885425567627
    4. '<|end|>' → logprob: -9.764885902404785
    5. ' +=' → logprob: -10.514885902404785
    6. '  ' → logprob: -12.889885902404785
    7. ' =)' → logprob: -13.014885902404785
    8. '_' → logprob: -13.014885902404785
    9. ' |=' → logprob: -13.139885902404785
    10. '<|end|>' → logprob: -13.139885902404785

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067542060278356075
    2. ' ' → logprob: -5.006754398345947
    3. '-' → logprob: -10.506753921508789
    4. ' -' → logprob: -12.256753921508789
    5. '   ' → logprob: -12.506753921508789
    6. '  ' → logprob: -14.256753921508789
    7. 'len' → logprob: -14.319253921508789
    8. '1' → logprob: -14.756753921508789
    9. ' len' → logprob: -15.631753921508789
    10. '[' → logprob: -16.19425392150879

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00027444821898825467
    2. '-' → logprob: -8.875274658203125
    3. ' ' → logprob: -9.125274658203125
    4. 'len' → logprob: -11.000274658203125
    5. '1' → logprob: -12.625274658203125
    6. '   ' → logprob: -14.000274658203125
    7. ' -' → logprob: -14.062774658203125
    8. '[' → logprob: -14.750274658203125
    9. '2' → logprob: -14.812774658203125
    10. '5' → logprob: -15.312774658203125

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6942288875579834
    2. '
' → logprob: -0.8192288875579834
    3. ' 
' → logprob: -3.9442288875579834
    4. '    
' → logprob: -4.0692291259765625
    5. '<|end|>' → logprob: -4.1942291259765625
    6. ' ' → logprob: -6.5692291259765625
    7. 'def' → logprob: -6.6942291259765625
    8. '  
' → logprob: -7.0692291259765625
    9. '' → logprob: -7.1942291259765625
    10. '   
' → logprob: -7.6942291259765625

Token 96: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6008420586585999
    2. '   ' → logprob: -0.9758420586585999
    3. '<|end|>' → logprob: -3.475841999053955
    4. ' 
' → logprob: -4.100841999053955
    5. '    
' → logprob: -4.225841999053955
    6. 'def' → logprob: -5.475841999053955
    7. ' ' → logprob: -6.100841999053955
    8. '  
' → logprob: -6.475841999053955
    9. ' def' → logprob: -6.600841999053955
    10. '\n' → logprob: -7.725841999053955

Token 97: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.5481783747673035
    2. '<|end|>' → logprob: -1.6731784343719482
    3. 'def' → logprob: -2.5481784343719482
    4. ' ' → logprob: -3.1731784343719482
    5. '   ' → logprob: -3.1731784343719482
    6. ' foo' → logprob: -3.4231784343719482
    7. '       ' → logprob: -4.298178195953369
    8. '<|end|>' → logprob: -4.798178195953369
    9. ' def' → logprob: -5.423178195953369
    10. '    ' → logprob: -5.548178195953369

Token 98: '.out' (ID: 3338)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005985558498650789
    2. ' .' → logprob: -6.505985736846924
    3. '.x' → logprob: -6.755985736846924
    4. '<|end|>' → logprob: -7.130985736846924
    5. '.next' → logprob: -7.505985736846924
    6. '<|end|>' → logprob: -7.880985736846924
    7. '.readline' → logprob: -8.630985260009766
    8. '.st' → logprob: -8.755985260009766
    9. '.py' → logprob: -9.005985260009766
    10. '.mainloop' → logprob: -9.255985260009766

Token 99: 'side' (ID: 4341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4614682197570801
    2. ' =' → logprob: -1.58646821975708
    3. 'put' → logprob: -1.96146821975708
    4. '=[]' → logprob: -4.33646821975708
    5. 'puts' → logprob: -4.96146821975708
    6. '```' → logprob: -6.33646821975708
    7. 'p' → logprob: -7.71146821975708
    8. '   ' → logprob: -7.96146821975708
    9. 'pute' → logprob: -8.336467742919922
    10. ' ' → logprob: -8.711467742919922

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2673758864402771
    2. '=' → logprob: -2.142375946044922
    3. '_' → logprob: -3.142375946044922
    4. '_idx' → logprob: -4.142375946044922
    5. '_count' → logprob: -4.517375946044922
    6. 's' → logprob: -5.142375946044922
    7. '_limit' → logprob: -6.017375946044922
    8. ' ' → logprob: -6.142375946044922
    9. '_index' → logprob: -6.142375946044922
    10. '_calls' → logprob: -6.142375946044922

Token 101: ' False' (ID: 7983)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0254600048065186
    2. '0' → logprob: -1.4004600048065186
    3. 'False' → logprob: -2.0254600048065186
    4. 'True' → logprob: -2.4004600048065186
    5. '-' → logprob: -3.4004600048065186
    6. '{}' → logprob: -3.4004600048065186
    7. 'set' → logprob: -3.6504600048065186
    8. 'None' → logprob: -3.9004600048065186
    9. 'math' → logprob: -4.400460243225098
    10. '[' → logprob: -4.900460243225098

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7820873260498047
    2. '<|end|>' → logprob: -0.7820873260498047
    3. '
' → logprob: -2.6570873260498047
    4. '    
' → logprob: -4.907087326049805
    5. '<|end|>' → logprob: -6.282087326049805
    6. '       ' → logprob: -6.782087326049805
    7. 'def' → logprob: -6.907087326049805
    8. ' ' → logprob: -7.282087326049805
    9. '\n' → logprob: -7.532087326049805
    10. '    ' → logprob: -8.032087326049805

Token 104: ' foo' (ID: 30551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7972022891044617
    2. '<|end|>' → logprob: -0.7972022891044617
    3. '       ' → logprob: -3.1722023487091064
    4. 'def' → logprob: -3.7972023487091064
    5. ' def' → logprob: -3.7972023487091064
    6. ' ' → logprob: -5.547202110290527
    7. '<|end|>' → logprob: -5.922202110290527
    8. '    ' → logprob: -6.297202110290527
    9. '    
' → logprob: -7.297202110290527
    10. '
' → logprob: -7.422202110290527

Token 105: '.answer' (ID: 87169)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005286411382257938
    2. '.next' → logprob: -6.75528621673584
    3. '.x' → logprob: -7.13028621673584
    4. ' .' → logprob: -7.50528621673584
    5. '.has' → logprob: -7.75528621673584
    6. '.st' → logprob: -7.75528621673584
    7. '.idx' → logprob: -8.25528621673584
    8. '.is' → logprob: -8.63028621673584
    9. '.out' → logprob: -9.13028621673584
    10. '.ok' → logprob: -9.50528621673584

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763065218925476
    2. ' =' → logprob: -0.8263065218925476
    3. '=None' → logprob: -8.076306343078613
    4. ' ' → logprob: -11.076306343078613
    5. 'None' → logprob: -11.076306343078613
    6. ' None' → logprob: -11.951306343078613
    7. 's' → logprob: -12.076306343078613
    8. ':' → logprob: -12.951306343078613
    9. '_' → logprob: -13.326306343078613
    10. '=False' → logprob: -13.826306343078613

Token 107: ' "' (ID: 392)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6739367842674255
    2. '[]' → logprob: -1.1739368438720703
    3. ' None' → logprob: -2.2989368438720703
    4. '0' → logprob: -3.7989368438720703
    5. 'False' → logprob: -3.9239368438720703
    6. ' []' → logprob: -3.9239368438720703
    7. '-' → logprob: -5.04893684387207
    8. '""' → logprob: -5.79893684387207
    9. ' ' → logprob: -6.42393684387207
    10. 'True' → logprob: -6.42393684387207

Token 108: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0039739166386425495
    2. 'None' → logprob: -6.753973960876465
    3. 'X' → logprob: -7.753973960876465
    4. '?"' → logprob: -8.628973960876465
    5. '?' → logprob: -8.753973960876465
    6. '[]"' → logprob: -8.753973960876465
    7. '"
' → logprob: -9.003973960876465
    8. '\n' → logprob: -9.128973960876465
    9. '")' → logprob: -9.253973960876465
    10. '[' → logprob: -9.253973960876465

Token 109: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00868394784629345
    2. '\n' → logprob: -4.758684158325195
    3. '"
' → logprob: -10.633684158325195
    4. '"No' → logprob: -11.008684158325195
    5. '!"' → logprob: -12.008684158325195
    6. '")' → logprob: -12.508684158325195
    7. '"\' → logprob: -13.133684158325195
    8. ' "' → logprob: -13.508684158325195
    9. '"

' → logprob: -13.633684158325195
    10. ' or' → logprob: -13.758684158325195

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07970711588859558
    2. '<|end|>' → logprob: -3.204707145690918
    3. '    
' → logprob: -3.954707145690918
    4. '
' → logprob: -4.954707145690918
    5. 'def' → logprob: -5.204707145690918
    6. '<|end|>' → logprob: -6.829707145690918
    7. ' def' → logprob: -6.954707145690918
    8. ' 
' → logprob: -7.204707145690918
    9. '        
' → logprob: -8.329707145690918
    10. ',' → logprob: -8.454707145690918

Token 111: ' foo' (ID: 30551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3199525773525238
    2. 'def' → logprob: -2.0699524879455566
    3. '<|end|>' → logprob: -2.3199524879455566
    4. '       ' → logprob: -3.5699524879455566
    5. ' def' → logprob: -4.444952487945557
    6. '<|end|>' → logprob: -5.069952487945557
    7. 'foo' (adapté à ' foo') → logprob: -7.319952487945557
    8. ' ' → logprob: -7.444952487945557
    9. ' foo' → logprob: -7.819952487945557
    10. '  ' → logprob: -8.194952964782715

Token 112: '.predict' (ID: 57874)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1672295778989792
    2. 'def' → logprob: -3.417229652404785
    3. '._' → logprob: -3.667229652404785
    4. '.next' → logprob: -3.667229652404785
    5. '<|end|>' → logprob: -4.542229652404785
    6. '<|end|>' → logprob: -4.792229652404785
    7. '.has' → logprob: -5.417229652404785
    8. '.def' → logprob: -5.667229652404785
    9. '.ok' → logprob: -5.917229652404785
    10. '.is' → logprob: -6.042229652404785

Token 113: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0991770029067993
    2. '_next' → logprob: -1.9741770029067993
    3. 'ed' → logprob: -2.0991768836975098
    4. '(' → logprob: -2.3491768836975098
    5. '_' → logprob: -2.7241768836975098
    6. 'or' → logprob: -3.2241768836975098
    7. 'ion' → logprob: -3.7241768836975098
    8. '_answer' → logprob: -4.09917688369751
    9. 'foo' → logprob: -4.09917688369751
    10. '(foo' → logprob: -4.09917688369751

Token 114: ' False' (ID: 7983)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -1.196851134300232
    2. ' foo' → logprob: -1.696851134300232
    3. 'None' → logprob: -2.6968512535095215
    4. 'lambda' → logprob: -2.8218512535095215
    5. ' lambda' → logprob: -3.0718512535095215
    6. ' None' → logprob: -3.0718512535095215
    7. ' [' → logprob: -3.3218512535095215
    8. '0' → logprob: -3.3218512535095215
    9. 'False' → logprob: -3.4468512535095215
    10. '[' → logprob: -3.5718512535095215

Token 115: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25162455439567566
    2. '<|end|>' → logprob: -2.251624584197998
    3. '    
' → logprob: -3.001624584197998
    4. '
' → logprob: -3.626624584197998
    5. ' 
' → logprob: -4.251624584197998
    6. ' ' → logprob: -4.626624584197998
    7. 'def' → logprob: -5.376624584197998
    8. '    ' → logprob: -5.751624584197998
    9. '  
' → logprob: -6.501624584197998
    10. '<|end|>' → logprob: -6.626624584197998

Token 117: ' sm' (ID: 1765)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.584377110004425
    2. 'foo' → logprob: -1.8343770503997803
    3. '   ' → logprob: -1.9593770503997803
    4. '<|end|>' → logprob: -3.0843770503997803
    5. ' def' → logprob: -3.3343770503997803
    6. '       ' → logprob: -3.5843770503997803
    7. ' foo' → logprob: -3.7093770503997803
    8. '<|end|>' → logprob: -5.459377288818359
    9. ' ' → logprob: -7.084377288818359
    10. '    ' → logprob: -7.209377288818359

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5452942252159119
    2. ' =' → logprob: -1.4202942848205566
    3. 'o' → logprob: -3.0452942848205566
    4. 'a' → logprob: -3.0452942848205566
    5. '   ' → logprob: -4.045294284820557
    6. 'all' → logprob: -4.295294284820557
    7. 'al' → logprob: -4.545294284820557
    8. '=sum' → logprob: -4.670294284820557
    9. 'aller' → logprob: -4.920294284820557
    10. '=a' → logprob: -5.420294284820557

Token 119: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.19563759863376617
    2. 'sum' → logprob: -2.4456377029418945
    3. ' math' → logprob: -2.8206377029418945
    4. '0' → logprob: -4.5706377029418945
    5. ' ' → logprob: -4.9456377029418945
    6. ' max' → logprob: -5.5706377029418945
    7. 'math' → logprob: -5.9456377029418945
    8. ' foo' → logprob: -5.9456377029418945
    9. ' len' → logprob: -6.5706377029418945
    10. '   ' → logprob: -7.3206377029418945

Token 120: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20946577191352844
    2. 'math' → logprob: -2.209465742111206
    3. '0' → logprob: -3.459465742111206
    4. 'foo' → logprob: -3.959465742111206
    5. 'len' → logprob: -4.834465980529785
    6. ' sum' → logprob: -4.959465980529785
    7. 'max' → logprob: -5.334465980529785
    8. 'min' → logprob: -6.209465980529785
    9. 'float' → logprob: -6.584465980529785
    10. '1' → logprob: -7.084465980529785

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47751152515411377
    2. ' for' → logprob: -0.9775115251541138
    3. '       ' → logprob: -6.227511405944824
    4. ' foo' → logprob: -7.727511405944824
    5. 'foo' → logprob: -8.227511405944824
    6. ' fo' → logprob: -8.852511405944824
    7. '
' → logprob: -8.852511405944824
    8. '	for' → logprob: -9.227511405944824
    9. 'fo' → logprob: -9.477511405944824
    10. ' ' → logprob: -9.977511405944824

Token 124: ' xx' (ID: 44242)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5947461128234863
    2. ' val' → logprob: -1.7197461128234863
    3. 'i' → logprob: -1.8447461128234863
    4. 'v' → logprob: -1.8447461128234863
    5. ' v' → logprob: -1.8447461128234863
    6. ' foo' → logprob: -3.4697461128234863
    7. 'val' → logprob: -3.7197461128234863
    8. 'foo' → logprob: -3.8447461128234863
    9. 'a' → logprob: -4.094746112823486
    10. ' a' → logprob: -4.844746112823486

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3874647319316864
    2. 'in' → logprob: -1.1374647617340088
    3. ' ' → logprob: -7.88746452331543
    4. ',' → logprob: -9.13746452331543
    5. 'x' → logprob: -10.13746452331543
    6. 's' → logprob: -11.88746452331543
    7. '  ' → logprob: -11.88746452331543
    8. 'i' → logprob: -11.88746452331543
    9. 'foo' → logprob: -12.32496452331543
    10. '	in' → logprob: -12.38746452331543

Token 126: ' arr' (ID: 1724)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.058246660977602005
    2. ' foo' → logprob: -3.058246612548828
    3. 'arr' → logprob: -4.683246612548828
    4. ' arr' → logprob: -8.933246612548828
    5. 'range' → logprob: -9.183246612548828
    6. '   ' → logprob: -10.308246612548828
    7. 'choices' → logprob: -10.433246612548828
    8. ' range' → logprob: -10.683246612548828
    9. '(foo' → logprob: -10.683246612548828
    10. '    ' → logprob: -12.308246612548828

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023319896310567856
    2. ':
' → logprob: -3.773319959640503
    3. '+' → logprob: -10.273320198059082
    4. ' :' → logprob: -10.898320198059082
    5. '+:' → logprob: -12.398320198059082
    6. ',' → logprob: -12.648320198059082
    7. '       ' → logprob: -13.273320198059082
    8. '):' → logprob: -13.523320198059082
    9. '   ' → logprob: -13.648320198059082
    10. ' :
' → logprob: -13.773320198059082

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00430217245593667
    2. '<|end|>' → logprob: -6.129302024841309
    3. '+' → logprob: -7.754302024841309
    4. '<|end|>' → logprob: -7.879302024841309
    5. ',' → logprob: -8.254302024841309
    6. ':' → logprob: -8.629302024841309
    7. ' sm' → logprob: -8.754302024841309
    8. '       ' → logprob: -8.754302024841309
    9. '	       ' → logprob: -9.004302024841309
    10. '               ' → logprob: -9.629302024841309

Token 129: ' sm' (ID: 1765)
  Prédit: ' sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.010578709654510021
    2. 'sm' (adapté à ' sm') → logprob: -4.885578632354736
    3. '           ' → logprob: -6.260578632354736
    4. '               ' → logprob: -7.885578632354736
    5. '       ' → logprob: -8.385579109191895
    6. ' ' → logprob: -8.760579109191895
    7. ' if' → logprob: -9.260579109191895
    8. '	sm' → logprob: -9.260579109191895
    9. '   ' → logprob: -10.760579109191895
    10. '<|end|>' → logprob: -11.260579109191895

Token 130: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0485999770462513
    2. ' +=' → logprob: -3.0485999584198
    3. '+' → logprob: -11.673600196838379
    4. '+=(' → logprob: -13.423600196838379
    5. '=' → logprob: -13.548600196838379
    6. ']+=' → logprob: -14.048600196838379
    7. '+='' → logprob: -15.923600196838379
    8. '   ' → logprob: -16.048599243164062
    9. ' ' → logprob: -16.923599243164062
    10. '+="' → logprob: -17.048599243164062

Token 131: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.026307035237550735
    2. ' xx' → logprob: -3.6513071060180664
    3. 'int' → logprob: -12.651307106018066
    4. '(xx' → logprob: -13.401307106018066
    5. ' ' → logprob: -14.401307106018066
    6. 'x' → logprob: -15.026307106018066
    7. 'foo' → logprob: -15.151307106018066
    8. '   ' → logprob: -15.401307106018066
    9. ' int' → logprob: -15.901307106018066
    10. '           ' → logprob: -16.27630615234375

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.134391188621521
    2. '<|end|>' → logprob: -2.8843913078308105
    3. 'foo' → logprob: -3.1343913078308105
    4. ' foo' → logprob: -4.2593913078308105
    5. ' if' → logprob: -5.1343913078308105
    6. '<|end|>' → logprob: -5.6343913078308105
    7. 'if' (adapté à ' if') → logprob: -6.8843913078308105
    8. ',' → logprob: -8.634390830993652
    9. ')' → logprob: -8.759390830993652
    10. '(foo' → logprob: -8.759390830993652

Token 135: ' sm' (ID: 1765)
  Prédit: ' sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.18435314297676086
    2. 'sm' → logprob: -1.8093531131744385
    3. ' not' → logprob: -6.184353351593018
    4. ' foo' → logprob: -6.684353351593018
    5. ' math' → logprob: -7.934353351593018
    6. 'foo' → logprob: -8.30935287475586
    7. '(sm' → logprob: -8.43435287475586
    8. ' ' → logprob: -8.55935287475586
    9. '   ' → logprob: -10.05935287475586
    10. ' len' → logprob: -10.18435287475586

Token 136: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.695703387260437
    2. ' %' → logprob: -1.195703387260437
    3. ' >' → logprob: -2.4457035064697266
    4. '>' → logprob: -3.1957035064697266
    5. ' ==' → logprob: -4.195703506469727
    6. ' !=' → logprob: -4.445703506469727
    7. ' <' → logprob: -4.570703506469727
    8. '==' → logprob: -4.820703506469727
    9. ' <=' → logprob: -4.820703506469727
    10. '<' → logprob: -5.320703506469727

Token 137: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35356441140174866
    2. '0' → logprob: -1.2285643815994263
    3. ' sum' → logprob: -6.853564262390137
    4. 'foo' → logprob: -7.228564262390137
    5. 'sum' → logprob: -7.478564262390137
    6. '1' → logprob: -7.478564262390137
    7. '  ' → logprob: -8.103564262390137
    8. ' foo' → logprob: -8.103564262390137
    9. '100' → logprob: -8.728564262390137
    10. ' len' → logprob: -8.728564262390137

Token 138: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03219231590628624
    2. ' ' → logprob: -3.5321922302246094
    3. '1' → logprob: -7.407192230224609
    4. 'foo' → logprob: -7.657192230224609
    5. 'len' → logprob: -8.15719223022461
    6. 'sum' → logprob: -8.28219223022461
    7. '2' → logprob: -9.53219223022461
    8. '100' → logprob: -9.53219223022461
    9. '42' → logprob: -9.59469223022461
    10. '3' → logprob: -9.84469223022461

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1133931428194046
    2. '0' → logprob: -2.7383930683135986
    3. '**' → logprob: -4.488393306732178
    4. '5' → logprob: -4.988393306732178
    5. '2' → logprob: -5.488393306732178
    6. ' *' → logprob: -5.613393306732178
    7. ':
' → logprob: -5.738393306732178
    8. '7' → logprob: -5.863393306732178
    9. '*' → logprob: -5.988393306732178
    10. ' and' → logprob: -6.113393306732178

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042097702622413635
    2. 'foo' → logprob: -4.667097568511963
    3. ':' → logprob: -4.792097568511963
    4. ':
' → logprob: -5.042097568511963
    5. ' foo' → logprob: -5.042097568511963
    6. '       ' → logprob: -5.417097568511963
    7. ' and' → logprob: -5.542097568511963
    8. '   ' → logprob: -7.167097568511963
    9. '               ' → logprob: -7.792097568511963
    10. '(foo' → logprob: -8.292098045349121

Token 141: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.306700736284256
    2. ' foo' → logprob: -1.6817007064819336
    3. '           ' → logprob: -2.6817007064819336
    4. '               ' → logprob: -5.056700706481934
    5. 'return' → logprob: -7.556700706481934
    6. '   ' → logprob: -7.806700706481934
    7. ' return' → logprob: -8.306700706481934
    8. ' pass' → logprob: -8.681700706481934
    9. 'print' → logprob: -8.806700706481934
    10. 'raise' → logprob: -8.931700706481934

Token 142: '.predict' (ID: 57874)
  Prédit: '.answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.answer' → logprob: -0.8848052620887756
    2. '.predict' → logprob: -1.1348052024841309
    3. '.out' → logprob: -1.3848052024841309
    4. '.' → logprob: -4.884805202484131
    5. '.y' → logprob: -6.009805202484131
    6. '.p' → logprob: -6.759805202484131
    7. '.x' → logprob: -6.884805202484131
    8. '.z' → logprob: -7.009805202484131
    9. '.st' → logprob: -7.634805202484131
    10. '.pred' → logprob: -8.384805679321289

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38762691617012024
    2. '=' → logprob: -1.1376268863677979
    3. '=True' → logprob: -7.387627124786377
    4. ' ' → logprob: -9.637626647949219
    5. '=False' → logprob: -10.512626647949219
    6. '<|end|>' → logprob: -10.637626647949219
    7. '.' → logprob: -13.137626647949219
    8. ':' → logprob: -13.450126647949219
    9. '(True' → logprob: -13.450126647949219
    10. ' |=' → logprob: -13.637626647949219

Token 144: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.024777894839644432
    2. ' True' → logprob: -3.899777889251709
    3. 'False' → logprob: -5.524777889251709
    4. '(True' → logprob: -9.774778366088867
    5. 'None' → logprob: -9.899778366088867
    6. '1' → logprob: -10.524778366088867
    7. ' False' → logprob: -10.774778366088867
    8. 'Tr' → logprob: -11.024778366088867
    9. '0' → logprob: -11.524778366088867
    10. ' ' → logprob: -11.649778366088867

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' sm' (ID: 1765)
  Prédit: ' sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.031609922647476196
    2. 'sm' → logprob: -4.406610012054443
    3. ' foo' → logprob: -4.656610012054443
    4. ' len' → logprob: -5.656610012054443
    5. 'foo' → logprob: -6.656610012054443
    6. ' sum' → logprob: -6.781610012054443
    7. ' not' → logprob: -7.031610012054443
    8. ' ' → logprob: -7.156610012054443
    9. ' math' → logprob: -7.781610012054443
    10. ' True' → logprob: -8.156609535217285

Token 149: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7672953605651855
    2. ' >' → logprob: -1.1422953605651855
    3. ' <' → logprob: -1.7672953605651855
    4. '==' → logprob: -3.7672953605651855
    5. '>' → logprob: -5.0172953605651855
    6. ' ' → logprob: -5.3922953605651855
    7. ' !=' → logprob: -5.5172953605651855
    8. ' <=' → logprob: -5.8922953605651855
    9. ' >=' → logprob: -6.1422953605651855
    10. '<' → logprob: -6.2672953605651855

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0248777866363525
    2. ' ' → logprob: -1.3998777866363525
    3. '3' → logprob: -1.5248777866363525
    4. '0' → logprob: -1.7748777866363525
    5. '-' → logprob: -6.024877548217773
    6. '4' → logprob: -6.274877548217773
    7. '5' → logprob: -7.524877548217773
    8. ' -' → logprob: -7.774877548217773
    9. '10' → logprob: -7.899877548217773
    10. ' len' → logprob: -8.149877548217773

Token 151: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8316366076469421
    2. '1' → logprob: -0.9566366076469421
    3. '0' → logprob: -1.956636667251587
    4. ' ' → logprob: -3.456636667251587
    5. '4' → logprob: -5.331636428833008
    6. '5' → logprob: -7.331636428833008
    7. '-' → logprob: -7.706636428833008
    8. '6' → logprob: -7.706636428833008
    9. '7' → logprob: -8.269136428833008
    10. '10' → logprob: -8.831636428833008

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02089848741889
    2. ':
' → logprob: -3.8958985805511475
    3. ' or' → logprob: -8.270898818969727
    4. ' and' → logprob: -9.645898818969727
    5. '       ' → logprob: -11.020898818969727
    6. '           ' → logprob: -12.270898818969727
    7. '   ' → logprob: -12.645898818969727
    8. ',' → logprob: -12.895898818969727
    9. ' :' → logprob: -12.895898818969727
    10. '<|end|>' → logprob: -13.020898818969727

Token 153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07150883972644806
    2. '       ' → logprob: -3.0715088844299316
    3. 'foo' → logprob: -3.9465088844299316
    4. ' foo' → logprob: -6.571508884429932
    5. '	       ' → logprob: -7.946508884429932
    6. '   ' → logprob: -8.071508407592773
    7. '(foo' → logprob: -8.196508407592773
    8. '	   ' → logprob: -8.196508407592773
    9. '		' → logprob: -8.571508407592773
    10. ':' → logprob: -9.321508407592773

Token 154: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.286191463470459
    2. '           ' → logprob: -1.661191463470459
    3. '       ' → logprob: -3.286191463470459
    4. ' foo' → logprob: -4.161191463470459
    5. '   ' → logprob: -5.411191463470459
    6. '               ' → logprob: -8.536191940307617
    7. 'foobar' → logprob: -8.786191940307617
    8. 'return' → logprob: -9.161191940307617
    9. '(foo' → logprob: -9.161191940307617
    10. 'raise' → logprob: -9.411191940307617

Token 155: '.answer' (ID: 87169)
  Prédit: '.answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.answer' → logprob: -0.09608851373195648
    2. '.predict' → logprob: -2.721088409423828
    3. '.' → logprob: -3.721088409423828
    4. '.out' → logprob: -6.846088409423828
    5. ' .' → logprob: -8.096088409423828
    6. 'answer' → logprob: -9.971088409423828
    7. '.y' → logprob: -10.846088409423828
    8. '.pred' → logprob: -10.971088409423828
    9. '.output' → logprob: -11.471088409423828
    10. 'predict' → logprob: -11.471088409423828

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014758139848709
    2. '=' → logprob: -1.7014758586883545
    3. ' ' → logprob: -10.326476097106934
    4. '<|end|>' → logprob: -11.201476097106934
    5. ' +=' → logprob: -12.201476097106934
    6. ' ="' → logprob: -12.326476097106934
    7. '+=' → logprob: -13.576476097106934
    8. '="' → logprob: -14.076476097106934
    9. ' =
' → logprob: -14.451476097106934
    10. '=False' → logprob: -14.826476097106934

Token 157: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.13653621077537537
    2. '"' → logprob: -2.261536121368408
    3. ' "' → logprob: -3.761536121368408
    4. ''' → logprob: -9.886536598205566
    5. 'No' → logprob: -10.136536598205566
    6. '"N' → logprob: -10.511536598205566
    7. '   ' → logprob: -11.011536598205566
    8. ' ' → logprob: -11.511536598205566
    9. ' No' → logprob: -11.511536598205566
    10. '	' → logprob: -12.261536598205566

Token 158: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0010062543442472816
    2. '"No' → logprob: -7.376006126403809
    3. '"' → logprob: -8.626006126403809
    4. 'Yes' → logprob: -9.126006126403809
    5. ' No' → logprob: -10.251006126403809
    6. 'NO' → logprob: -11.376006126403809
    7. '   ' → logprob: -11.376006126403809
    8. 'N' → logprob: -12.251006126403809
    9. 'Impossible' → logprob: -12.501006126403809
    10. ' ' → logprob: -13.001006126403809

Token 159: '";' (ID: 10924)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00024822709383443
    2. '<|end|>' → logprob: -8.750247955322266
    3. '"
' → logprob: -10.125247955322266
    4. '\n' → logprob: -11.625247955322266
    5. '
' → logprob: -11.750247955322266
    6. ')"' → logprob: -11.875247955322266
    7. '```' → logprob: -12.000247955322266
    8. '")' → logprob: -12.375247955322266
    9. '<|end|>' → logprob: -12.375247955322266
    10. ')' → logprob: -12.500247955322266

Token 160: ' foo' (ID: 30551)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41037577390670776
    2. 'return' → logprob: -1.4103758335113525
    3. ' foo' → logprob: -3.0353758335113525
    4. 'foo' → logprob: -4.535375595092773
    5. ' ' → logprob: -4.785375595092773
    6. '           ' → logprob: -4.910375595092773
    7. '<|end|>' → logprob: -4.910375595092773
    8. '       ' → logprob: -5.535375595092773
    9. '
' → logprob: -6.160375595092773
    10. '        ' → logprob: -7.035375595092773

Token 161: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.11462145298719406
    2. '.predict' → logprob: -2.98962140083313
    3. '.' → logprob: -3.61462140083313
    4. '.exit' → logprob: -4.239621639251709
    5. '.ins' → logprob: -5.364621639251709
    6. '.idx' → logprob: -5.364621639251709
    7. '.st' → logprob: -5.864621639251709
    8. '.answer' → logprob: -6.239621639251709
    9. '.pred' → logprob: -7.614621639251709
    10. '.stop' → logprob: -8.36462116241455

Token 162: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.048194047063589096
    2. 'ide' → logprob: -4.17319393157959
    3. 'outside' → logprob: -5.29819393157959
    4. 'yside' → logprob: -5.67319393157959
    5. 'aise' → logprob: -5.67319393157959
    6. '=' → logprob: -5.92319393157959
    7. 'is' → logprob: -5.92319393157959
    8. 's' → logprob: -5.92319393157959
    9. '```' → logprob: -6.54819393157959
    10. '<|end|>' → logprob: -7.04819393157959

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006139361299574375
    2. '=' → logprob: -5.131139278411865
    3. ' ' → logprob: -9.131139755249023
    4. '=True' → logprob: -9.631139755249023
    5. ' |=' → logprob: -10.256139755249023
    6. '<|end|>' → logprob: -14.631139755249023
    7. '=False' → logprob: -14.756139755249023
    8. ' +=' → logprob: -16.256139755249023
    9. ' ^=' → logprob: -16.256139755249023
    10. '  ' → logprob: -16.381139755249023

Token 164: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20147550106048584
    2. ' True' → logprob: -1.7014755010604858
    3. 'False' → logprob: -9.826475143432617
    4. '(True' → logprob: -13.076475143432617
    5. '1' → logprob: -13.326475143432617
    6. ' False' → logprob: -13.826475143432617
    7. ' ' → logprob: -13.951475143432617
    8. '0' → logprob: -13.951475143432617
    9. '   ' → logprob: -14.326475143432617
    10. '=True' → logprob: -14.451475143432617

Token 165: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04490307345986366
    2. 'def' (adapté à ' def') → logprob: -3.919903039932251
    3. ' def' → logprob: -3.919903039932251
    4. '
' → logprob: -6.16990327835083
    5. '    
' → logprob: -6.41990327835083
    6. ' 
' → logprob: -8.669902801513672
    7. '	def' → logprob: -9.419902801513672
    8. ' ' → logprob: -9.794902801513672
    9. '    ' → logprob: -9.919902801513672
    10. '        
' → logprob: -10.294902801513672

Token 168: ' available' (ID: 2839)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4418344497680664
    2. ' predict' → logprob: -2.3168344497680664
    3. ' solve' → logprob: -2.5668344497680664
    4. ' foo' → logprob: -2.6918344497680664
    5. ' step' → logprob: -2.8168344497680664
    6. 'next' → logprob: -2.8168344497680664
    7. ' check' → logprob: -3.0668344497680664
    8. ' dfs' → logprob: -3.1918344497680664
    9. 'solve' → logprob: -3.5668344497680664
    10. 'foo' → logprob: -4.066834449768066

Token 169: '(foo' (ID: 171155)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03844248875975609
    2. '(' → logprob: -3.413442373275757
    3. '(foo' → logprob: -5.538442611694336
    4. '_choices' → logprob: -7.538442611694336
    5. 'self' → logprob: -9.163442611694336
    6. '_' → logprob: -10.288442611694336
    7. ' (' → logprob: -10.663442611694336
    8. '_indices' → logprob: -10.788442611694336
    9. 's' → logprob: -11.038442611694336
    10. '(s' → logprob: -11.163442611694336

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26175937056541443
    2. ',' → logprob: -1.7617594003677368
    3. '):
' → logprob: -3.5117592811584473
    4. 'self' → logprob: -4.011759281158447
    5. '(self' → logprob: -4.636759281158447
    6. ',self' → logprob: -8.261759757995605
    7. ' ):' → logprob: -8.636759757995605
    8. '   ' → logprob: -9.261759757995605
    9. ' self' → logprob: -9.636759757995605
    10. '):

' → logprob: -9.761759757995605

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011998742120340466
    2. ':' → logprob: -7.376199722290039
    3. 'return' → logprob: -8.376199722290039
    4. ' return' → logprob: -9.376199722290039
    5. '[]' → logprob: -9.501199722290039
    6. ',' → logprob: -10.251199722290039
    7. '   ' → logprob: -10.626199722290039
    8. '    ' → logprob: -11.251199722290039
    9. '(' → logprob: -11.376199722290039
    10. '#' → logprob: -11.501199722290039

Token 172: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.40134263038635254
    2. '       ' → logprob: -1.7763426303863525
    3. 'if' → logprob: -2.2763426303863525
    4. 'res' → logprob: -4.151342391967773
    5. '   ' → logprob: -4.776342391967773
    6. 'while' → logprob: -5.026342391967773
    7. 'choices' → logprob: -5.526342391967773
    8. 'result' → logprob: -5.776342391967773
    9. ' return' → logprob: -5.776342391967773
    10. 'ret' → logprob: -5.901342391967773

Token 173: ' (' (ID: 350)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.1719754934310913
    2. ' foo' → logprob: -1.9219754934310913
    3. 'len' → logprob: -5.171975612640381
    4. ' len' → logprob: -5.921975612640381
    5. '(foo' → logprob: -6.421975612640381
    6. '[' → logprob: -7.046975612640381
    7. ' ' → logprob: -8.546975135803223
    8. ' [' → logprob: -8.921975135803223
    9. 'sum' → logprob: -9.421975135803223
    10. 'bool' → logprob: -10.171975135803223

Token 174: 'foo' (ID: 16660)
  Prédit: 'foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.0933966338634491
    2. ' foo' → logprob: -2.4683966636657715
    3. 'len' → logprob: -6.5933966636657715
    4. '0' → logprob: -7.2183966636657715
    5. '(foo' → logprob: -7.5933966636657715
    6. ' len' → logprob: -7.8433966636657715
    7. ' not' → logprob: -8.218396186828613
    8. ' ' → logprob: -8.343396186828613
    9. '   ' → logprob: -8.468396186828613
    10. 'not' → logprob: -8.718396186828613

Token 175: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.01750974729657173
    2. '.' → logprob: -4.267509937286377
    3. '.x' → logprob: -6.392509937286377
    4. ' .' → logprob: -7.517509937286377
    5. '.st' → logprob: -7.767509937286377
    6. '.out' → logprob: -8.392509460449219
    7. '.hist' → logprob: -8.517509460449219
    8. ').' → logprob: -9.517509460449219
    9. '.y' → logprob: -10.767509460449219
    10. '.ins' → logprob: -11.142509460449219

Token 176: ' +' (ID: 659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08481822162866592
    2. '<' → logprob: -2.709818124771118
    3. '<len' → logprob: -4.834818363189697
    4. ')' → logprob: -5.334818363189697
    5. ' ' → logprob: -7.084818363189697
    6. '+' → logprob: -7.959818363189697
    7. ')<' → logprob: -9.084817886352539
    8. ',' → logprob: -9.209817886352539
    9. ' <
' → logprob: -9.334817886352539
    10. '[' → logprob: -9.459817886352539

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00608532689511776
    2. ' ' → logprob: -5.506085395812988
    3. 'foo' → logprob: -7.006085395812988
    4. 'len' → logprob: -7.131085395812988
    5. '2' → logprob: -9.256085395812988
    6. '   ' → logprob: -9.881085395812988
    7. ' foo' → logprob: -10.256085395812988
    8. '3' → logprob: -10.631085395812988
    9. ' len' → logprob: -10.756085395812988
    10. '5' → logprob: -11.568585395812988

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004223470576107502
    2. 'foo' → logprob: -5.879223346710205
    3. 'len' → logprob: -7.129223346710205
    4. ' ' → logprob: -8.254223823547363
    5. '2' → logprob: -8.629223823547363
    6. '3' → logprob: -9.754223823547363
    7. '4' → logprob: -10.754223823547363
    8. '5' → logprob: -10.754223823547363
    9. 'sum' → logprob: -11.629223823547363
    10. '   ' → logprob: -11.879223823547363

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.578436017036438
    2. ' <=' → logprob: -1.703436017036438
    3. ' <' → logprob: -2.3284358978271484
    4. '<=' → logprob: -2.4534358978271484
    5. '<' → logprob: -3.3284358978271484
    6. '<len' → logprob: -3.9534358978271484
    7. ')<=' → logprob: -4.328435897827148
    8. ')<' → logprob: -5.328435897827148
    9. ' )' → logprob: -8.453435897827148
    10. ' ' → logprob: -9.328435897827148

Token 180: ' <' (ID: 464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02325223572552204
    2. ' len' → logprob: -3.773252248764038
    3. '(len' → logprob: -12.648252487182617
    4. 'foo' → logprob: -13.523252487182617
    5. '=len' → logprob: -13.773252487182617
    6. '   ' → logprob: -14.648252487182617
    7. ' ' → logprob: -14.898252487182617
    8. '	len' → logprob: -16.148252487182617
    9. '[len' → logprob: -16.398252487182617
    10. '  ' → logprob: -16.648252487182617

Token 182: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -2.696889623621246e-06
    2. 'foo' → logprob: -13.12500286102295
    3. '(' → logprob: -14.37500286102295
    4. '(food' → logprob: -19.000001907348633
    5. '/foo' → logprob: -19.125001907348633
    6. '((' → logprob: -19.375001907348633
    7. '(fake' → logprob: -19.625001907348633
    8. '(F' → logprob: -19.875001907348633
    9. ' foo' → logprob: -20.250001907348633
    10. '(go' → logprob: -20.750001907348633

Token 183: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18952029943466187
    2. '.foo' → logprob: -1.9395203590393066
    3. '(foo' → logprob: -3.6895203590393066
    4. '(' → logprob: -5.939520359039307
    5. ' .' → logprob: -6.814520359039307
    6. '.fo' → logprob: -9.064519882202148
    7. 'foo' → logprob: -10.814519882202148
    8. ' (' → logprob: -12.564519882202148
    9. '(.' → logprob: -12.689519882202148
    10. '.choice' → logprob: -13.439519882202148

Token 184: 'choices' (ID: 56195)
  Prédit: 'choices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -5.438573680294212e-06
    2. 'hist' → logprob: -12.875005722045898
    3. ' choices' → logprob: -13.000005722045898
    4. 'stuff' → logprob: -15.875005722045898
    5. 'answers' → logprob: -16.5000057220459
    6. 'choice' → logprob: -16.5000057220459
    7. '_choices' → logprob: -16.6250057220459
    8. 'cho' → logprob: -16.7500057220459
    9. '.' → logprob: -17.5000057220459
    10. 'history' → logprob: -18.1250057220459

Token 185: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023452966706827283
    2. ' )' → logprob: -8.875234603881836
    3. '<|end|>' → logprob: -10.250234603881836
    4. ')
' → logprob: -10.750234603881836
    5. '   ' → logprob: -11.250234603881836
    6. ')return' → logprob: -12.125234603881836
    7. ' and' → logprob: -12.250234603881836
    8. '())' → logprob: -12.625234603881836
    9. '[' → logprob: -12.750234603881836
    10. ' ' → logprob: -13.250234603881836

Token 186: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7461455464363098
    2. '<|end|>' → logprob: -1.371145486831665
    3. 'def' (adapté à ' def') → logprob: -2.121145486831665
    4. '   ' → logprob: -2.371145486831665
    5. ' ' → logprob: -4.121145725250244
    6. '.' → logprob: -4.496145725250244
    7. ' def' → logprob: -5.121145725250244
    8. '<|end|>' → logprob: -5.496145725250244
    9. ')' → logprob: -5.621145725250244
    10. ':def' → logprob: -6.121145725250244

Token 188: ' exec' (ID: 25398)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -2.190485954284668
    2. ' try' → logprob: -2.940485954284668
    3. ' run' → logprob: -3.065485954284668
    4. ' advance' → logprob: -3.190485954284668
    5. ' choose' → logprob: -3.190485954284668
    6. ' step' → logprob: -3.315485954284668
    7. ' can' → logprob: -3.315485954284668
    8. ' go' → logprob: -3.440485954284668
    9. ' foo' → logprob: -3.440485954284668
    10. ' check' → logprob: -3.690485954284668

Token 189: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.0008729901164770126
    2. '(' → logprob: -7.12587308883667
    3. 'foo' → logprob: -10.000872611999512
    4. '_' → logprob: -11.125872611999512
    5. '_(' → logprob: -13.250872611999512
    6. 'ption' → logprob: -13.750872611999512
    7. 'ution' → logprob: -14.000872611999512
    8. '```' → logprob: -14.375872611999512
    9. '(bar' → logprob: -14.500872611999512
    10. '(fun' → logprob: -14.875872611999512

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2469068020582199
    2. ',' → logprob: -1.8719067573547363
    3. '):
' → logprob: -2.7469067573547363
    4. '(foo' → logprob: -8.371907234191895
    5. ')' → logprob: -8.621907234191895
    6. '():' → logprob: -9.246907234191895
    7. '   ' → logprob: -9.496907234191895
    8. ' ):' → logprob: -9.871907234191895
    9. '(' → logprob: -10.121907234191895
    10. '       ' → logprob: -10.996907234191895

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016523292288184166
    2. '        
' → logprob: -7.626652240753174
    3. '    ' → logprob: -8.626652717590332
    4. ':' → logprob: -9.126652717590332
    5. ' if' → logprob: -9.126652717590332
    6. ',' → logprob: -9.126652717590332
    7. '        ' → logprob: -9.626652717590332
    8. '   ' → logprob: -9.626652717590332
    9. ' ' → logprob: -9.751652717590332
    10. '      ' → logprob: -9.876652717590332

Token 192: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40914446115493774
    2. 'c' → logprob: -1.909144401550293
    3. '       ' → logprob: -3.034144401550293
    4. 'foo' → logprob: -3.284144401550293
    5. ' if' → logprob: -3.534144401550293
    6. 'while' → logprob: -3.909144401550293
    7. 'ch' → logprob: -4.784144401550293
    8. '   ' → logprob: -4.909144401550293
    9. 'x' → logprob: -5.409144401550293
    10. 'i' (adapté à ' i') → logprob: -5.659144401550293

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6345568895339966
    2. 'f' → logprob: -1.3845568895339966
    3. '=' → logprob: -2.634556770324707
    4. 'dx' → logprob: -2.634556770324707
    5. 'n' → logprob: -3.259556770324707
    6. 'nd' → logprob: -3.884556770324707
    7. 'd' → logprob: -4.384556770324707
    8. ' ' → logprob: -7.009556770324707
    9. '   ' → logprob: -7.134556770324707
    10. 'ndice' → logprob: -7.759556770324707

Token 194: ' ' (ID: 220)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.03384669870138168
    2. ' foo' → logprob: -3.408846616744995
    3. '0' → logprob: -9.158846855163574
    4. ' ' → logprob: -9.533846855163574
    5. '   ' → logprob: -11.408846855163574
    6. '(foo' → logprob: -12.158846855163574
    7. '  ' → logprob: -12.908846855163574
    8. '       ' → logprob: -14.408846855163574
    9. '/foo' → logprob: -14.408846855163574
    10. 'len' → logprob: -14.408846855163574

Token 195: '0' (ID: 15)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -3.440506407059729e-05
    2. ' foo' → logprob: -10.62503433227539
    3. '0' → logprob: -11.62503433227539
    4. '(foo' → logprob: -14.37503433227539
    5. 'len' → logprob: -16.00003433227539
    6. 'fo' → logprob: -16.25003433227539
    7. ' ' → logprob: -16.50003433227539
    8. '.foo' → logprob: -16.62503433227539
    9. 'foobar' → logprob: -17.00003433227539
    10. 'i' → logprob: -17.00003433227539

Token 196: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6340782046318054
    2. ' while' → logprob: -0.7590782046318054
    3. 'n' → logprob: -8.134078025817871
    4. 'for' → logprob: -8.634078025817871
    5. ' if' → logprob: -8.884078025817871
    6. '       ' → logprob: -9.009078025817871
    7. 'if' → logprob: -9.009078025817871
    8. ' n' → logprob: -9.134078025817871
    9. ' for' → logprob: -9.509078025817871
    10. '   ' → logprob: -9.759078025817871

Token 199: ' i' (ID: 575)
  Prédit: ' foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.49062663316726685
    2. ' i' → logprob: -1.365626573562622
    3. 'foo' → logprob: -2.240626573562622
    4. ' True' → logprob: -4.865626811981201
    5. 'i' → logprob: -5.115626811981201
    6. '(foo' → logprob: -5.490626811981201
    7. ' (' → logprob: -5.740626811981201
    8. 'True' → logprob: -5.990626811981201
    9. '(i' → logprob: -6.740626811981201
    10. '(' → logprob: -7.365626811981201

Token 200: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11725098639726639
    2. '<' → logprob: -2.242250919342041
    3. ' <=' → logprob: -6.117250919342041
    4. ' ' → logprob: -6.617250919342041
    5. '<len' → logprob: -8.3672513961792
    6. '<=' → logprob: -8.7422513961792
    7. '[' → logprob: -9.2422513961792
    8. ' <
' → logprob: -9.6172513961792
    9. '   ' → logprob: -9.7422513961792
    10. '<|end|>' → logprob: -9.9922513961792

Token 201: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.033914580941200256
    2. ' len' → logprob: -3.408914566040039
    3. 'foo' → logprob: -9.033914566040039
    4. '3' → logprob: -10.033914566040039
    5. ' ' → logprob: -10.908914566040039
    6. '10' → logprob: -11.033914566040039
    7. '(len' → logprob: -11.283914566040039
    8. '4' → logprob: -11.283914566040039
    9. '5' → logprob: -11.533914566040039
    10. '2' → logprob: -12.033914566040039

Token 202: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -2.3915141355246305e-05
    2. 'foo' → logprob: -11.00002384185791
    3. '(' → logprob: -12.00002384185791
    4. ' (' → logprob: -14.25002384185791
    5. '(food' → logprob: -16.125024795532227
    6. ' foo' → logprob: -16.750024795532227
    7. '((' → logprob: -17.625024795532227
    8. '(fig' → logprob: -18.000024795532227
    9. '(fun' → logprob: -18.125024795532227
    10. '(todo' → logprob: -18.125024795532227

Token 203: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029702015221118927
    2. '.st' → logprob: -4.279702186584473
    3. '.hist' → logprob: -4.279702186584473
    4. ' .' → logprob: -6.529702186584473
    5. '.s' → logprob: -10.529702186584473
    6. '.history' → logprob: -11.279702186584473
    7. '.choice' → logprob: -11.529702186584473
    8. '   ' → logprob: -11.654702186584473
    9. '.out' → logprob: -11.904702186584473
    10. ' ' → logprob: -12.029702186584473

Token 204: 'choices' (ID: 56195)
  Prédit: 'choices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.39216598868370056
    2. 'stuff' → logprob: -1.517166018486023
    3. 'hist' → logprob: -2.2671658992767334
    4. 'choice' → logprob: -7.8921661376953125
    5. 'history' → logprob: -8.142166137695312
    6. ' choices' → logprob: -8.392166137695312
    7. ' stuff' → logprob: -9.142166137695312
    8. 'cho' → logprob: -9.892166137695312
    9. 'arr' → logprob: -10.142166137695312
    10. ' hist' → logprob: -10.704666137695312

Token 205: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3669004738330841
    2. '):' → logprob: -1.3669004440307617
    3. ')' → logprob: -2.9919004440307617
    4. '       ' → logprob: -7.616900444030762
    5. ' ):
' → logprob: -7.616900444030762
    6. ' ):' → logprob: -7.741900444030762
    7. ' and' → logprob: -8.491900444030762
    8. '):
' → logprob: -8.991900444030762
    9. ' )' → logprob: -9.241900444030762
    10. '):

' → logprob: -9.866900444030762

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6006818413734436
    2. '<|end|>' → logprob: -1.8506817817687988
    3. ':' → logprob: -2.225681781768799
    4. '       ' → logprob: -2.600681781768799
    5. ' :' → logprob: -3.975681781768799
    6. ' 
' → logprob: -4.225681781768799
    7. ' ' → logprob: -4.225681781768799
    8. ':
' → logprob: -4.350681781768799
    9. '(foo' → logprob: -4.850681781768799
    10. '<|end|>' → logprob: -4.975681781768799

Token 207: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5304766297340393
    2. ' 
' → logprob: -1.4054765701293945
    3. ' if' → logprob: -2.2804765701293945
    4. '           ' → logprob: -4.7804765701293945
    5. ' foo' → logprob: -4.9054765701293945
    6. '<|end|>' → logprob: -4.9054765701293945
    7. '            ' → logprob: -5.4054765701293945
    8. 'if' (adapté à ' if') → logprob: -5.5304765701293945
    9. '
' → logprob: -5.5304765701293945
    10. '        ' → logprob: -5.6554765701293945

Token 208: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.13148361444473267
    2. 'foo' → logprob: -2.131483554840088
    3. ' not' → logprob: -6.006483554840088
    4. ' (' → logprob: -7.256483554840088
    5. '(foo' → logprob: -7.256483554840088
    6. ' i' → logprob: -8.381484031677246
    7. ' ' → logprob: -8.881484031677246
    8. '   ' → logprob: -9.381484031677246
    9. 'not' → logprob: -10.381484031677246
    10. '(' → logprob: -10.381484031677246

Token 209: '.out' (ID: 3338)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29190272092819214
    2. '.hist' → logprob: -1.416902780532837
    3. '.idx' → logprob: -4.916902542114258
    4. '.available' → logprob: -6.666902542114258
    5. '.st' → logprob: -7.416902542114258
    6. ' .' → logprob: -7.541902542114258
    7. '.choice' → logprob: -8.541902542114258
    8. '.x' → logprob: -8.791902542114258
    9. '.history' → logprob: -8.791902542114258
    10. '.s' → logprob: -9.541902542114258

Token 210: 'side' (ID: 4341)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.25076866149902344
    2. 'side' → logprob: -2.3757686614990234
    3. ' outside' → logprob: -3.2507686614990234
    4. 'ice' → logprob: -4.250768661499023
    5. 'inside' → logprob: -4.250768661499023
    6. 'ide' → logprob: -4.250768661499023
    7. '```' → logprob: -4.750768661499023
    8. 'i' → logprob: -5.500768661499023
    9. '[i' → logprob: -5.500768661499023
    10. '               ' → logprob: -5.500768661499023

Token 211: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33795568346977234
    2. ' or' → logprob: -1.8379557132720947
    3. ':
' → logprob: -2.0879557132720947
    4. ':return' → logprob: -7.212955474853516
    5. '==' → logprob: -7.337955474853516
    6. ' and' → logprob: -7.337955474853516
    7. '           ' → logprob: -7.712955474853516
    8. '               ' → logprob: -7.712955474853516
    9. ' ==' → logprob: -8.087955474853516
    10. 'or' → logprob: -9.087955474853516

Token 212: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001119499676860869
    2. ' break' → logprob: -7.251119613647461
    3. ' return' → logprob: -8.626119613647461
    4. 'break' → logprob: -9.126119613647461
    5. '           ' → logprob: -10.251119613647461
    6. '	           ' → logprob: -11.001119613647461
    7. '<|end|>' → logprob: -11.126119613647461
    8. '			' → logprob: -11.501119613647461
    9. 'return' → logprob: -11.501119613647461
    10. '	break' → logprob: -12.126119613647461

Token 213: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14300955832004547
    2. '
' → logprob: -2.768009662628174
    3. '            
' → logprob: -3.268009662628174
    4. '<|end|>' → logprob: -4.018009662628174
    5. '  
' → logprob: -5.768009662628174
    6. ' 
' → logprob: -5.893009662628174
    7. '    
' → logprob: -6.268009662628174
    8. '\n' → logprob: -6.268009662628174
    9. '               ' → logprob: -7.268009662628174
    10. '       ' → logprob: -7.518009662628174

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05415835231542587
    2. ' 
' → logprob: -4.0541582107543945
    3. '            
' → logprob: -4.3041582107543945
    4. '<|end|>' → logprob: -4.5541582107543945
    5. '\n' → logprob: -6.1791582107543945
    6. '  
' → logprob: -6.3041582107543945
    7. '    
' → logprob: -6.5541582107543945
    8. ' ' → logprob: -6.6791582107543945
    9. '            ' → logprob: -6.9291582107543945
    10. '               ' → logprob: -7.0541582107543945

Token 215: ' foo' (ID: 30551)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8878366947174072
    2. ' c' → logprob: -1.5128366947174072
    3. ' if' → logprob: -2.1378366947174072
    4. 'c' → logprob: -2.3878366947174072
    5. ' choice' → logprob: -3.0128366947174072
    6. 'choice' → logprob: -3.0128366947174072
    7. 'if' → logprob: -4.137836456298828
    8. 'foo' (adapté à ' foo') → logprob: -5.262836456298828
    9. 'ch' → logprob: -5.637836456298828
    10. ' foo' → logprob: -5.637836456298828

Token 216: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.7861061096191406
    2. '.hist' → logprob: -1.1611061096191406
    3. '.' → logprob: -1.5361061096191406
    4. '.exec' → logprob: -4.536106109619141
    5. '.x' → logprob: -6.411106109619141
    6. '.st' → logprob: -7.161106109619141
    7. '.available' → logprob: -7.411106109619141
    8. '.choice' → logprob: -7.911106109619141
    9. ' .' → logprob: -8.16110610961914
    10. '.choose' → logprob: -8.28610610961914

Token 217: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07355012744665146
    2. '+=' → logprob: -2.698550224304199
    3. ' =' → logprob: -5.948550224304199
    4. '=' → logprob: -6.948550224304199
    5. ' ' → logprob: -10.5735502243042
    6. '+' → logprob: -12.1985502243042
    7. ' +' → logprob: -12.6985502243042
    8. '<|end|>' → logprob: -13.9485502243042
    9. '    ' → logprob: -14.1985502243042
    10. ')' → logprob: -14.5735502243042

Token 218: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07892041653394699
    2. ' i' → logprob: -2.578920364379883
    3. 'foo' → logprob: -10.703920364379883
    4. '0' → logprob: -12.453920364379883
    5. '	i' → logprob: -13.578920364379883
    6. ' ' → logprob: -13.703920364379883
    7. ' foo' → logprob: -13.828920364379883
    8. '   ' → logprob: -15.203920364379883
    9. '<|end|>' → logprob: -16.078920364379883
    10. '    ' → logprob: -16.703920364379883

Token 219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28038153052330017
    2. '<|end|>' → logprob: -1.6553815603256226
    3. '<|end|>' → logprob: -3.155381441116333
    4. '
' → logprob: -5.780381679534912
    5. '            
' → logprob: -6.030381679534912
    6. ' 
' → logprob: -6.780381679534912
    7. '  
' → logprob: -7.280381679534912
    8. '       ' → logprob: -7.780381679534912
    9. ',' → logprob: -7.780381679534912
    10. '               ' → logprob: -7.905381679534912

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008562682196497917
    2. '<|end|>' → logprob: -5.0085625648498535
    3. '            
' → logprob: -7.0085625648498535
    4. '<|end|>' → logprob: -7.7585625648498535
    5. '   ' → logprob: -9.508563041687012
    6. ' ' → logprob: -10.133563041687012
    7. ' 
' → logprob: -10.258563041687012
    8. '       ' → logprob: -10.383563041687012
    9. '    
' → logprob: -10.383563041687012
    10. ',' → logprob: -10.383563041687012

Token 221: ' foo' (ID: 30551)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.247032880783081
    2. 'c' → logprob: -1.372032880783081
    3. 'foo' (adapté à ' foo') → logprob: -2.122032880783081
    4. 'choice' → logprob: -2.372032880783081
    5. 'if' → logprob: -2.872032880783081
    6. 'ch' → logprob: -3.622032880783081
    7. ' c' → logprob: -3.747032880783081
    8. 'cur' → logprob: -3.872032880783081
    9. 'val' → logprob: -4.12203311920166
    10. 'v' → logprob: -4.12203311920166

Token 222: '._' (ID: 2697)
  Prédit: '.hist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.hist' → logprob: -0.2908882200717926
    2. '.' → logprob: -1.5408881902694702
    3. '.exec' → logprob: -4.66588830947876
    4. '.process' → logprob: -5.66588830947876
    5. '.run' → logprob: -5.79088830947876
    6. '.choose' → logprob: -5.91588830947876
    7. '.next' → logprob: -6.04088830947876
    8. '.do' → logprob: -6.29088830947876
    9. '.st' → logprob: -6.54088830947876
    10. '.execute' → logprob: -6.66588830947876

Token 223: 'act' (ID: 588)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -1.4803359508514404
    2. 'exec' → logprob: -1.7303359508514404
    3. 'try' → logprob: -1.8553359508514404
    4. 'do' → logprob: -2.4803359508514404
    5. 'run' → logprob: -2.6053359508514404
    6. 'process' → logprob: -3.3553359508514404
    7. 'execute' → logprob: -3.4803359508514404
    8. 'choose' → logprob: -3.6053359508514404
    9. 'apply' → logprob: -3.9803359508514404
    10. 'handle' → logprob: -3.9803359508514404

Token 224: '(foo' (ID: 171155)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09976550191640854
    2. '(foo' → logprob: -2.7247655391693115
    3. '(' → logprob: -3.5997655391693115
    4. '_' → logprob: -6.599765300750732
    5. '(i' → logprob: -8.22476577758789
    6. '()
' → logprob: -9.47476577758789
    7. 'foo' → logprob: -9.59976577758789
    8. '(_)' → logprob: -10.72476577758789
    9. '<|end|>' → logprob: -10.72476577758789
    10. '(
' → logprob: -10.84976577758789

Token 225: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09649960696697235
    2. '.x' → logprob: -2.9714996814727783
    3. ')' → logprob: -4.471499443054199
    4. ',' → logprob: -5.221499443054199
    5. '(' → logprob: -5.346499443054199
    6. '.y' → logprob: -5.471499443054199
    7. '.foo' → logprob: -5.721499443054199
    8. 'choices' → logprob: -5.971499443054199
    9. '.hist' → logprob: -6.596499443054199
    10. '(i' → logprob: -6.596499443054199

Token 226: 'choices' (ID: 56195)
  Prédit: 'choices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.16227008402347565
    2. 'hist' → logprob: -2.4122700691223145
    3. 'x' → logprob: -3.0372700691223145
    4. 'idx' → logprob: -4.9122700691223145
    5. 'available' → logprob: -6.7872700691223145
    6. 'y' → logprob: -7.6622700691223145
    7. ')' → logprob: -7.6622700691223145
    8. 'history' → logprob: -8.037270545959473
    9. 'choice' → logprob: -8.412270545959473
    10. 'z' → logprob: -8.599770545959473

Token 227: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005952975247055292
    2. '[' → logprob: -5.130952835083008
    3. ')' → logprob: -11.630952835083008
    4. ')[' → logprob: -12.005952835083008
    5. ' [' → logprob: -12.630952835083008
    6. '[
' → logprob: -13.880952835083008
    7. 'i' → logprob: -14.005952835083008
    8. 'foo' → logprob: -14.255952835083008
    9. '[f' → logprob: -15.005952835083008
    10. ')i' → logprob: -15.005952835083008

Token 228: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7401846647262573
    2. ')' → logprob: -0.9901846647262573
    3. '[' → logprob: -2.490184783935547
    4. ' )' → logprob: -3.740184783935547
    5. ' ])' → logprob: -4.115184783935547
    6. '])
' → logprob: -4.615184783935547
    7. ')
' → logprob: -4.740184783935547
    8. ' )
' → logprob: -5.990184783935547
    9. '[i' → logprob: -6.365184783935547
    10. ' ])
' → logprob: -6.990184783935547

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002420725766569376
    2. 'i' → logprob: -7.252420902252197
    3. '<|end|>' → logprob: -7.377420902252197
    4. '
' → logprob: -8.377420425415039
    5. '<|end|>' → logprob: -8.377420425415039
    6. '            
' → logprob: -8.627420425415039
    7. '    
' → logprob: -9.377420425415039
    8. ',' → logprob: -9.627420425415039
    9. '   ' → logprob: -9.627420425415039
    10. '\n' → logprob: -10.377420425415039

Token 230: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3653605282306671
    2. ' i' → logprob: -1.8653604984283447
    3. 'i' (adapté à ' i') → logprob: -2.1153604984283447
    4. '
' → logprob: -3.8653604984283447
    5. ' 
' → logprob: -5.365360736846924
    6. '	i' → logprob: -6.865360736846924
    7. '   ' → logprob: -6.990360736846924
    8. '\n' → logprob: -6.990360736846924
    9. '            
' → logprob: -7.865360736846924
    10. '    
' → logprob: -8.365360260009766

Token 231: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4646476209163666
    2. ' +=' → logprob: -1.464647650718689
    3. '+' → logprob: -1.964647650718689
    4. ' +' → logprob: -8.58964729309082
    5. '=' → logprob: -9.46464729309082
    6. '++' → logprob: -11.71464729309082
    7. ' ' → logprob: -12.83964729309082
    8. '1' → logprob: -13.58964729309082
    9. ' =' → logprob: -13.96464729309082
    10. '+++' → logprob: -14.21464729309082

Token 232: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040785204619169235
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.004077911376953
    4. '  ' → logprob: -17.754077911376953
    5. '<|end|>' → logprob: -18.129077911376953
    6. ' ' → logprob: -18.441577911376953
    7. '```' → logprob: -18.879077911376953
    8. '2' → logprob: -18.879077911376953
    9. '+' → logprob: -18.941577911376953
    10. '１' → logprob: -19.316577911376953

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.375139236450195
    4. '  ' → logprob: -18.000139236450195
    5. '<|end|>' → logprob: -18.625139236450195
    6. '```' → logprob: -19.000139236450195
    7. '
' → logprob: -19.875139236450195
    8. '2' → logprob: -19.875139236450195
    9. '۱' → logprob: -20.250139236450195
    10. '    ' → logprob: -20.500139236450195

Token 234: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9562021493911743
    2. 'def' (adapté à ' def') → logprob: -1.2062021493911743
    3. '
' → logprob: -1.4562021493911743
    4. ' def' → logprob: -3.4562020301818848
    5. '_' → logprob: -3.9562020301818848
    6. ' 
' → logprob: -4.581202030181885
    7. '    
' → logprob: -5.081202030181885
    8. ' ' → logprob: -5.081202030181885
    9. '  
' → logprob: -5.206202030181885
    10. '<|end|>' → logprob: -6.081202030181885

Token 237: ' _' (ID: 1175)
  Prédit: '_act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_act' → logprob: -0.23439335823059082
    2. ' _' → logprob: -1.6093933582305908
    3. '_' → logprob: -5.484393119812012
    4. '_next' → logprob: -7.109393119812012
    5. '_out' → logprob: -7.984393119812012
    6. '_step' → logprob: -8.359393119812012
    7. '_predict' → logprob: -8.359393119812012
    8. '_run' → logprob: -8.484393119812012
    9. ' ' → logprob: -8.484393119812012
    10. '_try' → logprob: -8.734393119812012

Token 238: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0007204149151220918
    2. '_act' → logprob: -7.250720500946045
    3. ' act' → logprob: -13.000720024108887
    4. '	act' → logprob: -13.250720024108887
    5. 'ac' → logprob: -13.375720024108887
    6. '   ' → logprob: -14.125720024108887
    7. '(act' → logprob: -14.625720024108887
    8. 'a' → logprob: -14.750720024108887
    9. '_' → logprob: -14.875720024108887
    10. 'def' → logprob: -14.875720024108887

Token 239: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.00018268341955263168
    2. '(self' → logprob: -8.62518310546875
    3. '(' → logprob: -13.25018310546875
    4. '(bar' → logprob: -14.37518310546875
    5. ' (' → logprob: -15.25018310546875
    6. 'foo' → logprob: -15.25018310546875
    7. ' foo' → logprob: -16.37518310546875
    8. '(F' → logprob: -17.50018310546875
    9. '(food' → logprob: -17.62518310546875
    10. '(s' → logprob: -17.62518310546875

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007205340662039816
    2. ' ,' → logprob: -7.250720500946045
    3. '   ' → logprob: -13.750720977783203
    4. ',a' → logprob: -13.750720977783203
    5. ',t' → logprob: -13.875720977783203
    6. '       ' → logprob: -14.375720977783203
    7. ',s' → logprob: -14.500720977783203
    8. ',x' → logprob: -14.500720977783203
    9. ',c' → logprob: -14.500720977783203
    10. 'self' → logprob: -14.625720977783203

Token 241: ' op' (ID: 991)
  Prédit: 'choice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choice' → logprob: -0.48068371415138245
    2. 'c' → logprob: -1.98068368434906
    3. 'ch' → logprob: -2.8556838035583496
    4. ' choice' → logprob: -2.9806838035583496
    5. 'val' → logprob: -3.8556838035583496
    6. ' c' → logprob: -4.10568380355835
    7. 'act' → logprob: -4.10568380355835
    8. 'action' → logprob: -4.60568380355835
    9. 'cmd' → logprob: -4.60568380355835
    10. 'op' → logprob: -4.85568380355835

Token 242: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4288770258426666
    2. '):' → logprob: -1.0538769960403442
    3. ',' → logprob: -9.803876876831055
    4. ' ):' → logprob: -10.303876876831055
    5. ':' → logprob: -10.678876876831055
    6. '):
' → logprob: -11.053876876831055
    7. '):

' → logprob: -11.178876876831055
    8. ')' → logprob: -11.428876876831055
    9. ' ):
' → logprob: -11.553876876831055
    10. '   ' → logprob: -13.553876876831055

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3409445881843567
    2. ':' → logprob: -1.340944528579712
    3. ' ' → logprob: -4.715944766998291
    4. ' :' → logprob: -5.340944766998291
    5. ',' → logprob: -6.215944766998291
    6. '    ' → logprob: -6.215944766998291
    7. '(' → logprob: -6.715944766998291
    8. '   ' → logprob: -6.840944766998291
    9. '):' → logprob: -6.840944766998291
    10. '<|end|>' → logprob: -6.965944766998291

Token 244: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10487230122089386
    2. 'if' (adapté à ' if') → logprob: -2.354872226715088
    3. ' ' → logprob: -6.229872226715088
    4. '       ' → logprob: -6.604872226715088
    5. ' foo' → logprob: -7.854872226715088
    6. '    ' → logprob: -8.104872703552246
    7. '        ' → logprob: -8.979872703552246
    8. '   ' → logprob: -9.229872703552246
    9. '_' → logprob: -9.354872703552246
    10. 'foo' → logprob: -9.604872703552246

Token 245: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.04303356260061264
    2. 'op' → logprob: -3.1680335998535156
    3. ' ' → logprob: -11.293033599853516
    4. ' foo' → logprob: -11.793033599853516
    5. 'foo' → logprob: -12.918033599853516
    6. '	op' → logprob: -12.918033599853516
    7. '  ' → logprob: -13.293033599853516
    8. '   ' → logprob: -13.293033599853516
    9. ' ' → logprob: -13.418033599853516
    10. '    ' → logprob: -13.793033599853516

Token 246: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03119450807571411
    2. '==' → logprob: -3.5311944484710693
    3. ' ' → logprob: -7.281194686889648
    4. ' in' → logprob: -7.656194686889648
    5. '[' → logprob: -9.281194686889648
    6. ' is' → logprob: -10.031194686889648
    7. ')' → logprob: -10.156194686889648
    8. 'in' → logprob: -11.281194686889648
    9. ' =="' → logprob: -11.406194686889648
    10. '.startswith' → logprob: -11.531194686889648

Token 247: ' "' (ID: 392)
  Prédit: 'Foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Foo' → logprob: -0.7392609119415283
    2. ' Foo' → logprob: -0.9892609119415283
    3. 'foo' → logprob: -2.4892609119415283
    4. ' foo' → logprob: -2.8642609119415283
    5. '"' → logprob: -5.364260673522949
    6. ' ' → logprob: -5.864260673522949
    7. ''' → logprob: -6.489260673522949
    8. ' "' → logprob: -7.489260673522949
    9. ' '' → logprob: -7.864260673522949
    10. '0' → logprob: -8.11426067352295

Token 248: 'AB' (ID: 2912)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.15057317912578583
    2. 'x' → logprob: -2.150573253631592
    3. ' X' → logprob: -5.525573253631592
    4. 'Y' → logprob: -5.775573253631592
    5. 'Z' → logprob: -6.275573253631592
    6. '+' → logprob: -6.275573253631592
    7. 'A' → logprob: -6.400573253631592
    8. '0' → logprob: -6.650573253631592
    9. 'L' → logprob: -6.775573253631592
    10. '"' → logprob: -6.900573253631592

Token 249: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.17522011697292328
    2. '":
' → logprob: -2.300220012664795
    3. '"' → logprob: -3.175220012664795
    4. 'C' → logprob: -5.050220012664795
    5. 'A' → logprob: -5.175220012664795
    6. '+":' → logprob: -6.300220012664795
    7. '+' → logprob: -6.675220012664795
    8. '"):
' → logprob: -7.800220012664795
    9. 'AB' → logprob: -7.925220012664795
    10. '"):' → logprob: -8.300220489501953

Token 250: ' foo' (ID: 30551)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37494656443595886
    2. ' foo' → logprob: -1.2499465942382812
    3. 'foo' → logprob: -4.374946594238281
    4. ' if' → logprob: -4.874946594238281
    5. ' 
' → logprob: -6.374946594238281
    6. '
' → logprob: -6.999946594238281
    7. '            
' → logprob: -7.124946594238281
    8. ' ' → logprob: -7.749946594238281
    9. '(foo' → logprob: -8.124946594238281
    10. '            ' → logprob: -8.124946594238281

Token 251: '._' (ID: 2697)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0643659383058548
    2. '.hist' → logprob: -3.439365863800049
    3. '.' → logprob: -4.064365863800049
    4. '.z' → logprob: -5.189365863800049
    5. '.st' → logprob: -6.189365863800049
    6. '.y' → logprob: -6.314365863800049
    7. '.idx' → logprob: -6.814365863800049
    8. ' .' → logprob: -7.564365863800049
    9. '.out' → logprob: -7.689365863800049
    10. '._' → logprob: -7.689365863800049

Token 252: 'd' (ID: 67)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.9210145473480225
    2. 'x' → logprob: -2.0460145473480225
    3. 'AB' → logprob: -3.0460145473480225
    4. '_act' → logprob: -3.2960145473480225
    5. 'cd' → logprob: -3.6710145473480225
    6. 'c' → logprob: -3.9210145473480225
    7. 'move' → logprob: -4.171014785766602
    8. 'foo' → logprob: -4.296014785766602
    9. 'choose' → logprob: -4.296014785766602
    10. 'ab' → logprob: -4.421014785766602

Token 253: 'oth' (ID: 1661)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.9486913084983826
    2. 'e' → logprob: -1.3236913681030273
    3. 'ec' → logprob: -1.4486913681030273
    4. 'ef' → logprob: -4.198691368103027
    5. 'el' → logprob: -4.323691368103027
    6. 'ouble' → logprob: -4.573691368103027
    7. 'own' → logprob: -5.448691368103027
    8. 'iv' → logprob: -5.511191368103027
    9. 'rop' → logprob: -5.636191368103027
    10. 'iscard' → logprob: -5.761191368103027

Token 254: 'is' (ID: 276)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.47139400243759155
    2. 'is' → logprob: -2.3463940620422363
    3. 'at' → logprob: -2.5963940620422363
    4. 'row' → logprob: -2.5963940620422363
    5. 'ings' → logprob: -3.0963940620422363
    6. 'e' → logprob: -3.5963940620422363
    7. 'i' → logprob: -4.221394062042236
    8. '(foo' → logprob: -4.596394062042236
    9. 'ink' → logprob: -5.096394062042236
    10. 'ree' → logprob: -5.471394062042236

Token 255: '(foo' (ID: 171155)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027355581521987915
    2. '(foo' → logprob: -4.277355670928955
    3. '(F' → logprob: -4.777355670928955
    4. '(' → logprob: -5.777355670928955
    5. '()
' → logprob: -6.652355670928955
    6. '();' → logprob: -9.402355194091797
    7. 'foo' → logprob: -10.152355194091797
    8. '("' → logprob: -10.527355194091797
    9. '(A' → logprob: -10.777355194091797
    10. '_' → logprob: -10.902355194091797

Token 256: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.056434374302625656
    2. ',' → logprob: -3.306434392929077
    3. '.' → logprob: -4.681434154510498
    4. ',x' → logprob: -6.056434154510498
    5. ' ' → logprob: -6.306434154510498
    6. ' .' → logprob: -6.806434154510498
    7. '.y' → logprob: -6.931434154510498
    8. ' ,' → logprob: -7.056434154510498
    9. ')' → logprob: -7.806434154510498
    10. '.F' → logprob: -7.931434154510498

Token 257: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051563333719968796
    2. ',' → logprob: -3.801563262939453
    3. '+' → logprob: -4.426563262939453
    4. ' )' → logprob: -4.926563262939453
    5. ' +' → logprob: -5.426563262939453
    6. ')
' → logprob: -5.801563262939453
    7. ' ,' → logprob: -7.801563262939453
    8. ');' → logprob: -8.301563262939453
    9. '   ' → logprob: -9.176563262939453
    10. ' )
' → logprob: -9.926563262939453

Token 258: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.31360283493995667
    2. ' foo' → logprob: -1.3136028051376343
    3. ' ' → logprob: -8.938602447509766
    4. '   ' → logprob: -9.938602447509766
    5. '  ' → logprob: -10.188602447509766
    6. '    ' → logprob: -10.438602447509766
    7. '(foo' → logprob: -10.563602447509766
    8. ')' → logprob: -11.188602447509766
    9. '0' → logprob: -12.188602447509766
    10. '1' → logprob: -12.188602447509766

Token 259: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.12976805865764618
    2. 'y' → logprob: -2.629768133163452
    3. '.' → logprob: -3.129768133163452
    4. '.z' → logprob: -5.379767894744873
    5. 'z' → logprob: -7.629767894744873
    6. ' y' → logprob: -8.254768371582031
    7. ' ' → logprob: -8.629768371582031
    8. ' .' → logprob: -9.379768371582031
    9. '	y' → logprob: -10.004768371582031
    10. '.x' → logprob: -10.504768371582031

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003845328465104103
    2. ')
' → logprob: -5.75384521484375
    3. ',' → logprob: -7.87884521484375
    4. ' )' → logprob: -8.75384521484375
    5. ');' → logprob: -9.62884521484375
    6. '   ' → logprob: -10.50384521484375
    7. ' ' → logprob: -11.87884521484375
    8. '       ' → logprob: -12.50384521484375
    9. ')

' → logprob: -12.62884521484375
    10. ')}' → logprob: -12.87884521484375

Token 261: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18306463956832886
    2. ' elif' → logprob: -1.8080646991729736
    3. '       ' → logprob: -6.1830644607543945
    4. '	elif' → logprob: -7.3080644607543945
    5. '<|end|>' → logprob: -7.6830644607543945
    6. '   ' → logprob: -10.058064460754395
    7. 'else' → logprob: -11.433064460754395
    8. ',' → logprob: -11.558064460754395
    9. '
' → logprob: -11.933064460754395
    10. ' else' → logprob: -11.933064460754395

Token 263: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0012226090766489506
    2. 'op' → logprob: -6.751222610473633
    3. ' ' → logprob: -10.376222610473633
    4. '(op' → logprob: -11.126222610473633
    5. '	op' → logprob: -13.376222610473633
    6. ' (' → logprob: -13.751222610473633
    7. '_op' → logprob: -14.626222610473633
    8. '  ' → logprob: -14.751222610473633
    9. ' ' → logprob: -15.001222610473633
    10. '"' → logprob: -15.313722610473633

Token 264: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0232709851115942
    2. '==' → logprob: -3.773271083831787
    3. ' ' → logprob: -10.773270606994629
    4. '[' → logprob: -13.648270606994629
    5. ' =="' → logprob: -14.023270606994629
    6. ' ==
' → logprob: -14.273270606994629
    7. '==
' → logprob: -14.648270606994629
    8. '=="' → logprob: -15.398270606994629
    9. ' ' → logprob: -15.523270606994629
    10. '=' → logprob: -15.773270606994629

Token 265: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.12711487710475922
    2. '"' → logprob: -2.127114772796631
    3. ' ' → logprob: -8.752115249633789
    4. '"A' → logprob: -12.252115249633789
    5. '"B' → logprob: -12.252115249633789
    6. '"x' → logprob: -12.502115249633789
    7. ' '' → logprob: -12.627115249633789
    8. ''' → logprob: -12.752115249633789
    9. ' foo' → logprob: -13.939615249633789
    10. '  ' → logprob: -13.939615249633789

Token 266: 'AC' (ID: 2436)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.4560922086238861
    2. 'z' → logprob: -1.8310922384262085
    3. 'AC' → logprob: -2.581092119216919
    4. 'BC' → logprob: -2.581092119216919
    5. 'yz' → logprob: -4.081092357635498
    6. 'xz' → logprob: -4.581092357635498
    7. 'x' → logprob: -5.331092357635498
    8. 'y' → logprob: -5.581092357635498
    9. 'ABC' → logprob: -5.581092357635498
    10. 'Foo' → logprob: -6.206092357635498

Token 267: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.003540439996868372
    2. ':' → logprob: -5.753540515899658
    3. '":
' → logprob: -8.7535400390625
    4. ' ":' → logprob: -9.5035400390625
    5. '"' → logprob: -9.7535400390625
    6. '"):' → logprob: -11.1285400390625
    7. ',' → logprob: -11.2535400390625
    8. '):' → logprob: -11.6285400390625
    9. '(foo' → logprob: -12.1285400390625
    10. '"]:' → logprob: -12.3785400390625

Token 268: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.003179975086823106
    2. 'foo' → logprob: -5.753180027008057
    3. '(foo' → logprob: -13.253179550170898
    4. ' fo' → logprob: -15.753179550170898
    5. ' Foo' → logprob: -15.753179550170898
    6. '.foo' → logprob: -16.5031795501709
    7. '/foo' → logprob: -16.5031795501709
    8. ' ' → logprob: -18.0031795501709
    9. '        ' → logprob: -18.2531795501709
    10. '    ' → logprob: -18.5031795501709

Token 269: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.668304245569743e-05
    2. '.' → logprob: -10.375046730041504
    3. ' .' → logprob: -12.000046730041504
    4. ' _' → logprob: -12.875046730041504
    5. '_d' → logprob: -13.125046730041504
    6. '   ' → logprob: -13.500046730041504
    7. ' ' → logprob: -13.625046730041504
    8. '_' → logprob: -14.250046730041504
    9. '.d' → logprob: -14.750046730041504
    10. '_act' → logprob: -14.875046730041504

Token 270: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004605783324223012
    2. '_d' → logprob: -8.000460624694824
    3. '_' → logprob: -10.125460624694824
    4. 'z' → logprob: -10.375460624694824
    5. '_act' → logprob: -10.875460624694824
    6. 'act' → logprob: -11.375460624694824
    7. '_z' → logprob: -12.500460624694824
    8. '
' → logprob: -12.750460624694824
    9. ' ' → logprob: -13.125460624694824
    10. ' d' → logprob: -13.375460624694824

Token 271: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.001411900855600834
    2. 'o' → logprob: -6.6264119148254395
    3. 'this' → logprob: -11.001411437988281
    4. 'th' → logprob: -11.001411437988281
    5. 'ot' → logprob: -11.626411437988281
    6. 'of' → logprob: -11.626411437988281
    7. 'oph' → logprob: -12.501411437988281
    8. 'ath' → logprob: -12.751411437988281
    9. 'd' → logprob: -12.876411437988281
    10. 'ol' → logprob: -13.001411437988281

Token 272: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0036904551088809967
    2. 'foo' → logprob: -6.503690242767334
    3. 'this' → logprob: -6.503690242767334
    4. 'at' → logprob: -7.878690242767334
    5. '(foo' → logprob: -9.253690719604492
    6. 'This' → logprob: -10.003690719604492
    7. 'his' → logprob: -10.253690719604492
    8. 'o' → logprob: -10.378690719604492
    9. 'i' → logprob: -11.128690719604492
    10. 'ist' → logprob: -11.253690719604492

Token 273: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -5.512236498361744e-07
    2. 'foo' → logprob: -15.125000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(food' → logprob: -18.875
    5. '/foo' → logprob: -20.875
    6. ' foo' → logprob: -21.0
    7. '(fake' → logprob: -21.5
    8. '(bar' → logprob: -22.0
    9. ' (' → logprob: -22.0
    10. '.foo' → logprob: -22.625

Token 274: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00013202552509028465
    2. '.' → logprob: -9.625131607055664
    3. 'x' → logprob: -9.875131607055664
    4. '.y' → logprob: -11.500131607055664
    5. ' .' → logprob: -13.500131607055664
    6. '(x' → logprob: -13.875131607055664
    7. ' ' → logprob: -14.625131607055664
    8. '[' → logprob: -14.875131607055664
    9. ',x' → logprob: -15.000131607055664
    10. ' x' → logprob: -15.250131607055664

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.170270353322849e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',
' → logprob: -13.250061988830566
    4. ')' → logprob: -14.625061988830566
    5. 'foo' → logprob: -14.750061988830566
    6. ' ' → logprob: -16.50006103515625
    7. '),' → logprob: -16.87506103515625
    8. '
' → logprob: -17.00006103515625
    9. '(foo' → logprob: -17.00006103515625
    10. ' foo' → logprob: -17.12506103515625

Token 276: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.038044244050979614
    2. ' foo' → logprob: -3.2880442142486572
    3. '(foo' → logprob: -13.913043975830078
    4. ' ' → logprob: -14.038043975830078
    5. '.foo' → logprob: -15.163043975830078
    6. '/foo' → logprob: -15.413043975830078
    7. 'fo' → logprob: -15.538043975830078
    8. '   ' → logprob: -16.163043975830078
    9. 'foobar' → logprob: -16.163043975830078
    10. '  ' → logprob: -16.413043975830078

Token 277: '.z' (ID: 9161)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035137145314365625
    2. ',z' → logprob: -5.878513813018799
    3. '.z' → logprob: -7.628513813018799
    4. ' ,' → logprob: -9.00351333618164
    5. 'z' → logprob: -9.37851333618164
    6. ' ' → logprob: -11.87851333618164
    7. ')' → logprob: -13.25351333618164
    8. '.' → logprob: -13.62851333618164
    9. ',
' → logprob: -13.87851333618164
    10. '
' → logprob: -13.87851333618164

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010972379241138697
    2. ')
' → logprob: -6.876097202301025
    3. ' )' → logprob: -10.376097679138184
    4. '       ' → logprob: -10.876097679138184
    5. '<|end|>' → logprob: -11.876097679138184
    6. '   ' → logprob: -13.001097679138184
    7. ')#' → logprob: -13.876097679138184
    8. ')

' → logprob: -14.626097679138184
    9. ')\
' → logprob: -14.751097679138184
    10. ')return' → logprob: -14.751097679138184

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03928666561841965
    2. '<|end|>' → logprob: -3.4142866134643555
    3. '   ' → logprob: -5.5392866134643555
    4. '        
' → logprob: -8.039286613464355
    5. '
' → logprob: -8.164286613464355
    6. '    
' → logprob: -8.664286613464355
    7. '  
' → logprob: -8.664286613464355
    8. ' if' → logprob: -9.289286613464355
    9. ')' → logprob: -9.414286613464355
    10. ' 
' → logprob: -9.414286613464355

Token 280: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3342999219894409
    2. ' if' → logprob: -1.834299921989441
    3. '       ' → logprob: -2.0843000411987305
    4. '   ' → logprob: -11.08430004119873
    5. 'elif' → logprob: -11.20930004119873
    6. ' ' → logprob: -12.33430004119873
    7. ' elif' → logprob: -12.83430004119873
    8. '	if' → logprob: -13.33430004119873
    9. '           ' → logprob: -13.95930004119873
    10. '
' → logprob: -14.70930004119873

Token 281: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0005054924986325204
    2. 'op' → logprob: -7.750505447387695
    3. '(op' → logprob: -9.625505447387695
    4. ' ' → logprob: -12.250505447387695
    5. ' (' → logprob: -13.375505447387695
    6. '	op' → logprob: -13.625505447387695
    7. '    ' → logprob: -15.250505447387695
    8. ' foo' → logprob: -15.625505447387695
    9. '  ' → logprob: -15.625505447387695
    10. ' ' → logprob: -16.250505447387695

Token 282: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10023287683725357
    2. '==' → logprob: -2.3502328395843506
    3. ' ' → logprob: -11.10023307800293
    4. '=' → logprob: -12.72523307800293
    5. '[' → logprob: -12.97523307800293
    6. ' ==
' → logprob: -13.72523307800293
    7. '==
' → logprob: -13.85023307800293
    8. '  ' → logprob: -14.10023307800293
    9. '===' → logprob: -14.47523307800293
    10. ' ' → logprob: -14.72523307800293

Token 283: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25502049922943115
    2. ' "' → logprob: -1.5050204992294312
    3. 'foo' → logprob: -6.505020618438721
    4. ' foo' → logprob: -6.630020618438721
    5. ' ' → logprob: -8.630020141601562
    6. '(foo' → logprob: -10.755020141601562
    7. '"user' → logprob: -11.380020141601562
    8. ' ' → logprob: -11.380020141601562
    9. ''' → logprob: -11.755020141601562
    10. '
' → logprob: -12.505020141601562

Token 284: 'BC' (ID: 7551)
  Prédit: 'BC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BC' → logprob: -0.008965058252215385
    2. 'bc' → logprob: -5.258965015411377
    3. 'yz' → logprob: -5.758965015411377
    4. ' BC' → logprob: -8.133965492248535
    5. 'y' → logprob: -9.383965492248535
    6. 'BY' → logprob: -10.133965492248535
    7. 'foo' → logprob: -10.383965492248535
    8. 'YZ' → logprob: -10.633965492248535
    9. 'BA' → logprob: -11.008965492248535
    10. 'AY' → logprob: -11.258965492248535

Token 285: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.01682179979979992
    2. ':' → logprob: -4.14182186126709
    3. '":
' → logprob: -8.26682186126709
    4. '"):' → logprob: -8.39182186126709
    5. ' ":' → logprob: -8.89182186126709
    6. '"' → logprob: -10.14182186126709
    7. '):' → logprob: -10.14182186126709
    8. '"]:' → logprob: -10.76682186126709
    9. ' :' → logprob: -11.51682186126709
    10. '"):
' → logprob: -11.64182186126709

Token 286: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.0019289902411401272
    2. 'foo' → logprob: -6.251928806304932
    3. '(foo' → logprob: -14.87692928314209
    4. '/foo' → logprob: -17.626928329467773
    5. ' Foo' → logprob: -18.001928329467773
    6. '       ' → logprob: -18.501928329467773
    7. ' fo' → logprob: -19.001928329467773
    8. '.foo' → logprob: -19.001928329467773
    9. '        ' → logprob: -19.376928329467773
    10. ' ' → logprob: -21.001928329467773

Token 287: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.9795445849886164e-05
    2. '_d' → logprob: -10.625060081481934
    3. '_act' → logprob: -10.750060081481934
    4. '.' → logprob: -11.375060081481934
    5. '   ' → logprob: -14.500060081481934
    6. '_' → logprob: -14.625060081481934
    7. ' .' → logprob: -15.000060081481934
    8. '.d' → logprob: -15.000060081481934
    9. '.act' → logprob: -15.000060081481934
    10. ' _' → logprob: -15.750060081481934

Token 288: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003633521846495569
    2. '_act' → logprob: -8.50036334991455
    3. '_d' → logprob: -9.50036334991455
    4. 'z' → logprob: -10.25036334991455
    5. 'act' → logprob: -10.50036334991455
    6. '_' → logprob: -11.87536334991455
    7. 'x' → logprob: -12.62536334991455
    8. 'y' → logprob: -12.75036334991455
    9. 'Act' → logprob: -13.00036334991455
    10. 'a' → logprob: -14.50036334991455

Token 289: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.00886557251214981
    2. 'o' → logprob: -5.3838653564453125
    3. 'this' → logprob: -6.3838653564453125
    4. 'th' → logprob: -6.6338653564453125
    5. 'ot' → logprob: -7.7588653564453125
    6. 'foo' → logprob: -8.758865356445312
    7. '_this' → logprob: -9.258865356445312
    8. 'd' → logprob: -10.008865356445312
    9. 'z' → logprob: -10.008865356445312
    10. 'of' → logprob: -10.258865356445312

Token 290: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0025101432111114264
    2. 'foo' → logprob: -6.502510070800781
    3. 'this' → logprob: -7.002510070800781
    4. '(foo' → logprob: -10.127510070800781
    5. 'o' → logprob: -10.502510070800781
    6. 'his' → logprob: -11.502510070800781
    7. 'This' → logprob: -12.377510070800781
    8. 'ist' → logprob: -12.627510070800781
    9. 'at' → logprob: -13.127510070800781
    10. 'oo' → logprob: -13.377510070800781

Token 291: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -2.5776860184123507e-06
    2. 'foo' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. '(food' → logprob: -18.375001907348633
    5. ' foo' → logprob: -18.875001907348633
    6. '/foo' → logprob: -20.125001907348633
    7. '.foo' → logprob: -20.875001907348633
    8. '(fake' → logprob: -21.000001907348633
    9. ' (' → logprob: -21.250001907348633
    10. '(
' → logprob: -21.375001907348633

Token 292: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0051381695084273815
    2. 'y' → logprob: -5.380138397216797
    3. '.' → logprob: -7.630138397216797
    4. ',y' → logprob: -11.630138397216797
    5. ' y' → logprob: -12.005138397216797
    6. ' .' → logprob: -12.380138397216797
    7. '(y' → logprob: -12.505138397216797
    8. '.py' → logprob: -12.880138397216797
    9. ' ' → logprob: -13.130138397216797
    10. '	y' → logprob: -14.005138397216797

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003360582049936056
    2. ' ,' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.375335693359375
    4. ',
' → logprob: -15.500335693359375
    5. '<|end|>' → logprob: -16.625335693359375
    6. ')' → logprob: -16.750335693359375
    7. '   ' → logprob: -17.750335693359375
    8. '‌,' → logprob: -18.000335693359375
    9. 'foo' → logprob: -18.500335693359375
    10. ',user' → logprob: -18.500335693359375

Token 294: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.03804895281791687
    2. ' foo' → logprob: -3.2880489826202393
    3. '(foo' → logprob: -12.03804874420166
    4. 'fo' → logprob: -14.53804874420166
    5. '.foo' → logprob: -14.66304874420166
    6. 'foobar' → logprob: -15.16304874420166
    7. '/foo' → logprob: -16.038049697875977
    8. 'fox' → logprob: -16.163049697875977
    9. 'Foo' → logprob: -16.913049697875977
    10. ' ' → logprob: -17.288049697875977

Token 295: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.6514489650726318
    2. 'z' → logprob: -0.7764489650726318
    3. ',' → logprob: -4.401449203491211
    4. ' z' → logprob: -6.276449203491211
    5. ',z' → logprob: -6.276449203491211
    6. '.' → logprob: -6.651449203491211
    7. ')' → logprob: -7.151449203491211
    8. ' ' → logprob: -8.026449203491211
    9. '[' → logprob: -9.901449203491211
    10. '<|end|>' → logprob: -10.151449203491211

Token 296: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023882099776528776
    2. ')
' → logprob: -8.375238418579102
    3. ' )' → logprob: -12.250238418579102
    4. '       ' → logprob: -14.250238418579102
    5. '   ' → logprob: -14.375238418579102
    6. '<|end|>' → logprob: -14.500238418579102
    7. ')

' → logprob: -14.875238418579102
    8. '()' → logprob: -15.375238418579102
    9. ')return' → logprob: -15.375238418579102
    10. ')#' → logprob: -15.875238418579102

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2876567840576172
    2. '<|end|>' → logprob: -1.4126567840576172
    3. '    
' → logprob: -6.162656784057617
    4. '       ' → logprob: -6.287656784057617
    5. '
' → logprob: -7.287656784057617
    6. ' ' → logprob: -7.662656784057617
    7. '  
' → logprob: -7.912656784057617
    8. '  ' → logprob: -8.162656784057617
    9. '<|end|>' → logprob: -8.412656784057617
    10. '        
' → logprob: -9.537656784057617

Token 298: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08030542731285095
    2. '   ' → logprob: -2.580305337905884
    3. ' def' → logprob: -7.080305576324463
    4. '    
' → logprob: -8.205305099487305
    5. '
' → logprob: -8.705305099487305
    6. '	def' → logprob: -9.455305099487305
    7. '  
' → logprob: -10.955305099487305
    8. ' ' → logprob: -11.705305099487305
    9. '   
' → logprob: -11.705305099487305
    10. '        
' → logprob: -11.830305099487305

Token 299: ' _' (ID: 1175)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.002375769428908825
    2. ' _' → logprob: -6.127375602722168
    3. '_act' → logprob: -9.377375602722168
    4. 'd' → logprob: -10.127375602722168
    5. '_' → logprob: -10.752375602722168
    6. ' ' → logprob: -11.627375602722168
    7. '_do' → logprob: -11.627375602722168
    8. ' d' → logprob: -12.127375602722168
    9. '_def' → logprob: -12.627375602722168
    10. '_b' → logprob: -13.002375602722168

Token 300: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00076114950934425
    2. '_d' → logprob: -8.625761032104492
    3. 'act' → logprob: -8.875761032104492
    4. 'do' → logprob: -9.563261032104492
    5. 'def' → logprob: -9.625761032104492
    6. ' d' → logprob: -9.625761032104492
    7. ' ' → logprob: -11.500761032104492
    8. 'oth' → logprob: -11.688261032104492
    9. 'next' → logprob: -11.875761032104492
    10. 'swap' → logprob: -12.063261032104492

Token 301: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.01632537506520748
    2. 'o' → logprob: -4.1413254737854
    3. 'ot' → logprob: -9.766324996948242
    4. '```' → logprob: -10.141324996948242
    5. ' o' → logprob: -10.391324996948242
    6. '_' → logprob: -10.516324996948242
    7. 'of' → logprob: -10.641324996948242
    8. 'ost' → logprob: -11.266324996948242
    9. 'othesis' → logprob: -11.391324996948242
    10. 'od' → logprob: -11.766324996948242

Token 302: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00023274161503650248
    2. 'at' → logprob: -9.250232696533203
    3. 'foo' → logprob: -9.500232696533203
    4. 'this' → logprob: -10.375232696533203
    5. '(foo' → logprob: -10.875232696533203
    6. 'This' → logprob: -12.875232696533203
    7. 'o' → logprob: -13.000232696533203
    8. '```' → logprob: -13.875232696533203
    9. ' foo' → logprob: -14.250232696533203
    10. '

' → logprob: -14.500232696533203

Token 303: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -1.5570885807392187e-05
    2. '(self' → logprob: -11.125015258789062
    3. '(' → logprob: -14.875015258789062
    4. 'foo' → logprob: -15.375015258789062
    5. '(bar' → logprob: -16.000015258789062
    6. '(a' → logprob: -18.000015258789062
    7. '/foo' → logprob: -18.250015258789062
    8. ' (' → logprob: -18.500015258789062
    9. '(food' → logprob: -18.625015258789062
    10. ' foo' → logprob: -19.000015258789062

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. 'self' → logprob: -12.50001335144043
    3. ' ,' → logprob: -12.62501335144043
    4. ',a' → logprob: -12.75001335144043
    5. ',x' → logprob: -13.12501335144043
    6. ',
' → logprob: -14.62501335144043
    7. 'a' → logprob: -15.75001335144043
    8. ',self' → logprob: -16.12501335144043
    9. ',left' → logprob: -16.25001335144043
    10. ',s' → logprob: -16.75001335144043

Token 305: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08554678410291672
    2. 'i' → logprob: -3.4605467319488525
    3. ' a' → logprob: -3.7105467319488525
    4. 'p' → logprob: -4.710546970367432
    5. 'l' → logprob: -5.585546970367432
    6. 'x' → logprob: -6.085546970367432
    7. 'u' → logprob: -6.710546970367432
    8. 'aa' → logprob: -6.835546970367432
    9. 'idx' → logprob: -6.835546970367432
    10. ' i' → logprob: -6.960546970367432

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053201522678136826
    2. '1' → logprob: -3.17820143699646
    3. '0' → logprob: -5.178201675415039
    4. '   ' → logprob: -6.678201675415039
    5. 'a' → logprob: -6.803201675415039
    6. ' ,' → logprob: -6.928201675415039
    7. ' ' → logprob: -8.553201675415039
    8. 'x' → logprob: -8.928201675415039
    9. 'op' → logprob: -9.053201675415039
    10. 'p' → logprob: -9.178201675415039

Token 307: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02650406025350094
    2. ' q' → logprob: -3.6515040397644043
    3. ' ' → logprob: -9.151504516601562
    4. 'p' → logprob: -9.901504516601562
    5. '   ' → logprob: -11.151504516601562
    6. 'c' → logprob: -11.651504516601562
    7. '  ' → logprob: -12.151504516601562
    8. 'k' → logprob: -12.776504516601562
    9. ' p' → logprob: -12.901504516601562
    10. '	q' → logprob: -13.026504516601562

Token 308: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026378216221928596
    2. '):' → logprob: -3.6513781547546387
    3. '):
' → logprob: -9.901378631591797
    4. ',' → logprob: -10.901378631591797
    5. '   ' → logprob: -12.526378631591797
    6. ' ):
' → logprob: -12.901378631591797
    7. '):

' → logprob: -13.651378631591797
    8. '       ' → logprob: -13.776378631591797
    9. ')' → logprob: -15.151378631591797
    10. ' ):' → logprob: -15.526378631591797

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12345150858163834
    2. ' if' → logprob: -2.8734514713287354
    3. ' foo' → logprob: -3.4984514713287354
    4. 'foo' → logprob: -3.9984514713287354
    5. 'if' → logprob: -4.7484517097473145
    6. ' val' → logprob: -8.498451232910156
    7. 'val' → logprob: -8.623451232910156
    8. ' s' → logprob: -8.748451232910156
    9. ' a' → logprob: -8.873451232910156
    10. 'v' → logprob: -8.998451232910156

Token 310: ' if' (ID: 538)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.6482921242713928
    2. 'if' (adapté à ' if') → logprob: -1.023292064666748
    3. 'a' → logprob: -3.148292064666748
    4. '       ' → logprob: -3.523292064666748
    5. 'v' → logprob: -4.523292064666748
    6. 's' → logprob: -5.023292064666748
    7. 'val' → logprob: -5.398292064666748
    8. 'arr' → logprob: -5.648292064666748
    9. 'x' → logprob: -5.773292064666748
    10. ' foo' → logprob: -5.898292064666748

Token 311: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.21562688052654266
    2. 'foo' → logprob: -1.715626835823059
    3. ' p' → logprob: -4.7156267166137695
    4. ' (' → logprob: -6.5906267166137695
    5. '(foo' → logprob: -6.9656267166137695
    6. 'p' → logprob: -7.0906267166137695
    7. ' getattr' → logprob: -7.3406267166137695
    8. ' not' → logprob: -7.7156267166137695
    9. ' ' → logprob: -8.21562671661377
    10. ' len' → logprob: -9.09062671661377

Token 312: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.005416249856352806
    2. '.idx' → logprob: -6.005416393280029
    3. '.' → logprob: -6.630416393280029
    4. '.hist' → logprob: -7.130416393280029
    5. '.out' → logprob: -7.880416393280029
    6. ' .' → logprob: -8.505415916442871
    7. '.s' → logprob: -9.505415916442871
    8. '.x' → logprob: -9.630415916442871
    9. ' ' → logprob: -11.255415916442871
    10. '.p' → logprob: -11.380415916442871

Token 313: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.00021879478299524635
    2. 'uffs' → logprob: -9.125218391418457
    3. '[p' → logprob: -10.125218391418457
    4. 'uf' → logprob: -10.375218391418457
    5. 'u' → logprob: -11.375218391418457
    6. '[' → logprob: -12.000218391418457
    7. 'q' → logprob: -12.500218391418457
    8. '   ' → logprob: -13.125218391418457
    9. '[q' → logprob: -13.125218391418457
    10. '```' → logprob: -13.125218391418457

Token 314: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0003751423500943929
    2. '[' → logprob: -8.500374794006348
    3. '[q' → logprob: -8.750374794006348
    4. 'p' → logprob: -12.500374794006348
    5. '   ' → logprob: -12.875374794006348
    6. 'foo' → logprob: -13.500374794006348
    7. '==' → logprob: -13.875374794006348
    8. ' [' → logprob: -14.000374794006348
    9. '```' → logprob: -14.500374794006348
    10. '[min' → logprob: -14.750374794006348

Token 315: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008576516062021255
    2. ']>' → logprob: -5.883576393127441
    3. ']==' → logprob: -5.883576393127441
    4. '[p' → logprob: -6.758576393127441
    5. ' ]' → logprob: -7.258576393127441
    6. ']!=' → logprob: -7.508576393127441
    7. '[' → logprob: -8.633576393127441
    8. ']<' → logprob: -8.633576393127441
    9. ']+' → logprob: -9.758576393127441
    10. ']>=' → logprob: -9.758576393127441

Token 316: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1777316331863403
    2. '==' → logprob: -1.3027316331863403
    3. '<' → logprob: -1.8027316331863403
    4. ' ==' → logprob: -2.052731513977051
    5. ' >' → logprob: -3.052731513977051
    6. '!=' → logprob: -3.552731513977051
    7. ' !=' → logprob: -3.677731513977051
    8. ' <' → logprob: -3.927731513977051
    9. '=' → logprob: -6.177731513977051
    10. '+' → logprob: -6.302731513977051

Token 317: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.08042037487030029
    2. ' foo' → logprob: -3.33042049407959
    3. '2' → logprob: -4.20542049407959
    4. ' ' → logprob: -4.33042049407959
    5. '1' → logprob: -4.45542049407959
    6. '=' → logprob: -7.45542049407959
    7. '0' → logprob: -7.70542049407959
    8. '3' → logprob: -7.95542049407959
    9. '>' → logprob: -8.45542049407959
    10. '  ' → logprob: -10.20542049407959

Token 318: '.st' (ID: 1980)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2318867444992065
    2. '2' → logprob: -1.3568867444992065
    3. 'foo' → logprob: -2.106886863708496
    4. 'stuff' → logprob: -2.231886863708496
    5. '1' → logprob: -2.481886863708496
    6. ' q' → logprob: -2.856886863708496
    7. ' ' → logprob: -3.356886863708496
    8. ' foo' → logprob: -4.481886863708496
    9. '0' → logprob: -4.856886863708496
    10. 'p' → logprob: -5.231886863708496

Token 319: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.06905612349510193
    2. 'q' → logprob: -3.1940560340881348
    3. '[q' → logprob: -3.8190560340881348
    4. '[' → logprob: -6.819056034088135
    5. 'uffs' → logprob: -7.569056034088135
    6. 'fff' → logprob: -7.694056034088135
    7. ' q' → logprob: -7.694056034088135
    8. '[p' → logprob: -8.069056510925293
    9. 'uf' → logprob: -8.319056510925293
    10. 'ff' → logprob: -8.819056510925293

Token 320: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -1.9504606825648807e-05
    2. '[p' → logprob: -11.750019073486328
    3. '[' → logprob: -12.125019073486328
    4. 'q' → logprob: -12.375019073486328
    5. '   ' → logprob: -14.500019073486328
    6. '(q' → logprob: -14.625019073486328
    7. ' [' → logprob: -15.125019073486328
    8. '?q' → logprob: -15.250019073486328
    9. '       ' → logprob: -16.125019073486328
    10. '[
' → logprob: -16.625019073486328

Token 321: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008985736407339573
    2. ']:
' → logprob: -4.75898551940918
    3. '):' → logprob: -8.75898551940918
    4. ']' → logprob: -9.38398551940918
    5. ':' → logprob: -10.00898551940918
    6. ' ]' → logprob: -11.13398551940918
    7. ']:
' → logprob: -11.25898551940918
    8. ']):' → logprob: -11.50898551940918
    9. '>:' → logprob: -11.63398551940918
    10. ']>' → logprob: -11.75898551940918

Token 322: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2302134782075882
    2. ':' → logprob: -1.8552135229110718
    3. ',' → logprob: -3.8552134037017822
    4. ':
' → logprob: -3.9802134037017822
    5. '               ' → logprob: -6.980213642120361
    6. '       ' → logprob: -6.980213642120361
    7. '<|end|>' → logprob: -6.980213642120361
    8. ' 
' → logprob: -7.105213642120361
    9. '
' → logprob: -7.355213642120361
    10. ' :' → logprob: -7.605213642120361

Token 323: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.2705041468143463
    2. ' foo' → logprob: -1.520504117012024
    3. '           ' → logprob: -4.145503997802734
    4. '               ' → logprob: -6.145503997802734
    5. '   ' → logprob: -9.145503997802734
    6. '```' → logprob: -9.270503997802734
    7. '(foo' → logprob: -9.770503997802734
    8. '
' → logprob: -9.770503997802734
    9. '       ' → logprob: -11.020503997802734
    10. '.foo' → logprob: -11.270503997802734

Token 324: '.move' (ID: 24425)
  Prédit: '.st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.024761611595749855
    2. '.hist' → logprob: -4.39976167678833
    3. '.' → logprob: -5.02476167678833
    4. '.answer' → logprob: -5.89976167678833
    5. '.out' → logprob: -7.02476167678833
    6. '.s' → logprob: -7.89976167678833
    7. '.x' → logprob: -8.024761199951172
    8. '       ' → logprob: -8.649761199951172
    9. ' .' → logprob: -8.774761199951172
    10. '   ' → logprob: -8.774761199951172

Token 325: 'it' (ID: 278)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.17020703852176666
    2. '(q' → logprob: -2.2952070236206055
    3. '(foo' → logprob: -3.2952070236206055
    4. '(' → logprob: -4.1702070236206055
    5. 's' → logprob: -6.6702070236206055
    6. '()' → logprob: -7.4202070236206055
    7. 'foo' → logprob: -7.5452070236206055
    8. '_' → logprob: -8.295207023620605
    9. '('_' → logprob: -9.920207023620605
    10. '(_' → logprob: -10.045207023620605

Token 326: '(q' (ID: 21479)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03237953037023544
    2. '(foo' → logprob: -3.907379627227783
    3. '(q' → logprob: -5.157379627227783
    4. '(' → logprob: -5.157379627227783
    5. 'foo' → logprob: -8.782379150390625
    6. '()' → logprob: -10.532379150390625
    7. ' (' → logprob: -10.532379150390625
    8. '_(' → logprob: -11.907379150390625
    9. '((' → logprob: -12.282379150390625
    10. '_' → logprob: -12.657379150390625

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014161158353090286
    2. ')' → logprob: -4.639161109924316
    3. ',p' → logprob: -5.889161109924316
    4. ' ,' → logprob: -6.514161109924316
    5. ',q' → logprob: -9.764161109924316
    6. ' )' → logprob: -10.264161109924316
    7. ')p' → logprob: -11.014161109924316
    8. 'p' → logprob: -11.264161109924316
    9. '   ' → logprob: -11.389161109924316
    10. ')
' → logprob: -12.639161109924316

Token 328: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005256526172161102
    2. ' p' → logprob: -5.255256652832031
    3. ')' → logprob: -11.880256652832031
    4. ' ' → logprob: -12.380256652832031
    5. '   ' → logprob: -12.380256652832031
    6. '	p' → logprob: -12.755256652832031
    7. ')p' → logprob: -13.880256652832031
    8. '  ' → logprob: -14.130256652832031
    9. 'q' → logprob: -14.880256652832031
    10. 'foo' → logprob: -15.005256652832031

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42942145466804504
    2. ')
' → logprob: -1.0544214248657227
    3. '       ' → logprob: -7.554421424865723
    4. '           ' → logprob: -9.054421424865723
    5. ')

' → logprob: -10.179421424865723
    6. ' )
' → logprob: -11.804421424865723
    7. ')
' → logprob: -12.054421424865723
    8. ')return' → logprob: -12.179421424865723
    9. ' )' → logprob: -12.429421424865723
    10. ',' → logprob: -12.554421424865723

Token 330: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24096691608428955
    2. 'else' → logprob: -1.9909669160842896
    3. ' else' → logprob: -2.740966796875
    4. 'elif' (adapté à ' elif') → logprob: -4.740966796875
    5. ' elif' → logprob: -5.615966796875
    6. '<|end|>' → logprob: -8.865966796875
    7. '        ' → logprob: -8.990966796875
    8. '   ' → logprob: -9.240966796875
    9. ' if' → logprob: -9.740966796875
    10. 'if' → logprob: -9.740966796875

Token 332: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.6931684017181396
    2. ' foo' → logprob: -0.6931684017181396
    3. '(foo' → logprob: -11.318168640136719
    4. ' ' → logprob: -13.068168640136719
    5. '   ' → logprob: -13.068168640136719
    6. '    ' → logprob: -13.693168640136719
    7. '/foo' → logprob: -14.068168640136719
    8. 'fo' → logprob: -14.068168640136719
    9. '.foo' → logprob: -14.193168640136719
    10. 'foobar' → logprob: -15.318168640136719

Token 333: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.00023166877508629113
    2. '.move' → logprob: -8.875231742858887
    3. '.' → logprob: -9.500231742858887
    4. 'st' → logprob: -12.125231742858887
    5. ' .' → logprob: -12.500231742858887
    6. 'move' → logprob: -13.125231742858887
    7. '	st' → logprob: -13.875231742858887
    8. '.s' → logprob: -14.250231742858887
    9. ' ' → logprob: -14.250231742858887
    10. '   ' → logprob: -14.750231742858887

Token 334: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.0010338802821934223
    2. 'aff' → logprob: -7.251033782958984
    3. 'u' → logprob: -8.876033782958984
    4. 'ff' → logprob: -10.376033782958984
    5. 't' → logprob: -10.501033782958984
    6. 'uf' → logprob: -10.501033782958984
    7. '[' → logprob: -10.751033782958984
    8. 'fff' → logprob: -11.501033782958984
    9. ' uff' → logprob: -11.876033782958984
    10. 'stuff' → logprob: -11.876033782958984

Token 335: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0036220469046384096
    2. '[q' → logprob: -5.628622055053711
    3. 'p' → logprob: -11.253622055053711
    4. '[' → logprob: -13.003622055053711
    5. ' [' → logprob: -13.378622055053711
    6. '<p' → logprob: -13.628622055053711
    7. '   ' → logprob: -14.003622055053711
    8. '>' → logprob: -14.253622055053711
    9. ' >' → logprob: -15.003622055053711
    10. '```' → logprob: -15.003622055053711

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08389315754175186
    2. '>' → logprob: -2.583893060684204
    3. ' >' → logprob: -5.958893299102783
    4. ']>' → logprob: -6.458893299102783
    5. '[' → logprob: -7.833893299102783
    6. ' ]' → logprob: -8.708892822265625
    7. '[q' → logprob: -9.458892822265625
    8. ')' → logprob: -9.833892822265625
    9. '   ' → logprob: -10.333892822265625
    10. ' ' → logprob: -10.583892822265625

Token 337: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16411645710468292
    2. ' >' → logprob: -1.9141165018081665
    3. '[q' → logprob: -6.164116382598877
    4. '[' → logprob: -6.414116382598877
    5. '[p' → logprob: -9.289116859436035
    6. ' ' → logprob: -10.914116859436035
    7. ']' → logprob: -11.539116859436035
    8. ' q' → logprob: -12.414116859436035
    9. '<' → logprob: -12.914116859436035
    10. ')' → logprob: -13.039116859436035

Token 338: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.47500401735305786
    2. ' foo' → logprob: -0.9750040173530579
    3. '(foo' → logprob: -7.350004196166992
    4. 'q' → logprob: -8.475004196166992
    5. ' q' → logprob: -9.725004196166992
    6. '[q' → logprob: -11.725004196166992
    7. '[' → logprob: -13.350004196166992
    8. '/foo' → logprob: -13.475004196166992
    9. '.foo' → logprob: -13.600004196166992
    10. ' ' → logprob: -13.725004196166992

Token 339: '.st' (ID: 1980)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.0001029471677611582
    2. '[' → logprob: -9.750102996826172
    3. '```' → logprob: -11.125102996826172
    4. 'st' → logprob: -11.375102996826172
    5. '[p' → logprob: -11.750102996826172
    6. ' [' → logprob: -13.125102996826172
    7. '[s' → logprob: -13.250102996826172
    8. '.' → logprob: -13.375102996826172
    9. 's' → logprob: -13.750102996826172
    10. 'q' → logprob: -14.250102996826172

Token 340: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.00233223638497293
    2. 'ff' → logprob: -6.8773322105407715
    3. '[p' → logprob: -7.8773322105407715
    4. 'q' → logprob: -8.25233268737793
    5. 'uf' → logprob: -8.50233268737793
    6. '[q' → logprob: -8.50233268737793
    7. 'f' → logprob: -9.50233268737793
    8. '[' → logprob: -9.62733268737793
    9. 'aff' → logprob: -10.25233268737793
    10. 'fff' → logprob: -10.75233268737793

Token 341: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -3.1424973713001236e-05
    2. 'q' → logprob: -10.750031471252441
    3. '(q' → logprob: -12.250031471252441
    4. '[' → logprob: -13.000031471252441
    5. '```' → logprob: -13.500031471252441
    6. '[
' → logprob: -14.375031471252441
    7. ' [' → logprob: -15.250031471252441
    8. '   ' → logprob: -16.000030517578125
    9. '[p' → logprob: -16.125030517578125
    10. '?q' → logprob: -16.375030517578125

Token 342: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04174894094467163
    2. '):
' → logprob: -3.2917490005493164
    3. ':' → logprob: -6.291749000549316
    4. ']:' → logprob: -6.666749000549316
    5. '[q' → logprob: -7.916749000549316
    6. '):

' → logprob: -9.541749000549316
    7. ' ):' → logprob: -10.666749000549316
    8. ']:
' → logprob: -10.916749000549316
    9. ']):' → logprob: -10.916749000549316
    10. '[p' → logprob: -11.041749000549316

Token 343: '           ' (ID: 352)
  Prédit: ' foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.6786197423934937
    2. 'foo' → logprob: -1.1786197423934937
    3. '           ' → logprob: -1.8036197423934937
    4. '(foo' → logprob: -4.178619861602783
    5. ':' → logprob: -6.428619861602783
    6. ':
' → logprob: -7.053619861602783
    7. '		' → logprob: -7.553619861602783
    8. ' ' → logprob: -8.178619384765625
    9. '.foo' → logprob: -8.303619384765625
    10. '            ' → logprob: -8.553619384765625

Token 344: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.011107946746051311
    2. ' foo' → logprob: -4.511107921600342
    3. '           ' → logprob: -9.7611083984375
    4. '(foo' → logprob: -13.2611083984375
    5. '               ' → logprob: -15.3861083984375
    6. '		' → logprob: -16.1361083984375
    7. '.foo' → logprob: -16.2611083984375
    8. 'foobar' → logprob: -16.7611083984375
    9. '       ' → logprob: -16.8861083984375
    10. 'fo' → logprob: -17.2611083984375

Token 345: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0006314247148111463
    2. '.' → logprob: -7.375631332397461
    3. 'move' → logprob: -12.625631332397461
    4. ' .' → logprob: -14.625631332397461
    5. '.mov' → logprob: -14.875631332397461
    6. '._' → logprob: -15.250631332397461
    7. '.m' → logprob: -15.875631332397461
    8. ' move' → logprob: -16.75063133239746
    9. '.
' → logprob: -16.87563133239746
    10. '.st' → logprob: -17.62563133239746

Token 346: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.1041145626222715e-05
    2. '(p' → logprob: -11.750011444091797
    3. 'foo' → logprob: -13.375011444091797
    4. '(foo' → logprob: -14.500011444091797
    5. 'It' → logprob: -14.750011444091797
    6. '(q' → logprob: -14.875011444091797
    7. '(it' → logprob: -16.250011444091797
    8. 'p' → logprob: -16.375011444091797
    9. 'q' → logprob: -16.750011444091797
    10. 'it's' → logprob: -17.250011444091797

Token 347: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.750005722045898
    3. 'p' → logprob: -13.250005722045898
    4. '(q' → logprob: -13.750005722045898
    5. '(
' → logprob: -19.3750057220459
    6. '   ' → logprob: -20.3750057220459
    7. 'q' → logprob: -20.8750057220459
    8. ' (' → logprob: -21.0000057220459
    9. '	p' → logprob: -21.3750057220459
    10. '(P' → logprob: -21.8750057220459

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001239196863025427
    2. ',q' → logprob: -9.250123977661133
    3. ' ,' → logprob: -10.500123977661133
    4. 'q' → logprob: -15.750123977661133
    5. ',
' → logprob: -16.000123977661133
    6. '(q' → logprob: -17.750123977661133
    7. ' q' → logprob: -17.875123977661133
    8. '[q' → logprob: -18.625123977661133
    9. ')' → logprob: -19.625123977661133
    10. '```' → logprob: -20.000123977661133

Token 349: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001502598519437015
    2. ' q' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. '	q' → logprob: -16.251502990722656
    5. '           ' → logprob: -17.251502990722656
    6. ' ' → logprob: -17.376502990722656
    7. '       ' → logprob: -18.251502990722656
    8. '               ' → logprob: -18.751502990722656
    9. '    ' → logprob: -18.876502990722656
    10. '     ' → logprob: -19.626502990722656

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002823181450366974
    2. ')
' → logprob: -5.877823352813721
    3. '       ' → logprob: -11.002822875976562
    4. ')

' → logprob: -14.502822875976562
    5. ')
' → logprob: -15.377822875976562
    6. ')#' → logprob: -15.377822875976562
    7. ' )' → logprob: -15.877822875976562
    8. ')`' → logprob: -16.002822875976562
    9. '   ' → logprob: -16.377822875976562
    10. ')\' → logprob: -16.377822875976562

Token 351: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12098440527915955
    2. 'else' (adapté à ' else') → logprob: -2.2459843158721924
    3. ' else' → logprob: -4.9959845542907715
    4. '<|end|>' → logprob: -7.2459845542907715
    5. 'elif' → logprob: -8.120984077453613
    6. '   ' → logprob: -8.745984077453613
    7. '	' → logprob: -9.620984077453613
    8. '	else' → logprob: -9.745984077453613
    9. ' elif' → logprob: -10.995984077453613
    10. '    ' → logprob: -11.620984077453613

Token 353: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17831507325172424
    2. ':' → logprob: -2.0533151626586914
    3. '           ' → logprob: -3.4283151626586914
    4. '   ' → logprob: -6.428315162658691
    5. '       ' → logprob: -7.553315162658691
    6. 'foo' → logprob: -8.928315162658691
    7. '(foo' → logprob: -9.553315162658691
    8. '          ' → logprob: -10.053315162658691
    9. '):
' → logprob: -10.803315162658691
    10. ' :
' → logprob: -10.928315162658691

Token 354: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.557307779788971
    2. 'foo' → logprob: -0.932307779788971
    3. ' foo' → logprob: -3.432307720184326
    4. '   ' → logprob: -8.057308197021484
    5. ' pass' → logprob: -8.182308197021484
    6. '       ' → logprob: -8.307308197021484
    7. '(foo' → logprob: -9.057308197021484
    8. '
' → logprob: -9.182308197021484
    9. 'pass' → logprob: -9.682308197021484
    10. '#' → logprob: -10.182308197021484

Token 355: ' if' (ID: 538)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.006406027358025312
    2. 'pass' → logprob: -5.381405830383301
    3. ' foo' → logprob: -7.006405830383301
    4. 'if' (adapté à ' if') → logprob: -8.0064058303833
    5. 'return' → logprob: -9.1314058303833
    6. 'for' → logprob: -9.5064058303833
    7. 'idx' → logprob: -9.6314058303833
    8. ' pass' → logprob: -9.7564058303833
    9. '#' → logprob: -10.2564058303833
    10. '   ' → logprob: -10.3814058303833

Token 356: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.8094662427902222
    2. ' foo' → logprob: -0.8094662427902222
    3. ' not' → logprob: -2.3094663619995117
    4. ' p' → logprob: -5.559466361999512
    5. 'not' → logprob: -5.934466361999512
    6. 'p' → logprob: -6.434466361999512
    7. '(foo' → logprob: -7.309466361999512
    8. ' ' → logprob: -7.559466361999512
    9. ' op' → logprob: -8.184466361999512
    10. 'op' → logprob: -8.434466361999512

Token 357: '.predict' (ID: 57874)
  Prédit: '.st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.10200802981853485
    2. '.predict' → logprob: -3.352008104324341
    3. '.hist' → logprob: -3.477008104324341
    4. '.x' → logprob: -4.727007865905762
    5. '.' → logprob: -4.977007865905762
    6. '.idx' → logprob: -5.227007865905762
    7. '.move' → logprob: -5.977007865905762
    8. '.out' → logprob: -6.352007865905762
    9. '.pred' → logprob: -6.477007865905762
    10. '.y' → logprob: -6.602007865905762

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04779965803027153
    2. ':
' → logprob: -3.422799587249756
    3. ' and' → logprob: -4.672799587249756
    4. ' :' → logprob: -6.172799587249756
    5. ' ==' → logprob: -6.797799587249756
    6. '==' → logprob: -7.922799587249756
    7. ' :
' → logprob: -8.172800064086914
    8. '[' → logprob: -8.797800064086914
    9. ' or' → logprob: -8.797800064086914
    10. 'and' → logprob: -9.047800064086914

Token 359: '               ' (ID: 506)
  Prédit: ' foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.12884333729743958
    2. '               ' → logprob: -2.628843307495117
    3. 'foo' → logprob: -3.378843307495117
    4. '           ' → logprob: -4.378843307495117
    5. ' return' → logprob: -7.378843307495117
    6. ' if' → logprob: -7.878843307495117
    7. '   ' → logprob: -8.128843307495117
    8. ' for' → logprob: -8.878843307495117
    9. '(foo' → logprob: -8.878843307495117
    10. '       ' → logprob: -9.128843307495117

Token 360: ' if' (ID: 538)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.35798048973083496
    2. ' foo' → logprob: -1.232980489730835
    3. '           ' → logprob: -5.857980728149414
    4. 'return' → logprob: -6.107980728149414
    5. ' return' → logprob: -7.107980728149414
    6. 'pass' → logprob: -7.357980728149414
    7. ' pass' → logprob: -7.357980728149414
    8. 'if' (adapté à ' if') → logprob: -7.482980728149414
    9. ' if' → logprob: -7.857980728149414
    10. 'for' → logprob: -8.357980728149414

Token 361: ' foo' (ID: 30551)
  Prédit: ' foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' foo' → logprob: -0.29997754096984863
    2. 'foo' → logprob: -1.4249775409698486
    3. ' p' → logprob: -4.9249773025512695
    4. ' not' → logprob: -5.4249773025512695
    5. 'p' → logprob: -6.4249773025512695
    6. ' (' → logprob: -6.6749773025512695
    7. ' op' → logprob: -6.6749773025512695
    8. '(foo' → logprob: -7.4249773025512695
    9. 'op' → logprob: -7.6749773025512695
    10. ' q' → logprob: -8.29997730255127

Token 362: '.look' (ID: 142634)
  Prédit: '.hist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.hist' → logprob: -0.47667697072029114
    2. '.st' → logprob: -1.2266769409179688
    3. '.idx' → logprob: -3.2266769409179688
    4. '.move' → logprob: -4.476676940917969
    5. '.out' → logprob: -4.601676940917969
    6. '.predict' → logprob: -5.101676940917969
    7. '.' → logprob: -5.101676940917969
    8. '.x' → logprob: -5.476676940917969
    9. '._' → logprob: -5.976676940917969
    10. ' .' → logprob: -6.601676940917969

Token 363: 'ahead' (ID: 96810)
  Prédit: '(foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.8185622096061707
    2. 'ahead' → logprob: -1.1935622692108154
    3. '(p' → logprob: -2.0685622692108154
    4. '(q' → logprob: -2.8185622692108154
    5. 'foo' → logprob: -3.6935622692108154
    6. '(' → logprob: -4.193562030792236
    7. '(a' → logprob: -4.443562030792236
    8. 'a' → logprob: -5.443562030792236
    9. 'up' → logprob: -5.568562030792236
    10. 's' → logprob: -6.443562030792236

Token 364: '(p' (ID: 2407)
  Prédit: '(foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.059613026678562164
    2. '(p' → logprob: -3.309612989425659
    3. '(q' → logprob: -4.184613227844238
    4. '():' → logprob: -5.809613227844238
    5. '(' → logprob: -6.309613227844238
    6. '()' → logprob: -7.809613227844238
    7. 'foo' → logprob: -7.934613227844238
    8. ' (' → logprob: -8.809613227844238
    9. '((' → logprob: -9.559613227844238
    10. '():
' → logprob: -9.934613227844238

Token 365: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00824185460805893
    2. ',q' → logprob: -5.383241653442383
    3. ' ,' → logprob: -6.133241653442383
    4. '):' → logprob: -7.758241653442383
    5. ')' → logprob: -8.008241653442383
    6. '+' → logprob: -8.258241653442383
    7. ' +' → logprob: -8.883241653442383
    8. ',p' → logprob: -9.258241653442383
    9. '):
' → logprob: -9.633241653442383
    10. ',
' → logprob: -10.133241653442383

Token 366: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08958359807729721
    2. ' foo' → logprob: -3.7145836353302
    3. '               ' → logprob: -3.9645836353302
    4. ':
' → logprob: -4.464583396911621
    5. '(foo' → logprob: -4.589583396911621
    6. 'foo' → logprob: -5.589583396911621
    7. ':' → logprob: -5.839583396911621
    8. '                    
' → logprob: -6.339583396911621
    9. '           ' → logprob: -6.339583396911621
    10. '                       ' → logprob: -6.589583396911621

Token 367: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.5864244699478149
    2. ' foo' → logprob: -0.8364244699478149
    3. '                   ' → logprob: -5.836424350738525
    4. ' return' → logprob: -6.086424350738525
    5. 'return' → logprob: -6.211424350738525
    6. '                       ' → logprob: -6.461424350738525
    7. '               ' → logprob: -7.086424350738525
    8. ' pass' → logprob: -8.086424827575684
    9. '   ' → logprob: -8.711424827575684
    10. '           ' → logprob: -9.961424827575684

Token 368: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.26314061880111694
    2. '.out' → logprob: -2.3881406784057617
    3. '.answer' → logprob: -2.6381406784057617
    4. '.hist' → logprob: -2.7631406784057617
    5. '.' → logprob: -6.138140678405762
    6. '._' → logprob: -6.388140678405762
    7. '.predict' → logprob: -8.763140678405762
    8. '.history' → logprob: -9.013140678405762
    9. '.look' → logprob: -9.013140678405762
    10. '.st' → logprob: -9.013140678405762

Token 369: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -7.107425062713446e-06
    2. 'foo' → logprob: -12.250006675720215
    3. '(foo' → logprob: -14.625006675720215
    4. 'p' → logprob: -14.875006675720215
    5. '(p' → logprob: -15.000006675720215
    6. 'It' → logprob: -15.500006675720215
    7. 'q' → logprob: -16.12500762939453
    8. ' ' → logprob: -16.25000762939453
    9. 'its' → logprob: -16.37500762939453
    10. 'it's' → logprob: -16.37500762939453

Token 370: '(q' (ID: 21479)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.14623846113681793
    2. '(q' → logprob: -2.0212385654449463
    3. '(' → logprob: -5.646238327026367
    4. 'p' → logprob: -11.771238327026367
    5. '(foo' → logprob: -12.396238327026367
    6. '(
' → logprob: -12.771238327026367
    7. ' (' → logprob: -13.146238327026367
    8. 'q' → logprob: -13.396238327026367
    9. '(None' → logprob: -13.521238327026367
    10. '(s' → logprob: -14.271238327026367

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028862981707789004
    2. ',p' → logprob: -8.625288963317871
    3. ' ,' → logprob: -9.625288963317871
    4. ',q' → logprob: -10.125288963317871
    5. '(p' → logprob: -13.250288963317871
    6. 'p' → logprob: -15.250288963317871
    7. '(q' → logprob: -15.625288963317871
    8. '   ' → logprob: -15.625288963317871
    9. ')' → logprob: -15.750288963317871
    10. ',
' → logprob: -16.125288009643555

Token 372: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002476604888215661
    2. ' p' → logprob: -6.002476692199707
    3. 'q' → logprob: -14.127476692199707
    4. ' ' → logprob: -16.12747573852539
    5. '   ' → logprob: -16.62747573852539
    6. ')' → logprob: -17.25247573852539
    7. ' ' → logprob: -17.87747573852539
    8. '           ' → logprob: -18.00247573852539
    9. '	p' → logprob: -18.25247573852539
    10. '  ' → logprob: -18.75247573852539

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34908050298690796
    2. ')
' → logprob: -1.2240805625915527
    3. '               ' → logprob: -7.974080562591553
    4. '       ' → logprob: -8.849080085754395
    5. '                   ' → logprob: -9.849080085754395
    6. '           ' → logprob: -10.474080085754395
    7. ')

' → logprob: -10.599080085754395
    8. ')#' → logprob: -11.474080085754395
    9. ')return' → logprob: -11.849080085754395
    10. ')
' → logprob: -12.224080085754395

Token 374: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8722324371337891
    2. '       ' → logprob: -1.247232437133789
    3. '<|end|>' → logprob: -1.372232437133789
    4. '           ' → logprob: -3.622232437133789
    5. ')' → logprob: -4.997232437133789
    6. '                   ' → logprob: -5.872232437133789
    7. ' else' → logprob: -6.497232437133789
    8. 'else' → logprob: -6.997232437133789
    9. '
' → logprob: -7.622232437133789
    10. '<|end|>' → logprob: -7.747232437133789

Token 375: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6697692275047302
    2. ' else' → logprob: -0.9197692275047302
    3. 'else' (adapté à ' else') → logprob: -2.419769287109375
    4. '           ' → logprob: -8.294769287109375
    5. '                ' → logprob: -9.044769287109375
    6. '                   ' → logprob: -9.169769287109375
    7. ' elif' → logprob: -10.169769287109375
    8. 'elif' → logprob: -10.669769287109375
    9. '	else' → logprob: -11.169769287109375
    10. '       ' → logprob: -11.169769287109375

Token 376: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14794641733169556
    2. ':
' → logprob: -2.397946357727051
    3. ':' → logprob: -3.147946357727051
    4. '               ' → logprob: -6.397946357727051
    5. ',' → logprob: -6.522946357727051
    6. '   ' → logprob: -8.77294635772705
    7. '           ' → logprob: -8.89794635772705
    8. '                       ' → logprob: -9.52294635772705
    9. '                 ' → logprob: -10.27294635772705
    10. '                  ' → logprob: -10.27294635772705

Token 377: '                   ' (ID: 699)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.4498824179172516
    2. ' foo' → logprob: -1.0748823881149292
    3. '               ' → logprob: -4.074882507324219
    4. '                   ' → logprob: -5.699882507324219
    5. '(foo' → logprob: -8.699882507324219
    6. '                ' → logprob: -8.699882507324219
    7. '           ' → logprob: -8.949882507324219
    8. '			' → logprob: -10.324882507324219
    9. '                 ' → logprob: -10.699882507324219
    10. '   ' → logprob: -11.074882507324219

Token 378: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.0003827676991932094
    2. ' foo' → logprob: -7.875382900238037
    3. '               ' → logprob: -14.125382423400879
    4. 'fo' → logprob: -14.375382423400879
    5. '(foo' → logprob: -14.750382423400879
    6. 'foobar' → logprob: -14.875382423400879
    7. '           ' → logprob: -15.875382423400879
    8. '                   ' → logprob: -16.125383377075195
    9. '   ' → logprob: -16.375383377075195
    10. '.foo' → logprob: -16.875383377075195

Token 379: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0008193961111828685
    2. '.' → logprob: -7.125819206237793
    3. '._' → logprob: -12.375819206237793
    4. '.mov' → logprob: -13.000819206237793
    5. ' .' → logprob: -13.125819206237793
    6. 'move' → logprob: -13.250819206237793
    7. '   ' → logprob: -13.500819206237793
    8. ').' → logprob: -13.750819206237793
    9. '.m' → logprob: -14.625819206237793
    10. '.d' → logprob: -15.250819206237793

Token 380: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -6.749814019713085e-06
    2. 'q' → logprob: -12.875006675720215
    3. '(q' → logprob: -13.375006675720215
    4. 'It' → logprob: -14.125006675720215
    5. '(p' → logprob: -15.125006675720215
    6. 'foo' → logprob: -16.00000762939453
    7. 'ot' → logprob: -16.25000762939453
    8. 'at' → logprob: -16.37500762939453
    9. ' it' → logprob: -16.37500762939453
    10. '(it' → logprob: -16.37500762939453

Token 381: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.251091377227567e-05
    2. '(' → logprob: -10.250042915344238
    3. '(q' → logprob: -11.875042915344238
    4. 'p' → logprob: -16.000041961669922
    5. '(
' → logprob: -17.250041961669922
    6. ' (' → logprob: -18.375041961669922
    7. '<|end|>' → logprob: -19.375041961669922
    8. '   ' → logprob: -19.750041961669922
    9. ',p' → logprob: -20.125041961669922
    10. '<p' → logprob: -20.250041961669922

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.412610233994201e-05
    2. ',q' → logprob: -9.625094413757324
    3. ' ,' → logprob: -10.500094413757324
    4. ',
' → logprob: -15.375094413757324
    5. 'q' → logprob: -16.125093460083008
    6. ')' → logprob: -16.750093460083008
    7. '`,' → logprob: -17.500093460083008
    8. '(q' → logprob: -17.500093460083008
    9. '',' → logprob: -17.750093460083008
    10. '   ' → logprob: -18.000093460083008

Token 383: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.306760805164231e-05
    2. ' q' → logprob: -11.25001335144043
    3. '	q' → logprob: -17.75001335144043
    4. ' ' → logprob: -18.37501335144043
    5. '   ' → logprob: -19.12501335144043
    6. '
' → logprob: -21.25001335144043
    7. '  ' → logprob: -21.25001335144043
    8. '[q' → logprob: -21.25001335144043
    9. ''q' → logprob: -21.37501335144043
    10. ',q' → logprob: -21.50001335144043

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001328095211647451
    2. ')
' → logprob: -6.626327991485596
    3. '       ' → logprob: -14.501328468322754
    4. '<|end|>' → logprob: -14.501328468322754
    5. ')

' → logprob: -14.876328468322754
    6. ')#' → logprob: -15.126328468322754
    7. ')
' → logprob: -16.001327514648438
    8. ' )' → logprob: -16.001327514648438
    9. ')\
' → logprob: -16.751327514648438
    10. ')\' → logprob: -16.876327514648438

Token 385: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06905011087656021
    2. '       ' → logprob: -3.9440500736236572
    3. ':
' → logprob: -3.9440500736236572
    4. ':' → logprob: -4.069050312042236
    5. '           ' → logprob: -4.944050312042236
    6. '(foo' → logprob: -6.819050312042236
    7. '   ' → logprob: -7.319050312042236
    8. ' foo' → logprob: -7.444050312042236
    9. '			' → logprob: -8.694049835205078
    10. '              ' → logprob: -8.819049835205078

Token 388: '               ' (ID: 506)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.29643693566322327
    2. '               ' → logprob: -1.4214369058609009
    3. ' foo' → logprob: -4.421436786651611
    4. '           ' → logprob: -6.421436786651611
    5. 'pass' → logprob: -6.921436786651611
    6. ' pass' → logprob: -8.54643726348877
    7. '   ' → logprob: -8.92143726348877
    8. 'raise' → logprob: -9.79643726348877
    9. '(foo' → logprob: -10.04643726348877
    10. 'return' → logprob: -10.79643726348877

Token 389: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.01230949442833662
    2. 'pass' → logprob: -4.762309551239014
    3. ' foo' → logprob: -6.512309551239014
    4. '               ' → logprob: -7.387309551239014
    5. '           ' → logprob: -7.637309551239014
    6. 'raise' → logprob: -7.637309551239014
    7. 'return' → logprob: -8.262309074401855
    8. ' pass' → logprob: -8.512309074401855
    9. '   ' → logprob: -9.887309074401855
    10. 'if' → logprob: -10.012309074401855

Token 390: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.09406709671020508
    2. '.out' → logprob: -2.469067096710205
    3. '.answer' → logprob: -5.844067096710205
    4. '.hist' → logprob: -6.969067096710205
    5. '.' → logprob: -7.719067096710205
    6. '.look' → logprob: -8.219066619873047
    7. '.st' → logprob: -8.344066619873047
    8. '._' → logprob: -8.969066619873047
    9. '.ins' → logprob: -10.094066619873047
    10. '.predict' → logprob: -10.344066619873047

Token 391: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.3856492842023727e-06
    2. 'this' → logprob: -14.875000953674316
    3. 'foo' → logprob: -15.000000953674316
    4. 'it's' → logprob: -15.625000953674316
    5. 'It' → logprob: -16.125001907348633
    6. '(foo' → logprob: -16.250001907348633
    7. '(it' → logprob: -16.625001907348633
    8. 'at' → logprob: -17.250001907348633
    9. '```' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.375001907348633

Token 392: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.003900415264070034
    2. '(' → logprob: -6.003900527954102
    3. '(foo' → logprob: -6.628900527954102
    4. '(q' → logprob: -9.253900527954102
    5. '<|end|>' → logprob: -13.378900527954102
    6. '(
' → logprob: -13.378900527954102
    7. 'foo' → logprob: -13.753900527954102
    8. 'p' → logprob: -14.378900527954102
    9. '()' → logprob: -14.628900527954102
    10. '(f' → logprob: -15.503900527954102

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ',q' → logprob: -9.875053405761719
    3. ' ,' → logprob: -13.125053405761719
    4. ',
' → logprob: -15.625053405761719
    5. ',p' → logprob: -16.25005340576172
    6. 'q' → logprob: -17.50005340576172
    7. ')' → logprob: -18.75005340576172
    8. ',

' → logprob: -19.25005340576172
    9. ' q' → logprob: -20.00005340576172
    10. '<|end|>' → logprob: -20.50005340576172

Token 394: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002613358374219388
    2. ' q' → logprob: -8.250261306762695
    3. '	q' → logprob: -18.625261306762695
    4. ')' → logprob: -18.875261306762695
    5. ' ' → logprob: -19.250261306762695
    6. '               ' → logprob: -19.625261306762695
    7. '           ' → logprob: -20.125261306762695
    8. '   ' → logprob: -20.500261306762695
    9. 'p' → logprob: -20.500261306762695
    10. '.q' → logprob: -21.125261306762695

Token 395: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007112398743629456
    2. ')
' → logprob: -7.250711441040039
    3. ')

' → logprob: -14.625711441040039
    4. '       ' → logprob: -15.250711441040039
    5. ')return' → logprob: -16.12571144104004
    6. ')
' → logprob: -16.37571144104004
    7. ')#' → logprob: -16.37571144104004
    8. '<|end|>' → logprob: -16.37571144104004
    9. ' )' → logprob: -17.50071144104004
    10. '),' → logprob: -17.75071144104004

Token 396: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19693179428577423
    2. 'def' (adapté à ' def') → logprob: -2.071931838989258
    3. '       ' → logprob: -3.196931838989258
    4. '    
' → logprob: -5.946931838989258
    5. ' def' → logprob: -6.321931838989258
    6. '
' → logprob: -6.696931838989258
    7. '  ' → logprob: -6.821931838989258
    8. '        
' → logprob: -7.196931838989258
    9. '\n' → logprob: -7.196931838989258
    10. '\' → logprob: -7.446931838989258

Token 398: ' move' (ID: 5275)
  Prédit: 'look'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'look' → logprob: -0.528637707233429
    2. 'move' → logprob: -1.0286376476287842
    3. ' move' → logprob: -3.528637647628784
    4. ' look' → logprob: -3.778637647628784
    5. 'lookup' → logprob: -9.278637886047363
    6. 'predict' → logprob: -9.653637886047363
    7. 'outside' → logprob: -9.966137886047363
    8. 'hist' → logprob: -10.091137886047363
    9. 'check' → logprob: -10.091137886047363
    10. '_move' → logprob: -10.153637886047363

Token 399: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.9361264946837764e-07
    2. 'it's' → logprob: -16.25
    3. '(it' → logprob: -16.875
    4. 'foo' → logprob: -17.25
    5. '_it' → logprob: -17.25
    6. '   ' → logprob: -18.375
    7. '(foo' → logprob: -18.375
    8. ' it' → logprob: -18.5
    9. 'It' → logprob: -18.875
    10. 'ит' → logprob: -19.625

Token 400: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.01819630153477192
    2. '(self' → logprob: -4.018196105957031
    3. '(' → logprob: -10.018196105957031
    4. '(s' → logprob: -14.143196105957031
    5. 'foo' → logprob: -15.518196105957031
    6. '(p' → logprob: -16.14319610595703
    7. '(a' → logprob: -16.51819610595703
    8. '(source' → logprob: -16.64319610595703
    9. '(parent' → logprob: -16.64319610595703
    10. '(bar' → logprob: -16.76819610595703

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5319754481315613
    2. '(p' → logprob: -1.656975507736206
    3. '(self' → logprob: -1.781975507736206
    4. ',p' → logprob: -3.156975507736206
    5. '(foo' → logprob: -5.406975269317627
    6. ',self' → logprob: -5.906975269317627
    7. 'self' → logprob: -6.156975269317627
    8. '(s' → logprob: -7.656975269317627
    9. ',s' → logprob: -7.656975269317627
    10. ',q' → logprob: -8.906975746154785

Token 402: ' src' (ID: 4537)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25511011481285095
    2. 'frm' → logprob: -2.130110025405884
    3. 'a' → logprob: -3.505110025405884
    4. 'fr' → logprob: -3.755110025405884
    5. 'src' → logprob: -4.380110263824463
    6. 'from' → logprob: -4.630110263824463
    7. ' p' → logprob: -4.630110263824463
    8. 'x' → logprob: -5.130110263824463
    9. ' frm' → logprob: -5.380110263824463
    10. 'f' → logprob: -5.630110263824463

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -11.750007629394531
    3. ',p' → logprob: -17.50000762939453
    4. ',q' → logprob: -17.50000762939453
    5. ',
' → logprob: -18.50000762939453
    6. '   ' → logprob: -18.50000762939453
    7. '‌,' → logprob: -19.00000762939453
    8. ',s' → logprob: -19.37500762939453
    9. '_,' → logprob: -19.37500762939453
    10. 'src' → logprob: -20.12500762939453

Token 404: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.05915358290076256
    2. 'dest' → logprob: -3.5591535568237305
    3. ' dst' → logprob: -3.5591535568237305
    4. ' dest' → logprob: -8.18415355682373
    5. ' tgt' → logprob: -9.05915355682373
    6. 't' → logprob: -9.18415355682373
    7. ' trg' → logprob: -11.68415355682373
    8. ' ' → logprob: -12.93415355682373
    9. 'des' → logprob: -13.55915355682373
    10. '	dst' → logprob: -14.55915355682373

Token 405: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02976749837398529
    2. '):
' → logprob: -3.5297675132751465
    3. '):
' → logprob: -11.779767036437988
    4. ')' → logprob: -12.279767036437988
    5. '   ' → logprob: -13.154767036437988
    6. ' ):' → logprob: -13.279767036437988
    7. '):

' → logprob: -14.279767036437988
    8. ':' → logprob: -15.779767036437988
    9. ',' → logprob: -16.154767990112305
    10. '       ' → logprob: -16.904767990112305

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29640066623687744
    2. ' foo' → logprob: -1.9214006662368774
    3. 'foo' → logprob: -2.546400547027588
    4. ' if' → logprob: -4.046400547027588
    5. '   ' → logprob: -4.421400547027588
    6. 'if' → logprob: -6.921400547027588
    7. '           ' → logprob: -7.046400547027588
    8. '	if' → logprob: -9.671401023864746
    9. '	   ' → logprob: -9.671401023864746
    10. '(foo' → logprob: -9.671401023864746

Token 407: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.009004752151668072
    2. 'if' → logprob: -5.009004592895508
    3. '       ' → logprob: -7.009004592895508
    4. ' foo' → logprob: -7.009004592895508
    5. '   ' → logprob: -8.509004592895508
    6. '           ' → logprob: -8.634004592895508
    7. ' if' → logprob: -9.384004592895508
    8. '               ' → logprob: -13.134004592895508
    9. '```' → logprob: -13.509004592895508
    10. '(foo' → logprob: -13.634004592895508

Token 408: '.hist' (ID: 116240)
  Prédit: '.st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0003208037815056741
    2. '.hist' → logprob: -8.875320434570312
    3. '.' → logprob: -9.000320434570312
    4. '.move' → logprob: -10.875320434570312
    5. '.s' → logprob: -10.875320434570312
    6. ' .' → logprob: -11.875320434570312
    7. '.stderr' → logprob: -14.250320434570312
    8. '.moves' → logprob: -14.375320434570312
    9. '.stub' → logprob: -14.500320434570312
    10. '.mov' → logprob: -14.500320434570312

Token 409: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20141752064228058
    2. '[src' → logprob: -1.7014175653457642
    3. '```' → logprob: -13.451417922973633
    4. ' [' → logprob: -13.951417922973633
    5. 'foo' → logprob: -14.326417922973633
    6. '[href' → logprob: -15.076417922973633
    7. '=' → logprob: -15.451417922973633
    8. 'src' → logprob: -15.701417922973633
    9. '[js' → logprob: -15.951417922973633
    10. '   ' → logprob: -16.451417922973633

Token 410: 'foo' (ID: 16660)
  Prédit: 'foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -4.246537173457909e-06
    2. 'src' → logprob: -12.750003814697266
    3. ' foo' → logprob: -14.250003814697266
    4. '0' → logprob: -15.625003814697266
    5. 'dst' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.125003814697266
    7. '(foo' → logprob: -16.125003814697266
    8. '.foo' → logprob: -17.250003814697266
    9. ']' → logprob: -17.500003814697266
    10. '/foo' → logprob: -17.875003814697266

Token 411: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -8.315936429426074e-05
    2. 'idx' → logprob: -9.875082969665527
    3. '_idx' → logprob: -11.250082969665527
    4. ' .' → logprob: -12.375082969665527
    5. '._' → logprob: -12.750082969665527
    6. '.' → logprob: -13.000082969665527
    7. '.src' → logprob: -13.000082969665527
    8. '_.' → logprob: -13.375082969665527
    9. '.id' → logprob: -13.750082969665527
    10. '[idx' → logprob: -14.000082969665527

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002867225557565689
    2. ' ]' → logprob: -8.250287055969238
    3. ']=' → logprob: -10.625287055969238
    4. ']+=' → logprob: -14.125287055969238
    5. '][' → logprob: -15.875287055969238
    6. ']="' → logprob: -16.125286102294922
    7. ']='' → logprob: -17.375286102294922
    8. '[' → logprob: -17.375286102294922
    9. ']
' → logprob: -17.625286102294922
    10. '],' → logprob: -17.750286102294922

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20165890455245972
    2. ' =' → logprob: -1.7016589641571045
    3. ']' → logprob: -8.576659202575684
    4. ']=' → logprob: -10.201659202575684
    5. '+=' → logprob: -11.201659202575684
    6. ' +=' → logprob: -13.326659202575684
    7. '[' → logprob: -13.326659202575684
    8. ']+=' → logprob: -13.701659202575684
    9. ' ' → logprob: -14.451659202575684
    10. ' ]' → logprob: -15.451659202575684

Token 414: ' Foo' (ID: 69516)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0457041263580322
    2. '"S' → logprob: -1.6707041263580322
    3. '"A' → logprob: -1.9207041263580322
    4. '"M' → logprob: -2.7957041263580322
    5. '"D' → logprob: -3.0457041263580322
    6. '"B' → logprob: -3.0457041263580322
    7. '"L' → logprob: -3.1707041263580322
    8. '"O' → logprob: -3.5457041263580322
    9. '"C' → logprob: -4.045703887939453
    10. '"P' → logprob: -4.295703887939453

Token 415: '.to' (ID: 3552)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5026559829711914
    2. ''' → logprob: -1.5026559829711914
    3. '"x' → logprob: -3.7526559829711914
    4. ''x' → logprob: -4.377655982971191
    5. ''A' → logprob: -4.502655982971191
    6. ''M' → logprob: -4.502655982971191
    7. '".' → logprob: -4.627655982971191
    8. ''.' → logprob: -4.627655982971191
    9. ''s' → logprob: -4.627655982971191
    10. 'chr' → logprob: -5.002655982971191

Token 416: 'char' (ID: 3257)
  Prédit: '_upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_upper' → logprob: -1.1127749681472778
    2. 'str' → logprob: -1.3627749681472778
    3. '_str' → logprob: -1.8627749681472778
    4. 'lower' → logprob: -2.4877748489379883
    5. '_string' → logprob: -2.8627748489379883
    6. 'upper' → logprob: -3.3627748489379883
    7. 'uppercase' → logprob: -4.237774848937988
    8. '"' → logprob: -4.362774848937988
    9. 'Upper' → logprob: -4.612774848937988
    10. '_lower' → logprob: -4.612774848937988

Token 417: '(dst' (ID: 70394)
  Prédit: '(foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.4765024483203888
    2. '(src' → logprob: -0.9765024185180664
    3. '(' → logprob: -6.851502418518066
    4. '((' → logprob: -7.226502418518066
    5. '[src' → logprob: -8.476502418518066
    6. '(
' → logprob: -9.601502418518066
    7. '[' → logprob: -9.851502418518066
    8. '(F' → logprob: -9.851502418518066
    9. '(dst' → logprob: -10.351502418518066
    10. '('' → logprob: -10.351502418518066

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017528260126709938
    2. ')
' → logprob: -4.642528057098389
    3. '[src' → logprob: -5.017528057098389
    4. '[' → logprob: -7.642528057098389
    5. '(src' → logprob: -8.142528533935547
    6. '       ' → logprob: -9.267528533935547
    7. ' )' → logprob: -10.017528533935547
    8. 'src' → logprob: -10.017528533935547
    9. ')+' → logprob: -10.142528533935547
    10. '+' → logprob: -10.142528533935547

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040848374366760254
    2. 'foo' → logprob: -3.2908482551574707
    3. 'src' → logprob: -7.290848255157471
    4. ' foo' → logprob: -7.540848255157471
    5. '<|end|>' → logprob: -7.665848255157471
    6. '        
' → logprob: -7.915848255157471
    7. '(foo' → logprob: -8.290848731994629
    8. '
' → logprob: -9.415848731994629
    9. '```' → logprob: -9.540848731994629
    10. '   ' → logprob: -10.415848731994629

Token 420: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.0028777492698282003
    2. '       ' → logprob: -5.877877712249756
    3. ' foo' → logprob: -10.252878189086914
    4. 'if' → logprob: -10.752878189086914
    5. '           ' → logprob: -11.752878189086914
    6. '   ' → logprob: -12.627878189086914
    7. '(foo' → logprob: -13.752878189086914
    8. '```' → logprob: -14.002878189086914
    9. '               ' → logprob: -14.377878189086914
    10. 'src' → logprob: -14.877878189086914

Token 421: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0014002372045069933
    2. '.' → logprob: -7.126400470733643
    3. '.move' → logprob: -8.126399993896484
    4. '.hist' → logprob: -8.751399993896484
    5. '.s' → logprob: -10.251399993896484
    6. ').' → logprob: -11.251399993896484
    7. '.mov' → logprob: -11.376399993896484
    8. '}.' → logprob: -11.626399993896484
    9. ' .' → logprob: -11.876399993896484
    10. '```' → logprob: -12.001399993896484

Token 422: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -4.246537173457909e-06
    2. 'u' → logprob: -12.875003814697266
    3. 'uf' → logprob: -13.625003814697266
    4. ' uff' → logprob: -15.125003814697266
    5. 'uffs' → logprob: -17.375003814697266
    6. 'UFF' → logprob: -18.000003814697266
    7. 'aff' → logprob: -18.750003814697266
    8. '```' → logprob: -19.250003814697266
    9. 'ff' → logprob: -19.625003814697266
    10. 'uft' → logprob: -19.625003814697266

Token 423: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -0.008644001558423042
    2. '[' → logprob: -4.758644104003906
    3. '```' → logprob: -11.258644104003906
    4. 'src' → logprob: -12.883644104003906
    5. '<src' → logprob: -13.008644104003906
    6. ')[' → logprob: -13.383644104003906
    7. '][' → logprob: -13.758644104003906
    8. '=[' → logprob: -13.883644104003906
    9. '>[' → logprob: -13.883644104003906
    10. '\[' → logprob: -13.883644104003906

Token 424: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023268891498446465
    2. ']-' → logprob: -4.648268699645996
    3. '-' → logprob: -5.148268699645996
    4. '-=' → logprob: -5.398268699645996
    5. ' -=' → logprob: -6.023268699645996
    6. ' ]' → logprob: -7.898268699645996
    7. '[' → logprob: -8.523268699645996
    8. '>' → logprob: -10.273268699645996
    9. ' -' → logprob: -10.898268699645996
    10. ']+=' → logprob: -11.023268699645996

Token 425: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6482303142547607
    2. '-=' → logprob: -0.7732303142547607
    3. '-' → logprob: -4.27323055267334
    4. '=' → logprob: -6.52323055267334
    5. '[' → logprob: -10.52323055267334
    6. ' -' → logprob: -10.89823055267334
    7. ' =' → logprob: -11.14823055267334
    8. '+=' → logprob: -11.14823055267334
    9. '>' → logprob: -11.39823055267334
    10. '   ' → logprob: -12.02323055267334

Token 426: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.875015258789062
    3. 'foo' → logprob: -12.375015258789062
    4. '2' → logprob: -12.750015258789062
    5. '   ' → logprob: -14.500015258789062
    6. '
' → logprob: -16.750015258789062
    7. '100' → logprob: -16.750015258789062
    8. '3' → logprob: -16.750015258789062
    9. '10' → logprob: -17.125015258789062
    10. '  ' → logprob: -17.312515258789062

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. 'foo' → logprob: -12.250006675720215
    3. '2' → logprob: -13.625006675720215
    4. ' ' → logprob: -15.500006675720215
    5. '3' → logprob: -16.5000057220459
    6. '100' → logprob: -17.0000057220459
    7. '10' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.1250057220459
    9. 'Foo' → logprob: -17.2500057220459
    10. '１' → logprob: -17.9375057220459

Token 428: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008097442332655191
    2. 'foo' → logprob: -7.250809669494629
    3. ' foo' → logprob: -10.500809669494629
    4. '	' → logprob: -10.750809669494629
    5. '        
' → logprob: -11.250809669494629
    6. '   ' → logprob: -11.375809669494629
    7. '<|end|>' → logprob: -11.500809669494629
    8. '	   ' → logprob: -13.250809669494629
    9. '           ' → logprob: -13.250809669494629
    10. ' ' → logprob: -13.375809669494629

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01843038760125637
    2. 'foo' → logprob: -4.018430233001709
    3. ' foo' → logprob: -8.643430709838867
    4. '   ' → logprob: -9.893430709838867
    5. '           ' → logprob: -11.518430709838867
    6. '<|end|>' → logprob: -11.518430709838867
    7. '(foo' → logprob: -11.518430709838867
    8. '	' → logprob: -11.768430709838867
    9. '```' → logprob: -12.768430709838867
    10. '        
' → logprob: -13.018430709838867

Token 430: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -7.3458322731312364e-06
    2. '       ' → logprob: -12.375007629394531
    3. ' foo' → logprob: -12.750007629394531
    4. '           ' → logprob: -16.00000762939453
    5. '(foo' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.37500762939453
    7. '/foo' → logprob: -18.00000762939453
    8. '.foo' → logprob: -18.00000762939453
    9. 'foobar' → logprob: -18.62500762939453
    10. '
' → logprob: -19.00000762939453

Token 431: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0006201040814630687
    2. '.' → logprob: -7.500619888305664
    3. ' .' → logprob: -10.875619888305664
    4. '.s' → logprob: -11.000619888305664
    5. '.hist' → logprob: -11.250619888305664
    6. '	st' → logprob: -13.000619888305664
    7. '```' → logprob: -13.000619888305664
    8. '.sp' → logprob: -13.625619888305664
    9. '>.' → logprob: -13.875619888305664
    10. '.setdefault' → logprob: -14.125619888305664

Token 432: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -7.896309739408025e-07
    2. 'uf' → logprob: -15.250000953674316
    3. 'stuff' → logprob: -16.0
    4. 'aff' → logprob: -16.25
    5. 'uffs' → logprob: -16.375
    6. ' uff' → logprob: -16.625
    7. 'ust' → logprob: -16.75
    8. 'u' → logprob: -16.75
    9. 'UFF' → logprob: -17.625
    10. 'uft' → logprob: -17.875

Token 433: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052350712940096855
    2. '[src' → logprob: -5.255235195159912
    3. 'dst' → logprob: -14.380234718322754
    4. 'src' → logprob: -14.630234718322754
    5. '(dst' → logprob: -16.25523567199707
    6. '```' → logprob: -16.75523567199707
    7. '	dst' → logprob: -17.25523567199707
    8. ' [' → logprob: -17.75523567199707
    9. '   ' → logprob: -19.13023567199707
    10. '       ' → logprob: -19.75523567199707

Token 434: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.0009471880039200187
    2. 'src' → logprob: -7.000946998596191
    3. ' dst' → logprob: -10.375946998596191
    4. '(dst' → logprob: -13.125946998596191
    5. '[' → logprob: -13.375946998596191
    6. '	dst' → logprob: -14.625946998596191
    7. '[src' → logprob: -16.000947952270508
    8. 'Dst' → logprob: -16.500947952270508
    9. '.dst' → logprob: -16.750947952270508
    10. '_dst' → logprob: -17.125947952270508

Token 435: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008618239313364029
    2. ']+=' → logprob: -4.758618354797363
    3. ' ]' → logprob: -13.008618354797363
    4. ']+' → logprob: -14.383618354797363
    5. '+=' → logprob: -14.883618354797363
    6. ')' → logprob: -15.008618354797363
    7. '   ' → logprob: -16.633617401123047
    8. '']' → logprob: -16.883617401123047
    9. '"]' → logprob: -17.008617401123047
    10. ' +=' → logprob: -17.633617401123047

Token 436: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019368429202586412
    2. ' +=' → logprob: -6.251936912536621
    3. ']+=' → logprob: -11.876936912536621
    4. '=' → logprob: -13.876936912536621
    5. '+' → logprob: -15.501936912536621
    6. '+=(' → logprob: -16.751935958862305
    7. '```' → logprob: -17.126935958862305
    8. '   ' → logprob: -18.501935958862305
    9. '+='' → logprob: -18.751935958862305
    10. '[' → logprob: -19.126935958862305

Token 437: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013260759878903627
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -16.251325607299805
    4. '```' → logprob: -17.376325607299805
    5. '  ' → logprob: -18.751325607299805
    6. '0' → logprob: -19.501325607299805
    7. '	' → logprob: -20.313825607299805
    8. '`' → logprob: -20.501325607299805
    9. '       ' → logprob: -20.626325607299805
    10. '2' → logprob: -20.626325607299805

Token 438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -20.625
    5. '<|end|>' → logprob: -21.75
    6. '
' → logprob: -22.375
    7. '-' → logprob: -22.75
    8. '=' → logprob: -23.25
    9. '0' → logprob: -23.25
    10. '１' → logprob: -23.375

Token 439: '
' (ID: 198)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.31759846210479736
    2. '   ' → logprob: -1.3175984621047974
    3. '<|end|>' → logprob: -6.442598342895508
    4. 'staticmethod' → logprob: -6.942598342895508
    5. '       ' → logprob: -7.817598342895508
    6. '@return' → logprob: -8.317598342895508
    7. 'def' → logprob: -8.442598342895508
    8. '```' → logprob: -8.942598342895508
    9. '@
' → logprob: -9.067598342895508
    10. '@property' → logprob: -9.067598342895508

Token 440: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.016640305519104
    2. 'def' → logprob: -1.016640305519104
    3. '<|end|>' → logprob: -1.641640305519104
    4. '       ' → logprob: -3.5166401863098145
    5. 'return' → logprob: -4.1416401863098145
    6. '```' → logprob: -4.3916401863098145
    7. ')' → logprob: -4.7666401863098145
    8. ' def' → logprob: -5.6416401863098145
    9. 'foo' → logprob: -5.7666401863098145
    10. '	return' → logprob: -6.7666401863098145

Token 441: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04536214843392372
    2. '       ' → logprob: -3.2953622341156006
    3. 'def' → logprob: -5.1703619956970215
    4. '   ' → logprob: -7.4203619956970215
    5. 'for' → logprob: -7.9203619956970215
    6. ' if' → logprob: -7.9203619956970215
    7. 'foo' → logprob: -9.04536247253418
    8. '#' → logprob: -9.17036247253418
    9. 's' → logprob: -11.17036247253418
    10. '	if' → logprob: -11.54536247253418

Token 442: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.7373070120811462
    2. ' foo' → logprob: -0.7373070120811462
    3. ' any' → logprob: -4.487307071685791
    4. ' max' → logprob: -4.737307071685791
    5. ' min' → logprob: -4.987307071685791
    6. ' not' → logprob: -5.362307071685791
    7. '(foo' → logprob: -5.612307071685791
    8. ' sum' → logprob: -5.862307071685791
    9. 'max' → logprob: -6.612307071685791
    10. 'any' → logprob: -6.737307071685791

Token 443: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.021957404911518097
    2. '.out' → logprob: -4.3969573974609375
    3. '.idx' → logprob: -5.5219573974609375
    4. '.x' → logprob: -6.1469573974609375
    5. '.' → logprob: -7.1469573974609375
    6. '.s' → logprob: -7.6469573974609375
    7. '.z' → logprob: -7.8969573974609375
    8. 'outside' → logprob: -8.021957397460938
    9. '._' → logprob: -8.396957397460938
    10. '.move' → logprob: -8.646957397460938

Token 444: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -2.8444881536415778e-05
    2. 'uf' → logprob: -11.375028610229492
    3. 'ff' → logprob: -12.250028610229492
    4. 'fff' → logprob: -12.750028610229492
    5. '#' → logprob: -13.625028610229492
    6. 'ust' → logprob: -14.000028610229492
    7. '[' → logprob: -14.125028610229492
    8. 'u' → logprob: -14.625028610229492
    9. 'ist' → logprob: -14.625028610229492
    10. 'aff' → logprob: -14.750028610229492

Token 445: '[src' (ID: 164384)
  Prédit: '[src'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[src' → logprob: -0.038148101419210434
    2. '[' → logprob: -3.2881481647491455
    3. '==' → logprob: -10.038147926330566
    4. '<src' → logprob: -11.038147926330566
    5. 'src' → logprob: -11.663147926330566
    6. ' ==' → logprob: -12.038147926330566
    7. ' [' → logprob: -12.038147926330566
    8. '```' → logprob: -12.538147926330566
    9. '>' → logprob: -12.663147926330566
    10. '   ' → logprob: -13.038147926330566

Token 446: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9712852835655212
    2. ' ==' → logprob: -0.9712852835655212
    3. '<' → logprob: -1.846285343170166
    4. '==' → logprob: -2.471285343170166
    5. '[' → logprob: -8.721284866333008
    6. ' <=' → logprob: -9.346284866333008
    7. ']' → logprob: -9.846284866333008
    8. '<src' → logprob: -9.971284866333008
    9. '<=' → logprob: -9.971284866333008
    10. ']==' → logprob: -10.096284866333008

Token 447: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1642138808965683
    2. ' <' → logprob: -2.2892138957977295
    3. '==' → logprob: -3.4142138957977295
    4. ' ==' → logprob: -4.91421365737915
    5. '[src' → logprob: -5.28921365737915
    6. '<src' → logprob: -5.41421365737915
    7. '[' → logprob: -8.164214134216309
    8. '<=' → logprob: -11.414214134216309
    9. '[source' → logprob: -11.789214134216309
    10. '<script' → logprob: -11.914214134216309

Token 448: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038658222183585167
    2. ' ' → logprob: -7.875386714935303
    3. '1' → logprob: -12.750386238098145
    4. '=' → logprob: -12.875386238098145
    5. 'foo' → logprob: -15.437886238098145
    6. '   ' → logprob: -15.625386238098145
    7. ' ' → logprob: -16.50038719177246
    8. '  ' → logprob: -16.50038719177246
    9. '	' → logprob: -16.81288719177246
    10. '۰' → logprob: -16.81288719177246

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -11.000028610229492
    3. '1' → logprob: -12.000028610229492
    4. '=' → logprob: -12.125028610229492
    5. '2' → logprob: -15.750028610229492
    6. 'foo' → logprob: -17.000028610229492
    7. '۰' → logprob: -17.000028610229492
    8. '3' → logprob: -17.375028610229492
    9. '```' → logprob: -17.625028610229492
    10. 'Foo' → logprob: -17.750028610229492

Token 450: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7011269927024841
    2. ':
' → logprob: -0.7011269927024841
    3. '           ' → logprob: -4.951127052307129
    4. ' or' → logprob: -7.326127052307129
    5. ' and' → logprob: -9.451127052307129
    6. ' :' → logprob: -10.326127052307129
    7. ' :
' → logprob: -10.451127052307129
    8. '               ' → logprob: -11.076127052307129
    9. '       ' → logprob: -11.201127052307129
    10. ':

' → logprob: -11.826127052307129

Token 451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00033415461075492203
    2. ' foo' → logprob: -8.375333786010742
    3. 'foo' → logprob: -9.625333786010742
    4. '   ' → logprob: -10.875333786010742
    5. '
' → logprob: -11.875333786010742
    6. '(foo' → logprob: -12.625333786010742
    7. '               ' → logprob: -13.125333786010742
    8. '		' → logprob: -13.375333786010742
    9. '          ' → logprob: -13.375333786010742
    10. '       ' → logprob: -14.000333786010742

Token 452: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.12947338819503784
    2. ' foo' → logprob: -2.1294734477996826
    3. '           ' → logprob: -6.0044732093811035
    4. '   ' → logprob: -10.379473686218262
    5. '               ' → logprob: -10.629473686218262
    6. '(foo' → logprob: -11.504473686218262
    7. 'Foo' → logprob: -12.879473686218262
    8. '       ' → logprob: -13.129473686218262
    9. '.foo' → logprob: -13.879473686218262
    10. '/foo' → logprob: -14.129473686218262

Token 453: '.answer' (ID: 87169)
  Prédit: '.out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -0.006769603583961725
    2. '.answer' → logprob: -5.00676965713501
    3. '.' → logprob: -10.006769180297852
    4. '.ins' → logprob: -12.506769180297852
    5. '.outer' → logprob: -13.006769180297852
    6. 'outside' → logprob: -14.006769180297852
    7. '.exit' → logprob: -14.756769180297852
    8. ' .' → logprob: -15.631769180297852
    9. '.OUT' → logprob: -15.756769180297852
    10. '.fail' → logprob: -15.756769180297852

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067156096920371056
    2. ' =' → logprob: -5.006715774536133
    3. '="' → logprob: -15.881715774536133
    4. '＝' → logprob: -17.131715774536133
    5. '[' → logprob: -18.131715774536133
    6. '=

' → logprob: -18.256715774536133
    7. ' ' → logprob: -18.506715774536133
    8. '="""' → logprob: -18.756715774536133
    9. '.=' → logprob: -18.881715774536133
    10. ' ="' → logprob: -19.006715774536133

Token 455: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -6.670925358776003e-05
    2. 'No' → logprob: -10.000066757202148
    3. '"' → logprob: -10.875066757202148
    4. ''' → logprob: -13.250066757202148
    5. ' "' → logprob: -15.125066757202148
    6. '“No' → logprob: -15.375066757202148
    7. '   ' → logprob: -16.62506675720215
    8. ' No' → logprob: -17.12506675720215
    9. '"N' → logprob: -17.12506675720215
    10. '	' → logprob: -17.87506675720215

Token 456: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00018816311785485595
    2. '"No' → logprob: -8.625187873840332
    3. '"' → logprob: -11.875187873840332
    4. ' No' → logprob: -13.625187873840332
    5. ''' → logprob: -16.12518882751465
    6. 'NO' → logprob: -16.25018882751465
    7. ' ' → logprob: -16.62518882751465
    8. '_No' → logprob: -16.75018882751465
    9. 'Impossible' → logprob: -17.25018882751465
    10. 'X' → logprob: -17.37518882751465

Token 457: '"
' (ID: 1092)
  Prédit: '";'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '";' → logprob: -0.6059170961380005
    2. ';' → logprob: -0.9809170961380005
    3. '"
' → logprob: -3.480916976928711
    4. '"' → logprob: -3.605916976928711
    5. '           ' → logprob: -3.855916976928711
    6. '
' → logprob: -9.105916976928711
    7. '               ' → logprob: -9.230916976928711
    8. '       ' → logprob: -9.980916976928711
    9. '",' → logprob: -10.480916976928711
    10. '");' → logprob: -10.730916976928711

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007445912342518568
    2. ';' → logprob: -7.250744819641113
    3. '<|end|>' → logprob: -11.000744819641113
    4. '   ' → logprob: -12.000744819641113
    5. ',' → logprob: -12.125744819641113
    6. '       ' → logprob: -13.500744819641113
    7. '          ' → logprob: -14.125744819641113
    8. ' and' → logprob: -14.125744819641113
    9. '<|end|>' → logprob: -14.375744819641113
    10. '               ' → logprob: -14.750744819641113

Token 459: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' (adapté à ' foo') → logprob: -0.0017064863350242376
    2. '           ' → logprob: -6.501706600189209
    3. ' foo' → logprob: -8.50170612335205
    4. '   ' → logprob: -14.62670612335205
    5. '       ' → logprob: -15.50170612335205
    6. '               ' → logprob: -15.87670612335205
    7. '.foo' → logprob: -17.126707077026367
    8. '(foo' → logprob: -17.126707077026367
    9. 'fo' → logprob: -18.251707077026367
    10. '/foo' → logprob: -18.376707077026367

Token 460: '.out' (ID: 3338)
  Prédit: '.out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.out' → logprob: -4.727905979962088e-05
    2. 'outside' → logprob: -10.75004768371582
    3. '.' → logprob: -11.37504768371582
    4. '.outer' → logprob: -12.12504768371582
    5. '.ins' → logprob: -12.25004768371582
    6. ' .' → logprob: -14.37504768371582
    7. '.exit' → logprob: -14.62504768371582
    8. '[out' → logprob: -14.87504768371582
    9. '.OUT' → logprob: -15.00004768371582
    10. ' outside' → logprob: -15.25004768371582

Token 461: 'side' (ID: 4341)
  Prédit: 'side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -7.703443770878948e-06
    2. '.side' → logprob: -12.875007629394531
    3. 'is' → logprob: -13.125007629394531
    4. 'outside' → logprob: -13.625007629394531
    5. '```' → logprob: -14.125007629394531
    6. '(side' → logprob: -15.250007629394531
    7. '[' → logprob: -15.250007629394531
    8. 'site' → logprob: -16.12500762939453
    9. 'inside' → logprob: -16.25000762939453
    10. 's' → logprob: -16.37500762939453

Token 462: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. '=True' → logprob: -14.701414108276367
    4. '   ' → logprob: -16.576414108276367
    5. ' ' → logprob: -16.576414108276367
    6. '    ' → logprob: -17.076414108276367
    7. '[' → logprob: -17.076414108276367
    8. '  ' → logprob: -17.951414108276367
    9. '       ' → logprob: -18.326414108276367
    10. '	' → logprob: -18.451414108276367

Token 463: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -18.625709533691406
    4. '=True' → logprob: -20.500709533691406
    5. 'False' → logprob: -20.875709533691406
    6. '   ' → logprob: -21.250709533691406
    7. '1' → logprob: -21.375709533691406
    8. 'true' → logprob: -22.875709533691406
    9. '[' → logprob: -24.375709533691406
    10. '       ' → logprob: -24.375709533691406

Token 464: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3560122847557068
    2. '(' → logprob: -1.8560123443603516
    3. '<|end|>' → logprob: -2.3560123443603516
    4. '   ' → logprob: -3.3560123443603516
    5. ':' → logprob: -5.106012344360352
    6. '[' → logprob: -6.731012344360352
    7. ' ' → logprob: -6.856012344360352
    8. ',' → logprob: -7.481012344360352
    9. '(
' → logprob: -7.481012344360352
    10. '\' → logprob: -7.606012344360352

Token 466: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04896112158894539
    2. '(' → logprob: -4.298961162567139
    3. 'def' → logprob: -4.798961162567139
    4. ')' → logprob: -4.798961162567139
    5. '<|end|>' → logprob: -5.048961162567139
    6. '+' → logprob: -5.798961162567139
    7. '@' (adapté à ' @') → logprob: -6.298961162567139
    8. '.' → logprob: -7.048961162567139
    9. '[' → logprob: -7.048961162567139
    10. ' ' → logprob: -7.048961162567139

Token 467: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.02333970181643963
    2. 'classmethod' → logprob: -3.7733397483825684
    3. 'property' → logprob: -9.27333927154541
    4. 'static' → logprob: -15.27333927154541
    5. '@' → logprob: -17.523340225219727
    6. 'dat' → logprob: -19.273340225219727
    7. 'cache' → logprob: -20.023340225219727
    8. '@@' → logprob: -20.648340225219727
    9. 'class' → logprob: -21.023340225219727
    10. 'l' → logprob: -21.148340225219727

Token 468: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.015305552864447e-05
    2. ' def' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.375060081481934
    4. '
' → logprob: -15.500060081481934
    5. ' ' → logprob: -17.75006103515625
    6. '	def' → logprob: -18.12506103515625
    7. '```' → logprob: -18.62506103515625
    8. '    
' → logprob: -18.87506103515625
    9. '  
' → logprob: -20.12506103515625
    10. ':def' → logprob: -20.50006103515625

Token 469: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.627176768844947e-05
    2. ' def' → logprob: -9.250096321105957
    3. 'to' → logprob: -16.62509536743164
    4. '```' → logprob: -18.87509536743164
    5. '   ' → logprob: -19.37509536743164
    6. '
' → logprob: -19.75009536743164
    7. ' ' → logprob: -19.75009536743164
    8. 'from' → logprob: -19.75009536743164
    9. '	def' → logprob: -21.87509536743164
    10. 'char' → logprob: -22.12509536743164

Token 470: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011108772829174995
    2. 'to' → logprob: -4.511108875274658
    3. ' def' → logprob: -9.7611083984375
    4. ' to' → logprob: -13.2611083984375
    5. 'from' → logprob: -14.0111083984375
    6. '
' → logprob: -15.2611083984375
    7. 'To' → logprob: -15.5111083984375
    8. '```' → logprob: -15.8861083984375
    9. ' ' → logprob: -16.6361083984375
    10. '   ' → logprob: -17.6361083984375

Token 471: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.5928495486150496e-05
    2. ' to' → logprob: -11.625016212463379
    3. 'tocht' → logprob: -13.125016212463379
    4. 'tolower' → logprob: -14.125016212463379
    5. 'tocol' → logprob: -14.375016212463379
    6. 'totype' → logprob: -14.375016212463379
    7. '	to' → logprob: -14.375016212463379
    8. '.to' → logprob: -14.625016212463379
    9. 'tobuf' → logprob: -14.625016212463379
    10. 'To' → logprob: -15.125016212463379

Token 472: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: 0.0
    2. 'chr' → logprob: -17.0
    3. ' char' → logprob: -17.375
    4. '<char' → logprob: -18.0
    5. '_char' → logprob: -18.125
    6. '.char' → logprob: -21.0
    7. 'Char' → logprob: -22.375
    8. 'chars' → logprob: -22.625
    9. '-char' → logprob: -23.0
    10. 'def' → logprob: -23.25

Token 473: '(idx' (ID: 42793)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8025575876235962
    2. '(c' → logprob: -1.5525575876235962
    3. '(i' → logprob: -2.0525574684143066
    4. '(idx' → logprob: -2.6775574684143066
    5. '(n' → logprob: -3.0525574684143066
    6. '(pos' → logprob: -3.1775574684143066
    7. '(ch' → logprob: -3.4275574684143066
    8. '(k' → logprob: -5.177557468414307
    9. '(num' → logprob: -5.177557468414307
    10. '(a' → logprob: -5.677557468414307

Token 474: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16052012145519257
    2. '):
' → logprob: -1.910520076751709
    3. ')' → logprob: -8.160520553588867
    4. '):
' → logprob: -12.535520553588867
    5. ':' → logprob: -13.410520553588867
    6. ' ):' → logprob: -13.535520553588867
    7. '):

' → logprob: -13.785520553588867
    8. '   ' → logprob: -14.410520553588867
    9. '):(' → logprob: -14.535520553588867
    10. ')：' → logprob: -15.160520553588867

Token 475: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.304715633392334
    2. ' return' → logprob: -2.054715633392334
    3. '   ' → logprob: -3.054715633392334
    4. 'chr' → logprob: -3.054715633392334
    5. '"' → logprob: -3.679715633392334
    6. ' chr' → logprob: -4.679715633392334
    7. '["' → logprob: -5.679715633392334
    8. '	return' → logprob: -6.929715633392334
    9. '(chr' → logprob: -7.679715633392334
    10. ' ' → logprob: -8.054716110229492

Token 476: ' '' (ID: 461)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.1159152239561081
    2. '"' → logprob: -2.365915298461914
    3. ' chr' → logprob: -4.615915298461914
    4. '["' → logprob: -5.365915298461914
    5. '(chr' → logprob: -6.990915298461914
    6. '"C' → logprob: -10.740915298461914
    7. '"A' → logprob: -11.115915298461914
    8. '['' → logprob: -11.240915298461914
    9. 'Chr' → logprob: -11.365915298461914
    10. ' "' → logprob: -11.365915298461914

Token 477: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.09590917080640793
    2. 'XYZ' → logprob: -2.7209091186523438
    3. 'A' → logprob: -4.220909118652344
    4. '"' → logprob: -5.220909118652344
    5. 'X' → logprob: -5.845909118652344
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.970909118652344
    7. ''' → logprob: -7.095909118652344
    8. '['' → logprob: -8.345909118652344
    9. 'chr' → logprob: -8.470909118652344
    10. '["' → logprob: -8.470909118652344

Token 478: ''[' (ID: 187291)
  Prédit: ''['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''[' → logprob: -0.1622147411108017
    2. '"[' → logprob: -1.912214756011963
    3. ''' → logprob: -6.412214756011963
    4. '[idx' → logprob: -8.037214279174805
    5. '[' → logprob: -11.537214279174805
    6. '"' → logprob: -11.787214279174805
    7. ''''' → logprob: -13.037214279174805
    8. '['' → logprob: -13.412214279174805
    9. '"'' → logprob: -13.912214279174805
    10. ''"' → logprob: -14.162214279174805

Token 479: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.9361264946837764e-07
    2. ' idx' → logprob: -15.75
    3. '[idx' → logprob: -19.375
    4. '(idx' → logprob: -19.375
    5. '	idx' → logprob: -20.125
    6. '_idx' → logprob: -21.875
    7. 'index' → logprob: -22.375
    8. '
' → logprob: -22.375
    9. '   ' → logprob: -22.875
    10. '0' → logprob: -23.0

Token 480: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -3.523948907968588e-05
    2. ' ]' → logprob: -10.375035285949707
    3. '[idx' → logprob: -13.625035285949707
    4. ']
' → logprob: -14.000035285949707
    5. '[' → logprob: -14.250035285949707
    6. '<|end|>' → logprob: -14.875035285949707
    7. '()]' → logprob: -16.00003433227539
    8. '][' → logprob: -16.12503433227539
    9. '']' → logprob: -16.25003433227539
    10. ')]' → logprob: -16.37503433227539

Token 481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04369619861245155
    2. 'def' → logprob: -3.168696165084839
    3. ' def' → logprob: -8.418696403503418
    4. ' ' → logprob: -8.793696403503418
    5. '       ' → logprob: -9.293696403503418
    6. '```' → logprob: -9.793696403503418
    7. '  ' → logprob: -9.918696403503418
    8. '
' → logprob: -10.418696403503418
    9. '    
' → logprob: -10.543696403503418
    10. '	def' → logprob: -10.668696403503418

Token 482: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0337856188416481
    2. '   ' → logprob: -3.783785581588745
    3. '<|end|>' → logprob: -4.658785820007324
    4. 'foo' → logprob: -8.158785820007324
    5. '#' → logprob: -8.533785820007324
    6. ' def' → logprob: -8.783785820007324
    7. '<|end|>' → logprob: -9.033785820007324
    8. 'if' → logprob: -9.658785820007324
    9. 'import' → logprob: -11.033785820007324
    10. '  ' → logprob: -11.033785820007324

Token 483: ' look' (ID: 1631)
  Prédit: ' look'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' look' → logprob: -0.35135167837142944
    2. 'look' → logprob: -1.2263517379760742
    3. ' predict' → logprob: -7.476351737976074
    4. ' looks' → logprob: -8.351351737976074
    5. ' outside' → logprob: -8.601351737976074
    6. 'predict' → logprob: -8.726351737976074
    7. 'lookup' → logprob: -9.101351737976074
    8. '_' → logprob: -9.351351737976074
    9. '.look' → logprob: -9.351351737976074
    10. ' can' → logprob: -9.538851737976074

Token 484: 'ahead' (ID: 96810)
  Prédit: 'ahead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ahead' → logprob: -0.00012678056373260915
    2. 'a' → logprob: -9.000126838684082
    3. ' ahead' → logprob: -13.500126838684082
    4. '_a' → logprob: -14.125126838684082
    5. '(a' → logprob: -14.875126838684082
    6. '   ' → logprob: -15.500126838684082
    7. '(' → logprob: -16.250125885009766
    8. '_' → logprob: -16.250125885009766
    9. 'around' → logprob: -16.375125885009766
    10. 'Ahead' → logprob: -16.625125885009766

Token 485: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -9.627176768844947e-05
    2. '(self' → logprob: -9.250096321105957
    3. 'foo' → logprob: -17.00009536743164
    4. '(' → logprob: -17.87509536743164
    5. '(fake' → logprob: -19.25009536743164
    6. '/foo' → logprob: -19.75009536743164
    7. '(func' → logprob: -20.00009536743164
    8. '(fun' → logprob: -20.75009536743164
    9. '(dummy' → logprob: -21.00009536743164
    10. ' (' → logprob: -21.12509536743164

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019257364328950644
    2. '(self' → logprob: -9.625192642211914
    3. 'self' → logprob: -10.125192642211914
    4. ',p' → logprob: -10.125192642211914
    5. ' ,' → logprob: -10.375192642211914
    6. ',self' → logprob: -12.375192642211914
    7. '):' → logprob: -12.625192642211914
    8. '(p' → logprob: -13.500192642211914
    9. '   ' → logprob: -13.750192642211914
    10. '       ' → logprob: -13.750192642211914

Token 487: ' zz' (ID: 41240)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048537176102399826
    2. 'src' → logprob: -3.298537254333496
    3. ' p' → logprob: -5.048537254333496
    4. 'dst' → logprob: -6.298537254333496
    5. 'q' → logprob: -7.048537254333496
    6. ' src' → logprob: -7.673537254333496
    7. 'idx' → logprob: -8.673537254333496
    8. 'a' → logprob: -8.923537254333496
    9. 'op' → logprob: -9.173537254333496
    10. 'x' → logprob: -9.423537254333496

Token 488: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2813311219215393
    2. '):
' → logprob: -1.4063310623168945
    3. ',' → logprob: -9.406331062316895
    4. ')' → logprob: -9.906331062316895
    5. '):
' → logprob: -11.031331062316895
    6. '):

' → logprob: -11.031331062316895
    7. ' ):' → logprob: -11.406331062316895
    8. ' ):
' → logprob: -13.281331062316895
    9. ':' → logprob: -13.656331062316895
    10. '   ' → logprob: -13.656331062316895

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015872348740231246
    2. 'next' → logprob: -10.500158309936523
    3. 'foo' → logprob: -10.500158309936523
    4. 'pos' → logprob: -10.750158309936523
    5. 'i' → logprob: -11.250158309936523
    6. ' i' → logprob: -11.625158309936523
    7. 'zz' → logprob: -12.000158309936523
    8. 'p' → logprob: -12.125158309936523
    9. 'if' → logprob: -12.250158309936523
    10. ' next' → logprob: -12.250158309936523

Token 490: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5518447160720825
    2. 'p' → logprob: -1.5518447160720825
    3. 'other' → logprob: -2.801844596862793
    4. 'op' → logprob: -3.426844596862793
    5. 'a' → logprob: -3.676844596862793
    6. 'x' → logprob: -4.176844596862793
    7. 'for' → logprob: -4.926844596862793
    8. 'zz' → logprob: -5.176844596862793
    9. 'foo' → logprob: -5.176844596862793
    10. '       ' → logprob: -5.301844596862793

Token 491: ' not' (ID: 625)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.10831595957279205
    2. 'zz' → logprob: -3.483315944671631
    3. 'not' → logprob: -3.608315944671631
    4. ' not' → logprob: -4.233315944671631
    5. ' foo' → logprob: -4.233315944671631
    6. '(foo' → logprob: -5.358315944671631
    7. '(not' → logprob: -5.858315944671631
    8. 'len' → logprob: -5.983315944671631
    9. ' zz' → logprob: -5.983315944671631
    10. '(' → logprob: -6.858315944671631

Token 492: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.11293230205774307
    2. ' foo' → logprob: -2.2379322052001953
    3. '(foo' → logprob: -9.237932205200195
    4. '(' → logprob: -11.987932205200195
    5. ' (' → logprob: -12.862932205200195
    6. 'Foo' → logprob: -13.112932205200195
    7. '.foo' → logprob: -14.362932205200195
    8. '/foo' → logprob: -14.362932205200195
    9. 'fo' → logprob: -16.112932205200195
    10. ' Foo' → logprob: -16.112932205200195

Token 493: '.available' (ID: 87418)
  Prédit: '.available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -3.774276774493046e-05
    2. '.' → logprob: -10.875038146972656
    3. 'available' → logprob: -11.500038146972656
    4. '.av' → logprob: -12.750038146972656
    5. '.idx' → logprob: -12.875038146972656
    6. '.has' → logprob: -14.125038146972656
    7. ' .' → logprob: -14.500038146972656
    8. '.st' → logprob: -15.125038146972656
    9. '.out' → logprob: -15.125038146972656
    10. ' available' → logprob: -15.250038146972656

Token 494: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005177667480893433
    2. '():
' → logprob: -7.750517845153809
    3. '()' → logprob: -9.375517845153809
    4. ' ():' → logprob: -13.125517845153809
    5. '(' → logprob: -15.875517845153809
    6. ':' → logprob: -16.750516891479492
    7. '():
' → logprob: -17.625516891479492
    8. '();' → logprob: -18.250516891479492
    9. '():

' → logprob: -18.750516891479492
    10. ' ()' → logprob: -19.375516891479492

Token 495: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20839639008045197
    2. ' return' → logprob: -1.8333964347839355
    3. 'return' → logprob: -3.5833964347839355
    4. '
' → logprob: -7.9583964347839355
    5. '	return' → logprob: -11.083395957946777
    6. 'foo' → logprob: -11.083395957946777
    7. '   ' → logprob: -11.083395957946777
    8. '		' → logprob: -11.708395957946777
    9. '            
' → logprob: -11.708395957946777
    10. '               ' → logprob: -11.833395957946777

Token 496: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08917195349931717
    2. 'True' → logprob: -2.964171886444092
    3. 'foo' → logprob: -3.589171886444092
    4. ' False' → logprob: -5.464171886444092
    5. '(False' → logprob: -7.714171886444092
    6. ' True' → logprob: -8.08917236328125
    7. '(foo' → logprob: -8.21417236328125
    8. 'None' → logprob: -8.33917236328125
    9. ' foo' → logprob: -8.71417236328125
    10. '(True' → logprob: -9.08917236328125

Token 497: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4521104395389557
    2. '       ' → logprob: -1.0771104097366333
    3. '<|end|>' → logprob: -3.952110528945923
    4. '	' → logprob: -7.327110290527344
    5. '   ' → logprob: -7.452110290527344
    6. '        
' → logprob: -7.577110290527344
    7. '(foo' → logprob: -7.952110290527344
    8. '		
' → logprob: -8.327110290527344
    9. '\n' → logprob: -8.577110290527344
    10. '[' → logprob: -8.827110290527344

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016766231507062912
    2. '
' → logprob: -4.64176607131958
    3. '        
' → logprob: -5.14176607131958
    4. '    
' → logprob: -7.89176607131958
    5. '  
' → logprob: -8.016766548156738
    6. '   ' → logprob: -8.641766548156738
    7. '```' → logprob: -10.016766548156738
    8. 'foo' → logprob: -10.391766548156738
    9. '<|end|>' → logprob: -10.891766548156738
    10. '		
' → logprob: -11.016766548156738

Token 499: ' nxt' (ID: 160200)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.8570213317871094
    2. 'p' → logprob: -1.2320213317871094
    3. 'op' → logprob: -3.1070213317871094
    4. 'if' → logprob: -3.3570213317871094
    5. 'aa' → logprob: -3.7320213317871094
    6. 'a' → logprob: -3.7320213317871094
    7. 'tmp' → logprob: -3.9820213317871094
    8. 'zz' → logprob: -4.107021331787109
    9. 'next' → logprob: -4.232021331787109
    10. 'x' → logprob: -4.482021331787109

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2840953767299652
    2. '_idx' → logprob: -1.5340954065322876
    3. '_op' → logprob: -4.409095287322998
    4. '=' → logprob: -4.909095287322998
    5. '_' → logprob: -5.409095287322998
    6. 'idx' → logprob: -5.659095287322998
    7. '_choice' → logprob: -5.784095287322998
    8. 'op' → logprob: -7.409095287322998
    9. '   ' → logprob: -8.909095764160156
    10. 'foo' → logprob: -9.534095764160156

Token 501: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.000760553521104157
    2. 'Foo' → logprob: -7.375760555267334
    3. ' foo' → logprob: -9.625760078430176
    4. '"' → logprob: -11.250760078430176
    5. '(foo' → logprob: -11.250760078430176
    6. '   ' → logprob: -11.750760078430176
    7. ' ' → logprob: -12.375760078430176
    8. 'zz' → logprob: -12.375760078430176
    9. ' Foo' → logprob: -12.625760078430176
    10. ''' → logprob: -12.625760078430176

Token 502: '.' (ID: 13)
  Prédit: '.idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -0.0303205493837595
    2. '.' → logprob: -3.530320644378662
    3. '.available' → logprob: -7.780320644378662
    4. 'idx' → logprob: -10.155320167541504
    5. '.foo' → logprob: -10.405320167541504
    6. 'choices' → logprob: -11.155320167541504
    7. '._' → logprob: -11.530320167541504
    8. '   ' → logprob: -11.780320167541504
    9. '.hist' → logprob: -12.155320167541504
    10. ' .' → logprob: -12.280320167541504

Token 503: 'choices' (ID: 56195)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03538987413048744
    2. 'choices' → logprob: -3.4103899002075195
    3. 'hist' → logprob: -6.9103899002075195
    4. 'look' → logprob: -8.78538990020752
    5. '_idx' → logprob: -9.03538990020752
    6. 'available' → logprob: -9.41038990020752
    7. '_' → logprob: -9.53538990020752
    8. 'foo' → logprob: -9.66038990020752
    9. 'Foo' → logprob: -10.53538990020752
    10. ' idx' → logprob: -10.78538990020752

Token 504: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.780830830801278e-05
    2. '       ' → logprob: -9.62508773803711
    3. 'foo' → logprob: -10.87508773803711
    4. '=' → logprob: -14.12508773803711
    5. '   ' → logprob: -14.87508773803711
    6. '
' → logprob: -15.25008773803711
    7. '[
' → logprob: -15.25008773803711
    8. '           ' → logprob: -15.25008773803711
    9. '[(' → logprob: -15.62508773803711
    10. '```' → logprob: -15.62508773803711

Token 505: 'foo' (ID: 16660)
  Prédit: 'foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -2.7014437364414334e-05
    2. ' foo' → logprob: -10.87502670288086
    3. '(foo' → logprob: -11.87502670288086
    4. '   ' → logprob: -14.25002670288086
    5. '       ' → logprob: -15.87502670288086
    6. ' ' → logprob: -16.37502670288086
    7. '    ' → logprob: -17.37502670288086
    8. '  ' → logprob: -17.50002670288086
    9. '     ' → logprob: -17.50002670288086
    10. '.foo' → logprob: -17.62502670288086

Token 506: '.idx' (ID: 119077)
  Prédit: '.idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.idx' → logprob: -1.4021237802808173e-05
    2. 'idx' → logprob: -11.250014305114746
    3. '.foo' → logprob: -15.375014305114746
    4. '.' → logprob: -15.500014305114746
    5. '.available' → logprob: -15.625014305114746
    6. '   ' → logprob: -16.62501335144043
    7. '	idx' → logprob: -16.75001335144043
    8. ' .' → logprob: -17.25001335144043
    9. '_idx' → logprob: -17.37501335144043
    10. '.index' → logprob: -17.37501335144043

Token 507: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859895631670952
    2. ' +' → logprob: -3.0485990047454834
    3. ']' → logprob: -11.798599243164062
    4. '()+' → logprob: -13.673599243164062
    5. '   ' → logprob: -13.923599243164062
    6. '+i' → logprob: -14.423599243164062
    7. '＋' → logprob: -14.673599243164062
    8. ']+' → logprob: -15.173599243164062
    9. '[' → logprob: -15.673599243164062
    10. '+]' → logprob: -15.798599243164062

Token 508: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.00000762939453
    4. '+' → logprob: -17.00000762939453
    5. ']' → logprob: -17.37500762939453
    6. 'foo' → logprob: -17.75000762939453
    7. '```' → logprob: -18.00000762939453
    8. '0' → logprob: -18.37500762939453
    9. '       ' → logprob: -18.56250762939453
    10. '2' → logprob: -18.68750762939453

Token 509: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5243028402328491
    2. ']' → logprob: -0.8993028402328491
    3. '].' → logprob: -7.899302959442139
    4. ' ]
' → logprob: -8.27430248260498
    5. ' ]' → logprob: -8.52430248260498
    6. ']

' → logprob: -8.89930248260498
    7. ']==' → logprob: -9.02430248260498
    8. '][' → logprob: -9.89930248260498
    9. ')' → logprob: -11.39930248260498
    10. '[' → logprob: -11.77430248260498

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014891503378748894
    2. 'if' → logprob: -6.876489162445068
    3. '
' → logprob: -8.50148868560791
    4. '        
' → logprob: -9.00148868560791
    5. ' if' → logprob: -9.12648868560791
    6. 'return' → logprob: -11.87648868560791
    7. ',' → logprob: -12.12648868560791
    8. '   ' → logprob: -13.25148868560791
    9. '```' → logprob: -13.75148868560791
    10. '           ' → logprob: -14.25148868560791

Token 511: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012993150390684605
    2. '       ' → logprob: -4.637993335723877
    3. 'p' → logprob: -5.887993335723877
    4. ' if' → logprob: -8.887992858886719
    5. 'op' → logprob: -9.012992858886719
    6. 'next' → logprob: -9.512992858886719
    7. 'return' → logprob: -10.137992858886719
    8. 'x' (adapté à ' x') → logprob: -11.262992858886719
    9. 'pos' → logprob: -11.887992858886719
    10. 'q' → logprob: -11.887992858886719

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4887009263038635
    2. ',' → logprob: -1.3637008666992188
    3. 'x' → logprob: -2.2387008666992188
    4. '=' → logprob: -4.988700866699219
    5. 'z' → logprob: -5.488700866699219
    6. 'y' → logprob: -5.613700866699219
    7. ',y' → logprob: -5.988700866699219
    8. 'if' → logprob: -6.238700866699219
    9. 'yz' → logprob: -6.363700866699219
    10. '1' → logprob: -6.738700866699219

Token 513: ' Foo' (ID: 69516)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.04785443842411041
    2. 'zz' → logprob: -3.922854423522949
    3. 'Foo' → logprob: -4.297854423522949
    4. ' foo' → logprob: -5.422854423522949
    5. '[' → logprob: -6.297854423522949
    6. '"' → logprob: -6.797854423522949
    7. '(foo' → logprob: -6.797854423522949
    8. ' Foo' → logprob: -7.547854423522949
    9. '0' → logprob: -7.797854423522949
    10. '['' → logprob: -7.922854423522949

Token 514: '.to' (ID: 3552)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.48307162523269653
    2. '.to' → logprob: -1.1080715656280518
    3. '.x' → logprob: -4.108071804046631
    4. '.z' → logprob: -4.233071804046631
    5. '(' → logprob: -5.733071804046631
    6. '.' → logprob: -5.733071804046631
    7. '_to' → logprob: -5.983071804046631
    8. '(x' → logprob: -6.108071804046631
    9. '.n' → logprob: -6.358071804046631
    10. '.foo' → logprob: -6.358071804046631

Token 515: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -1.1472419600977446e-06
    2. 'foo' → logprob: -14.125000953674316
    3. '<char' → logprob: -16.000001907348633
    4. 'x' → logprob: -17.000001907348633
    5. 'chr' → logprob: -17.375001907348633
    6. 'xyz' → logprob: -17.875001907348633
    7. 'Foo' → logprob: -18.000001907348633
    8. ' char' → logprob: -18.000001907348633
    9. '```' → logprob: -18.000001907348633
    10. '
' → logprob: -18.250001907348633

Token 516: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012869358994066715
    2. '((' → logprob: -4.512869358062744
    3. '(foo' → logprob: -6.387869358062744
    4. '(F' → logprob: -10.137869834899902
    5. '(n' → logprob: -10.762869834899902
    6. 'zz' → logprob: -11.012869834899902
    7. '(xx' → logprob: -11.012869834899902
    8. '(z' → logprob: -11.387869834899902
    9. ' (' → logprob: -12.387869834899902
    10. '(nn' → logprob: -12.637869834899902

Token 517: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.002601341577246785
    2. '(' → logprob: -7.127601146697998
    3. 'foo' → logprob: -7.377601146697998
    4. 'Foo' → logprob: -7.377601146697998
    5. 'zzz' → logprob: -8.127601623535156
    6. ' zz' → logprob: -9.627601623535156
    7. '1' → logprob: -10.627601623535156
    8. '(F' → logprob: -10.877601623535156
    9. '((' → logprob: -11.002601623535156
    10. '(foo' → logprob: -11.252601623535156

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.480970561504364
    2. ')
' → logprob: -0.980970561504364
    3. ')+' → logprob: -5.23097038269043
    4. '(foo' → logprob: -7.73097038269043
    5. ').' → logprob: -7.98097038269043
    6. '(' → logprob: -8.85597038269043
    7. '(n' → logprob: -9.48097038269043
    8. ')+'' → logprob: -9.60597038269043
    9. '       ' → logprob: -9.85597038269043
    10. ')+"' → logprob: -9.85597038269043

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030439046677201986
    2. '==' → logprob: -7.128044128417969
    3. ' if' → logprob: -7.628044128417969
    4. ' in' → logprob: -7.628044128417969
    5. ' ==' → logprob: -8.003044128417969
    6. ',' → logprob: -8.503044128417969
    7. '	' → logprob: -8.503044128417969
    8. '<|end|>' → logprob: -9.253044128417969
    9. ' and' → logprob: -9.503044128417969
    10. 'if' → logprob: -9.628044128417969

Token 520: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20254269242286682
    2. ' if' → logprob: -2.577542781829834
    3. '
' → logprob: -3.202542781829834
    4. ' y' → logprob: -3.577542781829834
    5. 'if' → logprob: -3.952542781829834
    6. 'return' (adapté à ' return') → logprob: -4.827542781829834
    7. ' return' → logprob: -5.452542781829834
    8. 'y' → logprob: -5.827542781829834
    9. 'z' → logprob: -6.827542781829834
    10. '   ' → logprob: -7.577542781829834

Token 521: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7279981374740601
    2. '(n' → logprob: -0.8529981374740601
    3. 'x' → logprob: -3.2279982566833496
    4. '(x' → logprob: -3.3529982566833496
    5. '((' → logprob: -4.72799825668335
    6. '(' → logprob: -5.72799825668335
    7. ' (' → logprob: -6.97799825668335
    8. ' nxt' → logprob: -6.97799825668335
    9. '(not' → logprob: -7.60299825668335
    10. '(
' → logprob: -8.352997779846191

Token 522: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46893012523651123
    2. 'x' → logprob: -1.7189301252365112
    3. '(n' → logprob: -2.093930244445801
    4. '(x' → logprob: -2.968930244445801
    5. '(foo' → logprob: -5.343930244445801
    6. '((' → logprob: -5.468930244445801
    7. 'foo' → logprob: -5.468930244445801
    8. '(' → logprob: -5.718930244445801
    9. '(f' → logprob: -7.093930244445801
    10. '(
' → logprob: -7.093930244445801

Token 523: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4295969009399414
    2. ' ==' → logprob: -2.0545969009399414
    3. '==' → logprob: -2.1795969009399414
    4. '+' → logprob: -3.0545969009399414
    5. 'in' → logprob: -3.1795969009399414
    6. ' +' → logprob: -4.429596900939941
    7. ' not' → logprob: -6.554596900939941
    8. ' !=' → logprob: -6.679596900939941
    9. ',' → logprob: -6.804596900939941
    10. '+x' → logprob: -6.929596900939941

Token 524: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011892046313732862
    2. '"' → logprob: -10.00011920928955
    3. ' nxt' → logprob: -11.12511920928955
    4. 'p' → logprob: -11.37511920928955
    5. '[n' → logprob: -11.37511920928955
    6. '["' → logprob: -11.50011920928955
    7. '
' → logprob: -11.50011920928955
    8. '{"' → logprob: -12.62511920928955
    9. '(n' → logprob: -12.75011920928955
    10. '[' → logprob: -12.87511920928955

Token 525: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021212305000517517
    2. '       ' → logprob: -9.375211715698242
    3. ' )' → logprob: -9.500211715698242
    4. ' and' → logprob: -10.500211715698242
    5. ')
' → logprob: -11.750211715698242
    6. ' or' → logprob: -11.750211715698242
    7. '   ' → logprob: -13.000211715698242
    8. '<|end|>' → logprob: -13.625211715698242
    9. '        ' → logprob: -14.125211715698242
    10. '[' → logprob: -14.125211715698242

Token 526: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: ' show' (ID: 2356)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.2431679964065552
    2. 'predict' → logprob: -1.6181679964065552
    3. 'run' → logprob: -2.3681678771972656
    4. 'answer' → logprob: -2.3681678771972656
    5. '__' → logprob: -2.4931678771972656
    6. 'get' → logprob: -3.1181678771972656
    7. 'can' → logprob: -4.118167877197266
    8. 'outside' → logprob: -4.243167877197266
    9. 'has' → logprob: -4.368167877197266
    10. 'solve' → logprob: -4.493167877197266

Token 529: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -1.2948405128554441e-05
    2. '(self' → logprob: -11.50001335144043
    3. 'foo' → logprob: -13.62501335144043
    4. '(' → logprob: -13.87501335144043
    5. '(bar' → logprob: -15.62501335144043
    6. '()' → logprob: -16.00001335144043
    7. '(def' → logprob: -17.12501335144043
    8. '():' → logprob: -17.37501335144043
    9. ' (' → logprob: -17.50001335144043
    10. 'self' → logprob: -17.62501335144043

Token 530: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761969089508057
    2. '):' → logprob: -0.8261969089508057
    3. '():
' → logprob: -9.576196670532227
    4. '():' → logprob: -10.201196670532227
    5. ')' → logprob: -10.451196670532227
    6. 'self' → logprob: -10.451196670532227
    7. '   ' → logprob: -10.576196670532227
    8. '()):
' → logprob: -11.326196670532227
    9. '       ' → logprob: -11.451196670532227
    10. ',' → logprob: -11.451196670532227

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3080716346157715e-05
    2. ' print' → logprob: -11.625022888183594
    3. '   ' → logprob: -11.750022888183594
    4. 'print' → logprob: -12.125022888183594
    5. ' for' → logprob: -14.750022888183594
    6. '```' → logprob: -15.750022888183594
    7. 'p' → logprob: -16.000022888183594
    8. 'for' → logprob: -17.000022888183594
    9. '           ' → logprob: -18.375022888183594
    10. '	' → logprob: -19.000022888183594

Token 532: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02130398340523243
    2. 'return' → logprob: -4.146304130554199
    3. '       ' → logprob: -6.271304130554199
    4. 'p' → logprob: -6.521304130554199
    5. ' print' → logprob: -6.521304130554199
    6. 'for' → logprob: -8.3963041305542
    7. '   ' → logprob: -8.7713041305542
    8. ' return' → logprob: -10.2713041305542
    9. ' for' → logprob: -12.3963041305542
    10. '	print' → logprob: -14.5213041305542

Token 533: '(foo' (ID: 171155)
  Prédit: '(foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(foo' → logprob: -0.6624974012374878
    2. '("' → logprob: -1.1624974012374878
    3. '('' → logprob: -2.4124975204467773
    4. '()' → logprob: -2.9124975204467773
    5. '(' → logprob: -3.9124975204467773
    6. '(*' → logprob: -5.537497520446777
    7. '("("' → logprob: -6.787497520446777
    8. '(f' → logprob: -7.037497520446777
    9. '("")' → logprob: -7.412497520446777
    10. '(p' → logprob: -7.537497520446777

Token 534: '.answer' (ID: 87169)
  Prédit: '(".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(".' → logprob: -0.6409127116203308
    2. '.answer' → logprob: -0.8909127116203308
    3. '.p' → logprob: -4.0159125328063965
    4. '('.' → logprob: -4.7659125328063965
    5. '.' → logprob: -4.8909125328063965
    6. '(answer' → logprob: -5.1409125328063965
    7. '("."' → logprob: -5.2659125328063965
    8. '(p' → logprob: -5.6409125328063965
    9. '(' → logprob: -5.8909125328063965
    10. ')' → logprob: -5.8909125328063965

Token 535: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13302062451839447
    2. ')
' → logprob: -2.3830206394195557
    3. ')' → logprob: -3.5080206394195557
    4. '   ' → logprob: -7.008020401000977
    5. ' ,' → logprob: -7.758020401000977
    6. ',"' → logprob: -8.008020401000977
    7. '       ' → logprob: -8.383020401000977
    8. '+' → logprob: -9.508020401000977
    9. ' +' → logprob: -9.508020401000977
    10. ',end' → logprob: -9.758020401000977

Token 536: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018733225762844086
    2. 'if' (adapté à ' if') → logprob: -4.018733024597168
    3. 'for' → logprob: -7.768733024597168
    4. '       ' → logprob: -8.893733024597168
    5. '   ' → logprob: -11.268733024597168
    6. ' print' → logprob: -12.018733024597168
    7. 'p' → logprob: -13.143733024597168
    8. ' if' → logprob: -13.768733024597168
    9. '#print' → logprob: -15.143733024597168
    10. '	print' → logprob: -15.268733024597168

Token 538: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.5404088497161865
    2. ' foo' → logprob: -1.2904088497161865
    3. ' not' → logprob: -2.0404088497161865
    4. 'not' → logprob: -4.415409088134766
    5. '"' → logprob: -8.915409088134766
    6. ' ' → logprob: -10.290409088134766
    7. '(foo' → logprob: -10.540409088134766
    8. ' all' → logprob: -10.790409088134766
    9. 'all' → logprob: -11.415409088134766
    10. 'fo' → logprob: -12.102909088134766

Token 539: '.answer' (ID: 87169)
  Prédit: '.hist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hist' → logprob: -0.018188927322626114
    2. '.idx' → logprob: -4.018188953399658
    3. '.answer' → logprob: -11.2681884765625
    4. '.' → logprob: -11.3931884765625
    5. '.history' → logprob: -12.7681884765625
    6. '.has' → logprob: -13.0181884765625
    7. ' .' → logprob: -13.1431884765625
    8. '.out' → logprob: -13.1431884765625
    9. '   ' → logprob: -14.1431884765625
    10. '.st' → logprob: -14.5181884765625

Token 540: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010513591580092907
    2. ' ==' → logprob: -4.635513782501221
    3. '=="' → logprob: -7.260513782501221
    4. '=' → logprob: -10.635513305664062
    5. '==
' → logprob: -11.510513305664062
    6. '!=' → logprob: -11.760513305664062
    7. '[' → logprob: -12.385513305664062
    8. '=='' → logprob: -13.010513305664062
    9. '```' → logprob: -13.385513305664062
    10. ' ' → logprob: -13.635513305664062

Token 541: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03343809023499489
    2. ' "' → logprob: -3.533438205718994
    3. '"No' → logprob: -5.783438205718994
    4. ''' → logprob: -8.158437728881836
    5. '   ' → logprob: -8.408437728881836
    6. '“Yes' → logprob: -10.033437728881836
    7. ' ' → logprob: -11.408437728881836
    8. ' '' → logprob: -11.658437728881836
    9. 'Yes' → logprob: -11.658437728881836
    10. ' Yes' → logprob: -12.033437728881836

Token 542: 'No' (ID: 3160)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0024768433067947626
    2. 'No' → logprob: -6.002476692199707
    3. '"' → logprob: -14.502476692199707
    4. 'YES' → logprob: -15.127476692199707
    5. ' Yes' → logprob: -15.127476692199707
    6. 'Ye' → logprob: -16.252477645874023
    7. 'Y' → logprob: -18.002477645874023
    8. '"No' → logprob: -18.252477645874023
    9. 'yes' → logprob: -18.627477645874023
    10. '\n' → logprob: -18.752477645874023

Token 543: '":' (ID: 1243)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7323065996170044
    2. '":
' → logprob: -0.8573065996170044
    3. ':' → logprob: -2.732306480407715
    4. '":' → logprob: -4.232306480407715
    5. ':"' → logprob: -4.607306480407715
    6. '):
' → logprob: -5.482306480407715
    7. '"' → logprob: -7.232306480407715
    8. '   ' → logprob: -8.857306480407715
    9. '():
' → logprob: -9.982306480407715
    10. '"):
' → logprob: -9.982306480407715

Token 544: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025051478296518326
    2. ' return' → logprob: -6.127505302429199
    3. 'return' → logprob: -8.3775053024292
    4. '	       ' → logprob: -10.0025053024292
    5. '   ' → logprob: -11.2525053024292
    6. '       ' → logprob: -11.8775053024292
    7. '	return' → logprob: -12.0025053024292
    8. '		' → logprob: -12.3775053024292
    9. '               ' → logprob: -12.7525053024292
    10. '	   ' → logprob: -13.1275053024292

Token 545: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005080533679574728
    2. '   ' → logprob: -6.255080699920654
    3. 'print' → logprob: -6.255080699920654
    4. 'for' → logprob: -6.755080699920654
    5. 'p' → logprob: -10.505080223083496
    6. ' for' → logprob: -11.255080223083496
    7. '      ' → logprob: -12.380080223083496
    8. '           ' → logprob: -12.380080223083496
    9. '	   ' → logprob: -12.880080223083496
    10. ' print' → logprob: -13.130080223083496

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021358832716941833
    2. '   ' → logprob: -4.271358966827393
    3. 'for' → logprob: -5.021358966827393
    4. 'print' → logprob: -7.646358966827393
    5. ' for' → logprob: -9.771358489990234
    6. 'p' → logprob: -10.896358489990234
    7. '           ' → logprob: -12.646358489990234
    8. '<|end|>' → logprob: -12.896358489990234
    9. '
' → logprob: -13.021358489990234
    10. '        
' → logprob: -13.396358489990234

Token 547: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32535821199417114
    2. 'for' (adapté à ' for') → logprob: -1.8253581523895264
    3. '       ' → logprob: -2.2003581523895264
    4. ' for' → logprob: -5.7003583908081055
    5. ' print' → logprob: -6.2003583908081055
    6. 'p' → logprob: -7.9503583908081055
    7. '   ' → logprob: -9.950358390808105
    8. 'foo' → logprob: -11.450358390808105
    9. 's' → logprob: -12.200358390808105
    10. ' ' → logprob: -12.700358390808105

Token 548: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9021515250205994
    2. 'x' → logprob: -1.4021515846252441
    3. 'h' → logprob: -1.5271515846252441
    4. 'ch' → logprob: -2.777151584625244
    5. 'i' → logprob: -3.152151584625244
    6. 'hh' → logprob: -4.902151584625244
    7. 'foo' → logprob: -5.777151584625244
    8. 'xx' → logprob: -5.777151584625244
    9. 'v' → logprob: -6.027151584625244
    10. 'hist' → logprob: -6.277151584625244

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -6.718606891809031e-05
    2. 'in' → logprob: -10.375066757202148
    3. 'e' → logprob: -11.375066757202148
    4. 'tr' → logprob: -12.125066757202148
    5. 'foo' → logprob: -12.250066757202148
    6. ' ' → logprob: -12.375066757202148
    7. 'how' → logprob: -13.000066757202148
    8. 'tring' → logprob: -13.250066757202148
    9. '   ' → logprob: -13.250066757202148
    10. 't' → logprob: -14.250066757202148

Token 550: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -1.1637164789135568e-05
    2. ' foo' → logprob: -11.375011444091797
    3. '(foo' → logprob: -15.625011444091797
    4. '.foo' → logprob: -17.000011444091797
    5. 'fo' → logprob: -18.875011444091797
    6. '/foo' → logprob: -19.000011444091797
    7. '   ' → logprob: -19.250011444091797
    8. 'foobar' → logprob: -20.250011444091797
    9. 'Foo' → logprob: -20.625011444091797
    10. 'fox' → logprob: -21.500011444091797

Token 551: '.hist' (ID: 116240)
  Prédit: '.hist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.hist' → logprob: -1.8624639324116288e-06
    2. 'hist' → logprob: -13.625001907348633
    3. '.' → logprob: -15.375001907348633
    4. '.history' → logprob: -16.375001907348633
    5. '(hist' → logprob: -16.750001907348633
    6. '_hist' → logprob: -16.875001907348633
    7. ' .' → logprob: -17.125001907348633
    8. 'ist' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 552: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07919005304574966
    2. ':
' → logprob: -2.5791900157928467
    3. '           ' → logprob: -8.329190254211426
    4. '[:' → logprob: -10.204190254211426
    5. '       ' → logprob: -11.829190254211426
    6. '[:-' → logprob: -12.079190254211426
    7. 'print' → logprob: -12.454190254211426
    8. '   ' → logprob: -13.454190254211426
    9. ' :' → logprob: -13.579190254211426
    10. '[' → logprob: -14.079190254211426

Token 553: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001164388144388795
    2. ' print' → logprob: -7.001164436340332
    3. 'print' → logprob: -8.376164436340332
    4. '            
' → logprob: -12.251164436340332
    5. '       ' → logprob: -12.501164436340332
    6. '   ' → logprob: -12.501164436340332
    7. '	       ' → logprob: -12.751164436340332
    8. '               ' → logprob: -13.251164436340332
    9. '<|end|>' → logprob: -13.251164436340332
    10. ',' → logprob: -13.626164436340332

Token 554: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019289902411401272
    2. '(s' → logprob: -6.251928806304932
    3. ' s' → logprob: -14.75192928314209
    4. '{s' → logprob: -18.751928329467773
    5. '(F' → logprob: -19.626928329467773
    6. '(' → logprob: -19.876928329467773
    7. '`s' → logprob: -21.876928329467773
    8. '   ' → logprob: -22.126928329467773
    9. '	s' → logprob: -22.376928329467773
    10. '(f' → logprob: -22.501928329467773

Token 555: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. '())' → logprob: -11.375015258789062
    3. ' )' → logprob: -13.375015258789062
    4. '()' → logprob: -14.750015258789062
    5. ')
' → logprob: -14.750015258789062
    6. '<|end|>' → logprob: -15.250015258789062
    7. '))' → logprob: -15.625015258789062
    8. ')}' → logprob: -15.625015258789062
    9. ')s' → logprob: -16.500015258789062
    10. '")' → logprob: -16.500015258789062

Token 556: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' RUN' (ID: 68725)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.006879476364701986
    2. 'main' → logprob: -5.0068793296813965
    3. ' solve' → logprob: -9.756879806518555
    4. ' ' → logprob: -10.381879806518555
    5. '_' → logprob: -11.006879806518555
    6. '_main' → logprob: -11.131879806518555
    7. ' input' → logprob: -11.631879806518555
    8. ' run' → logprob: -11.756879806518555
    9. '__' → logprob: -11.881879806518555
    10. ' __' → logprob: -12.256879806518555

Token 558: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02648073621094227
    2. '():
' → logprob: -3.6514806747436523
    3. ' ():' → logprob: -8.901480674743652
    4. '()' → logprob: -10.776480674743652
    5. '_' → logprob: -11.276480674743652
    6. '():
' → logprob: -11.901480674743652
    7. '(' → logprob: -13.776480674743652
    8. ' ()' → logprob: -13.776480674743652
    9. '():

' → logprob: -14.276480674743652
    10. '();' → logprob: -14.776480674743652

Token 559: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6741142272949219
    2. '   ' → logprob: -1.0491142272949219
    3. '	n' → logprob: -2.049114227294922
    4. 'N' → logprob: -5.049114227294922
    5. '	N' → logprob: -6.674114227294922
    6. ' n' → logprob: -6.799114227294922
    7. '(n' → logprob: -7.049114227294922
    8. 't' → logprob: -8.049114227294922
    9. 'a' → logprob: -8.299114227294922
    10. '_n' → logprob: -8.674114227294922

Token 560: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.15766645967960358
    2. 'N' → logprob: -2.0326664447784424
    3. '   ' → logprob: -4.9076666831970215
    4. '	n' → logprob: -6.4076666831970215
    5. 'import' → logprob: -6.6576666831970215
    6. 'arr' → logprob: -6.6576666831970215
    7. ' n' → logprob: -7.1576666831970215
    8. 'a' → logprob: -7.4076666831970215
    9. '_n' → logprob: -7.5326666831970215
    10. '_' → logprob: -8.157666206359863

Token 561: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02519971691071987
    2. ',' → logprob: -4.275199890136719
    3. '=' → logprob: -4.525199890136719
    4. '=int' → logprob: -9.525199890136719
    5. ' ' → logprob: -10.400199890136719
    6. ',n' → logprob: -11.525199890136719
    7. ' ,' → logprob: -12.150199890136719
    8. '=input' → logprob: -12.650199890136719
    9. ',t' → logprob: -12.775199890136719
    10. ',m' → logprob: -12.775199890136719

Token 562: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0898621082305908
    2. 'choices' → logprob: -1.3398621082305908
    3. 'q' → logprob: -1.7148621082305908
    4. 'm' → logprob: -2.339862108230591
    5. 'arr' → logprob: -2.964862108230591
    6. 'Q' → logprob: -4.214861869812012
    7. 'c' → logprob: -4.839861869812012
    8. ' choices' → logprob: -4.839861869812012
    9. 'abc' → logprob: -4.964861869812012
    10. 'qs' → logprob: -5.089861869812012

Token 563: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10377861559391022
    2. ' =' → logprob: -2.603778600692749
    3. ',' → logprob: -4.728778839111328
    4. 'b' → logprob: -4.853778839111328
    5. ',b' → logprob: -4.853778839111328
    6. '=b' → logprob: -10.478778839111328
    7. 'r' → logprob: -10.978778839111328
    8. 'rray' → logprob: -10.978778839111328
    9. 's' → logprob: -11.103778839111328
    10. 'bc' → logprob: -11.353778839111328

Token 564: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020473242329899222
    2. ' b' → logprob: -8.500205039978027
    3. ' =' → logprob: -15.125205039978027
    4. ',b' → logprob: -15.250205039978027
    5. '=' → logprob: -15.375205039978027
    6. ' ' → logprob: -15.750205039978027
    7. '   ' → logprob: -16.25020408630371
    8. '=b' → logprob: -16.37520408630371
    9. '	b' → logprob: -16.75020408630371
    10. 'c' → logprob: -17.12520408630371

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010194806382060051
    2. '=' → logprob: -4.760194778442383
    3. ' =' → logprob: -6.760194778442383
    4. 'c' → logprob: -8.010194778442383
    5. ',c' → logprob: -9.385194778442383
    6. ' ,' → logprob: -12.635194778442383
    7. '=c' → logprob: -15.885194778442383
    8. '=sys' → logprob: -16.010194778442383
    9. '=input' → logprob: -16.510194778442383
    10. ' ' → logprob: -16.760194778442383

Token 566: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.722539834911004e-05
    2. ' c' → logprob: -9.250097274780273
    3. '	c' → logprob: -15.375097274780273
    4. 'k' → logprob: -15.500097274780273
    5. '   ' → logprob: -16.125097274780273
    6. '  ' → logprob: -16.125097274780273
    7. ' ' → logprob: -16.375097274780273
    8. 'cs' → logprob: -16.500097274780273
    9. '```' → logprob: -16.625097274780273
    10. 'ct' → logprob: -17.250097274780273

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142221450805664
    2. ' =' → logprob: -1.7014222145080566
    3. '=input' → logprob: -12.451421737670898
    4. '=sys' → logprob: -12.451421737670898
    5. '   ' → logprob: -14.576421737670898
    6. '=list' → logprob: -15.826421737670898
    7. ' ' → logprob: -16.0764217376709
    8. ',' → logprob: -16.3264217376709
    9. '=line' → logprob: -16.4514217376709
    10. '＝' → logprob: -17.7014217376709

Token 568: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.201422318816185
    2. ' map' → logprob: -1.7014223337173462
    3. '[' → logprob: -12.701422691345215
    4. '	map' → logprob: -12.951422691345215
    5. 'list' → logprob: -13.326422691345215
    6. ' ' → logprob: -13.826422691345215
    7. '(map' → logprob: -14.701422691345215
    8. ' [' → logprob: -15.326422691345215
    9. ' list' → logprob: -15.701422691345215
    10. '   ' → logprob: -16.7014217376709

Token 569: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04859861359000206
    2. '(int' → logprob: -3.048598527908325
    3. '=int' → logprob: -12.423598289489746
    4. ' int' → logprob: -12.548598289489746
    5. '[int' → logprob: -13.798598289489746
    6. '   ' → logprob: -13.923598289489746
    7. '<int' → logprob: -14.173598289489746
    8. ',int' → logprob: -14.548598289489746
    9. '	int' → logprob: -15.173598289489746
    10. 'input' → logprob: -15.423598289489746

Token 570: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.8792402148246765
    2. 'input' → logprob: -1.2542402744293213
    3. ',' → logprob: -2.0042402744293213
    4. '(sys' → logprob: -2.5042402744293213
    5. 'sys' → logprob: -3.0042402744293213
    6. '(input' → logprob: -3.6292402744293213
    7. ' input' → logprob: -6.129240036010742
    8. '   ' → logprob: -6.129240036010742
    9. '=sys' → logprob: -7.504240036010742
    10. ' sys' → logprob: -7.504240036010742

Token 571: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020736558362841606
    2. 'sys' → logprob: -4.0207366943359375
    3. ' input' → logprob: -6.0207366943359375
    4. ' sys' → logprob: -8.770736694335938
    5. '   ' → logprob: -15.770736694335938
    6. 'open' → logprob: -16.645736694335938
    7. '=sys' → logprob: -18.520736694335938
    8. ' ' → logprob: -18.895736694335938
    9. '_input' → logprob: -19.145736694335938
    10. 'stdin' → logprob: -19.270736694335938

Token 572: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9385402993066236e-05
    2. '()' → logprob: -10.875019073486328
    3. '(' → logprob: -16.125019073486328
    4. ')' → logprob: -16.125019073486328
    5. ' ().' → logprob: -16.125019073486328
    6. '   ' → logprob: -16.625019073486328
    7. '())' → logprob: -17.125019073486328
    8. 'split' → logprob: -17.625019073486328
    9. '()
' → logprob: -18.125019073486328
    10. '.split' → logprob: -18.250019073486328

Token 573: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001858982432167977
    2. 'strip' → logprob: -8.6251859664917
    3. '().' → logprob: -12.6251859664917
    4. ' split' → logprob: -13.5001859664917
    5. 'rstrip' → logprob: -13.6251859664917
    6. ')' → logprob: -16.000185012817383
    7. '(split' → logprob: -16.125185012817383
    8. 'read' → logprob: -16.625185012817383
    9. '.split' → logprob: -17.250185012817383
    10. ' ' → logprob: -17.375185012817383

Token 574: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1143452450633049
    2. ')' → logprob: -2.6143453121185303
    3. '()' → logprob: -3.3643453121185303
    4. '())
' → logprob: -8.98934555053711
    5. '(' → logprob: -9.23934555053711
    6. '('' → logprob: -11.98934555053711
    7. '))' → logprob: -12.73934555053711
    8. ')
' → logprob: -12.73934555053711
    9. '()
' → logprob: -12.86434555053711
    10. '("' → logprob: -12.98934555053711

Token 575: '   ' (ID: 271)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.6483654379844666
    2. '   ' → logprob: -0.7733654379844666
    3. '	arr' → logprob: -4.398365497589111
    4. ' arr' → logprob: -7.023365497589111
    5. 'choices' → logprob: -7.398365497589111
    6. '<|end|>' → logprob: -7.648365497589111
    7. '    
' → logprob: -7.898365497589111
    8. '```' → logprob: -8.773365020751953
    9. 'foo' → logprob: -9.023365020751953
    10. 's' → logprob: -9.273365020751953

Token 576: ' arr' (ID: 1724)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.24434326589107513
    2. 'arr' (adapté à ' arr') → logprob: -1.6193432807922363
    3. '   ' → logprob: -4.869343280792236
    4. ' foo' → logprob: -5.119343280792236
    5. 'f' → logprob: -6.119343280792236
    6. 'fo' → logprob: -7.369343280792236
    7. 'stuff' → logprob: -7.494343280792236
    8. ' arr' → logprob: -7.494343280792236
    9. 'A' → logprob: -8.494342803955078
    10. 'choices' → logprob: -8.744342803955078

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327531933784485
    2. ' =' → logprob: -0.7577531933784485
    3. '=[' → logprob: -8.882753372192383
    4. ',' → logprob: -12.632753372192383
    5. ' =[' → logprob: -12.757753372192383
    6. '[' → logprob: -12.882753372192383
    7. '```' → logprob: -13.757753372192383
    8. '=
' → logprob: -14.007753372192383
    9. '   ' → logprob: -14.132753372192383
    10. 'arr' → logprob: -14.757753372192383

Token 578: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0009230116847902536
    2. ' [' → logprob: -7.000923156738281
    3. '[' → logprob: -11.500923156738281
    4. '[A' → logprob: -13.750923156738281
    5. '   ' → logprob: -16.25092315673828
    6. ' ' → logprob: -16.37592315673828
    7. '[b' → logprob: -17.00092315673828
    8. 'a' → logprob: -17.37592315673828
    9. '([' → logprob: -17.75092315673828
    10. '[n' → logprob: -17.87592315673828

Token 579: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.3458322731312364e-06
    2. ' a' → logprob: -12.125007629394531
    3. '0' → logprob: -14.250007629394531
    4. '[a' → logprob: -14.250007629394531
    5. '   ' → logprob: -15.625007629394531
    6. '	a' → logprob: -16.25000762939453
    7. 'b' → logprob: -16.50000762939453
    8. '(a' → logprob: -17.75000762939453
    9. 'A' → logprob: -17.75000762939453
    10. 'int' → logprob: -17.87500762939453

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036133781541138887
    2. ',b' → logprob: -5.878613471984863
    3. ' ,' → logprob: -7.128613471984863
    4. 'b' → logprob: -12.878613471984863
    5. ',
' → logprob: -13.128613471984863
    6. ',n' → logprob: -14.128613471984863
    7. ',a' → logprob: -15.253613471984863
    8. ',c' → logprob: -15.378613471984863
    9. '   ' → logprob: -15.878613471984863
    10. '<|end|>' → logprob: -15.878613471984863

Token 581: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020839422941208
    2. ' b' → logprob: -2.350208282470703
    3. '   ' → logprob: -14.100208282470703
    4. '    ' → logprob: -14.475208282470703
    5. ' ' → logprob: -16.100208282470703
    6. '       ' → logprob: -16.225208282470703
    7. '	b' → logprob: -16.225208282470703
    8. '  ' → logprob: -16.475208282470703
    9. '        ' → logprob: -17.475208282470703
    10. ',b' → logprob: -17.725208282470703

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007894305512309074
    2. ',c' → logprob: -4.882894515991211
    3. ' ,' → logprob: -8.507894515991211
    4. 'c' → logprob: -9.382894515991211
    5. ',
' → logprob: -13.757894515991211
    6. '   ' → logprob: -14.507894515991211
    7. ' c' → logprob: -16.00789451599121
    8. '```' → logprob: -16.50789451599121
    9. '
' → logprob: -16.63289451599121
    10. ',C' → logprob: -16.88289451599121

Token 583: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022604703903198
    2. ' c' → logprob: -1.9102261066436768
    3. '   ' → logprob: -13.660225868225098
    4. '	c' → logprob: -14.785225868225098
    5. ' ' → logprob: -15.785225868225098
    6. '    ' → logprob: -16.285226821899414
    7. '       ' → logprob: -17.160226821899414
    8. '  ' → logprob: -17.160226821899414
    9. ',c' → logprob: -17.160226821899414
    10. '
' → logprob: -17.785226821899414

Token 584: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08919397741556168
    2. ']
' → logprob: -2.4641940593719482
    3. ' ]' → logprob: -8.714194297790527
    4. ' ]
' → logprob: -10.089194297790527
    5. '   ' → logprob: -10.714194297790527
    6. ']
' → logprob: -11.214194297790527
    7. ']

' → logprob: -12.089194297790527
    8. ')' → logprob: -13.214194297790527
    9. '<|end|>' → logprob: -13.714194297790527
    10. '<|end|>' → logprob: -14.339194297790527

Token 585: '   ' (ID: 271)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.5061035752296448
    2. '   ' → logprob: -1.006103515625
    3. ' choices' → logprob: -3.506103515625
    4. 'foo' → logprob: -6.756103515625
    5. '_choices' → logprob: -8.631103515625
    6. '```' → logprob: -10.006103515625
    7. ' foo' → logprob: -10.756103515625
    8. ' ' → logprob: -10.881103515625
    9. '  ' → logprob: -11.131103515625
    10. '<|end|>' → logprob: -11.256103515625

Token 586: ' seq' (ID: 26775)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.03285675123333931
    2. 'foo' → logprob: -3.5328567028045654
    3. ' choices' → logprob: -6.5328569412231445
    4. 'f' → logprob: -7.4078569412231445
    5. 'fo' → logprob: -8.532856941223145
    6. 'choice' → logprob: -8.782856941223145
    7. '   ' → logprob: -8.907856941223145
    8. 'c' → logprob: -9.157856941223145
    9. 's' → logprob: -9.657856941223145
    10. ' foo' → logprob: -9.657856941223145

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054979316890239716
    2. '=' → logprob: -2.9299793243408203
    3. 'u' → logprob: -9.67997932434082
    4. 'ues' → logprob: -11.67997932434082
    5. 's' → logprob: -11.80497932434082
    6. ',' → logprob: -11.92997932434082
    7. '_choices' → logprob: -12.30497932434082
    8. 'choices' → logprob: -12.80497932434082
    9. '=[]' → logprob: -13.80497932434082
    10. 'ences' → logprob: -14.55497932434082

Token 588: ' []
' (ID: 8911)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.0006579888286069036
    2. '[' → logprob: -8.25065803527832
    3. 'input' → logprob: -8.62565803527832
    4. '[list' → logprob: -9.25065803527832
    5. '[]
' → logprob: -9.37565803527832
    6. ' [' → logprob: -10.87565803527832
    7. '[]' → logprob: -12.25065803527832
    8. '[index' → logprob: -13.12565803527832
    9. '[data' → logprob: -13.50065803527832
    10. '[str' → logprob: -13.75065803527832

Token 589: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5014261603355408
    2. 'for' → logprob: -1.0014262199401855
    3. '   ' → logprob: -3.6264262199401855
    4. '<|end|>' → logprob: -8.126425743103027
    5. '	for' → logprob: -10.376425743103027
    6. 'i' → logprob: -11.126425743103027
    7. '<|end|>' → logprob: -11.251425743103027
    8. ' i' → logprob: -12.876425743103027
    9. ' ' → logprob: -13.376425743103027
    10. 'while' → logprob: -13.501425743103027

Token 590: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.1888679839321412e-05
    2. ' for' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. '
' → logprob: -16.00002098083496
    5. 'while' → logprob: -16.12502098083496
    6. '	for' → logprob: -19.37502098083496
    7. 'i' → logprob: -20.00002098083496
    8. 'import' → logprob: -20.00002098083496
    9. 'fo' → logprob: -20.12502098083496
    10. 'try' → logprob: -20.12502098083496

Token 591: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0019442226039245725
    2. '_i' → logprob: -6.251944065093994
    3. ' _' → logprob: -11.626944541931152
    4. '_in' → logprob: -12.251944541931152
    5. 'i' → logprob: -14.501944541931152
    6. '_
' → logprob: -15.001944541931152
    7. '_=' → logprob: -15.001944541931152
    8. '_input' → logprob: -16.126943588256836
    9. '_index' → logprob: -16.626943588256836
    10. '_j' → logprob: -16.876943588256836

Token 592: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -8.947715832618997e-05
    2. ' ' → logprob: -9.750089645385742
    3. 'in' → logprob: -10.875089645385742
    4. 'i' → logprob: -12.000089645385742
    5. '  ' → logprob: -12.875089645385742
    6. ' i' → logprob: -14.000089645385742
    7. 'seq' → logprob: -14.500089645385742
    8. ' _' → logprob: -14.750089645385742
    9. 'n' → logprob: -15.625089645385742
    10. '_' → logprob: -15.750089645385742

Token 593: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023274161503650248
    2. ' range' → logprob: -8.375232696533203
    3. 'input' → logprob: -14.375232696533203
    4. 'in' → logprob: -14.625232696533203
    5. 'ran' → logprob: -14.875232696533203
    6. '_' → logprob: -15.125232696533203
    7. 'r' → logprob: -15.375232696533203
    8. 'rang' → logprob: -16.250232696533203
    9. 'seq' → logprob: -17.125232696533203
    10. '	range' → logprob: -17.500232696533203

Token 594: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10022241622209549
    2. '(n' → logprob: -2.35022234916687
    3. '	n' → logprob: -11.72522258758545
    4. ' n' → logprob: -12.35022258758545
    5. '_n' → logprob: -13.22522258758545
    6. '(' → logprob: -14.10022258758545
    7. '   ' → logprob: -15.35022258758545
    8. ')n' → logprob: -16.225221633911133
    9. '
' → logprob: -16.475221633911133
    10. '[n' → logprob: -16.725221633911133

Token 595: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0027113191317766905
    2. '):' → logprob: -6.002711296081543
    3. '   ' → logprob: -9.377711296081543
    4. ':
' → logprob: -9.502711296081543
    5. '):
' → logprob: -10.002711296081543
    6. '():
' → logprob: -11.377711296081543
    7. ':' → logprob: -11.627711296081543
    8. ' ):
' → logprob: -12.377711296081543
    9. ')' → logprob: -12.752711296081543
    10. ' ' → logprob: -13.877711296081543

Token 596: ' seq' (ID: 26775)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2519477307796478
    2. '       ' → logprob: -1.5019477605819702
    3. 'seq' → logprob: -11.251947402954102
    4. ' seq' → logprob: -12.376947402954102
    5. ' ' → logprob: -15.001947402954102
    6. '	   ' → logprob: -15.126947402954102
    7. ' s' → logprob: -15.376947402954102
    8. 's' → logprob: -15.751947402954102
    9. '   ' → logprob: -15.751947402954102
    10. '           ' → logprob: -16.2519474029541

Token 597: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.194110756041482e-05
    2. '.' → logprob: -9.750061988830566
    3. ' .' → logprob: -13.625061988830566
    4. '.ap' → logprob: -14.125061988830566
    5. '+=' → logprob: -14.250061988830566
    6. '.app' → logprob: -15.125061988830566
    7. 'append' → logprob: -15.375061988830566
    8. ' +=' → logprob: -15.625061988830566
    9. '.=' → logprob: -15.625061988830566
    10. '=' → logprob: -16.37506103515625

Token 598: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0040799472481012344
    2. 'input' → logprob: -5.504079818725586
    3. '(sys' → logprob: -14.254079818725586
    4. ' input' → logprob: -15.004079818725586
    5. '(' → logprob: -15.129079818725586
    6. '(str' → logprob: -15.629079818725586
    7. '(
' → logprob: -17.004079818725586
    8. '=input' → logprob: -17.754079818725586
    9. '<input' → logprob: -18.629079818725586
    10. 'sys' → logprob: -19.129079818725586

Token 599: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5862958431243896
    2. '())' → logprob: -0.8362958431243896
    3. '()' → logprob: -4.586296081542969
    4. ' ())' → logprob: -10.086296081542969
    5. '())
' → logprob: -10.086296081542969
    6. '();)' → logprob: -11.711296081542969
    7. '()
' → logprob: -11.961296081542969
    8. ')' → logprob: -12.461296081542969
    9. '());' → logprob: -12.586296081542969
    10. '()))' → logprob: -12.586296081542969

Token 600: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019278520718216896
    2. 'foo' → logprob: -4.644278526306152
    3. '<|end|>' → logprob: -5.644278526306152
    4. '
' → logprob: -6.019278526306152
    5. '    
' → logprob: -6.519278526306152
    6. '```' → logprob: -7.144278526306152
    7. '  
' → logprob: -8.269278526306152
    8. ' foo' → logprob: -8.394278526306152
    9. ' ' → logprob: -8.394278526306152
    10. 'def' → logprob: -9.019278526306152

Token 601: ' x' (ID: 1215)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.6164548397064209
    2. ' foo' → logprob: -1.366454839706421
    3. ' f' → logprob: -2.116454839706421
    4. 'f' → logprob: -2.616454839706421
    5. '   ' → logprob: -4.616455078125
    6. 'fo' → logprob: -7.491455078125
    7. 'obj' → logprob: -8.241455078125
    8. '
' → logprob: -8.366455078125
    9. ' obj' → logprob: -8.866455078125
    10. ' ' → logprob: -8.866455078125

Token 602: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25420182943344116
    2. '=' → logprob: -1.504201889038086
    3. 'x' → logprob: -6.879201889038086
    4. 'seq' → logprob: -8.254201889038086
    5. '=f' → logprob: -9.004201889038086
    6. '`' → logprob: -9.129201889038086
    7. ',' → logprob: -9.129201889038086
    8. 'yz' → logprob: -9.504201889038086
    9. 'q' → logprob: -9.629201889038086
    10. ' ' → logprob: -9.879201889038086

Token 603: ' Foo' (ID: 69516)
  Prédit: 'Foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Foo' → logprob: -0.0009137284359894693
    2. ' Foo' → logprob: -7.000913619995117
    3. 'F' → logprob: -13.750913619995117
    4. ' ' → logprob: -14.625913619995117
    5. 'foo' → logprob: -14.750913619995117
    6. '   ' → logprob: -16.000913619995117
    7. 'Fo' → logprob: -17.000913619995117
    8. '  ' → logprob: -17.500913619995117
    9. '```' → logprob: -17.625913619995117
    10. '
' → logprob: -17.625913619995117

Token 604: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0794060006737709
    2. '(seq' → logprob: -2.5794060230255127
    3. 'arr' → logprob: -7.579405784606934
    4. 'seq' → logprob: -12.579405784606934
    5. '(
' → logprob: -14.704405784606934
    6. ' (' → logprob: -15.329405784606934
    7. '(' → logprob: -15.454405784606934
    8. '[arr' → logprob: -15.454405784606934
    9. '(foo' → logprob: -15.829405784606934
    10. '(len' → logprob: -16.32940673828125

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ',
' → logprob: -15.62500286102295
    4. ',se' → logprob: -17.250001907348633
    5. '(seq' → logprob: -17.375001907348633
    6. ',s' → logprob: -18.500001907348633
    7. ')' → logprob: -18.750001907348633
    8. 'seq' → logprob: -19.000001907348633
    9. '),' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.250001907348633

Token 606: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.0619683600962162
    2. ' seq' → logprob: -2.8119683265686035
    3. '(seq' → logprob: -14.311968803405762
    4. 'sequence' → logprob: -17.436967849731445
    5. ' ' → logprob: -17.811967849731445
    6. ' sequence' → logprob: -18.186967849731445
    7. '   ' → logprob: -18.186967849731445
    8. '.seq' → logprob: -18.686967849731445
    9. '_seq' → logprob: -19.561967849731445
    10. 'se' → logprob: -19.811967849731445

Token 607: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006791751366108656
    2. ')' → logprob: -5.006791591644287
    3. ')
' → logprob: -9.506792068481445
    4. '   ' → logprob: -13.381792068481445
    5. ' )
' → logprob: -14.881792068481445
    6. ' ' → logprob: -16.506792068481445
    7. ');' → logprob: -16.881792068481445
    8. ')

' → logprob: -18.006792068481445
    9. ')x' → logprob: -18.131792068481445
    10. ');
' → logprob: -18.381792068481445

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06998589634895325
    2. 'x' → logprob: -2.694985866546631
    3. ' x' → logprob: -10.319986343383789
    4. ' ' → logprob: -11.944986343383789
    5. '	x' → logprob: -12.694986343383789
    6. '  ' → logprob: -13.069986343383789
    7. '<|end|>' → logprob: -13.444986343383789
    8. '
' → logprob: -13.694986343383789
    9. '```' → logprob: -13.944986343383789
    10. '    
' → logprob: -14.319986343383789

Token 609: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0011003263061866164
    2. '   ' → logprob: -6.876100540161133
    3. ' x' → logprob: -9.626100540161133
    4. '	x' → logprob: -14.876100540161133
    5. 'foo' → logprob: -14.876100540161133
    6. '    
' → logprob: -15.251100540161133
    7. ' ' → logprob: -15.376100540161133
    8. '
' → logprob: -15.626100540161133
    9. '  ' → logprob: -15.751100540161133
    10. '```' → logprob: -16.251100540161133

Token 610: '.exec' (ID: 38155)
  Prédit: '.exec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exec' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -14.625001907348633
    3. '.exe' → logprob: -14.625001907348633
    4. ' .' → logprob: -15.125001907348633
    5. '.execute' → logprob: -15.250001907348633
    6. '.run' → logprob: -15.375001907348633
    7. 'exec' → logprob: -16.500001907348633
    8. '.eval' → logprob: -17.125001907348633
    9. '.execut' → logprob: -18.125001907348633
    10. '.Exec' → logprob: -18.625001907348633

Token 611: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2352385965641588e-05
    2. '()`' → logprob: -12.125012397766113
    3. '()
' → logprob: -12.375012397766113
    4. '())' → logprob: -13.875012397766113
    5. '()

' → logprob: -14.875012397766113
    6. '(' → logprob: -14.875012397766113
    7. '();' → logprob: -15.250012397766113
    8. '()]' → logprob: -15.500012397766113
    9. ' ()' → logprob: -16.000011444091797
    10. '()"' → logprob: -16.125011444091797

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001775618875399232
    2. 'x' → logprob: -7.001775741577148
    3. '<|end|>' → logprob: -7.376775741577148
    4. 'print' → logprob: -9.251775741577148
    5. 'if' → logprob: -10.001775741577148
    6. ' ' → logprob: -10.251775741577148
    7. ' x' → logprob: -11.126775741577148
    8. '
' → logprob: -11.751775741577148
    9. '```' → logprob: -12.251775741577148
    10. 'import' → logprob: -12.251775741577148

Token 613: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.047555647790431976
    2. 'if' → logprob: -3.297555685043335
    3. '   ' → logprob: -4.672555446624756
    4. 'print' → logprob: -10.047555923461914
    5. ' x' → logprob: -10.297555923461914
    6. ' if' → logprob: -10.547555923461914
    7. ' ' → logprob: -11.922555923461914
    8. '  ' → logprob: -12.922555923461914
    9. 'If' → logprob: -13.672555923461914
    10. '	x' → logprob: -13.672555923461914

Token 614: '.show' (ID: 8871)
  Prédit: '.show'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.show' → logprob: -3.5597102396423e-05
    2. '.' → logprob: -10.750035285949707
    3. 'show' → logprob: -11.625035285949707
    4. '.run' → logprob: -13.250035285949707
    5. '.print' → logprob: -13.750035285949707
    6. '.move' → logprob: -13.750035285949707
    7. '.display' → logprob: -15.250035285949707
    8. ' .' → logprob: -15.500035285949707
    9. '.out' → logprob: -16.000036239624023
    10. '.Show' → logprob: -16.000036239624023

Token 615: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001948271761648357
    2. '()
' → logprob: -6.251948356628418
    3. '()

' → logprob: -11.501948356628418
    4. '()\' → logprob: -12.251948356628418
    5. '();' → logprob: -13.751948356628418
    6. '(' → logprob: -14.376948356628418
    7. '<|end|>' → logprob: -14.501948356628418
    8. '()`' → logprob: -14.501948356628418
    9. '()<' → logprob: -14.751948356628418
    10. '()?' → logprob: -15.251948356628418

Token 616: 'RUN' (ID: 110530)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 615
Tokens correctement prédits (1ère position, stricte): 246
Tokens correctement prédits (1ère position, avec adaptation): 274
Tokens correctement prédits (top 10): 501
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 44.55%
Précision (top 10): 81.46%
================================================================================
