================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# petit script pr calculer la somme des angles, je crois?
n = int(input()) # on prend l'entrée ici

res = 180 * (n - 2 ) # calcule rapide, j'espère que c'est bon

# affiche le résultat, pas besoin d'autre chose
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' petit' (ID: 20577)
  → Token d'amorce (pas de prédiction)

Token 2: ' script' (ID: 11713)
  → Token d'amorce (pas de prédiction)

Token 3: ' pr' (ID: 550)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13053959608078003
    2. '\' → logprob: -2.880539655685425
    3. '#' → logprob: -3.130539655685425
    4. '```' → logprob: -4.630539417266846
    5. 'print' → logprob: -5.880539417266846
    6. ':' → logprob: -6.255539417266846
    7. ' 
' → logprob: -6.630539417266846
    8. '#!/' → logprob: -7.255539417266846
    9. ' ' → logprob: -7.380539417266846
    10. '
' → logprob: -7.505539417266846

Token 4: ' calcul' (ID: 7559)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2203873097896576
    2. 'és' → logprob: -2.5953872203826904
    3. 'e' → logprob: -3.3453872203826904
    4. '#' → logprob: -3.7203872203826904
    5. 'ès' → logprob: -4.0953874588012695
    6. 'o' → logprob: -4.3453874588012695
    7. 'int' → logprob: -5.2203874588012695
    8. 'es' → logprob: -5.3453874588012695
    9. 'ogram' → logprob: -5.5953874588012695
    10. 'og' → logprob: -6.2203874588012695

Token 5: 'er' (ID: 259)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5674504637718201
    2. ' ' → logprob: -1.0674505233764648
    3. '#' → logprob: -4.067450523376465
    4. 'u' → logprob: -4.192450523376465
    5. 'e' → logprob: -4.317450523376465
    6. 'a' → logprob: -4.442450523376465
    7. ' e' → logprob: -4.692450523376465
    8. '```' → logprob: -5.442450523376465
    9. ':' → logprob: -5.692450523376465
    10. ' _' → logprob: -5.942450523376465

Token 6: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5869928598403931
    2. '_' → logprob: -1.461992859840393
    3. ' de' → logprob: -1.836992859840393
    4. ' d' → logprob: -3.8369927406311035
    5. 'e' → logprob: -4.8369927406311035
    6. ' des' → logprob: -5.5869927406311035
    7. '```' → logprob: -6.0869927406311035
    8. '#' → logprob: -6.2119927406311035
    9. 'de' → logprob: -6.3369927406311035
    10. '_e' → logprob: -6.4619927406311035

Token 7: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04455539956688881
    2. '_' → logprob: -3.294555425643921
    3. 's' → logprob: -5.669555187225342
    4. '  ' → logprob: -7.919555187225342
    5. ' dens' → logprob: -7.919555187225342
    6. ' _' → logprob: -8.1695556640625
    7. 'm' → logprob: -8.4195556640625
    8. 'd' → logprob: -8.6695556640625
    9. '   ' → logprob: -8.7945556640625
    10. ' ' → logprob: -8.9195556640625

Token 8: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9176605939865112
    2. ' ' → logprob: -1.0426605939865112
    3. ' =' → logprob: -2.792660713195801
    4. '=' → logprob: -2.917660713195801
    5. 's' → logprob: -3.167660713195801
    6. '\' → logprob: -3.292660713195801
    7. 'd' → logprob: -4.042660713195801
    8. '#' → logprob: -4.167660713195801
    9. 'a' → logprob: -5.292660713195801
    10. ':' → logprob: -5.667660713195801

Token 9: ' angles' (ID: 43448)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.174973264336586
    2. '_' → logprob: -2.674973249435425
    3. 'n' → logprob: -3.549973249435425
    4. ' ' → logprob: -4.299973487854004
    5. ' nombres' → logprob: -4.924973487854004
    6. ' \' → logprob: -5.174973487854004
    7. 's' → logprob: -5.174973487854004
    8. 'élé' → logprob: -5.799973487854004
    9. 'esp' → logprob: -5.924973487854004
    10. '  ' → logprob: -6.049973487854004

Token 10: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2642841041088104
    2. 's' → logprob: -2.264284133911133
    3. ':' → logprob: -3.139284133911133
    4. ' :' → logprob: -3.764284133911133
    5. '_' → logprob: -4.014284133911133
    6. '\' → logprob: -4.639284133911133
    7. ' =' → logprob: -5.264284133911133
    8. 'a' → logprob: -5.514284133911133
    9. 'd' → logprob: -5.514284133911133
    10. '#' → logprob: -5.764284133911133

Token 11: ' je' (ID: 1264)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0040279626846313
    2. ' ' → logprob: -1.0040279626846313
    3. ' d' → logprob: -1.6290279626846313
    4. ''' → logprob: -4.379027843475342
    5. ' =' → logprob: -5.129027843475342
    6. '.' → logprob: -5.254027843475342
    7. 'd' → logprob: -5.254027843475342
    8. ' :' → logprob: -5.254027843475342
    9. ' s' → logprob: -5.379027843475342
    10. '```' → logprob: -5.504027843475342

Token 12: ' crois' (ID: 65485)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014597452245652676
    2. '_' → logprob: -4.639597415924072
    3. 's' → logprob: -6.639597415924072
    4. 'n' → logprob: -7.264597415924072
    5. ' =' → logprob: -7.264597415924072
    6. ''' → logprob: -7.889597415924072
    7. 'u' → logprob: -8.01459789276123
    8. ' n' → logprob: -8.26459789276123
    9. '=' → logprob: -8.51459789276123
    10. '  ' → logprob: -9.26459789276123

Token 13: '?
' (ID: 3901)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.272040605545044
    2. ' ' → logprob: -1.272040605545044
    3. 's' → logprob: -2.522040605545044
    4. ' :' → logprob: -2.522040605545044
    5. '#' → logprob: -2.647040605545044
    6. '```' → logprob: -3.147040605545044
    7. '.' → logprob: -3.522040605545044
    8. '\' → logprob: -3.647040605545044
    9. '_' → logprob: -3.897040605545044
    10. '=' → logprob: -4.022040367126465

Token 14: 'n' (ID: 77)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8076027631759644
    2. ':' → logprob: -1.1826027631759644
    3. ' :' → logprob: -2.057602882385254
    4. ' ' → logprob: -3.307602882385254
    5. '\' → logprob: -3.932602882385254
    6. '.' → logprob: -4.432602882385254
    7. '#' → logprob: -4.557602882385254
    8. '`' → logprob: -4.807602882385254
    9. ' ```' → logprob: -4.807602882385254
    10. 's' → logprob: -5.182602882385254

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6019870638847351
    2. ' =' → logprob: -1.2269871234893799
    3. 'b' → logprob: -2.35198712348938
    4. 'o' → logprob: -3.97698712348938
    5. 's' → logprob: -4.351986885070801
    6. 'e' → logprob: -4.726986885070801
    7. 'm' → logprob: -4.976986885070801
    8. 'a' → logprob: -5.476986885070801
    9. 'u' → logprob: -5.726986885070801
    10. '_' → logprob: -5.976986885070801

Token 16: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11134853959083557
    2. '0' → logprob: -2.3613486289978027
    3. '45' → logprob: -5.861348628997803
    4. '360' → logprob: -5.986348628997803
    5. '90' → logprob: -6.486348628997803
    6. '180' → logprob: -6.486348628997803
    7. '10' → logprob: -6.611348628997803
    8. '3' → logprob: -6.986348628997803
    9. '30' → logprob: -9.861348152160645
    10. ' int' → logprob: -9.861348152160645

Token 17: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025895543512888253
    2. '('' → logprob: -9.125259399414062
    3. ' (' → logprob: -9.375259399414062
    4. '(n' → logprob: -11.625259399414062
    5. ''' → logprob: -11.750259399414062
    6. '```' → logprob: -11.875259399414062
    7. '()' → logprob: -12.250259399414062
    8. '("' → logprob: -12.250259399414062
    9. ' ' → logprob: -12.375259399414062
    10. '[' → logprob: -12.500259399414062

Token 18: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07705936580896378
    2. '('' → logprob: -2.702059268951416
    3. ')' → logprob: -5.577059268951416
    4. '("("' → logprob: -6.577059268951416
    5. '()' → logprob: -6.702059268951416
    6. ''' → logprob: -8.577059745788574
    7. '("' → logprob: -9.077059745788574
    8. '(
' → logprob: -9.202059745788574
    9. '("")' → logprob: -9.577059745788574
    10. '')' → logprob: -9.952059745788574

Token 19: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016909828409552574
    2. '<|end|>' → logprob: -4.891909599304199
    3. ')' → logprob: -5.766909599304199
    4. ' )' → logprob: -6.141909599304199
    5. 's' → logprob: -6.266909599304199
    6. 'n' → logprob: -7.516909599304199
    7. ' 
' → logprob: -7.891909599304199
    8. 'r' → logprob: -9.1419095993042
    9. '#' → logprob: -9.2669095993042
    10. 'a' → logprob: -9.2669095993042

Token 20: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001425237045623362
    2. ' )' → logprob: -7.626425266265869
    3. ' n' → logprob: -8.626424789428711
    4. '<|end|>' → logprob: -8.626424789428711
    5. '  ' → logprob: -8.751424789428711
    6. ' "' → logprob: -9.376424789428711
    7. ')' → logprob: -10.126424789428711
    8. 's' → logprob: -10.251424789428711
    9. ' '' → logprob: -10.376424789428711
    10. 'n' → logprob: -10.501424789428711

Token 21: ' prend' (ID: 37463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1163422167301178
    2. '<|end|>' → logprob: -2.991342306137085
    3. ' a' → logprob: -4.866342067718506
    4. 's' → logprob: -5.428842067718506
    5. ' veut' → logprob: -5.678842067718506
    6. '<|end|>' → logprob: -5.741342067718506
    7. 'e' → logprob: -5.928842067718506
    8. ' souhaite' → logprob: -6.178842067718506
    9. ' .' → logprob: -6.303842067718506
    10. ' récup' → logprob: -6.303842067718506

Token 22: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0034841354936361313
    2. '  ' → logprob: -7.25348424911499
    3. ' un' → logprob: -7.25348424911499
    4. ' la' → logprob: -7.25348424911499
    5. ' l' → logprob: -7.62848424911499
    6. 'l' → logprob: -8.503483772277832
    7. ' une' → logprob: -9.128483772277832
    8. ' les' → logprob: -9.503483772277832
    9. ' ' → logprob: -9.503483772277832
    10. 'le' → logprob: -9.878483772277832

Token 23: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1712114810943604
    2. ''' → logprob: -1.2962114810943604
    3. 'a' → logprob: -1.2962114810943604
    4. 'angle' → logprob: -2.7962114810943604
    5. 'es' → logprob: -3.2962114810943604
    6. ''espace' → logprob: -4.546211242675781
    7. ''entrée' → logprob: -4.921211242675781
    8. 'nombre' → logprob: -5.671211242675781
    9. 's' → logprob: -5.796211242675781
    10. ''ensemble' → logprob: -5.921211242675781

Token 24: ' ici' (ID: 27994)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006072183605283499
    2. ')' → logprob: -6.381072044372559
    3. ' )' → logprob: -6.756072044372559
    4. 'n' → logprob: -6.756072044372559
    5. 's' → logprob: -7.006072044372559
    6. '<|end|>' → logprob: -7.756072044372559
    7. '#' → logprob: -9.506072044372559
    8. '  ' → logprob: -9.506072044372559
    9. ' s' → logprob: -10.131072044372559
    10. ' n' → logprob: -10.131072044372559

Token 25: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12305262684822083
    2. ')' → logprob: -3.1230525970458984
    3. 'n' → logprob: -3.4980525970458984
    4. '<|end|>' → logprob: -4.623052597045898
    5. ' )' → logprob: -4.748052597045898
    6. ' 
' → logprob: -5.123052597045898
    7. 's' → logprob: -5.248052597045898
    8. ' n' → logprob: -6.373052597045898
    9. '#' → logprob: -6.623052597045898
    10. '+' → logprob: -6.748052597045898

Token 26: 'res' (ID: 430)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5562759637832642
    2. ' ' → logprob: -1.1812759637832642
    3. 'angle' → logprob: -2.9312758445739746
    4. 'angles' → logprob: -3.3062758445739746
    5. ' angles' → logprob: -4.556275844573975
    6. ' s' → logprob: -5.681275844573975
    7. ' angle' → logprob: -6.181275844573975
    8. ')' → logprob: -6.431275844573975
    9. ' )' → logprob: -6.556275844573975
    10. '_angles' → logprob: -6.556275844573975

Token 27: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.8192847967147827
    2. 'ultat' → logprob: -0.8192847967147827
    3. 'u' → logprob: -2.9442849159240723
    4. ' =' → logprob: -3.1942849159240723
    5. ' ' → logprob: -4.069284915924072
    6. 'ul' → logprob: -5.819284915924072
    7. 'ults' → logprob: -6.069284915924072
    8. '=' → logprob: -7.569284915924072
    9. ' +=' → logprob: -7.944284915924072
    10. 'ulte' → logprob: -8.069284439086914

Token 28: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.6213460564613342
    2. '0' → logprob: -1.3713459968566895
    3. 'n' → logprob: -2.3713459968566895
    4. '(n' → logprob: -2.7463459968566895
    5. ' n' → logprob: -3.7463459968566895
    6. ' (' → logprob: -4.1213459968566895
    7. ' ' → logprob: -4.7463459968566895
    8. '360' → logprob: -6.4963459968566895
    9. 'sum' → logprob: -7.7463459968566895
    10. '(' → logprob: -8.246346473693848

Token 29: '180' (ID: 7521)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6290718913078308
    2. 'n' → logprob: -1.2540719509124756
    3. '180' → logprob: -1.8790719509124756
    4. '0' → logprob: -3.7540719509124756
    5. 'sum' → logprob: -6.2540717124938965
    6. '3' → logprob: -7.0040717124938965
    7. ' (' → logprob: -7.0040717124938965
    8. '(' → logprob: -7.3790717124938965
    9. '((' → logprob: -8.254072189331055
    10. '2' → logprob: -8.754072189331055

Token 30: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47908133268356323
    2. '*' → logprob: -0.9790813326835632
    3. '*(' → logprob: -5.604081153869629
    4. '*n' → logprob: -6.729081153869629
    5. ' ' → logprob: -9.979081153869629
    6. ')' → logprob: -10.229081153869629
    7. '(n' → logprob: -10.979081153869629
    8. '0' → logprob: -12.979081153869629
    9. ' n' → logprob: -13.354081153869629
    10. ' *(' → logprob: -13.354081153869629

Token 31: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.047826483845710754
    2. '(' → logprob: -3.4228265285491943
    3. ' (' → logprob: -4.297826290130615
    4. 'n' → logprob: -7.672826290130615
    5. ' n' → logprob: -11.297826766967773
    6. ' ' → logprob: -13.297826766967773
    7. '1' → logprob: -14.672826766967773
    8. '2' → logprob: -14.797826766967773
    9. 's' → logprob: -15.047826766967773
    10. '3' → logprob: -15.172826766967773

Token 32: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00015860427811276168
    2. ' n' → logprob: -8.750158309936523
    3. '(n' → logprob: -16.875158309936523
    4. ' ' → logprob: -17.125158309936523
    5. ')n' → logprob: -17.625158309936523
    6. ')' → logprob: -19.125158309936523
    7. '1' → logprob: -19.500158309936523
    8. '2' → logprob: -19.500158309936523
    9. '(' → logprob: -20.000158309936523
    10. '	n' → logprob: -20.125158309936523

Token 33: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04868444800376892
    2. '-' → logprob: -3.0486843585968018
    3. ' ' → logprob: -9.423684120178223
    4. ')' → logprob: -11.173684120178223
    5. ' )' → logprob: -13.423684120178223
    6. ' ' → logprob: -15.048684120178223
    7. 's' → logprob: -15.673684120178223
    8. '  ' → logprob: -16.42368507385254
    9. '<|end|>' → logprob: -16.79868507385254
    10. '1' → logprob: -17.54868507385254

Token 34: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. ')' → logprob: -14.250554084777832
    4. '  ' → logprob: -16.375553131103516
    5. '3' → logprob: -17.500553131103516
    6. ' ' → logprob: -17.750553131103516
    7. '   ' → logprob: -17.750553131103516
    8. '```' → logprob: -18.125553131103516
    9. '	' → logprob: -18.875553131103516
    10. '1' → logprob: -19.000553131103516

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.660315895918757e-05
    2. ' ' → logprob: -9.500076293945312
    3. ')' → logprob: -13.625076293945312
    4. '1' → logprob: -16.125076293945312
    5. '  ' → logprob: -16.375076293945312
    6. '3' → logprob: -16.625076293945312
    7. '   ' → logprob: -16.625076293945312
    8. '```' → logprob: -16.750076293945312
    9. '	' → logprob: -17.875076293945312
    10. ' ' → logprob: -18.437576293945312

Token 36: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038419815246015787
    2. ' )' → logprob: -7.875384330749512
    3. '))' → logprob: -12.875384330749512
    4. ')
' → logprob: -14.500384330749512
    5. ')**' → logprob: -15.500384330749512
    6. ')`' → logprob: -16.000383377075195
    7. '}' → logprob: -16.250383377075195
    8. ')))' → logprob: -16.250383377075195
    9. ')#' → logprob: -16.500383377075195
    10. ' ' → logprob: -16.500383377075195

Token 37: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8104016780853271
    2. '<|end|>' → logprob: -0.9354016780853271
    3. 'print' → logprob: -2.435401678085327
    4. ' ' → logprob: -2.810401678085327
    5. '#' → logprob: -5.060401916503906
    6. ')' → logprob: -5.935401916503906
    7. ' 
' → logprob: -5.935401916503906
    8. '<|end|>' → logprob: -7.060401916503906
    9. '+' → logprob: -7.310401916503906
    10. '  
' → logprob: -7.560401916503906

Token 38: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008208861574530602
    2. ')' → logprob: -5.633208751678467
    3. '<|end|>' → logprob: -5.633208751678467
    4. ' )' → logprob: -8.133209228515625
    5. 'print' → logprob: -8.508209228515625
    6. '#' → logprob: -9.383209228515625
    7. '<|end|>' → logprob: -9.383209228515625
    8. 'n' → logprob: -9.508209228515625
    9. ' n' → logprob: -9.758209228515625
    10. '  ' → logprob: -10.133209228515625

Token 39: 'ule' (ID: 1601)
  Prédit: 'uler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.3276157081127167
    2. 'ul' → logprob: -2.202615737915039
    3. 'ulé' → logprob: -2.827615737915039
    4. 'ule' → logprob: -3.327615737915039
    5. ')' → logprob: -3.952615737915039
    6. 'ulate' → logprob: -4.327615737915039
    7. 'er' → logprob: -4.702615737915039
    8. 'ulator' → logprob: -4.827615737915039
    9. 'ulation' → logprob: -5.077615737915039
    10. ' ul' → logprob: -5.577615737915039

Token 40: ' rapide' (ID: 44887)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6685927510261536
    2. '<|end|>' → logprob: -1.1685926914215088
    3. ')' → logprob: -2.043592691421509
    4. 's' → logprob: -4.043592929840088
    5. '<|end|>' → logprob: -4.293592929840088
    6. ' )' → logprob: -5.418592929840088
    7. '+' → logprob: -6.293592929840088
    8. '#' → logprob: -6.293592929840088
    9. '*' → logprob: -6.668592929840088
    10. '
' → logprob: -6.793592929840088

Token 41: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10260161757469177
    2. 'print' → logprob: -2.7276015281677246
    3. '<|end|>' → logprob: -4.227601528167725
    4. ' 
' → logprob: -5.352601528167725
    5. ')' → logprob: -5.352601528167725
    6. ' print' → logprob: -6.227601528167725
    7. '\n' → logprob: -6.727601528167725
    8. '  
' → logprob: -6.977601528167725
    9. ' n' → logprob: -7.227601528167725
    10. 'n' → logprob: -7.602601528167725

Token 43: ''espère' (ID: 116557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03943978622555733
    2. 'uste' → logprob: -3.4144396781921387
    3. 'ust' → logprob: -5.789439678192139
    4. ''aj' → logprob: -6.789439678192139
    5. ''' → logprob: -7.914439678192139
    6. ''aime' → logprob: -8.164440155029297
    7. ''espère' → logprob: -9.039440155029297
    8. ''ai' → logprob: -9.164440155029297
    9. '')' → logprob: -9.539440155029297
    10. 'ai' → logprob: -9.539440155029297

Token 44: ' que' (ID: 661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5273302793502808
    2. ' ' → logprob: -1.5273302793502808
    3. ' n' → logprob: -2.2773303985595703
    4. ' )' → logprob: -3.1523303985595703
    5. 'n' → logprob: -3.2773303985595703
    6. ' la' → logprob: -6.02733039855957
    7. ' ' → logprob: -6.40233039855957
    8. ')n' → logprob: -6.40233039855957
    9. '(n' → logprob: -7.52733039855957
    10. ' res' → logprob: -7.52733039855957

Token 46: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3142622709274292
    2. 'est' → logprob: -1.9392622709274292
    3. ''' → logprob: -2.8142623901367188
    4. 'a' → logprob: -3.5642623901367188
    5. 'e' → logprob: -3.5642623901367188
    6. ''a' → logprob: -5.689262390136719
    7. ' '' → logprob: -6.439262390136719
    8. ''e' → logprob: -6.939262390136719
    9. ''#' → logprob: -7.064262390136719
    10. ' ' → logprob: -7.814262390136719

Token 47: ' bon' (ID: 4846)
  Prédit: ' correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correct' → logprob: -0.30260589718818665
    2. 'correct' → logprob: -1.9276058673858643
    3. 'bon' → logprob: -3.1776058673858643
    4. ' ' → logprob: -3.9276058673858643
    5. ' bon' → logprob: -4.177606105804443
    6. 'just' → logprob: -4.177606105804443
    7. ' juste' → logprob: -4.302606105804443
    8. ' just' → logprob: -5.677606105804443
    9. ' exact' → logprob: -6.552606105804443
    10. 'exact' → logprob: -7.052606105804443

Token 48: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09751906245946884
    2. '<|end|>' → logprob: -2.5975191593170166
    3. '
' → logprob: -4.8475189208984375
    4. '\n' → logprob: -5.4725189208984375
    5. '#' → logprob: -6.2225189208984375
    6. ')' → logprob: -6.7225189208984375
    7. ' print' → logprob: -6.8475189208984375
    8. '\' → logprob: -7.0975189208984375
    9. ' ' → logprob: -7.7225189208984375
    10. '#print' → logprob: -8.347518920898438

Token 50: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07080218940973282
    2. ' print' → logprob: -2.6958022117614746
    3. ' ' → logprob: -7.445802211761475
    4. '<|end|>' → logprob: -8.445801734924316
    5. '.print' → logprob: -10.945801734924316
    6. '#print' → logprob: -11.320801734924316
    7. '\n' → logprob: -12.195801734924316
    8. 'prin' → logprob: -12.445801734924316
    9. '```' → logprob: -12.570801734924316
    10. '<|end|>' → logprob: -12.695801734924316

Token 51: ' le' (ID: 505)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.4871613383293152
    2. '(' → logprob: -1.11216139793396
    3. 'res' → logprob: -3.36216139793396
    4. 'print' → logprob: -3.86216139793396
    5. '(print' → logprob: -8.362161636352539
    6. ' la' → logprob: -8.362161636352539
    7. ' (' → logprob: -8.862161636352539
    8. 'la' → logprob: -9.112161636352539
    9. 'r' → logprob: -9.862161636352539
    10. '(result' → logprob: -9.987161636352539

Token 52: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.03878761827945709
    2. ' resultat' → logprob: -4.288787841796875
    3. 'result' → logprob: -4.538787841796875
    4. 'rés' → logprob: -5.163787841796875
    5. 'r' → logprob: -5.663787841796875
    6. ' result' → logprob: -6.538787841796875
    7. 'res' → logprob: -6.788787841796875
    8. 's' → logprob: -7.163787841796875
    9. ' total' → logprob: -8.163787841796875
    10. ' résultats' → logprob: -8.663787841796875

Token 53: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006559623870998621
    2. '
' → logprob: -7.7506561279296875
    3. ' print' → logprob: -8.500656127929688
    4. '\n' → logprob: -11.750656127929688
    5. ' 
' → logprob: -11.875656127929688
    6. '
' → logprob: -12.375656127929688
    7. '```' → logprob: -13.125656127929688
    8. '  
' → logprob: -14.750656127929688
    9. '\' → logprob: -15.750656127929688
    10. '' → logprob: -16.875656127929688

Token 54: ' pas' (ID: 2173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023245595395565033
    2. ' print' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.148244857788086
    4. '```' → logprob: -19.148244857788086
    5. ' ' → logprob: -19.523244857788086
    6. '.print' → logprob: -20.148244857788086
    7. 'prin' → logprob: -20.273244857788086
    8. '#print' → logprob: -20.273244857788086
    9. '(print' → logprob: -20.398244857788086
    10. 'pr' → logprob: -20.523244857788086

Token 55: ' besoin' (ID: 27703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1341099739074707
    2. 'print' → logprob: -3.6341099739074707
    3. 's' → logprob: -4.134109973907471
    4. 'la' → logprob: -4.259109973907471
    5. ' la' → logprob: -4.509109973907471
    6. '  ' → logprob: -4.759109973907471
    7. 'tout' → logprob: -4.884109973907471
    8. ')' → logprob: -5.384109973907471
    9. '(' → logprob: -5.759109973907471
    10. 'le' → logprob: -5.884109973907471

Token 56: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0029016395565122366
    2. ' print' → logprob: -5.877901554107666
    3. '(print' → logprob: -9.752902030944824
    4. '#print' → logprob: -10.627902030944824
    5. ' ' → logprob: -12.252902030944824
    6. '```' → logprob: -13.252902030944824
    7. '<|end|>' → logprob: -13.377902030944824
    8. ')' → logprob: -13.877902030944824
    9. '.print' → logprob: -14.002902030944824
    10. ',' → logprob: -14.127902030944824

Token 57: ''autre' (ID: 52145)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10284452140331268
    2. ''' → logprob: -2.977844476699829
    3. 'u' → logprob: -3.727844476699829
    4. 'es' → logprob: -5.852844715118408
    5. ''aff' → logprob: -6.102844715118408
    6. 'é' → logprob: -6.352844715118408
    7. '')' → logprob: -6.352844715118408
    8. 'a' → logprob: -6.602844715118408
    9. ''espace' → logprob: -6.602844715118408
    10. ''é' → logprob: -6.727844715118408

Token 58: ' chose' (ID: 15505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005533903022296727
    2. ' print' → logprob: -7.500553607940674
    3. '(print' → logprob: -15.750553131103516
    4. '.print' → logprob: -16.375553131103516
    5. '```' → logprob: -16.375553131103516
    6. '
' → logprob: -16.750553131103516
    7. '#print' → logprob: -17.125553131103516
    8. '\n' → logprob: -17.750553131103516
    9. 'prin' → logprob: -18.125553131103516
    10. '
' → logprob: -18.250553131103516

Token 59: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001708732801489532
    2. '
' → logprob: -6.501708507537842
    3. '\n' → logprob: -9.001708984375
    4. ' print' → logprob: -10.376708984375
    5. '
' → logprob: -10.501708984375
    6. '```' → logprob: -11.001708984375
    7. '\' → logprob: -12.376708984375
    8. '' → logprob: -13.251708984375
    9. ' 
' → logprob: -14.376708984375
    10. '``' → logprob: -15.376708984375

Token 60: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.145118848304264e-05
    2. '
' → logprob: -10.125051498413086
    3. '```' → logprob: -11.875051498413086
    4. ' print' → logprob: -12.875051498413086
    5. '
' → logprob: -13.875051498413086
    6. '\n' → logprob: -14.375051498413086
    7. '\' → logprob: -16.000051498413086
    8. '``' → logprob: -17.125051498413086
    9. '' → logprob: -17.625051498413086
    10. '.print' → logprob: -18.250051498413086

Token 61: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001339050941169262
    2. '(res' → logprob: -6.626338958740234
    3. ' (' → logprob: -11.626338958740234
    4. '(sum' → logprob: -14.001338958740234
    5. '(

' → logprob: -14.501338958740234
    6. '("("' → logprob: -14.501338958740234
    7. '(
' → logprob: -14.626338958740234
    8. '((' → logprob: -14.876338958740234
    9. '()' → logprob: -15.001338958740234
    10. '(s' → logprob: -15.376338958740234

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. '))' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.125008583068848
    4. ')`' → logprob: -17.375009536743164
    5. '`)' → logprob: -17.750009536743164
    6. ')
' → logprob: -18.375009536743164
    7. '')' → logprob: -18.875009536743164
    8. ')))' → logprob: -19.000009536743164
    9. '）' → logprob: -19.250009536743164
    10. ')}' → logprob: -19.625009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 13.33%
Précision adaptée (1ère position): 13.33%
Précision (top 10): 40.00%
================================================================================
