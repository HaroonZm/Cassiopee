================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = [int(x) for x in input().split()]
t = input()
left = 0
r = b
pos = 0
def advance(idx):
    while idx < a and t[idx] == '0': idx+=1
    return idx
for _ in range(a):
    if t[pos] == '1':
        pos += 1
        continue
    if not r: break
    r -= 1
    pos = advance(pos)
res = pos
start = 0
from itertools import count
while pos < a:
    l = pos
    while l < a and t[l] == '0': l+=1
    while l < a and t[l] == '1': l+=1
    while start < a and t[start] == '1': start+=1
    for z in count(start):
        if z>=a or t[z]!='0':
            start = z
            break
    res = max(res, l - start)
    pos = l
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04729120805859566
    2. '+' → logprob: -3.2972912788391113
    3. ' =' → logprob: -4.797291278839111
    4. ',' → logprob: -7.797291278839111
    5. ' +' → logprob: -8.922290802001953
    6. '+=' → logprob: -9.047290802001953
    7. ' ' → logprob: -9.547290802001953
    8. '.' → logprob: -10.547290802001953
    9. 'a' → logprob: -10.672290802001953
    10. '*' → logprob: -10.672290802001953

Token 4: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12097881734371185
    2. '0' → logprob: -2.870978832244873
    3. '1' → logprob: -2.995978832244873
    4. '10' → logprob: -4.995978832244873
    5. '5' → logprob: -8.870978355407715
    6. '42' → logprob: -9.620978355407715
    7. 'input' → logprob: -9.995978355407715
    8. '[' → logprob: -10.120978355407715
    9. 'a' → logprob: -10.370978355407715
    10. ' [' → logprob: -10.495978355407715

Token 5: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08607739210128784
    2. ']' → logprob: -2.5860774517059326
    3. '0' → logprob: -4.9610772132873535
    4. ']int' → logprob: -10.461077690124512
    5. '10' → logprob: -10.586077690124512
    6. '2' → logprob: -10.961077690124512
    7. '42' → logprob: -10.961077690124512
    8. 'a' → logprob: -11.461077690124512
    9. '3' → logprob: -11.461077690124512
    10. '[]' → logprob: -11.711077690124512

Token 6: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47552138566970825
    2. '(' → logprob: -1.2255213260650635
    3. ']' → logprob: -2.8505213260650635
    4. '(i' → logprob: -4.100521564483643
    5. '(s' → logprob: -5.475521564483643
    6. '(item' → logprob: -5.850521564483643
    7. '(token' → logprob: -6.850521564483643
    8. '(input' → logprob: -7.100521564483643
    9. '()]' → logprob: -7.725521564483643
    10. '(value' → logprob: -8.600521087646484

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12355656176805496
    2. ')]' → logprob: -2.248556613922119
    3. '(x' → logprob: -5.373556613922119
    4. ')])' → logprob: -5.998556613922119
    5. '(token' → logprob: -6.498556613922119
    6. ']' → logprob: -7.748556613922119
    7. '),' → logprob: -8.123556137084961
    8. '(s' → logprob: -8.373556137084961
    9. '(' → logprob: -8.373556137084961
    10. ')],' → logprob: -8.623556137084961

Token 8: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37602177262306213
    2. ' for' → logprob: -1.2510217428207397
    3. '(x' → logprob: -3.7510218620300293
    4. ')' → logprob: -6.626021862030029
    5. ']' → logprob: -6.751021862030029
    6. '(' → logprob: -7.126021862030029
    7. '(i' → logprob: -9.876021385192871
    8. 'x' → logprob: -9.876021385192871
    9. '(s' → logprob: -9.876021385192871
    10. '(a' → logprob: -10.251021385192871

Token 9: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20452730357646942
    2. 'input' → logprob: -1.7045272588729858
    3. ' range' → logprob: -6.579527378082275
    4. 'range' → logprob: -6.954527378082275
    5. '(input' → logprob: -7.329527378082275
    6. ' ' → logprob: -10.204526901245117
    7. ' user' → logprob: -11.204526901245117
    8. ' a' → logprob: -11.704526901245117
    9. '(' → logprob: -11.704526901245117
    10. 'user' → logprob: -12.329526901245117

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5384796857833862
    2. '(input' → logprob: -1.5384796857833862
    3. ' input' → logprob: -2.163479804992676
    4. 'input' → logprob: -2.913479804992676
    5. 'in' → logprob: -3.663479804992676
    6. '<|end|>' → logprob: -6.163479804992676
    7. '=input' → logprob: -6.288479804992676
    8. ' ' → logprob: -6.913479804992676
    9. '(' → logprob: -7.038479804992676
    10. '<|end|>' → logprob: -9.038479804992676

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5231524109840393
    2. 'input' → logprob: -0.8981524109840393
    3. '(input' → logprob: -10.773152351379395
    4. 'range' → logprob: -13.273152351379395
    5. ' range' → logprob: -13.523152351379395
    6. ' ' → logprob: -13.523152351379395
    7. '=input' → logprob: -13.648152351379395
    8. '<input' → logprob: -14.523152351379395
    9. '```' → logprob: -14.898152351379395
    10. '[input' → logprob: -15.148152351379395

Token 12: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.1181558296084404
    2. '()' → logprob: -2.2431557178497314
    3. '().' → logprob: -5.7431559562683105
    4. '(' → logprob: -6.7431559562683105
    5. '())' → logprob: -7.9931559562683105
    6. '()][' → logprob: -8.118155479431152
    7. '()].' → logprob: -9.368155479431152
    8. ']()' → logprob: -9.493155479431152
    9. ']' → logprob: -10.368155479431152
    10. '()],' → logprob: -10.743155479431152

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00022773505770601332
    2. 'strip' → logprob: -8.500227928161621
    3. 'rstrip' → logprob: -10.750227928161621
    4. ' split' → logprob: -13.000227928161621
    5. 'spl' → logprob: -15.125227928161621
    6. '(split' → logprob: -15.625227928161621
    7. 'replace' → logprob: -17.375226974487305
    8. 'read' → logprob: -18.125226974487305
    9. ')' → logprob: -18.250226974487305
    10. '```' → logprob: -19.250226974487305

Token 14: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001102587440982461
    2. '()' → logprob: -7.001102447509766
    3. '(' → logprob: -9.626102447509766
    4. '())' → logprob: -9.751102447509766
    5. ']' → logprob: -10.126102447509766
    6. '()][' → logprob: -11.751102447509766
    7. ']()' → logprob: -12.251102447509766
    8. ')]' → logprob: -12.251102447509766
    9. '()],' → logprob: -12.501102447509766
    10. '`]' → logprob: -13.751102447509766

Token 15: 't' (ID: 83)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14364862442016602
    2. 'c' → logprob: -3.143648624420166
    3. 'if' → logprob: -3.268648624420166
    4. '*' → logprob: -3.768648624420166
    5. '#' → logprob: -4.268648624420166
    6. 'i' → logprob: -5.268648624420166
    7. '+
' → logprob: -6.018648624420166
    8. ',' → logprob: -6.643648624420166
    9. '=' → logprob: -6.643648624420166
    10. '>' → logprob: -6.893648624420166

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.839751124382019
    2. ' =' → logprob: -1.089751124382019
    3. 'r' → logprob: -2.9647512435913086
    4. 'ime' → logprob: -3.2147512435913086
    5. 'imes' → logprob: -3.3397512435913086
    6. 'o' → logprob: -3.7147512435913086
    7. '=int' → logprob: -4.339751243591309
    8. 'ry' → logprob: -4.714751243591309
    9. 'ype' → logprob: -5.214751243591309
    10. ',' → logprob: -5.339751243591309

Token 17: ' input' (ID: 3422)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3505302965641022
    2. 'int' → logprob: -1.7255302667617798
    3. ' int' → logprob: -2.9755303859710693
    4. ' a' → logprob: -2.9755303859710693
    5. 'min' → logprob: -5.35053014755249
    6. ' min' → logprob: -6.10053014755249
    7. '0' → logprob: -6.10053014755249
    8. 'b' → logprob: -6.35053014755249
    9. ' ' → logprob: -6.85053014755249
    10. 'max' → logprob: -7.22553014755249

Token 18: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22925980389118195
    2. '()' → logprob: -1.6042598485946655
    3. '"' → logprob: -6.729259967803955
    4. ''' → logprob: -7.229259967803955
    5. '```' → logprob: -7.979259967803955
    6. '('' → logprob: -8.604259490966797
    7. '`' → logprob: -8.729259490966797
    8. '().' → logprob: -8.854259490966797
    9. '("("' → logprob: -9.104259490966797
    10. '`()' → logprob: -9.229259490966797

Token 19: 'left' (ID: 4530)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1295757293701172
    2. '.' → logprob: -1.5045757293701172
    3. ' if' → logprob: -1.5045757293701172
    4. 'i' → logprob: -2.129575729370117
    5. '[' → logprob: -3.504575729370117
    6. ' ' → logprob: -4.004575729370117
    7. ':' → logprob: -4.379575729370117
    8. '=' → logprob: -4.629575729370117
    9. '\n' → logprob: -4.879575729370117
    10. '+' → logprob: -5.254575729370117

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5263181328773499
    2. ' =' → logprob: -1.651318073272705
    3. ',' → logprob: -2.651318073272705
    4. '=' → logprob: -3.276318073272705
    5. 'over' → logprob: -3.651318073272705
    6. ')' → logprob: -3.776318073272705
    7. '_pointer' → logprob: -4.901318073272705
    8. '_side' → logprob: -5.151318073272705
    9. '_margin' → logprob: -5.401318073272705
    10. '_space' → logprob: -5.651318073272705

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015101304277777672
    2. '[]' → logprob: -5.140101432800293
    3. 'a' → logprob: -6.015101432800293
    4. ' ' → logprob: -6.390101432800293
    5. 'b' → logprob: -6.765101432800293
    6. 'len' → logprob: -6.890101432800293
    7. 'False' → logprob: -7.265101432800293
    8. '[' → logprob: -7.765101432800293
    9. 't' → logprob: -7.890101432800293
    10. '-' → logprob: -8.140101432800293

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07848881930112839
    2. 'a' → logprob: -3.078488826751709
    3. 'len' → logprob: -4.078488826751709
    4. 'b' → logprob: -5.828488826751709
    5. 'False' → logprob: -6.203488826751709
    6. '[]' → logprob: -6.328488826751709
    7. '-' → logprob: -6.453488826751709
    8. 't' → logprob: -6.703488826751709
    9. '1' → logprob: -7.203488826751709
    10. '[' → logprob: -7.578488826751709

Token 23: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.43699708580970764
    2. ' right' → logprob: -1.0619970560073853
    3. ' ' → logprob: -5.061996936798096
    4. '<|end|>' → logprob: -8.311997413635254
    5. ',right' → logprob: -8.311997413635254
    6. 'r' → logprob: -8.561997413635254
    7. 't' → logprob: -8.686997413635254
    8. ' while' → logprob: -8.936997413635254
    9. ' 
' → logprob: -9.061997413635254
    10. ',' → logprob: -9.311997413635254

Token 24: 'r' (ID: 81)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.027503231540322304
    2. 'r' → logprob: -3.902503252029419
    3. ' right' → logprob: -5.52750301361084
    4. '=' → logprob: -6.40250301361084
    5. 'rig' → logprob: -8.52750301361084
    6. '```' → logprob: -8.52750301361084
    7. ' ' → logprob: -8.77750301361084
    8. 'for' → logprob: -8.90250301361084
    9. ' =' → logprob: -9.02750301361084
    10. ',' → logprob: -9.52750301361084

Token 25: ' =' (ID: 314)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -8.537868779967539e-06
    2. 'igh' → logprob: -11.750008583068848
    3. 'i' → logprob: -15.125008583068848
    4. 'ig' → logprob: -15.500008583068848
    5. 'igth' → logprob: -17.37500762939453
    6. 'es' → logprob: -17.50000762939453
    7. 'ght' → logprob: -17.62500762939453
    8. 'e' → logprob: -17.75000762939453
    9. 'ights' → logprob: -17.87500762939453
    10. 'right' → logprob: -18.00000762939453

Token 26: ' b' (ID: 287)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -1.2660704851150513
    2. 'a' → logprob: -1.5160704851150513
    3. 'len' → logprob: -1.7660704851150513
    4. ' ' → logprob: -1.8910704851150513
    5. '0' → logprob: -2.3910703659057617
    6. ' len' → logprob: -3.0160703659057617
    7. ' a' → logprob: -4.516070365905762
    8. '1' → logprob: -4.766070365905762
    9. 'int' → logprob: -5.141070365905762
    10. 'ght' → logprob: -6.516070365905762

Token 27: '
' (ID: 198)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.003337410045787692
    2. 'left' → logprob: -7.378337383270264
    3. 'igh' → logprob: -7.378337383270264
    4. 'right' → logprob: -8.378337860107422
    5. '[' → logprob: -8.503337860107422
    6. 'and' → logprob: -8.628337860107422
    7. 'ights' → logprob: -8.628337860107422
    8. 'igth' → logprob: -8.753337860107422
    9. 'ght' → logprob: -9.003337860107422
    10. '+' → logprob: -9.003337860107422

Token 28: 'pos' (ID: 1103)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.0011645073536783457
    2. 'igh' → logprob: -7.251164436340332
    3. 'ights' → logprob: -9.251164436340332
    4. '=' → logprob: -9.751164436340332
    5. 'igth' → logprob: -9.751164436340332
    6. 'ght' → logprob: -10.001164436340332
    7. ' ' → logprob: -10.126164436340332
    8. 'e' → logprob: -10.501164436340332
    9. 'right' → logprob: -10.501164436340332
    10. ' =' → logprob: -10.876164436340332

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30472609400749207
    2. 'ition' → logprob: -2.1797261238098145
    3. ' =' → logprob: -3.0547261238098145
    4. 'left' → logprob: -3.5547261238098145
    5. 's' → logprob: -3.9297261238098145
    6. 't' → logprob: -4.3047261238098145
    7. 'i' → logprob: -4.4297261238098145
    8. 'itions' → logprob: -4.8047261238098145
    9. 'itive' → logprob: -4.9297261238098145
    10. 'sible' → logprob: -5.6797261238098145

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022968124598264694
    2. ' ' → logprob: -4.147968292236328
    3. 'left' → logprob: -5.397968292236328
    4. '-' → logprob: -6.897968292236328
    5. ' left' → logprob: -7.897968292236328
    6. ' -' → logprob: -8.147968292236328
    7. 'a' → logprob: -8.272968292236328
    8. 'len' → logprob: -8.522968292236328
    9. ' len' → logprob: -9.772968292236328
    10. 'r' → logprob: -10.147968292236328

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09094734489917755
    2. 'left' → logprob: -2.840947389602661
    3. 'a' → logprob: -3.715947389602661
    4. '-' → logprob: -6.590947151184082
    5. 'b' → logprob: -7.090947151184082
    6. 'right' → logprob: -7.590947151184082
    7. 'r' → logprob: -7.840947151184082
    8. ' ' → logprob: -7.965947151184082
    9. 'len' → logprob: -8.465947151184082
    10. ' left' → logprob: -8.965947151184082

Token 32: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2089108228683472
    2. '+' → logprob: -1.4589108228683472
    3. 'r' → logprob: -2.0839109420776367
    4. 's' → logprob: -2.2089109420776367
    5. 'f' → logprob: -2.8339109420776367
    6. '=' → logprob: -3.0839109420776367
    7. 't' → logprob: -3.5839109420776367
    8. 'u' → logprob: -3.8339109420776367
    9. 'x' → logprob: -4.083910942077637
    10. 'n' → logprob: -4.583910942077637

Token 33: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0110031366348267
    2. ' ' → logprob: -1.2610031366348267
    3. 'r' → logprob: -2.886003017425537
    4. '<|end|>' → logprob: -3.011003017425537
    5. 't' → logprob: -3.261003017425537
    6. '+' → logprob: -3.261003017425537
    7. 'n' → logprob: -3.511003017425537
    8. ')' → logprob: -3.886003017425537
    9. '=' → logprob: -4.011003017425537
    10. ' while' → logprob: -4.136003017425537

Token 34: ' advance' (ID: 14805)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.1558631658554077
    2. ' move' → logprob: -1.9058631658554077
    3. ' check' → logprob: -2.5308632850646973
    4. ' main' → logprob: -2.6558632850646973
    5. ' binary' → logprob: -2.9058632850646973
    6. 'solve' → logprob: -3.0308632850646973
    7. ' update' → logprob: -3.1558632850646973
    8. ' search' → logprob: -3.4058632850646973
    9. ' f' → logprob: -3.7808632850646973
    10. ' can' → logprob: -4.155863285064697

Token 35: '(idx' (ID: 42793)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04360044375061989
    2. '()' → logprob: -3.293600559234619
    3. '(' → logprob: -5.668600559234619
    4. ' ():' → logprob: -6.543600559234619
    5. ' ()' → logprob: -8.293600082397461
    6. '(pos' → logprob: -8.543600082397461
    7. '():
' → logprob: -10.043600082397461
    8. '(left' → logprob: -10.668600082397461
    9. '_' → logprob: -10.793600082397461
    10. '_left' → logprob: -11.043600082397461

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35395005345344543
    2. ',' → logprob: -1.228950023651123
    3. ')' → logprob: -5.478950023651123
    4. ' ,' → logprob: -7.478950023651123
    5. '+' → logprob: -8.228950500488281
    6. ' ):' → logprob: -8.353950500488281
    7. '):
' → logprob: -9.103950500488281
    8. '=' → logprob: -10.603950500488281
    9. ':' → logprob: -10.853950500488281
    10. '):
' → logprob: -11.228950500488281

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25138965249061584
    2. ' global' → logprob: -2.626389741897583
    3. ' if' → logprob: -3.126389741897583
    4. ':' → logprob: -3.501389741897583
    5. 'global' → logprob: -3.626389741897583
    6. ' ' → logprob: -3.876389741897583
    7. '    ' → logprob: -5.501389503479004
    8. '<|end|>' → logprob: -5.626389503479004
    9. '+' → logprob: -5.876389503479004
    10. 'pos' → logprob: -6.251389503479004

Token 38: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9960942268371582
    2. 'global' → logprob: -1.3710942268371582
    3. 'pos' → logprob: -1.9960942268371582
    4. ' global' → logprob: -2.121094226837158
    5. 'if' → logprob: -3.371094226837158
    6. ' if' → logprob: -3.746094226837158
    7. ' pos' → logprob: -3.871094226837158
    8. 'return' → logprob: -3.996094226837158
    9. ' return' → logprob: -5.246094226837158
    10. 'idx' → logprob: -5.496094226837158

Token 39: ' idx' (ID: 14016)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.1879856437444687
    2. 'pos' → logprob: -1.9379856586456299
    3. ' idx' → logprob: -4.312985420227051
    4. ' left' → logprob: -4.687985420227051
    5. 'left' → logprob: -6.187985420227051
    6. 'idx' → logprob: -6.187985420227051
    7. ' True' → logprob: -8.43798542022705
    8. ' a' → logprob: -9.06298542022705
    9. ' ' → logprob: -10.06298542022705
    10. '(pos' → logprob: -10.43798542022705

Token 40: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6694647669792175
    2. '<' → logprob: -0.7944647669792175
    3. '+' → logprob: -3.5444648265838623
    4. ' +' → logprob: -5.919464588165283
    5. '<len' → logprob: -6.044464588165283
    6. '[' → logprob: -7.669464588165283
    7. '<=' → logprob: -7.919464588165283
    8. ' ' → logprob: -8.044465065002441
    9. '<n' → logprob: -8.294465065002441
    10. ' <=' → logprob: -8.669465065002441

Token 41: ' a' (ID: 261)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8456442356109619
    2. 'r' → logprob: -0.9706442356109619
    3. 'b' → logprob: -2.345644235610962
    4. 'a' → logprob: -2.970644235610962
    5. 'left' → logprob: -4.095643997192383
    6. ' len' → logprob: -4.595643997192383
    7. 't' → logprob: -4.845643997192383
    8. 'pos' → logprob: -5.595643997192383
    9. ' r' → logprob: -5.970643997192383
    10. ' b' → logprob: -6.845643997192383

Token 42: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04304474592208862
    2. 'and' → logprob: -3.1680448055267334
    3. ' ' → logprob: -10.918045043945312
    4. '   ' → logprob: -11.668045043945312
    5. ':' → logprob: -12.543045043945312
    6. ')' → logprob: -12.918045043945312
    7. ',' → logprob: -13.418045043945312
    8. 'r' → logprob: -13.418045043945312
    9. '-' → logprob: -13.543045043945312
    10. '<|end|>' → logprob: -14.043045043945312

Token 43: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26532384753227234
    2. ' t' → logprob: -1.8903238773345947
    3. 'pos' → logprob: -3.6403238773345947
    4. 'b' → logprob: -4.515323638916016
    5. 's' → logprob: -5.015323638916016
    6. ' pos' → logprob: -5.140323638916016
    7. 'input' → logprob: -5.265323638916016
    8. 'left' → logprob: -5.265323638916016
    9. 'r' → logprob: -5.515323638916016
    10. 'int' → logprob: -5.765323638916016

Token 44: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.41306209564208984
    2. '[' → logprob: -1.6630620956420898
    3. '[pos' → logprob: -1.9130620956420898
    4. '[index' → logprob: -7.41306209564209
    5. '[left' → logprob: -8.91306209564209
    6. '[int' → logprob: -9.03806209564209
    7. '[i' → logprob: -9.91306209564209
    8. '[token' → logprob: -10.28806209564209
    9. '[ind' → logprob: -10.41306209564209
    10. '[position' → logprob: -10.78806209564209

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02842016890645027
    2. ']==' → logprob: -3.6534202098846436
    3. ']=='' → logprob: -6.7784199714660645
    4. ']!=' → logprob: -7.6534199714660645
    5. ' ]' → logprob: -7.9034199714660645
    6. '==' → logprob: -10.153420448303223
    7. ']!='' → logprob: -10.653420448303223
    8. '   ' → logprob: -10.903420448303223
    9. ' ' → logprob: -11.403420448303223
    10. '']' → logprob: -12.028420448303223

Token 46: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2651655673980713
    2. '!=' → logprob: -2.1401655673980713
    3. ' ==' → logprob: -2.5151655673980713
    4. ' in' → logprob: -4.265165328979492
    5. ' !=' → logprob: -4.890165328979492
    6. '=='' → logprob: -5.640165328979492
    7. ' not' → logprob: -6.140165328979492
    8. '=' → logprob: -6.515165328979492
    9. '[' → logprob: -6.890165328979492
    10. ' ' → logprob: -7.640165328979492

Token 47: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4074450731277466
    2. ''.' → logprob: -2.157444953918457
    3. ''t' → logprob: -2.532444953918457
    4. 't' → logprob: -2.657444953918457
    5. ''<' → logprob: -4.157444953918457
    6. ''o' → logprob: -5.157444953918457
    7. ''>' → logprob: -5.157444953918457
    8. '')' → logprob: -5.282444953918457
    9. ''r' → logprob: -5.532444953918457
    10. ''#' → logprob: -5.532444953918457

Token 48: '0' (ID: 15)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.5729963779449463
    2. 'L' → logprob: -2.0729963779449463
    3. '<' → logprob: -2.0729963779449463
    4. ''' → logprob: -2.5729963779449463
    5. '1' → logprob: -2.6979963779449463
    6. '('' → logprob: -2.6979963779449463
    7. 'a' → logprob: -2.8229963779449463
    8. '.' → logprob: -3.3229963779449463
    9. '0' → logprob: -3.4479963779449463
    10. ')' → logprob: -4.072996139526367

Token 49: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04144110158085823
    2. ''' → logprob: -3.7914412021636963
    3. '':
' → logprob: -4.041440963745117
    4. ' ':' → logprob: -8.666440963745117
    5. ':' → logprob: -9.041440963745117
    6. '':
' → logprob: -9.541440963745117
    7. ' '' → logprob: -10.541440963745117
    8. ' and' → logprob: -11.291440963745117
    9. '':

' → logprob: -11.291440963745117
    10. '   ' → logprob: -12.041440963745117

Token 50: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6713667511940002
    2. '   ' → logprob: -1.4213666915893555
    3. ' idx' → logprob: -1.5463666915893555
    4. 'idx' → logprob: -3.7963666915893555
    5. '    ' → logprob: -5.5463666915893555
    6. '
' → logprob: -6.2963666915893555
    7. '    
' → logprob: -6.7963666915893555
    8. '	idx' → logprob: -6.9213666915893555
    9. ' ' → logprob: -7.2963666915893555
    10. ' 
' → logprob: -7.6713666915893555

Token 51: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.15558458864688873
    2. '+=' → logprob: -2.2805845737457275
    3. '+' → logprob: -3.4055845737457275
    4. ' +' → logprob: -5.030584812164307
    5. '<|end|>' → logprob: -6.905584812164307
    6. '++' → logprob: -7.780584812164307
    7. ' =' → logprob: -8.655584335327148
    8. ' ' → logprob: -9.280584335327148
    9. 'idx' → logprob: -9.280584335327148
    10. '   ' → logprob: -9.405584335327148

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.750262260437012
    4. '<|end|>' → logprob: -16.000261306762695
    5. '  ' → logprob: -16.625261306762695
    6. '```' → logprob: -17.750261306762695
    7. '2' → logprob: -17.875261306762695
    8. '+' → logprob: -18.000261306762695
    9. '    ' → logprob: -18.375261306762695
    10. '0' → logprob: -18.500261306762695

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5576868653297424
    2. '<|end|>' → logprob: -1.8076868057250977
    3. ' 
' → logprob: -1.9326868057250977
    4. ' ' → logprob: -2.9326868057250977
    5. '   ' → logprob: -3.0576868057250977
    6. '  
' → logprob: -5.932686805725098
    7. '<|end|>' → logprob: -5.932686805725098
    8. '    
' → logprob: -6.057686805725098
    9. '```' → logprob: -6.182686805725098
    10. '    ' → logprob: -6.182686805725098

Token 54: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22580665349960327
    2. '   ' → logprob: -1.850806713104248
    3. '<|end|>' → logprob: -3.975806713104248
    4. '    ' → logprob: -4.975806713104248
    5. '  ' → logprob: -5.600806713104248
    6. '	' → logprob: -5.975806713104248
    7. ' ' → logprob: -6.100806713104248
    8. ' 
' → logprob: -6.225806713104248
    9. ' )' → logprob: -6.350806713104248
    10. ' return' → logprob: -6.975806713104248

Token 56: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4287143349647522
    2. ' idx' → logprob: -1.0537142753601074
    3. '	idx' → logprob: -12.053714752197266
    4. '(idx' → logprob: -12.428714752197266
    5. 'index' → logprob: -14.053714752197266
    6. ' ' → logprob: -14.428714752197266
    7. '_idx' → logprob: -14.553714752197266
    8. '1' → logprob: -14.678714752197266
    9. '[idx' → logprob: -15.053714752197266
    10. '   ' → logprob: -15.303714752197266

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8582301735877991
    2. '<|end|>' → logprob: -1.2332301139831543
    3. 'def' → logprob: -1.9832301139831543
    4. ' ' → logprob: -3.1082301139831543
    5. '  
' → logprob: -3.2332301139831543
    6. '+' → logprob: -4.608230113983154
    7. ' 
' → logprob: -4.858230113983154
    8. 'r' → logprob: -5.108230113983154
    9. '<|end|>' → logprob: -5.108230113983154
    10. '    
' → logprob: -5.358230113983154

Token 59: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20161516964435577
    2. ' pos' → logprob: -1.9516152143478394
    3. ' _' → logprob: -4.326615333557129
    4. '_' → logprob: -4.826615333557129
    5. 'i' → logprob: -5.326615333557129
    6. ' idx' → logprob: -5.326615333557129
    7. ' ' → logprob: -5.576615333557129
    8. 'pos' → logprob: -5.826615333557129
    9. ' left' → logprob: -6.201615333557129
    10. ' x' → logprob: -8.951615333557129

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002955213189125
    2. 'in' → logprob: -2.3502955436706543
    3. ' ' → logprob: -9.725295066833496
    4. '  ' → logprob: -11.350295066833496
    5. 'n' → logprob: -12.475295066833496
    6. 'import' → logprob: -12.850295066833496
    7. 'range' → logprob: -13.350295066833496
    8. '```' → logprob: -13.350295066833496
    9. '	in' → logprob: -13.600295066833496
    10. '<|end|>' → logprob: -13.725295066833496

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001051507773809135
    2. ' range' → logprob: -6.876051425933838
    3. 't' → logprob: -12.001051902770996
    4. 'input' → logprob: -12.251051902770996
    5. 'a' → logprob: -12.376051902770996
    6. 'r' → logprob: -13.751051902770996
    7. 'b' → logprob: -14.126051902770996
    8. '(range' → logprob: -14.251051902770996
    9. '[' → logprob: -15.376051902770996
    10. ' ' → logprob: -15.876051902770996

Token 62: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01150859147310257
    2. '(b' → logprob: -4.886508464813232
    3. '(' → logprob: -5.636508464813232
    4. '(r' → logprob: -8.13650894165039
    5. '(int' → logprob: -10.88650894165039
    6. '(left' → logprob: -11.88650894165039
    7. '(n' → logprob: -12.76150894165039
    8. '(t' → logprob: -13.01150894165039
    9. '(len' → logprob: -13.88650894165039
    10. '(s' → logprob: -13.88650894165039

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16126303374767303
    2. '):
' → logprob: -1.9112629890441895
    3. ' ):' → logprob: -7.5362629890441895
    4. '):
' → logprob: -8.411263465881348
    5. '-' → logprob: -9.036263465881348
    6. ')' → logprob: -9.411263465881348
    7. ' ):
' → logprob: -10.286263465881348
    8. '+' → logprob: -10.536263465881348
    9. ' -' → logprob: -12.286263465881348
    10. ':' → logprob: -12.411263465881348

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23932941257953644
    2. ' if' → logprob: -1.86432945728302
    3. ' ' → logprob: -3.4893293380737305
    4. '    ' → logprob: -5.1143293380737305
    5. '	if' → logprob: -5.4893293380737305
    6. ' pos' → logprob: -5.6143293380737305
    7. '<|end|>' → logprob: -5.8643293380737305
    8. ' 
' → logprob: -6.6143293380737305
    9. '	' → logprob: -7.2393293380737305
    10. ',' → logprob: -7.3643293380737305

Token 65: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15641357004642487
    2. '   ' → logprob: -3.1564135551452637
    3. ' pos' → logprob: -3.1564135551452637
    4. 'if' (adapté à ' if') → logprob: -3.7814135551452637
    5. ' ' → logprob: -4.656413555145264
    6. 'pos' → logprob: -5.156413555145264
    7. '    ' → logprob: -5.156413555145264
    8. ' r' → logprob: -5.656413555145264
    9. ' c' → logprob: -6.156413555145264
    10. ' left' → logprob: -6.281413555145264

Token 66: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.32037779688835144
    2. ' pos' → logprob: -1.9453778266906738
    3. 't' → logprob: -2.695377826690674
    4. ' left' → logprob: -3.570377826690674
    5. 'pos' → logprob: -3.820377826690674
    6. 'left' → logprob: -5.570377826690674
    7. ' r' → logprob: -5.695377826690674
    8. ' not' → logprob: -6.570377826690674
    9. ' advance' → logprob: -6.570377826690674
    10. ' ' → logprob: -6.820377826690674

Token 67: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.22805508971214294
    2. '[' → logprob: -1.8530551195144653
    3. '[_' → logprob: -3.103055000305176
    4. '[left' → logprob: -6.478055000305176
    5. '[p' → logprob: -8.853055000305176
    6. '[position' → logprob: -9.228055000305176
    7. '[i' → logprob: -9.853055000305176
    8. '[idx' → logprob: -10.103055000305176
    9. '[right' → logprob: -10.478055000305176
    10. '[t' → logprob: -10.603055000305176

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08819277584552765
    2. ']==' → logprob: -2.5881927013397217
    3. '==' → logprob: -5.588192939758301
    4. ' ]' → logprob: -5.963192939758301
    5. ']=='' → logprob: -6.338192939758301
    6. ' ==' → logprob: -7.213192939758301
    7. '']' → logprob: -8.8381929397583
    8. ' ' → logprob: -10.2131929397583
    9. '   ' → logprob: -10.3381929397583
    10. ']]' → logprob: -10.4631929397583

Token 69: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1824011206626892
    2. ' ==' → logprob: -1.807401180267334
    3. '=='' → logprob: -6.057401180267334
    4. '!=' → logprob: -9.182400703430176
    5. '=' → logprob: -9.682400703430176
    6. ' =='' → logprob: -10.432400703430176
    7. '   ' → logprob: -10.807400703430176
    8. ':' → logprob: -10.932400703430176
    9. ' ' → logprob: -11.432400703430176
    10. ' !=' → logprob: -11.557400703430176

Token 70: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023764923214912415
    2. ' '' → logprob: -3.7737648487091064
    3. '"' → logprob: -8.523764610290527
    4. '0' → logprob: -9.148764610290527
    5. ' ' → logprob: -9.523764610290527
    6. ''a' → logprob: -10.398764610290527
    7. '1' → logprob: -10.648764610290527
    8. ''b' → logprob: -10.898764610290527
    9. ''o' → logprob: -11.211264610290527
    10. ''t' → logprob: -12.273764610290527

Token 71: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6354737281799316
    2. '1' → logprob: -0.7604737281799316
    3. ''' → logprob: -5.885473728179932
    4. ' ' → logprob: -11.010473251342773
    5. '')' → logprob: -11.135473251342773
    6. ''s' → logprob: -11.135473251342773
    7. ' '' → logprob: -11.510473251342773
    8. '':' → logprob: -12.135473251342773
    9. 'b' → logprob: -12.697973251342773
    10. '-' → logprob: -12.885473251342773

Token 72: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004170883446931839
    2. ':
' → logprob: -6.254170894622803
    3. '':' → logprob: -6.879170894622803
    4. '):' → logprob: -7.129170894622803
    5. ' :' → logprob: -9.004170417785645
    6. ' and' → logprob: -9.129170417785645
    7. ')' → logprob: -9.254170417785645
    8. '):
' → logprob: -10.629170417785645
    9. '   ' → logprob: -11.129170417785645
    10. ']:' → logprob: -11.879170417785645

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013141288422048092
    2. 'pos' → logprob: -6.38814115524292
    3. '<|end|>' → logprob: -6.38814115524292
    4. 'left' → logprob: -6.63814115524292
    5. ' left' → logprob: -6.63814115524292
    6. '   ' → logprob: -6.76314115524292
    7. 'r' → logprob: -6.76314115524292
    8. ' if' → logprob: -7.13814115524292
    9. ':' → logprob: -7.63814115524292
    10. ' and' → logprob: -8.013141632080078

Token 74: ' pos' (ID: 1253)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.071955919265747
    2. 'left' → logprob: -1.571955919265747
    3. ' left' → logprob: -1.696955919265747
    4. ' r' → logprob: -2.196955919265747
    5. 'right' → logprob: -3.071955919265747
    6. 'pos' (adapté à ' pos') → logprob: -3.196955919265747
    7. ' right' → logprob: -3.696955919265747
    8. ' pos' → logprob: -3.821955919265747
    9. ' if' → logprob: -4.821955680847168
    10. 'if' → logprob: -5.196955680847168

Token 75: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5099599361419678
    2. '+=' → logprob: -1.0099599361419678
    3. ' =' → logprob: -4.009960174560547
    4. '=' → logprob: -4.384960174560547
    5. '+' → logprob: -5.384960174560547
    6. ' +' → logprob: -10.634960174560547
    7. ' ' → logprob: -11.009960174560547
    8. ',' → logprob: -11.634960174560547
    9. ')' → logprob: -12.509960174560547
    10. '+='' → logprob: -12.634960174560547

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0039927964098751545
    2. ' ' → logprob: -6.003993034362793
    3. 'r' → logprob: -7.003993034362793
    4. 'b' → logprob: -7.503993034362793
    5. ' r' → logprob: -10.878993034362793
    6. '2' → logprob: -11.378993034362793
    7. ' b' → logprob: -11.503993034362793
    8. 'left' → logprob: -12.003993034362793
    9. 'a' → logprob: -12.628993034362793
    10. 'int' → logprob: -13.691493034362793

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003875958500429988
    2. 'r' → logprob: -5.878875732421875
    3. 'b' → logprob: -6.878875732421875
    4. 'left' → logprob: -11.128875732421875
    5. ' ' → logprob: -11.378875732421875
    6. '2' → logprob: -12.253875732421875
    7. 'l' → logprob: -12.753875732421875
    8. 'a' → logprob: -13.128875732421875
    9. 'int' → logprob: -14.003875732421875
    10. 'len' → logprob: -14.378875732421875

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4978484809398651
    2. '<|end|>' → logprob: -1.7478485107421875
    3. 'else' → logprob: -2.1228485107421875
    4. 'elif' → logprob: -3.3728485107421875
    5. '
' → logprob: -3.7478485107421875
    6. '+' → logprob: -4.1228485107421875
    7. ' else' → logprob: -4.6228485107421875
    8. '```' → logprob: -4.8728485107421875
    9. '+
' → logprob: -6.8728485107421875
    10. '       ' → logprob: -6.9978485107421875

Token 80: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.09544019401073456
    2. 'left' → logprob: -3.095440149307251
    3. 'r' → logprob: -3.345440149307251
    4. 'else' → logprob: -5.72044038772583
    5. '   ' → logprob: -6.09544038772583
    6. '1' → logprob: -6.22044038772583
    7. 'b' → logprob: -6.72044038772583
    8. ' continue' → logprob: -7.59544038772583
    9. 'right' → logprob: -7.84544038772583
    10. 'elif' → logprob: -7.84544038772583

Token 81: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044777123257517815
    2. '    
' → logprob: -6.629477500915527
    3. '
' → logprob: -6.879477500915527
    4. 'elif' → logprob: -7.129477500915527
    5. 'else' → logprob: -7.754477500915527
    6. '```' → logprob: -8.129477500915527
    7. 'if' → logprob: -8.629477500915527
    8. '  ' → logprob: -9.129477500915527
    9. '   
' → logprob: -9.129477500915527
    10. ' else' → logprob: -9.879477500915527

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05093158781528473
    2. 'if' → logprob: -3.800931692123413
    3. 'else' → logprob: -4.675931453704834
    4. 'left' → logprob: -5.175931453704834
    5. 'elif' → logprob: -5.300931453704834
    6. '```' → logprob: -6.550931453704834
    7. 'pos' → logprob: -6.675931453704834
    8. '    
' → logprob: -6.800931453704834
    9. 'r' → logprob: -7.050931453704834
    10. 'while' → logprob: -7.050931453704834

Token 83: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3791929483413696
    2. 'if' (adapté à ' if') → logprob: -1.3791929483413696
    3. 'pos' → logprob: -1.3791929483413696
    4. 'left' → logprob: -1.6291929483413696
    5. 'right' → logprob: -4.62919282913208
    6. 'else' → logprob: -4.75419282913208
    7. 'l' → logprob: -5.00419282913208
    8. 'while' → logprob: -5.25419282913208
    9. '   ' → logprob: -5.37919282913208
    10. 'elif' → logprob: -5.50419282913208

Token 84: ' not' (ID: 625)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.6934003829956055
    2. 'pos' → logprob: -1.8184003829956055
    3. ' left' → logprob: -2.0684003829956055
    4. ' r' → logprob: -2.6934003829956055
    5. ' t' → logprob: -2.9434003829956055
    6. ' b' → logprob: -3.5684003829956055
    7. 'left' → logprob: -3.8184003829956055
    8. 'r' → logprob: -4.1934003829956055
    9. 't' → logprob: -4.8184003829956055
    10. 'b' → logprob: -5.3184003829956055

Token 85: ' r' (ID: 428)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -1.186435580253601
    2. ' left' → logprob: -1.311435580253601
    3. 'left' → logprob: -2.4364356994628906
    4. ' r' → logprob: -2.4364356994628906
    5. 'pos' → logprob: -2.6864356994628906
    6. ' advance' → logprob: -2.6864356994628906
    7. ' b' → logprob: -3.8114356994628906
    8. 'r' → logprob: -3.9364356994628906
    9. ' (' → logprob: -3.9364356994628906
    10. 'advance' → logprob: -4.311435699462891

Token 86: ':' (ID: 25)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3412603735923767
    2. ':' → logprob: -1.5912604331970215
    3. ' >' → logprob: -2.9662604331970215
    4. ' or' → logprob: -4.0912604331970215
    5. ' and' → logprob: -4.8412604331970215
    6. '<|end|>' → logprob: -5.4662604331970215
    7. ')' → logprob: -6.4662604331970215
    8. 'and' → logprob: -7.2162604331970215
    9. '>:' → logprob: -7.3412604331970215
    10. ' :' → logprob: -7.7162604331970215

Token 87: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0147631168365479
    2. ' break' → logprob: -1.1397631168365479
    3. '    ' → logprob: -1.2647631168365479
    4. '        ' → logprob: -4.514762878417969
    5. '   ' → logprob: -4.764762878417969
    6. ' ' → logprob: -5.014762878417969
    7. '	break' → logprob: -5.764762878417969
    8. 'break' → logprob: -5.764762878417969
    9. '	' → logprob: -7.014762878417969
    10. '           ' → logprob: -8.014762878417969

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41594699025154114
    2. ' 
' → logprob: -1.9159469604492188
    3. '
' → logprob: -2.7909469604492188
    4. ' ' → logprob: -3.4159469604492188
    5. '   
' → logprob: -3.6659469604492188
    6. '    
' → logprob: -4.040946960449219
    7. '  
' → logprob: -4.290946960449219
    8. 'pos' → logprob: -4.915946960449219
    9. '<|end|>' → logprob: -5.040946960449219
    10. ' pos' → logprob: -5.165946960449219

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05088220164179802
    2. 'r' → logprob: -4.175882339477539
    3. 'pos' → logprob: -5.050882339477539
    4. 'left' → logprob: -5.050882339477539
    5. ' left' → logprob: -5.175882339477539
    6. ' r' → logprob: -5.675882339477539
    7. '    
' → logprob: -5.800882339477539
    8. ' pos' → logprob: -6.050882339477539
    9. ' if' → logprob: -6.050882339477539
    10. '
' → logprob: -7.175882339477539

Token 90: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.8368117809295654
    2. ' left' → logprob: -1.4618117809295654
    3. 'r' (adapté à ' r') → logprob: -2.0868117809295654
    4. ' if' → logprob: -2.4618117809295654
    5. 'left' → logprob: -3.2118117809295654
    6. '   ' → logprob: -3.2118117809295654
    7. ' pos' → logprob: -3.9618117809295654
    8. 'if' → logprob: -4.7118120193481445
    9. 'pos' → logprob: -4.9618120193481445
    10. ' while' → logprob: -6.7118120193481445

Token 91: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4747178256511688
    2. '-=' → logprob: -0.9747178554534912
    3. '-' → logprob: -7.474717617034912
    4. '=' → logprob: -9.72471809387207
    5. '+=' → logprob: -12.59971809387207
    6. ' +=' → logprob: -12.59971809387207
    7. ' -' → logprob: -12.72471809387207
    8. ' =' → logprob: -13.22471809387207
    9. '>' → logprob: -14.22471809387207
    10. ')' → logprob: -14.84971809387207

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005238025914877653
    2. ' ' → logprob: -5.255238056182861
    3. '   ' → logprob: -12.755237579345703
    4. 'b' → logprob: -14.255237579345703
    5. ' b' → logprob: -15.880237579345703
    6. '  ' → logprob: -16.192737579345703
    7. 'a' → logprob: -16.442737579345703
    8. 's' → logprob: -16.692737579345703
    9. '    ' → logprob: -17.005237579345703
    10. '```' → logprob: -17.067737579345703

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.718606891809031e-05
    2. ' ' → logprob: -9.625066757202148
    3. 'b' → logprob: -15.125066757202148
    4. '   ' → logprob: -15.375066757202148
    5. 'a' → logprob: -15.875066757202148
    6. '-' → logprob: -16.25006675720215
    7. '2' → logprob: -16.37506675720215
    8. '  ' → logprob: -17.37506675720215
    9. '```' → logprob: -17.81256675720215
    10. 's' → logprob: -17.93756675720215

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6331559419631958
    2. '   ' → logprob: -1.2581559419631958
    3. 'pos' → logprob: -2.8831558227539062
    4. ' if' → logprob: -3.3831558227539062
    5. 'left' → logprob: -3.6331558227539062
    6. ' left' → logprob: -4.258155822753906
    7. ' pos' → logprob: -4.758155822753906
    8. '<|end|>' → logprob: -4.758155822753906
    9. '    
' → logprob: -5.258155822753906
    10. ' while' → logprob: -5.508155822753906

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20237891376018524
    2. 'pos' → logprob: -2.077378988265991
    3. 'left' → logprob: -3.702378988265991
    4. '
' → logprob: -4.202378749847412
    5. '<|end|>' → logprob: -5.452378749847412
    6. 'if' → logprob: -5.952378749847412
    7. ' if' → logprob: -6.327378749847412
    8. 'a' → logprob: -6.327378749847412
    9. ' pos' → logprob: -6.577378749847412
    10. '+' → logprob: -7.077378749847412

Token 96: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.5101590752601624
    2. 'left' → logprob: -1.0101590156555176
    3. 'while' → logprob: -5.010159015655518
    4. 'r' → logprob: -5.135159015655518
    5. 't' → logprob: -5.635159015655518
    6. 'a' → logprob: -5.635159015655518
    7. 'b' → logprob: -5.760159015655518
    8. 'right' → logprob: -5.885159015655518
    9. ' pos' → logprob: -6.135159015655518
    10. 'if' → logprob: -6.260159015655518

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6997713446617126
    2. ' =' → logprob: -0.6997713446617126
    3. ' +=' → logprob: -5.449771404266357
    4. '+=' → logprob: -6.074771404266357
    5. ' ' → logprob: -13.4497709274292
    6. '+' → logprob: -13.8247709274292
    7. '＝' → logprob: -14.6997709274292
    8. ',' → logprob: -14.6997709274292
    9. '.=' → logprob: -15.4497709274292
    10. '    ' → logprob: -15.6997709274292

Token 98: ' advance' (ID: 14805)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.20142357051372528
    2. ' advance' → logprob: -1.7014235258102417
    3. 'adv' → logprob: -12.576423645019531
    4. ' adv' → logprob: -13.826423645019531
    5. 'a' → logprob: -13.951423645019531
    6. 'advanced' → logprob: -13.951423645019531
    7. '   ' → logprob: -14.326423645019531
    8. ' avance' → logprob: -14.576423645019531
    9. 'max' → logprob: -14.701423645019531
    10. ' ' → logprob: -14.701423645019531

Token 99: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.704065213445574e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -14.500046730041504
    4. '(p' → logprob: -14.750046730041504
    5. '(po' → logprob: -15.375046730041504
    6. 'pos' → logprob: -16.12504768371582
    7. '(Pos' → logprob: -16.75004768371582
    8. '(
' → logprob: -17.00004768371582
    9. '(prev' → logprob: -17.12504768371582
    10. '(position' → logprob: -17.12504768371582

Token 100: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22144939005374908
    2. ')' → logprob: -1.721449375152588
    3. ' +' → logprob: -3.971449375152588
    4. ')+' → logprob: -7.221449375152588
    5. '+)' → logprob: -9.096449851989746
    6. '   ' → logprob: -9.721449851989746
    7. ' )' → logprob: -10.096449851989746
    8. ')
' → logprob: -10.471449851989746
    9. '<|end|>' → logprob: -12.346449851989746
    10. ' ' → logprob: -12.721449851989746

Token 101: 'res' (ID: 430)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.005987693555653095
    2. 'ults' → logprob: -5.130987644195557
    3. 'u' → logprob: -10.880988121032715
    4. 'ultat' → logprob: -11.130988121032715
    5. 'ources' → logprob: -11.505988121032715
    6. 'ize' → logprob: -11.755988121032715
    7. 'erve' → logprob: -13.630988121032715
    8. 't' → logprob: -13.630988121032715
    9. 'olve' → logprob: -13.755988121032715
    10. 'ulta' → logprob: -13.755988121032715

Token 103: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.2645694613456726
    2. 'pos' → logprob: -1.8895695209503174
    3. ' left' → logprob: -3.1395695209503174
    4. ' a' → logprob: -4.764569282531738
    5. 'left' → logprob: -4.889569282531738
    6. ' min' → logprob: -5.139569282531738
    7. ' max' → logprob: -5.389569282531738
    8. ' len' → logprob: -6.014569282531738
    9. 'a' → logprob: -6.264569282531738
    10. ' str' → logprob: -6.764569282531738

Token 104: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'start' (ID: 5236)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004249827470630407
    2. 'while' → logprob: -5.8792500495910645
    3. 'for' → logprob: -6.7542500495910645
    4. 'if' → logprob: -9.754249572753906
    5. '```' → logprob: -10.254249572753906
    6. '<|end|>' → logprob: -10.379249572753906
    7. ' print' → logprob: -10.629249572753906
    8. ' while' → logprob: -10.754249572753906
    9. 'res' → logprob: -10.879249572753906
    10. 'pr' → logprob: -11.004249572753906

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008985736407339573
    2. '=' → logprob: -4.88398551940918
    3. ',' → logprob: -6.75898551940918
    4. 's' → logprob: -9.50898551940918
    5. 'pos' → logprob: -10.00898551940918
    6. ' ,' → logprob: -10.25898551940918
    7. ' ' → logprob: -11.00898551940918
    8. '_' → logprob: -11.25898551940918
    9. '_pos' → logprob: -11.75898551940918
    10. '<|end|>' → logprob: -12.38398551940918

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03218367323279381
    2. ' ' → logprob: -3.5321836471557617
    3. 'res' → logprob: -6.532183647155762
    4. ' res' → logprob: -7.532183647155762
    5. 'left' → logprob: -8.907183647155762
    6. 'a' → logprob: -9.532183647155762
    7. ' left' → logprob: -10.157183647155762
    8. 'pos' → logprob: -10.282183647155762
    9. ' a' → logprob: -10.657183647155762
    10. 'max' → logprob: -10.657183647155762

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01928834058344364
    2. 'res' → logprob: -4.269288539886475
    3. 'pos' → logprob: -6.519288539886475
    4. 'max' → logprob: -6.894288539886475
    5. ' ' → logprob: -7.019288539886475
    6. 'a' → logprob: -7.269288539886475
    7. 'advance' → logprob: -7.269288539886475
    8. 'left' → logprob: -8.644288063049316
    9. ' res' → logprob: -10.394288063049316
    10. '1' → logprob: -10.394288063049316

Token 109: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14346666634082794
    2. 'for' → logprob: -2.3934667110443115
    3. '<|end|>' → logprob: -3.8934667110443115
    4. ' while' → logprob: -4.518466472625732
    5. '
' → logprob: -5.893466472625732
    6. 'start' → logprob: -6.268466472625732
    7. 'end' → logprob: -6.268466472625732
    8. ' for' → logprob: -6.768466472625732
    9. 'res' → logprob: -6.893466472625732
    10. 's' → logprob: -7.268466472625732

Token 110: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.11936715990304947
    2. '_' → logprob: -2.4943671226501465
    3. 'collections' → logprob: -4.8693671226501465
    4. ' math' → logprob: -5.3693671226501465
    5. ' itertools' → logprob: -5.4943671226501465
    6. ' copy' → logprob: -5.4943671226501465
    7. ' sys' → logprob: -5.6193671226501465
    8. ' heap' → logprob: -6.3693671226501465
    9. ' bis' → logprob: -6.4943671226501465
    10. 'bis' → logprob: -6.8693671226501465

Token 112: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6337156295776367
    2. 'import' → logprob: -0.7587156295776367
    3. '	import' → logprob: -7.883715629577637
    4. '<|end|>' → logprob: -8.383715629577637
    5. '.' → logprob: -8.883715629577637
    6. '_import' → logprob: -9.258715629577637
    7. '.import' → logprob: -9.508715629577637
    8. '.com' → logprob: -10.258715629577637
    9. 'ertools' → logprob: -10.258715629577637
    10. ' itertools' → logprob: -10.508715629577637

Token 113: ' count' (ID: 3605)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.02760760486125946
    2. ' accumulate' → logprob: -3.6526076793670654
    3. 'group' → logprob: -8.277607917785645
    4. 'product' → logprob: -8.402607917785645
    5. 'take' → logprob: -8.527607917785645
    6. ' permutations' → logprob: -8.777607917785645
    7. 'per' → logprob: -9.527607917785645
    8. 'cycle' → logprob: -9.652607917785645
    9. 'repeat' → logprob: -9.777607917785645
    10. '```' → logprob: -10.027607917785645

Token 114: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17903999984264374
    2. ' for' → logprob: -1.9290399551391602
    3. ',' → logprob: -4.42903995513916
    4. '
' → logprob: -5.67903995513916
    5. '<|end|>' → logprob: -7.30403995513916
    6. 'range' → logprob: -7.55403995513916
    7. ':' → logprob: -7.67903995513916
    8. ')' → logprob: -8.42903995513916
    9. 'start' → logprob: -8.67903995513916
    10. ':
' → logprob: -8.92903995513916

Token 115: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14320585131645203
    2. ' for' → logprob: -2.0182058811187744
    3. '
' → logprob: -9.018205642700195
    4. ',' → logprob: -9.018205642700195
    5. ':' → logprob: -9.143205642700195
    6. 'in' → logprob: -9.768205642700195
    7. ':
' → logprob: -11.018205642700195
    8. ' in' → logprob: -11.143205642700195
    9. 'import' → logprob: -11.518205642700195
    10. 'while' → logprob: -11.893205642700195

Token 116: ' pos' (ID: 1253)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12168867141008377
    2. ' start' → logprob: -2.2466886043548584
    3. 'True' → logprob: -5.2466888427734375
    4. ' not' → logprob: -7.1216888427734375
    5. ' res' → logprob: -7.3716888427734375
    6. ' ' → logprob: -7.3716888427734375
    7. 'start' → logprob: -7.4966888427734375
    8. ' next' → logprob: -7.7466888427734375
    9. '(True' → logprob: -8.121688842773438
    10. ' b' → logprob: -10.121688842773438

Token 117: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0158854927867651
    2. '<' → logprob: -4.265885353088379
    3. '<a' → logprob: -6.515885353088379
    4. '<len' → logprob: -9.390885353088379
    5. '<n' → logprob: -9.640885353088379
    6. '<count' → logprob: -11.015885353088379
    7. ' ' → logprob: -11.265885353088379
    8. ' <=' → logprob: -12.015885353088379
    9. ' !=' → logprob: -12.015885353088379
    10. ' in' → logprob: -12.140885353088379

Token 118: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47414156794548035
    2. 'a' → logprob: -0.9741415977478027
    3. ' ' → logprob: -10.724141120910645
    4. ' len' → logprob: -10.724141120910645
    5. 'len' → logprob: -10.974141120910645
    6. '	a' → logprob: -13.849141120910645
    7. 'b' → logprob: -15.349141120910645
    8. '(a' → logprob: -15.349141120910645
    9. 'count' → logprob: -15.474141120910645
    10. '>a' → logprob: -15.599141120910645

Token 119: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023728372529149055
    2. ':' → logprob: -4.523728370666504
    3. ':
' → logprob: -4.648728370666504
    4. 'and' → logprob: -5.898728370666504
    5. '   ' → logprob: -8.273728370666504
    6. ' ' → logprob: -12.023728370666504
    7. ' or' → logprob: -12.273728370666504
    8. ',' → logprob: -12.898728370666504
    9. '+' → logprob: -13.398728370666504
    10. '```' → logprob: -13.523728370666504

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01228676363825798
    2. ' if' → logprob: -4.51228666305542
    3. ' and' → logprob: -7.38728666305542
    4. 'if' → logprob: -8.262287139892578
    5. '    
' → logprob: -9.637287139892578
    6. ' for' → logprob: -9.637287139892578
    7. ' pos' → logprob: -10.137287139892578
    8. '```' → logprob: -10.512287139892578
    9. 'and' → logprob: -10.637287139892578
    10. 'pos' → logprob: -11.012287139892578

Token 121: ' l' (ID: 305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6732528209686279
    2. '   ' → logprob: -1.173252820968628
    3. 'if' → logprob: -1.798252820968628
    4. ' for' → logprob: -5.548253059387207
    5. ' pos' → logprob: -6.173253059387207
    6. 'for' → logprob: -6.423253059387207
    7. ' res' → logprob: -6.923253059387207
    8. 'pos' → logprob: -7.048253059387207
    9. '```' → logprob: -7.423253059387207
    10. ' c' → logprob: -7.673253059387207

Token 122: ' =' (ID: 314)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -1.0959292650222778
    2. ' =' → logprob: -1.2209292650222778
    3. '=' → logprob: -1.4709292650222778
    4. 'e' → logprob: -2.8459291458129883
    5. '<' → logprob: -4.095929145812988
    6. '   ' → logprob: -4.220929145812988
    7. '<=' → logprob: -4.720929145812988
    8. '+=' → logprob: -4.970929145812988
    9. ' <' → logprob: -5.095929145812988
    10. ',' → logprob: -5.220929145812988

Token 123: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8270324468612671
    2. 'start' → logprob: -1.577032446861267
    3. ' pos' → logprob: -2.0770325660705566
    4. ' start' → logprob: -2.4520325660705566
    5. 'left' → logprob: -3.0770325660705566
    6. 'advance' → logprob: -3.3270325660705566
    7. '0' → logprob: -3.9520325660705566
    8. ' left' → logprob: -4.202032566070557
    9. ' advance' → logprob: -4.452032566070557
    10. 'a' → logprob: -5.827032566070557

Token 124: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1029090881347656
    2. '+' → logprob: -1.3529090881347656
    3. ' +' → logprob: -1.7279090881347656
    4. '=' → logprob: -1.8529090881347656
    5. ',' → logprob: -3.3529090881347656
    6. '+=' → logprob: -3.9779090881347656
    7. ' +=' → logprob: -4.102909088134766
    8. '   ' → logprob: -5.977909088134766
    9. '-' → logprob: -7.602909088134766
    10. ' -' → logprob: -8.477909088134766

Token 125: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8152849674224854
    2. ' =' → logprob: -1.0652849674224854
    3. '+' → logprob: -2.3152849674224854
    4. '   ' → logprob: -3.3152849674224854
    5. '+=' → logprob: -3.5652849674224854
    6. ' +=' → logprob: -4.315284729003906
    7. ',' → logprob: -4.690284729003906
    8. 'while' → logprob: -4.690284729003906
    9. ' +' → logprob: -5.440284729003906
    10. 'if' → logprob: -6.065284729003906

Token 126: ' while' (ID: 2049)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.24481278657913208
    2. 'while' (adapté à ' while') → logprob: -1.6198127269744873
    3. '   ' → logprob: -4.619812965393066
    4. 'if' → logprob: -5.744812965393066
    5. ' while' → logprob: -6.244812965393066
    6. '=' → logprob: -7.119812965393066
    7. '
' → logprob: -7.619812965393066
    8. 'for' → logprob: -7.619812965393066
    9. 'pos' → logprob: -7.994812965393066
    10. '+' → logprob: -7.994812965393066

Token 127: ' l' (ID: 305)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5932059288024902
    2. ' pos' → logprob: -1.5932059288024902
    3. ' l' → logprob: -1.7182059288024902
    4. 'l' → logprob: -3.0932059288024902
    5. ' t' → logprob: -4.59320592880249
    6. 't' → logprob: -4.96820592880249
    7. ' start' → logprob: -7.21820592880249
    8. 'start' → logprob: -8.093206405639648
    9. 'r' → logprob: -8.718206405639648
    10. ' a' → logprob: -8.843206405639648

Token 128: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048882000148296356
    2. '<' → logprob: -3.048882007598877
    3. '<len' → logprob: -8.798881530761719
    4. '<a' → logprob: -9.798881530761719
    5. '<n' → logprob: -10.048881530761719
    6. '<p' → logprob: -11.173881530761719
    7. ' ' → logprob: -12.298881530761719
    8. ' <=' → logprob: -12.548881530761719
    9. '<size' → logprob: -12.673881530761719
    10. '<=' → logprob: -12.673881530761719

Token 129: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0021860685665160418
    2. ' a' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.752185821533203
    4. '   ' → logprob: -15.127185821533203
    5. 'pos' → logprob: -15.377185821533203
    6. 'len' → logprob: -16.502185821533203
    7. 'left' → logprob: -17.002185821533203
    8. '	a' → logprob: -17.252185821533203
    9. 'l' → logprob: -17.377185821533203
    10. 't' → logprob: -18.377185821533203

Token 130: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31326597929000854
    2. 'and' → logprob: -1.3132660388946533
    3. '   ' → logprob: -13.313265800476074
    4. '	and' → logprob: -13.563265800476074
    5. ' ' → logprob: -14.063265800476074
    6. '```' → logprob: -15.563265800476074
    7. '<|end|>' → logprob: -16.31326675415039
    8. '    ' → logprob: -17.18826675415039
    9. ' и' → logprob: -17.31326675415039
    10. 'andr' → logprob: -17.31326675415039

Token 131: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14287997782230377
    2. ' t' → logprob: -2.0178799629211426
    3. 'l' → logprob: -9.3928804397583
    4. '   ' → logprob: -10.0178804397583
    5. 'not' → logprob: -11.0178804397583
    6. ' not' → logprob: -11.2678804397583
    7. 'a' → logprob: -11.7678804397583
    8. ' l' → logprob: -11.7678804397583
    9. 'pos' → logprob: -12.1428804397583
    10. 'r' → logprob: -12.2678804397583

Token 132: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.62500286102295
    3. 'l' → logprob: -15.00000286102295
    4. '	l' → logprob: -15.37500286102295
    5. '[left' → logprob: -15.50000286102295
    6. ' [' → logprob: -15.62500286102295
    7. '[
' → logprob: -16.250001907348633
    8. '```' → logprob: -16.500001907348633
    9. '[pos' → logprob: -17.250001907348633
    10. '[i' → logprob: -17.500001907348633

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09185121208429337
    2. ']==' → logprob: -2.716851234436035
    3. '']' → logprob: -4.216851234436035
    4. ']=='' → logprob: -5.966851234436035
    5. '==' → logprob: -6.341851234436035
    6. ' ]' → logprob: -6.966851234436035
    7. '']==' → logprob: -7.841851234436035
    8. '']=='' → logprob: -7.966851234436035
    9. ' ==' → logprob: -8.216851234436035
    10. 'l' → logprob: -8.466851234436035

Token 134: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3268175423145294
    2. ' ==' → logprob: -1.326817512512207
    3. '=='' → logprob: -4.326817512512207
    4. '=' → logprob: -9.076817512512207
    5. ' =='' → logprob: -9.826817512512207
    6. ''' → logprob: -10.701817512512207
    7. '!=' → logprob: -10.826817512512207
    8. '[' → logprob: -11.326817512512207
    9. '==
' → logprob: -11.576817512512207
    10. ' !=' → logprob: -11.951817512512207

Token 135: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0087158577516675
    2. ' '' → logprob: -4.758715629577637
    3. '"' → logprob: -10.383715629577637
    4. ''l' → logprob: -10.633715629577637
    5. ' ' → logprob: -10.758715629577637
    6. '0' → logprob: -11.508715629577637
    7. ''t' → logprob: -13.008715629577637
    8. '   ' → logprob: -13.008715629577637
    9. ' t' → logprob: -13.508715629577637
    10. 'l' → logprob: -13.758715629577637

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3134560286998749
    2. '1' → logprob: -1.3134560585021973
    3. ''' → logprob: -8.688455581665039
    4. ' ' → logprob: -11.563455581665039
    5. ''s' → logprob: -12.063455581665039
    6. '')' → logprob: -13.438455581665039
    7. ' '' → logprob: -13.500955581665039
    8. '"' → logprob: -14.125955581665039
    9. '['' → logprob: -14.438455581665039
    10. '```' → logprob: -14.750955581665039

Token 137: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.48097482323646545
    2. ' and' → logprob: -1.605974793434143
    3. ':' → logprob: -2.2309749126434326
    4. ''' → logprob: -3.4809749126434326
    5. '':
' → logprob: -3.8559749126434326
    6. ':
' → logprob: -4.2309746742248535
    7. ':l' → logprob: -6.2309746742248535
    8. ' ':' → logprob: -6.7309746742248535
    9. ' '' → logprob: -6.8559746742248535
    10. ' :' → logprob: -7.3559746742248535

Token 138: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.21209588646888733
    2. 'l' → logprob: -1.712095856666565
    3. '   ' → logprob: -4.587095737457275
    4. '       ' → logprob: -8.212096214294434
    5. '	l' → logprob: -9.212096214294434
    6. '
' → logprob: -10.587096214294434
    7. '    ' → logprob: -10.962096214294434
    8. ' ' → logprob: -11.462096214294434
    9. ',l' → logprob: -12.462096214294434
    10. '  ' → logprob: -12.712096214294434

Token 139: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12749987840652466
    2. '+=' → logprob: -2.50249981880188
    3. ' +' → logprob: -3.75249981880188
    4. ' +=' → logprob: -4.377500057220459
    5. '+l' → logprob: -6.377500057220459
    6. '=' → logprob: -10.0024995803833
    7. '   ' → logprob: -10.3774995803833
    8. '++' → logprob: -11.6274995803833
    9. '+
' → logprob: -12.6274995803833
    10. 'l' → logprob: -12.7524995803833

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016074994346126914
    2. ' ' → logprob: -8.750161170959473
    3. 'l' → logprob: -13.250161170959473
    4. '   ' → logprob: -15.375161170959473
    5. ' l' → logprob: -16.500160217285156
    6. '0' → logprob: -16.750160217285156
    7. '```' → logprob: -16.875160217285156
    8. '+' → logprob: -17.125160217285156
    9. '  ' → logprob: -17.500160217285156
    10. '
' → logprob: -17.500160217285156

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06960635632276535
    2. '   ' → logprob: -3.194606304168701
    3. '<|end|>' → logprob: -3.944606304168701
    4. ' if' → logprob: -6.444606304168701
    5. '    
' → logprob: -6.444606304168701
    6. ' l' → logprob: -7.194606304168701
    7. ' ' → logprob: -7.444606304168701
    8. ' 
' → logprob: -7.694606304168701
    9. '<|end|>' → logprob: -7.694606304168701
    10. '  
' → logprob: -8.06960678100586

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1725778430700302
    2. '   ' → logprob: -2.4225778579711914
    3. ' if' → logprob: -2.9225778579711914
    4. ' l' → logprob: -5.422577857971191
    5. '<|end|>' → logprob: -5.672577857971191
    6. ' res' → logprob: -6.672577857971191
    7. ' 
' → logprob: -6.797577857971191
    8. '    
' → logprob: -6.797577857971191
    9. 'if' → logprob: -7.172577857971191
    10. 'l' → logprob: -7.547577857971191

Token 143: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8394253253936768
    2. ' if' → logprob: -1.0894253253936768
    3. 'r' → logprob: -2.0894253253936768
    4. 'l' → logprob: -3.3394253253936768
    5. 'pos' → logprob: -3.8394253253936768
    6. 'res' → logprob: -4.464425086975098
    7. '   ' → logprob: -4.464425086975098
    8. ' res' → logprob: -5.339425086975098
    9. ' r' → logprob: -5.714425086975098
    10. 'count' → logprob: -6.089425086975098

Token 144: ' l' (ID: 305)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.37307536602020264
    2. ' l' → logprob: -2.123075485229492
    3. ' pos' → logprob: -2.498075485229492
    4. ' r' → logprob: -2.873075485229492
    5. ' left' → logprob: -3.373075485229492
    6. 'start' → logprob: -5.373075485229492
    7. ' not' → logprob: -5.498075485229492
    8. ' res' → logprob: -6.248075485229492
    9. 'pos' → logprob: -6.373075485229492
    10. 'r' → logprob: -6.623075485229492

Token 145: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0037794087547808886
    2. '<' → logprob: -5.878779411315918
    3. ' -' → logprob: -8.003779411315918
    4. ' >' → logprob: -8.878779411315918
    5. '<a' → logprob: -9.003779411315918
    6. ' +' → logprob: -9.128779411315918
    7. ' <=' → logprob: -9.628779411315918
    8. '+' → logprob: -9.628779411315918
    9. '-' → logprob: -9.878779411315918
    10. 'a' → logprob: -11.003779411315918

Token 146: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04300900548696518
    2. ' a' → logprob: -3.168009042739868
    3. ' ' → logprob: -12.168008804321289
    4. 'l' → logprob: -13.668008804321289
    5. '   ' → logprob: -13.793008804321289
    6. '	a' → logprob: -15.043008804321289
    7. 'pos' → logprob: -15.230508804321289
    8. ' l' → logprob: -15.355508804321289
    9. ''a' → logprob: -15.480508804321289
    10. '```' → logprob: -15.668008804321289

Token 147: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07146666944026947
    2. 'and' → logprob: -2.6964666843414307
    3. ' <' → logprob: -6.696466445922852
    4. '+' → logprob: -8.821466445922852
    5. ' +' → logprob: -10.071466445922852
    6. '<' → logprob: -10.321466445922852
    7. 'a' → logprob: -10.946466445922852
    8. ' a' → logprob: -11.196466445922852
    9. '-' → logprob: -11.321466445922852
    10. ' ' → logprob: -11.946466445922852

Token 148: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.04319009929895401
    2. 't' → logprob: -3.1681900024414062
    3. 'pos' → logprob: -9.668190002441406
    4. ' pos' → logprob: -10.418190002441406
    5. ' ' → logprob: -10.918190002441406
    6. 'r' → logprob: -11.043190002441406
    7. '   ' → logprob: -11.980690002441406
    8. ' r' → logprob: -12.043190002441406
    9. ' l' → logprob: -12.293190002441406
    10. ' (' → logprob: -12.355690002441406

Token 149: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0014570204075425863
    2. '[pos' → logprob: -6.626457214355469
    3. '[' → logprob: -9.751457214355469
    4. 'l' → logprob: -11.126457214355469
    5. '[left' → logprob: -11.251457214355469
    6. '```' → logprob: -11.376457214355469
    7. '[
' → logprob: -12.001457214355469
    8. '[r' → logprob: -12.626457214355469
    9. 'pos' → logprob: -13.001457214355469
    10. '[start' → logprob: -13.251457214355469

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11960496008396149
    2. ' ==' → logprob: -3.24460506439209
    3. '==' → logprob: -3.36960506439209
    4. ']==' → logprob: -3.36960506439209
    5. ']=='' → logprob: -5.86960506439209
    6. '=='' → logprob: -6.74460506439209
    7. '+' → logprob: -8.36960506439209
    8. '-' → logprob: -8.74460506439209
    9. '[' → logprob: -8.86960506439209
    10. '']' → logprob: -9.11960506439209

Token 151: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.39306727051734924
    2. '==' → logprob: -1.1430672407150269
    3. '=='' → logprob: -5.143067359924316
    4. '=' → logprob: -8.643067359924316
    5. '[' → logprob: -10.643067359924316
    6. 'l' → logprob: -10.893067359924316
    7. ' =='' → logprob: -10.893067359924316
    8. ' !=' → logprob: -11.268067359924316
    9. '==
' → logprob: -11.393067359924316
    10. '!=' → logprob: -11.393067359924316

Token 152: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08921905606985092
    2. ' '' → logprob: -2.464219093322754
    3. '"' → logprob: -9.214219093322754
    4. ' ' → logprob: -10.214219093322754
    5. ''b' → logprob: -10.339219093322754
    6. ''a' → logprob: -10.464219093322754
    7. ''t' → logprob: -11.339219093322754
    8. '1' → logprob: -11.964219093322754
    9. ''l' → logprob: -11.964219093322754
    10. 'b' → logprob: -12.089219093322754

Token 153: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02092663198709488
    2. '1' → logprob: -4.520926475524902
    3. '0' → logprob: -4.645926475524902
    4. ' '' → logprob: -8.895926475524902
    5. '"' → logprob: -10.020926475524902
    6. ' ' → logprob: -10.520926475524902
    7. '`' → logprob: -12.020926475524902
    8. '   ' → logprob: -13.020926475524902
    9. 'b' → logprob: -13.770926475524902
    10. '```' → logprob: -13.770926475524902

Token 154: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016939718276262283
    2. '':' → logprob: -5.266939640045166
    3. ':
' → logprob: -5.391939640045166
    4. ' :' → logprob: -6.016939640045166
    5. ' and' → logprob: -6.641939640045166
    6. ':l' → logprob: -6.766939640045166
    7. '+' → logprob: -7.016939640045166
    8. '   ' → logprob: -8.016940116882324
    9. '+:' → logprob: -8.766940116882324
    10. ' l' → logprob: -8.891940116882324

Token 155: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.026749800890684128
    2. 'l' → logprob: -3.651749849319458
    3. '   ' → logprob: -8.401749610900879
    4. '	l' → logprob: -9.651749610900879
    5. ' ' → logprob: -9.776749610900879
    6. ' ' → logprob: -9.901749610900879
    7. '    ' → logprob: -11.026749610900879
    8. '1' → logprob: -11.526749610900879
    9. '```' → logprob: -11.901749610900879
    10. '_' → logprob: -12.776749610900879

Token 156: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007115757092833519
    2. '+' → logprob: -5.382115840911865
    3. ' +=' → logprob: -6.007115840911865
    4. '++' → logprob: -10.632115364074707
    5. ']+=' → logprob: -12.882115364074707
    6. '+='' → logprob: -14.007115364074707
    7. '```' → logprob: -14.257115364074707
    8. '+="' → logprob: -14.507115364074707
    9. '   ' → logprob: -14.632115364074707
    10. '<|end|>' → logprob: -14.632115364074707

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.250015258789062
    3. '   ' → logprob: -14.000015258789062
    4. '<|end|>' → logprob: -14.750015258789062
    5. '```' → logprob: -15.250015258789062
    6. '-' → logprob: -16.750015258789062
    7. '0' → logprob: -17.250015258789062
    8. '  ' → logprob: -17.500015258789062
    9. '<|end|>' → logprob: -17.562515258789062
    10. '...' → logprob: -17.562515258789062

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24537312984466553
    2. '
' → logprob: -1.6203731298446655
    3. '    
' → logprob: -4.745373249053955
    4. '<|end|>' → logprob: -5.370373249053955
    5. ',' → logprob: -6.495373249053955
    6. '  
' → logprob: -6.745373249053955
    7. '    ' → logprob: -7.245373249053955
    8. ' if' → logprob: -7.495373249053955
    9. ' ' → logprob: -7.620373249053955
    10. ' 
' → logprob: -7.745373249053955

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017065001651644707
    2. '
' → logprob: -4.517065048217773
    3. 'pos' → logprob: -6.142065048217773
    4. 'if' → logprob: -6.267065048217773
    5. ' if' → logprob: -7.267065048217773
    6. 'r' → logprob: -7.392065048217773
    7. 'l' → logprob: -9.267065048217773
    8. ',' → logprob: -9.392065048217773
    9. '    
' → logprob: -9.517065048217773
    10. ' pos' → logprob: -9.767065048217773

Token 160: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16641546785831451
    2. 'if' → logprob: -2.7914154529571533
    3. ' pos' → logprob: -3.9164154529571533
    4. ' res' → logprob: -4.166415691375732
    5. ' r' → logprob: -4.416415691375732
    6. 'pos' → logprob: -4.666415691375732
    7. '   ' → logprob: -5.041415691375732
    8. ' start' → logprob: -5.291415691375732
    9. 'start' → logprob: -5.291415691375732
    10. 'r' → logprob: -5.541415691375732

Token 161: ' start' (ID: 1604)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9116620421409607
    2. ' start' → logprob: -1.2866621017456055
    3. 'l' → logprob: -2.4116621017456055
    4. 'start' → logprob: -2.4116621017456055
    5. 'pos' → logprob: -2.7866621017456055
    6. ' pos' → logprob: -2.9116621017456055
    7. ' left' → logprob: -4.7866621017456055
    8. ' r' → logprob: -4.9116621017456055
    9. 'left' → logprob: -5.4116621017456055
    10. 'r' → logprob: -5.5366621017456055

Token 162: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011353490874171257
    2. '<' → logprob: -4.511353492736816
    3. ' <=' → logprob: -8.636353492736816
    4. '<a' → logprob: -9.511353492736816
    5. '<=' → logprob: -10.636353492736816
    6. '<n' → logprob: -12.261353492736816
    7. ' ' → logprob: -12.511353492736816
    8. ' !=' → logprob: -12.636353492736816
    9. '<t' → logprob: -12.886353492736816
    10. 'a' → logprob: -13.011353492736816

Token 163: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8071580529212952
    2. 'l' → logprob: -0.8071580529212952
    3. 'pos' → logprob: -2.9321579933166504
    4. ' l' → logprob: -3.4321579933166504
    5. ' a' → logprob: -3.9321579933166504
    6. ' pos' → logprob: -6.93215799331665
    7. 'left' → logprob: -6.93215799331665
    8. 'r' → logprob: -8.307158470153809
    9. 'b' → logprob: -8.682158470153809
    10. ' left' → logprob: -9.432158470153809

Token 164: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0788961797952652
    2. 'and' → logprob: -2.5788962841033936
    3. ' ' → logprob: -12.828896522521973
    4. '   ' → logprob: -12.828896522521973
    5. '=' → logprob: -14.828896522521973
    6. ' or' → logprob: -15.328896522521973
    7. ':
' → logprob: -15.953896522521973
    8. '	and' → logprob: -16.328895568847656
    9. '  ' → logprob: -16.703895568847656
    10. ':' → logprob: -16.828895568847656

Token 165: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1821068674325943
    2. 't' → logprob: -1.807106852531433
    3. 'pos' → logprob: -7.432106971740723
    4. '(t' → logprob: -7.807106971740723
    5. ' pos' → logprob: -7.932106971740723
    6. ' (' → logprob: -7.932106971740723
    7. 'start' → logprob: -8.932106971740723
    8. ' not' → logprob: -9.307106971740723
    9. ' start' → logprob: -9.432106971740723
    10. ' ' → logprob: -9.807106971740723

Token 166: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -5.438573680294212e-06
    2. 'start' → logprob: -13.000005722045898
    3. '[l' → logprob: -13.000005722045898
    4. '[' → logprob: -15.000005722045898
    5. '[pos' → logprob: -16.0000057220459
    6. '[left' → logprob: -16.5000057220459
    7. '[s' → logprob: -16.7500057220459
    8. '```' → logprob: -16.8750057220459
    9. '[end' → logprob: -17.7500057220459
    10. ' [' → logprob: -18.0000057220459

Token 167: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43075698614120483
    2. ' ==' → logprob: -1.4307570457458496
    3. ']' → logprob: -2.5557570457458496
    4. '=='' → logprob: -3.8057570457458496
    5. ']==' → logprob: -5.05575704574585
    6. ']=='' → logprob: -6.55575704574585
    7. '']' → logprob: -7.43075704574585
    8. ''' → logprob: -7.43075704574585
    9. '=' → logprob: -7.80575704574585
    10. '!=' → logprob: -7.93075704574585

Token 168: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48854291439056396
    2. '==' → logprob: -1.238542914390564
    3. '=='' → logprob: -2.3635430335998535
    4. ' =='' → logprob: -6.8635430335998535
    5. ' !=' → logprob: -7.4885430335998535
    6. ''' → logprob: -7.7385430335998535
    7. '!=' → logprob: -8.738542556762695
    8. '[' → logprob: -9.363542556762695
    9. ' ' → logprob: -9.863542556762695
    10. '=' → logprob: -9.863542556762695

Token 169: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12706418335437775
    2. ' '' → logprob: -2.1270642280578613
    3. '"' → logprob: -9.252063751220703
    4. ' ' → logprob: -11.252063751220703
    5. ' ' → logprob: -12.252063751220703
    6. ''a' → logprob: -13.002063751220703
    7. '1' → logprob: -13.127063751220703
    8. '  ' → logprob: -13.377063751220703
    9. '('' → logprob: -13.564563751220703
    10. ''s' → logprob: -13.689563751220703

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030077893286943436
    2. '0' → logprob: -3.5300779342651367
    3. ''' → logprob: -8.405077934265137
    4. ' ' → logprob: -9.280077934265137
    5. ' '' → logprob: -12.155077934265137
    6. ''s' → logprob: -13.217577934265137
    7. '['' → logprob: -14.905077934265137
    8. '"' → logprob: -15.217577934265137
    9. '[' → logprob: -15.342577934265137
    10. ''>' → logprob: -15.342577934265137

Token 171: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034239597618579865
    2. '':' → logprob: -3.5342395305633545
    3. ':
' → logprob: -5.659239768981934
    4. ' :' → logprob: -8.409239768981934
    5. '':
' → logprob: -8.659239768981934
    6. '):' → logprob: -9.034239768981934
    7. ' and' → logprob: -9.159239768981934
    8. ''' → logprob: -9.784239768981934
    9. ']:' → logprob: -9.909239768981934
    10. '   ' → logprob: -10.159239768981934

Token 172: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.25196030735969543
    2. 'start' → logprob: -1.501960277557373
    3. '   ' → logprob: -11.251960754394531
    4. '1' → logprob: -12.126960754394531
    5. '
' → logprob: -12.501960754394531
    6. ' ' → logprob: -12.626960754394531
    7. '	start' → logprob: -13.001960754394531
    8. ' 
' → logprob: -14.001960754394531
    9. '[start' → logprob: -14.626960754394531
    10. '(start' → logprob: -15.001960754394531

Token 173: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1381610780954361
    2. ' +=' → logprob: -2.1381611824035645
    3. '+' → logprob: -4.5131611824035645
    4. ' +' → logprob: -8.638160705566406
    5. '   ' → logprob: -11.513160705566406
    6. ']+=' → logprob: -12.138160705566406
    7. '<' → logprob: -12.513160705566406
    8. ' ' → logprob: -13.013160705566406
    9. '=' → logprob: -13.388160705566406
    10. '+='' → logprob: -13.513160705566406

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '0' → logprob: -13.500029563903809
    4. '   ' → logprob: -16.375028610229492
    5. '```' → logprob: -17.125028610229492
    6. '
' → logprob: -19.000028610229492
    7. '  ' → logprob: -19.250028610229492
    8. '2' → logprob: -19.750028610229492
    9. '`' → logprob: -20.125028610229492
    10. 'start' → logprob: -20.437528610229492

Token 175: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9563297033309937
    2. '   ' → logprob: -1.2063297033309937
    3. '
' → logprob: -1.8313297033309937
    4. '<|end|>' → logprob: -2.831329822540283
    5. 'if' → logprob: -3.331329822540283
    6. ' 
' → logprob: -4.706329822540283
    7. '```' → logprob: -5.081329822540283
    8. ' while' → logprob: -5.206329822540283
    9. ' and' → logprob: -5.206329822540283
    10. 'start' → logprob: -5.206329822540283

Token 176: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4542384445667267
    2. 'if' → logprob: -1.5792384147644043
    3. '   ' → logprob: -2.0792384147644043
    4. 'start' → logprob: -4.079238414764404
    5. ' while' → logprob: -5.204238414764404
    6. 'while' → logprob: -5.454238414764404
    7. ' start' → logprob: -6.454238414764404
    8. '
' → logprob: -6.704238414764404
    9. '```' → logprob: -7.704238414764404
    10. '[start' → logprob: -7.829238414764404

Token 177: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3475302755832672
    2. ' if' → logprob: -1.3475302457809448
    3. 'while' → logprob: -4.222530364990234
    4. ' while' → logprob: -5.222530364990234
    5. 'start' → logprob: -6.097530364990234
    6. 'r' → logprob: -6.347530364990234
    7. 'pos' → logprob: -6.722530364990234
    8. 'count' → logprob: -6.972530364990234
    9. 'res' → logprob: -7.097530364990234
    10. 'l' → logprob: -7.222530364990234

Token 178: ' z' (ID: 579)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5361923575401306
    2. ' _' → logprob: -1.9111924171447754
    3. 'i' → logprob: -2.4111924171447754
    4. '_' → logprob: -2.6611924171447754
    5. ' x' → logprob: -3.5361924171447754
    6. ' j' → logprob: -3.5361924171447754
    7. 'x' → logprob: -4.661192417144775
    8. 'j' → logprob: -5.411192417144775
    9. ' r' → logprob: -5.411192417144775
    10. ' k' → logprob: -5.661192417144775

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07937682420015335
    2. 'in' → logprob: -2.5793769359588623
    3. ' ' → logprob: -7.954376697540283
    4. '_' → logprob: -9.579377174377441
    5. 'n' → logprob: -10.704377174377441
    6. ',' → logprob: -11.704377174377441
    7. '_in' → logprob: -12.204377174377441
    8. '	in' → logprob: -12.204377174377441
    9. ' _' → logprob: -12.329377174377441
    10. '   ' → logprob: -12.579377174377441

Token 180: ' count' (ID: 3605)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.39568305015563965
    2. ' range' → logprob: -1.1456830501556396
    3. 'count' → logprob: -4.770683288574219
    4. ' count' → logprob: -8.270683288574219
    5. 're' → logprob: -11.020683288574219
    6. '(range' → logprob: -12.270683288574219
    7. ' ' → logprob: -12.395683288574219
    8. '	range' → logprob: -13.020683288574219
    9. ' xrange' → logprob: -13.145683288574219
    10. '_' → logprob: -13.145683288574219

Token 181: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.1799914836883545
    2. '(' → logprob: -1.8049914836883545
    3. '():' → logprob: -8.554991722106934
    4. 'start' → logprob: -11.554991722106934
    5. '(stop' → logprob: -11.554991722106934
    6. '()' → logprob: -12.179991722106934
    7. '():
' → logprob: -12.179991722106934
    8. '()(' → logprob: -12.429991722106934
    9. '(len' → logprob: -12.929991722106934
    10. '((' → logprob: -12.929991722106934

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0870397686958313
    2. '):
' → logprob: -2.9620397090911865
    3. ',' → logprob: -3.5870397090911865
    4. '+' → logprob: -5.962039947509766
    5. ' ):' → logprob: -7.587039947509766
    6. ':' → logprob: -8.587039947509766
    7. '   ' → logprob: -9.212039947509766
    8. ' ,' → logprob: -9.337039947509766
    9. ' +' → logprob: -9.587039947509766
    10. '(' → logprob: -9.587039947509766

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7068986296653748
    2. ' if' → logprob: -0.7068986296653748
    3. 'if' → logprob: -5.0818986892700195
    4. '   ' → logprob: -5.8318986892700195
    5. '<|end|>' → logprob: -6.0818986892700195
    6. ' ' → logprob: -7.3318986892700195
    7. '    ' → logprob: -7.4568986892700195
    8. ':' → logprob: -8.45689868927002
    9. '```' → logprob: -8.70689868927002
    10. '        ' → logprob: -8.70689868927002

Token 184: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0457596480846405
    2. 'if' (adapté à ' if') → logprob: -3.170759677886963
    3. ' ' → logprob: -6.920759677886963
    4. '<|end|>' → logprob: -7.295759677886963
    5. '       ' → logprob: -7.795759677886963
    6. '   ' → logprob: -8.295759201049805
    7. '           ' → logprob: -8.920759201049805
    8. '    ' → logprob: -9.670759201049805
    9. '        ' → logprob: -9.920759201049805
    10. ' z' → logprob: -10.045759201049805

Token 185: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.579352617263794
    2. ' z' → logprob: -0.829352617263794
    3. ' t' → logprob: -6.204352378845215
    4. 't' → logprob: -6.704352378845215
    5. ' not' → logprob: -9.454352378845215
    6. '   ' → logprob: -10.829352378845215
    7. 'not' → logprob: -11.454352378845215
    8. ' (' → logprob: -11.579352378845215
    9. ' ' → logprob: -12.016852378845215
    10. '	z' → logprob: -12.079352378845215

Token 186: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6874737739562988
    2. ' >=' → logprob: -0.9374737739562988
    3. ' ==' → logprob: -2.687473773956299
    4. '==' → logprob: -3.312473773956299
    5. '>' → logprob: -7.687473773956299
    6. ' >' → logprob: -7.687473773956299
    7. '<|end|>' → logprob: -9.43747329711914
    8. ')' → logprob: -11.43747329711914
    9. ' <' → logprob: -11.81247329711914
    10. ']>=' → logprob: -11.93747329711914

Token 187: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1253066509962082
    2. 'l' → logprob: -2.3753066062927246
    3. ' a' → logprob: -4.000306606292725
    4. ' l' → logprob: -5.500306606292725
    5. 'pos' → logprob: -6.125306606292725
    6. 'r' → logprob: -9.625307083129883
    7. ' pos' → logprob: -9.875307083129883
    8. 'res' → logprob: -10.375307083129883
    9. 'b' → logprob: -11.375307083129883
    10. 'len' → logprob: -11.750307083129883

Token 188: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0014213069807738066
    2. 'or' → logprob: -6.6264214515686035
    3. ':' → logprob: -9.376420974731445
    4. '	or' → logprob: -13.001420974731445
    5. ' and' → logprob: -13.251420974731445
    6. ':
' → logprob: -13.251420974731445
    7. ')' → logprob: -14.001420974731445
    8. ' ' → logprob: -14.001420974731445
    9. '<|end|>' → logprob: -14.126420974731445
    10. ',' → logprob: -14.376420974731445

Token 189: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008374620229005814
    2. ' t' → logprob: -5.1333746910095215
    3. 'z' → logprob: -6.8833746910095215
    4. 'pos' → logprob: -7.8833746910095215
    5. 'r' → logprob: -8.258374214172363
    6. 'l' → logprob: -8.258374214172363
    7. 'not' → logprob: -8.883374214172363
    8. '(t' → logprob: -9.258374214172363
    9. '   ' → logprob: -9.508374214172363
    10. 'res' → logprob: -9.883374214172363

Token 190: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -4.334533878136426e-05
    2. '[' → logprob: -10.125042915344238
    3. 'z' → logprob: -13.375042915344238
    4. '[x' → logprob: -14.875042915344238
    5. '[s' → logprob: -15.125042915344238
    6. ' [' → logprob: -15.750042915344238
    7. '[l' → logprob: -16.125043869018555
    8. '[t' → logprob: -16.250043869018555
    9. '```' → logprob: -16.500043869018555
    10. '[y' → logprob: -16.500043869018555

Token 191: ']!='' (ID: 187656)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6638655662536621
    2. '=='' → logprob: -0.9138655662536621
    3. ' ==' → logprob: -2.788865566253662
    4. '!=' → logprob: -4.913865566253662
    5. ']==' → logprob: -5.288865566253662
    6. ']=='' → logprob: -5.663865566253662
    7. ']' → logprob: -6.038865566253662
    8. '!='' → logprob: -6.038865566253662
    9. ' !=' → logprob: -6.788865566253662
    10. ' =='' → logprob: -7.913865566253662

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026319457218050957
    2. '1' → logprob: -3.6513195037841797
    3. ''' → logprob: -11.83881950378418
    4. ' ' → logprob: -11.90131950378418
    5. '')' → logprob: -14.02631950378418
    6. ' '' → logprob: -15.02631950378418
    7. ''s' → logprob: -15.08881950378418
    8. '`' → logprob: -15.33881950378418
    9. '-' → logprob: -15.46381950378418
    10. '['' → logprob: -15.52631950378418

Token 193: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03829439356923103
    2. ' or' → logprob: -3.5382943153381348
    3. ':
' → logprob: -4.788294315338135
    4. '       ' → logprob: -9.913294792175293
    5. ':return' → logprob: -10.163294792175293
    6. '           ' → logprob: -10.288294792175293
    7. '):' → logprob: -10.788294792175293
    8. ' :' → logprob: -11.413294792175293
    9. '':' → logprob: -12.163294792175293
    10. '   ' → logprob: -12.288294792175293

Token 194: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34010252356529236
    2. '           ' → logprob: -1.9651025533676147
    3. ' or' → logprob: -2.465102434158325
    4. ':
' → logprob: -3.090102434158325
    5. ' break' → logprob: -4.590102672576904
    6. 'break' → logprob: -4.965102672576904
    7. '   ' → logprob: -8.340102195739746
    8. '       ' → logprob: -8.840102195739746
    9. '	break' → logprob: -10.715102195739746
    10. ':
' → logprob: -10.840102195739746

Token 195: ' start' (ID: 1604)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3315592110157013
    2. '           ' → logprob: -1.956559181213379
    3. 'break' → logprob: -2.081559181213379
    4. 'start' (adapté à ' start') → logprob: -4.831559181213379
    5. ' start' → logprob: -5.081559181213379
    6. '       ' → logprob: -6.706559181213379
    7. '   ' → logprob: -8.206559181213379
    8. ' ' → logprob: -8.331559181213379
    9. '               ' → logprob: -9.081559181213379
    10. '	break' → logprob: -11.331559181213379

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03807362541556358
    2. ' =' → logprob: -3.2880735397338867
    3. '+=' → logprob: -10.413073539733887
    4. ' +=' → logprob: -13.538073539733887
    5. '=
' → logprob: -15.413073539733887
    6. '<=' → logprob: -16.288074493408203
    7. '           ' → logprob: -16.288074493408203
    8. ' ' → logprob: -16.538074493408203
    9. '=z' → logprob: -16.538074493408203
    10. '+' → logprob: -16.913074493408203

Token 197: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03364800289273262
    2. ' z' → logprob: -3.4086480140686035
    3. '	z' → logprob: -14.283647537231445
    4. 'max' → logprob: -15.033647537231445
    5. '(z' → logprob: -15.283647537231445
    6. ' ' → logprob: -15.408647537231445
    7. '0' → logprob: -15.783647537231445
    8. '   ' → logprob: -16.158647537231445
    9. '=z' → logprob: -16.533647537231445
    10. 's' → logprob: -16.658647537231445

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005749551928602159
    2. '
' → logprob: -7.750575065612793
    3. 'break' → logprob: -10.000575065612793
    4. '            
' → logprob: -10.375575065612793
    5. '       ' → logprob: -10.625575065612793
    6. ';' → logprob: -11.750575065612793
    7. ' break' → logprob: -11.875575065612793
    8. '   ' → logprob: -11.875575065612793
    9. '+' → logprob: -12.250575065612793
    10. '               ' → logprob: -12.750575065612793

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018703622743487358
    2. '
' → logprob: -4.018703460693359
    3. '            
' → logprob: -8.39370346069336
    4. 'break' → logprob: -8.64370346069336
    5. ';' → logprob: -10.26870346069336
    6. ' break' → logprob: -10.51870346069336
    7. '       ' → logprob: -11.14370346069336
    8. ' 
' → logprob: -11.26870346069336
    9. '   ' → logprob: -11.76870346069336
    10. ',' → logprob: -11.89370346069336

Token 200: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4098871946334839
    2. '           ' → logprob: -1.1598871946334839
    3. ' break' → logprob: -3.7848873138427734
    4. '       ' → logprob: -10.409887313842773
    5. '   ' → logprob: -12.034887313842773
    6. '	break' → logprob: -13.534887313842773
    7. 'print' → logprob: -13.909887313842773
    8. 'b' → logprob: -14.409887313842773
    9. '
' → logprob: -14.659887313842773
    10. ' ' → logprob: -14.659887313842773

Token 201: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6228907108306885
    2. '   ' → logprob: -1.3728907108306885
    3. 'if' → logprob: -2.9978907108306885
    4. '<|end|>' → logprob: -2.9978907108306885
    5. ':' → logprob: -3.2478907108306885
    6. '
' → logprob: -3.9978907108306885
    7. 'res' → logprob: -4.122890472412109
    8. '```' → logprob: -4.622890472412109
    9. ':
' → logprob: -5.247890472412109
    10. '       ' → logprob: -5.622890472412109

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03278050199151039
    2. '
' → logprob: -4.282780647277832
    3. 'if' → logprob: -5.032780647277832
    4. ' if' → logprob: -5.407780647277832
    5. '<|end|>' → logprob: -5.532780647277832
    6. 'res' → logprob: -6.657780647277832
    7. ' res' → logprob: -7.032780647277832
    8. '       ' → logprob: -8.407780647277832
    9. ',' → logprob: -8.657780647277832
    10. '    
' → logprob: -9.032780647277832

Token 203: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.053290244191884995
    2. ' if' → logprob: -3.8032901287078857
    3. '   ' → logprob: -4.678290367126465
    4. 'r' → logprob: -5.178290367126465
    5. 'res' (adapté à ' res') → logprob: -5.803290367126465
    6. '```' → logprob: -6.553290367126465
    7. 'b' → logprob: -6.678290367126465
    8. 'left' → logprob: -6.803290367126465
    9. 'length' → logprob: -7.178290367126465
    10. 'diff' → logprob: -7.178290367126465

Token 204: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20767636597156525
    2. ' =' → logprob: -2.457676410675049
    3. '+=' → logprob: -2.582676410675049
    4. '=' → logprob: -3.832676410675049
    5. ' -=' → logprob: -5.957676410675049
    6. ',' → logprob: -7.832676410675049
    7. ' ' → logprob: -8.33267593383789
    8. '+' → logprob: -8.33267593383789
    9. ' <' → logprob: -8.58267593383789
    10. '>' → logprob: -8.70767593383789

Token 205: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.020589888095855713
    2. 'max' → logprob: -3.895589828491211
    3. ' min' → logprob: -10.020589828491211
    4. 'min' → logprob: -12.895589828491211
    5. '	max' → logprob: -15.145589828491211
    6. '(max' → logprob: -15.395589828491211
    7. ' ' → logprob: -15.645589828491211
    8. ' res' → logprob: -15.895589828491211
    9. ' ' → logprob: -17.14558982849121
    10. '_max' → logprob: -17.52058982849121

Token 206: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.990154047845863e-05
    2. '(' → logprob: -10.000049591064453
    3. '(pos' → logprob: -12.750049591064453
    4. 'res' → logprob: -13.875049591064453
    5. '(r' → logprob: -15.375049591064453
    6. '(
' → logprob: -16.250049591064453
    7. ' (' → logprob: -16.625049591064453
    8. ' res' → logprob: -16.875049591064453
    9. '(max' → logprob: -16.875049591064453
    10. '(re' → logprob: -17.250049591064453

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0055765449069440365
    2. ' ,' → logprob: -5.2555766105651855
    3. ',l' → logprob: -8.630576133728027
    4. ',res' → logprob: -8.880576133728027
    5. ',pos' → logprob: -10.880576133728027
    6. ',
' → logprob: -13.130576133728027
    7. ',start' → logprob: -14.130576133728027
    8. ',len' → logprob: -14.505576133728027
    9. ' -' → logprob: -14.505576133728027
    10. ',p' → logprob: -14.755576133728027

Token 208: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1158483475446701
    2. ' l' → logprob: -2.2408483028411865
    3. 'pos' → logprob: -6.865848541259766
    4. ' min' → logprob: -7.490848541259766
    5. 'min' → logprob: -7.615848541259766
    6. 'res' → logprob: -8.240848541259766
    7. ' res' → logprob: -8.615848541259766
    8. '   ' → logprob: -8.740848541259766
    9. ' pos' → logprob: -8.865848541259766
    10. 'r' → logprob: -9.740848541259766

Token 209: ' -' (ID: 533)
  Prédit: '-start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-start' → logprob: -0.8117992877960205
    2. ' -' → logprob: -1.0617992877960205
    3. '-' → logprob: -1.5617992877960205
    4. '+' → logprob: -8.186799049377441
    5. ' +' → logprob: -10.811799049377441
    6. ')' → logprob: -10.811799049377441
    7. '   ' → logprob: -11.436799049377441
    8. ' ' → logprob: -12.186799049377441
    9. '-left' → logprob: -12.436799049377441
    10. ')-' → logprob: -13.686799049377441

Token 210: ' start' (ID: 1604)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31431183218955994
    2. 'start' → logprob: -2.1893117427825928
    3. '(r' → logprob: -2.8143117427825928
    4. '(start' → logprob: -3.3143117427825928
    5. 'z' → logprob: -3.6893117427825928
    6. '(z' → logprob: -4.439311981201172
    7. 'b' → logprob: -5.564311981201172
    8. '(' → logprob: -5.689311981201172
    9. ' (' → logprob: -6.064311981201172
    10. '(b' → logprob: -6.189311981201172

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026481198146939278
    2. ' )' → logprob: -4.2764811515808105
    3. '+' → logprob: -4.5264811515808105
    4. ' +' → logprob: -7.0264811515808105
    5. ')
' → logprob: -8.026481628417969
    6. '-' → logprob: -8.901481628417969
    7. '   ' → logprob: -10.901481628417969
    8. ' )
' → logprob: -10.901481628417969
    9. ' -' → logprob: -11.276481628417969
    10. '+)' → logprob: -12.026481628417969

Token 212: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005687138065695763
    2. '<|end|>' → logprob: -5.505687236785889
    3. ' print' → logprob: -7.880687236785889
    4. ')' → logprob: -7.880687236785889
    5. '```' → logprob: -8.13068675994873
    6. 'return' → logprob: -9.00568675994873
    7. '
' → logprob: -9.00568675994873
    8. '#' → logprob: -9.50568675994873
    9. '   ' → logprob: -9.75568675994873
    10. 'if' → logprob: -10.25568675994873

Token 213: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.16466686129570007
    2. 'if' → logprob: -2.6646668910980225
    3. 'start' → logprob: -2.9146668910980225
    4. '   ' → logprob: -4.539666652679443
    5. 'r' → logprob: -4.789666652679443
    6. ' pos' → logprob: -5.664666652679443
    7. ' if' → logprob: -6.164666652679443
    8. 'res' → logprob: -7.164666652679443
    9. 'l' → logprob: -7.164666652679443
    10. 'b' → logprob: -7.539666652679443

Token 214: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1029859408736229
    2. ' +=' → logprob: -2.3529858589172363
    3. '=' → logprob: -5.977985858917236
    4. '+' → logprob: -8.977986335754395
    5. ' =' → logprob: -9.102986335754395
    6. ' +' → logprob: -13.352986335754395
    7. '++' → logprob: -13.727986335754395
    8. '+='' → logprob: -15.227986335754395
    9. ')' → logprob: -15.602986335754395
    10. ' ' → logprob: -15.727986335754395

Token 215: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4271193742752075
    2. ' l' → logprob: -1.1771193742752075
    3. ' advance' → logprob: -3.677119255065918
    4. 'advance' → logprob: -4.302119255065918
    5. 'r' → logprob: -8.927119255065918
    6. 'start' → logprob: -9.302119255065918
    7. ' start' → logprob: -10.052119255065918
    8. 'a' → logprob: -10.052119255065918
    9. ' r' → logprob: -10.177119255065918
    10. 'pos' → logprob: -10.302119255065918

Token 216: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0032335598953068256
    2. '(' → logprob: -5.753233432769775
    3. 'res' → logprob: -10.128233909606934
    4. ' res' → logprob: -12.378233909606934
    5. '(max' → logprob: -12.628233909606934
    6. '()' → logprob: -12.753233909606934
    7. '('' → logprob: -13.003233909606934
    8. ' (' → logprob: -13.378233909606934
    9. '(
' → logprob: -13.753233909606934
    10. '(len' → logprob: -15.003233909606934

Token 219: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.096126576769166e-05
    2. ' )' → logprob: -10.375041007995605
    3. '+' → logprob: -11.625041007995605
    4. '+)' → logprob: -15.375041007995605
    5. ')
' → logprob: -15.625041007995605
    6. ')`' → logprob: -16.12504005432129
    7. ')#' → logprob: -16.50004005432129
    8. '')' → logprob: -16.75004005432129
    9. '))' → logprob: -16.75004005432129
    10. '```' → logprob: -17.37504005432129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 217
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 38.71%
Précision adaptée (1ère position): 40.55%
Précision (top 10): 80.18%
================================================================================
