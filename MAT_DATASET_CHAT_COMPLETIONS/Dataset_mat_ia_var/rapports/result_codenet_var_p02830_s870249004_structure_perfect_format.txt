================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S, T = input().split()
ans = []
for n in range(N):
    ans.append(S[n])
    ans.append(T[n])
print("".join(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41657310724258423
    2. '.' → logprob: -1.1665730476379395
    3. '=' → logprob: -3.9165730476379395
    4. ' =' → logprob: -5.0415730476379395
    5. '+' → logprob: -7.2915730476379395
    6. '_' → logprob: -8.041573524475098
    7. '[:]' → logprob: -8.166573524475098
    8. ')' → logprob: -8.291573524475098
    9. '[i' → logprob: -8.541573524475098
    10. '\[' → logprob: -8.666573524475098

Token 7: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5259730219841003
    2. '=' → logprob: -1.9009730815887451
    3. ' =' → logprob: -2.650973081588745
    4. ' T' → logprob: -2.775973081588745
    5. ' ' → logprob: -3.525973081588745
    6. 'S' → logprob: -3.900973081588745
    7. 'A' → logprob: -4.150972843170166
    8. '_' → logprob: -4.400972843170166
    9. 'a' → logprob: -4.650972843170166
    10. 'D' → logprob: -5.025972843170166

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602318435907364
    2. ' =' → logprob: -1.9102318286895752
    3. ',' → logprob: -12.910231590270996
    4. '=input' → logprob: -12.910231590270996
    5. ' ' → logprob: -13.785231590270996
    6. '[' → logprob: -15.160231590270996
    7. '=

' → logprob: -15.660231590270996
    8. '＝' → logprob: -15.660231590270996
    9. '=int' → logprob: -16.160232543945312
    10. '```' → logprob: -16.285232543945312

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05371580272912979
    2. ' input' → logprob: -3.053715705871582
    3. 'map' → logprob: -5.428715705871582
    4. ' map' → logprob: -7.678715705871582
    5. '(input' → logprob: -9.553715705871582
    6. '[input' → logprob: -9.553715705871582
    7. 'int' → logprob: -9.803715705871582
    8. ' ' → logprob: -11.303715705871582
    9. 'list' → logprob: -11.428715705871582
    10. '<input' → logprob: -11.553715705871582

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018812663853168488
    2. '()' → logprob: -4.018812656402588
    3. '('' → logprob: -8.143813133239746
    4. '(
' → logprob: -9.268813133239746
    5. ')' → logprob: -10.018813133239746
    6. ''' → logprob: -10.143813133239746
    7. '().' → logprob: -10.268813133239746
    8. '("("' → logprob: -10.268813133239746
    9. '```' → logprob: -10.518813133239746
    10. ' (' → logprob: -10.768813133239746

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00034416402922943234
    2. 'strip' → logprob: -8.125344276428223
    3. 'spl' → logprob: -10.875344276428223
    4. ' split' → logprob: -11.375344276428223
    5. 'sp' → logprob: -11.625344276428223
    6. 's' → logprob: -12.000344276428223
    7. 'rstrip' → logprob: -13.500344276428223
    8. 'replace' → logprob: -13.875344276428223
    9. '.split' → logprob: -15.625344276428223
    10. 'rs' → logprob: -16.250343322753906

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09301630407571793
    2. '('' → logprob: -2.9680163860321045
    3. '()' → logprob: -3.5930163860321045
    4. '("("' → logprob: -4.843016147613525
    5. '("' → logprob: -6.843016147613525
    6. '(`' → logprob: -8.968016624450684
    7. '`' → logprob: -9.093016624450684
    8. '((' → logprob: -9.093016624450684
    9. '(
' → logprob: -9.218016624450684
    10. '(()' → logprob: -9.218016624450684

Token 13: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8954798579216003
    2. 'print' → logprob: -1.1454799175262451
    3. 'result' → logprob: -1.5204799175262451
    4. 'U' → logprob: -4.645479679107666
    5. 'A' → logprob: -4.770479679107666
    6. 'r' → logprob: -4.895479679107666
    7. 'a' → logprob: -5.020479679107666
    8. 'ans' → logprob: -5.145479679107666
    9. 'answer' → logprob: -5.270479679107666
    10. 'R' → logprob: -6.645479679107666

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038351863622665405
    2. '=' → logprob: -3.2883517742156982
    3. ' +=' → logprob: -8.788352012634277
    4. '_' → logprob: -9.413352012634277
    5. ' ' → logprob: -9.788352012634277
    6. '+=' → logprob: -12.288352012634277
    7. '_=' → logprob: -13.288352012634277
    8. ' =)' → logprob: -13.413352012634277
    9. '[:]' → logprob: -13.663352012634277
    10. ',' → logprob: -13.788352012634277

Token 15: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.06713657081127167
    2. '''' → logprob: -2.817136526107788
    3. '"' → logprob: -6.067136764526367
    4. 'S' → logprob: -6.567136764526367
    5. 'T' → logprob: -7.317136764526367
    6. '[]' → logprob: -7.692136764526367
    7. ' ""' → logprob: -9.692136764526367
    8. '0' → logprob: -9.692136764526367
    9. '"T' → logprob: -10.192136764526367
    10. ''' → logprob: -10.442136764526367

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.173704271830502e-06
    2. ' for' → logprob: -13.37500286102295
    3. '```' → logprob: -13.37500286102295
    4. '	for' → logprob: -18.000003814697266
    5. 'f' → logprob: -18.375003814697266
    6. '[' → logprob: -18.500003814697266
    7. 'F' → logprob: -18.875003814697266
    8. '`' → logprob: -18.875003814697266
    9. '``' → logprob: -19.000003814697266
    10. '#' → logprob: -19.875003814697266

Token 17: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06746679544448853
    2. ' ' → logprob: -3.3174667358398438
    3. ' _' → logprob: -3.8174667358398438
    4. '_' → logprob: -5.067466735839844
    5. 'i' → logprob: -7.317466735839844
    6. '  ' → logprob: -10.567466735839844
    7. ' ‌' → logprob: -12.192466735839844
    8. '_i' → logprob: -12.442466735839844
    9. ' `' → logprob: -12.692466735839844
    10. ' ' → logprob: -12.817466735839844

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10222512483596802
    2. 'in' → logprob: -2.3522250652313232
    3. ' ' → logprob: -6.352225303649902
    4. 'n' → logprob: -9.102225303649902
    5. 'range' → logprob: -10.227225303649902
    6. '  ' → logprob: -10.352225303649902
    7. ' i' → logprob: -10.352225303649902
    8. 'i' → logprob: -10.727225303649902
    9. '_' → logprob: -11.602225303649902
    10. 'space' → logprob: -11.977225303649902

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868798017501831
    2. ' range' → logprob: -1.136879801750183
    3. '	range' → logprob: -12.511879920959473
    4. ' ' → logprob: -13.261879920959473
    5. 'N' → logprob: -14.511879920959473
    6. ' S' → logprob: -14.636879920959473
    7. '(range' → logprob: -14.636879920959473
    8. 'S' → logprob: -15.011879920959473
    9. 'rang' → logprob: -15.386879920959473
    10. 'ran' → logprob: -15.511879920959473

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10030490159988403
    2. '(N' → logprob: -2.3503048419952393
    3. '(n' → logprob: -9.85030460357666
    4. ' (' → logprob: -10.22530460357666
    5. '(len' → logprob: -12.22530460357666
    6. '(
' → logprob: -13.10030460357666
    7. '(S' → logprob: -14.72530460357666
    8. '((' → logprob: -14.85030460357666
    9. '（' → logprob: -15.35030460357666
    10. '(`' → logprob: -15.60030460357666

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008431835100054741
    2. ')' → logprob: -5.508431911468506
    3. '+' → logprob: -5.758431911468506
    4. ' ):' → logprob: -7.008431911468506
    5. ':' → logprob: -8.758431434631348
    6. '):
' → logprob: -9.258431434631348
    7. '-' → logprob: -11.883431434631348
    8. '+:' → logprob: -12.008431434631348
    9. ' +' → logprob: -12.383431434631348
    10. ' )' → logprob: -12.508431434631348

Token 22: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04805136099457741
    2. 'ans' → logprob: -3.548051357269287
    3. '   ' → logprob: -4.548051357269287
    4. '    
' → logprob: -6.298051357269287
    5. ' if' → logprob: -6.423051357269287
    6. '	ans' → logprob: -7.298051357269287
    7. '(ans' → logprob: -7.423051357269287
    8. ' ' → logprob: -7.798051357269287
    9. '```' → logprob: -7.923051357269287
    10. ' S' → logprob: -8.048051834106445

Token 23: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.09280317276716232
    2. 'if' → logprob: -3.2178032398223877
    3. ' ans' → logprob: -3.3428032398223877
    4. '(ans' → logprob: -5.092803001403809
    5. ' if' → logprob: -5.842803001403809
    6. 'S' → logprob: -6.342803001403809
    7. 'a' → logprob: -6.842803001403809
    8. 's' → logprob: -7.467803001403809
    9. 'for' → logprob: -9.092803001403809
    10. '	ans' → logprob: -9.092803001403809

Token 24: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04329489916563034
    2. '.' → logprob: -3.168294906616211
    3. '.extend' → logprob: -8.543294906616211
    4. '.ap' → logprob: -10.168294906616211
    5. '.app' → logprob: -10.293294906616211
    6. ' .' → logprob: -11.418294906616211
    7. '.a' → logprob: -12.543294906616211
    8. '.Append' → logprob: -12.543294906616211
    9. 'append' → logprob: -12.793294906616211
    10. '_append' → logprob: -13.043294906616211

Token 25: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.22877144813537598
    2. '(' → logprob: -1.728771448135376
    3. '((' → logprob: -3.728771448135376
    4. '(T' → logprob: -6.853771209716797
    5. '(int' → logprob: -7.353771209716797
    6. '([' → logprob: -8.228771209716797
    7. '('' → logprob: -8.228771209716797
    8. '(
' → logprob: -8.853771209716797
    9. '(f' → logprob: -9.103771209716797
    10. '(s' → logprob: -9.603771209716797

Token 26: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.009862331673502922
    2. '[' → logprob: -4.634862422943115
    3. '[T' → logprob: -9.759861946105957
    4. '[t' → logprob: -10.759861946105957
    5. 'n' → logprob: -11.634861946105957
    6. '[int' → logprob: -12.009861946105957
    7. '[N' → logprob: -12.634861946105957
    8. '[
' → logprob: -12.759861946105957
    9. '[:' → logprob: -14.259861946105957
    10. '[[' → logprob: -14.509861946105957

Token 27: '])
' (ID: 5169)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.02481534704566002
    2. ']' → logprob: -4.399815559387207
    3. '+' → logprob: -5.149815559387207
    4. '])' → logprob: -5.649815559387207
    5. ')' → logprob: -6.774815559387207
    6. '])
' → logprob: -7.149815559387207
    7. ' T' → logprob: -7.899815559387207
    8. ']+' → logprob: -8.274815559387207
    9. ')
' → logprob: -9.274815559387207
    10. '   ' → logprob: -10.149815559387207

Token 28: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0056332009844481945
    2. 'ans' → logprob: -5.505633354187012
    3. 'for' → logprob: -7.130633354187012
    4. '+' → logprob: -7.880633354187012
    5. 'print' → logprob: -8.755633354187012
    6. '[' → logprob: -10.130633354187012
    7. '   ' → logprob: -10.380633354187012
    8. '```' → logprob: -10.630633354187012
    9. ' T' → logprob: -10.880633354187012
    10. ' ans' → logprob: -11.380633354187012

Token 29: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0022116350010037422
    2. ' ans' → logprob: -7.127211570739746
    3. '	ans' → logprob: -7.502211570739746
    4. '   ' → logprob: -7.877211570739746
    5. 'answer' → logprob: -8.752211570739746
    6. '(ans' → logprob: -9.127211570739746
    7. '[' → logprob: -9.252211570739746
    8. '_ans' → logprob: -9.502211570739746
    9. '<|end|>' → logprob: -11.752211570739746
    10. 'ank' → logprob: -13.127211570739746

Token 30: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005189551156945527
    2. '.' → logprob: -7.625518798828125
    3. 'append' → logprob: -11.375518798828125
    4. '.extend' → logprob: -11.625518798828125
    5. '.app' → logprob: -12.125518798828125
    6. 'appen' → logprob: -13.375518798828125
    7. '.
' → logprob: -14.375518798828125
    8. ' .' → logprob: -14.625518798828125
    9. '+=' → logprob: -14.625518798828125
    10. '.Append' → logprob: -14.875518798828125

Token 31: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.10032495856285095
    2. '(' → logprob: -2.350324869155884
    3. '((' → logprob: -9.850324630737305
    4. '('' → logprob: -10.225324630737305
    5. '(S' → logprob: -10.850324630737305
    6. '("("' → logprob: -12.725324630737305
    7. '(`' → logprob: -12.975324630737305
    8. '(t' → logprob: -13.475324630737305
    9. '(
' → logprob: -14.350324630737305
    10. ' (' → logprob: -14.600324630737305

Token 32: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.000297685619443655
    2. '[' → logprob: -8.125297546386719
    3. ')' → logprob: -14.750297546386719
    4. 'n' → logprob: -15.125297546386719
    5. '[
' → logprob: -15.125297546386719
    6. ']' → logprob: -15.875297546386719
    7. '[N' → logprob: -16.12529754638672
    8. '```' → logprob: -16.12529754638672
    9. ' [' → logprob: -16.37529754638672
    10. ')[' → logprob: -16.62529754638672

Token 33: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.018562864512205124
    2. ')' → logprob: -4.0185627937316895
    3. ']' → logprob: -7.8935627937316895
    4. '])
' → logprob: -11.018563270568848
    5. ''])' → logprob: -11.643563270568848
    6. ')])' → logprob: -12.393563270568848
    7. ')]' → logprob: -12.643563270568848
    8. '))' → logprob: -12.768563270568848
    9. ')
' → logprob: -13.768563270568848
    10. '})' → logprob: -14.143563270568848

Token 34: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.572941179503687e-05
    2. 'pr' → logprob: -11.000045776367188
    3. 'p' → logprob: -11.625045776367188
    4. 'for' → logprob: -12.250045776367188
    5. '```' → logprob: -12.250045776367188
    6. 'pri' → logprob: -12.875045776367188
    7. 'prin' → logprob: -13.250045776367188
    8. ' print' → logprob: -13.750045776367188
    9. '
' → logprob: -13.875045776367188
    10. ')' → logprob: -14.125045776367188

Token 35: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001308809849433601
    2. '("("' → logprob: -7.126308917999268
    3. '('' → logprob: -8.37630844116211
    4. '(ans' → logprob: -8.50130844116211
    5. '()' → logprob: -9.75130844116211
    6. '(*' → logprob: -12.62630844116211
    7. '(**' → logprob: -13.37630844116211
    8. '((' → logprob: -13.50130844116211
    9. '(`' → logprob: -13.87630844116211
    10. '(

' → logprob: -14.00130844116211

Token 36: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.25324755907058716
    2. '"' → logprob: -1.5032474994659424
    3. '''.' → logprob: -6.7532477378845215
    4. '""' → logprob: -9.503247261047363
    5. '")' → logprob: -9.753247261047363
    6. ' "".' → logprob: -11.503247261047363
    7. '\"' → logprob: -13.003247261047363
    8. ''.' → logprob: -13.628247261047363
    9. ' ''.' → logprob: -14.003247261047363
    10. '''' → logprob: -14.378247261047363

Token 37: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.15310683415737e-05
    2. 'jo' → logprob: -11.125021934509277
    3. 'j' → logprob: -12.000021934509277
    4. ' join' → logprob: -15.375021934509277
    5. 'format' → logprob: -16.25002098083496
    6. '```' → logprob: -16.75002098083496
    7. 'joint' → logprob: -16.87502098083496
    8. 'print' → logprob: -17.00002098083496
    9. 'strip' → logprob: -17.75002098083496
    10. 'jon' → logprob: -17.75002098083496

Token 38: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.500005722045898
    3. 'ans' → logprob: -13.375005722045898
    4. ')' → logprob: -14.500005722045898
    5. '	ans' → logprob: -16.5000057220459
    6. '(answer' → logprob: -17.2500057220459
    7. ' ans' → logprob: -18.8750057220459
    8. ' (' → logprob: -18.8750057220459
    9. '_ans' → logprob: -19.3750057220459
    10. '(
' → logprob: -19.7500057220459

Token 39: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931478381156921
    2. '))' → logprob: -0.6931478381156921
    3. ')))' → logprob: -15.068147659301758
    4. '])' → logprob: -16.568147659301758
    5. '))
' → logprob: -16.943147659301758
    6. '"))' → logprob: -16.943147659301758
    7. '）' → logprob: -17.068147659301758
    8. ')
' → logprob: -17.443147659301758
    9. '})' → logprob: -17.943147659301758
    10. ')")' → logprob: -17.943147659301758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 37.84%
Précision adaptée (1ère position): 43.24%
Précision (top 10): 81.08%
================================================================================
