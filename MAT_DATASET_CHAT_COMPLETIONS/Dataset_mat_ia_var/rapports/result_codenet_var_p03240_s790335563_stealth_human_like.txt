================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

N = int(input())
points = []
# On lit les coordonnées, hauteur
for _ in range(N):
    x, y, h = map(int, input().split())
    points.append([x, y, h])

# Bon, on cherche le point le plus haut
points = sorted(points, key=lambda xx: xx[2], reverse=True)

# Franchement on essaye tous les cas (peut-être y'a mieux?)
for cx in range(101):
    for cy in range(101):
        ok = True
        H = points[0][2] + abs(points[0][0] - cx) + abs(points[0][1] - cy)
        for x, y, h in points:
            calc_h = max(H - abs(x - cx) - abs(y - cy), 0)
            if h != calc_h:
                ok = False
                break
        if ok:
            print(cx, cy, H)
            sys.exit(0)  # bon c'est fini, on sort

# pas censé arriver là normalement...
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3358449339866638
    2. '=' → logprob: -1.3358449935913086
    3. ' ' → logprob: -3.9608449935913086
    4. ',' → logprob: -6.335844993591309
    5. '  ' → logprob: -7.585844993591309
    6. '.' → logprob: -7.710844993591309
    7. '   ' → logprob: -9.085844993591309
    8. '_' → logprob: -9.210844993591309
    9. '=sys' → logprob: -10.085844993591309
    10. ')' → logprob: -10.210844993591309

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005498410668224096
    2. 'int' → logprob: -5.50549840927124
    3. ' ' → logprob: -6.75549840927124
    4. '10' → logprob: -8.505498886108398
    5. '=int' → logprob: -10.755498886108398
    6. '20' → logprob: -11.755498886108398
    7. ' input' → logprob: -11.880498886108398
    8. '32' → logprob: -12.380498886108398
    9. '5' → logprob: -12.505498886108398
    10. '[int' → logprob: -13.255498886108398

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006658526253886521
    2. '(sys' → logprob: -7.375665664672852
    3. '('' → logprob: -11.750665664672852
    4. '("("' → logprob: -11.875665664672852
    5. ' (' → logprob: -12.000665664672852
    6. '(`' → logprob: -12.500665664672852
    7. '(N' → logprob: -12.750665664672852
    8. '(
' → logprob: -12.875665664672852
    9. '(

' → logprob: -13.750665664672852
    10. '(os' → logprob: -13.875665664672852

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022921523079276085
    2. '()' → logprob: -4.022921562194824
    3. ')' → logprob: -5.522921562194824
    4. '(
' → logprob: -8.147921562194824
    5. '())' → logprob: -8.522921562194824
    6. '('' → logprob: -9.022921562194824
    7. '("("' → logprob: -10.022921562194824
    8. '(

' → logprob: -10.147921562194824
    9. '(`' → logprob: -11.147921562194824
    10. '(""))' → logprob: -12.022921562194824

Token 8: 'points' (ID: 14011)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03647952154278755
    2. 'data' → logprob: -4.286479473114014
    3. 'a' → logprob: -5.286479473114014
    4. ' for' → logprob: -5.536479473114014
    5. 'if' → logprob: -5.911479473114014
    6. 's' → logprob: -6.536479473114014
    7. '\n' → logprob: -6.661479473114014
    8. 'result' → logprob: -6.786479473114014
    9. '`' → logprob: -7.411479473114014
    10. ')' → logprob: -7.411479473114014

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14702457189559937
    2. '.' → logprob: -2.022024631500244
    3. '_points' → logprob: -6.647024631500244
    4. '=' → logprob: -6.897024631500244
    5. ' =' → logprob: -7.647024631500244
    6. '[:]' → logprob: -8.022024154663086
    7. '[]' → logprob: -8.147024154663086
    8. ')' → logprob: -8.397024154663086
    9. '_' → logprob: -9.147024154663086
    10. 's' → logprob: -9.522024154663086

Token 10: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.049610428512096405
    2. '[]' → logprob: -3.0496103763580322
    3. '[' → logprob: -7.549610614776611
    4. ' [' → logprob: -7.799610614776611
    5. 'list' → logprob: -10.299610137939453
    6. '[int' → logprob: -10.924610137939453
    7. ' list' → logprob: -11.299610137939453
    8. ' ' → logprob: -11.799610137939453
    9. ' {}' → logprob: -12.924610137939453
    10. '{}' → logprob: -13.049610137939453

Token 11: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004335883539170027
    2. ' for' → logprob: -5.879335880279541
    3. '\n' → logprob: -6.754335880279541
    4. '\' → logprob: -8.1293363571167
    5. '```' → logprob: -11.0043363571167
    6. ' ' → logprob: -11.6293363571167
    7. '[' → logprob: -11.6293363571167
    8. ' 
' → logprob: -11.8793363571167
    9. '
' → logprob: -12.3793363571167
    10. '' → logprob: -12.5043363571167

Token 12: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04858771339058876
    2. ' for' → logprob: -3.0485877990722656
    3. '	for' → logprob: -16.048587799072266
    4. '```' → logprob: -16.423587799072266
    5. 'For' → logprob: -17.048587799072266
    6. ' ' → logprob: -17.548587799072266
    7. ' ' → logprob: -17.798587799072266
    8. '_for' → logprob: -18.923587799072266
    9. ')' → logprob: -19.923587799072266
    10. 'f' → logprob: -20.298587799072266

Token 13: ' lit' (ID: 11980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0036791712045669556
    2. ' the' → logprob: -7.253679275512695
    3. ' e' → logprob: -7.878679275512695
    4. 'each' → logprob: -8.003679275512695
    5. 'eline' → logprob: -8.003679275512695
    6. ' each' → logprob: -8.128679275512695
    7. 'ly' → logprob: -8.128679275512695
    8. 'el' → logprob: -8.128679275512695
    9. 'line' → logprob: -8.253679275512695
    10. 'es' → logprob: -8.378679275512695

Token 14: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2941080629825592
    2. '_' → logprob: -2.5441081523895264
    3. ' les' → logprob: -2.6691081523895264
    4. ' la' → logprob: -3.4191081523895264
    5. '()' → logprob: -4.294107913970947
    6. ' le' → logprob: -4.669107913970947
    7. 's' → logprob: -5.044107913970947
    8. ' the' → logprob: -5.169107913970947
    9. ' l' → logprob: -5.419107913970947
    10. 'l' → logprob: -5.544107913970947

Token 15: ' coordonnées' (ID: 181895)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6467720866203308
    2. ' ' → logprob: -1.5217721462249756
    3. ' lignes' → logprob: -2.5217721462249756
    4. '_' → logprob: -3.0217721462249756
    5. ' coordonnées' → logprob: -3.5217721462249756
    6. ' prochaines' → logprob: -3.7717721462249756
    7. ' données' → logprob: -4.1467719078063965
    8. '_points' → logprob: -5.3967719078063965
    9. ' for' → logprob: -5.5217719078063965
    10. 'points' → logprob: -5.6467719078063965

Token 16: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6003010272979736
    2. ' for' → logprob: -1.4753010272979736
    3. ' ' → logprob: -1.8503010272979736
    4. ',' → logprob: -3.7253010272979736
    5. ' (' → logprob: -4.6003007888793945
    6. '<|end|>' → logprob: -5.1003007888793945
    7. 's' → logprob: -5.3503007888793945
    8. '(' → logprob: -5.6003007888793945
    9. ' ,' → logprob: -5.9753007888793945
    10. ' of' → logprob: -6.7253007888793945

Token 17: ' hauteur' (ID: 72987)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011394861154258251
    2. ' for' → logprob: -4.51139497756958
    3. 'x' → logprob: -8.761394500732422
    4. 'pour' → logprob: -10.136394500732422
    5. ',' → logprob: -11.136394500732422
    6. 'while' → logprob: -11.386394500732422
    7. 'on' → logprob: -11.386394500732422
    8. ' ' → logprob: -11.511394500732422
    9. 's' → logprob: -11.511394500732422
    10. '#' → logprob: -11.761394500732422

Token 18: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5935603380203247
    2. ' ' → logprob: -0.9685603380203247
    3. ' ,' → logprob: -3.218560218811035
    4. 's' → logprob: -4.968560218811035
    5. '<|end|>' → logprob: -5.093560218811035
    6. 'for' → logprob: -5.468560218811035
    7. ' for' → logprob: -5.718560218811035
    8. ')' → logprob: -6.093560218811035
    9. ' (' → logprob: -6.968560218811035
    10. '<|end|>' → logprob: -7.343560218811035

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014206995256245136
    2. ' for' → logprob: -4.264206886291504
    3. ',' → logprob: -10.389206886291504
    4. 'pour' → logprob: -12.389206886291504
    5. 's' → logprob: -13.264206886291504
    6. '<|end|>' → logprob: -13.889206886291504
    7. ')' → logprob: -14.139206886291504
    8. '	for' → logprob: -14.639206886291504
    9. 'des' → logprob: -14.639206886291504
    10. '(' → logprob: -14.639206886291504

Token 20: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5861090421676636
    2. ' _' → logprob: -0.8361090421676636
    3. ' ' → logprob: -4.836109161376953
    4. '_' → logprob: -6.211109161376953
    5. 'i' → logprob: -9.711109161376953
    6. ' ' → logprob: -10.336109161376953
    7. '  ' → logprob: -10.961109161376953
    8. ' range' → logprob: -11.086109161376953
    9. ' point' → logprob: -11.586109161376953
    10. '_i' → logprob: -11.711109161376953

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025622529909014702
    2. 'in' → logprob: -3.775622606277466
    3. ' ' → logprob: -6.400622367858887
    4. ' i' → logprob: -8.025622367858887
    5. 'i' → logprob: -8.400622367858887
    6. ' _' → logprob: -10.150622367858887
    7. '  ' → logprob: -10.525622367858887
    8. '_' → logprob: -10.775622367858887
    9. 'range' → logprob: -10.775622367858887
    10. 'import' → logprob: -11.400622367858887

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061970487236976624
    2. ' range' → logprob: -2.8119704723358154
    3. 'rang' → logprob: -14.061970710754395
    4. 'input' → logprob: -14.436970710754395
    5. '(range' → logprob: -14.686970710754395
    6. '	range' → logprob: -14.811970710754395
    7. 'ran' → logprob: -15.561970710754395
    8. 'ra' → logprob: -16.186969757080078
    9. ' xrange' → logprob: -16.436969757080078
    10. ' ' → logprob: -16.811969757080078

Token 23: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6946288347244263
    2. '(N' → logprob: -0.6946288347244263
    3. ' (' → logprob: -6.694628715515137
    4. ' N' → logprob: -8.694628715515137
    5. 'N' → logprob: -10.444628715515137
    6. '(n' → logprob: -11.194628715515137
    7. '(
' → logprob: -11.319628715515137
    8. '(range' → logprob: -11.819628715515137
    9. '()' → logprob: -12.569628715515137
    10. '(int' → logprob: -12.944628715515137

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019050815608352423
    2. ')' → logprob: -6.7519049644470215
    3. '):
' → logprob: -7.6269049644470215
    4. ' ):' → logprob: -8.50190544128418
    5. ':' → logprob: -10.25190544128418
    6. '):
' → logprob: -12.50190544128418
    7. '+' → logprob: -13.87690544128418
    8. ' )' → logprob: -14.25190544128418
    9. ' ' → logprob: -14.25190544128418
    10. ',' → logprob: -14.37690544128418

Token 25: '   ' (ID: 271)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.04861995577812195
    2. '   ' → logprob: -4.673619747161865
    3. ' 
' → logprob: -4.923619747161865
    4. ' x' → logprob: -5.048619747161865
    5. '	points' → logprob: -5.173619747161865
    6. ' line' → logprob: -5.298619747161865
    7. ' coordinates' → logprob: -5.423619747161865
    8. ' point' → logprob: -6.048619747161865
    9. '    
' → logprob: -6.173619747161865
    10. 'points' → logprob: -6.548619747161865

Token 26: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.03162366524338722
    2. ' x' → logprob: -3.656623601913452
    3. 'points' → logprob: -6.531623840332031
    4. 'coords' → logprob: -6.656623840332031
    5. ' line' → logprob: -7.031623840332031
    6. ' points' → logprob: -7.406623840332031
    7. 'point' → logprob: -8.281623840332031
    8. ' coords' → logprob: -8.656623840332031
    9. 'coord' → logprob: -8.656623840332031
    10. 'line' → logprob: -9.031623840332031

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008717980235815048
    2. ',y' → logprob: -7.375871658325195
    3. ' ,' → logprob: -8.625871658325195
    4. ',p' → logprob: -10.875871658325195
    5. ',x' → logprob: -11.250871658325195
    6. '_,' → logprob: -12.500871658325195
    7. ',user' → logprob: -12.500871658325195
    8. ',int' → logprob: -12.625871658325195
    9. ',n' → logprob: -12.875871658325195
    10. ',a' → logprob: -13.000871658325195

Token 28: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1798459142446518
    2. ' y' → logprob: -1.804845929145813
    3. ' ' → logprob: -9.929845809936523
    4. '<|end|>' → logprob: -10.054845809936523
    5. 'space' → logprob: -13.179845809936523
    6. '<|end|>' → logprob: -13.304845809936523
    7. '    ' → logprob: -13.554845809936523
    8. '_y' → logprob: -13.929845809936523
    9. '	y' → logprob: -14.179845809936523
    10. '_' → logprob: -14.179845809936523

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3648034930229187
    2. '=' → logprob: -1.6148035526275635
    3. ' =' → logprob: -2.2398035526275635
    4. ' ,' → logprob: -8.989803314208984
    5. '<|end|>' → logprob: -9.614803314208984
    6. ' ' → logprob: -10.864803314208984
    7. ')' → logprob: -11.114803314208984
    8. '  ' → logprob: -12.552303314208984
    9. '=int' → logprob: -12.739803314208984
    10. '<|end|>' → logprob: -12.802303314208984

Token 30: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5213290452957153
    2. 'z' → logprob: -1.6463290452957153
    3. ' h' → logprob: -1.8963290452957153
    4. ' z' → logprob: -2.771328926086426
    5. 'H' → logprob: -8.271328926086426
    6. ' ' → logprob: -8.771328926086426
    7. ' H' → logprob: -9.521328926086426
    8. 'height' → logprob: -9.646328926086426
    9. '_' → logprob: -9.896328926086426
    10. 's' → logprob: -10.646328926086426

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4287097454071045
    2. ' =' → logprob: -1.0537097454071045
    3. ' ' → logprob: -12.928709983825684
    4. '=int' → logprob: -13.178709983825684
    5. ')' → logprob: -13.303709983825684
    6. ',' → logprob: -13.803709983825684
    7. '=input' → logprob: -14.303709983825684
    8. '=

' → logprob: -15.803709983825684
    9. '＝' → logprob: -15.928709983825684
    10. '<|end|>' → logprob: -15.928709983825684

Token 32: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002202120842412114
    2. 'map' → logprob: -6.127202033996582
    3. ' ' → logprob: -12.002202033996582
    4. ' list' → logprob: -12.377202033996582
    5. ' ' → logprob: -12.752202033996582
    6. '	map' → logprob: -13.627202033996582
    7. ' [' → logprob: -13.752202033996582
    8. ' input' → logprob: -14.752202033996582
    9. '[' → logprob: -15.002202033996582
    10. ' tuple' → logprob: -15.502202033996582

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0021938022691756487
    2. '(' → logprob: -6.252193927764893
    3. 'int' → logprob: -9.127193450927734
    4. '[int' → logprob: -9.627193450927734
    5. '<int' → logprob: -9.752193450927734
    6. '(input' → logprob: -11.752193450927734
    7. '(lambda' → logprob: -12.502193450927734
    8. '(str' → logprob: -12.627193450927734
    9. '<|end|>' → logprob: -12.627193450927734
    10. '```' → logprob: -12.752193450927734

Token 34: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6339884400367737
    2. ',' → logprob: -1.133988380432129
    3. '(input' → logprob: -2.758988380432129
    4. ')' → logprob: -3.008988380432129
    5. 'input' → logprob: -3.383988380432129
    6. ' input' → logprob: -7.008988380432129
    7. '=input' → logprob: -9.258988380432129
    8. '(' → logprob: -10.008988380432129
    9. ' ,' → logprob: -10.383988380432129
    10. '),' → logprob: -10.508988380432129

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3144418001174927
    2. ' input' → logprob: -1.3144418001174927
    3. 'sys' → logprob: -7.064441680908203
    4. ' sys' → logprob: -8.064441680908203
    5. ')' → logprob: -11.814441680908203
    6. ' ' → logprob: -14.189441680908203
    7. '_input' → logprob: -15.064441680908203
    8. '=input' → logprob: -15.064441680908203
    9. '	input' → logprob: -15.189441680908203
    10. ' )' → logprob: -15.814441680908203

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -13.12500286102295
    3. ' ().' → logprob: -15.00000286102295
    4. ')' → logprob: -15.62500286102295
    5. '())' → logprob: -16.375001907348633
    6. '(' → logprob: -17.375001907348633
    7. '.split' → logprob: -19.125001907348633
    8. '('').' → logprob: -19.250001907348633
    9. '()
' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.375001907348633

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011859419755637646
    2. 'strip' → logprob: -6.751185894012451
    3. 'rstrip' → logprob: -11.25118637084961
    4. ')' → logprob: -13.25118637084961
    5. '(split' → logprob: -14.25118637084961
    6. ' split' → logprob: -15.50118637084961
    7. 'spl' → logprob: -16.50118637084961
    8. 's' → logprob: -17.62618637084961
    9. 'sp' → logprob: -17.75118637084961
    10. '.split' → logprob: -18.12618637084961

Token 38: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0913977399468422
    2. '))' → logprob: -2.591397762298584
    3. '())' → logprob: -4.466397762298584
    4. '()' → logprob: -7.341397762298584
    5. '()))' → logprob: -8.216397285461426
    6. ')))' → logprob: -12.216397285461426
    7. ' )' → logprob: -12.716397285461426
    8. ')
' → logprob: -12.716397285461426
    9. '(' → logprob: -13.216397285461426
    10. ')")' → logprob: -13.216397285461426

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04880708083510399
    2. ')' → logprob: -3.798807144165039
    3. '<|end|>' → logprob: -4.298807144165039
    4. 'points' → logprob: -5.173807144165039
    5. ' points' → logprob: -6.048807144165039
    6. '	points' → logprob: -6.673807144165039
    7. '    
' → logprob: -7.298807144165039
    8. '(points' → logprob: -7.923807144165039
    9. '<|end|>' → logprob: -8.548807144165039
    10. '  ' → logprob: -8.798807144165039

Token 40: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.35410553216934204
    2. '   ' → logprob: -1.4791054725646973
    3. ' points' → logprob: -2.7291054725646973
    4. '	points' → logprob: -5.854105472564697
    5. ')' → logprob: -7.229105472564697
    6. 'p' → logprob: -7.479105472564697
    7. '(points' → logprob: -7.979105472564697
    8. 'if' → logprob: -9.229105949401855
    9. '_points' → logprob: -9.354105949401855
    10. ' if' → logprob: -9.604105949401855

Token 41: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4741947650909424
    2. '.' → logprob: -0.9741947650909424
    3. '.extend' → logprob: -10.349194526672363
    4. '.push' → logprob: -10.849194526672363
    5. '.app' → logprob: -11.599194526672363
    6. '.p' → logprob: -11.599194526672363
    7. ' .' → logprob: -11.724194526672363
    8. ').' → logprob: -12.099194526672363
    9. '.setdefault' → logprob: -12.224194526672363
    10. '.add' → logprob: -12.724194526672363

Token 42: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0024813658092170954
    2. '(' → logprob: -6.002481460571289
    3. '(x' → logprob: -12.502481460571289
    4. ' ((' → logprob: -14.627481460571289
    5. '(('' → logprob: -14.877481460571289
    6. '(((' → logprob: -15.002481460571289
    7. '(
' → logprob: -15.252481460571289
    8. '([' → logprob: -15.877481460571289
    9. '(([' → logprob: -16.50248146057129
    10. ' (' → logprob: -16.62748146057129

Token 43: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.014684110297821e-06
    2. ' x' → logprob: -11.625008583068848
    3. '(x' → logprob: -17.500009536743164
    4. ')x' → logprob: -18.500009536743164
    5. '   ' → logprob: -20.500009536743164
    6. ' ' → logprob: -20.750009536743164
    7. '	x' → logprob: -20.875009536743164
    8. ''x' → logprob: -21.375009536743164
    9. '"x' → logprob: -21.750009536743164
    10. '{x' → logprob: -21.875009536743164

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044532763422466815
    2. ' ,' → logprob: -7.750445365905762
    3. ',y' → logprob: -11.375445365905762
    4. ',
' → logprob: -14.750445365905762
    5. '‌,' → logprob: -14.875445365905762
    6. ',,' → logprob: -15.000445365905762
    7. ',h' → logprob: -15.250445365905762
    8. ',x' → logprob: -15.375445365905762
    9. ',,,' → logprob: -15.375445365905762
    10. ' ' → logprob: -15.500445365905762

Token 45: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759456157684326
    2. ' y' → logprob: -0.8259456157684326
    3. ' ' → logprob: -12.575945854187012
    4. '    ' → logprob: -14.325945854187012
    5. ' ' → logprob: -14.575945854187012
    6. '	y' → logprob: -14.575945854187012
    7. ',' → logprob: -15.200945854187012
    8. ',y' → logprob: -15.825945854187012
    9. '  ' → logprob: -15.950945854187012
    10. 'Y' → logprob: -16.200944900512695

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022213248303160071
    2. ',h' → logprob: -9.000222206115723
    3. ' ,' → logprob: -9.250222206115723
    4. ',
' → logprob: -14.500222206115723
    5. ' ' → logprob: -14.500222206115723
    6. ')' → logprob: -14.750222206115723
    7. '‌,' → logprob: -15.375222206115723
    8. '),' → logprob: -15.750222206115723
    9. ',

' → logprob: -16.125221252441406
    10. ')]' → logprob: -16.250221252441406

Token 47: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1602444350719452
    2. ' h' → logprob: -1.9102444648742676
    3. ' ' → logprob: -11.28524398803711
    4. ' ' → logprob: -12.03524398803711
    5. ',' → logprob: -15.28524398803711
    6. ' 
' → logprob: -15.53524398803711
    7. '    ' → logprob: -15.91024398803711
    8. ')' → logprob: -16.03524398803711
    9. ' ,' → logprob: -16.03524398803711
    10. ' `' → logprob: -16.22274398803711

Token 48: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00037895687273703516
    2. ')' → logprob: -8.000378608703613
    3. ')])' → logprob: -10.875378608703613
    4. '])
' → logprob: -11.750378608703613
    5. ' ])' → logprob: -11.875378608703613
    6. ']' → logprob: -12.875378608703613
    7. ']))' → logprob: -13.625378608703613
    8. ')]' → logprob: -13.625378608703613
    9. ''])' → logprob: -13.875378608703613
    10. '))' → logprob: -13.875378608703613

Token 49: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.15829214453697205
    2. 'H' → logprob: -2.783292055130005
    3. '#' → logprob: -3.158292055130005
    4. 'c' → logprob: -3.783292055130005
    5. 'max' → logprob: -4.658292293548584
    6. 'for' → logprob: -5.533292293548584
    7. 'h' → logprob: -6.408292293548584
    8. 'possible' → logprob: -6.783292293548584
    9. 'center' → logprob: -8.033291816711426
    10. 'M' → logprob: -8.033291816711426

Token 50: ' Bon' (ID: 12658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8138905167579651
    2. ' for' → logprob: -1.3138904571533203
    3. '#' → logprob: -1.8138904571533203
    4. 'C' → logprob: -3.8138904571533203
    5. ' #' → logprob: -3.9388904571533203
    6. ' center' → logprob: -4.31389045715332
    7. 'possible' → logprob: -4.68889045715332
    8. 'max' → logprob: -5.06389045715332
    9. ' C' → logprob: -5.31389045715332
    10. ' possible' → logprob: -5.43889045715332

Token 51: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09601888805627823
    2. 'c' → logprob: -3.2210187911987305
    3. 'for' → logprob: -5.3460187911987305
    4. ' center' → logprob: -5.4710187911987305
    5. 'e' → logprob: -5.5960187911987305
    6. '

' → logprob: -5.5960187911987305
    7. 'found' → logprob: -5.5960187911987305
    8. '   ' → logprob: -5.8460187911987305
    9. 'jour' → logprob: -5.8460187911987305
    10. 'def' → logprob: -6.0960187911987305

Token 52: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.54422926902771
    2. ' h' → logprob: -1.91922926902771
    3. 'for' → logprob: -2.29422926902771
    4. ' c' → logprob: -2.54422926902771
    5. ' on' → logprob: -2.66922926902771
    6. 'c' → logprob: -3.16922926902771
    7. ' C' → logprob: -3.29422926902771
    8. ' found' → logprob: -3.29422926902771
    9. 'C' → logprob: -3.79422926902771
    10. '#' → logprob: -3.79422926902771

Token 53: ' cherche' (ID: 52345)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.6449053287506104
    2. ' cherche' → logprob: -1.1449053287506104
    3. ' suppose' → logprob: -3.5199053287506104
    4. ' continue' → logprob: -3.5199053287506104
    5. ' doit' → logprob: -3.7699053287506104
    6. ' a' → logprob: -4.269905090332031
    7. ' sait' → logprob: -4.769905090332031
    8. 'cherche' → logprob: -4.894905090332031
    9. ' peut' → logprob: -5.144905090332031
    10. ' veut' → logprob: -5.519905090332031

Token 54: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6302085518836975
    2. '<|end|>' → logprob: -1.5052084922790527
    3. ' for' → logprob: -2.5052084922790527
    4. 'C' → logprob: -2.8802084922790527
    5. 'for' → logprob: -3.6302084922790527
    6. 'x' → logprob: -4.380208492279053
    7. ':' → logprob: -4.380208492279053
    8. ',' → logprob: -4.880208492279053
    9. '#' → logprob: -5.005208492279053
    10. ' a' → logprob: -5.130208492279053

Token 55: ' point' (ID: 2438)
  Prédit: ' centre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' centre' → logprob: -0.23058755695819855
    2. 'centre' → logprob: -2.6055874824523926
    3. 'c' → logprob: -3.4805874824523926
    4. ' center' → logprob: -3.7305874824523926
    5. ' sommet' → logprob: -3.9805874824523926
    6. ' point' → logprob: -4.480587482452393
    7. 'C' → logprob: -5.230587482452393
    8. ' ' → logprob: -5.480587482452393
    9. '```' → logprob: -5.480587482452393
    10. 'center' → logprob: -5.855587482452393

Token 56: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0708197355270386
    2. 'C' → logprob: -1.9458197355270386
    3. '<|end|>' → logprob: -1.9458197355270386
    4. '(' → logprob: -2.070819854736328
    5. ' (' → logprob: -2.195819854736328
    6. 'c' → logprob: -3.445819854736328
    7. 's' → logprob: -3.570819854736328
    8. '_' → logprob: -3.695819854736328
    9. ' de' → logprob: -5.445819854736328
    10. ' C' → logprob: -5.445819854736328

Token 57: ' plus' (ID: 2932)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.35439354181289673
    2. 'vel' → logprob: -1.979393482208252
    3. 'vant' → logprob: -3.604393482208252
    4. 've' → logprob: -3.854393482208252
    5. 'plus' → logprob: -4.229393482208252
    6. 't' → logprob: -4.229393482208252
    7. ' plus' → logprob: -4.479393482208252
    8. 'vier' → logprob: -4.604393482208252
    9. 'd' → logprob: -4.729393482208252
    10. 'gal' → logprob: -4.729393482208252

Token 58: ' haut' (ID: 28223)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5689417719841003
    2. 'haut' → logprob: -1.5689418315887451
    3. 'ha' → logprob: -2.068941831588745
    4. 'grand' → logprob: -3.318941831588745
    5. ' élevé' → logprob: -3.943941831588745
    6. ' haut' → logprob: -4.443941593170166
    7. 'élé' → logprob: -4.818941593170166
    8. 'loin' → logprob: -5.318941593170166
    9. 'lo' → logprob: -6.193941593170166
    10. 'e' → logprob: -6.443941593170166

Token 59: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24147024750709534
    2. ' max' → logprob: -2.4914703369140625
    3. 'h' → logprob: -2.7414703369140625
    4. 'highest' → logprob: -3.3664703369140625
    5. ',' → logprob: -4.1164703369140625
    6. 'points' → logprob: -5.8664703369140625
    7. 'H' → logprob: -6.1164703369140625
    8. ' h' → logprob: -6.1164703369140625
    9. 'm' → logprob: -6.2414703369140625
    10. 'C' → logprob: -6.9914703369140625

Token 60: 'points' (ID: 14011)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.24334868788719177
    2. 'h' → logprob: -1.8683487176895142
    3. 'H' → logprob: -3.1183485984802246
    4. ' max' → logprob: -5.118348598480225
    5. 'highest' → logprob: -5.618348598480225
    6. 'C' → logprob: -6.368348598480225
    7. 'M' → logprob: -6.493348598480225
    8. 'm' → logprob: -6.743348598480225
    9. 'c' → logprob: -7.493348598480225
    10. 'mx' → logprob: -7.743348598480225

Token 61: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8907168507575989
    2. '.sort' → logprob: -0.8907168507575989
    3. '[' → logprob: -1.765716791152954
    4. '_sorted' → logprob: -5.390717029571533
    5. '[-' → logprob: -7.265717029571533
    6. '<|end|>' → logprob: -7.390717029571533
    7. '[:]' → logprob: -8.265716552734375
    8. 'sorted' → logprob: -8.390716552734375
    9. '```' → logprob: -8.515716552734375
    10. '.sorted' → logprob: -8.640716552734375

Token 62: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.5240911841392517
    2. ' sorted' → logprob: -0.8990911841392517
    3. '[' → logprob: -7.5240912437438965
    4. ' [' → logprob: -8.524090766906738
    5. 'max' → logprob: -9.649090766906738
    6. '[max' → logprob: -10.024090766906738
    7. '[s' → logprob: -10.274090766906738
    8. '(sorted' → logprob: -10.899090766906738
    9. ' list' → logprob: -11.024090766906738
    10. 'list' → logprob: -11.024090766906738

Token 63: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0011790355201810598
    2. '(' → logprob: -6.751179218292236
    3. '(lambda' → logprob: -12.251178741455078
    4. '(
' → logprob: -14.001178741455078
    5. '(point' → logprob: -14.001178741455078
    6. 'points' → logprob: -14.001178741455078
    7. '(p' → logprob: -14.376178741455078
    8. '(po' → logprob: -15.376178741455078
    9. '	points' → logprob: -15.751178741455078
    10. '(`' → logprob: -15.751178741455078

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5314128398895264
    2. '(key' → logprob: -1.0314128398895264
    3. '(' → logprob: -3.7814128398895264
    4. '(),' → logprob: -3.9064128398895264
    5. ',key' → logprob: -4.9064130783081055
    6. '(points' → logprob: -5.7814130783081055
    7. '(lambda' → logprob: -6.5314130783081055
    8. ' ,' → logprob: -8.156413078308105
    9. '(reverse' → logprob: -8.406413078308105
    10. 'key' → logprob: -8.656413078308105

Token 65: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3158125877380371
    2. ' key' → logprob: -1.315812587738037
    3. 'lambda' → logprob: -6.065812587738037
    4. ' lambda' → logprob: -8.565813064575195
    5. 'reverse' → logprob: -10.565813064575195
    6. '	key' → logprob: -12.440813064575195
    7. '(key' → logprob: -12.440813064575195
    8. '[key' → logprob: -13.940813064575195
    9. ',key' → logprob: -13.940813064575195
    10. ' reverse' → logprob: -14.565813064575195

Token 66: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.004078878089785576
    2. '=' → logprob: -5.5040788650512695
    3. '=

' → logprob: -15.00407886505127
    4. '=
' → logprob: -16.504079818725586
    5. '=l' → logprob: -18.379079818725586
    6. '=}' → logprob: -18.629079818725586
    7. '=(' → logprob: -18.754079818725586
    8. '=item' → logprob: -18.879079818725586
    9. '=\' → logprob: -19.004079818725586
    10. '=len' → logprob: -19.129079818725586

Token 67: ' xx' (ID: 44242)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.00948464684188366
    2. ' x' → logprob: -5.259484767913818
    3. 'lambda' → logprob: -6.134484767913818
    4. ' p' → logprob: -6.509484767913818
    5. ' points' → logprob: -8.13448429107666
    6. ' ' → logprob: -9.63448429107666
    7. 'x' → logprob: -9.75948429107666
    8. '=lambda' → logprob: -9.88448429107666
    9. ' point' → logprob: -10.75948429107666
    10. '<|end|>' → logprob: -11.00948429107666

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015279557555913925
    2. ' :' → logprob: -6.626527786254883
    3. '[' → logprob: -9.251527786254883
    4. 'xx' → logprob: -10.251527786254883
    5. ':x' → logprob: -10.751527786254883
    6. 'x' → logprob: -11.501527786254883
    7. ' xx' → logprob: -12.001527786254883
    8. ':-' → logprob: -12.126527786254883
    9. '-' → logprob: -12.251527786254883
    10. 's' → logprob: -12.751527786254883

Token 69: ' xx' (ID: 44242)
  Prédit: ' xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xx' → logprob: -0.2875784933567047
    2. 'xx' → logprob: -1.4125784635543823
    3. '-' → logprob: -5.162578582763672
    4. ' -' → logprob: -7.537578582763672
    5. '(xx' → logprob: -10.537578582763672
    6. ' ' → logprob: -10.537578582763672
    7. ' lambda' → logprob: -10.662578582763672
    8. ':' → logprob: -10.787578582763672
    9. 'lambda' → logprob: -11.037578582763672
    10. 'x' → logprob: -11.412578582763672

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030450967606157064
    2. '[-' → logprob: -5.878045082092285
    3. ':' → logprob: -8.503045082092285
    4. '-' → logprob: -11.378045082092285
    5. ' [' → logprob: -11.628045082092285
    6. 'x' → logprob: -12.253045082092285
    7. '[]' → logprob: -13.003045082092285
    8. '[:' → logprob: -13.753045082092285
    9. '[
' → logprob: -13.878045082092285
    10. '```' → logprob: -14.003045082092285

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002851729223039001
    2. '-' → logprob: -8.875285148620605
    3. ' ' → logprob: -9.000285148620605
    4. '[' → logprob: -11.875285148620605
    5. '1' → logprob: -12.812785148620605
    6. ' -' → logprob: -13.000285148620605
    7. '```' → logprob: -13.125285148620605
    8. '3' → logprob: -13.937785148620605
    9. '   ' → logprob: -14.250285148620605
    10. ']' → logprob: -14.437785148620605

Token 72: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001296073431149125
    2. ' ,' → logprob: -7.126296043395996
    3. ')' → logprob: -8.251296043395996
    4. '),' → logprob: -8.501296043395996
    5. ',re' → logprob: -12.126296043395996
    6. '>,' → logprob: -12.251296043395996
    7. ',
' → logprob: -12.501296043395996
    8. '],' → logprob: -13.001296043395996
    9. ',)' → logprob: -13.251296043395996
    10. 'reverse' → logprob: -13.751296043395996

Token 73: ' reverse' (ID: 18199)
  Prédit: ' reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.3175467550754547
    2. 'reverse' → logprob: -1.3175467252731323
    3. ' ' → logprob: -6.317546844482422
    4. 're' → logprob: -6.817546844482422
    5. ' r' → logprob: -7.817546844482422
    6. 'r' → logprob: -7.942546844482422
    7. 'rev' → logprob: -8.192546844482422
    8. ' revers' → logprob: -9.067546844482422
    9. ' re' → logprob: -9.442546844482422
    10. ' rev' → logprob: -10.192546844482422

Token 74: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0067176250740885735
    2. '=' → logprob: -5.006717681884766
    3. ')' → logprob: -14.256717681884766
    4. '=
' → logprob: -14.756717681884766
    5. 'True' → logprob: -15.006717681884766
    6. ')=' → logprob: -15.131717681884766
    7. '=False' → logprob: -16.006717681884766
    8. '=T' → logprob: -16.006717681884766
    9. ',' → logprob: -16.256717681884766
    10. '=

' → logprob: -16.381717681884766

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -14.50000286102295
    4. ')
' → logprob: -14.62500286102295
    5. ')#' → logprob: -16.375003814697266
    6. '),' → logprob: -16.875003814697266
    7. ')`' → logprob: -17.000003814697266
    8. ')

' → logprob: -18.125003814697266
    9. ')[' → logprob: -18.500003814697266
    10. ']' → logprob: -18.750003814697266

Token 76: '#' (ID: 2)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.1419154703617096
    2. 'H' → logprob: -2.6419155597686768
    3. '#' → logprob: -3.2669155597686768
    4. 'c' → logprob: -4.766915321350098
    5. 'x' → logprob: -4.891915321350098
    6. '
' → logprob: -6.516915321350098
    7. '

' → logprob: -6.766915321350098
    8. 'for' → logprob: -7.141915321350098
    9. 'X' → logprob: -7.391915321350098
    10. '' → logprob: -7.641915321350098

Token 77: ' Fr' (ID: 2312)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.1081751585006714
    2. 'for' → logprob: -1.6081751585006714
    3. ' for' → logprob: -1.8581751585006714
    4. 'H' → logprob: -2.108175277709961
    5. ' C' → logprob: -2.733175277709961
    6. '#' → logprob: -2.858175277709961
    7. ' H' → logprob: -3.483175277709961
    8. 'x' → logprob: -4.608175277709961
    9. ' #' → logprob: -4.983175277709961
    10. 'h' → logprob: -5.483175277709961

Token 78: 'anchement' (ID: 141995)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.13833476603031158
    2. 'o' → logprob: -2.5133347511291504
    3. '#' → logprob: -4.38833475112915
    4. 'eq' → logprob: -5.13833475112915
    5. 'e' → logprob: -5.26333475112915
    6. 'a' → logprob: -5.26333475112915
    7. 'ont' → logprob: -5.38833475112915
    8. 'é' → logprob: -5.51333475112915
    9. 'q' → logprob: -6.76333475112915
    10. 'ançais' → logprob: -7.01333475112915

Token 79: ' on' (ID: 402)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5172783732414246
    2. 'H' → logprob: -1.2672784328460693
    3. ' C' → logprob: -3.2672784328460693
    4. ' for' → logprob: -3.5172784328460693
    5. ' H' → logprob: -4.01727819442749
    6. 'for' → logprob: -4.26727819442749
    7. 'c' → logprob: -5.26727819442749
    8. ',' → logprob: -5.89227819442749
    9. ' ' → logprob: -5.89227819442749
    10. ' ' → logprob: -6.01727819442749

Token 80: ' essay' (ID: 9635)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.7395342588424683
    2. ' n' → logprob: -1.9895342588424683
    3. ' a' → logprob: -2.614534378051758
    4. ' peut' → logprob: -3.114534378051758
    5. ' pourrait' → logprob: -3.114534378051758
    6. ' cherche' → logprob: -3.239534378051758
    7. ' pense' → logprob: -3.364534378051758
    8. ' for' → logprob: -3.614534378051758
    9. 'for' → logprob: -3.739534378051758
    10. ',' → logprob: -3.989534378051758

Token 81: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00012023169983876869
    2. 'ons' → logprob: -9.750120162963867
    3. 'er' → logprob: -10.750120162963867
    4. 'onne' → logprob: -11.875120162963867
    5. 'on' → logprob: -12.375120162963867
    6. 'le' → logprob: -12.625120162963867
    7. '```' → logprob: -12.750120162963867
    8. 'se' → logprob: -13.000120162963867
    9. 'ue' → logprob: -13.125120162963867
    10. 'ez' → logprob: -13.250120162963867

Token 82: ' tous' (ID: 10688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1475343555212021
    2. ' :' → logprob: -2.7725343704223633
    3. ' ' → logprob: -3.2725343704223633
    4. ' d' → logprob: -4.772534370422363
    5. ' for' → logprob: -5.022534370422363
    6. ' de' → logprob: -5.147534370422363
    7. 'd' → logprob: -5.772534370422363
    8. 't' → logprob: -6.147534370422363
    9. 'for' → logprob: -6.272534370422363
    10. ':
' → logprob: -6.397534370422363

Token 83: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8004388809204102
    2. ':' → logprob: -1.4254388809204102
    3. ' C' → logprob: -3.17543888092041
    4. ' :' → logprob: -3.42543888092041
    5. ' for' → logprob: -3.42543888092041
    6. ' (' → logprob: -3.42543888092041
    7. 'C' → logprob: -3.67543888092041
    8. ' i' → logprob: -3.80043888092041
    9. ' x' → logprob: -3.80043888092041
    10. 'x' → logprob: -4.05043888092041

Token 84: ' cas' (ID: 2108)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.27045175433158875
    2. 'x' → logprob: -2.270451784133911
    3. 'X' → logprob: -3.145451784133911
    4. 'c' → logprob: -3.395451784133911
    5. ' C' → logprob: -3.520451784133911
    6. '0' → logprob: -5.145451545715332
    7. 'Cx' → logprob: -5.145451545715332
    8. ' x' → logprob: -6.145451545715332
    9. 'cx' → logprob: -6.270451545715332
    10. 'H' → logprob: -6.520451545715332

Token 85: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4875064492225647
    2. ' for' → logprob: -1.86250638961792
    3. 'for' → logprob: -2.36250638961792
    4. ' ' → logprob: -2.48750638961792
    5. ' :' → logprob: -3.61250638961792
    6. ',' → logprob: -4.73750638961792
    7. ' (' → logprob: -5.73750638961792
    8. 'C' → logprob: -6.23750638961792
    9. '<|end|>' → logprob: -6.61250638961792
    10. ' ,' → logprob: -6.61250638961792

Token 86: 'pe' (ID: 424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.526314914226532
    2. ' range' → logprob: -2.1513149738311768
    3. 'for' → logprob: -2.6513149738311768
    4. 'C' → logprob: -2.6513149738311768
    5. ' for' → logprob: -3.2763149738311768
    6. 'x' → logprob: -3.7763149738311768
    7. ' )' → logprob: -3.9013149738311768
    8. ' ' → logprob: -4.026314735412598
    9. 'range' → logprob: -4.151314735412598
    10. 'H' → logprob: -4.901314735412598

Token 87: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.19681930541992188
    2. 'u' → logprob: -2.196819305419922
    3. 'n' → logprob: -3.571819305419922
    4. 'r' → logprob: -3.696819305419922
    5. '```' → logprob: -6.446819305419922
    6. 'ns' → logprob: -6.571819305419922
    7. 'uple' → logprob: -6.696819305419922
    8. 't' → logprob: -6.696819305419922
    9. 'nal' → logprob: -6.946819305419922
    10. 'ux' → logprob: -6.946819305419922

Token 88: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.625555694103241
    2. '-être' → logprob: -0.875555694103241
    3. '-' → logprob: -3.5005557537078857
    4. 'êt' → logprob: -4.875555515289307
    5. 'etre' → logprob: -6.125555515289307
    6. '^' → logprob: -6.500555515289307
    7. 'ê' → logprob: -6.875555515289307
    8. ' être' → logprob: -7.000555515289307
    9. ''être' → logprob: -7.375555515289307
    10. '-on' → logprob: -7.375555515289307

Token 89: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8506202697753906
    2. ')' → logprob: -1.1006202697753906
    3. ' )' → logprob: -1.9756202697753906
    4. '):' → logprob: -4.475620269775391
    5. '100' → logprob: -4.600620269775391
    6. ' N' → logprob: -4.975620269775391
    7. ' que' → logprob: -5.100620269775391
    8. ' for' → logprob: -5.350620269775391
    9. ',' → logprob: -5.600620269775391
    10. ':' → logprob: -5.725620269775391

Token 90: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5846044421195984
    2. ' a' → logprob: -1.7096045017242432
    3. ''a' → logprob: -3.084604501724243
    4. ')' → logprob: -3.084604501724243
    5. '_' → logprob: -3.834604501724243
    6. '=' → logprob: -4.209604263305664
    7. ' compris' → logprob: -4.459604263305664
    8. ',' → logprob: -4.584604263305664
    9. '-' → logprob: -4.959604263305664
    10. '>' → logprob: -4.959604263305664

Token 91: ' mieux' (ID: 26345)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9920838475227356
    2. ' une' → logprob: -1.2420837879180908
    3. ' ' → logprob: -1.9920837879180908
    4. ' pas' → logprob: -3.117083787918091
    5. ' a' → logprob: -3.367083787918091
    6. ')' → logprob: -3.992083787918091
    7. ' mieux' → logprob: -4.24208402633667
    8. ' plus' → logprob: -4.36708402633667
    9. '  ' → logprob: -4.74208402633667
    10. ' d' → logprob: -4.86708402633667

Token 92: '?)
' (ID: 90794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08745075762271881
    2. '?)' → logprob: -3.8374507427215576
    3. ' )' → logprob: -3.8374507427215576
    4. ',' → logprob: -4.087450981140137
    5. '),' → logprob: -5.337450981140137
    6. '?' → logprob: -5.712450981140137
    7. ' ?)' → logprob: -5.712450981140137
    8. '):' → logprob: -5.962450981140137
    9. ')
' → logprob: -6.087450981140137
    10. ' ' → logprob: -6.712450981140137

Token 93: 'for' (ID: 1938)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7653653621673584
    2. 'for' → logprob: -1.2653653621673584
    3. ' for' → logprob: -1.6403653621673584
    4. 'H' → logprob: -3.2653653621673584
    5. ' C' → logprob: -4.8903656005859375
    6. '
' → logprob: -5.6403656005859375
    7. 'c' → logprob: -6.0153656005859375
    8. 'x' → logprob: -6.7653656005859375
    9. ',' → logprob: -7.1403656005859375
    10. ' 
' → logprob: -7.2653656005859375

Token 94: ' cx' (ID: 44448)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.7324194312095642
    2. ' c' → logprob: -1.482419490814209
    3. ' i' → logprob: -2.607419490814209
    4. ' cx' → logprob: -2.607419490814209
    5. ' x' → logprob: -2.857419490814209
    6. ' H' → logprob: -3.482419490814209
    7. ' h' → logprob: -4.357419490814209
    8. ' ' → logprob: -4.357419490814209
    9. 'C' → logprob: -4.982419490814209
    10. ' p' → logprob: -5.232419490814209

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003844732651486993
    2. 'in' → logprob: -5.628844738006592
    3. ',' → logprob: -9.003844261169434
    4. ' ' → logprob: -9.128844261169434
    5. 'range' → logprob: -12.378844261169434
    6. ' i' → logprob: -13.628844261169434
    7. 's' → logprob: -13.753844261169434
    8. ' ,' → logprob: -13.878844261169434
    9. '<|end|>' → logprob: -14.003844261169434
    10. '1' → logprob: -14.003844261169434

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931570172309875
    2. 'range' → logprob: -0.6931570172309875
    3. ' ' → logprob: -12.068157196044922
    4. ' ra' → logprob: -13.568157196044922
    5. '   ' → logprob: -13.943157196044922
    6. '(range' → logprob: -14.568157196044922
    7. '  ' → logprob: -14.943157196044922
    8. '	range' → logprob: -14.943157196044922
    9. 'ra' → logprob: -15.443157196044922
    10. 'ran' → logprob: -15.943157196044922

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1398757123970427e-05
    2. '101' → logprob: -11.875011444091797
    3. '(max' → logprob: -12.625011444091797
    4. ' (' → logprob: -14.750011444091797
    5. '(-' → logprob: -14.875011444091797
    6. '(min' → logprob: -15.500011444091797
    7. '()' → logprob: -16.875011444091797
    8. '(
' → logprob: -17.625011444091797
    9. '(x' → logprob: -17.625011444091797
    10. '(points' → logprob: -17.625011444091797

Token 98: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -8.65707261255011e-06
    2. '```' → logprob: -12.875008583068848
    3. '

' → logprob: -13.375008583068848
    4. '``' → logprob: -13.375008583068848
    5. '   ' → logprob: -14.125008583068848
    6. '1' → logprob: -14.750008583068848
    7. ' ' → logprob: -15.000008583068848
    8. '  ' → logprob: -15.625008583068848
    9. '(' → logprob: -15.750008583068848
    10. '10' → logprob: -15.750008583068848

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000453910295618698
    2. ')' → logprob: -7.875453948974609
    3. ' ):' → logprob: -9.87545394897461
    4. '):
' → logprob: -11.12545394897461
    5. ':' → logprob: -12.12545394897461
    6. ',' → logprob: -13.62545394897461
    7. '}:' → logprob: -15.50045394897461
    8. ']:' → logprob: -16.25045394897461
    9. '():' → logprob: -16.25045394897461
    10. '+' → logprob: -16.37545394897461

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02657986618578434
    2. ' for' → logprob: -3.6515798568725586
    3. 'for' → logprob: -9.401579856872559
    4. ' ' → logprob: -9.651579856872559
    5. '   ' → logprob: -9.651579856872559
    6. ',' → logprob: -9.901579856872559
    7. '	for' → logprob: -11.651579856872559
    8. '<|end|>' → logprob: -13.026579856872559
    9. '  ' → logprob: -13.276579856872559
    10. ':' → logprob: -13.651579856872559

Token 101: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11893870681524277
    2. ' for' → logprob: -2.243938684463501
    3. 'for' (adapté à ' for') → logprob: -5.11893892288208
    4. '   ' → logprob: -9.368938446044922
    5. '	for' → logprob: -11.368938446044922
    6. ' ' → logprob: -11.743938446044922
    7. '    ' → logprob: -12.118938446044922
    8. '   ' → logprob: -13.743938446044922
    9. '  ' → logprob: -13.868938446044922
    10. '       ' → logprob: -14.118938446044922

Token 102: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.2014242559671402
    2. ' cy' → logprob: -1.701424241065979
    3. 'cx' → logprob: -12.326424598693848
    4. ' ' → logprob: -12.326424598693848
    5. ' cx' → logprob: -14.326424598693848
    6. '.cy' → logprob: -14.451424598693848
    7. ' range' → logprob: -15.201424598693848
    8. 'y' → logprob: -15.451424598693848
    9. 'cz' → logprob: -16.07642364501953
    10. 'range' → logprob: -16.20142364501953

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00532531226053834
    2. 'in' → logprob: -5.2553253173828125
    3. ' ' → logprob: -9.380325317382812
    4. '   ' → logprob: -13.005325317382812
    5. '    ' → logprob: -13.255325317382812
    6. 'range' → logprob: -13.380325317382812
    7. '  ' → logprob: -14.130325317382812
    8. ',' → logprob: -15.630325317382812
    9. '```' → logprob: -16.505325317382812
    10. ' ' → logprob: -16.630325317382812

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741620421409607
    2. 'range' → logprob: -0.9741620421409607
    3. '(range' → logprob: -9.474162101745605
    4. ' ' → logprob: -11.974162101745605
    5. '(' → logprob: -13.974162101745605
    6. '   ' → logprob: -14.099162101745605
    7. '	range' → logprob: -16.22416114807129
    8. '100' → logprob: -16.72416114807129
    9. '101' → logprob: -16.84916114807129
    10. ' (' → logprob: -17.09916114807129

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.941850526549388e-06
    2. ' (' → logprob: -12.250007629394531
    3. '(range' → logprob: -12.750007629394531
    4. 'range' → logprob: -16.12500762939453
    5. ' range' → logprob: -17.12500762939453
    6. '101' → logprob: -17.25000762939453
    7. ' ' → logprob: -18.25000762939453
    8. '((' → logprob: -18.50000762939453
    9. '   ' → logprob: -19.00000762939453
    10. '(
' → logprob: -20.00000762939453

Token 106: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.250016212463379
    3. '   ' → logprob: -14.125016212463379
    4. '(' → logprob: -14.250016212463379
    5. '0' → logprob: -14.625016212463379
    6. '1' → logprob: -14.875016212463379
    7. ')' → logprob: -15.375016212463379
    8. '111' → logprob: -15.875016212463379
    9. 'range' → logprob: -15.875016212463379
    10. '102' → logprob: -16.375017166137695

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008113917894661427
    2. '):
' → logprob: -5.383113861083984
    3. ':' → logprob: -5.758113861083984
    4. ')' → logprob: -8.508113861083984
    5. '   ' → logprob: -9.133113861083984
    6. ' ):' → logprob: -11.508113861083984
    7. '       ' → logprob: -13.258113861083984
    8. '):

' → logprob: -13.508113861083984
    9. '+' → logprob: -13.883113861083984
    10. '):
' → logprob: -13.883113861083984

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036922397557646036
    2. ':' → logprob: -6.253692150115967
    3. '   ' → logprob: -7.753692150115967
    4. ',' → logprob: -7.878692150115967
    5. '    ' → logprob: -8.378692626953125
    6. ' ' → logprob: -8.878692626953125
    7. ' for' → logprob: -9.003692626953125
    8. '	' → logprob: -9.003692626953125
    9. '	   ' → logprob: -9.878692626953125
    10. 'for' → logprob: -10.003692626953125

Token 109: ' ok' (ID: 4763)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8361099362373352
    2. 'for' → logprob: -1.3361098766326904
    3. 'ch' → logprob: -1.5861098766326904
    4. '       ' → logprob: -2.9611098766326904
    5. ' for' → logprob: -4.2111101150512695
    6. 'h' → logprob: -4.5861101150512695
    7. 'H' → logprob: -4.9611101150512695
    8. 'ok' (adapté à ' ok') → logprob: -5.9611101150512695
    9. 'found' → logprob: -6.0861101150512695
    10. 'valid' → logprob: -6.3361101150512695

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00676344521343708
    2. '=' → logprob: -5.006763458251953
    3. '=True' → logprob: -10.131763458251953
    4. '   ' → logprob: -12.881763458251953
    5. ' ' → logprob: -13.131763458251953
    6. '    ' → logprob: -13.756763458251953
    7. '=False' → logprob: -13.881763458251953
    8. ',' → logprob: -14.631763458251953
    9. ':' → logprob: -14.881763458251953
    10. '  ' → logprob: -15.006763458251953

Token 111: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868737816810608
    2. ' True' → logprob: -1.136873722076416
    3. '(True' → logprob: -13.386874198913574
    4. '   ' → logprob: -14.761874198913574
    5. ' ' → logprob: -15.136874198913574
    6. '1' → logprob: -15.136874198913574
    7. 'False' → logprob: -15.636874198913574
    8. '=True' → logprob: -16.011873245239258
    9. 'Tr' → logprob: -17.386873245239258
    10. ' Tru' → logprob: -18.511873245239258

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005667338264174759
    2. '	' → logprob: -8.500566482543945
    3. '<|end|>' → logprob: -9.000566482543945
    4. ' for' → logprob: -10.000566482543945
    5. '        
' → logprob: -10.125566482543945
    6. '
' → logprob: -10.250566482543945
    7. ',' → logprob: -10.250566482543945
    8. '   ' → logprob: -10.375566482543945
    9. ' ' → logprob: -11.375566482543945
    10. '           ' → logprob: -12.000566482543945

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018412984209135175
    2. '	' → logprob: -7.126841068267822
    3. ' for' → logprob: -8.12684154510498
    4. '<|end|>' → logprob: -8.50184154510498
    5. '        
' → logprob: -8.75184154510498
    6. 'for' → logprob: -9.75184154510498
    7. '
' → logprob: -9.75184154510498
    8. ' ' → logprob: -9.75184154510498
    9. '   ' → logprob: -10.00184154510498
    10. '\t' → logprob: -10.37684154510498

Token 114: ' H' (ID: 487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6036129593849182
    2. '       ' → logprob: -0.8536129593849182
    3. ' for' → logprob: -3.6036128997802734
    4. '   ' → logprob: -10.103612899780273
    5. '           ' → logprob: -11.853612899780273
    6. '	for' → logprob: -12.353612899780273
    7. '        
' → logprob: -12.728612899780273
    8. '#' → logprob: -13.478612899780273
    9. ',' → logprob: -13.603612899780273
    10. ' ' → logprob: -13.603612899780273

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5237110257148743
    2. '=' → logprob: -0.8987110257148743
    3. ' ' → logprob: -7.898711204528809
    4. '=int' → logprob: -10.148711204528809
    5. '<|end|>' → logprob: -10.273711204528809
    6. '=None' → logprob: -10.898711204528809
    7. 'found' → logprob: -11.148711204528809
    8. 'for' → logprob: -11.273711204528809
    9. ')' → logprob: -11.273711204528809
    10. '_found' → logprob: -11.523711204528809

Token 116: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.013827313669025898
    2. ' points' → logprob: -4.388827323913574
    3. '0' → logprob: -7.638827323913574
    4. 'None' → logprob: -8.263827323913574
    5. '-' → logprob: -8.263827323913574
    6. '100' → logprob: -9.263827323913574
    7. '(points' → logprob: -9.763827323913574
    8. ' None' → logprob: -10.263827323913574
    9. ' ' → logprob: -10.263827323913574
    10. 'max' → logprob: -10.388827323913574

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.190178904333152e-05
    2. '0' → logprob: -10.875031471252441
    3. '][' → logprob: -12.000031471252441
    4. 's' → logprob: -13.375031471252441
    5. ' [' → logprob: -13.625031471252441
    6. '```' → logprob: -13.875031471252441
    7. ')[' → logprob: -14.500031471252441
    8. '[
' → logprob: -14.750031471252441
    9. '1' → logprob: -15.125031471252441
    10. '[-' → logprob: -15.500031471252441

Token 118: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019579214858822525
    2. '[' → logprob: -9.000195503234863
    3. ' ' → logprob: -9.875195503234863
    4. '2' → logprob: -11.125195503234863
    5. '1' → logprob: -12.875195503234863
    6. '][' → logprob: -13.625195503234863
    7. '```' → logprob: -14.125195503234863
    8. '3' → logprob: -14.750195503234863
    9. 's' → logprob: -15.500195503234863
    10. '<|end|>' → logprob: -16.00019645690918

Token 119: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0489996075630188
    2. '[' → logprob: -3.048999547958374
    3. '2' → logprob: -8.423999786376953
    4. ' ][' → logprob: -9.173999786376953
    5. ']' → logprob: -10.798999786376953
    6. '-' → logprob: -11.048999786376953
    7. ''][' → logprob: -11.548999786376953
    8. '}[' → logprob: -11.798999786376953
    9. '```' → logprob: -11.923999786376953
    10. '"][' → logprob: -11.923999786376953

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.839121826691553e-05
    2. ' ' → logprob: -9.500078201293945
    3. '   ' → logprob: -13.500078201293945
    4. '```' → logprob: -14.250078201293945
    5. '  ' → logprob: -14.625078201293945
    6. '-' → logprob: -15.312578201293945
    7. '۲' → logprob: -16.062578201293945
    8. ' -' → logprob: -16.250078201293945
    9. '[' → logprob: -16.312578201293945
    10. ']' → logprob: -16.625078201293945

Token 121: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5288397073745728
    2. ' +' → logprob: -0.9038397073745728
    3. ']' → logprob: -5.403839588165283
    4. ']+' → logprob: -7.278839588165283
    5. ')' → logprob: -8.028840065002441
    6. ')+' → logprob: -9.528840065002441
    7. ' plus' → logprob: -10.778840065002441
    8. ' ' → logprob: -11.153840065002441
    9. '>' → logprob: -11.153840065002441
    10. '        ' → logprob: -11.903840065002441

Token 122: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04015154764056206
    2. ' -' → logprob: -4.290151596069336
    3. '+' → logprob: -5.040151596069336
    4. '-' → logprob: -5.290151596069336
    5. '        
' → logprob: -5.790151596069336
    6. '<|end|>' → logprob: -6.165151596069336
    7. '        ' → logprob: -6.290151596069336
    8. ' +' → logprob: -6.540151596069336
    9. ' ' → logprob: -6.665151596069336
    10. '
' → logprob: -6.790151596069336

Token 123: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.10065507888793945
    2. ' abs' → logprob: -2.3506550788879395
    3. '(abs' → logprob: -7.7256550788879395
    4. 'max' → logprob: -13.225654602050781
    5. 'points' → logprob: -13.350654602050781
    6. ' (' → logprob: -13.850654602050781
    7. ' ' → logprob: -14.350654602050781
    8. ' points' → logprob: -14.475654602050781
    9. '(cx' → logprob: -14.850654602050781
    10. '   ' → logprob: -15.725654602050781

Token 124: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.011075528338551521
    2. '(cx' → logprob: -4.511075496673584
    3. '(' → logprob: -10.636075973510742
    4. 'points' → logprob: -13.011075973510742
    5. '(px' → logprob: -14.261075973510742
    6. ' points' → logprob: -15.636075973510742
    7. '((' → logprob: -15.761075973510742
    8. '	points' → logprob: -16.136075973510742
    9. '(c' → logprob: -16.261075973510742
    10. 'cx' → logprob: -16.386075973510742

Token 125: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.019844425842165947
    2. '(cx' → logprob: -4.0198445320129395
    3. '(points' → logprob: -7.1448445320129395
    4. '[c' → logprob: -7.2698445320129395
    5. '[x' → logprob: -9.894844055175781
    6. 'points' → logprob: -9.894844055175781
    7. ' points' → logprob: -10.394844055175781
    8. '(' → logprob: -10.394844055175781
    9. '(x' → logprob: -10.894844055175781
    10. '(c' → logprob: -11.644844055175781

Token 126: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41265183687210083
    2. '0' → logprob: -1.662651777267456
    3. 'x' → logprob: -1.912651777267456
    4. '][' → logprob: -8.412652015686035
    5. '[x' → logprob: -8.912652015686035
    6. 'cx' → logprob: -9.037652015686035
    7. '```' → logprob: -9.662652015686035
    8. 'points' → logprob: -10.037652015686035
    9. '(cx' → logprob: -10.162652015686035
    10. '   ' → logprob: -10.787652015686035

Token 127: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010759611177491024
    2. '][' → logprob: -9.875107765197754
    3. 'x' → logprob: -10.375107765197754
    4. '0' → logprob: -11.125107765197754
    5. '[x' → logprob: -12.750107765197754
    6. '   ' → logprob: -13.250107765197754
    7. '```' → logprob: -14.125107765197754
    8. '()[' → logprob: -14.250107765197754
    9. '(' → logprob: -14.375107765197754
    10. ' [' → logprob: -14.375107765197754

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03403222933411598
    2. 'x' → logprob: -3.4090323448181152
    3. '[' → logprob: -7.909032344818115
    4. ' ' → logprob: -12.034031867980957
    5. 'cx' → logprob: -12.159031867980957
    6. ' x' → logprob: -13.159031867980957
    7. ''x' → logprob: -13.409031867980957
    8. '   ' → logprob: -14.409031867980957
    9. '_x' → logprob: -14.659031867980957
    10. '1' → logprob: -15.034031867980957

Token 129: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09006018191576004
    2. '-' → logprob: -2.465060234069824
    3. '-c' → logprob: -6.840060234069824
    4. ' ' → logprob: -10.340060234069824
    5. '   ' → logprob: -12.215060234069824
    6. '[' → logprob: -12.715060234069824
    7. ')' → logprob: -12.840060234069824
    8. ']' → logprob: -13.465060234069824
    9. '  ' → logprob: -13.840060234069824
    10. '(cx' → logprob: -13.840060234069824

Token 130: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.412867933511734
    2. '-' → logprob: -1.1628679037094116
    3. '-c' → logprob: -3.662868022918701
    4. ' ' → logprob: -13.787867546081543
    5. '-x' → logprob: -14.037867546081543
    6. '   ' → logprob: -14.537867546081543
    7. '-cn' → logprob: -15.537867546081543
    8. '-C' → logprob: -16.03786849975586
    9. '(cx' → logprob: -16.28786849975586
    10. '  ' → logprob: -16.78786849975586

Token 131: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.012621482834219933
    2. ' cx' → logprob: -4.3876214027404785
    3. '(cx' → logprob: -9.137621879577637
    4. '.cx' → logprob: -12.512621879577637
    5. ' ' → logprob: -16.26262092590332
    6. 'c' → logprob: -16.26262092590332
    7. 'cz' → logprob: -16.38762092590332
    8. 'cy' → logprob: -16.38762092590332
    9. ')' → logprob: -16.63762092590332
    10. '   ' → logprob: -16.76262092590332

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')+' → logprob: -12.125006675720215
    3. ' )' → logprob: -13.750006675720215
    4. ']' → logprob: -17.8750057220459
    5. '   ' → logprob: -18.1250057220459
    6. '[' → logprob: -18.1250057220459
    7. '）' → logprob: -18.3750057220459
    8. '0' → logprob: -18.5000057220459
    9. '))' → logprob: -18.6250057220459
    10. 'y' → logprob: -18.6250057220459

Token 133: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01599166728556156
    2. '+' → logprob: -4.390991687774658
    3. ')+' → logprob: -5.765991687774658
    4. '[' → logprob: -8.3909912109375
    5. ']' → logprob: -10.0159912109375
    6. '>' → logprob: -10.3909912109375
    7. ' +' → logprob: -11.3909912109375
    8. '```' → logprob: -11.7659912109375
    9. '[]' → logprob: -12.0159912109375
    10. ']+' → logprob: -12.6409912109375

Token 134: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.12693557143211365
    2. ' abs' → logprob: -2.1269354820251465
    3. '(abs' → logprob: -12.126935958862305
    4. '       ' → logprob: -14.376935958862305
    5. 'points' → logprob: -14.626935958862305
    6. '   ' → logprob: -14.876935958862305
    7. '    ' → logprob: -15.251935958862305
    8. ' points' → logprob: -15.626935958862305
    9. '        ' → logprob: -16.001935958862305
    10. '           ' → logprob: -16.126935958862305

Token 135: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.0280383548888494e-06
    2. 'points' → logprob: -14.250000953674316
    3. '(' → logprob: -15.750000953674316
    4. ' points' → logprob: -16.750001907348633
    5. '	points' → logprob: -17.875001907348633
    6. '(point' → logprob: -18.875001907348633
    7. '(parts' → logprob: -20.250001907348633
    8. '(p' → logprob: -20.375001907348633
    9. ' (' → logprob: -20.875001907348633
    10. 'Points' → logprob: -21.250001907348633

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.049755782238208e-05
    2. '0' → logprob: -10.75005054473877
    3. '][' → logprob: -11.00005054473877
    4. '   ' → logprob: -12.12505054473877
    5. ' [' → logprob: -14.12505054473877
    6. '       ' → logprob: -14.25005054473877
    7. '```' → logprob: -14.37505054473877
    8. ')' → logprob: -14.50005054473877
    9. '[i' → logprob: -14.87505054473877
    10. '[][' → logprob: -15.00005054473877

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22082117199897766
    2. '1' → logprob: -1.7208211421966553
    3. '[' → logprob: -3.9708211421966553
    4. 'y' → logprob: -8.845821380615234
    5. 'cy' → logprob: -8.970821380615234
    6. '2' → logprob: -10.470821380615234
    7. ' ' → logprob: -11.095821380615234
    8. '```' → logprob: -11.720821380615234
    9. ']' → logprob: -12.345821380615234
    10. ',' → logprob: -12.470821380615234

Token 138: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010507925180718303
    2. '][' → logprob: -7.00105094909668
    3. ']' → logprob: -9.75105094909668
    4. '-' → logprob: -10.37605094909668
    5. '   ' → logprob: -10.87605094909668
    6. ' -' → logprob: -11.50105094909668
    7. ')' → logprob: -12.37605094909668
    8. ' [' → logprob: -12.75105094909668
    9. '[
' → logprob: -12.87605094909668
    10. ' ' → logprob: -12.87605094909668

Token 139: '1' (ID: 16)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0014866470592096448
    2. 'y' → logprob: -7.376486778259277
    3. '1' → logprob: -7.501486778259277
    4. ' cy' → logprob: -9.001486778259277
    5. '[' → logprob: -9.251486778259277
    6. ' ' → logprob: -11.001486778259277
    7. '   ' → logprob: -11.251486778259277
    8. 'py' → logprob: -11.376486778259277
    9. ')' → logprob: -11.626486778259277
    10. '0' → logprob: -11.876486778259277

Token 140: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012754139490425587
    2. '-' → logprob: -4.387753963470459
    3. ']' → logprob: -8.887754440307617
    4. ' ' → logprob: -10.137754440307617
    5. ')' → logprob: -10.262754440307617
    6. '[' → logprob: -10.762754440307617
    7. '<|end|>' → logprob: -12.137754440307617
    8. '   ' → logprob: -13.887754440307617
    9. '  ' → logprob: -14.012754440307617
    10. '-c' → logprob: -14.762754440307617

Token 141: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890884578227997
    2. '-' → logprob: -2.578908920288086
    3. '-c' → logprob: -11.078908920288086
    4. ' ' → logprob: -12.578908920288086
    5. '[' → logprob: -16.578908920288086
    6. '   ' → logprob: -17.078908920288086
    7. '  ' → logprob: -17.078908920288086
    8. ' ' → logprob: -17.703908920288086
    9. '‌' → logprob: -18.703908920288086
    10. '	' → logprob: -18.953908920288086

Token 142: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00020902375399600714
    2. ' cy' → logprob: -8.500208854675293
    3. 'cyj' → logprob: -12.750208854675293
    4. ' ' → logprob: -13.625208854675293
    5. 'cych' → logprob: -14.875208854675293
    6. '.cy' → logprob: -15.000208854675293
    7. '   ' → logprob: -16.25020980834961
    8. ' ' → logprob: -16.25020980834961
    9. '‌' → logprob: -16.75020980834961
    10. ')' → logprob: -16.75020980834961

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12701316177845
    2. ')
' → logprob: -2.1270132064819336
    3. '       ' → logprob: -10.252013206481934
    4. '   ' → logprob: -11.127013206481934
    5. ')
' → logprob: -11.127013206481934
    6. ' )' → logprob: -11.877013206481934
    7. ')

' → logprob: -12.377013206481934
    8. ' )
' → logprob: -12.877013206481934
    9. '))' → logprob: -13.252013206481934
    10. ')`
' → logprob: -14.002013206481934

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016085283132269979
    2. 'for' → logprob: -7.251608371734619
    3. ' for' → logprob: -7.251608371734619
    4. '<|end|>' → logprob: -10.001608848571777
    5. '        
' → logprob: -10.126608848571777
    6. '
' → logprob: -10.626608848571777
    7. '           ' → logprob: -11.126608848571777
    8. '	' → logprob: -11.126608848571777
    9. '               ' → logprob: -11.626608848571777
    10. ')' → logprob: -11.626608848571777

Token 145: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36919960379600525
    2. '       ' → logprob: -1.4941996335983276
    3. ' for' → logprob: -2.494199514389038
    4. '
' → logprob: -6.494199752807617
    5. '   ' → logprob: -9.244199752807617
    6. '        
' → logprob: -10.119199752807617
    7. '	for' → logprob: -10.119199752807617
    8. ' ' → logprob: -11.744199752807617
    9. '           ' → logprob: -12.119199752807617
    10. '<|end|>' → logprob: -12.494199752807617

Token 146: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2978858947753906
    2. ' x' → logprob: -2.1728858947753906
    3. ' px' → logprob: -2.7978858947753906
    4. 'px' → logprob: -3.1728858947753906
    5. 'p' → logprob: -3.7978858947753906
    6. ' p' → logprob: -4.422885894775391
    7. 'i' → logprob: -6.422885894775391
    8. ' point' → logprob: -6.922885894775391
    9. 'point' → logprob: -7.172885894775391
    10. ' i' → logprob: -7.297885894775391

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006607305258512497
    2. ',y' → logprob: -7.3756608963012695
    3. ' ,' → logprob: -10.87566089630127
    4. 'y' → logprob: -11.25066089630127
    5. '_,' → logprob: -14.50066089630127
    6. ' in' → logprob: -14.50066089630127
    7. ',
' → logprob: -15.12566089630127
    8. 'p' → logprob: -15.37566089630127
    9. ' y' → logprob: -15.62566089630127
    10. 'point' → logprob: -16.250659942626953

Token 148: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001035787514410913
    2. ' y' → logprob: -6.876035690307617
    3. ',' → logprob: -12.751035690307617
    4. ',y' → logprob: -16.626035690307617
    5. ' ' → logprob: -17.126035690307617
    6. '   ' → logprob: -18.376035690307617
    7. '  ' → logprob: -18.501035690307617
    8. '    ' → logprob: -18.876035690307617
    9. '	y' → logprob: -19.751035690307617
    10. ''y' → logprob: -19.876035690307617

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.587483221665025e-05
    2. ' ,' → logprob: -10.375065803527832
    3. ',h' → logprob: -10.375065803527832
    4. 'points' → logprob: -14.125065803527832
    5. 'h' → logprob: -14.625065803527832
    6. '_,' → logprob: -15.000065803527832
    7. ',height' → logprob: -15.375065803527832
    8. 'H' → logprob: -15.500065803527832
    9. ',_' → logprob: -15.625065803527832
    10. 'z' → logprob: -16.12506675720215

Token 150: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0015054593095555902
    2. ' h' → logprob: -6.501505374908447
    3. ' ' → logprob: -13.501505851745605
    4. '	h' → logprob: -14.751505851745605
    5. ',' → logprob: -15.251505851745605
    6. ',h' → logprob: -15.376505851745605
    7. '  ' → logprob: -15.626505851745605
    8. 'p' → logprob: -15.751505851745605
    9. 'hh' → logprob: -16.25150489807129
    10. '_h' → logprob: -16.50150489807129

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06997956335544586
    2. 'in' → logprob: -2.694979667663574
    3. ',' → logprob: -11.194979667663574
    4. ' ' → logprob: -11.319979667663574
    5. '  ' → logprob: -12.319979667663574
    6. 'points' → logprob: -12.819979667663574
    7. '	in' → logprob: -12.944979667663574
    8. 's' → logprob: -13.069979667663574
    9. '<|end|>' → logprob: -14.194979667663574
    10. 'n' → logprob: -14.444979667663574

Token 152: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0009120595059357584
    2. ' points' → logprob: -7.000912189483643
    3. '(points' → logprob: -15.750911712646484
    4. 'point' → logprob: -16.000911712646484
    5. '	points' → logprob: -16.250911712646484
    6. 'po' → logprob: -17.375911712646484
    7. 'oints' → logprob: -17.625911712646484
    8. '[' → logprob: -18.000911712646484
    9. 'p' → logprob: -18.250911712646484
    10. ' ' → logprob: -18.750911712646484

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001105762057704851
    2. ':
' → logprob: -9.500110626220703
    3. ' :' → logprob: -10.625110626220703
    4. '):' → logprob: -12.125110626220703
    5. ':**' → logprob: -12.375110626220703
    6. '：' → logprob: -15.000110626220703
    7. ':

' → logprob: -15.125110626220703
    8. ')' → logprob: -15.375110626220703
    9. ':
' → logprob: -15.625110626220703
    10. ' in' → logprob: -15.750110626220703

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010653206845745444
    2. '       ' → logprob: -7.251065254211426
    3. ' if' → logprob: -8.876065254211426
    4. '<|end|>' → logprob: -9.126065254211426
    5. '<|end|>' → logprob: -10.501065254211426
    6. 'if' → logprob: -10.626065254211426
    7. '            
' → logprob: -11.251065254211426
    8. '          ' → logprob: -11.626065254211426
    9. '	       ' → logprob: -12.126065254211426
    10. '
' → logprob: -12.251065254211426

Token 155: ' calc' (ID: 25691)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06313978135585785
    2. ' if' → logprob: -3.0631396770477295
    3. '               ' → logprob: -5.063139915466309
    4. '       ' → logprob: -5.688139915466309
    5. '
' → logprob: -5.938139915466309
    6. 'if' → logprob: -6.813139915466309
    7. '            
' → logprob: -8.063139915466309
    8. ' 
' → logprob: -8.188139915466309
    9. '   ' → logprob: -9.188139915466309
    10. ' ' → logprob: -9.688139915466309

Token 156: '_h' (ID: 3434)
  Prédit: 'ulated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulated' → logprob: -0.7527732849121094
    2. '_h' → logprob: -1.2527732849121094
    3. '=' → logprob: -2.5027732849121094
    4. ' =' → logprob: -2.5027732849121094
    5. 'h' → logprob: -3.0027732849121094
    6. '_height' → logprob: -4.502773284912109
    7. 'uated' → logprob: -5.252773284912109
    8. '_' → logprob: -5.627773284912109
    9. 'ated' → logprob: -6.002773284912109
    10. 'culated' → logprob: -6.252773284912109

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742826819419861
    2. '=' → logprob: -0.9742826819419861
    3. '   ' → logprob: -9.474282264709473
    4. 'ated' → logprob: -10.974282264709473
    5. 'culated' → logprob: -10.974282264709473
    6. 'ed' → logprob: -11.349282264709473
    7. '_' → logprob: -11.349282264709473
    8. 'ight' → logprob: -11.724282264709473
    9. ' ==' → logprob: -11.974282264709473
    10. ' ' → logprob: -11.974282264709473

Token 158: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00021212305000517517
    2. ' max' → logprob: -8.625211715698242
    3. 'H' → logprob: -10.375211715698242
    4. '	max' → logprob: -14.250211715698242
    5. '(max' → logprob: -14.875211715698242
    6. '   ' → logprob: -15.625211715698242
    7. '[max' → logprob: -16.875211715698242
    8. '0' → logprob: -17.375211715698242
    9. ' H' → logprob: -17.500211715698242
    10. ' ' → logprob: -17.625211715698242

Token 159: '(H' (ID: 20904)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0700344666838646
    2. '(H' → logprob: -2.6950345039367676
    3. '0' → logprob: -9.57003402709961
    4. 'H' → logprob: -11.19503402709961
    5. '(h' → logprob: -11.94503402709961
    6. ' (' → logprob: -12.32003402709961
    7. '((' → logprob: -13.44503402709961
    8. '(C' → logprob: -14.07003402709961
    9. '(
' → logprob: -15.44503402709961
    10. '```' → logprob: -15.69503402709961

Token 160: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269906908273697
    2. '-' → logprob: -2.126990795135498
    3. ' ' → logprob: -10.62699031829834
    4. '<|end|>' → logprob: -11.37699031829834
    5. '   ' → logprob: -11.87699031829834
    6. ',' → logprob: -12.25199031829834
    7. ')' → logprob: -12.37699031829834
    8. '  ' → logprob: -12.75199031829834
    9. '	' → logprob: -14.12699031829834
    10. ' abs' → logprob: -14.25199031829834

Token 161: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.15645037591457367
    2. ' abs' → logprob: -2.4064502716064453
    3. '(abs' → logprob: -2.9064502716064453
    4. ' (' → logprob: -11.281450271606445
    5. '   ' → logprob: -12.031450271606445
    6. '(' → logprob: -13.156450271606445
    7. ' ' → logprob: -14.656450271606445
    8. '.abs' → logprob: -14.906450271606445
    9. '  ' → logprob: -15.906450271606445
    10. '```' → logprob: -16.031450271606445

Token 162: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.490809417096898e-05
    2. '(cx' → logprob: -10.250055313110352
    3. 'x' → logprob: -10.875055313110352
    4. '(' → logprob: -14.500055313110352
    5. '(c' → logprob: -17.37505531311035
    6. '((' → logprob: -18.12505531311035
    7. '(nx' → logprob: -18.50005531311035
    8. '(points' → logprob: -18.62505531311035
    9. 'cx' → logprob: -19.37505531311035
    10. '(dx' → logprob: -19.50005531311035

Token 163: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.101002536714077
    2. '-' → logprob: -2.3510024547576904
    3. '-c' → logprob: -7.9760026931762695
    4. '[' → logprob: -8.10100269317627
    5. '(cx' → logprob: -8.97600269317627
    6. ' ' → logprob: -11.10100269317627
    7. '(x' → logprob: -13.10100269317627
    8. '[x' → logprob: -13.97600269317627
    9. '[c' → logprob: -14.10100269317627
    10. '-x' → logprob: -14.35100269317627

Token 164: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.014717034064233303
    2. ' cx' → logprob: -4.264717102050781
    3. '(cx' → logprob: -7.514717102050781
    4. '.cx' → logprob: -11.889717102050781
    5. 'c' → logprob: -15.139717102050781
    6. ' ' → logprob: -15.264717102050781
    7. '[' → logprob: -15.639717102050781
    8. 'cy' → logprob: -15.639717102050781
    9. ')' → logprob: -15.639717102050781
    10. '```' → logprob: -16.51471710205078

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')-' → logprob: -13.75000286102295
    3. ' )' → logprob: -13.87500286102295
    4. '   ' → logprob: -15.00000286102295
    5. '[' → logprob: -15.62500286102295
    6. ' -' → logprob: -15.62500286102295
    7. '-' → logprob: -15.62500286102295
    8. '-)' → logprob: -16.625003814697266
    9. '0' → logprob: -17.375003814697266
    10. ' ' → logprob: -17.875003814697266

Token 166: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012752845883369446
    2. '-' → logprob: -4.512753009796143
    3. ' -' → logprob: -6.387753009796143
    4. ')-' → logprob: -11.512752532958984
    5. '   ' → logprob: -12.262752532958984
    6. '[' → logprob: -13.137752532958984
    7. ' )' → logprob: -13.637752532958984
    8. ' ' → logprob: -14.137752532958984
    9. '-)' → logprob: -14.137752532958984
    10. ']' → logprob: -14.887752532958984

Token 167: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.026459485292434692
    2. ' abs' → logprob: -4.026459693908691
    3. 'y' → logprob: -5.026459693908691
    4. ' y' → logprob: -6.526459693908691
    5. '(abs' → logprob: -8.401459693908691
    6. '(y' → logprob: -11.151459693908691
    7. '<|end|>' → logprob: -12.651459693908691
    8. 'cy' → logprob: -13.026459693908691
    9. '.abs' → logprob: -13.651459693908691
    10. '_abs' → logprob: -14.276459693908691

Token 168: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00014740281039848924
    2. 'y' → logprob: -9.125147819519043
    3. '(' → logprob: -10.250147819519043
    4. ' y' → logprob: -13.625147819519043
    5. '(x' → logprob: -14.125147819519043
    6. ' (' → logprob: -14.375147819519043
    7. '[y' → logprob: -15.250147819519043
    8. '	y' → logprob: -15.625147819519043
    9. '   ' → logprob: -16.500146865844727
    10. '  ' → logprob: -17.625146865844727

Token 169: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012817579321563244
    2. '-' → logprob: -4.3878173828125
    3. '[' → logprob: -8.5128173828125
    4. ' ' → logprob: -9.5128173828125
    5. '-c' → logprob: -11.2628173828125
    6. ')' → logprob: -11.7628173828125
    7. '   ' → logprob: -12.8878173828125
    8. '  ' → logprob: -13.1378173828125
    9. 'cy' → logprob: -13.3878173828125
    10. ',' → logprob: -14.1378173828125

Token 170: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0001254693343071267
    2. ' cy' → logprob: -9.000125885009766
    3. ' ' → logprob: -14.375125885009766
    4. 'cyj' → logprob: -14.375125885009766
    5. '   ' → logprob: -15.500125885009766
    6. 'y' → logprob: -16.125125885009766
    7. '.cy' → logprob: -16.125125885009766
    8. '  ' → logprob: -16.750125885009766
    9. ')' → logprob: -16.750125885009766
    10. 'cych' → logprob: -16.875125885009766

Token 171: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.000476190383778885
    2. ' ),' → logprob: -8.375475883483887
    3. ',' → logprob: -9.000475883483887
    4. ')' → logprob: -9.125475883483887
    5. ')),' → logprob: -12.250475883483887
    6. '       ' → logprob: -13.875475883483887
    7. '))' → logprob: -14.000475883483887
    8. '   ' → logprob: -14.000475883483887
    9. ' ' → logprob: -14.125475883483887
    10. ' ,' → logprob: -14.125475883483887

Token 172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010337610729038715
    2. ' ' → logprob: -6.876033782958984
    3. '   ' → logprob: -14.126033782958984
    4. ')' → logprob: -16.376033782958984
    5. '  ' → logprob: -16.751033782958984
    6. ' ' → logprob: -17.501033782958984
    7. '۰' → logprob: -17.626033782958984
    8. '    ' → logprob: -18.751033782958984
    9. '```' → logprob: -19.063533782958984
    10. '０' → logprob: -19.063533782958984

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.875019073486328
    4. ')' → logprob: -19.625019073486328
    5. '۰' → logprob: -20.750019073486328
    6. '00' → logprob: -20.875019073486328
    7. '  ' → logprob: -21.125019073486328
    8. ' ' → logprob: -21.125019073486328
    9. '０' → logprob: -21.500019073486328
    10. '```' → logprob: -21.500019073486328

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0074619268998503685
    2. ')
' → logprob: -5.632462024688721
    3. '       ' → logprob: -5.757462024688721
    4. '           ' → logprob: -7.632462024688721
    5. ' )' → logprob: -9.382461547851562
    6. '):
' → logprob: -10.007461547851562
    7. '<|end|>' → logprob: -10.507461547851562
    8. '   ' → logprob: -11.632461547851562
    9. '               ' → logprob: -11.757461547851562
    10. ')
' → logprob: -12.007461547851562

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007643607095815241
    2. '       ' → logprob: -7.3757643699646
    3. '<|end|>' → logprob: -9.625763893127441
    4. '   ' → logprob: -10.125763893127441
    5. '            
' → logprob: -12.000763893127441
    6. ' if' → logprob: -12.000763893127441
    7. '
' → logprob: -12.625763893127441
    8. '<|end|>' → logprob: -13.000763893127441
    9. 'if' → logprob: -13.250763893127441
    10. ' ' → logprob: -13.375763893127441

Token 176: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1056036576628685
    2. ' if' → logprob: -2.8556036949157715
    3. '       ' → logprob: -3.3556036949157715
    4. '           ' → logprob: -4.8556036949157715
    5. '   ' → logprob: -10.855603218078613
    6. '	if' → logprob: -12.980603218078613
    7. ' ' → logprob: -13.605603218078613
    8. '     ' → logprob: -14.730603218078613
    9. '      ' → logprob: -14.980603218078613
    10. '  ' → logprob: -15.105603218078613

Token 177: ' h' (ID: 312)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.25265586376190186
    2. 'calc' → logprob: -1.5026558637619019
    3. 'h' → logprob: -7.627655982971191
    4. ' h' → logprob: -8.627655982971191
    5. '(calc' → logprob: -10.127655982971191
    6. 'cal' → logprob: -10.877655982971191
    7. ' cal' → logprob: -14.502655982971191
    8. '_calc' → logprob: -14.627655982971191
    9. '.calc' → logprob: -15.502655982971191
    10. '	h' → logprob: -15.877655982971191

Token 178: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3868991434574127
    2. ' !=' → logprob: -1.1368991136550903
    3. '!==' → logprob: -11.2618989944458
    4. ')!=' → logprob: -12.6368989944458
    5. ']!=' → logprob: -12.8868989944458
    6. '>' → logprob: -13.3868989944458
    7. '()!=' → logprob: -13.3868989944458
    8. '!' → logprob: -13.6368989944458
    9. '=' → logprob: -13.6368989944458
    10. '!=(' → logprob: -14.0118989944458

Token 179: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.2519381642341614
    2. ' calc' → logprob: -1.5019381046295166
    3. 'cal' → logprob: -11.876937866210938
    4. '0' → logprob: -13.876937866210938
    5. '(calc' → logprob: -14.501937866210938
    6. ' ' → logprob: -14.876937866210938
    7. 'c' → logprob: -15.751937866210938
    8. '.calc' → logprob: -16.501937866210938
    9. '_calc' → logprob: -16.876937866210938
    10. 'calcul' → logprob: -17.251937866210938

Token 180: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -2.47495681833243e-05
    2. '_' → logprob: -10.625024795532227
    3. '_y' → logprob: -15.750024795532227
    4. '_t' → logprob: -17.125024795532227
    5. '_a' → logprob: -17.375024795532227
    6. '_u' → logprob: -17.500024795532227
    7. ' _' → logprob: -17.625024795532227
    8. '_x' → logprob: -17.750024795532227
    9. '_
' → logprob: -18.000024795532227
    10. '__' → logprob: -18.250024795532227

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07922694832086563
    2. ':
' → logprob: -2.5792269706726074
    3. '           ' → logprob: -8.45422649383545
    4. '       ' → logprob: -10.70422649383545
    5. ' :' → logprob: -10.82922649383545
    6. '):' → logprob: -11.07922649383545
    7. '):
' → logprob: -11.45422649383545
    8. '               ' → logprob: -11.57922649383545
    9. ' and' → logprob: -11.70422649383545
    10. ')' → logprob: -11.70422649383545

Token 182: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04952513054013252
    2. '           ' → logprob: -3.049525022506714
    3. '             ' → logprob: -8.549525260925293
    4. '                
' → logprob: -8.549525260925293
    5. '            
' → logprob: -9.049525260925293
    6. '              ' → logprob: -9.299525260925293
    7. '                   ' → logprob: -9.424525260925293
    8. '            ' → logprob: -9.924525260925293
    9. '
' → logprob: -10.174525260925293
    10. '       ' → logprob: -10.299525260925293

Token 183: ' ok' (ID: 4763)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3050190210342407
    2. '               ' → logprob: -1.3050190210342407
    3. 'ok' (adapté à ' ok') → logprob: -1.4300190210342407
    4. '
' → logprob: -1.9300190210342407
    5. ' ok' → logprob: -2.805018901824951
    6. '                   ' → logprob: -4.555018901824951
    7. '            
' → logprob: -7.680018901824951
    8. '                
' → logprob: -7.805018901824951
    9. '	ok' → logprob: -8.05501937866211
    10. '   ' → logprob: -8.30501937866211

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252061665058136
    2. '=' → logprob: -1.5020616054534912
    3. '=False' → logprob: -9.12706184387207
    4. ' ' → logprob: -11.00206184387207
    5. '=True' → logprob: -13.25206184387207
    6. '  ' → logprob: -13.75206184387207
    7. '   ' → logprob: -13.75206184387207
    8. '    ' → logprob: -14.00206184387207
    9. '            ' → logprob: -15.00206184387207
    10. ' ==' → logprob: -15.37706184387207

Token 185: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -19.500261306762695
    4. '=False' → logprob: -20.875261306762695
    5. 'F' → logprob: -21.875261306762695
    6. 'false' → logprob: -23.125261306762695
    7. '   ' → logprob: -23.375261306762695
    8. '_false' → logprob: -24.500261306762695
    9. 'Fal' → logprob: -24.500261306762695
    10. '.False' → logprob: -24.625261306762695

Token 186: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.130576806142926e-05
    2. '                
' → logprob: -10.625031471252441
    3. '<|end|>' → logprob: -13.500031471252441
    4. '           ' → logprob: -13.875031471252441
    5. '              ' → logprob: -14.125031471252441
    6. '       ' → logprob: -14.125031471252441
    7. '                   ' → logprob: -14.250031471252441
    8. '			' → logprob: -14.875031471252441
    9. '
' → logprob: -15.000031471252441
    10. '                ' → logprob: -15.000031471252441

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.874882430769503e-05
    2. '                
' → logprob: -10.250079154968262
    3. '			' → logprob: -11.125079154968262
    4. '              ' → logprob: -12.125079154968262
    5. '		       ' → logprob: -12.125079154968262
    6. '<|end|>' → logprob: -12.125079154968262
    7. '                ' → logprob: -12.625079154968262
    8. '       ' → logprob: -13.375079154968262
    9. '                   ' → logprob: -13.750079154968262
    10. '           ' → logprob: -13.750079154968262

Token 188: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2021249532699585
    2. '               ' → logprob: -1.7021249532699585
    3. ' break' → logprob: -7.327125072479248
    4. '           ' → logprob: -10.57712459564209
    5. '	break' → logprob: -10.95212459564209
    6. '              ' → logprob: -12.82712459564209
    7. '                   ' → logprob: -12.82712459564209
    8. 'b' → logprob: -13.82712459564209
    9. '       ' → logprob: -14.20212459564209
    10. '_break' → logprob: -14.32712459564209

Token 189: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011110436171293259
    2. '   ' → logprob: -7.876111030578613
    3. '        
' → logprob: -7.876111030578613
    4. ' if' → logprob: -8.751111030578613
    5. 'if' → logprob: -9.751111030578613
    6. ' 
' → logprob: -10.501111030578613
    7. '    
' → logprob: -10.501111030578613
    8. '
' → logprob: -10.876111030578613
    9. '  
' → logprob: -11.501111030578613
    10. '            
' → logprob: -12.001111030578613

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002214172709500417
    2. '   ' → logprob: -8.750221252441406
    3. '        
' → logprob: -10.625221252441406
    4. ' if' → logprob: -11.000221252441406
    5. 'if' → logprob: -12.250221252441406
    6. ' ' → logprob: -12.375221252441406
    7. '<|end|>' → logprob: -12.625221252441406
    8. '
' → logprob: -13.375221252441406
    9. '                
' → logprob: -13.625221252441406
    10. '    ' → logprob: -14.125221252441406

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38229018449783325
    2. '   ' → logprob: -1.8822901248931885
    3. ' if' → logprob: -2.3822901248931885
    4. '       ' → logprob: -2.6322901248931885
    5. '
' → logprob: -8.13228988647461
    6. ' ' → logprob: -8.25728988647461
    7. '        
' → logprob: -8.63228988647461
    8. '    ' → logprob: -8.63228988647461
    9. '  ' → logprob: -9.00728988647461
    10. '    
' → logprob: -9.25728988647461

Token 192: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.0052360063418745995
    2. 'ok' → logprob: -5.2552361488342285
    3. '	ok' → logprob: -14.00523567199707
    4. ' okay' → logprob: -14.50523567199707
    5. ' ' → logprob: -15.13023567199707
    6. ' ' → logprob: -15.13023567199707
    7. ' not' → logprob: -16.25523567199707
    8. '(ok' → logprob: -16.25523567199707
    9. ' ок' → logprob: -16.75523567199707
    10. 'not' → logprob: -17.38023567199707

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018101456225849688
    2. ':
' → logprob: -8.625181198120117
    3. ' :' → logprob: -14.750181198120117
    4. ':return' → logprob: -15.125181198120117
    5. '           ' → logprob: -15.375181198120117
    6. '):' → logprob: -15.625181198120117
    7. '       ' → logprob: -16.625181198120117
    8. ',' → logprob: -16.875181198120117
    9. ':**' → logprob: -16.875181198120117
    10. ':
' → logprob: -16.875181198120117

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10146137326955795
    2. ' print' → logprob: -2.851461410522461
    3. '       ' → logprob: -3.601461410522461
    4. 'print' → logprob: -4.476461410522461
    5. '   ' → logprob: -10.726461410522461
    6. '               ' → logprob: -11.726461410522461
    7. ',' → logprob: -12.101461410522461
    8. '```' → logprob: -12.101461410522461
    9. '	       ' → logprob: -12.851461410522461
    10. '	print' → logprob: -12.851461410522461

Token 195: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007892059162259102
    2. ' print' → logprob: -5.00789213180542
    3. '           ' → logprob: -6.75789213180542
    4. '       ' → logprob: -11.257891654968262
    5. '   ' → logprob: -13.632891654968262
    6. '	print' → logprob: -15.882891654968262
    7. '               ' → logprob: -17.757892608642578
    8. ' ' → logprob: -17.882892608642578
    9. '```' → logprob: -18.132892608642578
    10. '
' → logprob: -18.632892608642578

Token 196: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.00011319868644932285
    2. '(' → logprob: -9.250113487243652
    3. '(f' → logprob: -11.000113487243652
    4. 'cx' → logprob: -16.000112533569336
    5. ' (' → logprob: -16.375112533569336
    6. 'f' → logprob: -16.875112533569336
    7. '.cx' → logprob: -19.250112533569336
    8. '(
' → logprob: -19.375112533569336
    9. '((' → logprob: -19.500112533569336
    10. ' cx' → logprob: -19.750112533569336

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.644463479053229e-05
    2. ' ,' → logprob: -10.125046730041504
    3. ',c' → logprob: -12.375046730041504
    4. ',end' → logprob: -13.500046730041504
    5. ',
' → logprob: -15.125046730041504
    6. ',y' → logprob: -15.750046730041504
    7. ')' → logprob: -16.875045776367188
    8. '<|end|>' → logprob: -17.000045776367188
    9. ' ' → logprob: -17.250045776367188
    10. ',C' → logprob: -17.875045776367188

Token 198: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -3.547789674485102e-05
    2. ' cy' → logprob: -10.250035285949707
    3. ' ' → logprob: -18.375036239624023
    4. 'cyj' → logprob: -18.875036239624023
    5. '.cy' → logprob: -20.250036239624023
    6. '   ' → logprob: -20.500036239624023
    7. 'Cy' → logprob: -21.125036239624023
    8. '    
' → logprob: -21.375036239624023
    9. ' ' → logprob: -21.750036239624023
    10. '  
' → logprob: -22.000036239624023

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.624555291840807e-05
    2. ' ,' → logprob: -10.125076293945312
    3. ',H' → logprob: -10.250076293945312
    4. 'H' → logprob: -14.625076293945312
    5. ')' → logprob: -15.875076293945312
    6. ' H' → logprob: -16.875076293945312
    7. ',
' → logprob: -17.875076293945312
    8. ',end' → logprob: -18.750076293945312
    9. ',int' → logprob: -18.875076293945312
    10. '‌,' → logprob: -19.375076293945312

Token 200: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.5491004129871726e-05
    2. ' H' → logprob: -10.000045776367188
    3. 'int' → logprob: -19.250045776367188
    4. ' ' → logprob: -20.125045776367188
    5. ')' → logprob: -20.750045776367188
    6. ',H' → logprob: -21.625045776367188
    7. '   ' → logprob: -22.000045776367188
    8. ',' → logprob: -22.750045776367188
    9. '(H' → logprob: -23.000045776367188
    10. ' ' → logprob: -23.125045776367188

Token 201: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009387354948557913
    2. ')
' → logprob: -7.375938892364502
    3. '<|end|>' → logprob: -8.250938415527344
    4. '           ' → logprob: -10.750938415527344
    5. ')return' → logprob: -11.250938415527344
    6. ' )' → logprob: -12.375938415527344
    7. '```' → logprob: -13.125938415527344
    8. '       ' → logprob: -13.250938415527344
    9. '<|end|>' → logprob: -13.500938415527344
    10. '               ' → logprob: -13.625938415527344

Token 202: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' sys' (ID: 12228)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.014511936344206333
    2. 'exit' → logprob: -4.764512062072754
    3. '           ' → logprob: -5.264512062072754
    4. ' break' → logprob: -7.264512062072754
    5. '	break' → logprob: -13.264512062072754
    6. 'return' → logprob: -13.514512062072754
    7. 'sys' (adapté à ' sys') → logprob: -13.889512062072754
    8. '               ' → logprob: -14.014512062072754
    9. ' exit' → logprob: -14.014512062072754
    10. 'quit' → logprob: -14.514512062072754

Token 204: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -2.451116051815916e-05
    2. '.' → logprob: -10.875024795532227
    3. 'exit' → logprob: -12.875024795532227
    4. '.stdout' → logprob: -13.125024795532227
    5. '.quit' → logprob: -15.375024795532227
    6. '.ex' → logprob: -15.750024795532227
    7. '.Exit' → logprob: -16.000024795532227
    8. ' .' → logprob: -16.000024795532227
    9. '	exit' → logprob: -16.000024795532227
    10. ' exit' → logprob: -16.625024795532227

Token 205: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061982251703739166
    2. '(' → logprob: -2.8119821548461914
    3. '()(' → logprob: -12.561982154846191
    4. '0' → logprob: -12.686982154846191
    5. '()
' → logprob: -13.186982154846191
    6. '()`' → logprob: -13.311982154846191
    7. '().' → logprob: -13.936982154846191
    8. ' ()' → logprob: -14.311982154846191
    9. '()]' → logprob: -14.436982154846191
    10. '())' → logprob: -14.686982154846191

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ')' → logprob: -16.375
    3. ' ' → logprob: -18.875
    4. '()' → logprob: -21.5
    5. '(' → logprob: -21.625
    6. '   ' → logprob: -22.625
    7. '۰' → logprob: -23.0
    8. '０' → logprob: -23.375
    9. '())' → logprob: -23.75
    10. '٠' → logprob: -24.75

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. ')
' → logprob: -10.750021934509277
    3. '())' → logprob: -15.625021934509277
    4. '))' → logprob: -16.125022888183594
    5. ' )' → logprob: -16.375022888183594
    6. '`)' → logprob: -16.625022888183594
    7. ')

' → logprob: -18.000022888183594
    8. ')`' → logprob: -18.000022888183594
    9. '()' → logprob: -18.375022888183594
    10. '')' → logprob: -18.500022888183594

Token 208: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' bon' (ID: 4846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ''est' (ID: 6616)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.36743760108947754
    2. '#' → logprob: -2.1174376010894775
    3. '```' → logprob: -2.3674376010894775
    4. ''est' → logprob: -3.7424376010894775
    5. ''#' → logprob: -4.367437362670898
    6. ''' → logprob: -4.617437362670898
    7. 'oup' → logprob: -5.117437362670898
    8. 'e' → logprob: -5.117437362670898
    9. 'om' → logprob: -5.367437362670898
    10. ''''' → logprob: -5.742437362670898

Token 213: ' fini' (ID: 63561)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.12838180363178253
    2. 'ici' → logprob: -3.5033817291259766
    3. 'tout' → logprob: -4.378381729125977
    4. 'la' → logprob: -4.628381729125977
    5. 'le' → logprob: -4.628381729125977
    6. 'correct' → logprob: -4.878381729125977
    7. 'une' → logprob: -5.128381729125977
    8. 'un' → logprob: -5.253381729125977
    9. 'f' → logprob: -5.253381729125977
    10. 'pas' → logprob: -5.378381729125977

Token 214: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' sort' (ID: 4506)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.2501613199710846
    2. 'continue' → logprob: -2.5001614093780518
    3. 'a' → logprob: -2.8751614093780518
    4. 'n' → logprob: -4.125161170959473
    5. 'sort' → logprob: -4.500161170959473
    6. 'stop' → logprob: -4.750161170959473
    7. 'f' → logprob: -4.750161170959473
    8. 'pe' → logprob: -5.500161170959473
    9. 'term' → logprob: -5.500161170959473
    10. 'break' → logprob: -5.500161170959473

Token 217: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' cens' (ID: 55288)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7435206770896912
    2. '#' → logprob: -1.743520736694336
    3. 'de' → logprob: -2.243520736694336
    4. 'fin' → logprob: -3.118520736694336
    5. 'termin' → logprob: -3.243520736694336
    6. 'possible' → logprob: -3.743520736694336
    7. 'fait' → logprob: -4.118520736694336
    8. 'bes' → logprob: -4.868520736694336
    9. ' besoin' → logprob: -4.868520736694336
    10. 'gr' → logprob: -4.993520736694336

Token 221: 'é' (ID: 377)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5875766277313232
    2. 'é' → logprob: -1.2125766277313232
    3. 'ue' → logprob: -2.4625766277313232
    4. 'us' → logprob: -4.337576866149902
    5. 'ée' → logprob: -4.587576866149902
    6. '#' → logprob: -4.962576866149902
    7. 'ues' → logprob: -5.337576866149902
    8. 's' → logprob: -5.712576866149902
    9. 'uer' → logprob: -5.712576866149902
    10. 'sens' → logprob: -5.712576866149902

Token 222: ' arriver' (ID: 78302)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' là' (ID: 8052)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' normalement' (ID: 164432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: '...' (ID: 1008)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 223
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 35.87%
Précision adaptée (1ère position): 39.01%
Précision (top 10): 78.03%
================================================================================
