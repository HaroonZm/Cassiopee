================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N = 200002; MODULO = 998244353
    nmk = input().split()
    n, m, k = (int(x) for x in nmk)

    F = [1]*N; f_inv = [1]*N
    idx = 1
    while idx < N:
        F[idx] = F[idx-1] * idx % MODULO
        idx += 1

    f_inv[-1] = pow(F[-1], MODULO-2, MODULO)
    for z in range(N-2, -1, -1): f_inv[z] = f_inv[z+1]*(z+1) % MODULO

    choose = lambda p, q: F[p]*f_inv[q]*f_inv[p-q]%MODULO

    total = pow(m, n, MODULO)
    deduction = 0
    r = 1
    while r < n-k:
        deduction = (deduction + choose(n-1, r-1)*m*pow(m-1, r-1, MODULO)) % MODULO
        r += 1
    ans = (total - deduction) % MODULO

    [print(ans) for _ in (tuple(),)]  # why not? a list comp for print!

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2677304744720459
    2. '\n' → logprob: -1.767730474472046
    3. '   ' → logprob: -4.392730712890625
    4. '    ' → logprob: -4.517730712890625
    5. '    
' → logprob: -4.642730712890625
    6. ' 
' → logprob: -5.017730712890625
    7. ''' → logprob: -5.142730712890625
    8. '(' → logprob: -5.517730712890625
    9. ' ' → logprob: -5.892730712890625
    10. '\r' → logprob: -6.267730712890625

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5994746685028076
    2. '   ' → logprob: -1.4744746685028076
    3. 'pass' → logprob: -2.0994746685028076
    4. 'return' → logprob: -2.8494746685028076
    5. '#' → logprob: -4.224474906921387
    6. 'p' → logprob: -5.224474906921387
    7. '```' → logprob: -5.724474906921387
    8. 'r' → logprob: -5.724474906921387
    9. '\' → logprob: -5.849474906921387
    10. 'a' → logprob: -6.099474906921387

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2588377892971039
    2. '=' → logprob: -1.6338378190994263
    3. '_' → logprob: -4.508837699890137
    4. ' ' → logprob: -4.508837699890137
    5. ')' → logprob: -6.008837699890137
    6. ',' → logprob: -6.258837699890137
    7. '   ' → logprob: -6.258837699890137
    8. '.' → logprob: -6.508837699890137
    9. '  ' → logprob: -7.133837699890137
    10. '_space' → logprob: -7.383837699890137

Token 6: ' ' (ID: 220)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2442295402288437
    2. ' ' → logprob: -1.6192295551300049
    3. 'int' → logprob: -4.119229316711426
    4. '10' → logprob: -6.494229316711426
    5. ' input' → logprob: -7.994229316711426
    6. '5' → logprob: -9.119229316711426
    7. '0' → logprob: -9.119229316711426
    8. '20' → logprob: -9.494229316711426
    9. '32' → logprob: -9.994229316711426
    10. 'input' → logprob: -10.244229316711426

Token 7: '200' (ID: 1179)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.057027727365493774
    2. ' int' → logprob: -3.057027816772461
    3. '10' → logprob: -4.807027816772461
    4. '5' → logprob: -9.057027816772461
    5. ' ' → logprob: -9.557027816772461
    6. 'input' → logprob: -11.307027816772461
    7. '100' → logprob: -11.807027816772461
    8. '42' → logprob: -11.807027816772461
    9. '20' → logprob: -12.057027816772461
    10. '50' → logprob: -12.932027816772461

Token 8: '002' (ID: 11950)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21325348317623138
    2. '\n' → logprob: -2.9632534980773926
    3. ':' → logprob: -3.0882534980773926
    4. '\' → logprob: -3.3382534980773926
    5. '```' → logprob: -3.3382534980773926
    6. '' → logprob: -4.838253498077393
    7. '<|end|>' → logprob: -5.963253498077393
    8. '**' → logprob: -6.338253498077393
    9. '    
' → logprob: -6.463253498077393
    10. '\r' → logprob: -6.588253498077393

Token 9: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4941970705986023
    2. '' → logprob: -2.494197130203247
    3. ':' → logprob: -2.744197130203247
    4. '\' → logprob: -2.744197130203247
    5. '\n' → logprob: -2.869197130203247
    6. ' ' → logprob: -3.744197130203247
    7. '```' → logprob: -3.869197130203247
    8. '    
' → logprob: -4.119196891784668
    9. '   ' → logprob: -4.619196891784668
    10. '#' → logprob: -4.619196891784668

Token 10: ' MOD' (ID: 32868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07968003302812576
    2. ' 
' → logprob: -3.2046799659729004
    3. '\n' → logprob: -4.3296799659729
    4. '   ' → logprob: -5.3296799659729
    5. '\' → logprob: -5.9546799659729
    6. '    
' → logprob: -6.0796799659729
    7. '    ' → logprob: -6.0796799659729
    8. '
' → logprob: -6.3296799659729
    9. '  ' → logprob: -6.8296799659729
    10. '```' → logprob: -6.9546799659729

Token 11: 'ULO' (ID: 63916)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5931095480918884
    2. ' =' → logprob: -0.8431095480918884
    3. ' ' → logprob: -4.218109607696533
    4. '_' → logprob: -7.218109607696533
    5. ')' → logprob: -7.468109607696533
    6. '  ' → logprob: -8.093109130859375
    7. ',' → logprob: -8.343109130859375
    8. '<|end|>' → logprob: -9.093109130859375
    9. '   ' → logprob: -9.343109130859375
    10. ' ,' → logprob: -10.343109130859375

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6390577554702759
    2. '=' → logprob: -0.7640577554702759
    3. ' ' → logprob: -5.514057636260986
    4. '_' → logprob: -6.639057636260986
    5. ')' → logprob: -7.514057636260986
    6. '  ' → logprob: -9.014058113098145
    7. '   ' → logprob: -9.264058113098145
    8. '<|end|>' → logprob: -9.639058113098145
    9. ',' → logprob: -10.014058113098145
    10. ' =
' → logprob: -10.139058113098145

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14689305424690247
    2. '100' → logprob: -2.27189302444458
    3. '10' → logprob: -3.39689302444458
    4. '1' → logprob: -11.646893501281738
    5. '200' → logprob: -12.396893501281738
    6. ' (' → logprob: -13.396893501281738
    7. '2' → logprob: -13.646893501281738
    8. '(' → logprob: -13.896893501281738
    9. ' ' → logprob: -13.896893501281738
    10. 'int' → logprob: -14.146893501281738

Token 14: '998' (ID: 34589)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3880118429660797
    2. '10' → logprob: -1.1380118131637573
    3. ' ' → logprob: -6.888011932373047
    4. '1' → logprob: -9.388011932373047
    5. '(' → logprob: -11.388011932373047
    6. '200' → logprob: -11.638011932373047
    7. 'int' → logprob: -11.638011932373047
    8. '998' → logprob: -12.763011932373047
    9. '2' → logprob: -13.388011932373047
    10. '   ' → logprob: -14.763011932373047

Token 15: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.3199920178740285e-05
    2. '247' → logprob: -11.500022888183594
    3. '243' → logprob: -12.250022888183594
    4. '457' → logprob: -12.375022888183594
    5. '245' → logprob: -14.375022888183594
    6. '4' → logprob: -14.625022888183594
    7. '447' → logprob: -14.875022888183594
    8. '444' → logprob: -15.000022888183594
    9. '24' → logprob: -15.000022888183594
    10. '2' → logprob: -15.125022888183594

Token 16: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.005418261978775263
    2. '257' → logprob: -5.630418300628662
    3. '357' → logprob: -6.380418300628662
    4. '853' → logprob: -9.880417823791504
    5. '253' → logprob: -10.380417823791504
    6. '857' → logprob: -10.630417823791504
    7. '7' → logprob: -12.380417823791504
    8. '3' → logprob: -12.505417823791504
    9. '```' → logprob: -13.130417823791504
    10. '457' → logprob: -13.505417823791504

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15105114877223969
    2. '    
' → logprob: -3.0260510444641113
    3. '\n' → logprob: -3.1510510444641113
    4. '```' → logprob: -4.151051044464111
    5. '\' → logprob: -5.026051044464111
    6. '' → logprob: -5.151051044464111
    7. '   ' → logprob: -5.526051044464111
    8. '<|end|>' → logprob: -5.901051044464111
    9. ' 
' → logprob: -6.151051044464111
    10. '  
' → logprob: -6.151051044464111

Token 18: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06536831706762314
    2. '    
' → logprob: -4.065368175506592
    3. '\n' → logprob: -4.440368175506592
    4. '\' → logprob: -4.690368175506592
    5. '   ' → logprob: -4.690368175506592
    6. '' → logprob: -4.815368175506592
    7. '```' → logprob: -6.065368175506592
    8. ' 
' → logprob: -6.690368175506592
    9. '
' → logprob: -7.065368175506592
    10. '   
' → logprob: -7.815368175506592

Token 19: ' n' (ID: 297)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8443106412887573
    2. '\n' → logprob: -1.2193106412887573
    3. '
' → logprob: -2.219310760498047
    4. '    
' → logprob: -2.844310760498047
    5. '   ' → logprob: -3.344310760498047
    6. '```' → logprob: -4.094310760498047
    7. ' ' → logprob: -4.594310760498047
    8. ' 
' → logprob: -4.719310760498047
    9. '\r' → logprob: -5.094310760498047
    10. '`' → logprob: -5.219310760498047

Token 20: 'mk' (ID: 28902)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3443371653556824
    2. ' ' → logprob: -1.7193372249603271
    3. '=' → logprob: -2.344337224960327
    4. ',' → logprob: -4.344336986541748
    5. '  ' → logprob: -6.844336986541748
    6. ')' → logprob: -7.719336986541748
    7. ' ,' → logprob: -7.844336986541748
    8. '_' → logprob: -8.094337463378906
    9. '   ' → logprob: -8.219337463378906
    10. '.' → logprob: -8.344337463378906

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5871793031692505
    2. '=' → logprob: -1.4621793031692505
    3. '[' → logprob: -1.7121793031692505
    4. '_' → logprob: -4.337179183959961
    5. ',' → logprob: -4.712179183959961
    6. ' ' → logprob: -5.087179183959961
    7. '.' → logprob: -6.337179183959961
    8. ')' → logprob: -7.587179183959961
    9. '['' → logprob: -7.712179183959961
    10. '  ' → logprob: -8.962179183959961

Token 22: ' input' (ID: 3422)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9280425906181335
    2. ' input' → logprob: -0.9280425906181335
    3. 'input' → logprob: -2.0530426502227783
    4. 'list' → logprob: -2.5530426502227783
    5. ' [' → logprob: -6.678042411804199
    6. ' map' → logprob: -7.553042411804199
    7. '[' → logprob: -7.553042411804199
    8. 'map' → logprob: -8.0530424118042
    9. '[input' → logprob: -8.9280424118042
    10. 'int' → logprob: -9.3030424118042

Token 23: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13422057032585144
    2. '('' → logprob: -2.509220600128174
    3. '("("' → logprob: -3.634220600128174
    4. '()' → logprob: -4.259220600128174
    5. '().' → logprob: -7.134220600128174
    6. '(()' → logprob: -7.384220600128174
    7. '("")' → logprob: -7.509220600128174
    8. '('.')' → logprob: -8.259220123291016
    9. ''' → logprob: -8.384220123291016
    10. '("' → logprob: -8.384220123291016

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015154577558860183
    2. 'strip' → logprob: -6.5015153884887695
    3. 'rstrip' → logprob: -11.25151538848877
    4. 'spl' → logprob: -16.126516342163086
    5. 's' → logprob: -17.126516342163086
    6. ' split' → logprob: -17.876516342163086
    7. 'sp' → logprob: -18.626516342163086
    8. 'read' → logprob: -19.001516342163086
    9. '```' → logprob: -19.251516342163086
    10. 'replace' → logprob: -19.251516342163086

Token 25: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1445469707250595
    2. '()' → logprob: -2.7695469856262207
    3. '('' → logprob: -2.7695469856262207
    4. '("("' → logprob: -4.769546985626221
    5. '(
' → logprob: -9.144546508789062
    6. ''' → logprob: -9.519546508789062
    7. '(()' → logprob: -9.644546508789062
    8. '("' → logprob: -10.269546508789062
    9. '```' → logprob: -10.394546508789062
    10. '(`' → logprob: -10.394546508789062

Token 26: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3949219882488251
    2. '   ' → logprob: -1.5199220180511475
    3. '[n' → logprob: -3.1449220180511475
    4. '```' → logprob: -3.6449220180511475
    5. 'n' → logprob: -4.394921779632568
    6. '`' → logprob: -5.019921779632568
    7. ' n' → logprob: -5.769921779632568
    8. '(' → logprob: -6.144921779632568
    9. '    
' → logprob: -6.394921779632568
    10. '``' → logprob: -6.519921779632568

Token 27: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02894028276205063
    2. '[' → logprob: -4.653940200805664
    3. ' n' → logprob: -4.778940200805664
    4. '[n' → logprob: -5.653940200805664
    5. ' ' → logprob: -6.153940200805664
    6. '\n' → logprob: -6.778940200805664
    7. 'a' → logprob: -6.903940200805664
    8. '<|end|>' → logprob: -7.903940200805664
    9. '\' → logprob: -8.028940200805664
    10. ')' → logprob: -8.153940200805664

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.245286762714386
    2. '[' → logprob: -1.9952867031097412
    3. ' =' → logprob: -2.745286703109741
    4. '=' → logprob: -5.12028694152832
    5. '_' → logprob: -5.24528694152832
    6. ' ' → logprob: -6.99528694152832
    7. 'm' → logprob: -7.12028694152832
    8. ')' → logprob: -7.24528694152832
    9. ' ,' → logprob: -7.24528694152832
    10. 's' → logprob: -7.62028694152832

Token 29: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6245940327644348
    2. ' ' → logprob: -1.99959397315979
    3. 'm' → logprob: -2.24959397315979
    4. '"' → logprob: -2.74959397315979
    5. 'int' → logprob: -2.99959397315979
    6. ' *' → logprob: -3.24959397315979
    7. ' int' → logprob: -3.74959397315979
    8. ''' → logprob: -4.374594211578369
    9. '*' → logprob: -5.249594211578369
    10. '  ' → logprob: -5.249594211578369

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10303723067045212
    2. ' =' → logprob: -2.603037118911743
    3. '=' → logprob: -3.853037118911743
    4. ' ,' → logprob: -5.978037357330322
    5. ' ' → logprob: -9.853036880493164
    6. ')' → logprob: -10.728036880493164
    7. '<|end|>' → logprob: -11.853036880493164
    8. '  ' → logprob: -12.103036880493164
    9. '   ' → logprob: -12.728036880493164
    10. '[' → logprob: -13.603036880493164

Token 31: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4741249680519104
    2. ' k' → logprob: -0.9741249680519104
    3. ' ' → logprob: -10.099124908447266
    4. ' =' → logprob: -13.224124908447266
    5. '=k' → logprob: -13.599124908447266
    6. '=' → logprob: -14.349124908447266
    7. '_k' → logprob: -14.474124908447266
    8. '	k' → logprob: -14.974124908447266
    9. 's' → logprob: -15.099124908447266
    10. '  ' → logprob: -15.099124908447266

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005940413102507591
    2. '=' → logprob: -5.1309404373168945
    3. ',' → logprob: -11.505940437316895
    4. ' ' → logprob: -13.755940437316895
    5. ' =
' → logprob: -15.130940437316895
    6. ')' → logprob: -15.380940437316895
    7. ' ,' → logprob: -16.005939483642578
    8. '  ' → logprob: -17.005939483642578
    9. ' =)' → logprob: -17.130939483642578
    10. '=int' → logprob: -17.505939483642578

Token 33: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22253474593162537
    2. ' int' → logprob: -1.7225347757339478
    3. 'map' → logprob: -4.597534656524658
    4. 'int' → logprob: -4.597534656524658
    5. '[int' → logprob: -7.597534656524658
    6. ' n' → logprob: -8.597535133361816
    7. ' list' → logprob: -10.722535133361816
    8. ' [' → logprob: -11.472535133361816
    9. ' ' → logprob: -11.722535133361816
    10. ' tuple' → logprob: -12.472535133361816

Token 34: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029906457290053368
    2. ' int' → logprob: -4.154906272888184
    3. 'map' → logprob: -4.529906272888184
    4. ' map' → logprob: -6.029906272888184
    5. '[int' → logprob: -7.654906272888184
    6. ')' → logprob: -9.154906272888184
    7. '(int' → logprob: -12.654906272888184
    8. '   ' → logprob: -13.529906272888184
    9. 'list' → logprob: -13.779906272888184
    10. ' ' → logprob: -14.154906272888184

Token 35: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09743687510490417
    2. '(x' → logprob: -2.7224369049072266
    3. '(i' → logprob: -4.222436904907227
    4. '(' → logprob: -4.722436904907227
    5. '(token' → logprob: -6.597436904907227
    6. ')' → logprob: -6.972436904907227
    7. '(_)' → logprob: -7.972436904907227
    8. '()' → logprob: -8.347436904907227
    9. '(s' → logprob: -8.347436904907227
    10. ')(' → logprob: -9.097436904907227

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.787507714354433e-05
    2. '(x' → logprob: -10.25004768371582
    3. ' )' → logprob: -12.37504768371582
    4. '(' → logprob: -12.50004768371582
    5. '()' → logprob: -14.00004768371582
    6. '),' → logprob: -14.37504768371582
    7. ' for' → logprob: -14.37504768371582
    8. '(n' → logprob: -14.50004768371582
    9. '))' → logprob: -14.87504768371582
    10. '   ' → logprob: -15.00004768371582

Token 37: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020088303834199905
    2. 'for' → logprob: -4.145088195800781
    3. ' for' → logprob: -6.270088195800781
    4. '(x' → logprob: -6.270088195800781
    5. 'x' → logprob: -9.270088195800781
    6. ')x' → logprob: -9.770088195800781
    7. '(' → logprob: -10.270088195800781
    8. '(n' → logprob: -10.395088195800781
    9. ' )' → logprob: -11.270088195800781
    10. ')n' → logprob: -12.145088195800781

Token 38: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05870000272989273
    2. 'x' → logprob: -3.5587000846862793
    3. ' ' → logprob: -3.6837000846862793
    4. '_' → logprob: -6.058700084686279
    5. ' n' → logprob: -7.558700084686279
    6. '  ' → logprob: -8.308699607849121
    7. '(x' → logprob: -9.183699607849121
    8. ')' → logprob: -10.183699607849121
    9. '<|end|>' → logprob: -10.308699607849121
    10. '<|end|>' → logprob: -10.808699607849121

Token 39: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.673026978969574
    2. ' in' → logprob: -1.4230270385742188
    3. ' n' → logprob: -1.9230270385742188
    4. '(n' → logprob: -3.1730270385742188
    5. 'n' → logprob: -3.4230270385742188
    6. ' ' → logprob: -4.298027038574219
    7. '(' → logprob: -4.923027038574219
    8. ')' → logprob: -5.798027038574219
    9. '  ' → logprob: -6.173027038574219
    10. ' )' → logprob: -8.173027038574219

Token 40: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12693651020526886
    2. ' n' → logprob: -2.126936435699463
    3. '(n' → logprob: -12.751936912536621
    4. '	n' → logprob: -13.001936912536621
    5. ')n' → logprob: -13.251936912536621
    6. ' ' → logprob: -14.001936912536621
    7. '[n' → logprob: -15.001936912536621
    8. 'nm' → logprob: -16.251935958862305
    9. 'nk' → logprob: -16.501935958862305
    10. '  ' → logprob: -16.501935958862305

Token 41: 'mk' (ID: 28902)
  Prédit: 'mk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mk' → logprob: -0.00029518234077841043
    2. 'm' → logprob: -8.750295639038086
    3. ')' → logprob: -9.500295639038086
    4. 'k' → logprob: -11.250295639038086
    5. 'nk' → logprob: -11.375295639038086
    6. '.mk' → logprob: -12.125295639038086
    7. '   ' → logprob: -12.125295639038086
    8. 'tk' → logprob: -12.750295639038086
    9. ' mk' → logprob: -12.750295639038086
    10. '[' → logprob: -13.125295639038086

Token 42: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3795937522663735e-05
    2. '))' → logprob: -11.00002384185791
    3. ' )' → logprob: -13.50002384185791
    4. ')`' → logprob: -14.00002384185791
    5. ']' → logprob: -14.12502384185791
    6. '[' → logprob: -14.37502384185791
    7. '])' → logprob: -14.87502384185791
    8. ')
' → logprob: -15.00002384185791
    9. '),' → logprob: -15.12502384185791
    10. ')))' → logprob: -15.25002384185791

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2311789989471436
    2. '   ' → logprob: -1.4811789989471436
    3. '    
' → logprob: -1.9811789989471436
    4. '\n' → logprob: -2.1061789989471436
    5. 'n' → logprob: -2.8561789989471436
    6. '```' → logprob: -3.3561789989471436
    7. 'dp' → logprob: -3.8561789989471436
    8. '\' → logprob: -3.9811789989471436
    9. 'd' → logprob: -3.9811789989471436
    10. ' 
' → logprob: -4.106179237365723

Token 44: ' F' (ID: 454)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7300739288330078
    2. 'fact' → logprob: -2.105073928833008
    3. 'dp' → logprob: -2.230073928833008
    4. '#' → logprob: -2.355073928833008
    5. 'a' → logprob: -2.730073928833008
    6. 'factor' → logprob: -3.355073928833008
    7. 'n' → logprob: -3.605073928833008
    8. 'd' → logprob: -4.105073928833008
    9. 'max' → logprob: -4.605073928833008
    10. '   ' → logprob: -5.230073928833008

Token 45: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.612252414226532
    2. 'ac' → logprob: -1.2372524738311768
    3. 'act' → logprob: -2.9872524738311768
    4. '_' → logprob: -3.1122524738311768
    5. ' =' → logprob: -3.8622524738311768
    6. 'A' → logprob: -4.362252235412598
    7. '[' → logprob: -4.612252235412598
    8. 'AC' → logprob: -4.987252235412598
    9. 'actor' → logprob: -5.362252235412598
    10. '=' → logprob: -5.737252235412598

Token 46: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03026690147817135
    2. ' [' → logprob: -3.5302670001983643
    3. '[n' → logprob: -7.780266761779785
    4. '[int' → logprob: -9.530266761779785
    5. '[N' → logprob: -10.905266761779785
    6. '[i' → logprob: -13.280266761779785
    7. '[len' → logprob: -13.655266761779785
    8. '[k' → logprob: -14.530266761779785
    9. '[m' → logprob: -14.905266761779785
    10. '[f' → logprob: -15.030266761779785

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013083349040243775
    2. '0' → logprob: -9.000130653381348
    3. ' ' → logprob: -11.875130653381348
    4. ']' → logprob: -15.625130653381348
    5. '   ' → logprob: -16.500131607055664
    6. '-' → logprob: -16.750131607055664
    7. '```' → logprob: -17.750131607055664
    8. 'None' → logprob: -17.875131607055664
    9. '(' → logprob: -18.375131607055664
    10. '
' → logprob: -18.375131607055664

Token 48: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005969557911157608
    2. ',' → logprob: -5.630969524383545
    3. ' ]' → logprob: -6.505969524383545
    4. ' for' → logprob: -7.630969524383545
    5. ']*' → logprob: -8.130970001220703
    6. ']*(' → logprob: -10.880970001220703
    7. ' ' → logprob: -11.005970001220703
    8. 'for' → logprob: -11.255970001220703
    9. ')' → logprob: -11.380970001220703
    10. ',
' → logprob: -11.755970001220703

Token 49: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.7956531643867493
    2. '(' → logprob: -1.5456531047821045
    3. 'N' → logprob: -1.5456531047821045
    4. '200' → logprob: -2.1706531047821045
    5. '(n' → logprob: -5.045653343200684
    6. '2' → logprob: -7.670653343200684
    7. 'n' → logprob: -8.170653343200684
    8. ' (' → logprob: -8.295653343200684
    9. '100' → logprob: -8.420653343200684
    10. ' ' → logprob: -8.920653343200684

Token 50: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011815526522696018
    2. 'for' → logprob: -5.261815547943115
    3. '\n' → logprob: -6.136815547943115
    4. ' for' → logprob: -6.636815547943115
    5. '   ' → logprob: -7.136815547943115
    6. '' → logprob: -7.761815547943115
    7. '
' → logprob: -8.011815071105957
    8. '<|end|>' → logprob: -8.136815071105957
    9. '    
' → logprob: -8.261815071105957
    10. '[' → logprob: -8.386815071105957

Token 51: ' f' (ID: 285)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0628678947687149
    2. 'F' → logprob: -3.3128678798675537
    3. 'for' → logprob: -4.312868118286133
    4. '
' → logprob: -5.937868118286133
    5. '' → logprob: -6.312868118286133
    6. ' for' → logprob: -6.312868118286133
    7. ' F' → logprob: -6.687868118286133
    8. ' 
' → logprob: -7.187868118286133
    9. '    
' → logprob: -7.312868118286133
    10. '   ' → logprob: -7.812868118286133

Token 52: '_inv' (ID: 53427)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.2619290351867676
    2. 'a' → logprob: -2.6369290351867676
    3. 'or' → logprob: -3.1369290351867676
    4. '[' → logprob: -3.7619290351867676
    5. '[]' → logprob: -3.7619290351867676
    6. 'act' → logprob: -3.7619290351867676
    7. '=' → logprob: -3.8869290351867676
    8. 'actor' → logprob: -5.011929035186768
    9. ' =' → logprob: -5.386929035186768
    10. 'acs' → logprob: -5.386929035186768

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4309246242046356
    2. '=' → logprob: -1.055924654006958
    3. 's' → logprob: -7.180924415588379
    4. '[' → logprob: -7.305924415588379
    5. '=[' → logprob: -7.930924415588379
    6. '=[]' → logprob: -9.055924415588379
    7. ' =[' → logprob: -9.305924415588379
    8. '_' → logprob: -9.430924415588379
    9. ' ' → logprob: -9.680924415588379
    10. ',' → logprob: -10.680924415588379

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003811025235336274
    2. ' [' → logprob: -7.875380992889404
    3. '[N' → logprob: -14.625381469726562
    4. '1' → logprob: -14.875381469726562
    5. ' ' → logprob: -16.625381469726562
    6. '[-' → logprob: -17.500381469726562
    7. 'N' → logprob: -17.625381469726562
    8. '(' → logprob: -18.250381469726562
    9. '   ' → logprob: -18.250381469726562
    10. 'F' → logprob: -18.375381469726562

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.625015258789062
    3. '0' → logprob: -12.625015258789062
    4. ']' → logprob: -13.375015258789062
    5. '```' → logprob: -14.750015258789062
    6. 'None' → logprob: -15.500015258789062
    7. '(' → logprob: -15.625015258789062
    8. '-' → logprob: -16.000015258789062
    9. 'N' → logprob: -16.625015258789062
    10. '' → logprob: -16.625015258789062

Token 56: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015867470065131783
    2. ']*' → logprob: -6.5015869140625
    3. ' ]' → logprob: -10.2515869140625
    4. ',' → logprob: -10.3765869140625
    5. '*' → logprob: -12.1265869140625
    6. ']*(' → logprob: -12.6265869140625
    7. ']int' → logprob: -13.6265869140625
    8. '[' → logprob: -13.7515869140625
    9. '<|end|>' → logprob: -13.7515869140625
    10. '<|end|>' → logprob: -13.8765869140625

Token 57: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. ' N' → logprob: -15.75
    3. '(N' → logprob: -18.375
    4. 'n' → logprob: -18.5
    5. '	N' → logprob: -18.625
    6. '<|end|>' → logprob: -18.75
    7. '(' → logprob: -19.25
    8. '[N' → logprob: -19.25
    9. ' ' → logprob: -19.875
    10. '2' → logprob: -20.125

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18591931462287903
    2. '<|end|>' → logprob: -2.1859192848205566
    3. '   ' → logprob: -3.3109192848205566
    4. '    
' → logprob: -5.685919284820557
    5. '' → logprob: -5.935919284820557
    6. ' 
' → logprob: -6.435919284820557
    7. '[' → logprob: -6.435919284820557
    8. '\n' → logprob: -6.560919284820557
    9. '```' → logprob: -6.560919284820557
    10. ' ' → logprob: -6.810919284820557

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13097020983695984
    2. '   ' → logprob: -2.5059702396392822
    3. '<|end|>' → logprob: -3.6309702396392822
    4. '    
' → logprob: -5.505970001220703
    5. '[' → logprob: -6.380970001220703
    6. ' 
' → logprob: -6.505970001220703
    7. '  
' → logprob: -6.755970001220703
    8. '```' → logprob: -7.005970001220703
    9. ' ' → logprob: -7.380970001220703
    10. '' → logprob: -7.630970001220703

Token 60: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7310843467712402
    2. ' for' → logprob: -2.2310843467712402
    3. '   ' → logprob: -2.3560843467712402
    4. '#' → logprob: -2.4810843467712402
    5. 'F' → logprob: -2.6060843467712402
    6. '
' → logprob: -2.9810843467712402
    7. ' 
' → logprob: -3.7310843467712402
    8. '    
' → logprob: -3.9810843467712402
    9. '```' → logprob: -4.23108434677124
    10. 'f' → logprob: -4.60608434677124

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4434000551700592
    2. '=' → logprob: -1.8184000253677368
    3. 's' → logprob: -2.5684001445770264
    4. 'es' → logprob: -3.4434001445770264
    5. '_' → logprob: -3.5684001445770264
    6. 'x' → logprob: -3.8184001445770264
    7. 'f' → logprob: -4.193399906158447
    8. '_f' → logprob: -4.568399906158447
    9. 'F' → logprob: -5.693399906158447
    10. 'n' → logprob: -5.943399906158447

Token 62: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4005446434020996
    2. '1' → logprob: -1.6505446434020996
    3. '0' → logprob: -2.0255446434020996
    4. '2' → logprob: -5.4005446434021
    5. '[' → logprob: -7.1505446434021
    6. ' [' → logprob: -7.6505446434021
    7. ' n' → logprob: -8.650545120239258
    8. 'n' → logprob: -9.525545120239258
    9. ' m' → logprob: -10.275545120239258
    10. '  ' → logprob: -10.775545120239258

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0643298402428627
    2. '2' → logprob: -3.0643298625946045
    3. '0' → logprob: -4.189329624176025
    4. ' ' → logprob: -8.439330101013184
    5. '[' → logprob: -9.439330101013184
    6. '(' → logprob: -9.939330101013184
    7. 'n' → logprob: -10.314330101013184
    8. 'N' → logprob: -11.126830101013184
    9. 'range' → logprob: -11.314330101013184
    10. 'i' → logprob: -11.439330101013184

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7269002795219421
    2. '<|end|>' → logprob: -0.8519002795219421
    3. ' ' → logprob: -3.226900339126587
    4. '+' → logprob: -4.476900100708008
    5. ' 
' → logprob: -4.601900100708008
    6. '<|end|>' → logprob: -5.101900100708008
    7. '0' → logprob: -5.351900100708008
    8. '' → logprob: -6.101900100708008
    9. ' for' → logprob: -6.226900100708008
    10. ',' → logprob: -6.351900100708008

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6604433655738831
    2. '<|end|>' → logprob: -0.9104433655738831
    3. ' ' → logprob: -3.5354433059692383
    4. ' 
' → logprob: -4.535443305969238
    5. '<|end|>' → logprob: -4.660443305969238
    6. 'while' → logprob: -4.910443305969238
    7. '' → logprob: -5.285443305969238
    8. '```' → logprob: -5.910443305969238
    9. '0' → logprob: -6.035443305969238
    10. ' while' → logprob: -6.160443305969238

Token 66: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.893435001373291
    2. '<|end|>' → logprob: -1.143435001373291
    3. 'while' (adapté à ' while') → logprob: -2.018435001373291
    4. ' while' → logprob: -2.768435001373291
    5. '<|end|>' → logprob: -4.268435001373291
    6. ' ' → logprob: -4.518435001373291
    7. 'for' → logprob: -4.768435001373291
    8. '```' → logprob: -4.768435001373291
    9. ' for' → logprob: -5.143435001373291
    10. ':' → logprob: -5.393435001373291

Token 67: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.006726144813001156
    2. 'idx' → logprob: -5.006726264953613
    3. '	idx' → logprob: -12.006726264953613
    4. '(idx' → logprob: -12.756726264953613
    5. ' ' → logprob: -13.381726264953613
    6. '_idx' → logprob: -16.506725311279297
    7. '[idx' → logprob: -16.881725311279297
    8. ' ' → logprob: -17.506725311279297
    9. '   ' → logprob: -17.631725311279297
    10. '.idx' → logprob: -18.256725311279297

Token 68: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.26325908303260803
    2. ' <=' → logprob: -1.7632590532302856
    3. '<' → logprob: -2.888259172439575
    4. '<=' → logprob: -5.513258934020996
    5. ' ' → logprob: -8.388258934020996
    6. '<len' → logprob: -11.263258934020996
    7. ' ≤' → logprob: -11.763258934020996
    8. '<N' → logprob: -11.888258934020996
    9. ' \<' → logprob: -12.263258934020996
    10. '<n' → logprob: -12.763258934020996

Token 69: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.1186566047836095e-05
    2. ' N' → logprob: -10.500031471252441
    3. '200' → logprob: -13.375031471252441
    4. 'n' → logprob: -13.375031471252441
    5. '>N' → logprob: -15.750031471252441
    6. '	N' → logprob: -16.000030517578125
    7. '=N' → logprob: -16.750030517578125
    8. '=' → logprob: -17.000030517578125
    9. ' ' → logprob: -17.000030517578125
    10. '<N' → logprob: -17.750030517578125

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024763107649050653
    2. ':
' → logprob: -8.750247955322266
    3. ' :' → logprob: -9.875247955322266
    4. '):' → logprob: -11.375247955322266
    5. '   ' → logprob: -11.625247955322266
    6. ' and' → logprob: -12.250247955322266
    7. '**' → logprob: -12.875247955322266
    8. '<|end|>' → logprob: -13.250247955322266
    9. ':**' → logprob: -13.500247955322266
    10. ',' → logprob: -13.625247955322266

Token 71: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8943036794662476
    2. '<|end|>' → logprob: -1.2693036794662476
    3. '   ' → logprob: -1.3943036794662476
    4. '    ' → logprob: -4.394303798675537
    5. ' ' → logprob: -4.519303798675537
    6. 'idx' → logprob: -5.019303798675537
    7. '<|end|>' → logprob: -5.269303798675537
    8. '       ' → logprob: -5.269303798675537
    9. '```' → logprob: -5.394303798675537
    10. '
' → logprob: -5.644303798675537

Token 72: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' (adapté à ' F') → logprob: -0.2865653932094574
    2. ' F' → logprob: -1.4115654230117798
    3. '   ' → logprob: -6.16156530380249
    4. 'idx' → logprob: -6.28656530380249
    5. ' idx' → logprob: -7.03656530380249
    6. '	F' → logprob: -8.286565780639648
    7. '    ' → logprob: -9.286565780639648
    8. ' ' → logprob: -9.786565780639648
    9. '    
' → logprob: -10.286565780639648
    10. '```' → logprob: -10.536565780639648

Token 73: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.02066555991768837
    2. '[' → logprob: -3.8956656455993652
    3. '*' → logprob: -10.020665168762207
    4. '[index' → logprob: -11.395665168762207
    5. '```' → logprob: -11.395665168762207
    6. ' [' → logprob: -11.895665168762207
    7. '[i' → logprob: -12.145665168762207
    8. ' *=' → logprob: -12.145665168762207
    9. '[id' → logprob: -12.270665168762207
    10. ' ' → logprob: -12.395665168762207

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020909354090690613
    2. ']=' → logprob: -4.270909309387207
    3. '=' → logprob: -5.395909309387207
    4. ' ]' → logprob: -6.395909309387207
    5. ' =' → logprob: -8.020909309387207
    6. '*' → logprob: -8.895909309387207
    7. ')' → logprob: -11.145909309387207
    8. ']*' → logprob: -11.520909309387207
    9. ' ' → logprob: -11.770909309387207
    10. '*=' → logprob: -12.270909309387207

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10130830109119415
    2. ' =' → logprob: -2.3513083457946777
    3. '*=' → logprob: -7.226308345794678
    4. '*' → logprob: -8.60130786895752
    5. ' *=' → logprob: -8.72630786895752
    6. '=*' → logprob: -11.35130786895752
    7. '=f' → logprob: -12.60130786895752
    8. '=*/' → logprob: -13.22630786895752
    9. '=int' → logprob: -13.47630786895752
    10. ',' → logprob: -13.60130786895752

Token 76: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.169289693236351
    2. '(F' → logprob: -1.9192897081375122
    3. ' F' → logprob: -5.419289588928223
    4. ' (' → logprob: -6.169289588928223
    5. '(' → logprob: -6.294289588928223
    6. '(idx' → logprob: -7.794289588928223
    7. 'idx' → logprob: -9.294289588928223
    8. '	F' → logprob: -9.669289588928223
    9. '(int' → logprob: -10.919289588928223
    10. '   ' → logprob: -11.294289588928223

Token 77: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. 'idx' → logprob: -16.000001907348633
    4. '[id' → logprob: -16.250001907348633
    5. '	idx' → logprob: -17.125001907348633
    6. ' idx' → logprob: -18.125001907348633
    7. ' [' → logprob: -18.500001907348633
    8. '[i' → logprob: -18.500001907348633
    9. '[token' → logprob: -18.500001907348633
    10. '[-' → logprob: -18.875001907348633

Token 78: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031860284507274628
    2. ' -' → logprob: -5.753186225891113
    3. '*' → logprob: -12.128186225891113
    4. ' ' → logprob: -13.753186225891113
    5. '[idx' → logprob: -14.753186225891113
    6. '1' → logprob: -14.878186225891113
    7. 'idx' → logprob: -15.003186225891113
    8. ' *' → logprob: -15.878186225891113
    9. '−' → logprob: -16.003185272216797
    10. '```' → logprob: -16.503185272216797

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.375004768371582
    3. ']' → logprob: -14.500004768371582
    4. '   ' → logprob: -16.0000057220459
    5. '<|end|>' → logprob: -16.5000057220459
    6. '    ' → logprob: -16.6250057220459
    7. '```' → logprob: -16.8750057220459
    8. '  ' → logprob: -17.6875057220459
    9. ')' → logprob: -18.2500057220459
    10. '১' → logprob: -18.9375057220459

Token 80: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.020544808357954025
    2. ' *' → logprob: -3.8955447673797607
    3. ' ' → logprob: -14.27054500579834
    4. ' ' → logprob: -14.52054500579834
    5. '**' → logprob: -14.77054500579834
    6. '*(' → logprob: -14.77054500579834
    7. '*object' → logprob: -15.02054500579834
    8. '```' → logprob: -16.270544052124023
    9. '*
' → logprob: -16.770544052124023
    10. ']*' → logprob: -17.020544052124023

Token 81: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.000804745068307966
    2. ' *' → logprob: -7.125804901123047
    3. '*object' → logprob: -15.875804901123047
    4. '*(' → logprob: -16.000804901123047
    5. '**' → logprob: -16.750804901123047
    6. '*
' → logprob: -17.375804901123047
    7. ' ' → logprob: -18.250804901123047
    8. ' ' → logprob: -18.750804901123047
    9. '```' → logprob: -18.750804901123047
    10. ''*' → logprob: -18.875804901123047

Token 82: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014167741872370243
    2. ' idx' → logprob: -4.264167785644531
    3. '	idx' → logprob: -12.764167785644531
    4. ' ' → logprob: -14.389167785644531
    5. '   ' → logprob: -15.014167785644531
    6. '(idx' → logprob: -15.514167785644531
    7. 'id' → logprob: -16.51416778564453
    8. '  ' → logprob: -16.76416778564453
    9. 'index' → logprob: -17.26416778564453
    10. '_idx' → logprob: -18.26416778564453

Token 83: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04300912097096443
    2. '%' → logprob: -3.168009042739868
    3. ' ' → logprob: -13.043008804321289
    4. '<|end|>' → logprob: -13.043008804321289
    5. ' ' → logprob: -13.293008804321289
    6. ' %
' → logprob: -13.793008804321289
    7. ' %=' → logprob: -13.793008804321289
    8. ' %#' → logprob: -14.543008804321289
    9. '%D' → logprob: -15.293008804321289
    10. '%A' → logprob: -15.418008804321289

Token 84: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.22596092522144318
    2. ' MOD' → logprob: -1.6009609699249268
    3. '998' → logprob: -7.725960731506348
    4. ' ' → logprob: -9.975960731506348
    5. '_MOD' → logprob: -10.350960731506348
    6. '.MOD' → logprob: -10.725960731506348
    7. '`' → logprob: -13.600960731506348
    8. '   ' → logprob: -13.850960731506348
    9. '999' → logprob: -13.850960731506348
    10. '```' → logprob: -14.225960731506348

Token 85: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -3.173704271830502e-06
    2. 'UL' → logprob: -13.37500286102295
    3. 'O' → logprob: -14.00000286102295
    4. 'U' → logprob: -15.75000286102295
    5. '```' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.250003814697266
    7. 'ulo' → logprob: -16.500003814697266
    8. 'ULE' → logprob: -16.625003814697266
    9. '`' → logprob: -17.625003814697266
    10. 'ULAR' → logprob: -17.875003814697266

Token 86: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38384950160980225
    2. '   ' → logprob: -1.8838495016098022
    3. '       ' → logprob: -2.383849620819092
    4. '\n' → logprob: -3.758849620819092
    5. '    
' → logprob: -4.008849620819092
    6. '<|end|>' → logprob: -4.758849620819092
    7. ' idx' → logprob: -5.008849620819092
    8. ' 
' → logprob: -5.633849620819092
    9. '	idx' → logprob: -5.883849620819092
    10. '  
' → logprob: -5.883849620819092

Token 87: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6210752725601196
    2. '   ' → logprob: -1.2460752725601196
    3. '       ' → logprob: -3.12107515335083
    4. '\n' → logprob: -3.12107515335083
    5. '    
' → logprob: -3.24607515335083
    6. '<|end|>' → logprob: -3.99607515335083
    7. 'idx' → logprob: -4.87107515335083
    8. ' 
' → logprob: -5.37107515335083
    9. ' idx' → logprob: -5.49607515335083
    10. '	idx' → logprob: -6.12107515335083

Token 88: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.20332083106040955
    2. 'idx' (adapté à ' idx') → logprob: -1.703320860862732
    3. '	idx' → logprob: -6.9533209800720215
    4. '   ' → logprob: -7.2033209800720215
    5. ' 
' → logprob: -9.453320503234863
    6. '
' → logprob: -9.828320503234863
    7. '[idx' → logprob: -10.953320503234863
    8. '```' → logprob: -11.328320503234863
    9. '    
' → logprob: -11.828320503234863
    10. '<|end|>' → logprob: -12.203320503234863

Token 89: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4979386329650879
    2. ' +=' → logprob: -0.9979386329650879
    3. '+' → logprob: -3.747938632965088
    4. ' +' → logprob: -11.74793815612793
    5. '++' → logprob: -12.74793815612793
    6. '=' → logprob: -13.99793815612793
    7. ' ' → logprob: -14.87293815612793
    8. '+="' → logprob: -15.12293815612793
    9. '+='' → logprob: -15.49793815612793
    10. '<|end|>' → logprob: -15.49793815612793

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '```' → logprob: -18.875085830688477
    4. '  ' → logprob: -20.000085830688477
    5. '   ' → logprob: -20.250085830688477
    6. '<|end|>' → logprob: -20.500085830688477
    7. ' ' → logprob: -20.812585830688477
    8. '１' → logprob: -21.125085830688477
    9. '۱' → logprob: -21.375085830688477
    10. '+' → logprob: -21.375085830688477

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -20.625
    4. '<|end|>' → logprob: -22.0
    5. '１' → logprob: -22.125
    6. '+' → logprob: -22.4375
    7. '১' → logprob: -22.4375
    8. '۱' → logprob: -22.5625
    9. '१' → logprob: -22.625
    10. '   ' → logprob: -22.8125

Token 92: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003140997141599655
    2. '<|end|>' → logprob: -5.878140926361084
    3. '

' → logprob: -9.128141403198242
    4. '   ' → logprob: -9.878141403198242
    5. '\n' → logprob: -10.128141403198242
    6. '
' → logprob: -10.253141403198242
    7. '    
' → logprob: -10.378141403198242
    8. ' 
' → logprob: -11.003141403198242
    9. '<|end|>' → logprob: -11.128141403198242
    10. '```' → logprob: -11.253141403198242

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10971023887395859
    2. '<|end|>' → logprob: -2.484710216522217
    3. '   ' → logprob: -4.484710216522217
    4. 'f' → logprob: -5.734710216522217
    5. ' 
' → logprob: -6.484710216522217
    6. '    
' → logprob: -6.984710216522217
    7. '

' → logprob: -7.484710216522217
    8. ' f' → logprob: -7.484710216522217
    9. '```' → logprob: -7.484710216522217
    10. ' ' → logprob: -7.609710216522217

Token 94: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.038584381341934204
    2. 'idx' → logprob: -3.4135844707489014
    3. '   ' → logprob: -5.913584232330322
    4. 'def' → logprob: -7.163584232330322
    5. ' f' → logprob: -8.03858470916748
    6. '<|end|>' → logprob: -8.41358470916748
    7. '```' → logprob: -8.53858470916748
    8. 'while' → logprob: -9.03858470916748
    9. '    
' → logprob: -9.03858470916748
    10. ' idx' → logprob: -9.41358470916748

Token 95: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.06367436051368713
    2. '_' → logprob: -2.8136744499206543
    3. '_i' → logprob: -7.063674449920654
    4. '_in' → logprob: -7.188674449920654
    5. ' _' → logprob: -10.563673973083496
    6. '_inf' → logprob: -11.188673973083496
    7. '_f' → logprob: -11.688673973083496
    8. '_n' → logprob: -12.063673973083496
    9. '_

' → logprob: -12.188673973083496
    10. '_idx' → logprob: -12.438673973083496

Token 96: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1312016099691391
    2. ' =' → logprob: -2.1312015056610107
    3. '=' → logprob: -5.75620174407959
    4. ' =[' → logprob: -7.50620174407959
    5. '[idx' → logprob: -9.00620174407959
    6. ' [' → logprob: -9.13120174407959
    7. '=[' → logprob: -9.25620174407959
    8. ' ' → logprob: -9.25620174407959
    9. '[-' → logprob: -10.75620174407959
    10. '[N' → logprob: -10.88120174407959

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -15.375000953674316
    4. 'idx' → logprob: -16.250001907348633
    5. ']' → logprob: -16.375001907348633
    6. '=' → logprob: -16.750001907348633
    7. '```' → logprob: -17.000001907348633
    8. 'index' → logprob: -17.500001907348633
    9. '１' → logprob: -17.562501907348633
    10. '' → logprob: -17.812501907348633

Token 98: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005103797884657979
    2. ' ]' → logprob: -7.625510215759277
    3. ']=' → logprob: -11.000510215759277
    4. ')' → logprob: -12.500510215759277
    5. '=' → logprob: -14.375510215759277
    6. ' ' → logprob: -14.375510215759277
    7. '],' → logprob: -15.625510215759277
    8. ']
' → logprob: -15.750510215759277
    9. ' =' → logprob: -16.500511169433594
    10. '   ' → logprob: -16.750511169433594

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759581923484802
    2. '=' → logprob: -0.8259581923484802
    3. ',' → logprob: -11.700958251953125
    4. '=int' → logprob: -12.575958251953125
    5. '<|end|>' → logprob: -13.825958251953125
    6. ' =
' → logprob: -13.950958251953125
    7. '=
' → logprob: -14.075958251953125
    8. '=f' → logprob: -14.200958251953125
    9. ' ' → logprob: -14.825958251953125
    10. '＝' → logprob: -14.950958251953125

Token 100: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.004259680863469839
    2. ' pow' → logprob: -5.5042595863342285
    3. '1' → logprob: -9.004260063171387
    4. '2' → logprob: -11.254260063171387
    5. '(pow' → logprob: -11.254260063171387
    6. '3' → logprob: -11.379260063171387
    7. ' ' → logprob: -11.629260063171387
    8. '   ' → logprob: -13.254260063171387
    9. '9' → logprob: -13.879260063171387
    10. '4' → logprob: -13.879260063171387

Token 101: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.0003819332632701844
    2. '(' → logprob: -7.875381946563721
    3. '(f' → logprob: -13.750381469726562
    4. '(
' → logprob: -14.250381469726562
    5. 'F' → logprob: -16.375381469726562
    6. '(

' → logprob: -17.750381469726562
    7. '((' → logprob: -18.250381469726562
    8. '<|end|>' → logprob: -19.125381469726562
    9. '()' → logprob: -19.375381469726562
    10. ' (' → logprob: -19.500381469726562

Token 102: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.000158842682139948
    2. '[N' → logprob: -9.25015926361084
    3. '-' → logprob: -9.75015926361084
    4. '[' → logprob: -12.37515926361084
    5. '-N' → logprob: -16.875158309936523
    6. 'N' → logprob: -18.000158309936523
    7. '```' → logprob: -18.375158309936523
    8. '[
' → logprob: -18.625158309936523
    9. '   ' → logprob: -19.125158309936523
    10. ')' → logprob: -19.375158309936523

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '2' → logprob: -12.25001049041748
    3. ' ' → logprob: -12.37501049041748
    4. '```' → logprob: -15.50001049041748
    5. '
' → logprob: -15.93751049041748
    6. '   ' → logprob: -16.000009536743164
    7. '-' → logprob: -16.062509536743164
    8. '  ' → logprob: -16.937509536743164
    9. 'f' → logprob: -16.937509536743164
    10. '`' → logprob: -17.000009536743164

Token 104: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.588793960167095e-05
    2. ' ,' → logprob: -9.500076293945312
    3. '   ' → logprob: -15.875076293945312
    4. ')' → logprob: -16.125076293945312
    5. ',
' → logprob: -16.375076293945312
    6. '‌,' → logprob: -16.500076293945312
    7. ',-' → logprob: -16.625076293945312
    8. 'MOD' → logprob: -16.625076293945312
    9. ',module' → logprob: -16.750076293945312
    10. ' ' → logprob: -16.750076293945312

Token 105: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.7388371229171753
    2. '998' → logprob: -1.4888371229171753
    3. '-' → logprob: -1.7388371229171753
    4. ' MOD' → logprob: -2.613837242126465
    5. ' ' → logprob: -3.238837242126465
    6. ' -' → logprob: -5.363837242126465
    7. '_MOD' → logprob: -6.363837242126465
    8. '   ' → logprob: -7.863837242126465
    9. '  ' → logprob: -7.863837242126465
    10. '-mod' → logprob: -8.238837242126465

Token 106: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.0011137815890833735
    2. 'O' → logprob: -7.5011138916015625
    3. 'UL' → logprob: -8.626113891601562
    4. 'ODULE' → logprob: -8.751113891601562
    5. 'ULE' → logprob: -9.501113891601562
    6. 'OD' → logprob: -10.001113891601562
    7. 'MOD' → logprob: -10.626113891601562
    8. 'UDO' → logprob: -10.876113891601562
    9. '-' → logprob: -11.501113891601562
    10. 'ulo' → logprob: -11.751113891601562

Token 107: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007099286303855479
    2. ' -' → logprob: -7.2507100105285645
    3. ' ' → logprob: -17.875709533691406
    4. '−' → logprob: -19.750709533691406
    5. '```' → logprob: -19.750709533691406
    6. '–' → logprob: -19.875709533691406
    7. '2' → logprob: -20.375709533691406
    8. '()-' → logprob: -20.625709533691406
    9. '  ' → logprob: -20.750709533691406
    10. ')' → logprob: -21.250709533691406

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.937500953674316
    3. '-' → logprob: -15.500000953674316
    4. ' ' → logprob: -15.562500953674316
    5. '

' → logprob: -15.937500953674316
    6. ')' → logprob: -17.250001907348633
    7. '۲' → logprob: -17.312501907348633
    8. '
' → logprob: -17.312501907348633
    9. '٢' → logprob: -17.750001907348633
    10. '<|end|>' → logprob: -17.875001907348633

Token 109: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023428790271282196
    2. ',' → logprob: -3.7734286785125732
    3. ' )' → logprob: -8.773428916931152
    4. ' ,' → logprob: -11.773428916931152
    5. ' ' → logprob: -12.023428916931152
    6. ')
' → logprob: -12.398428916931152
    7. '   ' → logprob: -12.898428916931152
    8. ',)' → logprob: -12.898428916931152
    9. '}' → logprob: -13.648428916931152
    10. '),' → logprob: -14.398428916931152

Token 110: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.5759463906288147
    2. 'MOD' → logprob: -0.8259463906288147
    3. ')' → logprob: -12.325946807861328
    4. '   ' → logprob: -14.200946807861328
    5. '.MOD' → logprob: -14.200946807861328
    6. ' ' → logprob: -14.700946807861328
    7. '_MOD' → logprob: -14.700946807861328
    8. '998' → logprob: -15.950946807861328
    9. ' )' → logprob: -16.325946807861328
    10. '```' → logprob: -16.575946807861328

Token 111: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.0021915410179644823
    2. 'O' → logprob: -6.127191543579102
    3. 'ULE' → logprob: -13.377191543579102
    4. 'U' → logprob: -13.502191543579102
    5. 'UL' → logprob: -13.627191543579102
    6. ' O' → logprob: -13.877191543579102
    7. '   ' → logprob: -14.752191543579102
    8. 'LO' → logprob: -14.752191543579102
    9. '```' → logprob: -16.3771915435791
    10. ')' → logprob: -16.5021915435791

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.662937372922897e-05
    2. ')
' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. ' )' → logprob: -15.625096321105957
    5. ')

' → logprob: -16.000097274780273
    6. ')`' → logprob: -17.750097274780273
    7. ')
' → logprob: -17.875097274780273
    8. '),' → logprob: -18.250097274780273
    9. ' ' → logprob: -19.625097274780273
    10. ');' → logprob: -19.750097274780273

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06835028529167175
    2. 'idx' → logprob: -2.818350315093994
    3. 'i' → logprob: -5.693350315093994
    4. 'for' → logprob: -6.193350315093994
    5. ' idx' → logprob: -7.443350315093994
    6. ' for' → logprob: -8.318349838256836
    7. ' i' → logprob: -9.818349838256836
    8. '	idx' → logprob: -10.568349838256836
    9. '  ' → logprob: -11.068349838256836
    10. 'index' → logprob: -12.068349838256836

Token 114: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2882569432258606
    2. 'idx' → logprob: -1.4132568836212158
    3. 'N' → logprob: -5.663257122039795
    4. 'i' → logprob: -6.288257122039795
    5. ' idx' → logprob: -6.663257122039795
    6. '    
' → logprob: -8.788256645202637
    7. '  ' → logprob: -9.163256645202637
    8. '```' → logprob: -9.163256645202637
    9. ' N' → logprob: -10.788256645202637
    10. '
' → logprob: -11.038256645202637

Token 115: ' z' (ID: 579)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.15692299604415894
    2. ' i' → logprob: -2.4069230556488037
    3. 'idx' → logprob: -2.9069230556488037
    4. 'i' → logprob: -7.656922817230225
    5. ' x' → logprob: -12.031923294067383
    6. 'x' → logprob: -12.156923294067383
    7. '	idx' → logprob: -12.281923294067383
    8. ' ' → logprob: -13.531923294067383
    9. ' ix' → logprob: -13.656923294067383
    10. '(idx' → logprob: -14.906923294067383

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002555807586759329
    2. 'in' → logprob: -6.002555847167969
    3. ' ' → logprob: -9.502555847167969
    4. '  ' → logprob: -12.752555847167969
    5. ' i' → logprob: -14.377555847167969
    6. 'range' → logprob: -14.377555847167969
    7. 'idx' → logprob: -15.127555847167969
    8. 'n' → logprob: -15.502555847167969
    9. '   ' → logprob: -16.00255584716797
    10. 'x' → logprob: -16.00255584716797

Token 117: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07904389500617981
    2. ' range' → logprob: -2.5790438652038574
    3. 're' → logprob: -9.204044342041016
    4. '   ' → logprob: -10.954044342041016
    5. ' reversed' → logprob: -11.079044342041016
    6. ' ' → logprob: -11.704044342041016
    7. '  ' → logprob: -11.704044342041016
    8. '(range' → logprob: -13.204044342041016
    9. '	range' → logprob: -14.079044342041016
    10. '    ' → logprob: -14.329044342041016

Token 118: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.012590887024998665
    2. '(' → logprob: -4.3875908851623535
    3. '(len' → logprob: -9.637591361999512
    4. 'N' → logprob: -11.637591361999512
    5. '(-' → logprob: -12.637591361999512
    6. '(
' → logprob: -13.762591361999512
    7. '(n' → logprob: -14.137591361999512
    8. '200' → logprob: -14.137591361999512
    9. '	N' → logprob: -14.637591361999512
    10. ' (' → logprob: -15.637591361999512

Token 119: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007099286303855479
    2. ' -' → logprob: -7.2507100105285645
    3. ' ' → logprob: -17.125709533691406
    4. '2' → logprob: -17.250709533691406
    5. '1' → logprob: -19.250709533691406
    6. '   ' → logprob: -19.375709533691406
    7. '  ' → logprob: -19.875709533691406
    8. '
' → logprob: -20.750709533691406
    9. '```' → logprob: -21.000709533691406
    10. ')-' → logprob: -21.250709533691406

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.750003814697266
    4. '-' → logprob: -15.625003814697266
    5. '  ' → logprob: -16.500003814697266
    6. '3' → logprob: -16.500003814697266
    7. '

' → logprob: -16.875003814697266
    8. '
' → logprob: -16.875003814697266
    9. '1' → logprob: -17.125003814697266
    10. '```' → logprob: -17.250003814697266

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004013222176581621
    2. ',-' → logprob: -5.8790130615234375
    3. ' ,' → logprob: -6.7540130615234375
    4. '   ' → logprob: -11.379013061523438
    5. ' -' → logprob: -11.754013061523438
    6. ' ,-' → logprob: -11.754013061523438
    7. ',None' → logprob: -12.254013061523438
    8. ',
' → logprob: -13.379013061523438
    9. '1' → logprob: -13.879013061523438
    10. '<|end|>' → logprob: -13.879013061523438

Token 122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025195383932441473
    2. ' -' → logprob: -6.002519607543945
    3. '0' → logprob: -10.377519607543945
    4. '   ' → logprob: -11.502519607543945
    5. ' ' → logprob: -13.127519607543945
    6. '  ' → logprob: -14.627519607543945
    7. '	' → logprob: -15.752519607543945
    8. '    ' → logprob: -17.002519607543945
    9. '-re' → logprob: -17.502519607543945
    10. '1' → logprob: -18.752519607543945

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -13.125004768371582
    3. '
' → logprob: -13.375004768371582
    4. '   ' → logprob: -14.500004768371582
    5. '

' → logprob: -15.750004768371582
    6. '```' → logprob: -15.750004768371582
    7. ':' → logprob: -16.7500057220459
    8. '2' → logprob: -16.8750057220459
    9. ',' → logprob: -17.2500057220459
    10. '``' → logprob: -17.3125057220459

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005156210972927511
    2. ',-' → logprob: -7.625515460968018
    3. '-' → logprob: -10.875515937805176
    4. ' ,' → logprob: -11.875515937805176
    5. ' ,-' → logprob: -14.375515937805176
    6. ' -' → logprob: -14.750515937805176
    7. '```' → logprob: -15.250515937805176
    8. '   ' → logprob: -15.375515937805176
    9. '1' → logprob: -16.00051498413086
    10. ',
' → logprob: -16.50051498413086

Token 125: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04859861359000206
    2. ' -' → logprob: -3.048598527908325
    3. '   ' → logprob: -11.673598289489746
    4. ' ' → logprob: -13.798598289489746
    5. '  ' → logprob: -13.923598289489746
    6. '	' → logprob: -14.423598289489746
    7. ',-' → logprob: -16.423599243164062
    8. '    ' → logprob: -17.173599243164062
    9. ',' → logprob: -17.298599243164062
    10. '```' → logprob: -17.673599243164062

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.625003814697266
    4. '
' → logprob: -16.750003814697266
    5. '  ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.250003814697266
    7. ',' → logprob: -18.250003814697266
    8. '۱' → logprob: -18.500003814697266
    9. '１' → logprob: -18.750003814697266
    10. ')' → logprob: -18.937503814697266

Token 127: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.853299081325531
    2. '-' → logprob: -1.4782991409301758
    3. '):
' → logprob: -1.8532991409301758
    4. ',' → logprob: -1.8532991409301758
    5. ',-' → logprob: -3.728299140930176
    6. '   ' → logprob: -5.228299140930176
    7. '):-' → logprob: -6.478299140930176
    8. ' -' → logprob: -7.353299140930176
    9. ')' → logprob: -8.228299140930176
    10. ':' → logprob: -8.603299140930176

Token 128: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3297851085662842
    2. '   ' → logprob: -1.7047851085662842
    3. '       ' → logprob: -2.454785108566284
    4. '	f' → logprob: -5.204785346984863
    5. 'f' → logprob: -5.579785346984863
    6. '<|end|>' → logprob: -5.954785346984863
    7. ' ' → logprob: -7.704785346984863
    8. '    ' → logprob: -8.954785346984863
    9. '```' → logprob: -8.954785346984863
    10. '    
' → logprob: -8.954785346984863

Token 129: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.7432603272027336e-06
    2. '_in' → logprob: -14.000001907348633
    3. '_' → logprob: -15.125001907348633
    4. '_inverse' → logprob: -15.500001907348633
    5. 'inv' → logprob: -15.875001907348633
    6. '_iv' → logprob: -16.125001907348633
    7. 'n' → logprob: -16.250001907348633
    8. '_INV' → logprob: -17.000001907348633
    9. '_i' → logprob: -17.125001907348633
    10. '_inf' → logprob: -17.125001907348633

Token 130: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.02800041064620018
    2. '[' → logprob: -3.6530003547668457
    3. '<|end|>' → logprob: -7.153000354766846
    4. '\[' → logprob: -7.903000354766846
    5. '[f' → logprob: -9.278000831604004
    6. '[idx' → logprob: -9.528000831604004
    7. '[col' → logprob: -9.903000831604004
    8. ' [' → logprob: -10.278000831604004
    9. '```' → logprob: -10.403000831604004
    10. '[js' → logprob: -10.653000831604004

Token 131: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7041813135147095
    2. ' =' → logprob: -1.2041813135147095
    3. ']' → logprob: -1.7041813135147095
    4. ')' → logprob: -4.20418119430542
    5. ']=' → logprob: -5.07918119430542
    6. ')=' → logprob: -6.07918119430542
    7. ',' → logprob: -9.954181671142578
    8. ' ]' → logprob: -10.204181671142578
    9. '=f' → logprob: -10.329181671142578
    10. ' )' → logprob: -10.829181671142578

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008645178750157356
    2. ' =' → logprob: -4.758645057678223
    3. '=f' → logprob: -10.508645057678223
    4. '=
' → logprob: -13.633645057678223
    5. '=

' → logprob: -14.508645057678223
    6. '=int' → logprob: -15.258645057678223
    7. '=s' → logprob: -15.633645057678223
    8. '＝' → logprob: -16.00864601135254
    9. '=len' → logprob: -16.75864601135254
    10. '=k' → logprob: -16.88364601135254

Token 133: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3135910630226135
    2. '(f' → logprob: -1.9385910034179688
    3. ' f' → logprob: -2.3135910034179688
    4. ' (' → logprob: -3.6885910034179688
    5. '(' → logprob: -6.688591003417969
    6. ' ' → logprob: -9.813591003417969
    7. '	f' → logprob: -10.563591003417969
    8. '   ' → logprob: -10.688591003417969
    9. '  ' → logprob: -12.313591003417969
    10. '    ' → logprob: -13.751091003417969

Token 134: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.002028327202424407
    2. 'f' → logprob: -7.377028465270996
    3. '[z' → logprob: -7.877028465270996
    4. '_in' → logprob: -8.752028465270996
    5. '[' → logprob: -8.877028465270996
    6. '[f' → logprob: -9.252028465270996
    7. '_idx' → logprob: -9.252028465270996
    8. '_iv' → logprob: -9.502028465270996
    9. 'inv' → logprob: -9.502028465270996
    10. '_ans' → logprob: -9.627028465270996

Token 135: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. 'z' → logprob: -17.500001907348633
    4. '[next' → logprob: -18.125001907348633
    5. ' [' → logprob: -18.250001907348633
    6. '[y' → logprob: -18.500001907348633
    7. '[q' → logprob: -18.625001907348633
    8. '	z' → logprob: -18.875001907348633
    9. '[
' → logprob: -18.875001907348633
    10. '[x' → logprob: -19.000001907348633

Token 136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012511172099038959
    2. ' +' → logprob: -9.00012493133545
    3. '[' → logprob: -13.50012493133545
    4. '[z' → logprob: -16.000125885009766
    5. '+
' → logprob: -17.250125885009766
    6. '1' → logprob: -17.375125885009766
    7. ' ' → logprob: -18.000125885009766
    8. ']+' → logprob: -18.000125885009766
    9. '+]' → logprob: -18.250125885009766
    10. '＋' → logprob: -18.250125885009766

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -16.7500057220459
    4. '   ' → logprob: -17.8750057220459
    5. '```' → logprob: -18.5000057220459
    6. '  ' → logprob: -19.3125057220459
    7. '১' → logprob: -19.3750057220459
    8. '۱' → logprob: -19.7500057220459
    9. '0' → logprob: -20.0000057220459
    10. '<|end|>' → logprob: -20.0625057220459

Token 138: ']*(' (ID: 92627)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.056457240134477615
    2. ' *' → logprob: -3.556457281112671
    3. ']' → logprob: -4.306457042694092
    4. '*(' → logprob: -4.931457042694092
    5. '*z' → logprob: -5.806457042694092
    6. ')' → logprob: -6.931457042694092
    7. ']*(' → logprob: -7.556457042694092
    8. ' ' → logprob: -8.05645751953125
    9. ']*' → logprob: -8.55645751953125
    10. '(z' → logprob: -9.18145751953125

Token 139: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0002067588793579489
    2. ' z' → logprob: -8.75020694732666
    3. '(z' → logprob: -10.00020694732666
    4. '	z' → logprob: -13.12520694732666
    5. '<|end|>' → logprob: -14.87520694732666
    6. '(' → logprob: -15.50020694732666
    7. '   ' → logprob: -16.125205993652344
    8. '[z' → logprob: -16.500205993652344
    9. ''z' → logprob: -17.250205993652344
    10. ' (' → logprob: -17.375205993652344

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00033581978641450405
    2. ' +' → logprob: -8.000335693359375
    3. '+
' → logprob: -15.500335693359375
    4. '1' → logprob: -15.750335693359375
    5. '＋' → logprob: -18.125335693359375
    6. ' plus' → logprob: -19.000335693359375
    7. ' +
' → logprob: -19.625335693359375
    8. '+i' → logprob: -20.000335693359375
    9. '+

' → logprob: -20.375335693359375
    10. 'plus' → logprob: -20.500335693359375

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001305950863752514
    2. '+' → logprob: -9.250130653381348
    3. ' ' → logprob: -10.375130653381348
    4. '2' → logprob: -13.250130653381348
    5. '   ' → logprob: -14.375130653381348
    6. ' +' → logprob: -15.000130653381348
    7. '```' → logprob: -15.250130653381348
    8. '۱' → logprob: -16.50012969970703
    9. '  ' → logprob: -17.18762969970703
    10. '১' → logprob: -17.50012969970703

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006056893616914749
    2. ')%' → logprob: -5.506056785583496
    3. ' )' → logprob: -6.256056785583496
    4. '%' → logprob: -10.131056785583496
    5. ' %' → logprob: -11.006056785583496
    6. '%)' → logprob: -14.631056785583496
    7. '   ' → logprob: -14.881056785583496
    8. ')
' → logprob: -15.506056785583496
    9. ' ' → logprob: -16.006057739257812
    10. ' %)' → logprob: -17.131057739257812

Token 143: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07889066636562347
    2. '%' → logprob: -2.578890562057495
    3. ' ' → logprob: -15.078890800476074
    4. ' %
' → logprob: -15.203890800476074
    5. ' ' → logprob: -15.328890800476074
    6. ' %=' → logprob: -16.953889846801758
    7. '
' → logprob: -17.328889846801758
    8. '%
' → logprob: -18.203889846801758
    9. '	' → logprob: -18.578889846801758
    10. ' %#' → logprob: -18.953889846801758

Token 144: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.38688158988952637
    2. 'MOD' → logprob: -1.1368815898895264
    3. '_MOD' → logprob: -11.761881828308105
    4. ' ' → logprob: -13.386881828308105
    5. '.MOD' → logprob: -13.886881828308105
    6. ' ' → logprob: -16.26188087463379
    7. '```' → logprob: -16.76188087463379
    8. 'MO' → logprob: -16.88688087463379
    9. '`' → logprob: -17.76188087463379
    10. '998' → logprob: -18.01188087463379

Token 145: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.011644579470157623
    2. 'O' → logprob: -4.51164436340332
    3. 'U' → logprob: -8.01164436340332
    4. 'ULE' → logprob: -8.63664436340332
    5. 'UL' → logprob: -9.51164436340332
    6. '   ' → logprob: -13.01164436340332
    7. ' U' → logprob: -13.51164436340332
    8. 'LO' → logprob: -13.63664436340332
    9. '
' → logprob: -13.76164436340332
    10. '```' → logprob: -13.88664436340332

Token 146: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4247741997241974
    2. 'def' → logprob: -1.174774169921875
    3. '<|end|>' → logprob: -3.799774169921875
    4. ' def' → logprob: -4.924774169921875
    5. '    
' → logprob: -5.799774169921875
    6. '
' → logprob: -6.799774169921875
    7. '```' → logprob: -7.424774169921875
    8. '	def' → logprob: -7.549774169921875
    9. ')' → logprob: -7.674774169921875
    10. '(' → logprob: -7.799774169921875

Token 147: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03660537302494049
    2. '   ' → logprob: -3.6616053581237793
    3. ' def' → logprob: -4.911605358123779
    4. '<|end|>' → logprob: -6.786605358123779
    5. '    
' → logprob: -6.911605358123779
    6. '
' → logprob: -7.536605358123779
    7. ' ' → logprob: -10.036605834960938
    8. ')' → logprob: -10.161605834960938
    9. '	def' → logprob: -10.536605834960938
    10. ' 
' → logprob: -10.661605834960938

Token 148: ' choose' (ID: 5655)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035072024911642075
    2. '
' → logprob: -9.000350952148438
    3. '    
' → logprob: -9.125350952148438
    4. '   ' → logprob: -9.375350952148438
    5. ' def' → logprob: -10.750350952148438
    6. ' 
' → logprob: -13.000350952148438
    7. '

' → logprob: -13.000350952148438
    8. '	def' → logprob: -13.375350952148438
    9. '#' → logprob: -14.000350952148438
    10. '	
' → logprob: -14.125350952148438

Token 149: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7182241082191467
    2. '=' → logprob: -0.9682241082191467
    3. ' =' → logprob: -2.093224048614502
    4. 'def' → logprob: -5.718224048614502
    5. '(n' → logprob: -6.093224048614502
    6. ' (' → logprob: -6.718224048614502
    7. ')' → logprob: -6.843224048614502
    8. '_' → logprob: -7.968224048614502
    9. 's' → logprob: -8.59322452545166
    10. '<|end|>' → logprob: -8.59322452545166

Token 150: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2801186144351959
    2. 'lambda' → logprob: -1.7801185846328735
    3. '(lambda' → logprob: -3.030118703842163
    4. '[' → logprob: -3.655118703842163
    5. ' [' → logprob: -6.655118465423584
    6. '   ' → logprob: -9.530118942260742
    7. '=lambda' → logprob: -9.655118942260742
    8. '[]' → logprob: -9.780118942260742
    9. ' (' → logprob: -11.780118942260742
    10. '[len' → logprob: -12.030118942260742

Token 151: ' p' (ID: 275)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06958622485399246
    2. 'n' → logprob: -2.9445862770080566
    3. ' x' → logprob: -5.319586277008057
    4. ' a' → logprob: -5.319586277008057
    5. ' i' → logprob: -6.194586277008057
    6. 'a' → logprob: -6.319586277008057
    7. 'x' → logprob: -7.194586277008057
    8. ' ' → logprob: -9.694585800170898
    9. 'i' → logprob: -10.069585800170898
    10. ' z' → logprob: -10.569585800170898

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0056688799522817135
    2. ',q' → logprob: -5.880669116973877
    3. ',n' → logprob: -6.130669116973877
    4. 'q' → logprob: -8.255668640136719
    5. ',k' → logprob: -8.505668640136719
    6. ',r' → logprob: -9.755668640136719
    7. ',p' → logprob: -9.755668640136719
    8. 'n' → logprob: -10.380668640136719
    9. ' ,' → logprob: -10.755668640136719
    10. ' q' → logprob: -11.380668640136719

Token 153: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.006669428199529648
    2. 'r' → logprob: -5.256669521331787
    3. ' q' → logprob: -6.881669521331787
    4. 'k' → logprob: -8.631669044494629
    5. 'x' → logprob: -8.631669044494629
    6. 'c' → logprob: -10.506669044494629
    7. ' r' → logprob: -12.131669044494629
    8. 's' → logprob: -12.256669044494629
    9. 'p' → logprob: -12.881669044494629
    10. 'w' → logprob: -13.381669044494629

Token 154: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.304016228066757e-05
    2. ' :' → logprob: -9.500082969665527
    3. ':(' → logprob: -12.625082969665527
    4. ':p' → logprob: -13.125082969665527
    5. ':F' → logprob: -14.250082969665527
    6. ':f' → logprob: -14.500082969665527
    7. ':
' → logprob: -15.250082969665527
    8. '=' → logprob: -15.250082969665527
    9. 'p' → logprob: -15.625082969665527
    10. ',' → logprob: -15.750082969665527

Token 155: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.21368999779224396
    2. ' F' → logprob: -2.3386900424957275
    3. '(F' → logprob: -2.5886900424957275
    4. ' (' → logprob: -3.9636900424957275
    5. '(' → logprob: -7.088689804077148
    6. '0' → logprob: -7.463689804077148
    7. ' ' → logprob: -8.463689804077148
    8. '   ' → logprob: -9.088689804077148
    9. '((' → logprob: -10.213689804077148
    10. '(
' → logprob: -11.088689804077148

Token 156: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.2127087504486553e-05
    2. 'p' → logprob: -10.750021934509277
    3. '[' → logprob: -14.500021934509277
    4. '[q' → logprob: -16.875022888183594
    5. ' [' → logprob: -17.625022888183594
    6. '[
' → logprob: -18.625022888183594
    7. '```' → logprob: -18.875022888183594
    8. '[int' → logprob: -19.500022888183594
    9. '(p' → logprob: -19.500022888183594
    10. '	p' → logprob: -19.625022888183594

Token 157: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038086410495452583
    2. ']*' → logprob: -7.875380992889404
    3. ' ]' → logprob: -15.125380516052246
    4. ']*(' → logprob: -15.625380516052246
    5. ']
' → logprob: -15.875380516052246
    6. '   ' → logprob: -16.625381469726562
    7. ']%' → logprob: -17.000381469726562
    8. ' ' → logprob: -18.875381469726562
    9. '}' → logprob: -19.750381469726562
    10. '"]' → logprob: -19.875381469726562

Token 158: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0011822503292933106
    2. ' f' → logprob: -6.7511820793151855
    3. '(f' → logprob: -11.376182556152344
    4. '(' → logprob: -15.251182556152344
    5. '<|end|>' → logprob: -15.626182556152344
    6. ' (' → logprob: -16.126182556152344
    7. '   ' → logprob: -16.376182556152344
    8. ' ' → logprob: -17.501182556152344
    9. '	f' → logprob: -17.501182556152344
    10. '```' → logprob: -17.876182556152344

Token 159: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -1.843177233240567e-05
    2. 'inv' → logprob: -11.125018119812012
    3. 'f' → logprob: -14.000018119812012
    4. 'q' → logprob: -14.250018119812012
    5. '[q' → logprob: -14.500018119812012
    6. '_INV' → logprob: -14.625018119812012
    7. '_inf' → logprob: -14.875018119812012
    8. '_in' → logprob: -15.250018119812012
    9. '_inverse' → logprob: -15.500018119812012
    10. '[' → logprob: -15.750018119812012

Token 160: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.00031305922311730683
    2. '[p' → logprob: -8.125312805175781
    3. 'q' → logprob: -11.125312805175781
    4. '[' → logprob: -13.125312805175781
    5. '(q' → logprob: -16.12531280517578
    6. 'p' → logprob: -16.87531280517578
    7. ' [' → logprob: -16.87531280517578
    8. '[
' → logprob: -17.37531280517578
    9. '[m' → logprob: -17.62531280517578
    10. '```' → logprob: -18.00031280517578

Token 161: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0397663414478302
    2. ']' → logprob: -3.289766311645508
    3. ']%' → logprob: -6.539766311645508
    4. '*' → logprob: -8.789766311645508
    5. ']*(' → logprob: -10.039766311645508
    6. '%' → logprob: -10.039766311645508
    7. ' ]' → logprob: -10.789766311645508
    8. '"]' → logprob: -12.664766311645508
    9. '   ' → logprob: -12.664766311645508
    10. '*q' → logprob: -13.039766311645508

Token 162: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.016054075211286545
    2. ' f' → logprob: -4.141054153442383
    3. '(f' → logprob: -11.016054153442383
    4. '(' → logprob: -13.766054153442383
    5. ' ' → logprob: -13.891054153442383
    6. '	f' → logprob: -14.141054153442383
    7. '   ' → logprob: -15.391054153442383
    8. ' (' → logprob: -15.641054153442383
    9. '```' → logprob: -15.641054153442383
    10. '*f' → logprob: -17.766054153442383

Token 163: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.570319702499546e-05
    2. 'inv' → logprob: -10.625025749206543
    3. '[-' → logprob: -15.000025749206543
    4. '_INV' → logprob: -15.000025749206543
    5. '_idx' → logprob: -15.125025749206543
    6. 'f' → logprob: -16.250024795532227
    7. 'n' → logprob: -16.500024795532227
    8. 'q' → logprob: -16.750024795532227
    9. 'v' → logprob: -17.000024795532227
    10. '_inf' → logprob: -17.125024795532227

Token 164: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.37500286102295
    3. 'p' → logprob: -13.87500286102295
    4. ' [' → logprob: -17.125001907348633
    5. '[q' → logprob: -17.500001907348633
    6. '[
' → logprob: -17.875001907348633
    7. '<p' → logprob: -18.375001907348633
    8. '(p' → logprob: -18.750001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '\[' → logprob: -19.500001907348633

Token 165: '-q' (ID: 62760)
  Prédit: '-q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-q' → logprob: -0.02361718937754631
    2. ' -' → logprob: -3.7736172676086426
    3. '-' → logprob: -7.898617267608643
    4. '[q' → logprob: -16.273616790771484
    5. 'q' → logprob: -16.398616790771484
    6. ' ' → logprob: -16.648616790771484
    7. '-
' → logprob: -17.648616790771484
    8. '-u' → logprob: -17.898616790771484
    9. '-minus' → logprob: -18.273616790771484
    10. ' q' → logprob: -18.648616790771484

Token 166: ']%' (ID: 158002)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010933926329016685
    2. ']%' → logprob: -4.885933876037598
    3. ' ]' → logprob: -5.760933876037598
    4. '%' → logprob: -9.010933876037598
    5. ' %' → logprob: -10.135933876037598
    6. '}' → logprob: -11.760933876037598
    7. ']
' → logprob: -13.385933876037598
    8. ')' → logprob: -14.010933876037598
    9. ' }' → logprob: -14.510933876037598
    10. '']' → logprob: -14.760933876037598

Token 167: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003365350130479783
    2. ' MOD' → logprob: -8.000336647033691
    3. '998' → logprob: -14.250336647033691
    4. ' ' → logprob: -15.750336647033691
    5. '   ' → logprob: -16.625335693359375
    6. '_MOD' → logprob: -17.000335693359375
    7. '.MOD' → logprob: -17.250335693359375
    8. '  ' → logprob: -17.625335693359375
    9. '(M' → logprob: -17.750335693359375
    10. 'MO' → logprob: -18.125335693359375

Token 168: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.006616604048758745
    2. 'ULE' → logprob: -5.381616592407227
    3. 'U' → logprob: -6.756616592407227
    4. 'O' → logprob: -7.131616592407227
    5. 'UL' → logprob: -11.381616592407227
    6. '   ' → logprob: -11.756616592407227
    7. ' U' → logprob: -12.381616592407227
    8. 'LO' → logprob: -13.381616592407227
    9. '_' → logprob: -14.006616592407227
    10. ' O' → logprob: -14.006616592407227

Token 169: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2532464265823364
    2. '<|end|>' → logprob: -2.253246307373047
    3. ' ' → logprob: -2.628246307373047
    4. ')' → logprob: -4.003246307373047
    5. '\n' → logprob: -5.003246307373047
    6. '
' → logprob: -5.003246307373047
    7. '    
' → logprob: -5.253246307373047
    8. '  ' → logprob: -6.003246307373047
    9. ' 
' → logprob: -6.003246307373047
    10. '  
' → logprob: -7.003246307373047

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9355001449584961
    2. ' ' → logprob: -1.560500144958496
    3. '(' → logprob: -1.810500144958496
    4. ')' → logprob: -2.060500144958496
    5. '<|end|>' → logprob: -2.685500144958496
    6. ':' → logprob: -4.560500144958496
    7. '  ' → logprob: -5.185500144958496
    8. '(n' → logprob: -5.435500144958496
    9. '    ' → logprob: -5.685500144958496
    10. '    
' → logprob: -5.810500144958496

Token 171: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5243462920188904
    2. 'res' → logprob: -2.024346351623535
    3. 'ans' → logprob: -2.649346351623535
    4. 'answer' → logprob: -2.774346351623535
    5. 'for' → logprob: -2.899346351623535
    6. 'def' → logprob: -3.024346351623535
    7. 'if' → logprob: -4.274346351623535
    8. 'total' (adapté à ' total') → logprob: -4.774346351623535
    9. 'dp' → logprob: -5.399346351623535
    10. 'r' → logprob: -6.274346351623535

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48433178663253784
    2. '_' → logprob: -1.1093318462371826
    3. '=' → logprob: -3.2343318462371826
    4. '_choices' → logprob: -5.2343316078186035
    5. '_sum' → logprob: -5.7343316078186035
    6. '_count' → logprob: -5.9843316078186035
    7. '_com' → logprob: -7.7343316078186035
    8. '_possible' → logprob: -8.234332084655762
    9. '_steps' → logprob: -8.359332084655762
    10. '_comb' → logprob: -8.609332084655762

Token 173: ' pow' (ID: 9779)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.843469500541687
    2. '0' → logprob: -0.968469500541687
    3. ' n' → logprob: -2.7184696197509766
    4. ' k' → logprob: -2.9684696197509766
    5. ' choose' → logprob: -4.093469619750977
    6. ' m' → logprob: -4.218469619750977
    7. 'k' → logprob: -4.593469619750977
    8. ' (' → logprob: -4.718469619750977
    9. 'n' → logprob: -5.093469619750977
    10. '1' → logprob: -5.468469619750977

Token 174: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3766716718673706
    2. '(' → logprob: -1.2516716718673706
    3. '(k' → logprob: -3.87667179107666
    4. '(n' → logprob: -5.25167179107666
    5. 'm' → logprob: -7.25167179107666
    6. '2' → logprob: -7.37667179107666
    7. '(total' → logprob: -8.87667179107666
    8. '(pow' → logprob: -9.37667179107666
    9. ' (' → logprob: -10.00167179107666
    10. '((' → logprob: -10.12667179107666

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9762496948242188
    2. ' k' → logprob: -1.1012496948242188
    3. ',k' → logprob: -2.1012496948242188
    4. ' ,' → logprob: -2.2262496948242188
    5. 'k' → logprob: -2.9762496948242188
    6. ' n' → logprob: -5.351249694824219
    7. ',n' → logprob: -5.476249694824219
    8. 'n' → logprob: -7.851249694824219
    9. ')' → logprob: -9.351249694824219
    10. '(k' → logprob: -9.601249694824219

Token 176: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.062490906566381454
    2. 'n' → logprob: -3.437490940093994
    3. ' k' → logprob: -3.687490940093994
    4. ' n' → logprob: -5.687490940093994
    5. ' ' → logprob: -12.062490463256836
    6. '   ' → logprob: -12.937490463256836
    7. 'nk' → logprob: -15.187490463256836
    8. '(n' → logprob: -15.562490463256836
    9. ')n' → logprob: -15.562490463256836
    10. '{k' → logprob: -15.687490463256836

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30803197622299194
    2. ')' → logprob: -1.5580320358276367
    3. ' ,' → logprob: -3.6830320358276367
    4. '*k' → logprob: -4.183032035827637
    5. ',k' → logprob: -4.933032035827637
    6. ' *' → logprob: -5.933032035827637
    7. '-k' → logprob: -6.183032035827637
    8. '-' → logprob: -7.183032035827637
    9. '*' → logprob: -7.183032035827637
    10. ' -' → logprob: -8.308032035827637

Token 178: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.16022585332393646
    2. ' MOD' → logprob: -1.9102258682250977
    3. ' ' → logprob: -14.035225868225098
    4. '   ' → logprob: -14.410225868225098
    5. '_MOD' → logprob: -15.660225868225098
    6. '  ' → logprob: -16.28522491455078
    7. '.MOD' → logprob: -17.28522491455078
    8. '    ' → logprob: -17.41022491455078
    9. ')' → logprob: -17.53522491455078
    10. 'MODULE' → logprob: -19.41022491455078

Token 179: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -8.602024900028482e-05
    2. 'O' → logprob: -9.375085830688477
    3. 'ulo' → logprob: -14.875085830688477
    4. 'U' → logprob: -15.500085830688477
    5. 'ULE' → logprob: -15.875085830688477
    6. '   ' → logprob: -16.000085830688477
    7. 'UL' → logprob: -16.375085830688477
    8. 'LO' → logprob: -16.500085830688477
    9. 'UTO' → logprob: -17.375085830688477
    10. ')' → logprob: -17.375085830688477

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016277639952022582
    2. ' )' → logprob: -8.875163078308105
    3. ')
' → logprob: -11.250163078308105
    4. ')*' → logprob: -12.625163078308105
    5. '   ' → logprob: -13.000163078308105
    6. '),' → logprob: -14.500163078308105
    7. ' ' → logprob: -14.500163078308105
    8. '*' → logprob: -14.500163078308105
    9. ');' → logprob: -14.750163078308105
    10. ')

' → logprob: -14.875163078308105

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01476225908845663
    2. '    ' → logprob: -5.7647624015808105
    3. '    
' → logprob: -6.2647624015808105
    4. ' ans' → logprob: -6.3897624015808105
    5. ' result' → logprob: -6.6397624015808105
    6. ' for' → logprob: -6.8897624015808105
    7. ' i' → logprob: -7.0147624015808105
    8. ' ' → logprob: -7.0147624015808105
    9. ')' → logprob: -7.3897624015808105
    10. 'result' → logprob: -7.6397624015808105

Token 182: ' deduction' (ID: 106545)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36745232343673706
    2. 'answer' → logprob: -2.242452383041382
    3. 'ans' → logprob: -2.867452383041382
    4. 'res' → logprob: -2.867452383041382
    5. ' result' → logprob: -3.492452383041382
    6. ' ans' → logprob: -3.617452383041382
    7. 'total' → logprob: -4.242452144622803
    8. ' answer' → logprob: -5.367452144622803
    9. '   ' → logprob: -5.742452144622803
    10. ' res' → logprob: -6.117452144622803

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021049315109848976
    2. '=' → logprob: -3.8960492610931396
    3. ' ' → logprob: -7.771049499511719
    4. '_' → logprob: -9.521049499511719
    5. ',' → logprob: -12.771049499511719
    6. ' _' → logprob: -13.146049499511719
    7. '    ' → logprob: -13.646049499511719
    8. 's' → logprob: -14.021049499511719
    9. ' =
' → logprob: -14.021049499511719
    10. ' ' → logprob: -14.271049499511719

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09254761040210724
    2. ' ' → logprob: -2.717547655105591
    3. ' choose' → logprob: -5.342547416687012
    4. '(' → logprob: -5.842547416687012
    5. ' (' → logprob: -5.842547416687012
    6. 'choose' → logprob: -5.967547416687012
    7. 'pow' → logprob: -6.217547416687012
    8. '1' → logprob: -6.217547416687012
    9. ' pow' → logprob: -6.842547416687012
    10. ' k' → logprob: -6.842547416687012

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47685250639915466
    2. 'choose' → logprob: -1.476852536201477
    3. '(' → logprob: -2.4768524169921875
    4. 'm' → logprob: -4.2268524169921875
    5. 'pow' → logprob: -4.4768524169921875
    6. 'k' → logprob: -4.7268524169921875
    7. 'sum' → logprob: -4.8518524169921875
    8. '(m' → logprob: -5.2268524169921875
    9. ' choose' → logprob: -5.4768524169921875
    10. 'total' → logprob: -5.9768524169921875

Token 186: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0533596277236938
    2. ' for' → logprob: -1.0533596277236938
    3. '   ' → logprob: -2.0533595085144043
    4. ' i' → logprob: -3.0533595085144043
    5. ' 
' → logprob: -3.1783595085144043
    6. '<|end|>' → logprob: -3.4283595085144043
    7. 'for' → logprob: -4.053359508514404
    8. 'i' → logprob: -5.053359508514404
    9. ' idx' → logprob: -5.178359508514404
    10. ',' → logprob: -5.178359508514404

Token 188: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.666641354560852
    2. ' for' → logprob: -1.166641354560852
    3. 'i' → logprob: -2.4166412353515625
    4. ' i' → logprob: -2.5416412353515625
    5. 'range' → logprob: -5.7916412353515625
    6. ' range' → logprob: -6.6666412353515625
    7. ' ' → logprob: -7.1666412353515625
    8. 'x' → logprob: -7.2916412353515625
    9. '_' → logprob: -8.166641235351562
    10. 'idx' → logprob: -8.416641235351562

Token 189: ' =' (ID: 314)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.002509070560336113
    2. 'e' → logprob: -7.252509117126465
    3. ' ange' → logprob: -7.877509117126465
    4. ' ' → logprob: -8.377509117126465
    5. 'range' → logprob: -8.377509117126465
    6. 'a' → logprob: -8.377509117126465
    7. ' =' → logprob: -8.752509117126465
    8. 'anged' → logprob: -9.377509117126465
    9. ' in' → logprob: -9.627509117126465
    10. 'anging' → logprob: -9.627509117126465

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46362876892089844
    2. 'k' → logprob: -1.5886287689208984
    3. '1' → logprob: -2.0886287689208984
    4. ' ' → logprob: -3.5886287689208984
    5. ' k' → logprob: -4.213628768920898
    6. 'n' → logprob: -8.088628768920898
    7. 'min' → logprob: -9.588628768920898
    8. ' n' → logprob: -9.713628768920898
    9. '2' → logprob: -10.338628768920898
    10. ' min' → logprob: -11.401128768920898

Token 191: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38430577516555786
    2. 'k' → logprob: -1.634305715560913
    3. '1' → logprob: -2.134305715560913
    4. 'min' → logprob: -5.884305953979492
    5. 'n' → logprob: -6.384305953979492
    6. ' ' → logprob: -7.259305953979492
    7. ' k' → logprob: -8.259305953979492
    8. 'max' → logprob: -9.009305953979492
    9. ' min' → logprob: -10.884305953979492
    10. '2' → logprob: -10.884305953979492

Token 192: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5838849544525146
    2. 'for' → logprob: -1.8338849544525146
    3. ' while' → logprob: -1.8338849544525146
    4. ' for' → logprob: -2.8338849544525146
    5. ' ' → logprob: -4.208885192871094
    6. 'r' → logprob: -4.583885192871094
    7. '
' → logprob: -4.583885192871094
    8. ',' → logprob: -5.333885192871094
    9. 'range' → logprob: -5.333885192871094
    10. ' r' → logprob: -5.458885192871094

Token 195: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5377234816551208
    2. ' k' → logprob: -1.2877235412597656
    3. 'k' → logprob: -2.6627235412597656
    4. 'r' → logprob: -2.6627235412597656
    5. ' n' → logprob: -8.912723541259766
    6. ' ' → logprob: -9.287723541259766
    7. '   ' → logprob: -9.537723541259766
    8. '(k' → logprob: -9.787723541259766
    9. '(r' → logprob: -10.162723541259766
    10. 'n' → logprob: -10.787723541259766

Token 196: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25706717371940613
    2. '<=' → logprob: -1.5070672035217285
    3. ' <' → logprob: -5.6320672035217285
    4. '<' → logprob: -6.5070672035217285
    5. ' ' → logprob: -10.63206672668457
    6. ' ≤' → logprob: -12.50706672668457
    7. '```' → logprob: -12.75706672668457
    8. '<n' → logprob: -12.88206672668457
    9. ')<=' → logprob: -13.63206672668457
    10. 'k' → logprob: -13.88206672668457

Token 197: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06283050775527954
    2. '=' → logprob: -3.3128304481506348
    3. 'n' → logprob: -4.687830448150635
    4. ' k' → logprob: -4.812830448150635
    5. '=k' → logprob: -5.437830448150635
    6. 'min' → logprob: -6.437830448150635
    7. ' n' → logprob: -7.687830448150635
    8. '=min' → logprob: -8.062830924987793
    9. '=n' → logprob: -8.187830924987793
    10. ' min' → logprob: -10.187830924987793

Token 198: '-k' (ID: 10897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08319355547428131
    2. ':
' → logprob: -2.70819354057312
    3. ' and' → logprob: -4.708193778991699
    4. '+' → logprob: -5.958193778991699
    5. ' :' → logprob: -7.458193778991699
    6. 'and' → logprob: -7.458193778991699
    7. ' :
' → logprob: -8.3331937789917
    8. '   ' → logprob: -9.4581937789917
    9. ' +' → logprob: -10.9581937789917
    10. '):
' → logprob: -11.3331937789917

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021204551681876183
    2. ':
' → logprob: -3.8962044715881348
    3. '   ' → logprob: -8.521204948425293
    4. ' :' → logprob: -8.771204948425293
    5. '+' → logprob: -8.896204948425293
    6. ' and' → logprob: -9.396204948425293
    7. ' :
' → logprob: -10.521204948425293
    8. ',' → logprob: -11.146204948425293
    9. '):' → logprob: -11.646204948425293
    10. '):
' → logprob: -12.021204948425293

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052003201097249985
    2. '   ' → logprob: -3.6770031452178955
    3. ',' → logprob: -4.802003383636475
    4. '    ' → logprob: -5.552003383636475
    5. '        
' → logprob: -6.052003383636475
    6. ':
' → logprob: -6.177003383636475
    7. '<|end|>' → logprob: -6.177003383636475
    8. '
' → logprob: -6.802003383636475
    9. ')' → logprob: -6.927003383636475
    10. '    
' → logprob: -7.177003383636475

Token 201: ' deduction' (ID: 106545)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1742664575576782
    2. ' if' → logprob: -1.7992664575576782
    3. ' c' → logprob: -2.5492663383483887
    4. 'if' → logprob: -3.2992663383483887
    5. 'temp' → logprob: -3.4242663383483887
    6. 'c' → logprob: -3.5492663383483887
    7. 't' → logprob: -3.6742663383483887
    8. 'tmp' → logprob: -3.6742663383483887
    9. ' temp' → logprob: -4.049266338348389
    10. 'd' → logprob: -4.049266338348389

Token 202: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.012746725231409073
    2. '+=' → logprob: -4.512746810913086
    3. ' =' → logprob: -6.637746810913086
    4. '=' → logprob: -8.512746810913086
    5. ' ' → logprob: -8.637746810913086
    6. ' -=' → logprob: -13.012746810913086
    7. ' <<=' → logprob: -13.262746810913086
    8. '+=(' → logprob: -13.762746810913086
    9. ' |=' → logprob: -13.887746810913086
    10. '+' → logprob: -14.137746810913086

Token 203: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.32298311591148376
    2. ' (' → logprob: -1.3229831457138062
    3. '(' → logprob: -4.697983264923096
    4. '   ' → logprob: -8.322982788085938
    5. '(r' → logprob: -9.447982788085938
    6. '(dec' → logprob: -9.947982788085938
    7. ' ' → logprob: -10.197982788085938
    8. '(de' → logprob: -11.072982788085938
    9. '(def' → logprob: -11.697982788085938
    10. '(mod' → logprob: -11.697982788085938

Token 204: 'ded' (ID: 33732)
  Prédit: 'ded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ded' → logprob: -0.42291945219039917
    2. '(d' → logprob: -1.297919511795044
    3. ' deduction' → logprob: -2.797919511795044
    4. ' (' → logprob: -4.797919273376465
    5. '   ' → logprob: -6.922919273376465
    6. 'd' → logprob: -7.047919273376465
    7. '(' → logprob: -8.547919273376465
    8. '	d' → logprob: -9.422919273376465
    9. ' ' → logprob: -9.797919273376465
    10. '  ' → logprob: -10.047919273376465

Token 205: 'uction' (ID: 15654)
  Prédit: 'uction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uction' → logprob: -0.0012618985492736101
    2. 'uct' → logprob: -7.7512617111206055
    3. '   ' → logprob: -7.8762617111206055
    4. '```' → logprob: -9.126261711120605
    5. '``' → logprob: -9.876261711120605
    6. '+' → logprob: -10.126261711120605
    7. 'u' → logprob: -10.501261711120605
    8. ' ' → logprob: -11.126261711120605
    9. '*' → logprob: -11.251261711120605
    10. ')' → logprob: -11.376261711120605

Token 206: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05493566393852234
    2. '+' → logprob: -2.9299356937408447
    3. '+r' → logprob: -10.679935455322266
    4. ' ' → logprob: -10.804935455322266
    5. ')' → logprob: -12.929935455322266
    6. ' +
' → logprob: -13.179935455322266
    7. ' ' → logprob: -13.429935455322266
    8. ' plus' → logprob: -13.429935455322266
    9. ' -' → logprob: -14.429935455322266
    10. ' )' → logprob: -15.304935455322266

Token 207: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.045186590403318405
    2. ' choose' → logprob: -3.1701865196228027
    3. '(' → logprob: -7.295186519622803
    4. 'm' → logprob: -7.420186519622803
    5. 'pow' → logprob: -8.420186996459961
    6. ' m' → logprob: -9.045186996459961
    7. ' (' → logprob: -9.045186996459961
    8. '   ' → logprob: -9.170186996459961
    9. '(m' → logprob: -9.295186996459961
    10. 'r' → logprob: -9.670186996459961

Token 208: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00034058792516589165
    2. '(' → logprob: -8.375340461730957
    3. '(m' → logprob: -9.250340461730957
    4. 'n' → logprob: -11.625340461730957
    5. ' (' → logprob: -12.875340461730957
    6. '(r' → logprob: -13.750340461730957
    7. '((' → logprob: -14.000340461730957
    8. '(
' → logprob: -15.250340461730957
    9. '   ' → logprob: -16.000341415405273
    10. 'm' → logprob: -16.750341415405273

Token 209: '-' (ID: 12)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40138527750968933
    2. ',' → logprob: -1.6513853073120117
    3. ' r' → logprob: -2.7763853073120117
    4. ',r' → logprob: -2.7763853073120117
    5. '-' → logprob: -5.151385307312012
    6. ' ,' → logprob: -5.276385307312012
    7. '(r' → logprob: -6.776385307312012
    8. ' -' → logprob: -7.026385307312012
    9. ' ' → logprob: -7.651385307312012
    10. '-r' → logprob: -8.401385307312012

Token 210: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2554277181625366
    2. '1' → logprob: -1.5054277181625366
    3. 'k' → logprob: -5.880427837371826
    4. ' r' → logprob: -8.505427360534668
    5. 'm' → logprob: -9.005427360534668
    6. ' ' → logprob: -9.255427360534668
    7. '   ' → logprob: -9.380427360534668
    8. '2' → logprob: -10.005427360534668
    9. '(r' → logprob: -10.130427360534668
    10. '-' → logprob: -10.380427360534668

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11236470937728882
    2. ',r' → logprob: -2.3623647689819336
    3. 'r' → logprob: -5.112364768981934
    4. ' ,' → logprob: -5.362364768981934
    5. ' r' → logprob: -6.612364768981934
    6. '   ' → logprob: -11.112364768981934
    7. ',n' → logprob: -12.612364768981934
    8. ' ' → logprob: -12.862364768981934
    9. ',
' → logprob: -13.112364768981934
    10. ')' → logprob: -13.737364768981934

Token 212: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011050059460103512
    2. ' r' → logprob: -4.511050224304199
    3. '	r' → logprob: -13.3860502243042
    4. '   ' → logprob: -14.3860502243042
    5. ' ' → logprob: -16.636049270629883
    6. '    ' → logprob: -17.261049270629883
    7. '
' → logprob: -17.636049270629883
    8. '       ' → logprob: -17.886049270629883
    9. 'n' → logprob: -18.261049270629883
    10. '(r' → logprob: -18.636049270629883

Token 213: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019417885690927505
    2. ')*' → logprob: -4.019417762756348
    3. ' )' → logprob: -7.019417762756348
    4. '   ' → logprob: -8.519417762756348
    5. '-' → logprob: -9.519417762756348
    6. ' ' → logprob: -10.019417762756348
    7. '  ' → logprob: -11.269417762756348
    8. ' -' → logprob: -11.269417762756348
    9. '))' → logprob: -11.644417762756348
    10. ')*(' → logprob: -12.269417762756348

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28558993339538574
    2. ')' → logprob: -1.4105899333953857
    3. 'r' → logprob: -6.285590171813965
    4. ')*' → logprob: -7.160590171813965
    5. '   ' → logprob: -7.660590171813965
    6. ' ' → logprob: -7.660590171813965
    7. '))' → logprob: -7.910590171813965
    8. '-' → logprob: -8.785590171813965
    9. ' r' → logprob: -9.160590171813965
    10. '```' → logprob: -9.535590171813965

Token 215: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08121644705533981
    2. ')*' → logprob: -2.581216335296631
    3. ' )' → logprob: -6.956216335296631
    4. '*m' → logprob: -7.206216335296631
    5. '   ' → logprob: -8.081216812133789
    6. '*' → logprob: -9.081216812133789
    7. ' *' → logprob: -9.956216812133789
    8. ')*(' → logprob: -10.081216812133789
    9. ' ' → logprob: -10.581216812133789
    10. 'm' → logprob: -10.831216812133789

Token 216: 'm' (ID: 76)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.31614670157432556
    2. 'm' → logprob: -1.441146731376648
    3. '(m' → logprob: -3.5661466121673584
    4. ' m' → logprob: -6.0661468505859375
    5. ' pow' → logprob: -6.5661468505859375
    6. '   ' → logprob: -7.0661468505859375
    7. '(pow' → logprob: -7.6911468505859375
    8. ' (' → logprob: -8.066146850585938
    9. 'choose' → logprob: -8.941146850585938
    10. ' ' → logprob: -9.566146850585938

Token 217: '*' (ID: 9)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.3401649296283722
    2. '(m' → logprob: -1.5901648998260498
    3. '*' → logprob: -2.96516489982605
    4. '   ' → logprob: -4.465165138244629
    5. 'pow' → logprob: -5.215165138244629
    6. '(pow' → logprob: -5.340165138244629
    7. '*m' → logprob: -5.965165138244629
    8. ')' → logprob: -6.090165138244629
    9. '(' → logprob: -6.840165138244629
    10. 'm' → logprob: -7.090165138244629

Token 218: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0017175428802147508
    2. '(m' → logprob: -6.626717567443848
    3. '(pow' → logprob: -8.501717567443848
    4. ' pow' → logprob: -9.001717567443848
    5. '   ' → logprob: -10.501717567443848
    6. 'm' → logprob: -11.251717567443848
    7. '
' → logprob: -11.876717567443848
    8. ' (' → logprob: -13.251717567443848
    9. '       ' → logprob: -13.376717567443848
    10. '(' → logprob: -13.501717567443848

Token 219: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20424462854862213
    2. '(m' → logprob: -1.704244613647461
    3. 'pow' → logprob: -6.704244613647461
    4. '   ' → logprob: -7.454244613647461
    5. 'r' → logprob: -7.704244613647461
    6. '(r' → logprob: -8.579244613647461
    7. '       ' → logprob: -8.954244613647461
    8. '  ' → logprob: -9.954244613647461
    9. '      ' → logprob: -10.329244613647461
    10. '     ' → logprob: -10.704244613647461

Token 220: '-' (ID: 12)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009008764289319515
    2. 'n' → logprob: -4.884008884429932
    3. '(n' → logprob: -7.384008884429932
    4. '   ' → logprob: -7.884008884429932
    5. ' r' → logprob: -8.259008407592773
    6. '(r' → logprob: -10.134008407592773
    7. ' n' → logprob: -10.259008407592773
    8. '       ' → logprob: -11.009008407592773
    9. '  ' → logprob: -11.009008407592773
    10. ' ' → logprob: -11.259008407592773

Token 221: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001992490579141304
    2. 'n' → logprob: -8.750199317932129
    3. '   ' → logprob: -10.625199317932129
    4. ' r' → logprob: -12.125199317932129
    5. '(r' → logprob: -12.375199317932129
    6. '(n' → logprob: -12.500199317932129
    7. ' ' → logprob: -13.875199317932129
    8. '     ' → logprob: -14.375199317932129
    9. '       ' → logprob: -14.375199317932129
    10. '    ' → logprob: -15.125199317932129

Token 222: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47104066610336304
    2. 'r' → logprob: -1.0960407257080078
    3. '(n' → logprob: -3.721040725708008
    4. '{' → logprob: -4.721040725708008
    5. ' n' → logprob: -5.471040725708008
    6. ' r' → logprob: -6.471040725708008
    7. ',' → logprob: -7.596040725708008
    8. '[n' → logprob: -7.596040725708008
    9. ',n' → logprob: -7.596040725708008
    10. '(r' → logprob: -8.471040725708008

Token 223: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10034868121147156
    2. 'n' → logprob: -2.350348711013794
    3. ' r' → logprob: -9.350348472595215
    4. ' n' → logprob: -10.100348472595215
    5. '   ' → logprob: -11.850348472595215
    6. '{' → logprob: -12.475348472595215
    7. '	n' → logprob: -13.975348472595215
    8. '<n' → logprob: -14.725348472595215
    9. ' ' → logprob: -14.850348472595215
    10. '	r' → logprob: -14.975348472595215

Token 224: '-' (ID: 12)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29588568210601807
    2. ' n' → logprob: -1.920885682106018
    3. '-' → logprob: -3.0458855628967285
    4. ',n' → logprob: -3.1708855628967285
    5. ')' → logprob: -5.0458855628967285
    6. ',' → logprob: -5.6708855628967285
    7. ')n' → logprob: -5.6708855628967285
    8. '	n' → logprob: -6.4208855628967285
    9. ' ' → logprob: -6.7958855628967285
    10. '(n' → logprob: -6.9208855628967285

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3256247639656067
    2. 'r' → logprob: -1.325624704360962
    3. 'n' → logprob: -4.450624942779541
    4. ')' → logprob: -7.950624942779541
    5. ' r' → logprob: -9.325624465942383
    6. '```' → logprob: -10.075624465942383
    7. '(n' → logprob: -10.325624465942383
    8. 's' → logprob: -10.325624465942383
    9. ' ' → logprob: -10.700624465942383
    10. ' n' → logprob: -10.825624465942383

Token 226: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09399430453777313
    2. ',' → logprob: -2.968994379043579
    3. ')%' → logprob: -3.593994379043579
    4. '%' → logprob: -5.218994140625
    5. ' )' → logprob: -6.093994140625
    6. ' %' → logprob: -6.093994140625
    7. ' ,' → logprob: -7.593994140625
    8. '   ' → logprob: -8.593994140625
    9. ' ' → logprob: -9.343994140625
    10. '%)' → logprob: -9.593994140625

Token 227: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03804929554462433
    2. ' MOD' → logprob: -3.2880492210388184
    3. '   ' → logprob: -12.288049697875977
    4. ' ' → logprob: -13.038049697875977
    5. '    ' → logprob: -15.413049697875977
    6. '  ' → logprob: -15.538049697875977
    7. '.MOD' → logprob: -15.663049697875977
    8. '_MOD' → logprob: -15.788049697875977
    9. ')' → logprob: -15.913049697875977
    10. '       ' → logprob: -16.163049697875977

Token 228: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -6.869017852295656e-06
    2. 'O' → logprob: -12.000006675720215
    3. 'UL' → logprob: -15.375006675720215
    4. 'ULE' → logprob: -15.625006675720215
    5. 'U' → logprob: -15.625006675720215
    6. 'LO' → logprob: -16.87500762939453
    7. 'ulo' → logprob: -16.87500762939453
    8. '   ' → logprob: -18.25000762939453
    9. 'LU' → logprob: -18.25000762939453
    10. 'L' → logprob: -18.50000762939453

Token 229: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03223814442753792
    2. ')%' → logprob: -3.657238245010376
    3. ' )' → logprob: -5.157238006591797
    4. '   ' → logprob: -9.282238006591797
    5. '%' → logprob: -10.032238006591797
    6. '       ' → logprob: -11.532238006591797
    7. '    ' → logprob: -12.907238006591797
    8. '*' → logprob: -13.032238006591797
    9. '%)' → logprob: -13.032238006591797
    10. '')' → logprob: -13.407238006591797

Token 230: ' %' (ID: 1851)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9015280604362488
    2. '%' → logprob: -1.4015281200408936
    3. '
' → logprob: -1.5265281200408936
    4. ' %' → logprob: -2.4015281200408936
    5. '   ' → logprob: -4.0265278816223145
    6. ')' → logprob: -4.2765278816223145
    7. ' ' → logprob: -6.1515278816223145
    8. 'r' → logprob: -6.6515278816223145
    9. ' r' → logprob: -7.2765278816223145
    10. ' 
' → logprob: -7.4015278816223145

Token 231: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001170460251159966
    2. ' MOD' → logprob: -6.751170635223389
    3. '998' → logprob: -15.25117015838623
    4. '(M' → logprob: -16.751171112060547
    5. 'MO' → logprob: -18.001171112060547
    6. ' ' → logprob: -18.376171112060547
    7. '.MOD' → logprob: -18.751171112060547
    8. '_MOD' → logprob: -18.751171112060547
    9. '   ' → logprob: -18.876171112060547
    10. '999' → logprob: -19.501171112060547

Token 232: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.005300042685121298
    2. 'O' → logprob: -5.255300045013428
    3. 'ULE' → logprob: -9.88029956817627
    4. 'U' → logprob: -11.50529956817627
    5. 'UL' → logprob: -13.50529956817627
    6. 'LO' → logprob: -14.00529956817627
    7. 'UTO' → logprob: -14.88029956817627
    8. 'L' → logprob: -15.25529956817627
    9. '   ' → logprob: -15.50529956817627
    10. '
' → logprob: -15.63029956817627

Token 233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.201659694314003
    2. '   ' → logprob: -1.7016596794128418
    3. 'r' → logprob: -8.45166015625
    4. ' r' → logprob: -11.57666015625
    5. '```' → logprob: -11.70166015625
    6. '    
' → logprob: -12.82666015625
    7. '	r' → logprob: -13.07666015625
    8. '           ' → logprob: -13.07666015625
    9. '\' → logprob: -13.45166015625
    10. '        
' → logprob: -13.57666015625

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04861734062433243
    2. '   ' → logprob: -3.048617362976074
    3. 'r' → logprob: -11.298617362976074
    4. '<|end|>' → logprob: -11.923617362976074
    5. '           ' → logprob: -12.548617362976074
    6. '     ' → logprob: -13.673617362976074
    7. '    ' → logprob: -14.048617362976074
    8. '
' → logprob: -14.298617362976074
    9. '    
' → logprob: -14.298617362976074
    10. '      ' → logprob: -14.423617362976074

Token 235: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.7649711966514587
    2. '   ' → logprob: -1.0149712562561035
    3. '       ' → logprob: -1.7649712562561035
    4. ' r' → logprob: -6.8899712562561035
    5. '           ' → logprob: -12.139970779418945
    6. '	r' → logprob: -12.139970779418945
    7. '  ' → logprob: -12.264970779418945
    8. '     ' → logprob: -12.514970779418945
    9. ' ' → logprob: -12.639970779418945
    10. '    ' → logprob: -13.014970779418945

Token 236: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04901367425918579
    2. '+' → logprob: -3.049013614654541
    3. ' +=' → logprob: -7.799013614654541
    4. '++' → logprob: -11.2990140914917
    5. '=' → logprob: -13.9240140914917
    6. '+="' → logprob: -14.0490140914917
    7. '+++' → logprob: -14.2990140914917
    8. ']+=' → logprob: -14.5490140914917
    9. '+='' → logprob: -15.1740140914917
    10. '<|end|>' → logprob: -15.1740140914917

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.37500762939453
    4. '   ' → logprob: -19.62500762939453
    5. '１' → logprob: -20.50000762939453
    6. '۱' → logprob: -20.87500762939453
    7. '
' → logprob: -23.00000762939453
    8. '१' → logprob: -23.00000762939453
    9. '১' → logprob: -23.18750762939453
    10. '	' → logprob: -23.18750762939453

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -19.125
    4. '１' → logprob: -21.75
    5. '   ' → logprob: -21.75
    6. '۱' → logprob: -22.25
    7. '१' → logprob: -23.375
    8. '১' → logprob: -23.875
    9. '`' → logprob: -24.1875
    10. '2' → logprob: -24.3125

Token 239: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006941506639122963
    2. '
' → logprob: -5.506941318511963
    3. 'print' → logprob: -6.256941318511963
    4. 'return' → logprob: -7.631941318511963
    5. '    
' → logprob: -8.256941795349121
    6. ' return' → logprob: -10.131941795349121
    7. ')' → logprob: -10.256941795349121
    8. 'result' → logprob: -10.256941795349121
    9. '```' → logprob: -10.381941795349121
    10. '<|end|>' → logprob: -10.881941795349121

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036702712532132864
    2. 'print' → logprob: -6.1286702156066895
    3. '
' → logprob: -6.7536702156066895
    4. 'return' → logprob: -9.003670692443848
    5. '    
' → logprob: -9.003670692443848
    6. ')' → logprob: -10.378670692443848
    7. '```' → logprob: -11.003670692443848
    8. '<|end|>' → logprob: -11.753670692443848
    9. ' return' → logprob: -12.128670692443848
    10. ' print' → logprob: -12.378670692443848

Token 241: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04758008196949959
    2. 'print' → logprob: -3.6725800037384033
    3. '
' → logprob: -4.047580242156982
    4. '    
' → logprob: -6.172580242156982
    5. 'return' → logprob: -6.922580242156982
    6. 'result' → logprob: -8.422579765319824
    7. '```' → logprob: -9.297579765319824
    8. 'total' → logprob: -9.672579765319824
    9. ')' → logprob: -9.797579765319824
    10. ' print' → logprob: -10.922579765319824

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024646162986755
    2. '=' → logprob: -1.91024649143219
    3. ' ' → logprob: -11.035246849060059
    4. ',' → logprob: -13.910246849060059
    5. '  ' → logprob: -14.285246849060059
    6. ' =
' → logprob: -14.285246849060059
    7. '   ' → logprob: -14.410246849060059
    8. ')' → logprob: -14.535246849060059
    9. '＝' → logprob: -14.660246849060059
    10. ' ' → logprob: -14.660246849060059

Token 243: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.10423685610294342
    2. ' (' → logprob: -2.3542368412017822
    3. 'total' → logprob: -5.729237079620361
    4. ' total' → logprob: -7.229237079620361
    5. '(' → logprob: -10.354236602783203
    6. '   ' → logprob: -12.104236602783203
    7. ' ' → logprob: -12.479236602783203
    8. '
' → logprob: -13.479236602783203
    9. '(t' → logprob: -13.604236602783203
    10. '(max' → logprob: -13.979236602783203

Token 244: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.001451067510060966
    2. ' total' → logprob: -6.626451015472412
    3. '(total' → logprob: -9.12645149230957
    4. '   ' → logprob: -11.12645149230957
    5. ' ' → logprob: -14.50145149230957
    6. 'tot' → logprob: -14.75145149230957
    7. ' (' → logprob: -15.00145149230957
    8. '
' → logprob: -15.75145149230957
    9. 't' → logprob: -16.87645149230957
    10. '	total' → logprob: -17.37645149230957

Token 245: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12783940136432648
    2. '-' → logprob: -2.1278393268585205
    3. '-d' → logprob: -7.0028395652771
    4. ' ' → logprob: -14.502839088439941
    5. ' ' → logprob: -14.627839088439941
    6. '   ' → logprob: -14.752839088439941
    7. '-D' → logprob: -16.877840042114258
    8. ')' → logprob: -17.127840042114258
    9. ' deduction' → logprob: -17.877840042114258
    10. '-dem' → logprob: -18.002840042114258

Token 246: ' deduction' (ID: 106545)
  Prédit: 'ded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ded' → logprob: -0.018165044486522675
    2. ' deduction' → logprob: -4.018165111541748
    3. '   ' → logprob: -11.76816463470459
    4. ' ' → logprob: -13.26816463470459
    5. '	d' → logprob: -13.39316463470459
    6. ' ded' → logprob: -14.01816463470459
    7. 'Ded' → logprob: -14.14316463470459
    8. ' dedication' → logprob: -14.14316463470459
    9. 'd' → logprob: -14.76816463470459
    10. ' ' → logprob: -15.14316463470459

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016897499153856188
    2. ' )' → logprob: -9.000168800354004
    3. ')%' → logprob: -10.750168800354004
    4. '+' → logprob: -10.875168800354004
    5. ' +' → logprob: -12.375168800354004
    6. '   ' → logprob: -14.625168800354004
    7. ' ' → logprob: -15.625168800354004
    8. '）' → logprob: -16.50016975402832
    9. '%' → logprob: -17.25016975402832
    10. '```' → logprob: -17.75016975402832

Token 248: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06197037547826767
    2. '%' → logprob: -2.8119704723358154
    3. ' ' → logprob: -13.936970710754395
    4. ' ' → logprob: -14.061970710754395
    5. ' *' → logprob: -15.186970710754395
    6. ')' → logprob: -15.311970710754395
    7. '*' → logprob: -15.561970710754395
    8. '   ' → logprob: -16.186969757080078
    9. '
' → logprob: -16.436969757080078
    10. ' %=' → logprob: -16.561969757080078

Token 249: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007156503852456808
    2. ' MOD' → logprob: -7.250715732574463
    3. '998' → logprob: -12.125715255737305
    4. ' ' → logprob: -16.625715255737305
    5. '   ' → logprob: -17.125715255737305
    6. '(M' → logprob: -17.375715255737305
    7. '.MOD' → logprob: -17.750715255737305
    8. '_MOD' → logprob: -19.125715255737305
    9. '999' → logprob: -19.250715255737305
    10. '```' → logprob: -19.250715255737305

Token 250: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -7.624555291840807e-05
    2. 'O' → logprob: -9.625076293945312
    3. 'ULE' → logprob: -12.000076293945312
    4. 'U' → logprob: -12.750076293945312
    5. 'UL' → logprob: -14.375076293945312
    6. 'ulo' → logprob: -15.500076293945312
    7. '   ' → logprob: -16.125076293945312
    8. 'UTO' → logprob: -17.125076293945312
    9. 'LO' → logprob: -17.500076293945312
    10. '
' → logprob: -18.125076293945312

Token 251: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038361826445907354
    2. '
' → logprob: -6.378836154937744
    3. 'print' → logprob: -6.628836154937744
    4. '    
' → logprob: -7.503836154937744
    5. 'return' → logprob: -8.753836631774902
    6. '<|end|>' → logprob: -10.253836631774902
    7. '```' → logprob: -10.503836631774902
    8. ' return' → logprob: -10.878836631774902
    9. ' print' → logprob: -12.003836631774902
    10. '	return' → logprob: -12.003836631774902

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012467780616134405
    2. '    
' → logprob: -7.251246929168701
    3. 'return' → logprob: -8.376246452331543
    4. '<|end|>' → logprob: -8.876246452331543
    5. ' return' → logprob: -9.251246452331543
    6. 'print' → logprob: -10.751246452331543
    7. '
' → logprob: -11.376246452331543
    8. '```' → logprob: -11.501246452331543
    9. ')' → logprob: -11.751246452331543
    10. '	return' → logprob: -11.751246452331543

Token 253: ' [' (ID: 723)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018089536752086133
    2. '   ' → logprob: -8.750181198120117
    3. 'return' → logprob: -10.750181198120117
    4. ' print' → logprob: -14.250181198120117
    5. '```' → logprob: -14.875181198120117
    6. '
' → logprob: -18.250181198120117
    7. '    
' → logprob: -18.375181198120117
    8. '	print' → logprob: -18.500181198120117
    9. 'if' → logprob: -18.625181198120117
    10. 'pr' → logprob: -19.250181198120117

Token 254: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009082449832931161
    2. 'return' → logprob: -8.375907897949219
    3. '   ' → logprob: -8.750907897949219
    4. ' print' → logprob: -8.750907897949219
    5. 'n' → logprob: -9.250907897949219
    6. 'ans' → logprob: -9.625907897949219
    7. ']' → logprob: -9.875907897949219
    8. '
' → logprob: -10.125907897949219
    9. 'p' → logprob: -10.750907897949219
    10. ')' → logprob: -10.875907897949219

Token 255: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0006073639378882945
    2. '(x' → logprob: -7.750607490539551
    3. '(i' → logprob: -8.87560749053955
    4. 'ans' → logprob: -11.12560749053955
    5. '(int' → logprob: -11.62560749053955
    6. '((' → logprob: -12.25060749053955
    7. '(a' → logprob: -12.87560749053955
    8. '(' → logprob: -13.37560749053955
    9. ' (' → logprob: -13.75060749053955
    10. '(r' → logprob: -14.62560749053955

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015378349926322699
    2. ')]' → logprob: -7.001537799835205
    3. '())' → logprob: -7.751537799835205
    4. '()' → logprob: -8.876538276672363
    5. ')])' → logprob: -11.001538276672363
    6. '))' → logprob: -11.126538276672363
    7. '])' → logprob: -11.376538276672363
    8. ' )' → logprob: -12.376538276672363
    9. ')`' → logprob: -13.501538276672363
    10. ',' → logprob: -13.751538276672363

Token 257: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4831208884716034
    2. '()]' → logprob: -0.9831209182739258
    3. ')]' → logprob: -5.358120918273926
    4. ')' → logprob: -6.483120918273926
    5. '[' → logprob: -6.983120918273926
    6. ']()' → logprob: -7.358120918273926
    7. '()' → logprob: -7.483120918273926
    8. '[]' → logprob: -7.608120918273926
    9. '])' → logprob: -9.608120918273926
    10. '(' → logprob: -10.358120918273926

Token 258: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14460133016109467
    2. ' range' → logprob: -2.394601345062256
    3. '_' → logprob: -3.144601345062256
    4. '[' → logprob: -8.894600868225098
    5. '[]' → logprob: -9.519600868225098
    6. '_range' → logprob: -10.144600868225098
    7. '__' → logprob: -10.519600868225098
    8. '(range' → logprob: -10.519600868225098
    9. '_[' → logprob: -11.019600868225098
    10. '_]' → logprob: -12.019600868225098

Token 259: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05337489768862724
    2. ' in' → logprob: -3.053375005722046
    3. 'range' → logprob: -5.428374767303467
    4. '_' → logprob: -8.678375244140625
    5. ' range' → logprob: -8.678375244140625
    6. ' ' → logprob: -10.303375244140625
    7. ')' → logprob: -12.678375244140625
    8. ']' → logprob: -12.803375244140625
    9. ' _' → logprob: -12.928375244140625
    10. '```' → logprob: -14.178375244140625

Token 260: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002087853499688208
    2. ' range' → logprob: -8.500208854675293
    3. ']' → logprob: -12.500208854675293
    4. '[' → logprob: -13.750208854675293
    5. '(range' → logprob: -15.500208854675293
    6. '(' → logprob: -16.375207901000977
    7. '
' → logprob: -17.000207901000977
    8. ' ' → logprob: -17.500207901000977
    9. '	range' → logprob: -17.750207901000977
    10. '[]' → logprob: -18.625207901000977

Token 261: 'tuple' (ID: 52834)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014376336708664894
    2. ' range' → logprob: -4.514376163482666
    3. '[' → logprob: -5.889376163482666
    4. '0' → logprob: -7.514376163482666
    5. '[]' → logprob: -13.139376640319824
    6. '(range' → logprob: -13.389376640319824
    7. '
' → logprob: -13.764376640319824
    8. '   ' → logprob: -14.014376640319824
    9. ' ' → logprob: -14.014376640319824
    10. '.range' → logprob: -14.639376640319824

Token 262: '(),' (ID: 2547)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.03622271120548248
    2. '())' → logprob: -4.0362229347229
    3. 'range' → logprob: -5.0362229347229
    4. '([' → logprob: -5.7862229347229
    5. '()' → logprob: -6.2862229347229
    6. '(input' → logprob: -6.2862229347229
    7. '()]' → logprob: -6.4112229347229
    8. '(' → logprob: -6.7862229347229
    9. '(n' → logprob: -7.4112229347229
    10. '(int' → logprob: -7.9112229347229

Token 263: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0028166472911834717
    2. ')' → logprob: -6.502816677093506
    3. '())' → logprob: -7.377816677093506
    4. 'tuple' → logprob: -8.002816200256348
    5. 'range' → logprob: -9.252816200256348
    6. '[]' → logprob: -10.002816200256348
    7. ')][' → logprob: -10.127816200256348
    8. '()' → logprob: -10.252816200256348
    9. '))' → logprob: -10.502816200256348
    10. ' )' → logprob: -10.752816200256348

Token 264: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' why' (ID: 4436)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' not' (ID: 625)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: '?' (ID: 30)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' list' (ID: 1562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' comp' (ID: 1050)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' print' (ID: 2123)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8093479871749878
    2. 'main' → logprob: -0.8093479871749878
    3. '[]' → logprob: -3.1843481063842773
    4. 'None' → logprob: -3.5593481063842773
    5. '[' → logprob: -4.184348106384277
    6. 'print' → logprob: -5.309348106384277
    7. ')' → logprob: -5.559348106384277
    8. '()' → logprob: -5.684348106384277
    9. 'ans' → logprob: -6.434348106384277
    10. '0' → logprob: -6.434348106384277

Token 274: '!

' (ID: 1703)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 216
Précision stricte (1ère position): 44.53%
Précision adaptée (1ère position): 46.35%
Précision (top 10): 78.83%
================================================================================
