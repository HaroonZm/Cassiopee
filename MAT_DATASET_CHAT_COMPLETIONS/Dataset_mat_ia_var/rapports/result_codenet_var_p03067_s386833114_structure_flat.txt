================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B,C=map(int,input().split())
if A>B:
    tmp=A
    A=B
    B=tmp
i=A
f=0
while i<B:
    if C==i:
        f=1
        break
    i+=1
if f==1:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: ',C' (ID: 26924)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13304370641708374
    2. ',D' → logprob: -2.1330437660217285
    3. 'D' → logprob: -6.6330437660217285
    4. ';' → logprob: -6.6330437660217285
    5. '```' → logprob: -6.7580437660217285
    6. '<|end|>' → logprob: -6.7580437660217285
    7. '.' → logprob: -7.6330437660217285
    8. ')' → logprob: -8.63304328918457
    9. '=' → logprob: -8.75804328918457
    10. ':' → logprob: -9.38304328918457

Token 4: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18040363490581512
    2. '1' → logprob: -1.9304035902023315
    3. ' ' → logprob: -4.555403709411621
    4. '[' → logprob: -5.555403709411621
    5. '[]' → logprob: -5.680403709411621
    6. '(' → logprob: -6.930403709411621
    7. 'map' → logprob: -8.055403709411621
    8. '10' → logprob: -8.055403709411621
    9. ' [' → logprob: -9.055403709411621
    10. ' []' → logprob: -9.055403709411621

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021912384778261185
    2. '<|end|>' → logprob: -3.8969123363494873
    3. '(lambda' → logprob: -7.896912574768066
    4. '```' → logprob: -8.271912574768066
    5. ')' → logprob: -8.646912574768066
    6. '<|end|>' → logprob: -9.271912574768066
    7. ' (' → logprob: -9.521912574768066
    8. '(user' → logprob: -9.646912574768066
    9. '(
' → logprob: -10.146912574768066
    10. 'user' → logprob: -10.396912574768066

Token 6: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5746751427650452
    2. '(input' → logprob: -1.0746750831604004
    3. '(' → logprob: -2.9496750831604004
    4. '<|end|>' → logprob: -3.5746750831604004
    5. '(user' → logprob: -6.0746750831604
    6. '<|end|>' → logprob: -6.3246750831604
    7. '(token' → logprob: -6.8246750831604
    8. '(raw' → logprob: -6.9496750831604
    9. ')(' → logprob: -7.0746750831604
    10. '(data' → logprob: -7.3246750831604

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7673428654670715
    2. '())' → logprob: -0.8923428654670715
    3. ')' → logprob: -3.2673428058624268
    4. '()' → logprob: -3.5173428058624268
    5. '(()' → logprob: -3.8923428058624268
    6. '<|end|>' → logprob: -4.892343044281006
    7. '());' → logprob: -6.017343044281006
    8. '(""))' → logprob: -6.017343044281006
    9. '().' → logprob: -6.267343044281006
    10. '('' → logprob: -6.517343044281006

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007643607095815241
    2. ')' → logprob: -7.3757643699646
    3. 'strip' → logprob: -9.125763893127441
    4. '(split' → logprob: -11.250763893127441
    5. ' split' → logprob: -11.625763893127441
    6. 'rstrip' → logprob: -12.500763893127441
    7. 'spl' → logprob: -13.875763893127441
    8. '())' → logprob: -14.250763893127441
    9. '()' → logprob: -14.750763893127441
    10. '_split' → logprob: -15.625763893127441

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.184096559882164
    2. '())' → logprob: -1.8090965747833252
    3. '`)' → logprob: -6.309096336364746
    4. '))' → logprob: -6.559096336364746
    5. '()' → logprob: -7.059096336364746
    6. '()))' → logprob: -9.684096336364746
    7. '(' → logprob: -9.934096336364746
    8. ')`' → logprob: -10.559096336364746
    9. '')' → logprob: -10.559096336364746
    10. '```' → logprob: -11.434096336364746

Token 10: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9852743148803711
    2. 'd' → logprob: -1.360274314880371
    3. '+' → logprob: -2.110274314880371
    4. 'a' → logprob: -2.860274314880371
    5. '#' → logprob: -2.985274314880371
    6. '*' → logprob: -3.360274314880371
    7. 'D' → logprob: -3.610274314880371
    8. 'x' → logprob: -3.735274314880371
    9. '
' → logprob: -4.485274314880371
    10. 'i' → logprob: -4.735274314880371

Token 11: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0665438175201416
    2. ' ' → logprob: -3.0665438175201416
    3. 'A' → logprob: -4.0665435791015625
    4. ' a' → logprob: -8.566543579101562
    5. ' B' → logprob: -9.066543579101562
    6. ' (' → logprob: -9.316543579101562
    7. '  ' → logprob: -9.691543579101562
    8. ' ' → logprob: -10.441543579101562
    9. '(A' → logprob: -10.816543579101562
    10. 'B' → logprob: -10.816543579101562

Token 12: '>B' (ID: 125026)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16611775755882263
    2. ' ==' → logprob: -3.0411176681518555
    3. '>' → logprob: -3.1661176681518555
    4. ' <' → logprob: -3.9161176681518555
    5. ' ' → logprob: -4.2911176681518555
    6. ' >=' → logprob: -4.5411176681518555
    7. '==' → logprob: -4.9161176681518555
    8. '<' → logprob: -5.2911176681518555
    9. ' <=' → logprob: -5.7911176681518555
    10. '  ' → logprob: -7.0411176681518555

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019173922191839665
    2. ' :' → logprob: -8.625191688537598
    3. ':**' → logprob: -11.750191688537598
    4. '>' → logprob: -14.000191688537598
    5. '>:' → logprob: -14.000191688537598
    6. '':' → logprob: -14.750191688537598
    7. ' and' → logprob: -14.750191688537598
    8. ':
' → logprob: -14.750191688537598
    9. '):' → logprob: -14.875191688537598
    10. '':'' → logprob: -15.125191688537598

Token 14: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8641993403434753
    2. '\n' → logprob: -1.2391993999481201
    3. '   ' → logprob: -1.9891993999481201
    4. 'print' → logprob: -2.86419939994812
    5. '    ' → logprob: -2.98919939994812
    6. ' ' → logprob: -4.489199161529541
    7. ' 
' → logprob: -4.739199161529541
    8. ':' → logprob: -4.739199161529541
    9. '    
' → logprob: -5.489199161529541
    10. ' ' → logprob: -5.614199161529541

Token 15: ' tmp' (ID: 8919)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6070380210876465
    2. 'print' → logprob: -0.8570380210876465
    3. '   ' → logprob: -4.8570380210876465
    4. ' if' → logprob: -4.8570380210876465
    5. ' C' → logprob: -5.2320380210876465
    6. ' ' → logprob: -6.1070380210876465
    7. ' B' → logprob: -6.2320380210876465
    8. 'if' → logprob: -6.3570380210876465
    9. '    ' → logprob: -6.9820380210876465
    10. ' `' → logprob: -7.2320380210876465

Token 16: '=A' (ID: 112591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47422072291374207
    2. '=' → logprob: -0.9742207527160645
    3. ' ' → logprob: -9.349220275878906
    4. ',' → logprob: -10.474220275878906
    5. '    ' → logprob: -12.099220275878906
    6. ')' → logprob: -12.974220275878906
    7. '=A' → logprob: -13.099220275878906
    8. ' +=' → logprob: -13.474220275878906
    9. '>' → logprob: -13.599220275878906
    10. '_' → logprob: -13.599220275878906

Token 17: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5709390640258789
    2. 'else' → logprob: -1.695939064025879
    3. ' =' → logprob: -2.570939064025879
    4. '<|end|>' → logprob: -2.945939064025879
    5. ' else' → logprob: -3.195939064025879
    6. 'elif' → logprob: -3.945939064025879
    7. '
' → logprob: -4.695939064025879
    8. ' ' → logprob: -4.695939064025879
    9. '=A' → logprob: -5.320939064025879
    10. '    ' → logprob: -5.320939064025879

Token 18: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.3495212495326996
    2. ' A' → logprob: -1.724521279335022
    3. '   ' → logprob: -3.3495211601257324
    4. '<|end|>' → logprob: -3.3495211601257324
    5. ' ' → logprob: -4.099521160125732
    6. ' 
' → logprob: -4.724521160125732
    7. '\n' → logprob: -5.599521160125732
    8. '    ' → logprob: -6.099521160125732
    9. '    
' → logprob: -6.224521160125732
    10. '<|end|>' → logprob: -6.474521160125732

Token 20: '=B' (ID: 139140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08963392674922943
    2. ' =' → logprob: -2.4646339416503906
    3. ',' → logprob: -7.589633941650391
    4. '>' → logprob: -9.33963394165039
    5. '=A' → logprob: -10.21463394165039
    6. '<|end|>' → logprob: -10.96463394165039
    7. ' >' → logprob: -11.33963394165039
    8. ')' → logprob: -11.83963394165039
    9. ' -=' → logprob: -11.96463394165039
    10. ' ' → logprob: -12.08963394165039

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2298453152179718
    2. '\n' → logprob: -2.2298452854156494
    3. '<|end|>' → logprob: -2.4798452854156494
    4. ' 
' → logprob: -5.4798455238342285
    5. '  
' → logprob: -5.6048455238342285
    6. '```' → logprob: -6.1048455238342285
    7. '
' → logprob: -6.6048455238342285
    8. '    
' → logprob: -6.7298455238342285
    9. '<|end|>' → logprob: -7.9798455238342285
    10. '   ' → logprob: -8.35484504699707

Token 22: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' B' (ID: 418)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.5230468511581421
    2. 'C' → logprob: -1.648046851158142
    3. 'B' (adapté à ' B') → logprob: -2.1480469703674316
    4. '<|end|>' → logprob: -2.3980469703674316
    5. ' tmp' → logprob: -5.773046970367432
    6. ' ' → logprob: -7.398046970367432
    7. 'A' → logprob: -7.398046970367432
    8. '[tmp' → logprob: -7.648046970367432
    9. '	tmp' → logprob: -7.773046970367432
    10. '/tmp' → logprob: -7.898046970367432

Token 24: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1088382825255394
    2. ' =' → logprob: -2.4838383197784424
    3. ',' → logprob: -4.108838081359863
    4. '<|end|>' → logprob: -5.858838081359863
    5. ' ' → logprob: -8.608838081359863
    6. '>' → logprob: -9.983838081359863
    7. '<|end|>' → logprob: -10.233838081359863
    8. '=A' → logprob: -10.483838081359863
    9. '   ' → logprob: -10.983838081359863
    10. '```' → logprob: -11.108838081359863

Token 25: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00016027313540689647
    2. ' tmp' → logprob: -8.750160217285156
    3. '	tmp' → logprob: -13.875160217285156
    4. '/tmp' → logprob: -14.375160217285156
    5. '$tmp' → logprob: -15.625160217285156
    6. '   ' → logprob: -16.875160217285156
    7. '(tmp' → logprob: -17.625160217285156
    8. '_tmp' → logprob: -17.750160217285156
    9. '[tmp' → logprob: -17.875160217285156
    10. '```' → logprob: -18.250160217285156

Token 26: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2595475912094116
    2. '```' → logprob: -2.134547710418701
    3. 'elif' → logprob: -2.759547710418701
    4. ' 
' → logprob: -4.009547710418701
    5. '<|end|>' → logprob: -5.134547710418701
    6. '  
' → logprob: -5.134547710418701
    7. '\' → logprob: -5.259547710418701
    8. '
' → logprob: -6.509547710418701
    9. ' elif' → logprob: -6.634547710418701
    10. '    
' → logprob: -6.759547710418701

Token 27: 'i' (ID: 72)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3989735543727875
    2. '<|end|>' → logprob: -2.0239734649658203
    3. '```' → logprob: -2.6489734649658203
    4. '\n' → logprob: -3.1489734649658203
    5. ' 
' → logprob: -3.6489734649658203
    6. '  
' → logprob: -3.7739734649658203
    7. 'elif' → logprob: -4.14897346496582
    8. 'newline' → logprob: -4.77397346496582
    9. '    
' → logprob: -5.89897346496582
    10. 'if' → logprob: -6.64897346496582

Token 28: '=A' (ID: 112591)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5928495486150496e-05
    2. 'n' → logprob: -11.625016212463379
    3. '<f' → logprob: -13.000016212463379
    4. ' f' → logprob: -13.250016212463379
    5. '```' → logprob: -13.875016212463379
    6. 'nd' → logprob: -15.000016212463379
    7. '>' → logprob: -15.125016212463379
    8. '	f' → logprob: -15.750016212463379
    9. '+' → logprob: -15.750016212463379
    10. '<' → logprob: -15.875016212463379

Token 29: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24342307448387146
    2. 'f' → logprob: -1.6184231042861938
    3. ' ' → logprob: -5.243422985076904
    4. '<|end|>' → logprob: -5.368422985076904
    5. 'if' → logprob: -6.743422985076904
    6. ' +' → logprob: -6.993422985076904
    7. ' f' → logprob: -7.118422985076904
    8. '>' → logprob: -7.618422985076904
    9. '+C' → logprob: -7.743422985076904
    10. '```' → logprob: -7.743422985076904

Token 30: 'f' (ID: 69)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0621478334069252
    2. 'f' → logprob: -3.562147855758667
    3. '<|end|>' → logprob: -4.062147617340088
    4. '=' → logprob: -4.812147617340088
    5. '>' → logprob: -6.187147617340088
    6. '```' → logprob: -6.812147617340088
    7. ' +' → logprob: -7.312147617340088
    8. ' ' → logprob: -7.437147617340088
    9. '+=' → logprob: -8.187148094177246
    10. '<' → logprob: -8.562148094177246

Token 31: '=' (ID: 28)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.812538743019104
    2. 'or' → logprob: -0.812538743019104
    3. 'i' → logprob: -2.1875386238098145
    4. 'f' → logprob: -9.437539100646973
    5. '```' → logprob: -9.437539100646973
    6. ' or' → logprob: -9.562539100646973
    7. '#' → logprob: -10.937539100646973
    8. 'ilter' → logprob: -11.187539100646973
    9. 'r' → logprob: -11.687539100646973
    10. 'range' → logprob: -11.687539100646973

Token 32: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023238400171976537
    2. ' B' → logprob: -9.375232696533203
    3. 'i' → logprob: -10.000232696533203
    4. 'C' → logprob: -10.000232696533203
    5. 'b' → logprob: -10.625232696533203
    6. 'A' → logprob: -11.625232696533203
    7. '1' → logprob: -11.875232696533203
    8. '100' → logprob: -12.875232696533203
    9. '0' → logprob: -13.000232696533203
    10. '>B' → logprob: -13.375232696533203

Token 33: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9494146704673767
    2. 'while' → logprob: -1.5744147300720215
    3. ' while' → logprob: -1.8244147300720215
    4. '<|end|>' → logprob: -2.4494147300720215
    5. 'or' → logprob: -3.3244147300720215
    6. '<' → logprob: -3.6994147300720215
    7. '>' → logprob: -3.9494147300720215
    8. ',' → logprob: -4.3244147300720215
    9. '=' → logprob: -4.4494147300720215
    10. ' ' → logprob: -4.4494147300720215

Token 34: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.145663857460022
    2. 'while' → logprob: -1.270663857460022
    3. 'or' → logprob: -1.520663857460022
    4. ' while' → logprob: -2.8956637382507324
    5. '<|end|>' → logprob: -2.8956637382507324
    6. 'i' → logprob: -4.145663738250732
    7. 'if' → logprob: -5.020663738250732
    8. '+' → logprob: -5.145663738250732
    9. 'o' → logprob: -5.270663738250732
    10. ')' → logprob: -5.520663738250732

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04895760118961334
    2. 'i' → logprob: -3.048957586288452
    3. ' f' → logprob: -9.048957824707031
    4. ' ' → logprob: -9.548957824707031
    5. ' A' → logprob: -9.798957824707031
    6. ' B' → logprob: -10.048957824707031
    7. 'f' → logprob: -10.173957824707031
    8. 'A' → logprob: -11.548957824707031
    9. '(i' → logprob: -11.673957824707031
    10. 'B' → logprob: -11.798957824707031

Token 36: '<B' (ID: 57949)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.018542146310210228
    2. ' <=' → logprob: -4.018542289733887
    3. '<' → logprob: -7.893542289733887
    4. ' <' → logprob: -12.018542289733887
    5. '<B' → logprob: -12.518542289733887
    6. ')<=' → logprob: -13.518542289733887
    7. '*' → logprob: -13.643542289733887
    8. '=<' → logprob: -13.768542289733887
    9. '+' → logprob: -14.143542289733887
    10. ' ' → logprob: -14.393542289733887

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019481956958770752
    2. '+' → logprob: -4.144482135772705
    3. '+:' → logprob: -6.269482135772705
    4. ':
' → logprob: -6.519482135772705
    5. ' :' → logprob: -10.644481658935547
    6. '+i' → logprob: -12.144481658935547
    7. ':**' → logprob: -12.394481658935547
    8. '>' → logprob: -12.394481658935547
    9. ' and' → logprob: -12.519481658935547
    10. '```' → logprob: -12.519481658935547

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03177564591169357
    2. '<|end|>' → logprob: -4.03177547454834
    3. '+' → logprob: -5.53177547454834
    4. '
' → logprob: -5.78177547454834
    5. ' ' → logprob: -6.65677547454834
    6. '    ' → logprob: -7.03177547454834
    7. '    
' → logprob: -7.40677547454834
    8. 'i' → logprob: -7.65677547454834
    9. '<|end|>' → logprob: -7.78177547454834
    10. ':' → logprob: -7.78177547454834

Token 39: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.690632700920105
    2. 'if' (adapté à ' if') → logprob: -1.565632700920105
    3. 'i' → logprob: -2.0656328201293945
    4. ' if' → logprob: -2.4406328201293945
    5. ' i' → logprob: -2.6906328201293945
    6. 'f' → logprob: -6.1906328201293945
    7. ' ' → logprob: -6.4406328201293945
    8. '+' → logprob: -6.4406328201293945
    9. ' f' → logprob: -6.9406328201293945
    10. '<|end|>' → logprob: -7.3156328201293945

Token 40: ' C' (ID: 363)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6747676134109497
    2. ' B' → logprob: -1.1747676134109497
    3. 'i' → logprob: -2.04976749420166
    4. 'B' → logprob: -3.54976749420166
    5. ' A' → logprob: -4.17476749420166
    6. ' C' → logprob: -5.54976749420166
    7. 'A' → logprob: -6.29976749420166
    8. ' ' → logprob: -6.54976749420166
    9. 'C' → logprob: -7.29976749420166
    10. ' f' → logprob: -8.17476749420166

Token 41: '==' (ID: 560)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.18392589688301086
    2. '%i' → logprob: -2.3089258670806885
    3. ' %' → logprob: -3.5589258670806885
    4. '>' → logprob: -4.183926105499268
    5. '%A' → logprob: -4.433926105499268
    6. '<=' → logprob: -5.433926105499268
    7. '==' → logprob: -5.433926105499268
    8. '%B' → logprob: -6.433926105499268
    9. '>=' → logprob: -6.558926105499268
    10. ' >' → logprob: -8.30892562866211

Token 42: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029188895598053932
    2. 'A' → logprob: -3.654188871383667
    3. '0' → logprob: -6.029189109802246
    4. ' i' → logprob: -8.654189109802246
    5. 'B' → logprob: -9.529189109802246
    6. 'f' → logprob: -9.529189109802246
    7. '1' → logprob: -10.029189109802246
    8. ' A' → logprob: -10.154189109802246
    9. 'C' → logprob: -10.279189109802246
    10. ' ' → logprob: -10.779189109802246

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009041732177138329
    2. ' or' → logprob: -5.134041786193848
    3. ':
' → logprob: -6.384041786193848
    4. '+' → logprob: -7.384041786193848
    5. ' and' → logprob: -7.634041786193848
    6. '   ' → logprob: -9.384041786193848
    7. '):' → logprob: -10.134041786193848
    8. ' :' → logprob: -10.384041786193848
    9. 'and' → logprob: -10.509041786193848
    10. '+:' → logprob: -10.634041786193848

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017461484298110008
    2. ':' → logprob: -4.76746129989624
    3. '   ' → logprob: -5.39246129989624
    4. ':
' → logprob: -6.39246129989624
    5. '    ' → logprob: -7.39246129989624
    6. '+' → logprob: -7.51746129989624
    7. ' f' → logprob: -8.392461776733398
    8. ' break' → logprob: -9.017461776733398
    9. '      ' → logprob: -9.017461776733398
    10. ' ' → logprob: -9.142461776733398

Token 45: ' f' (ID: 285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2453739643096924
    2. 'break' → logprob: -1.3703739643096924
    3. ' break' → logprob: -1.8703739643096924
    4. '       ' → logprob: -2.2453739643096924
    5. 'f' (adapté à ' f') → logprob: -2.2453739643096924
    6. ' f' → logprob: -3.1203739643096924
    7. 'print' → logprob: -3.6203739643096924
    8. '
' → logprob: -5.120373725891113
    9. '    ' → logprob: -5.620373725891113
    10. 'i' → logprob: -5.995373725891113

Token 46: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014181245118379593
    2. '+=' → logprob: -4.264181137084961
    3. '=True' → logprob: -11.514181137084961
    4. '=f' → logprob: -12.264181137084961
    5. '+' → logprob: -14.514181137084961
    6. '-=' → logprob: -14.639181137084961
    7. ' +=' → logprob: -14.639181137084961
    8. ' =' → logprob: -14.639181137084961
    9. '=i' → logprob: -14.764181137084961
    10. '=int' → logprob: -15.389181137084961

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016718693950679153
    2. '0' → logprob: -9.500166893005371
    3. 'True' → logprob: -9.500166893005371
    4. ' ' → logprob: -11.875166893005371
    5. 'i' → logprob: -12.500166893005371
    6. '-' → logprob: -13.125166893005371
    7. '2' → logprob: -13.625166893005371
    8. 'C' → logprob: -14.250166893005371
    9. 'f' → logprob: -14.500166893005371
    10. ' True' → logprob: -14.875166893005371

Token 48: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0342010073363781
    2. '   ' → logprob: -3.40920090675354
    3. '<|end|>' → logprob: -8.284200668334961
    4. '\n' → logprob: -9.784200668334961
    5. '```' → logprob: -9.909200668334961
    6. '           ' → logprob: -10.159200668334961
    7. '    ' → logprob: -10.784200668334961
    8. '
' → logprob: -11.034200668334961
    9. '      ' → logprob: -11.034200668334961
    10. '     ' → logprob: -11.159200668334961

Token 49: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5137316584587097
    2. '       ' → logprob: -1.0137317180633545
    3. '
' → logprob: -4.013731479644775
    4. '    ' → logprob: -5.013731479644775
    5. '<|end|>' → logprob: -5.763731479644775
    6. '```' → logprob: -6.513731479644775
    7. 'i' → logprob: -6.763731479644775
    8. '    
' → logprob: -7.013731479644775
    9. '           ' → logprob: -7.013731479644775
    10. ' ' → logprob: -7.138731479644775

Token 50: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08461648225784302
    2. ' break' → logprob: -2.9596164226531982
    3. '   ' → logprob: -3.7096164226531982
    4. '       ' → logprob: -5.834616661071777
    5. '```' → logprob: -6.834616661071777
    6. '	break' → logprob: -7.584616661071777
    7. 'b' → logprob: -8.459616661071777
    8. ' ' → logprob: -10.834616661071777
    9. '  ' → logprob: -11.084616661071777
    10. '    ' → logprob: -11.209616661071777

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018821436911821365
    2. 'i' → logprob: -4.8938212394714355
    3. '
' → logprob: -4.8938212394714355
    4. ' i' → logprob: -6.7688212394714355
    5. ' ' → logprob: -7.1438212394714355
    6. '  ' → logprob: -7.8938212394714355
    7. '    
' → logprob: -8.018821716308594
    8. '<|end|>' → logprob: -8.018821716308594
    9. '  
' → logprob: -8.893821716308594
    10. ' 
' → logprob: -9.143821716308594

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.636707603931427
    2. 'i' → logprob: -0.761707603931427
    3. ' i' → logprob: -5.886707782745361
    4. ' ' → logprob: -7.386707782745361
    5. '  ' → logprob: -8.011707305908203
    6. '	i' → logprob: -9.636707305908203
    7. '    
' → logprob: -9.761707305908203
    8. '
' → logprob: -9.761707305908203
    9. ' 
' → logprob: -10.011707305908203
    10. '+' → logprob: -10.386707305908203

Token 53: ' i' (ID: 575)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.562263548374176
    2. 'i' (adapté à ' i') → logprob: -1.3122634887695312
    3. '   ' → logprob: -2.1872634887695312
    4. ' 
' → logprob: -4.312263488769531
    5. ' i' → logprob: -4.312263488769531
    6. '\n' → logprob: -5.312263488769531
    7. '    
' → logprob: -5.687263488769531
    8. '+' → logprob: -5.812263488769531
    9. ' ' → logprob: -6.187263488769531
    10. '  
' → logprob: -6.312263488769531

Token 54: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.030697381123900414
    2. '+' → logprob: -3.5306973457336426
    3. '=' → logprob: -7.030697345733643
    4. ' +=' → logprob: -9.7806978225708
    5. '++' → logprob: -12.9056978225708
    6. '+='' → logprob: -13.2806978225708
    7. '+="' → logprob: -14.2806978225708
    8. ' ' → logprob: -16.155696868896484
    9. '+=(' → logprob: -16.155696868896484
    10. '```' → logprob: -16.155696868896484

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4656579120783135e-05
    2. 'A' → logprob: -10.875044822692871
    3. ' ' → logprob: -11.125044822692871
    4. '2' → logprob: -11.625044822692871
    5. '3' → logprob: -14.750044822692871
    6. ' A' → logprob: -15.125044822692871
    7. '+' → logprob: -15.750044822692871
    8. 'C' → logprob: -16.000043869018555
    9. '<|end|>' → logprob: -16.000043869018555
    10. '   ' → logprob: -16.312543869018555

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3179302215576172
    2. 'f' → logprob: -1.3179302215576172
    3. ' not' → logprob: -6.567930221557617
    4. ' B' → logprob: -6.942930221557617
    5. ' ' → logprob: -6.942930221557617
    6. 'B' → logprob: -7.692930221557617
    7. 'not' → logprob: -8.192930221557617
    8. ' C' → logprob: -8.692930221557617
    9. ' A' → logprob: -8.692930221557617
    10. 'A' → logprob: -9.317930221557617

Token 59: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019124502316117287
    2. ' ==' → logprob: -4.519124507904053
    3. ':' → logprob: -4.894124507904053
    4. '=' → logprob: -7.769124507904053
    5. '>' → logprob: -9.269124031066895
    6. '!=' → logprob: -11.644124031066895
    7. ' ' → logprob: -11.769124031066895
    8. '<|end|>' → logprob: -12.019124031066895
    9. '0' → logprob: -12.394124031066895
    10. '1' → logprob: -13.019124031066895

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1608298420906067
    2. '0' → logprob: -1.910829782485962
    3. ' ' → logprob: -7.410830020904541
    4. '   ' → logprob: -15.910829544067383
    5. '<|end|>' → logprob: -15.910829544067383
    6. '  ' → logprob: -16.348329544067383
    7. '2' → logprob: -16.723329544067383
    8. '=' → logprob: -17.098329544067383
    9. '```' → logprob: -17.160829544067383
    10. '-' → logprob: -17.223329544067383

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018411019118502736
    2. ':
' → logprob: -8.625184059143066
    3. '   ' → logprob: -12.750184059143066
    4. ' and' → logprob: -15.500184059143066
    5. '>' → logprob: -15.500184059143066
    6. ' :' → logprob: -15.625184059143066
    7. ':return' → logprob: -15.750184059143066
    8. '=' → logprob: -15.875184059143066
    9. 'print' → logprob: -16.000185012817383
    10. '.' → logprob: -16.000185012817383

Token 62: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06461194157600403
    2. ' print' → logprob: -2.8146119117736816
    3. '   ' → logprob: -6.189611911773682
    4. '"' → logprob: -8.56461238861084
    5. '    ' → logprob: -9.43961238861084
    6. ' True' → logprob: -9.93961238861084
    7. 'True' → logprob: -10.06461238861084
    8. ' ' → logprob: -10.68961238861084
    9. ''' → logprob: -10.81461238861084
    10. '       ' → logprob: -11.00211238861084

Token 63: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.045315902680158615
    2. 'Yes' → logprob: -3.170315980911255
    3. 'YES' → logprob: -6.545315742492676
    4. 'yes' → logprob: -7.795315742492676
    5. 'True' → logprob: -9.170315742492676
    6. ' print' → logprob: -9.420315742492676
    7. 'Print' → logprob: -9.545315742492676
    8. ' Yes' → logprob: -10.045315742492676
    9. 'No' → logprob: -10.170315742492676
    10. 'break' → logprob: -11.045315742492676

Token 64: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39430001378059387
    2. '("' → logprob: -1.1442999839782715
    3. '(True' → logprob: -5.6442999839782715
    4. '(C' → logprob: -5.8942999839782715
    5. '('' → logprob: -7.8942999839782715
    6. '("("' → logprob: -8.14430046081543
    7. '(B' → logprob: -8.76930046081543
    8. '()' → logprob: -9.76930046081543
    9. '"' → logprob: -9.89430046081543
    10. '(i' → logprob: -10.01930046081543

Token 65: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.04428243264555931
    2. 'No' → logprob: -4.04428243637085
    3. 'YES' → logprob: -4.29428243637085
    4. 'NO' → logprob: -4.91928243637085
    5. 'OK' → logprob: -7.04428243637085
    6. 'in' → logprob: -7.04428243637085
    7. 'yes' → logprob: -7.66928243637085
    8. 'NG' → logprob: -7.79428243637085
    9. '"' → logprob: -8.419281959533691
    10. 'Inside' → logprob: -8.544281959533691

Token 66: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.23670922219753265
    2. '")
' → logprob: -1.6117092370986938
    3. 'else' → logprob: -4.736709117889404
    4. '")
' → logprob: -6.236709117889404
    5. ')' → logprob: -7.861709117889404
    6. ')
' → logprob: -9.486709594726562
    7. '")

' → logprob: -11.611709594726562
    8. '"' → logprob: -12.111709594726562
    9. '!")' → logprob: -12.486709594726562
    10. 'elif' → logprob: -12.736709594726562

Token 67: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.4974866644479334e-05
    2. 'elif' → logprob: -11.750015258789062
    3. ' else' → logprob: -12.125015258789062
    4. '```' → logprob: -13.375015258789062
    5. 'print' → logprob: -17.500015258789062
    6. '   ' → logprob: -17.875015258789062
    7. '<|end|>' → logprob: -17.875015258789062
    8. 'e' → logprob: -18.625015258789062
    9. '#else' → logprob: -18.625015258789062
    10. '``' → logprob: -18.750015258789062

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023630233481526375
    2. ':
' → logprob: -3.773630142211914
    3. '   ' → logprob: -7.898630142211914
    4. 'print' → logprob: -11.773630142211914
    5. ' print' → logprob: -13.523630142211914
    6. ' :' → logprob: -13.898630142211914
    7. ':

' → logprob: -14.148630142211914
    8. ' :
' → logprob: -14.148630142211914
    9. ':
' → logprob: -15.148630142211914
    10. '```' → logprob: -15.273630142211914

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.505914568901062
    2. 'print' → logprob: -1.130914568901062
    3. ' print' → logprob: -2.7559146881103516
    4. '"' → logprob: -4.630914688110352
    5. '\n' → logprob: -8.005914688110352
    6. '```' → logprob: -8.255914688110352
    7. '    ' → logprob: -9.130914688110352
    8. '"\' → logprob: -9.505914688110352
    9. '    
' → logprob: -10.130914688110352
    10. '	print' → logprob: -10.630914688110352

Token 70: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001612267515156418
    2. ' print' → logprob: -9.125161170959473
    3. '   ' → logprob: -9.875161170959473
    4. '"' → logprob: -15.000161170959473
    5. 'Print' → logprob: -15.875161170959473
    6. 'No' → logprob: -15.875161170959473
    7. '```' → logprob: -16.12516212463379
    8. '	print' → logprob: -17.00016212463379
    9. 'printf' → logprob: -17.12516212463379
    10. '.print' → logprob: -17.50016212463379

Token 71: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2520236670970917
    2. '(' → logprob: -1.502023696899414
    3. '("")' → logprob: -10.002023696899414
    4. '()' → logprob: -10.502023696899414
    5. '("("' → logprob: -11.127023696899414
    6. '('' → logprob: -12.502023696899414
    7. '("""' → logprob: -14.127023696899414
    8. '(""' → logprob: -14.252023696899414
    9. '(
' → logprob: -14.627023696899414
    10. '(False' → logprob: -15.627023696899414

Token 72: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.127333340875339e-06
    2. '"No' → logprob: -12.500003814697266
    3. ' No' → logprob: -14.750003814697266
    4. '"' → logprob: -18.000003814697266
    5. 'NO' → logprob: -18.250003814697266
    6. '")' → logprob: -19.375003814697266
    7. 'N' → logprob: -20.375003814697266
    8. '_No' → logprob: -20.500003814697266
    9. '(No' → logprob: -20.750003814697266
    10. 'Yes' → logprob: -21.250003814697266

Token 73: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00016349162615370005
    2. ')' → logprob: -8.750163078308105
    3. ')")' → logprob: -12.250163078308105
    4. '")
' → logprob: -15.875163078308105
    5. '}")' → logprob: -17.375164031982422
    6. '')' → logprob: -18.125164031982422
    7. '```' → logprob: -18.875164031982422
    8. '"' → logprob: -19.000164031982422
    9. '!")' → logprob: -19.250164031982422
    10. '`)' → logprob: -19.375164031982422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 28
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 33.80%
Précision adaptée (1ère position): 39.44%
Précision (top 10): 78.87%
================================================================================
