================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict as DD
def main():
    N_K = input().split()
    N = int(N_K[0])
    K = int(N_K[1])
    A = [int(x) for x in input().split()]

    # Somewhat peculiar accumulation
    P = [sum(A[:i]) for i in range(len(A)+1)]

    bag = DD(int)

    answer = 0
    idx = 0
    while idx < len(P):
        weird = (P[idx] - idx) % K
        answer += bag[weird]
        bag[weird] += 1

        # Oddly explicit adjustment
        rollback = idx - K + 1
        if rollback >= 0:
            key_del = (P[rollback] - rollback) % K
            bag[key_del] -= 1
        idx += 1
    return answer

if __name__ == '__main__':
    res = main()
    # Eccentric printing style
    [print(res)]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007800268009305
    2. '(
' → logprob: -5.382800102233887
    3. '\n' → logprob: -7.007800102233887
    4. '\' → logprob: -7.382800102233887
    5. '```' → logprob: -7.507800102233887
    6. '\(' → logprob: -7.632800102233887
    7. '
' → logprob: -9.257800102233887
    8. '`' → logprob: -9.507800102233887
    9. 'newline' → logprob: -9.757800102233887
    10. '()' → logprob: -9.882800102233887

Token 5: ' DD' (ID: 52933)
  Prédit: ' dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dd' → logprob: -0.4510282576084137
    2. 'dd' → logprob: -1.2010282278060913
    3. '_dd' → logprob: -2.826028347015381
    4. 'default' → logprob: -7.076028347015381
    5. ' defaultdict' → logprob: -7.076028347015381
    6. 'DD' → logprob: -7.951028347015381
    7. 'd' → logprob: -8.951027870178223
    8. 'dict' → logprob: -8.951027870178223
    9. 'ddd' → logprob: -9.201027870178223
    10. '-dd' → logprob: -9.826027870178223

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01637626625597477
    2. '.' → logprob: -4.266376495361328
    3. '(
' → logprob: -6.766376495361328
    4. ',' → logprob: -8.266376495361328
    5. ' (' → logprob: -8.266376495361328
    6. '[' → logprob: -8.766376495361328
    7. '\(' → logprob: -8.891376495361328
    8. '\' → logprob: -10.391376495361328
    9. 'newline' → logprob: -10.391376495361328
    10. '```' → logprob: -10.641376495361328

Token 7: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04513680189847946
    2. '(
' → logprob: -3.2951366901397705
    3. '.' → logprob: -6.04513692855835
    4. '()' → logprob: -6.17013692855835
    5. ',' → logprob: -7.67013692855835
    6. '\' → logprob: -8.045136451721191
    7. '
' → logprob: -8.295136451721191
    8. '(

' → logprob: -8.295136451721191
    9. 'newline' → logprob: -8.295136451721191
    10. '```' → logprob: -8.545136451721191

Token 8: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0050958301872015
    2. '_' → logprob: -6.005095958709717
    3. ' _' → logprob: -7.880095958709717
    4. ' ' → logprob: -7.880095958709717
    5. ' func' → logprob: -7.880095958709717
    6. '_space' → logprob: -8.380095481872559
    7. ' space' → logprob: -8.505095481872559
    8. '_function' → logprob: -9.130095481872559
    9. ' defaultdict' → logprob: -9.380095481872559
    10. ' f' → logprob: -9.505095481872559

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029173342045396566
    2. '(:' → logprob: -6.752917289733887
    3. '():' → logprob: -7.127917289733887
    4. ':' → logprob: -7.752917289733887
    5. '_' → logprob: -8.877917289733887
    6. ' (' → logprob: -9.252917289733887
    7. '```' → logprob: -9.252917289733887
    8. '(
' → logprob: -9.377917289733887
    9. '(":' → logprob: -11.627917289733887
    10. '(`' → logprob: -11.752917289733887

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23468469083309174
    2. ' ' → logprob: -2.359684705734253
    3. '(' → logprob: -2.859684705734253
    4. '    ' → logprob: -3.484684705734253
    5. '    
' → logprob: -5.234684467315674
    6. 'a' → logprob: -5.234684467315674
    7. '\' → logprob: -5.234684467315674
    8. '[' → logprob: -5.609684467315674
    9. '  ' → logprob: -6.984684467315674
    10. ' 
' → logprob: -7.109684467315674

Token 11: ' N' (ID: 478)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.672935962677002
    2. 'data' → logprob: -1.172935962677002
    3. '   ' → logprob: -3.047935962677002
    4. 'result' → logprob: -3.297935962677002
    5. 'counter' → logprob: -3.672935962677002
    6. 'a' → logprob: -3.922935962677002
    7. ' ' → logprob: -5.047935962677002
    8. ' d' → logprob: -5.047935962677002
    9. 'n' → logprob: -5.172935962677002
    10. ' data' → logprob: -5.297935962677002

Token 12: '_K' (ID: 20555)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20436640083789825
    2. '=' → logprob: -1.8293664455413818
    3. ' ' → logprob: -4.079366207122803
    4. ',' → logprob: -5.329366207122803
    5. '  ' → logprob: -7.204366207122803
    6. ')' → logprob: -7.329366207122803
    7. ' ,' → logprob: -7.829366207122803
    8. '   ' → logprob: -8.954366683959961
    9. '_' → logprob: -9.204366683959961
    10. ' )' → logprob: -9.454366683959961

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1665073186159134
    2. '=' → logprob: -1.916507363319397
    3. '_' → logprob: -5.291507244110107
    4. ' ' → logprob: -6.916507244110107
    5. ' _' → logprob: -10.041507720947266
    6. '[' → logprob: -10.041507720947266
    7. ')' → logprob: -10.541507720947266
    8. ',' → logprob: -10.666507720947266
    9. '  ' → logprob: -10.791507720947266
    10. '_space' → logprob: -10.791507720947266

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6027426719665527
    2. 'input' → logprob: -0.9777426719665527
    3. ' list' → logprob: -3.3527426719665527
    4. 'list' → logprob: -4.227742671966553
    5. ' map' → logprob: -4.352742671966553
    6. 'map' → logprob: -5.352742671966553
    7. ' DD' → logprob: -5.352742671966553
    8. 'int' → logprob: -6.477742671966553
    9. ' int' → logprob: -6.727742671966553
    10. 'DD' → logprob: -7.352742671966553

Token 15: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003830714151263237
    2. '('' → logprob: -6.378830909729004
    3. '()' → logprob: -6.503830909729004
    4. '("("' → logprob: -8.253830909729004
    5. '(
' → logprob: -8.378830909729004
    6. '[' → logprob: -10.878830909729004
    7. '(

' → logprob: -11.003830909729004
    8. '("' → logprob: -11.128830909729004
    9. '.' → logprob: -11.378830909729004
    10. ' ' → logprob: -11.503830909729004

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004082197323441505
    2. 'strip' → logprob: -5.504082202911377
    3. 'rstrip' → logprob: -12.504081726074219
    4. 'spl' → logprob: -16.37908172607422
    5. ' split' → logprob: -17.25408172607422
    6. 's' → logprob: -18.00408172607422
    7. 'rs' → logprob: -18.12908172607422
    8. 'replace' → logprob: -18.50408172607422
    9. '(split' → logprob: -18.75408172607422
    10. 'sp' → logprob: -19.00408172607422

Token 17: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5061972737312317
    2. '('' → logprob: -1.006197214126587
    3. '("("' → logprob: -4.006197452545166
    4. '()' → logprob: -4.381197452545166
    5. '("' → logprob: -8.631196975708008
    6. '(
' → logprob: -8.756196975708008
    7. ''' → logprob: -8.756196975708008
    8. '"' → logprob: -9.256196975708008
    9. '(`' → logprob: -10.131196975708008
    10. ' (' → logprob: -10.131196975708008

Token 18: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021955886855721474
    2. '[N' → logprob: -4.646955966949463
    3. '[
' → logprob: -5.771955966949463
    4. '   ' → logprob: -5.896955966949463
    5. '[n' → logprob: -6.271955966949463
    6. ')' → logprob: -6.771955966949463
    7. '=' → logprob: -7.771955966949463
    8. ' ' → logprob: -8.021955490112305
    9. ' =' → logprob: -8.521955490112305
    10. '(' → logprob: -8.521955490112305

Token 19: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8165151476860046
    2. '[' → logprob: -1.5665152072906494
    3. 'N' (adapté à ' N') → logprob: -2.0665152072906494
    4. 'n' → logprob: -3.1915152072906494
    5. '   ' → logprob: -3.1915152072906494
    6. 'data' → logprob: -3.9415152072906494
    7. '_' → logprob: -4.06651496887207
    8. ' ' → logprob: -4.31651496887207
    9. ' n' → logprob: -4.81651496887207
    10. 'tokens' → logprob: -4.94151496887207

Token 20: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6687403917312622
    2. '_' → logprob: -0.7937403917312622
    3. '_K' → logprob: -4.168740272521973
    4. ' =' → logprob: -4.668740272521973
    5. ',K' → logprob: -5.918740272521973
    6. ',_' → logprob: -6.168740272521973
    7. '=' → logprob: -6.293740272521973
    8. '_,' → logprob: -6.293740272521973
    9. '[' → logprob: -7.793740272521973
    10. ')' → logprob: -8.043740272521973

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2812158763408661
    2. 'int' → logprob: -1.4062159061431885
    3. ' N' → logprob: -10.15621566772461
    4. ' ' → logprob: -11.53121566772461
    5. '[int' → logprob: -12.40621566772461
    6. '(int' → logprob: -12.65621566772461
    7. '=int' → logprob: -13.28121566772461
    8. 'N' → logprob: -13.28121566772461
    9. '   ' → logprob: -13.78121566772461
    10. '	int' → logprob: -14.53121566772461

Token 22: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741104245185852
    2. '(N' → logprob: -0.9741104245185852
    3. '('' → logprob: -10.97411060333252
    4. '(
' → logprob: -12.34911060333252
    5. '(

' → logprob: -12.34911060333252
    6. ' (' → logprob: -12.72411060333252
    7. '(K' → logprob: -13.47411060333252
    8. '("' → logprob: -13.84911060333252
    9. '(`' → logprob: -14.97411060333252
    10. '((' → logprob: -15.47411060333252

Token 23: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.012803574092686176
    2. '[' → logprob: -4.387803554534912
    3. ')' → logprob: -8.51280403137207
    4. '[K' → logprob: -9.88780403137207
    5. '[_' → logprob: -10.63780403137207
    6. 'K' → logprob: -12.88780403137207
    7. '_' → logprob: -12.88780403137207
    8. '```' → logprob: -13.01280403137207
    9. '(' → logprob: -13.13780403137207
    10. ' )' → logprob: -13.51280403137207

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.696889623621246e-06
    2. ' [' → logprob: -13.62500286102295
    3. ')' → logprob: -14.12500286102295
    4. '\[' → logprob: -15.12500286102295
    5. '[
' → logprob: -15.62500286102295
    6. '   ' → logprob: -16.250001907348633
    7. '0' → logprob: -16.375001907348633
    8. '```' → logprob: -17.500001907348633
    9. ')[' → logprob: -17.750001907348633
    10. '1' → logprob: -17.750001907348633

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003907543432433158
    2. ' ' → logprob: -7.875390529632568
    3. '1' → logprob: -11.500391006469727
    4. ')' → logprob: -16.500391006469727
    5. '[' → logprob: -16.500391006469727
    6. '   ' → logprob: -17.750391006469727
    7. '  ' → logprob: -17.750391006469727
    8. '])' → logprob: -17.812891006469727
    9. ' ' → logprob: -17.937891006469727
    10. ']' → logprob: -18.062891006469727

Token 26: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.01657068356871605
    2. ')' → logprob: -4.141570568084717
    3. ']' → logprob: -8.141571044921875
    4. ' ])' → logprob: -9.141571044921875
    5. '])
' → logprob: -9.266571044921875
    6. ')
' → logprob: -11.391571044921875
    7. ''])' → logprob: -11.891571044921875
    8. ')]' → logprob: -12.391571044921875
    9. '],' → logprob: -12.516571044921875
    10. ' )' → logprob: -12.516571044921875

Token 27: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2923182249069214
    2. '   ' → logprob: -1.5423182249069214
    3. ' ' → logprob: -1.6673182249069214
    4. '<|end|>' → logprob: -1.9173182249069214
    5. ')' → logprob: -2.292318344116211
    6. '    ' → logprob: -4.792318344116211
    7. '```' → logprob: -4.917318344116211
    8. '    
' → logprob: -4.917318344116211
    9. ''' → logprob: -5.167318344116211
    10. ' 
' → logprob: -5.292318344116211

Token 28: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.15485477447509766
    2. 'K' (adapté à ' K') → logprob: -2.0298547744750977
    3. '_' → logprob: -4.904854774475098
    4. ' ' → logprob: -5.404854774475098
    5. ' N' → logprob: -9.654854774475098
    6. '_K' → logprob: -10.154854774475098
    7. ' _' → logprob: -10.904854774475098
    8. 'k' → logprob: -11.279854774475098
    9. ')' → logprob: -11.279854774475098
    10. 'N' → logprob: -11.904854774475098

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029857974499464035
    2. '=' → logprob: -3.529857873916626
    3. '_' → logprob: -9.404857635498047
    4. ' ' → logprob: -11.029857635498047
    5. '=int' → logprob: -12.904857635498047
    6. ' _' → logprob: -13.279857635498047
    7. ')' → logprob: -13.404857635498047
    8. ',' → logprob: -13.779857635498047
    9. ' ' → logprob: -15.279857635498047
    10. '  ' → logprob: -15.404857635498047

Token 30: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141363143920898
    2. ' int' → logprob: -1.701413631439209
    3. '=int' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.451414108276367
    5. '[int' → logprob: -16.951414108276367
    6. '	int' → logprob: -17.201414108276367
    7. '(int' → logprob: -17.201414108276367
    8. ' ' → logprob: -18.076414108276367
    9. '0' → logprob: -18.076414108276367
    10. '<int' → logprob: -18.201414108276367

Token 31: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.05505853891372681
    2. '(' → logprob: -2.930058479309082
    3. '(K' → logprob: -8.805058479309082
    4. ' (' → logprob: -11.180058479309082
    5. '('' → logprob: -12.180058479309082
    6. '((' → logprob: -13.555058479309082
    7. '("("' → logprob: -14.055058479309082
    8. ' ' → logprob: -14.305058479309082
    9. '(
' → logprob: -14.430058479309082
    10. '(n' → logprob: -14.805058479309082

Token 32: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.25000286102295
    3. '```' → logprob: -15.37500286102295
    4. ')' → logprob: -15.62500286102295
    5. '[K' → logprob: -15.62500286102295
    6. 'K' → logprob: -15.87500286102295
    7. ')_' → logprob: -16.750003814697266
    8. ' _' → logprob: -16.875003814697266
    9. '-K' → logprob: -17.000003814697266
    10. '[_' → logprob: -17.000003814697266

Token 33: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.264322317088954e-05
    2. ' [' → logprob: -10.750052452087402
    3. '1' → logprob: -10.875052452087402
    4. '][' → logprob: -12.250052452087402
    5. '```' → logprob: -13.250052452087402
    6. ')' → logprob: -13.625052452087402
    7. '   ' → logprob: -13.625052452087402
    8. '2' → logprob: -14.375052452087402
    9. ' ' → logprob: -14.500052452087402
    10. ']' → logprob: -14.500052452087402

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.661626634420827e-05
    2. ' ' → logprob: -9.625086784362793
    3. '0' → logprob: -11.000086784362793
    4. '])' → logprob: -13.125086784362793
    5. '   ' → logprob: -14.500086784362793
    6. ']' → logprob: -14.750086784362793
    7. ')' → logprob: -15.750086784362793
    8. '```' → logprob: -15.750086784362793
    9. '2' → logprob: -16.000085830688477
    10. ' ])' → logprob: -16.375085830688477

Token 35: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. '])' → logprob: -11.500019073486328
    3. '))' → logprob: -13.125019073486328
    4. ')
' → logprob: -13.250019073486328
    5. '）' → logprob: -13.625019073486328
    6. ']' → logprob: -13.875019073486328
    7. ' )' → logprob: -14.125019073486328
    8. '`)' → logprob: -14.125019073486328
    9. '')' → logprob: -15.000019073486328
    10. ')])' → logprob: -15.500019073486328

Token 36: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20221729576587677
    2. ' 
' → logprob: -3.2022173404693604
    3. '    
' → logprob: -3.4522173404693604
    4. '   ' → logprob: -3.4522173404693604
    5. '\n' → logprob: -3.9522173404693604
    6. 'n' → logprob: -3.9522173404693604
    7. '' → logprob: -4.577217102050781
    8. '\' → logprob: -4.952217102050781
    9. 'd' → logprob: -5.452217102050781
    10. '```' → logprob: -5.827217102050781

Token 37: ' A' (ID: 355)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9268207550048828
    2. 'a' → logprob: -2.301820755004883
    3. 's' → logprob: -2.676820755004883
    4. 'n' → logprob: -2.801820755004883
    5. ' 
' → logprob: -3.051820755004883
    6. 'result' → logprob: -3.176820755004883
    7. ' a' → logprob: -3.551820755004883
    8. 'r' → logprob: -3.676820755004883
    9. ' result' → logprob: -3.801820755004883
    10. 'c' → logprob: -3.926820755004883

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033063970040529966
    2. '=' → logprob: -5.7533063888549805
    3. '[' → logprob: -9.75330638885498
    4. '_' → logprob: -10.12830638885498
    5. '.' → logprob: -10.75330638885498
    6. ' =[' → logprob: -13.00330638885498
    7. 's' → logprob: -13.75330638885498
    8. ' ' → logprob: -14.00330638885498
    9. '[]' → logprob: -14.25330638885498
    10. ')' → logprob: -14.25330638885498

Token 39: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.26254111528396606
    2. 'list' → logprob: -1.5125410556793213
    3. ' [' → logprob: -4.8875412940979
    4. '[' → logprob: -6.0125412940979
    5. '[list' → logprob: -8.387540817260742
    6. 'input' → logprob: -8.887540817260742
    7. ' input' → logprob: -8.887540817260742
    8. '[input' → logprob: -10.637540817260742
    9. ' []' → logprob: -11.012540817260742
    10. '[]' → logprob: -11.137540817260742

Token 40: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0025202499236911535
    2. ' int' → logprob: -6.0025200843811035
    3. '0' → logprob: -10.127520561218262
    4. ']int' → logprob: -13.752520561218262
    5. '*' → logprob: -14.127520561218262
    6. '(int' → logprob: -14.627520561218262
    7. '[int' → logprob: -14.627520561218262
    8. '<int' → logprob: -14.752520561218262
    9. '```' → logprob: -14.877520561218262
    10. ' ' → logprob: -15.127520561218262

Token 41: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008029362186789513
    2. '(x' → logprob: -5.133029460906982
    3. '(input' → logprob: -6.633029460906982
    4. '(i' → logprob: -7.633029460906982
    5. '(a' → logprob: -8.633028984069824
    6. '(
' → logprob: -9.633028984069824
    7. '(A' → logprob: -11.383028984069824
    8. '(

' → logprob: -11.383028984069824
    9. '()' → logprob: -12.133028984069824
    10. '('' → logprob: -12.258028984069824

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009605325758457184
    2. '(x' → logprob: -5.259605407714844
    3. '(input' → logprob: -6.259605407714844
    4. '(' → logprob: -6.634605407714844
    5. 'for' → logprob: -7.509605407714844
    6. '(i' → logprob: -8.134605407714844
    7. '())' → logprob: -9.759605407714844
    8. 'input' → logprob: -9.759605407714844
    9. ' )' → logprob: -10.009605407714844
    10. ')]' → logprob: -10.259605407714844

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1309649795293808
    2. 'for' → logprob: -2.255964994430542
    3. ')' → logprob: -4.130964756011963
    4. '<|end|>' → logprob: -7.255964756011963
    5. ' )' → logprob: -7.380964756011963
    6. '(x' → logprob: -8.505965232849121
    7. '(' → logprob: -9.380965232849121
    8. ' ' → logprob: -9.755965232849121
    9. ')]' → logprob: -10.005965232849121
    10. '<|end|>' → logprob: -10.005965232849121

Token 44: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.003104154020547867
    2. ' ' → logprob: -6.628104209899902
    3. 'input' → logprob: -6.628104209899902
    4. ' x' → logprob: -7.878104209899902
    5. ' range' → logprob: -10.503104209899902
    6. ' in' → logprob: -11.253104209899902
    7. '<|end|>' → logprob: -11.753104209899902
    8. '(input' → logprob: -11.878104209899902
    9. '<|end|>' → logprob: -13.003104209899902
    10. ' the' → logprob: -13.253104209899902

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014312644489109516
    2. 'in' → logprob: -4.264312744140625
    3. 'input' → logprob: -9.764312744140625
    4. ' ' → logprob: -10.889312744140625
    5. '(' → logprob: -11.014312744140625
    6. 'import' → logprob: -11.264312744140625
    7. '_' → logprob: -12.014312744140625
    8. '<|end|>' → logprob: -12.389312744140625
    9. '=input' → logprob: -12.389312744140625
    10. ' input' → logprob: -12.639312744140625

Token 46: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.34844812750816345
    2. 'input' → logprob: -1.2234481573104858
    3. ' ' → logprob: -13.348447799682617
    4. '(input' → logprob: -13.848447799682617
    5. '<input' → logprob: -15.598447799682617
    6. '=input' → logprob: -15.973447799682617
    7. '	input' → logprob: -16.223447799682617
    8. ' (' → logprob: -16.535947799682617
    9. ' in' → logprob: -17.035947799682617
    10. 'in' → logprob: -17.223447799682617

Token 47: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.17167240381240845
    2. '()' → logprob: -1.9216723442077637
    3. '().' → logprob: -4.546672344207764
    4. '(' → logprob: -7.921672344207764
    5. '())' → logprob: -8.046672821044922
    6. '()].' → logprob: -10.796672821044922
    7. '()],' → logprob: -11.296672821044922
    8. '()>' → logprob: -11.421672821044922
    9. '()][' → logprob: -11.671672821044922
    10. ']()' → logprob: -11.796672821044922

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.7994282795116305e-05
    2. 'strip' → logprob: -10.00004768371582
    3. ' split' → logprob: -13.62504768371582
    4. 'rstrip' → logprob: -13.62504768371582
    5. 'spl' → logprob: -16.37504768371582
    6. '(split' → logprob: -17.00004768371582
    7. 's' → logprob: -19.00004768371582
    8. ')' → logprob: -20.00004768371582
    9. '.split' → logprob: -20.37504768371582
    10. '_split' → logprob: -21.37504768371582

Token 49: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0002683688362594694
    2. '()' → logprob: -8.75026798248291
    3. '())' → logprob: -9.37526798248291
    4. '(' → logprob: -10.87526798248291
    5. ']' → logprob: -12.50026798248291
    6. ')]' → logprob: -13.37526798248291
    7. '()]
' → logprob: -14.87526798248291
    8. '()][' → logprob: -15.37526798248291
    9. '()],' → logprob: -16.250268936157227
    10. ']()' → logprob: -16.875268936157227

Token 50: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03934706747531891
    2. ')]' → logprob: -3.2893471717834473
    3. ' ]' → logprob: -7.164347171783447
    4. ')' → logprob: -7.664347171783447
    5. '])' → logprob: -10.164346694946289
    6. '])]' → logprob: -11.914346694946289
    7. '`]' → logprob: -12.289346694946289
    8. ' )' → logprob: -12.664346694946289
    9. ']
' → logprob: -12.789346694946289
    10. '()]' → logprob: -12.914346694946289

Token 51: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6698314547538757
    2. '
' → logprob: -0.7948314547538757
    3. '   ' → logprob: -4.294831275939941
    4. 'a' → logprob: -5.544831275939941
    5. '    
' → logprob: -5.919831275939941
    6. ' 
' → logprob: -6.044831275939941
    7. 'r' → logprob: -6.169831275939941
    8. 'n' → logprob: -6.419831275939941
    9. 'm' → logprob: -6.544831275939941
    10. ' d' → logprob: -6.794831275939941

Token 52: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.044389247894287
    2. 'dp' → logprob: -2.044389247894287
    3. 'count' → logprob: -2.044389247894287
    4. 'freq' → logprob: -2.294389247894287
    5. 'd' → logprob: -2.669389247894287
    6. 'counter' → logprob: -3.044389247894287
    7. 'counts' → logprob: -3.169389247894287
    8. 'D' → logprob: -3.419389247894287
    9. 'cnt' → logprob: -3.919389247894287
    10. 's' → logprob: -4.419389247894287

Token 53: ' Some' (ID: 6083)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7049097418785095
    2. 'd' → logprob: -1.5799098014831543
    3. ' d' → logprob: -2.9549098014831543
    4. ' c' → logprob: -3.2049098014831543
    5. 'count' → logprob: -3.2049098014831543
    6. 'dp' → logprob: -3.4549098014831543
    7. ' dp' → logprob: -4.079909801483154
    8. 'counter' → logprob: -4.329909801483154
    9. ' counter' → logprob: -4.329909801483154
    10. 'freq' → logprob: -4.329909801483154

Token 54: 'what' (ID: 13347)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5355560183525085
    2. ' ' → logprob: -1.0355560779571533
    3. ' code' → logprob: -3.2855560779571533
    4. 'code' → logprob: -4.660555839538574
    5. '_code' → logprob: -5.535555839538574
    6. '   ' → logprob: -6.285555839538574
    7. '    ' → logprob: -7.285555839538574
    8. 'c' → logprob: -7.285555839538574
    9. '  ' → logprob: -7.410555839538574
    10. ' _' → logprob: -7.410555839538574

Token 55: ' peculiar' (ID: 69421)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3504917621612549
    2. '_' → logprob: -1.6004917621612549
    3. ' more' → logprob: -2.100491762161255
    4. '_counter' → logprob: -3.225491762161255
    5. ' defaultdict' → logprob: -3.475491762161255
    6. '   ' → logprob: -3.850491762161255
    7. '_sorted' → logprob: -3.975491762161255
    8. '_verbose' → logprob: -4.225491523742676
    9. ' frequent' → logprob: -4.350491523742676
    10. ' different' → logprob: -4.475491523742676

Token 56: ' accumulation' (ID: 70787)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.248864769935608
    2. ' frequency' → logprob: -1.623864769935608
    3. ' logic' → logprob: -1.873864769935608
    4. ' freq' → logprob: -2.4988646507263184
    5. ' counter' → logprob: -2.8738646507263184
    6. ' defaultdict' → logprob: -2.9988646507263184
    7. 'freq' → logprob: -3.4988646507263184
    8. 'frequency' → logprob: -4.123864650726318
    9. ' dp' → logprob: -4.248864650726318
    10. 'counter' → logprob: -4.373864650726318

Token 57: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3661212921142578
    2. '   ' → logprob: -1.8661212921142578
    3. 's' → logprob: -1.9911212921142578
    4. ' ' → logprob: -2.366121292114258
    5. ',' → logprob: -2.991121292114258
    6. '(' → logprob: -3.116121292114258
    7. '
' → logprob: -3.241121292114258
    8. '```' → logprob: -3.741121292114258
    9. 'sum' → logprob: -3.866121292114258
    10. 'c' → logprob: -3.866121292114258

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.546858310699463
    2. 'c' → logprob: -1.796858310699463
    3. 's' → logprob: -2.046858310699463
    4. ' c' → logprob: -2.046858310699463
    5. '_' → logprob: -2.171858310699463
    6. '   ' → logprob: -2.296858310699463
    7. 'd' → logprob: -3.421858310699463
    8. ' dp' → logprob: -4.546858310699463
    9. ' d' → logprob: -4.921858310699463
    10. 'cum' → logprob: -5.046858310699463

Token 59: ' P' (ID: 398)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3248717784881592
    2. ' c' → logprob: -1.6998717784881592
    3. 's' → logprob: -2.824871778488159
    4. '   ' → logprob: -2.949871778488159
    5. ' dp' → logprob: -3.199871778488159
    6. 'prefix' → logprob: -3.324871778488159
    7. ' prefix' → logprob: -3.324871778488159
    8. ' ' → logprob: -3.449871778488159
    9. 'cum' → logprob: -3.449871778488159
    10. ' cumulative' → logprob: -3.824871778488159

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7148380279541016
    2. '=' → logprob: -1.4648380279541016
    3. 'refix' → logprob: -1.7148380279541016
    4. '[' → logprob: -3.9648380279541016
    5. '_' → logprob: -4.089838027954102
    6. 'sum' → logprob: -4.089838027954102
    7. 'r' → logprob: -4.214838027954102
    8. 'ref' → logprob: -5.089838027954102
    9. '_sum' → logprob: -5.089838027954102
    10. '[]' → logprob: -6.089838027954102

Token 61: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2818436920642853
    2. ' [' → logprob: -1.406843662261963
    3. ' DD' → logprob: -7.531843662261963
    4. 'DD' → logprob: -9.656844139099121
    5. '0' → logprob: -10.531844139099121
    6. '[-' → logprob: -11.031844139099121
    7. ' ' → logprob: -11.031844139099121
    8. '{' → logprob: -11.781844139099121
    9. ' defaultdict' → logprob: -11.906844139099121
    10. ' [-' → logprob: -12.531844139099121

Token 62: 'sum' (ID: 12298)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015991552209015936
    2. ' ' → logprob: -8.750160217285156
    3. 'A' → logprob: -14.500160217285156
    4. ')' → logprob: -14.875160217285156
    5. '   ' → logprob: -15.250160217285156
    6. '1' → logprob: -16.000160217285156
    7. ']' → logprob: -16.375160217285156
    8. ' A' → logprob: -17.250160217285156
    9. '00' → logprob: -17.875160217285156
    10. '-' → logprob: -17.937660217285156

Token 63: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005215855780988932
    2. '([' → logprob: -5.755215644836426
    3. '(' → logprob: -6.630215644836426
    4. 'A' → logprob: -7.880215644836426
    5. '(P' → logprob: -8.505215644836426
    6. '()' → logprob: -10.255215644836426
    7. '(
' → logprob: -10.505215644836426
    8. ' A' → logprob: -10.880215644836426
    9. '(a' → logprob: -11.380215644836426
    10. '()]' → logprob: -11.755215644836426

Token 64: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00030578780570067465
    2. '[' → logprob: -8.125306129455566
    3. ')]' → logprob: -12.375306129455566
    4. ')' → logprob: -13.250306129455566
    5. ' [:' → logprob: -13.625306129455566
    6. '][:' → logprob: -14.500306129455566
    7. '[
' → logprob: -14.875306129455566
    8. ':' → logprob: -15.000306129455566
    9. ')])' → logprob: -15.000306129455566
    10. '[:]' → logprob: -15.250306129455566

Token 65: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012272522784769535
    2. '1' → logprob: -4.887272357940674
    3. '0' → logprob: -6.262272357940674
    4. 'K' → logprob: -7.012272357940674
    5. 'k' → logprob: -7.137272357940674
    6. ' i' → logprob: -7.637272357940674
    7. 'x' → logprob: -8.637272834777832
    8. '(i' → logprob: -8.887272834777832
    9. '])' → logprob: -10.012272834777832
    10. ' ' → logprob: -10.262272834777832

Token 66: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011705251410603523
    2. '+' → logprob: -4.51170539855957
    3. '])]' → logprob: -7.63670539855957
    4. ']' → logprob: -9.76170539855957
    5. ' ])' → logprob: -10.51170539855957
    6. ')' → logprob: -10.76170539855957
    7. ' +' → logprob: -11.01170539855957
    8. '])+' → logprob: -11.26170539855957
    9. '-' → logprob: -12.13670539855957
    10. ')]' → logprob: -12.13670539855957

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12081603705883026
    2. 'for' → logprob: -2.7458159923553467
    3. ']' → logprob: -3.3708159923553467
    4. '+' → logprob: -4.745816230773926
    5. ' ' → logprob: -5.745816230773926
    6. ',' → logprob: -6.745816230773926
    7. ')' → logprob: -6.870816230773926
    8. ' ]' → logprob: -7.745816230773926
    9. ' +' → logprob: -8.745816230773926
    10. ' if' → logprob: -8.870816230773926

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009835540316998959
    2. 'i' → logprob: -4.759835720062256
    3. ' range' → logprob: -7.009835720062256
    4. 'range' → logprob: -8.134835243225098
    5. '	i' → logprob: -11.259835243225098
    6. ' ' → logprob: -11.634835243225098
    7. ' in' → logprob: -14.509835243225098
    8. '(i' → logprob: -14.509835243225098
    9. '	range' → logprob: -15.259835243225098
    10. ' ' → logprob: -15.759835243225098

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037734778597950935
    2. 'in' → logprob: -6.3787736892700195
    3. ' ' → logprob: -6.8787736892700195
    4. ' range' → logprob: -7.2537736892700195
    5. 'range' → logprob: -8.12877368927002
    6. '(range' → logprob: -11.37877368927002
    7. '<|end|>' → logprob: -11.62877368927002
    8. ' i' → logprob: -12.62877368927002
    9. '(' → logprob: -12.75377368927002
    10. '	range' → logprob: -13.75377368927002

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759665966033936
    2. ' range' → logprob: -0.8259665966033936
    3. '(range' → logprob: -10.700966835021973
    4. '	range' → logprob: -13.075966835021973
    5. ' ' → logprob: -13.325966835021973
    6. '   ' → logprob: -14.450966835021973
    7. ' xrange' → logprob: -15.575966835021973
    8. '  ' → logprob: -16.450965881347656
    9. 'Range' → logprob: -17.450965881347656
    10. 'rang' → logprob: -17.825965881347656

Token 71: '(len' (ID: 14990)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03823656216263771
    2. '(' → logprob: -3.538236618041992
    3. '(len' → logprob: -4.788236618041992
    4. '(n' → logprob: -9.038236618041992
    5. 'len' → logprob: -13.663236618041992
    6. '1' → logprob: -14.163236618041992
    7. '(i' → logprob: -14.413236618041992
    8. '(
' → logprob: -14.538236618041992
    9. '0' → logprob: -15.288236618041992
    10. '((' → logprob: -15.538236618041992

Token 72: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3017907738685608
    2. '(' → logprob: -1.926790714263916
    3. '(P' → logprob: -2.176790714263916
    4. '(N' → logprob: -7.051790714263916
    5. '(i' → logprob: -8.426791191101074
    6. 'A' → logprob: -8.926791191101074
    7. '(
' → logprob: -9.176791191101074
    8. 'P' → logprob: -10.176791191101074
    9. ')' → logprob: -10.676791191101074
    10. '(`' → logprob: -11.176791191101074

Token 73: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.058366648852825165
    2. ')]' → logprob: -3.058366537094116
    3. ' +' → logprob: -5.058366775512695
    4. ')])' → logprob: -6.183366775512695
    5. ')' → logprob: -7.308366775512695
    6. '])]' → logprob: -7.933366775512695
    7. '))' → logprob: -9.808366775512695
    8. ' ' → logprob: -9.808366775512695
    9. '   ' → logprob: -10.183366775512695
    10. ' )' → logprob: -10.433366775512695

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018232580623589456
    2. ' ' → logprob: -8.625182151794434
    3. '0' → logprob: -13.000182151794434
    4. '   ' → logprob: -15.000182151794434
    5. '(' → logprob: -16.75018310546875
    6. ')' → logprob: -17.87518310546875
    7. '  ' → logprob: -18.00018310546875
    8. '```' → logprob: -18.12518310546875
    9. '
' → logprob: -18.37518310546875
    10. '﻿' → logprob: -19.12518310546875

Token 75: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04348791763186455
    2. ']' → logprob: -3.168488025665283
    3. ')' → logprob: -7.918488025665283
    4. '])' → logprob: -10.043487548828125
    5. '])]' → logprob: -10.043487548828125
    6. ' ]' → logprob: -10.918487548828125
    7. ' )' → logprob: -11.918487548828125
    8. ')])' → logprob: -12.043487548828125
    9. ']
' → logprob: -13.918487548828125
    10. '   ' → logprob: -14.043487548828125

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.266435831785202
    2. '   ' → logprob: -1.7664358615875244
    3. '[' → logprob: -3.5164358615875244
    4. '    
' → logprob: -4.891435623168945
    5. ' ' → logprob: -5.266435623168945
    6. '  
' → logprob: -5.391435623168945
    7. '<|end|>' → logprob: -5.391435623168945
    8. '
' → logprob: -6.266435623168945
    9. '  ' → logprob: -6.891435623168945
    10. '' → logprob: -7.016435623168945

Token 77: ' bag' (ID: 7144)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4692348837852478
    2. '
' → logprob: -1.9692349433898926
    3. ' ' → logprob: -2.8442349433898926
    4. ' for' → logprob: -3.3442349433898926
    5. ' 
' → logprob: -4.344234943389893
    6. 'p' → logprob: -4.844234943389893
    7. ' P' → logprob: -4.844234943389893
    8. 'result' → logprob: -4.844234943389893
    9. 'for' → logprob: -4.969234943389893
    10. 'P' → logprob: -4.969234943389893

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2859674096107483
    2. '=' → logprob: -1.4109673500061035
    3. 's' → logprob: -5.9109673500061035
    4. '[' → logprob: -6.5359673500061035
    5. ' ' → logprob: -7.9109673500061035
    6. '_' → logprob: -9.785967826843262
    7. '(' → logprob: -10.160967826843262
    8. '[]' → logprob: -10.660967826843262
    9. '1' → logprob: -10.910967826843262
    10. '_counts' → logprob: -10.910967826843262

Token 79: ' DD' (ID: 52933)
  Prédit: 'DD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DD' → logprob: -0.1607867032289505
    2. ' DD' → logprob: -1.910786747932434
    3. 'default' → logprob: -7.6607866287231445
    4. '{}' → logprob: -10.660786628723145
    5. '{' → logprob: -11.285786628723145
    6. ' ' → logprob: -11.285786628723145
    7. '-DD' → logprob: -11.285786628723145
    8. 'D' → logprob: -12.285786628723145
    9. 'dd' → logprob: -12.285786628723145
    10. ' defaultdict' → logprob: -12.910786628723145

Token 80: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0035454246681183577
    2. '(' → logprob: -5.87854528427124
    3. '(lambda' → logprob: -7.62854528427124
    4. '(list' → logprob: -9.253545761108398
    5. 'int' → logprob: -9.378545761108398
    6. '(in' → logprob: -10.253545761108398
    7. '(
' → logprob: -11.253545761108398
    8. ' (' → logprob: -12.003545761108398
    9. '<int' → logprob: -12.503545761108398
    10. 'list' → logprob: -12.628545761108398

Token 81: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2246291337069124e-05
    2. ')
' → logprob: -11.500021934509277
    3. ' )' → logprob: -12.000021934509277
    4. '())' → logprob: -12.500021934509277
    5. '()' → logprob: -14.000021934509277
    6. ')

' → logprob: -14.625021934509277
    7. '))' → logprob: -15.000021934509277
    8. ')`' → logprob: -15.375021934509277
    9. ')
' → logprob: -15.875021934509277
    10. ')}' → logprob: -17.250022888183594

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14468427002429962
    2. ' for' → logprob: -2.894684314727783
    3. 'for' → logprob: -3.519684314727783
    4. '    
' → logprob: -3.769684314727783
    5. ' 
' → logprob: -5.394684314727783
    6. ')' → logprob: -5.894684314727783
    7. '
' → logprob: -6.019684314727783
    8. ' ' → logprob: -6.144684314727783
    9. 'result' → logprob: -6.144684314727783
    10. '```' → logprob: -6.894684314727783

Token 83: ' answer' (ID: 6052)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9904779195785522
    2. 'result' → logprob: -1.3654779195785522
    3. ' for' → logprob: -2.240478038787842
    4. 'answer' (adapté à ' answer') → logprob: -2.365478038787842
    5. 'ans' → logprob: -3.115478038787842
    6. 'count' → logprob: -3.365478038787842
    7. 'res' → logprob: -3.615478038787842
    8. ' result' → logprob: -3.865478038787842
    9. '   ' → logprob: -4.365478038787842
    10. 'total' → logprob: -5.115478038787842

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06487060338258743
    2. '=' → logprob: -3.189870595932007
    3. '(' → logprob: -4.064870834350586
    4. ' ' → logprob: -5.814870834350586
    5. '[' → logprob: -7.439870834350586
    6. '_' → logprob: -8.189870834350586
    7. ',' → logprob: -8.689870834350586
    8. ':' → logprob: -9.689870834350586
    9. '   ' → logprob: -9.689870834350586
    10. '()' → logprob: -9.814870834350586

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3137558102607727
    2. ' ' → logprob: -1.313755750656128
    3. ' float' → logprob: -8.813755989074707
    4. 'float' → logprob: -9.438755989074707
    5. ' -' → logprob: -10.063755989074707
    6. ' K' → logprob: -10.063755989074707
    7. '1' → logprob: -10.376255989074707
    8. ' P' → logprob: -10.688755989074707
    9. ' ' → logprob: -10.876255989074707
    10. '10' → logprob: -11.376255989074707

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00216596364043653
    2. ' ' → logprob: -6.252165794372559
    3. '-' → logprob: -9.627165794372559
    4. 'float' → logprob: -9.752165794372559
    5. '1' → logprob: -10.002165794372559
    6. 'max' → logprob: -11.502165794372559
    7. 'P' → logprob: -11.752165794372559
    8. 'int' → logprob: -11.752165794372559
    9. 'len' → logprob: -11.877165794372559
    10. '10' → logprob: -12.377165794372559

Token 87: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8849925994873047
    2. '
' → logprob: -1.0099925994873047
    3. '   ' → logprob: -2.5099925994873047
    4. ' for' → logprob: -3.1349925994873047
    5. '    
' → logprob: -3.2599925994873047
    6. '  
' → logprob: -3.8849925994873047
    7. '\n' → logprob: -3.8849925994873047
    8. '<|end|>' → logprob: -5.259992599487305
    9. ' ' → logprob: -5.634992599487305
    10. '   
' → logprob: -5.884992599487305

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5610763430595398
    2. '
' → logprob: -1.5610764026641846
    3. ' 
' → logprob: -2.3110764026641846
    4. ' for' → logprob: -2.6860764026641846
    5. '<|end|>' → logprob: -3.5610764026641846
    6. '    
' → logprob: -4.4360761642456055
    7. '\n' → logprob: -5.5610761642456055
    8. '  
' → logprob: -6.0610761642456055
    9. ' ' → logprob: -6.0610761642456055
    10. 'for' → logprob: -7.4360761642456055

Token 89: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3495076894760132
    2. ' for' → logprob: -1.2245076894760132
    3. '   ' → logprob: -7.724507808685303
    4. '	for' → logprob: -7.724507808685303
    5. '```' → logprob: -9.724507331848145
    6. 'i' → logprob: -10.349507331848145
    7. ' ' → logprob: -11.099507331848145
    8. '\' → logprob: -11.224507331848145
    9. '\n' → logprob: -11.724507331848145
    10. '' → logprob: -11.724507331848145

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20802071690559387
    2. '=' → logprob: -2.0830206871032715
    3. ' ' → logprob: -3.3330206871032715
    4. 's' → logprob: -3.8330206871032715
    5. '_' → logprob: -5.5830206871032715
    6. ')' → logprob: -7.7080206871032715
    7. ',' → logprob: -7.7080206871032715
    8. 'es' → logprob: -8.70802116394043
    9. ' in' → logprob: -8.95802116394043
    10. '  ' → logprob: -9.20802116394043

Token 91: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6333598494529724
    2. '0' → logprob: -0.7583598494529724
    3. ' -' → logprob: -7.758359909057617
    4. '1' → logprob: -8.883359909057617
    5. '-' → logprob: -9.133359909057617
    6. '{' → logprob: -11.258359909057617
    7. '{}' → logprob: -11.258359909057617
    8. ' defaultdict' → logprob: -11.633359909057617
    9. ' {' → logprob: -11.695859909057617
    10. '[' → logprob: -11.758359909057617

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010654778219759464
    2. '{}' → logprob: -5.260654926300049
    3. '-' → logprob: -5.510654926300049
    4. '1' → logprob: -7.635654926300049
    5. '{' → logprob: -8.26065444946289
    6. ' ' → logprob: -8.38565444946289
    7. 'default' → logprob: -8.51065444946289
    8. '[]' → logprob: -9.76065444946289
    9. 'len' → logprob: -10.38565444946289
    10. ' defaultdict' → logprob: -11.13565444946289

Token 93: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8320746421813965
    2. '
' → logprob: -1.2070746421813965
    3. '<|end|>' → logprob: -2.4570746421813965
    4. ' for' → logprob: -2.7070746421813965
    5. ' ' → logprob: -3.2070746421813965
    6. '  
' → logprob: -4.2070746421813965
    7. 'for' → logprob: -4.5820746421813965
    8. '   ' → logprob: -4.7070746421813965
    9. '    
' → logprob: -4.7070746421813965
    10. '\n' → logprob: -4.9570746421813965

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0153088569641113
    2. ' 
' → logprob: -1.0153088569641113
    3. '<|end|>' → logprob: -1.7653088569641113
    4. ' ' → logprob: -3.3903088569641113
    5. ' for' → logprob: -3.8903088569641113
    6. '   ' → logprob: -4.390308856964111
    7. '<|end|>' → logprob: -4.890308856964111
    8. '  
' → logprob: -4.890308856964111
    9. '\n' → logprob: -5.265308856964111
    10. '    
' → logprob: -5.390308856964111

Token 95: ' while' (ID: 2049)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.020979642868042
    2. ' for' → logprob: -1.270979642868042
    3. 'for' → logprob: -2.020979642868042
    4. '
' → logprob: -2.395979642868042
    5. ' ' → logprob: -2.645979642868042
    6. '<|end|>' → logprob: -3.895979642868042
    7. '\n' → logprob: -4.020979881286621
    8. '   ' → logprob: -4.770979881286621
    9. ' while' → logprob: -5.895979881286621
    10. '<|end|>' → logprob: -6.020979881286621

Token 96: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.005624785553663969
    2. 'idx' → logprob: -5.255624771118164
    3. ' True' → logprob: -8.255624771118164
    4. '	idx' → logprob: -10.505624771118164
    5. 'True' → logprob: -10.630624771118164
    6. ' ' → logprob: -10.755624771118164
    7. '(idx' → logprob: -10.880624771118164
    8. ' answer' → logprob: -11.505624771118164
    9. ' len' → logprob: -12.255624771118164
    10. '_idx' → logprob: -12.630624771118164

Token 97: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011258602142333984
    2. '<' → logprob: -4.511258602142334
    3. '<len' → logprob: -8.636259078979492
    4. ' <=' → logprob: -11.136259078979492
    5. ' ' → logprob: -11.511259078979492
    6. '<N' → logprob: -12.386259078979492
    7. '<n' → logprob: -13.386259078979492
    8. '<K' → logprob: -14.136259078979492
    9. '<=' → logprob: -14.261259078979492
    10. '<size' → logprob: -14.761259078979492

Token 98: ' len' (ID: 4631)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5693426132202148
    2. 'N' → logprob: -1.3193426132202148
    3. ' len' → logprob: -2.319342613220215
    4. 'len' → logprob: -2.694342613220215
    5. ' ' → logprob: -8.069342613220215
    6. ' K' → logprob: -8.444342613220215
    7. 'K' → logprob: -9.319342613220215
    8. '   ' → logprob: -9.819342613220215
    9. '=' → logprob: -10.444342613220215
    10. '(len' → logprob: -10.444342613220215

Token 99: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.19930574297904968
    2. '(A' → logprob: -1.824305772781372
    3. '(' → logprob: -3.949305772781372
    4. '(B' → logprob: -10.699305534362793
    5. ' (' → logprob: -10.949305534362793
    6. 'P' → logprob: -11.449305534362793
    7. '(
' → logprob: -11.574305534362793
    8. '(N' → logprob: -11.699305534362793
    9. 'A' → logprob: -12.324305534362793
    10. '(

' → logprob: -12.699305534362793

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17119064927101135
    2. ')' → logprob: -1.921190619468689
    3. '):
' → logprob: -5.0461907386779785
    4. ' ):' → logprob: -6.1711907386779785
    5. ' and' → logprob: -6.2961907386779785
    6. ' )' → logprob: -8.42119026184082
    7. 'and' → logprob: -8.79619026184082
    8. ':' → logprob: -9.42119026184082
    9. '):
' → logprob: -10.92119026184082
    10. ' ):
' → logprob: -11.04619026184082

Token 101: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9159703850746155
    2. '   ' → logprob: -1.6659703254699707
    3. '    ' → logprob: -1.9159703254699707
    4. '       ' → logprob: -2.2909703254699707
    5. ':' → logprob: -2.6659703254699707
    6. ' 
' → logprob: -3.6659703254699707
    7. '<|end|>' → logprob: -4.165970325469971
    8. ')' → logprob: -4.665970325469971
    9. ' if' → logprob: -5.040970325469971
    10. '    
' → logprob: -5.040970325469971

Token 102: ' weird' (ID: 28783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3903522789478302
    2. 'answer' → logprob: -2.515352249145508
    3. '       ' → logprob: -3.390352249145508
    4. 'v' → logprob: -3.890352249145508
    5. ' answer' → logprob: -3.890352249145508
    6. 'p' → logprob: -3.890352249145508
    7. 'c' → logprob: -4.015352249145508
    8. 'val' → logprob: -4.265352249145508
    9. 'if' → logprob: -4.265352249145508
    10. ' if' → logprob: -4.390352249145508

Token 103: ' =' (ID: 314)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -1.4967445135116577
    2. '_value' → logprob: -1.4967445135116577
    3. '_sum' → logprob: -1.4967445135116577
    4. '_val' → logprob: -2.1217446327209473
    5. ' =' → logprob: -2.3717446327209473
    6. '_idx' → logprob: -2.9967446327209473
    7. '_' → logprob: -3.9967446327209473
    8. '_p' → logprob: -5.121744632720947
    9. 'sum' → logprob: -5.371744632720947
    10. '=' → logprob: -5.746744632720947

Token 104: ' (' (ID: 350)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.6152517199516296
    2. ' P' → logprob: -0.8652517199516296
    3. '(P' → logprob: -4.115251541137695
    4. ' (' → logprob: -5.115251541137695
    5. ' K' → logprob: -5.615251541137695
    6. 'K' → logprob: -5.740251541137695
    7. '   ' → logprob: -6.115251541137695
    8. ' idx' → logprob: -6.490251541137695
    9. 'idx' → logprob: -6.490251541137695
    10. '(' → logprob: -7.115251541137695

Token 105: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.009175688959658146
    2. ' P' → logprob: -5.384175777435303
    3. 'idx' → logprob: -6.634175777435303
    4. '(P' → logprob: -6.759175777435303
    5. 'K' → logprob: -7.009175777435303
    6. '   ' → logprob: -8.134175300598145
    7. 'answer' → logprob: -8.384175300598145
    8. ')' → logprob: -9.134175300598145
    9. '(' → logprob: -9.134175300598145
    10. 'N' → logprob: -9.759175300598145

Token 106: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0024068120401352644
    2. ' idx' → logprob: -7.252406597137451
    3. 'idx' → logprob: -7.252406597137451
    4. '[' → logprob: -7.377406597137451
    5. ' [' → logprob: -8.75240707397461
    6. ')[' → logprob: -9.50240707397461
    7. ')' → logprob: -9.87740707397461
    8. '
' → logprob: -11.00240707397461
    9. '	idx' → logprob: -11.00240707397461
    10. '][' → logprob: -11.75240707397461

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006428890861570835
    2. ']+' → logprob: -6.2564287185668945
    3. '])' → logprob: -6.3814287185668945
    4. ')' → logprob: -7.0064287185668945
    5. ']-' → logprob: -7.2564287185668945
    6. '-' → logprob: -7.5064287185668945
    7. '+' → logprob: -8.506428718566895
    8. ' -' → logprob: -9.006428718566895
    9. ' ]' → logprob: -9.881428718566895
    10. ']*' → logprob: -10.256428718566895

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12765201926231384
    2. ' +' → logprob: -2.7526519298553467
    3. '-' → logprob: -3.5026519298553467
    4. '+' → logprob: -4.127652168273926
    5. ')' → logprob: -4.877652168273926
    6. ' ' → logprob: -7.502652168273926
    7. '%' → logprob: -7.627652168273926
    8. ' %' → logprob: -7.752652168273926
    9. ' )' → logprob: -7.877652168273926
    10. ')%' → logprob: -9.752652168273926

Token 109: ' idx' (ID: 14016)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.23091134428977966
    2. 'idx' → logprob: -2.2309112548828125
    3. ' K' → logprob: -2.7309112548828125
    4. ' idx' → logprob: -4.1059112548828125
    5. ')' → logprob: -5.2309112548828125
    6. 'P' → logprob: -5.6059112548828125
    7. '(idx' → logprob: -6.7309112548828125
    8. ' (' → logprob: -6.8559112548828125
    9. ' P' → logprob: -7.1059112548828125
    10. '(K' → logprob: -7.1059112548828125

Token 110: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3017529249191284
    2. '*K' → logprob: -1.3017529249191284
    3. ' *' → logprob: -1.4267529249191284
    4. ')' → logprob: -1.5517529249191284
    5. ' +' → logprob: -7.051753044128418
    6. '*k' → logprob: -7.301753044128418
    7. '+' → logprob: -7.426753044128418
    8. ' )' → logprob: -8.051753044128418
    9. ')**' → logprob: -8.051753044128418
    10. 'K' → logprob: -8.176753044128418

Token 111: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.1099560260772705
    2. '%' → logprob: -1.4849560260772705
    3. ' +' → logprob: -1.6099560260772705
    4. '+' → logprob: -2.4849560260772705
    5. '
' → logprob: -2.8599560260772705
    6. '<|end|>' → logprob: -3.2349560260772705
    7. ']' → logprob: -4.609955787658691
    8. ' -' → logprob: -4.609955787658691
    9. ')' → logprob: -4.734955787658691
    10. '*K' → logprob: -5.234955787658691

Token 112: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004627480171620846
    2. ' K' → logprob: -5.379627704620361
    3. 'k' → logprob: -12.504627227783203
    4. ' ' → logprob: -13.004627227783203
    5. '	K' → logprob: -14.879627227783203
    6. '>K' → logprob: -15.379627227783203
    7. '   ' → logprob: -16.379627227783203
    8. 'm' → logprob: -16.504627227783203
    9. '100' → logprob: -16.754627227783203
    10. '
' → logprob: -17.004627227783203

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03713814541697502
    2. '
' → logprob: -3.4121382236480713
    3. '<|end|>' → logprob: -6.662137985229492
    4. ')' → logprob: -7.037137985229492
    5. '        
' → logprob: -7.162137985229492
    6. ')
' → logprob: -9.412137985229492
    7. ' if' → logprob: -9.662137985229492
    8. ',' → logprob: -9.787137985229492
    9. '<|end|>' → logprob: -10.037137985229492
    10. '   ' → logprob: -10.162137985229492

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006794709246605635
    2. '
' → logprob: -5.2567949295043945
    3. ')' → logprob: -7.6317949295043945
    4. '        
' → logprob: -8.006794929504395
    5. '<|end|>' → logprob: -8.256794929504395
    6. ' if' → logprob: -8.631794929504395
    7. '   ' → logprob: -9.256794929504395
    8. ')
' → logprob: -10.131794929504395
    9. ',' → logprob: -10.506794929504395
    10. '    
' → logprob: -11.506794929504395

Token 115: ' answer' (ID: 6052)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7469586133956909
    2. 'answer' (adapté à ' answer') → logprob: -0.8719586133956909
    3. ' answer' → logprob: -3.1219587326049805
    4. 'if' → logprob: -3.4969587326049805
    5. ' if' → logprob: -3.6219587326049805
    6. '   ' → logprob: -5.8719587326049805
    7. 'bag' → logprob: -6.1219587326049805
    8. ' bag' → logprob: -7.4969587326049805
    9. '	answer' → logprob: -7.9969587326049805
    10. '
' → logprob: -8.24695873260498

Token 116: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005241225939244032
    2. '+=' → logprob: -5.255241394042969
    3. ' ' → logprob: -12.755241394042969
    4. ']+=' → logprob: -13.630241394042969
    5. ' =' → logprob: -14.380241394042969
    6. ' -=' → logprob: -14.380241394042969
    7. ' +' → logprob: -14.880241394042969
    8. '=' → logprob: -15.005241394042969
    9. '    ' → logprob: -15.255241394042969
    10. '+' → logprob: -15.505241394042969

Token 117: ' bag' (ID: 7144)
  Prédit: 'bag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bag' → logprob: -0.038084518164396286
    2. ' bag' → logprob: -3.2880845069885254
    3. '   ' → logprob: -10.913084983825684
    4. ' ' → logprob: -12.413084983825684
    5. 'bug' → logprob: -12.913084983825684
    6. 'bage' → logprob: -13.038084983825684
    7. 'bags' → logprob: -13.288084983825684
    8. 'b' → logprob: -13.350584983825684
    9. 'idx' → logprob: -13.663084983825684
    10. 'answer' → logprob: -13.725584983825684

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00026658078422769904
    2. 'we' → logprob: -8.625267028808594
    3. '[(' → logprob: -10.250267028808594
    4. '[P' → logprob: -10.500267028808594
    5. '[b' → logprob: -12.625267028808594
    6. 'We' → logprob: -12.875267028808594
    7. '[
' → logprob: -13.000267028808594
    8. '[w' → logprob: -13.250267028808594
    9. ' [' → logprob: -13.500267028808594
    10. '[K' → logprob: -13.625267028808594

Token 119: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.11449601501226425
    2. ' weird' → logprob: -2.2394959926605225
    3. '(' → logprob: -6.739496231079102
    4. 'str' → logprob: -9.739496231079102
    5. '   ' → logprob: -9.926996231079102
    6. ' (' → logprob: -10.114496231079102
    7. '[' → logprob: -10.426996231079102
    8. 'weed' → logprob: -10.551996231079102
    9. 'wier' → logprob: -10.551996231079102
    10. '-we' → logprob: -10.801996231079102

Token 120: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -1.4140441635390744e-05
    2. 'ir' → logprob: -11.250014305114746
    3. 'ierd' → logprob: -14.625014305114746
    4. 'irds' → logprob: -15.250014305114746
    5. 'i' → logprob: -16.75001335144043
    6. 'ired' → logprob: -16.87501335144043
    7. 'rd' → logprob: -17.00001335144043
    8. '```' → logprob: -17.25001335144043
    9. 'irdi' → logprob: -17.62501335144043
    10. 'urd' → logprob: -18.25001335144043

Token 121: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003251150716096163
    2. ']
' → logprob: -5.753251075744629
    3. ']

' → logprob: -10.003251075744629
    4. ' ]' → logprob: -10.628251075744629
    5. ']
' → logprob: -13.378251075744629
    6. ' ]
' → logprob: -14.503251075744629
    7. '']' → logprob: -14.753251075744629
    8. ']+' → logprob: -15.003251075744629
    9. '"]' → logprob: -15.128251075744629
    10. '
' → logprob: -15.503251075744629

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38885101675987244
    2. 'bag' → logprob: -1.2638510465621948
    3. '   ' → logprob: -3.2638509273529053
    4. ' bag' → logprob: -7.263851165771484
    5. '
' → logprob: -8.513851165771484
    6. '```' → logprob: -8.638851165771484
    7. '        
' → logprob: -9.763851165771484
    8. '           ' → logprob: -10.013851165771484
    9. '    
' → logprob: -10.388851165771484
    10. ' ' → logprob: -10.388851165771484

Token 123: ' bag' (ID: 7144)
  Prédit: 'bag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bag' (adapté à ' bag') → logprob: -6.158350151963532e-05
    2. '   ' → logprob: -10.125061988830566
    3. ' bag' → logprob: -11.375061988830566
    4. '       ' → logprob: -12.500061988830566
    5. '
' → logprob: -13.250061988830566
    6. 'answer' → logprob: -13.250061988830566
    7. '```' → logprob: -13.750061988830566
    8. '    
' → logprob: -15.125061988830566
    9. '           ' → logprob: -15.250061988830566
    10. 'if' → logprob: -15.375061988830566

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6326398849487305
    2. '[P' → logprob: -0.7576398849487305
    3. '[(' → logprob: -11.00763988494873
    4. 'we' → logprob: -11.50763988494873
    5. '[w' → logprob: -13.50763988494873
    6. '[now' → logprob: -13.75763988494873
    7. ' [' → logprob: -13.88263988494873
    8. 'P' → logprob: -14.13263988494873
    9. '[K' → logprob: -14.25763988494873
    10. '[
' → logprob: -14.25763988494873

Token 125: 'we' (ID: 854)
  Prédit: 'we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.27606552839279175
    2. 'P' → logprob: -2.1510655879974365
    3. '(P' → logprob: -2.7760655879974365
    4. '(' → logprob: -2.9010655879974365
    5. ' weird' → logprob: -5.776065349578857
    6. ' P' → logprob: -6.276065349578857
    7. ' (' → logprob: -6.651065349578857
    8. '((' → logprob: -8.026065826416016
    9. '   ' → logprob: -9.276065826416016
    10. '[P' → logprob: -9.276065826416016

Token 126: 'ird' (ID: 2716)
  Prédit: 'ird'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ird' → logprob: -8.387458365177736e-05
    2. 'ir' → logprob: -9.750083923339844
    3. '[' → logprob: -11.375083923339844
    4. 'ierd' → logprob: -12.125083923339844
    5. 'ired' → logprob: -12.375083923339844
    6. 'irds' → logprob: -13.625083923339844
    7. 'rd' → logprob: -14.250083923339844
    8. 'idx' → logprob: -14.750083923339844
    9. 'ord' → logprob: -15.375083923339844
    10. 'irk' → logprob: -15.500083923339844

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00330331246368587
    2. ']+=' → logprob: -5.753303527832031
    3. ' ]' → logprob: -9.003303527832031
    4. '"]' → logprob: -13.503303527832031
    5. ']+' → logprob: -14.628303527832031
    6. '']' → logprob: -14.628303527832031
    7. '`]' → logprob: -16.25330352783203
    8. ']]' → logprob: -16.75330352783203
    9. '()]' → logprob: -17.00330352783203
    10. '+=' → logprob: -17.50330352783203

Token 128: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0002075933152809739
    2. ' +=' → logprob: -8.625207901000977
    3. ']+=' → logprob: -10.875207901000977
    4. '=' → logprob: -11.875207901000977
    5. '+' → logprob: -13.250207901000977
    6. 'plus' → logprob: -16.125207901000977
    7. '+='' → logprob: -16.500207901000977
    8. '+=(' → logprob: -17.250207901000977
    9. '<|end|>' → logprob: -17.625207901000977
    10. '+="' → logprob: -17.875207901000977

Token 129: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.625059127807617
    4. '0' → logprob: -18.750059127807617
    5. '  ' → logprob: -19.500059127807617
    6. '```' → logprob: -20.375059127807617
    7. '+' → logprob: -21.000059127807617
    8. '2' → logprob: -21.312559127807617
    9. '202' → logprob: -21.375059127807617
    10. '111' → logprob: -21.625059127807617

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.750003814697266
    4. '  ' → logprob: -19.125003814697266
    5. '0' → logprob: -19.875003814697266
    6. '+' → logprob: -20.250003814697266
    7. 'idx' → logprob: -20.250003814697266
    8. '۱' → logprob: -20.562503814697266
    9. '<|end|>' → logprob: -20.687503814697266
    10. '```' → logprob: -20.875003814697266

Token 131: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002824254333972931
    2. '       ' → logprob: -6.252824306488037
    3. 'idx' → logprob: -7.752824306488037
    4. '   ' → logprob: -8.127823829650879
    5. '    
' → logprob: -9.627823829650879
    6. '	idx' → logprob: -10.252823829650879
    7. '
' → logprob: -11.002823829650879
    8. ' idx' → logprob: -11.127823829650879
    9. '        
' → logprob: -11.127823829650879
    10. '[idx' → logprob: -11.877823829650879

Token 132: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.548684298992157
    2. 'idx' → logprob: -1.4236843585968018
    3. '       ' → logprob: -2.4236843585968018
    4. '   ' → logprob: -2.4236843585968018
    5. '    
' → logprob: -6.548684120178223
    6. '\n' → logprob: -7.173684120178223
    7. '	idx' → logprob: -7.298684120178223
    8. ' idx' → logprob: -7.423684120178223
    9. '[idx' → logprob: -8.048684120178223
    10. '        
' → logprob: -8.673684120178223

Token 133: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.2200749754119897e-06
    2. ' idx' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.125001907348633
    4. '
' → logprob: -16.750001907348633
    5. '	idx' → logprob: -17.250001907348633
    6. '_idx' → logprob: -18.000001907348633
    7. 'index' → logprob: -18.750001907348633
    8. '    
' → logprob: -19.625001907348633
    9. '```' → logprob: -20.875001907348633
    10. '       ' → logprob: -21.250001907348633

Token 134: ' Odd' (ID: 59799)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0010553185129538178
    2. ' idx' → logprob: -6.8760552406311035
    3. '   ' → logprob: -11.001055717468262
    4. 'index' → logprob: -13.251055717468262
    5. '	idx' → logprob: -13.501055717468262
    6. 'if' → logprob: -14.126055717468262
    7. '       ' → logprob: -14.626055717468262
    8. 'answer' → logprob: -14.626055717468262
    9. '_idx' → logprob: -15.501055717468262
    10. '
' → logprob: -16.001054763793945

Token 135: 'ly' (ID: 423)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06498410552740097
    2. ' idx' → logprob: -2.814984083175659
    3. '   ' → logprob: -6.939984321594238
    4. '	idx' → logprob: -7.064984321594238
    5. '
' → logprob: -7.439984321594238
    6. '    
' → logprob: -8.689984321594238
    7. '[idx' → logprob: -9.064984321594238
    8. '_idx' → logprob: -9.439984321594238
    9. 'indent' → logprob: -9.439984321594238
    10. '(idx' → logprob: -10.064984321594238

Token 136: ' explicit' (ID: 23141)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07893726974725723
    2. ' idx' → logprob: -2.578937292098999
    3. '	idx' → logprob: -10.828937530517578
    4. '_idx' → logprob: -11.078937530517578
    5. '   ' → logprob: -11.953937530517578
    6. 'index' → logprob: -12.953937530517578
    7. 'increment' → logprob: -14.078937530517578
    8. 'indent' → logprob: -14.828937530517578
    9. '    ' → logprob: -14.828937530517578
    10. ',' → logprob: -15.203937530517578

Token 137: ' adjustment' (ID: 44079)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00711682578548789
    2. ' idx' → logprob: -5.132116794586182
    3. '   ' → logprob: -7.132116794586182
    4. '
' → logprob: -8.38211727142334
    5. '       ' → logprob: -9.00711727142334
    6. '	idx' → logprob: -11.13211727142334
    7. '        
' → logprob: -11.88211727142334
    8. 'index' → logprob: -12.00711727142334
    9. '    
' → logprob: -12.38211727142334
    10. '[idx' → logprob: -13.25711727142334

Token 138: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13539960980415344
    2. '   ' → logprob: -2.135399580001831
    3. 'idx' → logprob: -5.26039981842041
    4. ' idx' → logprob: -6.01039981842041
    5. ' if' → logprob: -7.63539981842041
    6. '	idx' → logprob: -9.88539981842041
    7. '
' → logprob: -10.01039981842041
    8. 'if' → logprob: -10.01039981842041
    9. '```' → logprob: -10.51039981842041
    10. 'index' → logprob: -10.51039981842041

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9110806584358215
    2. '       ' → logprob: -0.9110806584358215
    3. ' idx' → logprob: -2.1610805988311768
    4. 'idx' → logprob: -2.5360805988311768
    5. '	idx' → logprob: -6.911080837249756
    6. '
' → logprob: -9.036080360412598
    7. ' ' → logprob: -9.036080360412598
    8. '	' → logprob: -10.411080360412598
    9. '```' → logprob: -10.411080360412598
    10. ' if' → logprob: -10.786080360412598

Token 140: ' rollback' (ID: 127164)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0007736549014225602
    2. 'answer' → logprob: -7.8757734298706055
    3. 'if' → logprob: -8.250773429870605
    4. ' idx' → logprob: -9.375773429870605
    5. 'P' → logprob: -10.875773429870605
    6. 'index' → logprob: -11.250773429870605
    7. '   ' → logprob: -12.500773429870605
    8. '```' → logprob: -12.750773429870605
    9. 'bag' → logprob: -13.000773429870605
    10. '	idx' → logprob: -13.375773429870605

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47603940963745117
    2. '=' → logprob: -1.3510394096374512
    3. '_idx' → logprob: -2.351039409637451
    4. 'idx' → logprob: -4.976039409637451
    5. ' ' → logprob: -5.601039409637451
    6. '()' → logprob: -5.726039409637451
    7. ':' → logprob: -6.101039409637451
    8. '_' → logprob: -6.226039409637451
    9. '(' → logprob: -6.726039409637451
    10. '   ' → logprob: -6.976039409637451

Token 142: ' idx' (ID: 14016)
  Prédit: 'bag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bag' → logprob: -0.5772897601127625
    2. 'idx' → logprob: -1.7022898197174072
    3. 'answer' → logprob: -1.8272898197174072
    4. 'P' → logprob: -3.8272898197174072
    5. ' idx' → logprob: -4.577289581298828
    6. 'K' → logprob: -4.577289581298828
    7. '(P' → logprob: -4.702289581298828
    8. '(answer' → logprob: -4.827289581298828
    9. '(idx' → logprob: -4.827289581298828
    10. ' bag' → logprob: -5.327289581298828

Token 143: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22685568034648895
    2. ' +' → logprob: -2.101855754852295
    3. '-' → logprob: -3.101855754852295
    4. ' -' → logprob: -3.851855754852295
    5. '+
' → logprob: -5.726855754852295
    6. '   ' → logprob: -5.851855754852295
    7. '<|end|>' → logprob: -5.976855754852295
    8. ' ' → logprob: -6.226855754852295
    9. '
' → logprob: -7.226855754852295
    10. '+=' → logprob: -7.476855754852295

Token 144: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004804141819477081
    2. '(K' → logprob: -6.0048041343688965
    3. '1' → logprob: -7.0048041343688965
    4. ' K' → logprob: -7.3798041343688965
    5. 'N' → logprob: -8.254804611206055
    6. '(' → logprob: -8.629804611206055
    7. 'answer' → logprob: -10.004804611206055
    8. '   ' → logprob: -10.004804611206055
    9. ' ' → logprob: -10.254804611206055
    10. ' (' → logprob: -10.254804611206055

Token 145: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.877989649772644
    2. '<|end|>' → logprob: -1.252989649772644
    3. ' if' → logprob: -1.877989649772644
    4. 'if' → logprob: -2.3779897689819336
    5. '+' → logprob: -3.5029897689819336
    6. '       ' → logprob: -4.627989768981934
    7. '<|end|>' → logprob: -5.627989768981934
    8. ' +' → logprob: -6.377989768981934
    9. ' ' → logprob: -6.502989768981934
    10. '	if' → logprob: -6.627989768981934

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003722049528732896
    2. ' ' → logprob: -5.628722190856934
    3. '2' → logprob: -9.378722190856934
    4. '0' → logprob: -10.378722190856934
    5. '```' → logprob: -14.316222190856934
    6. 'bag' → logprob: -14.503722190856934
    7. '   ' → logprob: -14.566222190856934
    8. '-' → logprob: -14.878722190856934
    9. '100' → logprob: -15.003722190856934
    10. '3' → logprob: -15.253722190856934

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002458430244587362
    2. '2' → logprob: -9.000246047973633
    3. '0' → logprob: -10.000246047973633
    4. ' ' → logprob: -10.125246047973633
    5. '100' → logprob: -11.625246047973633
    6. 'len' → logprob: -12.125246047973633
    7. '-' → logprob: -12.937746047973633
    8. 'P' → logprob: -13.000246047973633
    9. '3' → logprob: -13.125246047973633
    10. '10' → logprob: -13.312746047973633

Token 148: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3293362259864807
    2. '
' → logprob: -1.954336166381836
    3. '<|end|>' → logprob: -2.329336166381836
    4. ' if' → logprob: -3.704336166381836
    5. '   ' → logprob: -4.454336166381836
    6. 'if' → logprob: -5.829336166381836
    7. '<|end|>' → logprob: -7.204336166381836
    8. ')' → logprob: -7.704336166381836
    9. '        
' → logprob: -8.454336166381836
    10. ')
' → logprob: -8.704336166381836

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1665704995393753
    2. 'if' → logprob: -1.9165705442428589
    3. '   ' → logprob: -5.416570663452148
    4. ' if' → logprob: -6.291570663452148
    5. '<|end|>' → logprob: -11.041570663452148
    6. '	if' → logprob: -11.916570663452148
    7. '	' → logprob: -13.041570663452148
    8. '        
' → logprob: -13.416570663452148
    9. ' ' → logprob: -13.791570663452148
    10. 'idx' → logprob: -13.791570663452148

Token 150: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11474113166332245
    2. ' if' → logprob: -2.614741086959839
    3. '       ' → logprob: -3.364741086959839
    4. '   ' → logprob: -7.364741325378418
    5. '	if' → logprob: -12.114741325378418
    6. ' ' → logprob: -12.239741325378418
    7. '           ' → logprob: -14.614741325378418
    8. '<|end|>' → logprob: -14.614741325378418
    9. '        
' → logprob: -15.114741325378418
    10. 'If' → logprob: -15.739741325378418

Token 151: ' rollback' (ID: 127164)
  Prédit: ' rollback'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rollback' → logprob: -0.09085536003112793
    2. 'rollback' → logprob: -2.465855360031128
    3. '0' → logprob: -6.840855598449707
    4. ' ' → logprob: -7.215855598449707
    5. ' rollover' → logprob: -10.215855598449707
    6. ' rollout' → logprob: -10.465855598449707
    7. 'roll' → logprob: -10.840855598449707
    8. 'Rollback' → logprob: -12.090855598449707
    9. '   ' → logprob: -12.215855598449707
    10. ' roll' → logprob: -12.340855598449707

Token 152: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2378474920988083
    2. '>=' → logprob: -1.6128474473953247
    3. ' >' → logprob: -4.987847328186035
    4. '>' → logprob: -5.237847328186035
    5. ' ' → logprob: -9.487847328186035
    6. ' <' → logprob: -9.987847328186035
    7. '<|end|>' → logprob: -10.237847328186035
    8. ')>=' → logprob: -10.612847328186035
    9. ']>=' → logprob: -10.862847328186035
    10. '[' → logprob: -12.487847328186035

Token 153: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009155054576694965
    2. ' ' → logprob: -7.00091552734375
    3. '1' → logprob: -12.50091552734375
    4. '   ' → logprob: -15.87591552734375
    5. '  ' → logprob: -16.87591552734375
    6. '<|end|>' → logprob: -17.00091552734375
    7. '۰' → logprob: -17.12591552734375
    8. '```' → logprob: -17.25091552734375
    9. '>' → logprob: -17.75091552734375
    10. '    ' → logprob: -18.12591552734375

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011927806917810813
    2. ' ' → logprob: -9.12511920928955
    3. '1' → logprob: -11.50011920928955
    4. '۰' → logprob: -16.625120162963867
    5. '   ' → logprob: -17.937620162963867
    6. '０' → logprob: -18.312620162963867
    7. '```' → logprob: -18.312620162963867
    8. '  ' → logprob: -18.500120162963867
    9. '-' → logprob: -18.500120162963867
    10. ')' → logprob: -18.687620162963867

Token 155: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3149578273296356
    2. ':' → logprob: -1.314957857131958
    3. ' and' → logprob: -6.439957618713379
    4. '       ' → logprob: -10.439957618713379
    5. 'and' → logprob: -10.564957618713379
    6. '           ' → logprob: -11.064957618713379
    7. ':

' → logprob: -11.689957618713379
    8. ' :
' → logprob: -11.939957618713379
    9. '   ' → logprob: -12.189957618713379
    10. ',' → logprob: -13.189957618713379

Token 156: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12032287567853928
    2. '       ' → logprob: -2.2453229427337646
    3. '   ' → logprob: -4.9953227043151855
    4. 'bag' → logprob: -7.4953227043151855
    5. '	       ' → logprob: -10.370323181152344
    6. '               ' → logprob: -10.495323181152344
    7. '```' → logprob: -11.245323181152344
    8. ' ' → logprob: -11.370323181152344
    9. '
' → logprob: -11.620323181152344
    10. ' bag' → logprob: -11.745323181152344

Token 157: ' key' (ID: 2140)
  Prédit: 'bag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bag' → logprob: -0.3188493549823761
    2. '           ' → logprob: -1.4438493251800537
    3. 'we' → logprob: -3.4438493251800537
    4. '       ' → logprob: -6.068849563598633
    5. 'b' → logprob: -7.068849563598633
    6. '   ' → logprob: -7.943849563598633
    7. 'answer' → logprob: -8.193849563598633
    8. '               ' → logprob: -8.568849563598633
    9. 'count' → logprob: -8.943849563598633
    10. 'counter' → logprob: -9.318849563598633

Token 158: '_del' (ID: 39544)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408637404441833
    2. '=' → logprob: -0.9740864038467407
    3. '_' → logprob: -12.59908676147461
    4. 'to' → logprob: -13.34908676147461
    5. ' ' → logprob: -13.97408676147461
    6. ' ' → logprob: -14.59908676147461
    7. '=P' → logprob: -14.59908676147461
    8. '_to' → logprob: -15.22408676147461
    9. 'we' → logprob: -15.34908676147461
    10. '=
' → logprob: -15.34908676147461

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29402339458465576
    2. '=' → logprob: -1.6690233945846558
    3. 'ete' → logprob: -3.0440235137939453
    4. 'et' → logprob: -4.294023513793945
    5. 'eted' → logprob: -6.294023513793945
    6. 'ay' → logprob: -7.419023513793945
    7. 'e' → logprob: -7.544023513793945
    8. 'ey' → logprob: -7.669023513793945
    9. 'ect' → logprob: -8.169023513793945
    10. 'ate' → logprob: -8.419023513793945

Token 160: ' (' (ID: 350)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.01220551785081625
    2. ' (' → logprob: -4.512205600738525
    3. '(' → logprob: -6.887205600738525
    4. '((' → logprob: -9.887205123901367
    5. 'we' → logprob: -10.012205123901367
    6. '(p' → logprob: -11.637205123901367
    7. '   ' → logprob: -12.262205123901367
    8. '(A' → logprob: -12.262205123901367
    9. ' ' → logprob: -12.887205123901367
    10. '(B' → logprob: -13.012205123901367

Token 161: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0010804448975250125
    2. '(P' → logprob: -6.876080513000488
    3. ' P' → logprob: -10.251080513000488
    4. ' (' → logprob: -11.751080513000488
    5. '   ' → logprob: -13.501080513000488
    6. '(' → logprob: -14.001080513000488
    7. ')' → logprob: -14.126080513000488
    8. '	P' → logprob: -15.001080513000488
    9. ' ' → logprob: -15.626080513000488
    10. 'rollback' → logprob: -15.751080513000488

Token 162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004418013151735067
    2. '[key' → logprob: -5.504417896270752
    3. 'rollback' → logprob: -8.00441837310791
    4. 'key' → logprob: -12.62941837310791
    5. '[
' → logprob: -13.75441837310791
    6. 'roll' → logprob: -14.25441837310791
    7. ' rollback' → logprob: -16.004417419433594
    8. '[idx' → logprob: -16.254417419433594
    9. ' [' → logprob: -16.504417419433594
    10. ')' → logprob: -16.504417419433594

Token 163: 'rollback' (ID: 67623)
  Prédit: 'rollback'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rollback' → logprob: -5.7530574849806726e-05
    2. 'roll' → logprob: -9.875057220458984
    3. ' rollback' → logprob: -12.125057220458984
    4. 'roller' → logprob: -15.500057220458984
    5. 'rolling' → logprob: -16.625057220458984
    6. 'idx' → logprob: -16.750057220458984
    7. '.rollback' → logprob: -17.125057220458984
    8. '   ' → logprob: -18.375057220458984
    9. 'rolled' → logprob: -18.500057220458984
    10. ' ' → logprob: -18.625057220458984

Token 164: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004144648555666208
    2. ' -' → logprob: -8.625414848327637
    3. '-' → logprob: -8.750414848327637
    4. ']-' → logprob: -9.625414848327637
    5. ' ]' → logprob: -12.125414848327637
    6. '[' → logprob: -13.625414848327637
    7. '']' → logprob: -14.000414848327637
    8. ')' → logprob: -14.500414848327637
    9. '],' → logprob: -15.000414848327637
    10. ']

' → logprob: -15.000414848327637

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3870115876197815
    2. '-' → logprob: -1.1370115280151367
    3. ' ' → logprob: -9.137011528015137
    4. ')' → logprob: -11.137011528015137
    5. '   ' → logprob: -11.512011528015137
    6. '  ' → logprob: -13.137011528015137
    7. '-
' → logprob: -13.637011528015137
    8. ' ' → logprob: -13.887011528015137
    9. ',' → logprob: -14.824511528015137
    10. '    ' → logprob: -14.824511528015137

Token 166: ' rollback' (ID: 127164)
  Prédit: 'rollback'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rollback' → logprob: -0.0015900811413303018
    2. ' rollback' → logprob: -6.626590251922607
    3. 'roll' → logprob: -8.25158977508545
    4. 'roller' → logprob: -13.75158977508545
    5. '.rollback' → logprob: -14.37658977508545
    6. ' rollout' → logprob: -14.87658977508545
    7. '(' → logprob: -15.25158977508545
    8. '   ' → logprob: -15.50158977508545
    9. 'rolling' → logprob: -15.62658977508545
    10. 'Rollback' → logprob: -15.87658977508545

Token 167: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.758300438988954e-05
    2. ' )' → logprob: -9.250097274780273
    3. ')%' → logprob: -13.625097274780273
    4. '   ' → logprob: -17.000097274780273
    5. ')
' → logprob: -17.250097274780273
    6. '       ' → logprob: -17.375097274780273
    7. '）' → logprob: -17.500097274780273
    8. '`)' → logprob: -17.875097274780273
    9. '")' → logprob: -18.000097274780273
    10. ']' → logprob: -18.375097274780273

Token 168: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44540154933929443
    2. '%' → logprob: -1.3204015493392944
    3. ' %' → logprob: -2.445401668548584
    4. ')%' → logprob: -5.445401668548584
    5. ']' → logprob: -6.945401668548584
    6. ' )' → logprob: -8.070401191711426
    7. ']%' → logprob: -9.445401191711426
    8. ' ' → logprob: -11.070401191711426
    9. ' ' → logprob: -12.070401191711426
    10. '
' → logprob: -12.195401191711426

Token 169: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0007100477814674377
    2. ' K' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.250709533691406
    4. '   ' → logprob: -17.375709533691406
    5. ' ' → logprob: -18.750709533691406
    6. '
' → logprob: -19.875709533691406
    7. '	K' → logprob: -19.875709533691406
    8. 'k' → logprob: -20.500709533691406
    9. '`' → logprob: -20.625709533691406
    10. '    ' → logprob: -20.875709533691406

Token 170: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017735925503075123
    2. '
' → logprob: -6.501773357391357
    3. '       ' → logprob: -8.376773834228516
    4. '            
' → logprob: -11.001773834228516
    5. '   ' → logprob: -12.501773834228516
    6. '	       ' → logprob: -12.501773834228516
    7. '               ' → logprob: -12.751773834228516
    8. ',' → logprob: -13.126773834228516
    9. '        
' → logprob: -13.376773834228516
    10. ')
' → logprob: -13.501773834228516

Token 171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036965898470953107
    2. '       ' → logprob: -8.000370025634766
    3. '   ' → logprob: -10.750370025634766
    4. '
' → logprob: -12.875370025634766
    5. '               ' → logprob: -13.125370025634766
    6. '	       ' → logprob: -13.125370025634766
    7. '            
' → logprob: -13.375370025634766
    8. '```' → logprob: -13.375370025634766
    9. 'bag' → logprob: -14.000370025634766
    10. 'b' → logprob: -14.250370025634766

Token 172: ' bag' (ID: 7144)
  Prédit: 'bag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bag' (adapté à ' bag') → logprob: -0.009890426881611347
    2. '           ' → logprob: -4.634890556335449
    3. 'if' → logprob: -9.38489055633545
    4. ' bag' → logprob: -11.13489055633545
    5. '       ' → logprob: -11.50989055633545
    6. 'bags' → logprob: -12.25989055633545
    7. 'answer' → logprob: -12.50989055633545
    8. '            
' → logprob: -12.50989055633545
    9. '   ' → logprob: -12.75989055633545
    10. '               ' → logprob: -13.13489055633545

Token 173: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.25001335144043
    3. 'key' → logprob: -16.62501335144043
    4. ' [' → logprob: -17.12501335144043
    5. '[
' → logprob: -17.62501335144043
    6. ' key' → logprob: -19.12501335144043
    7. '[k' → logprob: -19.25001335144043
    8. ',key' → logprob: -19.75001335144043
    9. '
' → logprob: -19.87501335144043
    10. '(key' → logprob: -20.00001335144043

Token 174: '_del' (ID: 39544)
  Prédit: '_del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_del' → logprob: -5.764977686339989e-05
    2. 'del' → logprob: -10.250057220458984
    3. '	del' → logprob: -11.625057220458984
    4. '[key' → logprob: -12.125057220458984
    5. '[' → logprob: -12.625057220458984
    6. '_DEL' → logprob: -13.250057220458984
    7. 'Del' → logprob: -14.000057220458984
    8. ']' → logprob: -14.000057220458984
    9. '_' → logprob: -15.125057220458984
    10. '.del' → logprob: -15.250057220458984

Token 175: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.12889835238456726
    2. '-=' → logprob: -2.1288983821868896
    3. '-' → logprob: -6.8788981437683105
    4. ']' → logprob: -7.5038981437683105
    5. ')' → logprob: -8.003898620605469
    6. '   ' → logprob: -10.628898620605469
    7. '           ' → logprob: -11.878898620605469
    8. ' -' → logprob: -12.128898620605469
    9. ']-' → logprob: -12.128898620605469
    10. '    ' → logprob: -12.753898620605469

Token 176: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.011482312344014645
    2. ' -=' → logprob: -4.511482238769531
    3. '-' → logprob: -7.761482238769531
    4. '=' → logprob: -12.386482238769531
    5. '+=' → logprob: -12.386482238769531
    6. ' -' → logprob: -15.636482238769531
    7. '   ' → logprob: -17.26148223876953
    8. '    ' → logprob: -18.01148223876953
    9. ' +=' → logprob: -18.51148223876953
    10. '>' → logprob: -18.88648223876953

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '           ' → logprob: -20.000001907348633
    6. '```' → logprob: -20.625001907348633
    7. '       ' → logprob: -21.500001907348633
    8. '0' → logprob: -22.125001907348633
    9. '۱' → logprob: -22.125001907348633
    10. '  ' → logprob: -22.375001907348633

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.25
    5. '<|end|>' → logprob: -20.5
    6. '
' → logprob: -21.625
    7. '-' → logprob: -22.125
    8. '۱' → logprob: -22.625
    9. '  ' → logprob: -23.125
    10. '...' → logprob: -23.5

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28791508078575134
    2. '
' → logprob: -1.4129151105880737
    3. 'idx' → logprob: -5.537915229797363
    4. '   ' → logprob: -6.287915229797363
    5. '        
' → logprob: -7.787915229797363
    6. '    
' → logprob: -8.787915229797363
    7. '           ' → logprob: -9.537915229797363
    8. ' idx' → logprob: -9.787915229797363
    9. '
' → logprob: -9.912915229797363
    10. '            
' → logprob: -10.037915229797363

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3854891359806061
    2. 'idx' → logprob: -1.6354891061782837
    3. '
' → logprob: -2.5104892253875732
    4. '   ' → logprob: -3.3854892253875732
    5. '	idx' → logprob: -5.010488986968994
    6. ' idx' → logprob: -6.885488986968994
    7. '	' → logprob: -7.510488986968994
    8. '<|end|>' → logprob: -7.635488986968994
    9. '    
' → logprob: -7.885488986968994
    10. '```' → logprob: -8.885489463806152

Token 181: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23014235496520996
    2. 'idx' (adapté à ' idx') → logprob: -1.73014235496521
    3. '	idx' → logprob: -4.355142593383789
    4. ' idx' → logprob: -4.480142593383789
    5. '       ' → logprob: -5.855142593383789
    6. '
' → logprob: -7.355142593383789
    7. '    
' → logprob: -7.605142593383789
    8. '\t' → logprob: -10.230142593383789
    9. '        
' → logprob: -10.605142593383789
    10. '	
' → logprob: -10.855142593383789

Token 182: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08507905900478363
    2. '+=' → logprob: -3.0850789546966553
    3. '+' → logprob: -3.3350789546966553
    4. ' +' → logprob: -8.460079193115234
    5. ' ' → logprob: -12.210079193115234
    6. '++' → logprob: -13.460079193115234
    7. '=' → logprob: -13.960079193115234
    8. '+++' → logprob: -13.960079193115234
    9. '<|end|>' → logprob: -14.460079193115234
    10. '+="' → logprob: -14.585079193115234

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -20.875
    5. '１' → logprob: -23.125
    6. '۱' → logprob: -23.875
    7. ' ' → logprob: -24.25
    8. '0' → logprob: -24.375
    9. '‌' → logprob: -24.375
    10. '  ' → logprob: -24.5

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. '１' → logprob: -21.875
    6. '  ' → logprob: -23.125
    7. '۱' → logprob: -23.25
    8. '
' → logprob: -23.75
    9. '`' → logprob: -24.0625
    10. '0' → logprob: -24.125

Token 185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15790417790412903
    2. '   ' → logprob: -2.5329041481018066
    3. '<|end|>' → logprob: -2.7829041481018066
    4. 'return' → logprob: -6.282904148101807
    5. '    
' → logprob: -6.657904148101807
    6. '```' → logprob: -7.407904148101807
    7. ')' → logprob: -7.907904148101807
    8. ' return' → logprob: -9.032904624938965
    9. '	return' → logprob: -9.282904624938965
    10. '<|end|>' → logprob: -9.407904624938965

Token 186: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4153784513473511
    2. '   ' → logprob: -1.665378451347351
    3. ' return' → logprob: -2.2903785705566406
    4. '
' → logprob: -3.1653785705566406
    5. '    
' → logprob: -5.290378570556641
    6. '	return' → logprob: -6.790378570556641
    7. ' 
' → logprob: -7.415378570556641
    8. 'print' → logprob: -7.915378570556641
    9. '  
' → logprob: -9.04037857055664
    10. '```' → logprob: -9.91537857055664

Token 188: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.01815614476799965
    2. 'answer' → logprob: -4.018156051635742
    3. '(answer' → logprob: -13.018156051635742
    4. ' str' → logprob: -13.518156051635742
    5. 'str' → logprob: -13.893156051635742
    6. ' ' → logprob: -14.768156051635742
    7. '	answer' → logprob: -14.893156051635742
    8. ' ' → logprob: -15.393156051635742
    9. ' f' → logprob: -15.518156051635742
    10. 'space' → logprob: -15.893156051635742

Token 189: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003726684022694826
    2. 'print' → logprob: -6.628726482391357
    3. '#' → logprob: -7.253726482391357
    4. '<|end|>' → logprob: -7.378726482391357
    5. '
' → logprob: -7.753726482391357
    6. ' if' → logprob: -7.878726482391357
    7. '```' → logprob: -9.003726959228516
    8. 'main' → logprob: -10.003726959228516
    9. '.' → logprob: -11.003726959228516
    10. '\n' → logprob: -11.128726959228516

Token 191: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023257127031683922
    2. '__' → logprob: -3.77325701713562
    3. ' ' → logprob: -12.0232572555542
    4. '_' → logprob: -12.5232572555542
    5. '_name' → logprob: -13.7732572555542
    6. ' ' → logprob: -15.1482572555542
    7. ' _' → logprob: -15.1482572555542
    8. 'name' → logprob: -15.8982572555542
    9. ' name' → logprob: -16.023256301879883
    10. '___' → logprob: -16.648256301879883

Token 192: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002612878568470478
    2. '==' → logprob: -6.252613067626953
    3. '__.__' → logprob: -7.752613067626953
    4. '__.' → logprob: -9.002613067626953
    5. ' ==' → logprob: -9.627613067626953
    6. '_' → logprob: -10.502613067626953
    7. '___' → logprob: -11.627613067626953
    8. ' __' → logprob: -11.752613067626953
    9. '____' → logprob: -12.252613067626953
    10. '.__' → logprob: -12.627613067626953

Token 193: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.877503907773644e-05
    2. '==' → logprob: -9.250099182128906
    3. ' ==' → logprob: -13.625099182128906
    4. '__.__' → logprob: -13.875099182128906
    5. '=="' → logprob: -15.375099182128906
    6. '_' → logprob: -16.625099182128906
    7. '__.' → logprob: -16.875099182128906
    8. '___' → logprob: -17.375099182128906
    9. '____' → logprob: -17.500099182128906
    10. 'name' → logprob: -17.625099182128906

Token 194: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28539174795150757
    2. ' ==' → logprob: -2.0353918075561523
    3. '==' → logprob: -2.1603918075561523
    4. '=="' → logprob: -6.160391807556152
    5. '=='' → logprob: -9.160391807556152
    6. '_' → logprob: -9.660391807556152
    7. '__.__' → logprob: -10.660391807556152
    8. '=' → logprob: -11.035391807556152
    9. ' =="' → logprob: -11.160391807556152
    10. '==
' → logprob: -12.160391807556152

Token 195: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07893385738134384
    2. ''' → logprob: -2.5789339542388916
    3. '__' → logprob: -10.328933715820312
    4. ' "__' → logprob: -11.578933715820312
    5. ' '__' → logprob: -14.078933715820312
    6. '"name' → logprob: -15.078933715820312
    7. ''"' → logprob: -15.203933715820312
    8. ''name' → logprob: -16.203933715820312
    9. '"user' → logprob: -16.203933715820312
    10. '   ' → logprob: -16.328933715820312

Token 196: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0020454595796763897
    2. '__' → logprob: -6.252045631408691
    3. 'name' → logprob: -9.377045631408691
    4. '_main' → logprob: -11.502045631408691
    5. ''' → logprob: -11.627045631408691
    6. '"' → logprob: -12.002045631408691
    7. ' main' → logprob: -12.752045631408691
    8. ' '__' → logprob: -13.877045631408691
    9. 'm' → logprob: -14.127045631408691
    10. ' __' → logprob: -14.502045631408691

Token 197: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.011094276793301105
    2. '__' → logprob: -4.511094093322754
    3. '__":
' → logprob: -10.011094093322754
    4. '__:' → logprob: -14.136094093322754
    5. '__.' → logprob: -14.386094093322754
    6. '_' → logprob: -16.13609504699707
    7. '__.__' → logprob: -16.26109504699707
    8. '.' → logprob: -18.01109504699707
    9. '__('' → logprob: -18.01109504699707
    10. '':
' → logprob: -18.13609504699707

Token 198: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029129493981599808
    2. 'main' → logprob: -4.279129505157471
    3. '   ' → logprob: -4.779129505157471
    4. '	main' → logprob: -5.154129505157471
    5. '    
' → logprob: -7.779129505157471
    6. '(main' → logprob: -9.529129028320312
    7. '_main' → logprob: -9.529129028320312
    8. '
' → logprob: -9.904129028320312
    9. ' 
' → logprob: -10.779129028320312
    10. '```' → logprob: -11.904129028320312

Token 199: ' res' (ID: 694)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004078639671206474
    2. ' main' → logprob: -5.5040788650512695
    3. '	main' → logprob: -15.37907886505127
    4. 'import' → logprob: -18.754077911376953
    5. '   ' → logprob: -19.004077911376953
    6. ' ' → logprob: -19.129077911376953
    7. '(main' → logprob: -19.254077911376953
    8. 'maine' → logprob: -19.379077911376953
    9. '.main' → logprob: -19.754077911376953
    10. 'm' → logprob: -19.879077911376953

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7058059573173523
    2. 'ult' → logprob: -0.7058059573173523
    3. '=' → logprob: -4.955805778503418
    4. 'ults' → logprob: -5.330805778503418
    5. 'uls' → logprob: -8.830805778503418
    6. '   ' → logprob: -8.830805778503418
    7. 'ault' → logprob: -9.330805778503418
    8. 'ULT' → logprob: -9.830805778503418
    9. 'ultat' → logprob: -9.955805778503418
    10. 'ulta' → logprob: -9.955805778503418

Token 201: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.061967797577381134
    2. ' main' → logprob: -2.8119678497314453
    3. '	main' → logprob: -16.436967849731445
    4. '(main' → logprob: -17.186967849731445
    5. '.main' → logprob: -19.936967849731445
    6. '_main' → logprob: -21.311967849731445
    7. 'Main' → logprob: -21.436967849731445
    8. '   ' → logprob: -22.561967849731445
    9. 'emain' → logprob: -23.061967849731445
    10. '/main' → logprob: -23.186967849731445

Token 202: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00018339496455155313
    2. '(' → logprob: -9.12518310546875
    3. '()
' → logprob: -9.75018310546875
    4. '()

' → logprob: -12.12518310546875
    5. '().' → logprob: -13.12518310546875
    6. '(
' → logprob: -13.37518310546875
    7. '();' → logprob: -13.50018310546875
    8. ' ()' → logprob: -14.12518310546875
    9. '()`' → logprob: -14.12518310546875
    10. '()<' → logprob: -14.12518310546875

Token 203: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004797664878424257
    2. '
' → logprob: -7.750479698181152
    3. ' print' → logprob: -10.250479698181152
    4. '   ' → logprob: -11.750479698181152
    5. '```' → logprob: -12.875479698181152
    6. '(print' → logprob: -13.125479698181152
    7. '    
' → logprob: -14.625479698181152
    8. '.print' → logprob: -15.500479698181152
    9. '	print' → logprob: -16.00048065185547
    10. '#print' → logprob: -16.00048065185547

Token 204: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. 'pr' → logprob: -20.5
    4. '```' → logprob: -22.25
    5. 'prin' → logprob: -22.75
    6. '
' → logprob: -23.125
    7. '#print' → logprob: -23.125
    8. 'printf' → logprob: -24.125
    9. '(print' → logprob: -24.375
    10. '.print' → logprob: -24.75

Token 205: ' E' (ID: 457)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. ' print' → logprob: -13.125001907348633
    3. 'pr' → logprob: -16.750001907348633
    4. '   ' → logprob: -16.875001907348633
    5. 'prin' → logprob: -18.500001907348633
    6. '```' → logprob: -19.750001907348633
    7. 'p' → logprob: -20.500001907348633
    8. 'pri' → logprob: -20.875001907348633
    9. 'printf' → logprob: -20.875001907348633
    10. 'for' → logprob: -21.000001907348633

Token 206: 'cc' (ID: 710)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033217230811715126
    2. 'x' → logprob: -6.128321647644043
    3. '   ' → logprob: -7.378321647644043
    4. '#print' → logprob: -8.378321647644043
    5. 'rror' → logprob: -9.503321647644043
    6. '```' → logprob: -9.503321647644043
    7. 'xit' → logprob: -10.128321647644043
    8. '#' → logprob: -10.878321647644043
    9. ' print' → logprob: -11.128321647644043
    10. 'pr' → logprob: -11.128321647644043

Token 207: 'entric' (ID: 67788)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02676047943532467
    2. '   ' → logprob: -3.6517605781555176
    3. ' print' → logprob: -8.77676010131836
    4. 'pr' → logprob: -9.40176010131836
    5. '```' → logprob: -9.52676010131836
    6. '#print' → logprob: -9.65176010131836
    7. '
' → logprob: -10.77676010131836
    8. '    
' → logprob: -11.15176010131836
    9. 'for' → logprob: -11.40176010131836
    10. 'printf' → logprob: -12.15176010131836

Token 208: ' printing' (ID: 24698)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018155209720134735
    2. ' print' → logprob: -4.018155097961426
    3. '(' → logprob: -13.143155097961426
    4. '(print' → logprob: -13.143155097961426
    5. '   ' → logprob: -13.768155097961426
    6. 'pr' → logprob: -16.018156051635742
    7. '
' → logprob: -17.393156051635742
    8. '_print' → logprob: -17.518156051635742
    9. '```' → logprob: -17.893156051635742
    10. '.print' → logprob: -18.018156051635742

Token 209: ' style' (ID: 2713)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16939857602119446
    2. '()
' → logprob: -1.919398546218872
    3. '(print' → logprob: -5.919398784637451
    4. '   ' → logprob: -6.294398784637451
    5. '(
' → logprob: -6.294398784637451
    6. '()' → logprob: -6.794398784637451
    7. '(' → logprob: -6.919398784637451
    8. '
' → logprob: -7.794398784637451
    9. '("\' → logprob: -9.919398307800293
    10. '    
' → logprob: -10.169398307800293

Token 210: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36424529552459717
    2. '   ' → logprob: -1.4892452955245972
    3. '
' → logprob: -2.7392454147338867
    4. '    
' → logprob: -4.989245414733887
    5. ' print' → logprob: -5.864245414733887
    6. '```' → logprob: -6.364245414733887
    7. '(
' → logprob: -6.614245414733887
    8. '()
' → logprob: -6.864245414733887
    9. '(print' → logprob: -7.114245414733887
    10. '(' → logprob: -8.489245414733887

Token 211: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6312321753939614e-05
    2. '   ' → logprob: -11.000036239624023
    3. ' print' → logprob: -11.250036239624023
    4. '```' → logprob: -12.875036239624023
    5. '
' → logprob: -13.000036239624023
    6. 'pr' → logprob: -14.000036239624023
    7. '    
' → logprob: -15.375036239624023
    8. 'for' → logprob: -15.500036239624023
    9. '(print' → logprob: -15.625036239624023
    10. 'pri' → logprob: -16.375036239624023

Token 212: ' [' (ID: 723)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. ' print' → logprob: -13.25000286102295
    3. 'pr' → logprob: -14.75000286102295
    4. '   ' → logprob: -14.87500286102295
    5. 'for' → logprob: -15.50000286102295
    6. '
' → logprob: -15.75000286102295
    7. 'pri' → logprob: -16.500003814697266
    8. '```' → logprob: -16.625003814697266
    9. 'prin' → logprob: -17.125003814697266
    10. 'p' → logprob: -17.375003814697266

Token 213: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. '(print' → logprob: -13.750001907348633
    3. ' print' → logprob: -15.250001907348633
    4. '   ' → logprob: -15.750001907348633
    5. 'lambda' → logprob: -16.750001907348633
    6. '_' → logprob: -16.750001907348633
    7. '__' → logprob: -16.875001907348633
    8. '#print' → logprob: -17.125001907348633
    9. '
' → logprob: -18.125001907348633
    10. '```' → logprob: -18.125001907348633

Token 214: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0028461257461458445
    2. 'res' → logprob: -6.6278462409973145
    3. '(i' → logprob: -6.8778462409973145
    4. '(x' → logprob: -8.002845764160156
    5. '(' → logprob: -9.252845764160156
    6. '(f' → logprob: -10.752845764160156
    7. '(r' → logprob: -11.002845764160156
    8. ']' → logprob: -12.377845764160156
    9. '](' → logprob: -12.877845764160156
    10. '((' → logprob: -12.877845764160156

Token 215: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03748347982764244
    2. ')' → logprob: -3.5374834537506104
    3. '())' → logprob: -4.9124836921691895
    4. '()]' → logprob: -9.662483215332031
    5. '[' → logprob: -9.787483215332031
    6. '()' → logprob: -10.162483215332031
    7. '(' → logprob: -10.162483215332031
    8. ',' → logprob: -10.287483215332031
    9. '(),' → logprob: -10.412483215332031
    10. ')])' → logprob: -10.412483215332031


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 168
Précision stricte (1ère position): 43.66%
Précision adaptée (1ère position): 45.54%
Précision (top 10): 78.87%
================================================================================
