================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir trois entiers séparés par des espaces sur la même ligne.
# Utiliser la fonction input() pour lire cette ligne de texte depuis l'entrée standard (le clavier).
# La méthode split() découpe la chaîne de caractères en une liste de sous-chaînes, en utilisant l'espace comme séparateur par défaut.
# Ensuite, map(int, ...) applique la fonction int() à chaque sous-chaîne pour les convertir en entiers.
# Enfin, on associe ces trois valeurs aux variables n, m et d, respectivement.
n, m, d = map(int, input().split())

# Vérifier si la valeur de d est exactement égale à zéro.
if d == 0:
    # Si c'est le cas, affecter la valeur de n à la variable p.
    # Cela signifie simplement que p et n seront identiques lorsque d vaut 0.
    p = n
else:
    # Dans le cas contraire (c'est-à-dire si d n'est pas égal à 0), calculer p comme suit :
    # Multiplier la valeur de n par 2.
    # Soustraire de ce résultat le double de la valeur de d (c'est-à-dire d multiplié par 2).
    # Attribuer ce résultat à la variable p.
    # Cette opération peut être lue comme : p = (2 * n) - (2 * d)
    p = (n * 2 - d * 2)

# Calculer une valeur r en divisant p par le carré de n (soit n multiplié par lui-même).
# Cette étape utilise l'opérateur de division (/) qui renvoie un nombre à virgule flottante.
r = p / (n * n)

# Calculer une nouvelle valeur a en multipliant r par (m - 1).
# On soustrait 1 à la valeur de m, puis on multiplie le résultat par la variable r.
# Cela permet d'obtenir le résultat final avant l'affichage.
a = r * (m - 1)

# Afficher le résultat de a, arrondi à huit chiffres après la virgule.
# La fonction round() est utilisée pour arrondir a à 8 décimales.
# La fonction print() permet d'afficher ce résultat à l'écran.
print(round(a, 8))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10969100892543793
    2. ' ' → logprob: -2.8596909046173096
    3. ':' → logprob: -4.234691143035889
    4. '```' → logprob: -4.984691143035889
    5. ' à' → logprob: -5.484691143035889
    6. ''' → logprob: -5.484691143035889
    7. ' d' → logprob: -6.109691143035889
    8. ' de' → logprob: -6.359691143035889
    9. ' a' → logprob: -6.609691143035889
    10. 's' → logprob: -6.609691143035889

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.18355052173137665
    2. 'util' → logprob: -1.933550477027893
    3. 'user' → logprob: -4.1835503578186035
    4. ' l' → logprob: -5.5585503578186035
    5. 'u' → logprob: -5.8085503578186035
    6. 'us' → logprob: -7.4335503578186035
    7. 'un' → logprob: -9.433550834655762
    8. ' user' → logprob: -9.558550834655762
    9. 'input' → logprob: -10.933550834655762
    10. 'client' → logprob: -11.058550834655762

Token 5: ''utilisateur' (ID: 140803)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8029748797416687
    2. ''utilisateur' → logprob: -0.9279748797416687
    3. ' utilisateur' → logprob: -2.5529749393463135
    4. 'u' → logprob: -3.0529749393463135
    5. '’utilisateur' → logprob: -3.8029749393463135
    6. 'a' → logprob: -5.302974700927734
    7. '_util' → logprob: -6.552974700927734
    8. 'user' → logprob: -7.427974700927734
    9. ''' → logprob: -7.552974700927734
    10. ' user' → logprob: -8.427974700927734

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9538620114326477
    2. ' ' → logprob: -1.703861951828003
    3. 's' → logprob: -1.953861951828003
    4. 'input' → logprob: -2.453861951828003
    5. 'name' → logprob: -3.578861951828003
    6. '=' → logprob: -3.953861951828003
    7. ' =' → logprob: -4.203862190246582
    8. '=input' → logprob: -4.453862190246582
    9. ',' → logprob: -4.703862190246582
    10. '#' → logprob: -4.828862190246582

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055717092007398605
    2. ' saisir' → logprob: -3.6807169914245605
    3. 'entr' → logprob: -3.9307169914245605
    4. 'r' → logprob: -5.0557169914245605
    5. ' entrer' → logprob: -7.0557169914245605
    6. '```' → logprob: -7.3057169914245605
    7. 'entrée' → logprob: -8.305717468261719
    8. 'contin' → logprob: -8.805717468261719
    9. '#' → logprob: -9.055717468261719
    10. 'ent' → logprob: -9.180717468261719

Token 8: ' trois' (ID: 25564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026280203834176064
    2. '_' → logprob: -3.901280164718628
    3. ''' → logprob: -6.526280403137207
    4. ' :' → logprob: -6.776280403137207
    5. 's' → logprob: -7.401280403137207
    6. ':' → logprob: -7.776280403137207
    7. ' un' → logprob: -7.901280403137207
    8. ' ' → logprob: -8.026280403137207
    9. ' =' → logprob: -8.776280403137207
    10. 'u' → logprob: -8.901280403137207

Token 9: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5758891701698303
    2. ' ' → logprob: -1.0758891105651855
    3. ' espaces' → logprob: -2.5758891105651855
    4. ' mots' → logprob: -4.7008891105651855
    5. ' nombre' → logprob: -6.0758891105651855
    6. ' numbers' → logprob: -6.4508891105651855
    7. ' espace' → logprob: -6.4508891105651855
    8. ' valeurs' → logprob: -6.8258891105651855
    9. ' variables' → logprob: -7.3258891105651855
    10. ' ent' → logprob: -7.3258891105651855

Token 10: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03935245797038078
    2. 'r' → logprob: -3.9143524169921875
    3. 'i' → logprob: -4.1643524169921875
    4. 'ier' → logprob: -6.2893524169921875
    5. '```' → logprob: -7.1643524169921875
    6. 'rs' → logprob: -8.789352416992188
    7. 'ières' → logprob: -9.039352416992188
    8. 'ri' → logprob: -10.664352416992188
    9. 'riers' → logprob: -10.664352416992188
    10. 'ers' → logprob: -10.914352416992188

Token 11: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11084672808647156
    2. 'a' → logprob: -3.110846757888794
    3. 'x' → logprob: -3.860846757888794
    4. '\n' → logprob: -4.110846519470215
    5. 'e' → logprob: -5.485846519470215
    6. '```' → logprob: -5.735846519470215
    7. '\' → logprob: -5.860846519470215
    8. 'ent' → logprob: -5.860846519470215
    9. '#' → logprob: -5.985846519470215
    10. 'i' → logprob: -6.110846519470215

Token 12: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0008912135381251574
    2. 'é' → logprob: -7.500891208648682
    3. 'es' → logprob: -8.87589168548584
    4. '```' → logprob: -9.12589168548584
    5. 'ément' → logprob: -9.75089168548584
    6. 'ès' → logprob: -11.50089168548584
    7. 'ées' → logprob: -11.75089168548584
    8. 's' → logprob: -11.87589168548584
    9. '#' → logprob: -13.00089168548584
    10. 'er' → logprob: -14.37589168548584

Token 13: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.4723350405693054
    2. 'es' → logprob: -1.7223351001739502
    3. 's' → logprob: -2.34733510017395
    4. ' par' → logprob: -2.34733510017395
    5. '```' → logprob: -6.597334861755371
    6. 'e' → logprob: -6.722334861755371
    7. ',' → logprob: -6.847334861755371
    8. 'és' → logprob: -6.972334861755371
    9. ' ' → logprob: -7.722334861755371
    10. '_par' → logprob: -7.972334861755371

Token 14: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7450914978981018
    2. ' des' → logprob: -1.370091438293457
    3. 'un' → logprob: -1.745091438293457
    4. 'une' → logprob: -2.620091438293457
    5. 'es' → logprob: -4.370091438293457
    6. ' un' → logprob: -5.870091438293457
    7. '```' → logprob: -6.620091438293457
    8. 'esp' → logprob: -6.870091438293457
    9. 'spaces' → logprob: -6.870091438293457
    10. ''' → logprob: -7.370091438293457

Token 15: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.6501375436782837
    2. ' espaces' → logprob: -0.7751375436782837
    3. ''esp' → logprob: -4.775137424468994
    4. 'es' → logprob: -5.025137424468994
    5. 'spaces' → logprob: -6.650137424468994
    6. ''espace' → logprob: -7.650137424468994
    7. '_' → logprob: -8.650137901306152
    8. '’esp' → logprob: -9.650137901306152
    9. ' espace' → logprob: -9.900137901306152
    10. '```' → logprob: -10.025137901306152

Token 16: ' sur' (ID: 1512)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.345562607049942
    2. 'ent' → logprob: -2.345562696456909
    3. 'input' → logprob: -3.095562696456909
    4. 'user' → logprob: -3.345562696456909
    5. 'a' → logprob: -3.595562696456909
    6. 'numbers' → logprob: -3.720562696456909
    7. 'e' → logprob: -3.845562696456909
    8. 'x' → logprob: -4.47056245803833
    9. 'nums' → logprob: -5.09556245803833
    10. 'entr' → logprob: -5.59556245803833

Token 17: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.8639848232269287
    2. ' la' → logprob: -1.1139848232269287
    3. 'la' → logprob: -1.9889848232269287
    4. ' une' → logprob: -2.2389848232269287
    5. 'l' → logprob: -5.488985061645508
    6. ' ' → logprob: -6.863985061645508
    7. ''une' → logprob: -7.363985061645508
    8. ' ' → logprob: -7.988985061645508
    9. '```' → logprob: -8.613985061645508
    10. 'le' → logprob: -9.613985061645508

Token 18: ' même' (ID: 9679)
  Prédit: ' même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.09126327186822891
    2. ' input' → logprob: -3.5912632942199707
    3. 'ligne' → logprob: -4.091263294219971
    4. 'm' → logprob: -4.216263294219971
    5. 'input' → logprob: -4.216263294219971
    6. 'une' → logprob: -6.091263294219971
    7. ' ligne' → logprob: -6.341263294219971
    8. ' ' → logprob: -6.466263294219971
    9. 'r' → logprob: -6.841263294219971
    10. ' suivante' → logprob: -6.966263294219971

Token 19: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.547741174697876
    2. ' ligne' → logprob: -1.547741174697876
    3. 'l' → logprob: -1.672741174697876
    4. ' ' → logprob: -3.922741174697876
    5. ' ' → logprob: -6.922740936279297
    6. 'line' → logprob: -9.047740936279297
    7. 'lig' → logprob: -9.422740936279297
    8. '   ' → logprob: -9.922740936279297
    9. ' line' → logprob: -10.422740936279297
    10. ' 

' → logprob: -10.672740936279297

Token 20: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2911590337753296
    2. 'ent' → logprob: -2.291159152984619
    3. 'e' → logprob: -3.166159152984619
    4. 'input' → logprob: -3.541159152984619
    5. 'a' → logprob: -3.916159152984619
    6. 'x' → logprob: -4.166159152984619
    7. 'user' → logprob: -4.416159152984619
    8. 'entr' → logprob: -5.166159152984619
    9. 'numbers' → logprob: -5.166159152984619
    10. 's' → logprob: -6.041159152984619

Token 21: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31879979372024536
    2. 'e' → logprob: -1.8187997341156006
    3. 'x' → logprob: -3.0687997341156006
    4. '#' → logprob: -3.6937997341156006
    5. 'i' → logprob: -4.44379997253418
    6. 'a' → logprob: -4.94379997253418
    7. 'v' → logprob: -5.19379997253418
    8. 'ent' → logprob: -5.31879997253418
    9. 'u' → logprob: -5.94379997253418
    10. 's' → logprob: -6.69379997253418

Token 22: ' Util' (ID: 13564)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.48685237765312195
    2. 'n' → logprob: -1.3618524074554443
    3. 'user' → logprob: -2.9868524074554443
    4. 'input' → logprob: -3.6118524074554443
    5. 'numbers' → logprob: -4.111852169036865
    6. 's' → logprob: -4.861852169036865
    7. 'nums' → logprob: -5.486852169036865
    8. 'a' → logprob: -5.486852169036865
    9. 'inputs' → logprob: -5.986852169036865
    10. 'val' → logprob: -6.236852169036865

Token 23: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.5755337476730347
    2. 'ser' → logprob: -0.9505337476730347
    3. 's' → logprob: -3.575533866882324
    4. '#' → logprob: -4.575533866882324
    5. 'is' → logprob: -5.700533866882324
    6. 'isateur' → logprob: -5.825533866882324
    7. 'ise' → logprob: -6.325533866882324
    8. 'se' → logprob: -6.700533866882324
    9. 'isez' → logprob: -6.950533866882324
    10. 't' → logprob: -7.325533866882324

Token 24: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22727395594120026
    2. ' input' → logprob: -1.602273941040039
    3. 'l' → logprob: -7.602273941040039
    4. ' la' → logprob: -7.852273941040039
    5. '```' → logprob: -8.227273941040039
    6. 'la' → logprob: -8.477273941040039
    7. '=input' → logprob: -8.727273941040039
    8. '`' → logprob: -8.977273941040039
    9. ' l' → logprob: -10.102273941040039
    10. ' ' → logprob: -10.477273941040039

Token 25: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08137954771518707
    2. ' input' → logprob: -3.4563796520233154
    3. 's' → logprob: -3.7063796520233154
    4. 'split' → logprob: -4.581379413604736
    5. 'val' → logprob: -5.206379413604736
    6. 'values' → logprob: -7.206379413604736
    7. 'ent' → logprob: -7.206379413604736
    8. 'x' → logprob: -7.206379413604736
    9. '#' → logprob: -7.331379413604736
    10. 'a' → logprob: -7.581379413604736

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009800242260098457
    2. ' input' → logprob: -4.634800434112549
    3. '`' → logprob: -11.50979995727539
    4. '```' → logprob: -11.88479995727539
    5. 'map' → logprob: -12.13479995727539
    6. '=input' → logprob: -12.25979995727539
    7. 'split' → logprob: -12.38479995727539
    8. 'i' → logprob: -12.63479995727539
    9. 's' → logprob: -12.88479995727539
    10. 'int' → logprob: -13.38479995727539

Token 27: '()' (ID: 416)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47846683859825134
    2. 'x' → logprob: -2.353466749191284
    3. 'e' → logprob: -2.603466749191284
    4. 'a' → logprob: -2.603466749191284
    5. 'ent' → logprob: -3.103466749191284
    6. 'v' → logprob: -3.728466749191284
    7. 'i' → logprob: -3.853466749191284
    8. 't' → logprob: -4.353466987609863
    9. 'numbers' → logprob: -5.103466987609863
    10. '```' → logprob: -5.728466987609863

Token 28: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48974910378456116
    2. 'ent' → logprob: -2.2397491931915283
    3. 'x' → logprob: -2.2397491931915283
    4. 'a' → logprob: -2.8647491931915283
    5. 'e' → logprob: -2.9897491931915283
    6. 't' → logprob: -4.364748954772949
    7. 'v' → logprob: -4.489748954772949
    8. 'i' → logprob: -4.739748954772949
    9. 'numbers' → logprob: -5.364748954772949
    10. 'entr' → logprob: -5.614748954772949

Token 29: ' lire' (ID: 46082)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1416091918945312
    2. ' récupérer' → logprob: -1.5166091918945312
    3. 'rec' → logprob: -2.5166091918945312
    4. ' obtenir' → logprob: -2.7666091918945312
    5. 'r' → logprob: -2.8916091918945312
    6. 'ob' → logprob: -3.2666091918945312
    7. ' saisir' → logprob: -3.3916091918945312
    8. ' lire' → logprob: -3.3916091918945312
    9. 'l' → logprob: -3.5166091918945312
    10. ' recevoir' → logprob: -3.5166091918945312

Token 30: ' cette' (ID: 7696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19774959981441498
    2. '(' → logprob: -2.197749614715576
    3. ' (' → logprob: -3.447749614715576
    4. '()' → logprob: -4.447749614715576
    5. '('' → logprob: -5.197749614715576
    6. ' trois' → logprob: -5.197749614715576
    7. '  ' → logprob: -5.447749614715576
    8. ''' → logprob: -6.197749614715576
    9. ' un' → logprob: -6.572749614715576
    10. ' )' → logprob: -7.197749614715576

Token 31: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2715350389480591
    2. ' ligne' → logprob: -1.646535038948059
    3. ' chaîne' → logprob: -3.5215349197387695
    4. ' valeur' → logprob: -5.6465349197387695
    5. ' entrée' → logprob: -6.0215349197387695
    6. '  ' → logprob: -6.0215349197387695
    7. ' )' → logprob: -6.2715349197387695
    8. ' chaine' → logprob: -7.1465349197387695
    9. ' string' → logprob: -7.3965349197387695
    10. ' line' → logprob: -7.8965349197387695

Token 32: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.867756187915802
    2. 'ent' → logprob: -1.7427561283111572
    3. 'e' → logprob: -2.1177561283111572
    4. 'x' → logprob: -2.8677561283111572
    5. 't' → logprob: -2.9927561283111572
    6. 'a' → logprob: -3.1177561283111572
    7. 'v' → logprob: -3.6177561283111572
    8. 'numbers' → logprob: -3.8677561283111572
    9. 'i' → logprob: -4.492756366729736
    10. 'user' → logprob: -4.742756366729736

Token 33: ' texte' (ID: 53492)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5554699301719666
    2. 'code' → logprob: -0.9304699301719666
    3. 'texte' → logprob: -4.180469989776611
    4. ' texte' → logprob: -5.180469989776611
    5. 'commande' → logprob: -5.680469989776611
    6. ' input' → logprob: -5.930469989776611
    7. 's' → logprob: -6.305469989776611
    8. ' sais' → logprob: -7.055469989776611
    9. 'entrée' → logprob: -7.055469989776611
    10. 'input' → logprob: -7.680469989776611

Token 34: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6910993456840515
    2. 'e' → logprob: -2.0660994052886963
    3. 'a' → logprob: -2.3160994052886963
    4. 'ent' → logprob: -2.6910994052886963
    5. 't' → logprob: -2.8160994052886963
    6. 'x' → logprob: -3.0660994052886963
    7. 'v' → logprob: -3.4410994052886963
    8. '#' → logprob: -4.316099166870117
    9. 'i' → logprob: -4.566099166870117
    10. 'numbers' → logprob: -4.691099166870117

Token 35: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3470480442047119
    2. ' l' → logprob: -1.347048044204712
    3. ' input' → logprob: -3.722048044204712
    4. 'input' → logprob: -5.347047805786133
    5. 'la' → logprob: -6.597047805786133
    6. ' la' → logprob: -7.347047805786133
    7. ' ' → logprob: -7.472047805786133
    8. 's' → logprob: -8.222047805786133
    9. '	l' → logprob: -8.597047805786133
    10. 'le' → logprob: -8.722047805786133

Token 36: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5970308184623718
    2. 'a' → logprob: -1.5970308780670166
    3. ''utilisateur' → logprob: -1.8470308780670166
    4. ''entrée' → logprob: -3.0970308780670166
    5. ''a' → logprob: -3.5970308780670166
    6. 'u' → logprob: -4.5970306396484375
    7. ''u' → logprob: -5.7220306396484375
    8. 'e' → logprob: -7.8470306396484375
    9. ''util' → logprob: -7.8470306396484375
    10. '')' → logprob: -7.9720306396484375

Token 37: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6285813450813293
    2. 'ent' → logprob: -2.3785812854766846
    3. 'e' → logprob: -2.5035812854766846
    4. 'x' → logprob: -2.7535812854766846
    5. 'a' → logprob: -2.8785812854766846
    6. 't' → logprob: -3.0035812854766846
    7. 'v' → logprob: -3.1285812854766846
    8. 'numbers' → logprob: -4.503581523895264
    9. 'val' → logprob: -4.628581523895264
    10. 'i' → logprob: -4.628581523895264

Token 38: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7599855661392212
    2. 'ent' → logprob: -1.7599855661392212
    3. 'e' → logprob: -2.1349854469299316
    4. 'x' → logprob: -2.6349854469299316
    5. 't' → logprob: -2.8849854469299316
    6. 'a' → logprob: -3.8849854469299316
    7. 'numbers' → logprob: -4.009985446929932
    8. 'v' → logprob: -4.259985446929932
    9. 'user' → logprob: -4.509985446929932
    10. 'i' → logprob: -4.509985446929932

Token 39: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011242576874792576
    2. ' )' → logprob: -5.761242389678955
    3. 'user' → logprob: -6.011242389678955
    4. ').' → logprob: -6.511242389678955
    5. 'l' → logprob: -7.136242389678955
    6. '):' → logprob: -7.261242389678955
    7. 'a' → logprob: -7.511242389678955
    8. 'u' → logprob: -8.386242866516113
    9. 'la' → logprob: -8.386242866516113
    10. ',' → logprob: -8.386242866516113

Token 40: ' clavier' (ID: 187878)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5382786989212036
    2. ' )' → logprob: -1.9132786989212036
    3. ' ' → logprob: -2.163278579711914
    4. 'u' → logprob: -3.163278579711914
    5. 'user' → logprob: -3.663278579711914
    6. 's' → logprob: -4.163278579711914
    7. '_' → logprob: -4.538278579711914
    8. 'input' → logprob: -4.913278579711914
    9. ' user' → logprob: -5.038278579711914
    10. ' utilisateur' → logprob: -5.413278579711914

Token 41: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002063068561255932
    2. ' )' → logprob: -6.502063274383545
    3. '):' → logprob: -8.377062797546387
    4. '#' → logprob: -9.252062797546387
    5. ').' → logprob: -10.377062797546387
    6. ':' → logprob: -10.502062797546387
    7. ',' → logprob: -10.627062797546387
    8. 's' → logprob: -10.752062797546387
    9. '")' → logprob: -10.877062797546387
    10. '.' → logprob: -10.877062797546387

Token 42: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5428262948989868
    2. 'ent' → logprob: -1.4178262948989868
    3. 'a' → logprob: -2.9178261756896973
    4. 'x' → logprob: -3.9178261756896973
    5. 'nums' → logprob: -3.9178261756896973
    6. 'val' → logprob: -4.042826175689697
    7. 'numbers' → logprob: -4.167826175689697
    8. 'e' → logprob: -4.542826175689697
    9. 't' → logprob: -4.667826175689697
    10. '#' → logprob: -5.292826175689697

Token 43: ' La' (ID: 3038)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.22518280148506165
    2. 'n' → logprob: -2.1001827716827393
    3. 'val' → logprob: -3.8501827716827393
    4. 'a' → logprob: -4.350183010101318
    5. 'nums' → logprob: -4.600183010101318
    6. 'numbers' → logprob: -4.600183010101318
    7. 'values' → logprob: -5.225183010101318
    8. 'user' → logprob: -5.600183010101318
    9. 'x' → logprob: -5.725183010101318
    10. 't' → logprob: -6.350183010101318

Token 44: ' méthode' (ID: 71490)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8033002018928528
    2. 'val' → logprob: -1.428300142288208
    3. 'user' → logprob: -2.428300142288208
    4. 's' → logprob: -2.678300142288208
    5. 'n' → logprob: -3.553300142288208
    6. '#' → logprob: -3.803300142288208
    7. 'l' → logprob: -4.553300380706787
    8. 'values' → logprob: -4.553300380706787
    9. ' user' → logprob: -4.678300380706787
    10. 'ligne' → logprob: -4.678300380706787

Token 45: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.4773028790950775
    2. 'split' → logprob: -0.9773029088973999
    3. 'strip' → logprob: -6.3523030281066895
    4. ' strip' → logprob: -7.1023030281066895
    5. '.split' → logprob: -7.8523030281066895
    6. ' input' → logprob: -8.477302551269531
    7. ' .' → logprob: -10.727302551269531
    8. '.strip' → logprob: -11.352302551269531
    9. 'input' → logprob: -11.477302551269531
    10. 'spl' → logprob: -12.977302551269531

Token 46: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2819977104663849
    2. '(' → logprob: -1.4069976806640625
    3. '('' → logprob: -7.4069976806640625
    4. '(
' → logprob: -9.656997680664062
    5. '().' → logprob: -9.781997680664062
    6. '("' → logprob: -9.906997680664062
    7. '(

' → logprob: -11.531997680664062
    8. '("("' → logprob: -11.656997680664062
    9. ' ()' → logprob: -11.781997680664062
    10. '()
' → logprob: -12.031997680664062

Token 47: ' décou' (ID: 68302)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03169700503349304
    2. '()' → logprob: -3.5316970348358154
    3. ')' → logprob: -7.531696796417236
    4. '#' → logprob: -8.406697273254395
    5. '(
' → logprob: -8.406697273254395
    6. ' (' → logprob: -8.531697273254395
    7. '.' → logprob: -8.531697273254395
    8. 's' → logprob: -9.031697273254395
    9. '('' → logprob: -9.031697273254395
    10. ',' → logprob: -9.781697273254395

Token 48: 'pe' (ID: 424)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4315732419490814
    2. 'pe' → logprob: -1.0565732717514038
    3. 'per' → logprob: -6.306573390960693
    4. 'page' → logprob: -7.681573390960693
    5. 'pera' → logprob: -8.556572914123535
    6. 'pé' → logprob: -9.181572914123535
    7. '```' → logprob: -10.056572914123535
    8. 'п' → logprob: -10.181572914123535
    9. 'пе' → logprob: -10.431572914123535
    10. '#' → logprob: -10.681572914123535

Token 49: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013804626651108265
    2. '(' → logprob: -5.2638044357299805
    3. ' la' → logprob: -5.5138044357299805
    4. '('' → logprob: -6.5138044357299805
    5. ' ()' → logprob: -6.8888044357299805
    6. ' )' → logprob: -7.8888044357299805
    7. ')' → logprob: -8.13880443572998
    8. ' ' → logprob: -8.26380443572998
    9. 'la' → logprob: -8.76380443572998
    10. ''' → logprob: -8.88880443572998

Token 50: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2705707252025604
    2. 'chaine' → logprob: -1.6455707550048828
    3. 'cha' → logprob: -3.770570755004883
    4. ' chaine' → logprob: -4.270570755004883
    5. 'ligne' → logprob: -5.895570755004883
    6. ' ligne' → logprob: -6.145570755004883
    7. 'string' → logprob: -7.145570755004883
    8. ' string' → logprob: -8.020570755004883
    9. 'entrée' → logprob: -8.395570755004883
    10. ' ' → logprob: -8.645570755004883

Token 51: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4541449546813965
    2. '(' → logprob: -1.2041449546813965
    3. ')' → logprob: -4.4541449546813965
    4. ' (' → logprob: -4.5791449546813965
    5. '<|end|>' → logprob: -4.7041449546813965
    6. '('' → logprob: -5.0791449546813965
    7. 'u' → logprob: -5.2041449546813965
    8. ''' → logprob: -5.8291449546813965
    9. ' ()' → logprob: -5.9541449546813965
    10. ' ' → logprob: -6.2041449546813965

Token 52: ' caractères' (ID: 183106)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8459401726722717
    2. 'car' → logprob: -1.345940113067627
    3. ''' → logprob: -2.470940113067627
    4. 'texte' → logprob: -3.220940113067627
    5. ' caractères' → logprob: -3.220940113067627
    6. 'la' → logprob: -3.470940113067627
    7. '```' → logprob: -3.845940113067627
    8. 'cha' → logprob: -3.845940113067627
    9. ' la' → logprob: -4.220940113067627
    10. ' chaîne' → logprob: -4.845940113067627

Token 53: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7747018337249756
    2. 's' → logprob: -2.0247018337249756
    3. '[' → logprob: -2.2747018337249756
    4. '(' → logprob: -2.7747018337249756
    5. 'input' → logprob: -3.0247018337249756
    6. ')' → logprob: -3.3997018337249756
    7. ' )' → logprob: -3.7747018337249756
    8. '.' → logprob: -4.149702072143555
    9. 'user' → logprob: -4.274702072143555
    10. 'entrée' → logprob: -4.399702072143555

Token 54: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7621260285377502
    2. '['' → logprob: -1.5121259689331055
    3. ' ['' → logprob: -2.6371259689331055
    4. 'des' → logprob: -2.7621259689331055
    5. ' un' → logprob: -2.8871259689331055
    6. ' une' → logprob: -3.5121259689331055
    7. 'un' → logprob: -3.6371259689331055
    8. 'une' → logprob: -3.8871259689331055
    9. '[]' → logprob: -4.5121259689331055
    10. '["' → logprob: -5.0121259689331055

Token 55: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2058848887681961
    2. 'liste' → logprob: -1.7058849334716797
    3. 'list' → logprob: -5.83088493347168
    4. ' chaîne' → logprob: -7.45588493347168
    5. 's' → logprob: -8.33088493347168
    6. 'chaine' → logprob: -8.70588493347168
    7. ' list' → logprob: -9.08088493347168
    8. 'es' → logprob: -10.08088493347168
    9. ' listes' → logprob: -10.08088493347168
    10. 'ligne' → logprob: -10.20588493347168

Token 56: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5231505632400513
    2. '.' → logprob: -1.7731505632400513
    3. '[' → logprob: -1.8981505632400513
    4. 'ent' → logprob: -2.5231504440307617
    5. 'tokens' → logprob: -2.8981504440307617
    6. 'user' → logprob: -3.1481504440307617
    7. ',' → logprob: -3.1481504440307617
    8. 'n' → logprob: -3.2731504440307617
    9. 'input' → logprob: -3.2731504440307617
    10. '```' → logprob: -3.7731504440307617

Token 57: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.7790738344192505
    2. 'm' → logprob: -1.2790738344192505
    3. 'cha' → logprob: -2.404073715209961
    4. 'chain' → logprob: -3.279073715209961
    5. ' espaces' → logprob: -3.279073715209961
    6. 'esp' → logprob: -3.654073715209961
    7. 'mot' → logprob: -4.529073715209961
    8. ' mots' → logprob: -4.529073715209961
    9. 'car' → logprob: -4.529073715209961
    10. 'chaine' → logprob: -5.404073715209961

Token 58: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.05326662212610245
    2. 'chain' → logprob: -4.178266525268555
    3. '-cha' → logprob: -4.178266525268555
    4. '-chain' → logprob: -4.928266525268555
    5. '-' → logprob: -5.553266525268555
    6. 'cha' → logprob: -5.678266525268555
    7. ' chain' → logprob: -6.553266525268555
    8. 'chaine' → logprob: -6.928266525268555
    9. 'chains' → logprob: -7.178266525268555
    10. ' chaîne' → logprob: -7.303266525268555

Token 59: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.38166749477386475
    2. 'î' → logprob: -1.3816674947738647
    3. 'nes' → logprob: -3.0066676139831543
    4. '```' → logprob: -5.131667613983154
    5. 'r' → logprob: -6.131667613983154
    6. 'ines' → logprob: -6.131667613983154
    7. '``' → logprob: -7.131667613983154
    8. 'n' → logprob: -7.131667613983154
    9. '   ' → logprob: -7.256667613983154
    10. 'i' → logprob: -7.381667613983154

Token 60: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21983173489570618
    2. 'ent' → logprob: -2.969831705093384
    3. 'e' → logprob: -3.719831705093384
    4. '[' → logprob: -3.719831705093384
    5. ',' → logprob: -3.969831705093384
    6. '```' → logprob: -4.094831943511963
    7. 't' → logprob: -4.719831943511963
    8. 's' → logprob: -4.969831943511963
    9. '#' → logprob: -4.969831943511963
    10. '.' → logprob: -5.219831943511963

Token 61: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4896717071533203
    2. 'tokens' → logprob: -1.9896717071533203
    3. ' .' → logprob: -2.6146717071533203
    4. '[' → logprob: -2.7396717071533203
    5. '.' → logprob: -2.7396717071533203
    6. 'input' → logprob: -3.1146717071533203
    7. '.split' → logprob: -3.3646717071533203
    8. ' tokens' → logprob: -3.4896717071533203
    9. ')' → logprob: -3.6146717071533203
    10. ' )' → logprob: -3.9896717071533203

Token 62: ' utilisant' (ID: 92474)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0909688472747803
    2. 'split' → logprob: -1.2159688472747803
    3. 'spl' → logprob: -1.2159688472747803
    4. 'l' → logprob: -4.590969085693359
    5. '.split' → logprob: -4.840969085693359
    6. 'r' → logprob: -5.215969085693359
    7. '```' → logprob: -5.465969085693359
    8. ' utilisant' → logprob: -5.590969085693359
    9. ' split' → logprob: -5.840969085693359
    10. 'es' → logprob: -6.090969085693359

Token 63: ' l' (ID: 305)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47728005051612854
    2. 'l' → logprob: -1.3522800207138062
    3. ' l' → logprob: -3.3522801399230957
    4. ' '' → logprob: -4.102280139923096
    5. ''un' → logprob: -4.352280139923096
    6. 'un' → logprob: -4.352280139923096
    7. ' ' → logprob: -4.852280139923096
    8. ''espace' → logprob: -5.227280139923096
    9. 's' → logprob: -5.477280139923096
    10. ' ' → logprob: -5.727280139923096

Token 64: ''espace' (ID: 118124)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12293951958417892
    2. ''espace' → logprob: -2.7479395866394043
    3. ''esp' → logprob: -3.7479395866394043
    4. 'a' → logprob: -4.747939586639404
    5. 'es' → logprob: -5.122939586639404
    6. 'e' → logprob: -5.997939586639404
    7. ''a' → logprob: -6.247939586639404
    8. ''un' → logprob: -6.372939586639404
    9. ' '' → logprob: -6.747939586639404
    10. ' ' → logprob: -6.747939586639404

Token 65: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23651011288166046
    2. '=' → logprob: -1.986510157585144
    3. '.' → logprob: -4.111510276794434
    4. ').' → logprob: -4.236510276794434
    5. 's' → logprob: -4.361510276794434
    6. ' =' → logprob: -4.861510276794434
    7. ' )' → logprob: -5.486510276794434
    8. '.split' → logprob: -5.611510276794434
    9. '_' → logprob: -5.986510276794434
    10. '```' → logprob: -6.236510276794434

Token 66: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.23969079554080963
    2. 's' → logprob: -2.3646907806396484
    3. 'sé' → logprob: -2.4896907806396484
    4. 'dé' → logprob: -4.489690780639648
    5. 'se' → logprob: -4.989690780639648
    6. 'le' → logprob: -5.489690780639648
    7. ' séparation' → logprob: -5.739690780639648
    8. ' dé' → logprob: -6.114690780639648
    9. 'delimiter' → logprob: -6.239690780639648
    10. 'l' → logprob: -6.614690780639648

Token 67: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.025110438466072083
    2. 'ation' → logprob: -3.7751104831695557
    3. 'a' → logprob: -7.650110244750977
    4. 'ateurs' → logprob: -8.150110244750977
    5. 'atrice' → logprob: -8.275110244750977
    6. 'ator' → logprob: -8.400110244750977
    7. 'ate' → logprob: -8.400110244750977
    8. 'é' → logprob: -9.650110244750977
    9. 'e' → logprob: -9.650110244750977
    10. ')' → logprob: -9.775110244750977

Token 68: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9618210792541504
    2. 'a' → logprob: -1.0868210792541504
    3. 'x' → logprob: -2.3368210792541504
    4. 'ent' → logprob: -2.5868210792541504
    5. 'e' → logprob: -2.9618210792541504
    6. 'i' → logprob: -4.08682107925415
    7. 't' → logprob: -4.21182107925415
    8. 's' → logprob: -4.83682107925415
    9. '#' → logprob: -5.46182107925415
    10. '```' → logprob: -5.96182107925415

Token 69: ' défaut' (ID: 79375)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.4463765621185303
    2. ' défaut' → logprob: -1.0713765621185303
    3. 'default' → logprob: -4.696376800537109
    4. 'def' → logprob: -5.196376800537109
    5. 'd' → logprob: -6.821376800537109
    6. ' default' → logprob: -7.571376800537109
    7. ' dé' → logprob: -8.19637680053711
    8. ' ' → logprob: -8.44637680053711
    9. ' déf' → logprob: -8.82137680053711
    10. 'f' → logprob: -9.07137680053711

Token 70: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5710417032241821
    2. 'n' → logprob: -1.4460417032241821
    3. 'x' → logprob: -2.0710415840148926
    4. 'ent' → logprob: -3.4460415840148926
    5. 'e' → logprob: -4.071041584014893
    6. 't' → logprob: -4.696041584014893
    7. 'i' → logprob: -5.071041584014893
    8. '#' → logprob: -5.946041584014893
    9. '```' → logprob: -6.446041584014893
    10. 'v' → logprob: -6.821041584014893

Token 71: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8180762529373169
    2. 'a' → logprob: -1.193076252937317
    3. 'ent' → logprob: -2.0680761337280273
    4. 'x' → logprob: -2.1930761337280273
    5. 't' → logprob: -5.193076133728027
    6. 'e' → logprob: -5.568076133728027
    7. '```' → logprob: -6.318076133728027
    8. 'i' → logprob: -7.068076133728027
    9. '#' → logprob: -7.068076133728027
    10. 'v' → logprob: -7.193076133728027

Token 72: ' Ensuite' (ID: 113884)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2617114782333374
    2. 'a' → logprob: -2.386711597442627
    3. 'n' → logprob: -3.136711597442627
    4. 'val' → logprob: -3.761711597442627
    5. 'nums' → logprob: -3.761711597442627
    6. 'values' → logprob: -4.011711597442627
    7. 'numbers' → logprob: -4.011711597442627
    8. 'vals' → logprob: -5.761711597442627
    9. 'x' → logprob: -6.261711597442627
    10. 'inputs' → logprob: -6.636711597442627

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03803185001015663
    2. '#' → logprob: -3.538031816482544
    3. ' on' → logprob: -6.038032054901123
    4. ' convertir' → logprob: -6.288032054901123
    5. ' les' → logprob: -6.913032054901123
    6. ' ,' → logprob: -7.288032054901123
    7. 'les' → logprob: -8.038031578063965
    8. ' utiliser' → logprob: -8.413031578063965
    9. 'convert' → logprob: -8.538031578063965
    10. ' #' → logprob: -8.538031578063965

Token 74: ' map' (ID: 4014)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.36513078212738037
    2. '#' → logprob: -1.8651307821273804
    3. 'n' → logprob: -3.36513090133667
    4. 'on' → logprob: -3.74013090133667
    5. ' convertir' → logprob: -4.11513090133667
    6. ' n' → logprob: -4.49013090133667
    7. ' numbers' → logprob: -4.61513090133667
    8. 'a' → logprob: -4.99013090133667
    9. ' les' → logprob: -4.99013090133667
    10. 'ent' → logprob: -5.11513090133667

Token 75: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26335546374320984
    2. '(int' → logprob: -1.5133554935455322
    3. '(lambda' → logprob: -4.513355255126953
    4. '()' → logprob: -8.638355255126953
    5. '(str' → logprob: -9.138355255126953
    6. '(
' → logprob: -10.763355255126953
    7. '(list' → logprob: -11.138355255126953
    8. '(float' → logprob: -11.263355255126953
    9. '(convert' → logprob: -11.888355255126953
    10. '[int' → logprob: -12.013355255126953

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2827645540237427
    2. ')' → logprob: -1.4077645540237427
    3. ',input' → logprob: -7.407764434814453
    4. ' ,' → logprob: -8.032764434814453
    5. ' )' → logprob: -8.282764434814453
    6. ',)' → logprob: -8.532764434814453
    7. '   ' → logprob: -10.157764434814453
    8. ',user' → logprob: -10.407764434814453
    9. '(),' → logprob: -11.157764434814453
    10. ' ' → logprob: -11.282764434814453

Token 77: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.26179608702659607
    2. 'input' → logprob: -1.5117961168289185
    3. ')' → logprob: -5.136795997619629
    4. ' )' → logprob: -5.761795997619629
    5. ' user' → logprob: -8.386795997619629
    6. 'user' → logprob: -8.386795997619629
    7. 's' → logprob: -9.511795997619629
    8. '(input' → logprob: -10.261795997619629
    9. 'split' → logprob: -10.636795997619629
    10. ' inputs' → logprob: -10.761795997619629

Token 78: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15497076511383057
    2. '(' → logprob: -2.029970645904541
    3. '()' → logprob: -6.029970645904541
    4. '(
' → logprob: -6.779970645904541
    5. ' )' → logprob: -7.029970645904541
    6. '(int' → logprob: -7.154970645904541
    7. '(input' → logprob: -7.154970645904541
    8. 'convert' → logprob: -7.154970645904541
    9. '(...)' → logprob: -7.154970645904541
    10. '(convert' → logprob: -7.529970645904541

Token 79: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07853499054908752
    2. ' la' → logprob: -3.8285350799560547
    3. ' int' → logprob: -3.9535350799560547
    4. '(int' → logprob: -3.9535350799560547
    5. 'la' → logprob: -4.328535079956055
    6. ' ' → logprob: -7.578535079956055
    7. 'lambda' → logprob: -7.703535079956055
    8. ' à' → logprob: -8.453535079956055
    9. '(lambda' → logprob: -8.828535079956055
    10. '=int' → logprob: -8.953535079956055

Token 80: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.5805953741073608
    2. 'fonction' → logprob: -0.8305953741073608
    3. ' conversion' → logprob: -6.33059549331665
    4. 'int' → logprob: -6.58059549331665
    5. ' function' → logprob: -6.95559549331665
    6. ' int' → logprob: -8.455595016479492
    7. 'fon' → logprob: -9.080595016479492
    8. 'function' → logprob: -9.830595016479492
    9. 'conversion' → logprob: -10.205595016479492
    10. ' méthode' → logprob: -10.455595016479492

Token 81: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.24478618800640106
    2. 'int' → logprob: -1.8697861433029175
    3. '(' → logprob: -2.994786262512207
    4. ' int' → logprob: -4.869786262512207
    5. '(lambda' → logprob: -6.869786262512207
    6. '=int' → logprob: -7.119786262512207
    7. '(
' → logprob: -7.369786262512207
    8. '```' → logprob: -7.494786262512207
    9. '()' → logprob: -7.619786262512207
    10. '<|end|>' → logprob: -7.744786262512207

Token 82: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5222313404083252
    2. '()' → logprob: -1.3972313404083252
    3. '(' → logprob: -1.8972313404083252
    4. ' sur' → logprob: -6.522231101989746
    5. '(...)' → logprob: -6.772231101989746
    6. 'sur' → logprob: -6.897231101989746
    7. '(lambda' → logprob: -7.397231101989746
    8. '(aux' → logprob: -7.397231101989746
    9. ' pour' → logprob: -7.522231101989746
    10. ' )' → logprob: -7.522231101989746

Token 83: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017773397266864777
    2. 'sur' → logprob: -5.517773628234863
    3. ' aux' → logprob: -5.642773628234863
    4. '(' → logprob: -5.767773628234863
    5. ' sur' → logprob: -6.267773628234863
    6. ' à' → logprob: -6.392773628234863
    7. '()' → logprob: -6.642773628234863
    8. ' )' → logprob: -7.142773628234863
    9. 'aux' → logprob: -8.017773628234863
    10. '(aux' → logprob: -8.642773628234863

Token 84: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.13147787749767303
    2. ' chacune' → logprob: -2.3814778327941895
    3. ' chacun' → logprob: -4.5064778327941895
    4. 'cha' → logprob: -4.6314778327941895
    5. ' each' → logprob: -5.5064778327941895
    6. ' la' → logprob: -6.2564778327941895
    7. ' cha' → logprob: -6.5064778327941895
    8. 'ch' → logprob: -7.2564778327941895
    9. 'la' → logprob: -7.8814778327941895
    10. 'each' → logprob: -7.8814778327941895

Token 85: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.008703332394361496
    2. ' élément' → logprob: -4.758703231811523
    3. 'él' → logprob: -10.883703231811523
    4. 'é' → logprob: -11.133703231811523
    5. ' él' → logprob: -11.258703231811523
    6. 'element' → logprob: -11.883703231811523
    7. ' chaîne' → logprob: -12.008703231811523
    8. ' valeur' → logprob: -12.133703231811523
    9. ' éléments' → logprob: -12.633703231811523
    10. ' ' → logprob: -12.758703231811523

Token 86: '-cha' (ID: 163177)
  Prédit: '-cha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-cha' → logprob: -0.9680743217468262
    2. 'chaine' → logprob: -1.2180743217468262
    3. '-' → logprob: -1.3430743217468262
    4. ' chaîne' → logprob: -2.843074321746826
    5. 'cha' → logprob: -5.593074321746826
    6. '-chain' → logprob: -7.843074321746826
    7. ' chaine' → logprob: -8.218074798583984
    8. ' chaînes' → logprob: -8.468074798583984
    9. '-string' → logprob: -9.093074798583984
    10. 'élé' → logprob: -9.218074798583984

Token 87: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.08856761455535889
    2. 'ne' → logprob: -2.9635677337646484
    3. 'î' → logprob: -3.5885677337646484
    4. 'înes' → logprob: -6.338567733764648
    5. 'Î' → logprob: -7.213567733764648
    6. 'ïne' → logprob: -7.838567733764648
    7. '�' → logprob: -8.088567733764648
    8. 'ine' → logprob: -8.213567733764648
    9. 'r' → logprob: -8.338567733764648
    10. '' → logprob: -8.338567733764648

Token 88: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005280365236103535
    2. ',' → logprob: -6.880280494689941
    3. '))' → logprob: -7.380280494689941
    4. 'user' → logprob: -7.880280494689941
    5. '),' → logprob: -7.880280494689941
    6. '(' → logprob: -8.005280494689941
    7. ').' → logprob: -8.005280494689941
    8. '#' → logprob: -8.005280494689941
    9. 's' → logprob: -8.255280494689941
    10. 'input' → logprob: -8.505280494689941

Token 89: ' les' (ID: 1341)
  Prédit: ' convertir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.09503278881311417
    2. 'convert' → logprob: -3.0950326919555664
    3. ' transformer' → logprob: -4.095032691955566
    4. ' les' → logprob: -4.220032691955566
    5. 'transform' → logprob: -5.095032691955566
    6. 'ob' → logprob: -6.095032691955566
    7. ' convert' → logprob: -6.095032691955566
    8. ' obtenir' → logprob: -6.470032691955566
    9. 'les' → logprob: -6.595032691955566
    10. 'con' → logprob: -8.345032691955566

Token 90: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.04264216870069504
    2. ' transformer' → logprob: -3.917642116546631
    3. 'convert' → logprob: -4.167642116546631
    4. 'transform' → logprob: -5.167642116546631
    5. ' convert' → logprob: -7.792642116546631
    6. 'con' → logprob: -8.417642593383789
    7. 'converter' → logprob: -11.792642593383789
    8. ' ' → logprob: -12.667642593383789
    9. ' Transformer' → logprob: -12.667642593383789
    10. ' transform' → logprob: -12.792642593383789

Token 91: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.23971275985240936
    2. ')' → logprob: -1.7397127151489258
    3. ' )' → logprob: -4.489712715148926
    4. ',' → logprob: -4.864712715148926
    5. ' afin' → logprob: -5.489712715148926
    6. ' des' → logprob: -5.989712715148926
    7. ' ' → logprob: -6.239712715148926
    8. ' à' → logprob: -6.989712715148926
    9. ' sur' → logprob: -7.114712715148926
    10. '.' → logprob: -7.239712715148926

Token 92: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.20697179436683655
    2. 'ent' → logprob: -1.7069717645645142
    3. ' nombres' → logprob: -5.706971645355225
    4. ' des' → logprob: -6.956971645355225
    5. ' integers' → logprob: -7.081971645355225
    6. ' entier' → logprob: -8.581972122192383
    7. ' int' → logprob: -9.081972122192383
    8. 'int' → logprob: -10.581972122192383
    9. ' trois' → logprob: -10.581972122192383
    10. 'inte' → logprob: -11.456972122192383

Token 93: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.011113489978015423
    2. 'i' → logprob: -4.63611364364624
    3. 't' → logprob: -7.01111364364624
    4. 'ti' → logprob: -8.511113166809082
    5. 'ière' → logprob: -9.636113166809082
    6. '```' → logprob: -9.636113166809082
    7. 'ières' → logprob: -9.886113166809082
    8. '   ' → logprob: -11.136113166809082
    9. 'tiers' → logprob: -11.636113166809082
    10. 'ier' → logprob: -11.761113166809082

Token 94: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7883082032203674
    2. 'a' → logprob: -1.4133081436157227
    3. ':' → logprob: -2.0383081436157227
    4. 'x' → logprob: -2.7883081436157227
    5. 'ent' → logprob: -3.9133081436157227
    6. ',' → logprob: -4.038308143615723
    7. ')' → logprob: -4.163308143615723
    8. 's' → logprob: -4.288308143615723
    9. 'r' → logprob: -4.538308143615723
    10. 't' → logprob: -5.538308143615723

Token 95: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8044911026954651
    2. 'a' → logprob: -0.9294911026954651
    3. 'x' → logprob: -2.0544910430908203
    4. 'ent' → logprob: -4.05449104309082
    5. 't' → logprob: -5.30449104309082
    6. 'val' → logprob: -6.80449104309082
    7. 'v' → logprob: -6.92949104309082
    8. 'numbers' → logprob: -7.17949104309082
    9. 'r' → logprob: -7.30449104309082
    10. 'nums' → logprob: -7.42949104309082

Token 96: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2505396008491516
    2. 'n' → logprob: -2.125539541244507
    3. 'x' → logprob: -2.875539541244507
    4. 'ent' → logprob: -3.250539541244507
    5. 't' → logprob: -6.125539779663086
    6. 'val' → logprob: -7.000539779663086
    7. 'numbers' → logprob: -7.000539779663086
    8. 'nums' → logprob: -7.125539779663086
    9. 'trip' → logprob: -8.000539779663086
    10. 'values' → logprob: -8.000539779663086

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006229994352906942
    2. ' ,' → logprob: -5.881229877471924
    3. ')' → logprob: -6.631229877471924
    4. 's' → logprob: -7.006229877471924
    5. ',
' → logprob: -9.256230354309082
    6. ' trois' → logprob: -9.256230354309082
    7. 't' → logprob: -9.381230354309082
    8. ' ' → logprob: -9.381230354309082
    9. 'a' → logprob: -9.756230354309082
    10. ' a' → logprob: -9.756230354309082

Token 98: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3794766366481781
    2. ' a' → logprob: -1.5044766664505005
    3. 'x' → logprob: -2.629476547241211
    4. ' x' → logprob: -3.879476547241211
    5. ' on' → logprob: -8.254476547241211
    6. 't' → logprob: -8.879476547241211
    7. ' les' → logprob: -9.754476547241211
    8. 'tuple' → logprob: -10.129476547241211
    9. 'l' → logprob: -10.254476547241211
    10. 'val' → logprob: -10.504476547241211

Token 99: ' assoc' (ID: 107464)
  Prédit: ' récup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' récup' → logprob: -0.40672066807746887
    2. 'r' → logprob: -2.9067206382751465
    3. ' affect' → logprob: -3.1567206382751465
    4. 's' → logprob: -3.2817206382751465
    5. ' unpack' → logprob: -3.2817206382751465
    6. 'aff' → logprob: -3.6567206382751465
    7. 'a' → logprob: -3.7817206382751465
    8. ' peut' → logprob: -3.7817206382751465
    9. ' attrib' → logprob: -3.7817206382751465
    10. ' les' → logprob: -4.5317206382751465

Token 100: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.4198915660381317
    2. 'i' → logprob: -1.794891595840454
    3. 'ier' → logprob: -1.794891595840454
    4. 'ié' → logprob: -4.669891357421875
    5. 'ië' → logprob: -7.794891357421875
    6. 'e' → logprob: -8.294891357421875
    7. ' i' → logprob: -9.669891357421875
    8. 'ière' → logprob: -9.919891357421875
    9. '```' → logprob: -9.919891357421875
    10. 'iera' → logprob: -9.919891357421875

Token 101: ' ces' (ID: 10532)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.398664265871048
    2. ' ' → logprob: -2.0236642360687256
    3. ' trois' → logprob: -2.7736642360687256
    4. 'a' → logprob: -3.2736642360687256
    5. ' les' → logprob: -3.3986642360687256
    6. ' i' → logprob: -3.8986642360687256
    7. ' à' → logprob: -5.148664474487305
    8. 's' → logprob: -5.648664474487305
    9. ' la' → logprob: -5.648664474487305
    10. ',' → logprob: -5.773664474487305

Token 102: ' trois' (ID: 25564)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.19612008333206177
    2. 'a' → logprob: -2.321120023727417
    3. ' trois' → logprob: -3.696120023727417
    4. ' ent' → logprob: -4.071120262145996
    5. 'ent' → logprob: -4.196120262145996
    6. ' x' → logprob: -5.321120262145996
    7. ' valeurs' → logprob: -5.696120262145996
    8. 'tro' → logprob: -6.196120262145996
    9. ' nombres' → logprob: -6.196120262145996
    10. ' ' → logprob: -6.446120262145996

Token 103: ' valeurs' (ID: 73668)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.9914491772651672
    2. ' variables' → logprob: -1.4914491176605225
    3. ' valeurs' → logprob: -1.6164491176605225
    4. ' nombres' → logprob: -2.2414491176605225
    5. 'ent' → logprob: -3.3664491176605225
    6. ' entier' → logprob: -4.366449356079102
    7. ' integers' → logprob: -4.616449356079102
    8. ' ' → logprob: -4.741449356079102
    9. ' a' → logprob: -4.991449356079102
    10. ' val' → logprob: -5.366449356079102

Token 104: ' aux' (ID: 5850)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8953943252563477
    2. ' a' → logprob: -1.2703943252563477
    3. ' ' → logprob: -2.2703943252563477
    4. ',' → logprob: -2.6453943252563477
    5. 'n' → logprob: -3.3953943252563477
    6. ' ,' → logprob: -3.5203943252563477
    7. 's' → logprob: -4.395394325256348
    8. 'x' → logprob: -4.770394325256348
    9. 'r' → logprob: -5.270394325256348
    10. ' x' → logprob: -5.395394325256348

Token 105: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0481619834899902
    2. ' a' → logprob: -1.0481619834899902
    3. ' variables' → logprob: -1.4231619834899902
    4. ' x' → logprob: -3.9231619834899902
    5. ' trois' → logprob: -4.17316198348999
    6. 'x' → logprob: -4.54816198348999
    7. 'variables' → logprob: -5.17316198348999
    8. 'ent' → logprob: -6.29816198348999
    9. ' variable' → logprob: -6.79816198348999
    10. 'tro' → logprob: -6.92316198348999

Token 106: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011477592401206493
    2. 'x' → logprob: -4.511477470397949
    3. ' a' → logprob: -7.886477470397949
    4. 'n' → logprob: -10.76147747039795
    5. 'ent' → logprob: -11.01147747039795
    6. ' x' → logprob: -11.63647747039795
    7. '```' → logprob: -12.38647747039795
    8. '`' → logprob: -13.38647747039795
    9. 'num' → logprob: -14.51147747039795
    10. 'nombre' → logprob: -14.76147747039795

Token 107: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005984846968203783
    2. 'ombres' → logprob: -5.630984783172607
    3. 's' → logprob: -7.005984783172607
    4. 'ombre' → logprob: -7.630984783172607
    5. 'b' → logprob: -8.380985260009766
    6. ',' → logprob: -8.505985260009766
    7. 'umbers' → logprob: -8.755985260009766
    8. ' =' → logprob: -8.880985260009766
    9. ' ' → logprob: -9.880985260009766
    10. 'um' → logprob: -9.880985260009766

Token 108: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47840797901153564
    2. ' m' → logprob: -1.2284079790115356
    3. 'p' → logprob: -3.353407859802246
    4. 'a' → logprob: -3.728407859802246
    5. ' p' → logprob: -4.103407859802246
    6. 'x' → logprob: -5.728407859802246
    7. ' a' → logprob: -5.978407859802246
    8. 'i' → logprob: -6.478407859802246
    9. 'k' → logprob: -6.478407859802246
    10. ' x' → logprob: -7.103407859802246

Token 109: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004220028407871723
    2. ' ,' → logprob: -5.504220008850098
    3. ' et' → logprob: -10.254220008850098
    4. 's' → logprob: -10.504220008850098
    5. ' ' → logprob: -11.129220008850098
    6. 'et' → logprob: -11.504220008850098
    7. ',n' → logprob: -11.629220008850098
    8. 'e' → logprob: -11.879220008850098
    9. ',
' → logprob: -12.129220008850098
    10. ',s' → logprob: -12.504220008850098

Token 110: ' d' (ID: 272)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.15893614292144775
    2. ' o' → logprob: -2.283936023712158
    3. 'p' → logprob: -3.533936023712158
    4. 'o' → logprob: -5.158936023712158
    5. ' l' → logprob: -5.408936023712158
    6. ' k' → logprob: -5.658936023712158
    7. ' ' → logprob: -6.783936023712158
    8. 'k' → logprob: -7.783936023712158
    9. 'l' → logprob: -8.033936500549316
    10. ' r' → logprob: -9.408936500549316

Token 111: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0043343412689864635
    2. ',' → logprob: -6.004334449768066
    3. ' =' → logprob: -7.629334449768066
    4. ':' → logprob: -7.629334449768066
    5. '=' → logprob: -8.254334449768066
    6. 's' → logprob: -8.379334449768066
    7. '(' → logprob: -9.254334449768066
    8. ' n' → logprob: -9.629334449768066
    9. ' ' → logprob: -10.629334449768066
    10. ',n' → logprob: -10.629334449768066

Token 112: ' respect' (ID: 5618)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.860146701335907
    2. ' n' → logprob: -1.1101467609405518
    3. ' =' → logprob: -1.4851467609405518
    4. '=' → logprob: -4.860146522521973
    5. ')' → logprob: -5.860146522521973
    6. ' ' → logprob: -6.235146522521973
    7. 's' → logprob: -6.235146522521973
    8. ',' → logprob: -6.360146522521973
    9. ' )' → logprob: -7.735146522521973
    10. ' puis' → logprob: -7.985146522521973

Token 113: 'ivement' (ID: 37978)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.9817889332771301
    2. 'ivement' → logprob: -0.9817889332771301
    3. 'ect' → logprob: -1.9817888736724854
    4. 'uant' → logprob: -3.3567888736724854
    5. 'ent' → logprob: -3.4817888736724854
    6. 'ez' → logprob: -4.1067891120910645
    7. 'ement' → logprob: -4.9817891120910645
    8. 'ivant' → logprob: -5.7317891120910645
    9. 'uez' → logprob: -5.9817891120910645
    10. 'er' → logprob: -6.3567891120910645

Token 114: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.318681188422488e-05
    2. '
' → logprob: -12.62501335144043
    3. ' n' → logprob: -12.75001335144043
    4. ':' → logprob: -13.25001335144043
    5. '```' → logprob: -13.37501335144043
    6. '

' → logprob: -13.75001335144043
    7. ',' → logprob: -14.12501335144043
    8. '\n' → logprob: -14.25001335144043
    9. '  
' → logprob: -15.00001335144043
    10. ' 
' → logprob: -15.50001335144043

Token 115: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010044389637187123
    2. ' 
' → logprob: -10.000100135803223
    3. '\n' → logprob: -10.375100135803223
    4. '  
' → logprob: -11.750100135803223
    5. '```' → logprob: -12.375100135803223
    6. '
' → logprob: -13.250100135803223
    7. '[' → logprob: -13.625100135803223
    8. '\' → logprob: -13.750100135803223
    9. ' n' → logprob: -13.750100135803223
    10. '#' → logprob: -13.875100135803223

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002980432182084769
    2. ' ,' → logprob: -8.125298500061035
    3. ',m' → logprob: -14.000298500061035
    4. ',n' → logprob: -14.375298500061035
    5. 's' → logprob: -16.12529754638672
    6. ' ' → logprob: -16.25029754638672
    7. ',d' → logprob: -17.12529754638672
    8. ' n' → logprob: -17.25029754638672
    9. ' =' → logprob: -17.25029754638672
    10. 'm' → logprob: -17.25029754638672

Token 117: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.023653045296669006
    2. 'm' → logprob: -3.773653030395508
    3. ' ' → logprob: -7.898653030395508
    4. ' ' → logprob: -10.773653030395508
    5. '<|end|>' → logprob: -11.773653030395508
    6. '  ' → logprob: -12.773653030395508
    7. ' ' → logprob: -13.523653030395508
    8. ' м' → logprob: -13.898653030395508
    9. ' ‌' → logprob: -14.148653030395508
    10. '	m' → logprob: -15.398653030395508

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016718693950679153
    2. ' ,' → logprob: -8.750166893005371
    3. ',d' → logprob: -11.750166893005371
    4. 'd' → logprob: -14.750166893005371
    5. ' d' → logprob: -15.125166893005371
    6. ' =' → logprob: -16.000167846679688
    7. ' ' → logprob: -17.125167846679688
    8. ',n' → logprob: -18.125167846679688
    9. ',m' → logprob: -18.625167846679688
    10. '=' → logprob: -19.125167846679688

Token 119: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.006723540835082531
    2. 'd' → logprob: -5.006723403930664
    3. ' ' → logprob: -11.756723403930664
    4. ' ' → logprob: -15.256723403930664
    5. '	d' → logprob: -17.631723403930664
    6. ' 
' → logprob: -17.631723403930664
    7. ',' → logprob: -18.006723403930664
    8. '  ' → logprob: -18.256723403930664
    9. ' ' → logprob: -18.381723403930664
    10. '  
' → logprob: -18.631723403930664

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894830197095871
    2. '=' → logprob: -2.4639482498168945
    3. ',' → logprob: -11.838948249816895
    4. ' =
' → logprob: -14.713948249816895
    5. ' ' → logprob: -14.963948249816895
    6. '=input' → logprob: -15.463948249816895
    7. ' ' → logprob: -15.588948249816895
    8. 's' → logprob: -15.963948249816895
    9. '=

' → logprob: -16.46394920349121
    10. ' =
' → logprob: -16.71394920349121

Token 121: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.31326186656951904
    2. ' map' → logprob: -1.313261866569519
    3. '	map' → logprob: -17.313261032104492
    4. 'input' → logprob: -17.438261032104492
    5. 'list' → logprob: -18.063261032104492
    6. '(map' → logprob: -18.563261032104492
    7. 'm' → logprob: -18.688261032104492
    8. ' ' → logprob: -18.938261032104492
    9. ' input' → logprob: -19.313261032104492
    10. ' list' → logprob: -19.313261032104492

Token 122: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16169901192188263
    2. '(' → logprob: -1.9116990566253662
    3. '(input' → logprob: -6.786698818206787
    4. '(str' → logprob: -8.036699295043945
    5. ' (' → logprob: -11.286699295043945
    6. '(
' → logprob: -12.286699295043945
    7. '(

' → logprob: -13.786699295043945
    8. '<int' → logprob: -14.161699295043945
    9. '(lambda' → logprob: -14.161699295043945
    10. '(list' → logprob: -14.411699295043945

Token 123: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007272233720868826
    2. 'input' → logprob: -5.007272243499756
    3. '(' → logprob: -8.257271766662598
    4. ')' → logprob: -8.257271766662598
    5. ',input' → logprob: -10.632271766662598
    6. ' (' → logprob: -11.632271766662598
    7. ' input' → logprob: -13.007271766662598
    8. '=input' → logprob: -13.382271766662598
    9. '(
' → logprob: -14.882271766662598
    10. ')(' → logprob: -15.507271766662598

Token 124: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011048054322600365
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -16.01104736328125
    4. ')' → logprob: -17.01104736328125
    5. ' ' → logprob: -17.63604736328125
    6. '<input' → logprob: -17.76104736328125
    7. '	input' → logprob: -18.26104736328125
    8. '=input' → logprob: -18.38604736328125
    9. '```' → logprob: -19.51104736328125
    10. '[input' → logprob: -19.63604736328125

Token 125: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37159931659698486
    2. '().' → logprob: -1.3715993165969849
    3. '())' → logprob: -2.8715991973876953
    4. '("' → logprob: -11.746599197387695
    5. '()))' → logprob: -11.746599197387695
    6. ' ()' → logprob: -11.996599197387695
    7. '()`' → logprob: -12.246599197387695
    8. ' ())' → logprob: -12.246599197387695
    9. '(' → logprob: -12.371599197387695
    10. '()]' → logprob: -12.496599197387695

Token 126: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009163398644886911
    2. 'strip' → logprob: -7.000916481018066
    3. ')' → logprob: -13.000916481018066
    4. 'rstrip' → logprob: -13.500916481018066
    5. ' split' → logprob: -13.875916481018066
    6. '(split' → logprob: -15.500916481018066
    7. 'read' → logprob: -17.62591552734375
    8. '()' → logprob: -17.62591552734375
    9. '())' → logprob: -17.62591552734375
    10. 'spl' → logprob: -18.00091552734375

Token 127: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02488301880657673
    2. '()' → logprob: -3.7748830318450928
    3. '()))' → logprob: -6.649882793426514
    4. ')' → logprob: -8.649883270263672
    5. '('' → logprob: -9.274883270263672
    6. '(' → logprob: -10.024883270263672
    7. ' ())' → logprob: -11.149883270263672
    8. '))' → logprob: -12.399883270263672
    9. '())
' → logprob: -12.524883270263672
    10. '("' → logprob: -13.399883270263672

Token 128: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09691430628299713
    2. '#' → logprob: -3.346914291381836
    3. 'for' → logprob: -3.471914291381836
    4. 'result' → logprob: -4.471914291381836
    5. 'i' → logprob: -5.596914291381836
    6. 'total' → logprob: -5.971914291381836
    7. 's' → logprob: -6.221914291381836
    8. 'while' → logprob: -6.346914291381836
    9. 'sum' → logprob: -6.471914291381836
    10. 'count' → logprob: -6.846914291381836

Token 130: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.015752434730529785
    2. 'ifie' → logprob: -4.89075231552124
    3. 'if' → logprob: -5.01575231552124
    4. 'ification' → logprob: -7.01575231552124
    5. 'i' → logprob: -8.265752792358398
    6. 'ify' → logprob: -9.015752792358398
    7. 'ifiez' → logprob: -9.640752792358398
    8. 'ifi' → logprob: -10.015752792358398
    9. 'ifer' → logprob: -10.265752792358398
    10. '#' → logprob: -10.515752792358398

Token 131: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6007766127586365
    2. ' if' → logprob: -1.1007766723632812
    3. 'if' → logprob: -3.1007766723632812
    4. '<|end|>' → logprob: -3.4757766723632812
    5. '(' → logprob: -3.9757766723632812
    6. ')' → logprob: -5.475776672363281
    7. ' (' → logprob: -5.600776672363281
    8. 's' → logprob: -6.100776672363281
    9. '()' → logprob: -6.100776672363281
    10. ' si' → logprob: -6.100776672363281

Token 132: ' la' (ID: 557)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22642536461353302
    2. ' n' → logprob: -2.4764254093170166
    3. 'd' → logprob: -2.8514254093170166
    4. ' (' → logprob: -3.3514254093170166
    5. ' m' → logprob: -4.2264251708984375
    6. 'n' → logprob: -4.9764251708984375
    7. 'm' → logprob: -6.3514251708984375
    8. '(' → logprob: -6.9764251708984375
    9. '(n' → logprob: -7.3514251708984375
    10. ' ' → logprob: -7.4764251708984375

Token 133: ' valeur' (ID: 41664)
  Prédit: ' date'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' date' → logprob: -1.580252766609192
    2. 'date' → logprob: -1.705252766609192
    3. 'd' → logprob: -1.830252766609192
    4. ' valeur' → logprob: -2.3302526473999023
    5. 'distance' → logprob: -2.4552526473999023
    6. ' distance' → logprob: -2.4552526473999023
    7. 'diff' → logprob: -2.7052526473999023
    8. ' différence' → logprob: -3.4552526473999023
    9. 'val' → logprob: -3.5802526473999023
    10. ' somme' → logprob: -4.705252647399902

Token 134: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2501677870750427
    2. 'd' → logprob: -1.6251678466796875
    3. ' n' → logprob: -4.1251678466796875
    4. 'n' → logprob: -5.5001678466796875
    5. ' ' → logprob: -6.7501678466796875
    6. ' m' → logprob: -6.8751678466796875
    7. ' de' → logprob: -7.2501678466796875
    8. 's' → logprob: -7.2501678466796875
    9. 'm' → logprob: -8.000167846679688
    10. 'de' → logprob: -10.125167846679688

Token 135: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11706628650426865
    2. 'n' → logprob: -2.3670663833618164
    3. 'm' → logprob: -4.242066383361816
    4. ' d' → logprob: -6.242066383361816
    5. ' n' → logprob: -8.117066383361816
    6. ' m' → logprob: -9.742066383361816
    7. '(n' → logprob: -11.742066383361816
    8. 'abs' → logprob: -11.992066383361816
    9. ' ' → logprob: -12.117066383361816
    10. 's' → logprob: -12.492066383361816

Token 136: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.6502594947814941
    2. ' est' → logprob: -0.7752594947814941
    3. '>' → logprob: -4.900259494781494
    4. ' is' → logprob: -5.650259494781494
    5. 's' → logprob: -6.900259494781494
    6. '>=' → logprob: -7.775259494781494
    7. ' >=' → logprob: -7.900259494781494
    8. 'd' → logprob: -8.150259017944336
    9. ' >' → logprob: -8.150259017944336
    10. 'c' → logprob: -8.150259017944336

Token 137: ' exactement' (ID: 108701)
  Prédit: ' comprise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comprise' → logprob: -0.33704182505607605
    2. 'strict' → logprob: -1.8370418548583984
    3. ' entre' → logprob: -3.8370418548583984
    4. 'entre' → logprob: -3.9620418548583984
    5. ' compris' → logprob: -4.087041854858398
    6. 'dans' → logprob: -4.462041854858398
    7. ' dans' → logprob: -4.962041854858398
    8. '>' → logprob: -5.087041854858398
    9. 'com' → logprob: -5.337041854858398
    10. ' between' → logprob: -5.462041854858398

Token 138: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.6135358810424805
    2. 'n' → logprob: -1.6135358810424805
    3. 'entre' → logprob: -2.7385358810424805
    4. 'm' → logprob: -2.8635358810424805
    5. 'ég' → logprob: -3.1135358810424805
    6. '0' → logprob: -3.4885358810424805
    7. '1' → logprob: -3.9885358810424805
    8. ' entre' → logprob: -4.8635358810424805
    9. ' n' → logprob: -5.3635358810424805
    10. 'l' → logprob: -5.7385358810424805

Token 139: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0001427538663847372
    2. 'al' → logprob: -8.875143051147461
    3. 'a' → logprob: -13.750143051147461
    4. 'але' → logprob: -14.625143051147461
    5. '"' → logprob: -15.250143051147461
    6. '</' → logprob: -15.750143051147461
    7. '```' → logprob: -15.750143051147461
    8. '\' → logprob: -16.50014305114746
    9. '@' → logprob: -16.50014305114746
    10. '`' → logprob: -16.62514305114746

Token 140: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43486717343330383
    2. 'à' → logprob: -1.0598671436309814
    3. 'a' → logprob: -6.3098673820495605
    4. '=' → logprob: -6.6848673820495605
    5. 'to' → logprob: -6.9348673820495605
    6. ''à' → logprob: -7.1848673820495605
    7. ' a' → logprob: -7.9348673820495605
    8. 'au' → logprob: -8.059866905212402
    9. ' to' → logprob: -8.309866905212402
    10. ' ' → logprob: -8.934866905212402

Token 141: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3029841184616089
    2. 'n' → logprob: -2.0529842376708984
    3. 'm' → logprob: -2.3029842376708984
    4. '1' → logprob: -3.9279842376708984
    5. ' ' → logprob: -5.302984237670898
    6. '10' → logprob: -6.552984237670898
    7. '100' → logprob: -6.552984237670898
    8. 'l' → logprob: -6.677984237670898
    9. ' n' → logprob: -6.802984237670898
    10. ' m' → logprob: -7.177984237670898

Token 142: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.042048681527376175
    2. ' if' → logprob: -3.292048692703247
    3. '
' → logprob: -5.667048454284668
    4. ':' → logprob: -8.167048454284668
    5. ':
' → logprob: -9.292048454284668
    6. ' 
' → logprob: -9.792048454284668
    7. 'i' → logprob: -10.792048454284668
    8. '#' → logprob: -11.042048454284668
    9. '  
' → logprob: -11.042048454284668
    10. '```' → logprob: -11.417048454284668

Token 143: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018231185153126717
    2. ' if' → logprob: -4.018231391906738
    3. '
' → logprob: -10.143231391906738
    4. 'i' → logprob: -10.768231391906738
    5. ':' → logprob: -11.643231391906738
    6. ' 
' → logprob: -12.143231391906738
    7. '  
' → logprob: -13.768231391906738
    8. '```' → logprob: -14.018231391906738
    9. '#' → logprob: -14.143231391906738
    10. ':
' → logprob: -14.518231391906738

Token 144: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0005798388738185167
    2. 'd' → logprob: -7.500579833984375
    3. ' ' → logprob: -10.750579833984375
    4. ' ' → logprob: -12.125579833984375
    5. '  ' → logprob: -18.375579833984375
    6. ' ' → logprob: -18.875579833984375
    7. ' n' → logprob: -19.375579833984375
    8. 'n' → logprob: -19.875579833984375
    9. '	d' → logprob: -20.000579833984375
    10. ' ‌' → logprob: -20.125579833984375

Token 145: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006781569216400385
    2. '==' → logprob: -5.006781578063965
    3. ' ' → logprob: -10.631781578063965
    4. ' =' → logprob: -11.131781578063965
    5. '=' → logprob: -11.381781578063965
    6. ' ' → logprob: -11.756781578063965
    7. ' !=' → logprob: -12.006781578063965
    8. ')' → logprob: -13.881781578063965
    9. '.' → logprob: -15.506781578063965
    10. '0' → logprob: -15.631781578063965

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020678490400314
    2. ' ' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.97520637512207
    4. '۰' → logprob: -21.10020637512207
    5. '```' → logprob: -21.22520637512207
    6. '1' → logprob: -21.47520637512207
    7. ' ' → logprob: -21.60020637512207
    8. '  ' → logprob: -21.97520637512207
    9. '=' → logprob: -22.22520637512207
    10. ' 
' → logprob: -22.41270637512207

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -19.500059127807617
    4. ' ' → logprob: -20.500059127807617
    5. '０' → logprob: -20.875059127807617
    6. '٠' → logprob: -21.687559127807617
    7. '```' → logprob: -21.812559127807617
    8. ' ' → logprob: -21.812559127807617
    9. '00' → logprob: -22.312559127807617
    10. '1' → logprob: -22.312559127807617

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031836593989282846
    2. ' :' → logprob: -5.753183841705322
    3. ':
' → logprob: -12.128183364868164
    4. ',' → logprob: -16.628183364868164
    5. ' :
' → logprob: -16.628183364868164
    6. ' ' → logprob: -16.628183364868164
    7. ':return' → logprob: -16.878183364868164
    8. '):' → logprob: -17.128183364868164
    9. ' and' → logprob: -17.378183364868164
    10. ':**' → logprob: -17.503183364868164

Token 149: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05934300646185875
    2. '   ' → logprob: -2.934343099594116
    3. ':
' → logprob: -5.684342861175537
    4. ' :' → logprob: -7.184342861175537
    5. ' print' → logprob: -9.434343338012695
    6. ' ' → logprob: -10.434343338012695
    7. ' :
' → logprob: -10.434343338012695
    8. 'print' → logprob: -10.559343338012695
    9. ')' → logprob: -10.809343338012695
    10. '.' → logprob: -10.934343338012695

Token 150: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.027109408751130104
    2. 'print' → logprob: -3.652109384536743
    3. '   ' → logprob: -7.277109622955322
    4. '    ' → logprob: -10.277109146118164
    5. ' pass' → logprob: -10.652109146118164
    6. ' n' → logprob: -11.152109146118164
    7. ' ' → logprob: -11.652109146118164
    8. '    
' → logprob: -11.777109146118164
    9. ' 
' → logprob: -11.902109146118164
    10. ' #' → logprob: -12.027109146118164

Token 151: ' Si' (ID: 7832)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.16050875186920166
    2. 'print' → logprob: -1.9105087518692017
    3. '   ' → logprob: -8.91050910949707
    4. ' pass' → logprob: -9.78550910949707
    5. ' n' → logprob: -10.91050910949707
    6. ' ' → logprob: -11.66050910949707
    7. 'pass' → logprob: -11.66050910949707
    8. '#' → logprob: -11.91050910949707
    9. ' prin' → logprob: -12.03550910949707
    10. 'n' → logprob: -12.16050910949707

Token 152: ' c' (ID: 274)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.058778129518032074
    2. 'print' → logprob: -3.0587780475616455
    3. '   ' → logprob: -5.433778285980225
    4. ' ' → logprob: -6.058778285980225
    5. ' n' → logprob: -6.183778285980225
    6. 'n' → logprob: -7.183778285980225
    7. '    ' → logprob: -7.933778285980225
    8. ' ' → logprob: -9.058777809143066
    9. ' #' → logprob: -10.558777809143066
    10. '  ' → logprob: -10.558777809143066

Token 153: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.570515751838684
    2. 'on' → logprob: -1.695515751838684
    3. 'e' → logprob: -1.820515751838684
    4. ''est' → logprob: -2.0705156326293945
    5. 'ela' → logprob: -2.1955156326293945
    6. ''' → logprob: -2.8205156326293945
    7. 'es' → logprob: -3.0705156326293945
    8. 'ont' → logprob: -3.1955156326293945
    9. 'ette' → logprob: -4.9455156326293945
    10. '#' → logprob: -4.9455156326293945

Token 154: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.7533569931983948
    2. '   ' → logprob: -1.12835693359375
    3. ' print' → logprob: -3.00335693359375
    4. ' ' → logprob: -3.00335693359375
    5. 'True' → logprob: -3.75335693359375
    6. ' vrai' → logprob: -4.12835693359375
    7. ' le' → logprob: -4.25335693359375
    8. ' une' → logprob: -4.50335693359375
    9. ' la' → logprob: -4.50335693359375
    10. ' ' → logprob: -5.12835693359375

Token 155: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18677890300750732
    2. ' True' → logprob: -3.186779022216797
    3. '0' → logprob: -3.311779022216797
    4. 'True' → logprob: -3.436779022216797
    5. ' print' → logprob: -3.686779022216797
    6. 'n' → logprob: -3.936779022216797
    7. ' cas' → logprob: -5.311779022216797
    8. 'true' → logprob: -6.311779022216797
    9. ' ' → logprob: -6.686779022216797
    10. '1' → logprob: -6.686779022216797

Token 156: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04991123080253601
    2. ',' → logprob: -3.6749112606048584
    3. ' :' → logprob: -3.9249112606048584
    4. ':
' → logprob: -6.799911022186279
    5. ' print' → logprob: -7.299911022186279
    6. '   ' → logprob: -7.549911022186279
    7. 'print' → logprob: -7.549911022186279
    8. ' ,' → logprob: -7.924911022186279
    9. ' :
' → logprob: -8.299911499023438
    10. '.' → logprob: -9.299911499023438

Token 157: ' affect' (ID: 7902)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.040168147534132004
    2. 'print' → logprob: -3.290168046951294
    3. '   ' → logprob: -6.415168285369873
    4. ' 
' → logprob: -8.540167808532715
    5. '    
' → logprob: -9.790167808532715
    6. ' ' → logprob: -10.290167808532715
    7. '
' → logprob: -10.415167808532715
    8. ' n' → logprob: -10.540167808532715
    9. ' #' → logprob: -10.540167808532715
    10. '    ' → logprob: -10.790167808532715

Token 158: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00014442270912695676
    2. 'uer' → logprob: -9.750144004821777
    3. '   ' → logprob: -10.000144004821777
    4. 'e' → logprob: -10.375144004821777
    5. 'ation' → logprob: -12.375144004821777
    6. 'a' → logprob: -14.000144004821777
    7. 'r' → logprob: -14.000144004821777
    8. 'ner' → logprob: -14.625144004821777
    9. 'é' → logprob: -14.750144004821777
    10. 'u' → logprob: -15.000144004821777

Token 159: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8884696960449219
    2. ' n' → logprob: -1.3884696960449219
    3. '0' → logprob: -2.638469696044922
    4. 'n' → logprob: -2.763469696044922
    5. ' True' → logprob: -2.763469696044922
    6. ' m' → logprob: -3.513469696044922
    7. ' False' → logprob: -3.763469696044922
    8. '1' → logprob: -3.763469696044922
    9. ' la' → logprob: -4.388469696044922
    10. ' None' → logprob: -4.638469696044922

Token 160: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.0872985124588013
    2. ' string' → logprob: -1.4622985124588013
    3. ' value' → logprob: -2.8372983932495117
    4. 'val' → logprob: -3.3372983932495117
    5. ' ' → logprob: -3.3372983932495117
    6. ' variable' → logprob: -3.7122983932495117
    7. ' False' → logprob: -3.8372983932495117
    8. 'value' → logprob: -3.8372983932495117
    9. '1' → logprob: -3.9622983932495117
    10. ' print' → logprob: -4.087298393249512

Token 161: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4715079069137573
    2. ' de' → logprob: -1.5965079069137573
    3. ' ' → logprob: -1.7215079069137573
    4. '=' → logprob: -2.096508026123047
    5. '1' → logprob: -2.471508026123047
    6. ' =' → logprob: -3.221508026123047
    7. 'n' → logprob: -3.846508026123047
    8. ' à' → logprob: -4.221508026123047
    9. ' None' → logprob: -4.346508026123047
    10. ' m' → logprob: -4.346508026123047

Token 162: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0672574043273926
    2. 'm' → logprob: -1.3172574043273926
    3. ' n' → logprob: -2.0672574043273926
    4. '0' → logprob: -2.1922574043273926
    5. ' m' → logprob: -2.5672574043273926
    6. '1' → logprob: -3.4422574043273926
    7. ' ' → logprob: -3.6922574043273926
    8. '100' → logprob: -4.942257404327393
    9. '10' → logprob: -6.067257404327393
    10. 'None' → logprob: -6.442257404327393

Token 163: ' à' (ID: 1221)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.4167190790176392
    2. '+' → logprob: -1.4167190790176392
    3. ' +' → logprob: -1.4167190790176392
    4. ' *' → logprob: -2.1667189598083496
    5. ' à' → logprob: -3.6667189598083496
    6. ' to' → logprob: -3.6667189598083496
    7. ' /' → logprob: -3.9167189598083496
    8. ' ' → logprob: -4.29171895980835
    9. '   ' → logprob: -4.29171895980835
    10. 'to' → logprob: -4.54171895980835

Token 164: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.23689866065979004
    2. ' m' → logprob: -1.61189866065979
    3. 'n' → logprob: -5.236898422241211
    4. '0' → logprob: -6.111898422241211
    5. ' n' → logprob: -6.111898422241211
    6. ' ' → logprob: -7.361898422241211
    7. 'd' → logprob: -8.111898422241211
    8. '1' → logprob: -8.736898422241211
    9. 'l' → logprob: -8.861898422241211
    10. ' d' → logprob: -9.486898422241211

Token 165: ' variable' (ID: 11076)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010463099926710129
    2. 'print' → logprob: -5.135463237762451
    3. 'variable' → logprob: -6.135463237762451
    4. ' m' → logprob: -7.260463237762451
    5. 'result' → logprob: -7.635463237762451
    6. '0' → logprob: -8.010462760925293
    7. 'r' → logprob: -8.885462760925293
    8. ' variable' → logprob: -9.010462760925293
    9. 'v' → logprob: -9.260462760925293
    10. 'd' → logprob: -9.385462760925293

Token 166: ' p' (ID: 275)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19384229183197021
    2. ' m' → logprob: -1.8188422918319702
    3. 'result' → logprob: -4.69384241104126
    4. ' result' → logprob: -6.44384241104126
    5. 'd' → logprob: -7.06884241104126
    6. 'r' → logprob: -7.44384241104126
    7. '0' → logprob: -8.068841934204102
    8. 's' → logprob: -8.193841934204102
    9. 'n' → logprob: -8.318841934204102
    10. ' d' → logprob: -8.818841934204102

Token 167: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3992670476436615
    2. '
' → logprob: -2.1492669582366943
    3. '    
' → logprob: -2.1492669582366943
    4. ' =' → logprob: -3.0242669582366943
    5. 'p' → logprob: -4.024267196655273
    6. '=' → logprob: -4.149267196655273
    7. '   
' → logprob: -5.399267196655273
    8. ' 
' → logprob: -6.024267196655273
    9. '  
' → logprob: -6.274267196655273
    10. '.' → logprob: -7.149267196655273

Token 168: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5464692115783691
    2. '   ' → logprob: -1.0464692115783691
    3. ' p' → logprob: -2.671469211578369
    4. '    
' → logprob: -7.546469211578369
    5. ' 
' → logprob: -9.546468734741211
    6. '	p' → logprob: -10.421468734741211
    7. '    ' → logprob: -11.546468734741211
    8. '
' → logprob: -11.546468734741211
    9. '   
' → logprob: -11.921468734741211
    10. 'n' → logprob: -12.296468734741211

Token 169: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9037874937057495
    2. 'p' → logprob: -1.1537874937057495
    3. '   ' → logprob: -1.2787874937057495
    4. '    
' → logprob: -7.153787612915039
    5. ' 
' → logprob: -8.653787612915039
    6. '    ' → logprob: -9.153787612915039
    7. '  ' → logprob: -10.653787612915039
    8. '   
' → logprob: -11.403787612915039
    9. '	p' → logprob: -11.403787612915039
    10. ' ' → logprob: -11.528787612915039

Token 170: ' Cela' (ID: 44403)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4048226475715637
    2. '   ' → logprob: -1.279822587966919
    3. ' p' → logprob: -2.904822587966919
    4. '	p' → logprob: -11.40482234954834
    5. '  ' → logprob: -11.52982234954834
    6. '   ' → logprob: -11.65482234954834
    7. ' ' → logprob: -11.90482234954834
    8. '    
' → logprob: -12.02982234954834
    9. '
' → logprob: -12.02982234954834
    10. '    ' → logprob: -12.40482234954834

Token 171: ' signifie' (ID: 81149)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5429859161376953
    2. ' p' → logprob: -1.4179859161376953
    3. '
' → logprob: -2.7929859161376953
    4. '   ' → logprob: -3.0429859161376953
    5. '    
' → logprob: -3.5429859161376953
    6. 'n' → logprob: -3.6679859161376953
    7. ' 
' → logprob: -4.917985916137695
    8. '   
' → logprob: -6.542985916137695
    9. ' n' → logprob: -6.917985916137695
    10. '     
' → logprob: -7.667985916137695

Token 172: ' simplement' (ID: 45065)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.01619506999850273
    2. '   ' → logprob: -5.266195297241211
    3. 'que' → logprob: -5.391195297241211
    4. ' qu' → logprob: -5.516195297241211
    5. ' p' → logprob: -7.391195297241211
    6. ' that' → logprob: -7.641195297241211
    7. ' simplement' → logprob: -8.266195297241211
    8. ' ' → logprob: -8.641195297241211
    9. ' probablement' → logprob: -9.016195297241211
    10. 'qu' → logprob: -9.141195297241211

Token 173: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.03447180613875389
    2. '   ' → logprob: -4.0344719886779785
    3. ' p' → logprob: -4.4094719886779785
    4. 'p' → logprob: -6.1594719886779785
    5. ' that' → logprob: -7.1594719886779785
    6. 'que' → logprob: -7.9094719886779785
    7. ' qu' → logprob: -8.03447151184082
    8. ' ' → logprob: -8.65947151184082
    9. '    
' → logprob: -9.78447151184082
    10. '    ' → logprob: -9.90947151184082

Token 174: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.08898820728063583
    2. 'p' → logprob: -2.4639883041381836
    3. ' on' → logprob: -11.338988304138184
    4. ' ' → logprob: -11.963988304138184
    5. ' ' → logprob: -12.088988304138184
    6. ' la' → logprob: -12.463988304138184
    7. 'n' → logprob: -12.463988304138184
    8. 'le' → logprob: -13.088988304138184
    9. ' l' → logprob: -13.213988304138184
    10. ' n' → logprob: -13.213988304138184

Token 175: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002491595223546028
    2. '=' → logprob: -6.002491474151611
    3. '=p' → logprob: -12.62749195098877
    4. '=n' → logprob: -12.75249195098877
    5. ' ' → logprob: -13.37749195098877
    6. ' ' → logprob: -13.62749195098877
    7. ' is' → logprob: -13.87749195098877
    8. ' vaut' → logprob: -14.00249195098877
    9. ' equals' → logprob: -14.25249195098877
    10. ',' → logprob: -14.25249195098877

Token 176: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519342601299286
    2. 'n' → logprob: -1.501934289932251
    3. ' ' → logprob: -13.001934051513672
    4. ' ' → logprob: -13.126934051513672
    5. '	n' → logprob: -15.376934051513672
    6. '_n' → logprob: -16.126934051513672
    7. ' '' → logprob: -16.501934051513672
    8. 'l' → logprob: -16.876934051513672
    9. 'space' → logprob: -16.876934051513672
    10. '(n' → logprob: -16.876934051513672

Token 177: ' seront' (ID: 35024)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.14331339299678802
    2. 's' → logprob: -2.893313407897949
    3. 'ont' → logprob: -2.893313407897949
    4. ' seront' → logprob: -4.143313407897949
    5. ' vont' → logprob: -6.143313407897949
    6. ' ont' → logprob: -7.018313407897949
    7. ' =' → logprob: -7.143313407897949
    8. ' are' → logprob: -7.518313407897949
    9. ' font' → logprob: -7.643313407897949
    10. '   ' → logprob: -8.51831340789795

Token 178: ' ident' (ID: 3951)
  Prédit: ' ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.3634932041168213
    2. ' ident' → logprob: -1.2384932041168213
    3. 'ident' → logprob: -4.488492965698242
    4. 'ég' → logprob: -5.863492965698242
    5. 'égal' → logprob: -7.863492965698242
    6. ' les' → logprob: -9.113492965698242
    7. 'exact' → logprob: -9.738492965698242
    8. 'les' → logprob: -10.113492965698242
    9. ' exactement' → logprob: -10.238492965698242
    10. 'n' → logprob: -10.363492965698242

Token 179: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.007025088183581829
    2. 'que' → logprob: -5.757025241851807
    3. 'iques' → logprob: -5.882025241851807
    4. '#' → logprob: -9.007024765014648
    5. 'cal' → logprob: -9.007024765014648
    6. '```' → logprob: -9.132024765014648
    7. 'q' → logprob: -9.257024765014648
    8. 'qu' → logprob: -9.257024765014648
    9. 'tiques' → logprob: -9.757024765014648
    10. 'quement' → logprob: -9.882024765014648

Token 180: ' lorsque' (ID: 39361)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008308532647788525
    2. '    
' → logprob: -5.508308410644531
    3. '.' → logprob: -6.258308410644531
    4. '
' → logprob: -6.508308410644531
    5. 'p' → logprob: -8.008308410644531
    6. ',' → logprob: -8.133308410644531
    7. '.
' → logprob: -10.133308410644531
    8. '   
' → logprob: -10.133308410644531
    9. ',
' → logprob: -10.758308410644531
    10. '  ' → logprob: -11.008308410644531

Token 181: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6326766610145569
    2. ' d' → logprob: -0.7576766610145569
    3. ' ' → logprob: -10.25767707824707
    4. ' la' → logprob: -11.50767707824707
    5. ' p' → logprob: -11.75767707824707
    6. 'p' → logprob: -12.13267707824707
    7. ' le' → logprob: -12.75767707824707
    8. ' n' → logprob: -12.88267707824707
    9. 'n' → logprob: -13.00767707824707
    10. 'la' → logprob: -13.00767707824707

Token 182: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0175181832164526
    2. '==' → logprob: -4.142518043518066
    3. ' ' → logprob: -6.892518043518066
    4. '=' → logprob: -8.642518043518066
    5. ' !=' → logprob: -8.892518043518066
    6. ' ' → logprob: -10.017518043518066
    7. ' =' → logprob: -10.267518043518066
    8. ' est' → logprob: -10.767518043518066
    9. ')' → logprob: -11.517518043518066
    10. ' is' → logprob: -12.017518043518066

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3877669870853424
    2. ' ' → logprob: -1.13776695728302
    3. ' zéro' → logprob: -7.5127668380737305
    4. ' zero' → logprob: -8.51276683807373
    5. ' z' → logprob: -9.88776683807373
    6. 'z' → logprob: -10.26276683807373
    7. ' ' → logprob: -10.88776683807373
    8. 'zero' → logprob: -11.26276683807373
    9. '  ' → logprob: -11.51276683807373
    10. ' صفر' → logprob: -12.76276683807373

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. 'z' → logprob: -16.379619598388672
    4. '  ' → logprob: -16.879619598388672
    5. 'zero' → logprob: -17.004619598388672
    6. ' zéro' → logprob: -17.254619598388672
    7. '1' → logprob: -17.504619598388672
    8. ' zero' → logprob: -17.754619598388672
    9. '```' → logprob: -17.879619598388672
    10. ' ' → logprob: -18.004619598388672

Token 185: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004647403489798307
    2. '
' → logprob: -6.129647254943848
    3. '    
' → logprob: -6.379647254943848
    4. 'p' → logprob: -7.379647254943848
    5. '   
' → logprob: -10.379647254943848
    6. '.' → logprob: -10.879647254943848
    7. '  
' → logprob: -11.129647254943848
    8. ',' → logprob: -11.254647254943848
    9. '\n' → logprob: -11.504647254943848
    10. '       ' → logprob: -11.504647254943848

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048751551657915115
    2. 'p' → logprob: -3.7987515926361084
    3. '    
' → logprob: -4.423751354217529
    4. '
' → logprob: -4.798751354217529
    5. ' p' → logprob: -5.673751354217529
    6. ' 
' → logprob: -6.923751354217529
    7. '   
' → logprob: -8.798751831054688
    8. '  
' → logprob: -9.173751831054688
    9. '\n' → logprob: -9.423751831054688
    10. 'n' → logprob: -9.423751831054688

Token 187: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07883956283330917
    2. 'p' (adapté à ' p') → logprob: -2.8288395404815674
    3. ' p' → logprob: -4.9538397789001465
    4. '    
' → logprob: -5.0788397789001465
    5. '
' → logprob: -5.8288397789001465
    6. ' 
' → logprob: -8.328839302062988
    7. '	p' → logprob: -9.578839302062988
    8. '       ' → logprob: -9.828839302062988
    9. '   
' → logprob: -10.078839302062988
    10. '  ' → logprob: -10.953839302062988

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023214161396027
    2. '=' → logprob: -1.9102321863174438
    3. ' ' → logprob: -12.410232543945312
    4. '=p' → logprob: -12.785232543945312
    5. '   ' → logprob: -15.035232543945312
    6. ' =
' → logprob: -15.535232543945312
    7. ' ' → logprob: -15.660232543945312
    8. ',' → logprob: -15.910232543945312
    9. '=n' → logprob: -15.910232543945312
    10. ' p' → logprob: -16.785232543945312

Token 189: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519339919090271
    2. ' n' → logprob: -1.5019340515136719
    3. '	n' → logprob: -12.251934051513672
    4. ' ' → logprob: -16.126934051513672
    5. '   ' → logprob: -16.751934051513672
    6. ' ' → logprob: -18.251934051513672
    7. '_n' → logprob: -18.626934051513672
    8. ' 
' → logprob: -19.126934051513672
    9. ',n' → logprob: -19.501934051513672
    10. '(n' → logprob: -19.501934051513672

Token 190: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2080056220293045
    2. 'elif' → logprob: -2.083005666732788
    3. ' else' → logprob: -2.833005666732788
    4. ' elif' → logprob: -6.333005428314209
    5. '+' → logprob: -7.458005428314209
    6. '
' → logprob: -7.708005428314209
    7. '<|end|>' → logprob: -8.083005905151367
    8. '*' → logprob: -8.083005905151367
    9. ';' → logprob: -8.208005905151367
    10. '#' → logprob: -9.083005905151367

Token 191: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3317530155181885
    2. 'elif' → logprob: -1.3317530155181885
    3. ' else' → logprob: -4.331752777099609
    4. '<|end|>' → logprob: -5.581752777099609
    5. ' elif' → logprob: -7.456752777099609
    6. '
' → logprob: -8.08175277709961
    7. '    
' → logprob: -9.20675277709961
    8. 'e' → logprob: -9.70675277709961
    9. 'el' → logprob: -9.70675277709961
    10. ')' → logprob: -9.83175277709961

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01128182839602232
    2. ':
' → logprob: -4.511281967163086
    3. ' :' → logprob: -8.761281967163086
    4. '   ' → logprob: -9.761281967163086
    5. ' :
' → logprob: -11.011281967163086
    6. ',' → logprob: -13.261281967163086
    7. ':
' → logprob: -14.636281967163086
    8. ':

' → logprob: -15.136281967163086
    9. '    ' → logprob: -15.761281967163086
    10. '=' → logprob: -15.886281967163086

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2042369395494461
    2. ' p' → logprob: -1.8292369842529297
    3. 'p' → logprob: -4.32923698425293
    4. '    ' → logprob: -5.57923698425293
    5. ' n' → logprob: -6.32923698425293
    6. ' (' → logprob: -6.45423698425293
    7. 'n' → logprob: -7.20423698425293
    8. '(' → logprob: -7.32923698425293
    9. '    
' → logprob: -7.45423698425293
    10. ' ' → logprob: -8.20423698425293

Token 194: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6220590472221375
    2. 'p' → logprob: -1.2470591068267822
    3. '   ' → logprob: -1.7470591068267822
    4. '    ' → logprob: -8.122058868408203
    5. ' ' → logprob: -8.372058868408203
    6. '#' (adapté à ' #') → logprob: -8.372058868408203
    7. ' #' → logprob: -8.872058868408203
    8. '    
' → logprob: -8.872058868408203
    9. '  ' → logprob: -9.497058868408203
    10. ' if' → logprob: -9.747058868408203

Token 195: ' Dans' (ID: 22082)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.46413612365722656
    2. 'p' → logprob: -1.0891361236572266
    3. '   ' → logprob: -3.5891361236572266
    4. '#' → logprob: -5.464136123657227
    5. ' #' → logprob: -6.214136123657227
    6. ' if' → logprob: -7.839136123657227
    7. 'if' → logprob: -8.839136123657227
    8. '    ' → logprob: -9.339136123657227
    9. ' ' → logprob: -9.464136123657227
    10. '    
' → logprob: -9.964136123657227

Token 196: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8543519377708435
    2. ' ce' → logprob: -1.8543519973754883
    3. ' p' → logprob: -2.7293519973754883
    4. ' ' → logprob: -2.7293519973754883
    5. ' n' → logprob: -2.8543519973754883
    6. ' m' → logprob: -2.9793519973754883
    7. ' la' → logprob: -3.6043519973754883
    8. '    ' → logprob: -3.7293519973754883
    9. ':' → logprob: -3.8543519973754883
    10. 'n' → logprob: -4.104351997375488

Token 197: ' cas' (ID: 2108)
  Prédit: ' cas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.2505562901496887
    2. 'cas' → logprob: -2.625556230545044
    3. 'if' → logprob: -3.125556230545044
    4. '   ' → logprob: -3.500556230545044
    5. 'else' → logprob: -3.500556230545044
    6. '#' → logprob: -4.375556468963623
    7. 'm' → logprob: -5.250556468963623
    8. 'n' → logprob: -5.375556468963623
    9. 'case' → logprob: -5.500556468963623
    10. 'p' → logprob: -5.625556468963623

Token 198: ' contraire' (ID: 80029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.348758339881897
    2. ' ' → logprob: -1.473758339881897
    3. ' où' → logprob: -1.473758339881897
    4. ' where' → logprob: -2.0987582206726074
    5. '   ' → logprob: -2.8487582206726074
    6. ' ,' → logprob: -3.2237582206726074
    7. ' d' → logprob: -3.9737582206726074
    8. 'où' → logprob: -4.598758220672607
    9. '  ' → logprob: -4.973758220672607
    10. '    ' → logprob: -5.098758220672607

Token 199: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13843493163585663
    2. '   ' → logprob: -2.138434886932373
    3. ',' → logprob: -4.888434886932373
    4. ' :' → logprob: -5.888434886932373
    5. ':
' → logprob: -7.638434886932373
    6. '    ' → logprob: -8.013435363769531
    7. '       ' → logprob: -9.138435363769531
    8. '    
' → logprob: -10.013435363769531
    9. ' ,' → logprob: -10.263435363769531
    10. ' :
' → logprob: -10.263435363769531

Token 200: 'c' (ID: 66)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6557500958442688
    2. ' p' → logprob: -1.155750036239624
    3. ' d' → logprob: -3.280750036239624
    4. '    ' → logprob: -3.405750036239624
    5. 'p' → logprob: -3.905750036239624
    6. ' )' → logprob: -3.905750036239624
    7. ' ),' → logprob: -4.155750274658203
    8. ')' → logprob: -4.155750274658203
    9. 'd' → logprob: -4.655750274658203
    10. ' ' → logprob: -5.280750274658203

Token 201: ''est' (ID: 6616)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9050478339195251
    2. 'e' → logprob: -1.28004789352417
    3. 'd' → logprob: -1.65504789352417
    4. '   ' → logprob: -2.78004789352417
    5. ' ' → logprob: -4.40504789352417
    6. ''est' → logprob: -5.03004789352417
    7. '  ' → logprob: -5.15504789352417
    8. ''' → logprob: -5.28004789352417
    9. '#' → logprob: -5.40504789352417
    10. 'on' → logprob: -5.65504789352417

Token 202: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2889010012149811
    2. '  ' → logprob: -2.6639010906219482
    3. 'd' → logprob: -3.5389010906219482
    4. ' d' → logprob: -3.5389010906219482
    5. '-à' → logprob: -3.6639010906219482
    6. '    ' → logprob: -3.9139010906219482
    7. 'n' → logprob: -4.538900852203369
    8. ' que' → logprob: -4.788900852203369
    9. ' ' → logprob: -4.788900852203369
    10. ' la' → logprob: -5.038900852203369

Token 203: '-dire' (ID: 76064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9113205075263977
    2. '0' → logprob: -1.536320447921753
    3. 'd' → logprob: -2.036320447921753
    4. '-à' → logprob: -2.411320447921753
    5. '   ' → logprob: -3.661320447921753
    6. 'm' → logprob: -3.911320447921753
    7. ''à' → logprob: -4.036320686340332
    8. 'pas' → logprob: -4.036320686340332
    9. ' ' → logprob: -4.161320686340332
    10. 'l' → logprob: -4.411320686340332

Token 204: ' si' (ID: 1784)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3249211609363556
    2. '   ' → logprob: -1.9499211311340332
    3. ' d' → logprob: -2.324921131134033
    4. 'd' → logprob: -3.824921131134033
    5. ' lorsque' → logprob: -5.449921131134033
    6. ' ' → logprob: -6.074921131134033
    7. ' si' → logprob: -6.324921131134033
    8. 'que' → logprob: -6.574921131134033
    9. ' if' → logprob: -6.574921131134033
    10. '    ' → logprob: -6.949921131134033

Token 205: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03833109512925148
    2. 'd' → logprob: -3.2883310317993164
    3. ' ' → logprob: -8.288331031799316
    4. ' p' → logprob: -12.038331031799316
    5. ' ' → logprob: -12.038331031799316
    6. '  ' → logprob: -12.163331031799316
    7. ')' → logprob: -12.538331031799316
    8. ' not' → logprob: -12.663331031799316
    9. ' m' → logprob: -12.913331031799316
    10. '	d' → logprob: -13.225831031799316

Token 206: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.004346686881035566
    2. '!=' → logprob: -5.62934684753418
    3. ' ' → logprob: -7.50434684753418
    4. ' >' → logprob: -9.12934684753418
    5. '   ' → logprob: -10.87934684753418
    6. ')' → logprob: -11.12934684753418
    7. ' <' → logprob: -11.50434684753418
    8. '>' → logprob: -11.50434684753418
    9. ' )' → logprob: -11.75434684753418
    10. ' ' → logprob: -11.75434684753418

Token 207: ''est' (ID: 6616)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.14607727527618408
    2. '!=' → logprob: -2.0210771560668945
    3. ' ' → logprob: -5.7710771560668945
    4. '=' → logprob: -9.646077156066895
    5. ' ' → logprob: -10.021077156066895
    6. ' pas' → logprob: -10.146077156066895
    7. '>' → logprob: -10.146077156066895
    8. ')' → logprob: -10.396077156066895
    9. '!' → logprob: -11.646077156066895
    10. ' est' → logprob: -11.771077156066895

Token 208: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.008661605417728424
    2. 'pas' → logprob: -4.75866174697876
    3. '_pas' → logprob: -10.758661270141602
    4. ' not' → logprob: -11.383661270141602
    5. '=' → logprob: -12.383661270141602
    6. '>' → logprob: -12.758661270141602
    7. 'Pas' → logprob: -13.508661270141602
    8. '0' → logprob: -13.883661270141602
    9. ' ' → logprob: -13.883661270141602
    10. ' !=' → logprob: -14.133661270141602

Token 209: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6481235027313232
    2. ' égal' → logprob: -1.1481235027313232
    3. '=' → logprob: -2.5231235027313232
    4. ' ' → logprob: -3.7731235027313232
    5. ' ég' → logprob: -3.7731235027313232
    6. 'égal' → logprob: -3.8981235027313232
    7. ' =' → logprob: -5.023123741149902
    8. ' pas' → logprob: -6.148123741149902
    9. ' equal' → logprob: -6.773123741149902
    10. ' zero' → logprob: -7.648123741149902

Token 210: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05291121453046799
    2. 'à' → logprob: -3.0529112815856934
    3. ' ' → logprob: -5.552911281585693
    4. ' to' → logprob: -9.302910804748535
    5. '   ' → logprob: -9.427910804748535
    6. ' a' → logprob: -9.552910804748535
    7. '0' → logprob: -10.177910804748535
    8. ''à' → logprob: -10.302910804748535
    9. 'to' → logprob: -10.552910804748535
    10. '=' → logprob: -10.677910804748535

Token 211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03366345167160034
    2. ' ' → logprob: -3.408663511276245
    3. '1' → logprob: -11.408663749694824
    4. ' zero' → logprob: -13.658663749694824
    5. ')' → logprob: -14.033663749694824
    6. '  ' → logprob: -14.283663749694824
    7. '=' → logprob: -14.346163749694824
    8. ' ' → logprob: -14.783663749694824
    9. ' zéro' → logprob: -15.158663749694824
    10. 'zero' → logprob: -15.283663749694824

Token 212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '=' → logprob: -17.250335693359375
    4. '1' → logprob: -17.375335693359375
    5. ' ' → logprob: -17.500335693359375
    6. '   ' → logprob: -17.750335693359375
    7. '  ' → logprob: -17.750335693359375
    8. ')' → logprob: -18.000335693359375
    9. 'd' → logprob: -18.125335693359375
    10. 'n' → logprob: -18.375335693359375

Token 213: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.47551530599594116
    2. '):
' → logprob: -1.725515365600586
    3. '):' → logprob: -2.225515365600586
    4. '   ' → logprob: -2.475515365600586
    5. ':' → logprob: -5.725515365600586
    6. ' ),' → logprob: -5.975515365600586
    7. '),
' → logprob: -7.100515365600586
    8. ' ):
' → logprob: -7.350515365600586
    9. ')' → logprob: -7.850515365600586
    10. ' ):' → logprob: -8.975515365600586

Token 214: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41394978761672974
    2. ' p' → logprob: -1.163949728012085
    3. 'p' → logprob: -3.663949728012085
    4. '    ' → logprob: -7.413949966430664
    5. '    
' → logprob: -9.413949966430664
    6. '       ' → logprob: -9.538949966430664
    7. '   ' → logprob: -9.663949966430664
    8. '
' → logprob: -9.913949966430664
    9. '  ' → logprob: -10.163949966430664
    10. ' ' → logprob: -10.288949966430664

Token 215: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.002570544835180044
    2. '   ' → logprob: -6.002570629119873
    3. 'uler' → logprob: -9.627570152282715
    4. '#' → logprob: -12.127570152282715
    5. '  ' → logprob: -12.877570152282715
    6. ' p' → logprob: -13.127570152282715
    7. '=' → logprob: -13.252570152282715
    8. 'r' → logprob: -13.377570152282715
    9. ':' → logprob: -13.377570152282715
    10. 'p' → logprob: -13.502570152282715

Token 216: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5713726282119751
    2. ' p' → logprob: -1.571372628211975
    3. ' (' → logprob: -2.4463725090026855
    4. 'n' → logprob: -3.1963725090026855
    5. ' n' → logprob: -3.1963725090026855
    6. '(n' → logprob: -3.5713725090026855
    7. 'm' → logprob: -4.8213725090026855
    8. '(p' → logprob: -4.9463725090026855
    9. ' m' → logprob: -5.3213725090026855
    10. '(m' → logprob: -5.3213725090026855

Token 217: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062037598341703415
    2. '=' → logprob: -2.812037706375122
    3. ' ' → logprob: -10.687037467956543
    4. '   ' → logprob: -10.937037467956543
    5. ',' → logprob: -11.437037467956543
    6. 'p' → logprob: -11.687037467956543
    7. '=p' → logprob: -12.562037467956543
    8. '=n' → logprob: -13.687037467956543
    9. ' p' → logprob: -13.812037467956543
    10. ' ' → logprob: -14.312037467956543

Token 218: ' suit' (ID: 15170)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15459080040454865
    2. ' n' → logprob: -2.5295908451080322
    3. '(n' → logprob: -3.0295908451080322
    4. 'm' → logprob: -4.904590606689453
    5. ' (' → logprob: -5.279590606689453
    6. '(m' → logprob: -6.779590606689453
    7. '(' → logprob: -7.654590606689453
    8. ' m' → logprob: -7.654590606689453
    9. 'p' → logprob: -8.404590606689453
    10. '   ' → logprob: -9.279590606689453

Token 219: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7400377988815308
    2. ' n' → logprob: -1.7400377988815308
    3. ' p' → logprob: -1.9900377988815308
    4. ' (' → logprob: -2.6150379180908203
    5. ':' → logprob: -3.4900379180908203
    6. ' =' → logprob: -3.4900379180908203
    7. 'n' → logprob: -3.6150379180908203
    8. 'p' → logprob: -4.11503791809082
    9. '(n' → logprob: -4.61503791809082
    10. '    ' → logprob: -5.24003791809082

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4443880617618561
    2. ' p' → logprob: -2.1943881511688232
    3. ' n' → logprob: -2.4443881511688232
    4. 'n' → logprob: -3.0693881511688232
    5. '(n' → logprob: -3.1943881511688232
    6. ' (' → logprob: -3.4443881511688232
    7. 'p' → logprob: -3.6943881511688232
    8. '    ' → logprob: -5.194387912750244
    9. '(p' → logprob: -5.444387912750244
    10. '(' → logprob: -6.444387912750244

Token 221: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.174543023109436
    2. ' (' → logprob: -1.674543023109436
    3. '(n' → logprob: -1.924543023109436
    4. 'n' → logprob: -1.924543023109436
    5. ' p' → logprob: -2.2995429039001465
    6. ' n' → logprob: -2.2995429039001465
    7. '   ' → logprob: -5.2995429039001465
    8. '(p' → logprob: -5.5495429039001465
    9. 'm' → logprob: -7.7995429039001465
    10. '(m' → logprob: -7.9245429039001465

Token 222: ' Mult' (ID: 15431)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28358882665634155
    2. ' p' → logprob: -1.6585888862609863
    3. ' (' → logprob: -3.7835888862609863
    4. '(n' → logprob: -4.033588886260986
    5. 'n' → logprob: -4.908588886260986
    6. '   ' → logprob: -5.408588886260986
    7. ' n' → logprob: -6.033588886260986
    8. '(p' → logprob: -6.533588886260986
    9. 'm' → logprob: -9.533588409423828
    10. '(m' → logprob: -10.033588409423828

Token 223: 'iplier' (ID: 30777)
  Prédit: 'ipl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ipl' → logprob: -0.741010844707489
    2. 'p' → logprob: -1.9910109043121338
    3. ' =' → logprob: -1.9910109043121338
    4. 'ip' → logprob: -2.366010904312134
    5. ' n' → logprob: -3.366010904312134
    6. 'n' → logprob: -3.491010904312134
    7. '   ' → logprob: -3.741010904312134
    8. '(n' → logprob: -4.116010665893555
    9. 'iplier' → logprob: -4.491010665893555
    10. ' p' → logprob: -4.866010665893555

Token 224: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7791356444358826
    2. 'n' → logprob: -0.9041356444358826
    3. ' m' → logprob: -3.2791357040405273
    4. 'm' → logprob: -3.5291357040405273
    5. ' (' → logprob: -3.9041357040405273
    6. '(n' → logprob: -3.9041357040405273
    7. ' p' → logprob: -4.279135704040527
    8. 'p' → logprob: -4.654135704040527
    9. '(m' → logprob: -6.029135704040527
    10. '(' → logprob: -6.529135704040527

Token 225: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4368787109851837
    2. 'm' → logprob: -1.4368786811828613
    3. ' n' → logprob: -3.3118786811828613
    4. '(n' → logprob: -3.3118786811828613
    5. ' m' → logprob: -4.311878681182861
    6. '(m' → logprob: -4.686878681182861
    7. ' (' → logprob: -4.936878681182861
    8. 'p' → logprob: -5.061878681182861
    9. '(' → logprob: -5.311878681182861
    10. ' p' → logprob: -7.561878681182861

Token 226: ' de' (ID: 334)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6677103638648987
    2. 'n' → logprob: -1.167710304260254
    3. 'p' → logprob: -2.792710304260254
    4. ' m' → logprob: -3.042710304260254
    5. ' n' → logprob: -3.667710304260254
    6. '(n' → logprob: -4.542710304260254
    7. '(m' → logprob: -4.792710304260254
    8. '(' → logprob: -5.292710304260254
    9. ' p' → logprob: -5.417710304260254
    10. ' (' → logprob: -6.042710304260254

Token 227: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19867342710494995
    2. 'n' → logprob: -1.9486734867095947
    3. ' m' → logprob: -4.448673248291016
    4. '(m' → logprob: -4.573673248291016
    5. '(n' → logprob: -4.823673248291016
    6. ' n' → logprob: -5.698673248291016
    7. '(' → logprob: -6.198673248291016
    8. 'p' → logprob: -7.323673248291016
    9. ' (' → logprob: -7.573673248291016
    10. 'd' → logprob: -7.698673248291016

Token 228: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8600664734840393
    2. ' par' → logprob: -1.1100664138793945
    3. ' *' → logprob: -1.8600664138793945
    4. 'par' → logprob: -2.7350664138793945
    5. '+' → logprob: -4.9850664138793945
    6. ' by' → logprob: -5.2350664138793945
    7. '*p' → logprob: -5.8600664138793945
    8. 'by' → logprob: -5.9850664138793945
    9. '*m' → logprob: -6.1100664138793945
    10. ' +' → logprob: -6.3600664138793945

Token 229: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2660858929157257
    2. ' m' → logprob: -2.3910858631134033
    3. '(m' → logprob: -2.5160858631134033
    4. '(' → logprob: -3.8910858631134033
    5. ' (' → logprob: -4.516086101531982
    6. 'd' → logprob: -4.766086101531982
    7. '2' → logprob: -5.016086101531982
    8. '10' → logprob: -5.266086101531982
    9. 'pow' → logprob: -6.016086101531982
    10. ' d' → logprob: -6.391086101531982

Token 230: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1681494414806366
    2. 'd' → logprob: -2.918149471282959
    3. '(m' → logprob: -3.168149471282959
    4. '(' → logprob: -3.668149471282959
    5. '2' → logprob: -4.293149471282959
    6. '10' → logprob: -4.418149471282959
    7. '(d' → logprob: -6.168149471282959
    8. 'pow' → logprob: -6.668149471282959
    9. '3' → logprob: -7.418149471282959
    10. '100' → logprob: -7.543149471282959

Token 231: '.
' (ID: 558)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008886954747140408
    2. '*' → logprob: -4.758886814117432
    3. '*p' → logprob: -8.38388729095459
    4. ' ' → logprob: -11.13388729095459
    5. '*n' → logprob: -11.13388729095459
    6. ' ' → logprob: -11.75888729095459
    7. '   ' → logprob: -13.13388729095459
    8. ',' → logprob: -13.25888729095459
    9. ' *
' → logprob: -14.13388729095459
    10. 'p' → logprob: -14.88388729095459

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40129154920578003
    2. ' p' → logprob: -1.2762916088104248
    3. 'p' → logprob: -3.151291608810425
    4. '    
' → logprob: -5.151291370391846
    5. '  
' → logprob: -6.901291370391846
    6. '*' → logprob: -7.651291370391846
    7. ' 
' → logprob: -7.901291370391846
    8. '*p' → logprob: -8.776291847229004
    9. '   
' → logprob: -8.776291847229004
    10. ',' → logprob: -9.026291847229004

Token 233: ' #' (ID: 1069)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12423671036958694
    2. 'p' → logprob: -2.249236822128296
    3. '   ' → logprob: -4.874236583709717
    4. ' ' → logprob: -5.999236583709717
    5. ' 
' → logprob: -7.874236583709717
    6. '  
' → logprob: -8.499237060546875
    7. '    
' → logprob: -8.499237060546875
    8. '2' → logprob: -9.124237060546875
    9. ' ' → logprob: -9.749237060546875
    10. '    ' → logprob: -9.999237060546875

Token 234: ' Sou' (ID: 17228)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4073422849178314
    2. 'p' → logprob: -1.1573423147201538
    3. '   ' → logprob: -3.9073421955108643
    4. ' ' → logprob: -9.782341957092285
    5. '    
' → logprob: -10.907341957092285
    6. '       ' → logprob: -11.282341957092285
    7. '	p' → logprob: -11.282341957092285
    8. '    ' → logprob: -11.532341957092285
    9. '  ' → logprob: -11.782341957092285
    10. ' ' → logprob: -11.907341957092285

Token 235: 'stra' (ID: 14867)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.1531045287847519
    2. 'r' → logprob: -2.153104543685913
    3. 'stra' → logprob: -4.778104305267334
    4. 'm' → logprob: -4.778104305267334
    5. 'str' → logprob: -6.028104305267334
    6. 'met' → logprob: -6.778104305267334
    7. 'b' → logprob: -7.278104305267334
    8. 'mm' → logprob: -7.278104305267334
    9. 's' → logprob: -7.653104305267334
    10. 'p' → logprob: -7.653104305267334

Token 236: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.4123491644859314
    2. 'it' → logprob: -1.7873492240905762
    3. '   ' → logprob: -2.662349224090576
    4. 'irer' → logprob: -3.412349224090576
    5. 'ct' → logprob: -3.662349224090576
    6. 'iter' → logprob: -4.287349224090576
    7. 'itre' → logprob: -4.412349224090576
    8. 'ir' → logprob: -5.662349224090576
    9. 'i' → logprob: -6.162349224090576
    10. 'ction' → logprob: -6.537349224090576

Token 237: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1865869164466858
    2. 'd' → logprob: -2.311586856842041
    3. ' m' → logprob: -2.811586856842041
    4. 'm' → logprob: -4.936586856842041
    5. ' ' → logprob: -6.686586856842041
    6. ' (' → logprob: -6.811586856842041
    7. '2' → logprob: -7.686586856842041
    8. '(' → logprob: -8.0615873336792
    9. ' p' → logprob: -8.3115873336792
    10. ' n' → logprob: -8.8115873336792

Token 238: ' ce' (ID: 2357)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5051729083061218
    2. 'm' → logprob: -1.0051729679107666
    3. ' (' → logprob: -4.8801727294921875
    4. '(m' → logprob: -4.8801727294921875
    5. '(' → logprob: -5.3801727294921875
    6. ' ' → logprob: -5.7551727294921875
    7. '2' → logprob: -6.2551727294921875
    8. ' n' → logprob: -6.2551727294921875
    9. ' p' → logprob: -7.0051727294921875
    10. 'p' → logprob: -7.5051727294921875

Token 239: ' résultat' (ID: 62556)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.27649861574172974
    2. 'm' → logprob: -1.651498556137085
    3. ' (' → logprob: -4.026498794555664
    4. ' p' → logprob: -4.401498794555664
    5. ' ' → logprob: -4.901498794555664
    6. ' n' → logprob: -5.276498794555664
    7. 'p' → logprob: -6.026498794555664
    8. '(' → logprob: -6.776498794555664
    9. 'n' → logprob: -6.776498794555664
    10. '1' → logprob: -7.151498794555664

Token 240: ' le' (ID: 505)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1041072607040405
    2. ' m' → logprob: -1.7291072607040405
    3. ' ' → logprob: -1.9791072607040405
    4. ' p' → logprob: -1.9791072607040405
    5. ' n' → logprob: -2.60410737991333
    6. 'd' → logprob: -2.97910737991333
    7. ',' → logprob: -4.60410737991333
    8. '*' → logprob: -4.60410737991333
    9. 'm' → logprob: -4.60410737991333
    10. ' (' → logprob: -4.72910737991333

Token 241: ' double' (ID: 3503)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10396874696016312
    2. ' m' → logprob: -2.353968858718872
    3. 'd' → logprob: -5.853968620300293
    4. ' d' → logprob: -7.478968620300293
    5. '1' → logprob: -9.478968620300293
    6. ' (' → logprob: -9.603968620300293
    7. '2' → logprob: -10.103968620300293
    8. '(' → logprob: -10.103968620300293
    9. ' ' → logprob: -10.228968620300293
    10. '(m' → logprob: -10.853968620300293

Token 242: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01036800816655159
    2. 'm' → logprob: -5.5103678703308105
    3. ' m' → logprob: -5.6353678703308105
    4. 'de' → logprob: -7.2603678703308105
    5. ' of' → logprob: -7.6353678703308105
    6. '*' → logprob: -7.8853678703308105
    7. ' ' → logprob: -8.010368347167969
    8. ' d' → logprob: -9.010368347167969
    9. ' des' → logprob: -9.385368347167969
    10. 's' → logprob: -9.510368347167969

Token 243: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6611630320549011
    2. 'd' → logprob: -1.036163091659546
    3. ' m' → logprob: -2.411163091659546
    4. ' d' → logprob: -3.286163091659546
    5. '(m' → logprob: -7.536162853240967
    6. ' la' → logprob: -7.661162853240967
    7. 'l' → logprob: -7.911162853240967
    8. '(' → logprob: -9.411163330078125
    9. '(d' → logprob: -9.536163330078125
    10. ' (' → logprob: -9.536163330078125

Token 244: ' valeur' (ID: 41664)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0034874621778726578
    2. 'd' → logprob: -6.253487586975098
    3. ' m' → logprob: -6.628487586975098
    4. '(m' → logprob: -9.003487586975098
    5. 'p' → logprob: -10.503487586975098
    6. 'val' → logprob: -10.878487586975098
    7. 'n' → logprob: -10.878487586975098
    8. '(' → logprob: -11.878487586975098
    9. ' d' → logprob: -12.065987586975098
    10. '```' → logprob: -13.003487586975098

Token 245: ' de' (ID: 334)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11326222866773605
    2. ' de' → logprob: -2.738262176513672
    3. ' m' → logprob: -3.738262176513672
    4. 'de' → logprob: -4.738262176513672
    5. 'd' → logprob: -4.863262176513672
    6. '(m' → logprob: -6.738262176513672
    7. ' d' → logprob: -7.988262176513672
    8. 'n' → logprob: -8.488262176513672
    9. ' ' → logprob: -9.488262176513672
    10. ' of' → logprob: -9.613262176513672

Token 246: ' d' (ID: 272)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17259730398654938
    2. ' m' → logprob: -2.1725974082946777
    3. 'd' → logprob: -3.2975974082946777
    4. ' d' → logprob: -4.922597408294678
    5. 'n' → logprob: -8.67259693145752
    6. ' n' → logprob: -9.92259693145752
    7. '(m' → logprob: -10.04759693145752
    8. 'p' → logprob: -10.17259693145752
    9. ' ' → logprob: -10.54759693145752
    10. 'l' → logprob: -11.73509693145752

Token 247: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28875166177749634
    2. '*' → logprob: -2.0387516021728516
    3. '*p' → logprob: -2.9137516021728516
    4. '   ' → logprob: -3.1637516021728516
    5. 'p' → logprob: -4.413751602172852
    6. '.' → logprob: -5.788751602172852
    7. ' ' → logprob: -6.413751602172852
    8. ' *
' → logprob: -6.663751602172852
    9. ' p' → logprob: -6.663751602172852
    10. '
' → logprob: -7.038751602172852

Token 248: 'c' (ID: 66)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2947003245353699
    2. ' ' → logprob: -1.5447003841400146
    3. ' d' → logprob: -3.9197003841400146
    4. ' p' → logprob: -4.9197001457214355
    5. 'd' → logprob: -5.2947001457214355
    6. '*' → logprob: -5.7947001457214355
    7. '   ' → logprob: -6.2947001457214355
    8. ' *' → logprob: -6.2947001457214355
    9. 'p' → logprob: -6.7947001457214355
    10. ')' → logprob: -8.044700622558594

Token 249: ''est' (ID: 6616)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3800716698169708
    2. '2' → logprob: -2.2550716400146484
    3. 'omme' → logprob: -2.3800716400146484
    4. ''est' → logprob: -3.3800716400146484
    5. '#' → logprob: -4.505071640014648
    6. '*d' → logprob: -4.630071640014648
    7. 'o' → logprob: -5.005071640014648
    8. ' *' → logprob: -5.130071640014648
    9. 'on' → logprob: -5.380071640014648
    10. 'd' → logprob: -5.505071640014648

Token 250: '-à' (ID: 56297)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17963746190071106
    2. '-à' → logprob: -2.4296374320983887
    3. ' ' → logprob: -3.3046374320983887
    4. 'n' → logprob: -4.304637432098389
    5. '   ' → logprob: -4.554637432098389
    6. 'd' → logprob: -5.679637432098389
    7. '-' → logprob: -6.054637432098389
    8. 'à' → logprob: -6.304637432098389
    9. ' d' → logprob: -6.304637432098389
    10. ' à' → logprob: -7.054637432098389

Token 251: '-dire' (ID: 76064)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.332680881023407
    2. ' ' → logprob: -1.4576809406280518
    3. ' d' → logprob: -3.8326809406280518
    4. 'd' → logprob: -3.9576809406280518
    5. '0' → logprob: -5.582680702209473
    6. '(' → logprob: -6.332680702209473
    7. '1' → logprob: -6.832680702209473
    8. 'm' → logprob: -7.332680702209473
    9. '   ' → logprob: -7.832680702209473
    10. '3' → logprob: -7.832680702209473

Token 252: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0603082999587059
    2. ' ' → logprob: -3.0603082180023193
    3. '(' → logprob: -5.435308456420898
    4. '4' → logprob: -5.685308456420898
    5. ' (' → logprob: -6.560308456420898
    6. ' d' → logprob: -7.185308456420898
    7. 'd' → logprob: -7.185308456420898
    8. '   ' → logprob: -7.435308456420898
    9. ' p' → logprob: -9.310308456420898
    10. 'p' → logprob: -9.560308456420898

Token 253: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.42897143959999084
    2. '*' → logprob: -1.0539714097976685
    3. ')' → logprob: -9.428971290588379
    4. '2' → logprob: -9.553971290588379
    5. ' ' → logprob: -9.928971290588379
    6. ' ' → logprob: -10.303971290588379
    7. '   ' → logprob: -12.303971290588379
    8. ' )' → logprob: -12.428971290588379
    9. '```' → logprob: -12.553971290588379
    10. '.' → logprob: -12.553971290588379

Token 254: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.009876853786408901
    2. 'li' → logprob: -4.634876728057861
    3. 'lic' → logprob: -10.50987720489502
    4. 'lication' → logprob: -10.88487720489502
    5. '*' → logprob: -10.88487720489502
    6. 'lique' → logprob: -11.38487720489502
    7. 'l' → logprob: -11.88487720489502
    8. 'lé' → logprob: -12.25987720489502
    9. 'ly' → logprob: -12.50987720489502
    10. 'liq' → logprob: -12.63487720489502

Token 255: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03885320574045181
    2. 'par' → logprob: -3.288853168487549
    3. '*' → logprob: -7.538853168487549
    4. ' by' → logprob: -9.163853645324707
    5. ')' → logprob: -9.413853645324707
    6. ' *' → logprob: -10.538853645324707
    7. ' ' → logprob: -10.913853645324707
    8. 'by' → logprob: -11.538853645324707
    9. '	par' → logprob: -12.038853645324707
    10. '<|end|>' → logprob: -12.038853645324707

Token 256: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484499752521515
    2. '2' → logprob: -1.223449945449829
    3. ' ' → logprob: -13.22344970703125
    4. '4' → logprob: -13.59844970703125
    5. 'space' → logprob: -14.22344970703125
    6. ',' → logprob: -15.34844970703125
    7. ')' → logprob: -15.47344970703125
    8. '  ' → logprob: -15.72344970703125
    9. ' two' → logprob: -15.97344970703125
    10. '   ' → logprob: -16.16094970703125

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02630099281668663
    2. ' ' → logprob: -3.6513009071350098
    3. '4' → logprob: -15.151301383972168
    4. '   ' → logprob: -15.526301383972168
    5. '```' → logprob: -16.65130043029785
    6. '  ' → logprob: -16.90130043029785
    7. ' two' → logprob: -17.15130043029785
    8. ' ' → logprob: -17.27630043029785
    9. ' deux' → logprob: -17.52630043029785
    10. '3' → logprob: -17.90130043029785

Token 258: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021754223853349686
    2. ').' → logprob: -4.271754264831543
    3. ')
' → logprob: -5.771754264831543
    4. '*' → logprob: -6.146754264831543
    5. '*p' → logprob: -7.271754264831543
    6. ' )' → logprob: -7.396754264831543
    7. ' *' → logprob: -8.396754264831543
    8. 'p' → logprob: -8.771754264831543
    9. '.' → logprob: -8.896754264831543
    10. '   ' → logprob: -9.146754264831543

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020669952500611544
    2. ' p' → logprob: -6.3770670890808105
    3. 'p' → logprob: -8.002066612243652
    4. '    
' → logprob: -11.252066612243652
    5. '
' → logprob: -12.502066612243652
    6. '       ' → logprob: -13.252066612243652
    7. ' ' → logprob: -13.252066612243652
    8. '```' → logprob: -13.252066612243652
    9. '  
' → logprob: -13.377066612243652
    10. '    ' → logprob: -13.377066612243652

Token 260: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026582427322864532
    2. ' p' → logprob: -4.27658224105835
    3. 'p' → logprob: -4.40158224105835
    4. '
' → logprob: -10.151582717895508
    5. '    
' → logprob: -11.151582717895508
    6. '       ' → logprob: -11.776582717895508
    7. ' 
' → logprob: -11.901582717895508
    8. '    ' → logprob: -12.651582717895508
    9. ' ' → logprob: -12.776582717895508
    10. '   ' → logprob: -12.901582717895508

Token 261: ' At' (ID: 3604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6582247018814087
    2. 'p' → logprob: -1.1582247018814087
    3. ' p' → logprob: -1.7832247018814087
    4. ' ' → logprob: -10.658225059509277
    5. '
' → logprob: -10.783225059509277
    6. '```' → logprob: -11.283225059509277
    7. '  ' → logprob: -11.658225059509277
    8. '    ' → logprob: -12.158225059509277
    9. '    
' → logprob: -12.158225059509277
    10. '       ' → logprob: -12.408225059509277

Token 262: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.571443498134613
    2. '   ' → logprob: -1.0714435577392578
    3. 'ffect' → logprob: -3.571443557739258
    4. 'p' → logprob: -4.071443557739258
    5. 't' → logprob: -4.446443557739258
    6. 'f' → logprob: -4.946443557739258
    7. 'ss' → logprob: -5.071443557739258
    8. 'pliquer' → logprob: -6.071443557739258
    9. 'irer' → logprob: -6.196443557739258
    10. 'tenir' → logprob: -6.196443557739258

Token 263: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -0.004874719772487879
    2. 'u' → logprob: -5.3798747062683105
    3. '   ' → logprob: -9.629875183105469
    4. ' u' → logprob: -9.629875183105469
    5. '=' → logprob: -10.379875183105469
    6. '#' → logprob: -10.879875183105469
    7. 'er' → logprob: -10.879875183105469
    8. 'ue' → logprob: -11.379875183105469
    9. '>' → logprob: -12.004875183105469
    10. '\' → logprob: -12.504875183105469

Token 264: ' ce' (ID: 2357)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1189393475651741
    2. ' à' → logprob: -2.9939393997192383
    3. 'p' → logprob: -3.6189393997192383
    4. ' la' → logprob: -3.9939393997192383
    5. ' le' → logprob: -4.618939399719238
    6. ' ' → logprob: -6.368939399719238
    7. ' au' → logprob: -6.618939399719238
    8. '   ' → logprob: -6.743939399719238
    9. 'le' → logprob: -6.993939399719238
    10. ' the' → logprob: -7.868939399719238

Token 265: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.0752779096364975
    2. ' p' → logprob: -3.200277805328369
    3. ' resultat' → logprob: -4.200277805328369
    4. 'result' → logprob: -4.950277805328369
    5. ' result' → logprob: -5.325277805328369
    6. ' ' → logprob: -6.700277805328369
    7. 'rés' → logprob: -6.950277805328369
    8. 'p' → logprob: -7.200277805328369
    9. ' à' → logprob: -7.700277805328369
    10. 'n' → logprob: -8.325278282165527

Token 266: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03267539292573929
    2. ' ' → logprob: -3.6576755046844482
    3. 'à' → logprob: -5.282675266265869
    4. ' to' → logprob: -8.032675743103027
    5. ' p' → logprob: -8.032675743103027
    6. '=' → logprob: -8.657675743103027
    7. 'p' → logprob: -9.407675743103027
    8. ' a' → logprob: -9.532675743103027
    9. 'to' → logprob: -9.782675743103027
    10. ' =' → logprob: -9.907675743103027

Token 267: ' la' (ID: 557)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.07889761030673981
    2. 'p' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.203897476196289
    4. ' ' → logprob: -13.578897476196289
    5. '	p' → logprob: -13.703897476196289
    6. ' la' → logprob: -16.57889747619629
    7. ',' → logprob: -16.95389747619629
    8. ' a' → logprob: -17.07889747619629
    9. ' 
' → logprob: -17.07889747619629
    10. ' ' → logprob: -17.32889747619629

Token 268: ' variable' (ID: 11076)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003322318894788623
    2. ' p' → logprob: -5.753322124481201
    3. 'variable' → logprob: -9.25332260131836
    4. ' variable' → logprob: -10.00332260131836
    5. ' ' → logprob: -14.25332260131836
    6. 'var' → logprob: -14.75332260131836
    7. '=' → logprob: -14.87832260131836
    8. '```' → logprob: -15.00332260131836
    9. 'n' → logprob: -15.75332260131836
    10. 'v' → logprob: -16.00332260131836

Token 269: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.160248801112175
    2. 'p' → logprob: -1.9102487564086914
    3. ' ' → logprob: -11.410248756408691
    4. ' ' → logprob: -11.785248756408691
    5. '	p' → logprob: -13.160248756408691
    6. ',' → logprob: -14.410248756408691
    7. ' 
' → logprob: -14.785248756408691
    8. ''' → logprob: -14.910248756408691
    9. 'space' → logprob: -15.160248756408691
    10. ''p' → logprob: -15.160248756408691

Token 270: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006756199873052537
    2. 'p' → logprob: -7.500675678253174
    3. ' p' → logprob: -9.625675201416016
    4. '
' → logprob: -9.875675201416016
    5. '    
' → logprob: -12.500675201416016
    6. '       ' → logprob: -15.500675201416016
    7. '```' → logprob: -15.500675201416016
    8. '(p' → logprob: -15.750675201416016
    9. '  ' → logprob: -15.875675201416016
    10. ':' → logprob: -16.000675201416016

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008737052557989955
    2. 'p' → logprob: -7.250873565673828
    3. ' p' → logprob: -8.750873565673828
    4. '
' → logprob: -13.000873565673828
    5. '```' → logprob: -13.000873565673828
    6. '       ' → logprob: -14.625873565673828
    7. '	p' → logprob: -15.500873565673828
    8. '    
' → logprob: -15.625873565673828
    9. '   ' → logprob: -16.750873565673828
    10. '(p' → logprob: -16.875873565673828

Token 272: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4349144995212555
    2. 'p' → logprob: -1.184914469718933
    3. ' p' → logprob: -3.0599145889282227
    4. '	p' → logprob: -12.184914588928223
    5. '
' → logprob: -12.434914588928223
    6. ' ' → logprob: -13.434914588928223
    7. '  ' → logprob: -13.809914588928223
    8. '       ' → logprob: -13.809914588928223
    9. '    
' → logprob: -13.934914588928223
    10. '```' → logprob: -14.184914588928223

Token 273: ' Cette' (ID: 27383)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.37844952940940857
    2. '   ' → logprob: -1.503449559211731
    3. ' p' → logprob: -2.3784494400024414
    4. ' ' → logprob: -11.503449440002441
    5. '  ' → logprob: -12.253449440002441
    6. '	p' → logprob: -13.003449440002441
    7. '
' → logprob: -13.878449440002441
    8. '    
' → logprob: -14.128449440002441
    9. '```' → logprob: -14.128449440002441
    10. '    ' → logprob: -14.253449440002441

Token 274: ' opération' (ID: 86023)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5392278432846069
    2. ' p' → logprob: -1.039227843284607
    3. ' =' → logprob: -3.0392279624938965
    4. '=' → logprob: -4.4142279624938965
    5. '   ' → logprob: -6.1642279624938965
    6. ' ' → logprob: -8.539227485656738
    7. ':' → logprob: -8.914227485656738
    8. 's' → logprob: -9.414227485656738
    9. ' 
' → logprob: -9.414227485656738
    10. 'n' → logprob: -9.414227485656738

Token 275: ' peut' (ID: 9216)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20109175145626068
    2. ' p' → logprob: -2.076091766357422
    3. 'p' → logprob: -3.326091766357422
    4. '=' → logprob: -3.951091766357422
    5. '   ' → logprob: -7.576091766357422
    6. 'n' → logprob: -8.576091766357422
    7. 's' → logprob: -8.701091766357422
    8. ' ' → logprob: -8.826091766357422
    9. ' est' → logprob: -9.826091766357422
    10. '=p' → logprob: -9.826091766357422

Token 276: ' être' (ID: 9104)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3465487957000732
    2. ' p' → logprob: -1.5965487957000732
    3. ' =' → logprob: -1.9715487957000732
    4. '=' → logprob: -2.2215487957000732
    5. 'être' → logprob: -2.2215487957000732
    6. ' être' → logprob: -2.3465487957000732
    7. ' se' → logprob: -3.5965487957000732
    8. ' be' → logprob: -4.346549034118652
    9. '_' → logprob: -4.846549034118652
    10. ' s' → logprob: -5.221549034118652

Token 277: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0530528724193573
    2. 'rés' → logprob: -3.4280529022216797
    3. ' p' → logprob: -5.05305290222168
    4. 'é' → logprob: -5.67805290222168
    5. 'simpl' → logprob: -5.80305290222168
    6. 'ré' → logprob: -6.30305290222168
    7. 'express' → logprob: -7.30305290222168
    8. 'vue' → logprob: -7.42805290222168
    9. ' résumé' → logprob: -8.17805290222168
    10. '```' → logprob: -8.17805290222168

Token 278: 'ue' (ID: 466)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7661184668540955
    2. 'ong' → logprob: -1.2661185264587402
    3. 'n' → logprob: -3.1411185264587402
    4. 'p' → logprob: -3.1411185264587402
    5. 'a' → logprob: -3.3911185264587402
    6. 'imité' → logprob: -4.14111852645874
    7. 'arg' → logprob: -4.26611852645874
    8. 'ég' → logprob: -4.26611852645874
    9. 'iné' → logprob: -4.39111852645874
    10. 'ancée' → logprob: -4.89111852645874

Token 279: ' comme' (ID: 7971)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.034411463886499405
    2. 'p' → logprob: -4.534411430358887
    3. ' comme' → logprob: -4.534411430358887
    4. ' n' → logprob: -5.034411430358887
    5. ' =' → logprob: -6.159411430358887
    6. 'n' → logprob: -7.409411430358887
    7. ' à' → logprob: -7.409411430358887
    8. ' as' → logprob: -7.784411430358887
    9. ' en' → logprob: -8.159411430358887
    10. ' au' → logprob: -8.284411430358887

Token 280: ' :' (ID: 712)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18151558935642242
    2. ' p' → logprob: -1.9315155744552612
    3. '2' → logprob: -4.056515693664551
    4. ' ' → logprob: -6.681515693664551
    5. '(' → logprob: -7.556515693664551
    6. 'n' → logprob: -7.681515693664551
    7. '"' → logprob: -7.806515693664551
    8. ' n' → logprob: -8.18151569366455
    9. '(p' → logprob: -8.43151569366455
    10. ' une' → logprob: -8.68151569366455

Token 281: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05517325922846794
    2. ' p' → logprob: -2.93017315864563
    3. '   ' → logprob: -8.18017292022705
    4. ' ' → logprob: -12.80517292022705
    5. '```' → logprob: -13.05517292022705
    6. '2' → logprob: -13.93017292022705
    7. '	p' → logprob: -13.93017292022705
    8. ' ' → logprob: -14.05517292022705
    9. 'n' → logprob: -14.30517292022705
    10. '(p' → logprob: -14.30517292022705

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024230420589447
    2. '=' → logprob: -1.9102423191070557
    3. ' ' → logprob: -11.410242080688477
    4. 'p' → logprob: -13.160242080688477
    5. '=p' → logprob: -13.410242080688477
    6. ' ' → logprob: -14.160242080688477
    7. 's' → logprob: -14.535242080688477
    8. ' =
' → logprob: -15.160242080688477
    9. '=n' → logprob: -15.160242080688477
    10. ' =(' → logprob: -15.410242080688477

Token 283: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13072505593299866
    2. 'n' → logprob: -3.005725145339966
    3. '(n' → logprob: -3.505725145339966
    4. '(' → logprob: -3.755725145339966
    5. ' ' → logprob: -4.630724906921387
    6. ' (' → logprob: -5.005724906921387
    7. ' n' → logprob: -5.755724906921387
    8. '   ' → logprob: -12.130724906921387
    9. '(p' → logprob: -13.005724906921387
    10. '((' → logprob: -13.380724906921387

Token 284: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3835700750350952
    2. 'n' → logprob: -1.3835700750350952
    3. '(' → logprob: -3.1335701942443848
    4. '(n' → logprob: -3.7585701942443848
    5. ' n' → logprob: -7.883570194244385
    6. ' (' → logprob: -8.008569717407227
    7. ' ' → logprob: -8.133569717407227
    8. ')' → logprob: -12.508569717407227
    9. ')n' → logprob: -13.633569717407227
    10. '   ' → logprob: -13.758569717407227

Token 285: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31715333461761475
    2. '*' → logprob: -1.3171533346176147
    3. '*n' → logprob: -5.567153453826904
    4. ')' → logprob: -10.317152976989746
    5. ' ' → logprob: -11.692152976989746
    6. '*p' → logprob: -11.942152976989746
    7. ' ' → logprob: -11.942152976989746
    8. 'n' → logprob: -12.317152976989746
    9. '**' → logprob: -14.067152976989746
    10. '*)' → logprob: -14.692152976989746

Token 286: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016036832705140114
    2. ' n' → logprob: -4.1410369873046875
    3. '(n' → logprob: -13.516036987304688
    4. ')n' → logprob: -14.516036987304688
    5. ')' → logprob: -15.266036987304688
    6. ' ' → logprob: -15.391036987304688
    7. '	n' → logprob: -15.766036987304688
    8. ' ' → logprob: -17.266036987304688
    9. '   ' → logprob: -17.391036987304688
    10. ' (' → logprob: -17.516036987304688

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028337687253952026
    2. ' -' → logprob: -6.502833843231201
    3. '-' → logprob: -7.127833843231201
    4. ' )' → logprob: -7.752833843231201
    5. '*' → logprob: -9.502833366394043
    6. ' *' → logprob: -11.627833366394043
    7. ' ' → logprob: -12.127833366394043
    8. ')-' → logprob: -12.252833366394043
    9. '+' → logprob: -14.002833366394043
    10. '2' → logprob: -14.377833366394043

Token 288: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03835644945502281
    2. '-' → logprob: -3.2883565425872803
    3. ' ' → logprob: -8.66335678100586
    4. ')' → logprob: -9.41335678100586
    5. '   ' → logprob: -10.53835678100586
    6. '*' → logprob: -11.66335678100586
    7. ' )' → logprob: -12.41335678100586
    8. ' ' → logprob: -12.41335678100586
    9. '  ' → logprob: -12.91335678100586
    10. '2' → logprob: -12.91335678100586

Token 289: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20167137682437897
    2. ' (' → logprob: -1.7016713619232178
    3. '2' → logprob: -8.326671600341797
    4. ' ' → logprob: -11.201671600341797
    5. ' ' → logprob: -14.701671600341797
    6. '1' → logprob: -14.826671600341797
    7. '6' → logprob: -15.326671600341797
    8. '4' → logprob: -15.701671600341797
    9. '(d' → logprob: -15.826671600341797
    10. '"' → logprob: -16.076671600341797

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04959012195467949
    2. '(' → logprob: -3.2995901107788086
    3. ' ' → logprob: -4.549590110778809
    4. ' (' → logprob: -7.049590110778809
    5. 'd' → logprob: -11.049590110778809
    6. '   ' → logprob: -11.549590110778809
    7. ')' → logprob: -11.799590110778809
    8. ' d' → logprob: -12.799590110778809
    9. '  ' → logprob: -13.299590110778809
    10. '(d' → logprob: -13.487090110778809

Token 291: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3870212137699127
    2. ' *' → logprob: -1.1370211839675903
    3. '*d' → logprob: -9.3870210647583
    4. ')' → logprob: -9.7620210647583
    5. ' ' → logprob: -12.8870210647583
    6. '*p' → logprob: -13.3870210647583
    7. ' ' → logprob: -13.7620210647583
    8. 'd' → logprob: -14.0120210647583
    9. '*)' → logprob: -14.2620210647583
    10. ')*' → logprob: -14.5120210647583

Token 292: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16022524237632751
    2. ' d' → logprob: -1.91022527217865
    3. ' ' → logprob: -14.410224914550781
    4. ' ' → logprob: -15.660224914550781
    5. ')d' → logprob: -15.910224914550781
    6. '	d' → logprob: -16.03522491455078
    7. '*d' → logprob: -17.53522491455078
    8. '(d' → logprob: -18.28522491455078
    9. '_d' → logprob: -18.28522491455078
    10. ')' → logprob: -18.28522491455078

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.482821431243792e-05
    2. ' )' → logprob: -9.50008487701416
    3. ').' → logprob: -13.00008487701416
    4. ')
' → logprob: -13.12508487701416
    5. '))' → logprob: -14.25008487701416
    6. '.' → logprob: -14.37508487701416
    7. '*' → logprob: -14.37508487701416
    8. ')#' → logprob: -14.50008487701416
    9. ')p' → logprob: -14.62508487701416
    10. ')
' → logprob: -15.12508487701416

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004880654159933329
    2. 'p' → logprob: -5.754880428314209
    3. ' p' → logprob: -6.379880428314209
    4. '
' → logprob: -13.129880905151367
    5. '       ' → logprob: -13.754880905151367
    6. '    
' → logprob: -13.879880905151367
    7. '	p' → logprob: -14.004880905151367
    8. '   ' → logprob: -14.629880905151367
    9. '```' → logprob: -15.254880905151367
    10. '  ' → logprob: -15.379880905151367

Token 295: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08491307497024536
    2. 'p' (adapté à ' p') → logprob: -2.7099130153656006
    3. ' p' → logprob: -4.20991325378418
    4. '       ' → logprob: -12.70991325378418
    5. '    
' → logprob: -12.95991325378418
    6. '
' → logprob: -12.95991325378418
    7. '	p' → logprob: -12.95991325378418
    8. '  ' → logprob: -13.08491325378418
    9. '   ' → logprob: -13.33491325378418
    10. ' ' → logprob: -13.58491325378418

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408005595207214
    2. ' =' → logprob: -0.9740800857543945
    3. ' ' → logprob: -13.724080085754395
    4. ' =
' → logprob: -13.849080085754395
    5. '=

' → logprob: -14.974080085754395
    6. '=
' → logprob: -15.474080085754395
    7. '=p' → logprob: -16.849079132080078
    8. '＝' → logprob: -16.974079132080078
    9. ' +=' → logprob: -17.099079132080078
    10. '.=' → logprob: -17.224079132080078

Token 297: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03001011349260807
    2. ' (' → logprob: -3.530010223388672
    3. '2' → logprob: -8.280010223388672
    4. ' ' → logprob: -12.030010223388672
    5. '   ' → logprob: -16.655010223388672
    6. '((' → logprob: -18.280010223388672
    7. '  ' → logprob: -18.530010223388672
    8. ' ' → logprob: -19.030010223388672
    9. '（' → logprob: -19.405010223388672
    10. '(int' → logprob: -19.655010223388672

Token 298: 'n' (ID: 77)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -15.250019073486328
    4. '(' → logprob: -16.125019073486328
    5. 'n' → logprob: -16.625019073486328
    6. '  ' → logprob: -18.250019073486328
    7. '２' → logprob: -18.250019073486328
    8. '۲' → logprob: -19.062519073486328
    9. ')' → logprob: -19.375019073486328
    10. '    ' → logprob: -19.625019073486328

Token 299: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12713955342769623
    2. '*' → logprob: -2.1271395683288574
    3. ')' → logprob: -8.7521390914917
    4. ' ' → logprob: -10.0021390914917
    5. ' ' → logprob: -12.7521390914917
    6. ' )' → logprob: -13.3771390914917
    7. '   ' → logprob: -13.6271390914917
    8. '2' → logprob: -13.7521390914917
    9. ')*' → logprob: -14.3771390914917
    10. '**' → logprob: -15.3771390914917

Token 300: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06196802109479904
    2. ' ' → logprob: -2.8119680881500244
    3. ')' → logprob: -15.186967849731445
    4. '  ' → logprob: -16.686967849731445
    5. '   ' → logprob: -16.686967849731445
    6. ' ' → logprob: -17.311967849731445
    7. ' *' → logprob: -17.561967849731445
    8. ' )' → logprob: -17.811967849731445
    9. '２' → logprob: -18.999467849731445
    10. '```' → logprob: -18.999467849731445

Token 301: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -20.625139236450195
    4. '  ' → logprob: -21.000139236450195
    5. '２' → logprob: -21.125139236450195
    6. ')' → logprob: -21.875139236450195
    7. '۲' → logprob: -22.000139236450195
    8. '```' → logprob: -22.625139236450195
    9. '
' → logprob: -22.875139236450195
    10. ' ' → logprob: -22.875139236450195

Token 302: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001427538663847372
    2. ' )' → logprob: -8.875143051147461
    3. ' -' → logprob: -13.375143051147461
    4. '-' → logprob: -14.125143051147461
    5. ')-' → logprob: -14.875143051147461
    6. ')-(' → logprob: -15.375143051147461
    7. ')
' → logprob: -16.87514305114746
    8. '-)' → logprob: -17.12514305114746
    9. '   ' → logprob: -17.50014305114746
    10. ' ' → logprob: -17.75014305114746

Token 303: ' d' (ID: 272)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36499571800231934
    2. ' ' → logprob: -2.2399957180023193
    3. 'd' → logprob: -2.4899957180023193
    4. ' d' → logprob: -2.4899957180023193
    5. ' (' → logprob: -4.114995956420898
    6. '(' → logprob: -4.114995956420898
    7. '(d' → logprob: -7.114995956420898
    8. '   ' → logprob: -9.989995956420898
    9. '  ' → logprob: -12.364995956420898
    10. ')' → logprob: -13.614995956420898

Token 304: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.577842652797699
    2. ' *' → logprob: -0.827842652797699
    3. ')' → logprob: -6.327842712402344
    4. '2' → logprob: -9.577842712402344
    5. ' ' → logprob: -10.327842712402344
    6. ' ' → logprob: -11.952842712402344
    7. ' )' → logprob: -13.077842712402344
    8. ')*' → logprob: -13.327842712402344
    9. '**' → logprob: -13.952842712402344
    10. '   ' → logprob: -14.202842712402344

Token 305: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31326204538345337
    2. ' ' → logprob: -1.3132619857788086
    3. '   ' → logprob: -15.813261985778809
    4. ' ' → logprob: -16.063262939453125
    5. '  ' → logprob: -17.313262939453125
    6. '۲' → logprob: -17.875762939453125
    7. '	' → logprob: -18.250762939453125
    8. '２' → logprob: -18.375762939453125
    9. ')' → logprob: -18.438262939453125
    10. '```' → logprob: -19.063262939453125

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.87510871887207
    4. '۲' → logprob: -17.50010871887207
    5. '```' → logprob: -18.37510871887207
    6. '２' → logprob: -18.62510871887207
    7. '  ' → logprob: -18.87510871887207
    8. '٢' → logprob: -19.43760871887207
    9. ' ' → logprob: -19.50010871887207
    10. '1' → logprob: -19.81260871887207

Token 307: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')
' → logprob: -14.37500286102295
    4. '))' → logprob: -16.625001907348633
    5. ')#' → logprob: -17.500001907348633
    6. ')`' → logprob: -18.125001907348633
    7. ')

' → logprob: -18.750001907348633
    8. '),' → logprob: -19.000001907348633
    9. ')...' → logprob: -19.250001907348633
    10. ').' → logprob: -19.500001907348633

Token 308: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003289297688752413
    2. '
' → logprob: -6.503289222717285
    3. '#' → logprob: -6.878289222717285
    4. ')' → logprob: -8.003289222717285
    5. ' print' → logprob: -9.003289222717285
    6. '<|end|>' → logprob: -9.253289222717285
    7. '  
' → logprob: -9.503289222717285
    8. '#print' → logprob: -10.503289222717285
    9. 'if' → logprob: -10.628289222717285
    10. '\n' → logprob: -11.253289222717285

Token 309: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010521204239921644
    2. 'if' → logprob: -9.625104904174805
    3. '#' → logprob: -10.625104904174805
    4. 'pr' → logprob: -12.500104904174805
    5. 'p' → logprob: -12.750104904174805
    6. 'prin' → logprob: -12.750104904174805
    7. 'result' → logprob: -13.250104904174805
    8. 'for' → logprob: -13.375104904174805
    9. ' print' → logprob: -13.750104904174805
    10. '#print' → logprob: -14.875104904174805

Token 310: 'er' (ID: 259)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20931610465049744
    2. '=' → logprob: -2.8343160152435303
    3. 'result' → logprob: -3.5843160152435303
    4. 'er' → logprob: -3.7093160152435303
    5. 'p' → logprob: -3.8343160152435303
    6. '_result' → logprob: -4.084316253662109
    7. 's' → logprob: -5.084316253662109
    8. ' de' → logprob: -5.209316253662109
    9. ' result' → logprob: -5.459316253662109
    10. ' p' → logprob: -5.459316253662109

Token 311: ' une' (ID: 2463)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.42702436447143555
    2. 'result' → logprob: -1.5520243644714355
    3. 'le' → logprob: -3.5520243644714355
    4. ' q' → logprob: -3.5520243644714355
    5. ' la' → logprob: -3.6770243644714355
    6. 'la' → logprob: -3.8020243644714355
    7. 'r' → logprob: -4.9270243644714355
    8. 's' → logprob: -5.0520243644714355
    9. ' le' → logprob: -5.6770243644714355
    10. 'l' → logprob: -5.8020243644714355

Token 312: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7772401571273804
    2. ' somme' → logprob: -1.6522401571273804
    3. '#' → logprob: -2.40224027633667
    4. ' moyenne' → logprob: -2.90224027633667
    5. 'result' → logprob: -3.02724027633667
    6. ' valeur' → logprob: -3.27724027633667
    7. 'val' → logprob: -3.52724027633667
    8. 'v' → logprob: -3.65224027633667
    9. 'm' → logprob: -5.15224027633667
    10. 'if' → logprob: -5.27724027633667

Token 313: ' r' (ID: 428)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9021379947662354
    2. 'q' → logprob: -1.2771379947662354
    3. ' =' → logprob: -1.6521379947662354
    4. 's' → logprob: -3.5271379947662354
    5. 'r' → logprob: -3.9021379947662354
    6. 'final' → logprob: -3.9021379947662354
    7. 'total' → logprob: -4.527137756347656
    8. '=' → logprob: -4.527137756347656
    9. 'res' → logprob: -4.777137756347656
    10. 'p' → logprob: -5.152137756347656

Token 314: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16045229136943817
    2. '=' → logprob: -1.9104522466659546
    3. 'r' → logprob: -9.160451889038086
    4. ',' → logprob: -9.535451889038086
    5. ' ' → logprob: -11.160451889038086
    6. 'p' → logprob: -11.660451889038086
    7. '=r' → logprob: -11.660451889038086
    8. ' =
' → logprob: -12.410451889038086
    9. ' ' → logprob: -12.410451889038086
    10. 's' → logprob: -12.660451889038086

Token 315: ' divis' (ID: 37826)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5078256726264954
    2. 'n' → logprob: -1.7578256130218506
    3. 'abs' → logprob: -2.6328256130218506
    4. ' m' → logprob: -3.1328256130218506
    5. 'p' → logprob: -3.6328256130218506
    6. ' n' → logprob: -3.6328256130218506
    7. 'range' → logprob: -4.13282585144043
    8. '(m' → logprob: -4.50782585144043
    9. 'calcul' → logprob: -5.63282585144043
    10. 'sum' → logprob: -5.88282585144043

Token 316: 'ant' (ID: 493)
  Prédit: 'isant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isant' → logprob: -0.23002132773399353
    2. 'ant' → logprob: -1.605021357536316
    3. '#' → logprob: -6.1050214767456055
    4. '2' → logprob: -7.8550214767456055
    5. 'er' → logprob: -7.9800214767456055
    6. 'id' → logprob: -8.355021476745605
    7. 'ise' → logprob: -8.605021476745605
    8. 'iser' → logprob: -9.105021476745605
    9. 'ising' → logprob: -9.105021476745605
    10. 's' → logprob: -9.355021476745605

Token 317: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1312999725341797
    2. ' p' → logprob: -2.2562999725341797
    3. 'm' → logprob: -4.25629997253418
    4. ' m' → logprob: -5.63129997253418
    5. '(p' → logprob: -8.63129997253418
    6. '(m' → logprob: -9.13129997253418
    7. ' (' → logprob: -9.63129997253418
    8. 'n' → logprob: -9.75629997253418
    9. ' la' → logprob: -10.25629997253418
    10. ' n' → logprob: -10.50629997253418

Token 318: ' par' (ID: 686)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -1.0676159858703613
    2. ' par' → logprob: -1.3176159858703613
    3. ' by' → logprob: -2.1926159858703613
    4. ' /' → logprob: -2.4426159858703613
    5. 'by' → logprob: -2.5676159858703613
    6. '#' → logprob: -3.1926159858703613
    7. 'par' → logprob: -3.5676159858703613
    8. ' ' → logprob: -4.442615985870361
    9. '//' → logprob: -4.692615985870361
    10. ' //' → logprob: -5.067615985870361

Token 319: ' le' (ID: 505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00038717821007594466
    2. '2' → logprob: -8.625387191772461
    3. ' m' → logprob: -9.500387191772461
    4. '(m' → logprob: -9.750387191772461
    5. '(' → logprob: -10.125387191772461
    6. '3' → logprob: -10.875387191772461
    7. 'n' → logprob: -12.125387191772461
    8. '   ' → logprob: -12.375387191772461
    9. ' ' → logprob: -13.125387191772461
    10. 'p' → logprob: -13.375387191772461

Token 320: ' carré' (ID: 191546)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001108543947339058
    2. '2' → logprob: -7.126108646392822
    3. '(' → logprob: -8.751108169555664
    4. '(m' → logprob: -9.626108169555664
    5. ' m' → logprob: -10.626108169555664
    6. 'n' → logprob: -10.626108169555664
    7. '3' → logprob: -11.751108169555664
    8. '   ' → logprob: -12.001108169555664
    9. 'float' → logprob: -12.376108169555664
    10. 'p' → logprob: -12.876108169555664

Token 321: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4812568426132202
    2. ' of' → logprob: -2.1062569618225098
    3. '(' → logprob: -2.7312569618225098
    4. 'm' → logprob: -3.1062569618225098
    5. ' (' → logprob: -3.1062569618225098
    6. 'de' → logprob: -3.2312569618225098
    7. ' m' → logprob: -4.10625696182251
    8. 'r' → logprob: -4.35625696182251
    9. 'of' → logprob: -4.48125696182251
    10. 'p' → logprob: -4.85625696182251

Token 322: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.274932143744081e-05
    2. ' m' → logprob: -10.500042915344238
    3. '(m' → logprob: -11.875042915344238
    4. 'p' → logprob: -12.750042915344238
    5. 'n' → logprob: -13.375042915344238
    6. '(' → logprob: -13.500042915344238
    7. '2' → logprob: -13.625042915344238
    8. '   ' → logprob: -15.000042915344238
    9. 'd' → logprob: -15.375042915344238
    10. ' ' → logprob: -15.375042915344238

Token 323: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004075789824128151
    2. '/
' → logprob: -6.87907600402832
    3. ' /' → logprob: -7.12907600402832
    4. '/' → logprob: -7.25407600402832
    5. '**' → logprob: -7.75407600402832
    6. ' r' → logprob: -8.12907600402832
    7. ' /
' → logprob: -8.12907600402832
    8. 'p' → logprob: -8.37907600402832
    9. '.
' → logprob: -9.12907600402832
    10. '
' → logprob: -10.00407600402832

Token 324: 'so' (ID: 786)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31710436940193176
    2. ' n' → logprob: -1.4421043395996094
    3. '**' → logprob: -4.192104339599609
    4. '2' → logprob: -4.567104339599609
    5. ')' → logprob: -5.567104339599609
    6. 'r' → logprob: -6.817104339599609
    7. ' **' → logprob: -6.817104339599609
    8. ' (' → logprob: -7.067104339599609
    9. ')**' → logprob: -7.692104339599609
    10. ')
' → logprob: -7.817104339599609

Token 325: 'it' (ID: 278)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8073325753211975
    2. 'ur' → logprob: -1.3073325157165527
    3. 'u' → logprob: -1.9323325157165527
    4. 'it' → logprob: -2.3073325157165527
    5. 'r' → logprob: -4.432332515716553
    6. '(n' → logprob: -4.932332515716553
    7. '**' → logprob: -6.182332515716553
    8. ' (' → logprob: -6.307332515716553
    9. 'nt' → logprob: -6.557332515716553
    10. '(' → logprob: -6.557332515716553

Token 326: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11280345171689987
    2. ' n' → logprob: -2.4878034591674805
    3. '(n' → logprob: -3.9878034591674805
    4. ' (' → logprob: -5.3628034591674805
    5. ')' → logprob: -8.98780345916748
    6. '(' → logprob: -9.23780345916748
    7. '   ' → logprob: -9.98780345916748
    8. ' ' → logprob: -10.23780345916748
    9. '  ' → logprob: -11.23780345916748
    10. ')n' → logprob: -11.61280345916748

Token 327: ' multip' (ID: 17524)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08295450359582901
    2. ' **' → logprob: -2.5829544067382812
    3. ' *' → logprob: -6.082954406738281
    4. '*' → logprob: -6.457954406738281
    5. '*p' → logprob: -9.832954406738281
    6. ')' → logprob: -10.332954406738281
    7. 'n' → logprob: -10.707954406738281
    8. '2' → logprob: -10.832954406738281
    9. '*n' → logprob: -10.957954406738281
    10. ' ' → logprob: -11.207954406738281

Token 328: 'lié' (ID: 102412)
  Prédit: 'iqué'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iqué' → logprob: -0.1224432960152626
    2. 'lié' → logprob: -2.247443199157715
    3. 'li' → logprob: -6.122443199157715
    4. 'ique' → logprob: -6.497443199157715
    5. 'é' → logprob: -6.872443199157715
    6. 'u' → logprob: -7.247443199157715
    7. 'ié' → logprob: -7.372443199157715
    8. 'isé' → logprob: -7.747443199157715
    9. 'ifié' → logprob: -7.997443199157715
    10. 'p' → logprob: -7.997443199157715

Token 329: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05727901682257652
    2. 'par' → logprob: -2.932279109954834
    3. '(n' → logprob: -7.307279109954834
    4. '*' → logprob: -7.432279109954834
    5. 'n' → logprob: -7.557279109954834
    6. '*n' → logprob: -8.557278633117676
    7. ' n' → logprob: -9.057278633117676
    8. '_par' → logprob: -10.182278633117676
    9. ')' → logprob: -10.307278633117676
    10. 'au' → logprob: -10.557278633117676

Token 330: ' lui' (ID: 10623)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20193159580230713
    2. ' n' → logprob: -1.7019315958023071
    3. ' lui' → logprob: -9.076931953430176
    4. ' ' → logprob: -9.201931953430176
    5. '2' → logprob: -9.326931953430176
    6. ' ' → logprob: -9.701931953430176
    7. ' itself' → logprob: -10.076931953430176
    8. ' p' → logprob: -10.451931953430176
    9. '	n' → logprob: -10.451931953430176
    10. 'p' → logprob: -11.201931953430176

Token 331: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.13544905185699463
    2. 'm' → logprob: -2.260448932647705
    3. 'self' → logprob: -4.760448932647705
    4. 'n' → logprob: -4.885448932647705
    5. ' même' → logprob: -6.010448932647705
    6. '```' → logprob: -6.635448932647705
    7. '   ' → logprob: -6.760448932647705
    8. '-m' → logprob: -8.635449409484863
    9. '-mêmes' → logprob: -8.635449409484863
    10. ')' → logprob: -8.885449409484863

Token 332: ').
' (ID: 6294)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7853882312774658
    2. '.
' → logprob: -1.0353882312774658
    3. 'r' → logprob: -2.410388231277466
    4. ')' → logprob: -3.660388231277466
    5. ')
' → logprob: -3.660388231277466
    6. '**' → logprob: -4.535387992858887
    7. 'n' → logprob: -4.660387992858887
    8. ').' → logprob: -4.785387992858887
    9. ').
' → logprob: -5.535387992858887
    10. '.
' → logprob: -5.785387992858887

Token 333: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.630610641877865e-06
    2. ' r' → logprob: -12.000006675720215
    3. '
' → logprob: -15.500006675720215
    4. '```' → logprob: -15.500006675720215
    5. ' 
' → logprob: -17.7500057220459
    6. '  
' → logprob: -18.2500057220459
    7. '
' → logprob: -19.1250057220459
    8. 'p' → logprob: -19.2500057220459
    9. '   ' → logprob: -19.3750057220459
    10. ' ' → logprob: -19.5000057220459

Token 334: ' Cette' (ID: 27383)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033558503491804004
    2. ' r' → logprob: -8.000335693359375
    3. '```' → logprob: -16.875335693359375
    4. '
' → logprob: -18.500335693359375
    5. ' ' → logprob: -19.000335693359375
    6. '#' → logprob: -19.625335693359375
    7. '   ' → logprob: -19.875335693359375
    8. 'result' → logprob: -20.500335693359375
    9. ' ' → logprob: -20.750335693359375
    10. ' 
' → logprob: -21.000335693359375

Token 335: ' étape' (ID: 83661)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.027998553588986397
    2. ' r' → logprob: -4.027998447418213
    3. ' ' → logprob: -5.277998447418213
    4. ' /' → logprob: -6.402998447418213
    5. ' =' → logprob: -7.152998447418213
    6. '/' → logprob: -7.527998447418213
    7. 'div' → logprob: -7.777998447418213
    8. 'n' → logprob: -8.777998924255371
    9. ' #' → logprob: -8.777998924255371
    10. '#' → logprob: -8.902998924255371

Token 336: ' utilise' (ID: 70283)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.027297351509332657
    2. ' r' → logprob: -4.402297496795654
    3. ' =' → logprob: -5.027297496795654
    4. ',' → logprob: -6.277297496795654
    5. '.' → logprob: -6.277297496795654
    6. 's' → logprob: -6.777297496795654
    7. '=' → logprob: -7.402297496795654
    8. 'p' → logprob: -7.527297496795654
    9. ' ' → logprob: -7.777297496795654
    10. '#' → logprob: -8.402297019958496

Token 337: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0736585855484009
    2. ' p' → logprob: -1.3236585855484009
    3. 'n' → logprob: -1.6986585855484009
    4. '/' → logprob: -2.4486584663391113
    5. ' la' → logprob: -3.1986584663391113
    6. 'r' → logprob: -3.5736584663391113
    7. ' /' → logprob: -4.573658466339111
    8. ' n' → logprob: -4.573658466339111
    9. 'le' → logprob: -4.948658466339111
    10. 'float' → logprob: -4.948658466339111

Token 338: ''op' (ID: 70747)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8688437342643738
    2. '**' → logprob: -1.4938437938690186
    3. '/' → logprob: -2.3688437938690186
    4. ' n' → logprob: -3.1188437938690186
    5. ' p' → logprob: -3.2438437938690186
    6. 'p' → logprob: -3.4938437938690186
    7. '2' → logprob: -3.6188437938690186
    8. ' /' → logprob: -3.7438437938690186
    9. ' **' → logprob: -4.4938435554504395
    10. 'pow' → logprob: -4.6188435554504395

Token 339: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.7011066675186157
    2. 'er' → logprob: -1.2011066675186157
    3. 'ér' → logprob: -2.576106548309326
    4. '**' → logprob: -2.951106548309326
    5. 'r' → logprob: -4.201106548309326
    6. 'érateur' → logprob: -4.201106548309326
    7. 'p' → logprob: -4.451106548309326
    8. 'n' → logprob: -4.451106548309326
    9. 'érations' → logprob: -5.076106548309326
    10. 't' → logprob: -6.076106548309326

Token 340: ' de' (ID: 334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.03213460370898247
    2. ' /' → logprob: -3.907134532928467
    3. '**' → logprob: -4.907134532928467
    4. 'r' → logprob: -6.532134532928467
    5. 'p' → logprob: -6.907134532928467
    6. 'n' → logprob: -7.782134532928467
    7. ' p' → logprob: -8.032135009765625
    8. ' **' → logprob: -8.032135009765625
    9. ' r' → logprob: -8.407135009765625
    10. '/p' → logprob: -8.782135009765625

Token 341: ' division' (ID: 21629)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.2887251377105713
    2. 'division' → logprob: -1.4137251377105713
    3. ' division' → logprob: -1.5387251377105713
    4. ' puissance' → logprob: -1.9137251377105713
    5. 'ex' → logprob: -3.0387251377105713
    6. ' exponent' → logprob: -3.6637251377105713
    7. '#' → logprob: -4.163724899291992
    8. '2' → logprob: -4.663724899291992
    9. 'pow' → logprob: -5.663724899291992
    10. 'd' → logprob: -6.038724899291992

Token 342: ' (' (ID: 350)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.13815712928771973
    2. 'r' → logprob: -2.3881571292877197
    3. ' /' → logprob: -3.5131571292877197
    4. ' r' → logprob: -5.388156890869141
    5. 'p' → logprob: -7.013156890869141
    6. '/r' → logprob: -7.638156890869141
    7. 'n' → logprob: -7.763156890869141
    8. '.' → logprob: -8.38815689086914
    9. ',' → logprob: -8.63815689086914
    10. ' (' → logprob: -9.26315689086914

Token 343: '/)' (ID: 85322)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2428143173456192
    2. ' /' → logprob: -1.867814302444458
    3. '/)' → logprob: -2.867814302444458
    4. ')' → logprob: -5.867814540863037
    5. 'p' → logprob: -7.617814540863037
    6. ' p' → logprob: -8.242814064025879
    7. '/p' → logprob: -8.492814064025879
    8. 'r' → logprob: -9.117814064025879
    9. 'n' → logprob: -9.242814064025879
    10. '/')' → logprob: -9.492814064025879

Token 344: ' qui' (ID: 2780)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005370002705603838
    2. ' r' → logprob: -5.380370140075684
    3. '.
' → logprob: -7.755370140075684
    4. ',' → logprob: -8.880370140075684
    5. '.' → logprob: -9.130370140075684
    6. '
' → logprob: -9.880370140075684
    7. ' 
' → logprob: -12.380370140075684
    8. 'result' → logprob: -13.005370140075684
    9. '  
' → logprob: -13.380370140075684
    10. ' and' → logprob: -13.505370140075684

Token 345: ' ren' (ID: 5427)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.3409164845943451
    2. ' ren' → logprob: -1.4659165143966675
    3. ' effect' → logprob: -4.215916633605957
    4. 'effect' → logprob: -4.340916633605957
    5. ' retourne' → logprob: -4.340916633605957
    6. 'ret' → logprob: -4.965916633605957
    7. 'produ' → logprob: -5.715916633605957
    8. 'don' → logprob: -5.840916633605957
    9. ' produit' → logprob: -6.965916633605957
    10. ' donne' → logprob: -6.965916633605957

Token 346: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.020184224471449852
    2. 'voit' → logprob: -4.14518404006958
    3. 'ver' → logprob: -6.27018404006958
    4. 't' → logprob: -6.64518404006958
    5. 'v' → logprob: -7.77018404006958
    6. 'voy' → logprob: -8.895184516906738
    7. 'tour' → logprob: -9.270184516906738
    8. 'return' → logprob: -9.770184516906738
    9. 'e' → logprob: -10.395184516906738
    10. 'vient' → logprob: -10.520184516906738

Token 347: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5036106705665588
    2. ' un' → logprob: -1.128610610961914
    3. 'une' → logprob: -3.128610610961914
    4. 'a' → logprob: -4.128610610961914
    5. ' une' → logprob: -4.503610610961914
    6. 'u' → logprob: -7.503610610961914
    7. ' a' → logprob: -8.878610610961914
    8. ''un' → logprob: -9.253610610961914
    9. 'n' → logprob: -9.378610610961914
    10. ' ' → logprob: -9.628610610961914

Token 348: ' nombre' (ID: 9733)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.021042900159955025
    2. ' float' → logprob: -4.146042823791504
    3. 'nombre' → logprob: -6.646042823791504
    4. ' flott' → logprob: -6.896042823791504
    5. 'f' → logprob: -7.396042823791504
    6. 'result' → logprob: -7.771042823791504
    7. 'floating' → logprob: -7.771042823791504
    8. 'rés' → logprob: -8.521042823791504
    9. '_float' → logprob: -8.646042823791504
    10. '.' → logprob: -8.896042823791504

Token 349: ' à' (ID: 1221)
  Prédit: ' flott'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.8515794277191162
    2. ' à' → logprob: -0.9765794277191162
    3. 'float' → logprob: -2.851579427719116
    4. 'r' → logprob: -3.101579427719116
    5. 'f' → logprob: -3.351579427719116
    6. '.' → logprob: -3.851579427719116
    7. 'à' → logprob: -3.976579427719116
    8. 'fl' → logprob: -5.726579666137695
    9. ' float' → logprob: -5.851579666137695
    10. 'p' → logprob: -5.976579666137695

Token 350: ' virg' (ID: 165362)
  Prédit: 'vir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vir' → logprob: -0.16635632514953613
    2. 'float' → logprob: -1.9163563251495361
    3. '```' → logprob: -5.791356086730957
    4. 'val' → logprob: -6.916356086730957
    5. 'floating' → logprob: -7.291356086730957
    6. ' virg' → logprob: -7.791356086730957
    7. 'fl' → logprob: -8.041356086730957
    8. ' ' → logprob: -8.416356086730957
    9. 'nombre' → logprob: -8.916356086730957
    10. 'point' → logprob: -9.916356086730957

Token 351: 'ule' (ID: 1601)
  Prédit: 'ulaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -1.074513554573059
    2. 'ec' → logprob: -1.324513554573059
    3. 'g' → logprob: -2.4495134353637695
    4. 'er' → logprob: -2.5745134353637695
    5. 'culaire' → logprob: -3.0745134353637695
    6. 'ocale' → logprob: -3.3245134353637695
    7. 'ule' → logprob: -3.3245134353637695
    8. 'e' → logprob: -3.5745134353637695
    9. 'icale' → logprob: -4.1995134353637695
    10. 'éc' → logprob: -4.4495134353637695

Token 352: ' flott' (ID: 108700)
  Prédit: ' flott'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.6522606015205383
    2. 'f' → logprob: -1.2772605419158936
    3. 'float' → logprob: -2.5272605419158936
    4. 'fl' → logprob: -2.5272605419158936
    5. 'flo' → logprob: -3.4022605419158936
    6. ' ' → logprob: -7.027260780334473
    7. 'flu' → logprob: -7.027260780334473
    8. '.' → logprob: -7.152260780334473
    9. ',' → logprob: -7.152260780334473
    10. 'floating' → logprob: -7.402260780334473

Token 353: 'ante' (ID: 2116)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -1.168770432472229
    2. 'er' → logprob: -1.918770432472229
    3. 'e' → logprob: -2.5437703132629395
    4. 'é' → logprob: -2.7937703132629395
    5. 'u' → logprob: -2.9187703132629395
    6. 'g' → logprob: -3.0437703132629395
    7. 'ante' → logprob: -3.0437703132629395
    8. 'ulaire' → logprob: -3.4187703132629395
    9. 'érale' → logprob: -3.4187703132629395
    10. 'ère' → logprob: -3.5437703132629395

Token 354: '.
' (ID: 558)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.040457421680912e-05
    2. ' r' → logprob: -10.000070571899414
    3. '.
' → logprob: -11.125070571899414
    4. '.' → logprob: -11.875070571899414
    5. ',' → logprob: -13.500070571899414
    6. '
' → logprob: -14.625070571899414
    7. '```' → logprob: -15.125070571899414
    8. ' 
' → logprob: -15.250070571899414
    9. 'result' → logprob: -15.875070571899414
    10. 'p' → logprob: -15.875070571899414

Token 355: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007151735480874777
    2. ' r' → logprob: -7.250715255737305
    3. '
' → logprob: -12.375715255737305
    4. ' 
' → logprob: -14.500715255737305
    5. ',' → logprob: -15.625715255737305
    6. '  
' → logprob: -16.125715255737305
    7. '_r' → logprob: -17.000715255737305
    8. '
' → logprob: -17.000715255737305
    9. '```' → logprob: -17.000715255737305
    10. '

' → logprob: -17.875715255737305

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144110918045044
    2. '=' → logprob: -1.7014410495758057
    3. ' =
' → logprob: -11.201440811157227
    4. ' ' → logprob: -11.701440811157227
    5. 'r' → logprob: -13.701440811157227
    6. ' ' → logprob: -13.701440811157227
    7. ')' → logprob: -13.701440811157227
    8. ',' → logprob: -14.451440811157227
    9. '=r' → logprob: -14.576440811157227
    10. ' r' → logprob: -14.826440811157227

Token 357: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20141372084617615
    2. ' p' → logprob: -1.7014137506484985
    3. '(p' → logprob: -15.826414108276367
    4. '   ' → logprob: -15.951414108276367
    5. '	p' → logprob: -16.076414108276367
    6. ' ' → logprob: -16.951414108276367
    7. ' ' → logprob: -17.576414108276367
    8. '_p' → logprob: -18.826414108276367
    9. 'float' → logprob: -19.076414108276367
    10. '  ' → logprob: -19.763914108276367

Token 358: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10021486133337021
    2. '/' → logprob: -2.350214958190918
    3. '/(' → logprob: -13.225214958190918
    4. ' ' → logprob: -13.350214958190918
    5. ' /
' → logprob: -13.475214958190918
    6. ' ' → logprob: -13.475214958190918
    7. '/n' → logprob: -13.975214958190918
    8. ' /(' → logprob: -14.225214958190918
    9. '/
' → logprob: -15.850214958190918
    10. '/p' → logprob: -15.975214958190918

Token 359: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011284190230071545
    2. ' (' → logprob: -4.511284351348877
    3. '(' → logprob: -8.386283874511719
    4. 'n' → logprob: -11.761283874511719
    5. ' n' → logprob: -16.13628387451172
    6. '(
' → logprob: -16.26128387451172
    7. '((' → logprob: -16.76128387451172
    8. ' ' → logprob: -17.01128387451172
    9. '(float' → logprob: -17.01128387451172
    10. '
' → logprob: -17.51128387451172

Token 360: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005236360710114241
    2. ' n' → logprob: -5.2552361488342285
    3. '(n' → logprob: -13.005236625671387
    4. ' (' → logprob: -16.00523567199707
    5. '   ' → logprob: -16.25523567199707
    6. ' ' → logprob: -16.63023567199707
    7. '	n' → logprob: -17.38023567199707
    8. '  ' → logprob: -18.13023567199707
    9. ')n' → logprob: -18.25523567199707
    10. ' ' → logprob: -18.75523567199707

Token 361: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7066716551780701
    2. ' *' → logprob: -0.7066716551780701
    3. '**' → logprob: -4.456671714782715
    4. ' **' → logprob: -6.456671714782715
    5. ' ' → logprob: -8.956671714782715
    6. '*n' → logprob: -9.206671714782715
    7. ' ' → logprob: -10.956671714782715
    8. '2' → logprob: -12.331671714782715
    9. ')' → logprob: -12.331671714782715
    10. '*p' → logprob: -12.581671714782715

Token 362: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002477200934663415
    2. ' n' → logprob: -6.002477169036865
    3. '2' → logprob: -13.877477645874023
    4. ' ' → logprob: -14.877477645874023
    5. '	n' → logprob: -15.502477645874023
    6. ' ' → logprob: -17.377477645874023
    7. ')n' → logprob: -18.127477645874023
    8. ')' → logprob: -18.502477645874023
    9. '   ' → logprob: -18.752477645874023
    10. 'p' → logprob: -18.877477645874023

Token 363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. ' )' → logprob: -11.500011444091797
    3. ')
' → logprob: -14.375011444091797
    4. '))' → logprob: -16.000011444091797
    5. ')**' → logprob: -16.125011444091797
    6. ')

' → logprob: -16.375011444091797
    7. '**' → logprob: -16.875011444091797
    8. '}' → logprob: -17.250011444091797
    9. ')#' → logprob: -17.250011444091797
    10. ')`' → logprob: -17.625011444091797

Token 364: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05208954960107803
    2. '<|end|>' → logprob: -3.8020894527435303
    3. '#' → logprob: -3.9270894527435303
    4. '
' → logprob: -5.052089691162109
    5. ')' → logprob: -6.677089691162109
    6. '```' → logprob: -7.802089691162109
    7. '#print' → logprob: -8.55208969116211
    8. 'if' → logprob: -8.80208969116211
    9. '\n' → logprob: -9.17708969116211
    10. ' print' → logprob: -9.42708969116211

Token 365: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000810340337920934
    2. '#' → logprob: -7.375810146331787
    3. 'if' → logprob: -8.625810623168945
    4. 'result' → logprob: -13.500810623168945
    5. '#print' → logprob: -13.500810623168945
    6. 'prin' → logprob: -13.875810623168945
    7. 'pr' → logprob: -15.000810623168945
    8. 'r' → logprob: -16.750810623168945
    9. ' print' → logprob: -16.875810623168945
    10. '```' → logprob: -17.125810623168945

Token 366: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.001473079901188612
    2. '#' → logprob: -6.7514729499816895
    3. 'r' → logprob: -8.376473426818848
    4. 'ate' → logprob: -10.126473426818848
    5. 'print' → logprob: -11.501473426818848
    6. 'uler' → logprob: -12.126473426818848
    7. 'e' → logprob: -12.876473426818848
    8. 'ater' → logprob: -12.876473426818848
    9. 'uer' → logprob: -13.251473426818848
    10. 'rer' → logprob: -13.376473426818848

Token 367: ' une' (ID: 2463)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2010183334350586
    2. 'result' → logprob: -1.2010183334350586
    3. 'q' → logprob: -1.3260183334350586
    4. 's' → logprob: -2.2010183334350586
    5. 'r' → logprob: -4.201018333435059
    6. 'v' → logprob: -6.076018333435059
    7. 'res' → logprob: -6.326018333435059
    8. 't' → logprob: -8.076018333435059
    9. 'p' → logprob: -8.326018333435059
    10. 'total' → logprob: -8.326018333435059

Token 368: ' nouvelle' (ID: 24562)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7717386484146118
    2. 'val' → logprob: -1.6467386484146118
    3. 'result' → logprob: -2.1467385292053223
    4. 's' → logprob: -2.2717385292053223
    5. 'v' → logprob: -2.6467385292053223
    6. 't' → logprob: -5.021738529205322
    7. 'r' → logprob: -5.146738529205322
    8. 'print' → logprob: -5.146738529205322
    9. 'p' → logprob: -5.396738529205322
    10. ' q' → logprob: -5.521738529205322

Token 369: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.008949936367571354
    2. ' valeur' → logprob: -5.5089497566223145
    3. 'variable' → logprob: -6.0089497566223145
    4. 'v' → logprob: -7.1339497566223145
    5. '#' → logprob: -8.008950233459473
    6. 's' → logprob: -8.508950233459473
    7. 'ligne' → logprob: -8.508950233459473
    8. 'value' → logprob: -8.633950233459473
    9. 'p' → logprob: -8.883950233459473
    10. ' variable' → logprob: -9.633950233459473

Token 370: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4098735451698303
    2. 'q' → logprob: -1.2848734855651855
    3. ' s' → logprob: -3.6598734855651855
    4. 't' → logprob: -4.2848734855651855
    5. 'result' → logprob: -4.7848734855651855
    6. ' q' → logprob: -5.4098734855651855
    7. 'r' → logprob: -5.9098734855651855
    8. 'v' → logprob: -6.9098734855651855
    9. 'p' → logprob: -7.1598734855651855
    10. 'x' → logprob: -7.2848734855651855

Token 371: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02651647850871086
    2. '=' → logprob: -3.6515164375305176
    3. ' ' → logprob: -8.776516914367676
    4. ',' → logprob: -11.026516914367676
    5. 'r' → logprob: -11.276516914367676
    6. ' +=' → logprob: -11.776516914367676
    7. 'a' → logprob: -12.151516914367676
    8. 'b' → logprob: -12.276516914367676
    9. ' =
' → logprob: -13.026516914367676
    10. ' ' → logprob: -13.401516914367676

Token 372: ' multip' (ID: 17524)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0183006525039673
    2. 'r' → logprob: -1.1433006525039673
    3. 'abs' → logprob: -1.5183006525039673
    4. '(p' → logprob: -3.6433005332946777
    5. 'int' → logprob: -4.643300533294678
    6. '(n' → logprob: -4.643300533294678
    7. ' p' → logprob: -4.643300533294678
    8. ' r' → logprob: -4.893300533294678
    9. 'n' → logprob: -5.018300533294678
    10. 'multip' → logprob: -5.268300533294678

Token 373: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.0075945607386529446
    2. 'licant' → logprob: -5.257594585418701
    3. 'ly' → logprob: -6.882594585418701
    4. 'lying' → logprob: -7.257594585418701
    5. '*' → logprob: -8.507594108581543
    6. 'lié' → logprob: -9.132594108581543
    7. 'licit' → logprob: -9.257594108581543
    8. 'lication' → logprob: -9.882594108581543
    9. 'iquant' → logprob: -10.132594108581543
    10. '1' → logprob: -11.007594108581543

Token 374: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004597457125782967
    2. 'pant' → logprob: -6.0045976638793945
    3. 'pt' → logprob: -7.2545976638793945
    4. 'nt' → logprob: -7.5045976638793945
    5. 'er' → logprob: -8.504597663879395
    6. 'p' → logprob: -8.754597663879395
    7. 'ent' → logprob: -9.629597663879395
    8. 'plant' → logprob: -9.629597663879395
    9. 'çant' → logprob: -9.754597663879395
    10. 'quant' → logprob: -9.754597663879395

Token 375: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2344374805688858
    2. ' r' → logprob: -1.6094374656677246
    3. 'm' → logprob: -5.234437465667725
    4. ' m' → logprob: -6.109437465667725
    5. 'p' → logprob: -7.359437465667725
    6. ' p' → logprob: -7.734437465667725
    7. 'd' → logprob: -9.484437942504883
    8. 'n' → logprob: -9.984437942504883
    9. '(r' → logprob: -10.109437942504883
    10. ' d' → logprob: -10.359437942504883

Token 376: ' par' (ID: 686)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9851551651954651
    2. ' *' → logprob: -1.2351551055908203
    3. ' by' → logprob: -1.6101551055908203
    4. ' par' → logprob: -3.2351551055908203
    5. ' r' → logprob: -3.4851551055908203
    6. 'r' → logprob: -3.9851551055908203
    7. '*r' → logprob: -4.36015510559082
    8. ',' → logprob: -4.48515510559082
    9. 'by' → logprob: -4.48515510559082
    10. 'a' → logprob: -5.11015510559082

Token 377: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31643062829971313
    2. ' m' → logprob: -1.3164305686950684
    3. '100' → logprob: -6.316430568695068
    4. '10' → logprob: -8.191431045532227
    5. '(m' → logprob: -8.941431045532227
    6. 'n' → logprob: -9.066431045532227
    7. ' ' → logprob: -9.066431045532227
    8. '2' → logprob: -9.191431045532227
    9. ' n' → logprob: -9.316431045532227
    10. '(' → logprob: -9.441431045532227

Token 378: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04916803538799286
    2. ' m' → logprob: -3.174168109893799
    3. '(m' → logprob: -6.424168109893799
    4. 'n' → logprob: -6.924168109893799
    5. '2' → logprob: -7.049168109893799
    6. '(' → logprob: -7.299168109893799
    7. ' (' → logprob: -7.799168109893799
    8. '100' → logprob: -8.29916763305664
    9. '10' → logprob: -8.54916763305664
    10. 'r' → logprob: -8.79916763305664

Token 379: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7326805591583252
    2. ' *' → logprob: -1.1076805591583252
    3. ' -' → logprob: -2.107680559158325
    4. '+' → logprob: -3.357680559158325
    5. '*' → logprob: -4.482680320739746
    6. ' /' → logprob: -5.107680320739746
    7. '-' → logprob: -5.232680320739746
    8. ' ' → logprob: -5.232680320739746
    9. '**' → logprob: -6.482680320739746
    10. ')' → logprob: -6.857680320739746

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7951499223709106
    2. 'd' → logprob: -0.9201499223709106
    3. ' d' → logprob: -2.545149803161621
    4. 'n' → logprob: -3.795149803161621
    5. ' ' → logprob: -4.045149803161621
    6. ' n' → logprob: -4.295149803161621
    7. 'a' → logprob: -5.295149803161621
    8. 'r' → logprob: -5.295149803161621
    9. '2' → logprob: -6.295149803161621
    10. ' a' → logprob: -6.545149803161621

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6196038126945496
    2. 'd' → logprob: -0.8696038126945496
    3. 'n' → logprob: -3.8696038722991943
    4. ' d' → logprob: -4.494603633880615
    5. 'r' → logprob: -5.869603633880615
    6. ' ' → logprob: -6.244603633880615
    7. ' n' → logprob: -6.494603633880615
    8. '2' → logprob: -6.869603633880615
    9. 'a' → logprob: -7.244603633880615
    10. 'p' → logprob: -7.369603633880615

Token 382: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018314191838726401
    2. ' )' → logprob: -6.376831531524658
    3. ')
' → logprob: -10.5018310546875
    4. ').' → logprob: -10.7518310546875
    5. ')*' → logprob: -10.7518310546875
    6. '*' → logprob: -11.0018310546875
    7. 'a' → logprob: -11.8768310546875
    8. ')

' → logprob: -12.2518310546875
    9. ')#' → logprob: -12.3768310546875
    10. '#' → logprob: -12.5018310546875

Token 383: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011166906915605068
    2. ' a' → logprob: -4.511167049407959
    3. 'r' → logprob: -9.1361665725708
    4. '*' → logprob: -12.3861665725708
    5. '
' → logprob: -13.5111665725708
    6. ' r' → logprob: -13.6361665725708
    7. '*a' → logprob: -13.6361665725708
    8. ' 
' → logprob: -13.8861665725708
    9. ' *' → logprob: -14.8861665725708
    10. '```' → logprob: -15.0111665725708

Token 384: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.5491004129871726e-05
    2. ' a' → logprob: -10.000045776367188
    3. 'r' → logprob: -19.500045776367188
    4. '	a' → logprob: -21.125045776367188
    5. '```' → logprob: -21.250045776367188
    6. '_a' → logprob: -21.625045776367188
    7. '
' → logprob: -21.625045776367188
    8. '   ' → logprob: -22.500045776367188
    9. 'а' → logprob: -22.750045776367188
    10. ' 
' → logprob: -24.625045776367188

Token 385: ' sou' (ID: 4069)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.17993035912513733
    2. 'a' → logprob: -2.0549304485321045
    3. ' ' → logprob: -3.9299304485321045
    4. '=' → logprob: -4.804930210113525
    5. ' =' → logprob: -5.179930210113525
    6. ' )' → logprob: -6.679930210113525
    7. ')' → logprob: -7.054930210113525
    8. ' ' → logprob: -8.429930686950684
    9. 'r' → logprob: -8.679930686950684
    10. '_' → logprob: -9.179930686950684

Token 386: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.9860153198242188
    2. 'ligne' → logprob: -1.7360153198242188
    3. 'b' → logprob: -1.8610153198242188
    4. 'a' → logprob: -1.9860153198242188
    5. 'r' → logprob: -2.6110153198242188
    6. 'p' → logprob: -3.2360153198242188
    7. 'stract' → logprob: -3.9860153198242188
    8. 'str' → logprob: -4.361015319824219
    9. 'straction' → logprob: -5.361015319824219
    10. 'st' → logprob: -6.861015319824219

Token 387: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.035059232264757156
    2. 'r' → logprob: -4.660059452056885
    3. 'ction' → logprob: -4.910059452056885
    4. '(' → logprob: -5.410059452056885
    5. 'cte' → logprob: -6.035059452056885
    6. 'c' → logprob: -6.285059452056885
    7. ' (' → logprob: -6.410059452056885
    8. 'cter' → logprob: -6.785059452056885
    9. 't' → logprob: -7.035059452056885
    10. '(
' → logprob: -7.785059452056885

Token 388: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.40728759765625
    2. ' m' → logprob: -1.40728759765625
    3. '<|end|>' → logprob: -1.65728759765625
    4. ' ' → logprob: -2.40728759765625
    5. ' )' → logprob: -2.53228759765625
    6. ')' → logprob: -3.15728759765625
    7. '1' → logprob: -3.15728759765625
    8. ' (' → logprob: -3.53228759765625
    9. ' ' → logprob: -4.28228759765625
    10. 'r' → logprob: -5.40728759765625

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00376314390450716
    2. ' ' → logprob: -5.753763198852539
    3. 'm' → logprob: -8.378763198852539
    4. 'un' → logprob: -9.128763198852539
    5. ' un' → logprob: -10.003763198852539
    6. 'une' → logprob: -10.378763198852539
    7. ' ' → logprob: -10.753763198852539
    8. 'r' → logprob: -10.753763198852539
    9. '(' → logprob: -10.878763198852539
    10. 'le' → logprob: -11.003763198852539

Token 390: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010185838676989079
    2. 'a' → logprob: -5.385185718536377
    3. 'from' → logprob: -6.260185718536377
    4. ' )' → logprob: -6.760185718536377
    5. '*' → logprob: -7.135185718536377
    6. '(' → logprob: -7.760185718536377
    7. ' a' → logprob: -8.635186195373535
    8. 'm' → logprob: -8.760186195373535
    9. '()' → logprob: -9.010186195373535
    10. ',' → logprob: -9.385186195373535

Token 391: ' la' (ID: 557)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20141518115997314
    2. ' m' → logprob: -1.7014151811599731
    3. '(m' → logprob: -14.701415061950684
    4. ' ' → logprob: -14.826415061950684
    5. ' ' → logprob: -14.826415061950684
    6. '1' → logprob: -14.951415061950684
    7. ')m' → logprob: -16.076416015625
    8. '	m' → logprob: -16.201416015625
    9. ' (' → logprob: -16.451416015625
    10. ')' → logprob: -16.701416015625

Token 392: ' valeur' (ID: 41664)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08897960186004639
    2. ' m' → logprob: -2.463979721069336
    3. '1' → logprob: -10.588979721069336
    4. ' ' → logprob: -11.338979721069336
    5. '	m' → logprob: -14.338979721069336
    6. ' (' → logprob: -14.463979721069336
    7. ' ' → logprob: -14.463979721069336
    8. '(m' → logprob: -14.713979721069336
    9. ')' → logprob: -15.463979721069336
    10. '(' → logprob: -15.463979721069336

Token 393: ' de' (ID: 334)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05528290942311287
    2. ' m' → logprob: -2.9302828311920166
    3. '1' → logprob: -8.055282592773438
    4. ' ' → logprob: -10.430282592773438
    5. ' (' → logprob: -10.680282592773438
    6. ')' → logprob: -11.555282592773438
    7. '(' → logprob: -11.805282592773438
    8. '(m' → logprob: -12.055282592773438
    9. ' ' → logprob: -12.430282592773438
    10. ' )' → logprob: -13.430282592773438

Token 394: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02975071594119072
    2. ' m' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. '	m' → logprob: -16.02975082397461
    5. ' ' → logprob: -18.52975082397461
    6. ')m' → logprob: -18.90475082397461
    7. '(m' → logprob: -19.40475082397461
    8. '```' → logprob: -19.40475082397461
    9. ')' → logprob: -19.52975082397461
    10. 'м' → logprob: -19.77975082397461

Token 395: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016673507168889046
    2. ' )' → logprob: -4.266673564910889
    3. '```' → logprob: -7.891673564910889
    4. ')
' → logprob: -8.14167308807373
    5. '*' → logprob: -8.39167308807373
    6. ')*' → logprob: -8.51667308807373
    7. '   ' → logprob: -8.64167308807373
    8. ' ' → logprob: -8.76667308807373
    9. ' *' → logprob: -9.14167308807373
    10. '<|end|>' → logprob: -9.39167308807373

Token 396: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.0551719069480896
    2. ' then' → logprob: -3.8051719665527344
    3. ')' → logprob: -5.180171966552734
    4. 'r' → logprob: -5.180171966552734
    5. ' a' → logprob: -5.305171966552734
    6. ' r' → logprob: -5.305171966552734
    7. 'a' → logprob: -5.430171966552734
    8. ' )' → logprob: -6.430171966552734
    9. ',' → logprob: -6.680171966552734
    10. ' m' → logprob: -7.180171966552734

Token 397: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12472698837518692
    2. ' r' → logprob: -2.6247270107269287
    3. ' multipl' → logprob: -3.6247270107269287
    4. ')' → logprob: -4.74972677230835
    5. ' multip' → logprob: -5.87472677230835
    6. ' ' → logprob: -6.37472677230835
    7. '*' → logprob: -6.99972677230835
    8. '<|end|>' → logprob: -7.12472677230835
    9. ' ' → logprob: -7.49972677230835
    10. ' multiplier' → logprob: -8.249727249145508

Token 398: ' multipl' (ID: 44269)
  Prédit: ' multipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multipl' → logprob: -0.243435800075531
    2. 'r' → logprob: -1.9934358596801758
    3. ' r' → logprob: -2.618435859680176
    4. ' multip' → logprob: -6.743435859680176
    5. 'mult' → logprob: -6.868435859680176
    6. '*' → logprob: -6.868435859680176
    7. ' (' → logprob: -6.993435859680176
    8. 'multip' → logprob: -6.993435859680176
    9. 'multiply' → logprob: -7.618435859680176
    10. ' multiply' → logprob: -7.618435859680176

Token 399: 'ie' (ID: 396)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.4931309223175049
    2. 'le' → logprob: -2.243130922317505
    3. 'ipl' → logprob: -2.243130922317505
    4. 'ie' → logprob: -2.618130922317505
    5. 'pl' → logprob: -2.868130922317505
    6. 'ip' → logprob: -2.868130922317505
    7. 'plique' → logprob: -2.993130922317505
    8. 'm' → logprob: -3.118130922317505
    9. 'ipe' → logprob: -3.493130922317505
    10. 'e' → logprob: -3.493130922317505

Token 400: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03445015475153923
    2. ' r' → logprob: -3.409450054168701
    3. 'a' → logprob: -7.784450054168701
    4. ' par' → logprob: -8.28445053100586
    5. ' a' → logprob: -9.90945053100586
    6. 'par' → logprob: -10.03445053100586
    7. '(r' → logprob: -10.40945053100586
    8. ' ' → logprob: -12.40945053100586
    9. '(' → logprob: -13.65945053100586
    10. ' ' → logprob: -13.78445053100586

Token 401: ' résultat' (ID: 62556)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04641248285770416
    2. ' r' → logprob: -3.296412467956543
    3. 'a' → logprob: -4.921412467956543
    4. ' a' → logprob: -6.921412467956543
    5. ' ' → logprob: -10.671412467956543
    6. ' ' → logprob: -11.546412467956543
    7. '(r' → logprob: -12.171412467956543
    8. ')' → logprob: -12.421412467956543
    9. ' 
' → logprob: -12.671412467956543
    10. ' )' → logprob: -12.921412467956543

Token 402: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.017382415011525154
    2. 'par' → logprob: -4.767382621765137
    3. 'r' → logprob: -5.142382621765137
    4. ' r' → logprob: -6.642382621765137
    5. '*' → logprob: -7.642382621765137
    6. 'a' → logprob: -7.892382621765137
    7. '.' → logprob: -8.017382621765137
    8. ' a' → logprob: -9.392382621765137
    9. ')' → logprob: -9.517382621765137
    10. '*r' → logprob: -9.767382621765137

Token 403: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07889264822006226
    2. ' r' → logprob: -2.578892707824707
    3. ' ' → logprob: -12.953892707824707
    4. ' ' → logprob: -15.578892707824707
    5. '	r' → logprob: -15.703892707824707
    6. ' 
' → logprob: -16.70389175415039
    7. ' a' → logprob: -17.45389175415039
    8. 'a' → logprob: -17.57889175415039
    9. '"' → logprob: -17.70389175415039
    10. '(r' → logprob: -17.70389175415039

Token 404: ' variable' (ID: 11076)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0017044597771018744
    2. ' r' → logprob: -6.376704692840576
    3. ' ' → logprob: -14.126704216003418
    4. 'a' → logprob: -14.126704216003418
    5. '	r' → logprob: -15.251704216003418
    6. ' ' → logprob: -15.876704216003418
    7. ')' → logprob: -16.251705169677734
    8. '(r' → logprob: -16.626705169677734
    9. '.' → logprob: -17.126705169677734
    10. ' (' → logprob: -17.501705169677734

Token 405: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05488555505871773
    2. ' r' → logprob: -2.9298856258392334
    3. ' ' → logprob: -13.804885864257812
    4. ' ' → logprob: -14.179885864257812
    5. '	r' → logprob: -14.554885864257812
    6. 'a' → logprob: -14.554885864257812
    7. ' 
' → logprob: -16.179885864257812
    8. '(r' → logprob: -16.304885864257812
    9. '```' → logprob: -16.304885864257812
    10. ' a' → logprob: -16.429885864257812

Token 406: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.9040898880339228e-05
    2. ' a' → logprob: -10.500028610229492
    3. '
' → logprob: -14.250028610229492
    4. 'r' → logprob: -14.625028610229492
    5. '*a' → logprob: -15.250028610229492
    6. '*' → logprob: -17.125028610229492
    7. '```' → logprob: -17.750028610229492
    8. '	a' → logprob: -18.125028610229492
    9. 'а' → logprob: -18.500028610229492
    10. '_a' → logprob: -18.625028610229492

Token 407: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. ' a' → logprob: -13.625000953674316
    3. '```' → logprob: -17.625001907348633
    4. '
' → logprob: -18.875001907348633
    5. '_a' → logprob: -19.500001907348633
    6. '	a' → logprob: -19.625001907348633
    7. '*a' → logprob: -20.125001907348633
    8. ',a' → logprob: -21.875001907348633
    9. 'а' → logprob: -21.875001907348633
    10. '#a' → logprob: -22.000001907348633

Token 408: ' Cela' (ID: 44403)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -17.375
    3. '```' → logprob: -18.375
    4. '
' → logprob: -20.75
    5. 'а' → logprob: -22.5
    6. '	a' → logprob: -23.25
    7. '_a' → logprob: -24.125
    8. '``' → logprob: -24.125
    9. '#' → logprob: -24.5
    10. 'r' → logprob: -25.0

Token 409: ' permet' (ID: 11798)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1614115685224533
    2. '=' → logprob: -2.9114115238189697
    3. ' *' → logprob: -3.2864115238189697
    4. 'a' → logprob: -3.6614115238189697
    5. ' =' → logprob: -4.161411762237549
    6. 'r' → logprob: -5.411411762237549
    7. ' *=' → logprob: -5.786411762237549
    8. ' a' → logprob: -5.911411762237549
    9. '*=' → logprob: -6.286411762237549
    10. '#' → logprob: -6.911411762237549

Token 410: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.76406329870224
    2. 'de' → logprob: -1.2640633583068848
    3. ' de' → logprob: -2.2640633583068848
    4. ' d' → logprob: -2.5140633583068848
    5. 'a' → logprob: -2.7640633583068848
    6. '#' → logprob: -6.389063358306885
    7. ' a' → logprob: -7.264063358306885
    8. '   ' → logprob: -8.014062881469727
    9. 't' → logprob: -8.389062881469727
    10. 'à' → logprob: -8.514062881469727

Token 411: ''obtenir' (ID: 191633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22197730839252472
    2. ' a' → logprob: -1.8469773530960083
    3. ' calcul' → logprob: -3.3469772338867188
    4. 'r' → logprob: -5.971977233886719
    5. ' r' → logprob: -7.471977233886719
    6. '_a' → logprob: -7.471977233886719
    7. ' continuer' → logprob: -7.596977233886719
    8. '=' → logprob: -8.596977233886719
    9. ' =' → logprob: -8.596977233886719
    10. ' obtenir' → logprob: -8.596977233886719

Token 412: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08167818933725357
    2. ' r' → logprob: -2.5816781520843506
    3. 'a' → logprob: -5.95667839050293
    4. ' a' → logprob: -8.58167839050293
    5. ' ' → logprob: -12.70667839050293
    6. '(r' → logprob: -13.58167839050293
    7. ' ' → logprob: -13.58167839050293
    8. ' la' → logprob: -14.08167839050293
    9. ' (' → logprob: -14.70667839050293
    10. ' une' → logprob: -14.83167839050293

Token 413: ' résultat' (ID: 62556)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036098056007176638
    2. 'r' → logprob: -5.878609657287598
    3. ' a' → logprob: -7.253609657287598
    4. 'result' → logprob: -9.378609657287598
    5. ' r' → logprob: -12.378609657287598
    6. 'val' → logprob: -13.253609657287598
    7. 'float' → logprob: -13.378609657287598
    8. 'value' → logprob: -14.003609657287598
    9. 'rés' → logprob: -14.003609657287598
    10. ' result' → logprob: -14.253609657287598

Token 414: ' final' (ID: 1721)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011947521707043052
    2. ' a' → logprob: -6.751194953918457
    3. '=' → logprob: -11.626194953918457
    4. ' =' → logprob: -12.251194953918457
    5. 'r' → logprob: -13.376194953918457
    6. '.' → logprob: -13.376194953918457
    7. '*' → logprob: -13.376194953918457
    8. '_a' → logprob: -13.751194953918457
    9. '*a' → logprob: -14.001194953918457
    10. '```' → logprob: -14.126194953918457

Token 415: ' avant' (ID: 13339)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001093841710826382
    2. ' a' → logprob: -9.125109672546387
    3. ',' → logprob: -16.25010871887207
    4. '```' → logprob: -16.25010871887207
    5. '.
' → logprob: -16.37510871887207
    6. ' =' → logprob: -16.87510871887207
    7. '
' → logprob: -17.00010871887207
    8. '.' → logprob: -18.12510871887207
    9. '   ' → logprob: -18.50010871887207
    10. '#' → logprob: -18.50010871887207

Token 416: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7973366975784302
    2. 'print' → logprob: -0.7973366975784302
    3. 'aff' → logprob: -2.6723365783691406
    4. 'la' → logprob: -4.422336578369141
    5. '#' → logprob: -5.047336578369141
    6. ' l' → logprob: -5.297336578369141
    7. 'p' → logprob: -6.422336578369141
    8. 'a' → logprob: -6.672336578369141
    9. 'r' → logprob: -7.047336578369141
    10. 'd' → logprob: -7.422336578369141

Token 417: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9508965611457825
    2. ''aff' → logprob: -1.4508965015411377
    3. ''impression' → logprob: -1.7008965015411377
    4. 'print' → logprob: -2.2008965015411377
    5. 'aff' → logprob: -2.9508965015411377
    6. 'arr' → logprob: -4.325896739959717
    7. '#' → logprob: -4.825896739959717
    8. 'e' → logprob: -5.075896739959717
    9. 'im' → logprob: -5.700896739959717
    10. ''arr' → logprob: -6.700896739959717

Token 418: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.0011910604080185294
    2. 'ich' → logprob: -7.001191139221191
    3. '#' → logprob: -8.501191139221191
    4. 'ch' → logprob: -10.501191139221191
    5. 'icher' → logprob: -10.876191139221191
    6. 'ic' → logprob: -10.876191139221191
    7. 'iche' → logprob: -13.126191139221191
    8. 'ication' → logprob: -13.501191139221191
    9. ' #' → logprob: -13.626191139221191
    10. '```' → logprob: -13.751191139221191

Token 419: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.875003814697266
    3. '```' → logprob: -14.375003814697266
    4. '
' → logprob: -16.125003814697266
    5. '#' → logprob: -17.625003814697266
    6. '.
' → logprob: -17.750003814697266
    7. ' =' → logprob: -17.875003814697266
    8. '``' → logprob: -18.000003814697266
    9. 'а' → logprob: -18.000003814697266
    10. ',' → logprob: -18.125003814697266

Token 420: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. ' a' → logprob: -17.25
    4. '
' → logprob: -20.875
    5. 'а' → logprob: -21.875
    6. '``' → logprob: -22.125
    7. '#' → logprob: -22.625
    8. '	a' → logprob: -23.0
    9. '#a' → logprob: -23.125
    10. '_a' → logprob: -23.375

Token 421: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193706154823303
    2. '=' → logprob: -1.5019370317459106
    3. '=a' → logprob: -12.876936912536621
    4. ' =
' → logprob: -13.126936912536621
    5. ' ' → logprob: -13.376936912536621
    6. 'a' → logprob: -14.251936912536621
    7. ' a' → logprob: -15.126936912536621
    8. ' ' → logprob: -15.626936912536621
    9. ' =
' → logprob: -15.626936912536621
    10. '=
' → logprob: -16.001937866210938

Token 422: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01416350994259119
    2. ' r' → logprob: -4.264163494110107
    3. '	r' → logprob: -17.389163970947266
    4. '   ' → logprob: -20.139163970947266
    5. ' ' → logprob: -20.514163970947266
    6. '(r' → logprob: -20.764163970947266
    7. '_r' → logprob: -20.889163970947266
    8. 'a' → logprob: -21.264163970947266
    9. ' ' → logprob: -22.764163970947266
    10. '­r' → logprob: -23.389163970947266

Token 423: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.054908569902181625
    2. '*' → logprob: -2.929908514022827
    3. '*(' → logprob: -11.179908752441406
    4. ' ' → logprob: -12.054908752441406
    5. ' ' → logprob: -12.429908752441406
    6. 'a' → logprob: -14.429908752441406
    7. ' *
' → logprob: -14.929908752441406
    8. '*r' → logprob: -14.929908752441406
    9. ' *(' → logprob: -15.304908752441406
    10. '```' → logprob: -15.554908752441406

Token 424: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12694302201271057
    2. '(m' → logprob: -2.1269431114196777
    3. '(' → logprob: -11.12694263458252
    4. ' ' → logprob: -16.126943588256836
    5. ' ' → logprob: -16.501943588256836
    6. ',' → logprob: -16.751943588256836
    7. '(M' → logprob: -17.501943588256836
    8. '(n' → logprob: -17.626943588256836
    9. '(s' → logprob: -18.001943588256836
    10. '(
' → logprob: -19.251943588256836

Token 425: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03302261605858803
    2. '(m' → logprob: -3.65802264213562
    3. ' m' → logprob: -5.033022403717041
    4. ' (' → logprob: -8.7830228805542
    5. '(' → logprob: -10.5330228805542
    6. '	m' → logprob: -14.9080228805542
    7. '   ' → logprob: -16.158021926879883
    8. ')m' → logprob: -16.408021926879883
    9. '_m' → logprob: -16.533021926879883
    10. '(
' → logprob: -16.533021926879883

Token 426: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061981916427612305
    2. '-' → logprob: -2.8119819164276123
    3. ' ' → logprob: -11.311982154846191
    4. ')' → logprob: -13.686982154846191
    5. ' ' → logprob: -14.811982154846191
    6. '1' → logprob: -16.061981201171875
    7. '<|end|>' → logprob: -16.686981201171875
    8. ' -
' → logprob: -16.936981201171875
    9. ' minus' → logprob: -16.936981201171875
    10. '-
' → logprob: -17.186981201171875

Token 427: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.50247573852539
    4. ')' → logprob: -17.87747573852539
    5. ' ' → logprob: -18.12747573852539
    6. '<|end|>' → logprob: -18.37747573852539
    7. '۱' → logprob: -19.06497573852539
    8. '```' → logprob: -19.31497573852539
    9. '' → logprob: -19.68997573852539
    10. '１' → logprob: -19.75247573852539

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.875
    5. '<|end|>' → logprob: -20.125
    6. ')' → logprob: -20.5
    7. '۱' → logprob: -20.5
    8. '
' → logprob: -20.875
    9. '' → logprob: -21.0
    10. '１' → logprob: -21.0625

Token 429: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -13.625003814697266
    4. '))' → logprob: -15.000003814697266
    5. ')#' → logprob: -15.875003814697266
    6. ')

' → logprob: -17.125003814697266
    7. '+' → logprob: -17.625003814697266
    8. ')`' → logprob: -18.000003814697266
    9. '),' → logprob: -18.750003814697266
    10. ')}' → logprob: -18.750003814697266

Token 430: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5577775128767826e-06
    2. '#' → logprob: -12.250005722045898
    3. ' print' → logprob: -15.000005722045898
    4. '#print' → logprob: -15.125005722045898
    5. '```' → logprob: -16.0000057220459
    6. '
' → logprob: -17.3750057220459
    7. 'a' → logprob: -18.2500057220459
    8. 'result' → logprob: -20.3750057220459
    9. '\' → logprob: -21.1250057220459
    10. '(print' → logprob: -21.3750057220459

Token 431: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '#' → logprob: -15.375
    3. ' print' → logprob: -17.375
    4. '#print' → logprob: -18.0
    5. 'a' → logprob: -18.125
    6. 'result' → logprob: -18.5
    7. 'pr' → logprob: -19.5
    8. 'prin' → logprob: -19.75
    9. '```' → logprob: -19.875
    10. '
' → logprob: -21.375

Token 432: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0034029979724437
    2. '#' → logprob: -6.128403186798096
    3. 'f' → logprob: -7.003403186798096
    4. 'ichage' → logprob: -8.628402709960938
    5. 'fic' → logprob: -9.503402709960938
    6. 'cher' → logprob: -11.003402709960938
    7. 'ich' → logprob: -11.253402709960938
    8. 'iche' → logprob: -11.878402709960938
    9. 'ic' → logprob: -12.128402709960938
    10. '   ' → logprob: -12.878402709960938

Token 433: ' le' (ID: 505)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.030344031751155853
    2. 'a' → logprob: -3.530344009399414
    3. '(round' → logprob: -8.405344009399414
    4. 'round' → logprob: -8.905344009399414
    5. 'int' → logprob: -9.030344009399414
    6. '(' → logprob: -9.530344009399414
    7. '(int' → logprob: -11.030344009399414
    8. 'print' → logprob: -11.030344009399414
    9. '("{' → logprob: -12.905344009399414
    10. 'la' → logprob: -13.280344009399414

Token 434: ' résultat' (ID: 62556)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.43080008029937744
    2. '(a' → logprob: -1.0558000802993774
    3. 'result' → logprob: -7.180799961090088
    4. 'int' → logprob: -8.055800437927246
    5. ' a' → logprob: -8.555800437927246
    6. ')' → logprob: -8.555800437927246
    7. '(' → logprob: -8.805800437927246
    8. 'r' → logprob: -9.180800437927246
    9. '(round' → logprob: -9.305800437927246
    10. 'round' → logprob: -9.430800437927246

Token 435: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.875
    3. '```' → logprob: -16.125
    4. 'a' → logprob: -16.25
    5. '
' → logprob: -17.75
    6. ')
' → logprob: -19.75
    7. '(print' → logprob: -19.875
    8. '``' → logprob: -21.875
    9. '.print' → logprob: -21.875
    10. '#print' → logprob: -21.875

Token 436: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0037049429956823587
    2. ' a' → logprob: -6.128705024719238
    3. 'print' → logprob: -6.503705024719238
    4. 'round' → logprob: -11.753705024719238
    5. 'int' → logprob: -12.003705024719238
    6. ' print' → logprob: -12.128705024719238
    7. '(a' → logprob: -14.503705024719238
    8. ' la' → logprob: -15.378705024719238
    9. ' round' → logprob: -15.378705024719238
    10. 'la' → logprob: -15.878705024719238

Token 437: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.014684110297821e-06
    2. 'a' → logprob: -12.875008583068848
    3. '
' → logprob: -12.875008583068848
    4. ' print' → logprob: -13.250008583068848
    5. ')
' → logprob: -14.250008583068848
    6. '```' → logprob: -14.250008583068848
    7. ')' → logprob: -14.625008583068848
    8. ',' → logprob: -16.125009536743164
    9. '.print' → logprob: -16.250009536743164
    10. '(print' → logprob: -16.750009536743164

Token 438: ' arr' (ID: 1724)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07872375845909119
    2. 'a' → logprob: -3.328723669052124
    3. ' print' → logprob: -3.828723669052124
    4. ' a' → logprob: -4.453723907470703
    5. 'round' → logprob: -6.203723907470703
    6. 'format' → logprob: -6.578723907470703
    7. ')' → logprob: -6.953723907470703
    8. 'end' → logprob: -6.953723907470703
    9. ' format' → logprob: -8.328723907470703
    10. ' round' → logprob: -8.328723907470703

Token 439: 'ondi' (ID: 117409)
  Prédit: 'ond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.16069930791854858
    2. 'ondi' → logprob: -1.9106993675231934
    3. 'ont' → logprob: -8.035698890686035
    4. 'on' → logprob: -9.160698890686035
    5. 'ondissement' → logprob: -10.785698890686035
    6. 'ound' → logprob: -11.535698890686035
    7. 'onden' → logprob: -12.535698890686035
    8. 'o' → logprob: -12.535698890686035
    9. 'онд' → logprob: -13.285698890686035
    10. '"' → logprob: -13.535698890686035

Token 440: ' à' (ID: 1221)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21888218820095062
    2. '(' → logprob: -1.7188822031021118
    3. '()' → logprob: -4.343882083892822
    4. '(round' → logprob: -5.593882083892822
    5. 'a' → logprob: -8.46888256072998
    6. ')' → logprob: -9.09388256072998
    7. ' (' → logprob: -9.84388256072998
    8. ',' → logprob: -9.96888256072998
    9. '(
' → logprob: -10.21888256072998
    10. '.' → logprob: -10.84388256072998

Token 441: ' huit' (ID: 108924)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22206611931324005
    2. '3' → logprob: -2.0970661640167236
    3. '4' → logprob: -3.0970661640167236
    4. ' ' → logprob: -4.0970659255981445
    5. '6' → logprob: -4.5970659255981445
    6. '5' → logprob: -5.4720659255981445
    7. '7' → logprob: -9.097065925598145
    8. '8' → logprob: -10.472065925598145
    9. '1' → logprob: -10.597065925598145
    10. 'de' → logprob: -10.972065925598145

Token 442: ' chiffres' (ID: 105565)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6114487648010254
    2. ',' → logprob: -1.4864487648010254
    3. ')' → logprob: -2.8614487648010254
    4. 'e' → logprob: -2.9864487648010254
    5. ' ' → logprob: -3.8614487648010254
    6. ' déc' → logprob: -3.9864487648010254
    7. ' places' → logprob: -4.486448764801025
    8. 'f' → logprob: -4.986448764801025
    9. 'print' → logprob: -4.986448764801025
    10. '2' → logprob: -5.361448764801025

Token 443: ' après' (ID: 16460)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.015841007232666
    2. 'print' → logprob: -1.140841007232666
    3. 'e' → logprob: -1.640841007232666
    4. 'a' → logprob: -3.390841007232666
    5. ')' → logprob: -3.390841007232666
    6. 'round' → logprob: -3.890841007232666
    7. '.' → logprob: -5.140841007232666
    8. 'r' → logprob: -5.140841007232666
    9. '8' → logprob: -5.390841007232666
    10. '(round' → logprob: -5.640841007232666

Token 444: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.02651079371571541
    2. 'le' → logprob: -4.651510715484619
    3. ' la' → logprob: -4.651510715484619
    4. 'l' → logprob: -5.026510715484619
    5. ',' → logprob: -8.651511192321777
    6. '.' → logprob: -9.526511192321777
    7. '_la' → logprob: -9.526511192321777
    8. 'decimal' → logprob: -9.901511192321777
    9. 'vir' → logprob: -10.901511192321777
    10. ' le' → logprob: -10.901511192321777

Token 445: ' virg' (ID: 165362)
  Prédit: 'vir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vir' → logprob: -0.0002398938377154991
    2. '.' → logprob: -9.000240325927734
    3. ',' → logprob: -9.625240325927734
    4. ' virg' → logprob: -10.125240325927734
    5. 'decimal' → logprob: -11.875240325927734
    6. 'point' → logprob: -14.250240325927734
    7. ' Virg' → logprob: -14.375240325927734
    8. 'Vir' → logprob: -14.375240325927734
    9. 'v' → logprob: -14.625240325927734
    10. 'ví' → logprob: -14.750240325927734

Token 446: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0898345559835434
    2. 'uge' → logprob: -2.714834451675415
    3. 'ge' → logprob: -4.839834690093994
    4. 'ise' → logprob: -6.714834690093994
    5. 'ale' → logprob: -6.714834690093994
    6. 'g' → logprob: -6.839834690093994
    7. 'ège' → logprob: -6.839834690093994
    8. 'oge' → logprob: -6.964834690093994
    9. 'e' → logprob: -7.339834690093994
    10. 'ege' → logprob: -7.714834690093994

Token 447: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4736459888808895e-05
    2. '
' → logprob: -11.625014305114746
    3. ' print' → logprob: -12.125014305114746
    4. '```' → logprob: -15.750014305114746
    5. ',' → logprob: -16.625015258789062
    6. '.print' → logprob: -17.750015258789062
    7. '
' → logprob: -18.250015258789062
    8. ')' → logprob: -18.375015258789062
    9. '(print' → logprob: -18.375015258789062
    10. ')
' → logprob: -18.625015258789062

Token 448: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. '```' → logprob: -22.375
    4. 'printf' → logprob: -25.875
    5. '#print' → logprob: -26.625
    6. '	print' → logprob: -26.875
    7. '.print' → logprob: -27.125
    8. 'import' → logprob: -27.25
    9. '
' → logprob: -28.125
    10. 'pr' → logprob: -29.125

Token 449: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.375
    3. '```' → logprob: -21.625
    4. 'printf' → logprob: -22.5
    5. '#print' → logprob: -23.25
    6. 'prin' → logprob: -24.5
    7. 'pr' → logprob: -24.875
    8. '
' → logprob: -25.5
    9. '	print' → logprob: -26.0
    10. 'prit' → logprob: -26.0

Token 450: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.650518920039758e-06
    2. ' print' → logprob: -12.625003814697266
    3. 'pr' → logprob: -16.250003814697266
    4. 'prin' → logprob: -16.250003814697266
    5. '#' → logprob: -16.375003814697266
    6. 'printf' → logprob: -17.625003814697266
    7. '#print' → logprob: -17.875003814697266
    8. 'format' → logprob: -19.000003814697266
    9. '
' → logprob: -19.125003814697266
    10. 'pri' → logprob: -19.500003814697266

Token 451: ' round' (ID: 7353)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. ' print' → logprob: -13.250001907348633
    3. 'printf' → logprob: -15.750001907348633
    4. 'format' → logprob: -17.375001907348633
    5. 'round' → logprob: -18.375001907348633
    6. '#print' → logprob: -19.875001907348633
    7. '```' → logprob: -21.750001907348633
    8. '(print' → logprob: -22.250001907348633
    9. 'prin' → logprob: -22.375001907348633
    10. '
' → logprob: -22.625001907348633

Token 452: '()' (ID: 416)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04316863417625427
    2. '(' → logprob: -3.418168544769287
    3. '(round' → logprob: -4.668168544769287
    4. 'a' → logprob: -10.043169021606445
    5. '()' → logprob: -10.543169021606445
    6. 'round' → logprob: -11.668169021606445
    7. '(
' → logprob: -12.418169021606445
    8. ' (' → logprob: -12.793169021606445
    9. '(print' → logprob: -14.043169021606445
    10. '(abs' → logprob: -15.168169021606445

Token 453: ' est' (ID: 893)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.49277862906455994
    2. 'print' → logprob: -1.1177786588668823
    3. '(' → logprob: -3.7427785396575928
    4. '(print' → logprob: -4.242778778076172
    5. '(round' → logprob: -4.367778778076172
    6. 'a' → logprob: -5.242778778076172
    7. ')' → logprob: -5.492778778076172
    8. ',' → logprob: -7.117778778076172
    9. '()' → logprob: -7.492778778076172
    10. ',a' → logprob: -8.242778778076172

Token 454: ' utilisée' (ID: 106548)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5769317150115967
    2. 'round' → logprob: -0.8269317150115967
    3. ' round' → logprob: -7.951931953430176
    4. '(round' → logprob: -8.076931953430176
    5. ' print' → logprob: -8.451931953430176
    6. 'used' → logprob: -9.826931953430176
    7. '(print' → logprob: -10.451931953430176
    8. 'rounded' → logprob: -11.326931953430176
    9. ' used' → logprob: -11.576931953430176
    10. 'arr' → logprob: -12.326931953430176

Token 455: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.046307776123285294
    2. '(print' → logprob: -3.7963078022003174
    3. '(a' → logprob: -3.9213078022003174
    4. '(' → logprob: -6.296307563781738
    5. 'a' → logprob: -7.171307563781738
    6. ',' → logprob: -8.796307563781738
    7. ')' → logprob: -9.796307563781738
    8. '(
' → logprob: -10.171307563781738
    9. ' print' → logprob: -10.296307563781738
    10. '(round' → logprob: -10.546307563781738

Token 456: ' arr' (ID: 1724)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024881421122699976
    2. 'round' → logprob: -6.002488136291504
    3. ' print' → logprob: -11.377488136291504
    4. 'arr' → logprob: -14.502488136291504
    5. ' round' → logprob: -14.752488136291504
    6. '(round' → logprob: -16.87748908996582
    7. 'pr' → logprob: -17.00248908996582
    8. 'prin' → logprob: -17.25248908996582
    9. 'a' → logprob: -17.75248908996582
    10. 'aff' → logprob: -17.87748908996582

Token 457: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.005080768372863531
    2. 'ondi' → logprob: -6.130080699920654
    3. '(a' → logprob: -6.880080699920654
    4. 'a' → logprob: -7.505080699920654
    5. 'o' → logprob: -7.880080699920654
    6. 'on' → logprob: -7.880080699920654
    7. 'ound' → logprob: -8.130081176757812
    8. 'onder' → logprob: -9.505081176757812
    9. '(' → logprob: -9.880081176757812
    10. ')' → logprob: -10.130081176757812

Token 458: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.015013943426311016
    2. '(a' → logprob: -5.140014171600342
    3. 'i' → logprob: -5.640014171600342
    4. 'er' → logprob: -6.015014171600342
    5. 'a' → logprob: -6.015014171600342
    6. '()' → logprob: -7.890014171600342
    7. '(' → logprob: -9.765013694763184
    8. '(i' → logprob: -9.890013694763184
    9. 'r' → logprob: -10.390013694763184
    10. 'e' → logprob: -10.890013694763184

Token 459: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002263046189909801
    2. 'a' → logprob: -9.125226020812988
    3. '(round' → logprob: -9.250226020812988
    4. '(' → logprob: -10.875226020812988
    5. 'round' → logprob: -13.250226020812988
    6. '()' → logprob: -15.750226020812988
    7. ' (' → logprob: -16.500226974487305
    8. '(r' → logprob: -16.750226974487305
    9. '(A' → logprob: -16.750226974487305
    10. '(
' → logprob: -17.000226974487305

Token 460: ' à' (ID: 1221)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0017896592617034912
    2. '(' → logprob: -6.376789569854736
    3. ',' → logprob: -10.001790046691895
    4. ',a' → logprob: -11.001790046691895
    5. ')' → logprob: -11.126790046691895
    6. '(round' → logprob: -12.126790046691895
    7. 'a' → logprob: -12.376790046691895
    8. '(
' → logprob: -14.501790046691895
    9. ')a' → logprob: -15.876790046691895
    10. '#a' → logprob: -16.001789093017578

Token 461: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'round' → logprob: -15.625001907348633
    4. '(' → logprob: -15.750001907348633
    5. ',' → logprob: -15.750001907348633
    6. 'eight' → logprob: -16.625001907348633
    7. 'a' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. 'precision' → logprob: -19.375001907348633
    10. ' huit' → logprob: -19.625001907348633

Token 462: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.7697225252486533e-06
    2. 'round' → logprob: -12.875003814697266
    3. 'a' → logprob: -14.500003814697266
    4. ',' → logprob: -15.125003814697266
    5. 'eight' → logprob: -15.875003814697266
    6. '(' → logprob: -16.375003814697266
    7. ' ' → logprob: -16.750003814697266
    8. '```' → logprob: -17.375003814697266
    9. '(round' → logprob: -19.375003814697266
    10. 'precision' → logprob: -19.750003814697266

Token 463: ' déc' (ID: 8498)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07138974964618683
    2. ')' → logprob: -2.821389675140381
    3. '(' → logprob: -4.821389675140381
    4. ',a' → logprob: -7.696389675140381
    5. ',' → logprob: -7.821389675140381
    6. ')a' → logprob: -8.196390151977539
    7. 'a' → logprob: -9.071390151977539
    8. '),' → logprob: -10.571390151977539
    9. ').' → logprob: -11.196390151977539
    10. '(decimal' → logprob: -11.321390151977539

Token 464: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.8866540193557739
    2. 'imals' → logprob: -1.011654019355774
    3. 'imal' → logprob: -1.511654019355774
    4. '```' → logprob: -6.386653900146484
    5. '_places' → logprob: -7.511653900146484
    6. 'places' → logprob: -7.511653900146484
    7. ')' → logprob: -8.886653900146484
    8. 'imali' → logprob: -8.886653900146484
    9. 'mals' → logprob: -9.136653900146484
    10. '}' → logprob: -9.386653900146484

Token 465: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0009057454881258309
    2. 'les' → logprob: -7.750905513763428
    3. 'ale' → logprob: -8.375905990600586
    4. 'al' → logprob: -9.250905990600586
    5. '```' → logprob: -10.500905990600586
    6. 'n' → logprob: -10.625905990600586
    7. 'm' → logprob: -10.750905990600586
    8. 'als' → logprob: -12.000905990600586
    9. 'a' → logprob: -12.375905990600586
    10. '}' → logprob: -12.500905990600586

Token 466: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014164269668981433
    2. ')' → logprob: -6.751416206359863
    3. ',' → logprob: -8.501416206359863
    4. ')
' → logprob: -10.376416206359863
    5. ' print' → logprob: -12.251416206359863
    6. '(print' → logprob: -12.501416206359863
    7. 'a' → logprob: -13.751416206359863
    8. '(' → logprob: -14.376416206359863
    9. '),' → logprob: -14.376416206359863
    10. ').' → logprob: -15.501416206359863

Token 467: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. ')' → logprob: -19.25
    4. '```' → logprob: -20.375
    5. '#print' → logprob: -23.0
    6. ',' → logprob: -23.375
    7. 'pr' → logprob: -23.375
    8. ')
' → logprob: -24.5
    9. '),' → logprob: -24.625
    10. '.print' → logprob: -24.625

Token 468: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.875
    3. '```' → logprob: -21.125
    4. 'pr' → logprob: -22.25
    5. 'prin' → logprob: -22.75
    6. 'a' → logprob: -22.875
    7. '#' → logprob: -23.125
    8. '#print' → logprob: -23.5
    9. 'result' → logprob: -23.875
    10. 'printf' → logprob: -24.5

Token 469: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4121114822482923e-06
    2. ' print' → logprob: -12.625003814697266
    3. '#' → logprob: -16.875003814697266
    4. 'pr' → logprob: -17.875003814697266
    5. '#print' → logprob: -18.000003814697266
    6. 'prin' → logprob: -18.375003814697266
    7. 'printf' → logprob: -19.000003814697266
    8. 'format' → logprob: -19.125003814697266
    9. 'result' → logprob: -19.625003814697266
    10. '```' → logprob: -19.750003814697266

Token 470: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. ' print' → logprob: -12.75000286102295
    3. 'printf' → logprob: -18.250003814697266
    4. 'prin' → logprob: -18.375003814697266
    5. 'pr' → logprob: -19.000003814697266
    6. 'format' → logprob: -19.375003814697266
    7. 'round' → logprob: -21.625003814697266
    8. '#print' → logprob: -22.000003814697266
    9. '
' → logprob: -22.375003814697266
    10. 'pri' → logprob: -22.500003814697266

Token 471: '()' (ID: 416)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.01535338070243597
    2. '(print' → logprob: -5.140353202819824
    3. '(' → logprob: -5.515353202819824
    4. '(a' → logprob: -5.515353202819824
    5. '()' → logprob: -6.890353202819824
    6. 'round' → logprob: -8.140353202819824
    7. 'print' → logprob: -11.265353202819824
    8. 'a' → logprob: -11.890353202819824
    9. '(f' → logprob: -14.390353202819824
    10. ' round' → logprob: -15.265353202819824

Token 472: ' permet' (ID: 11798)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.0701090544462204
    2. 'print' → logprob: -2.8201091289520264
    3. '(round' → logprob: -5.070108890533447
    4. '(' → logprob: -6.320108890533447
    5. '(pr' → logprob: -11.320109367370605
    6. ' print' → logprob: -12.070109367370605
    7. '()' → logprob: -12.320109367370605
    8. 'round' → logprob: -12.820109367370605
    9. '(Print' → logprob: -15.195109367370605
    10. '(
' → logprob: -15.320109367370605

Token 473: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12603163719177246
    2. '(print' → logprob: -2.3760316371917725
    3. '(round' → logprob: -3.8760316371917725
    4. '(' → logprob: -5.751031875610352
    5. 'round' → logprob: -6.501031875610352
    6. '()' → logprob: -10.251031875610352
    7. 'a' → logprob: -11.126031875610352
    8. '   ' → logprob: -12.001031875610352
    9. '(a' → logprob: -12.126031875610352
    10. '("' → logprob: -12.376031875610352

Token 474: ''aff' (ID: 53397)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.028536492725834e-05
    2. ' print' → logprob: -10.000070571899414
    3. 'aff' → logprob: -11.375070571899414
    4. 'r' → logprob: -12.000070571899414
    5. 'round' → logprob: -12.125070571899414
    6. ' afficher' → logprob: -14.500070571899414
    7. '(print' → logprob: -14.750070571899414
    8. 'printf' → logprob: -15.125070571899414
    9. 'println' → logprob: -16.000070571899414
    10. ''aff' → logprob: -16.125070571899414

Token 475: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.00022189407900441438
    2. 'cher' → logprob: -9.000222206115723
    3. '#' → logprob: -9.375222206115723
    4. 'ich' → logprob: -13.250222206115723
    5. 'ichage' → logprob: -13.375222206115723
    6. 'icer' → logprob: -13.750222206115723
    7. 'ichier' → logprob: -13.750222206115723
    8. 'print' → logprob: -13.750222206115723
    9. 'iche' → logprob: -14.000222206115723
    10. '   ' → logprob: -14.000222206115723

Token 476: ' ce' (ID: 2357)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.0002670575922820717
    2. 'round' → logprob: -8.250267028808594
    3. '(' → logprob: -12.750267028808594
    4. '(print' → logprob: -13.250267028808594
    5. '(f' → logprob: -13.750267028808594
    6. 'print' → logprob: -17.000267028808594
    7. '(format' → logprob: -17.125267028808594
    8. ' round' → logprob: -18.375267028808594
    9. 'f' → logprob: -19.500267028808594
    10. 'rounded' → logprob: -19.625267028808594

Token 477: ' résultat' (ID: 62556)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.5813288688659668
    2. '(' → logprob: -0.8313288688659668
    3. '(a' → logprob: -5.706328868865967
    4. 'round' → logprob: -6.581328868865967
    5. 'a' → logprob: -7.956328868865967
    6. '("' → logprob: -8.831329345703125
    7. '('' → logprob: -9.456329345703125
    8. '(
' → logprob: -10.581329345703125
    9. '("("' → logprob: -11.581329345703125
    10. '()' → logprob: -11.581329345703125

Token 478: ' à' (ID: 1221)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.5266396403312683
    2. '(round' → logprob: -1.026639699935913
    3. 'print' → logprob: -3.026639699935913
    4. '(' → logprob: -6.026639461517334
    5. '(a' → logprob: -8.526639938354492
    6. 'round' → logprob: -9.151639938354492
    7. '()' → logprob: -12.526639938354492
    8. '(pr' → logprob: -13.026639938354492
    9. 'a' → logprob: -13.901639938354492
    10. ' print' → logprob: -14.026639938354492

Token 479: ' l' (ID: 305)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.40973594784736633
    2. 'print' → logprob: -1.284735918045044
    3. '8' → logprob: -3.034735918045044
    4. 'la' → logprob: -5.784736156463623
    5. ')' → logprob: -6.284736156463623
    6. 'format' → logprob: -6.534736156463623
    7. 'arr' → logprob: -7.034736156463623
    8. '(round' → logprob: -7.159736156463623
    9. '7' → logprob: -7.409736156463623
    10. '4' → logprob: -7.659736156463623

Token 480: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.07268210500478745
    2. 'é' → logprob: -2.6976821422576904
    3. ''utilisateur' → logprob: -6.822681903839111
    4. '’écran' → logprob: -7.822681903839111
    5. ''é' → logprob: -7.947681903839111
    6. 'a' → logprob: -7.947681903839111
    7. 'e' → logprob: -9.07268238067627
    8. '#' → logprob: -9.07268238067627
    9. ' écran' → logprob: -9.32268238067627
    10. 'terminal' → logprob: -10.07268238067627

Token 481: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06392790377140045
    2. '(print' → logprob: -2.8139278888702393
    3. '(round' → logprob: -6.563928127288818
    4. '(' → logprob: -7.563928127288818
    5. '(a' → logprob: -11.56392765045166
    6. 'round' → logprob: -11.93892765045166
    7. '(pr' → logprob: -12.18892765045166
    8. ' print' → logprob: -12.81392765045166
    9. '()' → logprob: -13.18892765045166
    10. ',' → logprob: -14.06392765045166

Token 482: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -20.75
    3. '```' → logprob: -21.75
    4. 'printf' → logprob: -26.625
    5. '	print' → logprob: -27.0
    6. 'pr' → logprob: -27.25
    7. '#print' → logprob: -28.125
    8. '(print' → logprob: -28.5
    9. '.print' → logprob: -28.75
    10. 'prin' → logprob: -28.75

Token 483: '(round' (ID: 75171)
  Prédit: '(round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.014186070300638676
    2. '(' → logprob: -4.264185905456543
    3. '(a' → logprob: -10.764185905456543
    4. '(print' → logprob: -14.139185905456543
    5. 'round' → logprob: -14.514185905456543
    6. '(f' → logprob: -16.26418685913086
    7. '()' → logprob: -17.26418685913086
    8. ' round' → logprob: -17.51418685913086
    9. '(format' → logprob: -17.63918685913086
    10. 'a' → logprob: -17.88918685913086

Token 484: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. 'a' → logprob: -14.626171112060547
    4. '(
' → logprob: -15.626171112060547
    5. ' (' → logprob: -18.126171112060547
    6. ')' → logprob: -18.251171112060547
    7. '(

' → logprob: -18.376171112060547
    8. ')a' → logprob: -18.876171112060547
    9. '(ai' → logprob: -19.626171112060547
    10. '(A' → logprob: -19.876171112060547

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.522638169466518e-05
    2. '(' → logprob: -11.250024795532227
    3. ' ,' → logprob: -12.000024795532227
    4. ',a' → logprob: -12.375024795532227
    5. 'a' → logprob: -14.375024795532227
    6. '8' → logprob: -14.500024795532227
    7. '(a' → logprob: -14.625024795532227
    8. ',n' → logprob: -16.125024795532227
    9. '(n' → logprob: -16.375024795532227
    10. '(),' → logprob: -17.000024795532227

Token 486: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.750001907348633
    4. '８' → logprob: -22.500001907348633
    5. 'eight' → logprob: -22.625001907348633
    6. '۸' → logprob: -22.875001907348633
    7. '  ' → logprob: -23.125001907348633
    8. ')' → logprob: -23.500001907348633
    9. '٨' → logprob: -23.500001907348633
    10. '```' → logprob: -23.500001907348633

Token 487: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۸' → logprob: -22.5
    4. '８' → logprob: -22.5
    5. 'eight' → logprob: -22.75
    6. '   ' → logprob: -22.875
    7. '٨' → logprob: -23.0
    8. '८' → logprob: -23.25
    9. '৮' → logprob: -23.25
    10. '```' → logprob: -23.5

Token 488: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005545823951251805
    2. ')' → logprob: -7.50055456161499
    3. '))
' → logprob: -13.625555038452148
    4. ')))' → logprob: -15.375555038452148
    5. ' ))' → logprob: -16.12555503845215
    6. '()))' → logprob: -16.87555503845215
    7. '),' → logprob: -17.00055503845215
    8. '));' → logprob: -18.87555503845215
    9. '()' → logprob: -19.12555503845215
    10. ')
' → logprob: -19.37555503845215


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 486
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 295
Précision stricte (1ère position): 25.31%
Précision adaptée (1ère position): 25.31%
Précision (top 10): 60.70%
================================================================================
