================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
"""
Ce script lit deux entiers du standard input représentant respectivement
le nombre d'éléments pairs (N_gu) et le nombre d'éléments impairs (M_ki).
Son but est de calculer le nombre de façons de choisir deux éléments
dont la somme est paire (c'est-à-dire soit deux pairs soit deux impairs),
en utilisant des fonctions de combinaison.

Fonctions utilitaires sont ajoutées avec des docstrings détaillées,
et des commentaires expliquent chaque étape du code.
"""

from math import factorial

def kumiawase_num(n, r):
    """
    Calcule le nombre de combinaisons possibles (nCr) pour choisir r éléments parmi n.
    Paramètres:
        n (int): Nombre total d'éléments disponibles.
        r (int): Nombre d'éléments à choisir.
    Retour:
        int: Le nombre de façons de choisir r éléments parmi n, ou 0 si n < r.
    """
    if n < r:
        # Impossible de choisir plus d'éléments qu'il n'en existe.
        return 0
    # Formule de combinaison : n! / (r! * (n-r)!)
    return factorial(n) // (factorial(r) * factorial(n - r))

def kumiawase_jufuku(n, r):
    """
    Calcule le nombre de combinaisons avec répétition possibles 
    pour choisir r éléments parmi n types (combinaison multiset).
    Paramètres:
        n (int): Nombre de types d'éléments.
        r (int): Nombre d'éléments à choisir (avec répétition).
    Retour:
        int: Le nombre de combinaisons avec répétition, ou 0 si n < r.
    """
    if n < r:
        # Impossible de choisir plus d'éléments qu'il n'en existe, même avec répétition.
        return 0
    # Formule de combinaison avec répétition : C(n+r-1, r)
    return kumiawase_num(n + r - 1, r)

# Lecture et initialisation des entrées utilisateur
# N_gu : nombre d'éléments pairs
# M_ki : nombre d'éléments impairs
N_gu, M_ki = map(int, input().split())

# Calcul du nombre de façons de choisir 2 éléments pairs (dont la somme sera paire)
gu_gu = kumiawase_num(N_gu, 2)
# Calcul du nombre de façons de choisir 2 éléments impairs (dont la somme sera aussi paire)
ki_ki = kumiawase_num(M_ki, 2)

# Affichage du résultat qui est la somme des deux possibilités ci-dessus
print(gu_gu + ki_ki)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '"""
' (ID: 15611)
  → Token d'amorce (pas de prédiction)

Token 1: 'Ce' (ID: 24306)
  → Token d'amorce (pas de prédiction)

Token 2: ' script' (ID: 11713)
  → Token d'amorce (pas de prédiction)

Token 3: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03817218914628029
    2. ' ```' → logprob: -4.038172245025635
    3. '```' → logprob: -5.538172245025635
    4. '_' → logprob: -5.663172245025635
    5. ' :' → logprob: -6.538172245025635
    6. 's' → logprob: -6.788172245025635
    7. ' est' → logprob: -6.788172245025635
    8. ' `' → logprob: -7.038172245025635
    9. ' space' → logprob: -7.038172245025635
    10. ' ' → logprob: -7.038172245025635

Token 4: ' deux' (ID: 10301)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4862577021121979
    2. ' les' → logprob: -2.361257791519165
    3. ' ' → logprob: -2.736257791519165
    4. ' un' → logprob: -2.986257791519165
    5. '_' → logprob: -3.111257791519165
    6. '```' → logprob: -3.361257791519165
    7. ' ' → logprob: -3.611257791519165
    8. 'l' → logprob: -4.361257553100586
    9. '_le' → logprob: -4.611257553100586
    10. '"""' → logprob: -4.986257553100586

Token 5: ' ent' (ID: 1121)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.3752603828907013
    2. ' mots' → logprob: -2.000260353088379
    3. ' fichiers' → logprob: -2.750260353088379
    4. ' lignes' → logprob: -3.000260353088379
    5. ' ' → logprob: -4.125260353088379
    6. ' chaînes' → logprob: -4.375260353088379
    7. 's' → logprob: -4.500260353088379
    8. 'f' → logprob: -5.375260353088379
    9. ' ' → logprob: -5.625260353088379
    10. 'esp' → logprob: -5.875260353088379

Token 6: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03596767038106918
    2. 'ières' → logprob: -3.9109675884246826
    3. 'i' → logprob: -4.660967826843262
    4. 'r' → logprob: -5.785967826843262
    5. 'êtes' → logprob: -6.910967826843262
    6. 'ier' → logprob: -7.035967826843262
    7. 'ités' → logprob: -7.910967826843262
    8. '```' → logprob: -8.160967826843262
    9. 'ié' → logprob: -9.410967826843262
    10. 'ière' → logprob: -10.410967826843262

Token 7: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6657626628875732
    2. '\n' → logprob: -2.2907626628875732
    3. '.' → logprob: -2.4157626628875732
    4. ' ' → logprob: -2.5407626628875732
    5. '\' → logprob: -2.7907626628875732
    6. ':' → logprob: -3.2907626628875732
    7. ',' → logprob: -3.2907626628875732
    8. ' :' → logprob: -3.5407626628875732
    9. '```' → logprob: -4.665762901306152
    10. ' 

' → logprob: -4.665762901306152

Token 8: ' standard' (ID: 7024)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9129928350448608
    2. 'input' → logprob: -2.0379929542541504
    3. ' clavier' → logprob: -2.5379929542541504
    4. 'entrée' → logprob: -2.9129929542541504
    5. ''utilisateur' → logprob: -3.0379929542541504
    6. 'a' → logprob: -3.1629929542541504
    7. 's' → logprob: -3.4129929542541504
    8. 'es' → logprob: -3.5379929542541504
    9. ''entrée' → logprob: -3.6629929542541504
    10. ' ' → logprob: -4.28799295425415

Token 9: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25190165638923645
    2. '_' → logprob: -2.251901626586914
    3. 'e' → logprob: -3.501901626586914
    4. '\' → logprob: -3.751901626586914
    5. ' ' → logprob: -4.126901626586914
    6. '\n' → logprob: -4.251901626586914
    7. 'es' → logprob: -4.751901626586914
    8. '"""' → logprob: -5.251901626586914
    9. '```' → logprob: -5.501901626586914
    10. ',' → logprob: -5.876901626586914

Token 10: ' représentant' (ID: 136122)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3077276945114136
    2. '"""' → logprob: -2.307727813720703
    3. '\n' → logprob: -3.557727813720703
    4. ',' → logprob: -3.557727813720703
    5. '.' → logprob: -3.682727813720703
    6. '"""
' → logprob: -3.682727813720703
    7. '```' → logprob: -3.682727813720703
    8. ':' → logprob: -4.807727813720703
    9. '\' → logprob: -4.807727813720703
    10. 's' → logprob: -5.557727813720703

Token 11: ' respect' (ID: 5618)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7354257106781006
    2. ' le' → logprob: -1.3604257106781006
    3. 'l' → logprob: -2.8604257106781006
    4. 'les' → logprob: -2.8604257106781006
    5. ' la' → logprob: -3.6104257106781006
    6. 'de' → logprob: -3.8604257106781006
    7. 's' → logprob: -3.9854257106781006
    8. ' des' → logprob: -4.11042594909668
    9. 'la' → logprob: -4.48542594909668
    10. 'une' → logprob: -4.61042594909668

Token 12: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.10289334505796432
    2. 'ément' → logprob: -3.102893352508545
    3. 'ement' → logprob: -3.352893352508545
    4. 'ant' → logprob: -4.602893352508545
    5. 'e' → logprob: -5.977893352508545
    6. 'ativement' → logprob: -6.477893352508545
    7. '```' → logprob: -6.852893352508545
    8. 'emment' → logprob: -6.852893352508545
    9. 'ent' → logprob: -7.352893352508545
    10. '"""' → logprob: -8.227892875671387

Token 13: '
' (ID: 198)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.36053013801574707
    2. ' le' → logprob: -1.610530138015747
    3. 'l' → logprob: -2.735530138015747
    4. ' la' → logprob: -4.235529899597168
    5. ' l' → logprob: -5.235529899597168
    6. 'la' → logprob: -5.360529899597168
    7. 'les' → logprob: -5.735529899597168
    8. 's' → logprob: -6.110529899597168
    9. 'a' → logprob: -6.485529899597168
    10. 'un' → logprob: -6.485529899597168

Token 14: 'le' (ID: 282)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5320142507553101
    2. 'le' → logprob: -2.2820143699645996
    3. ' ' → logprob: -2.4070143699645996
    4. 'de' → logprob: -2.6570143699645996
    5. 'les' → logprob: -3.5320143699645996
    6. ' l' → logprob: -3.5320143699645996
    7. ' la' → logprob: -3.6570143699645996
    8. 's' → logprob: -4.2820143699646
    9. 'leur' → logprob: -4.2820143699646
    10. ' le' → logprob: -4.4070143699646

Token 15: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.14500397443771362
    2. 'nombre' → logprob: -2.0200040340423584
    3. ' nombres' → logprob: -6.895003795623779
    4. 'n' → logprob: -7.270003795623779
    5. ' premier' → logprob: -8.770004272460938
    6. ' nom' → logprob: -9.395004272460938
    7. 's' → logprob: -9.395004272460938
    8. ' maximum' → logprob: -9.895004272460938
    9. ' ' → logprob: -10.145004272460938
    10. 'a' → logprob: -10.395004272460938

Token 16: ' d' (ID: 272)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.039805635809898376
    2. '_' → logprob: -4.2898054122924805
    3. ' s' → logprob: -4.2898054122924805
    4. ' ' → logprob: -4.5398054122924805
    5. '_s' → logprob: -7.7898054122924805
    6. ' de' → logprob: -9.03980541229248
    7. '(s' → logprob: -9.53980541229248
    8. '(' → logprob: -9.91480541229248
    9. '  ' → logprob: -10.03980541229248
    10. ''' → logprob: -10.16480541229248

Token 17: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6487707495689392
    2. ''' → logprob: -1.148770809173584
    3. 'é' → logprob: -3.773770809173584
    4. '’' → logprob: -3.898770809173584
    5. ''é' → logprob: -3.898770809173584
    6. ' espaces' → logprob: -3.898770809173584
    7. ''esp' → logprob: -4.023770809173584
    8. 'u' → logprob: -4.398770809173584
    9. ' ' → logprob: -4.898770809173584
    10. 'a' → logprob: -5.398770809173584

Token 18: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.21640247106552124
    2. 'é' → logprob: -2.216402530670166
    3. 'él' → logprob: -2.716402530670166
    4. ''' → logprob: -5.716402530670166
    5. ''él' → logprob: -6.091402530670166
    6. 'ét' → logprob: -6.216402530670166
    7. 'éc' → logprob: -6.341402530670166
    8. 'équ' → logprob: -6.591402530670166
    9. 'util' → logprob: -7.341402530670166
    10. 'év' → logprob: -7.466402530670166

Token 19: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00013607845176011324
    2. 'ment' → logprob: -9.125136375427246
    3. 'm' → logprob: -11.875136375427246
    4. '```' → logprob: -12.000136375427246
    5. 'me' → logprob: -12.625136375427246
    6. 'éments' → logprob: -12.875136375427246
    7. 'ements' → logprob: -13.250136375427246
    8. 'phants' → logprob: -13.250136375427246
    9. '`' → logprob: -14.000136375427246
    10. 'mentation' → logprob: -14.625136375427246

Token 20: ' pairs' (ID: 24702)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9175035953521729
    2. ' d' → logprob: -1.0425035953521729
    3. ' a' → logprob: -2.417503595352173
    4. 's' → logprob: -3.042503595352173
    5. ' ' → logprob: -3.417503595352173
    6. ' de' → logprob: -4.417503356933594
    7. ' """' → logprob: -4.667503356933594
    8. '"""' → logprob: -4.667503356933594
    9. 'd' → logprob: -4.792503356933594
    10. ',' → logprob: -4.792503356933594

Token 21: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4645315408706665
    2. 's' → logprob: -1.7145315408706665
    3. ',' → logprob: -1.9645315408706665
    4. ' ,' → logprob: -3.464531421661377
    5. '"""' → logprob: -5.214531421661377
    6. '```' → logprob: -5.839531421661377
    7. 'es' → logprob: -6.839531421661377
    8. ' e' → logprob: -6.964531421661377
    9. ' (' → logprob: -6.964531421661377
    10. ' et' → logprob: -7.214531421661377

Token 22: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0688457265496254
    2. ' )' → logprob: -2.818845748901367
    3. ' pairs' → logprob: -6.068845748901367
    4. ',' → logprob: -7.068845748901367
    5. '),' → logprob: -7.193845748901367
    6. 'pairs' → logprob: -7.443845748901367
    7. ' ' → logprob: -7.818845748901367
    8. ' et' → logprob: -7.818845748901367
    9. 'et' → logprob: -7.943845748901367
    10. '"""' → logprob: -8.068845748901367

Token 23: '_gu' (ID: 149045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018838517367839813
    2. ' )' → logprob: -4.143838405609131
    3. '_pairs' → logprob: -6.643838405609131
    4. '_' → logprob: -7.393838405609131
    5. ' pairs' → logprob: -8.018838882446289
    6. ',' → logprob: -9.143838882446289
    7. 'e' → logprob: -9.143838882446289
    8. '),' → logprob: -9.643838882446289
    9. 's' → logprob: -10.268838882446289
    10. ' ' → logprob: -10.518838882446289

Token 24: ')' (ID: 8)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.614113986492157
    2. 'ards' → logprob: -1.4891140460968018
    3. 'ts' → logprob: -2.4891140460968018
    4. 'a' → logprob: -4.114113807678223
    5. 'ars' → logprob: -4.114113807678223
    6. 't' → logprob: -4.239113807678223
    7. ')' → logprob: -4.239113807678223
    8. 'l' → logprob: -4.489113807678223
    9. 'ls' → logprob: -4.614113807678223
    10. '```' → logprob: -4.864113807678223

Token 25: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39834415912628174
    2. ',' → logprob: -1.8983441591262817
    3. '_' → logprob: -1.8983441591262817
    4. ' )' → logprob: -4.898344039916992
    5. 's' → logprob: -5.023344039916992
    6. ' ,' → logprob: -5.273344039916992
    7. ' ' → logprob: -5.398344039916992
    8. ' et' → logprob: -6.898344039916992
    9. '"""' → logprob: -7.148344039916992
    10. 'es' → logprob: -7.773344039916992

Token 26: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6335538625717163
    2. 'leur' → logprob: -2.383553981781006
    3. 'd' → logprob: -2.508553981781006
    4. 'les' → logprob: -3.008553981781006
    5. ' d' → logprob: -3.133553981781006
    6. '"""' → logprob: -3.258553981781006
    7. 'un' → logprob: -3.633553981781006
    8. 'l' → logprob: -3.758553981781006
    9. ' un' → logprob: -3.758553981781006
    10. ' le' → logprob: -4.383553981781006

Token 27: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.16205568611621857
    2. 'nombre' → logprob: -1.9120557308197021
    3. ' nombres' → logprob: -7.787055492401123
    4. 's' → logprob: -8.162055969238281
    5. 'nbsp' → logprob: -8.412055969238281
    6. 'n' → logprob: -9.162055969238281
    7. '_nombre' → logprob: -9.287055969238281
    8. ' espace' → logprob: -9.287055969238281
    9. ' ' → logprob: -9.412055969238281
    10. ' code' → logprob: -9.537055969238281

Token 28: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20354638993740082
    2. ' d' → logprob: -2.4535462856292725
    3. 'd' → logprob: -3.4535462856292725
    4. '_d' → logprob: -3.5785462856292725
    5. 's' → logprob: -3.9535462856292725
    6. ' ' → logprob: -4.578546524047852
    7. ' de' → logprob: -5.828546524047852
    8. '_s' → logprob: -6.328546524047852
    9. 'space' → logprob: -6.703546524047852
    10. ' _' → logprob: -7.203546524047852

Token 29: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2333587110042572
    2. ''é' → logprob: -2.10835862159729
    3. 'élé' → logprob: -3.35835862159729
    4. '_' → logprob: -4.358358860015869
    5. ''ent' → logprob: -4.483358860015869
    6. ''esp' → logprob: -4.733358860015869
    7. ''él' → logprob: -5.358358860015869
    8. ' éléments' → logprob: -5.733358860015869
    9. '’' → logprob: -6.108358860015869
    10. 'é' → logprob: -6.608358860015869

Token 30: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1332375705242157
    2. ''' → logprob: -2.383237600326538
    3. 'é' → logprob: -4.508237361907959
    4. ''é' → logprob: -5.008237361907959
    5. ''imp' → logprob: -5.258237361907959
    6. ''él' → logprob: -5.758237361907959
    7. ''ent' → logprob: -5.883237361907959
    8. 'imp' → logprob: -7.758237361907959
    9. 'él' → logprob: -7.883237361907959
    10. 'e' → logprob: -8.008237838745117

Token 31: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003631137660704553
    2. 'ments' → logprob: -8.00036334991455
    3. 'v' → logprob: -11.75036334991455
    4. '```' → logprob: -12.12536334991455
    5. 'me' → logprob: -12.37536334991455
    6. 'men' → logprob: -13.37536334991455
    7. ' ' → logprob: -13.50036334991455
    8. 'м' → logprob: -13.50036334991455
    9. 'ment' → logprob: -13.62536334991455
    10. 's' → logprob: -13.75036334991455

Token 32: ' imp' (ID: 3282)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21048985421657562
    2. '_' → logprob: -2.0854897499084473
    3. ' pairs' → logprob: -3.8354897499084473
    4. 's' → logprob: -4.085489749908447
    5. ' _' → logprob: -4.335489749908447
    6. ' ' → logprob: -5.960489749908447
    7. '_pairs' → logprob: -6.085489749908447
    8. ' s' → logprob: -6.460489749908447
    9. ' space' → logprob: -6.460489749908447
    10. 'pairs' → logprob: -6.835489749908447

Token 33: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.05832246318459511
    2. 'air' → logprob: -2.9333224296569824
    3. 'a' → logprob: -5.933322429656982
    4. 'ar' → logprob: -8.05832290649414
    5. 'aire' → logprob: -8.93332290649414
    6. 'aires' → logprob: -9.30832290649414
    7. 'ars' → logprob: -10.30832290649414
    8. '```' → logprob: -10.55832290649414
    9. 'ais' → logprob: -10.80832290649414
    10. 'aris' → logprob: -11.18332290649414

Token 34: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0013378858566284
    2. '.' → logprob: -1.3763378858566284
    3. '_' → logprob: -1.5013378858566284
    4. ' ' → logprob: -2.751338005065918
    5. ',' → logprob: -3.626338005065918
    6. '\n' → logprob: -3.876338005065918
    7. ')' → logprob: -4.251338005065918
    8. ' ,' → logprob: -5.376338005065918
    9. ' (' → logprob: -5.876338005065918
    10. ' \' → logprob: -6.001338005065918

Token 35: 'M' (ID: 44)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007939482107758522
    2. ')' → logprob: -5.132939338684082
    3. ' N' → logprob: -6.632939338684082
    4. '_N' → logprob: -8.882939338684082
    5. 'n' → logprob: -8.882939338684082
    6. '_' → logprob: -9.132939338684082
    7. ' )' → logprob: -9.632939338684082
    8. 'I' → logprob: -10.007939338684082
    9. '_n' → logprob: -11.070439338684082
    10. ',' → logprob: -11.132939338684082

Token 36: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4626273512840271
    2. '_)' → logprob: -1.4626274108886719
    3. ')' → logprob: -2.212627410888672
    4. '_gu' → logprob: -3.837627410888672
    5. ')_' → logprob: -5.462627410888672
    6. ').' → logprob: -6.587627410888672
    7. '_g' → logprob: -8.087627410888672
    8. '__)' → logprob: -8.337627410888672
    9. '_p' → logprob: -8.587627410888672
    10. '_s' → logprob: -8.712627410888672

Token 37: 'ki' (ID: 3129)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.11318069696426392
    2. ')' → logprob: -2.988180637359619
    3. '_' → logprob: -3.988180637359619
    4. 'u' → logprob: -4.238180637359619
    5. 'i' → logprob: -4.863180637359619
    6. 'g' → logprob: -5.363180637359619
    7. '_gu' → logprob: -5.363180637359619
    8. 'im' → logprob: -6.863180637359619
    9. 'us' → logprob: -7.488180637359619
    10. 'ip' → logprob: -7.738180637359619

Token 38: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1670745611190796
    2. '_' → logprob: -3.167074680328369
    3. 's' → logprob: -3.167074680328369
    4. 'r' → logprob: -3.292074680328369
    5. 'n' → logprob: -4.667074680328369
    6. 'l' → logprob: -4.792074680328369
    7. 't' → logprob: -5.792074680328369
    8. 'w' → logprob: -6.042074680328369
    9. '_)' → logprob: -6.167074680328369
    10. 'm' → logprob: -6.542074680328369

Token 39: 'Son' (ID: 35355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1142829656600952
    2. '\n' → logprob: -1.2392829656600952
    3. '```' → logprob: -1.7392829656600952
    4. '"""' → logprob: -2.6142830848693848
    5. '#' → logprob: -3.2392830848693848
    6. '"""

' → logprob: -3.8642830848693848
    7. ' 

' → logprob: -4.114283084869385
    8. '

' → logprob: -4.489283084869385
    9. 'n' → logprob: -4.614283084869385
    10. '"""
' → logprob: -4.614283084869385

Token 40: ' but' (ID: 889)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6759312152862549
    2. '_' → logprob: -2.425931215286255
    3. ' ' → logprob: -2.675931215286255
    4. 's' → logprob: -2.925931215286255
    5. ' espace' → logprob: -2.925931215286255
    6. ' """' → logprob: -3.175931215286255
    7. ' space' → logprob: -3.300931215286255
    8. ' ​' → logprob: -3.550931215286255
    9. ' code' → logprob: -3.550931215286255
    10. ' espaces' → logprob: -4.175930976867676

Token 41: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.626162588596344
    2. ' est' → logprob: -1.5011625289916992
    3. ' de' → logprob: -2.001162528991699
    4. '<|end|>' → logprob: -3.751162528991699
    5. ' is' → logprob: -3.876162528991699
    6. '  ' → logprob: -4.376162528991699
    7. '"""' → logprob: -5.001162528991699
    8. ' d' → logprob: -5.001162528991699
    9. ' ' → logprob: -5.251162528991699
    10. ' """' → logprob: -5.501162528991699

Token 42: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5858108997344971
    2. ' d' → logprob: -0.8358108997344971
    3. ' ' → logprob: -5.460810661315918
    4. 'de' → logprob: -5.710810661315918
    5. 'd' → logprob: -6.835810661315918
    6. ' ' → logprob: -7.085810661315918
    7. '  ' → logprob: -9.585810661315918
    8. ' """' → logprob: -10.085810661315918
    9. ' à' → logprob: -10.585810661315918
    10. ' to' → logprob: -10.585810661315918

Token 43: ' calcul' (ID: 7559)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tr' → logprob: -1.0145316123962402
    2. 'tr' → logprob: -1.1395316123962402
    3. ' calcul' → logprob: -2.5145316123962402
    4. ' compter' → logprob: -3.6395316123962402
    5. ' filtr' → logprob: -3.6395316123962402
    6. 'calcul' → logprob: -4.01453161239624
    7. ' sé' → logprob: -4.38953161239624
    8. 'comp' → logprob: -4.51453161239624
    9. ' génér' → logprob: -4.63953161239624
    10. 'ré' → logprob: -4.76453161239624

Token 44: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0009256341145373881
    2. 'é' → logprob: -7.625925540924072
    3. 'e' → logprob: -8.00092601776123
    4. '_' → logprob: -10.87592601776123
    5. 'r' → logprob: -11.25092601776123
    6. 'a' → logprob: -11.37592601776123
    7. 'ateur' → logprob: -11.75092601776123
    8. ' er' → logprob: -11.87592601776123
    9. '```' → logprob: -11.87592601776123
    10. '_er' → logprob: -12.37592601776123

Token 45: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0364676713943481
    2. ' l' → logprob: -1.1614676713943481
    3. ' le' → logprob: -1.6614676713943481
    4. 'le' → logprob: -3.0364675521850586
    5. 'l' → logprob: -3.1614675521850586
    6. ' ' → logprob: -3.9114675521850586
    7. 'la' → logprob: -5.161467552185059
    8. '```' → logprob: -5.536467552185059
    9. ' ' → logprob: -5.661467552185059
    10. ' les' → logprob: -5.911467552185059

Token 46: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.027726687490940094
    2. ' ' → logprob: -4.652726650238037
    3. ' nombres' → logprob: -5.277726650238037
    4. 's' → logprob: -5.652726650238037
    5. ' maximum' → logprob: -6.652726650238037
    6. ' somme' → logprob: -6.652726650238037
    7. 'nombre' → logprob: -6.777726650238037
    8. ' produit' → logprob: -7.027726650238037
    9. ' facteur' → logprob: -7.027726650238037
    10. ' plus' → logprob: -7.652726650238037

Token 47: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.24144300818443298
    2. ' ' → logprob: -2.366442918777466
    3. ' total' → logprob: -2.991442918777466
    4. ' de' → logprob: -3.241442918777466
    5. 'd' → logprob: -4.491443157196045
    6. '_' → logprob: -4.991443157196045
    7. 's' → logprob: -5.491443157196045
    8. 'total' → logprob: -6.116443157196045
    9. '_total' → logprob: -6.866443157196045
    10. ' ' → logprob: -6.866443157196045

Token 48: ' façons' (ID: 165958)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.8752707839012146
    2. ' façons' → logprob: -1.5002708435058594
    3. ' man' → logprob: -2.2502708435058594
    4. ' ' → logprob: -2.8752708435058594
    5. 's' → logprob: -3.5002708435058594
    6. ' p' → logprob: -3.6252708435058594
    7. ' trip' → logprob: -3.7502708435058594
    8. 'com' → logprob: -4.125270843505859
    9. ' ways' → logprob: -4.250270843505859
    10. ' permutations' → logprob: -4.750270843505859

Token 49: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08834294229745865
    2. ' de' → logprob: -3.0883429050445557
    3. ' d' → logprob: -3.3383429050445557
    4. 'de' → logprob: -6.713343143463135
    5. 'd' → logprob: -6.963343143463135
    6. '<|end|>' → logprob: -7.088343143463135
    7. '  ' → logprob: -9.588342666625977
    8. 's' → logprob: -9.963342666625977
    9. ' possible' → logprob: -10.088342666625977
    10. ')' → logprob: -10.213342666625977

Token 50: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.4351530075073242
    2. ' comb' → logprob: -1.6851530075073242
    3. ' ' → logprob: -3.560153007507324
    4. ' placer' → logprob: -3.810153007507324
    5. ' sélectionner' → logprob: -3.810153007507324
    6. ' répart' → logprob: -4.060153007507324
    7. ' les' → logprob: -4.685153007507324
    8. ' assembler' → logprob: -4.810153007507324
    9. ' construire' → logprob: -4.935153007507324
    10. 'comb' → logprob: -5.310153007507324

Token 51: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006403535138815641
    2. ' ' → logprob: -6.50640344619751
    3. '<|end|>' → logprob: -6.75640344619751
    4. ' deux' → logprob: -7.00640344619751
    5. '  ' → logprob: -7.38140344619751
    6. ' un' → logprob: -7.75640344619751
    7. ' trois' → logprob: -8.631403923034668
    8. '1' → logprob: -8.756403923034668
    9. '```' → logprob: -9.006403923034668
    10. ' "' → logprob: -9.006403923034668

Token 52: ' éléments' (ID: 57375)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8278699517250061
    2. ' éléments' → logprob: -1.2028698921203613
    3. ' espaces' → logprob: -1.7028698921203613
    4. 'élé' → logprob: -3.2028698921203613
    5. '_' → logprob: -4.827869892120361
    6. '```' → logprob: -5.702869892120361
    7. '<|end|>' → logprob: -5.827869892120361
    8. ' elements' → logprob: -5.827869892120361
    9. ' d' → logprob: -5.952869892120361
    10. ' )' → logprob: -6.327869892120361

Token 53: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05243248492479324
    2. 's' → logprob: -4.677432537078857
    3. ' de' → logprob: -4.927432537078857
    4. ' distinct' → logprob: -4.927432537078857
    5. ' d' → logprob: -5.052432537078857
    6. '<|end|>' → logprob: -5.552432537078857
    7. '_' → logprob: -5.802432537078857
    8. ' s' → logprob: -5.802432537078857
    9. ' """' → logprob: -6.302432537078857
    10. ' )' → logprob: -6.552432537078857

Token 54: 'dont' (ID: 109173)
  Prédit: ' distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.716465175151825
    2. ' ' → logprob: -1.9664652347564697
    3. ' d' → logprob: -2.2164652347564697
    4. ' parmi' → logprob: -2.4664652347564697
    5. ' de' → logprob: -3.2164652347564697
    6. 'distinct' → logprob: -3.5914652347564697
    7. ' dans' → logprob: -3.7164652347564697
    8. ' espaces' → logprob: -4.591464996337891
    9. 'd' → logprob: -4.591464996337891
    10. ' cons' → logprob: -4.841464996337891

Token 55: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4698902368545532
    2. ' l' → logprob: -1.8448902368545532
    3. 'l' → logprob: -1.9698902368545532
    4. '<|end|>' → logprob: -2.0948901176452637
    5. ' le' → logprob: -2.8448901176452637
    6. ' on' → logprob: -2.8448901176452637
    7. ' au' → logprob: -3.0948901176452637
    8. 'le' → logprob: -3.0948901176452637
    9. ' la' → logprob: -3.3448901176452637
    10. ' un' → logprob: -3.5948901176452637

Token 56: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09955314546823502
    2. ' même' → logprob: -2.724553108215332
    3. 's' → logprob: -4.599553108215332
    4. ' somme' → logprob: -4.724553108215332
    5. '  ' → logprob: -6.349553108215332
    6. ' première' → logprob: -6.724553108215332
    7. ' s' → logprob: -6.849553108215332
    8. ' valeur' → logprob: -7.224553108215332
    9. ' premier' → logprob: -7.349553108215332
    10. ' space' → logprob: -7.599553108215332

Token 57: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09297677129507065
    2. '<|end|>' → logprob: -2.5929768085479736
    3. ' est' → logprob: -4.7179765701293945
    4. 's' → logprob: -6.3429765701293945
    5. ' des' → logprob: -7.5929765701293945
    6. ' s' → logprob: -7.7179765701293945
    7. ' d' → logprob: -8.092976570129395
    8. ' is' → logprob: -8.467976570129395
    9. ' vaut' → logprob: -8.467976570129395
    10. ' espace' → logprob: -8.592976570129395

Token 58: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.6129289269447327
    2. ' ' → logprob: -1.612928867340088
    3. ' un' → logprob: -1.862928867340088
    4. ' pair' → logprob: -2.987928867340088
    5. ' imp' → logprob: -4.362928867340088
    6. ' divisible' → logprob: -4.487928867340088
    7. ' pairs' → logprob: -5.737928867340088
    8. 'pair' → logprob: -5.737928867340088
    9. ' ég' → logprob: -6.112928867340088
    10. ' une' → logprob: -6.362928867340088

Token 59: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5838772058486938
    2. '

' → logprob: -1.5838772058486938
    3. '\n' → logprob: -2.7088770866394043
    4. 'n' → logprob: -3.2088770866394043
    5. '```' → logprob: -3.4588770866394043
    6. '#' → logprob: -3.5838770866394043
    7. '"""

' → logprob: -4.083877086639404
    8. ' 

' → logprob: -4.333877086639404
    9. '"""
' → logprob: -5.208877086639404
    10. 'import' → logprob: -5.583877086639404

Token 60: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02479952946305275
    2. ').' → logprob: -3.8997995853424072
    3. ' )' → logprob: -5.899799346923828
    4. '),' → logprob: -8.024799346923828
    5. ',' → logprob: -8.149799346923828
    6. '.' → logprob: -8.774799346923828
    7. ' ' → logprob: -9.149799346923828
    8. 's' → logprob: -9.274799346923828
    9. ')
' → logprob: -9.524799346923828
    10. '"""' → logprob: -9.649799346923828

Token 61: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.798649787902832
    2. '')' → logprob: -1.423649787902832
    3. ''' → logprob: -1.673649787902832
    4. ')' → logprob: -3.173649787902832
    5. 'a' → logprob: -3.673649787902832
    6. 'o' → logprob: -3.798649787902832
    7. ''e' → logprob: -4.798649787902832
    8. ''''' → logprob: -5.173649787902832
    9. 'u' → logprob: -5.923649787902832
    10. ' ')' → logprob: -6.548649787902832

Token 62: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.23380133509635925
    2. 'à' → logprob: -1.9838013648986816
    3. ' à' → logprob: -2.8588013648986816
    4. '"""' → logprob: -6.233801364898682
    5. ')' → logprob: -6.233801364898682
    6. ' ' → logprob: -6.733801364898682
    7. ' soit' → logprob: -6.733801364898682
    8. '-' → logprob: -7.108801364898682
    9. ' )' → logprob: -7.358801364898682
    10. ' un' → logprob: -7.608801364898682

Token 63: '-dire' (ID: 76064)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5919142961502075
    2. 'dire' → logprob: -1.5919142961502075
    3. 'ment' → logprob: -1.7169142961502075
    4. '```' → logprob: -1.9669142961502075
    5. 'crire' → logprob: -3.091914176940918
    6. 't' → logprob: -3.841914176940918
    7. 'le' → logprob: -3.966914176940918
    8. '"""' → logprob: -4.091914176940918
    9. 'lement' → logprob: -4.216914176940918
    10. 'm' → logprob: -4.341914176940918

Token 64: ' soit' (ID: 17293)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.29574450850486755
    2. ' ' → logprob: -2.1707444190979004
    3. ' soit' → logprob: -2.9207444190979004
    4. ')' → logprob: -3.0457444190979004
    5. ' deux' → logprob: -4.0457444190979
    6. 'de' → logprob: -5.0457444190979
    7. ' ' → logprob: -5.4207444190979
    8. ' un' → logprob: -5.9207444190979
    9. ' pairs' → logprob: -6.1707444190979
    10. 'so' → logprob: -7.5457444190979

Token 65: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6638426184654236
    2. ' deux' → logprob: -0.9138426184654236
    3. ' ' → logprob: -3.9138426780700684
    4. ' que' → logprob: -4.288842678070068
    5. ' paire' → logprob: -4.788842678070068
    6. '2' → logprob: -5.038842678070068
    7. ' both' → logprob: -5.538842678070068
    8. 'qu' → logprob: -5.663842678070068
    9. 'que' → logprob: -5.663842678070068
    10. ' pair' → logprob: -5.788842678070068

Token 66: ' pairs' (ID: 24702)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.8224604725837708
    2. ' ' → logprob: -1.197460412979126
    3. ' pairs' → logprob: -2.072460412979126
    4. ' espaces' → logprob: -2.822460412979126
    5. 'élé' → logprob: -3.072460412979126
    6. ' elements' → logprob: -5.072460651397705
    7. ' nombres' → logprob: -5.322460651397705
    8. ' )' → logprob: -5.572460651397705
    9. ' ent' → logprob: -6.072460651397705
    10. ' pair' → logprob: -6.197460651397705

Token 67: ' soit' (ID: 17293)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9438766837120056
    2. ' ou' → logprob: -1.1938767433166504
    3. ')' → logprob: -2.1938767433166504
    4. 'ou' → logprob: -3.1938767433166504
    5. ' )' → logprob: -3.1938767433166504
    6. 's' → logprob: -3.3188767433166504
    7. ' ,' → logprob: -3.8188767433166504
    8. ' ' → logprob: -3.9438767433166504
    9. ' soit' → logprob: -5.06887674331665
    10. ' ),' → logprob: -5.06887674331665

Token 68: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.02704014629125595
    2. 'de' → logprob: -3.6520402431488037
    3. ' two' → logprob: -7.902040004730225
    4. ' ' → logprob: -9.152040481567383
    5. 'two' → logprob: -10.152040481567383
    6. ' de' → logprob: -10.402040481567383
    7. ' ' → logprob: -10.402040481567383
    8. '<|end|>' → logprob: -10.527040481567383
    9. ' dois' → logprob: -10.777040481567383
    10. ' des' → logprob: -11.152040481567383

Token 69: ' imp' (ID: 3282)
  Prédit: ' imp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' imp' → logprob: -0.17484566569328308
    2. ' pairs' → logprob: -2.5498456954956055
    3. 'imp' → logprob: -2.7998456954956055
    4. 'pairs' → logprob: -5.4248456954956055
    5. ' ' → logprob: -5.6748456954956055
    6. ' espaces' → logprob: -6.0498456954956055
    7. '<|end|>' → logprob: -6.0498456954956055
    8. 'im' → logprob: -6.2998456954956055
    9. 's' → logprob: -6.6748456954956055
    10. '_imp' → logprob: -7.1748456954956055

Token 70: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.007244187407195568
    2. 'air' → logprob: -5.132244110107422
    3. 'ars' → logprob: -8.132244110107422
    4. 'ar' → logprob: -8.132244110107422
    5. 'a' → logprob: -8.757244110107422
    6. 'aires' → logprob: -8.757244110107422
    7. 'aris' → logprob: -8.757244110107422
    8. 'aire' → logprob: -9.382244110107422
    9. 'ares' → logprob: -10.257244110107422
    10. 'arts' → logprob: -11.257244110107422

Token 71: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04071011766791344
    2. ')
' → logprob: -3.790710210800171
    3. '"""' → logprob: -5.540709972381592
    4. '
' → logprob: -5.915709972381592
    5. '.' → logprob: -6.040709972381592
    6. ').' → logprob: -6.165709972381592
    7. '"""
' → logprob: -6.915709972381592
    8. ' )' → logprob: -7.290709972381592
    9. '")' → logprob: -7.290709972381592
    10. 's' → logprob: -7.540709972381592

Token 72: 'en' (ID: 262)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36438700556755066
    2. ' 
' → logprob: -1.739387035369873
    3. ' """' → logprob: -3.739387035369873
    4. '.' → logprob: -3.739387035369873
    5. ' """
' → logprob: -4.114387035369873
    6. ',' → logprob: -4.489387035369873
    7. '"""' → logprob: -4.614387035369873
    8. 's' → logprob: -4.739387035369873
    9. ' )' → logprob: -4.989387035369873
    10. ' ,' → logprob: -5.239387035369873

Token 73: ' utilisant' (ID: 92474)
  Prédit: ' chois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chois' → logprob: -0.8213580250740051
    2. ' combin' → logprob: -2.5713579654693604
    3. ' utilisant' → logprob: -2.6963579654693604
    4. ' compt' → logprob: -3.0713579654693604
    5. ' ' → logprob: -3.1963579654693604
    6. ' considér' → logprob: -3.3213579654693604
    7. ' calcul' → logprob: -3.3213579654693604
    8. ' respect' → logprob: -3.5713579654693604
    9. ' suivant' → logprob: -3.6963579654693604
    10. ' fonction' → logprob: -3.8213579654693604

Token 74: ' des' (ID: 731)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5583221316337585
    2. ' des' → logprob: -1.9333221912384033
    3. ' itertools' → logprob: -2.3083221912384033
    4. ' les' → logprob: -2.4333221912384033
    5. ' une' → logprob: -3.6833221912384033
    6. ' uniquement' → logprob: -4.183321952819824
    7. 'les' → logprob: -4.683321952819824
    8. 'une' → logprob: -4.933321952819824
    9. ' deux' → logprob: -5.058321952819824
    10. ' ' → logprob: -5.058321952819824

Token 75: ' fonctions' (ID: 87283)
  Prédit: ' form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.7779550552368164
    2. ' la' → logprob: -2.0279550552368164
    3. 'form' → logprob: -2.6529550552368164
    4. ' comb' → logprob: -2.9029550552368164
    5. ' nombres' → logprob: -3.1529550552368164
    6. ' math' → logprob: -3.2779550552368164
    7. ' fonctions' → logprob: -3.4029550552368164
    8. ' coefficients' → logprob: -3.5279550552368164
    9. 'com' → logprob: -3.9029550552368164
    10. 'la' → logprob: -4.277955055236816

Token 76: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9505229592323303
    2. 'd' → logprob: -1.4505228996276855
    3. '

' → logprob: -1.7005228996276855
    4. 'def' → logprob: -2.8255228996276855
    5. '"""

' → logprob: -3.5755228996276855
    6. '\n' → logprob: -3.8255228996276855
    7. '```' → logprob: -4.3255228996276855
    8. ' 

' → logprob: -4.4505228996276855
    9. '"""
' → logprob: -4.5755228996276855
    10. '\' → logprob: -5.0755228996276855

Token 77: ' combinaison' (ID: 165933)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5597507953643799
    2. ' comb' → logprob: -2.30975079536438
    3. ' combinaison' → logprob: -2.55975079536438
    4. ' combin' → logprob: -2.80975079536438
    5. ' la' → logprob: -2.93475079536438
    6. 'com' → logprob: -3.80975079536438
    7. 'comb' → logprob: -3.80975079536438
    8. 'import' → logprob: -4.184750556945801
    9. '```' → logprob: -4.309750556945801
    10. 'math' → logprob: -4.434750556945801

Token 78: '.

' (ID: 364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9338873028755188
    2. '#' → logprob: -1.933887243270874
    3. 'i' → logprob: -2.433887243270874
    4. '"""' → logprob: -2.433887243270874
    5. '```' → logprob: -3.308887243270874
    6. ' 

' → logprob: -3.308887243270874
    7. 'import' → logprob: -3.558887243270874
    8. ' 
' → logprob: -3.558887243270874
    9. 'n' → logprob: -3.808887243270874
    10. '' → logprob: -4.308887481689453

Token 79: 'Fon' (ID: 144388)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7097868919372559
    2. '"""
' → logprob: -1.9597868919372559
    3. '"""' → logprob: -2.084786891937256
    4. '"""

' → logprob: -2.209786891937256
    5. '""' → logprob: -3.209786891937256
    6. 'def' → logprob: -3.834786891937256
    7. '\n' → logprob: -3.959786891937256
    8. 'import' → logprob: -3.959786891937256
    9. '```' → logprob: -4.459786891937256
    10. '
' → logprob: -4.959786891937256

Token 80: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.07195033133029938
    2. 'c' → logprob: -2.8219504356384277
    3. 'ction' → logprob: -4.696950435638428
    4. 'ctions' → logprob: -7.196950435638428
    5. '#' → logprob: -11.69694995880127
    6. 't' → logprob: -11.82194995880127
    7. 'def' → logprob: -12.07194995880127
    8. 'cto' → logprob: -12.32194995880127
    9. 'ctie' → logprob: -12.57194995880127
    10. '```' → logprob: -12.57194995880127

Token 81: ' util' (ID: 3667)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -1.2388336658477783
    2. 's' → logprob: -1.3638336658477783
    3. '"""' → logprob: -1.8638336658477783
    4. '_' → logprob: -2.3638336658477783
    5. 'n' → logprob: -2.9888336658477783
    6. 'def' → logprob: -3.3638336658477783
    7. ' ' → logprob: -3.4888336658477783
    8. ' de' → logprob: -4.738833427429199
    9. '```' → logprob: -4.863833427429199
    10. ' """
' → logprob: -4.988833427429199

Token 82: 'itaires' (ID: 106145)
  Prédit: 'itaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaires' → logprob: -0.24891400337219238
    2. 'es' → logprob: -2.4989140033721924
    3. 'aires' → logprob: -3.2489140033721924
    4. 's' → logprob: -3.4989140033721924
    5. 'isées' → logprob: -3.4989140033721924
    6. 't' → logprob: -3.9989140033721924
    7. 'is' → logprob: -4.498913764953613
    8. 'itaire' → logprob: -5.873913764953613
    9. 'a' → logprob: -6.498913764953613
    10. 'isant' → logprob: -7.373913764953613

Token 83: ' sont' (ID: 5242)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3849998712539673
    2. 's' → logprob: -1.5099998712539673
    3. '"""' → logprob: -1.8849998712539673
    4. ':' → logprob: -2.1349997520446777
    5. ' :' → logprob: -3.2599997520446777
    6. ' """' → logprob: -3.7599997520446777
    7. '"""
' → logprob: -3.7599997520446777
    8. ' def' → logprob: -3.7599997520446777
    9. '"""

' → logprob: -3.8849997520446777
    10. ' """
' → logprob: -3.8849997520446777

Token 84: ' ajout' (ID: 64605)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.858648955821991
    2. 'import' → logprob: -1.7336490154266357
    3. ' défin' → logprob: -2.4836490154266357
    4. ' """' → logprob: -2.6086490154266357
    5. '```' → logprob: -3.4836490154266357
    6. ' utilisées' → logprob: -3.7336490154266357
    7. ' import' → logprob: -3.7336490154266357
    8. 'dé' → logprob: -3.7336490154266357
    9. 'def' → logprob: -3.9836490154266357
    10. 'à' → logprob: -4.108648777008057

Token 85: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.01372643280774355
    2. 'é' → logprob: -4.388726234436035
    3. 'és' → logprob: -7.013726234436035
    4. 'ée' → logprob: -8.263726234436035
    5. 'es' → logprob: -9.888726234436035
    6. ' é' → logprob: -12.888726234436035
    7. 'ees' → logprob: -13.013726234436035
    8. 'e' → logprob: -14.513726234436035
    9. 'É' → logprob: -14.763726234436035
    10. '#' → logprob: -14.888726234436035

Token 86: ' avec' (ID: 3937)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.0186353921890259
    2. '
' → logprob: -2.2686352729797363
    3. '\' → logprob: -2.6436352729797363
    4. ':' → logprob: -2.7686352729797363
    5. '"""
' → logprob: -2.7686352729797363
    6. 'def' → logprob: -2.7686352729797363
    7. 's' → logprob: -3.1436352729797363
    8. '"""

' → logprob: -3.6436352729797363
    9. '\n' → logprob: -3.7686352729797363
    10. 'd' → logprob: -3.8936352729797363

Token 87: ' des' (ID: 731)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.6869639158248901
    2. 'import' → logprob: -1.6869639158248901
    3. 'from' → logprob: -1.6869639158248901
    4. ' math' → logprob: -2.0619640350341797
    5. '"""' → logprob: -2.4369640350341797
    6. ' from' → logprob: -3.3119640350341797
    7. ' import' → logprob: -3.5619640350341797
    8. 'math' → logprob: -3.6869640350341797
    9. 'la' → logprob: -3.6869640350341797
    10. '"""
' → logprob: -3.6869640350341797

Token 88: ' doc' (ID: 6806)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12694668769836426
    2. 'from' → logprob: -2.5019466876983643
    3. ' commentaires' → logprob: -4.376946449279785
    4. ' import' → logprob: -4.751946449279785
    5. ' from' → logprob: -5.251946449279785
    6. ' espaces' → logprob: -6.751946449279785
    7. ' math' → logprob: -7.126946449279785
    8. 'imports' → logprob: -7.126946449279785
    9. ' exemples' → logprob: -7.251946449279785
    10. 'im' → logprob: -7.376946449279785

Token 89: 'strings' (ID: 41195)
  Prédit: 'strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.7481862306594849
    2. 'string' → logprob: -0.8731862306594849
    3. ' """' → logprob: -2.7481861114501953
    4. 's' → logprob: -4.498186111450195
    5. '"""' → logprob: -4.498186111450195
    6. 'str' → logprob: -4.623186111450195
    7. ' """
' → logprob: -5.373186111450195
    8. ' ' → logprob: -6.123186111450195
    9. 'ument' → logprob: -6.873186111450195
    10. ' strings' → logprob: -7.123186111450195

Token 90: ' déta' (ID: 99673)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5661614537239075
    2. '
' → logprob: -1.5661613941192627
    3. '"""

' → logprob: -2.3161613941192627
    4. '\' → logprob: -3.3161613941192627
    5. '

' → logprob: -3.4411613941192627
    6. '"""
' → logprob: -3.8161613941192627
    7. '"""' → logprob: -5.066161632537842
    8. 'import' → logprob: -5.316161632537842
    9. '' → logprob: -5.566161632537842
    10. '```' → logprob: -5.691161632537842

Token 91: 'illées' (ID: 185332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24758444726467133
    2. ' """' → logprob: -2.997584342956543
    3. 'és' → logprob: -3.122584342956543
    4. '"""' → logprob: -3.497584342956543
    5. 'es' → logprob: -4.122584342956543
    6. 'a' → logprob: -4.122584342956543
    7. 't' → logprob: -4.372584342956543
    8. 'm' → logprob: -4.622584342956543
    9. 'e' → logprob: -4.997584342956543
    10. 'é' → logprob: -4.997584342956543

Token 92: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31048205494880676
    2. '

' → logprob: -2.1854820251464844
    3. '\n' → logprob: -2.5604820251464844
    4. '"""

' → logprob: -3.3104820251464844
    5. '"""
' → logprob: -4.560482025146484
    6. '```' → logprob: -5.185482025146484
    7. 'import' → logprob: -5.310482025146484
    8. '


' → logprob: -5.310482025146484
    9. '"""' → logprob: -5.935482025146484
    10. '#' → logprob: -6.060482025146484

Token 93: 'et' (ID: 292)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.973577857017517
    2. ' 
' → logprob: -1.973577857017517
    3. ' et' → logprob: -2.0985779762268066
    4. 's' → logprob: -2.4735779762268066
    5. '"""' → logprob: -2.4735779762268066
    6. ' """' → logprob: -2.8485779762268066
    7. ' en' → logprob: -3.2235779762268066
    8. 'def' → logprob: -3.3485779762268066
    9. 'import' → logprob: -3.3485779762268066
    10. 'et' → logprob: -3.7235779762268066

Token 94: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5710234045982361
    2. 'import' → logprob: -1.8210234642028809
    3. ' un' → logprob: -2.196023464202881
    4. ' des' → logprob: -2.696023464202881
    5. ' import' → logprob: -3.821023464202881
    6. ' la' → logprob: -4.196023464202881
    7. 'def' → logprob: -4.696023464202881
    8. ' on' → logprob: -5.071023464202881
    9. ' les' → logprob: -5.196023464202881
    10. 'une' → logprob: -5.321023464202881

Token 95: ' commentaires' (ID: 67971)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.20842157304286957
    2. 'import' → logprob: -2.458421468734741
    3. ' import' → logprob: -3.083421468734741
    4. ' commentaires' → logprob: -3.833421468734741
    5. ' fonctions' → logprob: -3.958421468734741
    6. ' tests' → logprob: -5.95842170715332
    7. ' exemples' → logprob: -5.95842170715332
    8. ' calcul' → logprob: -6.45842170715332
    9. 'from' → logprob: -6.83342170715332
    10. ' déf' → logprob: -6.83342170715332

Token 96: ' expliqu' (ID: 164611)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3476189374923706
    2. '
' → logprob: -1.9726189374923706
    3. '"""
' → logprob: -2.34761905670166
    4. '"""

' → logprob: -2.34761905670166
    5. '\' → logprob: -2.84761905670166
    6. '"""' → logprob: -2.84761905670166
    7. 's' → logprob: -3.09761905670166
    8. '.' → logprob: -3.34761905670166
    9. 'import' → logprob: -3.47261905670166
    10. 'def' → logprob: -3.59761905670166

Token 97: 'ent' (ID: 299)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.058355629444122314
    2. 'ent' → logprob: -3.6833555698394775
    3. 'iquant' → logprob: -4.933355808258057
    4. 'és' → logprob: -5.308355808258057
    5. '#' → logprob: -5.558355808258057
    6. 'quant' → logprob: -5.683355808258057
    7. 'é' → logprob: -6.308355808258057
    8. 't' → logprob: -6.683355808258057
    9. 'itant' → logprob: -6.808355808258057
    10. 'aient' → logprob: -6.933355808258057

Token 98: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3966169059276581
    2. ' le' → logprob: -1.8966169357299805
    3. ' les' → logprob: -3.0216169357299805
    4. ' l' → logprob: -3.3966169357299805
    5. '<|end|>' → logprob: -3.5216169357299805
    6. ' ' → logprob: -3.6466169357299805
    7. ' chaque' → logprob: -3.7716169357299805
    8. 'le' → logprob: -6.1466169357299805
    9. ' leur' → logprob: -6.2716169357299805
    10. 's' → logprob: -6.2716169357299805

Token 99: ' étape' (ID: 83661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08519871532917023
    2. '_' → logprob: -2.8351986408233643
    3. '  ' → logprob: -6.335198879241943
    4. ' _' → logprob: -6.335198879241943
    5. ' ligne' → logprob: -6.460198879241943
    6. '```' → logprob: -6.710198879241943
    7. ' 
' → logprob: -6.835198879241943
    8. ' )' → logprob: -6.960198879241943
    9. '<|end|>' → logprob: -6.960198879241943
    10. ' token' → logprob: -7.085198879241943

Token 100: ' du' (ID: 1462)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5549808740615845
    2. '"""

' → logprob: -1.6799808740615845
    3. '\n' → logprob: -2.179980754852295
    4. '

' → logprob: -2.554980754852295
    5. '"""
' → logprob: -3.679980754852295
    6. '


' → logprob: -5.429980754852295
    7. '"""' → logprob: -5.679980754852295
    8. '```' → logprob: -5.804980754852295
    9. '\' → logprob: -6.429980754852295
    10. '



' → logprob: -6.679980754852295

Token 101: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.11855413019657135
    2. ' script' → logprob: -2.61855411529541
    3. ' """' → logprob: -3.99355411529541
    4. 'code' → logprob: -4.24355411529541
    5. ' programme' → logprob: -6.86855411529541
    6. '_code' → logprob: -6.99355411529541
    7. ' #' → logprob: -7.11855411529541
    8. 'programme' → logprob: -7.49355411529541
    9. '"""' → logprob: -7.61855411529541
    10. ' fichier' → logprob: -7.86855411529541

Token 102: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.176068976521492
    2. '\n' → logprob: -2.8010690212249756
    3. '

' → logprob: -3.3010690212249756
    4. '"""
' → logprob: -3.6760690212249756
    5. '"""

' → logprob: -4.0510687828063965
    6. '"""' → logprob: -5.0510687828063965
    7. '#' → logprob: -5.9260687828063965
    8. '


' → logprob: -6.3010687828063965
    9. '



' → logprob: -6.8010687828063965
    10. '```' → logprob: -6.8010687828063965

Token 103: '"""

' (ID: 34508)
  Prédit: '"""

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""

' → logprob: -0.8389561176300049
    2. '
' → logprob: -1.2139561176300049
    3. '"""
' → logprob: -2.463956117630005
    4. '\n' → logprob: -2.588956117630005
    5. '"""' → logprob: -3.088956117630005
    6. '

' → logprob: -3.213956117630005
    7. '```' → logprob: -4.338955879211426
    8. 'import' → logprob: -5.713955879211426
    9. '"""


' → logprob: -6.088955879211426
    10. '""' → logprob: -6.463955879211426

Token 104: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5845274329185486
    2. '
' → logprob: -1.4595274925231934
    3. 'import' → logprob: -2.0845274925231934
    4. '

' → logprob: -3.3345274925231934
    5. '```' → logprob: -3.9595274925231934
    6. 'def' → logprob: -4.709527492523193
    7. '\' → logprob: -4.709527492523193
    8. 'n' → logprob: -5.334527492523193
    9. 'd' → logprob: -5.709527492523193
    10. '#' → logprob: -7.084527492523193

Token 105: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.001201658509671688
    2. 'math' → logprob: -6.751201629638672
    3. ' itertools' → logprob: -10.376201629638672
    4. '_math' → logprob: -16.501201629638672
    5. '.math' → logprob: -16.626201629638672
    6. ' scipy' → logprob: -16.876201629638672
    7. '(math' → logprob: -17.501201629638672
    8. ' ' → logprob: -18.001201629638672
    9. ' functools' → logprob: -18.251201629638672
    10. ' ' → logprob: -18.251201629638672

Token 106: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009789028204977512
    2. 'import' → logprob: -4.634788990020752
    3. '	import' → logprob: -10.50978946685791
    4. 'from' → logprob: -13.63478946685791
    5. ' ' → logprob: -13.63478946685791
    6. ' importar' → logprob: -14.13478946685791
    7. ' from' → logprob: -14.50978946685791
    8. '.import' → logprob: -15.00978946685791
    9. ' impor' → logprob: -15.00978946685791
    10. '```' → logprob: -15.13478946685791

Token 107: ' factorial' (ID: 111204)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.03819985315203667
    2. 'comb' → logprob: -3.2881999015808105
    3. ' factorial' → logprob: -9.163199424743652
    4. 'import' → logprob: -10.663199424743652
    5. 'factor' → logprob: -10.663199424743652
    6. 'com' → logprob: -12.288199424743652
    7. ' import' → logprob: -13.663199424743652
    8. '.com' → logprob: -14.663199424743652
    9. ' combin' → logprob: -15.663199424743652
    10. '_comb' → logprob: -15.788199424743652

Token 108: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.0787120833992958
    2. '
' → logprob: -2.953711986541748
    3. 'def' → logprob: -3.828711986541748
    4. '


' → logprob: -6.703711986541748
    5. '(' → logprob: -8.203712463378906
    6. ' 

' → logprob: -8.828712463378906
    7. '
 
' → logprob: -10.703712463378906
    8. '
' → logprob: -10.828712463378906
    9. ' def' → logprob: -11.078712463378906
    10. '



' → logprob: -11.453712463378906

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24063007533550262
    2. '

' → logprob: -1.615630030632019
    3. '
' → logprob: -4.240630149841309
    4. ' def' → logprob: -7.490630149841309
    5. ' 

' → logprob: -9.615630149841309
    6. '


' → logprob: -10.615630149841309
    7. '
 
' → logprob: -10.990630149841309
    8. '#' → logprob: -12.615630149841309
    9. '(' → logprob: -12.615630149841309
    10. '
' → logprob: -12.740630149841309

Token 110: ' kum' (ID: 14289)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.1514492779970169
    2. ' combinaison' → logprob: -2.276449203491211
    3. 'comb' → logprob: -4.151449203491211
    4. ' combination' → logprob: -4.526449203491211
    5. ' combinations' → logprob: -5.026449203491211
    6. ' n' → logprob: -5.901449203491211
    7. ' def' → logprob: -7.526449203491211
    8. ' ' → logprob: -8.151449203491211
    9. 'Comb' → logprob: -8.276449203491211
    10. '_comb' → logprob: -8.276449203491211

Token 111: 'ia' (ID: 535)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.2215752601623535
    2. 'mul' → logprob: -1.3465752601623535
    3. 'ulative' → logprob: -1.5965752601623535
    4. 'b' → logprob: -2.2215752601623535
    5. 'm' → logprob: -2.5965752601623535
    6. '(b' → logprob: -5.0965752601623535
    7. 'mb' → logprob: -5.2215752601623535
    8. 'binations' → logprob: -5.2215752601623535
    9. 'ble' → logprob: -5.3465752601623535
    10. 'ma' → logprob: -5.4715752601623535

Token 112: 'w' (ID: 86)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.047245979309082
    2. 'tion' → logprob: -1.672245979309082
    3. 'tor' → logprob: -2.172245979309082
    4. 'te' → logprob: -2.422245979309082
    5. 'n' → logprob: -2.547245979309082
    6. 'l' → logprob: -3.672245979309082
    7. '_comb' → logprob: -3.672245979309082
    8. '(n' → logprob: -3.922245979309082
    9. 'u' → logprob: -4.047245979309082
    10. 'comb' → logprob: -4.297245979309082

Token 113: 'ase' (ID: 618)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5206774473190308
    2. 'ski' → logprob: -1.6456774473190308
    3. 'u' → logprob: -2.6456775665283203
    4. 't' → logprob: -3.0206775665283203
    5. 'ara' → logprob: -3.0206775665283203
    6. 'ska' → logprob: -3.0206775665283203
    7. 's' → logprob: -3.1456775665283203
    8. 'r' → logprob: -3.3956775665283203
    9. 'a' → logprob: -3.6456775665283203
    10. 'ki' → logprob: -3.7706775665283203

Token 114: '_num' (ID: 9834)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2527133524417877
    2. '(' → logprob: -1.5027133226394653
    3. ' (' → logprob: -8.502713203430176
    4. '_' → logprob: -8.877713203430176
    5. '_n' → logprob: -9.252713203430176
    6. '(k' → logprob: -9.627713203430176
    7. 'n' → logprob: -9.877713203430176
    8. 's' → logprob: -10.002713203430176
    9. '(x' → logprob: -10.252713203430176
    10. '(num' → logprob: -10.252713203430176

Token 115: '(n' (ID: 2406)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08635398000478745
    2. '(' → logprob: -3.5863540172576904
    3. '(r' → logprob: -4.586353778839111
    4. 'ber' → logprob: -4.711353778839111
    5. '(n' → logprob: -4.836353778839111
    6. '(er' → logprob: -4.836353778839111
    7. 'r' → logprob: -5.211353778839111
    8. '(a' → logprob: -5.711353778839111
    9. '(b' → logprob: -5.961353778839111
    10. '(u' → logprob: -6.586353778839111

Token 116: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03487217426300049
    2. ',' → logprob: -4.284872055053711
    3. ':' → logprob: -4.534872055053711
    4. '):
' → logprob: -5.284872055053711
    5. 'er' → logprob: -6.659872055053711
    6. ')' → logprob: -6.909872055053711
    7. 'ber' → logprob: -7.034872055053711
    8. 'u' → logprob: -7.534872055053711
    9. 'r' → logprob: -8.284872055053711
    10. 'umber' → logprob: -8.534872055053711

Token 117: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03218413144350052
    2. 'r' → logprob: -3.53218412399292
    3. ' k' → logprob: -6.15718412399292
    4. ' r' → logprob: -8.157184600830078
    5. '2' → logprob: -11.782184600830078
    6. ' ' → logprob: -11.907184600830078
    7. '```' → logprob: -12.782184600830078
    8. 'm' → logprob: -13.032184600830078
    9. ')' → logprob: -13.157184600830078
    10. '   ' → logprob: -13.532184600830078

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001103779417462647
    2. ')' → logprob: -6.87610387802124
    3. '):
' → logprob: -9.751103401184082
    4. ' ):' → logprob: -11.876103401184082
    5. '=' → logprob: -12.876103401184082
    6. '):
' → logprob: -14.501103401184082
    7. 'u' → logprob: -14.501103401184082
    8. ':' → logprob: -14.751103401184082
    9. ')：' → logprob: -14.751103401184082
    10. ''):' → logprob: -15.626103401184082

Token 119: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032547321170568466
    2. '   ' → logprob: -3.7825472354888916
    3. ' :' → logprob: -5.282547473907471
    4. ':
' → logprob: -5.907547473907471
    5. '):' → logprob: -7.532547473907471
    6. ' :
' → logprob: -8.282546997070312
    7. '"""' → logprob: -8.407546997070312
    8. ',' → logprob: -9.282546997070312
    9. ')' → logprob: -10.032546997070312
    10. ' """' → logprob: -10.157546997070312

Token 120: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4301380515098572
    2. '"""' → logprob: -1.805138111114502
    3. ' """' → logprob: -2.305138111114502
    4. ' """
' → logprob: -3.180138111114502
    5. '"""
' (adapté à ' """
') → logprob: -3.305138111114502
    6. ' if' → logprob: -5.305138111114502
    7. 'if' → logprob: -7.180138111114502
    8. '"' → logprob: -7.305138111114502
    9. '""' → logprob: -8.430137634277344
    10. '    ' → logprob: -8.930137634277344

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7652900815010071
    2. '"""' → logprob: -1.5152900218963623
    3. 'Calcul' → logprob: -1.8902900218963623
    4. '"""
' → logprob: -2.0152900218963623
    5. 'Cal' → logprob: -3.6402900218963623
    6. 'Calculate' → logprob: -6.265290260314941
    7. 'Calc' → logprob: -7.265290260314941
    8. '"' → logprob: -8.390290260314941
    9. ' Cal' → logprob: -8.390290260314941
    10. ' """
' → logprob: -8.890290260314941

Token 122: ' Cal' (ID: 4453)
  Prédit: 'Cal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cal' (adapté à ' Cal') → logprob: -0.3431719243526459
    2. 'Calcul' → logprob: -1.3431719541549683
    3. '"""
' → logprob: -4.718172073364258
    4. '"""' → logprob: -4.843172073364258
    5. ' Cal' → logprob: -5.593172073364258
    6. '   ' → logprob: -5.593172073364258
    7. 'Calc' → logprob: -6.093172073364258
    8. 'Calculate' → logprob: -6.218172073364258
    9. 'Ren' → logprob: -8.093172073364258
    10. 'Retour' → logprob: -8.093172073364258

Token 123: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.036851972341537476
    2. 'cul' → logprob: -3.5368518829345703
    3. 'c' → logprob: -5.03685188293457
    4. 'culate' → logprob: -8.41185188293457
    5. 'cula' → logprob: -8.41185188293457
    6. '
' → logprob: -9.91185188293457
    7. 'cu' → logprob: -11.16185188293457
    8. '\' → logprob: -11.16185188293457
    9. 'cules' → logprob: -11.16185188293457
    10. '```' → logprob: -11.78685188293457

Token 124: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.11400206387042999
    2. ' la' → logprob: -2.239001989364624
    3. 'le' → logprob: -7.864002227783203
    4. '   ' → logprob: -8.739002227783203
    5. ' n' → logprob: -8.739002227783203
    6. 'C' → logprob: -9.239002227783203
    7. ' ' → logprob: -9.489002227783203
    8. 'e' → logprob: -9.739002227783203
    9. ' les' → logprob: -9.739002227783203
    10. ' C' → logprob: -10.364002227783203

Token 125: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.003708277130499482
    2. ' nombre' → logprob: -6.128708362579346
    3. 'comb' → logprob: -7.878708362579346
    4. 'fact' → logprob: -8.003707885742188
    5. 'factor' → logprob: -8.253707885742188
    6. 'co' → logprob: -8.503707885742188
    7. 'coeff' → logprob: -8.628707885742188
    8. 'coef' → logprob: -9.753707885742188
    9. '   ' → logprob: -9.878707885742188
    10. 'n' → logprob: -11.378707885742188

Token 126: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.02450956590473652
    2. '   ' → logprob: -4.899509429931641
    3. '_de' → logprob: -4.899509429931641
    4. 'de' → logprob: -5.149509429931641
    5. ' des' → logprob: -6.274509429931641
    6. '_' → logprob: -7.899509429931641
    7. ' ' → logprob: -7.899509429931641
    8. '_des' → logprob: -8.89950942993164
    9. '_com' → logprob: -9.02450942993164
    10. 'def' → logprob: -9.02450942993164

Token 127: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.2150765210390091
    2. ' façons' → logprob: -2.340076446533203
    3. 'comb' → logprob: -2.465076446533203
    4. ' ' → logprob: -5.340076446533203
    5. '   ' → logprob: -6.215076446533203
    6. ' man' → logprob: -6.465076446533203
    7. 'com' → logprob: -6.965076446533203
    8. '  ' → logprob: -7.340076446533203
    9. ' combinations' → logprob: -7.590076446533203
    10. '\' → logprob: -8.340076446533203

Token 128: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.003144920105114579
    2. 'ina' → logprob: -6.00314474105835
    3. 'in' → logprob: -8.253145217895508
    4. 'ais' → logprob: -8.628145217895508
    5. 'inas' → logprob: -9.753145217895508
    6. 'n' → logprob: -10.253145217895508
    7. 'is' → logprob: -10.253145217895508
    8. 'inations' → logprob: -10.753145217895508
    9. 'i' → logprob: -10.753145217895508
    10. 'b' → logprob: -11.003145217895508

Token 129: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.25608187913894653
    2. 'sons' → logprob: -2.3810818195343018
    3. 'asons' → logprob: -2.7560818195343018
    4. 'n' → logprob: -3.3810818195343018
    5. 'ais' → logprob: -4.506082057952881
    6. 'na' → logprob: -5.381082057952881
    7. 'on' → logprob: -5.381082057952881
    8. 'son' → logprob: -5.506082057952881
    9. 'a' → logprob: -6.131082057952881
    10. '#' → logprob: -6.881082057952881

Token 130: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3894375562667847
    2. ' de' → logprob: -1.3894375562667847
    3. '(n' → logprob: -1.3894375562667847
    4. ' (' → logprob: -1.6394375562667847
    5. ' possibles' → logprob: -4.014437675476074
    6. '(' → logprob: -4.514437675476074
    7. 'de' → logprob: -5.139437675476074
    8. ' possible' → logprob: -5.139437675476074
    9. '"""' → logprob: -5.889437675476074
    10. ' des' → logprob: -6.014437675476074

Token 131: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.919487476348877
    2. ' de' → logprob: -1.294487476348877
    3. '(n' → logprob: -1.419487476348877
    4. '   ' → logprob: -3.044487476348877
    5. 'de' → logprob: -4.794487476348877
    6. ' d' → logprob: -4.919487476348877
    7. ' pour' → logprob: -5.044487476348877
    8. '(' → logprob: -5.794487476348877
    9. ' n' → logprob: -6.419487476348877
    10. ' ' → logprob: -6.544487476348877

Token 132: 'n' (ID: 77)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.36281463503837585
    2. 'n' → logprob: -1.6128146648406982
    3. '   ' → logprob: -3.3628146648406982
    4. ')' → logprob: -3.6128146648406982
    5. ' "' → logprob: -4.737814426422119
    6. ' de' → logprob: -4.862814426422119
    7. 'r' → logprob: -5.237814426422119
    8. ' C' → logprob: -5.237814426422119
    9. ' r' → logprob: -6.112814426422119
    10. ' )' → logprob: -6.362814426422119

Token 133: 'Cr' (ID: 14225)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35067301988601685
    2. ' choose' → logprob: -1.350672960281372
    3. ' ,' → logprob: -3.725672960281372
    4. ' ' → logprob: -5.100673198699951
    5. ' n' → logprob: -6.350673198699951
    6. ' )' → logprob: -6.350673198699951
    7. '   ' → logprob: -7.475673198699951
    8. ',r' → logprob: -7.975673198699951
    9. ',n' → logprob: -8.100672721862793
    10. ')' → logprob: -8.100672721862793

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1950405389070511
    2. '(n' → logprob: -1.8200405836105347
    3. '   ' → logprob: -4.320040702819824
    4. ' )' → logprob: -7.070040702819824
    5. '):' → logprob: -8.195040702819824
    6. ',' → logprob: -8.820040702819824
    7. '):
' → logprob: -8.945040702819824
    8. ')n' → logprob: -9.070040702819824
    9. ' (' → logprob: -9.695040702819824
    10. '(' → logprob: -9.695040702819824

Token 135: ' pour' (ID: 1930)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4265602231025696
    2. '   ' → logprob: -1.1765601634979248
    3. ' :' → logprob: -4.301560401916504
    4. ':' → logprob: -4.426560401916504
    5. ')' → logprob: -5.801560401916504
    6. ',' → logprob: -6.176560401916504
    7. '):' → logprob: -6.176560401916504
    8. ' (' → logprob: -6.176560401916504
    9. '):
' → logprob: -7.426560401916504
    10. '(' → logprob: -7.676560401916504

Token 136: ' choisir' (ID: 47004)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.35363563895225525
    2. ' choisir' → logprob: -1.3536356687545776
    3. 'n' → logprob: -3.728635549545288
    4. ' sélectionner' → logprob: -4.853635787963867
    5. '   ' → logprob: -6.103635787963867
    6. ' r' → logprob: -6.603635787963867
    7. 'r' → logprob: -7.103635787963867
    8. ' ' → logprob: -7.353635787963867
    9. ' le' → logprob: -7.853635787963867
    10. 'cho' → logprob: -8.228635787963867

Token 137: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.05755927786231041
    2. 'r' → logprob: -2.9325592517852783
    3. ' n' → logprob: -6.682559490203857
    4. '   ' → logprob: -7.432559490203857
    5. ' des' → logprob: -8.3075590133667
    6. 'n' → logprob: -8.5575590133667
    7. ' deux' → logprob: -8.6825590133667
    8. ' ' → logprob: -9.9325590133667
    9. ' k' → logprob: -10.3075590133667
    10. '    ' → logprob: -10.3075590133667

Token 138: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.059152014553546906
    2. 'élé' → logprob: -3.434152126312256
    3. ' elements' → logprob: -4.309152126312256
    4. ' parmi' → logprob: -5.184152126312256
    5. ' items' → logprob: -6.434152126312256
    6. ' des' → logprob: -6.809152126312256
    7. ' dans' → logprob: -7.309152126312256
    8. '   ' → logprob: -7.684152126312256
    9. ' ' → logprob: -7.934152126312256
    10. 'elements' → logprob: -8.059151649475098

Token 139: ' parmi' (ID: 51713)
  Prédit: ' parmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parmi' → logprob: -0.10696860402822495
    2. '   ' → logprob: -3.481968641281128
    3. ' dans' → logprob: -3.481968641281128
    4. ' à' → logprob: -3.731968641281128
    5. ' de' → logprob: -4.731968402862549
    6. 'dans' → logprob: -5.981968402862549
    7. ' ' → logprob: -7.106968402862549
    8. ' par' → logprob: -7.231968402862549
    9. ' sans' → logprob: -7.481968402862549
    10. 'de' → logprob: -7.481968402862549

Token 140: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25193166732788086
    2. 'n' → logprob: -1.5019316673278809
    3. '	n' → logprob: -14.126932144165039
    4. ' ' → logprob: -14.626932144165039
    5. ' la' → logprob: -15.501932144165039
    6. ' des' → logprob: -15.501932144165039
    7. '   ' → logprob: -15.626932144165039
    8. '(n' → logprob: -15.876932144165039
    9. ' une' → logprob: -16.25193214416504
    10. '_n' → logprob: -16.50193214416504

Token 141: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34906435012817383
    2. ')' → logprob: -2.474064350128174
    3. ',' → logprob: -2.974064350128174
    4. '"""' → logprob: -3.224064350128174
    5. ' """' → logprob: -3.724064350128174
    6. '):
' → logprob: -4.099064350128174
    7. '.' → logprob: -4.224064350128174
    8. ' en' → logprob: -4.349064350128174
    9. '):' → logprob: -4.474064350128174
    10. '"""
' → logprob: -4.724064350128174

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025961419567465782
    2. ' """' → logprob: -4.275961399078369
    3. '"""' → logprob: -4.525961399078369
    4. ')' → logprob: -7.775961399078369
    5. ' """
' → logprob: -8.150961875915527
    6. '"""
' → logprob: -9.650961875915527
    7. '    
' → logprob: -10.150961875915527
    8. '""' → logprob: -10.525961875915527
    9. ' )' → logprob: -11.275961875915527
    10. '    ' → logprob: -11.525961875915527

Token 143: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039428554475307465
    2. '"""' → logprob: -3.539428472518921
    3. ' """' → logprob: -4.9144287109375
    4. '    
' → logprob: -7.0394287109375
    5. ' """
' → logprob: -7.1644287109375
    6. '"""
' → logprob: -8.2894287109375
    7. '""' → logprob: -8.9144287109375
    8. '
' → logprob: -9.4144287109375
    9. '\n' → logprob: -9.9144287109375
    10. ' 
' → logprob: -10.1644287109375

Token 144: 'ètres' (ID: 40427)
  Prédit: 'ètres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.1869981437921524
    2. 'ètre' → logprob: -1.8119981288909912
    3. 'eters' → logprob: -5.18699836730957
    4. ' n' → logprob: -8.18699836730957
    5. 'etre' → logprob: -8.56199836730957
    6. 'etros' → logprob: -8.56199836730957
    7. 'è' → logprob: -8.56199836730957
    8. 'et' → logprob: -8.81199836730957
    9. 'ETERS' → logprob: -9.18699836730957
    10. 'étr' → logprob: -9.43699836730957

Token 145: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.16418586671352386
    2. ' :
' → logprob: -2.0391857624053955
    3. ':' → logprob: -4.414186000823975
    4. ':
' → logprob: -4.789186000823975
    5. '   ' → logprob: -8.289185523986816
    6. '):
' → logprob: -8.414185523986816
    7. '(n' → logprob: -8.414185523986816
    8. '
' → logprob: -9.289185523986816
    9. ' :
' → logprob: -11.039185523986816
    10. ':n' → logprob: -11.289185523986816

Token 146: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09191092103719711
    2. 'n' → logprob: -2.7169108390808105
    3. '   ' → logprob: -3.9669108390808105
    4. '    
' → logprob: -6.4669108390808105
    5. ' 
' → logprob: -7.5919108390808105
    6. '
' → logprob: -7.5919108390808105
    7. '    ' → logprob: -9.466911315917969
    8. '     
' → logprob: -9.841911315917969
    9. '(n' → logprob: -10.216911315917969
    10. '	n' → logprob: -10.466911315917969

Token 147: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.1608329862356186
    2. ' n' → logprob: -1.9108330011367798
    3. '   ' → logprob: -7.41083288192749
    4. '	n' → logprob: -13.160833358764648
    5. '
' → logprob: -13.285833358764648
    6. ' ' → logprob: -16.16083335876465
    7. '    
' → logprob: -16.28583335876465
    8. '    ' → logprob: -16.66083335876465
    9. '\n' → logprob: -17.28583335876465
    10. '       ' → logprob: -17.41083335876465

Token 148: ' (' (ID: 350)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2589946687221527
    2. ' (' → logprob: -1.758994698524475
    3. ':' → logprob: -3.1339945793151855
    4. '   ' → logprob: -4.7589945793151855
    5. '<|end|>' → logprob: -6.5089945793151855
    6. ':int' → logprob: -7.0089945793151855
    7. '(int' → logprob: -7.8839945793151855
    8. ' int' → logprob: -7.8839945793151855
    9. '    ' → logprob: -8.383995056152344
    10. '<|end|>' → logprob: -9.383995056152344

Token 149: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023248272016644478
    2. ' int' → logprob: -3.7732481956481934
    3. '   ' → logprob: -13.773248672485352
    4. ':int' → logprob: -13.898248672485352
    5. ')' → logprob: -15.773248672485352
    6. '[int' → logprob: -15.898248672485352
    7. '(int' → logprob: -16.39824867248535
    8. 'in' → logprob: -16.64824867248535
    9. ' ' → logprob: -16.64824867248535
    10. '```' → logprob: -17.02324867248535

Token 150: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04281647503376007
    2. ')' → logprob: -3.792816400527954
    3. '):' → logprob: -4.167816638946533
    4. '   ' → logprob: -6.042816638946533
    5. ' ,' → logprob: -6.917816638946533
    6. ' ):' → logprob: -8.792816162109375
    7. '       ' → logprob: -8.917816162109375
    8. ' )' → logprob: -8.917816162109375
    9. '<|end|>' → logprob: -10.542816162109375
    10. '),' → logprob: -11.167816162109375

Token 151: ' Nombre' (ID: 70208)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.00845441222190857
    2. 'Le' → logprob: -5.258454322814941
    3. ' le' → logprob: -6.258454322814941
    4. ' Nombre' → logprob: -6.883454322814941
    5. ' nombre' → logprob: -8.383454322814941
    6. 'Nombre' → logprob: -10.758454322814941
    7. '       ' → logprob: -11.883454322814941
    8. '   ' → logprob: -12.008454322814941
    9. ' L' → logprob: -12.258454322814941
    10. '    ' → logprob: -12.633454322814941

Token 152: ' total' (ID: 3609)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1280229538679123
    2. '   ' → logprob: -3.0030229091644287
    3. ' des' → logprob: -3.0030229091644287
    4. '    ' → logprob: -4.878023147583008
    5. '<|end|>' → logprob: -5.753023147583008
    6. '       ' → logprob: -6.128023147583008
    7. ' de' → logprob: -6.253023147583008
    8. 'd' → logprob: -6.878023147583008
    9. ' total' → logprob: -7.128023147583008
    10. ' ' → logprob: -7.253023147583008

Token 153: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011951821856200695
    2. '   ' → logprob: -4.886951923370361
    3. 'd' → logprob: -5.886951923370361
    4. '    ' → logprob: -7.386951923370361
    5. ' des' → logprob: -8.261951446533203
    6. '       ' → logprob: -8.636951446533203
    7. '<|end|>' → logprob: -8.886951446533203
    8. ' de' → logprob: -9.386951446533203
    9. '  ' → logprob: -9.761951446533203
    10. ' ' → logprob: -10.511951446533203

Token 154: ''' (ID: 6)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.46652740240097046
    2. 'élé' → logprob: -1.4665274620056152
    3. ''' → logprob: -2.3415274620056152
    4. ''é' → logprob: -3.2165274620056152
    5. '   ' → logprob: -6.466527462005615
    6. ' é' → logprob: -7.091527462005615
    7. ' ' → logprob: -7.341527462005615
    8. ''él' → logprob: -7.716527462005615
    9. 'e' → logprob: -8.091526985168457
    10. ' ' → logprob: -8.216526985168457

Token 155: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02162298373878002
    2. ' éléments' → logprob: -3.896622896194458
    3. ''' → logprob: -7.646623134613037
    4. 'é' → logprob: -8.021622657775879
    5. 'él' → logprob: -8.646622657775879
    6. ''é' → logprob: -9.896622657775879
    7. ''él' → logprob: -11.646622657775879
    8. ' ' → logprob: -11.896622657775879
    9. '`' → logprob: -12.396622657775879
    10. 'obj' → logprob: -12.646622657775879

Token 156: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -2.546478935983032e-05
    2. 'ment' → logprob: -11.125025749206543
    3. 'm' → logprob: -11.875025749206543
    4. 'éments' → logprob: -13.875025749206543
    5. 'ents' → logprob: -14.125025749206543
    6. 'nts' → logprob: -14.125025749206543
    7. 'ts' → logprob: -15.250025749206543
    8. 'ements' → logprob: -15.500025749206543
    9. '   ' → logprob: -15.625025749206543
    10. '```' → logprob: -16.750024795532227

Token 157: ' disponibles' (ID: 36617)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6333779096603394
    2. ')' → logprob: -1.2583779096603394
    3. '   ' → logprob: -1.7583779096603394
    4. '       ' → logprob: -4.883378028869629
    5. ',
' → logprob: -6.133378028869629
    6. '<|end|>' → logprob: -6.883378028869629
    7. ')
' → logprob: -7.258378028869629
    8. ' ,' → logprob: -7.758378028869629
    9. ' )' → logprob: -8.008378028869629
    10. '),' → logprob: -9.008378028869629

Token 158: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4989890158176422
    2. '   ' → logprob: -1.4989889860153198
    3. ')' → logprob: -1.8739889860153198
    4. '       ' → logprob: -4.623989105224609
    5. ')
' → logprob: -5.873989105224609
    6. ',
' → logprob: -6.623989105224609
    7. '<|end|>' → logprob: -6.873989105224609
    8. '
' → logprob: -8.24898910522461
    9. '),' → logprob: -8.49898910522461
    10. ' ,' → logprob: -9.37398910522461

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07407274097204208
    2. '       ' → logprob: -2.69907283782959
    3. '\n' → logprob: -7.07407283782959
    4. '    
' → logprob: -7.07407283782959
    5. '
' → logprob: -7.57407283782959
    6. ' ' → logprob: -7.69907283782959
    7. '    ' → logprob: -8.32407283782959
    8. '"""' → logprob: -8.44907283782959
    9. '```' → logprob: -8.82407283782959
    10. 'r' → logprob: -8.94907283782959

Token 160: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0790463238954544
    2. ' r' → logprob: -2.5790462493896484
    3. '   ' → logprob: -8.829046249389648
    4. '       ' → logprob: -11.829046249389648
    5. ' ' → logprob: -13.329046249389648
    6. '  ' → logprob: -14.329046249389648
    7. '    ' → logprob: -15.204046249389648
    8. '	r' → logprob: -15.329046249389648
    9. '
' → logprob: -17.32904624938965
    10. '     ' → logprob: -17.45404624938965

Token 161: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.02093176729977131
    2. '(int' → logprob: -4.520931720733643
    3. ')' → logprob: -4.645931720733643
    4. ':int' → logprob: -9.2709321975708
    5. ' )' → logprob: -9.7709321975708
    6. '):' → logprob: -10.5209321975708
    7. 'int' → logprob: -10.6459321975708
    8. '(' → logprob: -12.0209321975708
    9. ' int' → logprob: -12.2709321975708
    10. '   ' → logprob: -12.2709321975708

Token 162: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. ')' → logprob: -17.500059127807617
    4. ':int' → logprob: -19.000059127807617
    5. '[int' → logprob: -19.250059127807617
    6. '   ' → logprob: -19.500059127807617
    7. '```' → logprob: -19.500059127807617
    8. ']int' → logprob: -19.625059127807617
    9. '	int' → logprob: -20.000059127807617
    10. '=int' → logprob: -20.250059127807617

Token 163: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3406981825828552
    2. 'int' → logprob: -1.3406982421875
    3. ' int' → logprob: -4.2156982421875
    4. ')' → logprob: -4.9656982421875
    5. '):
' → logprob: -6.2156982421875
    6. '   ' → logprob: -6.7156982421875
    7. '(int' → logprob: -6.9656982421875
    8. ':int' → logprob: -7.3406982421875
    9. '=int' → logprob: -8.2156982421875
    10. ':' → logprob: -9.7156982421875

Token 164: ' Nombre' (ID: 70208)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01605290174484253
    2. 'int' → logprob: -4.141052722930908
    3. '   ' → logprob: -12.016053199768066
    4. ' entier' → logprob: -12.016053199768066
    5. ' ' → logprob: -13.391053199768066
    6. '(int' → logprob: -13.641053199768066
    7. ' nombre' → logprob: -14.266053199768066
    8. '	int' → logprob: -14.391053199768066
    9. '=int' → logprob: -14.641053199768066
    10. '    ' → logprob: -15.016053199768066

Token 165: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20461057126522064
    2. ' de' → logprob: -2.829610586166382
    3. '   ' → logprob: -3.454610586166382
    4. ' (' → logprob: -3.704610586166382
    5. ' à' → logprob: -4.079610347747803
    6. ' des' → logprob: -4.204610347747803
    7. ':' → logprob: -4.454610347747803
    8. ' :' → logprob: -4.954610347747803
    9. ' ' → logprob: -5.454610347747803
    10. '  ' → logprob: -5.954610347747803

Token 166: ''' (ID: 6)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.2725161612033844
    2. ' d' → logprob: -1.772516131401062
    3. 'élé' → logprob: -3.0225162506103516
    4. ' à' → logprob: -4.147516250610352
    5. ' elements' → logprob: -6.647516250610352
    6. '   ' → logprob: -7.147516250610352
    7. ' élément' → logprob: -7.272516250610352
    8. ' ' → logprob: -7.647516250610352
    9. '  ' → logprob: -9.147516250610352
    10. '    ' → logprob: -9.147516250610352

Token 167: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.015218491666018963
    2. ' éléments' → logprob: -4.265218257904053
    3. 'elements' → logprob: -8.015218734741211
    4. ' ' → logprob: -8.765218734741211
    5. 'él' → logprob: -8.890218734741211
    6. 'é' → logprob: -8.890218734741211
    7. '   ' → logprob: -9.015218734741211
    8. '  ' → logprob: -10.640218734741211
    9. 'sé' → logprob: -10.765218734741211
    10. '```' → logprob: -10.765218734741211

Token 168: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -9.925185440806672e-05
    2. 'ment' → logprob: -9.500099182128906
    3. 'éments' → logprob: -11.000099182128906
    4. 'ements' → logprob: -12.375099182128906
    5. 'm' → logprob: -13.375099182128906
    6. 'mentation' → logprob: -14.500099182128906
    7. '   ' → logprob: -15.125099182128906
    8. 'lements' → logprob: -15.375099182128906
    9. 'men' → logprob: -15.750099182128906
    10. 'ents' → logprob: -15.750099182128906

Token 169: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16521918773651123
    2. '   ' → logprob: -1.9152191877365112
    3. 'à' → logprob: -6.040219306945801
    4. ' ' → logprob: -7.040219306945801
    5. ')' → logprob: -7.915219306945801
    6. '    ' → logprob: -8.1652193069458
    7. '  ' → logprob: -8.4152193069458
    8. ' cho' → logprob: -9.0402193069458
    9. '       ' → logprob: -9.2902193069458
    10. ' chois' → logprob: -9.2902193069458

Token 170: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.038280170410871506
    2. 'cho' → logprob: -3.6632802486419678
    3. ' ' → logprob: -5.163280010223389
    4. ' sélectionner' → logprob: -5.788280010223389
    5. '   ' → logprob: -6.163280010223389
    6. '  ' → logprob: -7.538280010223389
    7. 'sé' → logprob: -8.538280487060547
    8. '    ' → logprob: -9.038280487060547
    9. '       ' → logprob: -10.663280487060547
    10. ' chois' → logprob: -10.788280487060547

Token 171: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6785637736320496
    2. ')' → logprob: -1.0535638332366943
    3. '):' → logprob: -2.4285638332366943
    4. '   ' → logprob: -2.9285638332366943
    5. '):
' → logprob: -6.553563594818115
    6. ')
' → logprob: -7.928563594818115
    7. '"""
' → logprob: -9.053564071655273
    8. '):

' → logprob: -9.303564071655273
    9. ' ):
' → logprob: -9.428564071655273
    10. ' )' → logprob: -9.678564071655273

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032541234977543354
    2. '"""' → logprob: -6.503253936767578
    3. ')' → logprob: -6.628253936767578
    4. '"""
' → logprob: -8.253253936767578
    5. '
' → logprob: -10.003253936767578
    6. ')
' → logprob: -10.128253936767578
    7. '    
' → logprob: -10.378253936767578
    8. '""' → logprob: -10.628253936767578
    9. 'Returns' → logprob: -11.753253936767578
    10. '```' → logprob: -12.503253936767578

Token 173: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06640774011611938
    2. '"""' → logprob: -3.4414076805114746
    3. ')' → logprob: -3.5664076805114746
    4. '"""
' → logprob: -5.816407680511475
    5. '""' → logprob: -7.441407680511475
    6. ')
' → logprob: -9.191408157348633
    7. '
' → logprob: -9.316408157348633
    8. '    
' → logprob: -9.691408157348633
    9. 'Returns' → logprob: -9.941408157348633
    10. '")' → logprob: -10.191408157348633

Token 174: ':
' (ID: 734)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.0029396675527095795
    2. '   ' → logprob: -6.502939701080322
    3. 'nne' → logprob: -7.252939701080322
    4. 'n' → logprob: -7.502939701080322
    5. 'rne' → logprob: -10.127939224243164
    6. ':' → logprob: -10.127939224243164
    7. 'nee' → logprob: -10.252939224243164
    8. 'e' → logprob: -10.502939224243164
    9. '       ' → logprob: -11.377939224243164
    10. 'ner' → logprob: -12.002939224243164

Token 175: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007114817854017019
    2. '       ' → logprob: -5.007114887237549
    3. 'int' → logprob: -8.38211441040039
    4. ' int' → logprob: -9.25711441040039
    5. '    ' → logprob: -9.75711441040039
    6. '    
' → logprob: -12.50711441040039
    7. '  ' → logprob: -12.63211441040039
    8. '
' → logprob: -12.88211441040039
    9. '     ' → logprob: -13.00711441040039
    10. '      ' → logprob: -13.38211441040039

Token 176: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.001357136876322329
    2. ' int' → logprob: -6.626357078552246
    3. '   ' → logprob: -10.626357078552246
    4. 'float' → logprob: -12.501357078552246
    5. '(int' → logprob: -12.876357078552246
    6. ':int' → logprob: -15.876357078552246
    7. 'return' → logprob: -16.001358032226562
    8. '       ' → logprob: -16.126358032226562
    9. '	int' → logprob: -16.751358032226562
    10. '  ' → logprob: -17.251358032226562

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4285862057004124e-05
    2. ' :' → logprob: -10.37503433227539
    3. '   ' → logprob: -12.87503433227539
    4. 'Le' → logprob: -16.12503433227539
    5. ' ' → logprob: -16.37503433227539
    6. ':return' → logprob: -17.12503433227539
    7. '       ' → logprob: -17.25003433227539
    8. '    ' → logprob: -17.62503433227539
    9. '```' → logprob: -17.62503433227539
    10. 'le' → logprob: -17.87503433227539

Token 178: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.3905266225337982
    2. 'Le' → logprob: -1.3905266523361206
    3. 'Nombre' → logprob: -3.140526533126831
    4. ' Nombre' → logprob: -4.26552677154541
    5. ' nombre' → logprob: -4.76552677154541
    6. ' le' → logprob: -4.89052677154541
    7. 'nombre' → logprob: -7.89052677154541
    8. '   ' → logprob: -8.64052677154541
    9. ' La' → logprob: -9.01552677154541
    10. ' ' → logprob: -9.51552677154541

Token 179: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.006300365086644888
    2. 'nombre' → logprob: -5.131300449371338
    3. ' résultat' → logprob: -8.13129997253418
    4. ' nombres' → logprob: -10.13129997253418
    5. 's' → logprob: -10.88129997253418
    6. ' facteur' → logprob: -12.00629997253418
    7. ' comb' → logprob: -13.50629997253418
    8. 'Nombre' → logprob: -13.63129997253418
    9. '   ' → logprob: -13.63129997253418
    10. ' ' → logprob: -13.75629997253418

Token 180: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01691252365708351
    2. ' des' → logprob: -4.516912460327148
    3. 'de' → logprob: -5.766912460327148
    4. '   ' → logprob: -6.766912460327148
    5. '_de' → logprob: -7.266912460327148
    6. ' ' → logprob: -7.766912460327148
    7. '_des' → logprob: -8.766912460327148
    8. 'des' → logprob: -9.516912460327148
    9. ' possible' → logprob: -9.641912460327148
    10. ' d' → logprob: -10.641912460327148

Token 181: ' façons' (ID: 165958)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.870202362537384
    2. 'comb' → logprob: -0.870202362537384
    3. ' façons' → logprob: -1.8702023029327393
    4. 'com' → logprob: -5.120202541351318
    5. '   ' → logprob: -7.495202541351318
    6. ' man' → logprob: -7.745202541351318
    7. 'man' → logprob: -7.995202541351318
    8. ' combinations' → logprob: -8.37020206451416
    9. ' ' → logprob: -8.49520206451416
    10. 'fa' → logprob: -9.37020206451416

Token 182: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1518797129392624
    2. 'de' → logprob: -2.4018797874450684
    3. '   ' → logprob: -3.0268797874450684
    4. ' possibles' → logprob: -7.026879787445068
    5. ' ' → logprob: -8.15187931060791
    6. ' possible' → logprob: -8.77687931060791
    7. '  ' → logprob: -8.77687931060791
    8. '    ' → logprob: -9.27687931060791
    9. 'possible' → logprob: -9.65187931060791
    10. ' choisir' → logprob: -10.15187931060791

Token 183: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.7973476052284241
    2. ' choisir' → logprob: -0.7973476052284241
    3. 'comb' → logprob: -2.4223475456237793
    4. ' comb' → logprob: -5.547347545623779
    5. 'calcul' → logprob: -5.672347545623779
    6. '   ' → logprob: -7.047347545623779
    7. ' sélectionner' → logprob: -7.547347545623779
    8. 'com' → logprob: -7.797347545623779
    9. ' ' → logprob: -8.047348022460938
    10. ' calcul' → logprob: -8.172348022460938

Token 184: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04320014640688896
    2. 'r' → logprob: -3.1682002544403076
    3. '   ' → logprob: -9.168200492858887
    4. ' ' → logprob: -10.043200492858887
    5. '	r' → logprob: -11.293200492858887
    6. ' ' → logprob: -11.668200492858887
    7. ' n' → logprob: -11.793200492858887
    8. '_r' → logprob: -12.293200492858887
    9. '  ' → logprob: -12.793200492858887
    10. '    ' → logprob: -12.793200492858887

Token 185: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.10375186055898666
    2. ' elements' → logprob: -3.2287518978118896
    3. '   ' → logprob: -3.8537518978118896
    4. ' parmi' → logprob: -4.9787516593933105
    5. ' des' → logprob: -5.3537516593933105
    6. ' ' → logprob: -5.3537516593933105
    7. ' d' → logprob: -5.4787516593933105
    8. '<|end|>' → logprob: -5.6037516593933105
    9. 'élé' → logprob: -5.7287516593933105
    10. 'elements' → logprob: -5.8537516593933105

Token 186: ' parmi' (ID: 51713)
  Prédit: ' parmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parmi' → logprob: -0.6420949697494507
    2. '   ' → logprob: -0.7670949697494507
    3. ' sans' → logprob: -5.01709508895874
    4. 'sans' → logprob: -6.51709508895874
    5. '.' → logprob: -8.642094612121582
    6. ' dentre' → logprob: -8.642094612121582
    7. ',' → logprob: -8.642094612121582
    8. ' de' → logprob: -8.892094612121582
    9. '```' → logprob: -9.142094612121582
    10. 'from' → logprob: -9.392094612121582

Token 187: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.576015830039978
    2. 'n' → logprob: -0.826015830039978
    3. '   ' → logprob: -9.95101547241211
    4. ' ' → logprob: -11.57601547241211
    5. '	n' → logprob: -11.57601547241211
    6. '```' → logprob: -12.70101547241211
    7. '    ' → logprob: -13.57601547241211
    8. '  ' → logprob: -13.57601547241211
    9. ' ' → logprob: -13.57601547241211
    10. '_n' → logprob: -14.70101547241211

Token 188: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4138834476470947
    2. ')' → logprob: -1.1638834476470947
    3. '.' → logprob: -4.413883209228516
    4. '"""' → logprob: -5.038883209228516
    5. ',' → logprob: -6.413883209228516
    6. ').' → logprob: -6.538883209228516
    7. '```' → logprob: -6.913883209228516
    8. '"""
' → logprob: -7.288883209228516
    9. '."""' → logprob: -7.413883209228516
    10. ' )' → logprob: -7.663883209228516

Token 189: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20925866067409515
    2. ' en' → logprob: -2.334258556365967
    3. ' ou' → logprob: -3.334258556365967
    4. ' sans' → logprob: -3.834258556365967
    5. ' calcul' → logprob: -4.709258556365967
    6. ' même' → logprob: -5.084258556365967
    7. '    ' → logprob: -5.459258556365967
    8. 'sans' → logprob: -5.959258556365967
    9. ' si' → logprob: -6.084258556365967
    10. '       ' → logprob: -6.209258556365967

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14340408146381378
    2. ' ' → logprob: -2.018404006958008
    3. '   ' → logprob: -7.268404006958008
    4. '  ' → logprob: -11.643404006958008
    5. '    ' → logprob: -11.893404006958008
    6. '
' → logprob: -13.018404006958008
    7. '       ' → logprob: -13.143404006958008
    8. ' zéro' → logprob: -13.143404006958008
    9. ' ' → logprob: -13.268404006958008
    10. '1' → logprob: -13.268404006958008

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007850187830626965
    2. ' ' → logprob: -4.882850170135498
    3. '   ' → logprob: -8.632850646972656
    4. '1' → logprob: -11.007850646972656
    5. '       ' → logprob: -11.007850646972656
    6. '
' → logprob: -11.507850646972656
    7. '  ' → logprob: -12.132850646972656
    8. '```' → logprob: -12.757850646972656
    9. '    ' → logprob: -13.007850646972656
    10. '     ' → logprob: -13.382850646972656

Token 192: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.3631908893585205
    2. '   ' → logprob: -1.3631908893585205
    3. ' if' → logprob: -3.2381908893585205
    4. 'if' → logprob: -5.488190650939941
    5. ' ' → logprob: -5.613190650939941
    6. 'si' → logprob: -6.863190650939941
    7. '    ' → logprob: -8.988190650939941
    8. '```' → logprob: -9.113190650939941
    9. '       ' → logprob: -9.238190650939941
    10. '0' → logprob: -9.863190650939941

Token 193: ' n' (ID: 297)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.047965340316295624
    2. ' n' → logprob: -3.4229652881622314
    3. 'r' → logprob: -4.2979655265808105
    4. 'n' → logprob: -7.4229655265808105
    5. '   ' → logprob: -11.172965049743652
    6. '```' → logprob: -12.797965049743652
    7. ' ' → logprob: -13.297965049743652
    8. ' ' → logprob: -13.547965049743652
    9. ' les' → logprob: -14.360465049743652
    10. ' not' → logprob: -14.610465049743652

Token 194: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.180092453956604
    2. '<' → logprob: -1.805092453956604
    3. '<n' → logprob: -8.805092811584473
    4. '   ' → logprob: -9.555092811584473
    5. ' ' → logprob: -9.555092811584473
    6. '[' → logprob: -12.055092811584473
    7. '<|end|>' → logprob: -12.055092811584473
    8. '  ' → logprob: -12.430092811584473
    9. '<int' → logprob: -12.555092811584473
    10. '<s' → logprob: -12.555092811584473

Token 195: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.12693104147911072
    2. ' r' → logprob: -2.1269309520721436
    3. '   ' → logprob: -13.751931190490723
    4. '0' → logprob: -13.751931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '	r' → logprob: -15.376931190490723
    7. '_r' → logprob: -15.751931190490723
    8. '2' → logprob: -16.001930236816406
    9. '```' → logprob: -16.251930236816406
    10. '3' → logprob: -17.876930236816406

Token 196: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01160887535661459
    2. '.' → logprob: -5.636609077453613
    3. '"""' → logprob: -5.761609077453613
    4. ')' → logprob: -6.011609077453613
    5. '```' → logprob: -7.386609077453613
    6. ').' → logprob: -7.636609077453613
    7. '<|end|>' → logprob: -8.011609077453613
    8. '
' → logprob: -8.136609077453613
    9. '"""
' → logprob: -9.136609077453613
    10. ',' → logprob: -9.386609077453613

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003839597338810563
    2. '"""' → logprob: -8.000384330749512
    3. '"""
' → logprob: -11.250384330749512
    4. ' """' → logprob: -11.375384330749512
    5. '    
' → logprob: -11.375384330749512
    6. '
' → logprob: -12.250384330749512
    7. '""' → logprob: -13.000384330749512
    8. ' """
' → logprob: -13.000384330749512
    9. '\n' → logprob: -13.875384330749512
    10. ')' → logprob: -14.250384330749512

Token 198: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018954791128635406
    2. '"""' → logprob: -4.268954753875732
    3. '"""
' (adapté à ' """
') → logprob: -5.393954753875732
    4. ' """
' → logprob: -9.39395523071289
    5. '""' → logprob: -9.39395523071289
    6. ' """' → logprob: -10.14395523071289
    7. '
' → logprob: -11.64395523071289
    8. '    
' → logprob: -11.76895523071289
    9. '```' → logprob: -12.39395523071289
    10. 'if' → logprob: -13.01895523071289

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.080963092041202e-06
    2. 'if' → logprob: -12.625004768371582
    3. '    
' → logprob: -13.750004768371582
    4. '
' → logprob: -15.000004768371582
    5. ' if' → logprob: -15.375004768371582
    6. '   ' → logprob: -16.8750057220459
    7. '```' → logprob: -17.0000057220459
    8. '	if' → logprob: -18.2500057220459
    9. '    ' → logprob: -18.3750057220459
    10. 'def' → logprob: -18.5000057220459

Token 200: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004987897351384163
    2. ' if' → logprob: -5.629987716674805
    3. '   ' → logprob: -6.629987716674805
    4. 'return' → logprob: -9.629987716674805
    5. '	if' → logprob: -14.754987716674805
    6. ' return' → logprob: -15.629987716674805
    7. '```' → logprob: -15.629987716674805
    8. ' ' → logprob: -16.504987716674805
    9. '  ' → logprob: -16.754987716674805
    10. '    
' → logprob: -17.254987716674805

Token 201: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5775627493858337
    2. 'n' → logprob: -0.8275627493858337
    3. 'r' → logprob: -6.9525628089904785
    4. ' r' → logprob: -7.3275628089904785
    5. '   ' → logprob: -12.20256233215332
    6. '	n' → logprob: -13.07756233215332
    7. ' ' → logprob: -14.07756233215332
    8. '0' → logprob: -15.45256233215332
    9. ' not' → logprob: -15.82756233215332
    10. '(n' → logprob: -15.95256233215332

Token 202: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2266760766506195
    2. '<' → logprob: -1.601676106452942
    3. '<n' → logprob: -6.726675987243652
    4. ' >=' → logprob: -11.601675987243652
    5. '   ' → logprob: -11.851675987243652
    6. '<m' → logprob: -12.101675987243652
    7. ' ' → logprob: -12.226675987243652
    8. '<int' → logprob: -12.351675987243652
    9. '<class' → logprob: -12.351675987243652
    10. '<num' → logprob: -12.476675987243652

Token 203: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.306760805164231e-05
    2. ' r' → logprob: -11.25001335144043
    3. '0' → logprob: -17.25001335144043
    4. ' ' → logprob: -21.25001335144043
    5. '	r' → logprob: -21.37501335144043
    6. '   ' → logprob: -22.37501335144043
    7. '_r' → logprob: -23.00001335144043
    8. '
' → logprob: -23.75001335144043
    9. '=r' → logprob: -24.00001335144043
    10. '2' → logprob: -24.37501335144043

Token 204: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2537870705127716
    2. ':' → logprob: -1.5037870407104492
    3. '   ' → logprob: -7.003787040710449
    4. ':return' → logprob: -7.503787040710449
    5. '       ' → logprob: -8.12878704071045
    6. ' or' → logprob: -9.87878704071045
    7. ' :
' → logprob: -11.25378704071045
    8. '):
' → logprob: -11.37878704071045
    9. ':
' → logprob: -11.37878704071045
    10. ' :' → logprob: -12.00378704071045

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015929419314488769
    2. '   ' → logprob: -6.626593112945557
    3. 'return' → logprob: -8.751592636108398
    4. '0' → logprob: -10.001592636108398
    5. ' return' → logprob: -10.501592636108398
    6. '
' → logprob: -10.751592636108398
    7. '	return' → logprob: -12.751592636108398
    8. '           ' → logprob: -13.501592636108398
    9. '        
' → logprob: -13.501592636108398
    10. ' ' → logprob: -13.626592636108398

Token 206: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08708588033914566
    2. ' return' → logprob: -2.5870859622955322
    3. '   ' → logprob: -5.337085723876953
    4. '       ' → logprob: -5.712085723876953
    5. '	return' → logprob: -10.712085723876953
    6. '0' → logprob: -11.337085723876953
    7. '
' → logprob: -12.462085723876953
    8. '    ' → logprob: -13.087085723876953
    9. ':return' → logprob: -13.462085723876953
    10. ' ' → logprob: -13.712085723876953

Token 207: ' Impossible' (ID: 136939)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005644689663313329
    2. ' return' → logprob: -8.000564575195312
    3. '   ' → logprob: -9.000564575195312
    4. 'ret' → logprob: -9.250564575195312
    5. '       ' → logprob: -12.250564575195312
    6. 're' → logprob: -13.750564575195312
    7. ':return' → logprob: -14.000564575195312
    8. 'eturn' → logprob: -14.250564575195312
    9. '	return' → logprob: -14.250564575195312
    10. 'Retour' → logprob: -14.875564575195312

Token 208: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30833005905151367
    2. ' de' → logprob: -1.6833300590515137
    3. '       ' → logprob: -3.1833300590515137
    4. ' return' → logprob: -3.6833300590515137
    5. 'return' → logprob: -4.683330059051514
    6. '    ' → logprob: -6.058330059051514
    7. ' ' → logprob: -7.558330059051514
    8. 'de' → logprob: -8.808330535888672
    9. '    
' → logprob: -9.058330535888672
    10. '	return' → logprob: -9.433330535888672

Token 209: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.35731664299964905
    2. ' choisir' → logprob: -1.2323166131973267
    3. 'comb' → logprob: -5.357316493988037
    4. 'faire' → logprob: -6.482316493988037
    5. ' comb' → logprob: -7.607316493988037
    6. '   ' → logprob: -7.732316493988037
    7. ' faire' → logprob: -7.732316493988037
    8. ' ' → logprob: -8.482316970825195
    9. 'former' → logprob: -8.482316970825195
    10. ' cho' → logprob: -8.857316970825195

Token 210: ' plus' (ID: 2932)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34925979375839233
    2. ' ' → logprob: -1.224259853363037
    3. '   ' → logprob: -7.349259853363037
    4. 'return' → logprob: -9.724259376525879
    5. ' return' → logprob: -9.974259376525879
    6. '       ' → logprob: -10.349259376525879
    7. 'r' → logprob: -11.349259376525879
    8. '    ' → logprob: -11.974259376525879
    9. ' r' → logprob: -12.724259376525879
    10. '  ' → logprob: -12.849259376525879

Token 211: ' d' (ID: 272)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6752853393554688
    2. 'd' → logprob: -0.8002853393554688
    3. ' d' → logprob: -4.175285339355469
    4. ' éléments' → logprob: -4.550285339355469
    5. 'que' → logprob: -4.800285339355469
    6. 'elements' → logprob: -5.425285339355469
    7. ' que' → logprob: -6.300285339355469
    8. ' elements' → logprob: -7.300285339355469
    9. 'n' → logprob: -8.425285339355469
    10. '   ' → logprob: -8.550285339355469

Token 212: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10310348123311996
    2. ''' → logprob: -2.8531033992767334
    3. ' éléments' → logprob: -3.2281033992767334
    4. 'elements' → logprob: -8.103103637695312
    5. 'n' → logprob: -9.228103637695312
    6. 'r' → logprob: -10.228103637695312
    7. 'él' → logprob: -10.353103637695312
    8. ' elements' → logprob: -10.353103637695312
    9. '```' → logprob: -10.353103637695312
    10. '’' → logprob: -10.728103637695312

Token 213: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06285557895898819
    2. 'r' → logprob: -2.9378554821014404
    3. ' éléments' → logprob: -5.1878557205200195
    4. 'elements' → logprob: -6.5628557205200195
    5. 'n' → logprob: -7.3128557205200195
    6. 'él' → logprob: -9.43785572052002
    7. ''' → logprob: -9.81285572052002
    8. '```' → logprob: -9.81285572052002
    9. ' r' → logprob: -10.68785572052002
    10. 'l' → logprob: -11.31285572052002

Token 214: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -3.547789674485102e-05
    2. 'éments' → logprob: -10.750035285949707
    3. 'ment' → logprob: -11.875035285949707
    4. 'ements' → logprob: -12.375035285949707
    5. 'ents' → logprob: -13.625035285949707
    6. 'm' → logprob: -13.875035285949707
    7. 'lements' → logprob: -15.250035285949707
    8. 'élé' → logprob: -16.250036239624023
    9. 'elements' → logprob: -16.500036239624023
    10. 'ém' → logprob: -16.750036239624023

Token 215: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2737044095993042
    2. ' que' → logprob: -1.5237044095993042
    3. 'return' → logprob: -5.023704528808594
    4. ',' → logprob: -5.273704528808594
    5. ' than' → logprob: -5.398704528808594
    6. ' return' → logprob: -5.898704528808594
    7. '       ' → logprob: -6.648704528808594
    8. '```' → logprob: -7.773704528808594
    9. ' ' → logprob: -7.898704528808594
    10. ' qu' → logprob: -9.648704528808594

Token 216: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.5886837840080261
    2. ' disponibles' → logprob: -1.838683843612671
    3. ' available' → logprob: -2.713683843612671
    4. 'n' → logprob: -3.088683843612671
    5. ''on' → logprob: -3.088683843612671
    6. 'e' → logprob: -3.338683843612671
    7. ''' → logprob: -3.588683843612671
    8. 'u' → logprob: -4.463683605194092
    9. ' disponible' → logprob: -4.463683605194092
    10. 'available' → logprob: -4.713683605194092

Token 217: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.188067227602005
    2. ' n' → logprob: -2.3130671977996826
    3. 'y' → logprob: -2.8130671977996826
    4. '   ' → logprob: -5.188067436218262
    5. ' y' → logprob: -5.188067436218262
    6. '```' → logprob: -6.938067436218262
    7. ''y' → logprob: -9.313067436218262
    8. 'ne' → logprob: -9.813067436218262
    9. 'a' → logprob: -10.563067436218262
    10. 'ny' → logprob: -10.688067436218262

Token 218: ''en' (ID: 16740)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04691501706838608
    2. ' y' → logprob: -3.546915054321289
    3. 'n' → logprob: -4.296915054321289
    4. ''y' → logprob: -6.296915054321289
    5. ' n' → logprob: -7.796915054321289
    6. 'en' → logprob: -7.921915054321289
    7. '   ' → logprob: -8.046915054321289
    8. 'a' → logprob: -8.171915054321289
    9. 'ya' → logprob: -10.046915054321289
    10. 'ex' → logprob: -10.546915054321289

Token 219: ' existe' (ID: 19498)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.47375091910362244
    2. 'y' → logprob: -1.8487509489059448
    3. 'a' → logprob: -2.3487508296966553
    4. 'ont' → logprob: -2.8487508296966553
    5. 'existent' → logprob: -2.9737508296966553
    6. 'exist' → logprob: -5.473751068115234
    7. 'available' → logprob: -5.973751068115234
    8. ' existe' → logprob: -6.098751068115234
    9. 'n' → logprob: -6.348751068115234
    10. 's' → logprob: -7.098751068115234

Token 220: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.524712860584259
    2. '   ' → logprob: -0.899712860584259
    3. 'return' → logprob: -7.274713039398193
    4. ',' → logprob: -8.024712562561035
    5. ' return' → logprob: -8.899712562561035
    6. '
' → logprob: -9.024712562561035
    7. '	return' → logprob: -9.774712562561035
    8. ':return' → logprob: -9.774712562561035
    9. ':' → logprob: -10.149712562561035
    10. '           ' → logprob: -10.399712562561035

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0795091837644577
    2. '   ' → logprob: -2.5795092582702637
    3. 'return' → logprob: -7.954509258270264
    4. ' return' → logprob: -8.454508781433105
    5. '
' → logprob: -11.079508781433105
    6. '	return' → logprob: -11.704508781433105
    7. '    ' → logprob: -12.079508781433105
    8. '    
' → logprob: -12.454508781433105
    9. '0' → logprob: -12.704508781433105
    10. '        
' → logprob: -12.829508781433105

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003015001420862973
    2. '   ' → logprob: -8.250301361083984
    3. ' return' → logprob: -10.250301361083984
    4. '       ' → logprob: -12.500301361083984
    5. 'ret' → logprob: -14.250301361083984
    6. '	return' → logprob: -16.250301361083984
    7. '0' → logprob: -16.500301361083984
    8. ':return' → logprob: -16.750301361083984
    9. '{return' → logprob: -16.875301361083984
    10. 'eturn' → logprob: -17.000301361083984

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -20.250709533691406
    4. ' ' → logprob: -21.000709533691406
    5. '  ' → logprob: -22.625709533691406
    6. '۰' → logprob: -23.125709533691406
    7. '０' → logprob: -24.125709533691406
    8. '000' → logprob: -24.625709533691406
    9. '00' → logprob: -24.875709533691406
    10. '```' → logprob: -25.500709533691406

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.375
    4. '000' → logprob: -21.875
    5. '۰' → logprob: -22.0
    6. '00' → logprob: -22.625
    7. '０' → logprob: -23.0
    8. '```' → logprob: -23.0
    9. '  ' → logprob: -23.25
    10. '    ' → logprob: -24.75

Token 225: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009850544156506658
    2. '
' → logprob: -7.625985145568848
    3. '    
' → logprob: -7.625985145568848
    4. '  
' → logprob: -13.000985145568848
    5. 'return' → logprob: -13.375985145568848
    6. '   
' → logprob: -13.500985145568848
    7. '  ' → logprob: -14.500985145568848
    8. '        
' → logprob: -14.625985145568848
    9. ' return' → logprob: -15.125985145568848
    10. ',' → logprob: -15.125985145568848

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.4034345187828876e-05
    2. 'return' → logprob: -10.75002384185791
    3. '    
' → logprob: -13.87502384185791
    4. '
' → logprob: -14.50002384185791
    5. ' return' → logprob: -14.87502384185791
    6. 'if' → logprob: -15.87502384185791
    7. '  ' → logprob: -16.125024795532227
    8. '```' → logprob: -16.125024795532227
    9. '   ' → logprob: -16.125024795532227
    10. '       ' → logprob: -17.000024795532227

Token 227: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038556624203920364
    2. 'return' → logprob: -3.2885565757751465
    3. ' return' → logprob: -7.7885565757751465
    4. '    
' → logprob: -10.163557052612305
    5. 'result' → logprob: -11.663557052612305
    6. 'from' → logprob: -11.913557052612305
    7. 'num' → logprob: -12.038557052612305
    8. 'res' → logprob: -12.163557052612305
    9. '  ' → logprob: -12.288557052612305
    10. 'if' → logprob: -12.288557052612305

Token 228: ' Form' (ID: 5287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011948520317673683
    2. ' return' → logprob: -4.511948585510254
    3. 'comb' → logprob: -8.011948585510254
    4. 'numer' → logprob: -8.261948585510254
    5. '   ' → logprob: -9.261948585510254
    6. 'result' → logprob: -9.636948585510254
    7. 'factor' → logprob: -10.136948585510254
    8. 'num' → logprob: -10.261948585510254
    9. ' numerator' → logprob: -10.511948585510254
    10. 'res' → logprob: -11.511948585510254

Token 229: 'ule' (ID: 1601)
  Prédit: 'ula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.023400846868753433
    2. 'ule' → logprob: -3.8984007835388184
    3. 'at' → logprob: -7.148400783538818
    4. 'ul' → logprob: -7.898400783538818
    5. 'ulat' → logprob: -7.898400783538818
    6. 'ulaire' → logprob: -8.398401260375977
    7. 'la' → logprob: -8.648401260375977
    8. 'ulas' → logprob: -8.898401260375977
    9. 'ulate' → logprob: -9.023401260375977
    10. 'al' → logprob: -9.023401260375977

Token 230: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8405435681343079
    2. '   ' → logprob: -1.840543508529663
    3. ' factorial' → logprob: -1.965543508529663
    4. '=' → logprob: -2.840543508529663
    5. 'factor' → logprob: -2.840543508529663
    6. ' (' → logprob: -2.965543508529663
    7. ' return' → logprob: -3.215543508529663
    8. '_factor' → logprob: -3.965543508529663
    9. '(n' → logprob: -4.590543746948242
    10. 'return' → logprob: -4.965543746948242

Token 231: ' combinaison' (ID: 165933)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.21359458565711975
    2. ' factorial' → logprob: -1.8385945558547974
    3. 'comb' → logprob: -3.463594675064087
    4. 'fact' → logprob: -7.088594436645508
    5. ' factor' → logprob: -8.338594436645508
    6. ' combinaison' → logprob: -8.338594436645508
    7. 'com' → logprob: -9.338594436645508
    8. ' (' → logprob: -9.588594436645508
    9. '_factor' → logprob: -9.713594436645508
    10. ' facteur' → logprob: -9.838594436645508

Token 232: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039925120770931244
    2. ' return' → logprob: -3.6649250984191895
    3. 'return' → logprob: -4.6649250984191895
    4. ':' → logprob: -6.1649250984191895
    5. ' =' → logprob: -6.7899250984191895
    6. ',' → logprob: -8.664925575256348
    7. '    ' → logprob: -9.164925575256348
    8. ' :' → logprob: -9.289925575256348
    9. '	return' → logprob: -9.289925575256348
    10. '  ' → logprob: -9.539925575256348

Token 233: ' n' (ID: 297)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.4391528367996216
    2. ' factorial' → logprob: -1.9391528367996216
    3. ' return' → logprob: -2.189152717590332
    4. 'return' → logprob: -2.314152717590332
    5. '   ' → logprob: -7.814152717590332
    6. 'fact' → logprob: -8.689152717590332
    7. ' factor' → logprob: -8.939152717590332
    8. ' ' → logprob: -11.564152717590332
    9. '  ' → logprob: -12.564152717590332
    10. '_factor' → logprob: -13.064152717590332

Token 234: '!' (ID: 0)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.9578624367713928
    2. '_factor' → logprob: -1.582862377166748
    3. ' *' → logprob: -1.957862377166748
    4. '*' → logprob: -2.457862377166748
    5. '!' → logprob: -2.707862377166748
    6. 'factor' → logprob: -2.707862377166748
    7. 'C' → logprob: -4.082862377166748
    8. '_fact' → logprob: -4.332862377166748
    9. 'Cr' → logprob: -4.832862377166748
    10. '   ' → logprob: -6.082862377166748

Token 235: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.04126712679862976
    2. '//' → logprob: -3.416267156600952
    3. ' /' → logprob: -4.916266918182373
    4. '   ' → logprob: -8.541267395019531
    5. '/(' → logprob: -10.166267395019531
    6. '/' → logprob: -11.291267395019531
    7. ' ' → logprob: -12.166267395019531
    8. '    ' → logprob: -12.416267395019531
    9. ' ' → logprob: -13.041267395019531
    10. ' //(' → logprob: -13.166267395019531

Token 236: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2504744529724121
    2. ' (' → logprob: -2.000474452972412
    3. '(f' → logprob: -2.500474452972412
    4. '((' → logprob: -5.500474452972412
    5. ' ((' → logprob: -9.75047492980957
    6. '   ' → logprob: -10.37547492980957
    7. '(' → logprob: -10.50047492980957
    8. '(k' → logprob: -11.37547492980957
    9. '(n' → logprob: -11.87547492980957
    10. '(math' → logprob: -12.00047492980957

Token 237: 'r' (ID: 81)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.20638687908649445
    2. 'r' → logprob: -2.3313868045806885
    3. '(f' → logprob: -2.7063868045806885
    4. 'factor' → logprob: -3.8313868045806885
    5. ' (' → logprob: -7.956387042999268
    6. 'fact' → logprob: -8.70638656616211
    7. ' r' → logprob: -8.83138656616211
    8. ' factorial' → logprob: -9.33138656616211
    9. 'f' → logprob: -9.58138656616211
    10. '(' → logprob: -10.58138656616211

Token 238: '!' (ID: 0)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3299497663974762
    2. '!' → logprob: -1.4549497365951538
    3. ' *' → logprob: -3.0799498558044434
    4. '*(' → logprob: -7.204949855804443
    5. ' factorial' → logprob: -7.454949855804443
    6. '*!' → logprob: -8.829949378967285
    7. 'factor' → logprob: -9.829949378967285
    8. '_factor' → logprob: -10.454949378967285
    9. '!(' → logprob: -10.579949378967285
    10. '!*' → logprob: -10.704949378967285

Token 239: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6372210383415222
    2. ' *' → logprob: -0.7622210383415222
    3. '*(' → logprob: -5.387220859527588
    4. '(' → logprob: -11.262221336364746
    5. ')' → logprob: -11.887221336364746
    6. '(n' → logprob: -12.012221336364746
    7. ' (' → logprob: -12.512221336364746
    8. ' ' → logprob: -13.012221336364746
    9. '*((' → logprob: -13.637221336364746
    10. '   ' → logprob: -14.512221336364746

Token 240: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.7597615718841553
    2. '(n' → logprob: -0.8847615718841553
    3. '((' → logprob: -2.3847615718841553
    4. ' (' → logprob: -3.6347615718841553
    5. 'factor' → logprob: -7.634761810302734
    6. ' ((' → logprob: -8.384761810302734
    7. ' factorial' → logprob: -9.759761810302734
    8. '(' → logprob: -10.009761810302734
    9. '(math' → logprob: -11.009761810302734
    10. ')' → logprob: -11.259761810302734

Token 241: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3140627145767212
    2. '(n' → logprob: -1.3140627145767212
    3. ' n' → logprob: -7.939062595367432
    4. ' (' → logprob: -8.18906307220459
    5. 'factor' → logprob: -8.81406307220459
    6. ')n' → logprob: -12.06406307220459
    7. '   ' → logprob: -12.31406307220459
    8. ' factorial' → logprob: -12.43906307220459
    9. ')' → logprob: -14.06406307220459
    10. '	n' → logprob: -14.31406307220459

Token 242: '-r' (ID: 6335)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1092192530632019
    2. ' -' → logprob: -2.3592193126678467
    3. '-r' → logprob: -4.734219074249268
    4. '-n' → logprob: -8.734219551086426
    5. '!' → logprob: -11.609219551086426
    6. 'r' → logprob: -11.984219551086426
    7. 'n' → logprob: -13.609219551086426
    8. ')' → logprob: -13.734219551086426
    9. '-k' → logprob: -13.859219551086426
    10. '```' → logprob: -14.734219551086426

Token 243: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11348626762628555
    2. ')!' → logprob: -2.2384862899780273
    3. '!' → logprob: -7.613486289978027
    4. '))' → logprob: -9.113486289978027
    5. '!)' → logprob: -10.363486289978027
    6. 'factor' → logprob: -11.613486289978027
    7. ' )' → logprob: -12.363486289978027
    8. '_factor' → logprob: -12.738486289978027
    9. ')!
' → logprob: -12.738486289978027
    10. ' factorial' → logprob: -13.238486289978027

Token 244: '!)
' (ID: 52210)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.38002023100852966
    2. ')' → logprob: -1.755020260810852
    3. '!)' → logprob: -2.0050201416015625
    4. ')!' → logprob: -5.3800201416015625
    5. '))' → logprob: -6.0050201416015625
    6. 'factor' → logprob: -7.2550201416015625
    7. ' factorial' → logprob: -7.5050201416015625
    8. '_factor' → logprob: -8.880020141601562
    9. ' !)' → logprob: -10.380020141601562
    10. ' )' → logprob: -10.630020141601562

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011978477705270052
    2. 'return' → logprob: -7.376197814941406
    3. ' return' → logprob: -7.501197814941406
    4. '  ' → logprob: -11.751197814941406
    5. '    
' → logprob: -12.501197814941406
    6. '    ' → logprob: -13.001197814941406
    7. '	return' → logprob: -13.126197814941406
    8. ' ' → logprob: -14.126197814941406
    9. ')' → logprob: -14.751197814941406
    10. '   ' → logprob: -15.126197814941406

Token 246: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20797182619571686
    2. '   ' → logprob: -1.8329718112945557
    3. ' return' → logprob: -3.5829718112945557
    4. '	return' → logprob: -10.832971572875977
    5. '  ' → logprob: -12.207971572875977
    6. 'result' → logprob: -12.582971572875977
    7. '    
' → logprob: -12.707971572875977
    8. ' ' → logprob: -13.207971572875977
    9. '    ' → logprob: -13.207971572875977
    10. '```' → logprob: -13.832971572875977

Token 247: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.008629471063613892
    2. ' factorial' → logprob: -4.758629322052002
    3. 'fact' → logprob: -11.25862979888916
    4. ' factor' → logprob: -13.38362979888916
    5. '   ' → logprob: -15.00862979888916
    6. ' ' → logprob: -16.633628845214844
    7. '  ' → logprob: -17.008628845214844
    8. '_factor' → logprob: -17.133628845214844
    9. 'fac' → logprob: -17.133628845214844
    10. 'Factor' → logprob: -17.633628845214844

Token 248: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.664371848164592e-05
    2. '(' → logprob: -11.250016212463379
    3. ' (' → logprob: -12.625016212463379
    4. 'n' → logprob: -15.750016212463379
    5. 's' → logprob: -17.750017166137695
    6. '(noun' → logprob: -20.500017166137695
    7. '```' → logprob: -20.500017166137695
    8. 'def' → logprob: -20.625017166137695
    9. '[n' → logprob: -20.625017166137695
    10. ' n' → logprob: -20.750017166137695

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ' )' → logprob: -10.375032424926758
    3. ')
' → logprob: -15.500032424926758
    4. '-' → logprob: -15.875032424926758
    5. ')n' → logprob: -16.000032424926758
    6. ')*' → logprob: -16.375032424926758
    7. '}' → logprob: -17.000032424926758
    8. ' -' → logprob: -17.000032424926758
    9. '   ' → logprob: -17.000032424926758
    10. '）' → logprob: -17.125032424926758

Token 250: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.16022859513759613
    2. '//' → logprob: -1.9102286100387573
    3. ' ' → logprob: -13.785228729248047
    4. '   ' → logprob: -14.285228729248047
    5. ' //
' → logprob: -14.660228729248047
    6. '#' → logprob: -14.660228729248047
    7. ' //(' → logprob: -14.660228729248047
    8. '```' → logprob: -14.785228729248047
    9. ' ' → logprob: -15.160228729248047
    10. '//
' → logprob: -15.285228729248047

Token 251: ' (' (ID: 350)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0012111874530091882
    2. ' (' → logprob: -6.751211166381836
    3. 'factor' → logprob: -10.626211166381836
    4. '((' → logprob: -11.751211166381836
    5. '(' → logprob: -12.126211166381836
    6. '(math' → logprob: -13.626211166381836
    7. '   ' → logprob: -14.251211166381836
    8. '(factory' → logprob: -14.876211166381836
    9. ' factorial' → logprob: -15.126211166381836
    10. '(fid' → logprob: -15.876211166381836

Token 252: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -3.531315314830863e-06
    2. ' factorial' → logprob: -12.625003814697266
    3. 'fact' → logprob: -15.750003814697266
    4. '(f' → logprob: -17.875003814697266
    5. '.factor' → logprob: -18.875003814697266
    6. '_factor' → logprob: -19.125003814697266
    7. '   ' → logprob: -19.125003814697266
    8. '-factor' → logprob: -19.750003814697266
    9. ' factor' → logprob: -20.375003814697266
    10. '(' → logprob: -20.500003814697266

Token 253: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.008154470473527908
    2. 'orial' → logprob: -5.258154392242432
    3. 'rial' → logprob: -6.133154392242432
    4. 'factor' → logprob: -8.25815486907959
    5. 'omial' → logprob: -8.88315486907959
    6. 'al' → logprob: -9.00815486907959
    7. '(' → logprob: -9.50815486907959
    8. 'atorial' → logprob: -10.63315486907959
    9. ' factorial' → logprob: -10.88315486907959
    10. 'arial' → logprob: -11.38315486907959

Token 254: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -8.792751032160595e-05
    2. 'r' → logprob: -9.37508773803711
    3. '[r' → logprob: -14.00008773803711
    4. ')' → logprob: -14.00008773803711
    5. ' r' → logprob: -14.50008773803711
    6. ' (' → logprob: -14.75008773803711
    7. '(' → logprob: -15.25008773803711
    8. '	r' → logprob: -16.00008773803711
    9. '(n' → logprob: -18.00008773803711
    10. ')(' → logprob: -19.00008773803711

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ')*' → logprob: -11.50001335144043
    3. ' )' → logprob: -13.12501335144043
    4. '*' → logprob: -15.62501335144043
    5. '*)' → logprob: -15.62501335144043
    6. '')' → logprob: -15.62501335144043
    7. '))' → logprob: -16.37501335144043
    8. '   ' → logprob: -16.87501335144043
    9. '```' → logprob: -16.87501335144043
    10. ')
' → logprob: -17.25001335144043

Token 256: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38687509298324585
    2. ' *' → logprob: -1.1368751525878906
    3. ')' → logprob: -13.01187515258789
    4. ' ' → logprob: -14.38687515258789
    5. '*(' → logprob: -15.01187515258789
    6. ' ' → logprob: -15.13687515258789
    7. '   ' → logprob: -15.13687515258789
    8. ' factorial' → logprob: -15.63687515258789
    9. '**' → logprob: -16.76187515258789
    10. '```' → logprob: -16.88687515258789

Token 257: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0005542247672565281
    2. ' factorial' → logprob: -7.500554084777832
    3. 'fact' → logprob: -14.000554084777832
    4. ' factor' → logprob: -15.250554084777832
    5. '.factor' → logprob: -16.50055503845215
    6. '(f' → logprob: -17.00055503845215
    7. '_factor' → logprob: -17.50055503845215
    8. '-factor' → logprob: -18.87555503845215
    9. 'fac' → logprob: -18.87555503845215
    10. '   ' → logprob: -19.25055503845215

Token 258: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001410850090906024
    2. ' (' → logprob: -9.375141143798828
    3. 'n' → logprob: -9.875141143798828
    4. '(' → logprob: -12.625141143798828
    5. '((' → logprob: -14.375141143798828
    6. ' n' → logprob: -14.625141143798828
    7. '   ' → logprob: -15.750141143798828
    8. ')' → logprob: -16.375141143798828
    9. ')(' → logprob: -16.625141143798828
    10. '  ' → logprob: -17.250141143798828

Token 259: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.22046372294425964
    2. ' -' → logprob: -1.720463752746582
    3. '-' → logprob: -3.970463752746582
    4. 'r' → logprob: -13.095463752746582
    5. ')' → logprob: -13.720463752746582
    6. '-n' → logprob: -13.970463752746582
    7. '   ' → logprob: -14.720463752746582
    8. '-R' → logprob: -15.095463752746582
    9. '-ra' → logprob: -15.845463752746582
    10. ' r' → logprob: -15.970463752746582

Token 260: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015023599844425917
    2. ' r' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. '	r' → logprob: -19.126502990722656
    5. ' ' → logprob: -19.251502990722656
    6. '  ' → logprob: -19.501502990722656
    7. ')' → logprob: -20.126502990722656
    8. '_r' → logprob: -20.501502990722656
    9. '       ' → logprob: -23.126502990722656
    10. '    ' → logprob: -23.251502990722656

Token 261: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005816269549541175
    2. 'r' → logprob: -8.000581741333008
    3. ')' → logprob: -8.375581741333008
    4. ')))' → logprob: -11.875581741333008
    5. ' ))' → logprob: -12.125581741333008
    6. '))
' → logprob: -13.500581741333008
    7. ' r' → logprob: -14.375581741333008
    8. 'n' → logprob: -15.250581741333008
    9. '   ' → logprob: -15.625581741333008
    10. ' ' → logprob: -15.875581741333008

Token 262: 'def' (ID: 1314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4883388876914978
    2. '

' → logprob: -1.6133389472961426
    3. 'n' → logprob: -3.1133389472961426
    4. 'def' → logprob: -3.1133389472961426
    5. '\n' → logprob: -3.3633389472961426
    6. '
' → logprob: -3.6133389472961426
    7. '#' → logprob: -4.238338947296143
    8. '```' → logprob: -5.363338947296143
    9. ' 

' → logprob: -5.738338947296143
    10. 'result' → logprob: -6.238338947296143

Token 263: ' kum' (ID: 14289)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6981167793273926
    2. 'main' → logprob: -0.6981167793273926
    3. 'calcul' → logprob: -6.073116779327393
    4. ' calcul' → logprob: -7.073116779327393
    5. 'nombre' → logprob: -7.448116779327393
    6. 'calculate' → logprob: -8.198116302490234
    7. ' nombre' → logprob: -8.323116302490234
    8. ' calculate' → logprob: -8.948116302490234
    9. 'cho' → logprob: -9.198116302490234
    10. 'cal' → logprob: -9.323116302490234

Token 264: 'ia' (ID: 535)
  Prédit: 'ia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ia' → logprob: -0.0009521945030428469
    2. 'i' → logprob: -7.000952243804932
    3. 'iwa' → logprob: -11.625951766967773
    4. '   ' → logprob: -11.750951766967773
    5. 'iav' → logprob: -12.375951766967773
    6. 'iw' → logprob: -12.500951766967773
    7. 'aw' → logprob: -13.250951766967773
    8. 'iaeth' → logprob: -13.250951766967773
    9. 'a' → logprob: -13.250951766967773
    10. '```' → logprob: -13.750951766967773

Token 265: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.930552313453518e-05
    2. 'aw' → logprob: -10.625049591064453
    3. 'was' → logprob: -10.750049591064453
    4. 'wa' → logprob: -13.750049591064453
    5. 'わせ' → logprob: -13.875049591064453
    6. '

' → logprob: -15.250049591064453
    7. ' wase' → logprob: -15.500049591064453
    8. 'wake' → logprob: -16.375049591064453
    9. '
' → logprob: -16.500049591064453
    10. '_w' → logprob: -16.500049591064453

Token 266: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.0018157173180952668
    2. 'aw' → logprob: -6.8768157958984375
    3. 'w' → logprob: -7.8768157958984375
    4. 'se' → logprob: -9.251815795898438
    5. 'case' → logprob: -9.876815795898438
    6. 'avase' → logprob: -10.501815795898438
    7. '   ' → logprob: -10.876815795898438
    8. 'わせ' → logprob: -11.001815795898438
    9. '_aw' → logprob: -11.001815795898438
    10. ' ase' → logprob: -11.001815795898438

Token 267: '_j' (ID: 12021)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0025534271262586117
    2. '_' → logprob: -7.127553462982178
    3. '_sum' → logprob: -7.627553462982178
    4. 'num' → logprob: -8.00255298614502
    5. '2' → logprob: -9.00255298614502
    6. '_de' → logprob: -9.12755298614502
    7. 'de' → logprob: -9.12755298614502
    8. '_n' → logprob: -9.12755298614502
    9. '_two' → logprob: -10.00255298614502
    10. '(num' → logprob: -10.12755298614502

Token 268: 'uf' (ID: 1427)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9572778344154358
    2. 'ou' → logprob: -1.207277774810791
    3. '_num' → logprob: -2.707277774810791
    4. 'um' → logprob: -2.707277774810791
    5. 'you' → logprob: -3.082277774810791
    6. 'ob' → logprob: -3.957277774810791
    7. 'un' → logprob: -4.207277774810791
    8. 'o' → logprob: -4.582277774810791
    9. 'uu' → logprob: -4.707277774810791
    10. 'n' → logprob: -4.707277774810791

Token 269: 'uku' (ID: 13673)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0547918900847435
    2. 'un' → logprob: -4.1797919273376465
    3. 'uku' → logprob: -4.3047919273376465
    4. 'n' → logprob: -4.6797919273376465
    5. 'y' → logprob: -5.8047919273376465
    6. 'uy' → logprob: -6.4297919273376465
    7. '```' → logprob: -7.1797919273376465
    8. 'i' → logprob: -7.4297919273376465
    9. 'f' → logprob: -7.5547919273376465
    10. '(' → logprob: -7.9297919273376465

Token 270: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1901463270187378
    2. '(num' → logprob: -1.9401463270187378
    3. '(s' → logprob: -4.065146446228027
    4. '_num' → logprob: -4.940146446228027
    5. 'u' → logprob: -6.065146446228027
    6. '(' → logprob: -7.440146446228027
    7. '(nums' → logprob: -7.565146446228027
    8. 's' → logprob: -8.315146446228027
    9. 'n' → logprob: -8.940146446228027
    10. '(r' → logprob: -9.190146446228027

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032360595650970936
    2. ' ,' → logprob: -6.003236293792725
    3. ',r' → logprob: -8.003235816955566
    4. ',k' → logprob: -8.378235816955566
    5. ',n' → logprob: -8.878235816955566
    6. 'def' → logprob: -11.503235816955566
    7. ',j' → logprob: -11.753235816955566
    8. ',m' → logprob: -12.253235816955566
    9. 'r' → logprob: -12.628235816955566
    10. 'n' → logprob: -12.878235816955566

Token 272: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003258280921727419
    2. ' r' → logprob: -6.128258228302002
    3. 'k' → logprob: -6.878258228302002
    4. ')' → logprob: -11.00325870513916
    5. '):
' → logprob: -12.12825870513916
    6. ' k' → logprob: -12.37825870513916
    7. '):' → logprob: -12.87825870513916
    8. ' ' → logprob: -13.12825870513916
    9. 'def' → logprob: -13.50325870513916
    10. '1' → logprob: -13.69075870513916

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010033934377133846
    2. '):
' → logprob: -7.001003265380859
    3. ')' → logprob: -9.75100326538086
    4. ',' → logprob: -10.62600326538086
    5. ' ):' → logprob: -11.87600326538086
    6. ':' → logprob: -13.75100326538086
    7. '):
' → logprob: -14.87600326538086
    8. '=' → logprob: -15.00100326538086
    9. '):

' → logprob: -15.25100326538086
    10. '   ' → logprob: -15.62600326538086

Token 274: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1692008078098297
    2. '   ' → logprob: -2.294200897216797
    3. ':' → logprob: -3.419200897216797
    4. '(' → logprob: -4.169200897216797
    5. 'def' → logprob: -5.919200897216797
    6. '<|end|>' → logprob: -6.794200897216797
    7. '):' → logprob: -7.044200897216797
    8. ',' → logprob: -8.669200897216797
    9. '<|end|>' → logprob: -8.794200897216797
    10. ' :' → logprob: -9.044200897216797

Token 275: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030609628185629845
    2. '"""' → logprob: -4.530609607696533
    3. 'def' → logprob: -4.530609607696533
    4. '"""
' (adapté à ' """
') → logprob: -4.905609607696533
    5. 'if' → logprob: -7.280609607696533
    6. 'from' → logprob: -9.030610084533691
    7. '"' → logprob: -9.155610084533691
    8. 'return' → logprob: -9.155610084533691
    9. '""' → logprob: -10.030610084533691
    10. ')' → logprob: -10.155610084533691

Token 276: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.4149208664894104
    2. '   ' → logprob: -1.1649208068847656
    3. 'if' → logprob: -3.9149208068847656
    4. '"""' → logprob: -5.289920806884766
    5. ' """
' → logprob: -6.914920806884766
    6. 'def' → logprob: -7.039920806884766
    7. ' if' → logprob: -7.789920806884766
    8. '"' → logprob: -8.789920806884766
    9. ''''
' → logprob: -10.289920806884766
    10. 'return' → logprob: -10.414920806884766

Token 277: ' Cal' (ID: 4453)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.5455707907676697
    2. 'Cal' (adapté à ' Cal') → logprob: -1.2955708503723145
    3. '   ' → logprob: -2.2955708503723145
    4. '"""' → logprob: -3.7955708503723145
    5. 'Calcul' → logprob: -3.9205708503723145
    6. ' Cal' → logprob: -6.6705708503723145
    7. 'return' → logprob: -7.2955708503723145
    8. ' """
' → logprob: -7.5455708503723145
    9. 'Calculate' → logprob: -8.545570373535156
    10. ''''
' → logprob: -8.545570373535156

Token 278: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.022625312209129333
    2. 'culate' → logprob: -4.27262544631958
    3. 'c' → logprob: -5.52262544631958
    4. 'cul' → logprob: -5.52262544631958
    5. 'cula' → logprob: -8.147624969482422
    6. 'cules' → logprob: -9.522624969482422
    7. 'lc' → logprob: -11.647624969482422
    8. 'cu' → logprob: -11.897624969482422
    9. 'cupe' → logprob: -12.022624969482422
    10. 'l' → logprob: -12.522624969482422

Token 279: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.0033721078652888536
    2. ' la' → logprob: -6.3783721923828125
    3. 'le' → logprob: -7.0033721923828125
    4. ' les' → logprob: -8.128372192382812
    5. ' ' → logprob: -9.628372192382812
    6. '_le' → logprob: -9.628372192382812
    7. ' l' → logprob: -10.003372192382812
    8. ' the' → logprob: -10.128372192382812
    9. 'Le' → logprob: -10.378372192382812
    10. ' (' → logprob: -10.503372192382812

Token 280: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -4.811348480870947e-05
    2. ' nombre' → logprob: -10.00004768371582
    3. 'number' → logprob: -14.00004768371582
    4. 'num' → logprob: -14.37504768371582
    5. 'nom' → logprob: -14.87504768371582
    6. 'n' → logprob: -15.25004768371582
    7. 'comb' → logprob: -15.37504768371582
    8. 'Nombre' → logprob: -16.62504768371582
    9. '_nombre' → logprob: -16.87504768371582
    10. 'nome' → logprob: -17.12504768371582

Token 281: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.026456810534000397
    2. 'de' → logprob: -4.026456832885742
    3. ' d' → logprob: -5.026456832885742
    4. '_de' → logprob: -7.151456832885742
    5. 'd' → logprob: -8.401456832885742
    6. '_' → logprob: -8.526456832885742
    7. ' ' → logprob: -8.651456832885742
    8. ' _' → logprob: -9.401456832885742
    9. ' of' → logprob: -10.026456832885742
    10. ' des' → logprob: -10.026456832885742

Token 282: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.04768817126750946
    2. 'arr' → logprob: -4.172688007354736
    3. 'com' → logprob: -4.422688007354736
    4. 'komb' → logprob: -5.047688007354736
    5. ' comb' → logprob: -5.172688007354736
    6. 'k' → logprob: -5.797688007354736
    7. 'placements' → logprob: -5.922688007354736
    8. ' arrangements' → logprob: -8.672688484191895
    9. ' k' → logprob: -8.672688484191895
    10. 'r' → logprob: -9.047688484191895

Token 283: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.4485384523868561
    2. 'inais' → logprob: -1.8235384225845337
    3. 'ina' → logprob: -1.9485384225845337
    4. 'in' → logprob: -3.1985385417938232
    5. 'ination' → logprob: -5.448538303375244
    6. 'i' → logprob: -5.448538303375244
    7. 'is' → logprob: -6.198538303375244
    8. '```' → logprob: -6.323538303375244
    9. 'inas' → logprob: -6.573538303375244
    10. 'binations' → logprob: -7.573538303375244

Token 284: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -3.3451433409936726e-05
    2. 'on' → logprob: -10.875033378601074
    3. 'sons' → logprob: -11.250033378601074
    4. 's' → logprob: -14.750033378601074
    5. 'son' → logprob: -15.750033378601074
    6. 'ions' → logprob: -16.00003433227539
    7. 'ont' → logprob: -16.37503433227539
    8. 'onnes' → logprob: -16.50003433227539
    9. 'ns' → logprob: -16.62503433227539
    10. '#' → logprob: -16.75003433227539

Token 285: ' avec' (ID: 3937)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.13805921375751495
    2. ' avec' → logprob: -2.513059139251709
    3. 'with' → logprob: -3.888059139251709
    4. ' possibles' → logprob: -5.013059139251709
    5. '_with' → logprob: -5.263059139251709
    6. 'possible' → logprob: -5.263059139251709
    7. '(' → logprob: -5.888059139251709
    8. '_possible' → logprob: -6.013059139251709
    9. ' possible' → logprob: -6.388059139251709
    10. '(n' → logprob: -6.888059139251709

Token 286: ' répét' (ID: 156936)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.17827685177326202
    2. 'r' → logprob: -2.053276777267456
    3. 'ré' → logprob: -3.678276777267456
    4. 'replacement' → logprob: -4.928277015686035
    5. 're' → logprob: -6.803277015686035
    6. ' répét' → logprob: -7.803277015686035
    7. 'rep' → logprob: -8.928277015686035
    8. ' remise' → logprob: -9.053277015686035
    9. 'reme' → logprob: -9.053277015686035
    10. ' remplacement' → logprob: -9.178277015686035

Token 287: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.0004842962371185422
    2. 'iction' → logprob: -8.375484466552734
    3. 'tion' → logprob: -9.375484466552734
    4. 'ation' → logprob: -10.000484466552734
    5. 'ution' → logprob: -10.875484466552734
    6. 'inition' → logprob: -11.250484466552734
    7. 'icion' → logprob: -11.375484466552734
    8. 'itions' → logprob: -11.750484466552734
    9. 'lication' → logprob: -12.000484466552734
    10. 'ission' → logprob: -12.000484466552734

Token 288: ' possibles' (ID: 97753)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.36055871844291687
    2. ' (' → logprob: -1.2355587482452393
    3. ' possible' → logprob: -5.48555850982666
    4. '<|end|>' → logprob: -6.23555850982666
    5. '   ' → logprob: -6.48555850982666
    6. 's' → logprob: -6.61055850982666
    7. ')' → logprob: -6.98555850982666
    8. '(' → logprob: -7.86055850982666
    9. 'possible' → logprob: -7.98555850982666
    10. '_possible' → logprob: -8.73555850982666

Token 289: ' 
' (ID: 793)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38701286911964417
    2. '(n' → logprob: -1.1370128393173218
    3. '<|end|>' → logprob: -10.387012481689453
    4. ' pour' → logprob: -10.762012481689453
    5. ',' → logprob: -10.887012481689453
    6. ' for' → logprob: -11.137012481689453
    7. ')' → logprob: -11.387012481689453
    8. '(' → logprob: -11.762012481689453
    9. 'def' → logprob: -11.762012481689453
    10. '   ' → logprob: -11.762012481689453

Token 290: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38766011595726013
    2. ' (' → logprob: -1.1376601457595825
    3. ' pour' → logprob: -7.512660026550293
    4. '(' → logprob: -9.887660026550293
    5. ' for' → logprob: -10.137660026550293
    6. 'pour' → logprob: -10.137660026550293
    7. ')' → logprob: -10.637660026550293
    8. ',' → logprob: -10.762660026550293
    9. 'n' → logprob: -11.387660026550293
    10. ' ' → logprob: -11.637660026550293

Token 291: ' pour' (ID: 1930)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4752339720726013
    2. ' (' → logprob: -0.9752339720726013
    3. ' pour' → logprob: -7.100234031677246
    4. '   ' → logprob: -9.475234031677246
    5. ')' → logprob: -9.600234031677246
    6. ' for' → logprob: -9.850234031677246
    7. 'pour' (adapté à ' pour') → logprob: -10.100234031677246
    8. ',' → logprob: -10.850234031677246
    9. ' ' → logprob: -11.225234031677246
    10. '(' → logprob: -11.225234031677246

Token 292: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.5781292915344238
    2. 'cho' → logprob: -0.8281292915344238
    3. 'n' → logprob: -6.203129291534424
    4. 'chooser' → logprob: -9.703128814697266
    5. 'choose' → logprob: -10.828128814697266
    6. ' cho' → logprob: -10.953128814697266
    7. ' n' → logprob: -11.078128814697266
    8. 'Cho' → logprob: -11.578128814697266
    9. ' choix' → logprob: -11.953128814697266
    10. 'r' → logprob: -12.078128814697266

Token 293: ' r' (ID: 428)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7351551651954651
    2. ' r' → logprob: -1.1101551055908203
    3. 'r' → logprob: -2.2351551055908203
    4. 'n' → logprob: -2.4851551055908203
    5. '<|end|>' → logprob: -7.61015510559082
    6. '(n' → logprob: -8.73515510559082
    7. ' ' → logprob: -10.73515510559082
    8. '(r' → logprob: -11.11015510559082
    9. '[n' → logprob: -11.61015510559082
    10. '```' → logprob: -11.73515510559082

Token 294: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.00874386727809906
    2. 'élé' → logprob: -5.133743762969971
    3. ' elements' → logprob: -6.008743762969971
    4. 'elements' → logprob: -8.508744239807129
    5. ' espaces' → logprob: -10.008744239807129
    6. ' des' → logprob: -10.258744239807129
    7. ' ' → logprob: -10.758744239807129
    8. ' élément' → logprob: -10.883744239807129
    9. ' ' → logprob: -11.383744239807129
    10. '<|end|>' → logprob: -12.508744239807129

Token 295: ' parmi' (ID: 51713)
  Prédit: ' parmi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parmi' → logprob: -0.0010144683765247464
    2. '   ' → logprob: -8.251014709472656
    3. ' ' → logprob: -8.626014709472656
    4. 'par' → logprob: -9.376014709472656
    5. ' par' → logprob: -9.376014709472656
    6. ' ' → logprob: -9.751014709472656
    7. ' among' → logprob: -9.751014709472656
    8. ')' → logprob: -10.376014709472656
    9. '```' → logprob: -10.376014709472656
    10. '<|end|>' → logprob: -10.376014709472656

Token 296: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0619741789996624
    2. 'n' → logprob: -2.811974287033081
    3. '(n' → logprob: -12.56197452545166
    4. '	n' → logprob: -13.18697452545166
    5. ' ' → logprob: -14.81197452545166
    6. '[n' → logprob: -15.31197452545166
    7. ' ' → logprob: -15.81197452545166
    8. '   ' → logprob: -15.93697452545166
    9. ' la' → logprob: -16.936973571777344
    10. ')n' → logprob: -16.936973571777344

Token 297: ' types' (ID: 6009)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.066651701927185
    2. ')' → logprob: -1.941651701927185
    3. ' avec' → logprob: -1.941651701927185
    4. ',' → logprob: -2.4416518211364746
    5. '.
' → logprob: -2.9416518211364746
    6. '+' → logprob: -2.9416518211364746
    7. ').' → logprob: -3.3166518211364746
    8. '."""
' → logprob: -3.4416518211364746
    9. ').
' → logprob: -3.9416518211364746
    10. '):
' → logprob: -4.691651821136475

Token 298: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9947268962860107
    2. ',' → logprob: -1.2447268962860107
    3. '):
' → logprob: -1.7447268962860107
    4. '):' → logprob: -2.6197268962860107
    5. '   ' → logprob: -3.1197268962860107
    6. 's' → logprob: -4.49472713470459
    7. ':' → logprob: -4.99472713470459
    8. '.
' → logprob: -4.99472713470459
    9. ' avec' → logprob: -5.49472713470459
    10. ',
' → logprob: -5.86972713470459

Token 299: 'comb' (ID: 43606)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2948055863380432
    2. '):
' → logprob: -1.9198055267333984
    3. '):' → logprob: -3.1698055267333984
    4. 'n' → logprob: -4.044805526733398
    5. ')
' → logprob: -4.544805526733398
    6. ').' → logprob: -4.669805526733398
    7. '   ' → logprob: -5.169805526733398
    8. ' )' → logprob: -5.419805526733398
    9. ' n' → logprob: -5.544805526733398
    10. '"""
' → logprob: -5.794805526733398

Token 300: 'ina' (ID: 1522)
  Prédit: 'ina'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ina' → logprob: -0.3571712076663971
    2. 'inais' → logprob: -1.7321711778640747
    3. 'ination' → logprob: -2.4821712970733643
    4. 'in' → logprob: -4.607171058654785
    5. 'inations' → logprob: -4.982171058654785
    6. 'i' → logprob: -4.982171058654785
    7. 'n' → logprob: -5.107171058654785
    8. 'inação' → logprob: -5.982171058654785
    9. ')' → logprob: -6.107171058654785
    10. 'inaire' → logprob: -6.607171058654785

Token 301: 'ison' (ID: 5072)
  Prédit: 'ison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ison' → logprob: -1.0132938623428345
    2. 'is' → logprob: -1.7632938623428345
    3. 'isons' → logprob: -2.263293743133545
    4. '```' → logprob: -2.763293743133545
    5. '"""
' → logprob: -3.263293743133545
    6. 'i' → logprob: -3.763293743133545
    7. ')' → logprob: -4.013293743133545
    8. '``' → logprob: -4.013293743133545
    9. 't' → logprob: -4.388293743133545
    10. '   ' → logprob: -4.575793743133545

Token 302: ' mult' (ID: 3469)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.33973556756973267
    2. '_with' → logprob: -2.464735507965088
    3. '_' → logprob: -2.714735507965088
    4. 'avec' → logprob: -3.464735507965088
    5. 's' → logprob: -3.714735507965088
    6. '_plus' → logprob: -4.214735507965088
    7. ' with' → logprob: -4.589735507965088
    8. ' à' → logprob: -4.964735507965088
    9. 'with' → logprob: -5.214735507965088
    10. '+' → logprob: -5.214735507965088

Token 303: 'iset' (ID: 39097)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3740960955619812
    2. 'is' → logprob: -1.999096155166626
    3. 'iset' → logprob: -2.124096155166626
    4. 'I' → logprob: -3.624096155166626
    5. 'iselect' → logprob: -4.874095916748047
    6. 'in' → logprob: -5.874095916748047
    7. 'ic' → logprob: -6.124095916748047
    8. '\' → logprob: -6.124095916748047
    9. 'ies' → logprob: -6.499095916748047
    10. 'icho' → logprob: -7.061595916748047

Token 304: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007224061526358128
    2. 's' → logprob: -5.257224082946777
    3. ').' → logprob: -6.882224082946777
    4. 'es' → logprob: -7.507224082946777
    5. '"""' → logprob: -8.757224082946777
    6. ')
' → logprob: -9.507224082946777
    7. ')s' → logprob: -10.382224082946777
    8. '")' → logprob: -10.507224082946777
    9. 'e' → logprob: -11.007224082946777
    10. '),' → logprob: -11.132224082946777

Token 305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01570068672299385
    2. '"""
' → logprob: -4.765700817108154
    3. '"""' → logprob: -5.265700817108154
    4. ')' → logprob: -6.640700817108154
    5. '\n' → logprob: -8.140700340270996
    6. ')
' → logprob: -9.265700340270996
    7. '    
' → logprob: -10.015700340270996
    8. ' """
' → logprob: -10.515700340270996
    9. '""' → logprob: -10.640700340270996
    10. '<|end|>' → logprob: -11.015700340270996

Token 306: ' Param' (ID: 14796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005902369040995836
    2. '"""' → logprob: -5.755902290344238
    3. '"""
' → logprob: -6.255902290344238
    4. ')' → logprob: -7.755902290344238
    5. '\n' → logprob: -8.755902290344238
    6. '    
' → logprob: -9.880902290344238
    7. ' """
' → logprob: -10.380902290344238
    8. ' """' → logprob: -10.755902290344238
    9. '<|end|>' → logprob: -10.755902290344238
    10. '
' → logprob: -10.880902290344238

Token 307: 'ètres' (ID: 40427)
  Prédit: 'ètres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.5272791385650635
    2. 'ètre' → logprob: -0.9022791385650635
    3. 'è' → logprob: -6.402278900146484
    4. 'etrize' → logprob: -7.027278900146484
    5. 'def' → logprob: -8.277278900146484
    6. 'eters' → logprob: -8.402278900146484
    7. 'èt' → logprob: -9.277278900146484
    8. 'd' → logprob: -9.402278900146484
    9. 'é' → logprob: -9.527278900146484
    10. 'rès' → logprob: -9.652278900146484

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2525620460510254
    2. '(n' → logprob: -1.6275620460510254
    3. ':
' → logprob: -4.377562046051025
    4. ' :' → logprob: -4.627562046051025
    5. '   ' → logprob: -6.252562046051025
    6. '):
' → logprob: -6.877562046051025
    7. '):' → logprob: -8.377561569213867
    8. ' (' → logprob: -8.502561569213867
    9. 'n' → logprob: -8.627561569213867
    10. '(
' → logprob: -8.752561569213867

Token 309: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045319506898522377
    2. '       ' → logprob: -8.500452995300293
    3. ' n' → logprob: -8.875452995300293
    4. 'n' → logprob: -9.125452995300293
    5. '	n' → logprob: -15.125452995300293
    6. ' ' → logprob: -15.875452995300293
    7. '  ' → logprob: -15.875452995300293
    8. '    ' → logprob: -16.00045394897461
    9. '
' → logprob: -16.37545394897461
    10. '(n' → logprob: -16.50045394897461

Token 310: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.015047873370349407
    2. '   ' → logprob: -4.265048027038574
    3. ' n' → logprob: -7.265048027038574
    4. 'int' → logprob: -8.890048027038574
    5. '       ' → logprob: -10.390048027038574
    6. '  ' → logprob: -11.890048027038574
    7. ' ' → logprob: -12.765048027038574
    8. '	n' → logprob: -13.265048027038574
    9. '    ' → logprob: -14.015048027038574
    10. '```' → logprob: -14.640048027038574

Token 311: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07524695247411728
    2. ',' → logprob: -3.200247049331665
    3. '(int' → logprob: -4.200246810913086
    4. '   ' → logprob: -4.825246810913086
    5. ' ,' → logprob: -5.825246810913086
    6. ':' → logprob: -6.200246810913086
    7. ' int' → logprob: -6.700246810913086
    8. ':int' → logprob: -6.825246810913086
    9. ' :' → logprob: -7.700246810913086
    10. 'int' → logprob: -8.325246810913086

Token 312: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.048593614250421524
    2. ' int' → logprob: -3.048593521118164
    3. '   ' → logprob: -12.298593521118164
    4. 'n' → logprob: -14.548593521118164
    5. '=int' → logprob: -15.173593521118164
    6. ':int' → logprob: -15.673593521118164
    7. ')' → logprob: -15.923593521118164
    8. '(int' → logprob: -15.923593521118164
    9. '[int' → logprob: -15.923593521118164
    10. ' n' → logprob: -16.298593521118164

Token 313: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010598162189126015
    2. '):' → logprob: -5.635598182678223
    3. '   ' → logprob: -5.885598182678223
    4. ':' → logprob: -5.885598182678223
    5. ' ,' → logprob: -7.135598182678223
    6. '):
' → logprob: -8.635598182678223
    7. '),' → logprob: -9.135598182678223
    8. ')' → logprob: -9.760598182678223
    9. '       ' → logprob: -10.010598182678223
    10. '<|end|>' → logprob: -10.260598182678223

Token 314: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.40574413537979126
    2. ' int' → logprob: -1.1557440757751465
    3. ' n' → logprob: -4.6557440757751465
    4. 'n' → logprob: -4.9057440757751465
    5. 'Nombre' → logprob: -7.7807440757751465
    6. '   ' → logprob: -8.280744552612305
    7. ' nombre' → logprob: -8.530744552612305
    8. '       ' → logprob: -8.655744552612305
    9. 'nombre' → logprob: -8.780744552612305
    10. 'r' → logprob: -9.780744552612305

Token 315: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32034826278686523
    2. ' ,' → logprob: -2.6953482627868652
    3. '   ' → logprob: -2.9453482627868652
    4. ' =' → logprob: -3.1953482627868652
    5. ')' → logprob: -3.4453482627868652
    6. '=' → logprob: -3.8203482627868652
    7. ' des' → logprob: -4.195348262786865
    8. ' d' → logprob: -5.070348262786865
    9. '+' → logprob: -5.070348262786865
    10. ' de' → logprob: -5.320348262786865

Token 316: ' types' (ID: 6009)
  Prédit: 'types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'types' → logprob: -0.27579134702682495
    2. ' types' → logprob: -1.5257914066314697
    3. 'élé' → logprob: -3.7757914066314697
    4. ' éléments' → logprob: -7.525791168212891
    5. 'elements' → logprob: -10.02579116821289
    6. ' ' → logprob: -10.65079116821289
    7. ' elements' → logprob: -11.02579116821289
    8. 'type' → logprob: -11.40079116821289
    9. 'element' → logprob: -12.52579116821289
    10. 'cat' → logprob: -12.65079116821289

Token 317: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7110277414321899
    2. '   ' → logprob: -1.71102774143219
    3. '<|end|>' → logprob: -2.0860276222229004
    4. ',' → logprob: -2.2110276222229004
    5. '       ' → logprob: -2.9610276222229004
    6. ' des' → logprob: -4.0860276222229
    7. '),' → logprob: -5.3360276222229
    8. '):
' → logprob: -5.9610276222229
    9. 'des' → logprob: -5.9610276222229
    10. ' ,' → logprob: -6.3360276222229

Token 318: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.01653023064136505
    2. ' éléments' → logprob: -4.1415300369262695
    3. 'elements' → logprob: -8.39153003692627
    4. ' elements' → logprob: -9.51653003692627
    5. ' ' → logprob: -9.89153003692627
    6. '_elements' → logprob: -10.14153003692627
    7. '<|end|>' → logprob: -10.26653003692627
    8. '   ' → logprob: -11.26653003692627
    9. '(elements' → logprob: -11.76653003692627
    10. ' élément' → logprob: -12.26653003692627

Token 319: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.00015943869948387146
    2. ' éléments' → logprob: -9.37515926361084
    3. 'él' → logprob: -10.37515926361084
    4. 'obj' → logprob: -10.75015926361084
    5. 'elements' → logprob: -11.12515926361084
    6. ' ' → logprob: -12.87515926361084
    7. 'element' → logprob: -13.37515926361084
    8. '   ' → logprob: -14.00015926361084
    9. 'elem' → logprob: -14.50015926361084
    10. '```' → logprob: -14.50015926361084

Token 320: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00015562419139314443
    2. 'ment' → logprob: -9.750155448913574
    3. 'éments' → logprob: -9.875155448913574
    4. 'm' → logprob: -10.750155448913574
    5. 'ements' → logprob: -11.750155448913574
    6. 'ts' → logprob: -12.625155448913574
    7. '   ' → logprob: -12.625155448913574
    8. 'ents' → logprob: -13.125155448913574
    9. 'nts' → logprob: -13.750155448913574
    10. 'lements' → logprob: -13.875155448913574

Token 321: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10377968847751617
    2. '   ' → logprob: -2.8537797927856445
    3. ')' → logprob: -3.6037797927856445
    4. ',
' → logprob: -5.1037797927856445
    5. '),' → logprob: -6.1037797927856445
    6. '       ' → logprob: -6.2287797927856445
    7. ' ,' → logprob: -6.3537797927856445
    8. '<|end|>' → logprob: -7.2287797927856445
    9. '):
' → logprob: -8.478779792785645
    10. ')
' → logprob: -8.603779792785645

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4651239812374115
    2. '   ' → logprob: -1.0901240110397339
    3. '<|end|>' → logprob: -3.4651238918304443
    4. 'r' → logprob: -6.590124130249023
    5. '<|end|>' → logprob: -6.715124130249023
    6. ',' → logprob: -7.465124130249023
    7. ')' → logprob: -7.840124130249023
    8. ' r' → logprob: -8.590124130249023
    9. ' ' → logprob: -8.590124130249023
    10. '"""' → logprob: -9.090124130249023

Token 323: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.10020828247070312
    2. ' r' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.725208282470703
    4. '       ' → logprob: -14.975208282470703
    5. ' ' → logprob: -15.725208282470703
    6. '	r' → logprob: -16.100208282470703
    7. '  ' → logprob: -17.725208282470703
    8. '```' → logprob: -18.225208282470703
    9. '    ' → logprob: -18.850208282470703
    10. '#' → logprob: -19.037708282470703

Token 324: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.07563606649637222
    2. ')' → logprob: -3.825636148452759
    3. ':' → logprob: -3.825636148452759
    4. '(int' → logprob: -4.57563591003418
    5. ':int' → logprob: -4.70063591003418
    6. 'int' → logprob: -5.82563591003418
    7. '   ' → logprob: -5.82563591003418
    8. '=int' → logprob: -6.57563591003418
    9. '):' → logprob: -7.70063591003418
    10. ' int' → logprob: -8.07563591003418

Token 325: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16022595763206482
    2. ' int' → logprob: -1.9102259874343872
    3. '=int' → logprob: -14.035225868225098
    4. '[int' → logprob: -15.160225868225098
    5. ':int' → logprob: -15.410225868225098
    6. '<int' → logprob: -15.660225868225098
    7. '(int' → logprob: -15.910225868225098
    8. ')' → logprob: -16.410226821899414
    9. '```' → logprob: -17.035226821899414
    10. '1' → logprob: -17.285226821899414

Token 326: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022071164567023516
    2. ':' → logprob: -7.002207279205322
    3. ')' → logprob: -7.627207279205322
    4. '   ' → logprob: -7.752207279205322
    5. ' ):' → logprob: -8.252206802368164
    6. '):
' → logprob: -9.502206802368164
    7. '":' → logprob: -11.502206802368164
    8. '"):' → logprob: -11.502206802368164
    9. ':int' → logprob: -12.252206802368164
    10. '):

' → logprob: -12.627206802368164

Token 327: ' Nombre' (ID: 70208)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12723371386528015
    2. 'r' → logprob: -2.1272337436676025
    3. ' int' → logprob: -9.377233505249023
    4. ')' → logprob: -9.627233505249023
    5. ' n' → logprob: -9.877233505249023
    6. 'int' → logprob: -10.002233505249023
    7. ' ' → logprob: -11.127233505249023
    8. 'n' → logprob: -11.377233505249023
    9. '   ' → logprob: -11.627233505249023
    10. '<|end|>' → logprob: -11.627233505249023

Token 328: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.121828094124794
    2. ' de' → logprob: -2.371828079223633
    3. 'd' → logprob: -4.496828079223633
    4. '   ' → logprob: -6.121828079223633
    5. ' =' → logprob: -6.246828079223633
    6. '=' → logprob: -6.371828079223633
    7. ' ' → logprob: -6.621828079223633
    8. ')' → logprob: -6.621828079223633
    9. '_d' → logprob: -7.746828079223633
    10. '  ' → logprob: -8.496828079223633

Token 329: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3937198519706726
    2. ' éléments' → logprob: -1.1437199115753174
    3. ' d' → logprob: -5.143719673156738
    4. 'd' → logprob: -7.768719673156738
    5. ' elements' → logprob: -9.393719673156738
    6. ' espaces' → logprob: -9.768719673156738
    7. 'elements' → logprob: -9.893719673156738
    8. ''' → logprob: -10.143719673156738
    9. '_' → logprob: -10.143719673156738
    10. '_elements' → logprob: -10.143719673156738

Token 330: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.10237008333206177
    2. ' éléments' → logprob: -2.352370023727417
    3. 'elements' → logprob: -6.602370262145996
    4. ' choix' → logprob: -8.227370262145996
    5. 'cho' → logprob: -8.602370262145996
    6. ' elements' → logprob: -9.227370262145996
    7. 'r' → logprob: -9.352370262145996
    8. '1' → logprob: -10.352370262145996
    9. 'é' → logprob: -10.852370262145996
    10. ' cho' → logprob: -10.977370262145996

Token 331: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.6617255210876465
    2. 'éments' → logprob: -0.7867255210876465
    3. 'ements' → logprob: -3.9117255210876465
    4. 'è' → logprob: -6.6617255210876465
    5. 'é' → logprob: -6.9117255210876465
    6. 't' → logprob: -7.0367255210876465
    7. '   ' → logprob: -7.1617255210876465
    8. '_' → logprob: -7.2867255210876465
    9. 'élé' → logprob: -7.6617255210876465
    10. 'e' → logprob: -7.6617255210876465

Token 332: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.727306067943573
    2. ' +' → logprob: -0.727306067943573
    3. ')' → logprob: -3.7273061275482178
    4. ' )' → logprob: -5.727305889129639
    5. '   ' → logprob: -5.727305889129639
    6. ' à' → logprob: -7.227305889129639
    7. ' plus' → logprob: -7.477305889129639
    8. ' ' → logprob: -7.727305889129639
    9. '):' → logprob: -7.727305889129639
    10. '):
' → logprob: -8.727306365966797

Token 333: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.026524724438786507
    2. ' choisir' → logprob: -3.651524782180786
    3. 'chooser' → logprob: -9.401524543762207
    4. 'choose' → logprob: -9.401524543762207
    5. '```' → logprob: -10.776524543762207
    6. ' cho' → logprob: -11.276524543762207
    7. 'contin' → logprob: -12.651524543762207
    8. 'chercher' → logprob: -12.651524543762207
    9. 'Cho' → logprob: -13.026524543762207
    10. ' chooser' → logprob: -13.026524543762207

Token 334: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1067365407943726
    2. '):' → logprob: -1.2317365407943726
    3. '   ' → logprob: -1.6067365407943726
    4. '+' → logprob: -2.481736660003662
    5. ' +' → logprob: -2.981736660003662
    6. ')' → logprob: -3.231736660003662
    7. ')
' → logprob: -6.481736660003662
    8. ').' → logprob: -8.106736183166504
    9. '       ' → logprob: -8.731736183166504
    10. '):

' → logprob: -8.856736183166504

Token 335: 'avec' (ID: 64065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09040296822786331
    2. ' )' → logprob: -2.4654030799865723
    3. '"""' → logprob: -7.090403079986572
    4. ' """' → logprob: -8.715402603149414
    5. 'r' → logprob: -9.340402603149414
    6. 'n' → logprob: -9.965402603149414
    7. ' n' → logprob: -10.090402603149414
    8. ' r' → logprob: -10.340402603149414
    9. ' )
' → logprob: -10.340402603149414
    10. '   ' → logprob: -10.465402603149414

Token 336: ' répét' (ID: 156936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1767275333404541
    2. ' )' → logprob: -2.051727533340454
    3. 'r' → logprob: -3.676727533340454
    4. ' r' → logprob: -5.426727294921875
    5. ' repetition' → logprob: -7.426727294921875
    6. ' espaces' → logprob: -7.426727294921875
    7. ' ' → logprob: -7.676727294921875
    8. ' répét' → logprob: -7.926727294921875
    9. ' repetitions' → logprob: -8.301727294921875
    10. 're' → logprob: -8.301727294921875

Token 337: 'ition' (ID: 868)
  Prédit: 'tion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tion' → logprob: -0.1930113285779953
    2. 'ition' → logprob: -1.8180112838745117
    3. 'ation' → logprob: -5.193011283874512
    4. ')' → logprob: -6.193011283874512
    5. 'ション' → logprob: -6.443011283874512
    6. 'ion' → logprob: -7.193011283874512
    7. 'ption' → logprob: -7.443011283874512
    8. ' ' → logprob: -7.818011283874512
    9. ' tion' → logprob: -8.318011283874512
    10. 'lation' → logprob: -8.443011283874512

Token 338: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04236523061990738
    2. ').' → logprob: -3.667365312576294
    3. ' possible' → logprob: -5.042365074157715
    4. '):' → logprob: -5.292365074157715
    5. 'possible' → logprob: -5.667365074157715
    6. '):
' → logprob: -8.292365074157715
    7. '_possible' → logprob: -8.667365074157715
    8. ' )' → logprob: -9.042365074157715
    9. '   ' → logprob: -9.667365074157715
    10. '"""' → logprob: -9.917365074157715

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013790158554911613
    2. ')' → logprob: -5.263790130615234
    3. '"""' → logprob: -5.263790130615234
    4. '"""
' → logprob: -5.888790130615234
    5. ')
' → logprob: -8.763790130615234
    6. '""' → logprob: -8.888790130615234
    7. '):
' → logprob: -9.388790130615234
    8. '    
' → logprob: -10.263790130615234
    9. '\n' → logprob: -10.263790130615234
    10. '):' → logprob: -10.513790130615234

Token 340: ' Retour' (ID: 146830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030478747561573982
    2. ')' → logprob: -3.5304787158966064
    3. '"""' → logprob: -7.7804789543151855
    4. '):' → logprob: -9.655478477478027
    5. '):
' → logprob: -10.155478477478027
    6. ' """' → logprob: -10.530478477478027
    7. '```' → logprob: -10.780478477478027
    8. '\n' → logprob: -10.905478477478027
    9. ' )' → logprob: -10.905478477478027
    10. '"""
' → logprob: -10.905478477478027

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.989902138710022
    2. '   ' → logprob: -1.114902138710022
    3. ':
' → logprob: -1.239902138710022
    4. '       ' → logprob: -4.989902019500732
    5. ':int' → logprob: -5.739902019500732
    6. 'int' → logprob: -7.614902019500732
    7. '[int' → logprob: -9.11490249633789
    8. ':return' → logprob: -9.36490249633789
    9. '=int' → logprob: -9.86490249633789
    10. ' :' → logprob: -9.98990249633789

Token 342: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6834093928337097
    2. '       ' → logprob: -1.0584094524383545
    3. ' int' → logprob: -2.4334094524383545
    4. 'int' → logprob: -2.8084094524383545
    5. '    ' → logprob: -10.433409690856934
    6. '	int' → logprob: -11.933409690856934
    7. '  ' → logprob: -12.308409690856934
    8. '```' → logprob: -12.308409690856934
    9. '[int' → logprob: -12.558409690856934
    10. '           ' → logprob: -12.933409690856934

Token 343: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.004093477968126535
    2. ' int' → logprob: -5.504093647003174
    3. '   ' → logprob: -11.129093170166016
    4. '```' → logprob: -15.879093170166016
    5. '(int' → logprob: -16.504093170166016
    6. 'return' → logprob: -16.629093170166016
    7. '
' → logprob: -16.879093170166016
    8. '       ' → logprob: -17.629093170166016
    9. ' ' → logprob: -17.754093170166016
    10. '[int' → logprob: -17.879093170166016

Token 344: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.935296834039036e-06
    2. ' :' → logprob: -13.87500286102295
    3. ':return' → logprob: -14.37500286102295
    4. ':int' → logprob: -14.50000286102295
    5. '   ' → logprob: -15.50000286102295
    6. 'def' → logprob: -15.75000286102295
    7. '=' → logprob: -16.625003814697266
    8. 'Ce' → logprob: -16.625003814697266
    9. 'int' → logprob: -17.000003814697266
    10. ':
' → logprob: -17.125003814697266

Token 345: ' Le' (ID: 2018)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.01553849596530199
    2. ' factorial' → logprob: -4.390538692474365
    3. 'k' → logprob: -6.140538692474365
    4. 'fact' → logprob: -8.015538215637207
    5. '   ' → logprob: -8.140538215637207
    6. 'Factor' → logprob: -9.765538215637207
    7. 'kum' → logprob: -10.265538215637207
    8. ' factor' → logprob: -10.640538215637207
    9. '  ' → logprob: -11.015538215637207
    10. ' ' → logprob: -11.515538215637207

Token 346: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0002273774443892762
    2. ' nombre' → logprob: -8.500226974487305
    3. 'comb' → logprob: -11.750226974487305
    4. 'n' → logprob: -11.875226974487305
    5. 'nom' → logprob: -12.625226974487305
    6. 'k' → logprob: -13.375226974487305
    7. 'fact' → logprob: -13.750226974487305
    8. 'num' → logprob: -14.500226974487305
    9. 'factor' → logprob: -14.625226974487305
    10. 'number' → logprob: -14.750226974487305

Token 347: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.002572090830653906
    2. 'de' → logprob: -6.127572059631348
    3. ' d' → logprob: -8.752572059631348
    4. '_de' → logprob: -9.502572059631348
    5. ' des' → logprob: -9.627572059631348
    6. '   ' → logprob: -10.252572059631348
    7. ' ' → logprob: -11.502572059631348
    8. '  ' → logprob: -11.627572059631348
    9. 'd' → logprob: -12.002572059631348
    10. '_' → logprob: -12.127572059631348

Token 348: ' comb' (ID: 4134)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.8460243940353394
    2. ' façons' → logprob: -1.2210243940353394
    3. 'comb' → logprob: -1.3460243940353394
    4. 'man' → logprob: -4.846024513244629
    5. 'com' → logprob: -5.846024513244629
    6. 'k' → logprob: -6.721024513244629
    7. 'm' → logprob: -7.221024513244629
    8. 'cho' → logprob: -7.346024513244629
    9. 'komb' → logprob: -7.346024513244629
    10. 'fac' → logprob: -7.596024513244629

Token 349: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.001596749178133905
    2. 'ina' → logprob: -6.626596927642822
    3. 'in' → logprob: -9.251596450805664
    4. 'inas' → logprob: -9.751596450805664
    5. 'inations' → logprob: -10.376596450805664
    6. '#' → logprob: -10.751596450805664
    7. 'ais' → logprob: -11.251596450805664
    8. '```' → logprob: -11.876596450805664
    9. 'is' → logprob: -12.126596450805664
    10. 's' → logprob: -12.126596450805664

Token 350: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00040123690268956125
    2. 'on' → logprob: -8.750401496887207
    3. 's' → logprob: -9.500401496887207
    4. 'ions' → logprob: -10.250401496887207
    5. 'sons' → logprob: -10.500401496887207
    6. 'ans' → logprob: -11.250401496887207
    7. 'ont' → logprob: -11.625401496887207
    8. '#' → logprob: -11.750401496887207
    9. '```' → logprob: -11.812901496887207
    10. 'の' → logprob: -12.562901496887207

Token 351: ' avec' (ID: 3937)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.5879356265068054
    2. ' possible' → logprob: -1.0879356861114502
    3. 'possible' → logprob: -2.71293568611145
    4. '   ' → logprob: -3.58793568611145
    5. 'poss' → logprob: -5.212935447692871
    6. ' avec' → logprob: -5.587935447692871
    7. '_possible' → logprob: -5.837935447692871
    8. 'avec' → logprob: -7.712935447692871
    9. ' poss' → logprob: -7.962935447692871
    10. ' posibles' → logprob: -8.337935447692871

Token 352: ' répét' (ID: 156936)
  Prédit: ' répét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' répét' → logprob: -0.24414418637752533
    2. 'ré' → logprob: -2.2441442012786865
    3. 'r' → logprob: -2.3691442012786865
    4. ' repetition' → logprob: -4.619143962860107
    5. ' rép' → logprob: -5.369143962860107
    6. ' r' → logprob: -6.744143962860107
    7. 're' → logprob: -7.494143962860107
    8. 'rep' → logprob: -7.744143962860107
    9. 'n' → logprob: -8.994144439697266
    10. ' n' → logprob: -9.869144439697266

Token 353: 'ition' (ID: 868)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.7309207320213318
    2. 'ition' → logprob: -1.1059207916259766
    3. 'ation' → logprob: -2.2309207916259766
    4. 'tion' → logprob: -2.9809207916259766
    5. 'ption' → logprob: -3.6059207916259766
    6. 'ution' → logprob: -7.480920791625977
    7. 'p' → logprob: -8.355920791625977
    8. 'on' → logprob: -8.480920791625977
    9. 'iton' → logprob: -8.480920791625977
    10. 'ipation' → logprob: -8.730920791625977

Token 354: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6590421795845032
    2. '   ' → logprob: -0.9090421795845032
    3. ' (' → logprob: -3.5340421199798584
    4. ' possible' → logprob: -3.6590421199798584
    5. 'possible' → logprob: -4.5340423583984375
    6. ' possibles' → logprob: -5.4090423583984375
    7. ')' → logprob: -5.7840423583984375
    8. '(' → logprob: -6.0340423583984375
    9. '       ' → logprob: -6.6590423583984375
    10. '_possible' → logprob: -7.2840423583984375

Token 355: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7519834041595459
    2. ' calcul' → logprob: -1.251983404159546
    3. ' ou' → logprob: -1.751983404159546
    4. '       ' → logprob: -3.126983404159546
    5. '        ' → logprob: -5.376983642578125
    6. ' calculated' → logprob: -6.001983642578125
    7. ' return' → logprob: -6.001983642578125
    8. '    ' → logprob: -6.251983642578125
    9. ' ' → logprob: -6.376983642578125
    10. ' or' → logprob: -6.626983642578125

Token 356: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25218552350997925
    2. ' ' → logprob: -1.502185583114624
    3. '   ' → logprob: -8.752185821533203
    4. 'k' → logprob: -11.377185821533203
    5. 'return' → logprob: -11.377185821533203
    6. 'factor' → logprob: -11.752185821533203
    7. ' factorial' → logprob: -12.064685821533203
    8. '       ' → logprob: -12.064685821533203
    9. '  ' → logprob: -12.127185821533203
    10. ' return' → logprob: -12.502185821533203

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.074907287256792e-05
    2. ' ' → logprob: -9.75006103515625
    3. 'return' → logprob: -14.00006103515625
    4. '   ' → logprob: -14.75006103515625
    5. 'k' → logprob: -15.00006103515625
    6. '```' → logprob: -16.12506103515625
    7. '  ' → logprob: -16.68756103515625
    8. '
' → logprob: -16.75006103515625
    9. 'n' → logprob: -17.00006103515625
    10. '...' → logprob: -17.06256103515625

Token 358: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19505859911441803
    2. '   ' → logprob: -2.570058584213257
    3. ' si' → logprob: -2.695058584213257
    4. 'if' → logprob: -3.445058584213257
    5. '       ' → logprob: -8.195058822631836
    6. '()' → logprob: -8.445058822631836
    7. '(n' → logprob: -8.570058822631836
    8. '    ' → logprob: -9.070058822631836
    9. 'si' → logprob: -9.070058822631836
    10. '```' → logprob: -9.320058822631836

Token 359: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759788155555725
    2. ' n' → logprob: -0.8259788155555725
    3. '   ' → logprob: -11.075979232788086
    4. '(n' → logprob: -11.575979232788086
    5. 'r' → logprob: -12.575979232788086
    6. ' not' → logprob: -12.825979232788086
    7. 'not' → logprob: -13.450979232788086
    8. ' (' → logprob: -13.575979232788086
    9. ' ' → logprob: -13.700979232788086
    10. ' r' → logprob: -13.825979232788086

Token 360: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0340849906206131
    2. '<' → logprob: -3.4090850353240967
    3. '<n' → logprob: -7.909084796905518
    4. ' >' → logprob: -10.409085273742676
    5. '<num' → logprob: -11.534085273742676
    6. '<int' → logprob: -12.659085273742676
    7. ' ' → logprob: -12.784085273742676
    8. '<R' → logprob: -13.409085273742676
    9. ' <
' → logprob: -13.409085273742676
    10. '<class' → logprob: -13.409085273742676

Token 361: ' r' (ID: 428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001218451652675867
    2. ' ' → logprob: -6.876218318939209
    3. 'r' → logprob: -9.126218795776367
    4. '1' → logprob: -10.251218795776367
    5. '-' → logprob: -10.376218795776367
    6. ' -' → logprob: -12.938718795776367
    7. ' r' → logprob: -13.626218795776367
    8. '```' → logprob: -14.063718795776367
    9. '   ' → logprob: -14.188718795776367
    10. 'n' → logprob: -14.251218795776367

Token 362: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05540889874100685
    2. '):
' → logprob: -3.8054089546203613
    3. ':
' → logprob: -5.055408954620361
    4. '       ' → logprob: -5.180408954620361
    5. ':' → logprob: -5.305408954620361
    6. '):' → logprob: -5.305408954620361
    7. ')' → logprob: -5.680408954620361
    8. '.' → logprob: -5.930408954620361
    9. '<|end|>' → logprob: -6.305408954620361
    10. ').' → logprob: -7.430408954620361

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004352505784481764
    2. ')' → logprob: -5.629352569580078
    3. '\n' → logprob: -8.129352569580078
    4. '"""' → logprob: -8.629352569580078
    5. '<|end|>' → logprob: -9.379352569580078
    6. '    
' → logprob: -9.879352569580078
    7. '```' → logprob: -10.129352569580078
    8. '"""
' → logprob: -10.379352569580078
    9. '
' → logprob: -11.004352569580078
    10. 'n' → logprob: -11.629352569580078

Token 364: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001968839205801487
    2. '"""' → logprob: -6.626968860626221
    3. '"""
' (adapté à ' """
') → logprob: -8.126968383789062
    4. '```' → logprob: -8.251968383789062
    5. ')' → logprob: -9.751968383789062
    6. ')
' → logprob: -11.876968383789062
    7. ' """' → logprob: -12.251968383789062
    8. '
' → logprob: -12.376968383789062
    9. ' """
' → logprob: -12.751968383789062
    10. '\n' → logprob: -13.001968383789062

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.246537173457909e-06
    2. 'if' → logprob: -12.875003814697266
    3. ' if' → logprob: -14.375003814697266
    4. '
' → logprob: -15.375003814697266
    5. '```' → logprob: -15.500003814697266
    6. '    
' → logprob: -15.625003814697266
    7. '  ' → logprob: -15.750003814697266
    8. '<|end|>' → logprob: -16.125003814697266
    9. 'return' → logprob: -16.625003814697266
    10. '    ' → logprob: -16.750003814697266

Token 366: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5773612260818481
    2. 'if' (adapté à ' if') → logprob: -1.0773612260818481
    3. '   ' → logprob: -2.3273611068725586
    4. 'from' → logprob: -7.952361106872559
    5. '#' → logprob: -9.077361106872559
    6. ' if' → logprob: -9.827361106872559
    7. ' return' → logprob: -10.202361106872559
    8. '```' → logprob: -11.452361106872559
    9. '	return' → logprob: -12.827361106872559
    10. '  ' → logprob: -13.452361106872559

Token 367: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005320920143276453
    2. 'r' → logprob: -5.255321025848389
    3. ' n' → logprob: -9.50532054901123
    4. '(n' → logprob: -12.00532054901123
    5. 'True' → logprob: -12.75532054901123
    6. 'False' → logprob: -13.75532054901123
    7. ' r' → logprob: -14.00532054901123
    8. 'not' → logprob: -14.13032054901123
    9. '0' → logprob: -14.88032054901123
    10. '(r' → logprob: -15.25532054901123

Token 368: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018289709463715553
    2. '<' → logprob: -4.018289566040039
    3. '<n' → logprob: -9.268289566040039
    4. ' ' → logprob: -10.518289566040039
    5. '[' → logprob: -13.018289566040039
    6. 'n' → logprob: -13.018289566040039
    7. ' ==' → logprob: -13.268289566040039
    8. '<int' → logprob: -13.393289566040039
    9. ' <
' → logprob: -13.393289566040039
    10. '<class' → logprob: -13.643289566040039

Token 369: ' r' (ID: 428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007906900718808174
    2. '1' → logprob: -7.250790596008301
    3. ' ' → logprob: -9.7507905960083
    4. 'r' → logprob: -10.7507905960083
    5. '   ' → logprob: -15.0632905960083
    6. '```' → logprob: -16.688291549682617
    7. '۰' → logprob: -16.750791549682617
    8. '
' → logprob: -16.750791549682617
    9. 'or' → logprob: -16.938291549682617
    10. '０' → logprob: -17.188291549682617

Token 370: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2282516211271286
    2. ':' → logprob: -1.728251576423645
    3. '       ' → logprob: -4.2282514572143555
    4. '   ' → logprob: -4.4782514572143555
    5. ':return' → logprob: -7.7282514572143555
    6. '):
' → logprob: -9.603251457214355
    7. ' :
' → logprob: -11.728251457214355
    8. ':

' → logprob: -11.978251457214355
    9. ':
' → logprob: -12.228251457214355
    10. '  ' → logprob: -12.853251457214355

Token 371: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38708141446113586
    2. '       ' → logprob: -1.1370813846588135
    3. 'return' → logprob: -8.512081146240234
    4. '0' → logprob: -12.137081146240234
    5. ' return' → logprob: -13.262081146240234
    6. '	return' → logprob: -14.012081146240234
    7. '[' → logprob: -15.012081146240234
    8. '{return' → logprob: -15.512081146240234
    9. '```' → logprob: -15.637081146240234
    10. '           ' → logprob: -15.637081146240234

Token 372: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21579337120056152
    2. 'return' → logprob: -2.2157933712005615
    3. '   ' → logprob: -2.4657933712005615
    4. ' return' → logprob: -9.46579360961914
    5. '0' → logprob: -11.96579360961914
    6. '	return' → logprob: -12.46579360961914
    7. '#' (adapté à ' #') → logprob: -14.21579360961914
    8. '{return' → logprob: -15.09079360961914
    9. '           ' → logprob: -15.46579360961914
    10. ' ' → logprob: -15.71579360961914

Token 373: ' Impossible' (ID: 136939)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.014408533461391926
    2. '   ' → logprob: -4.514408588409424
    3. '       ' → logprob: -5.889408588409424
    4. ' return' → logprob: -7.889408588409424
    5. '0' → logprob: -8.514408111572266
    6. '	return' → logprob: -12.014408111572266
    7. '#' → logprob: -13.639408111572266
    8. '  ' → logprob: -13.764408111572266
    9. ' ' → logprob: -14.014408111572266
    10. 'eturn' → logprob: -14.639408111572266

Token 374: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2218712419271469
    2. '       ' → logprob: -1.721871256828308
    3. 'return' → logprob: -4.221871376037598
    4. ' return' → logprob: -5.721871376037598
    5. ' ' → logprob: -6.971871376037598
    6. '  ' → logprob: -7.221871376037598
    7. '<|end|>' → logprob: -8.596871376037598
    8. '    ' → logprob: -9.096871376037598
    9. '	return' → logprob: -9.096871376037598
    10. ':return' → logprob: -10.346871376037598

Token 375: ' choisir' (ID: 47004)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00013882013445254415
    2. '0' → logprob: -9.000139236450195
    3. ' return' → logprob: -11.375139236450195
    4. '{return' → logprob: -14.000139236450195
    5. 'choose' → logprob: -14.125139236450195
    6. 'n' → logprob: -14.250139236450195
    7. 'cho' → logprob: -14.375139236450195
    8. 'ret' → logprob: -14.875139236450195
    9. 'r' → logprob: -16.000139236450195
    10. '	return' → logprob: -16.125139236450195

Token 376: ' plus' (ID: 2932)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01426728442311287
    2. ' ' → logprob: -4.264267444610596
    3. 'return' → logprob: -10.139266967773438
    4. 'n' → logprob: -10.139266967773438
    5. '   ' → logprob: -11.514266967773438
    6. '1' → logprob: -11.889266967773438
    7. ' n' → logprob: -13.014266967773438
    8. '2' → logprob: -13.764266967773438
    9. '<|end|>' → logprob: -13.764266967773438
    10. ' return' → logprob: -14.139266967773438

Token 377: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9550262689590454
    2. '   ' → logprob: -1.5800262689590454
    3. 'n' → logprob: -2.330026149749756
    4. ' d' → logprob: -2.330026149749756
    5. '<|end|>' → logprob: -2.455026149749756
    6. 'elements' → logprob: -3.580026149749756
    7. ' n' → logprob: -3.580026149749756
    8. ' ' → logprob: -3.830026149749756
    9. '  ' → logprob: -4.455026149749756
    10. ' elements' → logprob: -5.330026149749756

Token 378: ''' (ID: 6)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.5808940529823303
    2. 'élé' → logprob: -1.3308939933776855
    3. 'r' → logprob: -2.3308939933776855
    4. 'tokens' → logprob: -3.8308939933776855
    5. ' éléments' → logprob: -4.2058939933776855
    6. '<|end|>' → logprob: -4.4558939933776855
    7. '_elements' → logprob: -4.8308939933776855
    8. ' elements' → logprob: -4.8308939933776855
    9. 'n' → logprob: -5.7058939933776855
    10. 'lements' → logprob: -5.8308939933776855

Token 379: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.042128562927246094
    2. 'elements' → logprob: -3.542128562927246
    3. 'r' → logprob: -4.667128562927246
    4. '0' → logprob: -7.292128562927246
    5. 'él' → logprob: -7.667128562927246
    6. ' éléments' → logprob: -7.792128562927246
    7. 'el' → logprob: -8.542128562927246
    8. 'tokens' → logprob: -8.542128562927246
    9. 'elem' → logprob: -8.667128562927246
    10. 'n' → logprob: -8.792128562927246

Token 380: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.011990577913820744
    2. 'ment' → logprob: -4.761990547180176
    3. 'éments' → logprob: -6.136990547180176
    4. 'm' → logprob: -8.011990547180176
    5. 'ements' → logprob: -8.011990547180176
    6. 'lements' → logprob: -9.011990547180176
    7. 'élé' → logprob: -9.261990547180176
    8. 'ément' → logprob: -9.636990547180176
    9. 'mé' → logprob: -9.761990547180176
    10. 'l' → logprob: -10.511990547180176

Token 381: ' qu' (ID: 474)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017342021455988288
    2. '   ' → logprob: -6.376734256744385
    3. 'return' → logprob: -11.376733779907227
    4. ' ' → logprob: -12.876733779907227
    5. 'n' → logprob: -13.001733779907227
    6. '```' → logprob: -13.126733779907227
    7. '      ' → logprob: -13.751733779907227
    8. ':return' → logprob: -13.751733779907227
    9. ' return' → logprob: -13.876733779907227
    10. ':' → logprob: -13.876733779907227

Token 382: ''il' (ID: 14683)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15664701163768768
    2. '   ' → logprob: -2.406646966934204
    3. ' n' → logprob: -4.031647205352783
    4. '```' → logprob: -4.656647205352783
    5. '(n' → logprob: -5.031647205352783
    6. '<|end|>' → logprob: -5.406647205352783
    7. 'n't' → logprob: -6.156647205352783
    8. 'r' → logprob: -6.406647205352783
    9. 'u' → logprob: -7.281647205352783
    10. 'or' → logprob: -7.281647205352783

Token 383: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0027038275729864836
    2. ' n' → logprob: -6.127703666687012
    3. 'ex' → logprob: -8.627703666687012
    4. '   ' → logprob: -9.627703666687012
    5. '#' → logprob: -9.752703666687012
    6. 'n't' → logprob: -10.002703666687012
    7. ''ex' → logprob: -10.377703666687012
    8. 'en' → logprob: -10.752703666687012
    9. 'return' → logprob: -11.127703666687012
    10. ''en' → logprob: -11.252703666687012

Token 384: ''en' (ID: 16740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7290598154067993
    2. 'return' → logprob: -1.4790598154067993
    3. '<|end|>' → logprob: -1.9790598154067993
    4. ':return' → logprob: -3.7290596961975098
    5. '<|end|>' → logprob: -4.10405969619751
    6. '       ' → logprob: -4.10405969619751
    7. 'n' → logprob: -4.35405969619751
    8. '#' → logprob: -4.60405969619751
    9. '_return' → logprob: -4.72905969619751
    10. ')return' → logprob: -4.72905969619751

Token 385: ' existe' (ID: 19498)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6239665746688843
    2. 'exists' → logprob: -1.1239665746688843
    3. 'exist' → logprob: -2.123966693878174
    4. 'n' → logprob: -5.248966693878174
    5. ''ex' → logprob: -5.498966693878174
    6. '<|end|>' → logprob: -5.873966693878174
    7. '(ex' → logprob: -7.248966693878174
    8. ' existe' → logprob: -7.498966693878174
    9. '’ex' → logprob: -7.498966693878174
    10. ' exists' → logprob: -7.873966693878174

Token 386: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00461560720577836
    2. '       ' → logprob: -5.504615783691406
    3. ':' → logprob: -8.129615783691406
    4. ')' → logprob: -9.504615783691406
    5. ':return' → logprob: -10.004615783691406
    6. '):' → logprob: -10.754615783691406
    7. ':
' → logprob: -10.879615783691406
    8. '<|end|>' → logprob: -11.004615783691406
    9. '.' → logprob: -11.254615783691406
    10. 'return' → logprob: -11.504615783691406

Token 387: ' même' (ID: 9679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012536372989416122
    2. '   ' → logprob: -4.387536525726318
    3. 'return' → logprob: -10.63753604888916
    4. ' return' → logprob: -13.51253604888916
    5. '           ' → logprob: -15.26253604888916
    6. '	return' → logprob: -15.51253604888916
    7. '0' → logprob: -15.63753604888916
    8. '```' → logprob: -15.76253604888916
    9. ' ' → logprob: -16.012537002563477
    10. '<|end|>' → logprob: -16.137537002563477

Token 388: ' avec' (ID: 3937)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8049746751785278
    2. '   ' → logprob: -1.8049746751785278
    3. ')' → logprob: -2.1799745559692383
    4. '=' → logprob: -3.1799745559692383
    5. ' return' → logprob: -3.3049745559692383
    6. ' in' → logprob: -3.4299745559692383
    7. ' if' → logprob: -3.8049745559692383
    8. ':return' → logprob: -3.8049745559692383
    9. ':' → logprob: -4.304974555969238
    10. ' for' → logprob: -4.554974555969238

Token 389: ' répét' (ID: 156936)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6540306806564331
    2. 'ré' → logprob: -1.279030680656433
    3. 're' → logprob: -2.0290307998657227
    4. 'rep' → logprob: -3.9040307998657227
    5. ' répét' → logprob: -4.029030799865723
    6. ' repetition' → logprob: -4.154030799865723
    7. '0' → logprob: -5.279030799865723
    8. 'repeat' → logprob: -6.029030799865723
    9. 'comb' → logprob: -6.154030799865723
    10. ' rép' → logprob: -6.529030799865723

Token 390: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.0001577698567416519
    2. 'ation' → logprob: -9.750157356262207
    3. 'tion' → logprob: -10.125157356262207
    4. 'itation' → logprob: -10.625157356262207
    5. 'itions' → logprob: -11.000157356262207
    6. 'ion' → logprob: -12.125157356262207
    7. 'ération' → logprob: -13.375157356262207
    8. 'itioner' → logprob: -13.500157356262207
    9. 'inition' → logprob: -13.875157356262207
    10. '   ' → logprob: -14.000157356262207

Token 391: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01785150170326233
    2. '       ' → logprob: -4.39285135269165
    3. ':' → logprob: -5.76785135269165
    4. ')' → logprob: -6.76785135269165
    5. '):' → logprob: -7.64285135269165
    6. ':return' → logprob: -8.392851829528809
    7. '.' → logprob: -9.017851829528809
    8. 'return' → logprob: -10.142851829528809
    9. '  ' → logprob: -10.267851829528809
    10. '<|end|>' → logprob: -10.392851829528809

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003491705865599215
    2. '   ' → logprob: -8.000349044799805
    3. 'return' → logprob: -11.500349044799805
    4. '<|end|>' → logprob: -13.500349044799805
    5. ' return' → logprob: -13.750349044799805
    6. '```' → logprob: -14.750349044799805
    7. '	return' → logprob: -15.875349044799805
    8. '	' → logprob: -16.125349044799805
    9. '0' → logprob: -16.375349044799805
    10. '           ' → logprob: -16.625349044799805

Token 393: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0348774716258049
    2. '       ' → logprob: -3.6598775386810303
    3. '   ' → logprob: -4.909877300262451
    4. ' return' → logprob: -6.784877300262451
    5. '	return' → logprob: -10.40987777709961
    6. 'eturn' → logprob: -13.53487777709961
    7. '{return' → logprob: -13.65987777709961
    8. '0' → logprob: -13.90987777709961
    9. '  ' → logprob: -14.28487777709961
    10. ' ' → logprob: -14.40987777709961

Token 394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'factor' → logprob: -15.000021934509277
    4. '   ' → logprob: -15.500021934509277
    5. 'k' → logprob: -16.875022888183594
    6. 'fact' → logprob: -17.250022888183594
    7. 'n' → logprob: -17.937522888183594
    8. '(' → logprob: -18.187522888183594
    9. '000' → logprob: -18.437522888183594
    10. '00' → logprob: -18.812522888183594

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'factor' → logprob: -18.4375
    4. '   ' → logprob: -18.625
    5. 'n' → logprob: -18.6875
    6. 'return' → logprob: -19.25
    7. '1' → logprob: -19.5
    8. '(' → logprob: -19.6875
    9. 'fact' → logprob: -19.875
    10. '```' → logprob: -19.9375

Token 396: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021974841365590692
    2. '<|end|>' → logprob: -9.125219345092773
    3. '
' → logprob: -9.750219345092773
    4. ')' → logprob: -10.375219345092773
    5. '    
' → logprob: -11.250219345092773
    6. '<|end|>' → logprob: -12.625219345092773
    7. ',' → logprob: -13.250219345092773
    8. '       ' → logprob: -14.750219345092773
    9. 'return' → logprob: -14.875219345092773
    10. '  ' → logprob: -15.000219345092773

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.7133641196996905e-05
    2. '
' → logprob: -10.75002670288086
    3. '    
' → logprob: -12.75002670288086
    4. '<|end|>' → logprob: -13.37502670288086
    5. 'return' → logprob: -15.37502670288086
    6. '	return' → logprob: -15.75002670288086
    7. ')' → logprob: -15.87502670288086
    8. '       ' → logprob: -16.25002670288086
    9. '<|end|>' → logprob: -16.37502670288086
    10. '  ' → logprob: -16.50002670288086

Token 398: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014048899174667895
    2. 'return' → logprob: -8.875140190124512
    3. ' return' → logprob: -15.125140190124512
    4. '	return' → logprob: -16.250141143798828
    5. '  ' → logprob: -17.250141143798828
    6. '   ' → logprob: -17.500141143798828
    7. '       ' → logprob: -17.625141143798828
    8. '    ' → logprob: -17.875141143798828
    9. '```' → logprob: -18.125141143798828
    10. 'from' → logprob: -18.625141143798828

Token 399: ' Form' (ID: 5287)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00023417205375153571
    2. '#' → logprob: -8.625234603881836
    3. ' return' → logprob: -10.500234603881836
    4. '   ' → logprob: -11.125234603881836
    5. 'from' → logprob: -11.500234603881836
    6. '	return' → logprob: -14.875234603881836
    7. '```' → logprob: -15.125234603881836
    8. 'Return' → logprob: -15.250234603881836
    9. 'factor' → logprob: -15.375234603881836
    10. 'n' → logprob: -15.500234603881836

Token 400: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.4336259961128235
    2. '   ' → logprob: -1.1836259365081787
    3. 'ula' → logprob: -3.8086259365081787
    4. 'return' → logprob: -4.308626174926758
    5. 'ules' → logprob: -5.933626174926758
    6. 'ulaire' → logprob: -6.183626174926758
    7. ' return' → logprob: -6.808626174926758
    8. 'ulation' → logprob: -6.933626174926758
    9. 'ulas' → logprob: -7.058626174926758
    10. 'n' → logprob: -7.808626174926758

Token 401: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5774537920951843
    2. '(n' → logprob: -1.952453851699829
    3. 'return' → logprob: -1.952453851699829
    4. ' return' → logprob: -3.077453851699829
    5. '(k' → logprob: -3.077453851699829
    6. ' =' → logprob: -3.827453851699829
    7. 'n' → logprob: -5.07745361328125
    8. ' de' → logprob: -5.20245361328125
    9. '=' → logprob: -5.45245361328125
    10. ':' → logprob: -5.45245361328125

Token 402: ' combinaison' (ID: 165933)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0426386296749115
    2. 'factor' → logprob: -3.4176385402679443
    3. 'kum' → logprob: -4.917638778686523
    4. 'komb' → logprob: -7.042638778686523
    5. ' factorial' → logprob: -7.917638778686523
    6. 'comb' → logprob: -9.042638778686523
    7. ' kum' → logprob: -9.167638778686523
    8. '(k' → logprob: -9.417638778686523
    9. 'cum' → logprob: -10.667638778686523
    10. 'fact' → logprob: -11.292638778686523

Token 403: ' avec' (ID: 3937)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2457849383354187
    2. '(' → logprob: -1.7457849979400635
    3. ' (' → logprob: -3.8707849979400635
    4. '   ' → logprob: -4.120784759521484
    5. ' =' → logprob: -6.120784759521484
    6. '(
' → logprob: -6.620784759521484
    7. 'return' → logprob: -7.120784759521484
    8. '((' → logprob: -7.495784759521484
    9. ':' → logprob: -7.620784759521484
    10. 'n' → logprob: -8.620784759521484

Token 404: ' répét' (ID: 156936)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9745402336120605
    2. '(r' → logprob: -1.9745402336120605
    3. 'rep' → logprob: -2.3495402336120605
    4. '(n' → logprob: -2.4745402336120605
    5. 'n' → logprob: -2.9745402336120605
    6. ' repetition' → logprob: -3.0995402336120605
    7. 're' → logprob: -3.4745402336120605
    8. ' r' → logprob: -3.5995402336120605
    9. 'k' → logprob: -3.7245402336120605
    10. 'ré' → logprob: -4.0995402336120605

Token 405: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.7658674716949463
    2. 'h' → logprob: -1.2658674716949463
    3. '   ' → logprob: -2.5158674716949463
    4. 'itation' → logprob: -3.1408674716949463
    5. 'ation' → logprob: -3.2658674716949463
    6. 'tion' → logprob: -3.6408674716949463
    7. 'bination' → logprob: -3.7658674716949463
    8. '(h' → logprob: -5.140867233276367
    9. 'ination' → logprob: -5.140867233276367
    10. 'iation' → logprob: -6.015867233276367

Token 406: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5202062726020813
    2. '(n' → logprob: -1.6452062129974365
    3. ' =' → logprob: -2.1452062129974365
    4. ' return' → logprob: -3.1452062129974365
    5. 'return' → logprob: -3.5202062129974365
    6. ':' → logprob: -4.395206451416016
    7. ' :' → logprob: -5.395206451416016
    8. '=' → logprob: -6.895206451416016
    9. '(' → logprob: -6.895206451416016
    10. ' (' → logprob: -7.145206451416016

Token 407: ' C' (ID: 363)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.12976960837841034
    2. 'k' → logprob: -2.1297695636749268
    3. ' factorial' → logprob: -6.254769802093506
    4. 'kum' → logprob: -7.129769802093506
    5. 'fact' → logprob: -10.129769325256348
    6. ' kum' → logprob: -11.004769325256348
    7. '   ' → logprob: -11.004769325256348
    8. '(k' → logprob: -11.879769325256348
    9. 'komb' → logprob: -12.129769325256348
    10. '  ' → logprob: -12.629769325256348

Token 408: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022500536870211363
    2. 'n' → logprob: -6.1272501945495605
    3. '(' → logprob: -10.127249717712402
    4. '(k' → logprob: -11.002249717712402
    5. ' (' → logprob: -13.502249717712402
    6. 'from' → logprob: -13.627249717712402
    7. 'k' → logprob: -14.002249717712402
    8. '_n' → logprob: -14.002249717712402
    9. 'def' → logprob: -14.252249717712402
    10. ' n' → logprob: -14.377249717712402

Token 409: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.3749101758003235
    2. ' +' → logprob: -1.2499101161956787
    3. 'n' → logprob: -4.374910354614258
    4. '+n' → logprob: -4.749910354614258
    5. '(n' → logprob: -5.999910354614258
    6. 'r' → logprob: -7.124910354614258
    7. '(r' → logprob: -7.374910354614258
    8. '   ' → logprob: -8.499910354614258
    9. ' n' → logprob: -8.499910354614258
    10. ' r' → logprob: -8.999910354614258

Token 410: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0063299755565822124
    2. ' -' → logprob: -5.1313300132751465
    3. 'r' → logprob: -7.8813300132751465
    4. ' r' → logprob: -11.131329536437988
    5. 'n' → logprob: -12.881329536437988
    6. '1' → logprob: -13.006329536437988
    7. '-r' → logprob: -14.006329536437988
    8. '−' → logprob: -14.006329536437988
    9. '```' → logprob: -14.881329536437988
    10. ',' → logprob: -15.256329536437988

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 'r' → logprob: -13.875000953674316
    3. '```' → logprob: -16.375001907348633
    4. '2' → logprob: -17.000001907348633
    5. ' ' → logprob: -17.125001907348633
    6. '"""' → logprob: -17.250001907348633
    7. '-' → logprob: -17.375001907348633
    8. '１' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '3' → logprob: -18.375001907348633

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011323553044348955
    2. ',n' → logprob: -7.376132488250732
    3. ')' → logprob: -8.126132011413574
    4. ' ,' → logprob: -8.751132011413574
    5. ',r' → logprob: -10.376132011413574
    6. 'n' → logprob: -12.376132011413574
    7. '，' → logprob: -12.626132011413574
    8. ',
' → logprob: -12.876132011413574
    9. '   ' → logprob: -12.876132011413574
    10. '(n' → logprob: -13.251132011413574

Token 413: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000488110730657354
    2. ' r' → logprob: -7.62548828125
    3. '	r' → logprob: -17.25048828125
    4. '   ' → logprob: -17.50048828125
    5. ')' → logprob: -17.62548828125
    6. '
' → logprob: -18.50048828125
    7. '_r' → logprob: -19.37548828125
    8. 'р' → logprob: -19.87548828125
    9. '```' → logprob: -20.37548828125
    10. ' ' → logprob: -21.00048828125

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. '   ' → logprob: -12.875007629394531
    3. ' )' → logprob: -13.250007629394531
    4. ')
' → logprob: -13.625007629394531
    5. '))' → logprob: -14.625007629394531
    6. ')n' → logprob: -15.000007629394531
    7. '）' → logprob: -15.875007629394531
    8. '(n' → logprob: -16.12500762939453
    9. '")' → logprob: -16.50000762939453
    10. 'n' → logprob: -16.75000762939453

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.764977686339989e-05
    2. 'return' → logprob: -9.875057220458984
    3. ' return' → logprob: -12.000057220458984
    4. '```' → logprob: -17.125057220458984
    5. '	return' → logprob: -17.500057220458984
    6. '
' → logprob: -17.500057220458984
    7. '       ' → logprob: -18.750057220458984
    8. '   ' → logprob: -18.875057220458984
    9. ':return' → logprob: -19.625057220458984
    10. '  ' → logprob: -19.625057220458984

Token 416: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31392911076545715
    2. '   ' → logprob: -1.3139290809631348
    3. ' return' → logprob: -7.313929080963135
    4. '	return' → logprob: -13.938929557800293
    5. '```' → logprob: -17.063928604125977
    6. '  ' → logprob: -17.563928604125977
    7. ' ' → logprob: -18.188928604125977
    8. '{return' → logprob: -18.438928604125977
    9. '
' → logprob: -18.563928604125977
    10. '   ' → logprob: -18.563928604125977

Token 417: ' kum' (ID: 14289)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.4176945686340332
    2. 'k' → logprob: -1.1676945686340332
    3. ' factorial' → logprob: -3.667694568634033
    4. 'kum' → logprob: -5.542694568634033
    5. ' kum' → logprob: -7.542694568634033
    6. 'komb' → logprob: -8.667694091796875
    7. 'fact' → logprob: -9.792694091796875
    8. ' factor' → logprob: -10.542694091796875
    9. ' k' → logprob: -10.667694091796875
    10. '_factor' → logprob: -11.917694091796875

Token 418: 'ia' (ID: 535)
  Prédit: 'ia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ia' → logprob: -5.88418151892256e-05
    2. 'k' → logprob: -11.000059127807617
    3. 'wia' → logprob: -11.750059127807617
    4. '   ' → logprob: -11.875059127807617
    5. 'nia' → logprob: -11.875059127807617
    6. 'i' → logprob: -12.000059127807617
    7. 'iwa' → logprob: -12.375059127807617
    8. 'kia' → logprob: -13.000059127807617
    9. 'mia' → logprob: -13.250059127807617
    10. 'a' → logprob: -13.250059127807617

Token 419: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.723973582556937e-05
    2. 'aw' → logprob: -11.750017166137695
    3. 'was' → logprob: -12.625017166137695
    4. 'se' → logprob: -12.875017166137695
    5. 'k' → logprob: -13.375017166137695
    6. 'わせ' → logprob: -15.125017166137695
    7. 'wa' → logprob: -15.875017166137695
    8. 'sh' → logprob: -15.875017166137695
    9. '_' → logprob: -16.000017166137695
    10. '_w' → logprob: -16.125017166137695

Token 420: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.004048244562000036
    2. 'w' → logprob: -5.8790483474731445
    3. 'aw' → logprob: -6.8790483474731445
    4. 'se' → logprob: -8.879048347473145
    5. 'case' → logprob: -10.754048347473145
    6. 'asse' → logprob: -11.754048347473145
    7. 'k' → logprob: -11.879048347473145
    8. 'n' → logprob: -12.004048347473145
    9. ' ase' → logprob: -12.379048347473145
    10. 'base' → logprob: -12.504048347473145

Token 421: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.1637164789135568e-05
    2. 'num' → logprob: -11.500011444091797
    3. '_n' → logprob: -13.750011444091797
    4. 'Num' → logprob: -16.000011444091797
    5. '_' → logprob: -16.250011444091797
    6. '_j' → logprob: -17.000011444091797
    7. 'n' → logprob: -17.250011444091797
    8. '_NUM' → logprob: -18.000011444091797
    9. '(num' → logprob: -18.250011444091797
    10. '_nums' → logprob: -18.250011444091797

Token 422: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.8789383830153383e-05
    2. '(' → logprob: -11.000019073486328
    3. 'n' → logprob: -13.500019073486328
    4. '((' → logprob: -14.250019073486328
    5. ' (' → logprob: -16.875019073486328
    6. '(
' → logprob: -17.125019073486328
    7. '[n' → logprob: -18.750019073486328
    8. '<|end|>' → logprob: -19.500019073486328
    9. '```' → logprob: -19.750019073486328
    10. ')n' → logprob: -19.875019073486328

Token 423: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.26072609424591064
    2. '+n' → logprob: -1.6357260942459106
    3. '+' → logprob: -4.260725975036621
    4. '   ' → logprob: -4.635725975036621
    5. '+r' → logprob: -5.135725975036621
    6. 'n' → logprob: -5.510725975036621
    7. '(n' → logprob: -7.635725975036621
    8. ' n' → logprob: -8.885725975036621
    9. ',n' → logprob: -9.010725975036621
    10. ',' → logprob: -9.260725975036621

Token 424: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -15.625
    3. '   ' → logprob: -19.375
    4. '	r' → logprob: -19.625
    5. '(r' → logprob: -19.625
    6. '[r' → logprob: -20.875
    7. ' ' → logprob: -21.875
    8. '_r' → logprob: -23.625
    9. '       ' → logprob: -23.875
    10. '
' → logprob: -24.0

Token 425: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004115561489015818
    2. ' -' → logprob: -5.504115581512451
    3. '1' → logprob: -10.254115104675293
    4. ')' → logprob: -14.004115104675293
    5. '   ' → logprob: -14.254115104675293
    6. ' ' → logprob: -15.629115104675293
    7. ',' → logprob: -15.754115104675293
    8. '−' → logprob: -17.00411605834961
    9. '[' → logprob: -17.12911605834961
    10. ')-' → logprob: -17.12911605834961

Token 426: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '１' → logprob: -18.25
    4. '   ' → logprob: -19.125
    5. '১' → logprob: -19.8125
    6. '```' → logprob: -19.8125
    7. '۱' → logprob: -20.0625
    8. '१' → logprob: -20.75
    9. '2' → logprob: -21.4375
    10. 'r' → logprob: -21.875

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '１' → logprob: -18.375
    4. '۱' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. '১' → logprob: -19.6875
    7. '```' → logprob: -19.75
    8. '2' → logprob: -20.5625
    9. '१' → logprob: -20.5625
    10. '<|end|>' → logprob: -20.5625

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011021859245374799
    2. ',r' → logprob: -9.750110626220703
    3. ' ,' → logprob: -9.875110626220703
    4. '   ' → logprob: -14.750110626220703
    5. ',n' → logprob: -16.750110626220703
    6. 'r' → logprob: -17.125110626220703
    7. ',
' → logprob: -18.000110626220703
    8. ')' → logprob: -18.875110626220703
    9. '，' → logprob: -19.375110626220703
    10. '‌,' → logprob: -19.500110626220703

Token 429: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0024762547109276056
    2. ' r' → logprob: -6.002476215362549
    3. '	r' → logprob: -14.627476692199707
    4. '   ' → logprob: -15.752476692199707
    5. '    ' → logprob: -18.12747573852539
    6. ' ' → logprob: -19.87747573852539
    7. '$r' → logprob: -20.62747573852539
    8. '_r' → logprob: -21.12747573852539
    9. '  ' → logprob: -21.37747573852539
    10. ')' → logprob: -21.75247573852539

Token 430: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')
' → logprob: -15.875
    4. '),' → logprob: -18.125
    5. '   ' → logprob: -18.25
    6. '}' → logprob: -18.5
    7. ')}' → logprob: -18.625
    8. '<|end|>' → logprob: -19.0
    9. '))' → logprob: -19.25
    10. ')return' → logprob: -19.375

Token 431: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00395289808511734
    2. 'n' → logprob: -5.753952980041504
    3. '#' → logprob: -7.878952980041504
    4. 'if' → logprob: -8.503952980041504
    5. 'def' → logprob: -9.378952980041504
    6. '```' → logprob: -11.128952980041504
    7. 'a' → logprob: -11.378952980041504
    8. 'NG' → logprob: -11.628952980041504
    9. 'gu' → logprob: -11.878952980041504
    10. 'nu' → logprob: -12.003952980041504

Token 432: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.051766879856586456
    2. 'if' → logprob: -3.301766872406006
    3. 'n' → logprob: -4.801766872406006
    4. '#' → logprob: -5.926766872406006
    5. 'def' → logprob: -5.926766872406006
    6. 'import' → logprob: -10.551767349243164
    7. ' N' → logprob: -11.426767349243164
    8. 'input' → logprob: -11.801767349243164
    9. ' if' → logprob: -12.051767349243164
    10. '
' → logprob: -12.176767349243164

Token 433: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18436852097511292
    2. 'N' → logprob: -2.43436861038208
    3. 'n' → logprob: -2.80936861038208
    4. ' =' → logprob: -4.68436861038208
    5. '=' → logprob: -6.18436861038208
    6. 'import' → logprob: -6.55936861038208
    7. '_n' → logprob: -6.93436861038208
    8. '```' → logprob: -7.05936861038208
    9. '#' → logprob: -7.18436861038208
    10. 'gu' → logprob: -7.30936861038208

Token 434: ' initial' (ID: 4871)
  Prédit: ' traitement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traitement' → logprob: -0.6784376502037048
    2. 'aff' → logprob: -2.3034377098083496
    3. 'ex' → logprob: -2.4284377098083496
    4. ' unpack' → logprob: -2.9284377098083496
    5. ' calcul' → logprob: -3.3034377098083496
    6. ' affect' → logprob: -3.4284377098083496
    7. ' extraction' → logprob: -3.8034377098083496
    8. 'assign' → logprob: -3.8034377098083496
    9. 'split' → logprob: -3.9284377098083496
    10. ' attribution' → logprob: -4.17843770980835

Token 435: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.0561794750392437
    2. 'ization' → logprob: -2.9311795234680176
    3. 'iser' → logprob: -8.80617904663086
    4. 'n' → logprob: -9.05617904663086
    5. 'isations' → logprob: -9.05617904663086
    6. 'input' → logprob: -9.18117904663086
    7. 's' → logprob: -9.18117904663086
    8. 'iz' → logprob: -9.30617904663086
    9. 'is' → logprob: -9.68117904663086
    10. 'es' → logprob: -9.80617904663086

Token 436: ' des' (ID: 731)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00012642296496778727
    2. 'n' → logprob: -9.125126838684082
    3. '"""
' → logprob: -11.500126838684082
    4. ' N' → logprob: -12.625126838684082
    5. '(N' → logprob: -13.875126838684082
    6. '```' → logprob: -13.875126838684082
    7. '"""' → logprob: -14.125126838684082
    8. 'input' → logprob: -15.250126838684082
    9. '[N' → logprob: -15.625126838684082
    10. 'if' → logprob: -15.750126838684082

Token 437: ' entr' (ID: 7072)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.35269367694854736
    2. 'n' → logprob: -1.2276936769485474
    3. '#' → logprob: -6.102693557739258
    4. 'inputs' → logprob: -7.727693557739258
    5. ' N' → logprob: -7.852693557739258
    6. 'val' → logprob: -8.352693557739258
    7. 'variables' → logprob: -8.852693557739258
    8. 'de' → logprob: -8.977693557739258
    9. 'params' → logprob: -9.477693557739258
    10. 'import' → logprob: -9.477693557739258

Token 438: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.034565314650535583
    2. 'ees' → logprob: -3.4095652103424072
    3. 'ée' → logprob: -7.159565448760986
    4. 'e' → logprob: -9.409564971923828
    5. 'é' → logprob: -10.659564971923828
    6. 'es' → logprob: -11.409564971923828
    7. 'ies' → logprob: -11.784564971923828
    8. '#' → logprob: -12.284564971923828
    9. 'és' → logprob: -13.034564971923828
    10. 'ee' → logprob: -13.659564971923828

Token 439: ' utilisateur' (ID: 115595)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008504862780682743
    2. 'n' → logprob: -7.125850677490234
    3. '
' → logprob: -10.500850677490234
    4. '"""
' → logprob: -11.875850677490234
    5. ' N' → logprob: -12.250850677490234
    6. '```' → logprob: -13.000850677490234
    7. 'import' → logprob: -13.750850677490234
    8. 'line' → logprob: -14.375850677490234
    9. '(N' → logprob: -14.500850677490234
    10. 'input' → logprob: -14.500850677490234

Token 440: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0206720617134124e-05
    2. 'n' → logprob: -11.62501049041748
    3. '
' → logprob: -14.62501049041748
    4. ' N' → logprob: -14.75001049041748
    5. '```' → logprob: -16.250009536743164
    6. 'line' → logprob: -17.000009536743164
    7. '"""
' → logprob: -17.250009536743164
    8. 'input' → logprob: -17.375009536743164
    9. '(N' → logprob: -17.500009536743164
    10. '#' → logprob: -17.875009536743164

Token 441: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.5941604690160602e-05
    2. 'n' → logprob: -10.625025749206543
    3. ' N' → logprob: -14.250025749206543
    4. 'import' → logprob: -15.500025749206543
    5. '```' → logprob: -15.625025749206543
    6. 'try' → logprob: -16.12502670288086
    7. 'input' → logprob: -16.25002670288086
    8. 'line' → logprob: -16.37502670288086
    9. '#' → logprob: -16.75002670288086
    10. '"""
' → logprob: -17.37502670288086

Token 442: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011081460979767144
    2. 'n' → logprob: -9.250110626220703
    3. ' N' → logprob: -11.750110626220703
    4. 'line' → logprob: -13.250110626220703
    5. '```' → logprob: -13.625110626220703
    6. 'input' → logprob: -13.750110626220703
    7. 'import' → logprob: -14.250110626220703
    8. '"""
' → logprob: -15.000110626220703
    9. 'inputs' → logprob: -15.125110626220703
    10. '
' → logprob: -15.125110626220703

Token 443: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -0.004408040549606085
    2. ',' → logprob: -5.62940788269043
    3. '_' → logprob: -8.00440788269043
    4. '_,' → logprob: -8.62940788269043
    5. 'gu' → logprob: -9.00440788269043
    6. '_ga' → logprob: -10.50440788269043
    7. ',_' → logprob: -10.62940788269043
    8. '_g' → logprob: -11.00440788269043
    9. '_guard' → logprob: -11.75440788269043
    10. ',M' → logprob: -11.87940788269043

Token 444: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035572313936427236
    2. ',M' → logprob: -8.12535572052002
    3. ' ,' → logprob: -10.25035572052002
    4. ' =' → logprob: -11.37535572052002
    5. ',N' → logprob: -11.37535572052002
    6. 'M' → logprob: -15.25035572052002
    7. '_str' → logprob: -15.37535572052002
    8. '=' → logprob: -15.50035572052002
    9. ',m' → logprob: -16.125356674194336
    10. '_,' → logprob: -16.375356674194336

Token 445: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1099829152226448
    2. ' int' → logprob: -2.359982967376709
    3. 'N' → logprob: -4.984982967376709
    4. ' N' → logprob: -5.859982967376709
    5. '=int' → logprob: -11.35998249053955
    6. '[int' → logprob: -11.73498249053955
    7. ' ' → logprob: -12.48498249053955
    8. '(int' → logprob: -12.73498249053955
    9. 'n' → logprob: -13.10998249053955
    10. 'map' → logprob: -13.35998249053955

Token 446: ' d' (ID: 272)
  Prédit: '_gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_gu' → logprob: -0.6652278900146484
    2. '_' → logprob: -1.4152278900146484
    3. '_pairs' → logprob: -2.0402278900146484
    4. ',' → logprob: -3.2902278900146484
    5. '_de' → logprob: -3.6652278900146484
    6. ',_' → logprob: -4.415227890014648
    7. '_d' → logprob: -4.415227890014648
    8. '_pair' → logprob: -4.415227890014648
    9. '_des' → logprob: -5.040227890014648
    10. '_p' → logprob: -6.040227890014648

Token 447: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6703619956970215
    2. ' éléments' → logprob: -1.9203619956970215
    3. ' pairs' → logprob: -2.1703619956970215
    4. '_' → logprob: -2.6703619956970215
    5. '_pairs' → logprob: -2.7953619956970215
    6. ' elements' → logprob: -3.1703619956970215
    7. '_gu' → logprob: -4.4203619956970215
    8. ' _' → logprob: -4.7953619956970215
    9. ' ' → logprob: -5.0453619956970215
    10. 'pairs' → logprob: -5.1703619956970215

Token 448: 'élé' (ID: 15228)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.1435958594083786
    2. ' pairs' → logprob: -2.7685959339141846
    3. 'int' → logprob: -4.1435956954956055
    4. 'gu' → logprob: -4.3935956954956055
    5. 'p' → logprob: -4.5185956954956055
    6. 'pair' → logprob: -4.7685956954956055
    7. 'elements' → logprob: -4.7685956954956055
    8. ' int' → logprob: -5.7685956954956055
    9. ' p' → logprob: -5.8935956954956055
    10. ' N' → logprob: -7.0185956954956055

Token 449: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.00037228144356049597
    2. 'm' → logprob: -9.000371932983398
    3. 'ment' → logprob: -9.125371932983398
    4. 'lements' → logprob: -10.125371932983398
    5. 'nts' → logprob: -10.500371932983398
    6. 'ents' → logprob: -10.750371932983398
    7. 'éments' → logprob: -10.750371932983398
    8. 'ts' → logprob: -12.125371932983398
    9. 'me' → logprob: -12.375371932983398
    10. 'ements' → logprob: -12.625371932983398

Token 450: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.4210364818572998
    2. ',' → logprob: -1.2960364818572998
    3. '_pairs' → logprob: -3.1710364818573
    4. 'pair' → logprob: -4.671036720275879
    5. '_gu' → logprob: -5.796036720275879
    6. 'p' → logprob: -5.921036720275879
    7. ' pairs' → logprob: -6.046036720275879
    8. '_p' → logprob: -6.046036720275879
    9. 'pa' → logprob: -6.046036720275879
    10. '_pair' → logprob: -6.921036720275879

Token 451: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06723175942897797
    2. '=' → logprob: -3.4422316551208496
    3. ' =' → logprob: -3.4422316551208496
    4. 'N' → logprob: -7.44223165512085
    5. ',N' → logprob: -8.442232131958008
    6. '=N' → logprob: -9.442232131958008
    7. ',M' → logprob: -9.567232131958008
    8. ' ,' → logprob: -10.692232131958008
    9. 'M' → logprob: -10.817232131958008
    10. '=int' → logprob: -11.067232131958008

Token 452: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005200279993005097
    2. ' N' → logprob: -8.000519752502441
    3. 'M' → logprob: -8.625519752502441
    4. ',' → logprob: -12.875519752502441
    5. 'n' → logprob: -13.250519752502441
    6. ' M' → logprob: -15.250519752502441
    7. 'input' → logprob: -15.750519752502441
    8. '
' → logprob: -16.125520706176758
    9. '#' → logprob: -16.125520706176758
    10. 'user' → logprob: -16.875520706176758

Token 453: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02334645204246044
    2. 'N' → logprob: -3.773346424102783
    3. ' M' → logprob: -9.273346900939941
    4. 'input' → logprob: -12.398346900939941
    5. ' N' → logprob: -13.898346900939941
    6. 'n' → logprob: -14.273346900939941
    7. '#' → logprob: -15.148346900939941
    8. 'user' → logprob: -15.523346900939941
    9. '   ' → logprob: -15.648346900939941
    10. 'import' → logprob: -16.023345947265625

Token 454: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4021237802808173e-05
    2. '_k' → logprob: -12.000014305114746
    3. ' _' → logprob: -12.750014305114746
    4. 'ki' → logprob: -13.750014305114746
    5. '_ke' → logprob: -13.875014305114746
    6. '_gu' → logprob: -14.875014305114746
    7. '_m' → logprob: -15.250014305114746
    8. ''_' → logprob: -15.250014305114746
    9. '```' → logprob: -15.250014305114746
    10. '_ai' → logprob: -15.875014305114746

Token 455: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.012567223981022835
    2. '_' → logprob: -4.387567043304443
    3. 'ku' → logprob: -11.387567520141602
    4. '```' → logprob: -11.387567520141602
    5. 'gu' → logprob: -13.137567520141602
    6. '
' → logprob: -13.137567520141602
    7. 'k' → logprob: -13.262567520141602
    8. '

' → logprob: -13.387567520141602
    9. 'input' → logprob: -13.637567520141602
    10. 'kii' → logprob: -13.637567520141602

Token 456: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04780489206314087
    2. '=' → logprob: -3.172804832458496
    3. ',' → logprob: -5.422804832458496
    4. ' ' → logprob: -8.172804832458496
    5. '=int' → logprob: -10.422804832458496
    6. ' ,' → logprob: -10.422804832458496
    7. '=input' → logprob: -10.797804832458496
    8. ' :' → logprob: -12.547804832458496
    9. ' ' → logprob: -12.672804832458496
    10. ':' → logprob: -12.672804832458496

Token 457: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.26072433590888977
    2. 'nombre' → logprob: -1.7607243061065674
    3. ' nombre' → logprob: -3.3857243061065674
    4. ' int' → logprob: -3.7607243061065674
    5. 'Nombre' → logprob: -8.635724067687988
    6. 'number' → logprob: -8.885724067687988
    7. '=int' → logprob: -10.260724067687988
    8. ' nombres' → logprob: -10.635724067687988
    9. '(int' → logprob: -11.510724067687988
    10. 'n' → logprob: -11.510724067687988

Token 458: ' d' (ID: 272)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.40535420179367065
    2. 'd' → logprob: -1.2803542613983154
    3. ' d' → logprob: -3.0303542613983154
    4. '_' → logprob: -5.155354022979736
    5. ' =' → logprob: -7.155354022979736
    6. '_gu' → logprob: -8.280354499816895
    7. '=' → logprob: -9.530354499816895
    8. ' ' → logprob: -10.155354499816895
    9. ',' → logprob: -11.030354499816895
    10. 's' → logprob: -11.030354499816895

Token 459: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2364206165075302
    2. '_' → logprob: -1.6114206314086914
    3. ''' → logprob: -4.986420631408691
    4. ''imp' → logprob: -6.611420631408691
    5. '_elements' → logprob: -7.111420631408691
    6. ''é' → logprob: -7.236420631408691
    7. ''él' → logprob: -8.361420631408691
    8. ''ent' → logprob: -8.486420631408691
    9. ' éléments' → logprob: -8.611420631408691
    10. '_d' → logprob: -9.486420631408691

Token 460: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0006628761766478419
    2. 'ent' → logprob: -8.750662803649902
    3. 'int' → logprob: -8.750662803649902
    4. 'él' → logprob: -9.125662803649902
    5. 'elements' → logprob: -9.125662803649902
    6. ' éléments' → logprob: -9.875662803649902
    7. 'imp' → logprob: -10.125662803649902
    8. 'é' → logprob: -11.250662803649902
    9. '```' → logprob: -11.750662803649902
    10. '#' → logprob: -13.250662803649902

Token 461: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.027164990082383156
    2. 'ents' → logprob: -3.902164936065674
    3. 'nts' → logprob: -5.652164936065674
    4. 'lements' → logprob: -6.902164936065674
    5. 'ment' → logprob: -7.652164936065674
    6. 'm' → logprob: -7.777164936065674
    7. 'ements' → logprob: -8.527165412902832
    8. 'mets' → logprob: -8.527165412902832
    9. 'iments' → logprob: -8.902165412902832
    10. 'lems' → logprob: -9.027165412902832

Token 462: ' imp' (ID: 3282)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.002978648990392685
    2. 'im' → logprob: -6.252978801727295
    3. ' imp' → logprob: -7.627978801727295
    4. '   ' → logprob: -8.502978324890137
    5. '_imp' → logprob: -9.502978324890137
    6. 'pairs' → logprob: -10.127978324890137
    7. ' ' → logprob: -10.252978324890137
    8. ' =' → logprob: -10.252978324890137
    9. '  ' → logprob: -10.502978324890137
    10. 'import' → logprob: -10.752978324890137

Token 463: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0004909569397568703
    2. 'air' → logprob: -7.750491142272949
    3. 'a' → logprob: -10.37549114227295
    4. 'aris' → logprob: -11.37549114227295
    5. 'orts' → logprob: -12.87549114227295
    6. 'aires' → logprob: -13.12549114227295
    7. 'pairs' → logprob: -13.50049114227295
    8. 'ar' → logprob: -13.62549114227295
    9. 'o' → logprob: -13.62549114227295
    10. 'ars' → logprob: -13.62549114227295

Token 464: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0022740813437849283
    2. '
' → logprob: -6.127274036407471
    3. '

' → logprob: -9.877274513244629
    4. 'n' → logprob: -11.002274513244629
    5. '(N' → logprob: -12.252274513244629
    6. '[N' → logprob: -12.502274513244629
    7. ' =' → logprob: -12.627274513244629
    8. ' N' → logprob: -12.877274513244629
    9. '```' → logprob: -12.877274513244629
    10. 's' → logprob: -13.877274513244629

Token 465: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00010998018842656165
    2. '
' → logprob: -9.875109672546387
    3. 'n' → logprob: -10.000109672546387
    4. '(N' → logprob: -11.750109672546387
    5. ' N' → logprob: -12.750109672546387
    6. '[N' → logprob: -14.250109672546387
    7. '"""
' → logprob: -14.625109672546387
    8. '```' → logprob: -15.250109672546387
    9. '

' → logprob: -15.500109672546387
    10. ' 
' → logprob: -15.500109672546387

Token 466: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -0.0031953046564012766
    2. '_' → logprob: -5.753195285797119
    3. '_g' → logprob: -11.878195762634277
    4. ',_' → logprob: -13.253195762634277
    5. ' _' → logprob: -13.378195762634277
    6. '_ga' → logprob: -13.503195762634277
    7. '_gr' → logprob: -14.128195762634277
    8. '_guard' → logprob: -14.378195762634277
    9. ' =' → logprob: -14.628195762634277
    10. '_gui' → logprob: -14.628195762634277

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011760921915993094
    2. ' ,' → logprob: -9.875117301940918
    3. ',M' → logprob: -10.500117301940918
    4. '=' → logprob: -10.500117301940918
    5. ' =' → logprob: -11.500117301940918
    6. ',N' → logprob: -14.375117301940918
    7. ',m' → logprob: -15.250117301940918
    8. 'M' → logprob: -17.250118255615234
    9. ',input' → logprob: -17.250118255615234
    10. ',
' → logprob: -17.875118255615234

Token 468: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5759403109550476
    2. ' M' → logprob: -0.8259403109550476
    3. ' ' → logprob: -14.325940132141113
    4. ' ' → logprob: -15.950940132141113
    5. ' =' → logprob: -17.32594108581543
    6. '=M' → logprob: -17.45094108581543
    7. 'space' → logprob: -17.70094108581543
    8. '=' → logprob: -17.82594108581543
    9. '  ' → logprob: -17.95094108581543
    10. '```' → logprob: -18.57594108581543

Token 469: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.319370302458992e-06
    2. 'ki' → logprob: -13.125005722045898
    3. '_k' → logprob: -13.500005722045898
    4. ' _' → logprob: -13.875005722045898
    5. '_i' → logprob: -15.875005722045898
    6. '_ke' → logprob: -16.0000057220459
    7. '__' → logprob: -16.1250057220459
    8. '_
' → logprob: -16.6250057220459
    9. '_ai' → logprob: -16.6250057220459
    10. '_
' → logprob: -17.1250057220459

Token 470: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -3.173704271830502e-06
    2. ' ki' → logprob: -14.00000286102295
    3. 'ки' → logprob: -14.87500286102295
    4. 'kiye' → logprob: -15.25000286102295
    5. '```' → logprob: -15.37500286102295
    6. '_' → logprob: -15.37500286102295
    7. 'k' → logprob: -15.50000286102295
    8. 'Ki' → logprob: -15.62500286102295
    9. 'kip' → logprob: -16.250003814697266
    10. 'kii' → logprob: -16.625003814697266

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021055489778519
    2. ' =' → logprob: -2.350210666656494
    3. '=input' → logprob: -12.850210189819336
    4. '=int' → logprob: -14.475210189819336
    5. '＝' → logprob: -14.975210189819336
    6. '=list' → logprob: -15.475210189819336
    7. ' ' → logprob: -16.225210189819336
    8. ',' → logprob: -17.850210189819336
    9. ')=' → logprob: -17.850210189819336
    10. ')' → logprob: -17.975210189819336

Token 472: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20141372084617615
    2. ' map' → logprob: -1.7014137506484985
    3. '	map' → logprob: -15.576414108276367
    4. '(map' → logprob: -16.076414108276367
    5. 'list' → logprob: -16.951414108276367
    6. '[' → logprob: -17.701414108276367
    7. ' ' → logprob: -17.951414108276367
    8. '.map' → logprob: -18.201414108276367
    9. 'tuple' → logprob: -18.576414108276367
    10. 'm' → logprob: -18.701414108276367

Token 473: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00032151900813914835
    2. 'int' → logprob: -8.250321388244629
    3. '(' → logprob: -9.750321388244629
    4. '(input' → logprob: -13.500321388244629
    5. '[int' → logprob: -15.250321388244629
    6. '=int' → logprob: -15.375321388244629
    7. '<int' → logprob: -16.375322341918945
    8. '(
' → logprob: -16.875322341918945
    9. ' int' → logprob: -16.875322341918945
    10. 'input' → logprob: -18.375322341918945

Token 474: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38828781247138977
    2. '(input' → logprob: -1.1382877826690674
    3. ',input' → logprob: -7.0132880210876465
    4. ')' → logprob: -8.013287544250488
    5. ' input' → logprob: -9.138287544250488
    6. '(' → logprob: -9.888287544250488
    7. '=input' → logprob: -11.263287544250488
    8. ',' → logprob: -11.513287544250488
    9. '[input' → logprob: -13.138287544250488
    10. '	input' → logprob: -14.013287544250488

Token 475: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -17.625158309936523
    4. '   ' → logprob: -19.875158309936523
    5. '=input' → logprob: -20.250158309936523
    6. ',input' → logprob: -20.750158309936523
    7. '	input' → logprob: -21.375158309936523
    8. ')' → logprob: -21.375158309936523
    9. '<input' → logprob: -21.625158309936523
    10. '_input' → logprob: -22.000158309936523

Token 476: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.52919222577475e-05
    2. '()' → logprob: -9.500075340270996
    3. '())' → logprob: -15.375075340270996
    4. ' ().' → logprob: -16.75007438659668
    5. '(' → logprob: -18.00007438659668
    6. ')' → logprob: -19.37507438659668
    7. '()
' → logprob: -19.37507438659668
    8. '.split' → logprob: -19.75007438659668
    9. '（）' → logprob: -19.75007438659668
    10. '("").' → logprob: -20.75007438659668

Token 477: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002036595979006961
    2. 'strip' → logprob: -8.500204086303711
    3. 'rstrip' → logprob: -16.62520408630371
    4. ' split' → logprob: -17.12520408630371
    5. '(split' → logprob: -17.62520408630371
    6. 'spl' → logprob: -18.00020408630371
    7. 'read' → logprob: -20.00020408630371
    8. 's' → logprob: -22.00020408630371
    9. '_split' → logprob: -22.25020408630371
    10. '.split' → logprob: -22.75020408630371

Token 478: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003580826334655285
    2. ')' → logprob: -5.7535810470581055
    3. '()' → logprob: -7.8785810470581055
    4. '()))' → logprob: -11.128581047058105
    5. '(' → logprob: -12.128581047058105
    6. '))' → logprob: -13.253581047058105
    7. '('' → logprob: -14.253581047058105
    8. ' ())' → logprob: -14.378581047058105
    9. '().' → logprob: -15.378581047058105
    10. '())
' → logprob: -15.503581047058105

Token 479: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05586613342165947
    2. 'res' → logprob: -3.680866241455078
    3. 'pairs' → logprob: -4.555866241455078
    4. 'total' → logprob: -5.305866241455078
    5. 'pair' → logprob: -5.430866241455078
    6. 'ways' → logprob: -5.680866241455078
    7. '#' → logprob: -6.305866241455078
    8. 'cho' → logprob: -6.930866241455078
    9. 'answer' → logprob: -7.430866241455078
    10. 'ans' → logprob: -7.805866241455078

Token 480: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29147547483444214
    2. '#' → logprob: -1.791475534439087
    3. 'res' → logprob: -3.666475534439087
    4. 'pair' → logprob: -4.041475296020508
    5. 'pairs' → logprob: -4.291475296020508
    6. 'total' → logprob: -4.541475296020508
    7. 'p' → logprob: -5.541475296020508
    8. 'part' → logprob: -5.791475296020508
    9. 'ways' → logprob: -6.041475296020508
    10. 'cho' → logprob: -6.166475296020508

Token 481: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9736473560333252
    2. 'pairs' → logprob: -1.5986473560333252
    3. 'pair' → logprob: -1.8486473560333252
    4. 'ways' → logprob: -2.223647356033325
    5. 'even' → logprob: -2.723647356033325
    6. 'res' → logprob: -3.473647356033325
    7. 'cho' → logprob: -4.473647117614746
    8. 'part' → logprob: -4.973647117614746
    9. 'p' → logprob: -5.098647117614746
    10. 'nombre' → logprob: -5.348647117614746

Token 482: ' nombre' (ID: 9733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1617003232240677
    2. 'nombre' → logprob: -2.2867002487182617
    3. 'total' → logprob: -3.6617002487182617
    4. 'res' → logprob: -4.786700248718262
    5. '#' → logprob: -5.536700248718262
    6. 'cho' → logprob: -5.661700248718262
    7. 'de' → logprob: -6.411700248718262
    8. 'pairs' → logprob: -7.036700248718262
    9. 'pair' → logprob: -7.286700248718262
    10. 'nb' → logprob: -7.536700248718262

Token 483: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0217899139970541
    2. 'total' → logprob: -4.521790027618408
    3. 'd' → logprob: -5.896790027618408
    4. '#' → logprob: -6.646790027618408
    5. 'des' → logprob: -6.646790027618408
    6. '_' → logprob: -6.771790027618408
    7. '_de' → logprob: -6.896790027618408
    8. ' de' → logprob: -7.146790027618408
    9. '_total' → logprob: -7.521790027618408
    10. 'ways' → logprob: -8.02178955078125

Token 484: ' façons' (ID: 165958)
  Prédit: 'fa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fa' → logprob: -0.2383212000131607
    2. 'de' → logprob: -2.113321304321289
    3. 'fac' → logprob: -3.738321304321289
    4. 'p' → logprob: -3.988321304321289
    5. 'ways' → logprob: -4.863321304321289
    6. ' façons' → logprob: -4.988321304321289
    7. 'm' → logprob: -5.238321304321289
    8. 'cho' → logprob: -5.238321304321289
    9. 'man' → logprob: -5.613321304321289
    10. '2' → logprob: -5.738321304321289

Token 485: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.01267962995916605
    2. 'd' → logprob: -5.512679576873779
    3. 'cho' → logprob: -6.012679576873779
    4. 'pair' → logprob: -6.387679576873779
    5. 'pairs' → logprob: -6.887679576873779
    6. 'p' → logprob: -7.637679576873779
    7. '#' → logprob: -7.762679576873779
    8. 'total' → logprob: -7.887679576873779
    9. 'pour' → logprob: -8.012680053710938
    10. ' de' → logprob: -8.262680053710938

Token 486: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.12720012664794922
    2. ' choisir' → logprob: -2.127200126647949
    3. 'k' → logprob: -9.37720012664795
    4. 'chooser' → logprob: -10.37720012664795
    5. 'choose' → logprob: -10.50220012664795
    6. '2' → logprob: -10.50220012664795
    7. ' sélectionner' → logprob: -11.00220012664795
    8. ' cho' → logprob: -11.00220012664795
    9. ' ' → logprob: -11.12720012664795
    10. 'de' → logprob: -11.75220012664795

Token 487: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02244453690946102
    2. 'de' → logprob: -3.897444486618042
    3. '(N' → logprob: -6.897444725036621
    4. '(' → logprob: -7.897444725036621
    5. ' deux' → logprob: -9.147444725036621
    6. 'N' → logprob: -9.272444725036621
    7. 'k' → logprob: -9.522444725036621
    8. ' ' → logprob: -9.647444725036621
    9. 'two' → logprob: -10.147444725036621
    10. '0' → logprob: -10.522444725036621

Token 488: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014246598817408085
    2. 'de' → logprob: -4.264246463775635
    3. ' ' → logprob: -10.389246940612793
    4. '(' → logprob: -10.639246940612793
    5. ' deux' → logprob: -11.014246940612793
    6. '```' → logprob: -12.889246940612793
    7. 'two' → logprob: -12.889246940612793
    8. '(de' → logprob: -13.889246940612793
    9. 'Deux' → logprob: -13.889246940612793
    10. '(N' → logprob: -14.014246940612793

Token 489: ' éléments' (ID: 57375)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.6542952060699463
    2. 'de' → logprob: -1.5292952060699463
    3. 'elements' → logprob: -2.1542952060699463
    4. 'p' → logprob: -2.4042952060699463
    5. 'd' → logprob: -3.9042952060699463
    6. ' pairs' → logprob: -4.779294967651367
    7. 'pair' → logprob: -5.279294967651367
    8. 'élé' → logprob: -5.529294967651367
    9. '_pairs' → logprob: -5.654294967651367
    10. '2' → logprob: -6.404294967651367

Token 490: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.591812789440155
    2. 'cho' → logprob: -2.2168128490448
    3. 'pair' → logprob: -2.4668128490448
    4. '#' → logprob: -2.4668128490448
    5. 'ways' → logprob: -3.3418128490448
    6. 'de' → logprob: -3.4668128490448
    7. 'p' → logprob: -3.8418128490448
    8. 'result' → logprob: -3.9668128490448
    9. 'res' → logprob: -4.341812610626221
    10. 'pares' → logprob: -4.716812610626221

Token 491: ' (' (ID: 350)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7129483819007874
    2. 'pair' → logprob: -1.4629483222961426
    3. 'ways' → logprob: -2.9629483222961426
    4. 'p' → logprob: -2.9629483222961426
    5. 'result' → logprob: -3.2129483222961426
    6. 'cho' → logprob: -3.4629483222961426
    7. 'de' → logprob: -4.212948322296143
    8. 'dp' → logprob: -4.462948322296143
    9. 'num' → logprob: -4.462948322296143
    10. 'res' → logprob: -4.587948322296143

Token 492: 'dont' (ID: 109173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22053638100624084
    2. 'N' → logprob: -1.9705363512039185
    3. 'k' → logprob: -3.720536470413208
    4. ' kum' → logprob: -4.095536231994629
    5. ' )' → logprob: -4.970536231994629
    6. '")' → logprob: -5.845536231994629
    7. ' N' → logprob: -6.095536231994629
    8. 'kum' → logprob: -6.595536231994629
    9. ' k' → logprob: -6.845536231994629
    10. 'n' → logprob: -7.345536231994629

Token 493: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.004085659980774
    2. 'la' → logprob: -1.629085659980774
    3. 'de' → logprob: -2.1290855407714844
    4. ')' → logprob: -2.2540855407714844
    5. 'k' → logprob: -3.0040855407714844
    6. ' la' → logprob: -3.3790855407714844
    7. '```' → logprob: -3.5040855407714844
    8. ' ' → logprob: -3.7540855407714844
    9. 'les' → logprob: -4.004085540771484
    10. 'le' → logprob: -4.129085540771484

Token 494: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44484367966651917
    2. ' somme' → logprob: -1.1948436498641968
    3. 'som' → logprob: -3.8198437690734863
    4. 'sum' → logprob: -4.319843769073486
    5. ')' → logprob: -4.569843769073486
    6. '#' → logprob: -6.069843769073486
    7. ' )' → logprob: -6.694843769073486
    8. 'comb' → logprob: -6.819843769073486
    9. 'de' → logprob: -6.944843769073486
    10. '`)' → logprob: -7.069843769073486

Token 495: ' sera' (ID: 15511)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.27558594942092896
    2. 'est' → logprob: -1.7755858898162842
    3. ')' → logprob: -2.775585889816284
    4. '=' → logprob: -5.650586128234863
    5. ' =' → logprob: -6.525586128234863
    6. ' is' → logprob: -6.900586128234863
    7. '<|end|>' → logprob: -7.275586128234863
    8. '#' → logprob: -7.400586128234863
    9. '```' → logprob: -7.775586128234863
    10. '_est' → logprob: -8.150586128234863

Token 496: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.054814912378787994
    2. 'pair' → logprob: -3.6798148155212402
    3. ' pair' → logprob: -4.17981481552124
    4. ')' → logprob: -6.05481481552124
    5. ' pairs' → logprob: -6.05481481552124
    6. 'pa' → logprob: -6.05481481552124
    7. ' ' → logprob: -6.42981481552124
    8. '2' → logprob: -6.92981481552124
    9. 'pairs' → logprob: -7.30481481552124
    10. 'p' → logprob: -7.55481481552124

Token 497: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013655527436640114
    2. ' )' → logprob: -9.375136375427246
    3. '#' → logprob: -10.750136375427246
    4. ')#' → logprob: -11.375136375427246
    5. ')
' → logprob: -12.125136375427246
    6. ')

' → logprob: -13.250136375427246
    7. '),' → logprob: -13.375136375427246
    8. ',' → logprob: -13.375136375427246
    9. '_pairs' → logprob: -13.500136375427246
    10. '")' → logprob: -13.875136375427246

Token 498: 'gu' (ID: 5130)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.6456422209739685
    2. 'pair' → logprob: -1.8956422805786133
    3. 'k' → logprob: -2.2706422805786133
    4. 'pairs' → logprob: -2.8956422805786133
    5. 'cho' → logprob: -3.1456422805786133
    6. 'result' → logprob: -3.5206422805786133
    7. 'num' → logprob: -3.8956422805786133
    8. 'comb' → logprob: -4.145642280578613
    9. 'count' → logprob: -4.395642280578613
    10. 'even' → logprob: -5.020642280578613

Token 499: '_gu' (ID: 149045)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.02369903214275837
    2. ' =' → logprob: -4.148698806762695
    3. 'm' → logprob: -5.898698806762695
    4. '_' → logprob: -6.648698806762695
    5. '=' → logprob: -7.398698806762695
    6. '_i' → logprob: -7.648698806762695
    7. '_pairs' → logprob: -7.898698806762695
    8. '_m' → logprob: -8.273698806762695
    9. '_n' → logprob: -8.523698806762695
    10. 'mi' → logprob: -8.648698806762695

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3181491196155548
    2. '=' → logprob: -1.3181490898132324
    3. '_num' → logprob: -5.443149089813232
    4. '_' → logprob: -7.818149089813232
    5. '_pairs' → logprob: -10.31814956665039
    6. '=num' → logprob: -10.69314956665039
    7. ' ' → logprob: -11.19314956665039
    8. ')' → logprob: -11.69314956665039
    9. '=k' → logprob: -11.94314956665039
    10. '_k' → logprob: -11.94314956665039

Token 501: ' kum' (ID: 14289)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0020314191933721304
    2. ' kum' → logprob: -6.252031326293945
    3. 'kum' → logprob: -9.252031326293945
    4. ' k' → logprob: -13.127031326293945
    5. '	k' → logprob: -13.877031326293945
    6. '(k' → logprob: -14.002031326293945
    7. ' kuma' → logprob: -14.252031326293945
    8. '  ' → logprob: -15.439531326293945
    9. '   ' → logprob: -15.502031326293945
    10. 'K' → logprob: -15.502031326293945

Token 502: 'ia' (ID: 535)
  Prédit: 'ia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ia' → logprob: -0.0013272607466205955
    2. 'i' → logprob: -7.376327037811279
    3. 'aw' → logprob: -7.751327037811279
    4. 'a' → logprob: -9.376327514648438
    5. 'iwa' → logprob: -9.876327514648438
    6. 'k' → logprob: -10.001327514648438
    7. 'w' → logprob: -11.126327514648438
    8. 'awa' → logprob: -11.626327514648438
    9. 'awia' → logprob: -11.751327514648438
    10. 'nia' → logprob: -11.876327514648438

Token 503: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.827200897736475e-05
    2. 'aw' → logprob: -9.750078201293945
    3. 'se' → logprob: -11.500078201293945
    4. 'k' → logprob: -12.500078201293945
    5. 'ase' → logprob: -12.750078201293945
    6. 'was' → logprob: -13.750078201293945
    7. 'base' → logprob: -15.375078201293945
    8. '```' → logprob: -15.625078201293945
    9. 'n' → logprob: -16.000078201293945
    10. 's' → logprob: -16.000078201293945

Token 504: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.0068845730274915695
    2. 'w' → logprob: -5.256884574890137
    3. 'se' → logprob: -6.881884574890137
    4. 'aw' → logprob: -7.506884574890137
    5. 'case' → logprob: -10.756884574890137
    6. ' ase' → logprob: -11.381884574890137
    7. 'base' → logprob: -11.506884574890137
    8. 's' → logprob: -12.131884574890137
    9. 'asse' → logprob: -12.131884574890137
    10. 'ose' → logprob: -13.256884574890137

Token 505: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.3856492842023727e-06
    2. 'num' → logprob: -13.750000953674316
    3. '_' → logprob: -16.250001907348633
    4. '_n' → logprob: -16.250001907348633
    5. '​' → logprob: -16.375001907348633
    6. 'Num' → logprob: -17.000001907348633
    7. '_NUM' → logprob: -17.625001907348633
    8. '```' → logprob: -18.375001907348633
    9. '(num' → logprob: -18.750001907348633
    10. 'a' → logprob: -18.875001907348633

Token 506: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.500004768371582
    3. 'N' → logprob: -13.500004768371582
    4. '(
' → logprob: -17.8750057220459
    5. ')' → logprob: -18.5000057220459
    6. ' (' → logprob: -18.5000057220459
    7. '((' → logprob: -19.0000057220459
    8. '[N' → logprob: -19.1250057220459
    9. 's' → logprob: -19.2500057220459
    10. '2' → logprob: -19.3750057220459

Token 507: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -1.5570885807392187e-05
    2. 'gu' → logprob: -11.500015258789062
    3. ',' → logprob: -12.625015258789062
    4. 'Gu' → logprob: -13.750015258789062
    5. '_ga' → logprob: -14.750015258789062
    6. '_g' → logprob: -15.375015258789062
    7. ',_' → logprob: -16.250015258789062
    8. '_gui' → logprob: -16.250015258789062
    9. '```' → logprob: -16.625015258789062
    10. '2' → logprob: -16.875015258789062

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. ' ,' → logprob: -10.375040054321289
    3. '2' → logprob: -11.875040054321289
    4. '(' → logprob: -13.625040054321289
    5. ',
' → logprob: -16.12504005432129
    6. '1' → logprob: -17.75004005432129
    7. ' ' → logprob: -17.87504005432129
    8. '   ' → logprob: -18.12504005432129
    9. '```' → logprob: -18.62504005432129
    10. ')' → logprob: -18.62504005432129

Token 509: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.750261306762695
    4. '  ' → logprob: -20.000261306762695
    5. ')' → logprob: -20.250261306762695
    6. '２' → logprob: -20.375261306762695
    7. '```' → logprob: -20.750261306762695
    8. ' ' → logprob: -21.375261306762695
    9. '۲' → logprob: -21.500261306762695
    10. '
' → logprob: -21.625261306762695

Token 510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -20.0
    4. ')' → logprob: -21.625
    5. '２' → logprob: -21.625
    6. '```' → logprob: -21.75
    7. '۲' → logprob: -22.0
    8. '  ' → logprob: -23.625
    9. '(' → logprob: -23.875
    10. '0' → logprob: -24.3125

Token 511: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.250001907348633
    4. '),' → logprob: -18.250001907348633
    5. ')

' → logprob: -18.250001907348633
    6. ')`' → logprob: -19.500001907348633
    7. ')#' → logprob: -19.750001907348633
    8. '))' → logprob: -19.875001907348633
    9. ')+' → logprob: -20.000001907348633
    10. ')
' → logprob: -20.000001907348633

Token 512: '#' (ID: 2)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.0025999147910624743
    2. 'ko' → logprob: -7.127599716186523
    3. 'im' → logprob: -7.377599716186523
    4. '_' → logprob: -8.252599716186523
    5. ' ki' → logprob: -8.752599716186523
    6. 'iki' → logprob: -9.002599716186523
    7. 'ka' → logprob: -9.627599716186523
    8. 'ku' → logprob: -9.627599716186523
    9. 'mi' → logprob: -9.877599716186523
    10. 'k' → logprob: -10.252599716186523

Token 513: ' Calcul' (ID: 57243)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.007505236659198999
    2. 'im' → logprob: -6.257505416870117
    3. 'ko' → logprob: -6.757505416870117
    4. 'ka' → logprob: -7.007505416870117
    5. 'm' → logprob: -7.257505416870117
    6. 'odd' → logprob: -7.632505416870117
    7. 'ku' → logprob: -7.882505416870117
    8. 'mi' → logprob: -8.132505416870117
    9. 'k' → logprob: -8.257505416870117
    10. 'M' → logprob: -8.882505416870117

Token 514: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26278501749038696
    2. ' de' → logprob: -2.637784957885742
    3. 'du' → logprob: -3.262784957885742
    4. ' du' → logprob: -3.262784957885742
    5. '(' → logprob: -3.637784957885742
    6. 'gu' → logprob: -4.637784957885742
    7. '#' → logprob: -4.887784957885742
    8. 'de' → logprob: -5.137784957885742
    9. ' des' → logprob: -5.387784957885742
    10. ' of' → logprob: -5.512784957885742

Token 515: ' nombre' (ID: 9733)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.12303586304187775
    2. 'k' → logprob: -3.9980359077453613
    3. 'im' → logprob: -3.9980359077453613
    4. 'ku' → logprob: -4.248035907745361
    5. 'm' → logprob: -4.373035907745361
    6. 'mi' → logprob: -4.748035907745361
    7. 'imp' → logprob: -4.873035907745361
    8. 'M' → logprob: -5.123035907745361
    9. ' ki' → logprob: -5.248035907745361
    10. 'gu' → logprob: -6.123035907745361

Token 516: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30169910192489624
    2. 'de' → logprob: -2.301699161529541
    3. '(M' → logprob: -2.926699161529541
    4. ' de' → logprob: -3.051699161529541
    5. '(' → logprob: -3.801699161529541
    6. 'gu' → logprob: -4.801699161529541
    7. 'of' → logprob: -5.426699161529541
    8. 'd' → logprob: -5.426699161529541
    9. 'ki' → logprob: -5.676699161529541
    10. '_k' → logprob: -5.676699161529541

Token 517: ' façons' (ID: 165958)
  Prédit: ' kum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' kum' → logprob: -0.8511564135551453
    2. 'kum' → logprob: -0.8511564135551453
    3. 'gu' → logprob: -2.47615647315979
    4. 'k' → logprob: -3.35115647315979
    5. 'ki' → logprob: -5.101156234741211
    6. 'ku' → logprob: -5.601156234741211
    7. ' gu' → logprob: -6.226156234741211
    8. 'im' → logprob: -6.476156234741211
    9. 'M' → logprob: -6.601156234741211
    10. '```' → logprob: -6.726156234741211

Token 518: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5225123763084412
    2. '(M' → logprob: -1.397512435913086
    3. ' de' → logprob: -2.522512435913086
    4. '(' → logprob: -2.772512435913086
    5. 'd' → logprob: -5.022512435913086
    6. 'of' → logprob: -5.772512435913086
    7. 'M' → logprob: -6.272512435913086
    8. 'gu' → logprob: -6.647512435913086
    9. '(de' → logprob: -7.522512435913086
    10. 'def' → logprob: -7.647512435913086

Token 519: ' choisir' (ID: 47004)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.953082341467962e-05
    2. 'kum' → logprob: -10.250039100646973
    3. ' kum' → logprob: -13.750039100646973
    4. 'komb' → logprob: -14.375039100646973
    5. '(k' → logprob: -15.000039100646973
    6. '```' → logprob: -15.250039100646973
    7. ' k' → logprob: -15.375039100646973
    8. '...' → logprob: -15.562539100646973
    9. '#' → logprob: -15.750039100646973
    10. 'com' → logprob: -16.12504005432129

Token 520: ' ' (ID: 220)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.04867343604564667
    2. 'M' → logprob: -3.048673391342163
    3. '(' → logprob: -10.173673629760742
    4. ' M' → logprob: -10.423673629760742
    5. 'k' → logprob: -11.423673629760742
    6. '(N' → logprob: -12.923673629760742
    7. '2' → logprob: -13.423673629760742
    8. ' ' → logprob: -13.673673629760742
    9. 'def' → logprob: -14.423673629760742
    10. '(k' → logprob: -14.673673629760742

Token 521: '2' (ID: 17)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.31920599937438965
    2. '(M' → logprob: -1.3192059993743896
    3. 'k' → logprob: -5.569206237792969
    4. '2' → logprob: -6.319206237792969
    5. '(' → logprob: -9.194206237792969
    6. '(k' → logprob: -9.444206237792969
    7. 'kum' → logprob: -9.944206237792969
    8. ' M' → logprob: -10.694206237792969
    9. '(N' → logprob: -11.819206237792969
    10. 'def' → logprob: -11.944206237792969

Token 522: ' éléments' (ID: 57375)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.01001400500535965
    2. 'M' → logprob: -4.635014057159424
    3. '(' → logprob: -8.385013580322266
    4. ' M' → logprob: -11.135013580322266
    5. ' (' → logprob: -11.635013580322266
    6. 'elements' → logprob: -12.885013580322266
    7. 'im' → logprob: -13.885013580322266
    8. 'imp' → logprob: -14.510013580322266
    9. 'def' → logprob: -14.760013580322266
    10. '_M' → logprob: -14.760013580322266

Token 523: ' imp' (ID: 3282)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0004060050705447793
    2. 'M' → logprob: -8.000406265258789
    3. '(' → logprob: -9.625406265258789
    4. 'from' → logprob: -13.625406265258789
    5. 'im' → logprob: -13.750406265258789
    6. ' (' → logprob: -14.375406265258789
    7. 'def' → logprob: -14.500406265258789
    8. ' M' → logprob: -14.875406265258789
    9. 'imp' → logprob: -15.000406265258789
    10. '(N' → logprob: -16.37540626525879

Token 524: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.006047416478395462
    2. 'M' → logprob: -6.506047248840332
    3. 'pairs' → logprob: -6.506047248840332
    4. 'k' → logprob: -7.506047248840332
    5. 'ards' → logprob: -7.756047248840332
    6. 'aris' → logprob: -7.881047248840332
    7. 'ris' → logprob: -8.506047248840332
    8. 'kis' → logprob: -8.631047248840332
    9. 'r' → logprob: -8.756047248840332
    10. '(M' → logprob: -9.006047248840332

Token 525: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0028536133468151093
    2. 'M' → logprob: -5.8778533935546875
    3. '=' → logprob: -10.877853393554688
    4. '(' → logprob: -11.502853393554688
    5. ' =' → logprob: -11.752853393554688
    6. ' M' → logprob: -12.877853393554688
    7. '=M' → logprob: -12.877853393554688
    8. '   ' → logprob: -13.127853393554688
    9. ' (' → logprob: -13.377853393554688
    10. ',' → logprob: -13.877853393554688

Token 526: 'dont' (ID: 109173)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01033414900302887
    2. '(M' → logprob: -5.010334014892578
    3. ' M' → logprob: -6.010334014892578
    4. ')' → logprob: -6.885334014892578
    5. '(' → logprob: -9.385334014892578
    6. 'k' → logprob: -11.510334014892578
    7. ' ' → logprob: -11.885334014892578
    8. '),' → logprob: -11.885334014892578
    9. '   ' → logprob: -12.510334014892578
    10. '")' → logprob: -12.760334014892578

Token 527: ' la' (ID: 557)
  Prédit: ' kum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' kum' → logprob: -0.6735268235206604
    2. 'M' → logprob: -1.1735267639160156
    3. ' M' → logprob: -1.7985267639160156
    4. 'kum' → logprob: -4.298526763916016
    5. 'k' → logprob: -7.548526763916016
    6. ' cum' → logprob: -8.611026763916016
    7. ')' → logprob: -9.048526763916016
    8. ' ' → logprob: -9.048526763916016
    9. 'cum' → logprob: -9.423526763916016
    10. ' k' → logprob: -9.486026763916016

Token 528: ' somme' (ID: 64484)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0969420671463013
    2. 'gu' → logprob: -1.5969420671463013
    3. 'num' → logprob: -1.7219420671463013
    4. 'kum' → logprob: -2.0969419479370117
    5. ' kum' → logprob: -2.4719419479370117
    6. '2' → logprob: -3.3469419479370117
    7. ' k' → logprob: -4.471941947937012
    8. '_num' → logprob: -4.846941947937012
    9. ' gu' → logprob: -5.721941947937012
    10. 'ku' → logprob: -5.971941947937012

Token 529: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6020040512084961
    2. ' =' → logprob: -1.227004051208496
    3. ' est' → logprob: -2.352004051208496
    4. 'est' → logprob: -3.227004051208496
    5. ' sera' → logprob: -3.977004051208496
    6. 'sera' → logprob: -6.477004051208496
    7. ')' → logprob: -7.102004051208496
    8. '#' → logprob: -7.102004051208496
    9. 'gu' → logprob: -7.477004051208496
    10. '```' → logprob: -7.977004051208496

Token 530: ' aussi' (ID: 9894)
  Prédit: ' kum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' kum' → logprob: -0.025744061917066574
    2. '2' → logprob: -4.1507439613342285
    3. ' ' → logprob: -5.1507439613342285
    4. 'kum' → logprob: -5.7757439613342285
    5. 'k' → logprob: -7.7757439613342285
    6. ' k' → logprob: -8.275744438171387
    7. '(k' → logprob: -11.525744438171387
    8. ' cum' → logprob: -11.775744438171387
    9. '   ' → logprob: -12.213244438171387
    10. '  ' → logprob: -12.275744438171387

Token 531: ' paire' (ID: 148856)
  Prédit: ' kum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kum' → logprob: -0.30188634991645813
    2. ' paire' → logprob: -1.9268863201141357
    3. '2' → logprob: -2.8018863201141357
    4. 'kum' → logprob: -3.6768863201141357
    5. 'k' → logprob: -4.801886558532715
    6. 'pair' → logprob: -4.926886558532715
    7. ' ' → logprob: -5.551886558532715
    8. ' pair' → logprob: -6.301886558532715
    9. 'pari' → logprob: -6.551886558532715
    10. '(k' → logprob: -6.801886558532715

Token 532: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4006167948246002
    2. ')
' → logprob: -1.1506167650222778
    3. 'ki' → logprob: -4.775616645812988
    4. 'M' → logprob: -5.400616645812988
    5. ')
' → logprob: -8.650616645812988
    6. ' M' → logprob: -9.150616645812988
    7. 'iki' → logprob: -9.775616645812988
    8. 'imp' → logprob: -10.025616645812988
    9. '(M' → logprob: -10.275616645812988
    10. ')

' → logprob: -10.400616645812988

Token 533: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.004161737859249115
    2. 'mi' → logprob: -6.629161834716797
    3. ' ki' → logprob: -7.004161834716797
    4. 'ku' → logprob: -7.129161834716797
    5. 'k' → logprob: -8.254161834716797
    6. 'M' → logprob: -8.879161834716797
    7. 'm' → logprob: -9.254161834716797
    8. 'ko' → logprob: -9.504161834716797
    9. 'gu' → logprob: -9.504161834716797
    10. ' kum' → logprob: -9.504161834716797

Token 534: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009270645678043365
    2. ' =' → logprob: -7.250926971435547
    3. '=' → logprob: -9.000926971435547
    4. '_k' → logprob: -9.625926971435547
    5. '=_' → logprob: -11.500926971435547
    6. '_gu' → logprob: -12.000926971435547
    7. 'ki' → logprob: -12.250926971435547
    8. '_=' → logprob: -12.875926971435547
    9. '_m' → logprob: -13.375926971435547
    10. '_ke' → logprob: -14.375926971435547

Token 535: 'ki' (ID: 3129)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.5399206280708313
    2. 'ki' → logprob: -1.2899205684661865
    3. 'k' → logprob: -2.9149205684661865
    4. '_num' → logprob: -3.2899205684661865
    5. 'kum' → logprob: -3.9149205684661865
    6. 'gu' → logprob: -4.789920806884766
    7. 'ku' → logprob: -5.164920806884766
    8. '=' → logprob: -5.289920806884766
    9. '_' → logprob: -5.539920806884766
    10. 'm' → logprob: -6.414920806884766

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141352713108063
    2. ' =' → logprob: -1.7014135122299194
    3. '=k' → logprob: -15.57641315460205
    4. '＝' → logprob: -18.076414108276367
    5. ' ' → logprob: -19.326414108276367
    6. ',' → logprob: -19.576414108276367
    7. ')' → logprob: -21.076414108276367
    8. 'k' → logprob: -21.201414108276367
    9. ' ' → logprob: -21.576414108276367
    10. 's' → logprob: -22.076414108276367

Token 537: ' kum' (ID: 14289)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009009595029056072
    2. ' kum' → logprob: -4.75900936126709
    3. 'kum' → logprob: -7.88400936126709
    4. ' k' → logprob: -11.38400936126709
    5. ' kuma' → logprob: -13.00900936126709
    6. '	k' → logprob: -13.88400936126709
    7. '(k' → logprob: -13.88400936126709
    8. ' kumm' → logprob: -14.38400936126709
    9. ' kumu' → logprob: -14.75900936126709
    10. '[k' → logprob: -15.69650936126709

Token 538: 'ia' (ID: 535)
  Prédit: 'ia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ia' → logprob: -0.1835368275642395
    2. 'aw' → logprob: -1.8085367679595947
    3. 'a' → logprob: -6.308537006378174
    4. 'k' → logprob: -7.183537006378174
    5. 'i' → logprob: -7.683537006378174
    6. 'w' → logprob: -8.183536529541016
    7. 'awa' → logprob: -8.433536529541016
    8. 'yaw' → logprob: -10.558536529541016
    9. 'awia' → logprob: -10.933536529541016
    10. 'y' → logprob: -10.933536529541016

Token 539: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00026288547087460756
    2. 'se' → logprob: -9.125263214111328
    3. 'k' → logprob: -9.750263214111328
    4. 'aw' → logprob: -10.125263214111328
    5. '_num' → logprob: -10.625263214111328
    6. '_k' → logprob: -11.750263214111328
    7. 'ow' → logprob: -12.125263214111328
    8. 'use' → logprob: -12.875263214111328
    9. 'ose' → logprob: -13.000263214111328
    10. 'ase' → logprob: -13.250263214111328

Token 540: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.00028612653841264546
    2. 'w' → logprob: -8.750286102294922
    3. '_num' → logprob: -10.125286102294922
    4. 'se' → logprob: -10.375286102294922
    5. 'aw' → logprob: -10.500286102294922
    6. 'ose' → logprob: -11.125286102294922
    7. 'asse' → logprob: -12.500286102294922
    8. 'case' → logprob: -12.625286102294922
    9. 'num' → logprob: -13.750286102294922
    10. 's' → logprob: -14.000286102294922

Token 541: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00016086915275081992
    2. 'num' → logprob: -8.875161170959473
    3. 'k' → logprob: -12.125161170959473
    4. 'm' → logprob: -12.750161170959473
    5. 'um' → logprob: -13.375161170959473
    6. '_' → logprob: -13.500161170959473
    7. 'gu' → logprob: -14.125161170959473
    8. 's' → logprob: -14.250161170959473
    9. 'ar' → logprob: -14.500161170959473
    10. 'a' → logprob: -14.500161170959473

Token 542: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.875000953674316
    3. 'M' → logprob: -15.125000953674316
    4. '(K' → logprob: -19.375
    5. ' (' → logprob: -19.625
    6. '(
' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. '(N' → logprob: -21.0
    9. ' M' → logprob: -21.25
    10. '(S' → logprob: -21.375

Token 543: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'ki' → logprob: -17.375
    3. '_k' → logprob: -17.625
    4. 'user' → logprob: -18.25
    5. 'K' → logprob: -18.625
    6. 'M' → logprob: -18.875
    7. '[' → logprob: -18.875
    8. ')' → logprob: -19.0
    9. '\' → logprob: -19.125
    10. '```' → logprob: -19.375

Token 544: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -8.864272967912257e-05
    2. '_' → logprob: -9.375088691711426
    3. 'ки' → logprob: -14.625088691711426
    4. 'k' → logprob: -14.625088691711426
    5. ' ki' → logprob: -14.875088691711426
    6. '```' → logprob: -14.875088691711426
    7. 'ku' → logprob: -15.000088691711426
    8. 'iki' → logprob: -15.125088691711426
    9. 'Ki' → logprob: -15.250088691711426
    10. 'M' → logprob: -15.375088691711426

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ' ,' → logprob: -11.875007629394531
    3. '2' → logprob: -16.50000762939453
    4. '(' → logprob: -17.50000762939453
    5. '1' → logprob: -17.62500762939453
    6. '，' → logprob: -18.25000762939453
    7. ')' → logprob: -18.50000762939453
    8. '```' → logprob: -19.12500762939453
    9. ' ' → logprob: -19.62500762939453
    10. '   ' → logprob: -20.12500762939453

Token 546: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.000015258789062
    4. '２' → logprob: -19.375015258789062
    5. '```' → logprob: -19.375015258789062
    6. ')' → logprob: -19.875015258789062
    7. '  ' → logprob: -20.250015258789062
    8. '۲' → logprob: -20.375015258789062
    9. '(' → logprob: -20.750015258789062
    10. '
' → logprob: -21.250015258789062

Token 547: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -20.5
    4. '２' → logprob: -20.625
    5. '```' → logprob: -22.125
    6. '۲' → logprob: -22.375
    7. '
' → logprob: -24.125
    8. ')' → logprob: -24.125
    9. '  ' → logprob: -24.375
    10. '(' → logprob: -24.625

Token 548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -16.6250057220459
    4. ')

' → logprob: -17.1250057220459
    5. ')#' → logprob: -18.7500057220459
    6. '）' → logprob: -19.1250057220459
    7. '#' → logprob: -19.2500057220459
    8. '))' → logprob: -19.7500057220459
    9. ')return' → logprob: -19.8750057220459
    10. ')
' → logprob: -20.0000057220459

Token 549: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3885944187641144
    2. 'print' → logprob: -1.138594388961792
    3. 'total' → logprob: -6.763594627380371
    4. '#' → logprob: -8.013594627380371
    5. 'res' → logprob: -9.138594627380371
    6. 'sum' → logprob: -10.138594627380371
    7. 'answer' → logprob: -10.388594627380371
    8. 's' → logprob: -10.513594627380371
    9. 'rés' → logprob: -12.138594627380371
    10. 'nombre' → logprob: -12.263594627380371

Token 550: ' Aff' (ID: 13741)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18393757939338684
    2. '#' → logprob: -2.1839375495910645
    3. 'print' → logprob: -3.1839375495910645
    4. 'total' → logprob: -4.8089375495910645
    5. 'answer' → logprob: -5.9339375495910645
    6. 'res' → logprob: -6.5589375495910645
    7. 'ans' → logprob: -7.1839375495910645
    8. 's' → logprob: -7.8089375495910645
    9. 'rés' → logprob: -8.808938026428223
    10. 'sum' → logprob: -9.183938026428223

Token 551: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.43541303277015686
    2. 'ichage' → logprob: -1.1854130029678345
    3. 'ich' → logprob: -3.560413122177124
    4. 'iche' → logprob: -4.435412883758545
    5. '#' → logprob: -5.060412883758545
    6. 'ic' → logprob: -7.935412883758545
    7. 'print' → logprob: -8.685413360595703
    8. 'ichier' → logprob: -9.435413360595703
    9. 'cher' → logprob: -10.185413360595703
    10. '   ' → logprob: -10.685413360595703

Token 552: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '(print' → logprob: -14.250001907348633
    3. 'gu' → logprob: -14.500001907348633
    4. ' print' → logprob: -15.875001907348633
    5. '(' → logprob: -17.000001907348633
    6. 'result' → logprob: -17.125001907348633
    7. 'prin' → logprob: -17.250001907348633
    8. '```' → logprob: -17.750001907348633
    9. 'pr' → logprob: -18.625001907348633
    10. '#print' → logprob: -21.125001907348633

Token 553: ' résultat' (ID: 62556)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.10127167403697968
    2. 'print' → logprob: -2.351271629333496
    3. 'result' → logprob: -6.851271629333496
    4. 'res' → logprob: -14.226271629333496
    5. ' gu' → logprob: -14.351271629333496
    6. 'su' → logprob: -14.476271629333496
    7. 'total' → logprob: -14.476271629333496
    8. 'output' → logprob: -14.476271629333496
    9. 'gr' → logprob: -14.726271629333496
    10. 'resultado' → logprob: -14.851271629333496

Token 554: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' print' → logprob: -17.625
    4. '(print' → logprob: -20.375
    5. 'prin' → logprob: -21.0
    6. 'result' → logprob: -21.375
    7. '
' → logprob: -21.5
    8. '``' → logprob: -22.375
    9. 'pr' → logprob: -22.75
    10. 'prit' → logprob: -23.875

Token 555: ' est' (ID: 893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.652858555316925
    2. ' print' → logprob: -0.902858555316925
    3. ' =' → logprob: -3.1528584957122803
    4. '=' → logprob: -4.777858734130859
    5. ' s' → logprob: -4.902858734130859
    6. 's' → logprob: -5.152858734130859
    7. ' correspond' → logprob: -5.652858734130859
    8. ' total' → logprob: -6.527858734130859
    9. ' est' → logprob: -7.152858734130859
    10. ' affiche' → logprob: -7.277858734130859

Token 556: ' la' (ID: 557)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gu' → logprob: -1.9027791495318525e-05
    2. ' gu' → logprob: -10.875019073486328
    3. '_gu' → logprob: -18.500019073486328
    4. 'go' → logprob: -20.000019073486328
    5. 'Gu' → logprob: -20.000019073486328
    6. ' ' → logprob: -20.250019073486328
    7. 'gr' → logprob: -20.250019073486328
    8. 'g' → logprob: -20.875019073486328
    9. '```' → logprob: -20.875019073486328
    10. 'ug' → logprob: -21.250019073486328

Token 557: ' somme' (ID: 64484)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gu' → logprob: -1.4974866644479334e-05
    2. ' gu' → logprob: -11.125015258789062
    3. 'go' → logprob: -17.250015258789062
    4. 'gr' → logprob: -17.375015258789062
    5. 'print' → logprob: -17.750015258789062
    6. '_gu' → logprob: -17.750015258789062
    7. 'gl' → logprob: -17.875015258789062
    8. 'Gu' → logprob: -18.250015258789062
    9. '-gu' → logprob: -18.750015258789062
    10. 'qu' → logprob: -19.125015258789062

Token 558: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06213707849383354
    2. 'gu' → logprob: -2.8121371269226074
    3. 'print' → logprob: -8.81213665008545
    4. 'de' → logprob: -11.31213665008545
    5. 'of' → logprob: -12.81213665008545
    6. ' (' → logprob: -13.31213665008545
    7. '_gu' → logprob: -14.31213665008545
    8. '(
' → logprob: -14.43713665008545
    9. ' gu' → logprob: -14.68713665008545
    10. '(de' → logprob: -14.93713665008545

Token 559: ' deux' (ID: 10301)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gu' → logprob: -5.860340752406046e-05
    2. ' gu' → logprob: -9.7500581741333
    3. 'go' → logprob: -17.000059127807617
    4. 'de' → logprob: -17.375059127807617
    5. 'gr' → logprob: -17.375059127807617
    6. '```' → logprob: -17.500059127807617
    7. '_gu' → logprob: -17.875059127807617
    8. 'gl' → logprob: -18.250059127807617
    9. 'Gu' → logprob: -18.750059127807617
    10. 'gua' → logprob: -18.875059127807617

Token 560: ' possibilités' (ID: 119756)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011262869229540229
    2. 'result' → logprob: -7.376126289367676
    3. 'prints' → logprob: -9.126126289367676
    4. 'gu' → logprob: -9.251126289367676
    5. ' print' → logprob: -9.376126289367676
    6. 'nombre' → logprob: -9.626126289367676
    7. 'com' → logprob: -11.126126289367676
    8. 'comb' → logprob: -11.126126289367676
    9. 'poss' → logprob: -11.376126289367676
    10. 'printf' → logprob: -11.501126289367676

Token 561: ' ci' (ID: 7405)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.75
    3. ' print' → logprob: -16.875
    4. '
' → logprob: -17.75
    5. '(print' → logprob: -19.75
    6. '``' → logprob: -21.625
    7. '(' → logprob: -21.875
    8. '
' → logprob: -22.625
    9. 'result' → logprob: -22.75
    10. 'gu' → logprob: -23.25

Token 562: '-dessus' (ID: 74812)
  Prédit: '-dessus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dessus' → logprob: -0.17285968363285065
    2. 'dess' → logprob: -1.9228596687316895
    3. '-dessous' → logprob: -4.5478596687316895
    4. 'des' → logprob: -7.6728596687316895
    5. 'd' → logprob: -7.9228596687316895
    6. ' dessus' → logprob: -8.172860145568848
    7. 's' → logprob: -8.422860145568848
    8. '-' → logprob: -8.922860145568848
    9. '_d' → logprob: -9.297860145568848
    10. 'rès' → logprob: -9.922860145568848

Token 563: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.875000953674316
    3. ' print' → logprob: -16.375
    4. '
' → logprob: -17.25
    5. '(print' → logprob: -19.375
    6. '``' → logprob: -19.625
    7. 'prin' → logprob: -22.25
    8. '#print' → logprob: -22.375
    9. 'result' → logprob: -22.375
    10. 'pr' → logprob: -22.75

Token 564: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. ' print' → logprob: -19.875
    4. 'prin' → logprob: -23.0
    5. 'result' → logprob: -23.75
    6. 'pr' → logprob: -23.75
    7. '
' → logprob: -24.0
    8. '(print' → logprob: -25.75
    9. '``' → logprob: -25.875
    10. 'prit' → logprob: -26.125

Token 565: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. ' (' → logprob: -12.125006675720215
    3. '((' → logprob: -14.500006675720215
    4. 'gu' → logprob: -14.750006675720215
    5. '(gl' → logprob: -16.8750057220459
    6. '(g' → logprob: -17.0000057220459
    7. '(f' → logprob: -17.0000057220459
    8. '(gui' → logprob: -17.0000057220459
    9. '(go' → logprob: -17.7500057220459
    10. '()' → logprob: -18.8750057220459

Token 566: 'gu' (ID: 5130)
  Prédit: 'gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gu' → logprob: 0.0
    2. ' gu' → logprob: -17.75
    3. 'go' → logprob: -18.625
    4. '(' → logprob: -18.75
    5. 'Gu' → logprob: -19.5
    6. 'gl' → logprob: -21.0
    7. '_gu' → logprob: -21.0
    8. 'g' → logprob: -21.125
    9. '```' → logprob: -21.75
    10. 'gui' → logprob: -21.75

Token 567: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.250000953674316
    3. '_ga' → logprob: -15.250000953674316
    4. 'gu' → logprob: -16.125
    5. '_gui' → logprob: -16.375
    6. '_g' → logprob: -16.5
    7. '_go' → logprob: -18.625
    8. '_guard' → logprob: -19.25
    9. '_gl' → logprob: -19.25
    10. '_ge' → logprob: -19.375

Token 568: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197004392743111
    2. '+' → logprob: -2.8119699954986572
    3. ',' → logprob: -13.811969757080078
    4. ')' → logprob: -13.936969757080078
    5. ' ,' → logprob: -15.561969757080078
    6. ' ' → logprob: -15.936969757080078
    7. ' ' → logprob: -16.561969757080078
    8. ' +
' → logprob: -17.186969757080078
    9. '+,' → logprob: -17.311969757080078
    10. ' plus' → logprob: -17.686969757080078

Token 569: ' ki' (ID: 3314)
  Prédit: 'ki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.023245595395565033
    2. ' ki' → logprob: -3.7732455730438232
    3. 'Ki' → logprob: -16.398244857788086
    4. 'kii' → logprob: -16.773244857788086
    5. ' Ki' → logprob: -17.648244857788086
    6. ' ' → logprob: -17.773244857788086
    7. 'k' → logprob: -17.898244857788086
    8. 'ky' → logprob: -18.148244857788086
    9. 'hi' → logprob: -18.523244857788086
    10. ' ' → logprob: -18.648244857788086

Token 570: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.856408536899835e-05
    2. 'ki' → logprob: -10.500028610229492
    3. ' ki' → logprob: -14.375028610229492
    4. 'Ki' → logprob: -15.750028610229492
    5. '_k' → logprob: -16.500028610229492
    6. '_i' → logprob: -17.125028610229492
    7. '_ke' → logprob: -17.750028610229492
    8. '__' → logprob: -18.000028610229492
    9. ' _' → logprob: -18.375028610229492
    10. '\' → logprob: -18.875028610229492

Token 571: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -4.9186317482963204e-05
    2. '_' → logprob: -10.500049591064453
    3. ' ki' → logprob: -11.875049591064453
    4. 'kii' → logprob: -12.250049591064453
    5. 'k' → logprob: -12.500049591064453
    6. 'ku' → logprob: -13.750049591064453
    7. 'ки' → logprob: -14.250049591064453
    8. 'Ki' → logprob: -14.625049591064453
    9. 'ko' → logprob: -14.875049591064453
    10. 'kin' → logprob: -15.000049591064453

Token 572: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -18.0
    4. '))' → logprob: -18.125
    5. '")' → logprob: -20.0
    6. '())' → logprob: -20.25
    7. ')`' → logprob: -20.75
    8. '）' → logprob: -20.875
    9. ')}' → logprob: -21.0
    10. '),' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 570
Tokens correctement prédits (1ère position, stricte): 203
Tokens correctement prédits (1ère position, avec adaptation): 215
Tokens correctement prédits (top 10): 408
Précision stricte (1ère position): 35.61%
Précision adaptée (1ère position): 37.72%
Précision (top 10): 71.58%
================================================================================
