================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Main function to read input, process the array according to the specified logic, 
    and print the required output.
    """
    # Read the number of elements in the array
    N = int(input())
    # Read the N integers as a list
    *A, = map(int, input().split())
    
    # Compute the list of absolute values of the elements in A
    aA = [abs(a) for a in A]
    # Calculate the sum of absolute values
    asum = sum(aA)
    # Count how many elements in A are negative
    c = sum([(a < 0) for a in A])

    # If the count of negative numbers is odd,
    # subtract twice the smallest absolute value from the sum to make the minimal sum
    if c % 2:
        print(asum - min(aA) * 2)
    # If the count of negative numbers is even,
    # the minimal sum is just the sum of absolute values
    else:
        print(asum)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2555811405181885
    2. '   ' → logprob: -2.5055811405181885
    3. '\n' → logprob: -2.6305811405181885
    4. '(' → logprob: -3.6305811405181885
    5. ''' → logprob: -4.630580902099609
    6. '```' → logprob: -4.880580902099609
    7. '    
' → logprob: -5.130580902099609
    8. ':' → logprob: -5.380580902099609
    9. ' ' → logprob: -5.755580902099609
    10. '    ' → logprob: -5.880580902099609

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.395706057548523
    2. 'Initialize' → logprob: -1.770706057548523
    3. '"""' → logprob: -1.895706057548523
    4. 'This' → logprob: -2.1457061767578125
    5. 'Run' → logprob: -3.3957061767578125
    6. 'Returns' → logprob: -3.5207061767578125
    7. 'Initial' → logprob: -3.6457061767578125
    8. 'Parse' → logprob: -4.0207061767578125
    9. 'Runs' → logprob: -4.0207061767578125
    10. 'Start' → logprob: -4.2707061767578125

Token 6: ' Main' (ID: 7956)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.2824064493179321
    2. 'This' → logprob: -1.9074064493179321
    3. 'Calculate' → logprob: -1.9074064493179321
    4. 'Initialize' → logprob: -2.0324063301086426
    5. 'Initial' → logprob: -3.0324063301086426
    6. '"""' → logprob: -3.1574063301086426
    7. 'Print' → logprob: -3.5324063301086426
    8. 'Start' → logprob: -4.157406330108643
    9. '   ' → logprob: -4.157406330108643
    10. 'Process' → logprob: -4.282406330108643

Token 7: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08592316508293152
    2. '   ' → logprob: -3.085923194885254
    3. ' ' → logprob: -4.335923194885254
    4. ' function' → logprob: -4.335923194885254
    5. '()' → logprob: -5.960923194885254
    6. ')' → logprob: -6.335923194885254
    7. ' code' → logprob: -6.460923194885254
    8. '```' → logprob: -6.585923194885254
    9. '():' → logprob: -7.835923194885254
    10. '_function' → logprob: -7.835923194885254

Token 8: ' to' (ID: 316)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.36277276277542114
    2. '   ' → logprob: -1.4877727031707764
    3. '"""' → logprob: -3.6127727031707764
    4. '()' → logprob: -4.3627729415893555
    5. ' to' → logprob: -4.9877729415893555
    6. 'def' → logprob: -5.1127729415893555
    7. ')' → logprob: -5.4877729415893555
    8. '\n' → logprob: -5.7377729415893555
    9. '.' → logprob: -5.7377729415893555
    10. '``' → logprob: -5.8627729415893555

Token 9: ' read' (ID: 1729)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.1721746176481247
    2. ' start' → logprob: -2.9221746921539307
    3. 'run' → logprob: -3.6721746921539307
    4. ' execute' → logprob: -3.7971746921539307
    5. 'start' → logprob: -4.047174453735352
    6. ' process' → logprob: -4.797174453735352
    7. ' initialize' → logprob: -4.797174453735352
    8. ' handle' → logprob: -5.672174453735352
    9. ' perform' → logprob: -5.672174453735352
    10. '   ' → logprob: -5.672174453735352

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5610500574111938
    2. ' the' → logprob: -1.4360500574111938
    3. 'input' → logprob: -2.8110499382019043
    4. ' and' → logprob: -3.1860499382019043
    5. ' a' → logprob: -3.4360499382019043
    6. '   ' → logprob: -4.311049938201904
    7. ' data' → logprob: -4.561049938201904
    8. ' file' → logprob: -4.561049938201904
    9. ' )' → logprob: -5.686049938201904
    10. 'the' → logprob: -5.686049938201904

Token 11: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10595380514860153
    2. ',' → logprob: -3.2309536933898926
    3. ' and' → logprob: -3.6059536933898926
    4. '```' → logprob: -3.8559536933898926
    5. '(' → logprob: -5.730953693389893
    6. '    ' → logprob: -5.980953693389893
    7. 's' → logprob: -6.480953693389893
    8. '       ' → logprob: -7.355953693389893
    9. '()' → logprob: -7.480953693389893
    10. ')' → logprob: -7.480953693389893

Token 12: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.014520736411213875
    2. ' parse' → logprob: -4.639520645141602
    3. 'process' → logprob: -5.639520645141602
    4. ' pass' → logprob: -8.264520645141602
    5. ' tokenize' → logprob: -8.639520645141602
    6. '   ' → logprob: -8.764520645141602
    7. ' run' → logprob: -9.014520645141602
    8. '    ' → logprob: -9.514520645141602
    9. ' and' → logprob: -9.764520645141602
    10. 'parse' → logprob: -9.889520645141602

Token 13: ' the' (ID: 290)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7666224837303162
    2. '   ' → logprob: -1.391622543334961
    3. ',' → logprob: -1.891622543334961
    4. '_' → logprob: -2.516622543334961
    5. 's' → logprob: -4.641622543334961
    6. ' input' → logprob: -5.391622543334961
    7. ' ' → logprob: -5.516622543334961
    8. '()' → logprob: -5.516622543334961
    9. '    ' → logprob: -5.641622543334961
    10. ' ,' → logprob: -5.766622543334961

Token 14: ' array' (ID: 2644)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.7144348621368408
    2. ' input' → logprob: -0.9644348621368408
    3. 'data' → logprob: -2.839434862136841
    4. ' text' → logprob: -3.589434862136841
    5. 'input' → logprob: -3.964434862136841
    6. ' code' → logprob: -4.714434623718262
    7. ' string' → logprob: -5.339434623718262
    8. 'text' → logprob: -6.089434623718262
    9. '   ' → logprob: -6.339434623718262
    10. 'string' → logprob: -6.589434623718262

Token 15: ' according' (ID: 7065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14424557983875275
    2. '```' → logprob: -2.2692456245422363
    3. ',' → logprob: -3.6442456245422363
    4. ' and' → logprob: -5.894245624542236
    5. '`' → logprob: -7.019245624542236
    6. '``' → logprob: -7.894245624542236
    7. 'and' → logprob: -8.144245147705078
    8. ')' → logprob: -9.519245147705078
    9. '       ' → logprob: -10.019245147705078
    10. '.' → logprob: -10.269245147705078

Token 16: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13020287454128265
    2. 'to' → logprob: -2.6302027702331543
    3. ' ' → logprob: -3.5052027702331543
    4. '_to' → logprob: -5.880202770233154
    5. '   ' → logprob: -6.005202770233154
    6. '(' → logprob: -6.005202770233154
    7. '```' → logprob: -6.005202770233154
    8. '  ' → logprob: -6.130202770233154
    9. ' and' → logprob: -6.630202770233154
    10. ''' → logprob: -6.630202770233154

Token 17: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07899884134531021
    2. 'the' → logprob: -2.7039988040924072
    3. ' given' → logprob: -5.578999042510986
    4. ' a' → logprob: -6.578999042510986
    5. '   ' → logprob: -7.203999042510986
    6. '`' → logprob: -7.453999042510986
    7. '```' → logprob: -7.578999042510986
    8. '"' → logprob: -7.953999042510986
    9. '``' → logprob: -8.703998565673828
    10. ''' → logprob: -8.828998565673828

Token 18: ' specified' (ID: 10185)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.06623660773038864
    2. ' task' → logprob: -3.8162364959716797
    3. ' given' → logprob: -3.9412364959716797
    4. 'problem' → logprob: -4.19123649597168
    5. ' logic' → logprob: -5.69123649597168
    6. ' instructions' → logprob: -7.31623649597168
    7. ' requirements' → logprob: -7.44123649597168
    8. 'task' → logprob: -7.81623649597168
    9. ' specification' → logprob: -7.94123649597168
    10. ' specified' → logprob: -8.19123649597168

Token 19: ' logic' (ID: 18485)
  Prédit: ' logic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logic' → logprob: -0.13927088677883148
    2. ' operations' → logprob: -3.639270782470703
    3. ' and' → logprob: -3.889270782470703
    4. ' task' → logprob: -3.889270782470703
    5. ' problem' → logprob: -4.139270782470703
    6. ' steps' → logprob: -4.764270782470703
    7. ' operation' → logprob: -5.389270782470703
    8. ' instructions' → logprob: -5.514270782470703
    9. ' criteria' → logprob: -5.639270782470703
    10. ' strategy' → logprob: -5.764270782470703

Token 20: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1097964346408844
    2. ',' → logprob: -2.8597965240478516
    3. '```' → logprob: -3.1097965240478516
    4. '``' → logprob: -7.484796524047852
    5. ',
' → logprob: -7.984796524047852
    6. '"""
' → logprob: -8.359796524047852
    7. ' and' → logprob: -8.359796524047852
    8. '
' → logprob: -8.484796524047852
    9. '`' → logprob: -8.859796524047852
    10. '    
' → logprob: -9.234796524047852

Token 21: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03973288834095001
    2. '```' → logprob: -4.289732933044434
    3. ' and' → logprob: -4.414732933044434
    4. '    ' → logprob: -5.289732933044434
    5. '\n' → logprob: -5.914732933044434
    6. '\' → logprob: -6.414732933044434
    7. '``' → logprob: -7.039732933044434
    8. '
' → logprob: -7.289732933044434
    9. '`' → logprob: -7.414732933044434
    10. '"""
' → logprob: -7.539732933044434

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09681562334299088
    2. ' and' → logprob: -2.471815586090088
    3. 'and' → logprob: -5.221815586090088
    4. '    ' → logprob: -6.971815586090088
    5. '       ' → logprob: -7.346815586090088
    6. '```' → logprob: -8.221816062927246
    7. 'def' → logprob: -9.346816062927246
    8. '"""' → logprob: -9.471816062927246
    9. '\' → logprob: -9.596816062927246
    10. '"""
' → logprob: -9.846816062927246

Token 23: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3806004822254181
    2. ' and' → logprob: -1.3806004524230957
    3. 'and' (adapté à ' and') → logprob: -2.7556004524230957
    4. '    ' → logprob: -7.380600452423096
    5. 'return' → logprob: -8.505600929260254
    6. ' process' → logprob: -8.755600929260254
    7. '       ' → logprob: -9.255600929260254
    8. 'process' → logprob: -9.380600929260254
    9. '```' → logprob: -9.505600929260254
    10. 'def' → logprob: -9.755600929260254

Token 24: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14686167240142822
    2. ' print' → logprob: -2.8968615531921387
    3. ' output' → logprob: -3.0218615531921387
    4. '   ' → logprob: -4.021861553192139
    5. 'return' → logprob: -4.521861553192139
    6. ' produce' → logprob: -6.021861553192139
    7. ' write' → logprob: -7.646861553192139
    8. 'print' → logprob: -8.271862030029297
    9. 'output' → logprob: -8.396862030029297
    10. ' provide' → logprob: -8.396862030029297

Token 25: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1114470958709717
    2. '(' → logprob: -1.2364470958709717
    3. '()' → logprob: -1.7364470958709717
    4. 's' → logprob: -2.3614470958709717
    5. 'the' → logprob: -2.7364470958709717
    6. '   ' → logprob: -3.7364470958709717
    7. '```' → logprob: -4.736447334289551
    8. ' it' → logprob: -6.111447334289551
    9. '("' → logprob: -6.486447334289551
    10. '(
' → logprob: -6.611447334289551

Token 26: ' required' (ID: 3759)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3957624137401581
    2. ' results' → logprob: -1.3957624435424805
    3. 'result' → logprob: -3.6457624435424805
    4. ' output' → logprob: -3.8957624435424805
    5. ' maximum' → logprob: -4.8957624435424805
    6. ' processed' → logprob: -5.0207624435424805
    7. 'results' → logprob: -5.1457624435424805
    8. ' rest' → logprob: -6.0207624435424805
    9. ' array' → logprob: -6.3957624435424805
    10. ' final' → logprob: -6.5207624435424805

Token 27: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.1336023807525635
    2. ' output' → logprob: -1.2586023807525635
    3. ' result' → logprob: -1.3836023807525635
    4. 'result' → logprob: -2.0086023807525635
    5. ' results' → logprob: -5.383602142333984
    6. 'results' → logprob: -6.258602142333984
    7. ' outputs' → logprob: -7.008602142333984
    8. 'outputs' → logprob: -7.383602142333984
    9. ' elements' → logprob: -8.758602142333984
    10. '_output' → logprob: -8.883602142333984

Token 28: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054055582731962204
    2. '"""' → logprob: -3.304055690765381
    3. '```' → logprob: -4.554055690765381
    4. '"""
' → logprob: -6.054055690765381
    5. '"' → logprob: -6.679055690765381
    6. '\n' → logprob: -7.554055690765381
    7. '""' → logprob: -8.179055213928223
    8. '    
' → logprob: -8.554055213928223
    9. '
' → logprob: -8.679055213928223
    10. '`' → logprob: -8.929055213928223

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022512832656502724
    2. '"""' → logprob: -3.897512912750244
    3. '```' → logprob: -6.897512912750244
    4. '"""
' → logprob: -7.522512912750244
    5. '"' → logprob: -8.522512435913086
    6. '`' → logprob: -9.147512435913086
    7. '    ' → logprob: -10.022512435913086
    8. '""' → logprob: -10.897512435913086
    9. ' """' → logprob: -11.647512435913086
    10. '``' → logprob: -12.272512435913086

Token 30: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08418700098991394
    2. '"""' → logprob: -2.8341870307922363
    3. '```' → logprob: -3.9591870307922363
    4. '\n' → logprob: -7.209187030792236
    5. ')' → logprob: -7.459187030792236
    6. '"""
' (adapté à ' """
') → logprob: -7.959187030792236
    7. '
' → logprob: -8.084186553955078
    8. '"' → logprob: -8.334186553955078
    9. 'n' → logprob: -8.959186553955078
    10. '`' → logprob: -9.084186553955078

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029752030968666077
    2. 'n' → logprob: -6.627974987030029
    3. '    
' → logprob: -7.252974987030029
    4. '\n' → logprob: -8.252975463867188
    5. '
' → logprob: -8.502975463867188
    6. '    ' → logprob: -8.627975463867188
    7. '```' → logprob: -9.502975463867188
    8. '\' → logprob: -9.627975463867188
    9. 'newline' → logprob: -10.127975463867188
    10. 'import' → logprob: -10.252975463867188

Token 32: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21441581845283508
    2. 'n' → logprob: -1.7144157886505127
    3. ' n' → logprob: -5.214416027069092
    4. 'import' → logprob: -6.339416027069092
    5. 'input' → logprob: -6.589416027069092
    6. 'a' → logprob: -6.964416027069092
    7. 'array' → logprob: -7.214416027069092
    8. '    ' → logprob: -8.214415550231934
    9. ' input' → logprob: -8.464415550231934
    10. 'try' → logprob: -8.839415550231934

Token 33: ' Read' (ID: 5405)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7188213467597961
    2. 'n' → logprob: -0.8438213467597961
    3. '   ' → logprob: -2.7188212871551514
    4. ' input' → logprob: -5.3438215255737305
    5. 'input' → logprob: -5.7188215255737305
    6. 'arr' → logprob: -6.0938215255737305
    7. ' arr' → logprob: -6.0938215255737305
    8. 'array' → logprob: -7.7188215255737305
    9. 'import' → logprob: -7.8438215255737305
    10. 'data' → logprob: -7.8438215255737305

Token 34: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7461154460906982
    2. 'input' → logprob: -1.1211154460906982
    3. 'n' → logprob: -2.6211154460906982
    4. ' n' → logprob: -2.9961154460906982
    5. ' array' → logprob: -3.6211154460906982
    6. '   ' → logprob: -4.371115684509277
    7. ' user' → logprob: -4.871115684509277
    8. ' line' → logprob: -4.996115684509277
    9. 'array' → logprob: -4.996115684509277
    10. ' the' → logprob: -5.871115684509277

Token 35: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3506510257720947
    2. ' n' → logprob: -1.7256510257720947
    3. ' number' → logprob: -2.3506510257720947
    4. ' ' → logprob: -4.475650787353516
    5. ' size' → logprob: -5.725650787353516
    6. ' array' → logprob: -6.100650787353516
    7. 'number' → logprob: -6.100650787353516
    8. ' input' → logprob: -6.350650787353516
    9. '   ' → logprob: -8.475650787353516
    10. ' length' → logprob: -8.725650787353516

Token 36: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.038117527961731
    2. ' ' → logprob: -1.038117527961731
    3. 's' → logprob: -1.288117527961731
    4. '   ' → logprob: -4.788117408752441
    5. '  ' → logprob: -5.538117408752441
    6. ')' → logprob: -7.288117408752441
    7. ' =' → logprob: -8.163117408752441
    8. '=' → logprob: -8.413117408752441
    9. ' of' → logprob: -8.538117408752441
    10. '_token' → logprob: -8.538117408752441

Token 37: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.16978242993354797
    2. ' ' → logprob: -1.9197824001312256
    3. 'elements' → logprob: -5.169782638549805
    4. ' test' → logprob: -6.044782638549805
    5. ' items' → logprob: -7.294782638549805
    6. ' integers' → logprob: -8.544782638549805
    7. ' n' → logprob: -8.919782638549805
    8. ' spaces' → logprob: -9.044782638549805
    9. ' students' → logprob: -9.794782638549805
    10. ' inputs' → logprob: -10.294782638549805

Token 38: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08155546337366104
    2. '   ' → logprob: -2.5815553665161133
    3. ' n' → logprob: -6.081555366516113
    4. '(n' → logprob: -8.956555366516113
    5. '```' → logprob: -8.956555366516113
    6. '	n' → logprob: -10.581555366516113
    7. '\n' → logprob: -11.081555366516113
    8. '    
' → logprob: -11.206555366516113
    9. ' ' → logprob: -11.581555366516113
    10. '_n' → logprob: -11.831555366516113

Token 39: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.024612855166196823
    2. ' array' → logprob: -4.399612903594971
    3. 'the' → logprob: -4.524612903594971
    4. ' n' → logprob: -8.274612426757812
    5. ' an' → logprob: -8.274612426757812
    6. 'array' → logprob: -8.274612426757812
    7. 'n' → logprob: -8.524612426757812
    8. 'arr' → logprob: -9.274612426757812
    9. ' a' → logprob: -10.274612426757812
    10. ' arr' → logprob: -10.399612426757812

Token 40: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.009105646051466465
    2. 'array' → logprob: -4.759105682373047
    3. ' input' → logprob: -7.884105682373047
    4. 'arr' → logprob: -9.634105682373047
    5. ' arr' → logprob: -10.759105682373047
    6. 'input' → logprob: -11.009105682373047
    7. ' list' → logprob: -12.134105682373047
    8. ' ' → logprob: -12.759105682373047
    9. ' arrays' → logprob: -13.509105682373047
    10. ' data' → logprob: -14.759105682373047

Token 41: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3019683063030243
    2. '   ' → logprob: -1.4269683361053467
    3. '\n' → logprob: -4.176968097686768
    4. '
' → logprob: -6.176968097686768
    5. '    
' → logprob: -6.301968097686768
    6. ' n' → logprob: -7.426968097686768
    7. '```' → logprob: -7.676968097686768
    8. '\' → logprob: -9.176968574523926
    9. '	n' → logprob: -9.801968574523926
    10. '  
' → logprob: -10.801968574523926

Token 42: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.400266170501709
    2. '   ' → logprob: -1.150266170501709
    3. ' n' → logprob: -4.400266170501709
    4. '```' → logprob: -7.650266170501709
    5. '\n' → logprob: -7.900266170501709
    6. '    
' → logprob: -9.650266647338867
    7. '\' → logprob: -10.025266647338867
    8. '	n' → logprob: -10.525266647338867
    9. '
' → logprob: -10.900266647338867
    10. '`' → logprob: -11.900266647338867

Token 43: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759632587432861
    2. 'n' → logprob: -0.8259632587432861
    3. '   ' → logprob: -10.950963020324707
    4. '	n' → logprob: -13.450963020324707
    5. '```' → logprob: -13.950963020324707
    6. ' ' → logprob: -14.325963020324707
    7. ' N' → logprob: -14.450963020324707
    8. 'num' → logprob: -14.575963020324707
    9. 'N' (adapté à ' N') → logprob: -15.075963020324707
    10. '    ' → logprob: -15.075963020324707

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017043406842276454
    2. '=' → logprob: -6.376704216003418
    3. ' =
' → logprob: -13.876704216003418
    4. ' ' → logprob: -14.501704216003418
    5. '   ' → logprob: -15.501704216003418
    6. ')' → logprob: -15.626704216003418
    7. ',' → logprob: -16.001705169677734
    8. '  ' → logprob: -16.751705169677734
    9. '=int' → logprob: -16.876705169677734
    10. ' =)' → logprob: -17.001705169677734

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.001034714630804956
    2. 'int' → logprob: -6.876034736633301
    3. ' ' → logprob: -13.7510347366333
    4. ' input' → logprob: -14.6260347366333
    5. '=int' → logprob: -15.1260347366333
    6. ' ' → logprob: -16.376033782958984
    7. '[int' → logprob: -17.501033782958984
    8. ' in' → logprob: -17.626033782958984
    9. '	int' → logprob: -18.001033782958984
    10. '<int' → logprob: -18.251033782958984

Token 46: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10023632645606995
    2. '(' → logprob: -2.350236415863037
    3. 'input' → logprob: -10.475235939025879
    4. '(
' → logprob: -14.475235939025879
    5. ' (' → logprob: -15.100235939025879
    6. ' input' → logprob: -15.600235939025879
    7. '()' → logprob: -16.475236892700195
    8. '('' → logprob: -16.600236892700195
    9. '=input' → logprob: -16.600236892700195
    10. '(int' → logprob: -16.725236892700195

Token 47: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10035645216703415
    2. '()' → logprob: -2.350356340408325
    3. ')' → logprob: -9.350356101989746
    4. '(' → logprob: -10.475356101989746
    5. '()))' → logprob: -10.850356101989746
    6. ' ())' → logprob: -12.475356101989746
    7. '().' → logprob: -12.600356101989746
    8. '();)' → logprob: -13.100356101989746
    9. '()>' → logprob: -13.600356101989746
    10. '()),' → logprob: -13.850356101989746

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18559874594211578
    2. '
' → logprob: -2.185598850250244
    3. '    
' → logprob: -3.560598850250244
    4. '```' → logprob: -4.060598850250244
    5. '\n' → logprob: -6.060598850250244
    6. 'array' → logprob: -6.310598850250244
    7. ')' → logprob: -6.560598850250244
    8. 'n' → logprob: -6.935598850250244
    9. '\' → logprob: -6.935598850250244
    10. 'a' → logprob: -7.560598850250244

Token 49: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19621090590953827
    2. '   ' → logprob: -2.9462108612060547
    3. '\n' → logprob: -3.1962108612060547
    4. 'array' → logprob: -4.071210861206055
    5. '```' → logprob: -4.071210861206055
    6. '    
' → logprob: -4.321210861206055
    7. ')' → logprob: -4.821210861206055
    8. 'n' → logprob: -5.196210861206055
    9. '\' → logprob: -5.446210861206055
    10. 'arr' → logprob: -5.571210861206055

Token 50: ' Read' (ID: 5405)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.2112283557653427
    2. 'arr' → logprob: -1.711228370666504
    3. 'a' → logprob: -6.086228370666504
    4. ' array' → logprob: -6.086228370666504
    5. ' a' → logprob: -6.586228370666504
    6. 'array' → logprob: -7.461228370666504
    7. ' A' → logprob: -7.461228370666504
    8. ' lst' → logprob: -7.586228370666504
    9. ' elements' → logprob: -7.836228370666504
    10. '#' → logprob: -8.086228370666504

Token 51: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8215156197547913
    2. '()' → logprob: -1.0715155601501465
    3. ' the' → logprob: -1.6965155601501465
    4. 'the' → logprob: -3.9465155601501465
    5. ' array' → logprob: -4.9465155601501465
    6. ' a' → logprob: -5.5715155601501465
    7. 'array' → logprob: -7.1965155601501465
    8. ' ' → logprob: -7.1965155601501465
    9. 'a' → logprob: -7.5715155601501465
    10. 'arr' → logprob: -7.9465155601501465

Token 52: ' N' (ID: 478)
  Prédit: ' array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.021609807386994362
    2. 'arr' → logprob: -4.771609783172607
    3. 'array' → logprob: -4.771609783172607
    4. ' arr' → logprob: -6.021609783172607
    5. ' elements' → logprob: -6.646609783172607
    6. ' list' → logprob: -9.021610260009766
    7. ' input' → logprob: -9.146610260009766
    8. '_array' → logprob: -9.646610260009766
    9. ' ' → logprob: -9.771610260009766
    10. 'arra' → logprob: -9.771610260009766

Token 53: ' integers' (ID: 54912)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.49700963497161865
    2. ' array' → logprob: -1.4970096349716187
    3. '_elements' → logprob: -2.997009754180908
    4. 'elements' → logprob: -3.247009754180908
    5. '()' → logprob: -3.747009754180908
    6. 'array' → logprob: -3.997009754180908
    7. '_array' → logprob: -4.622009754180908
    8. 'arr' → logprob: -4.872009754180908
    9. '_values' → logprob: -5.122009754180908
    10. ' values' → logprob: -5.997009754180908

Token 54: ' as' (ID: 472)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33912786841392517
    2. 'arr' → logprob: -1.4641278982162476
    3. '(' → logprob: -3.839127779006958
    4. '(arr' → logprob: -4.589128017425537
    5. 'a' → logprob: -4.964128017425537
    6. ' arr' → logprob: -4.964128017425537
    7. ' array' → logprob: -5.964128017425537
    8. '   ' → logprob: -6.214128017425537
    9. 'numbers' → logprob: -6.964128017425537
    10. 'array' → logprob: -7.464128017425537

Token 55: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.058267686516046524
    2. ' list' → logprob: -3.308267593383789
    3. 'arr' → logprob: -5.433267593383789
    4. 'a' → logprob: -5.433267593383789
    5. ' arr' → logprob: -5.808267593383789
    6. ' array' → logprob: -5.933267593383789
    7. 'list' → logprob: -6.183267593383789
    8. ' an' → logprob: -6.433267593383789
    9. ' input' → logprob: -7.183267593383789
    10. ' the' → logprob: -7.183267593383789

Token 56: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0670335665345192
    2. 'rray' → logprob: -3.442033529281616
    3. 'list' → logprob: -3.567033529281616
    4. 'n' → logprob: -5.942033767700195
    5. 'lst' → logprob: -7.192033767700195
    6. 'rr' → logprob: -7.567033767700195
    7. '_list' → logprob: -8.067033767700195
    8. ' single' → logprob: -9.067033767700195
    9. 'List' → logprob: -9.942033767700195
    10. ' ' → logprob: -9.942033767700195

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6525238156318665
    2. 'arr' → logprob: -0.9025238156318665
    3. ' arr' → logprob: -3.5275237560272217
    4. 'a' → logprob: -3.5275237560272217
    5. '(arr' → logprob: -5.402523994445801
    6. ' array' → logprob: -5.902523994445801
    7. ' a' → logprob: -6.277523994445801
    8. 'A' → logprob: -6.777523994445801
    9. 'array' → logprob: -6.777523994445801
    10. ' A' → logprob: -7.777523994445801

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7800759077072144
    2. 'arr' → logprob: -0.9050759077072144
    3. ' arr' → logprob: -2.155076026916504
    4. 'a' → logprob: -5.030076026916504
    5. ' array' → logprob: -5.030076026916504
    6. 'array' → logprob: -6.280076026916504
    7. ' A' → logprob: -6.280076026916504
    8. ' a' → logprob: -6.280076026916504
    9. 'A' → logprob: -7.280076026916504
    10. 'numbers' → logprob: -7.655076026916504

Token 59: ' *' (ID: 425)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.16083389520645142
    2. 'arr' → logprob: -1.9108338356018066
    3. ' array' → logprob: -7.785833835601807
    4. ' data' → logprob: -9.910834312438965
    5. ' A' → logprob: -10.410834312438965
    6. ' a' → logprob: -10.660834312438965
    7. 'A' → logprob: -10.910834312438965
    8. ' lst' → logprob: -11.035834312438965
    9. 'array' → logprob: -11.035834312438965
    10. 'data' → logprob: -11.285834312438965

Token 60: 'A' (ID: 32)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.28216230869293213
    2. ' arr' → logprob: -1.4071623086929321
    3. 'array' → logprob: -8.6571626663208
    4. 'data' → logprob: -8.7821626663208
    5. 'a' → logprob: -9.0321626663208
    6. ' array' → logprob: -9.0321626663208
    7. ' data' → logprob: -9.0321626663208
    8. ' numbers' → logprob: -9.2821626663208
    9. 'numbers' → logprob: -9.2821626663208
    10. 'A' → logprob: -9.9071626663208

Token 61: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05501091480255127
    2. '=' → logprob: -2.9300107955932617
    3. ',' → logprob: -9.555010795593262
    4. ' ' → logprob: -10.180010795593262
    5. 'A' → logprob: -12.555010795593262
    6. ' ,' → logprob: -12.805010795593262
    7. '=A' → logprob: -12.805010795593262
    8. '   ' → logprob: -13.430010795593262
    9. '=[]' → logprob: -13.680010795593262
    10. '[' → logprob: -13.805010795593262

Token 62: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22610583901405334
    2. ' =' → logprob: -1.601105809211731
    3. 'A' → logprob: -8.101105690002441
    4. '=A' → logprob: -8.851105690002441
    5. ' ' → logprob: -9.726105690002441
    6. 'input' → logprob: -10.226105690002441
    7. '=input' → logprob: -10.226105690002441
    8. ')' → logprob: -10.601105690002441
    9. ' A' → logprob: -10.726105690002441
    10. '*' → logprob: -11.476105690002441

Token 63: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.023251304402947426
    2. ' map' → logprob: -3.7732512950897217
    3. 'list' → logprob: -13.1482515335083
    4. '(map' → logprob: -13.5232515335083
    5. 'input' → logprob: -13.7732515335083
    6. '	map' → logprob: -14.3982515335083
    7. '[' → logprob: -14.7732515335083
    8. ' ' → logprob: -15.2732515335083
    9. 'int' → logprob: -15.7732515335083
    10. 'm' → logprob: -16.773250579833984

Token 64: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005971930921077728
    2. '(' → logprob: -5.130971908569336
    3. '(input' → logprob: -10.880971908569336
    4. '(str' → logprob: -11.630971908569336
    5. '<int' → logprob: -11.755971908569336
    6. '(
' → logprob: -13.005971908569336
    7. 'int' → logprob: -13.255971908569336
    8. '[int' → logprob: -14.005971908569336
    9. '(eval' → logprob: -14.255971908569336
    10. '=int' → logprob: -14.630971908569336

Token 65: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.26098835468292236
    2. '(' → logprob: -1.6359883546829224
    3. ')' → logprob: -3.635988235473633
    4. '<|end|>' → logprob: -5.010988235473633
    5. 'input' → logprob: -7.010988235473633
    6. ',input' → logprob: -7.635988235473633
    7. ',' → logprob: -9.010988235473633
    8. ' (' → logprob: -9.635988235473633
    9. '(
' → logprob: -9.635988235473633
    10. '<|end|>' → logprob: -9.760988235473633

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141859352588654
    2. ' input' → logprob: -1.7014186382293701
    3. ')' → logprob: -12.57641887664795
    4. ' ' → logprob: -14.32641887664795
    5. ',input' → logprob: -14.70141887664795
    6. '(input' → logprob: -14.82641887664795
    7. '	input' → logprob: -15.70141887664795
    8. '=input' → logprob: -16.076417922973633
    9. '_input' → logprob: -16.576417922973633
    10. ' )' → logprob: -16.701417922973633

Token 67: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002574471291154623
    2. '()' → logprob: -6.002574443817139
    3. '())' → logprob: -9.377574920654297
    4. ')' → logprob: -11.502574920654297
    5. ' ().' → logprob: -13.127574920654297
    6. '()
' → logprob: -13.877574920654297
    7. ' ()' → logprob: -15.002574920654297
    8. '(' → logprob: -15.752574920654297
    9. '().__' → logprob: -16.502574920654297
    10. ' ' → logprob: -16.877574920654297

Token 68: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001509150955826044
    2. 'strip' → logprob: -6.501509189605713
    3. 'rstrip' → logprob: -12.251508712768555
    4. 'read' → logprob: -13.376508712768555
    5. ' split' → logprob: -15.501508712768555
    6. ')' → logprob: -15.626508712768555
    7. '(split' → logprob: -17.751508712768555
    8. 'spl' → logprob: -18.001508712768555
    9. '_split' → logprob: -19.126508712768555
    10. ' ' → logprob: -19.251508712768555

Token 69: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0750298798084259
    2. ')' → logprob: -2.7000298500061035
    3. '()' → logprob: -5.3250298500061035
    4. '()))' → logprob: -9.325030326843262
    5. '))' → logprob: -9.450030326843262
    6. '(' → logprob: -10.700030326843262
    7. ' ())' → logprob: -11.700030326843262
    8. '())
' → logprob: -12.200030326843262
    9. '();)' → logprob: -13.575030326843262
    10. ' )' → logprob: -13.575030326843262

Token 70: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2730991244316101
    2. '
' → logprob: -1.5230991840362549
    3. '    
' → logprob: -4.523098945617676
    4. 'n' → logprob: -5.773098945617676
    5. '<|end|>' → logprob: -6.898098945617676
    6. '  
' → logprob: -7.148098945617676
    7. ')' → logprob: -7.398098945617676
    8. ' 
' → logprob: -7.648098945617676
    9. ' if' → logprob: -7.773098945617676
    10. '   
' → logprob: -7.773098945617676

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1863909661769867
    2. '#' → logprob: -3.3113908767700195
    3. 'count' → logprob: -3.4363908767700195
    4. 'max' → logprob: -3.5613908767700195
    5. 'result' → logprob: -3.9363908767700195
    6. 'dp' → logprob: -5.1863908767700195
    7. 'for' → logprob: -5.1863908767700195
    8. 'if' → logprob: -5.5613908767700195
    9. 's' → logprob: -6.0613908767700195
    10. 'min' → logprob: -6.0613908767700195

Token 72: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4522486925125122
    2. 'max' → logprob: -1.7022486925125122
    3. 'count' → logprob: -1.8272486925125122
    4. 'dp' → logprob: -2.4522485733032227
    5. 'res' → logprob: -3.3272485733032227
    6. 'even' → logprob: -3.4522485733032227
    7. 'if' → logprob: -3.4522485733032227
    8. '#' (adapté à ' #') → logprob: -3.5772485733032227
    9. 'for' → logprob: -3.7022485733032227
    10. 'ans' → logprob: -4.077248573303223

Token 73: ' Compute' (ID: 45438)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.552029013633728
    2. '#' → logprob: -1.802029013633728
    3. 'count' → logprob: -1.802029013633728
    4. ' max' → logprob: -2.5520291328430176
    5. 'result' → logprob: -2.9270291328430176
    6. ' count' → logprob: -3.1770291328430176
    7. ' result' → logprob: -3.3020291328430176
    8. 'for' → logprob: -3.4270291328430176
    9. 's' → logprob: -4.302029132843018
    10. 'even' → logprob: -4.427029132843018

Token 74: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0852818489074707
    2. ' max' → logprob: -1.8352818489074707
    3. ' result' → logprob: -2.5852818489074707
    4. 's' → logprob: -2.7102818489074707
    5. ' ans' → logprob: -2.7102818489074707
    6. ' s' → logprob: -2.8352818489074707
    7. 'max' → logprob: -3.4602818489074707
    8. ' total' → logprob: -3.7102818489074707
    9. 'result' → logprob: -3.9602818489074707
    10. ' count' → logprob: -4.085281848907471

Token 75: ' list' (ID: 1562)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.6226577758789062
    2. 'max' → logprob: -1.6226577758789062
    3. 'sum' → logprob: -2.4976577758789062
    4. 'result' → logprob: -2.6226577758789062
    5. ' max' → logprob: -2.7476577758789062
    6. ' sum' → logprob: -2.8726577758789062
    7. ' maximum' → logprob: -2.8726577758789062
    8. 'maximum' → logprob: -3.2476577758789062
    9. ' count' → logprob: -3.6226577758789062
    10. 'count' → logprob: -3.7476577758789062

Token 76: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9765113592147827
    2. ' of' → logprob: -1.6015113592147827
    3. '<|end|>' → logprob: -2.3515114784240723
    4. 'max' → logprob: -2.4765114784240723
    5. 'result' → logprob: -3.6015114784240723
    6. '[' → logprob: -3.6015114784240723
    7. '   ' → logprob: -3.7265114784240723
    8. '<|end|>' → logprob: -3.8515114784240723
    9. 'min' → logprob: -4.226511478424072
    10. 'of' → logprob: -4.476511478424072

Token 77: ' absolute' (ID: 17786)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dif' → logprob: -1.2415430545806885
    2. ' differences' → logprob: -1.7415430545806885
    3. 'prefix' → logprob: -2.4915430545806885
    4. ' prefix' → logprob: -2.9915430545806885
    5. ' cumulative' → logprob: -2.9915430545806885
    6. 'indices' → logprob: -3.3665430545806885
    7. ' indices' → logprob: -3.6165430545806885
    8. 'A' → logprob: -3.7415430545806885
    9. ' sums' → logprob: -4.429042816162109
    10. 'c' → logprob: -4.491542816162109

Token 78: ' values' (ID: 4824)
  Prédit: ' differences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' differences' → logprob: -0.3719211220741272
    2. 'dif' → logprob: -1.3719210624694824
    3. ' values' → logprob: -3.6219210624694824
    4. 'values' → logprob: -3.9969210624694824
    5. '(' → logprob: -4.996921062469482
    6. '<|end|>' → logprob: -6.746921062469482
    7. 's' → logprob: -7.121921062469482
    8. '_' → logprob: -7.746921062469482
    9. ' ' → logprob: -7.996921062469482
    10. '_values' → logprob: -8.12192153930664

Token 79: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6702648401260376
    2. 'abs' → logprob: -1.6702648401260376
    3. '(' → logprob: -2.295264720916748
    4. 'A' → logprob: -2.795264720916748
    5. '[' → logprob: -2.920264720916748
    6. '(abs' → logprob: -3.670264720916748
    7. 's' → logprob: -3.920264720916748
    8. ',' → logprob: -5.295264720916748
    9. ')' → logprob: -5.295264720916748
    10. ' abs' → logprob: -5.420264720916748

Token 80: ' the' (ID: 290)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029918493703007698
    2. ' A' → logprob: -3.5299184322357178
    3. ' the' → logprob: -9.154918670654297
    4. 'the' → logprob: -10.154918670654297
    5. ' each' → logprob: -12.404918670654297
    6. '	A' → logprob: -12.654918670654297
    7. 'each' → logprob: -12.779918670654297
    8. ' ' → logprob: -12.904918670654297
    9. 'a' → logprob: -13.029918670654297
    10. '(A' → logprob: -13.404918670654297

Token 81: ' elements' (ID: 8632)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14346645772457123
    2. 'elements' → logprob: -3.1434664726257324
    3. ' elements' → logprob: -3.6434664726257324
    4. 'array' → logprob: -3.8934664726257324
    5. ' array' → logprob: -4.143466472625732
    6. 'dif' → logprob: -4.518466472625732
    7. ' A' → logprob: -5.018466472625732
    8. ' differences' → logprob: -6.018466472625732
    9. 'values' → logprob: -6.143466472625732
    10. ' ' → logprob: -6.518466472625732

Token 82: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9065771102905273
    2. 'abs' → logprob: -1.1565771102905273
    3. '   ' → logprob: -1.5315771102905273
    4. ' abs' → logprob: -3.4065771102905273
    5. ' A' → logprob: -4.031577110290527
    6. 'a' → logprob: -5.156577110290527
    7. '[' → logprob: -6.406577110290527
    8. 's' → logprob: -6.656577110290527
    9. '    
' → logprob: -7.156577110290527
    10. 'absolute' → logprob: -7.281577110290527

Token 83: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31329867243766785
    2. 'A' → logprob: -1.3132987022399902
    3. ' the' → logprob: -10.438298225402832
    4. '	A' → logprob: -13.188298225402832
    5. 'the' → logprob: -13.563298225402832
    6. ' ' → logprob: -13.688298225402832
    7. '   ' → logprob: -13.938298225402832
    8. ',A' → logprob: -14.063298225402832
    9. '*A' → logprob: -15.313298225402832
    10. '<|end|>' → logprob: -15.563298225402832

Token 84: '
' (ID: 198)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.252417653799057
    2. '   ' → logprob: -2.50241756439209
    3. ' abs' → logprob: -2.50241756439209
    4. 'A' → logprob: -3.12741756439209
    5. '    
' → logprob: -5.50241756439209
    6. ' A' → logprob: -6.12741756439209
    7. 'a' → logprob: -6.62741756439209
    8. '```' → logprob: -7.00241756439209
    9. 'result' → logprob: -7.25241756439209
    10. 'v' → logprob: -7.37741756439209

Token 85: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.23028098046779633
    2. '   ' → logprob: -1.9802809953689575
    3. ' abs' → logprob: -2.855280876159668
    4. 'A' → logprob: -5.355280876159668
    5. 'absolute' → logprob: -6.730280876159668
    6. 'a' → logprob: -7.105280876159668
    7. 'ans' → logprob: -7.980280876159668
    8. ' A' → logprob: -8.230280876159668
    9. 'val' → logprob: -8.230280876159668
    10. '```' → logprob: -8.355280876159668

Token 86: ' a' (ID: 261)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.009119934402406216
    2. ' abs' → logprob: -5.259119987487793
    3. '   ' → logprob: -6.384119987487793
    4. 'A' → logprob: -6.759119987487793
    5. 'absolute' → logprob: -8.759119987487793
    6. 'a' (adapté à ' a') → logprob: -8.884119987487793
    7. '[' → logprob: -8.884119987487793
    8. 'ans' → logprob: -8.884119987487793
    9. 'lst' → logprob: -9.759119987487793
    10. 'result' → logprob: -10.259119987487793

Token 87: 'A' (ID: 32)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.5793125629425049
    2. '_abs' → logprob: -2.079312562942505
    3. 'b' → logprob: -2.204312562942505
    4. ' =' → logprob: -2.579312562942505
    5. 's' → logprob: -3.329312562942505
    6. '_' → logprob: -3.454312562942505
    7. '_bs' → logprob: -3.954312562942505
    8. '_vals' → logprob: -4.329312324523926
    9. '_b' → logprob: -4.454312324523926
    10. '_values' → logprob: -4.954312324523926

Token 88: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.645902693271637
    2. ' =' → logprob: -1.5209026336669922
    3. 'bs' → logprob: -1.8959026336669922
    4. '=' → logprob: -2.270902633666992
    5. 'abs' → logprob: -6.145902633666992
    6. 's' → logprob: -6.770902633666992
    7. '_abs' → logprob: -8.895902633666992
    8. '=[' → logprob: -9.395902633666992
    9. '=[]' → logprob: -9.770902633666992
    10. 'A' → logprob: -9.895902633666992

Token 89: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4947439730167389
    2. '[' → logprob: -1.2447439432144165
    3. '[list' → logprob: -2.494744062423706
    4. ' list' → logprob: -4.244743824005127
    5. 'list' → logprob: -5.244743824005127
    6. '[a' → logprob: -10.369744300842285
    7. '[len' → logprob: -10.869744300842285
    8. '[l' → logprob: -11.244744300842285
    9. '[i' → logprob: -11.494744300842285
    10. '[max' → logprob: -11.994744300842285

Token 90: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0011728443205356598
    2. ' abs' → logprob: -6.75117301940918
    3. '   ' → logprob: -13.00117301940918
    4. '(abs' → logprob: -15.25117301940918
    5. ' ' → logprob: -17.12617301940918
    6. 'x' → logprob: -18.37617301940918
    7. '    ' → logprob: -18.62617301940918
    8. '.abs' → logprob: -18.75117301940918
    9. '  ' → logprob: -18.87617301940918
    10. 'a' → logprob: -19.00117301940918

Token 91: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3232232630252838
    2. '(' → logprob: -1.4482232332229614
    3. '(i' → logprob: -3.823223352432251
    4. '(a' → logprob: -4.073223114013672
    5. '(A' → logprob: -6.323223114013672
    6. 'x' → logprob: -8.448223114013672
    7. '(e' → logprob: -9.823223114013672
    8. '(ai' → logprob: -10.198223114013672
    9. '(elem' → logprob: -10.323223114013672
    10. 'a' → logprob: -10.448223114013672

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022669474128633738
    2. 'a' → logprob: -6.127266883850098
    3. '(a' → logprob: -9.877266883850098
    4. ')a' → logprob: -11.252266883850098
    5. 'i' → logprob: -12.127266883850098
    6. ' )' → logprob: -12.252266883850098
    7. '(' → logprob: -12.752266883850098
    8. ')]' → logprob: -14.127266883850098
    9. '(i' → logprob: -14.252266883850098
    10. ')
' → logprob: -14.252266883850098

Token 93: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004191138141322881
    2. ' )' → logprob: -8.625418663024902
    3. ' for' → logprob: -8.750418663024902
    4. 'for' → logprob: -9.625418663024902
    5. 'a' → logprob: -11.875418663024902
    6. ' ' → logprob: -12.250418663024902
    7. ')a' → logprob: -14.000418663024902
    8. ' a' → logprob: -14.375418663024902
    9. ')]' → logprob: -14.375418663024902
    10. '   ' → logprob: -14.500418663024902

Token 94: ' a' (ID: 261)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07891292124986649
    2. 'A' → logprob: -2.5789129734039307
    3. 'a' → logprob: -11.203912734985352
    4. ' a' → logprob: -12.453912734985352
    5. ' ' → logprob: -12.828912734985352
    6. '	A' → logprob: -13.328912734985352
    7. '<|end|>' → logprob: -14.453912734985352
    8. '_A' → logprob: -15.203912734985352
    9. '(A' → logprob: -15.953912734985352
    10. ',A' → logprob: -16.32891273498535

Token 95: ' in' (ID: 306)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3198889195919037
    2. ' in' → logprob: -1.819888949394226
    3. ' A' → logprob: -2.4448888301849365
    4. 'a' → logprob: -3.9448888301849365
    5. 'in' → logprob: -5.819889068603516
    6. ' a' → logprob: -6.569889068603516
    7. ' ' → logprob: -7.444889068603516
    8. ')' → logprob: -7.694889068603516
    9. '  ' → logprob: -9.194889068603516
    10. ']' → logprob: -10.319889068603516

Token 96: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029751179739832878
    2. ' A' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.40475082397461
    4. '	A' → logprob: -16.65475082397461
    5. 'a' → logprob: -17.27975082397461
    6. ')' → logprob: -17.90475082397461
    7. '  ' → logprob: -18.02975082397461
    8. '   ' → logprob: -18.15475082397461
    9. '_A' → logprob: -18.65475082397461
    10. '(A' → logprob: -18.77975082397461

Token 97: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.598092684522271e-05
    2. ' ]' → logprob: -10.000056266784668
    3. ')]' → logprob: -12.500056266784668
    4. '   ' → logprob: -12.750056266784668
    5. ']
' → logprob: -12.750056266784668
    6. ')' → logprob: -14.125056266784668
    7. ']
' → logprob: -17.00005531311035
    8. ']

' → logprob: -17.00005531311035
    9. '()]' → logprob: -17.12505531311035
    10. ' ' → logprob: -17.62505531311035

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2236737757921219
    2. '
' → logprob: -1.8486738204956055
    3. '    
' → logprob: -3.8486738204956055
    4. '<|end|>' → logprob: -3.9736738204956055
    5. '  
' → logprob: -7.7236738204956055
    6. '#' → logprob: -7.9736738204956055
    7. '<|end|>' → logprob: -8.098673820495605
    8. '```' → logprob: -8.348673820495605
    9. '    ' → logprob: -8.723673820495605
    10. '\n' → logprob: -8.848673820495605

Token 99: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13457626104354858
    2. 'max' → logprob: -3.2595763206481934
    3. '    
' → logprob: -3.2595763206481934
    4. '#' (adapté à ' #') → logprob: -4.009576320648193
    5. '
' → logprob: -4.134576320648193
    6. 'min' → logprob: -5.634576320648193
    7. 'if' → logprob: -6.009576320648193
    8. 'n' → logprob: -6.259576320648193
    9. 'count' → logprob: -7.009576320648193
    10. '```' → logprob: -7.384576320648193

Token 100: ' Calculate' (ID: 38942)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8518425822257996
    2. 'min' → logprob: -2.2268426418304443
    3. '#' → logprob: -2.6018426418304443
    4. ' Find' → logprob: -2.9768426418304443
    5. ' max' → logprob: -3.2268426418304443
    6. 'Find' → logprob: -3.3518426418304443
    7. 'Check' → logprob: -3.4768426418304443
    8. 'count' → logprob: -3.6018426418304443
    9. 'sum' → logprob: -3.7268426418304443
    10. 'if' → logprob: -4.226842403411865

Token 101: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1461360454559326
    2. 'max' → logprob: -1.7711360454559326
    3. ' max' → logprob: -2.3961360454559326
    4. ' total' → logprob: -2.7711360454559326
    5. 'total' → logprob: -2.8961360454559326
    6. ' s' → logprob: -2.8961360454559326
    7. 's' → logprob: -3.0211360454559326
    8. 'the' → logprob: -3.3961360454559326
    9. ' ans' → logprob: -3.5211360454559326
    10. 'sum' → logprob: -3.6461360454559326

Token 102: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.4166009426116943
    2. 'sum' → logprob: -1.4166009426116943
    3. 'max' → logprob: -1.6666009426116943
    4. ' max' → logprob: -2.7916009426116943
    5. ' total' → logprob: -2.7916009426116943
    6. ' maximum' → logprob: -3.0416009426116943
    7. 'total' → logprob: -3.1666009426116943
    8. 'maximum' → logprob: -3.4166009426116943
    9. ' result' → logprob: -4.416601181030273
    10. 's' → logprob: -4.541601181030273

Token 103: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2901484966278076
    2. '_' → logprob: -1.6651484966278076
    3. '_a' → logprob: -2.0401484966278076
    4. 's' → logprob: -2.1651484966278076
    5. ' of' → logprob: -2.9151484966278076
    6. 'a' → logprob: -2.9151484966278076
    7. '=' → logprob: -3.5401484966278076
    8. 'A' → logprob: -3.9151484966278076
    9. 'of' → logprob: -3.9151484966278076
    10. '_of' → logprob: -3.9151484966278076

Token 104: ' absolute' (ID: 17786)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05581066384911537
    2. ' a' → logprob: -2.9308106899261475
    3. ' all' → logprob: -8.055810928344727
    4. ' the' → logprob: -8.430810928344727
    5. 'all' → logprob: -8.930810928344727
    6. 'A' → logprob: -9.430810928344727
    7. 'the' → logprob: -9.930810928344727
    8. 'abs' → logprob: -10.180810928344727
    9. ' ' → logprob: -10.930810928344727
    10. '(a' → logprob: -11.180810928344727

Token 105: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.10852304100990295
    2. 'a' → logprob: -2.48352313041687
    3. ' values' → logprob: -3.98352313041687
    4. ' a' → logprob: -7.608522891998291
    5. '(a' → logprob: -9.10852336883545
    6. '_values' → logprob: -9.85852336883545
    7. 'value' → logprob: -10.35852336883545
    8. '   ' → logprob: -10.85852336883545
    9. 's' → logprob: -11.35852336883545
    10. ')' → logprob: -11.35852336883545

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03535604476928711
    2. 's' → logprob: -4.160356044769287
    3. 'sum' → logprob: -4.160356044769287
    4. 'total' → logprob: -6.535356044769287
    5. 'S' → logprob: -6.910356044769287
    6. '    
' → logprob: -8.410356521606445
    7. ' s' → logprob: -8.910356521606445
    8. 'ans' → logprob: -9.160356521606445
    9. '
' → logprob: -9.410356521606445
    10. '=' → logprob: -9.410356521606445

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05195217207074165
    2. 'sum' → logprob: -3.5519521236419678
    3. 's' → logprob: -4.301952362060547
    4. 'total' → logprob: -5.676952362060547
    5. ' s' → logprob: -6.426952362060547
    6. 'S' → logprob: -6.426952362060547
    7. ' sum' → logprob: -7.801952362060547
    8. 'ans' → logprob: -7.926952362060547
    9. ' total' → logprob: -8.551952362060547
    10. ' S' → logprob: -8.676952362060547

Token 108: ' asum' (ID: 87728)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8825658559799194
    2. 's' → logprob: -1.1325658559799194
    3. 'sum' → logprob: -1.8825658559799194
    4. 'ans' → logprob: -3.382565975189209
    5. 'abs' → logprob: -3.507565975189209
    6. ' s' → logprob: -4.382565975189209
    7. ' total' → logprob: -4.507565975189209
    8. 'S' → logprob: -5.132565975189209
    9. '   ' → logprob: -5.507565975189209
    10. 'sm' → logprob: -5.507565975189209

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45884042978286743
    2. '=' → logprob: -1.2088403701782227
    3. '_' → logprob: -2.7088403701782227
    4. '   ' → logprob: -7.333840370178223
    5. '_a' → logprob: -7.708840370178223
    6. '_val' → logprob: -7.708840370178223
    7. '(' → logprob: -7.833840370178223
    8. 'a' → logprob: -8.458840370178223
    9. '()' → logprob: -8.708840370178223
    10. '_sum' → logprob: -9.083840370178223

Token 110: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.47410714626312256
    2. 'sum' → logprob: -0.9741071462631226
    3. '   ' → logprob: -10.849106788635254
    4. '(sum' → logprob: -12.224106788635254
    5. '	sum' → logprob: -13.099106788635254
    6. ' ' → logprob: -13.474106788635254
    7. '=sum' → logprob: -13.724106788635254
    8. '  ' → logprob: -15.099106788635254
    9. '0' → logprob: -15.224106788635254
    10. ',sum' → logprob: -15.849106788635254

Token 111: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004091935232281685
    2. '(' → logprob: -5.504091739654541
    3. '(A' → logprob: -11.3790922164917
    4. '(ai' → logprob: -14.5040922164917
    5. ' (' → logprob: -14.6290922164917
    6. '((' → logprob: -15.3790922164917
    7. '(
' → logprob: -15.5040922164917
    8. '(abs' → logprob: -16.129091262817383
    9. '(an' → logprob: -16.254091262817383
    10. '(s' → logprob: -16.379091262817383

Token 112: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006729110609740019
    2. 'a' → logprob: -5.0067291259765625
    3. ')' → logprob: -11.381729125976562
    4. ' a' → logprob: -14.256729125976562
    5. ' A' → logprob: -14.506729125976562
    6. '(a' → logprob: -14.506729125976562
    7. ')a' → logprob: -15.256729125976562
    8. '_a' → logprob: -16.131729125976562
    9. 's' → logprob: -16.631729125976562
    10. '(A' → logprob: -16.631729125976562

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.383526149671525e-05
    2. ')
' → logprob: -10.250053405761719
    3. '   ' → logprob: -11.125053405761719
    4. ' )' → logprob: -12.875053405761719
    5. '()' → logprob: -14.875053405761719
    6. '))' → logprob: -15.250053405761719
    7. '())' → logprob: -15.750053405761719
    8. ')

' → logprob: -16.37505340576172
    9. '+' → logprob: -16.62505340576172
    10. '),' → logprob: -17.00005340576172

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24760957062244415
    2. '
' → logprob: -1.6226096153259277
    3. '    
' → logprob: -3.9976096153259277
    4. '<|end|>' → logprob: -5.997609615325928
    5. '```' → logprob: -8.37260913848877
    6. ' if' → logprob: -8.74760913848877
    7. '  
' → logprob: -9.24760913848877
    8. '   
' → logprob: -9.37260913848877
    9. '    ' → logprob: -9.62260913848877
    10. 'if' → logprob: -9.74760913848877

Token 115: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04883500188589096
    2. '
' → logprob: -4.048834800720215
    3. '    
' → logprob: -4.548834800720215
    4. 'max' → logprob: -5.173834800720215
    5. 'if' → logprob: -5.798834800720215
    6. ' if' → logprob: -6.048834800720215
    7. 'min' → logprob: -6.173834800720215
    8. 'neg' → logprob: -6.673834800720215
    9. '#' (adapté à ' #') → logprob: -7.298834800720215
    10. '\n' → logprob: -7.673834800720215

Token 116: ' Count' (ID: 6789)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6400802731513977
    2. 'mx' → logprob: -2.515080213546753
    3. ' max' → logprob: -2.640080213546753
    4. 'if' → logprob: -3.140080213546753
    5. 'min' → logprob: -3.265080213546753
    6. 'ans' → logprob: -3.640080213546753
    7. ' mx' → logprob: -3.765080213546753
    8. ' if' → logprob: -4.015080451965332
    9. '#' → logprob: -4.265080451965332
    10. 'zero' → logprob: -4.515080451965332

Token 117: ' how' (ID: 1495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5832704305648804
    2. ' =' → logprob: -2.20827054977417
    3. 'the' → logprob: -2.58327054977417
    4. 'neg' → logprob: -3.20827054977417
    5. '_neg' → logprob: -3.45827054977417
    6. '=' → logprob: -3.58327054977417
    7. 's' → logprob: -3.95827054977417
    8. '_' → logprob: -4.08327054977417
    9. 'negative' → logprob: -4.08327054977417
    10. ' negative' → logprob: -4.20827054977417

Token 118: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.5596230030059814
    2. ' many' → logprob: -1.0596230030059814
    3. 'min' → logprob: -3.5596230030059814
    4. '_many' → logprob: -4.309622764587402
    5. '(' → logprob: -4.684622764587402
    6. 'a' → logprob: -5.309622764587402
    7. 'negative' → logprob: -5.434622764587402
    8. 's' → logprob: -6.059622764587402
    9. 'Many' → logprob: -6.184622764587402
    10. '(-' → logprob: -6.684622764587402

Token 119: ' elements' (ID: 8632)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.45116475224494934
    2. 'a' → logprob: -1.326164722442627
    3. ' elements' → logprob: -3.576164722442627
    4. ' a' → logprob: -3.826164722442627
    5. 'elements' → logprob: -4.326164722442627
    6. 'of' → logprob: -4.576164722442627
    7. 'A' → logprob: -5.326164722442627
    8. 'odd' → logprob: -5.451164722442627
    9. 'x' → logprob: -6.076164722442627
    10. 'neg' → logprob: -6.326164722442627

Token 120: ' in' (ID: 306)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.9430786967277527
    2. 'are' → logprob: -1.5680787563323975
    3. 'have' → logprob: -1.9430787563323975
    4. ' of' → logprob: -2.6930787563323975
    5. 'less' → logprob: -3.6930787563323975
    6. '=' → logprob: -3.6930787563323975
    7. 'equal' → logprob: -3.8180787563323975
    8. ' are' → logprob: -3.9430787563323975
    9. 'with' → logprob: -4.318078517913818
    10. ' have' → logprob: -4.443078517913818

Token 121: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.8640852570533752
    2. 'A' → logprob: -1.1140851974487305
    3. ' a' → logprob: -1.8640851974487305
    4. 'a' → logprob: -2.3640851974487305
    5. ' the' → logprob: -7.2390851974487305
    6. ' ' → logprob: -8.86408519744873
    7. '[' → logprob: -9.23908519744873
    8. '[A' → logprob: -9.23908519744873
    9. 'the' → logprob: -10.23908519744873
    10. ' [' → logprob: -10.55158519744873

Token 122: ' are' (ID: 553)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.6433802247047424
    2. ' are' → logprob: -0.8933802247047424
    3. 'have' → logprob: -3.3933801651000977
    4. 'are' → logprob: -3.5183801651000977
    5. 'if' → logprob: -7.768380165100098
    6. '   ' → logprob: -8.393380165100098
    7. '<|end|>' → logprob: -8.393380165100098
    8. ' if' → logprob: -8.643380165100098
    9. ' were' → logprob: -9.018380165100098
    10. 's' → logprob: -9.268380165100098

Token 123: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.5794835686683655
    2. ' negative' → logprob: -1.2044835090637207
    3. 'less' → logprob: -2.8294835090637207
    4. ' less' → logprob: -3.4544835090637207
    5. '0' → logprob: -3.8294835090637207
    6. ' zero' → logprob: -4.579483509063721
    7. 'zero' → logprob: -4.829483509063721
    8. '<' → logprob: -6.204483509063721
    9. ' ' → logprob: -6.329483509063721
    10. ' exactly' → logprob: -7.079483509063721

Token 124: '
' (ID: 198)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.6601219177246094
    2. 'n' → logprob: -1.2851219177246094
    3. '   ' → logprob: -1.9101219177246094
    4. 'cnt' → logprob: -3.9101219177246094
    5. 'negative' → logprob: -4.160121917724609
    6. ' n' → logprob: -4.660121917724609
    7. ' neg' → logprob: -5.785121917724609
    8. 'count' → logprob: -6.785121917724609
    9. 'c' → logprob: -6.785121917724609
    10. ' cnt' → logprob: -6.910121917724609

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6352962255477905
    2. 'neg' → logprob: -1.5102962255477905
    3. 'n' → logprob: -1.6352962255477905
    4. ' n' → logprob: -3.51029634475708
    5. 'cnt' → logprob: -4.76029634475708
    6. 'negative' → logprob: -5.26029634475708
    7. ' neg' → logprob: -5.88529634475708
    8. ' cnt' → logprob: -6.26029634475708
    9. 'c' → logprob: -6.76029634475708
    10. ',' → logprob: -7.01029634475708

Token 126: ' c' (ID: 274)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.5371810793876648
    2. 'n' → logprob: -1.9121811389923096
    3. 'cnt' → logprob: -2.7871811389923096
    4. 'negative' → logprob: -3.1621811389923096
    5. 'c' (adapté à ' c') → logprob: -3.5371811389923096
    6. 'nc' → logprob: -4.2871809005737305
    7. ' neg' → logprob: -4.4121809005737305
    8. 'm' → logprob: -4.5371809005737305
    9. 'b' → logprob: -4.6621809005737305
    10. 'k' → logprob: -4.7871809005737305

Token 127: ' =' (ID: 314)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.28976762294769287
    2. ' =' → logprob: -1.6647676229476929
    3. '_neg' → logprob: -3.5397677421569824
    4. 'nt' → logprob: -3.6647677421569824
    5. 'n' → logprob: -5.789767742156982
    6. '=' → logprob: -6.164767742156982
    7. 'ount' → logprob: -6.789767742156982
    8. 'negative' → logprob: -7.039767742156982
    9. '_negative' → logprob: -8.164767265319824
    10. '_' → logprob: -9.914767265319824

Token 128: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.049751657992601395
    2. 'sum' → logprob: -3.1747517585754395
    3. ' len' → logprob: -5.6747517585754395
    4. ' A' → logprob: -6.1747517585754395
    5. 'len' → logprob: -7.5497517585754395
    6. 'A' → logprob: -7.6747517585754395
    7. ' ' → logprob: -8.924751281738281
    8. '0' → logprob: -9.424751281738281
    9. ' ' → logprob: -12.299751281738281
    10. '   ' → logprob: -13.862251281738281

Token 129: '([(' (ID: 156282)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31440967321395874
    2. '(a' → logprob: -1.3144097328186035
    3. '(x' → logprob: -7.0644097328186035
    4. '((' → logprob: -8.814409255981445
    5. '([' → logprob: -9.064409255981445
    6. '(i' → logprob: -11.814409255981445
    7. '(ai' → logprob: -11.939409255981445
    8. '(-' → logprob: -12.564409255981445
    9. '(
' → logprob: -13.314409255981445
    10. '(int' → logprob: -13.564409255981445

Token 130: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23266397416591644
    2. '1' → logprob: -1.6076639890670776
    3. 'x' → logprob: -5.232664108276367
    4. '-' → logprob: -6.607664108276367
    5. ' a' → logprob: -8.232664108276367
    6. ' ' → logprob: -9.732664108276367
    7. 'i' → logprob: -9.982664108276367
    8. '(a' → logprob: -9.982664108276367
    9. '(' → logprob: -10.607664108276367
    10. 'int' → logprob: -10.857664108276367

Token 131: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6389168500900269
    2. ' <' → logprob: -0.7639168500900269
    3. 'a' → logprob: -5.138916969299316
    4. '<a' → logprob: -8.888916969299316
    5. ' ' → logprob: -9.138916969299316
    6. ' a' → logprob: -10.013916969299316
    7. '1' → logprob: -10.138916969299316
    8. '(a' → logprob: -10.263916969299316
    9. ')' → logprob: -10.763916969299316
    10. '<int' → logprob: -10.763916969299316

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859680309891701
    2. ' ' → logprob: -3.0485968589782715
    3. 'a' → logprob: -12.423596382141113
    4. ')' → logprob: -13.798596382141113
    5. '-' → logprob: -13.798596382141113
    6. '   ' → logprob: -14.048596382141113
    7. '  ' → logprob: -14.486096382141113
    8. ' a' → logprob: -15.173596382141113
    9. '=' → logprob: -15.423596382141113
    10. '
' → logprob: -15.423596382141113

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003606005571782589
    2. ' ' → logprob: -5.628605842590332
    3. '   ' → logprob: -13.503605842590332
    4. 'a' → logprob: -13.753605842590332
    5. ')' → logprob: -13.878605842590332
    6. '  ' → logprob: -14.503605842590332
    7. '-' → logprob: -14.878605842590332
    8. 'A' → logprob: -15.503605842590332
    9. '1' → logprob: -15.628605842590332
    10. '=' → logprob: -16.00360679626465

Token 134: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.41129949549213e-05
    2. ' )' → logprob: -9.500083923339844
    3. ')
' → logprob: -12.625083923339844
    4. '))' → logprob: -13.375083923339844
    5. '1' → logprob: -13.625083923339844
    6. ')]' → logprob: -14.000083923339844
    7. ')])' → logprob: -14.500083923339844
    8. '),' → logprob: -15.375083923339844
    9. '   ' → logprob: -15.500083923339844
    10. ')==' → logprob: -15.875083923339844

Token 135: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9591742753982544
    2. ' for' → logprob: -0.9591742753982544
    3. 'for' → logprob: -1.4591742753982544
    4. ' )' → logprob: -7.084174156188965
    5. ' ' → logprob: -8.709174156188965
    6. '   ' → logprob: -10.334174156188965
    7. ')])' → logprob: -10.709174156188965
    8. '    ' → logprob: -10.834174156188965
    9. ')]' → logprob: -10.959174156188965
    10. '])' → logprob: -10.959174156188965

Token 136: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6933703422546387
    2. ' A' → logprob: -0.6933703422546387
    3. 'a' → logprob: -9.318370819091797
    4. ' ' → logprob: -9.568370819091797
    5. ' a' → logprob: -9.943370819091797
    6. '  ' → logprob: -12.693370819091797
    7. '	A' → logprob: -12.693370819091797
    8. ' ' → logprob: -12.943370819091797
    9. '   ' → logprob: -13.068370819091797
    10. ']' → logprob: -14.068370819091797

Token 137: ' in' (ID: 306)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31333526968955994
    2. 'A' → logprob: -1.3133352994918823
    3. ' ' → logprob: -10.438335418701172
    4. ')' → logprob: -10.688335418701172
    5. ' in' → logprob: -12.438335418701172
    6. ']' → logprob: -12.438335418701172
    7. ' ]' → logprob: -13.188335418701172
    8. ' )' → logprob: -13.188335418701172
    9. '(A' → logprob: -13.188335418701172
    10. '  ' → logprob: -13.313335418701172

Token 138: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0486072339117527
    2. ' A' → logprob: -3.048607349395752
    3. ' ' → logprob: -11.548606872558594
    4. 'a' → logprob: -11.923606872558594
    5. '   ' → logprob: -13.923606872558594
    6. '
' → logprob: -14.548606872558594
    7. ' a' → logprob: -14.673606872558594
    8. '	A' → logprob: -14.673606872558594
    9. '  ' → logprob: -14.923606872558594
    10. ')' → logprob: -15.298606872558594

Token 139: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003634713648352772
    2. '])
' → logprob: -8.12536334991455
    3. ')' → logprob: -10.37536334991455
    4. ' ])' → logprob: -11.00036334991455
    5. '   ' → logprob: -11.50036334991455
    6. ']' → logprob: -12.37536334991455
    7. ')])' → logprob: -13.25036334991455
    8. '])
' → logprob: -13.87536334991455
    9. ')]' → logprob: -14.25036334991455
    10. '])

' → logprob: -14.37536334991455

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10713140666484833
    2. '
' → logprob: -2.4821314811706543
    3. '    
' → logprob: -4.232131481170654
    4. 'if' → logprob: -5.732131481170654
    5. ' if' → logprob: -8.732131004333496
    6. '    
    
' → logprob: -10.982131004333496
    7. '#' → logprob: -11.107131004333496
    8. '    ' → logprob: -11.607131004333496
    9. 'n' → logprob: -11.732131004333496
    10. ' 
' → logprob: -11.857131004333496

Token 141: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04739842191338539
    2. 'if' → logprob: -3.172398328781128
    3. '#' (adapté à ' #') → logprob: -5.672398567199707
    4. '
' → logprob: -7.547398567199707
    5. '    
' → logprob: -8.172398567199707
    6. ' if' → logprob: -9.047398567199707
    7. 'min' → logprob: -12.422398567199707
    8. '```' → logprob: -12.422398567199707
    9. ' #' → logprob: -12.922398567199707
    10. '    ' → logprob: -13.297398567199707

Token 142: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03478330001235008
    2. '#' → logprob: -4.034783363342285
    3. 'min' → logprob: -5.159783363342285
    4. 'm' → logprob: -5.659783363342285
    5. 'ans' → logprob: -5.909783363342285
    6. 'max' → logprob: -7.409783363342285
    7. 'res' → logprob: -7.534783363342285
    8. 'mx' → logprob: -7.659783363342285
    9. ' if' → logprob: -7.784783363342285
    10. 'abs' → logprob: -8.409783363342285

Token 143: ' the' (ID: 290)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.03846383094787598
    2. 'c' → logprob: -3.288463830947876
    3. ' N' → logprob: -8.663463592529297
    4. 'N' → logprob: -9.788463592529297
    5. ' ' → logprob: -9.788463592529297
    6. ' asum' → logprob: -10.288463592529297
    7. ' (' → logprob: -11.163463592529297
    8. '   ' → logprob: -11.288463592529297
    9. ' not' → logprob: -11.413463592529297
    10. '```' → logprob: -11.538463592529297

Token 144: ' count' (ID: 3605)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002280861372128129
    2. ' c' → logprob: -6.1272807121276855
    3. 'number' → logprob: -10.627281188964844
    4. 'count' → logprob: -10.752281188964844
    5. '#' → logprob: -11.752281188964844
    6. 'all' → logprob: -12.002281188964844
    7. ' number' → logprob: -12.127281188964844
    8. ' all' → logprob: -12.377281188964844
    9. 'N' → logprob: -12.627281188964844
    10. ')' → logprob: -12.877281188964844

Token 145: ' of' (ID: 328)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7218387126922607
    2. ' is' → logprob: -1.5968387126922607
    3. ' %' → logprob: -1.8468387126922607
    4. ' of' → logprob: -2.7218387126922607
    5. ' ==' → logprob: -3.4718387126922607
    6. '==' → logprob: -3.8468387126922607
    7. ' ' → logprob: -4.34683895111084
    8. 'of' → logprob: -4.97183895111084
    9. 'is' → logprob: -5.09683895111084
    10. '>' → logprob: -5.72183895111084

Token 146: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.7175872921943665
    2. ' negative' → logprob: -1.2175872325897217
    3. 'c' → logprob: -2.4675872325897217
    4. ' c' → logprob: -2.4675872325897217
    5. ' negatives' → logprob: -3.2175872325897217
    6. 'neg' → logprob: -5.342587471008301
    7. '0' → logprob: -8.0925874710083
    8. ' ' → logprob: -8.3425874710083
    9. '-negative' → logprob: -8.4675874710083
    10. ' the' → logprob: -8.7175874710083

Token 147: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.7268198728561401
    2. ' elements' → logprob: -0.9768198728561401
    3. 'numbers' → logprob: -2.6018199920654297
    4. 'elements' → logprob: -2.9768199920654297
    5. ' is' → logprob: -4.97681999206543
    6. 's' → logprob: -5.85181999206543
    7. '%' → logprob: -6.10181999206543
    8. 'is' → logprob: -7.22681999206543
    9. ' integers' → logprob: -7.60181999206543
    10. '<|end|>' → logprob: -7.72681999206543

Token 148: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7792760729789734
    2. '%' → logprob: -0.9042760729789734
    3. ' %' → logprob: -2.404276132583618
    4. ' ==' → logprob: -3.779276132583618
    5. '==' → logprob: -4.029275894165039
    6. 'is' → logprob: -5.404275894165039
    7. '>' → logprob: -8.029275894165039
    8. ' >' → logprob: -8.529275894165039
    9. ')' → logprob: -9.279275894165039
    10. ' ' → logprob: -9.404275894165039

Token 149: ' odd' (ID: 14210)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.531948983669281
    2. 'even' → logprob: -0.906948983669281
    3. ' even' → logprob: -5.281949043273926
    4. 'odd' → logprob: -6.031949043273926
    5. '%' → logprob: -7.531949043273926
    6. '1' → logprob: -7.781949043273926
    7. ' ' → logprob: -8.656949043273926
    8. 'Even' → logprob: -10.281949043273926
    9. 'an' → logprob: -11.156949043273926
    10. '>' → logprob: -11.156949043273926

Token 150: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002519657602533698
    2. ',' → logprob: -6.252519607543945
    3. ':
' → logprob: -7.752519607543945
    4. ' :' → logprob: -9.252519607543945
    5. ' and' → logprob: -10.002519607543945
    6. '   ' → logprob: -11.752519607543945
    7. 'and' → logprob: -12.627519607543945
    8. ' ,' → logprob: -13.002519607543945
    9. ' if' → logprob: -13.252519607543945
    10. '):' → logprob: -13.877519607543945

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03543302044272423
    2. ' if' → logprob: -3.535433053970337
    3. '    ' → logprob: -6.535432815551758
    4. ' min' → logprob: -6.785432815551758
    5. 'min' → logprob: -7.035432815551758
    6. 'if' → logprob: -7.660432815551758
    7. '    
' → logprob: -7.910432815551758
    8. '#' → logprob: -8.160432815551758
    9. '       ' → logprob: -8.535432815551758
    10. ' as' → logprob: -8.785432815551758

Token 152: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.5305895805358887
    2. '   ' → logprob: -1.5305895805358887
    3. 'min' → logprob: -1.6555895805358887
    4. '#' (adapté à ' #') → logprob: -1.9055895805358887
    5. ' a' → logprob: -2.6555895805358887
    6. 'if' → logprob: -2.9055895805358887
    7. ' if' → logprob: -3.2805895805358887
    8. 'A' → logprob: -3.9055895805358887
    9. ' min' → logprob: -4.405589580535889
    10. 'm' → logprob: -5.030589580535889

Token 153: ' subtract' (ID: 71973)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9690237045288086
    2. 'min' → logprob: -1.4690237045288086
    3. '#' → logprob: -1.8440237045288086
    4. ' min' → logprob: -2.0940237045288086
    5. ' if' → logprob: -3.7190237045288086
    6. ' a' → logprob: -4.219023704528809
    7. ' #' → logprob: -4.344023704528809
    8. ' print' → logprob: -4.469023704528809
    9. 'm' → logprob: -5.094023704528809
    10. 'print' → logprob: -5.344023704528809

Token 154: ' twice' (ID: 18370)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5537479519844055
    2. ' min' → logprob: -0.9287479519844055
    3. '2' → logprob: -3.6787478923797607
    4. ' ' → logprob: -6.42874813079834
    5. ' the' → logprob: -6.55374813079834
    6. '```' → logprob: -7.55374813079834
    7. '(min' → logprob: -7.92874813079834
    8. ')' → logprob: -8.80374813079834
    9. '   ' → logprob: -9.30374813079834
    10. '`' → logprob: -9.42874813079834

Token 155: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3133227825164795
    2. 'min' → logprob: -1.9383227825164795
    3. ' min' → logprob: -2.3133227825164795
    4. 'the' → logprob: -3.6883227825164795
    5. ' abs' → logprob: -7.938323020935059
    6. 'abs' → logprob: -8.313323020935059
    7. '   ' → logprob: -9.313323020935059
    8. '(min' → logprob: -9.438323020935059
    9. ' of' → logprob: -10.063323020935059
    10. 'minimum' → logprob: -10.063323020935059

Token 156: ' smallest' (ID: 42173)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0027882419526576996
    2. 'minimum' → logprob: -6.002788066864014
    3. ' min' → logprob: -8.127788543701172
    4. '(min' → logprob: -12.252788543701172
    5. ' minimum' → logprob: -12.377788543701172
    6. 'minimal' → logprob: -12.502788543701172
    7. '	min' → logprob: -13.877788543701172
    8. '[min' → logprob: -13.877788543701172
    9. '```' → logprob: -14.002788543701172
    10. '   ' → logprob: -15.127788543701172

Token 157: ' absolute' (ID: 17786)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.336609423160553
    2. 'a' → logprob: -1.4616093635559082
    3. ' abs' → logprob: -4.211609363555908
    4. '(abs' → logprob: -4.336609363555908
    5. 'absolute' → logprob: -4.711609363555908
    6. 'min' → logprob: -4.961609363555908
    7. ' a' → logprob: -5.461609363555908
    8. 'as' → logprob: -6.711609363555908
    9. 'value' → logprob: -6.961609363555908
    10. ' absolute' → logprob: -6.961609363555908

Token 158: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.07204551994800568
    2. ' value' → logprob: -2.6970455646514893
    3. 'a' → logprob: -6.69704532623291
    4. '_value' → logprob: -7.44704532623291
    5. ')' → logprob: -9.44704532623291
    6. ' ' → logprob: -9.94704532623291
    7. '-value' → logprob: -10.19704532623291
    8. 'min' → logprob: -10.82204532623291
    9. '(a' → logprob: -11.19704532623291
    10. ' a' → logprob: -11.19704532623291

Token 159: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019662916660308838
    2. ' from' → logprob: -4.394662857055664
    3. 'from' → logprob: -5.144662857055664
    4. ',' → logprob: -8.019662857055664
    5. '
' → logprob: -8.019662857055664
    6. '    ' → logprob: -9.144662857055664
    7. '    
' → logprob: -9.394662857055664
    8. '       ' → logprob: -9.394662857055664
    9. '  ' → logprob: -10.019662857055664
    10. ' if' → logprob: -10.019662857055664

Token 160: ' the' (ID: 290)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.01985003799200058
    2. ' asum' → logprob: -4.144850254058838
    3. 'ass' → logprob: -5.644850254058838
    4. 'the' → logprob: -8.89484977722168
    5. 'sum' → logprob: -10.39484977722168
    6. '   ' → logprob: -10.64484977722168
    7. 'asim' → logprob: -11.39484977722168
    8. ' as' → logprob: -11.51984977722168
    9. 'a' → logprob: -11.64484977722168
    10. ' the' → logprob: -11.89484977722168

Token 161: ' sum' (ID: 4215)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.04842076450586319
    2. ' asum' → logprob: -3.9234206676483154
    3. 'sum' → logprob: -4.1734209060668945
    4. 'ass' → logprob: -4.5484209060668945
    5. 'result' → logprob: -7.9234209060668945
    6. ' sum' → logprob: -8.048420906066895
    7. ' as' → logprob: -8.798420906066895
    8. 'ans' → logprob: -8.923420906066895
    9. 'print' → logprob: -9.048420906066895
    10. 'total' → logprob: -9.923420906066895

Token 162: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012839256087318063
    2. ' if' → logprob: -7.126284122467041
    3. '
' → logprob: -7.876284122467041
    4. 'if' → logprob: -10.001283645629883
    5. '    
' → logprob: -10.626283645629883
    6. ',' → logprob: -12.001283645629883
    7. '       ' → logprob: -12.501283645629883
    8. '```' → logprob: -12.751283645629883
    9. '(' → logprob: -13.001283645629883
    10. '    ' → logprob: -13.626283645629883

Token 163: ' make' (ID: 1520)
  Prédit: ' asum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' asum' → logprob: -0.8267012238502502
    2. ' account' → logprob: -1.5767011642456055
    3. ' adjust' → logprob: -2.2017011642456055
    4. ' correct' → logprob: -2.4517011642456055
    5. ' print' → logprob: -2.9517011642456055
    6. 'print' → logprob: -3.5767011642456055
    7. ' obtain' → logprob: -4.0767011642456055
    8. 'adjust' → logprob: -4.4517011642456055
    9. ' get' → logprob: -4.5767011642456055
    10. 'as' → logprob: -4.9517011642456055

Token 164: ' the' (ID: 290)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.024307023733854294
    2. 'ass' → logprob: -4.1493072509765625
    3. ' asum' → logprob: -5.5243072509765625
    4. 'it' → logprob: -5.8993072509765625
    5. 'the' → logprob: -7.6493072509765625
    6. ' it' → logprob: -8.399307250976562
    7. 'a' → logprob: -8.399307250976562
    8. '   ' → logprob: -8.774307250976562
    9. ' the' → logprob: -9.149307250976562
    10. ' as' → logprob: -10.024307250976562

Token 165: ' minimal' (ID: 19957)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.004023903049528599
    2. 'sum' → logprob: -6.629024028778076
    3. 'result' → logprob: -6.879024028778076
    4. 'ass' → logprob: -7.879024028778076
    5. 'print' → logprob: -8.004023551940918
    6. 'output' → logprob: -8.504023551940918
    7. '   ' → logprob: -8.879023551940918
    8. 'answer' → logprob: -9.004023551940918
    9. 'ans' → logprob: -9.254023551940918
    10. ' as' → logprob: -9.629023551940918

Token 166: ' sum' (ID: 4215)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.6493431329727173
    2. ' sum' → logprob: -2.0243430137634277
    3. 'possible' → logprob: -2.0243430137634277
    4. 'adjust' → logprob: -2.1493430137634277
    5. ' difference' → logprob: -2.2743430137634277
    6. 'sum' → logprob: -2.2743430137634277
    7. 'difference' → logprob: -2.7743430137634277
    8. ' result' → logprob: -3.7743430137634277
    9. ' total' → logprob: -4.149343013763428
    10. ' adjustment' → logprob: -4.274343013763428

Token 167: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006196272443048656
    2. '
' → logprob: -7.875619411468506
    3. ',' → logprob: -9.625619888305664
    4. '    
' → logprob: -9.625619888305664
    5. ' if' → logprob: -9.875619888305664
    6. '       ' → logprob: -11.750619888305664
    7. '```' → logprob: -12.250619888305664
    8. 's' → logprob: -12.500619888305664
    9. '    ' → logprob: -12.500619888305664
    10. 'if' → logprob: -12.500619888305664

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007046872633509338
    2. ' if' → logprob: -8.625704765319824
    3. '    
' → logprob: -8.625704765319824
    4. '\n' → logprob: -9.750704765319824
    5. ',' → logprob: -10.000704765319824
    6. '
' → logprob: -10.375704765319824
    7. '  ' → logprob: -10.750704765319824
    8. '    ' → logprob: -10.750704765319824
    9. ' ' → logprob: -10.750704765319824
    10. ' 
' → logprob: -10.875704765319824

Token 169: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22007951140403748
    2. ' if' → logprob: -1.7200795412063599
    3. 'if' (adapté à ' if') → logprob: -4.59507942199707
    4. '
' → logprob: -5.97007942199707
    5. 'print' → logprob: -6.59507942199707
    6. '\n' → logprob: -6.59507942199707
    7. ' result' → logprob: -7.34507942199707
    8. '    
' → logprob: -7.84507942199707
    9. 'result' → logprob: -7.84507942199707
    10. ' print' → logprob: -7.97007942199707

Token 170: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.006752071436494589
    2. 'c' → logprob: -5.006752014160156
    3. '   ' → logprob: -11.256752014160156
    4. '(c' → logprob: -11.631752014160156
    5. ' ' → logprob: -11.756752014160156
    6. ' (' → logprob: -12.631752014160156
    7. '	c' → logprob: -13.506752014160156
    8. '  ' → logprob: -14.381752014160156
    9. ' ' → logprob: -14.506752014160156
    10. '    ' → logprob: -14.631752014160156

Token 171: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07070033997297287
    2. '%' → logprob: -2.6957004070281982
    3. ' ' → logprob: -7.195700168609619
    4. ')' → logprob: -12.070700645446777
    5. ' ' → logprob: -12.695700645446777
    6. ' %
' → logprob: -12.820700645446777
    7. '1' → logprob: -13.820700645446777
    8. ' &' → logprob: -15.195700645446777
    9. ' %)' → logprob: -15.570700645446777
    10. ' )' → logprob: -15.945700645446777

Token 172: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10021001845598221
    2. ' ' → logprob: -2.350209951400757
    3. '```' → logprob: -13.975210189819336
    4. '=' → logprob: -14.350210189819336
    5. '  ' → logprob: -15.225210189819336
    6. '>' → logprob: -15.600210189819336
    7. '==' → logprob: -15.725210189819336
    8. '   ' → logprob: -15.725210189819336
    9. ')' → logprob: -16.225210189819336
    10. ' ' → logprob: -16.287710189819336

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.875052452087402
    4. '```' → logprob: -15.750052452087402
    5. '  ' → logprob: -15.875052452087402
    6. '>' → logprob: -18.062551498413086
    7. '{' → logprob: -18.062551498413086
    8. '==' → logprob: -18.250051498413086
    9. '1' → logprob: -18.500051498413086
    10. '۲' → logprob: -18.500051498413086

Token 174: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6172716617584229
    2. ' !=' → logprob: -1.7422716617584229
    3. ':' → logprob: -1.9922716617584229
    4. '==' → logprob: -2.492271661758423
    5. '1' → logprob: -3.242271661758423
    6. '!=' → logprob: -3.992271661758423
    7. ' ' → logprob: -5.117271423339844
    8. '=' → logprob: -6.367271423339844
    9. ':
' → logprob: -7.617271423339844
    10. ' :' → logprob: -8.242271423339844

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.110677070915699
    2. '   ' → logprob: -2.3606770038604736
    3. ' as' → logprob: -4.985677242279053
    4. ' asum' → logprob: -6.360677242279053
    5. 'as' → logprob: -7.110677242279053
    6. '    ' → logprob: -8.735676765441895
    7. ' sum' → logprob: -9.110676765441895
    8. '
' → logprob: -9.235676765441895
    9. 'sum' → logprob: -9.485676765441895
    10. 'ass' → logprob: -9.485676765441895

Token 176: ' print' (ID: 2123)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.18743014335632324
    2. '   ' → logprob: -2.3124301433563232
    3. ' asum' → logprob: -3.3124301433563232
    4. 'print' (adapté à ' print') → logprob: -3.8124301433563232
    5. 'ass' → logprob: -4.562430381774902
    6. ' as' → logprob: -7.062430381774902
    7. '       ' → logprob: -7.562430381774902
    8. ' print' → logprob: -7.562430381774902
    9. 'asim' → logprob: -8.062430381774902
    10. ' ' → logprob: -8.687430381774902

Token 177: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -9.782141569303349e-05
    2. '(' → logprob: -9.25009822845459
    3. 'as' → logprob: -14.12509822845459
    4. ' (' → logprob: -14.37509822845459
    5. '(a' → logprob: -15.75009822845459
    6. '(abs' → logprob: -16.875097274780273
    7. '(
' → logprob: -17.250097274780273
    8. '((' → logprob: -17.375097274780273
    9. '(am' → logprob: -17.375097274780273
    10. '(ans' → logprob: -17.500097274780273

Token 178: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -3.786196975852363e-05
    2. 'u' → logprob: -10.375038146972656
    3. 'sum' → logprob: -12.125038146972656
    4. 'un' → logprob: -14.500038146972656
    5. 'us' → logprob: -15.625038146972656
    6. 'ум' → logprob: -16.500038146972656
    7. 'ub' → logprob: -16.750038146972656
    8. '
' → logprob: -16.875038146972656
    9. '

' → logprob: -17.125038146972656
    10. 'im' → logprob: -17.250038146972656

Token 179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0619756355881691
    2. '-' → logprob: -2.8119757175445557
    3. ' ' → logprob: -12.061975479125977
    4. ')' → logprob: -13.311975479125977
    5. ' ' → logprob: -15.061975479125977
    6. '   ' → logprob: -16.686975479125977
    7. ' -
' → logprob: -16.686975479125977
    8. ',' → logprob: -17.186975479125977
    9. ' )' → logprob: -17.311975479125977
    10. '  ' → logprob: -17.686975479125977

Token 180: ' min' (ID: 1349)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011247998103499413
    2. ' ' → logprob: -4.5112481117248535
    3. '   ' → logprob: -8.761247634887695
    4. '  ' → logprob: -11.511247634887695
    5. '(' → logprob: -11.636247634887695
    6. '       ' → logprob: -12.511247634887695
    7. '    ' → logprob: -12.886247634887695
    8. 'min' → logprob: -13.073747634887695
    9. '           ' → logprob: -13.261247634887695
    10. '     ' → logprob: -13.448747634887695

Token 181: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.750005722045898
    3. 'a' → logprob: -12.875005722045898
    4. '(
' → logprob: -16.6250057220459
    5. '(A' → logprob: -18.8750057220459
    6. ')' → logprob: -19.6250057220459
    7. ' (' → logprob: -19.7500057220459
    8. '(abs' → logprob: -20.0000057220459
    9. ')a' → logprob: -20.1250057220459
    10. '_a' → logprob: -20.5000057220459

Token 182: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.523442804813385
    2. 'a' → logprob: -0.898442804813385
    3. ')' → logprob: -8.898443222045898
    4. '(a' → logprob: -9.023443222045898
    5. ' a' → logprob: -10.648443222045898
    6. '_a' → logprob: -11.148443222045898
    7. '[' → logprob: -12.273443222045898
    8. '(' → logprob: -12.523443222045898
    9. '))' → logprob: -12.898443222045898
    10. '(A' → logprob: -13.023443222045898

Token 183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02631865069270134
    2. ')*' → logprob: -3.6513185501098633
    3. ' )' → logprob: -11.651318550109863
    4. '   ' → logprob: -12.276318550109863
    5. '))' → logprob: -12.651318550109863
    6. '*' → logprob: -14.401318550109863
    7. ' ' → logprob: -15.901318550109863
    8. '  ' → logprob: -16.02631950378418
    9. ')**' → logprob: -16.02631950378418
    10. '*)' → logprob: -16.02631950378418

Token 184: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3256380259990692
    2. ' *' → logprob: -1.3256380558013916
    3. ')' → logprob: -4.4506378173828125
    4. ')*' → logprob: -7.7006378173828125
    5. '()' → logprob: -9.575637817382812
    6. '()*' → logprob: -9.575637817382812
    7. '))' → logprob: -11.075637817382812
    8. '   ' → logprob: -11.575637817382812
    9. ' ' → logprob: -12.700637817382812
    10. ' ' → logprob: -12.700637817382812

Token 185: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019306590547785163
    2. ' ' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.376930236816406
    4. '
' → logprob: -15.751930236816406
    5. '```' → logprob: -16.126930236816406
    6. '  ' → logprob: -16.751930236816406
    7. '۲' → logprob: -17.126930236816406
    8. '２' → logprob: -18.001930236816406
    9. '    ' → logprob: -18.001930236816406
    10. '       ' → logprob: -18.314430236816406

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.754368223482743e-05
    2. ' ' → logprob: -9.625067710876465
    3. '   ' → logprob: -14.000067710876465
    4. '```' → logprob: -15.812567710876465
    5. '
' → logprob: -16.50006675720215
    6. '۲' → logprob: -17.00006675720215
    7. '  ' → logprob: -17.25006675720215
    8. '       ' → logprob: -17.43756675720215
    9. '           ' → logprob: -17.50006675720215
    10. '２' → logprob: -17.62506675720215

Token 187: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010366239439463243
    2. ')
' → logprob: -9.250103950500488
    3. ' )' → logprob: -12.125103950500488
    4. '   ' → logprob: -13.750103950500488
    5. '))' → logprob: -14.500103950500488
    6. ')`' → logprob: -15.875103950500488
    7. '())' → logprob: -16.250102996826172
    8. ')

' → logprob: -17.250102996826172
    9. ')
' → logprob: -17.500102996826172
    10. '`)' → logprob: -17.625102996826172

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06221751496195793
    2. 'else' → logprob: -2.8122174739837646
    3. ' else' → logprob: -8.312217712402344
    4. '
' → logprob: -13.187217712402344
    5. '	else' → logprob: -13.937217712402344
    6. '    
' → logprob: -14.437217712402344
    7. '<|end|>' → logprob: -15.187217712402344
    8. ')' → logprob: -15.312217712402344
    9. '```' → logprob: -16.187217712402344
    10. 'elif' → logprob: -16.312217712402344

Token 189: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01176804956048727
    2. '   ' → logprob: -4.761767864227295
    3. ' else' → logprob: -5.761767864227295
    4. '
' → logprob: -13.511768341064453
    5. ' ' → logprob: -14.636768341064453
    6. 'elif' → logprob: -14.636768341064453
    7. '	else' → logprob: -15.511768341064453
    8. '    
' → logprob: -15.636768341064453
    9. '_else' → logprob: -16.136768341064453
    10. '```' → logprob: -16.886768341064453

Token 190: ' If' (ID: 1843)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2629612982273102
    2. ' else' → logprob: -1.5129612684249878
    3. '   ' → logprob: -4.512961387634277
    4. ' ' → logprob: -12.387961387634277
    5. '
' → logprob: -14.762961387634277
    6. '  ' → logprob: -14.887961387634277
    7. '	else' → logprob: -15.012961387634277
    8. '       ' → logprob: -15.887961387634277
    9. '    ' → logprob: -16.13796043395996
    10. '    
' → logprob: -16.38796043395996

Token 191: ' the' (ID: 290)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14679093658924103
    2. 'not' → logprob: -2.0217909812927246
    3. ' c' → logprob: -6.521790981292725
    4. 'else' → logprob: -6.521790981292725
    5. ' else' → logprob: -7.896790981292725
    6. '   ' → logprob: -8.021790504455566
    7. 'c' → logprob: -8.646790504455566
    8. ' the' → logprob: -8.646790504455566
    9. ':' → logprob: -10.396790504455566
    10. ' ' → logprob: -10.646790504455566

Token 192: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.47326311469078064
    2. ' count' → logprob: -1.723263144493103
    3. 'c' → logprob: -2.2232630252838135
    4. 'else' → logprob: -2.4732630252838135
    5. ' c' → logprob: -5.598263263702393
    6. ' number' → logprob: -7.598263263702393
    7. ' else' → logprob: -7.723263263702393
    8. '   ' → logprob: -7.723263263702393
    9. 'not' → logprob: -8.473262786865234
    10. ' not' → logprob: -8.598262786865234

Token 193: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7325804233551025
    2. ' %' → logprob: -1.7325804233551025
    3. 'of' → logprob: -2.1075804233551025
    4. '   ' → logprob: -2.7325804233551025
    5. ' is' → logprob: -2.8575804233551025
    6. '%' → logprob: -2.8575804233551025
    7. ' ==' → logprob: -3.7325804233551025
    8. '==' → logprob: -5.107580184936523
    9. 'else' → logprob: -5.107580184936523
    10. ':' → logprob: -6.732580184936523

Token 194: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.027347231283783913
    2. ' negative' → logprob: -3.7773473262786865
    3. '0' → logprob: -5.652347087860107
    4. 'neg' → logprob: -8.152347564697266
    5. '   ' → logprob: -9.777347564697266
    6. ' negatives' → logprob: -9.777347564697266
    7. ' ' → logprob: -10.652347564697266
    8. 'zero' → logprob: -10.652347564697266
    9. 'c' → logprob: -10.652347564697266
    10. 'not' → logprob: -10.902347564697266

Token 195: ' numbers' (ID: 8663)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.649871826171875
    2. 'numbers' → logprob: -1.649871826171875
    3. ' ==' → logprob: -1.774871826171875
    4. ' is' → logprob: -3.024871826171875
    5. ' numbers' → logprob: -3.274871826171875
    6. 'is' → logprob: -4.024871826171875
    7. 's' → logprob: -4.899871826171875
    8. 'else' → logprob: -6.399871826171875
    9. '%' → logprob: -7.649871826171875
    10. ':' → logprob: -7.899871826171875

Token 196: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6934617757797241
    2. '==' → logprob: -1.1934617757797241
    3. ' is' → logprob: -1.6934617757797241
    4. 'else' → logprob: -5.568461894989014
    5. 'is' → logprob: -5.818461894989014
    6. ':' → logprob: -6.068461894989014
    7. '   ' → logprob: -6.193461894989014
    8. '%' → logprob: -6.693461894989014
    9. ' %' → logprob: -8.443461418151855
    10. '=' → logprob: -8.693461418151855

Token 197: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.018264319747686386
    2. ' even' → logprob: -4.018264293670654
    3. '0' → logprob: -9.643264770507812
    4. 'not' → logprob: -10.893264770507812
    5. ' not' → logprob: -11.518264770507812
    6. ' ' → logprob: -11.518264770507812
    7. '   ' → logprob: -11.768264770507812
    8. '_even' → logprob: -12.893264770507812
    9. 'Even' → logprob: -14.768264770507812
    10. ')' → logprob: -16.643264770507812

Token 198: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2445218563079834
    2. '   ' → logprob: -1.2445218563079834
    3. 'else' → logprob: -1.2445218563079834
    4. ':
' → logprob: -2.3695218563079834
    5. ' else' → logprob: -3.4945218563079834
    6. '       ' → logprob: -4.4945220947265625
    7. ',' → logprob: -7.4945220947265625
    8. '	else' → logprob: -10.244522094726562
    9. '):
' → logprob: -10.369522094726562
    10. ',
' → logprob: -11.244522094726562

Token 199: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029635541141033173
    2. ':' → logprob: -6.502963542938232
    3. '   ' → logprob: -6.752963542938232
    4. ' else' → logprob: -8.87796401977539
    5. '    ' → logprob: -10.00296401977539
    6. 'else' → logprob: -10.12796401977539
    7. ':
' → logprob: -10.50296401977539
    8. 'print' → logprob: -10.87796401977539
    9. ' print' → logprob: -11.62796401977539
    10. '     ' → logprob: -12.62796401977539

Token 200: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13968844711780548
    2. '   ' → logprob: -2.139688491821289
    3. ' print' → logprob: -5.014688491821289
    4. 'print' → logprob: -5.139688491821289
    5. '    ' → logprob: -9.014688491821289
    6. ' else' → logprob: -10.514688491821289
    7. 'else' → logprob: -10.764688491821289
    8. '     ' → logprob: -12.389688491821289
    9. '      ' → logprob: -13.139688491821289
    10. '    
' → logprob: -14.389688491821289

Token 201: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49923861026763916
    2. 'print' → logprob: -1.4992386102676392
    3. '       ' → logprob: -1.9992386102676392
    4. ' print' → logprob: -3.3742384910583496
    5. '    ' → logprob: -11.124238967895508
    6. ' ' → logprob: -13.124238967895508
    7. '	print' → logprob: -13.124238967895508
    8. '     ' → logprob: -13.374238967895508
    9. '      ' → logprob: -14.124238967895508
    10. '  ' → logprob: -14.124238967895508

Token 202: ' minimal' (ID: 19957)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07378776371479034
    2. ' print' → logprob: -2.8237876892089844
    3. '   ' → logprob: -4.448787689208984
    4. 'else' → logprob: -10.573787689208984
    5. ' ' → logprob: -11.323787689208984
    6. '  ' → logprob: -12.198787689208984
    7. '    ' → logprob: -12.448787689208984
    8. ' else' → logprob: -12.573787689208984
    9. '       ' → logprob: -13.073787689208984
    10. 'sum' → logprob: -13.698787689208984

Token 203: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.570068895816803
    2. 'print' → logprob: -0.945068895816803
    3. ' sum' → logprob: -3.195068836212158
    4. ' print' → logprob: -5.570068836212158
    5. '   ' → logprob: -7.195068836212158
    6. '(sum' → logprob: -8.945069313049316
    7. 'value' → logprob: -10.320069313049316
    8. 'result' → logprob: -10.445069313049316
    9. 'possible' → logprob: -10.570069313049316
    10. 'abs' → logprob: -10.695069313049316

Token 204: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2517168521881104
    2. ' is' → logprob: -1.2517168521881104
    3. 'is' → logprob: -1.3767168521881104
    4. '(' → logprob: -2.2517168521881104
    5. '(as' → logprob: -3.7517168521881104
    6. '(is' → logprob: -4.001716613769531
    7. 'print' → logprob: -4.126716613769531
    8. ' equals' → logprob: -6.126716613769531
    9. '=' → logprob: -6.376716613769531
    10. ' =' → logprob: -6.626716613769531

Token 205: ' just' (ID: 1327)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.06344491243362427
    2. ' asum' → logprob: -2.9384448528289795
    3. '   ' → logprob: -5.188445091247559
    4. ' as' → logprob: -6.438445091247559
    5. 'print' → logprob: -7.438445091247559
    6. 'ass' → logprob: -8.313445091247559
    7. '(as' → logprob: -8.813445091247559
    8. '    ' → logprob: -9.438445091247559
    9. '  ' → logprob: -9.813445091247559
    10. ' print' → logprob: -9.813445091247559

Token 206: ' the' (ID: 290)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.019419290125370026
    2. 'print' → logprob: -4.394419193267822
    3. '(as' → logprob: -5.144419193267822
    4. ' as' → logprob: -7.269419193267822
    5. '   ' → logprob: -8.89441967010498
    6. ' print' → logprob: -9.64441967010498
    7. 'the' → logprob: -9.76941967010498
    8. 'ass' → logprob: -10.26941967010498
    9. ' the' → logprob: -11.14441967010498
    10. ' asum' → logprob: -11.26941967010498

Token 207: ' sum' (ID: 4215)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.000919796759262681
    2. 'print' → logprob: -7.375919818878174
    3. ' as' → logprob: -9.000919342041016
    4. ' asum' → logprob: -9.375919342041016
    5. 'sum' → logprob: -10.000919342041016
    6. '(as' → logprob: -11.125919342041016
    7. ' print' → logprob: -11.125919342041016
    8. ' sum' → logprob: -12.250919342041016
    9. '   ' → logprob: -12.875919342041016
    10. 'ass' → logprob: -14.000919342041016

Token 208: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29960018396377563
    2. '(as' → logprob: -1.4246001243591309
    3. '(print' → logprob: -4.799600124359131
    4. 'else' → logprob: -5.174600124359131
    5. '(' → logprob: -5.674600124359131
    6. '(abs' → logprob: -8.174600601196289
    7. 'print' → logprob: -8.424600601196289
    8. '()' → logprob: -9.424600601196289
    9. '(of' → logprob: -9.424600601196289
    10. '(or' → logprob: -9.424600601196289

Token 209: ' absolute' (ID: 17786)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3359682857990265
    2. 'as' → logprob: -2.085968255996704
    3. 'the' → logprob: -2.210968255996704
    4. 'all' → logprob: -3.835968255996704
    5. 'abs' → logprob: -3.960968255996704
    6. 'absolute' → logprob: -5.085968494415283
    7. ' the' → logprob: -5.585968494415283
    8. ' a' → logprob: -7.460968494415283
    9. ' all' → logprob: -8.085968017578125
    10. ' absolute' → logprob: -9.835968017578125

Token 210: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.0011715330183506012
    2. ' values' → logprob: -6.751171588897705
    3. '(values' → logprob: -14.501171112060547
    4. 'value' → logprob: -15.001171112060547
    5. '	values' → logprob: -15.751171112060547
    6. '.values' → logprob: -16.001171112060547
    7. 'a' → logprob: -16.876171112060547
    8. '-values' → logprob: -16.876171112060547
    9. ')' → logprob: -17.001171112060547
    10. '_values' → logprob: -18.376171112060547

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5861971378326416
    2. 'else' → logprob: -0.8361971378326416
    3. ' else' → logprob: -4.5861968994140625
    4. '	else' → logprob: -11.836196899414062
    5. '       ' → logprob: -12.711196899414062
    6. 'print' → logprob: -13.961196899414062
    7. '_else' → logprob: -14.086196899414062
    8. '(' → logprob: -14.586196899414062
    9. ':
' → logprob: -14.961196899414062
    10. '    
' → logprob: -15.586196899414062

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10049423575401306
    2. 'else' → logprob: -2.350494146347046
    3. ' else' → logprob: -8.350494384765625
    4. '       ' → logprob: -10.475494384765625
    5. 'print' → logprob: -10.850494384765625
    6. '```' → logprob: -12.725494384765625
    7. '	else' → logprob: -14.975494384765625
    8. 'elif' → logprob: -15.350494384765625
    9. '    
' → logprob: -16.725494384765625
    10. '  ' → logprob: -16.850494384765625

Token 213: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38877934217453003
    2. 'else' (adapté à ' else') → logprob: -1.1387794017791748
    3. ' else' → logprob: -6.263779163360596
    4. '       ' → logprob: -13.888779640197754
    5. '```' → logprob: -14.263779640197754
    6. 'print' → logprob: -14.763779640197754
    7. '	else' → logprob: -15.138779640197754
    8. '  ' → logprob: -16.888778686523438
    9. 'elif' → logprob: -17.013778686523438
    10. ' ' → logprob: -17.138778686523438

Token 214: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5771377086639404
    2. ':' → logprob: -1.0771377086639404
    3. '       ' → logprob: -2.3271377086639404
    4. '   ' → logprob: -8.20213794708252
    5. 'print' → logprob: -9.95213794708252
    6. ' print' → logprob: -11.32713794708252
    7. ' :
' → logprob: -11.95213794708252
    8. '):
' → logprob: -12.70213794708252
    9. '(print' → logprob: -13.20213794708252
    10. '():
' → logprob: -13.57713794708252

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07945379614830017
    2. 'print' → logprob: -2.579453706741333
    3. '   ' → logprob: -7.829453945159912
    4. ' print' → logprob: -8.704453468322754
    5. '	print' → logprob: -16.32945442199707
    6. '     ' → logprob: -16.82945442199707
    7. '    ' → logprob: -17.57945442199707
    8. '      ' → logprob: -18.20445442199707
    9. '           ' → logprob: -18.20445442199707
    10. '```' → logprob: -18.45445442199707

Token 216: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00013357517309486866
    2. ' print' → logprob: -9.000133514404297
    3. '   ' → logprob: -11.500133514404297
    4. '       ' → logprob: -17.250133514404297
    5. '	print' → logprob: -20.000133514404297
    6. '  ' → logprob: -21.375133514404297
    7. ' ' → logprob: -22.250133514404297
    8. '```' → logprob: -23.000133514404297
    9. '    ' → logprob: -23.500133514404297
    10. '.print' → logprob: -24.500133514404297

Token 217: '(as' (ID: 67370)
  Prédit: '(as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -8.77627644513268e-06
    2. 'as' → logprob: -12.375008583068848
    3. '(' → logprob: -12.500008583068848
    4. ' (' → logprob: -14.000008583068848
    5. '(a' → logprob: -19.375009536743164
    6. '(
' → logprob: -19.750009536743164
    7. ' as' → logprob: -20.375009536743164
    8. '(os' → logprob: -20.375009536743164
    9. '	as' → logprob: -20.625009536743164
    10. '(ar' → logprob: -20.625009536743164

Token 218: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.0087516784551553e-05
    2. 'sum' → logprob: -11.62501049041748
    3. 'us' → logprob: -14.50001049041748
    4. 'u' → logprob: -15.00001049041748
    5. 'ум' → logprob: -16.125009536743164
    6. 'un' → logprob: -16.375009536743164
    7. 'ume' → logprob: -17.875009536743164
    8. 'ut' → logprob: -18.000009536743164
    9. 'up' → logprob: -18.125009536743164
    10. 'umption' → logprob: -18.625009536743164

Token 219: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.87500286102295
    4. '))' → logprob: -15.62500286102295
    5. '   ' → logprob: -17.250001907348633
    6. '())' → logprob: -17.500001907348633
    7. ')#' → logprob: -17.750001907348633
    8. ')}' → logprob: -18.000001907348633
    9. '}' → logprob: -18.750001907348633
    10. ')return' → logprob: -19.000001907348633

Token 220: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1377826929092407
    2. '#' → logprob: -1.5127826929092407
    3. '<|end|>' → logprob: -1.5127826929092407
    4. ')' → logprob: -2.387782573699951
    5. '
' → logprob: -2.637782573699951
    6. '```' → logprob: -3.262782573699951
    7. '\n' → logprob: -4.512782573699951
    8. 'if' → logprob: -4.512782573699951
    9. 'def' → logprob: -5.512782573699951
    10. '\' → logprob: -5.637782573699951

Token 221: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023264581337571144
    2. '__' → logprob: -3.7732646465301514
    3. '_' → logprob: -11.27326488494873
    4. ' ' → logprob: -12.89826488494873
    5. '_name' → logprob: -13.02326488494873
    6. ' _' → logprob: -14.39826488494873
    7. ' ' → logprob: -15.14826488494873
    8. '___' → logprob: -15.27326488494873
    9. 'name' → logprob: -15.52326488494873
    10. ' name' → logprob: -16.273263931274414

Token 222: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003289655316621065
    2. '==' → logprob: -6.628289699554443
    3. ' ==' → logprob: -6.628289699554443
    4. 'name' → logprob: -7.753289699554443
    5. ' __' → logprob: -9.128289222717285
    6. '__.__' → logprob: -10.378289222717285
    7. '()==' → logprob: -11.628289222717285
    8. '__.' → logprob: -11.753289222717285
    9. '(__' → logprob: -11.878289222717285
    10. '=="' → logprob: -12.003289222717285

Token 223: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.5094070477061905e-05
    2. '__.__' → logprob: -11.500015258789062
    3. '==' → logprob: -12.625015258789062
    4. '_' → logprob: -14.000015258789062
    5. '__
' → logprob: -15.000015258789062
    6. '__.' → logprob: -15.500015258789062
    7. '____' → logprob: -16.000015258789062
    8. '___' → logprob: -16.375015258789062
    9. '__('' → logprob: -17.625015258789062
    10. '__["' → logprob: -17.750015258789062

Token 224: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5721916556358337
    2. ' ==' → logprob: -1.3221917152404785
    3. '==' → logprob: -1.8221917152404785
    4. '=="' → logprob: -4.9471917152404785
    5. '=='' → logprob: -8.32219123840332
    6. '__.__' → logprob: -10.32219123840332
    7. ' =="' → logprob: -10.69719123840332
    8. '.__' → logprob: -10.82219123840332
    9. '_' → logprob: -10.94719123840332
    10. '"' → logprob: -11.19719123840332

Token 225: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018331378698349
    2. ''' → logprob: -4.018331527709961
    3. ' "__' → logprob: -8.643331527709961
    4. '__' → logprob: -12.893331527709961
    5. ' '__' → logprob: -13.018331527709961
    6. '"_' → logprob: -16.01833152770996
    7. '"name' → logprob: -17.01833152770996
    8. ''"' → logprob: -17.26833152770996
    9. '("__' → logprob: -17.39333152770996
    10. '"user' → logprob: -17.64333152770996

Token 226: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.246537173457909e-06
    2. 'name' → logprob: -13.250003814697266
    3. '__' → logprob: -13.500003814697266
    4. ' main' → logprob: -14.250003814697266
    5. '_main' → logprob: -15.000003814697266
    6. '"' → logprob: -17.000003814697266
    7. '	main' → logprob: -17.875003814697266
    8. 'ma' → logprob: -18.125003814697266
    9. 'm' → logprob: -19.000003814697266
    10. '_MAIN' → logprob: -19.250003814697266

Token 227: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006736691575497389
    2. '__' → logprob: -5.006736755371094
    3. '__':
' → logprob: -10.756736755371094
    4. '_' → logprob: -17.631736755371094
    5. '__["' → logprob: -19.006736755371094
    6. '__
' → logprob: -19.881736755371094
    7. '__:' → logprob: -19.881736755371094
    8. '__.' → logprob: -20.881736755371094
    9. '__",' → logprob: -21.256736755371094
    10. '___' → logprob: -21.506736755371094

Token 228: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.037298016250133514
    2. '   ' → logprob: -3.5372979640960693
    3. 'main' → logprob: -4.912298202514648
    4. '	main' → logprob: -8.787298202514648
    5. '_main' → logprob: -12.412298202514648
    6. '    
' → logprob: -12.662298202514648
    7. '(main' → logprob: -13.537298202514648
    8. ' ' → logprob: -14.662298202514648
    9. ' ' → logprob: -14.912298202514648
    10. '    ' → logprob: -15.037298202514648

Token 229: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.0206720617134124e-05
    2. ' main' → logprob: -11.50001049041748
    3. '	main' → logprob: -19.000009536743164
    4. '   ' → logprob: -19.750009536743164
    5. '.main' → logprob: -21.250009536743164
    6. 'mai' → logprob: -21.250009536743164
    7. '_main' → logprob: -21.750009536743164
    8. '(main' → logprob: -21.875009536743164
    9. 'ma' → logprob: -22.000009536743164
    10. 'Main' → logprob: -22.250009536743164

Token 230: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0034094166476279497
    2. '(' → logprob: -6.003409385681152
    3. '()
' → logprob: -7.003409385681152
    4. '(
' → logprob: -11.378409385681152
    5. '()

' → logprob: -12.503409385681152
    6. '();' → logprob: -13.378409385681152
    7. ' ()' → logprob: -13.753409385681152
    8. '()\' → logprob: -13.878409385681152
    9. '```' → logprob: -13.878409385681152
    10. '#' → logprob: -14.253409385681152


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 228
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 31.58%
Précision adaptée (1ère position): 32.46%
Précision (top 10): 75.00%
================================================================================
