================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
import sys

W = 1000000007
def foo(z, y):
    q, r = y
    return (q*3)%W if z == '0' else (q*3+r)%W

def bar(z, y):
    q, r = y
    return r%W if z == '0' else (r*2)%W

l = sys.stdin.readline().strip()
a, b = 1, 2
for idx in range(1, len(l)):
    c = l[idx]
    a = foo(c, (a, b))
    b = bar(c, (a, b))

print((a+b)%W)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.4987759292125702
    2. 'partial' → logprob: -1.2487759590148926
    3. 'reduce' → logprob: -2.4987759590148926
    4. ' wraps' → logprob: -3.9987759590148926
    5. 'l' → logprob: -5.748775959014893
    6. ' partial' → logprob: -7.248775959014893
    7. 'cached' → logprob: -7.623775959014893
    8. 'cache' → logprob: -7.623775959014893
    9. 'cmp' → logprob: -8.748775482177734
    10. ' reduce' → logprob: -9.373775482177734

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02300039678812027
    2. '(lambda' → logprob: -4.523000240325928
    3. ',' → logprob: -5.773000240325928
    4. '.' → logprob: -6.023000240325928
    5. '\' → logprob: -6.023000240325928
    6. ' (' → logprob: -6.398000240325928
    7. '```' → logprob: -7.398000240325928
    8. '(
' → logprob: -8.523000717163086
    9. ' ' → logprob: -8.523000717163086
    10. '\(' → logprob: -8.648000717163086

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02033013291656971
    2. '\' → logprob: -4.64532995223999
    3. 'def' → logprob: -5.64532995223999
    4. '(lambda' → logprob: -6.27032995223999
    5. ' ' → logprob: -6.39532995223999
    6. '```' → logprob: -7.39532995223999
    7. '(
' → logprob: -7.64532995223999
    8. ' (' → logprob: -8.145330429077148
    9. ',' → logprob: -8.270330429077148
    10. 'r' → logprob: -8.395330429077148

Token 6: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8745397925376892
    2. ' operator' → logprob: -0.8745397925376892
    3. ' math' → logprob: -1.874539852142334
    4. ' itertools' → logprob: -5.249539852142334
    5. ' sys' → logprob: -5.749539852142334
    6. 'operator' → logprob: -5.874539852142334
    7. ' collections' → logprob: -7.374539852142334
    8. 'math' → logprob: -8.249539375305176
    9. 'os' → logprob: -8.999539375305176
    10. ' re' → logprob: -8.999539375305176

Token 7: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1780880242586136
    2. '\' → logprob: -2.9280879497528076
    3. '\n' → logprob: -2.9280879497528076
    4. 'import' → logprob: -4.428088188171387
    5. '
' → logprob: -4.928088188171387
    6. '

' → logprob: -4.928088188171387
    7. '```' → logprob: -5.053088188171387
    8. '<|end|>' → logprob: -5.053088188171387
    9. ',' → logprob: -5.553088188171387
    10. 'newline' → logprob: -5.928088188171387

Token 8: 'W' (ID: 54)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2905972898006439
    2. '.' → logprob: -2.2905972003936768
    3. 'print' → logprob: -3.4155972003936768
    4. 'for' → logprob: -3.7905972003936768
    5. '=' → logprob: -3.9155972003936768
    6. '[' → logprob: -4.540597438812256
    7. '`' → logprob: -4.540597438812256
    8. '\' → logprob: -4.790597438812256
    9. ',' → logprob: -4.790597438812256
    10. '(' → logprob: -5.165597438812256

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2507348954677582
    2. ' =' → logprob: -2.250734806060791
    3. 'H' → logprob: -3.250734806060791
    4. 'hile' → logprob: -3.750734806060791
    5. 'h' → logprob: -4.000734806060791
    6. ',' → logprob: -4.250734806060791
    7. 'IDTH' → logprob: -5.250734806060791
    8. '_' → logprob: -5.750734806060791
    9. '   ' → logprob: -6.250734806060791
    10. '=sys' → logprob: -6.875734806060791

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0886906385421753
    2. 'int' → logprob: -1.7136906385421753
    3. ' []' → logprob: -2.088690757751465
    4. '10' → logprob: -2.213690757751465
    5. '[]' → logprob: -2.713690757751465
    6. '0' → logprob: -2.713690757751465
    7. '[int' → logprob: -3.838690757751465
    8. '1' → logprob: -3.963690757751465
    9. ' int' → logprob: -3.963690757751465
    10. '100' → logprob: -4.213690757751465

Token 11: '100' (ID: 1353)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25187745690345764
    2. '[int' → logprob: -2.251877546310425
    3. '3' → logprob: -3.251877546310425
    4. '[]' → logprob: -4.126877307891846
    5. '5' → logprob: -4.376877307891846
    6. '1' → logprob: -4.751877307891846
    7. '10' → logprob: -4.751877307891846
    8. '2' → logprob: -5.001877307891846
    9. 'sys' → logprob: -5.001877307891846
    10. '[' → logprob: -5.501877307891846

Token 12: '000' (ID: 1302)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9537680149078369
    2. '0' → logprob: -1.453768014907837
    3. '%' → logprob: -1.953768014907837
    4. ',' → logprob: -2.453768014907837
    5. '#' → logprob: -3.328768014907837
    6. '\' → logprob: -3.703768014907837
    7. '\n' → logprob: -3.828768014907837
    8. '.' → logprob: -3.953768014907837
    9. ' ' → logprob: -4.328767776489258
    10. '<|end|>' → logprob: -5.203767776489258

Token 13: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.081434965133667
    2. ',' → logprob: -1.206434965133667
    3. '*' → logprob: -1.831434965133667
    4. '\n' → logprob: -2.706434965133667
    5. '\' → logprob: -3.831434965133667
    6. '
' → logprob: -4.206435203552246
    7. '000' → logprob: -4.331435203552246
    8. '#' → logprob: -4.456435203552246
    9. ')' → logprob: -4.706435203552246
    10. '+' → logprob: -4.831435203552246

Token 14: '7' (ID: 22)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03746304288506508
    2. ',' → logprob: -4.662463188171387
    3. '000' → logprob: -5.287463188171387
    4. '*' → logprob: -5.662463188171387
    5. '\n' → logprob: -5.662463188171387
    6. ' ' → logprob: -5.912463188171387
    7. '00' → logprob: -6.037463188171387
    8. '_' → logprob: -6.037463188171387
    9. '+' → logprob: -6.037463188171387
    10. '' → logprob: -6.787463188171387

Token 15: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.014472484588623
    2. '\' → logprob: -1.764472484588623
    3. ',' → logprob: -2.514472484588623
    4. '#' → logprob: -2.639472484588623
    5. ' ' → logprob: -2.639472484588623
    6. '
' → logprob: -2.889472484588623
    7. '*' → logprob: -2.889472484588623
    8. '\n' → logprob: -3.264472484588623
    9. '' → logprob: -3.764472484588623
    10. ' def' → logprob: -3.889472484588623

Token 16: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03600965067744255
    2. '
' → logprob: -4.161009788513184
    3. ' def' → logprob: -4.911009788513184
    4. '

' → logprob: -5.411009788513184
    5. 'n' → logprob: -6.161009788513184
    6. '\n' → logprob: -6.661009788513184
    7. ' 

' → logprob: -6.911009788513184
    8. '\' → logprob: -7.036009788513184
    9. '#' → logprob: -7.161009788513184
    10. '' → logprob: -7.286009788513184

Token 17: ' foo' (ID: 30551)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1599091291427612
    2. ' solve' → logprob: -1.5349091291427612
    3. ' pow' → logprob: -2.034909248352051
    4. ' factorial' → logprob: -2.409909248352051
    5. ' main' → logprob: -2.534909248352051
    6. ' gcd' → logprob: -2.909909248352051
    7. ' f' → logprob: -3.284909248352051
    8. ' add' → logprob: -4.159909248352051
    9. ' factor' → logprob: -4.409909248352051
    10. ' multiply' → logprob: -5.034909248352051

Token 18: '(z' (ID: 27674)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006272526225075126
    2. '_' → logprob: -7.625627040863037
    3. ' (' → logprob: -9.875627517700195
    4. '('' → logprob: -11.000627517700195
    5. '```' → logprob: -11.375627517700195
    6. '(n' → logprob: -11.750627517700195
    7. '(a' → logprob: -11.750627517700195
    8. 'a' → logprob: -12.000627517700195
    9. '("("' → logprob: -12.000627517700195
    10. ')' → logprob: -12.375627517700195

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017722686752676964
    2. ',' → logprob: -4.6427226066589355
    3. ')' → logprob: -4.8927226066589355
    4. ':' → logprob: -8.517723083496094
    5. ' ):' → logprob: -9.642723083496094
    6. '[' → logprob: -10.267723083496094
    7. 'u' → logprob: -10.767723083496094
    8. 'e' → logprob: -11.142723083496094
    9. 's' → logprob: -11.267723083496094
    10. 'a' → logprob: -11.392723083496094

Token 20: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5402701497077942
    2. 'x' → logprob: -1.4152700901031494
    3. ' y' → logprob: -1.9152700901031494
    4. 'y' → logprob: -3.9152700901031494
    5. ' a' → logprob: -6.4152703285217285
    6. ' ' → logprob: -6.5402703285217285
    7. ' w' → logprob: -6.6652703285217285
    8. 'a' → logprob: -7.2902703285217285
    9. ' b' → logprob: -8.29026985168457
    10. ' f' → logprob: -8.41526985168457

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008566702017560601
    2. ')' → logprob: -7.750856876373291
    3. ',' → logprob: -8.000856399536133
    4. ':' → logprob: -9.875856399536133
    5. ' ):' → logprob: -10.500856399536133
    6. '):
' → logprob: -12.250856399536133
    7. '=' → logprob: -13.500856399536133
    8. '),' → logprob: -13.750856399536133
    9. '**' → logprob: -14.375856399536133
    10. '»:' → logprob: -14.875856399536133

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005953448358923197
    2. ' :' → logprob: -5.880953311920166
    3. ',' → logprob: -6.880953311920166
    4. ':return' → logprob: -6.880953311920166
    5. '):' → logprob: -8.005953788757324
    6. '+:' → logprob: -8.255953788757324
    7. ':**' → logprob: -8.755953788757324
    8. '   ' → logprob: -9.005953788757324
    9. '+' → logprob: -9.755953788757324
    10. ':
' → logprob: -10.255953788757324

Token 23: ' q' (ID: 2335)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25438928604125977
    2. ' z' → logprob: -2.3793892860412598
    3. ' return' → logprob: -2.8793892860412598
    4. 'z' → logprob: -3.5043892860412598
    5. '   ' → logprob: -3.8793892860412598
    6. 'return' → logprob: -5.00438928604126
    7. '(z' → logprob: -5.00438928604126
    8. '    ' → logprob: -5.37938928604126
    9. '(' → logprob: -5.50438928604126
    10. ' ' → logprob: -6.62938928604126

Token 24: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20845293998718262
    2. ' ' → logprob: -3.0834529399871826
    3. 'u' → logprob: -3.3334529399871826
    4. '=' → logprob: -3.5834529399871826
    5. ' +=' → logprob: -3.7084529399871826
    6. ' +' → logprob: -3.9584529399871826
    7. '+=' → logprob: -4.083453178405762
    8. ' =' → logprob: -4.958453178405762
    9. ',' → logprob: -5.458453178405762
    10. '  ' → logprob: -6.458453178405762

Token 25: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15365295112133026
    2. ' r' → logprob: -2.0286529064178467
    3. 'w' → logprob: -5.028653144836426
    4. ' w' → logprob: -6.403653144836426
    5. 'p' → logprob: -7.153653144836426
    6. 'x' → logprob: -7.778653144836426
    7. 'b' → logprob: -8.403653144836426
    8. 'z' → logprob: -8.653653144836426
    9. ' p' → logprob: -8.778653144836426
    10. ' ' → logprob: -8.903653144836426

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132641315460205
    2. '=' → logprob: -1.3132641315460205
    3. ' ' → logprob: -13.313263893127441
    4. ',' → logprob: -15.063263893127441
    5. ')' → logprob: -17.063264846801758
    6. '=re' → logprob: -17.063264846801758
    7. '=os' → logprob: -17.313264846801758
    8. '=q' → logprob: -17.563264846801758
    9. '=s' → logprob: -17.688264846801758
    10. '=line' → logprob: -17.688264846801758

Token 27: ' y' (ID: 342)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2022811621427536
    2. ' div' → logprob: -1.70228111743927
    3. ' ' → logprob: -7.8272809982299805
    4. 'z' → logprob: -8.45228099822998
    5. ' z' → logprob: -9.20228099822998
    6. '   ' → logprob: -9.32728099822998
    7. '	div' → logprob: -10.45228099822998
    8. '  ' → logprob: -11.70228099822998
    9. '```' → logprob: -12.32728099822998
    10. 'y' → logprob: -12.32728099822998

Token 28: '
' (ID: 198)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.42961835861206055
    2. '.' → logprob: -1.6796183586120605
    3. ' %' → logprob: -2.9296183586120605
    4. ' ' → logprob: -3.3046183586120605
    5. '%' → logprob: -3.6796183586120605
    6. ' .' → logprob: -4.4296183586120605
    7. ' //' → logprob: -5.0546183586120605
    8. '[' → logprob: -5.1796183586120605
    9. '.div' → logprob: -5.6796183586120605
    10. '//' → logprob: -6.0546183586120605

Token 29: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6144293546676636
    2. ':' → logprob: -1.8644293546676636
    3. ',' → logprob: -2.239429473876953
    4. '   ' → logprob: -2.364429473876953
    5. ':
' → logprob: -3.739429473876953
    6. ' ' → logprob: -4.239429473876953
    7. ',
' → logprob: -4.364429473876953
    8. '\n' → logprob: -5.489429473876953
    9. ':return' → logprob: -5.614429473876953
    10. '    
' → logprob: -5.614429473876953

Token 30: ' return' (ID: 622)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9298105239868164
    2. '   ' → logprob: -1.3048105239868164
    3. ' ' → logprob: -2.5548105239868164
    4. ' return' → logprob: -2.6798105239868164
    5. 'return' (adapté à ' return') → logprob: -2.9298105239868164
    6. ' if' → logprob: -4.179810523986816
    7. ',
' → logprob: -4.179810523986816
    8. '`' → logprob: -4.304810523986816
    9. '+' → logprob: -4.429810523986816
    10. ')' → logprob: -4.554810523986816

Token 31: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38355550169944763
    2. '(z' → logprob: -1.50855553150177
    3. '(q' → logprob: -2.3835554122924805
    4. ' z' → logprob: -6.3835554122924805
    5. 'z' → logprob: -6.6335554122924805
    6. '((' → logprob: -7.6335554122924805
    7. '(' → logprob: -8.00855541229248
    8. '(w' → logprob: -8.13355541229248
    9. 'q' → logprob: -8.63355541229248
    10. ' ' → logprob: -8.75855541229248

Token 32: 'q' (ID: 80)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.20753532648086548
    2. '(z' → logprob: -1.7075352668762207
    3. ' z' → logprob: -5.957535266876221
    4. ' (' → logprob: -6.582535266876221
    5. '(q' → logprob: -6.707535266876221
    6. 'q' → logprob: -8.207535743713379
    7. '(' → logprob: -8.332535743713379
    8. '((' → logprob: -8.832535743713379
    9. ' ' → logprob: -9.957535743713379
    10. '   ' → logprob: -9.957535743713379

Token 33: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5085735321044922
    2. '*' → logprob: -1.0085735321044922
    3. ' +' → logprob: -3.883573532104492
    4. '+' → logprob: -4.383573532104492
    5. '*z' → logprob: -8.008573532104492
    6. ' ' → logprob: -8.383573532104492
    7. '**' → logprob: -9.633573532104492
    8. '*q' → logprob: -9.758573532104492
    9. ' **' → logprob: -10.633573532104492
    10. '*w' → logprob: -10.758573532104492

Token 34: '3' (ID: 18)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00508527597412467
    2. ' z' → logprob: -5.380085468292236
    3. 'q' → logprob: -8.130084991455078
    4. 'r' → logprob: -9.505084991455078
    5. 'W' → logprob: -11.005084991455078
    6. 'y' → logprob: -11.505084991455078
    7. ' ' → logprob: -11.755084991455078
    8. '2' → logprob: -11.755084991455078
    9. 'pow' → logprob: -11.880084991455078
    10. '	z' → logprob: -11.880084991455078

Token 35: ')%' (ID: 57656)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5695449113845825
    2. ' +' → logprob: -1.3195449113845825
    3. '*z' → logprob: -1.9445449113845825
    4. 'z' → logprob: -4.819544792175293
    5. ')' → logprob: -4.819544792175293
    6. '*' → logprob: -5.444544792175293
    7. ')+' → logprob: -6.319544792175293
    8. ' *' → logprob: -7.569544792175293
    9. ' z' → logprob: -7.819544792175293
    10. '*q' → logprob: -9.069544792175293

Token 36: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.02979828231036663
    2. ' W' → logprob: -3.5297982692718506
    3. ' ' → logprob: -10.15479850769043
    4. '100' → logprob: -11.90479850769043
    5. '(' → logprob: -14.40479850769043
    6. '10' → logprob: -15.40479850769043
    7. 'B' → logprob: -15.40479850769043
    8. ' (' → logprob: -15.52979850769043
    9. '  ' → logprob: -15.77979850769043
    10. '(W' → logprob: -16.15479850769043

Token 37: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14913424849510193
    2. '<|end|>' → logprob: -2.3991341590881348
    3. ' +' → logprob: -3.6491341590881348
    4. ' ' → logprob: -4.524134159088135
    5. ')' → logprob: -5.399134159088135
    6. '*' → logprob: -6.024134159088135
    7. '
' → logprob: -6.149134159088135
    8. ',' → logprob: -8.024134635925293
    9. '<|end|>' → logprob: -8.274134635925293
    10. ' 
' → logprob: -8.774134635925293

Token 38: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.666383683681488
    2. ' r' → logprob: -0.916383683681488
    3. 'z' → logprob: -3.291383743286133
    4. 'r' → logprob: -3.791383743286133
    5. ' q' → logprob: -3.791383743286133
    6. ' ' → logprob: -6.791383743286133
    7. 'q' → logprob: -6.916383743286133
    8. ' not' → logprob: -7.291383743286133
    9. ' y' → logprob: -7.416383743286133
    10. ' (' → logprob: -7.916383743286133

Token 39: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7378940582275391
    2. ' ==' → logprob: -0.8628940582275391
    3. ' ' → logprob: -3.362894058227539
    4. ' else' → logprob: -3.362894058227539
    5. ' %' → logprob: -4.612894058227539
    6. '%' → logprob: -4.862894058227539
    7. '+' → logprob: -5.987894058227539
    8. '>' → logprob: -5.987894058227539
    9. 'else' → logprob: -6.237894058227539
    10. ' >' → logprob: -6.612894058227539

Token 40: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2550353705883026
    2. 'q' → logprob: -1.880035400390625
    3. ' ' → logprob: -3.005035400390625
    4. ''q' → logprob: -4.880035400390625
    5. '1' → logprob: -5.380035400390625
    6. ' q' → logprob: -5.755035400390625
    7. 'r' → logprob: -5.880035400390625
    8. ''' → logprob: -6.380035400390625
    9. 'True' → logprob: -6.380035400390625
    10. '"' → logprob: -8.380035400390625

Token 41: '0' (ID: 15)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07521963864564896
    2. '?'' → logprob: -3.9502196311950684
    3. '('' → logprob: -4.575219631195068
    4. '0' → logprob: -4.700219631195068
    5. 'a' → logprob: -4.700219631195068
    6. ''' → logprob: -5.075219631195068
    7. '3' → logprob: -5.825219631195068
    8. '1' → logprob: -5.825219631195068
    9. ''q' → logprob: -6.450219631195068
    10. ' '' → logprob: -6.450219631195068

Token 42: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2565537691116333
    2. ''' → logprob: -1.6315537691116333
    3. 'else' → logprob: -3.7565536499023438
    4. ' ' → logprob: -5.131553649902344
    5. ' '' → logprob: -7.381553649902344
    6. ')' → logprob: -8.506553649902344
    7. ''s' → logprob: -8.881553649902344
    8. ':' → logprob: -9.631553649902344
    9. '')' → logprob: -10.131553649902344
    10. ' or' → logprob: -10.631553649902344

Token 43: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20186643302440643
    2. 'else' → logprob: -1.7018663883209229
    3. ' ' → logprob: -7.951866626739502
    4. '+' → logprob: -10.826866149902344
    5. '	else' → logprob: -11.576866149902344
    6. '  ' → logprob: -11.764366149902344
    7. ' and' → logprob: -11.889366149902344
    8. '    ' → logprob: -12.576866149902344
    9. ',' → logprob: -12.826866149902344
    10. '0' → logprob: -12.951866149902344

Token 44: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08628038316965103
    2. '(q' → logprob: -3.211280345916748
    3. '(r' → logprob: -3.336280345916748
    4. '(' → logprob: -6.211280345916748
    5. ' r' → logprob: -6.961280345916748
    6. ' ' → logprob: -6.961280345916748
    7. 'r' → logprob: -7.086280345916748
    8. ' q' → logprob: -7.711280345916748
    9. ' ((' → logprob: -7.836280345916748
    10. '(y' → logprob: -8.336280822753906

Token 45: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.8246278762817383
    2. '(q' → logprob: -1.0746278762817383
    3. ' (' → logprob: -2.8246278762817383
    4. '(r' → logprob: -3.0746278762817383
    5. ' q' → logprob: -3.0746278762817383
    6. 'r' → logprob: -3.1996278762817383
    7. '(' → logprob: -5.324627876281738
    8. ' r' → logprob: -5.324627876281738
    9. '(W' → logprob: -5.824627876281738
    10. 'W' → logprob: -5.824627876281738

Token 46: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9229994416236877
    2. '+r' → logprob: -1.297999382019043
    3. '+' → logprob: -1.422999382019043
    4. ' +' → logprob: -3.297999382019043
    5. '*r' → logprob: -3.297999382019043
    6. ' *' → logprob: -4.797999382019043
    7. '+y' → logprob: -5.922999382019043
    8. '*y' → logprob: -6.672999382019043
    9. '-' → logprob: -6.797999382019043
    10. ' -' → logprob: -7.922999382019043

Token 47: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7052487134933472
    2. '5' → logprob: -1.3302487134933472
    3. '7' → logprob: -1.9552487134933472
    4. '3' → logprob: -3.4552488327026367
    5. '4' → logprob: -3.8302488327026367
    6. 'r' → logprob: -4.455248832702637
    7. '9' → logprob: -4.580248832702637
    8. 'y' → logprob: -5.705248832702637
    9. '10' → logprob: -5.955248832702637
    10. '17' → logprob: -5.955248832702637

Token 48: '+r' (ID: 133712)
  Prédit: '+r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.4511702060699463
    2. '+' → logprob: -1.2011702060699463
    3. ' +' → logprob: -2.8261702060699463
    4. ')%' → logprob: -6.701169967651367
    5. '*r' → logprob: -7.826169967651367
    6. '*' → logprob: -7.951169967651367
    7. ')' → logprob: -8.201169967651367
    8. '+y' → logprob: -8.451169967651367
    9. ')+' → logprob: -8.951169967651367
    10. '%' → logprob: -9.451169967651367

Token 49: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.1894107162952423
    2. ')' → logprob: -1.81441068649292
    3. ' )' → logprob: -4.68941068649292
    4. '*' → logprob: -8.439411163330078
    5. ' ' → logprob: -9.939411163330078
    6. '   ' → logprob: -10.189411163330078
    7. ')#' → logprob: -10.939411163330078
    8. ')*' → logprob: -11.439411163330078
    9. ')
' → logprob: -11.689411163330078
    10. '+' → logprob: -12.189411163330078

Token 50: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -4.4849443838757e-06
    2. ' W' → logprob: -12.375004768371582
    3. '100' → logprob: -16.500003814697266
    4. '```' → logprob: -16.750003814697266
    5. '<|end|>' → logprob: -17.375003814697266
    6. '	W' → logprob: -17.875003814697266
    7. ' ' → logprob: -18.125003814697266
    8. '   ' → logprob: -18.125003814697266
    9. '`' → logprob: -18.500003814697266
    10. '{' → logprob: -18.875003814697266

Token 51: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5021291971206665
    2. 'def' → logprob: -1.3771291971206665
    3. ',' → logprob: -3.502129077911377
    4. ' ' → logprob: -3.877129077911377
    5. '(' → logprob: -4.002129077911377
    6. 'for' → logprob: -4.002129077911377
    7. 'x' → logprob: -4.877129077911377
    8. '<|end|>' → logprob: -5.127129077911377
    9. ':' → logprob: -5.252129077911377
    10. '(
' → logprob: -5.502129077911377

Token 53: ' bar' (ID: 3608)
  Prédit: ' bar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bar' → logprob: -0.444699764251709
    2. ' main' → logprob: -1.069699764251709
    3. ' foo' → logprob: -4.694699764251709
    4. ' reduce' → logprob: -5.944699764251709
    5. 'bar' → logprob: -6.319699764251709
    6. ' solve' → logprob: -8.319700241088867
    7. ' solution' → logprob: -8.444700241088867
    8. 'main' → logprob: -8.819700241088867
    9. ' process' → logprob: -8.819700241088867
    10. ' sum' → logprob: -8.944700241088867

Token 54: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.6258935928344727
    2. '(' → logprob: -1.5008935928344727
    3. ' (' → logprob: -1.8758935928344727
    4. '(y' → logprob: -3.2508935928344727
    5. '(x' → logprob: -3.8758935928344727
    6. '(s' → logprob: -4.625893592834473
    7. '(n' → logprob: -4.750893592834473
    8. '(q' → logprob: -5.500893592834473
    9. '(a' → logprob: -5.625893592834473
    10. '(lst' → logprob: -7.625893592834473

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004852192010730505
    2. ' ,' → logprob: -5.629852294921875
    3. ',y' → logprob: -6.754852294921875
    4. '):' → logprob: -10.754852294921875
    5. ',z' → logprob: -11.254852294921875
    6. ' y' → logprob: -11.504852294921875
    7. ' ' → logprob: -11.629852294921875
    8. ')' → logprob: -12.379852294921875
    9. ',x' → logprob: -13.129852294921875
    10. ',q' → logprob: -13.129852294921875

Token 56: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9966127276420593
    2. 'y' → logprob: -1.246612787246704
    3. 'x' → logprob: -1.746612787246704
    4. ' x' → logprob: -2.246612787246704
    5. 'lst' → logprob: -5.496612548828125
    6. ' lst' → logprob: -5.684112548828125
    7. 'a' → logprob: -5.809112548828125
    8. ' ' → logprob: -5.934112548828125
    9. 'q' → logprob: -5.996612548828125
    10. ' q' → logprob: -5.996612548828125

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005955664673820138
    2. '):
' → logprob: -7.750595569610596
    3. ' ):' → logprob: -9.375595092773438
    4. ')' → logprob: -10.250595092773438
    5. ',' → logprob: -10.625595092773438
    6. ':' → logprob: -11.500595092773438
    7. '):
' → logprob: -12.375595092773438
    8. '   ' → logprob: -12.500595092773438
    9. ' ' → logprob: -14.500595092773438
    10. '  ' → logprob: -15.375595092773438

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06644286960363388
    2. ' q' → logprob: -3.3164429664611816
    3. ' (' → logprob: -5.191442966461182
    4. ' return' → logprob: -5.441442966461182
    5. ' ' → logprob: -5.566442966461182
    6. 'q' → logprob: -5.941442966461182
    7. '[q' → logprob: -6.691442966461182
    8. '(q' → logprob: -6.691442966461182
    9. '  ' → logprob: -6.816442966461182
    10. ' y' → logprob: -6.941442966461182

Token 59: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.1205931082367897
    2. ' q' → logprob: -2.2455930709838867
    3. '   ' → logprob: -6.495593070983887
    4. 'return' → logprob: -6.870593070983887
    5. ' return' → logprob: -6.995593070983887
    6. 'p' → logprob: -7.120593070983887
    7. 'r' → logprob: -7.620593070983887
    8. '0' → logprob: -7.745593070983887
    9. 'a' → logprob: -7.870593070983887
    10. 'x' → logprob: -8.370593070983887

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006048606592230499
    2. ',r' → logprob: -8.125604629516602
    3. ' ,' → logprob: -8.250604629516602
    4. '=' → logprob: -11.125604629516602
    5. ' ' → logprob: -12.000604629516602
    6. ',q' → logprob: -12.000604629516602
    7. ',y' → logprob: -12.375604629516602
    8. 'r' → logprob: -12.500604629516602
    9. ' r' → logprob: -12.875604629516602
    10. ' =' → logprob: -13.250604629516602

Token 61: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1432553380727768
    2. 'r' → logprob: -2.0182552337646484
    3. ' ' → logprob: -8.643255233764648
    4. ' y' → logprob: -9.018255233764648
    5. ' q' → logprob: -9.143255233764648
    6. 'q' → logprob: -10.268255233764648
    7. ' p' → logprob: -10.893255233764648
    8. 'y' → logprob: -11.143255233764648
    9. ' z' → logprob: -11.705755233764648
    10. 'p' → logprob: -11.893255233764648

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491388216614723
    2. '=' → logprob: -2.9299139976501465
    3. ' ' → logprob: -10.429913520812988
    4. ')' → logprob: -14.429913520812988
    5. '   ' → logprob: -14.929913520812988
    6. ',' → logprob: -14.929913520812988
    7. '  ' → logprob: -15.429913520812988
    8. ' =)' → logprob: -15.679913520812988
    9. '    ' → logprob: -16.492414474487305
    10. '=y' → logprob: -16.929914474487305

Token 63: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.22830048203468323
    2. 'y' → logprob: -1.6033004522323608
    3. ' z' → logprob: -6.85330057144165
    4. 'z' → logprob: -7.10330057144165
    5. ' ' → logprob: -7.97830057144165
    6. ' (' → logprob: -8.853300094604492
    7. '0' → logprob: -9.478300094604492
    8. '   ' → logprob: -9.853300094604492
    9. '(' → logprob: -9.978300094604492
    10. 'x' → logprob: -10.103300094604492

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1542971283197403
    2. '<|end|>' → logprob: -2.529297113418579
    3. '   ' → logprob: -2.904297113418579
    4. '<|end|>' → logprob: -6.154297351837158
    5. ',' → logprob: -6.279297351837158
    6. ')' → logprob: -7.154297351837158
    7. '
' → logprob: -7.279297351837158
    8. ' ' → logprob: -7.404297351837158
    9. ',
' → logprob: -8.404296875
    10. ' 
' → logprob: -8.529296875

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033015317749232054
    2. ' return' → logprob: -6.253301620483398
    3. 'return' → logprob: -7.253301620483398
    4. '
' → logprob: -8.878301620483398
    5. ' ' → logprob: -9.003301620483398
    6. ',' → logprob: -9.503301620483398
    7. '  ' → logprob: -10.128301620483398
    8. ')' → logprob: -10.503301620483398
    9. ' if' → logprob: -10.503301620483398
    10. 'def' → logprob: -10.753301620483398

Token 66: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0976777970790863
    2. '   ' → logprob: -3.097677707672119
    3. 'return' (adapté à ' return') → logprob: -3.597677707672119
    4. ' if' → logprob: -3.972677707672119
    5. ' q' → logprob: -7.347677707672119
    6. 'if' → logprob: -7.722677707672119
    7. ' r' → logprob: -8.722678184509277
    8. ' (' → logprob: -8.972678184509277
    9. ' ' → logprob: -9.722678184509277
    10. '0' → logprob: -10.347678184509277

Token 67: ' r' (ID: 428)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1459921896457672
    2. ' ((' → logprob: -2.7709922790527344
    3. '(q' → logprob: -2.8959922790527344
    4. '((' → logprob: -4.395992279052734
    5. '(' → logprob: -6.520992279052734
    6. ' q' → logprob: -6.770992279052734
    7. '(z' → logprob: -6.770992279052734
    8. ' ' → logprob: -7.645992279052734
    9. 'q' → logprob: -8.395992279052734
    10. '(((' → logprob: -8.520992279052734

Token 68: '%' (ID: 4)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0006099864258430898
    2. '3' → logprob: -8.2506103515625
    3. 'q' → logprob: -8.5006103515625
    4. '100' → logprob: -9.3756103515625
    5. '7' → logprob: -10.8756103515625
    6. '2' → logprob: -11.2506103515625
    7. '10' → logprob: -11.6256103515625
    8. ' W' → logprob: -11.8756103515625
    9. ' ' → logprob: -13.1256103515625
    10. '6' → logprob: -13.2506103515625

Token 70: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.018391886726021767
    2. 'z' → logprob: -4.018392086029053
    3. ' q' → logprob: -8.643391609191895
    4. ' ' → logprob: -10.643391609191895
    5. '  ' → logprob: -11.518391609191895
    6. '   ' → logprob: -11.893391609191895
    7. ' not' → logprob: -12.268391609191895
    8. 'q' → logprob: -12.268391609191895
    9. ' r' → logprob: -12.518391609191895
    10. 'r' → logprob: -13.143391609191895

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06848543882369995
    2. '==' → logprob: -2.9434854984283447
    3. ''' → logprob: -5.193485260009766
    4. ' =='' → logprob: -5.943485260009766
    5. '=='' → logprob: -6.193485260009766
    6. ' !=' → logprob: -6.693485260009766
    7. ' ' → logprob: -7.318485260009766
    8. '[' → logprob: -7.443485260009766
    9. ' '' → logprob: -8.818485260009766
    10. '!=' → logprob: -8.943485260009766

Token 73: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026668785139918327
    2. ' '' → logprob: -3.6516687870025635
    3. '0' → logprob: -8.776668548583984
    4. ' ' → logprob: -9.151668548583984
    5. '"' → logprob: -9.526668548583984
    6. '1' → logprob: -12.151668548583984
    7. ' ' → logprob: -12.526668548583984
    8. '[' → logprob: -12.589168548583984
    9. ''s' → logprob: -13.026668548583984
    10. '`' → logprob: -13.401668548583984

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042526450008153915
    2. '1' → logprob: -3.7925264835357666
    3. ''' → logprob: -4.0425262451171875
    4. 'r' → logprob: -6.9175262451171875
    5. '')' → logprob: -8.792526245117188
    6. '"' → logprob: -9.167526245117188
    7. 'x' → logprob: -10.042526245117188
    8. '2' → logprob: -10.667526245117188
    9. 'q' → logprob: -10.855026245117188
    10. ')' → logprob: -10.855026245117188

Token 75: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0330674834549427
    2. ''' → logprob: -3.658067464828491
    3. 'else' → logprob: -5.28306770324707
    4. ')' → logprob: -7.15806770324707
    5. '<|end|>' → logprob: -7.40806770324707
    6. ' ' → logprob: -9.53306770324707
    7. '')' → logprob: -9.53306770324707
    8. ' '' → logprob: -10.53306770324707
    9. '```' → logprob: -11.03306770324707
    10. '   ' → logprob: -11.03306770324707

Token 76: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04962143674492836
    2. 'else' → logprob: -3.049621343612671
    3. ' ' → logprob: -7.79962158203125
    4. '<|end|>' → logprob: -8.29962158203125
    5. '	else' → logprob: -8.67462158203125
    6. '   ' → logprob: -8.92462158203125
    7. ' (' → logprob: -12.04962158203125
    8. ' elif' → logprob: -12.29962158203125
    9. '+' → logprob: -12.36212158203125
    10. '  ' → logprob: -12.48712158203125

Token 77: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06426545977592468
    2. '(q' → logprob: -3.064265489578247
    3. ' q' → logprob: -5.064265251159668
    4. ' ((' → logprob: -5.689265251159668
    5. '(' → logprob: -6.564265251159668
    6. ''' → logprob: -7.189265251159668
    7. '(r' → logprob: -7.314265251159668
    8. ' ' → logprob: -7.314265251159668
    9. 'q' → logprob: -7.939265251159668
    10. '((' → logprob: -8.064265251159668

Token 78: 'r' (ID: 81)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.8855945467948914
    2. '(r' → logprob: -1.2605946063995361
    3. 'r' → logprob: -2.010594606399536
    4. ' (' → logprob: -2.385594606399536
    5. 'q' → logprob: -2.885594606399536
    6. '((' → logprob: -5.385594367980957
    7. ' r' → logprob: -5.385594367980957
    8. '(' → logprob: -5.385594367980957
    9. '3' → logprob: -5.510594367980957
    10. ' q' → logprob: -6.135594367980957

Token 79: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0022085432428866625
    2. '+' → logprob: -6.502208709716797
    3. '*q' → logprob: -8.127208709716797
    4. ' *' → logprob: -8.377208709716797
    5. ' +' → logprob: -9.502208709716797
    6. ')*' → logprob: -10.377208709716797
    7. '*)' → logprob: -10.752208709716797
    8. '*(' → logprob: -11.127208709716797
    9. ')' → logprob: -12.002208709716797
    10. '+r' → logprob: -12.252208709716797

Token 80: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10712775588035583
    2. '10' → logprob: -2.7321276664733887
    3. '2' → logprob: -3.3571276664733887
    4. '4' → logprob: -7.357127666473389
    5. ' ' → logprob: -7.982127666473389
    6. '7' → logprob: -8.357128143310547
    7. '6' → logprob: -8.732128143310547
    8. '1' → logprob: -9.357128143310547
    9. '9' → logprob: -10.107128143310547
    10. '5' → logprob: -10.419628143310547

Token 81: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.6519744992256165
    2. '+' → logprob: -0.7769744992256165
    3. '+r' → logprob: -4.776974678039551
    4. '*' → logprob: -5.151974678039551
    5. ' +' → logprob: -5.776974678039551
    6. ')' → logprob: -6.526974678039551
    7. '+w' → logprob: -9.52697467803955
    8. '+y' → logprob: -9.77697467803955
    9. ' )' → logprob: -10.02697467803955
    10. '+x' → logprob: -10.15197467803955

Token 82: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -3.054500666621607e-06
    2. ' W' → logprob: -12.75000286102295
    3. '100' → logprob: -17.500003814697266
    4. '(' → logprob: -17.750003814697266
    5. '(W' → logprob: -17.750003814697266
    6. ' ' → logprob: -18.250003814697266
    7. '   ' → logprob: -19.750003814697266
    8. '<|end|>' → logprob: -19.875003814697266
    9. '	W' → logprob: -20.125003814697266
    10. '<W' → logprob: -20.250003814697266

Token 83: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7271949648857117
    2. '#' → logprob: -1.8521950244903564
    3. 'def' → logprob: -1.9771950244903564
    4. ',' → logprob: -2.7271950244903564
    5. '
' → logprob: -3.1021950244903564
    6. '<|end|>' → logprob: -3.8521950244903564
    7. '(' → logprob: -4.227194786071777
    8. 'x' → logprob: -4.852194786071777
    9. 'a' → logprob: -4.977194786071777
    10. ':' → logprob: -5.227194786071777

Token 85: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.22327794134616852
    2. 'ine' → logprob: -3.098278045654297
    3. 'ist' → logprob: -3.223278045654297
    4. 'ambda' → logprob: -3.223278045654297
    5. ' =' → logprob: -3.598278045654297
    6. '=' → logprob: -3.973278045654297
    7. 'ength' → logprob: -4.723278045654297
    8. 'et' → logprob: -5.473278045654297
    9. 'e' → logprob: -5.973278045654297
    10. '=[]' → logprob: -6.348278045654297

Token 86: ' sys' (ID: 12228)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.9044455885887146
    2. '[' → logprob: -1.9044456481933594
    3. '[]' → logprob: -1.9044456481933594
    4. 'list' → logprob: -2.7794456481933594
    5. ' [' → logprob: -3.4044456481933594
    6. '[input' → logprob: -3.5294456481933594
    7. 'input' → logprob: -3.6544456481933594
    8. 'int' → logprob: -3.7794456481933594
    9. 'sys' → logprob: -3.7794456481933594
    10. ' []' → logprob: -3.9044456481933594

Token 87: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3821141719818115
    2. '.' → logprob: -1.7571141719818115
    3. '.argv' → logprob: -2.0071141719818115
    4. '.stdout' → logprob: -4.757114410400391
    5. ' .' → logprob: -7.882114410400391
    6. '<|end|>' → logprob: -8.00711441040039
    7. '.exit' → logprob: -8.13211441040039
    8. '.stderr' → logprob: -8.13211441040039
    9. '.std' → logprob: -8.75711441040039
    10. '.modules' → logprob: -9.00711441040039

Token 88: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.021918214857578278
    2. '.readlines' → logprob: -3.896918296813965
    3. '.read' → logprob: -6.896918296813965
    4. '.' → logprob: -8.396918296813965
    5. '.buffer' → logprob: -10.021918296813965
    6. 'buffer' → logprob: -10.146918296813965
    7. 'read' → logprob: -10.396918296813965
    8. '```' → logprob: -10.896918296813965
    9. 's' → logprob: -14.271918296813965
    10. '#' → logprob: -14.521918296813965

Token 89: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008821651572361588
    2. '().' → logprob: -7.125882148742676
    3. '(' → logprob: -10.250882148742676
    4. '())' → logprob: -10.875882148742676
    5. '()]' → logprob: -12.625882148742676
    6. '()`' → logprob: -12.875882148742676
    7. '()
' → logprob: -13.125882148742676
    8. '()>' → logprob: -13.375882148742676
    9. '```' → logprob: -13.375882148742676
    10. '();' → logprob: -13.500882148742676

Token 90: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0015035520773380995
    2. 'rstrip' → logprob: -6.5015034675598145
    3. 'split' → logprob: -14.001503944396973
    4. ' strip' → logprob: -14.876503944396973
    5. 'read' → logprob: -17.376502990722656
    6. '_strip' → logprob: -19.001502990722656
    7. 'replace' → logprob: -19.376502990722656
    8. '(strip' → logprob: -19.626502990722656
    9. 'str' → logprob: -20.376502990722656
    10. 'decode' → logprob: -20.751502990722656

Token 91: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006763683166354895
    2. '(' → logprob: -5.006763458251953
    3. '().' → logprob: -11.631763458251953
    4. '('' → logprob: -12.381763458251953
    5. '()
' → logprob: -12.381763458251953
    6. '()`' → logprob: -12.631763458251953
    7. '()+' → logprob: -12.756763458251953
    8. '())' → logprob: -12.881763458251953
    9. '();' → logprob: -13.131763458251953
    10. ' ()' → logprob: -13.131763458251953

Token 92: 'a' (ID: 64)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.523701786994934
    2. 'y' → logprob: -1.773701786994934
    3. 'n' → logprob: -2.3987016677856445
    4. 'a' → logprob: -2.3987016677856445
    5. 's' → logprob: -2.6487016677856445
    6. ')' → logprob: -2.8987016677856445
    7. 'v' → logprob: -3.2737016677856445
    8. 'q' → logprob: -3.5237016677856445
    9. 'r' → logprob: -3.5237016677856445
    10. 'x' → logprob: -3.6487016677856445

Token 93: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06572849303483963
    2. '=' → logprob: -2.8157284259796143
    3. ' ' → logprob: -6.065728664398193
    4. ',' → logprob: -7.190728664398193
    5. '=[]' → logprob: -8.690728187561035
    6. 'r' → logprob: -9.315728187561035
    7. 's' → logprob: -9.440728187561035
    8. 'l' → logprob: -9.815728187561035
    9. 'rg' → logprob: -9.815728187561035
    10. 'b' → logprob: -10.065728187561035

Token 94: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.127706378698349
    2. ' b' → logprob: -2.127706289291382
    3. ' ' → logprob: -8.502706527709961
    4. ' =' → logprob: -8.752706527709961
    5. '=' → logprob: -9.127706527709961
    6. '_' → logprob: -9.627706527709961
    7. 'a' → logprob: -9.877706527709961
    8. 'c' → logprob: -10.502706527709961
    9. '_=' → logprob: -10.627706527709961
    10. ' _' → logprob: -11.252706527709961

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043035272508859634
    2. '=' → logprob: -3.1680352687835693
    3. ',' → logprob: -10.668035507202148
    4. '<|end|>' → logprob: -11.918035507202148
    5. ' ' → logprob: -12.668035507202148
    6. ' =
' → logprob: -14.668035507202148
    7. ' ' → logprob: -15.043035507202148
    8. ')' → logprob: -15.043035507202148
    9. ' ,' → logprob: -15.168035507202148
    10. '  ' → logprob: -15.293035507202148

Token 96: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18270769715309143
    2. '0' → logprob: -2.0577077865600586
    3. '1' → logprob: -4.557707786560059
    4. 'reduce' → logprob: -4.682707786560059
    5. ' (' → logprob: -4.932707786560059
    6. '[' → logprob: -6.057707786560059
    7. 'map' → logprob: -6.307707786560059
    8. '(re' → logprob: -6.307707786560059
    9. ' ' → logprob: -6.557707786560059
    10. '('' → logprob: -6.682707786560059

Token 97: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6745750904083252
    2. '(' → logprob: -1.4245750904083252
    3. '1' → logprob: -2.174575090408325
    4. 'map' → logprob: -2.799575090408325
    5. 'l' → logprob: -3.674575090408325
    6. '[' → logprob: -4.299574851989746
    7. 'reduce' → logprob: -4.674574851989746
    8. '(map' → logprob: -4.924574851989746
    9. '(l' → logprob: -5.924574851989746
    10. '('' → logprob: -6.299574851989746

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062974002212285995
    2. ' ,' → logprob: -5.256297588348389
    3. '0' → logprob: -7.506297588348389
    4. '<|end|>' → logprob: -8.38129711151123
    5. ' ' → logprob: -8.75629711151123
    6. '000' → logprob: -10.38129711151123
    7. 'a' → logprob: -10.63129711151123
    8. ',a' → logprob: -11.50629711151123
    9. '2' → logprob: -11.75629711151123
    10. ',b' → logprob: -11.88129711151123

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0808647871017456
    2. ' ' → logprob: -3.080864906311035
    3. '1' → logprob: -3.455864906311035
    4. '2' → logprob: -8.580864906311035
    5. '3' → logprob: -12.830864906311035
    6. '  ' → logprob: -12.893364906311035
    7. '<|end|>' → logprob: -13.518364906311035
    8. '4' → logprob: -13.955864906311035
    9. '6' → logprob: -14.518364906311035
    10. '10' → logprob: -14.705864906311035

Token 100: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025549687445163727
    2. '1' → logprob: -3.7755496501922607
    3. '2' → logprob: -6.15054988861084
    4. '3' → logprob: -9.52554988861084
    5. ' ' → logprob: -9.77554988861084
    6. '4' → logprob: -11.33804988861084
    7. '6' → logprob: -11.46304988861084
    8. '5' → logprob: -12.71304988861084
    9. '7' → logprob: -13.52554988861084
    10. 'b' → logprob: -13.65054988861084

Token 101: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15872949361801147
    2. ' for' → logprob: -2.0337295532226562
    3. '<|end|>' → logprob: -4.158729553222656
    4. '```' → logprob: -10.033729553222656
    5. '<|end|>' → logprob: -10.283729553222656
    6. 'a' → logprob: -10.408729553222656
    7. ')' → logprob: -10.408729553222656
    8. ',' → logprob: -10.408729553222656
    9. ' ' → logprob: -10.658729553222656
    10. 'd' → logprob: -11.283729553222656

Token 103: ' idx' (ID: 14016)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.12913189828395844
    2. ' i' → logprob: -2.75413179397583
    3. ' _' → logprob: -4.00413179397583
    4. ' x' → logprob: -4.37913179397583
    5. 'c' → logprob: -4.62913179397583
    6. ' ch' → logprob: -4.87913179397583
    7. '_' → logprob: -5.50413179397583
    8. ' z' → logprob: -6.50413179397583
    9. 'i' → logprob: -7.12913179397583
    10. ' char' → logprob: -7.50413179397583

Token 104: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7429234981536865
    2. ' in' → logprob: -0.7429234981536865
    3. 'in' → logprob: -3.1179234981536865
    4. ' ,' → logprob: -5.492923736572266
    5. ' ' → logprob: -9.117923736572266
    6. ',in' → logprob: -10.617923736572266
    7. ',l' → logprob: -10.617923736572266
    8. ',line' → logprob: -12.242923736572266
    9. ',val' → logprob: -12.617923736572266
    10. ',value' → logprob: -12.617923736572266

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24281816184520721
    2. ' range' → logprob: -1.6178181171417236
    3. 'l' → logprob: -4.242818355560303
    4. ' l' → logprob: -5.867818355560303
    5. 'a' → logprob: -11.117817878723145
    6. '(range' → logprob: -11.867817878723145
    7. ' ' → logprob: -11.867817878723145
    8. '	range' → logprob: -11.992817878723145
    9. '```' → logprob: -12.492817878723145
    10. ' a' → logprob: -12.617817878723145

Token 106: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.004207209218293428
    2. '(' → logprob: -5.504207134246826
    3. 'len' → logprob: -9.129207611083984
    4. ' len' → logprob: -11.254207611083984
    5. ' (' → logprob: -12.754207611083984
    6. '(l' → logprob: -13.254207611083984
    7. '1' → logprob: -13.754207611083984
    8. '[len' → logprob: -15.129207611083984
    9. '2' → logprob: -15.504207611083984
    10. '<len' → logprob: -15.629207611083984

Token 107: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007621031254529953
    2. ' len' → logprob: -8.000761985778809
    3. '1' → logprob: -8.375761985778809
    4. '2' → logprob: -9.125761985778809
    5. '(len' → logprob: -10.625761985778809
    6. '0' → logprob: -10.625761985778809
    7. '   ' → logprob: -10.750761985778809
    8. '3' → logprob: -11.625761985778809
    9. ' ' → logprob: -13.500761985778809
    10. '10' → logprob: -13.750761985778809

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007355354027822614
    2. ',len' → logprob: -7.250735759735107
    3. 'len' → logprob: -10.87573528289795
    4. ' ,' → logprob: -12.00073528289795
    5. '(len' → logprob: -15.25073528289795
    6. ' len' → logprob: -15.37573528289795
    7. '<len' → logprob: -17.125736236572266
    8. '2' → logprob: -17.875736236572266
    9. '=len' → logprob: -18.000736236572266
    10. '1' → logprob: -18.000736236572266

Token 109: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015030752401798964
    2. ' len' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.376502990722656
    4. '(len' → logprob: -15.376502990722656
    5. 'int' → logprob: -16.126502990722656
    6. '  ' → logprob: -17.001502990722656
    7. '	len' → logprob: -17.876502990722656
    8. '=len' → logprob: -18.251502990722656
    9. ' ' → logprob: -18.376502990722656
    10. '2' → logprob: -18.501502990722656

Token 110: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1279553291387856e-05
    2. '(' → logprob: -11.750011444091797
    3. 'l' → logprob: -12.750011444091797
    4. ' (' → logprob: -15.000011444091797
    5. '(a' → logprob: -16.750011444091797
    6. '(s' → logprob: -16.875011444091797
    7. ' l' → logprob: -17.625011444091797
    8. '(
' → logprob: -18.250011444091797
    9. ')' → logprob: -18.750011444091797
    10. '	l' → logprob: -18.875011444091797

Token 111: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.2479199767112732
    2. '):' → logprob: -1.997920036315918
    3. ')):
' → logprob: -2.622920036315918
    4. '):
' → logprob: -5.497920036315918
    5. ' ):' → logprob: -5.622920036315918
    6. ' ' → logprob: -6.747920036315918
    7. ')' → logprob: -6.872920036315918
    8. '+' → logprob: -7.247920036315918
    9. '))' → logprob: -7.747920036315918
    10. ' ))' → logprob: -8.997920036315918

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014323335140943527
    2. ' if' → logprob: -5.0143232345581055
    3. ' a' → logprob: -5.8893232345581055
    4. ' z' → logprob: -6.0143232345581055
    5. 'a' → logprob: -6.7643232345581055
    6. 'z' → logprob: -8.889323234558105
    7. ' s' → logprob: -9.014323234558105
    8. ' c' → logprob: -9.014323234558105
    9. 'if' → logprob: -9.139323234558105
    10. ' token' → logprob: -9.389323234558105

Token 113: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7821687459945679
    2. ' a' → logprob: -1.5321687459945679
    3. ' if' → logprob: -2.1571688652038574
    4. 'if' → logprob: -2.2821688652038574
    5. '   ' → logprob: -2.5321688652038574
    6. 'c' (adapté à ' c') → logprob: -4.282168865203857
    7. ' c' → logprob: -4.657168865203857
    8. ' z' → logprob: -6.532168865203857
    9. 'z' → logprob: -6.657168865203857
    10. 'x' → logprob: -7.157168865203857

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026387959718704224
    2. '=' → logprob: -3.651387929916382
    3. ',' → logprob: -9.401388168334961
    4. 'a' → logprob: -13.901388168334961
    5. ' ' → logprob: -14.026388168334961
    6. '  ' → logprob: -14.401388168334961
    7. '=l' → logprob: -14.651388168334961
    8. 's' → logprob: -14.776388168334961
    9. ',l' → logprob: -15.526388168334961
    10. 'c' → logprob: -15.526388168334961

Token 115: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3874257504940033
    2. 'l' → logprob: -1.1374257802963257
    3. ' ' → logprob: -8.762425422668457
    4. 'int' → logprob: -9.262425422668457
    5. 'a' → logprob: -9.637425422668457
    6. '   ' → logprob: -9.637425422668457
    7. 'foo' → logprob: -9.887425422668457
    8. ' bar' → logprob: -10.887425422668457
    9. 'bar' → logprob: -11.012425422668457
    10. ' int' → logprob: -11.137425422668457

Token 116: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -13.000004768371582
    3. '[index' → logprob: -13.875004768371582
    4. '[int' → logprob: -14.500004768371582
    5. '[i' → logprob: -15.250004768371582
    6. '[ix' → logprob: -15.750004768371582
    7. 'idx' → logprob: -16.125003814697266
    8. '[id' → logprob: -16.500003814697266
    9. '\[' → logprob: -16.500003814697266
    10. '```' → logprob: -16.625003814697266

Token 117: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.33076030015945435
    2. ']' → logprob: -1.8307602405548096
    3. ')
' → logprob: -2.3307602405548096
    4. '])
' → logprob: -4.580760478973389
    5. ')' → logprob: -5.080760478973389
    6. '])' → logprob: -5.455760478973389
    7. ' ]
' → logprob: -6.580760478973389
    8. ' )
' → logprob: -6.830760478973389
    9. ')]' → logprob: -8.45576000213623
    10. ')]
' → logprob: -8.83076000213623

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3914068639278412
    2. 'a' → logprob: -1.5164068937301636
    3. ' if' → logprob: -3.141406774520874
    4. '<|end|>' → logprob: -3.141406774520874
    5. ' a' → logprob: -5.016407012939453
    6. '    
' → logprob: -5.891407012939453
    7. 'if' → logprob: -6.266407012939453
    8. '
' → logprob: -6.266407012939453
    9. ' ' → logprob: -6.641407012939453
    10. '  ' → logprob: -6.891407012939453

Token 119: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.27402421832084656
    2. 'if' → logprob: -2.274024248123169
    3. ' a' → logprob: -2.524024248123169
    4. ' if' → logprob: -2.899024248123169
    5. '   ' → logprob: -6.64902400970459
    6. 'd' → logprob: -9.52402400970459
    7. ' ' → logprob: -10.14902400970459
    8. '    
' → logprob: -11.02402400970459
    9. '```' → logprob: -11.27402400970459
    10. '
' → logprob: -11.46152400970459

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7618732452392578
    2. ' =' → logprob: -1.2618732452392578
    3. ',' → logprob: -1.3868732452392578
    4. ' ,' → logprob: -8.761873245239258
    5. ',b' → logprob: -10.011873245239258
    6. ' ' → logprob: -12.136873245239258
    7. ' +=' → logprob: -12.886873245239258
    8. 'a' → logprob: -13.261873245239258
    9. ' *=' → logprob: -13.261873245239258
    10. ')' → logprob: -13.261873245239258

Token 121: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.01012199092656374
    2. ' foo' → logprob: -4.635121822357178
    3. '(foo' → logprob: -8.260122299194336
    4. 'bar' → logprob: -9.510122299194336
    5. 'reduce' → logprob: -11.260122299194336
    6. '(' → logprob: -12.010122299194336
    7. ' (' → logprob: -13.010122299194336
    8. 'a' → logprob: -13.010122299194336
    9. ' bar' → logprob: -13.010122299194336
    10. '(a' → logprob: -13.635122299194336

Token 122: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002981863683089614
    2. '(a' → logprob: -5.877981662750244
    3. '(l' → logprob: -8.877982139587402
    4. '(' → logprob: -10.252982139587402
    5. '(f' → logprob: -14.252982139587402
    6. '(code' → logprob: -15.127982139587402
    7. ')(' → logprob: -15.127982139587402
    8. '(b' → logprob: -15.752982139587402
    9. '((' → logprob: -15.752982139587402
    10. ' (' → logprob: -16.252981185913086

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000977671123109758
    2. ' ,' → logprob: -7.500977516174316
    3. ',(' → logprob: -8.750977516174316
    4. ' (' → logprob: -9.125977516174316
    5. '(a' → logprob: -9.250977516174316
    6. '   ' → logprob: -10.375977516174316
    7. '((' → logprob: -11.375977516174316
    8. ',a' → logprob: -11.500977516174316
    9. '(' → logprob: -12.875977516174316
    10. 'a' → logprob: -13.625977516174316

Token 124: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012880703434348106
    2. ' (' → logprob: -9.375128746032715
    3. 'a' → logprob: -10.500128746032715
    4. '(' → logprob: -11.125128746032715
    5. '   ' → logprob: -14.375128746032715
    6. '(b' → logprob: -14.750128746032715
    7. '[a' → logprob: -14.875128746032715
    8. ' ' → logprob: -15.875128746032715
    9. 'b' → logprob: -16.00012969970703
    10. ' a' → logprob: -16.62512969970703

Token 125: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.896309739408025e-07
    2. ' a' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.125
    4. '1' → logprob: -17.375
    5. 'b' → logprob: -17.375
    6. '0' → logprob: -19.25
    7. ' ' → logprob: -19.625
    8. '
' → logprob: -19.75
    9. '2' → logprob: -19.75
    10. '	a' → logprob: -19.75

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013762809976469725
    2. ',b' → logprob: -9.000137329101562
    3. ' ,' → logprob: -11.250137329101562
    4. 'b' → logprob: -13.875137329101562
    5. ',
' → logprob: -16.625137329101562
    6. '*' → logprob: -16.750137329101562
    7. '0' → logprob: -17.125137329101562
    8. '2' → logprob: -17.250137329101562
    9. ' ' → logprob: -17.375137329101562
    10. '1' → logprob: -17.500137329101562

Token 127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005234002135694027
    2. ' b' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.505233764648438
    4. '   ' → logprob: -17.255233764648438
    5. 'a' → logprob: -18.880233764648438
    6. '  ' → logprob: -19.880233764648438
    7. '	b' → logprob: -20.005233764648438
    8. '    ' → logprob: -20.380233764648438
    9. '
' → logprob: -21.005233764648438
    10. ')b' → logprob: -21.005233764648438

Token 128: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004106184933334589
    2. '))
' → logprob: -5.504106044769287
    3. '))

' → logprob: -11.254106521606445
    4. ')' → logprob: -11.379106521606445
    5. ' ))' → logprob: -13.254106521606445
    6. '))
' → logprob: -13.879106521606445
    7. ')))' → logprob: -15.754106521606445
    8. '),' → logprob: -16.254106521606445
    9. ')
' → logprob: -16.629106521606445
    10. ' ))
' → logprob: -16.754106521606445

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10078065097332001
    2. 'b' → logprob: -2.350780725479126
    3. ' b' → logprob: -7.600780487060547
    4. ' ' → logprob: -9.600780487060547
    5. '```' → logprob: -12.850780487060547
    6. '  ' → logprob: -13.100780487060547
    7. '
' → logprob: -14.725780487060547
    8. '    
' → logprob: -14.975780487060547
    9. '	b' → logprob: -15.100780487060547
    10. '       ' → logprob: -16.100780487060547

Token 130: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -2.5776860184123507e-06
    2. ' b' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.50000286102295
    4. ' ' → logprob: -21.000001907348633
    5. '  ' → logprob: -21.250001907348633
    6. '    
' → logprob: -21.750001907348633
    7. '	b' → logprob: -21.875001907348633
    8. '    ' → logprob: -22.875001907348633
    9. 'new' → logprob: -23.125001907348633
    10. '
' → logprob: -23.375001907348633

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407740354537964
    2. ' =' → logprob: -0.9740774035453796
    3. ',' → logprob: -15.099077224731445
    4. ')' → logprob: -16.849077224731445
    5. ' ' → logprob: -18.849077224731445
    6. '<|end|>' → logprob: -18.849077224731445
    7. '=b' → logprob: -18.974077224731445
    8. '=
' → logprob: -19.224077224731445
    9. '+=' → logprob: -19.474077224731445
    10. '＝' → logprob: -19.599077224731445

Token 132: ' bar' (ID: 3608)
  Prédit: 'bar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bar' → logprob: -0.0013265528250485659
    2. ' bar' → logprob: -6.626326560974121
    3. 'foo' → logprob: -15.376326560974121
    4. '	bar' → logprob: -16.126325607299805
    5. '  ' → logprob: -16.251325607299805
    6. ' ' → logprob: -16.251325607299805
    7. '(bar' → logprob: -16.376325607299805
    8. '   ' → logprob: -17.876325607299805
    9. 'baz' → logprob: -19.001325607299805
    10. 'b' → logprob: -19.501325607299805

Token 133: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.750012397766113
    4. 'c' → logprob: -15.500012397766113
    5. '<|end|>' → logprob: -17.000011444091797
    6. ' (' → logprob: -17.250011444091797
    7. '(C' → logprob: -18.000011444091797
    8. ')c' → logprob: -18.000011444091797
    9. '```' → logprob: -19.125011444091797
    10. '(code' → logprob: -19.125011444091797

Token 134: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10107462108135223
    2. ',' → logprob: -2.351074695587158
    3. 'c' → logprob: -7.976074695587158
    4. ' (' → logprob: -8.22607421875
    5. ')' → logprob: -8.60107421875
    6. ' ,' → logprob: -10.35107421875
    7. ',c' → logprob: -10.85107421875
    8. '),' → logprob: -12.22607421875
    9. '',' → logprob: -12.47607421875
    10. ' c' → logprob: -12.47607421875

Token 135: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004750153515487909
    2. '(c' → logprob: -5.8797502517700195
    3. ' (' → logprob: -6.2547502517700195
    4. '(b' → logprob: -11.25475025177002
    5. '(' → logprob: -12.25475025177002
    6. 'a' → logprob: -12.75475025177002
    7. ' ' → logprob: -14.75475025177002
    8. '   ' → logprob: -15.37975025177002
    9. '(A' → logprob: -15.37975025177002
    10. 'c' → logprob: -15.62975025177002

Token 136: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8193366486229934e-05
    2. 'b' → logprob: -11.250018119812012
    3. ' a' → logprob: -12.250018119812012
    4. '   ' → logprob: -15.625018119812012
    5. ' ' → logprob: -16.000019073486328
    6. '  ' → logprob: -17.375019073486328
    7. 'а' → logprob: -17.750019073486328
    8. '	a' → logprob: -17.875019073486328
    9. '_a' → logprob: -18.625019073486328
    10. ')' → logprob: -18.875019073486328

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.102680633077398e-05
    2. 'b' → logprob: -10.000090599060059
    3. ',b' → logprob: -10.125090599060059
    4. ' ,' → logprob: -12.125090599060059
    5. ' b' → logprob: -16.625091552734375
    6. ',
' → logprob: -17.375091552734375
    7. 'a' → logprob: -19.000091552734375
    8. ')' → logprob: -19.625091552734375
    9. '‌,' → logprob: -20.000091552734375
    10. ' ' → logprob: -20.000091552734375

Token 138: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196993216872215
    2. ' b' → logprob: -2.8119699954986572
    3. ' ' → logprob: -13.311969757080078
    4. '  ' → logprob: -15.061969757080078
    5. '   ' → logprob: -15.436969757080078
    6. '    ' → logprob: -16.186969757080078
    7. 'a' → logprob: -16.936969757080078
    8. '	b' → logprob: -17.561969757080078
    9. ' a' → logprob: -17.561969757080078
    10. ')' → logprob: -17.811969757080078

Token 139: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030697984038852155
    2. '))' → logprob: -8.250307083129883
    3. ')
' → logprob: -10.000307083129883
    4. ')

' → logprob: -16.500307083129883
    5. ')))' → logprob: -16.625307083129883
    6. ' )' → logprob: -16.750307083129883
    7. ')`' → logprob: -17.000307083129883
    8. ')}' → logprob: -17.375307083129883
    9. '))
' → logprob: -17.375307083129883
    10. ')
' → logprob: -18.125307083129883

Token 140: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06445010751485825
    2. 'a' → logprob: -3.1894500255584717
    3. '\n' → logprob: -4.564450263977051
    4. '<|end|>' → logprob: -4.939450263977051
    5. 'b' → logprob: -7.439450263977051
    6. '#' → logprob: -7.439450263977051
    7. '0' → logprob: -7.814450263977051
    8. 'print' → logprob: -7.939450263977051
    9. '\' → logprob: -8.56445026397705
    10. ',' → logprob: -8.56445026397705

Token 141: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004145118873566389
    2. '(b' → logprob: -5.50414514541626
    3. '((' → logprob: -9.754144668579102
    4. '(' → logprob: -12.379144668579102
    5. 'a' → logprob: -12.754144668579102
    6. 'b' → logprob: -13.629144668579102
    7. '(ab' → logprob: -16.1291446685791
    8. '(abs' → logprob: -16.2541446685791
    9. '(f' → logprob: -16.7541446685791
    10. '(max' → logprob: -17.6291446685791

Token 142: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023547213524580002
    2. 'b' → logprob: -3.7735471725463867
    3. '(a' → logprob: -8.273547172546387
    4. '(b' → logprob: -11.148547172546387
    5. ' a' → logprob: -11.148547172546387
    6. '2' → logprob: -11.898547172546387
    7. '(' → logprob: -13.023547172546387
    8. '3' → logprob: -13.648547172546387
    9. ' b' → logprob: -13.898547172546387
    10. '7' → logprob: -14.023547172546387

Token 143: '+b' (ID: 76609)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9594464898109436
    2. '+' → logprob: -1.4594464302062988
    3. ' -' → logprob: -1.8344464302062988
    4. ' +' → logprob: -2.334446430206299
    5. '+b' → logprob: -2.334446430206299
    6. '*' → logprob: -3.709446430206299
    7. ' *' → logprob: -5.459446430206299
    8. '*b' → logprob: -6.959446430206299
    9. ')' → logprob: -7.209446430206299
    10. '-b' → logprob: -7.959446430206299

Token 144: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16050246357917786
    2. ')%' → logprob: -1.9105024337768555
    3. '-' → logprob: -8.410502433776855
    4. ' )' → logprob: -10.035502433776855
    5. ')//' → logprob: -11.910502433776855
    6. ' -' → logprob: -12.535502433776855
    7. '+' → logprob: -14.410502433776855
    8. ')*' → logprob: -15.160502433776855
    9. '*' → logprob: -15.535502433776855
    10. ')#' → logprob: -15.660502433776855

Token 145: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0004309076175559312
    2. ' W' → logprob: -7.750431060791016
    3. '100' → logprob: -15.500431060791016
    4. ' ' → logprob: -16.875431060791016
    5. '(W' → logprob: -18.000431060791016
    6. '   ' → logprob: -19.125431060791016
    7. '	W' → logprob: -20.000431060791016
    8. '  ' → logprob: -20.750431060791016
    9. '(' → logprob: -21.500431060791016
    10. '`' → logprob: -21.750431060791016

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')`' → logprob: -17.5
    5. ')
' → logprob: -17.75
    6. ')#' → logprob: -18.875
    7. ')}' → logprob: -18.875
    8. ')**' → logprob: -20.125
    9. '')' → logprob: -20.25
    10. '())' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 144
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 119
Précision stricte (1ère position): 40.97%
Précision adaptée (1ère position): 43.06%
Précision (top 10): 82.64%
================================================================================
