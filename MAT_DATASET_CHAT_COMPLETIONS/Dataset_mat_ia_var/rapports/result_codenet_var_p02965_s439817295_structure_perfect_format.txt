================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
o = 998244353
r = 2500100
f = [1]
for i in range(1, r):
    f.append(f[-1] * i % o)

def v(x):
    return pow(x, o - 2, o)

def c(n, k):
    return f[n] * v(f[n - k]) * v(f[k]) % o

n, m = map(int, input().split())
a = (c(n + 3 * m - 1, n - 1) - n * c(n + m - 2, n - 1)) % o
if n > m + 1:
    for i in range(m + 1, min(3 * m, n) + 1):
        if (3 * m - i) % 2:
            continue
        x = (3 * m - i) // 2
        a = (a - c(n, i) * c(x + n - 1, n - 1)) % o
print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'o' (ID: 78)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '998' (ID: 34589)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5409976243972778
    2. '{' → logprob: -1.9159976243972778
    3. '[]' → logprob: -2.0409975051879883
    4. '0' → logprob: -3.1659975051879883
    5. '10' → logprob: -3.7909975051879883
    6. '[' → logprob: -4.540997505187988
    7. '1' → logprob: -4.915997505187988
    8. '5' → logprob: -4.915997505187988
    9. '"' → logprob: -4.915997505187988
    10. 'object' → logprob: -5.165997505187988

Token 4: '244' (ID: 25291)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07902131974697113
    2. '*' → logprob: -2.7040212154388428
    3. '.' → logprob: -5.704021453857422
    4. '\' → logprob: -6.204021453857422
    5. ' ' → logprob: -6.829021453857422
    6. '-' → logprob: -7.079021453857422
    7. ' +' → logprob: -7.954021453857422
    8. ';' → logprob: -8.579021453857422
    9. '```' → logprob: -8.704021453857422
    10. '**' → logprob: -8.829021453857422

Token 5: '353' (ID: 32996)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9673424363136292
    2. '*' → logprob: -1.2173423767089844
    3. '+' → logprob: -1.5923423767089844
    4. ';' → logprob: -2.8423423767089844
    5. '**' → logprob: -3.9673423767089844
    6. '```' → logprob: -4.467342376708984
    7. '-' → logprob: -5.092342376708984
    8. '#' → logprob: -5.342342376708984
    9. '!' → logprob: -5.967342376708984
    10. '0' → logprob: -6.092342376708984

Token 6: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5373591184616089
    2. '+' → logprob: -0.9123591184616089
    3. '.' → logprob: -5.787359237670898
    4. ' ' → logprob: -5.912359237670898
    5. '**' → logprob: -5.912359237670898
    6. '```' → logprob: -6.662359237670898
    7. '#' → logprob: -7.037359237670898
    8. ',' → logprob: -7.537359237670898
    9. '-' → logprob: -7.662359237670898
    10. ' *' → logprob: -7.912359237670898

Token 7: 'r' (ID: 81)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8132124543190002
    2. '*' → logprob: -0.9382124543190002
    3. '**' → logprob: -2.1882123947143555
    4. '.' → logprob: -4.6882123947143555
    5. '=' → logprob: -4.9382123947143555
    6. '```' → logprob: -5.0632123947143555
    7. ',' → logprob: -5.1882123947143555
    8. '#' → logprob: -5.5632123947143555
    9. '\n' → logprob: -5.8132123947143555
    10. ' ' → logprob: -5.8132123947143555

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.599394679069519
    2. '=' → logprob: -1.099394679069519
    3. 'e' → logprob: -3.2243947982788086
    4. 'a' → logprob: -3.4743947982788086
    5. ',' → logprob: -4.474394798278809
    6. '%' → logprob: -4.474394798278809
    7. ' ' → logprob: -4.474394798278809
    8. 'o' → logprob: -5.474394798278809
    9. '_' → logprob: -6.349394798278809
    10. ')' → logprob: -6.849394798278809

Token 9: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0469732284545898
    2. ' ' → logprob: -1.0469732284545898
    3. '1' → logprob: -2.04697322845459
    4. '998' → logprob: -2.54697322845459
    5. 'o' → logprob: -3.42197322845459
    6. '2' → logprob: -3.67197322845459
    7. '10' → logprob: -4.54697322845459
    8. ' o' → logprob: -5.04697322845459
    9. 'r' → logprob: -5.79697322845459
    10. '100' → logprob: -5.92197322845459

Token 10: '250' (ID: 6911)
  Prédit: '998'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '998' → logprob: -0.6328709125518799
    2. '1' → logprob: -2.13287091255188
    3. 'o' → logprob: -2.25787091255188
    4. '2' → logprob: -2.75787091255188
    5. '0' → logprob: -2.75787091255188
    6. '10' → logprob: -3.25787091255188
    7. ' ' → logprob: -3.75787091255188
    8. '3' → logprob: -4.257870674133301
    9. '100' → logprob: -4.382870674133301
    10. '999' → logprob: -4.757870674133301

Token 11: '010' (ID: 13522)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5795240998268127
    2. '+' → logprob: -1.579524040222168
    3. '**' → logprob: -2.579524040222168
    4. '\' → logprob: -3.454524040222168
    5. ' ' → logprob: -3.954524040222168
    6. ',' → logprob: -4.329524040222168
    7. '\n' → logprob: -4.329524040222168
    8. '#' → logprob: -4.454524040222168
    9. '0' → logprob: -4.579524040222168
    10. '%' → logprob: -4.704524040222168

Token 12: '0' (ID: 15)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.6567515134811401
    2. '**' → logprob: -1.6567515134811401
    3. ' ' → logprob: -1.9067515134811401
    4. '\' → logprob: -2.6567516326904297
    5. '=' → logprob: -2.7817516326904297
    6. ',' → logprob: -3.0317516326904297
    7. '+' → logprob: -3.0317516326904297
    8. '[' → logprob: -3.2817516326904297
    9. '```' → logprob: -3.5317516326904297
    10. '\n' → logprob: -3.6567516326904297

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5987635850906372
    2. ' ' → logprob: -1.5987635850906372
    3. '\n' → logprob: -1.8487635850906372
    4. '\' → logprob: -2.2237634658813477
    5. ' 
' → logprob: -2.2237634658813477
    6. '' → logprob: -2.9737634658813477
    7. '`' → logprob: -3.4737634658813477
    8. '+' → logprob: -3.5987634658813477
    9. '*' → logprob: -3.9737634658813477
    10. '```' → logprob: -4.098763465881348

Token 14: 'f' (ID: 69)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.783430814743042
    2. '\' → logprob: -1.908430814743042
    3. '
' → logprob: -2.408430814743042
    4. '*' → logprob: -2.658430814743042
    5. 'n' → logprob: -2.783430814743042
    6. 'o' → logprob: -2.783430814743042
    7. 'r' → logprob: -3.033430814743042
    8. '(' → logprob: -3.158430814743042
    9. '' → logprob: -3.408430814743042
    10. 'd' → logprob: -3.408430814743042

Token 15: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09976700693368912
    2. '_' → logprob: -3.724766969680786
    3. ' =' → logprob: -4.099767208099365
    4. 'ac' → logprob: -4.349767208099365
    5. '[' → logprob: -4.599767208099365
    6. 'r' → logprob: -4.849767208099365
    7. 'actor' → logprob: -5.599767208099365
    8. '=' → logprob: -5.724767208099365
    9. '[]' → logprob: -5.724767208099365
    10. '(' → logprob: -6.349767208099365

Token 16: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.586329460144043
    2. ' [' → logprob: -0.836329460144043
    3. '[o' → logprob: -4.711329460144043
    4. '[r' → logprob: -7.586329460144043
    5. '[f' → logprob: -7.711329460144043
    6. '[int' → logprob: -8.086329460144043
    7. ' ' → logprob: -10.836329460144043
    8. '[len' → logprob: -11.961329460144043
    9. '[p' → logprob: -12.086329460144043
    10. '[x' → logprob: -12.336329460144043

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01260418351739645
    2. '0' → logprob: -4.637604236602783
    3. '[' → logprob: -5.887604236602783
    4. ' ' → logprob: -10.637603759765625
    5. ']' → logprob: -10.887603759765625
    6. ' [' → logprob: -11.762603759765625
    7. '[o' → logprob: -12.012603759765625
    8. '(' → logprob: -12.762603759765625
    9. 'None' → logprob: -12.762603759765625
    10. '```' → logprob: -13.637603759765625

Token 18: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020692182704806328
    2. ',' → logprob: -3.8956921100616455
    3. ' ]' → logprob: -9.145691871643066
    4. ']*' → logprob: -10.895691871643066
    5. ',
' → logprob: -11.895691871643066
    6. ' for' → logprob: -12.270691871643066
    7. '```' → logprob: -13.020691871643066
    8. ',
' → logprob: -13.520691871643066
    9. ']+' → logprob: -13.645691871643066
    10. ')' → logprob: -13.645691871643066

Token 19: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2746649980545044
    2. 'f' → logprob: -1.6496649980545044
    3. ' for' → logprob: -1.8996649980545044
    4. ',' → logprob: -2.024664878845215
    5. 'for' → logprob: -2.149664878845215
    6. '*' → logprob: -2.899664878845215
    7. '```' → logprob: -4.274664878845215
    8. ')' → logprob: -4.399664878845215
    9. ']' → logprob: -4.649664878845215
    10. '_' → logprob: -4.774664878845215

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03045620024204254
    2. ' i' → logprob: -3.530456304550171
    3. 'i' → logprob: -7.530456066131592
    4. '  ' → logprob: -9.40545654296875
    5. ' _' → logprob: -10.03045654296875
    6. '_' → logprob: -10.15545654296875
    7. ' in' → logprob: -13.65545654296875
    8. ' ‌' → logprob: -13.78045654296875
    9. '   ' → logprob: -14.65545654296875
    10. ' ' → logprob: -14.90545654296875

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862596467137337
    2. 'in' → logprob: -3.048625946044922
    3. ' ' → logprob: -10.548625946044922
    4. 'import' → logprob: -12.798625946044922
    5. ' i' → logprob: -13.298625946044922
    6. '   ' → logprob: -13.423625946044922
    7. '	in' → logprob: -13.423625946044922
    8. 'i' → logprob: -13.673625946044922
    9. '  ' → logprob: -13.798625946044922
    10. ',' → logprob: -14.048625946044922

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0026789873372763395
    2. 'range' → logprob: -6.002678871154785
    3. ' ' → logprob: -8.502678871154785
    4. ' in' → logprob: -16.0026798248291
    5. '(range' → logprob: -16.2526798248291
    6. ' xrange' → logprob: -16.6276798248291
    7. '	range' → logprob: -16.8776798248291
    8. '  ' → logprob: -17.0026798248291
    9. '   ' → logprob: -19.1276798248291
    10. ' r' → logprob: -19.2526798248291

Token 23: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009983554482460022
    2. ' (' → logprob: -4.634983539581299
    3. ' ' → logprob: -8.509984016418457
    4. '(
' → logprob: -11.259984016418457
    5. '1' → logprob: -11.509984016418457
    6. ' (
' → logprob: -13.634984016418457
    7. '(i' → logprob: -13.634984016418457
    8. '(

' → logprob: -14.884984016418457
    9. '(len' → logprob: -15.884984016418457
    10. '(r' → logprob: -16.88498306274414

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027548300568014383
    2. ' ' → logprob: -6.1277546882629395
    3. 'r' → logprob: -7.6277546882629395
    4. '2' → logprob: -10.002755165100098
    5. ' r' → logprob: -10.252755165100098
    6. '   ' → logprob: -14.002755165100098
    7. '  ' → logprob: -14.627755165100098
    8. '250' → logprob: -14.877755165100098
    9. '0' → logprob: -15.002755165100098
    10. ')' → logprob: -15.877755165100098

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1814757138490677
    2. ' ,' → logprob: -1.8064757585525513
    3. ',r' → logprob: -6.806475639343262
    4. ' ' → logprob: -8.431475639343262
    5. ' r' → logprob: -9.056475639343262
    6. ')' → logprob: -9.056475639343262
    7. ' )' → logprob: -9.306475639343262
    8. 'r' → logprob: -10.056475639343262
    9. ',n' → logprob: -10.806475639343262
    10. ',len' → logprob: -11.681475639343262

Token 26: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007201101630926132
    2. ' r' → logprob: -5.007201194763184
    3. '250' → logprob: -7.632201194763184
    4. ' ' → logprob: -14.257201194763184
    5. '	r' → logprob: -16.132200241088867
    6. '100' → logprob: -16.257200241088867
    7. '2' → logprob: -16.507200241088867
    8. '10' → logprob: -17.007200241088867
    9. '_r' → logprob: -17.132200241088867
    10. '25' → logprob: -17.757200241088867

Token 27: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026083484292030334
    2. ' +' → logprob: -3.901083469390869
    3. '):' → logprob: -5.276083469390869
    4. ')' → logprob: -8.401083946228027
    5. '):
' → logprob: -9.151083946228027
    6. ' ):' → logprob: -9.526083946228027
    7. ' )' → logprob: -13.276083946228027
    8. ' ' → logprob: -13.526083946228027
    9. ' ):
' → logprob: -13.526083946228027
    10. '```' → logprob: -13.526083946228027

Token 28: '   ' (ID: 271)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.25269511342048645
    2. 'f' → logprob: -1.502695083618164
    3. '	f' → logprob: -8.127695083618164
    4. ' ' → logprob: -8.252695083618164
    5. '```' → logprob: -9.002695083618164
    6. ' ' → logprob: -11.002695083618164
    7. '*f' → logprob: -11.252695083618164
    8. ' ```' → logprob: -11.377695083618164
    9. '   ' → logprob: -12.002695083618164
    10. ' 
' → logprob: -12.002695083618164

Token 29: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.07920360565185547
    2. ' f' → logprob: -2.5792036056518555
    3. '```' → logprob: -8.079203605651855
    4. '   ' → logprob: -13.704203605651855
    5. '``' → logprob: -13.829203605651855
    6. ' ```' → logprob: -14.204203605651855
    7. '(f' → logprob: -14.579203605651855
    8. '	f' → logprob: -15.704203605651855
    9. '    ' → logprob: -16.204204559326172
    10. ' ' → logprob: -16.454204559326172

Token 30: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08014292269945145
    2. '.' → logprob: -2.5801429748535156
    3. '.extend' → logprob: -7.205142974853516
    4. '*' → logprob: -8.455142974853516
    5. 'append' → logprob: -9.080142974853516
    6. '=' → logprob: -9.705142974853516
    7. ' append' → logprob: -10.205142974853516
    8. '[' → logprob: -10.830142974853516
    9. '[-' → logprob: -11.330142974853516
    10. '_append' → logprob: -11.330142974853516

Token 31: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.01893443986773491
    2. '(' → logprob: -4.01893424987793
    3. 'f' → logprob: -7.39393424987793
    4. '(i' → logprob: -9.26893424987793
    5. ' f' → logprob: -9.64393424987793
    6. '((' → logprob: -11.89393424987793
    7. ' (' → logprob: -12.89393424987793
    8. '	f' → logprob: -15.39393424987793
    9. '*f' → logprob: -15.89393424987793
    10. '(
' → logprob: -16.51893424987793

Token 32: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005234952084720135
    2. '[i' → logprob: -5.255234718322754
    3. '[' → logprob: -14.130234718322754
    4. '[
' → logprob: -16.13023567199707
    5. '   ' → logprob: -16.50523567199707
    6. ' [-' → logprob: -17.25523567199707
    7. 'i' → logprob: -17.38023567199707
    8. '`' → logprob: -18.13023567199707
    9. '*' → logprob: -18.50523567199707
    10. '```' → logprob: -18.63023567199707

Token 33: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003752456046640873
    2. '1' → logprob: -5.6287522315979
    3. ' i' → logprob: -9.378752708435059
    4. '*i' → logprob: -9.753752708435059
    5. '*' → logprob: -12.753752708435059
    6. 'o' → logprob: -13.628752708435059
    7. '(i' → logprob: -14.003752708435059
    8. '[i' → logprob: -14.003752708435059
    9. '```' → logprob: -14.003752708435059
    10. '   ' → logprob: -14.003752708435059

Token 34: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0023184416349977255
    2. ' *' → logprob: -6.502318382263184
    3. '*i' → logprob: -7.127318382263184
    4. ' ' → logprob: -12.377318382263184
    5. ' ' → logprob: -12.752318382263184
    6. '**' → logprob: -12.877318382263184
    7. '*
' → logprob: -14.252318382263184
    8. '*

' → logprob: -14.252318382263184
    9. ')' → logprob: -14.502318382263184
    10. ')*' → logprob: -15.252318382263184

Token 35: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008037998341023922
    2. '*i' → logprob: -4.88303804397583
    3. ' *' → logprob: -7.75803804397583
    4. '**' → logprob: -13.133037567138672
    5. ' ' → logprob: -14.133037567138672
    6. '*
' → logprob: -14.883037567138672
    7. ' ' → logprob: -15.008037567138672
    8. '`' → logprob: -16.133037567138672
    9. 'i' → logprob: -16.133037567138672
    10. ')*' → logprob: -16.258037567138672

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004081247374415398
    2. ' i' → logprob: -5.5040812492370605
    3. ' ' → logprob: -13.379080772399902
    4. '   ' → logprob: -13.754080772399902
    5. '	i' → logprob: -16.50408172607422
    6. ' ' → logprob: -16.62908172607422
    7. '  ' → logprob: -16.87908172607422
    8. '```' → logprob: -18.25408172607422
    9. '*i' → logprob: -18.25408172607422
    10. '    ' → logprob: -18.75408172607422

Token 37: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.25198978185653687
    2. '%' → logprob: -1.5019898414611816
    3. ')' → logprob: -10.876989364624023
    4. '%i' → logprob: -11.251989364624023
    5. '%c' → logprob: -11.376989364624023
    6. '%n' → logprob: -11.876989364624023
    7. ' ' → logprob: -12.376989364624023
    8. '%x' → logprob: -13.376989364624023
    9. '%b' → logprob: -13.751989364624023
    10. '%m' → logprob: -14.126989364624023

Token 38: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0012952389661222696
    2. ' o' → logprob: -6.75129508972168
    3. '998' → logprob: -9.00129508972168
    4. ' ' → logprob: -13.62629508972168
    5. '	o' → logprob: -15.87629508972168
    6. '`' → logprob: -16.62629508972168
    7. '   ' → logprob: -16.87629508972168
    8. '(o' → logprob: -17.00129508972168
    9. '{o' → logprob: -17.00129508972168
    10. '```' → logprob: -17.12629508972168

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')`' → logprob: -16.125001907348633
    5. '))' → logprob: -16.250001907348633
    6. '`)' → logprob: -16.375001907348633
    7. '')' → logprob: -18.500001907348633
    8. '),' → logprob: -18.750001907348633
    9. ')

' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.250001907348633

Token 40: 'def' (ID: 1314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2464503049850464
    2. 'fact' → logprob: -1.4964503049850464
    3. 'inv' → logprob: -2.246450424194336
    4. ')' → logprob: -2.621450424194336
    5. '#' → logprob: -2.746450424194336
    6. 'inverse' → logprob: -2.871450424194336
    7. 'factor' → logprob: -2.871450424194336
    8. 'i' → logprob: -3.746450424194336
    9. '!' → logprob: -4.246450424194336
    10. '<|end|>' → logprob: -4.746450424194336

Token 41: ' v' (ID: 323)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.20107322931289673
    2. ' f' → logprob: -3.326073169708252
    3. ' factor' → logprob: -3.576073169708252
    4. ' fact' → logprob: -4.201073169708252
    5. ' fac' → logprob: -4.326073169708252
    6. ' ' → logprob: -4.326073169708252
    7. ' bin' → logprob: -4.826073169708252
    8. ' pow' → logprob: -4.826073169708252
    9. '_factor' → logprob: -4.826073169708252
    10. ' n' → logprob: -5.326073169708252

Token 42: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7745516300201416
    2. 'al' → logprob: -1.7745516300201416
    3. 'alue' → logprob: -2.1495516300201416
    4. 'alid' → logprob: -3.0245516300201416
    5. 'factor' → logprob: -3.2745516300201416
    6. '(' → logprob: -3.3995516300201416
    7. 'i' → logprob: -3.5245516300201416
    8. 'v' → logprob: -4.2745513916015625
    9. '_factor' → logprob: -4.3995513916015625
    10. 'n' → logprob: -4.3995513916015625

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001953133614733815
    2. ')' → logprob: -6.376953125
    3. ',' → logprob: -8.626953125
    4. '):
' → logprob: -10.126953125
    5. ' ):' → logprob: -11.126953125
    6. ':' → logprob: -12.376953125
    7. '=' → logprob: -12.626953125
    8. '*' → logprob: -12.751953125
    9. ''):' → logprob: -13.501953125
    10. '**' → logprob: -14.251953125

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21361614763736725
    2. ' if' → logprob: -2.838616132736206
    3. ' x' → logprob: -2.838616132736206
    4. ' return' → logprob: -3.713616132736206
    5. 'x' → logprob: -3.963616132736206
    6. ' s' → logprob: -5.463616371154785
    7. ' ' → logprob: -5.588616371154785
    8. 's' → logprob: -5.713616371154785
    9. 'if' → logprob: -5.713616371154785
    10. 'n' → logprob: -5.963616371154785

Token 45: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9048898816108704
    2. 'x' → logprob: -1.5298898220062256
    3. 'if' → logprob: -1.9048898220062256
    4. ' return' → logprob: -2.5298898220062256
    5. ' if' → logprob: -3.2798898220062256
    6. ' x' → logprob: -3.9048898220062256
    7. 'r' → logprob: -4.029890060424805
    8. 'f' → logprob: -4.279890060424805
    9. ' res' → logprob: -4.404890060424805
    10. 'res' → logprob: -4.779890060424805

Token 46: ' pow' (ID: 9779)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.20303644239902496
    2. ' f' → logprob: -1.9530364274978638
    3. 'x' → logprob: -3.4530365467071533
    4. ' x' → logprob: -4.828036308288574
    5. 'o' → logprob: -7.578036308288574
    6. '(x' → logprob: -7.828036308288574
    7. '(f' → logprob: -7.953036308288574
    8. ' (' → logprob: -8.328036308288574
    9. ' o' → logprob: -8.828036308288574
    10. '1' → logprob: -8.953036308288574

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2812429368495941
    2. '(' → logprob: -1.4062429666519165
    3. '(pow' → logprob: -10.156243324279785
    4. '<|end|>' → logprob: -10.906243324279785
    5. ')' → logprob: -11.406243324279785
    6. 'x' → logprob: -12.156243324279785
    7. '(
' → logprob: -12.156243324279785
    8. '(v' → logprob: -13.031243324279785
    9. '(value' → logprob: -13.156243324279785
    10. ' (' → logprob: -13.156243324279785

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8096785545349121
    2. ',o' → logprob: -1.059678554534912
    3. '(o' → logprob: -1.684678554534912
    4. '(' → logprob: -4.059678554534912
    5. ',f' → logprob: -6.309678554534912
    6. 'o' → logprob: -6.559678554534912
    7. ' ,' → logprob: -7.059678554534912
    8. '2' → logprob: -8.43467903137207
    9. ')' → logprob: -8.55967903137207
    10. ',-' → logprob: -8.68467903137207

Token 49: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.007553035859018564
    2. ' o' → logprob: -5.6325531005859375
    3. '998' → logprob: -5.6325531005859375
    4. ' ' → logprob: -8.007553100585938
    5. '	o' → logprob: -11.257553100585938
    6. '999' → logprob: -12.632553100585938
    7. '{o' → logprob: -12.757553100585938
    8. '-' → logprob: -12.757553100585938
    9. '  ' → logprob: -12.882553100585938
    10. '   ' → logprob: -13.132553100585938

Token 50: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023166877508629113
    2. ' -' → logprob: -8.375231742858887
    3. '−' → logprob: -15.000231742858887
    4. '```' → logprob: -15.750231742858887
    5. '–' → logprob: -16.25023078918457
    6. '1' → logprob: -16.25023078918457
    7. '2' → logprob: -16.37523078918457
    8. ' ' → logprob: -16.50023078918457
    9. '   ' → logprob: -17.75023078918457
    10. '`' → logprob: -18.12523078918457

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -13.750005722045898
    3. '۲' → logprob: -14.062505722045898
    4. '```' → logprob: -14.187505722045898
    5. '٢' → logprob: -14.375005722045898
    6. '-' → logprob: -15.062505722045898
    7. '२' → logprob: -15.187505722045898
    8. '২' → logprob: -15.625005722045898
    9. ')' → logprob: -16.0000057220459
    10. '224' → logprob: -16.1875057220459

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. '```' → logprob: -13.187508583068848
    3. '-' → logprob: -13.375008583068848
    4. '۲' → logprob: -14.187508583068848
    5. ' ' → logprob: -14.437508583068848
    6. '٢' → logprob: -14.875008583068848
    7. '

' → logprob: -15.312508583068848
    8. '२' → logprob: -15.375008583068848
    9. '22' → logprob: -15.375008583068848
    10. '224' → logprob: -15.500008583068848

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006073602940887213
    2. ' ,' → logprob: -5.256073474884033
    3. ')' → logprob: -7.131073474884033
    4. ' ' → logprob: -11.381073951721191
    5. '   ' → logprob: -11.506073951721191
    6. ',x' → logprob: -12.756073951721191
    7. '}' → logprob: -12.881073951721191
    8. ',v' → logprob: -13.631073951721191
    9. '`,' → logprob: -13.756073951721191
    10. '```' → logprob: -13.756073951721191

Token 54: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0011703446507453918
    2. ' o' → logprob: -6.7511701583862305
    3. '	o' → logprob: -16.626171112060547
    4. '   ' → logprob: -17.376171112060547
    5. ')' → logprob: -18.626171112060547
    6. ')o' → logprob: -18.751171112060547
    7. '{o' → logprob: -19.751171112060547
    8. ' ' → logprob: -20.626171112060547
    9. '```' → logprob: -21.126171112060547
    10. 'x' → logprob: -21.501171112060547

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. '))' → logprob: -15.500000953674316
    4. ' )' → logprob: -16.375001907348633
    5. ')return' → logprob: -16.500001907348633
    6. ')`' → logprob: -17.375001907348633
    7. '),' → logprob: -17.750001907348633
    8. ')

' → logprob: -18.000001907348633
    9. ')x' → logprob: -18.250001907348633
    10. ')))' → logprob: -18.375001907348633

Token 56: 'def' (ID: 1314)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.6679018139839172
    2. 'def' → logprob: -1.5429017543792725
    3. 'iv' → logprob: -1.6679017543792725
    4. 'i' → logprob: -3.4179017543792725
    5. 'fi' → logprob: -4.542901992797852
    6. 'rf' → logprob: -5.167901992797852
    7. 'fr' → logprob: -5.292901992797852
    8. 'g' → logprob: -5.417901992797852
    9. 'fin' → logprob: -5.667901992797852
    10. 'in' → logprob: -5.917901992797852

Token 57: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03215192258358002
    2. ' c' → logprob: -3.782151937484741
    3. 'C' → logprob: -5.407151699066162
    4. 'i' → logprob: -6.907151699066162
    5. ' C' → logprob: -6.907151699066162
    6. 'n' → logprob: -6.907151699066162
    7. 'f' → logprob: -8.15715217590332
    8. 'inv' → logprob: -8.28215217590332
    9. 'comb' → logprob: -9.28215217590332
    10. 'p' → logprob: -9.28215217590332

Token 58: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005888621788471937
    2. '(k' → logprob: -5.63088846206665
    3. '(' → logprob: -6.25588846206665
    4. '(r' → logprob: -8.630888938903809
    5. 'n' → logprob: -9.255888938903809
    6. '(N' → logprob: -9.630888938903809
    7. '(x' → logprob: -11.505888938903809
    8. '(i' → logprob: -12.380888938903809
    9. '(a' → logprob: -12.880888938903809
    10. 'k' → logprob: -13.255888938903809

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010202585719525814
    2. ',k' → logprob: -4.635202407836914
    3. ',r' → logprob: -7.885202407836914
    4. ' ,' → logprob: -10.260202407836914
    5. ',n' → logprob: -10.760202407836914
    6. ',m' → logprob: -12.010202407836914
    7. ',j' → logprob: -13.010202407836914
    8. ',i' → logprob: -13.885202407836914
    9. ',K' → logprob: -13.885202407836914
    10. ',a' → logprob: -14.260202407836914

Token 60: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.049329064786434174
    2. 'r' → logprob: -3.0493290424346924
    3. ' k' → logprob: -7.4243292808532715
    4. ' r' → logprob: -9.049328804016113
    5. 'm' → logprob: -10.674328804016113
    6. 'n' → logprob: -12.924328804016113
    7. ' ' → logprob: -13.799328804016113
    8. 'x' → logprob: -15.674328804016113
    9. ')' → logprob: -15.799328804016113
    10. '```' → logprob: -16.29932975769043

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002908773487433791
    2. ')' → logprob: -5.877908706665039
    3. '):
' → logprob: -9.252908706665039
    4. ' ):' → logprob: -12.752908706665039
    5. '):
' → logprob: -12.752908706665039
    6. ':' → logprob: -14.127908706665039
    7. ''):' → logprob: -14.502908706665039
    8. ')：' → logprob: -14.877908706665039
    9. '）：' → logprob: -16.12790870666504
    10. ')**' → logprob: -16.25290870666504

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27325722575187683
    2. ' return' → logprob: -2.023257255554199
    3. ' if' → logprob: -2.273257255554199
    4. 'return' → logprob: -6.273257255554199
    5. 'if' → logprob: -6.523257255554199
    6. '	return' → logprob: -8.6482572555542
    7. ' ' → logprob: -9.1482572555542
    8. '    ' → logprob: -9.5232572555542
    9. ' k' → logprob: -10.2732572555542
    10. '	if' → logprob: -10.5232572555542

Token 63: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2435859590768814
    2. 'return' (adapté à ' return') → logprob: -1.7435859441757202
    3. 'f' → logprob: -3.2435860633850098
    4. ' if' → logprob: -6.74358606338501
    5. ' return' → logprob: -6.86858606338501
    6. ' f' → logprob: -10.618585586547852
    7. '   ' → logprob: -10.618585586547852
    8. '```' → logprob: -12.743585586547852
    9. '0' → logprob: -14.618585586547852
    10. '	return' → logprob: -15.368585586547852

Token 64: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07200402766466141
    2. ' f' → logprob: -3.3220040798187256
    3. '(f' → logprob: -3.4470040798187256
    4. ' (' → logprob: -6.6970038414001465
    5. '(' → logprob: -8.322004318237305
    6. '   ' → logprob: -10.197004318237305
    7. '((' → logprob: -11.697004318237305
    8. '	f' → logprob: -11.822004318237305
    9. '0' → logprob: -11.947004318237305
    10. ' ' → logprob: -12.322004318237305

Token 65: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: 0.0
    2. 'n' → logprob: -17.25
    3. '[' → logprob: -17.875
    4. '[k' → logprob: -18.875
    5. '[-' → logprob: -19.25
    6. '[f' → logprob: -20.625
    7. '[
' → logprob: -20.875
    8. '[int' → logprob: -21.0
    9. '```' → logprob: -21.875
    10. '[m' → logprob: -21.875

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.618001053633634e-05
    2. ']*' → logprob: -10.625025749206543
    3. ']
' → logprob: -13.875025749206543
    4. ' ]' → logprob: -14.875025749206543
    5. '   ' → logprob: -14.875025749206543
    6. ' ' → logprob: -16.12502670288086
    7. '"]' → logprob: -17.25002670288086
    8. '']' → logprob: -17.50002670288086
    9. '*' → logprob: -18.00002670288086
    10. ']
' → logprob: -18.25002670288086

Token 67: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006723064463585615
    2. ' *' → logprob: -5.006722927093506
    3. '*f' → logprob: -12.756723403930664
    4. '   ' → logprob: -13.381723403930664
    5. '*v' → logprob: -13.506723403930664
    6. '**' → logprob: -14.256723403930664
    7. '```' → logprob: -15.256723403930664
    8. ' ' → logprob: -15.381723403930664
    9. '//' → logprob: -15.506723403930664
    10. '
' → logprob: -16.131723403930664

Token 68: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03804275393486023
    2. ' v' → logprob: -3.2880427837371826
    3. '(v' → logprob: -14.288043022155762
    4. '	v' → logprob: -15.163043022155762
    5. '   ' → logprob: -15.413043022155762
    6. ' ' → logprob: -15.788043022155762
    7. '  ' → logprob: -17.538042068481445
    8. '```' → logprob: -17.913042068481445
    9. ')v' → logprob: -17.913042068481445
    10. '[v' → logprob: -18.163042068481445

Token 69: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001147006405517459
    2. 'f' → logprob: -6.8761467933654785
    3. '[f' → logprob: -9.376147270202637
    4. '(' → logprob: -10.501147270202637
    5. '(c' → logprob: -14.251147270202637
    6. '	f' → logprob: -15.251147270202637
    7. '```' → logprob: -15.251147270202637
    8. '(n' → logprob: -15.751147270202637
    9. ' f' → logprob: -15.876147270202637
    10. ' (' → logprob: -15.876147270202637

Token 70: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.200166469876422e-06
    2. 'k' → logprob: -12.875004768371582
    3. '[n' → logprob: -13.125004768371582
    4. '[' → logprob: -15.250004768371582
    5. '[f' → logprob: -16.6250057220459
    6. ')' → logprob: -16.8750057220459
    7. '   ' → logprob: -17.0000057220459
    8. '(k' → logprob: -17.0000057220459
    9. ')[' → logprob: -17.5000057220459
    10. '{k' → logprob: -17.7500057220459

Token 71: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.007683531381189823
    2. ' -' → logprob: -5.132683753967285
    3. '[k' → logprob: -6.382683753967285
    4. '-' → logprob: -10.132683753967285
    5. 'k' → logprob: -11.507683753967285
    6. '])' → logprob: -12.132683753967285
    7. ']' → logprob: -12.382683753967285
    8. '[-' → logprob: -13.757683753967285
    9. '   ' → logprob: -14.257683753967285
    10. ' k' → logprob: -15.007683753967285

Token 72: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004971518646925688
    2. ' k' → logprob: -8.000496864318848
    3. '-k' → logprob: -8.750496864318848
    4. '	k' → logprob: -13.125496864318848
    5. '   ' → logprob: -14.000496864318848
    6. ' к' → logprob: -15.500496864318848
    7. ']' → logprob: -15.875496864318848
    8. ' -' → logprob: -16.000497817993164
    9. ' ' → logprob: -17.250497817993164
    10. '{k' → logprob: -17.625497817993164

Token 73: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007624491583555937
    2. ']' → logprob: -4.882624626159668
    3. '])
' → logprob: -12.257624626159668
    4. ' ])' → logprob: -12.382624626159668
    5. ')' → logprob: -12.882624626159668
    6. ']*)' → logprob: -13.382624626159668
    7. ''])' → logprob: -13.507624626159668
    8. '])*' → logprob: -14.132624626159668
    9. '])

' → logprob: -14.257624626159668
    10. '])
' → logprob: -14.882624626159668

Token 74: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11335642635822296
    2. '%' → logprob: -2.238356351852417
    3. ' *' → logprob: -8.113356590270996
    4. ' ' → logprob: -9.988356590270996
    5. '`' → logprob: -9.988356590270996
    6. '*' → logprob: -10.238356590270996
    7. ' f' → logprob: -10.488356590270996
    8. '   ' → logprob: -10.488356590270996
    9. 'f' → logprob: -10.863356590270996
    10. '```' → logprob: -12.238356590270996

Token 75: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.85235276655294e-05
    2. ' v' → logprob: -9.625088691711426
    3. 'f' → logprob: -10.875088691711426
    4. '(v' → logprob: -13.250088691711426
    5. '(' → logprob: -13.500088691711426
    6. '	v' → logprob: -16.37508773803711
    7. ')v' → logprob: -16.50008773803711
    8. ' f' → logprob: -17.50008773803711
    9. '(f' → logprob: -17.87508773803711
    10. '?v' → logprob: -17.87508773803711

Token 76: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0007111206650733948
    2. '(' → logprob: -7.250710964202881
    3. 'f' → logprob: -14.000711441040039
    4. '[f' → logprob: -16.25071144104004
    5. '(
' → logprob: -16.37571144104004
    6. '(k' → logprob: -16.75071144104004
    7. ' (' → logprob: -17.62571144104004
    8. '((' → logprob: -18.50071144104004
    9. '(x' → logprob: -18.75071144104004
    10. '(

' → logprob: -19.00071144104004

Token 77: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.5776860184123507e-06
    2. 'k' → logprob: -13.00000286102295
    3. '(k' → logprob: -16.125001907348633
    4. '{k' → logprob: -17.000001907348633
    5. '[' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '	k' → logprob: -18.375001907348633
    8. '[n' → logprob: -18.625001907348633
    9. ',k' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 78: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0042237089946866035
    2. ')' → logprob: -5.504223823547363
    3. ']' → logprob: -9.254223823547363
    4. '})' → logprob: -11.129223823547363
    5. ''])' → logprob: -11.379223823547363
    6. ' ])' → logprob: -11.504223823547363
    7. '`)' → logprob: -13.379223823547363
    8. '%' → logprob: -13.504223823547363
    9. '   ' → logprob: -13.629223823547363
    10. '）' → logprob: -13.629223823547363

Token 79: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3875576853752136
    2. ' %' → logprob: -1.1375577449798584
    3. '%n' → logprob: -7.512557506561279
    4. ')' → logprob: -9.512557983398438
    5. ' ' → logprob: -10.637557983398438
    6. ')%' → logprob: -11.762557983398438
    7. '%x' → logprob: -12.137557983398438
    8. '%
' → logprob: -12.262557983398438
    9. '%i' → logprob: -12.512557983398438
    10. '`' → logprob: -12.637557983398438

Token 80: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.04859168455004692
    2. ' o' → logprob: -3.0485916137695312
    3. '	o' → logprob: -13.173591613769531
    4. '(o' → logprob: -13.423591613769531
    5. ' ' → logprob: -15.048591613769531
    6. ''o' → logprob: -15.798591613769531
    7. ' ' → logprob: -16.29859161376953
    8. '_o' → logprob: -16.54859161376953
    9. '{o' → logprob: -16.67359161376953
    10. '998' → logprob: -16.67359161376953

Token 81: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27618974447250366
    2. '<|end|>' → logprob: -1.6511898040771484
    3. '
' → logprob: -3.7761898040771484
    4. '\n' → logprob: -4.151189804077148
    5. '(' → logprob: -5.776189804077148
    6. '*' → logprob: -6.026189804077148
    7. '```' → logprob: -6.651189804077148
    8. '}' → logprob: -7.401189804077148
    9. '<|end|>' → logprob: -7.401189804077148
    10. '[' → logprob: -7.651189804077148

Token 82: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6177895069122314
    2. '<|end|>' → logprob: -0.9927895069122314
    3. '(' → logprob: -2.9927895069122314
    4. '
' → logprob: -4.367789268493652
    5. '\n' → logprob: -4.742789268493652
    6. ' ' → logprob: -5.742789268493652
    7. '```' → logprob: -5.742789268493652
    8. 'n' → logprob: -5.867789268493652
    9. '(
' → logprob: -6.492789268493652
    10. '#' → logprob: -6.617789268493652

Token 83: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6321343183517456
    2. ' ' → logprob: -1.1321343183517456
    3. '=' → logprob: -2.382134437561035
    4. ',' → logprob: -3.757134437561035
    5. ' ,' → logprob: -4.257134437561035
    6. '<|end|>' → logprob: -5.382134437561035
    7. ')' → logprob: -5.632134437561035
    8. '[' → logprob: -6.007134437561035
    9. '  ' → logprob: -6.882134437561035
    10. ' >' → logprob: -6.882134437561035

Token 84: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06295833736658096
    2. ' k' → logprob: -3.187958240509033
    3. 'm' → logprob: -4.062958240509033
    4. ' m' → logprob: -6.562958240509033
    5. '=' → logprob: -7.562958240509033
    6. ' ' → logprob: -8.937958717346191
    7. ' =' → logprob: -9.062958717346191
    8. 'r' → logprob: -9.562958717346191
    9. 'a' → logprob: -9.687958717346191
    10. 'd' → logprob: -10.062958717346191

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932688355445862
    2. ' =' → logprob: -0.6932688355445862
    3. ',' → logprob: -9.568268775939941
    4. '=input' → logprob: -9.943268775939941
    5. ' ' → logprob: -13.818268775939941
    6. ')' → logprob: -14.568268775939941
    7. '=int' → logprob: -14.818268775939941
    8. 'input' → logprob: -15.068268775939941
    9. ' ,' → logprob: -15.568268775939941
    10. '<|end|>' → logprob: -15.943268775939941

Token 86: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.35992446541786194
    2. ' map' → logprob: -1.2349244356155396
    3. '5' → logprob: -5.48492431640625
    4. ' ' → logprob: -5.98492431640625
    5. '10' → logprob: -6.73492431640625
    6. '0' → logprob: -6.85992431640625
    7. '1' → logprob: -7.10992431640625
    8. '3' → logprob: -8.35992431640625
    9. 'list' → logprob: -8.35992431640625
    10. '998' → logprob: -8.60992431640625

Token 87: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48522013425827026
    2. '(int' → logprob: -0.9852201342582703
    3. '(input' → logprob: -4.610219955444336
    4. '(str' → logprob: -7.485219955444336
    5. '(list' → logprob: -8.610219955444336
    6. '(map' → logprob: -9.485219955444336
    7. '(tuple' → logprob: -9.485219955444336
    8. '(eval' → logprob: -10.235219955444336
    9. '(
' → logprob: -10.360219955444336
    10. '(lambda' → logprob: -10.610219955444336

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7832691073417664
    2. ',input' → logprob: -0.7832691073417664
    3. '(input' → logprob: -2.908269166946411
    4. '(' → logprob: -3.908269166946411
    5. 'input' → logprob: -4.783268928527832
    6. ' input' → logprob: -7.158268928527832
    7. ' ,' → logprob: -7.408268928527832
    8. ',int' → logprob: -7.783268928527832
    9. '(),' → logprob: -8.158268928527832
    10. '(int' → logprob: -8.533268928527832

Token 89: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12695960700511932
    2. ' input' → logprob: -2.1269595623016357
    3. 'int' → logprob: -11.001959800720215
    4. ')' → logprob: -12.001959800720215
    5. ' ' → logprob: -12.251959800720215
    6. '=input' → logprob: -13.876959800720215
    7. '	input' → logprob: -14.126959800720215
    8. 'str' → logprob: -14.626959800720215
    9. '```' → logprob: -15.001959800720215
    10. '(input' → logprob: -15.001959800720215

Token 90: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00391727639362216
    2. '()' → logprob: -5.628917217254639
    3. '())' → logprob: -8.128917694091797
    4. '(' → logprob: -11.628917694091797
    5. ')' → logprob: -12.503917694091797
    6. '(),' → logprob: -13.253917694091797
    7. '());' → logprob: -13.628917694091797
    8. '()[' → logprob: -13.878917694091797
    9. ' ().' → logprob: -14.003917694091797
    10. 'split' → logprob: -14.503917694091797

Token 91: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007163656409829855
    2. 'strip' → logprob: -7.250716209411621
    3. ')' → logprob: -12.750716209411621
    4. 'rstrip' → logprob: -13.375716209411621
    5. ' split' → logprob: -13.500716209411621
    6. 'plit' → logprob: -15.250716209411621
    7. '(split' → logprob: -15.750716209411621
    8. 'read' → logprob: -17.250717163085938
    9. '()' → logprob: -17.250717163085938
    10. 'spl' → logprob: -17.875717163085938

Token 92: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14606593549251556
    2. ')' → logprob: -2.5210659503936768
    3. '()' → logprob: -2.8960659503936768
    4. '(' → logprob: -8.521065711975098
    5. '()))' → logprob: -10.771065711975098
    6. '))' → logprob: -10.771065711975098
    7. '(),' → logprob: -10.896065711975098
    8. '());' → logprob: -12.146065711975098
    9. '())
' → logprob: -12.896065711975098
    10. '();)' → logprob: -12.896065711975098

Token 93: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44978567957878113
    2. 'd' → logprob: -2.9497857093811035
    3. 'n' → logprob: -2.9497857093811035
    4. 'c' → logprob: -3.3247857093811035
    5. 'p' → logprob: -3.4497857093811035
    6. 'result' → logprob: -3.6997857093811035
    7. 'f' → logprob: -3.8247857093811035
    8. 't' → logprob: -3.8247857093811035
    9. 'r' → logprob: -4.0747857093811035
    10. 's' → logprob: -4.1997857093811035

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07592537254095078
    2. '=' → logprob: -2.700925350189209
    3. ',' → logprob: -5.700925350189209
    4. ' ' → logprob: -6.450925350189209
    5. 's' → logprob: -7.200925350189209
    6. '[' → logprob: -10.075925827026367
    7. 'a' → logprob: -10.200925827026367
    8. '_' → logprob: -10.325925827026367
    9. ' =[' → logprob: -10.325925827026367
    10. '=[]' → logprob: -10.575925827026367

Token 95: ' (' (ID: 350)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.12504662573337555
    2. ' list' → logprob: -2.750046730041504
    3. '[n' → logprob: -4.125046730041504
    4. '[list' → logprob: -4.250046730041504
    5. '[' → logprob: -4.750046730041504
    6. ' [' → logprob: -5.000046730041504
    7. '[m' → logprob: -5.375046730041504
    8. '[]' → logprob: -6.250046730041504
    9. '[input' → logprob: -7.625046730041504
    10. '[int' → logprob: -7.750046730041504

Token 96: 'c' (ID: 66)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3826501965522766
    2. 'c' → logprob: -1.5076501369476318
    3. 'm' → logprob: -3.007650136947632
    4. '1' → logprob: -4.632650375366211
    5. ' n' → logprob: -5.007650375366211
    6. 'pow' → logprob: -5.382650375366211
    7. '[n' → logprob: -5.632650375366211
    8. '(n' → logprob: -5.757650375366211
    9. ' c' → logprob: -5.757650375366211
    10. 'v' → logprob: -6.132650375366211

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.031230444088578224
    2. '(m' → logprob: -3.5312304496765137
    3. '(' → logprob: -6.531230449676514
    4. '((' → logprob: -11.531229972839355
    5. 'm' → logprob: -12.031229972839355
    6. 'n' → logprob: -12.781229972839355
    7. ')(' → logprob: -13.906229972839355
    8. ')' → logprob: -13.906229972839355
    9. ' (' → logprob: -14.781229972839355
    10. ')n' → logprob: -15.781229972839355

Token 98: ' +' (ID: 659)
  Prédit: '+m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+m' → logprob: -0.2751259505748749
    2. '+' → logprob: -2.6501259803771973
    3. ' +' → logprob: -2.7751259803771973
    4. ',' → logprob: -3.2751259803771973
    5. '-' → logprob: -3.4001259803771973
    6. '(' → logprob: -4.400125980377197
    7. ',m' → logprob: -4.775125980377197
    8. ' -' → logprob: -5.025125980377197
    9. '(m' → logprob: -5.525125980377197
    10. 'm' → logprob: -6.900125980377197

Token 99: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002251125843031332
    2. ' m' → logprob: -8.500225067138672
    3. 'n' → logprob: -11.750225067138672
    4. '2' → logprob: -12.500225067138672
    5. '(m' → logprob: -12.500225067138672
    6. '1' → logprob: -13.375225067138672
    7. '(' → logprob: -14.125225067138672
    8. 'a' → logprob: -14.125225067138672
    9. '-' → logprob: -14.125225067138672
    10. ' ' → logprob: -14.625225067138672

Token 100: '3' (ID: 18)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.837811088189483e-05
    2. ' m' → logprob: -10.125068664550781
    3. '(m' → logprob: -12.000068664550781
    4. '1' → logprob: -12.000068664550781
    5. '2' → logprob: -12.125068664550781
    6. 'n' → logprob: -12.375068664550781
    7. '(' → logprob: -13.625068664550781
    8. '-' → logprob: -13.750068664550781
    9. ' ' → logprob: -14.125068664550781
    10. '{' → logprob: -14.250068664550781

Token 101: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07474619150161743
    2. ',m' → logprob: -2.6997461318969727
    3. ',n' → logprob: -5.449746131896973
    4. ' ,' → logprob: -8.574746131896973
    5. 'm' → logprob: -9.199746131896973
    6. ',k' → logprob: -9.324746131896973
    7. '3' → logprob: -10.699746131896973
    8. '(n' → logprob: -11.199746131896973
    9. '-' → logprob: -11.324746131896973
    10. ' ' → logprob: -11.824746131896973

Token 102: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.460291767027229e-05
    2. ' m' → logprob: -10.125094413757324
    3. '(m' → logprob: -10.500094413757324
    4. 'n' → logprob: -10.750094413757324
    5. '   ' → logprob: -12.875094413757324
    6. ' ' → logprob: -13.875094413757324
    7. '(n' → logprob: -15.250094413757324
    8. '  ' → logprob: -15.375094413757324
    9. '	m' → logprob: -15.500094413757324
    10. '```' → logprob: -15.625094413757324

Token 103: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6493070125579834
    2. '-' → logprob: -1.0243070125579834
    3. ' -' → logprob: -2.1493070125579834
    4. ' ,' → logprob: -7.6493072509765625
    5. ')' → logprob: -7.7743072509765625
    6. ',n' → logprob: -8.274307250976562
    7. '3' → logprob: -8.399307250976562
    8. 'm' → logprob: -8.399307250976562
    9. ',m' → logprob: -9.399307250976562
    10. ' ' → logprob: -9.399307250976562

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006862897425889969
    2. '3' → logprob: -5.631863117218018
    3. '2' → logprob: -6.506863117218018
    4. ' ' → logprob: -6.881863117218018
    5. '4' → logprob: -7.381863117218018
    6. '5' → logprob: -10.38186264038086
    7. '7' → logprob: -10.50686264038086
    8. '   ' → logprob: -10.88186264038086
    9. '6' → logprob: -11.13186264038086
    10. '  ' → logprob: -12.19436264038086

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002800244837999344
    2. '2' → logprob: -6.502800464630127
    3. '3' → logprob: -6.752800464630127
    4. '4' → logprob: -9.377799987792969
    5. '   ' → logprob: -10.752799987792969
    6. '6' → logprob: -12.002799987792969
    7. '5' → logprob: -12.127799987792969
    8. ' ' → logprob: -12.752799987792969
    9. 'n' → logprob: -13.127799987792969
    10. '7' → logprob: -13.565299987792969

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013279760023579001
    2. ',n' → logprob: -6.751327991485596
    3. ' ,' → logprob: -9.126327514648438
    4. ',m' → logprob: -10.501327514648438
    5. ')' → logprob: -12.501327514648438
    6. '3' → logprob: -12.626327514648438
    7. 'n' → logprob: -12.626327514648438
    8. 'm' → logprob: -12.751327514648438
    9. '(n' → logprob: -13.001327514648438
    10. '[n' → logprob: -14.126327514648438

Token 107: ' n' (ID: 297)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.15430079400539398
    2. ' ' → logprob: -2.7793006896972656
    3. 'n' → logprob: -2.9043006896972656
    4. ' n' → logprob: -3.6543006896972656
    5. '4' → logprob: -9.279300689697266
    6. 'm' → logprob: -10.279300689697266
    7. ')' → logprob: -10.529300689697266
    8. '(' → logprob: -10.654300689697266
    9. '2' → logprob: -11.279300689697266
    10. '   ' → logprob: -11.904300689697266

Token 108: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5279444456100464
    2. '-' → logprob: -1.0279444456100464
    3. ' -' → logprob: -3.152944564819336
    4. '+' → logprob: -5.152944564819336
    5. '))' → logprob: -5.777944564819336
    6. ' +' → logprob: -7.402944564819336
    7. ' )' → logprob: -9.652944564819336
    8. ',' → logprob: -10.027944564819336
    9. '),' → logprob: -10.902944564819336
    10. ' ' → logprob: -11.152944564819336

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. '2' → logprob: -9.625158309936523
    3. ' ' → logprob: -9.750158309936523
    4. '3' → logprob: -11.500158309936523
    5. '   ' → logprob: -11.750158309936523
    6. ')' → logprob: -12.000158309936523
    7. '4' → logprob: -12.625158309936523
    8. 'm' → logprob: -13.125158309936523
    9. '    ' → logprob: -13.500158309936523
    10. '  ' → logprob: -13.875158309936523

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.182190554682165e-05
    2. '2' → logprob: -10.250061988830566
    3. '3' → logprob: -11.375061988830566
    4. ' ' → logprob: -12.000061988830566
    5. 'm' → logprob: -12.875061988830566
    6. '4' → logprob: -12.875061988830566
    7. '   ' → logprob: -13.750061988830566
    8. '    ' → logprob: -14.875061988830566
    9. ')' → logprob: -15.187561988830566
    10. 'n' → logprob: -15.250061988830566

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007996014319360256
    2. '))' → logprob: -4.882996082305908
    3. ' )' → logprob: -8.25799560546875
    4. ')*' → logprob: -10.38299560546875
    5. '+' → logprob: -11.00799560546875
    6. '-' → logprob: -11.13299560546875
    7. ',' → logprob: -11.50799560546875
    8. ' ))' → logprob: -11.88299560546875
    9. ')))' → logprob: -12.00799560546875
    10. '')' → logprob: -12.13299560546875

Token 112: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8071877956390381
    2. ' -' → logprob: -0.9321877956390381
    3. '+' → logprob: -2.932187795639038
    4. '*' → logprob: -3.057187795639038
    5. ')' → logprob: -3.307187795639038
    6. ' *' → logprob: -4.307188034057617
    7. ' +' → logprob: -4.807188034057617
    8. ' ' → logprob: -7.182188034057617
    9. '%' → logprob: -8.057188034057617
    10. ' )' → logprob: -8.307188034057617

Token 113: ' n' (ID: 297)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.22668302059173584
    2. ' c' → logprob: -1.6016830205917358
    3. '1' → logprob: -7.101683139801025
    4. '2' → logprob: -8.726682662963867
    5. '3' → logprob: -8.976682662963867
    6. '(c' → logprob: -9.351682662963867
    7. ' ' → logprob: -10.726682662963867
    8. ' (' → logprob: -11.601682662963867
    9. '6' → logprob: -11.851682662963867
    10. '0' → logprob: -11.976682662963867

Token 114: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4693683385848999
    2. '*' → logprob: -1.3443683385849
    3. ')' → logprob: -2.2193684577941895
    4. '*c' → logprob: -5.7193684577941895
    5. ')*' → logprob: -7.5943684577941895
    6. ' )' → logprob: -7.7193684577941895
    7. '*f' → logprob: -8.344367980957031
    8. '*)' → logprob: -8.469367980957031
    9. '+' → logprob: -9.094367980957031
    10. ' ' → logprob: -9.719367980957031

Token 115: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02977120317518711
    2. ' c' → logprob: -3.529771089553833
    3. '(c' → logprob: -11.279770851135254
    4. ' ' → logprob: -13.154770851135254
    5. 'pow' → logprob: -13.404770851135254
    6. ')c' → logprob: -13.404770851135254
    7. '*c' → logprob: -14.029770851135254
    8. ')' → logprob: -14.529770851135254
    9. ' (' → logprob: -14.779770851135254
    10. '	c' → logprob: -14.904770851135254

Token 116: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0031850787345319986
    2. '(' → logprob: -6.003185272216797
    3. '(m' → logprob: -7.253185272216797
    4. '((' → logprob: -13.753185272216797
    5. '(r' → logprob: -16.128185272216797
    6. ' (' → logprob: -16.878185272216797
    7. '(c' → logprob: -17.128185272216797
    8. 'n' → logprob: -17.378185272216797
    9. '3' → logprob: -18.128185272216797
    10. '(
' → logprob: -18.378185272216797

Token 117: ' +' (ID: 659)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005544528365135193
    2. '(' → logprob: -5.255544662475586
    3. '+' → logprob: -8.380544662475586
    4. '(m' → logprob: -10.005544662475586
    5. 'n' → logprob: -11.255544662475586
    6. ' +' → logprob: -11.505544662475586
    7. '(+' → logprob: -12.005544662475586
    8. '+n' → logprob: -12.755544662475586
    9. ' (' → logprob: -13.380544662475586
    10. '+m' → logprob: -13.880544662475586

Token 118: ' m' (ID: 284)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009320637909695506
    2. ' ' → logprob: -7.000932216644287
    3. '(' → logprob: -11.500931739807129
    4. '2' → logprob: -12.000931739807129
    5. '  ' → logprob: -13.625931739807129
    6. 'm' → logprob: -13.875931739807129
    7. '```' → logprob: -15.000931739807129
    8. '   ' → logprob: -15.125931739807129
    9. '-' → logprob: -15.250931739807129
    10. '+' → logprob: -15.625931739807129

Token 119: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8045076727867126
    2. '+' → logprob: -0.9295076727867126
    3. ' +' → logprob: -2.6795077323913574
    4. 'n' → logprob: -3.1795077323913574
    5. ' -' → logprob: -3.3045077323913574
    6. '+n' → logprob: -5.554507732391357
    7. '+m' → logprob: -5.929507732391357
    8. 'm' → logprob: -6.679507732391357
    9. '2' → logprob: -7.429507732391357
    10. ' n' → logprob: -7.554507732391357

Token 120: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23667335510253906
    2. '1' → logprob: -2.111673355102539
    3. ' -' → logprob: -2.611673355102539
    4. '2' → logprob: -4.611673355102539
    5. ' ' → logprob: -5.611673355102539
    6. '3' → logprob: -6.736673355102539
    7. '  ' → logprob: -7.611673355102539
    8. '4' → logprob: -7.986673355102539
    9. '   ' → logprob: -8.236673355102539
    10. 'n' → logprob: -9.486673355102539

Token 121: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19875875115394592
    2. '1' → logprob: -2.323758840560913
    3. '2' → logprob: -2.948758840560913
    4. ' -' → logprob: -4.073758602142334
    5. '3' → logprob: -5.448758602142334
    6. ' ' → logprob: -5.573758602142334
    7. '  ' → logprob: -6.948758602142334
    8. '   ' → logprob: -6.948758602142334
    9. 'm' → logprob: -7.198758602142334
    10. '4' → logprob: -7.323758602142334

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009021693258546293
    2. ' ,' → logprob: -8.00090217590332
    3. ',m' → logprob: -8.37590217590332
    4. ',n' → logprob: -8.62590217590332
    5. ')' → logprob: -9.75090217590332
    6. '(' → logprob: -10.75090217590332
    7. 'm' → logprob: -10.75090217590332
    8. '(n' → logprob: -11.00090217590332
    9. ',
' → logprob: -11.12590217590332
    10. 'r' → logprob: -12.75090217590332

Token 123: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4038527011871338
    2. 'n' → logprob: -1.1538527011871338
    3. '3' → logprob: -5.028852462768555
    4. ' n' → logprob: -5.278852462768555
    5. ' m' → logprob: -5.403852462768555
    6. '2' → logprob: -7.903852462768555
    7. ' ' → logprob: -8.653852462768555
    8. '   ' → logprob: -9.028852462768555
    9. '  ' → logprob: -11.403852462768555
    10. '    ' → logprob: -12.028852462768555

Token 124: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4288199841976166
    2. ' -' → logprob: -1.053820013999939
    3. ')' → logprob: -9.30381965637207
    4. ' ' → logprob: -11.55381965637207
    5. '   ' → logprob: -11.67881965637207
    6. '  ' → logprob: -12.55381965637207
    7. 'm' → logprob: -12.80381965637207
    8. '−' → logprob: -14.30381965637207
    9. '1' → logprob: -14.42881965637207
    10. '0' → logprob: -14.67881965637207

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011558275582501665
    2. '2' → logprob: -9.250115394592285
    3. ' ' → logprob: -11.000115394592285
    4. '   ' → logprob: -13.500115394592285
    5. '```' → logprob: -14.812615394592285
    6. '  ' → logprob: -15.625115394592285
    7. '۱' → logprob: -16.1251163482666
    8. '
' → logprob: -16.2501163482666
    9. '１' → logprob: -16.6876163482666
    10. '           ' → logprob: -16.8126163482666

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017049367306753993
    2. '2' → logprob: -6.376705169677734
    3. '   ' → logprob: -14.001705169677734
    4. ' ' → logprob: -14.126705169677734
    5. '```' → logprob: -14.251705169677734
    6. '3' → logprob: -16.126705169677734
    7. '           ' → logprob: -16.251705169677734
    8. '  ' → logprob: -16.439205169677734
    9. '１' → logprob: -16.876705169677734
    10. '    ' → logprob: -17.314205169677734

Token 127: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06781396269798279
    2. ',' → logprob: -3.0678138732910156
    3. '))' → logprob: -4.067813873291016
    4. ')%' → logprob: -6.817813873291016
    5. ' ,' → logprob: -8.192813873291016
    6. ' )' → logprob: -8.692813873291016
    7. '   ' → logprob: -8.942813873291016
    8. '`)' → logprob: -9.442813873291016
    9. ')
' → logprob: -10.817813873291016
    10. '```' → logprob: -10.817813873291016

Token 128: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.25447940826416016
    2. ' %' → logprob: -1.5044794082641602
    3. ')' → logprob: -6.12947940826416
    4. ' ' → logprob: -8.62947940826416
    5. ')%' → logprob: -9.12947940826416
    6. ' ' → logprob: -11.00447940826416
    7. '%c' → logprob: -11.75447940826416
    8. '%n' → logprob: -12.00447940826416
    9. '%x' → logprob: -12.00447940826416
    10. '<|end|>' → logprob: -12.00447940826416

Token 129: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -2.7848862373502925e-05
    2. ' o' → logprob: -10.500027656555176
    3. '998' → logprob: -16.500028610229492
    4. '(o' → logprob: -16.750028610229492
    5. '	o' → logprob: -16.875028610229492
    6. '{o' → logprob: -19.000028610229492
    7. ' ' → logprob: -19.750028610229492
    8. ''o' → logprob: -20.000028610229492
    9. '_o' → logprob: -20.750028610229492
    10. ' ' → logprob: -20.875028610229492

Token 130: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6727917194366455
    2. 'print' → logprob: -0.7977917194366455
    3. '<|end|>' → logprob: -3.6727917194366455
    4. '
' → logprob: -4.422791481018066
    5. ' print' → logprob: -7.047791481018066
    6. ')
' → logprob: -8.047791481018066
    7. '#' → logprob: -8.547791481018066
    8. ']' → logprob: -8.672791481018066
    9. '```' → logprob: -9.047791481018066
    10. '),' → logprob: -9.922791481018066

Token 131: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004060829058289528
    2. ')' → logprob: -6.129060745239258
    3. '
' → logprob: -7.129060745239258
    4. ' print' → logprob: -7.629060745239258
    5. '<|end|>' → logprob: -7.754060745239258
    6. '```' → logprob: -9.754060745239258
    7. '\n' → logprob: -10.129060745239258
    8. '#' → logprob: -11.754060745239258
    9. 'b' → logprob: -12.004060745239258
    10. '(print' → logprob: -12.379060745239258

Token 132: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5201074481010437
    2. 'a' → logprob: -1.1451075077056885
    3. ' m' → logprob: -3.2701075077056885
    4. ' n' → logprob: -3.5201075077056885
    5. 'm' → logprob: -4.395107269287109
    6. 'n' → logprob: -5.020107269287109
    7. ' ' → logprob: -8.52010726928711
    8. '(a' → logprob: -8.77010726928711
    9. ' (' → logprob: -9.27010726928711
    10. ' not' → logprob: -9.64510726928711

Token 133: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6445949673652649
    2. ' ==' → logprob: -1.5195949077606201
    3. '>' → logprob: -1.8945949077606201
    4. ' >' → logprob: -2.39459490776062
    5. '<' → logprob: -5.519595146179199
    6. ' <' → logprob: -6.144595146179199
    7. ' ' → logprob: -6.394595146179199
    8. '<=' → logprob: -6.519595146179199
    9. '>=' → logprob: -6.644595146179199
    10. '!=' → logprob: -6.894595146179199

Token 134: ' m' (ID: 284)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027046408504247665
    2. 'm' → logprob: -4.152046203613281
    3. '2' → logprob: -4.902046203613281
    4. '0' → logprob: -6.527046203613281
    5. '3' → logprob: -6.652046203613281
    6. '998' → logprob: -8.777046203613281
    7. ' ' → logprob: -8.902046203613281
    8. '4' → logprob: -9.902046203613281
    9. '250' → logprob: -10.652046203613281
    10. '5' → logprob: -11.027046203613281

Token 135: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023268891498446465
    2. ':
' → logprob: -3.773268938064575
    3. ' and' → logprob: -11.523268699645996
    4. ' :' → logprob: -12.523268699645996
    5. ':
' → logprob: -13.523268699645996
    6. ':

' → logprob: -13.773268699645996
    7. ' :
' → logprob: -13.773268699645996
    8. '+' → logprob: -13.773268699645996
    9. '   ' → logprob: -14.023268699645996
    10. '**' → logprob: -14.523268699645996

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025744881480932236
    2. ' ' → logprob: -3.900744915008545
    3. '2' → logprob: -6.025744915008545
    4. '0' → logprob: -6.650744915008545
    5. '3' → logprob: -7.650744915008545
    6. 'n' → logprob: -7.775744915008545
    7. 'm' → logprob: -8.525744438171387
    8. '4' → logprob: -9.275744438171387
    9. 'r' → logprob: -9.525744438171387
    10. '5' → logprob: -9.900744438171387

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004565292038023472
    2. '0' → logprob: -6.129565238952637
    3. '2' → logprob: -6.379565238952637
    4. ' ' → logprob: -8.254565238952637
    5. '3' → logprob: -8.379565238952637
    6. 'n' → logprob: -9.754565238952637
    7. '4' → logprob: -10.254565238952637
    8. 'm' → logprob: -10.254565238952637
    9. 'r' → logprob: -10.754565238952637
    10. '5' → logprob: -11.629565238952637

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004647876601666212
    2. ':
' → logprob: -5.379647731781006
    3. '   ' → logprob: -11.379648208618164
    4. ' and' → logprob: -11.754648208618164
    5. ' :' → logprob: -12.754648208618164
    6. ':return' → logprob: -13.629648208618164
    7. ',' → logprob: -14.254648208618164
    8. 'and' → logprob: -14.379648208618164
    9. ':

' → logprob: -14.504648208618164
    10. '.' → logprob: -14.754648208618164

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023343784268945456
    2. 'print' → logprob: -6.8773345947265625
    3. ' print' → logprob: -7.1273345947265625
    4. 'a' → logprob: -8.002334594726562
    5. ' a' → logprob: -10.002334594726562
    6. 'n' → logprob: -10.002334594726562
    7. ':' → logprob: -10.627334594726562
    8. '    
' → logprob: -10.752334594726562
    9. 'b' → logprob: -12.002334594726562
    10. ':
' → logprob: -12.502334594726562

Token 140: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4846533238887787
    2. 'a' → logprob: -0.9846533536911011
    3. '   ' → logprob: -4.734653472900391
    4. ' print' → logprob: -6.859653472900391
    5. ' a' → logprob: -7.609653472900391
    6. 'b' → logprob: -9.60965347290039
    7. 'n' → logprob: -9.85965347290039
    8. '```' → logprob: -11.23465347290039
    9. 'exit' → logprob: -11.35965347290039
    10. ' ' → logprob: -12.23465347290039

Token 141: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01851031556725502
    2. ' ' → logprob: -5.268510341644287
    3. 'i' → logprob: -5.393510341644287
    4. '_' → logprob: -5.393510341644287
    5. ' _' → logprob: -5.518510341644287
    6. ' ' → logprob: -10.768509864807129
    7. '  ' → logprob: -11.143509864807129
    8. ' j' → logprob: -11.518509864807129
    9. '	i' → logprob: -11.643509864807129
    10. '    ' → logprob: -11.893509864807129

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007487123366445303
    2. 'in' → logprob: -5.0074872970581055
    3. ' ' → logprob: -7.6324872970581055
    4. '_' → logprob: -9.382487297058105
    5. '(' → logprob: -10.132487297058105
    6. '    ' → logprob: -10.257487297058105
    7. 'n' → logprob: -10.507487297058105
    8. '(n' → logprob: -11.132487297058105
    9. '   ' → logprob: -11.257487297058105
    10. ',' → logprob: -11.382487297058105

Token 143: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008749072439968586
    2. 'range' → logprob: -4.758749008178711
    3. ' ' → logprob: -9.633749008178711
    4. '  ' → logprob: -10.383749008178711
    5. '	range' → logprob: -11.258749008178711
    6. '   ' → logprob: -11.508749008178711
    7. '(range' → logprob: -11.883749008178711
    8. '    ' → logprob: -13.008749008178711
    9. ' reversed' → logprob: -13.821249008178711
    10. ' ' → logprob: -13.946249008178711

Token 144: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44862547516822815
    2. '(m' → logprob: -1.4486254453659058
    3. '(n' → logprob: -2.0736255645751953
    4. '(i' → logprob: -7.448625564575195
    5. '(a' → logprob: -9.573625564575195
    6. '(l' → logprob: -9.823625564575195
    7. '((' → logprob: -10.198625564575195
    8. ' (' → logprob: -10.198625564575195
    9. '(k' → logprob: -10.198625564575195
    10. '(r' → logprob: -10.948625564575195

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6453002095222473
    2. ' +' → logprob: -0.7703002095222473
    3. '):' → logprob: -5.270300388336182
    4. ' -' → logprob: -6.020300388336182
    5. '-' → logprob: -6.145300388336182
    6. '   ' → logprob: -6.520300388336182
    7. '):
' → logprob: -7.395300388336182
    8. ' ):' → logprob: -8.520299911499023
    9. ',' → logprob: -8.895299911499023
    10. '    ' → logprob: -9.395299911499023

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005381622351706028
    2. ' ' → logprob: -5.7553815841674805
    3. '2' → logprob: -6.1303815841674805
    4. '   ' → logprob: -11.88038158416748
    5. '3' → logprob: -12.31788158416748
    6. 'm' → logprob: -13.31788158416748
    7. '0' → logprob: -13.38038158416748
    8. '  ' → logprob: -13.63038158416748
    9. 'n' → logprob: -13.69288158416748
    10. '4' → logprob: -14.06788158416748

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008355825208127499
    2. '2' → logprob: -4.883355617523193
    3. ' ' → logprob: -7.258355617523193
    4. '3' → logprob: -11.383356094360352
    5. '0' → logprob: -11.695856094360352
    6. '   ' → logprob: -12.320856094360352
    7. '4' → logprob: -12.883356094360352
    8. 'm' → logprob: -12.945856094360352
    9. '  ' → logprob: -13.195856094360352
    10. '5' → logprob: -13.195856094360352

Token 148: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4052068293094635
    2. ',' → logprob: -1.2802067995071411
    3. ' ,' → logprob: -3.2802069187164307
    4. ' ):' → logprob: -5.030206680297852
    5. ',n' → logprob: -5.280206680297852
    6. '):
' → logprob: -5.655206680297852
    7. '   ' → logprob: -6.405206680297852
    8. ')' → logprob: -8.155206680297852
    9. ':' → logprob: -8.280206680297852
    10. '    ' → logprob: -9.905206680297852

Token 149: ' min' (ID: 1349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0889875665307045
    2. ' n' → logprob: -2.4639875888824463
    3. ' ' → logprob: -10.963987350463867
    4. 'min' → logprob: -11.713987350463867
    5. '   ' → logprob: -11.838987350463867
    6. '	n' → logprob: -12.713987350463867
    7. '0' → logprob: -13.463987350463867
    8. ' min' → logprob: -13.463987350463867
    9. 'm' → logprob: -13.463987350463867
    10. '(n' → logprob: -13.588987350463867

Token 150: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022240064572542906
    2. '(' → logprob: -6.127223968505859
    3. '(m' → logprob: -10.25222396850586
    4. '((' → logprob: -13.12722396850586
    5. '(r' → logprob: -14.12722396850586
    6. '(
' → logprob: -15.12722396850586
    7. ' (' → logprob: -15.50222396850586
    8. '(i' → logprob: -15.62722396850586
    9. '(a' → logprob: -16.25222396850586
    10. '(s' → logprob: -16.37722396850586

Token 151: '3' (ID: 18)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013613052433356643
    2. '(' → logprob: -6.62636137008667
    3. '(m' → logprob: -10.626360893249512
    4. 'n' → logprob: -12.751360893249512
    5. '(r' → logprob: -12.876360893249512
    6. '((' → logprob: -12.876360893249512
    7. '(
' → logprob: -13.251360893249512
    8. ' (' → logprob: -14.251360893249512
    9. '(s' → logprob: -16.126361846923828
    10. '(a' → logprob: -16.251361846923828

Token 152: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8143562078475952
    2. '(n' → logprob: -0.9393562078475952
    3. '(m' → logprob: -2.6893563270568848
    4. 'm' → logprob: -3.0643563270568848
    5. ' *' → logprob: -3.5643563270568848
    6. 'n' → logprob: -4.814356327056885
    7. '*m' → logprob: -5.314356327056885
    8. '(' → logprob: -5.939356327056885
    9. ',m' → logprob: -6.439356327056885
    10. '*n' → logprob: -6.439356327056885

Token 153: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.053395241498947144
    2. 'n' → logprob: -3.6783952713012695
    3. ' m' → logprob: -3.6783952713012695
    4. ' n' → logprob: -6.6783952713012695
    5. '(n' → logprob: -9.17839527130127
    6. '(m' → logprob: -9.80339527130127
    7. ',' → logprob: -11.30339527130127
    8. '*m' → logprob: -11.55339527130127
    9. '(' → logprob: -11.80339527130127
    10. ' ' → logprob: -12.17839527130127

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12359891086816788
    2. ' +' → logprob: -2.62359881401062
    3. '+' → logprob: -4.373599052429199
    4. 'n' → logprob: -4.623599052429199
    5. ' ,' → logprob: -4.623599052429199
    6. ',n' → logprob: -5.123599052429199
    7. ' n' → logprob: -5.498599052429199
    8. '(n' → logprob: -7.498599052429199
    9. '   ' → logprob: -7.998599052429199
    10. ' ' → logprob: -9.1235990524292

Token 155: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5232167840003967
    2. ' n' → logprob: -0.8982167840003967
    3. ' ' → logprob: -11.02321720123291
    4. ',' → logprob: -11.02321720123291
    5. '2' → logprob: -11.27321720123291
    6. '(n' → logprob: -11.27321720123291
    7. '3' → logprob: -11.52321720123291
    8. ',n' → logprob: -12.39821720123291
    9. '    ' → logprob: -13.27321720123291
    10. '   ' → logprob: -13.27321720123291

Token 156: ')' (ID: 8)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.43451014161109924
    2. ')' → logprob: -1.4345101118087769
    3. '+' → logprob: -3.5595102310180664
    4. ')+' → logprob: -3.8095102310180664
    5. '):' → logprob: -4.059510231018066
    6. '-' → logprob: -4.059510231018066
    7. ' -' → logprob: -4.559510231018066
    8. ' +' → logprob: -5.059510231018066
    9. ')):
' → logprob: -5.184510231018066
    10. '))' → logprob: -5.309510231018066

Token 157: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6135340332984924
    2. ' +' → logprob: -0.8635340332984924
    3. '):' → logprob: -3.6135339736938477
    4. '):
' → logprob: -4.738533973693848
    5. '   ' → logprob: -7.238533973693848
    6. '    ' → logprob: -9.113533973693848
    7. ' ' → logprob: -9.738533973693848
    8. ',' → logprob: -9.863533973693848
    9. ')' → logprob: -9.863533973693848
    10. ' ):' → logprob: -9.988533973693848

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004090508911758661
    2. ' ' → logprob: -5.504090309143066
    3. '(' → logprob: -12.629090309143066
    4. '   ' → logprob: -12.879090309143066
    5. '  ' → logprob: -13.129090309143066
    6. '0' → logprob: -13.379090309143066
    7. '2' → logprob: -13.879090309143066
    8. ' (' → logprob: -14.629090309143066
    9. '    ' → logprob: -15.754090309143066
    10. '3' → logprob: -16.254091262817383

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017072015907615423
    2. ' ' → logprob: -6.376707077026367
    3. '  ' → logprob: -13.501707077026367
    4. '   ' → logprob: -14.001707077026367
    5. '2' → logprob: -14.251707077026367
    6. '0' → logprob: -14.501707077026367
    7. ')' → logprob: -14.626707077026367
    8. '```' → logprob: -14.876707077026367
    9. '(' → logprob: -15.751707077026367
    10. ' )' → logprob: -16.251707077026367

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014066305942833424
    2. '):
' → logprob: -4.389066219329834
    3. ':' → logprob: -6.764066219329834
    4. ')' → logprob: -8.639066696166992
    5. ' ):' → logprob: -8.639066696166992
    6. '():' → logprob: -10.889066696166992
    7. '   ' → logprob: -11.389066696166992
    8. ',' → logprob: -12.389066696166992
    9. '):
' → logprob: -12.514066696166992
    10. ' ):
' → logprob: -13.014066696166992

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012907958589494228
    2. '   ' → logprob: -4.887907981872559
    3. '
' → logprob: -5.762907981872559
    4. '<|end|>' → logprob: -6.887907981872559
    5. 'a' → logprob: -7.887907981872559
    6. ' a' → logprob: -8.637907981872559
    7. ' ' → logprob: -8.887907981872559
    8. '	' → logprob: -9.637907981872559
    9. '	   ' → logprob: -9.887907981872559
    10. '<|end|>' → logprob: -10.512907981872559

Token 162: ' if' (ID: 538)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.15079045295715332
    2. '   ' → logprob: -2.5257904529571533
    3. 'a' → logprob: -2.9007904529571533
    4. '       ' → logprob: -6.775790214538574
    5. '    ' → logprob: -7.150790214538574
    6. ' if' → logprob: -7.150790214538574
    7. ' ' → logprob: -7.525790214538574
    8. ' b' → logprob: -8.025790214538574
    9. ' i' → logprob: -8.150790214538574
    10. ' n' → logprob: -9.025790214538574

Token 163: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1332590579986572
    2. 'i' → logprob: -1.2582590579986572
    3. ' (' → logprob: -2.2582590579986572
    4. ' n' → logprob: -2.8832590579986572
    5. '(i' → logprob: -3.0082590579986572
    6. 'a' → logprob: -3.1332590579986572
    7. 'n' → logprob: -3.3832590579986572
    8. ' a' → logprob: -3.5082590579986572
    9. '(' → logprob: -3.6332590579986572
    10. '(n' → logprob: -4.383258819580078

Token 164: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3715763986110687
    2. '(i' → logprob: -2.1215763092041016
    3. 'n' → logprob: -2.8715763092041016
    4. ' i' → logprob: -3.3715763092041016
    5. '(n' → logprob: -3.3715763092041016
    6. 'a' → logprob: -3.6215763092041016
    7. ' (' → logprob: -4.746576309204102
    8. '3' → logprob: -5.121576309204102
    9. '(a' → logprob: -5.121576309204102
    10. ' n' → logprob: -5.371576309204102

Token 165: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7101826071739197
    2. ' *' → logprob: -1.0851826667785645
    3. '*i' → logprob: -1.8351826667785645
    4. '*m' → logprob: -4.5851826667785645
    5. ' -' → logprob: -8.085182189941406
    6. '-' → logprob: -8.960182189941406
    7. 'i' → logprob: -9.085182189941406
    8. '*(' → logprob: -9.960182189941406
    9. ' i' → logprob: -9.960182189941406
    10. '*n' → logprob: -10.210182189941406

Token 166: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11571457237005234
    2. 'i' → logprob: -2.7407145500183105
    3. '*m' → logprob: -3.4907145500183105
    4. '*i' → logprob: -4.7407145500183105
    5. '*' → logprob: -5.3657145500183105
    6. ' m' → logprob: -7.4907145500183105
    7. ' *' → logprob: -8.740715026855469
    8. ' i' → logprob: -9.115715026855469
    9. '   ' → logprob: -11.615715026855469
    10. ')' → logprob: -12.490715026855469

Token 167: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.700937807559967
    2. ' -' → logprob: -0.825937807559967
    3. '>=' → logprob: -3.9509377479553223
    4. '+' → logprob: -4.200937747955322
    5. ')' → logprob: -4.950937747955322
    6. ' >=' → logprob: -5.075937747955322
    7. '   ' → logprob: -5.075937747955322
    8. '>' → logprob: -5.200937747955322
    9. ' +' → logprob: -6.325937747955322
    10. '-i' → logprob: -6.825937747955322

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03397276997566223
    2. ' i' → logprob: -3.40897274017334
    3. '   ' → logprob: -8.78397274017334
    4. ' ' → logprob: -9.65897274017334
    5. ')' → logprob: -10.78397274017334
    6. '2' → logprob: -11.15897274017334
    7. '    ' → logprob: -11.28397274017334
    8. 'n' → logprob: -11.78397274017334
    9. '+' → logprob: -11.90897274017334
    10. '3' → logprob: -12.03397274017334

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031744346022605896
    2. '+' → logprob: -4.656744480133057
    3. ' )' → logprob: -5.656744480133057
    4. ')%' → logprob: -5.656744480133057
    5. '>=' → logprob: -5.781744480133057
    6. ' +' → logprob: -5.906744480133057
    7. '-' → logprob: -6.406744480133057
    8. ' -' → logprob: -6.531744480133057
    9. ' >=' → logprob: -6.656744480133057
    10. '>' → logprob: -6.906744480133057

Token 170: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1427026391029358
    2. ' %' → logprob: -2.142702579498291
    3. '>' → logprob: -5.267702579498291
    4. '>=' → logprob: -5.892702579498291
    5. '==' → logprob: -6.392702579498291
    6. ' >=' → logprob: -6.642702579498291
    7. ' ' → logprob: -7.392702579498291
    8. ' ==' → logprob: -7.517702579498291
    9. '<' → logprob: -7.517702579498291
    10. ' >' → logprob: -7.642702579498291

Token 171: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.35328423976898193
    2. '2' → logprob: -1.228284239768982
    3. ' ' → logprob: -5.4782843589782715
    4. '6' → logprob: -8.478283882141113
    5. '1' → logprob: -8.728283882141113
    6. '4' → logprob: -8.853283882141113
    7. '9' → logprob: -9.728283882141113
    8. '7' → logprob: -10.978283882141113
    9. '   ' → logprob: -11.353283882141113
    10. '  ' → logprob: -11.353283882141113

Token 172: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.576445996761322
    2. '2' → logprob: -0.826445996761322
    3. '1' → logprob: -8.451445579528809
    4. ' ' → logprob: -8.826445579528809
    5. '4' → logprob: -10.076445579528809
    6. '9' → logprob: -10.326445579528809
    7. '6' → logprob: -11.076445579528809
    8. '   ' → logprob: -11.201445579528809
    9. '7' → logprob: -11.763945579528809
    10. '
' → logprob: -12.576445579528809

Token 173: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08990374207496643
    2. ' ==' → logprob: -2.4649038314819336
    3. '=' → logprob: -8.214903831481934
    4. '!=' → logprob: -8.589903831481934
    5. ' and' → logprob: -9.089903831481934
    6. ' ' → logprob: -9.089903831481934
    7. '0' → logprob: -9.339903831481934
    8. 'and' → logprob: -10.214903831481934
    9. ' !=' → logprob: -10.339903831481934
    10. ')' → logprob: -10.339903831481934

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5503230690956116
    2. '       ' → logprob: -1.6753230094909668
    3. ':' → logprob: -2.050323009490967
    4. '   ' → logprob: -3.050323009490967
    5. ' continue' → logprob: -3.800323009490967
    6. ' *' → logprob: -5.425323009490967
    7. ' ' → logprob: -5.800323009490967
    8. ':
' → logprob: -5.800323009490967
    9. ' ==' → logprob: -5.800323009490967
    10. ' a' → logprob: -5.925323009490967

Token 175: ' continue' (ID: 4901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6522269248962402
    2. '   ' → logprob: -1.2772269248962402
    3. ' a' → logprob: -2.5272269248962402
    4. '-' → logprob: -3.4022269248962402
    5. '       ' → logprob: -3.4022269248962402
    6. '           ' → logprob: -3.7772269248962402
    7. '+' → logprob: -4.90222692489624
    8. ' ' → logprob: -5.27722692489624
    9. '=' → logprob: -5.77722692489624
    10. 'o' → logprob: -6.02722692489624

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008471485925838351
    2. '   ' → logprob: -8.125846862792969
    3. '           ' → logprob: -8.750846862792969
    4. '<|end|>' → logprob: -9.375846862792969
    5. ')' → logprob: -9.875846862792969
    6. '
' → logprob: -9.875846862792969
    7. '#' → logprob: -10.125846862792969
    8. 'n' → logprob: -10.750846862792969
    9. '*' → logprob: -11.000846862792969
    10. ',' → logprob: -11.125846862792969

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027732516173273325
    2. '
' → logprob: -6.502773284912109
    3. 'a' → logprob: -7.502773284912109
    4. '   ' → logprob: -8.12777328491211
    5. 'n' → logprob: -8.62777328491211
    6. ')' → logprob: -9.62777328491211
    7. '<|end|>' → logprob: -10.37777328491211
    8. 's' → logprob: -11.12777328491211
    9. '           ' → logprob: -11.37777328491211
    10. 'b' → logprob: -11.37777328491211

Token 178: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7350406050682068
    2. '   ' → logprob: -0.9850406050682068
    3. '       ' → logprob: -2.4850406646728516
    4. ' a' → logprob: -2.8600406646728516
    5. 'n' → logprob: -5.985040664672852
    6. '           ' → logprob: -6.985040664672852
    7. ' n' → logprob: -7.485040664672852
    8. 'i' → logprob: -7.860040664672852
    9. ' ' → logprob: -8.360040664672852
    10. 't' → logprob: -8.485040664672852

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34874585270881653
    2. '=' → logprob: -1.2237458229064941
    3. ' +=' → logprob: -8.598746299743652
    4. ',' → logprob: -9.848746299743652
    5. '+=' → logprob: -10.348746299743652
    6. ' ' → logprob: -11.348746299743652
    7. '   ' → logprob: -13.223746299743652
    8. ')' → logprob: -13.223746299743652
    9. ' -=' → logprob: -13.223746299743652
    10. ' =(' → logprob: -13.348746299743652

Token 180: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8535745143890381
    2. '(c' → logprob: -1.478574514389038
    3. ' c' → logprob: -1.728574514389038
    4. ' (' → logprob: -2.728574514389038
    5. '(a' → logprob: -3.728574514389038
    6. '(n' → logprob: -3.853574514389038
    7. '(' → logprob: -3.978574514389038
    8. '(i' → logprob: -4.728574752807617
    9. 'n' → logprob: -4.853574752807617
    10. 'a' → logprob: -5.228574752807617

Token 181: '3' (ID: 18)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.061306182295084
    2. ' c' → logprob: -4.436305999755859
    3. 'n' → logprob: -4.561305999755859
    4. 'a' → logprob: -4.686305999755859
    5. '(c' → logprob: -4.936305999755859
    6. '-' → logprob: -5.311305999755859
    7. '3' → logprob: -5.436305999755859
    8. '(' → logprob: -6.436305999755859
    9. 'i' → logprob: -6.436305999755859
    10. '(n' → logprob: -6.561305999755859

Token 182: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6403390765190125
    2. '*m' → logprob: -0.7653390765190125
    3. '*' → logprob: -4.890338897705078
    4. 'm' → logprob: -8.640338897705078
    5. ' ' → logprob: -12.765338897705078
    6. '*n' → logprob: -13.015338897705078
    7. ' m' → logprob: -13.390338897705078
    8. '*i' → logprob: -13.515338897705078
    9. '   ' → logprob: -14.140338897705078
    10. '*(' → logprob: -14.390338897705078

Token 183: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0006974232383072376
    2. ' m' → logprob: -7.375697612762451
    3. '*m' → logprob: -9.625697135925293
    4. '
' → logprob: -13.750697135925293
    5. ' *' → logprob: -13.750697135925293
    6. '*' → logprob: -14.000697135925293
    7. '<|end|>' → logprob: -14.125697135925293
    8. '	m' → logprob: -14.875697135925293
    9. ' ' → logprob: -15.125697135925293
    10. '   ' → logprob: -15.750697135925293

Token 184: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5771917104721069
    2. '-' → logprob: -0.8271917104721069
    3. ' ' → logprob: -7.4521918296813965
    4. '-i' → logprob: -7.8271918296813965
    5. '+' → logprob: -8.952191352844238
    6. '   ' → logprob: -10.577191352844238
    7. ')' → logprob: -10.702191352844238
    8. '
' → logprob: -11.327191352844238
    9. ' +' → logprob: -11.577191352844238
    10. ',' → logprob: -11.702191352844238

Token 185: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00035810720873996615
    2. ' i' → logprob: -8.125358581542969
    3. '   ' → logprob: -11.375358581542969
    4. '2' → logprob: -11.500358581542969
    5. 'x' → logprob: -11.500358581542969
    6. '3' → logprob: -12.125358581542969
    7. '<|end|>' → logprob: -12.750358581542969
    8. ')' → logprob: -12.875358581542969
    9. ' ' → logprob: -13.125358581542969
    10. '	i' → logprob: -13.375358581542969

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41733941435813904
    2. '-' → logprob: -1.7923394441604614
    3. ' -' → logprob: -2.417339324951172
    4. '+' → logprob: -3.167339324951172
    5. ' +' → logprob: -4.417339324951172
    6. '   ' → logprob: -5.042339324951172
    7. ' )' → logprob: -5.167339324951172
    8. ')*' → logprob: -5.292339324951172
    9. ' ' → logprob: -5.917339324951172
    10. 'c' → logprob: -6.042339324951172

Token 187: ' //' (ID: 602)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0759615898132324
    2. ' *' → logprob: -1.0759615898132324
    3. '-' → logprob: -1.4509615898132324
    4. '*c' → logprob: -3.7009615898132324
    5. ' -' → logprob: -4.325961589813232
    6. '   ' → logprob: -4.575961589813232
    7. 'c' → logprob: -4.950961589813232
    8. '+' → logprob: -5.075961589813232
    9. '
' → logprob: -5.325961589813232
    10. '=' → logprob: -6.450961589813232

Token 188: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004107732092961669
    2. ' ' → logprob: -8.125411033630371
    3. '3' → logprob: -9.125411033630371
    4. '6' → logprob: -12.875411033630371
    5. '1' → logprob: -13.750411033630371
    6. '   ' → logprob: -14.125411033630371
    7. '
' → logprob: -14.500411033630371
    8. '  ' → logprob: -14.750411033630371
    9. '
' → logprob: -15.375411033630371
    10. '

' → logprob: -16.562910079956055

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001431114797014743
    2. ' ' → logprob: -9.000143051147461
    3. '3' → logprob: -11.250143051147461
    4. '1' → logprob: -12.125143051147461
    5. '   ' → logprob: -15.000143051147461
    6. '  ' → logprob: -15.250143051147461
    7. '
' → logprob: -15.375143051147461
    8. '

' → logprob: -16.06264305114746
    9. '
' → logprob: -16.25014305114746
    10. '```' → logprob: -16.62514305114746

Token 190: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005031540524214506
    2. '
' → logprob: -6.255031585693359
    3. '<|end|>' → logprob: -6.880031585693359
    4. 'n' → logprob: -7.505031585693359
    5. 'x' → logprob: -8.25503158569336
    6. 'a' → logprob: -8.25503158569336
    7. '	' → logprob: -8.63003158569336
    8. '        
' → logprob: -9.25503158569336
    9. 's' → logprob: -9.50503158569336
    10. 'b' → logprob: -9.75503158569336

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060662562027573586
    2. 'a' → logprob: -5.50606632232666
    3. '   ' → logprob: -6.75606632232666
    4. 'n' → logprob: -8.63106632232666
    5. 'x' → logprob: -8.88106632232666
    6. 's' → logprob: -9.38106632232666
    7. 'y' → logprob: -9.38106632232666
    8. 'u' → logprob: -9.50606632232666
    9. '<|end|>' → logprob: -9.63106632232666
    10. '
' → logprob: -10.13106632232666

Token 192: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01698658987879753
    2. ' a' → logprob: -4.39198637008667
    3. '   ' → logprob: -5.89198637008667
    4. 'y' → logprob: -7.51698637008667
    5. 'print' → logprob: -8.766986846923828
    6. 'b' → logprob: -8.891986846923828
    7. 'if' → logprob: -9.016986846923828
    8. 't' → logprob: -9.141986846923828
    9. 's' → logprob: -9.391986846923828
    10. ' y' → logprob: -9.516986846923828

Token 193: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1661118119955063
    2. '=' → logprob: -2.916111707687378
    3. ' +=' → logprob: -2.916111707687378
    4. '-=' → logprob: -3.291111707687378
    5. ' -=' → logprob: -5.416111946105957
    6. ' =' → logprob: -6.291111946105957
    7. '-' → logprob: -7.041111946105957
    8. '+' → logprob: -8.541111946105957
    9. '+=(' → logprob: -9.041111946105957
    10. '*=' → logprob: -10.666111946105957

Token 194: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11460211127996445
    2. ' (' → logprob: -2.2396020889282227
    3. '(' → logprob: -6.489602088928223
    4. ' ' → logprob: -9.614602088928223
    5. '   ' → logprob: -10.114602088928223
    6. '(A' → logprob: -10.364602088928223
    7. '(c' → logprob: -10.739602088928223
    8. '(f' → logprob: -11.239602088928223
    9. '(
' → logprob: -11.239602088928223
    10. '(ans' → logprob: -11.239602088928223

Token 195: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10357947647571564
    2. '(a' → logprob: -2.353579521179199
    3. ' a' → logprob: -5.728579521179199
    4. ' (' → logprob: -9.3535795211792
    5. '   ' → logprob: -11.9785795211792
    6. '(' → logprob: -12.1035795211792
    7. '[a' → logprob: -12.6035795211792
    8. '	a' → logprob: -12.8535795211792
    9. '(
' → logprob: -13.2285795211792
    10. '
' → logprob: -13.3535795211792

Token 196: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9256536364555359
    2. ' +' → logprob: -1.0506536960601807
    3. ' -' → logprob: -1.5506536960601807
    4. '-' → logprob: -3.1756536960601807
    5. '*' → logprob: -9.675653457641602
    6. ' *' → logprob: -10.050653457641602
    7. ' ' → logprob: -11.425653457641602
    8. '+c' → logprob: -11.675653457641602
    9. '   ' → logprob: -12.300653457641602
    10. ' ' → logprob: -13.113153457641602

Token 197: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8745148777961731
    2. ' n' → logprob: -1.3745148181915283
    3. 'c' → logprob: -1.7495148181915283
    4. 'n' → logprob: -2.3745148181915283
    5. ' (' → logprob: -4.249515056610107
    6. ' ' → logprob: -4.374515056610107
    7. '(n' → logprob: -4.624515056610107
    8. '(c' → logprob: -4.999515056610107
    9. '2' → logprob: -5.249515056610107
    10. '3' → logprob: -5.499515056610107

Token 198: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0032816906459629536
    2. '(' → logprob: -6.128281593322754
    3. '(i' → logprob: -6.878281593322754
    4. '(x' → logprob: -10.128281593322754
    5. '(m' → logprob: -11.878281593322754
    6. '(a' → logprob: -11.878281593322754
    7. '((' → logprob: -12.628281593322754
    8. 'n' → logprob: -12.753281593322754
    9. '(r' → logprob: -13.253281593322754
    10. '(
' → logprob: -13.253281593322754

Token 199: ',' (ID: 11)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.7778691649436951
    2. '(i' → logprob: -1.2778692245483398
    3. ' +' → logprob: -2.40286922454834
    4. '+' → logprob: -2.77786922454834
    5. '(' → logprob: -2.90286922454834
    6. '(n' → logprob: -4.27786922454834
    7. '+x' → logprob: -4.27786922454834
    8. '+m' → logprob: -4.27786922454834
    9. '(x' → logprob: -5.02786922454834
    10. '+n' → logprob: -7.02786922454834

Token 200: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02946232073009014
    2. 'x' → logprob: -4.0294623374938965
    3. ' i' → logprob: -5.0294623374938965
    4. 'n' → logprob: -5.7794623374938965
    5. '3' → logprob: -7.0294623374938965
    6. 'm' → logprob: -8.279461860656738
    7. ' x' → logprob: -8.904461860656738
    8. ' ' → logprob: -8.904461860656738
    9. ' n' → logprob: -9.404461860656738
    10. '   ' → logprob: -9.529461860656738

Token 201: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012289194855839014
    2. '   ' → logprob: -7.6262288093566895
    3. '-' → logprob: -7.7512288093566895
    4. ' -' → logprob: -9.126229286193848
    5. ')*' → logprob: -9.251229286193848
    6. ' )' → logprob: -10.251229286193848
    7. '  ' → logprob: -10.376229286193848
    8. ' ' → logprob: -11.501229286193848
    9. '))' → logprob: -12.626229286193848
    10. '```' → logprob: -12.876229286193848

Token 202: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1873629242181778
    2. ' *' → logprob: -1.8123629093170166
    3. '*c' → logprob: -5.687363147735596
    4. ')' → logprob: -5.937363147735596
    5. '*f' → logprob: -7.812363147735596
    6. '  ' → logprob: -8.187362670898438
    7. '   ' → logprob: -8.312362670898438
    8. '    ' → logprob: -9.312362670898438
    9. '*a' → logprob: -9.562362670898438
    10. ')*' → logprob: -9.687362670898438

Token 203: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15770617127418518
    2. ' c' → logprob: -2.0327062606811523
    3. '(c' → logprob: -5.407706260681152
    4. 'pow' → logprob: -6.157706260681152
    5. 'f' → logprob: -6.282706260681152
    6. '(' → logprob: -6.657706260681152
    7. ' (' → logprob: -6.657706260681152
    8. ' ' → logprob: -7.532706260681152
    9. 'a' → logprob: -7.532706260681152
    10. '3' → logprob: -7.782706260681152

Token 204: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.672886312007904
    2. '(i' → logprob: -1.1728863716125488
    3. '(' → logprob: -2.047886371612549
    4. '(m' → logprob: -3.047886371612549
    5. '(x' → logprob: -6.297886371612549
    6. '(a' → logprob: -6.922886371612549
    7. '(r' → logprob: -7.297886371612549
    8. '3' → logprob: -8.92288589477539
    9. '((' → logprob: -9.42288589477539
    10. '(s' → logprob: -11.42288589477539

Token 205: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5042389631271362
    2. ' +' → logprob: -1.2542389631271362
    3. '+n' → logprob: -3.004239082336426
    4. '+x' → logprob: -3.754239082336426
    5. '+m' → logprob: -4.254239082336426
    6. '(n' → logprob: -4.754239082336426
    7. '+i' → logprob: -5.129239082336426
    8. '(' → logprob: -5.629239082336426
    9. '(x' → logprob: -6.629239082336426
    10. 'n' → logprob: -6.754239082336426

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35479646921157837
    2. 'i' → logprob: -1.2297964096069336
    3. ' n' → logprob: -5.979796409606934
    4. 'x' → logprob: -6.479796409606934
    5. ' i' → logprob: -6.979796409606934
    6. ' ' → logprob: -7.229796409606934
    7. '3' → logprob: -8.604796409606934
    8. '2' → logprob: -8.729796409606934
    9. '
' → logprob: -8.979796409606934
    10. '   ' → logprob: -10.604796409606934

Token 207: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5237013101577759
    2. ' -' → logprob: -0.8987013101577759
    3. ' ' → logprob: -7.898701190948486
    4. ',' → logprob: -9.148701667785645
    5. '  ' → logprob: -10.523701667785645
    6. '   ' → logprob: -11.273701667785645
    7. 'x' → logprob: -11.398701667785645
    8. 'i' → logprob: -11.523701667785645
    9. '+' → logprob: -11.648701667785645
    10. '1' → logprob: -12.398701667785645

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004276650492101908
    2. '2' → logprob: -5.504276752471924
    3. ' ' → logprob: -9.754276275634766
    4. '-' → logprob: -10.004276275634766
    5. 'i' → logprob: -10.379276275634766
    6. ' -' → logprob: -11.004276275634766
    7. 'x' → logprob: -11.254276275634766
    8. '3' → logprob: -11.629276275634766
    9. '   ' → logprob: -12.004276275634766
    10. 'n' → logprob: -12.004276275634766

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016867628321051598
    2. '2' → logprob: -4.516867637634277
    3. '-' → logprob: -5.766867637634277
    4. 'n' → logprob: -6.266867637634277
    5. 'x' → logprob: -8.391867637634277
    6. 'i' → logprob: -8.391867637634277
    7. ' -' → logprob: -8.891867637634277
    8. 'k' → logprob: -9.516867637634277
    9. ' ' → logprob: -9.766867637634277
    10. '3' → logprob: -11.016867637634277

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016332881525158882
    2. ',n' → logprob: -4.391333103179932
    3. 'n' → logprob: -6.516333103179932
    4. ' ,' → logprob: -7.016333103179932
    5. 'x' → logprob: -7.516333103179932
    6. ',x' → logprob: -7.641333103179932
    7. '-' → logprob: -9.016332626342773
    8. ',
' → logprob: -9.516332626342773
    9. ')' → logprob: -10.016332626342773
    10. '(n' → logprob: -10.016332626342773

Token 211: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015319328755140305
    2. 'x' → logprob: -4.390319347381592
    3. ' n' → logprob: -5.890319347381592
    4. ' x' → logprob: -10.890318870544434
    5. '	n' → logprob: -11.890318870544434
    6. 'i' → logprob: -12.265318870544434
    7. ' ' → logprob: -13.140318870544434
    8. '   ' → logprob: -13.265318870544434
    9. 'xn' → logprob: -13.515318870544434
    10. ')' → logprob: -14.015318870544434

Token 212: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03813375160098076
    2. ' -' → logprob: -3.2881338596343994
    3. ')' → logprob: -9.41313362121582
    4. ' ' → logprob: -12.66313362121582
    5. '<|end|>' → logprob: -13.03813362121582
    6. '   ' → logprob: -13.41313362121582
    7. '  ' → logprob: -13.78813362121582
    8. ')-' → logprob: -14.03813362121582
    9. '−' → logprob: -14.66313362121582
    10. '-)' → logprob: -15.03813362121582

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -14.250014305114746
    4. '   ' → logprob: -15.625014305114746
    5. '  ' → logprob: -16.50001335144043
    6. ')' → logprob: -16.68751335144043
    7. '<|end|>' → logprob: -17.31251335144043
    8. '۱' → logprob: -18.06251335144043
    9. '11' → logprob: -18.12501335144043
    10. '```' → logprob: -18.18751335144043

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.750004768371582
    3. '-' → logprob: -14.125004768371582
    4. '2' → logprob: -15.000004768371582
    5. ')' → logprob: -15.500004768371582
    6. '   ' → logprob: -16.125003814697266
    7. '  ' → logprob: -17.250003814697266
    8. '```' → logprob: -17.875003814697266
    9. ' -' → logprob: -18.062503814697266
    10. '۱' → logprob: -18.875003814697266

Token 215: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047416388406418264
    2. ')%' → logprob: -8.625473976135254
    3. ' )' → logprob: -9.000473976135254
    4. '))' → logprob: -9.625473976135254
    5. '   ' → logprob: -10.000473976135254
    6. '%' → logprob: -10.250473976135254
    7. '    ' → logprob: -12.125473976135254
    8. 'a' → logprob: -12.625473976135254
    9. '')' → logprob: -13.000473976135254
    10. '       ' → logprob: -13.000473976135254

Token 216: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.43080735206604004
    2. '%' → logprob: -1.05580735206604
    3. ')' → logprob: -6.555807113647461
    4. ')%' → logprob: -8.555807113647461
    5. '   ' → logprob: -8.930807113647461
    6. ' %=' → logprob: -9.805807113647461
    7. 'a' → logprob: -9.805807113647461
    8. '%b' → logprob: -9.930807113647461
    9. '()%' → logprob: -10.055807113647461
    10. ' ' → logprob: -10.430807113647461

Token 217: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -6.456358823925257e-05
    2. ' o' → logprob: -10.000064849853516
    3. '(o' → logprob: -10.875064849853516
    4. '	o' → logprob: -16.625064849853516
    5. '{o' → logprob: -16.750064849853516
    6. '
' → logprob: -18.375064849853516
    7. ')o' → logprob: -18.500064849853516
    8. '[o' → logprob: -18.625064849853516
    9. ''o' → logprob: -18.625064849853516
    10. ',o' → logprob: -19.000064849853516

Token 218: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.132297158241272
    2. 'print' → logprob: -1.132297158241272
    3. '   ' → logprob: -1.382297158241272
    4. 'a' → logprob: -3.1322970390319824
    5. '<|end|>' → logprob: -3.2572970390319824
    6. '       ' → logprob: -4.632297039031982
    7. '
' → logprob: -6.257297039031982
    8. ']' → logprob: -6.507297039031982
    9. '...' → logprob: -7.007297039031982
    10. '#' → logprob: -7.007297039031982

Token 219: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6848422288894653
    2. 'print' → logprob: -1.0598422288894653
    3. '   ' → logprob: -2.684842109680176
    4. 'a' → logprob: -3.434842109680176
    5. ':' → logprob: -4.059842109680176
    6. '+' → logprob: -4.934842109680176
    7. '(' → logprob: -5.059842109680176
    8. 'else' → logprob: -5.809842109680176
    9. '<|end|>' → logprob: -6.059842109680176
    10. '#' → logprob: -6.309842109680176

Token 220: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.026624558493494987
    2. '(' → logprob: -3.6516244411468506
    3. 'a' → logprob: -8.15162467956543
    4. '('' → logprob: -10.52662467956543
    5. '()' → logprob: -12.65162467956543
    6. '("' → logprob: -13.27662467956543
    7. '((' → logprob: -13.40162467956543
    8. '(
' → logprob: -14.77662467956543
    9. '("("' → logprob: -14.77662467956543
    10. '(x' → logprob: -15.15162467956543

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -13.375003814697266
    3. '`)' → logprob: -14.500003814697266
    4. ' )' → logprob: -14.875003814697266
    5. '```' → logprob: -14.875003814697266
    6. '')' → logprob: -15.375003814697266
    7. ')`' → logprob: -15.500003814697266
    8. '(' → logprob: -16.500003814697266
    9. '()' → logprob: -16.500003814697266
    10. '#' → logprob: -16.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 219
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 188
Précision stricte (1ère position): 31.51%
Précision adaptée (1ère position): 32.88%
Précision (top 10): 85.84%
================================================================================
