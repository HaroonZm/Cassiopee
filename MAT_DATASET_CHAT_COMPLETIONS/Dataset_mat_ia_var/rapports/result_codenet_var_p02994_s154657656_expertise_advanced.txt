================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import itemgetter

N, L = map(int, input().split())
apples = [L + i for i in range(N)]
excluded = min(apples, key=abs)
print(sum(apples) - excluded)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.599859893321991
    2. ' import' → logprob: -1.2248599529266357
    3. 'item' → logprob: -2.2248599529266357
    4. ' add' → logprob: -3.3498599529266357
    5. 'import' → logprob: -5.224859714508057
    6. 'add' → logprob: -5.474859714508057
    7. ' attr' → logprob: -6.599859714508057
    8. ' ' → logprob: -7.099859714508057
    9. 'attr' → logprob: -7.349859714508057
    10. ' method' → logprob: -7.599859714508057

Token 4: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0011766550596803427
    2. 'get' → logprob: -6.751176834106445
    3. 'getitem' → logprob: -12.876176834106445
    4. 'g' → logprob: -13.251176834106445
    5. 'ge' → logprob: -13.626176834106445
    6. 'gett' → logprob: -14.751176834106445
    7. 'gte' → logprob: -15.751176834106445
    8. 'setter' → logprob: -16.251176834106445
    9. 'geta' → logprob: -17.001176834106445
    10. 'getto' → logprob: -17.001176834106445

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05686376988887787
    2. '.' → logprob: -2.931863784790039
    3. ',' → logprob: -6.806863784790039
    4. ' (' → logprob: -8.181863784790039
    5. '\(' → logprob: -8.431863784790039
    6. '[' → logprob: -9.181863784790039
    7. '```' → logprob: -10.056863784790039
    8. 'newline' → logprob: -10.056863784790039
    9. '(
' → logprob: -10.306863784790039
    10. ''' → logprob: -10.681863784790039

Token 6: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09609013795852661
    2. '.' → logprob: -3.221090078353882
    3. ',' → logprob: -3.721090078353882
    4. '[' → logprob: -3.971090078353882
    5. '(
' → logprob: -5.721090316772461
    6. 'import' → logprob: -6.721090316772461
    7. ':' → logprob: -7.221090316772461
    8. 'a' → logprob: -7.596090316772461
    9. ' (' → logprob: -7.971090316772461
    10. '[
' → logprob: -8.096090316772461

Token 7: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3209528625011444
    2. '=' → logprob: -2.195952892303467
    3. 'ext' → logprob: -2.445952892303467
    4. 'ame' → logprob: -3.445952892303467
    5. 'e' → logprob: -4.195952892303467
    6. 'o' → logprob: -5.195952892303467
    7. '_' → logprob: -5.445952892303467
    8. 'um' → logprob: -5.445952892303467
    9. 'u' → logprob: -5.820952892303467
    10. ' =' → logprob: -5.945952892303467

Token 8: ' L' (ID: 451)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8015697002410889
    2. 'K' → logprob: -1.0515697002410889
    3. ' K' → logprob: -2.301569700241089
    4. ' M' → logprob: -2.426569700241089
    5. 'data' → logprob: -5.801569938659668
    6. ' =' → logprob: -6.426569938659668
    7. 'k' → logprob: -6.426569938659668
    8. 'items' → logprob: -6.551569938659668
    9. '_' → logprob: -6.801569938659668
    10. 'Q' → logprob: -7.551569938659668

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47422659397125244
    2. ' =' → logprob: -0.9742265939712524
    3. ',' → logprob: -8.849226951599121
    4. ' ' → logprob: -13.349226951599121
    5. '=input' → logprob: -13.599226951599121
    6. ' =
' → logprob: -14.349226951599121
    7. '=int' → logprob: -14.349226951599121
    8. '=

' → logprob: -14.474226951599121
    9. ')' → logprob: -14.849226951599121
    10. '=
' → logprob: -14.974226951599121

Token 10: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.21101900935173035
    2. ' ' → logprob: -2.5860190391540527
    3. 'map' → logprob: -2.5860190391540527
    4. ' int' → logprob: -3.5860190391540527
    5. 'int' → logprob: -4.961019039154053
    6. '10' → logprob: -6.211019039154053
    7. '5' → logprob: -6.961019039154053
    8. ' list' → logprob: -7.461019039154053
    9. '20' → logprob: -8.086018562316895
    10. ' input' → logprob: -8.336018562316895

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01460967306047678
    2. '(' → logprob: -4.2646098136901855
    3. '(str' → logprob: -8.264609336853027
    4. 'int' → logprob: -9.014609336853027
    5. '(input' → logprob: -10.389609336853027
    6. '(lambda' → logprob: -11.139609336853027
    7. '[int' → logprob: -12.014609336853027
    8. '<int' → logprob: -12.264609336853027
    9. '(
' → logprob: -13.514609336853027
    10. '```' → logprob: -13.514609336853027

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23451469838619232
    2. ',' → logprob: -2.3595147132873535
    3. ',input' → logprob: -3.2345147132873535
    4. '(' → logprob: -3.4845147132873535
    5. 'input' → logprob: -3.7345147132873535
    6. ')' → logprob: -3.9845147132873535
    7. '=input' → logprob: -7.4845147132873535
    8. ' input' → logprob: -7.4845147132873535
    9. '),' → logprob: -8.734514236450195
    10. '```' → logprob: -8.859514236450195

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693051993846893
    2. ' input' → logprob: -2.1269304752349854
    3. '(input' → logprob: -13.501930236816406
    4. ',input' → logprob: -14.251930236816406
    5. ')' → logprob: -15.126930236816406
    6. '=input' → logprob: -15.751930236816406
    7. '	input' → logprob: -17.376930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '<input' → logprob: -17.876930236816406
    10. '[input' → logprob: -17.876930236816406

Token 14: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26290401816368103
    2. '().' → logprob: -1.7629040479660034
    3. '()' → logprob: -2.887903928756714
    4. ')' → logprob: -6.512904167175293
    5. '());' → logprob: -7.012904167175293
    6. '(' → logprob: -7.637904167175293
    7. '('' → logprob: -7.887904167175293
    8. '()))' → logprob: -8.762904167175293
    9. '()>' → logprob: -9.012904167175293
    10. '();)' → logprob: -9.762904167175293

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043674863991327584
    2. 'strip' → logprob: -7.750436782836914
    3. 'rstrip' → logprob: -12.250436782836914
    4. ' split' → logprob: -13.750436782836914
    5. '(split' → logprob: -15.750436782836914
    6. 'spl' → logprob: -17.000436782836914
    7. 'read' → logprob: -17.250436782836914
    8. 'startswith' → logprob: -19.625436782836914
    9. 's' → logprob: -20.000436782836914
    10. ')' → logprob: -20.375436782836914

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012588288635015488
    2. '))' → logprob: -4.3875885009765625
    3. '())' → logprob: -10.137588500976562
    4. ')))' → logprob: -11.012588500976562
    5. '),' → logprob: -12.262588500976562
    6. ')`' → logprob: -12.512588500976562
    7. '`)' → logprob: -12.762588500976562
    8. '()' → logprob: -12.887588500976562
    9. '(' → logprob: -13.012588500976562
    10. ' )' → logprob: -13.637588500976562

Token 17: 'ap' (ID: 403)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5320025682449341
    2. 'arr' → logprob: -2.4070024490356445
    3. 'items' → logprob: -2.4070024490356445
    4. 'A' → logprob: -2.6570024490356445
    5. 'array' → logprob: -3.0320024490356445
    6. 'a' → logprob: -3.1570024490356445
    7. 'lst' → logprob: -3.9070024490356445
    8. 'points' → logprob: -4.1570024490356445
    9. 'numbers' → logprob: -5.0320024490356445
    10. 'list' → logprob: -6.0320024490356445

Token 18: 'ples' (ID: 4524)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.8778058886528015
    2. 'p' → logprob: -1.2528059482574463
    3. 'ple' → logprob: -1.3778059482574463
    4. 'ples' → logprob: -3.2528059482574463
    5. 'ps' → logprob: -5.377805709838867
    6. ' =' → logprob: -7.002805709838867
    7. 'pl' → logprob: -7.252805709838867
    8. 's' → logprob: -8.627805709838867
    9. 'pe' → logprob: -8.752805709838867
    10. 'plist' → logprob: -8.752805709838867

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43677979707717896
    2. ' =' → logprob: -1.0617797374725342
    3. '[' → logprob: -5.061779975891113
    4. ',' → logprob: -7.561779975891113
    5. ')' → logprob: -8.061779975891113
    6. '.' → logprob: -8.811779975891113
    7. 's' → logprob: -9.061779975891113
    8. '_' → logprob: -9.311779975891113
    9. '[:]' → logprob: -9.436779975891113
    10. ']' → logprob: -9.561779975891113

Token 20: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48697736859321594
    2. '[list' → logprob: -0.9869773387908936
    3. '[]' → logprob: -4.861977577209473
    4. '[int' → logprob: -6.361977577209473
    5. 'list' → logprob: -6.736977577209473
    6. '[List' → logprob: -7.611977577209473
    7. '[input' → logprob: -7.986977577209473
    8. '[item' → logprob: -7.986977577209473
    9. '[array' → logprob: -8.111977577209473
    10. ' [' → logprob: -8.861977577209473

Token 21: 'L' (ID: 43)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.44236138463020325
    2. 'list' → logprob: -1.1923613548278809
    3. 'map' → logprob: -2.942361354827881
    4. ' tuple' → logprob: -7.317361354827881
    5. '(tuple' → logprob: -7.942361354827881
    6. ' list' → logprob: -9.692361831665039
    7. '(map' → logprob: -9.692361831665039
    8. '(list' → logprob: -9.817361831665039
    9. 'int' → logprob: -10.567361831665039
    10. ' map' → logprob: -11.942361831665039

Token 22: ' +' (ID: 659)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.25592830777168274
    2. '+' → logprob: -1.6309282779693604
    3. ' +' → logprob: -3.5059282779693604
    4. ',' → logprob: -10.880928039550781
    5. '+j' → logprob: -12.880928039550781
    6. '+k' → logprob: -13.005928039550781
    7. '+x' → logprob: -13.130928039550781
    8. '+
' → logprob: -13.755928039550781
    9. '+,' → logprob: -13.755928039550781
    10. ' for' → logprob: -13.755928039550781

Token 23: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007626864593476057
    2. ' i' → logprob: -4.882627010345459
    3. '_' → logprob: -12.5076265335083
    4. '1' → logprob: -12.5076265335083
    5. 'x' → logprob: -12.6326265335083
    6. '_i' → logprob: -13.0076265335083
    7. '0' → logprob: -13.2576265335083
    8. '```' → logprob: -13.5076265335083
    9. '2' → logprob: -14.0076265335083
    10. ' ' → logprob: -14.0076265335083

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028903337195515633
    2. 'for' → logprob: -3.6539032459259033
    3. ')' → logprob: -6.153903484344482
    4. ' ' → logprob: -7.903903484344482
    5. '	for' → logprob: -9.653903007507324
    6. '<|end|>' → logprob: -11.028903007507324
    7. '<|end|>' → logprob: -11.778903007507324
    8. ']' → logprob: -12.403903007507324
    9. '-' → logprob: -13.153903007507324
    10. '```' → logprob: -13.278903007507324

Token 25: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22912509739398956
    2. ' range' → logprob: -1.6041251420974731
    3. 'i' → logprob: -6.479125022888184
    4. ' ' → logprob: -6.729125022888184
    5. 'range' → logprob: -7.104125022888184
    6. '_range' → logprob: -9.854125022888184
    7. ' _' → logprob: -10.229125022888184
    8. '_' → logprob: -11.104125022888184
    9. ' xrange' → logprob: -11.229125022888184
    10. '_i' → logprob: -11.479125022888184

Token 26: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01668933406472206
    2. ' in' → logprob: -4.766689300537109
    3. 'range' → logprob: -5.141689300537109
    4. '(range' → logprob: -6.516689300537109
    5. '<|end|>' → logprob: -7.766689300537109
    6. ' xrange' → logprob: -9.26668930053711
    7. '	range' → logprob: -9.51668930053711
    8. '_range' → logprob: -10.01668930053711
    9. '<|end|>' → logprob: -10.39168930053711
    10. ' ' → logprob: -10.64168930053711

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141392946243286
    2. ' range' → logprob: -1.701413869857788
    3. '	range' → logprob: -14.701414108276367
    4. '(range' → logprob: -16.826414108276367
    5. '_range' → logprob: -16.951414108276367
    6. ')' → logprob: -17.701414108276367
    7. ' xrange' → logprob: -18.076414108276367
    8. '.range' → logprob: -18.201414108276367
    9. ' ' → logprob: -18.701414108276367
    10. 'rang' → logprob: -19.451414108276367

Token 28: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007107630372047424
    2. '(' → logprob: -7.250710964202881
    3. '(n' → logprob: -14.875710487365723
    4. 'N' → logprob: -15.750710487365723
    5. '(
' → logprob: -16.25071144104004
    6. ' (' → logprob: -16.62571144104004
    7. ')' → logprob: -16.87571144104004
    8. '(A' → logprob: -18.00071144104004
    9. '(L' → logprob: -18.25071144104004
    10. '(len' → logprob: -18.37571144104004

Token 29: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.957014556974173e-05
    2. ')' → logprob: -9.750069618225098
    3. ']' → logprob: -11.500069618225098
    4. ' )' → logprob: -14.875069618225098
    5. ')]
' → logprob: -15.750069618225098
    6. ')])' → logprob: -16.00006866455078
    7. ')}' → logprob: -16.25006866455078
    8. ')],' → logprob: -16.50006866455078
    9. '')]' → logprob: -16.75006866455078
    10. '))' → logprob: -17.12506866455078

Token 30: 'excluded' (ID: 194717)
  Prédit: ' apples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' apples' → logprob: -0.8687424659729004
    2. 'ap' → logprob: -1.2437424659729004
    3. 'sorted' → logprob: -2.6187424659729004
    4. '
' → logprob: -2.6187424659729004
    5. 's' → logprob: -3.6187424659729004
    6. ')' → logprob: -3.7437424659729004
    7. ' 
' → logprob: -3.8687424659729004
    8. '```' → logprob: -3.8687424659729004
    9. 'apple' → logprob: -4.2437424659729
    10. '\' → logprob: -5.3687424659729

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6402415037155151
    2. '_indices' → logprob: -1.7652415037155151
    3. '_index' → logprob: -2.6402416229248047
    4. 's' → logprob: -2.6402416229248047
    5. '_idx' → logprob: -3.1402416229248047
    6. '_' → logprob: -3.5152416229248047
    7. '_count' → logprob: -4.015241622924805
    8. '_values' → logprob: -4.515241622924805
    9. '=' → logprob: -4.640241622924805
    10. '_indexes' → logprob: -4.640241622924805

Token 32: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22076411545276642
    2. ' ' → logprob: -2.84576416015625
    3. '[]' → logprob: -3.59576416015625
    4. ' ap' → logprob: -3.97076416015625
    5. 'min' → logprob: -4.59576416015625
    6. ' []' → logprob: -4.59576416015625
    7. 'ap' → logprob: -4.72076416015625
    8. ' None' → logprob: -4.84576416015625
    9. 'None' → logprob: -4.84576416015625
    10. ' apples' → logprob: -4.97076416015625

Token 33: '(ap' (ID: 68318)
  Prédit: '(ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.0071618082001805305
    2. '(abs' → logprob: -5.257161617279053
    3. '(' → logprob: -6.632161617279053
    4. '((' → logprob: -8.882162094116211
    5. '(range' → logprob: -9.132162094116211
    6. '(items' → logprob: -9.757162094116211
    7. 'ap' → logprob: -9.757162094116211
    8. '(item' → logprob: -10.257162094116211
    9. '(ex' → logprob: -10.507162094116211
    10. '([' → logprob: -11.007162094116211

Token 34: 'ples' (ID: 4524)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0408586710691452
    2. '(ap' → logprob: -3.290858745574951
    3. 'le' → logprob: -6.290858745574951
    4. 'ap' → logprob: -7.290858745574951
    5. '(' → logprob: -9.165858268737793
    6. 'ples' → logprob: -9.415858268737793
    7. 'l' → logprob: -9.790858268737793
    8. '```' → logprob: -11.665858268737793
    9. '[' → logprob: -12.040858268737793
    10. 'less' → logprob: -13.040858268737793

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04058077931404114
    2. ',key' → logprob: -3.4155807495117188
    3. ' ,' → logprob: -5.915580749511719
    4. '(key' → logprob: -6.040580749511719
    5. 'key' → logprob: -7.290580749511719
    6. '(ap' → logprob: -7.415580749511719
    7. '(),' → logprob: -7.790580749511719
    8. 'ap' → logprob: -10.040580749511719
    9. ')' → logprob: -10.915580749511719
    10. ' key' → logprob: -10.915580749511719

Token 36: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.04862483590841293
    2. 'key' → logprob: -3.0486247539520264
    3. 'abs' → logprob: -10.923624992370605
    4. '	key' → logprob: -12.298624992370605
    5. ',key' → logprob: -12.423624992370605
    6. '(key' → logprob: -12.798624992370605
    7. ' ' → logprob: -13.298624992370605
    8. '   ' → logprob: -13.423624992370605
    9. ')' → logprob: -13.423624992370605
    10. ',' → logprob: -13.923624992370605

Token 37: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049883898347616196
    2. '=item' → logprob: -3.0498838424682617
    3. '=lambda' → logprob: -6.674883842468262
    4. '=int' → logprob: -11.299883842468262
    5. '=len' → logprob: -12.174883842468262
    6. '=i' → logprob: -12.299883842468262
    7. '=

' → logprob: -12.799883842468262
    8. '=
' → logprob: -13.174883842468262
    9. '=id' → logprob: -13.549883842468262
    10. '=index' → logprob: -13.674883842468262

Token 38: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0009137284359894693
    2. 'lambda' → logprob: -7.000913619995117
    3. 'item' → logprob: -13.875913619995117
    4. ' abs' → logprob: -14.625913619995117
    5. '(abs' → logprob: -15.250913619995117
    6. ' lambda' → logprob: -15.750913619995117
    7. '   ' → logprob: -15.875913619995117
    8. '```' → logprob: -16.250913619995117
    9. '(lambda' → logprob: -16.375913619995117
    10. 'ab' → logprob: -16.625913619995117

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1186566047836095e-05
    2. ')]' → logprob: -11.250031471252441
    3. '))' → logprob: -11.750031471252441
    4. ')
' → logprob: -12.000031471252441
    5. ' )' → logprob: -13.500031471252441
    6. ')item' → logprob: -14.000031471252441
    7. ')])' → logprob: -14.250031471252441
    8. ')

' → logprob: -15.750031471252441
    9. ')}' → logprob: -16.125030517578125
    10. ')`' → logprob: -16.125030517578125

Token 40: 'print' (ID: 1598)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.7218630909919739
    2. 'print' → logprob: -1.096863031387329
    3. ' apples' → logprob: -3.221863031387329
    4. '
' → logprob: -3.471863031387329
    5. 'result' → logprob: -3.971863031387329
    6. ')' → logprob: -4.096863269805908
    7. '<|end|>' → logprob: -4.096863269805908
    8. 'sum' → logprob: -4.346863269805908
    9. 'excluded' → logprob: -4.846863269805908
    10. '\n' → logprob: -4.971863269805908

Token 41: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10872173309326172
    2. '(sum' → logprob: -2.9837217330932617
    3. '(ex' → logprob: -2.9837217330932617
    4. '(ap' → logprob: -6.858721733093262
    5. '()' → logprob: -8.108721733093262
    6. '(abs' → logprob: -8.233721733093262
    7. '((' → logprob: -9.608721733093262
    8. ' (' → logprob: -10.858721733093262
    9. '(
' → logprob: -10.983721733093262
    10. 'sum' → logprob: -11.108721733093262

Token 42: '(ap' (ID: 68318)
  Prédit: '(ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ap' → logprob: -0.00043281487887725234
    2. '(' → logprob: -7.750432968139648
    3. ')' → logprob: -13.875432968139648
    4. 'ap' → logprob: -14.750432968139648
    5. '	ap' → logprob: -15.625432968139648
    6. ' (' → logprob: -15.625432968139648
    7. '(x' → logprob: -16.37543296813965
    8. '()' → logprob: -16.75043296813965
    9. '([' → logprob: -16.75043296813965
    10. '(s' → logprob: -16.75043296813965

Token 43: 'ples' (ID: 4524)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.0003049570368602872
    2. 'le' → logprob: -8.87530517578125
    3. 'ples' → logprob: -9.00030517578125
    4. 'ap' → logprob: -10.75030517578125
    5. 'l' → logprob: -11.62530517578125
    6. '(ap' → logprob: -12.37530517578125
    7. '[' → logprob: -13.00030517578125
    8. '```' → logprob: -13.50030517578125
    9. 'less' → logprob: -14.25030517578125
    10. '``' → logprob: -14.87530517578125

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014609156642109156
    2. ')-' → logprob: -9.50014591217041
    3. ' )' → logprob: -9.62514591217041
    4. '))' → logprob: -12.75014591217041
    5. '）' → logprob: -14.50014591217041
    6. '")' → logprob: -14.87514591217041
    7. '())' → logprob: -15.00014591217041
    8. ')
' → logprob: -15.37514591217041
    9. '`)' → logprob: -15.37514591217041
    10. '   ' → logprob: -15.75014591217041

Token 45: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5299593806266785
    2. '-' → logprob: -1.5299594402313232
    3. ' -' → logprob: -1.6549594402313232
    4. '-ex' → logprob: -5.654959201812744
    5. ' )' → logprob: -9.404959678649902
    6. '-)' → logprob: -9.529959678649902
    7. ')-' → logprob: -10.154959678649902
    8. '-remove' → logprob: -12.029959678649902
    9. ' ' → logprob: -12.154959678649902
    10. '<|end|>' → logprob: -13.904959678649902

Token 46: ' excluded' (ID: 52015)
  Prédit: 'excluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'excluded' → logprob: -0.0040793512016534805
    2. ' excluded' → logprob: -5.504079341888428
    3. 'ex' → logprob: -14.754079818725586
    4. 'exclude' → logprob: -15.004079818725586
    5. 'abs' → logprob: -15.754079818725586
    6. 'excluding' → logprob: -18.004079818725586
    7. '(ex' → logprob: -19.254079818725586
    8. '	ex' → logprob: -19.379079818725586
    9. 'Excluded' → logprob: -19.754079818725586
    10. ' excl' → logprob: -19.879079818725586

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. '))' → logprob: -10.750048637390137
    3. '`)' → logprob: -11.125048637390137
    4. '```' → logprob: -12.375048637390137
    5. ')
' → logprob: -13.125048637390137
    6. ')`' → logprob: -13.125048637390137
    7. '}' → logprob: -13.750048637390137
    8. ' )' → logprob: -13.875048637390137
    9. '})' → logprob: -14.000048637390137
    10. '）' → logprob: -15.125048637390137


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 37.78%
Précision adaptée (1ère position): 37.78%
Précision (top 10): 80.00%
================================================================================
