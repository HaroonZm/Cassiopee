================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
 L, R = (int(x) for x in input().split())
 mod = 2019
 result = 2019
 i = L
 while i <= R:
    for j in range(i+1, R+1):
        val = (lambda a, b: (a*b) % mod)(i, j)
        result = (result if result < val else val)
        if not result:
            print(0)
            return
    i += 1
 print(result)
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: ' L' (ID: 451)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.14868979156017303
    2. '\n' → logprob: -2.7736897468566895
    3. '(' → logprob: -3.6486897468566895
    4. ' ' → logprob: -4.6486897468566895
    5. '   ' → logprob: -4.6486897468566895
    6. ' 
' → logprob: -4.6486897468566895
    7. '    ' → logprob: -5.3986897468566895
    8. '    
' → logprob: -5.5236897468566895
    9. ''' → logprob: -5.8986897468566895
    10. '```' → logprob: -6.2736897468566895

Token 4: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06942787766456604
    2. 'o' → logprob: -3.819427967071533
    3. '   ' → logprob: -4.194427967071533
    4. ' i' → logprob: -4.194427967071533
    5. 'e' → logprob: -4.569427967071533
    6. ' ' → logprob: -6.444427967071533
    7. 'a' → logprob: -7.444427967071533
    8. ' =' → logprob: -7.819427967071533
    9. ' o' → logprob: -8.444427490234375
    10. '  ' → logprob: -8.944427490234375

Token 5: ' R' (ID: 460)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.7586154341697693
    2. ' =' → logprob: -1.383615493774414
    3. '=' → logprob: -2.508615493774414
    4. ' ' → logprob: -2.758615493774414
    5. ',' → logprob: -3.633615493774414
    6. ' R' → logprob: -3.633615493774414
    7. 'M' → logprob: -3.883615493774414
    8. 'R' → logprob: -4.633615493774414
    9. '_' → logprob: -4.758615493774414
    10. '    ' → logprob: -5.133615493774414

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1280672252178192
    2. '=' → logprob: -2.1280672550201416
    3. ',' → logprob: -7.5030670166015625
    4. '```' → logprob: -8.378067016601562
    5. ' ' → logprob: -8.753067016601562
    6. '_' → logprob: -10.253067016601562
    7. '[' → logprob: -10.378067016601562
    8. ')' → logprob: -10.503067016601562
    9. ' ,' → logprob: -10.503067016601562
    10. ' +=' → logprob: -11.128067016601562

Token 7: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.247360497713089
    2. ' map' → logprob: -1.6223604679107666
    3. '0' → logprob: -4.247360706329346
    4. 'map' → logprob: -5.247360706329346
    5. ' input' → logprob: -6.997360706329346
    6. '1' → logprob: -7.372360706329346
    7. '10' → logprob: -8.247360229492188
    8. ' int' → logprob: -8.997360229492188
    9. 'input' → logprob: -9.122360229492188
    10. '5' → logprob: -10.747360229492188

Token 8: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5619616508483887
    2. ' ' → logprob: -1.6869616508483887
    3. '1' → logprob: -1.9369616508483887
    4. ' map' → logprob: -3.4369616508483887
    5. 'int' → logprob: -3.5619616508483887
    6. ' int' → logprob: -4.186961650848389
    7. 'map' → logprob: -4.561961650848389
    8. 'input' → logprob: -5.436961650848389
    9. ')' → logprob: -5.936961650848389
    10. ' input' → logprob: -5.936961650848389

Token 9: '(x' (ID: 4061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6549109816551208
    2. '(' → logprob: -0.7799109816551208
    3. '()' → logprob: -4.904911041259766
    4. '(input' → logprob: -5.404911041259766
    5. ',' → logprob: -6.404911041259766
    6. '(x' → logprob: -6.904911041259766
    7. 'input' → logprob: -7.154911041259766
    8. '(token' → logprob: -7.404911041259766
    9. ' )' → logprob: -7.529911041259766
    10. '```' → logprob: -7.529911041259766

Token 10: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028514713048934937
    2. '()' → logprob: -7.127851486206055
    3. 'for' → logprob: -7.502851486206055
    4. ' for' → logprob: -7.752851486206055
    5. '),' → logprob: -8.377851486206055
    6. '())' → logprob: -8.627851486206055
    7. '(input' → logprob: -8.752851486206055
    8. 'input' → logprob: -8.877851486206055
    9. '))' → logprob: -9.002851486206055
    10. '(x' → logprob: -9.252851486206055

Token 11: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4907250702381134
    2. ' for' → logprob: -0.990725040435791
    3. ')' → logprob: -4.115725040435791
    4. '```' → logprob: -9.86572551727295
    5. '<|end|>' → logprob: -9.99072551727295
    6. '[' → logprob: -11.11572551727295
    7. ' )' → logprob: -11.24072551727295
    8. '(x' → logprob: -11.36572551727295
    9. '),' → logprob: -11.36572551727295
    10. 'input' → logprob: -11.74072551727295

Token 12: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.030002936720848083
    2. 'input' → logprob: -3.7800028324127197
    3. ' range' → logprob: -6.155003070831299
    4. ' ' → logprob: -6.280003070831299
    5. '<|end|>' → logprob: -7.280003070831299
    6. ' x' → logprob: -7.530003070831299
    7. ' in' → logprob: -7.780003070831299
    8. ' s' → logprob: -8.40500259399414
    9. ' )' → logprob: -8.65500259399414
    10. ' user' → logprob: -8.90500259399414

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016970766708254814
    2. 'in' → logprob: -4.141970634460449
    3. 'input' → logprob: -7.766970634460449
    4. ' input' → logprob: -8.39197063446045
    5. ')' → logprob: -9.26697063446045
    6. '(input' → logprob: -9.51697063446045
    7. ' )' → logprob: -9.89197063446045
    8. '<|end|>' → logprob: -11.26697063446045
    9. '(' → logprob: -11.39197063446045
    10. ' ' → logprob: -11.64197063446045

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3133426606655121
    2. ' input' → logprob: -1.3133426904678345
    3. 'range' → logprob: -9.938343048095703
    4. ' range' → logprob: -11.188343048095703
    5. '(input' → logprob: -11.438343048095703
    6. ')' → logprob: -12.438343048095703
    7. ' ' → logprob: -13.688343048095703
    8. '=input' → logprob: -14.188343048095703
    9. '```' → logprob: -14.813343048095703
    10. 'raw' → logprob: -14.938343048095703

Token 15: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3177475929260254
    2. '()' → logprob: -1.3177475929260254
    3. '().' → logprob: -5.942747592926025
    4. ')' → logprob: -6.942747592926025
    5. '(' → logprob: -7.192747592926025
    6. ' ())' → logprob: -9.942747116088867
    7. '()),' → logprob: -10.817747116088867
    8. '());' → logprob: -11.442747116088867
    9. '()))' → logprob: -11.567747116088867
    10. '('' → logprob: -11.692747116088867

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019491063430905342
    2. 'strip' → logprob: -6.251949310302734
    3. 'rstrip' → logprob: -11.126949310302734
    4. ' split' → logprob: -12.251949310302734
    5. '(split' → logprob: -14.876949310302734
    6. 'spl' → logprob: -15.251949310302734
    7. 's' → logprob: -15.751949310302734
    8. ')' → logprob: -16.126949310302734
    9. 'read' → logprob: -16.876949310302734
    10. 'startswith' → logprob: -17.376949310302734

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04154791682958603
    2. '()' → logprob: -3.791548013687134
    3. ')' → logprob: -4.041547775268555
    4. '(' → logprob: -7.916547775268555
    5. ' ())' → logprob: -9.166547775268555
    6. '()))' → logprob: -10.291547775268555
    7. '('' → logprob: -11.166547775268555
    8. '))' → logprob: -12.166547775268555
    9. '`)' → logprob: -12.291547775268555
    10. '()]' → logprob: -12.291547775268555

Token 18: ' mod' (ID: 1812)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2203699350357056
    2. '
' → logprob: -1.5953699350357056
    3. '\n' → logprob: -1.9703699350357056
    4. ' 
' → logprob: -2.095369815826416
    5. '   ' → logprob: -2.470369815826416
    6. ' for' → logprob: -2.970369815826416
    7. ' ' → logprob: -3.470369815826416
    8. ':' → logprob: -4.220369815826416
    9. '<|end|>' → logprob: -4.220369815826416
    10. '  
' → logprob: -4.970369815826416

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2821867763996124
    2. '=' → logprob: -1.40718674659729
    3. '_' → logprob: -7.657186985015869
    4. ' ' → logprob: -7.657186985015869
    5. ',' → logprob: -10.407186508178711
    6. ')' → logprob: -12.032186508178711
    7. ' ' → logprob: -12.032186508178711
    8. '1' → logprob: -12.157186508178711
    9. 'mod' → logprob: -12.157186508178711
    10. '.' → logprob: -12.407186508178711

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06252741068601608
    2. '10' → logprob: -2.8125274181365967
    3. '100' → logprob: -7.562527179718018
    4. '1' → logprob: -10.812527656555176
    5. '998' → logprob: -11.687527656555176
    6. ' (' → logprob: -12.312527656555176
    7. 'pow' → logprob: -13.187527656555176
    8. ' ' → logprob: -13.562527656555176
    9. '(' → logprob: -13.937527656555176
    10. '2' → logprob: -14.187527656555176

Token 21: '201' (ID: 667)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006729814689606428
    2. '100' → logprob: -5.881729602813721
    3. '998' → logprob: -5.881729602813721
    4. ' ' → logprob: -7.006729602813721
    5. '1' → logprob: -8.631730079650879
    6. '(' → logprob: -11.006730079650879
    7. 'pow' → logprob: -11.381730079650879
    8. '2' → logprob: -11.756730079650879
    9. '9' → logprob: -13.756730079650879
    10. '999' → logprob: -13.756730079650879

Token 22: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.012275462038815022
    2. '9' → logprob: -4.512275695800781
    3. '```' → logprob: -6.887275695800781
    4. ' ' → logprob: -9.887275695800781
    5. '``' → logprob: -10.012275695800781
    6. '７' → logprob: -10.637275695800781
    7. '3' → logprob: -10.887275695800781
    8. '   ' → logprob: -12.324775695800781
    9. '927' → logprob: -12.512275695800781
    10. '907' → logprob: -12.574775695800781

Token 23: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0316085815429688
    2. ' ' → logprob: -1.4066085815429688
    3. '\n' → logprob: -1.5316085815429688
    4. ' for' → logprob: -3.4066085815429688
    5. ':' → logprob: -3.5316085815429688
    6. 'for' → logprob: -4.156608581542969
    7. ' \' → logprob: -4.156608581542969
    8. ' 
' → logprob: -4.156608581542969
    9. '*' → logprob: -4.406608581542969
    10. '' → logprob: -4.656608581542969

Token 24: ' result' (ID: 1534)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8489131331443787
    2. ' ' → logprob: -1.3489131927490234
    3. '<|end|>' → logprob: -2.7239131927490234
    4. '\' → logprob: -2.8489131927490234
    5. ' for' → logprob: -2.9739131927490234
    6. ' 
' → logprob: -3.4739131927490234
    7. 'for' → logprob: -3.7239131927490234
    8. ')' → logprob: -3.9739131927490234
    9. ':' → logprob: -4.848913192749023
    10. '
' → logprob: -4.973913192749023

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007168442942202091
    2. '=' → logprob: -5.007168292999268
    3. ' ' → logprob: -7.882168292999268
    4. '_' → logprob: -10.007168769836426
    5. ' +=' → logprob: -11.632168769836426
    6. ' =
' → logprob: -12.632168769836426
    7. ' |=' → logprob: -12.757168769836426
    8. ' =)' → logprob: -13.007168769836426
    9. '  ' → logprob: -13.257168769836426
    10. '<|end|>' → logprob: -13.382168769836426

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6310245394706726
    2. ' mod' → logprob: -1.1310245990753174
    3. ' float' → logprob: -2.6310245990753174
    4. '10' → logprob: -3.0060245990753174
    5. 'mod' → logprob: -4.381024360656738
    6. 'float' → logprob: -5.381024360656738
    7. '201' → logprob: -6.631024360656738
    8. ' L' → logprob: -6.756024360656738
    9. '100' → logprob: -6.881024360656738
    10. '1' → logprob: -7.381024360656738

Token 27: '201' (ID: 667)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5281330347061157
    2. '201' → logprob: -1.7781330347061157
    3. '10' → logprob: -1.7781330347061157
    4. 'float' → logprob: -2.778132915496826
    5. 'R' → logprob: -6.528132915496826
    6. '(mod' → logprob: -6.528132915496826
    7. '2' → logprob: -6.653132915496826
    8. '202' → logprob: -6.778132915496826
    9. '100' → logprob: -7.153132915496826
    10. '(' → logprob: -7.528132915496826

Token 28: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0024895723909139633
    2. ' ' → logprob: -7.1274895668029785
    3. '8' → logprob: -7.2524895668029785
    4. '```' → logprob: -7.5024895668029785
    5. '10' → logprob: -9.502490043640137
    6. '0' → logprob: -9.627490043640137
    7. '+' → logprob: -10.002490043640137
    8. '``' → logprob: -10.064990043640137
    9. '   ' → logprob: -10.627490043640137
    10. '7' → logprob: -10.627490043640137

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2843482792377472
    2. 'for' → logprob: -1.5343482494354248
    3. '<|end|>' → logprob: -4.284348487854004
    4. '
' → logprob: -5.034348487854004
    5. '\n' → logprob: -5.159348487854004
    6. ' ' → logprob: -6.409348487854004
    7. ' 
' → logprob: -6.534348487854004
    8. '	for' → logprob: -6.784348487854004
    9. '  
' → logprob: -7.784348487854004
    10. '   ' → logprob: -7.909348487854004

Token 31: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16997091472148895
    2. ' n' → logprob: -1.9199708700180054
    3. ' =' → logprob: -5.544970989227295
    4. ' ' → logprob: -5.544970989227295
    5. '=' → logprob: -6.794970989227295
    6. ',' → logprob: -8.169970512390137
    7. 'nt' → logprob: -8.669970512390137
    8. ' in' → logprob: -9.419970512390137
    9. ',n' → logprob: -9.544970512390137
    10. '=n' → logprob: -10.294970512390137

Token 32: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.16037563979625702
    2. 'L' → logprob: -1.9103755950927734
    3. ' ' → logprob: -8.910375595092773
    4. '<|end|>' → logprob: -11.535375595092773
    5. '0' → logprob: -13.410375595092773
    6. '	L' → logprob: -13.535375595092773
    7. '>L' → logprob: -14.285375595092773
    8. '  ' → logprob: -14.785375595092773
    9. '(L' → logprob: -15.347875595092773
    10. '   ' → logprob: -15.472875595092773

Token 33: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1928819864988327
    2. ' ' → logprob: -2.4428820610046387
    3. ' +' → logprob: -2.9428820610046387
    4. '<|end|>' → logprob: -3.4428820610046387
    5. ' for' → logprob: -7.692882061004639
    6. 'for' → logprob: -7.692882061004639
    7. ')' → logprob: -8.06788158416748
    8. '  ' → logprob: -8.19288158416748
    9. '<|end|>' → logprob: -8.19288158416748
    10. '=' → logprob: -8.19288158416748

Token 34: ' while' (ID: 2049)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01956227421760559
    2. ' ' → logprob: -4.644562244415283
    3. ' +' → logprob: -5.019562244415283
    4. ':' → logprob: -6.519562244415283
    5. '+
' → logprob: -7.769562244415283
    6. '<|end|>' → logprob: -8.394562721252441
    7. '%' → logprob: -8.519562721252441
    8. ')' → logprob: -8.644562721252441
    9. '=' → logprob: -9.269562721252441
    10. ' while' → logprob: -9.644562721252441

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0018085796618834138
    2. 'i' → logprob: -6.5018086433410645
    3. ' ' → logprob: -8.126808166503906
    4. '  ' → logprob: -12.626808166503906
    5. ' <' → logprob: -13.376808166503906
    6. ' ' → logprob: -13.376808166503906
    7. ' (' → logprob: -14.001808166503906
    8. '(i' → logprob: -14.126808166503906
    9. '	i' → logprob: -14.126808166503906
    10. '<' → logprob: -14.626808166503906

Token 36: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0697665810585022
    2. ' <=' → logprob: -2.8197665214538574
    3. '<' → logprob: -4.944766521453857
    4. ' ' → logprob: -7.819766521453857
    5. '<=' → logprob: -8.444766998291016
    6. ' in' → logprob: -11.069766998291016
    7. '<n' → logprob: -12.569766998291016
    8. '<len' → logprob: -12.819766998291016
    9. 'in' → logprob: -13.444766998291016
    10. ' less' → logprob: -13.819766998291016

Token 37: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.32883381843566895
    2. 'R' → logprob: -1.328833818435669
    3. ' min' → logprob: -4.32883358001709
    4. 'min' → logprob: -6.82883358001709
    5. ' ' → logprob: -7.45383358001709
    6. ' L' → logprob: -7.95383358001709
    7. 'L' → logprob: -8.82883358001709
    8. ' i' → logprob: -10.32883358001709
    9. 'i' → logprob: -11.07883358001709
    10. '(min' → logprob: -11.45383358001709

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04403971880674362
    2. ' :' → logprob: -3.544039726257324
    3. ':
' → logprob: -4.919039726257324
    4. '+' → logprob: -6.169039726257324
    5. ' :
' → logprob: -6.419039726257324
    6. ' and' → logprob: -6.669039726257324
    7. ' +' → logprob: -7.419039726257324
    8. '-' → logprob: -7.669039726257324
    9. ' -' → logprob: -8.169039726257324
    10. '+:' → logprob: -8.419039726257324

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1052708625793457
    2. '+' → logprob: -1.6052708625793457
    3. '    ' → logprob: -1.6052708625793457
    4. '<|end|>' → logprob: -1.9802708625793457
    5. ' 
' → logprob: -2.9802708625793457
    6. ':' → logprob: -4.355270862579346
    7. '   ' → logprob: -4.855270862579346
    8. '\' → logprob: -4.980270862579346
    9. '<|end|>' → logprob: -5.105270862579346
    10. ' +' → logprob: -5.105270862579346

Token 40: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2903168201446533
    2. '    ' → logprob: -2.2903168201446533
    3. '   ' → logprob: -2.7903168201446533
    4. ' for' → logprob: -3.4153168201446533
    5. '       ' → logprob: -3.7903168201446533
    6. '  ' → logprob: -4.165316581726074
    7. '<|end|>' → logprob: -5.040316581726074
    8. ' i' → logprob: -5.540316581726074
    9. ' j' → logprob: -6.540316581726074
    10. 'for' (adapté à ' for') → logprob: -6.915316581726074

Token 41: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5093887448310852
    2. ' i' → logprob: -1.2593886852264404
    3. 'j' → logprob: -2.5093886852264404
    4. 'i' → logprob: -3.6343886852264404
    5. ' range' → logprob: -5.5093889236450195
    6. ' ' → logprob: -6.3843889236450195
    7. '    ' → logprob: -7.5093889236450195
    8. 'range' → logprob: -7.6343889236450195
    9. '   ' → logprob: -8.13438892364502
    10. ' in' → logprob: -8.25938892364502

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00678038876503706
    2. 'in' → logprob: -5.006780624389648
    3. ' ' → logprob: -9.756780624389648
    4. '   ' → logprob: -13.006780624389648
    5. '  ' → logprob: -13.756780624389648
    6. '    ' → logprob: -13.881780624389648
    7. '	in' → logprob: -14.381780624389648
    8. ' i' → logprob: -14.631780624389648
    9. 'i' → logprob: -14.631780624389648
    10. 'range' → logprob: -15.381780624389648

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10074421763420105
    2. 'range' → logprob: -2.3507442474365234
    3. '(range' → logprob: -8.600744247436523
    4. ' xrange' → logprob: -8.725744247436523
    5. ' i' → logprob: -9.225744247436523
    6. ' ' → logprob: -10.100744247436523
    7. '	range' → logprob: -10.225744247436523
    8. 'i' → logprob: -11.975744247436523
    9. '  ' → logprob: -12.975744247436523
    10. '   ' → logprob: -13.225744247436523

Token 44: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003295228350907564
    2. ' i' → logprob: -6.003295421600342
    3. 'i' → logprob: -8.003294944763184
    4. '(' → logprob: -8.128294944763184
    5. ' (' → logprob: -8.628294944763184
    6. '   ' → logprob: -12.378294944763184
    7. '(L' → logprob: -13.253294944763184
    8. '	i' → logprob: -13.628294944763184
    9. ',i' → logprob: -14.128294944763184
    10. ' ' → logprob: -14.378294944763184

Token 45: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1465613842010498
    2. ' +' → logprob: -2.02156138420105
    3. ' ,' → logprob: -6.146561622619629
    4. ',' → logprob: -7.021561622619629
    5. '+i' → logprob: -7.521561622619629
    6. ' ' → logprob: -8.896561622619629
    7. '+,' → logprob: -9.271561622619629
    8. ' i' → logprob: -10.396561622619629
    9. '   ' → logprob: -10.771561622619629
    10. ',i' → logprob: -11.771561622619629

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003577495808713138
    2. ' ' → logprob: -8.250357627868652
    3. 'i' → logprob: -10.000357627868652
    4. ' i' → logprob: -10.875357627868652
    5. '<|end|>' → logprob: -10.875357627868652
    6. '   ' → logprob: -12.125357627868652
    7. '       ' → logprob: -13.875357627868652
    8. '0' → logprob: -14.000357627868652
    9. '+' → logprob: -14.125357627868652
    10. ')' → logprob: -14.125357627868652

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04612896591424942
    2. ' ,' → logprob: -3.171128988265991
    3. ',R' → logprob: -5.796128749847412
    4. ' ' → logprob: -11.04612922668457
    5. ',r' → logprob: -11.04612922668457
    6. ',i' → logprob: -11.17112922668457
    7. ',L' → logprob: -11.17112922668457
    8. ',j' → logprob: -12.04612922668457
    9. ',len' → logprob: -12.17112922668457
    10. ' to' → logprob: -13.04612922668457

Token 48: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.47687143087387085
    2. ' R' → logprob: -0.9768714308738708
    3. ' min' → logprob: -6.101871490478516
    4. 'min' → logprob: -7.726871490478516
    5. ' ' → logprob: -9.726871490478516
    6. '   ' → logprob: -10.726871490478516
    7. 'i' → logprob: -12.101871490478516
    8. '(min' → logprob: -12.351871490478516
    9. '  ' → logprob: -12.726871490478516
    10. ' i' → logprob: -12.976871490478516

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021087527275085
    2. ' +' → logprob: -2.3502109050750732
    3. ' ' → logprob: -14.100211143493652
    4. '):' → logprob: -14.225211143493652
    5. ':' → logprob: -14.475211143493652
    6. '):
' → logprob: -14.975211143493652
    7. '＋' → logprob: -14.975211143493652
    8. '   ' → logprob: -15.225211143493652
    9. '+
' → logprob: -15.475211143493652
    10. '+i' → logprob: -15.600211143493652

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.64839569455944e-05
    2. ' ' → logprob: -9.500076293945312
    3. '```' → logprob: -14.375076293945312
    4. '+' → logprob: -15.375076293945312
    5. '   ' → logprob: -15.500076293945312
    6. ')' → logprob: -15.500076293945312
    7. '):
' → logprob: -16.875076293945312
    8. '>' → logprob: -17.125076293945312
    9. '  ' → logprob: -17.125076293945312
    10. '``' → logprob: -17.125076293945312

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029228029306977987
    2. ' ):' → logprob: -6.377923011779785
    3. ':' → logprob: -7.502923011779785
    4. '):
' → logprob: -7.752923011779785
    5. ')' → logprob: -8.502923011779785
    6. ',' → logprob: -11.252923011779785
    7. '):
' → logprob: -12.002923011779785
    8. '   ' → logprob: -12.752923011779785
    9. ' )' → logprob: -12.877923011779785
    10. '       ' → logprob: -12.877923011779785

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7371389269828796
    2. '<|end|>' → logprob: -0.9871389269828796
    3. ' ' → logprob: -1.9871389865875244
    4. '        ' → logprob: -6.237138748168945
    5. '    ' → logprob: -6.362138748168945
    6. '   ' → logprob: -6.487138748168945
    7. '<|end|>' → logprob: -6.612138748168945
    8. ':' → logprob: -6.612138748168945
    9. ' 
' → logprob: -7.112138748168945
    10. '      ' → logprob: -7.612138748168945

Token 53: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21343877911567688
    2. ' if' → logprob: -2.5884387493133545
    3. ' ' → logprob: -2.8384387493133545
    4. '        ' → logprob: -3.9634387493133545
    5. ' result' → logprob: -3.9634387493133545
    6. '       ' → logprob: -4.588438987731934
    7. '            ' → logprob: -5.963438987731934
    8. '<|end|>' → logprob: -5.963438987731934
    9. 'result' → logprob: -6.963438987731934
    10. '               ' → logprob: -7.338438987731934

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07915624976158142
    2. '=' → logprob: -2.5791561603546143
    3. ' ' → logprob: -8.454155921936035
    4. ' =(' → logprob: -10.579155921936035
    5. 's' → logprob: -11.829155921936035
    6. ' %=' → logprob: -12.454155921936035
    7. '%' → logprob: -13.204155921936035
    8. '=(' → logprob: -13.204155921936035
    9. '   ' → logprob: -13.329155921936035
    10. ' =
' → logprob: -13.454155921936035

Token 55: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2523368000984192
    2. '(i' → logprob: -1.5023367404937744
    3. '       ' → logprob: -9.002336502075195
    4. ' i' → logprob: -9.127336502075195
    5. 'i' → logprob: -10.002336502075195
    6. ' ((' → logprob: -10.627336502075195
    7. '((' → logprob: -10.877336502075195
    8. '(' → logprob: -11.002336502075195
    9. '   ' → logprob: -11.127336502075195
    10. ' ' → logprob: -11.252336502075195

Token 56: 'lambda' (ID: 35280)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021924512460827827
    2. ' i' → logprob: -3.8969244956970215
    3. '(i' → logprob: -6.8969244956970215
    4. ' (' → logprob: -8.02192497253418
    5. 'j' → logprob: -11.02192497253418
    6. '(' → logprob: -12.02192497253418
    7. ' ' → logprob: -12.02192497253418
    8. '   ' → logprob: -12.14692497253418
    9. ' j' → logprob: -13.77192497253418
    10. '_i' → logprob: -13.77192497253418

Token 57: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.050974082201719284
    2. ' i' → logprob: -4.050973892211914
    3. ' lambda' → logprob: -4.175973892211914
    4. 'x' → logprob: -4.925973892211914
    5. ' (' → logprob: -6.300973892211914
    6. ' a' → logprob: -6.425973892211914
    7. 'lambda' → logprob: -6.425973892211914
    8. ' ' → logprob: -7.050973892211914
    9. 'a' → logprob: -7.425973892211914
    10. ' s' → logprob: -7.925973892211914

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8348002433776855
    2. ' x' → logprob: -1.0848002433776855
    3. ' ,' → logprob: -2.4598002433776855
    4. 'x' → logprob: -3.5848002433776855
    5. ' a' → logprob: -3.7098002433776855
    6. ' :' → logprob: -3.7098002433776855
    7. ':' → logprob: -3.9598002433776855
    8. 'a' → logprob: -4.2098002433776855
    9. ' i' → logprob: -4.7098002433776855
    10. ' ' → logprob: -5.5848002433776855

Token 59: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16093264520168304
    2. 'b' → logprob: -1.9109326601028442
    3. ' lambda' → logprob: -8.160932540893555
    4. ' ' → logprob: -8.285932540893555
    5. '    ' → logprob: -10.285932540893555
    6. 'lambda' → logprob: -10.535932540893555
    7. '   ' → logprob: -10.660932540893555
    8. ' a' → logprob: -11.160932540893555
    9. '  ' → logprob: -11.410932540893555
    10. ',b' → logprob: -11.535932540893555

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03874713182449341
    2. ' :' → logprob: -3.2887470722198486
    3. ',' → logprob: -8.28874683380127
    4. ':(' → logprob: -8.41374683380127
    5. ' :(' → logprob: -10.16374683380127
    6. ':a' → logprob: -10.16374683380127
    7. '   ' → logprob: -10.66374683380127
    8. 'a' → logprob: -10.91374683380127
    9. ')' → logprob: -11.16374683380127
    10. ' ' → logprob: -11.28874683380127

Token 61: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06388428807258606
    2. '(a' → logprob: -2.8138842582702637
    3. ' a' → logprob: -7.438884258270264
    4. ' ((' → logprob: -7.688884258270264
    5. ' ' → logprob: -8.063884735107422
    6. 'a' → logprob: -8.188884735107422
    7. '(' → logprob: -9.063884735107422
    8. '((' → logprob: -9.563884735107422
    9. '   ' → logprob: -10.188884735107422
    10. '  ' → logprob: -10.938884735107422

Token 62: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39148950576782227
    2. '(a' → logprob: -1.7664895057678223
    3. ' a' → logprob: -2.5164895057678223
    4. ' (' → logprob: -2.6414895057678223
    5. '(' → logprob: -8.016489028930664
    6. '   ' → logprob: -8.516489028930664
    7. ' ' → logprob: -8.516489028930664
    8. '((' → logprob: -9.141489028930664
    9. ' ((' → logprob: -9.891489028930664
    10. '  ' → logprob: -10.953989028930664

Token 63: '*b' (ID: 72162)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.34029218554496765
    2. ' *' → logprob: -1.84029221534729
    3. '%' → logprob: -2.34029221534729
    4. '*' → logprob: -3.46529221534729
    5. ' -' → logprob: -6.965291976928711
    6. ' ' → logprob: -7.215291976928711
    7. '*j' → logprob: -9.215291976928711
    8. '%b' → logprob: -9.590291976928711
    9. '-' → logprob: -9.715291976928711
    10. '%m' → logprob: -10.215291976928711

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21565482020378113
    2. ' )' → logprob: -1.8406548500061035
    3. ')%' → logprob: -3.9656548500061035
    4. ' %' → logprob: -4.5906548500061035
    5. '%' → logprob: -5.2156548500061035
    6. '-' → logprob: -8.090654373168945
    7. ' -' → logprob: -8.590654373168945
    8. ' ' → logprob: -8.840654373168945
    9. '   ' → logprob: -10.840654373168945
    10. '    ' → logprob: -11.090654373168945

Token 65: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20788206160068512
    2. '%' → logprob: -2.4578821659088135
    3. ')' → logprob: -2.4578821659088135
    4. ' )' → logprob: -4.582881927490234
    5. ')%' → logprob: -5.457881927490234
    6. ' ' → logprob: -6.332881927490234
    7. '%i' → logprob: -10.707881927490234
    8. ' %)' → logprob: -10.832881927490234
    9. '%)' → logprob: -11.082881927490234
    10. '    ' → logprob: -11.207881927490234

Token 66: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.10469774156808853
    2. 'mod' → logprob: -2.3546977043151855
    3. ' ' → logprob: -5.6046977043151855
    4. '201' → logprob: -7.2296977043151855
    5. ' ' → logprob: -10.104698181152344
    6. '	mod' → logprob: -11.479698181152344
    7. '  ' → logprob: -12.104698181152344
    8. '   ' → logprob: -12.354698181152344
    9. '    ' → logprob: -13.104698181152344
    10. '(mod' → logprob: -13.292198181152344

Token 67: ')(' (ID: 4898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11713341623544693
    2. ')(' → logprob: -2.492133378982544
    3. ' )' → logprob: -3.992133378982544
    4. '       ' → logprob: -5.367133617401123
    5. ' )(' → logprob: -6.242133617401123
    6. ')((' → logprob: -6.992133617401123
    7. ' ' → logprob: -7.617133617401123
    8. ')(
' → logprob: -7.992133617401123
    9. '   ' → logprob: -8.492133140563965
    10. '           ' → logprob: -8.867133140563965

Token 68: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06996522843837738
    2. ' i' → logprob: -2.694965124130249
    3. '   ' → logprob: -10.694965362548828
    4. ' ' → logprob: -12.569965362548828
    5. '	i' → logprob: -14.319965362548828
    6. '  ' → logprob: -14.444965362548828
    7. ')' → logprob: -15.069965362548828
    8. '    ' → logprob: -15.194965362548828
    9. '       ' → logprob: -15.569965362548828
    10. '           ' → logprob: -15.944965362548828

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009209830313920975
    2. ' ,' → logprob: -4.884209632873535
    3. ',j' → logprob: -6.884209632873535
    4. ')' → logprob: -8.134209632873535
    5. ' ' → logprob: -8.509209632873535
    6. '<|end|>' → logprob: -11.009209632873535
    7. '   ' → logprob: -11.259209632873535
    8. ' )' → logprob: -11.259209632873535
    9. ',b' → logprob: -11.384209632873535
    10. '  ' → logprob: -12.759209632873535

Token 70: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0336495004594326
    2. ' j' → logprob: -3.408649444580078
    3. '   ' → logprob: -13.658649444580078
    4. ' ' → logprob: -13.908649444580078
    5. '    ' → logprob: -14.658649444580078
    6. '	j' → logprob: -14.908649444580078
    7. '<|end|>' → logprob: -15.033649444580078
    8. '$j' → logprob: -15.783649444580078
    9. '  ' → logprob: -15.908649444580078
    10. ')' → logprob: -16.033649444580078

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003510153153911233
    2. ')
' → logprob: -5.878509998321533
    3. '       ' → logprob: -7.378509998321533
    4. ' )' → logprob: -9.753510475158691
    5. ')
' → logprob: -11.128510475158691
    6. ')

' → logprob: -13.628510475158691
    7. '))' → logprob: -13.753510475158691
    8. ' ' → logprob: -14.128510475158691
    9. '           ' → logprob: -14.378510475158691
    10. ' )
' → logprob: -14.503510475158691

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028887586668133736
    2. '<|end|>' → logprob: -3.9038875102996826
    3. '        
' → logprob: -5.903887748718262
    4. ' ' → logprob: -6.403887748718262
    5. '        ' → logprob: -6.778887748718262
    6. ' if' → logprob: -7.278887748718262
    7. '           ' → logprob: -7.278887748718262
    8. ',' → logprob: -8.403887748718262
    9. '<|end|>' → logprob: -8.778887748718262
    10. ')' → logprob: -8.903887748718262

Token 73: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19200997054576874
    2. 'if' → logprob: -2.317009925842285
    3. '       ' → logprob: -2.692009925842285
    4. 'result' (adapté à ' result') → logprob: -5.067009925842285
    5. ' result' → logprob: -6.317009925842285
    6. '           ' → logprob: -8.942009925842285
    7. ' ' → logprob: -9.317009925842285
    8. '   ' → logprob: -10.567009925842285
    9. '        ' → logprob: -11.817009925842285
    10. '      ' → logprob: -12.442009925842285

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019299437990412116
    2. '=' → logprob: -6.251929759979248
    3. ' ' → logprob: -13.626930236816406
    4. '=min' → logprob: -15.876930236816406
    5. ' =)' → logprob: -18.001930236816406
    6. '   ' → logprob: -18.001930236816406
    7. ' <' → logprob: -18.251930236816406
    8. '  ' → logprob: -18.626930236816406
    9. 'min' → logprob: -18.751930236816406
    10. '	' → logprob: -19.001930236816406

Token 75: ' (' (ID: 350)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.005236956290900707
    2. 'min' → logprob: -5.255237102508545
    3. '(min' → logprob: -14.005236625671387
    4. '	min' → logprob: -14.505236625671387
    5. ' val' → logprob: -14.630236625671387
    6. ' ' → logprob: -14.880236625671387
    7. ' ' → logprob: -15.130236625671387
    8. ' max' → logprob: -15.255236625671387
    9. ' result' → logprob: -15.755236625671387
    10. '=min' → logprob: -16.130237579345703

Token 76: 'result' (ID: 2521)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.06871195137500763
    2. 'min' → logprob: -3.068711996078491
    3. ' val' → logprob: -4.068711757659912
    4. 'val' → logprob: -6.443711757659912
    5. ' result' → logprob: -7.068711757659912
    6. 'result' → logprob: -8.06871223449707
    7. ' ' → logprob: -10.31871223449707
    8. ')' → logprob: -11.81871223449707
    9. ' ' → logprob: -12.44371223449707
    10. '   ' → logprob: -12.69371223449707

Token 77: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46205389499664307
    2. ' if' → logprob: -1.337053894996643
    3. ' and' → logprob: -3.5870537757873535
    4. 'if' → logprob: -3.9620537757873535
    5. 'min' → logprob: -4.5870537757873535
    6. '<|end|>' → logprob: -4.7120537757873535
    7. ')' → logprob: -4.8370537757873535
    8. ' >' → logprob: -5.0870537757873535
    9. '=min' → logprob: -5.2120537757873535
    10. '<|end|>' → logprob: -5.4620537757873535

Token 78: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.15490134060382843
    2. 'result' → logprob: -2.0299012660980225
    3. ' val' → logprob: -4.779901504516602
    4. 'val' → logprob: -6.404901504516602
    5. '<' → logprob: -6.654901504516602
    6. ' ' → logprob: -8.029901504516602
    7. ' <' → logprob: -8.904901504516602
    8. '   ' → logprob: -9.279901504516602
    9. ' min' → logprob: -10.217401504516602
    10. '(result' → logprob: -10.342401504516602

Token 79: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09195320308208466
    2. ' <' → logprob: -2.4669532775878906
    3. '<=' → logprob: -6.091953277587891
    4. ' <=' → logprob: -7.466953277587891
    5. ' ' → logprob: -9.46695327758789
    6. '<n' → logprob: -11.34195327758789
    7. '<int' → logprob: -11.46695327758789
    8. '<v' → logprob: -11.71695327758789
    9. '>' → logprob: -11.96695327758789
    10. '<len' → logprob: -12.21695327758789

Token 80: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4740968942642212
    2. 'val' → logprob: -0.9740968942642212
    3. ' ' → logprob: -11.97409725189209
    4. '	val' → logprob: -12.59909725189209
    5. '   ' → logprob: -12.97409725189209
    6. ' ' → logprob: -13.22409725189209
    7. '    ' → logprob: -13.97409725189209
    8. '(val' → logprob: -13.97409725189209
    9. '```' → logprob: -14.09909725189209
    10. '  ' → logprob: -14.09909725189209

Token 81: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.005240275990217924
    2. 'else' → logprob: -5.255240440368652
    3. '        ' → logprob: -12.505240440368652
    4. ' ' → logprob: -13.880240440368652
    5. '	else' → logprob: -14.505240440368652
    6. '       ' → logprob: -14.630240440368652
    7. '    ' → logprob: -15.005240440368652
    8. '   ' → logprob: -16.005239486694336
    9. ')' → logprob: -16.505239486694336
    10. '           ' → logprob: -16.880239486694336

Token 82: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.10023502260446548
    2. 'val' → logprob: -2.3502349853515625
    3. '	val' → logprob: -12.100234985351562
    4. ' ' → logprob: -12.475234985351562
    5. ' result' → logprob: -12.600234985351562
    6. '[val' → logprob: -13.037734985351562
    7. 'result' → logprob: -13.225234985351562
    8. '    ' → logprob: -13.225234985351562
    9. '(val' → logprob: -13.537734985351562
    10. ' va' → logprob: -13.600234985351562

Token 83: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09483928233385086
    2. ')' → logprob: -2.469839334487915
    3. ')
' → logprob: -5.969839096069336
    4. ' )
' → logprob: -6.219839096069336
    5. '       ' → logprob: -6.844839096069336
    6. ' )' → logprob: -8.969839096069336
    7. ')

' → logprob: -9.219839096069336
    8. '   ' → logprob: -10.844839096069336
    9. ' )
' → logprob: -11.719839096069336
    10. ')

' → logprob: -12.469839096069336

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09421227872371674
    2. '        
' → logprob: -3.219212293624878
    3. '
' → logprob: -3.719212293624878
    4. ' 
' → logprob: -4.719212055206299
    5. '
' → logprob: -5.719212055206299
    6. '<|end|>' → logprob: -6.219212055206299
    7. '   ' → logprob: -6.469212055206299
    8. ' i' → logprob: -6.719212055206299
    9. '\n' → logprob: -6.844212055206299
    10. ' ' → logprob: -6.844212055206299

Token 85: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5906215906143188
    2. ' if' → logprob: -1.0906215906143188
    3. ' i' → logprob: -3.0906214714050293
    4. 'if' (adapté à ' if') → logprob: -3.5906214714050293
    5. '        
' → logprob: -4.715621471405029
    6. ' 
' → logprob: -4.965621471405029
    7. '   ' → logprob: -5.465621471405029
    8. 'i' → logprob: -5.590621471405029
    9. ' ' → logprob: -5.590621471405029
    10. '    ' → logprob: -6.590621471405029

Token 86: ' not' (ID: 625)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6335792541503906
    2. ' result' → logprob: -0.7585792541503906
    3. ' val' → logprob: -7.758579254150391
    4. 'val' → logprob: -8.00857925415039
    5. ' not' → logprob: -9.00857925415039
    6. 'not' → logprob: -10.25857925415039
    7. '0' → logprob: -11.00857925415039
    8. ' ' → logprob: -11.38357925415039
    9. ' i' → logprob: -11.88357925415039
    10. ' res' → logprob: -12.00857925415039

Token 87: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.2374689131975174
    2. 'result' → logprob: -1.612468957901001
    3. ' val' → logprob: -4.862468719482422
    4. ' (' → logprob: -6.362468719482422
    5. 'val' → logprob: -6.362468719482422
    6. '(result' → logprob: -7.862468719482422
    7. ' ' → logprob: -8.237468719482422
    8. ' i' → logprob: -9.987468719482422
    9. '(val' → logprob: -11.049968719482422
    10. ' res' → logprob: -11.362468719482422

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04315367713570595
    2. ' :' → logprob: -3.168153762817383
    3. '==' → logprob: -10.168153762817383
    4. '):' → logprob: -10.793153762817383
    5. '>:' → logprob: -11.168153762817383
    6. ':
' → logprob: -11.293153762817383
    7. ':return' → logprob: -11.543153762817383
    8. ' ==' → logprob: -11.918153762817383
    9. '```' → logprob: -12.043153762817383
    10. '<|end|>' → logprob: -12.043153762817383

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006674640346318483
    2. ' break' → logprob: -5.631674766540527
    3. 'break' → logprob: -7.006674766540527
    4. '          ' → logprob: -7.381674766540527
    5. ' return' → logprob: -7.881674766540527
    6. '            ' → logprob: -8.006674766540527
    7. '               ' → logprob: -8.631674766540527
    8. '       ' → logprob: -9.256674766540527
    9. '   ' → logprob: -9.256674766540527
    10. 'return' → logprob: -9.381674766540527

Token 90: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.30729180574417114
    2. 'break' → logprob: -2.0572917461395264
    3. ' return' → logprob: -2.9322917461395264
    4. '           ' → logprob: -3.1822917461395264
    5. '               ' → logprob: -3.5572917461395264
    6. 'return' → logprob: -4.4322919845581055
    7. ' print' → logprob: -7.3072919845581055
    8. 'print' (adapté à ' print') → logprob: -7.5572919845581055
    9. '   ' → logprob: -9.057291984558105
    10. ' ' → logprob: -9.307291984558105

Token 91: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014819815754890442
    2. '(' → logprob: -4.264819622039795
    3. 'result' → logprob: -8.139820098876953
    4. ' ' → logprob: -8.514820098876953
    5. '(result' → logprob: -9.014820098876953
    6. '(i' → logprob: -10.764820098876953
    7. '()' → logprob: -11.389820098876953
    8. ' result' → logprob: -12.514820098876953
    9. '   ' → logprob: -13.389820098876953
    10. ' (' → logprob: -13.389820098876953

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06206773221492767
    2. 'result' → logprob: -2.812067747116089
    3. ' ' → logprob: -9.687067985534668
    4. ' result' → logprob: -10.937067985534668
    5. ')' → logprob: -11.812067985534668
    6. 'i' → logprob: -12.562067985534668
    7. '(result' → logprob: -12.937067985534668
    8. '   ' → logprob: -13.187067985534668
    9. 'res' → logprob: -13.562067985534668
    10. '"' → logprob: -14.187067985534668

Token 93: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010114435106515884
    2. ')
' → logprob: -5.135114669799805
    3. '               ' → logprob: -5.635114669799805
    4. ')' → logprob: -7.760114669799805
    5. '
' → logprob: -9.260114669799805
    6. 'return' → logprob: -10.385114669799805
    7. '            
' → logprob: -11.010114669799805
    8. '		' → logprob: -11.635114669799805
    9. ')return' → logprob: -11.760114669799805
    10. '                
' → logprob: -12.885114669799805

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005899675306864083
    2. '            
' → logprob: -7.750589847564697
    3. '
' → logprob: -9.625590324401855
    4. ' return' → logprob: -10.375590324401855
    5. 'return' → logprob: -11.125590324401855
    6. '               ' → logprob: -11.500590324401855
    7. '          ' → logprob: -11.625590324401855
    8. ' 
' → logprob: -12.000590324401855
    9. '		' → logprob: -12.000590324401855
    10. '           
' → logprob: -12.250590324401855

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2528850734233856
    2. '           ' → logprob: -1.752885103225708
    3. ' return' → logprob: -3.002885103225708
    4. '               ' → logprob: -7.627884864807129
    5. 'break' → logprob: -10.377884864807129
    6. ' break' → logprob: -13.127884864807129
    7. '	return' → logprob: -13.377884864807129
    8. '```' → logprob: -13.752884864807129
    9. '   ' → logprob: -14.127884864807129
    10. '		' → logprob: -14.377884864807129

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03005373850464821
    2. '
' → logprob: -3.6550538539886475
    3. '   ' → logprob: -6.030053615570068
    4. '        
' → logprob: -7.405053615570068
    5. ' i' → logprob: -8.905054092407227
    6. '    
' → logprob: -9.280054092407227
    7. '           ' → logprob: -9.280054092407227
    8. '
' → logprob: -9.280054092407227
    9. ' 
' → logprob: -9.905054092407227
    10. '	' → logprob: -10.530054092407227

Token 97: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026292869821190834
    2. '   ' → logprob: -3.9012928009033203
    3. '
' → logprob: -5.27629280090332
    4. ' i' → logprob: -8.65129280090332
    5. '
' → logprob: -9.77629280090332
    6. '        
' → logprob: -9.90129280090332
    7. '           ' → logprob: -9.90129280090332
    8. '    ' → logprob: -10.15129280090332
    9. '      ' → logprob: -10.15129280090332
    10. '    
' → logprob: -10.15129280090332

Token 98: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0309084914624691
    2. ' i' → logprob: -3.9059085845947266
    3. 'i' (adapté à ' i') → logprob: -5.280908584594727
    4. '       ' → logprob: -5.530908584594727
    5. ' ' → logprob: -7.280908584594727
    6. '  ' → logprob: -7.905908584594727
    7. '	i' → logprob: -9.030908584594727
    8. '	' → logprob: -10.405908584594727
    9. '    
' → logprob: -11.030908584594727
    10. '        
' → logprob: -11.905908584594727

Token 99: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4164659082889557
    2. ' +=' → logprob: -1.1664658784866333
    3. '+' → logprob: -3.541465997695923
    4. '=' → logprob: -9.291465759277344
    5. '++' → logprob: -9.541465759277344
    6. ' ' → logprob: -11.416465759277344
    7. ' +' → logprob: -12.666465759277344
    8. '+='' → logprob: -12.916465759277344
    9. '<|end|>' → logprob: -13.166465759277344
    10. ']+=' → logprob: -13.166465759277344

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.000139236450195
    4. '  ' → logprob: -17.250139236450195
    5. '```' → logprob: -17.625139236450195
    6. ' ' → logprob: -19.125139236450195
    7. '<|end|>' → logprob: -19.500139236450195
    8. '2' → logprob: -20.687639236450195
    9. '１' → logprob: -21.000139236450195
    10. '10' → logprob: -21.000139236450195

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.25002098083496
    4. '  ' → logprob: -16.62502098083496
    5. '```' → logprob: -17.81252098083496
    6. '...' → logprob: -18.93752098083496
    7. '<|end|>' → logprob: -19.00002098083496
    8. '+' → logprob: -19.12502098083496
    9. '１' → logprob: -19.43752098083496
    10. '2' → logprob: -19.43752098083496

Token 102: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04704967886209488
    2. '
' → logprob: -4.047049522399902
    3. ' print' → logprob: -4.172049522399902
    4. '   ' → logprob: -4.422049522399902
    5. '<|end|>' → logprob: -7.797049522399902
    6. '```' → logprob: -7.922049522399902
    7. '    
' → logprob: -9.672049522399902
    8. '	print' → logprob: -10.047049522399902
    9. ' ' → logprob: -10.422049522399902
    10. '\n' → logprob: -10.547049522399902

Token 103: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04319557920098305
    2. '   ' → logprob: -3.5431954860687256
    3. ' print' → logprob: -4.418195724487305
    4. '
' → logprob: -7.918195724487305
    5. '```' → logprob: -7.918195724487305
    6. '<|end|>' → logprob: -8.043195724487305
    7. ')' → logprob: -10.293195724487305
    8. ' ' → logprob: -10.543195724487305
    9. '	print' → logprob: -10.543195724487305
    10. '    
' → logprob: -10.668195724487305

Token 104: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0031985121313482523
    2. '(' → logprob: -5.753198623657227
    3. '()' → logprob: -11.128198623657227
    4. '(min' → logprob: -13.378198623657227
    5. ' (' → logprob: -13.503198623657227
    6. 'result' → logprob: -13.628198623657227
    7. '(res' → logprob: -14.128198623657227
    8. '((' → logprob: -14.628198623657227
    9. '(results' → logprob: -15.878198623657227
    10. '(max' → logprob: -16.003198623657227

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -16.375001907348633
    4. '))' → logprob: -16.875001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '')' → logprob: -18.625001907348633
    7. '()' → logprob: -19.250001907348633
    8. '`)' → logprob: -19.250001907348633
    9. ')#' → logprob: -19.500001907348633
    10. '）' → logprob: -19.625001907348633

Token 106: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006173660513013601
    2. '(' → logprob: -7.625617504119873
    3. '.' → logprob: -9.500617027282715
    4. '().' → logprob: -10.750617027282715
    5. '()`' → logprob: -11.750617027282715
    6. '```' → logprob: -12.000617027282715
    7. '()
' → logprob: -12.250617027282715
    8. ' ()' → logprob: -12.500617027282715
    9. '()

' → logprob: -13.125617027282715
    10. '();' → logprob: -13.500617027282715


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 46.67%
Précision adaptée (1ère position): 47.62%
Précision (top 10): 84.76%
================================================================================
