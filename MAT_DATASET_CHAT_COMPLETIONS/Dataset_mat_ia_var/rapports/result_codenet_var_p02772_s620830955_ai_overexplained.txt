================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un entier, puis convertit la chaîne de caractères saisie en entier avec la fonction int().
N = int(input())

# Demande à l'utilisateur de saisir plusieurs entiers séparés par des espaces sur une ligne.
# La fonction input() lit la saisie utilisateur sous forme de chaîne de caractères.
# La méthode split() découpe cette chaîne de caractères en une liste de sous-chaînes selon les espaces.
# La fonction map(int, ...) applique la fonction int() à chaque sous-chaîne pour convertir chaque élément en entier.
# Les résultats sont ensuite transformés en liste entière à l'aide de list().
A = list(map(int, input().split()))

# Initialise une variable flag dont la valeur servira à indiquer si un nombre ne respecte pas la condition.
# Initialement, aucune violation n'a été trouvée, donc flag est 0.
flag = 0

# Parcourt chaque élément 'i' de la liste A à l'aide d'une boucle for.
for i in A:
    # Vérifie si 'i' est divisible par 2, c'est-à-dire si c'est un nombre pair.
    # L'opérateur % calcule le reste de la division de i par 2.
    # Si le reste est 0, alors i est pair.
    if i % 2 == 0:
        # Si 'i' est pair, on s'assure qu'il est divisible soit par 3, soit par 5.
        # On vérifie d'abord qu'il N'EST PAS divisible par 5 en vérifiant que i % 5 != 0.
        # Similairement, on vérifie qu'il N'EST PAS divisible par 3 avec i % 3 != 0.
        # Si les deux conditions sont vraies, alors le nombre pair ne satisfait pas la règle.
        if i % 5 != 0 and i % 3 != 0:
            # On signale que la règle n'est pas respectée en positionnant flag à 1.
            flag = 1
            # On quitte la boucle for immédiatement car il n'est pas nécessaire de vérifier la suite.
            break

# Après la boucle, on vérifie la valeur de flag pour décider du message à afficher.
if flag == 0:
    # Cela signifie que tous les nombres pairs étaient divisibles par 3 ou par 5.
    print('APPROVED')
else:
    # flag est égal à 1, ce qui veut dire qu'au moins un nombre pair ne respecte pas la condition.
    print('DENIED')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6452889442443848
    2. ' de' → logprob: -2.0202889442443848
    3. 's' → logprob: -2.3952889442443848
    4. '_' → logprob: -2.5202889442443848
    5. ' ' → logprob: -3.0202889442443848
    6. ' =' → logprob: -3.0202889442443848
    7. '=' → logprob: -3.6452889442443848
    8. ' :' → logprob: -3.8952889442443848
    9. '#' → logprob: -5.270288944244385
    10. '```' → logprob: -5.645288944244385

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00851953960955143
    2. ' l' → logprob: -5.008519649505615
    3. 'util' → logprob: -7.133519649505615
    4. 'user' → logprob: -7.633519649505615
    5. '#' → logprob: -8.508519172668457
    6. ''' → logprob: -10.383519172668457
    7. '```' → logprob: -10.383519172668457
    8. 'input' → logprob: -10.508519172668457
    9. 'la' → logprob: -10.633519172668457
    10. '`' → logprob: -10.758519172668457

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.050799041986465454
    2. 'util' → logprob: -3.9257991313934326
    3. 'u' → logprob: -4.9257988929748535
    4. ' utilisateur' → logprob: -4.9257988929748535
    5. '’utilisateur' → logprob: -4.9257988929748535
    6. ''' → logprob: -5.4257988929748535
    7. 'a' → logprob: -6.0507988929748535
    8. 'user' → logprob: -8.050799369812012
    9. ''user' → logprob: -8.175799369812012
    10. 'us' → logprob: -8.925799369812012

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.47921276092529297
    2. 'name' → logprob: -1.479212760925293
    3. 'user' → logprob: -2.479212760925293
    4. 'input' → logprob: -4.229212760925293
    5. 'print' → logprob: -4.729212760925293
    6. 's' → logprob: -4.979212760925293
    7. ' nom' → logprob: -5.104212760925293
    8. 'n' → logprob: -5.479212760925293
    9. 'username' → logprob: -5.729212760925293
    10. 'prenom' → logprob: -5.979212760925293

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009178404696285725
    2. ' saisir' → logprob: -5.634178638458252
    3. 'r' → logprob: -6.009178638458252
    4. 'entr' → logprob: -6.259178638458252
    5. '```' → logprob: -7.259178638458252
    6. 'sa' → logprob: -9.009178161621094
    7. '#' → logprob: -9.384178161621094
    8. ' entrer' → logprob: -10.384178161621094
    9. ' fournir' → logprob: -10.634178161621094
    10. 'contin' → logprob: -10.759178161621094

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08241520822048187
    2. 'e' → logprob: -4.3324151039123535
    3. ' espace' → logprob: -4.5824151039123535
    4. '_' → logprob: -4.8324151039123535
    5. 'texte' → logprob: -4.9574151039123535
    6. ' mot' → logprob: -5.0824151039123535
    7. 'es' → logprob: -5.3324151039123535
    8. 'é' → logprob: -5.7074151039123535
    9. '```' → logprob: -5.8324151039123535
    10. ' )' → logprob: -6.2074151039123535

Token 10: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05219637602567673
    2. 'x' → logprob: -3.4271962642669678
    3. 'i' → logprob: -4.677196502685547
    4. 'ent' → logprob: -5.677196502685547
    5. 'e' → logprob: -6.802196502685547
    6. '#' → logprob: -7.177196502685547
    7. 'nombre' → logprob: -7.177196502685547
    8. 'input' → logprob: -7.552196502685547
    9. '```' → logprob: -7.927196502685547
    10. 's' → logprob: -8.177196502685547

Token 11: ' puis' (ID: 18766)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5777207016944885
    2. ' ' → logprob: -1.3277206420898438
    3. 'x' → logprob: -3.8277206420898438
    4. 'a' → logprob: -4.077720642089844
    5. 's' → logprob: -4.077720642089844
    6. '```' → logprob: -4.202720642089844
    7. 'e' → logprob: -4.452720642089844
    8. ',' → logprob: -4.452720642089844
    9. 'input' → logprob: -4.577720642089844
    10. ' n' → logprob: -4.952720642089844

Token 12: ' convert' (ID: 8452)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.1660493165254593
    2. 'cal' → logprob: -2.7910492420196533
    3. 'calcul' → logprob: -4.041049480438232
    4. ' affiche' → logprob: -4.166049480438232
    5. 'effect' → logprob: -4.666049480438232
    6. 'l' → logprob: -5.041049480438232
    7. ' afficher' → logprob: -5.416049480438232
    8. 'print' → logprob: -5.541049480438232
    9. ' calc' → logprob: -5.791049480438232
    10. '#' → logprob: -5.791049480438232

Token 13: 'it' (ID: 278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022313041612505913
    2. 'it' → logprob: -4.397313117980957
    3. 'ir' → logprob: -5.272313117980957
    4. ' it' → logprob: -6.772313117980957
    5. 'r' → logprob: -7.272313117980957
    6. ' ' → logprob: -7.647313117980957
    7. 'issez' → logprob: -7.647313117980957
    8. ' i' → logprob: -7.897313117980957
    9. 'issant' → logprob: -8.022313117980957
    10. 'er' → logprob: -8.647313117980957

Token 14: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39149659872055054
    2. ' ' → logprob: -1.1414966583251953
    3. '```' → logprob: -6.641496658325195
    4. ' _' → logprob: -6.891496658325195
    5. '(' → logprob: -7.016496658325195
    6. ''' → logprob: -8.266496658325195
    7. '`' → logprob: -8.516496658325195
    8. ',' → logprob: -9.141496658325195
    9. ' ' → logprob: -9.891496658325195
    10. ' (' → logprob: -10.016496658325195

Token 15: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10287225991487503
    2. ' valeur' → logprob: -2.852872371673584
    3. ' chaîne' → logprob: -3.352872371673584
    4. ' chaine' → logprob: -6.477872371673584
    5. ' ' → logprob: -7.477872371673584
    6. 'chaine' → logprob: -7.477872371673584
    7. ' string' → logprob: -7.852872371673584
    8. 's' → logprob: -8.102871894836426
    9. '_' → logprob: -8.352871894836426
    10. '  ' → logprob: -8.602871894836426

Token 16: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2288894653320312
    2. ' ' → logprob: -1.3538894653320312
    3. ''' → logprob: -1.9788894653320312
    4. '```' → logprob: -2.1038894653320312
    5. '`' → logprob: -3.1038894653320312
    6. 'input' → logprob: -3.6038894653320312
    7. '.' → logprob: -3.9788894653320312
    8. '(' → logprob: -3.9788894653320312
    9. 'i' → logprob: -4.228889465332031
    10. '"' → logprob: -4.478889465332031

Token 17: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.06283297389745712
    2. ' caractères' → logprob: -2.812833070755005
    3. 'entrée' → logprob: -8.062832832336426
    4. 's' → logprob: -8.437832832336426
    5. ' caract' → logprob: -9.187832832336426
    6. ' caracteres' → logprob: -9.687832832336426
    7. 'texte' → logprob: -9.812832832336426
    8. ' caractère' → logprob: -10.062832832336426
    9. '#' → logprob: -10.687832832336426
    10. 'chaine' → logprob: -11.937832832336426

Token 18: ' sais' (ID: 30010)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3503950834274292
    2. ' ' → logprob: -1.6003950834274292
    3. 'i' → logprob: -2.1003952026367188
    4. '`' → logprob: -2.4753952026367188
    5. 'input' → logprob: -2.7253952026367188
    6. 'x' → logprob: -3.1003952026367188
    7. 'e' → logprob: -3.2253952026367188
    8. 'n' → logprob: -3.4753952026367188
    9. '_' → logprob: -3.6003952026367188
    10. 'int' → logprob: -4.100395202636719

Token 19: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1525108814239502
    2. 'ie' → logprob: -2.40251088142395
    3. 'sie' → logprob: -3.40251088142395
    4. 's' → logprob: -5.152510643005371
    5. 'i' → logprob: -5.152510643005371
    6. 'es' → logprob: -6.027510643005371
    7. 't' → logprob: -6.527510643005371
    8. ' e' → logprob: -6.902510643005371
    9. 'si' → logprob: -8.652510643005371
    10. ' ' → logprob: -8.777510643005371

Token 20: ' en' (ID: 469)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.7077800035476685
    2. ' ' → logprob: -1.9577800035476685
    3. 'input' → logprob: -2.082779884338379
    4. 'n' → logprob: -2.707779884338379
    5. ')' → logprob: -3.082779884338379
    6. 's' → logprob: -3.082779884338379
    7. 'int' → logprob: -3.207779884338379
    8. '_' → logprob: -3.207779884338379
    9. 'i' → logprob: -3.207779884338379
    10. 'x' → logprob: -3.207779884338379

Token 21: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6341473460197449
    2. 'un' → logprob: -1.5091474056243896
    3. ' ' → logprob: -2.6341474056243896
    4. ' entier' → logprob: -2.8841474056243896
    5. ' int' → logprob: -3.1341474056243896
    6. 'int' → logprob: -3.2591474056243896
    7. '```' → logprob: -5.0091471672058105
    8. 'ent' → logprob: -5.0091471672058105
    9. 'n' → logprob: -5.2591471672058105
    10. '_' → logprob: -5.5091471672058105

Token 22: ' avec' (ID: 3937)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14487002789974213
    2. 'x' → logprob: -2.6448700428009033
    3. '\n' → logprob: -3.7698700428009033
    4. 'i' → logprob: -4.144869804382324
    5. '\' → logprob: -5.144869804382324
    6. 'a' → logprob: -5.519869804382324
    7. 'e' → logprob: -5.644869804382324
    8. '```' → logprob: -5.644869804382324
    9. 'ent' → logprob: -6.644869804382324
    10. '`' → logprob: -6.644869804382324

Token 23: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45157769322395325
    2. ' int' → logprob: -1.3265776634216309
    3. ' la' → logprob: -2.576577663421631
    4. '```' → logprob: -4.451577663421631
    5. 'la' → logprob: -4.951577663421631
    6. '`' → logprob: -6.201577663421631
    7. '=int' → logprob: -8.701578140258789
    8. 'l' → logprob: -9.076578140258789
    9. ' ' → logprob: -9.201578140258789
    10. ' `' → logprob: -9.326578140258789

Token 24: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.1326824575662613
    2. ' function' → logprob: -2.6326825618743896
    3. 'fonction' → logprob: -3.7576825618743896
    4. ' int' → logprob: -4.2576823234558105
    5. 'int' → logprob: -5.5076823234558105
    6. ' conversion' → logprob: -6.1326823234558105
    7. ' input' → logprob: -6.8826823234558105
    8. ' fon' → logprob: -6.8826823234558105
    9. ' suite' → logprob: -7.2576823234558105
    10. ' fun' → logprob: -7.3826823234558105

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0210233926773071
    2. ' input' → logprob: -1.1460233926773071
    3. 'input' → logprob: -1.8960233926773071
    4. 'int' → logprob: -2.0210232734680176
    5. ' ' → logprob: -4.021023273468018
    6. ' `' → logprob: -4.771023273468018
    7. '`' → logprob: -5.896023273468018
    8. ' ' → logprob: -6.396023273468018
    9. '```' → logprob: -6.396023273468018
    10. '(' → logprob: -6.521023273468018

Token 26: '().
' (ID: 58434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09216947108507156
    2. 'n' → logprob: -3.3421695232391357
    3. 'i' → logprob: -3.8421695232391357
    4. 'x' → logprob: -4.842169284820557
    5. '\n' → logprob: -5.717169284820557
    6. 'e' → logprob: -5.967169284820557
    7. 'input' → logprob: -5.967169284820557
    8. 'a' → logprob: -5.967169284820557
    9. '\' → logprob: -6.217169284820557
    10. '()' → logprob: -6.342169284820557

Token 27: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08656203746795654
    2. 'x' → logprob: -3.336562156677246
    3. 'i' → logprob: -4.086562156677246
    4. 'e' → logprob: -4.711562156677246
    5. 'ent' → logprob: -4.836562156677246
    6. '#' → logprob: -5.586562156677246
    7. 'nombre' → logprob: -6.086562156677246
    8. 'a' → logprob: -6.711562156677246
    9. '```' → logprob: -6.711562156677246
    10. 'v' → logprob: -6.711562156677246

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1122956275939941
    2. 'e' → logprob: -1.8622956275939941
    3. 'b' → logprob: -1.9872956275939941
    4. ' =' → logprob: -2.362295627593994
    5. 'u' → logprob: -2.487295627593994
    6. 'a' → logprob: -2.487295627593994
    7. 'umber' → logprob: -3.362295627593994
    8. '_' → logprob: -3.612295627593994
    9. 'um' → logprob: -4.237295627593994
    10. 'ombre' → logprob: -4.612295627593994

Token 29: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16707809269428253
    2. 'int' → logprob: -1.9170781373977661
    3. ' input' → logprob: -5.167078018188477
    4. 'input' → logprob: -6.792078018188477
    5. ' ' → logprob: -12.792078018188477
    6. '=int' → logprob: -13.042078018188477
    7. ' ' → logprob: -14.792078018188477
    8. '10' → logprob: -15.292078018188477
    9. '0' → logprob: -15.292078018188477
    10. '<int' → logprob: -15.542078018188477

Token 30: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5760502219200134
    2. '(' → logprob: -0.8260502219200134
    3. '('' → logprob: -9.7010498046875
    4. '(
' → logprob: -11.3260498046875
    5. ' (' → logprob: -11.3260498046875
    6. 'input' → logprob: -11.7010498046875
    7. '()' → logprob: -12.0760498046875
    8. '(user' → logprob: -12.7010498046875
    9. '("("' → logprob: -12.8260498046875
    10. '(

' → logprob: -13.7010498046875

Token 31: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016599642112851143
    2. '('' → logprob: -5.016599655151367
    3. '("("' → logprob: -5.266599655151367
    4. '()' → logprob: -5.516599655151367
    5. '("")' → logprob: -8.641599655151367
    6. '(""))' → logprob: -8.766599655151367
    7. '("' → logprob: -8.766599655151367
    8. '())' → logprob: -9.891599655151367
    9. '(()' → logprob: -9.891599655151367
    10. '(
' → logprob: -11.016599655151367

Token 32: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1387871503829956
    2. '()' → logprob: -2.888787269592285
    3. '+' → logprob: -4.013787269592285
    4. '*' → logprob: -4.013787269592285
    5. '(
' → logprob: -4.513787269592285
    6. ')' → logprob: -4.638787269592285
    7. '#' → logprob: -5.513787269592285
    8. '```' → logprob: -6.138787269592285
    9. 'if' → logprob: -6.263787269592285
    10. '+
' → logprob: -6.888787269592285

Token 33: ' Dem' (ID: 9458)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2211385816335678
    2. ' print' → logprob: -2.2211384773254395
    3. 'if' → logprob: -3.5961384773254395
    4. 'print' → logprob: -4.2211384773254395
    5. ' Si' → logprob: -4.2211384773254395
    6. 'Si' → logprob: -5.0961384773254395
    7. ' Aff' → logprob: -5.3461384773254395
    8. 'Aff' → logprob: -5.4711384773254395
    9. ' Calcul' → logprob: -5.5961384773254395
    10. '#' → logprob: -5.7211384773254395

Token 34: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.04185080528259277
    2. 'and' → logprob: -3.9168508052825928
    3. 'e' → logprob: -5.291851043701172
    4. 'andez' → logprob: -5.541851043701172
    5. 'a' → logprob: -5.666851043701172
    6. 'ander' → logprob: -6.041851043701172
    7. '#' → logprob: -6.291851043701172
    8. 'ade' → logprob: -6.291851043701172
    9. 'if' → logprob: -7.291851043701172
    10. 'andre' → logprob: -7.666851043701172

Token 35: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0218217596411705
    2. 'à' → logprob: -4.521821975708008
    3. '()' → logprob: -5.271821975708008
    4. ' ' → logprob: -6.146821975708008
    5. '(' → logprob: -7.521821975708008
    6. ' une' → logprob: -7.771821975708008
    7. 'au' → logprob: -8.271821975708008
    8. '("' → logprob: -8.271821975708008
    9. 'a' → logprob: -8.521821975708008
    10. ' un' → logprob: -8.771821975708008

Token 36: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3989165127277374
    2. 'l' → logprob: -1.148916482925415
    3. ' ' → logprob: -5.648916721343994
    4. 'une' → logprob: -6.148916721343994
    5. ' une' → logprob: -6.773916721343994
    6. 'user' → logprob: -7.273916721343994
    7. ' un' → logprob: -7.398916721343994
    8. ' la' → logprob: -7.523916721343994
    9. ' ' → logprob: -7.773916721343994
    10. ' user' → logprob: -8.023916244506836

Token 37: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.019478214904665947
    2. '’utilisateur' → logprob: -4.8944783210754395
    3. 'a' → logprob: -5.2694783210754395
    4. 'e' → logprob: -5.6444783210754395
    5. ' utilisateur' → logprob: -7.1444783210754395
    6. ''' → logprob: -7.8944783210754395
    7. 'user' → logprob: -8.269477844238281
    8. ''util' → logprob: -8.394477844238281
    9. ''user' → logprob: -8.519477844238281
    10. 'u' → logprob: -8.519477844238281

Token 38: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24628546833992004
    2. 'de' → logprob: -2.2462854385375977
    3. '()' → logprob: -3.7462854385375977
    4. ' d' → logprob: -3.9962854385375977
    5. ' à' → logprob: -4.121285438537598
    6. ' une' → logprob: -4.621285438537598
    7. '  ' → logprob: -4.746285438537598
    8. 'd' → logprob: -5.246285438537598
    9. ' ' → logprob: -5.246285438537598
    10. ' ' → logprob: -5.621285438537598

Token 39: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.02504882961511612
    2. 's' → logprob: -3.7750487327575684
    3. ' continuer' → logprob: -7.900048732757568
    4. 'r' → logprob: -8.025049209594727
    5. ' afficher' → logprob: -8.525049209594727
    6. 'aff' → logprob: -8.525049209594727
    7. ' calcul' → logprob: -8.900049209594727
    8. ' entrer' → logprob: -9.150049209594727
    9. ' sais' → logprob: -9.525049209594727
    10. 'l' → logprob: -9.775049209594727

Token 40: ' plusieurs' (ID: 20875)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.44302356243133545
    2. ' ' → logprob: -1.0680235624313354
    3. ' une' → logprob: -5.318023681640625
    4. 'un' → logprob: -5.443023681640625
    5. '()' → logprob: -6.693023681640625
    6. '(' → logprob: -6.943023681640625
    7. '  ' → logprob: -6.943023681640625
    8. ' ' → logprob: -7.818023681640625
    9. 'une' → logprob: -8.193023681640625
    10. 'l' → logprob: -8.818023681640625

Token 41: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.2919917404651642
    2. ' espaces' → logprob: -2.416991710662842
    3. 'ent' → logprob: -2.541991710662842
    4. 's' → logprob: -3.916991710662842
    5. ' ' → logprob: -4.166991710662842
    6. ' chaînes' → logprob: -4.666991710662842
    7. '()' → logprob: -4.916991710662842
    8. ' lignes' → logprob: -5.166991710662842
    9. ' integers' → logprob: -5.291991710662842
    10. '_' → logprob: -6.041991710662842

Token 42: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00010092071170220152
    2. 'i' → logprob: -9.500101089477539
    3. 'ières' → logprob: -10.625101089477539
    4. ' i' → logprob: -14.500101089477539
    5. '```' → logprob: -14.750101089477539
    6. 'ers' → logprob: -15.500101089477539
    7. 'riers' → logprob: -16.37510108947754
    8. 'ires' → logprob: -16.37510108947754
    9. 'ier' → logprob: -16.37510108947754
    10. 'ière' → logprob: -16.50010108947754

Token 43: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34716472029685974
    2. '(' → logprob: -1.7221647500991821
    3. '()' → logprob: -2.2221646308898926
    4. '(
' → logprob: -5.972164630889893
    5. '_' → logprob: -7.472164630889893
    6. '_s' → logprob: -7.847164630889893
    7. 'for' → logprob: -8.34716510772705
    8. '(n' → logprob: -8.34716510772705
    9. '[' → logprob: -8.47216510772705
    10. '('' → logprob: -8.59716510772705

Token 44: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.031631745398044586
    2. 'é' → logprob: -3.5316317081451416
    3. 'es' → logprob: -7.156631946563721
    4. 's' → logprob: -8.031631469726562
    5. 'par' → logprob: -8.281631469726562
    6. 'e' → logprob: -8.531631469726562
    7. ' par' → logprob: -9.031631469726562
    8. 'ément' → logprob: -10.531631469726562
    9. '```' → logprob: -10.656631469726562
    10. 'ée' → logprob: -10.781631469726562

Token 45: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03228443115949631
    2. 'par' → logprob: -3.9072844982147217
    3. '()' → logprob: -5.032284259796143
    4. 's' → logprob: -6.157284259796143
    5. 'es' → logprob: -7.032284259796143
    6. '('' → logprob: -7.282284259796143
    7. '(' → logprob: -8.2822847366333
    8. ' espaces' → logprob: -8.9072847366333
    9. ' by' → logprob: -9.0322847366333
    10. 'space' → logprob: -9.4072847366333

Token 46: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5683910250663757
    2. 'des' → logprob: -1.5683910846710205
    3. 'es' → logprob: -2.4433910846710205
    4. 'un' → logprob: -2.9433910846710205
    5. ' espaces' → logprob: -3.3183910846710205
    6. ' espace' → logprob: -4.443390846252441
    7. ' un' → logprob: -4.693390846252441
    8. ''espace' → logprob: -4.818390846252441
    9. 'esp' → logprob: -5.193390846252441
    10. 'spaces' → logprob: -6.068390846252441

Token 47: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.3021501302719116
    2. 'esp' → logprob: -1.4271501302719116
    3. 'es' → logprob: -4.427150249481201
    4. ''esp' → logprob: -6.052150249481201
    5. ' espace' → logprob: -6.052150249481201
    6. 'spaces' → logprob: -6.177150249481201
    7. ''espace' → logprob: -7.427150249481201
    8. ' ' → logprob: -7.677150249481201
    9. 'space' → logprob: -8.302149772644043
    10. 'paces' → logprob: -9.052149772644043

Token 48: ' sur' (ID: 1512)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1323612928390503
    2. ' s' → logprob: -2.63236141204834
    3. 'n' → logprob: -3.88236141204834
    4. 'ent' → logprob: -4.63236141204834
    5. 'values' → logprob: -5.00736141204834
    6. ' N' → logprob: -5.63236141204834
    7. 'N' → logprob: -5.75736141204834
    8. ' values' → logprob: -6.75736141204834
    9. ' n' → logprob: -6.88236141204834
    10. 'numbers' → logprob: -6.88236141204834

Token 49: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09226849675178528
    2. ' la' → logprob: -2.717268466949463
    3. 'une' → logprob: -4.092268466949463
    4. 'la' → logprob: -5.967268466949463
    5. ' ' → logprob: -6.342268466949463
    6. ' ' → logprob: -7.092268466949463
    7. ''une' → logprob: -9.342268943786621
    8. '  ' → logprob: -10.592268943786621
    9. '```' → logprob: -10.717268943786621
    10. '   ' → logprob: -11.217268943786621

Token 50: ' ligne' (ID: 19583)
  Prédit: ' seule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.04656200110912323
    2. 'se' → logprob: -3.5465619564056396
    3. 'ligne' → logprob: -4.796562194824219
    4. ' même' → logprob: -5.796562194824219
    5. ' ligne' → logprob: -5.921562194824219
    6. ' ' → logprob: -7.296562194824219
    7. ' unique' → logprob: -7.421562194824219
    8. ' seul' → logprob: -7.546562194824219
    9. ' single' → logprob: -8.171562194824219
    10. 'single' → logprob: -8.421562194824219

Token 51: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07466509938240051
    2. ' s' → logprob: -3.574665069580078
    3. 'ent' → logprob: -4.199665069580078
    4. 'n' → logprob: -4.949665069580078
    5. ' N' → logprob: -5.324665069580078
    6. 'values' → logprob: -5.449665069580078
    7. 'N' → logprob: -5.574665069580078
    8. ' ent' → logprob: -6.199665069580078
    9. 'numbers' → logprob: -6.949665069580078
    10. 'inputs' → logprob: -7.199665069580078

Token 52: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2917791604995728
    2. 'numbers' → logprob: -1.5417791604995728
    3. 'ent' → logprob: -1.7917791604995728
    4. ' numbers' → logprob: -2.166779041290283
    5. 'values' → logprob: -2.916779041290283
    6. 'n' → logprob: -3.041779041290283
    7. ' ent' → logprob: -3.291779041290283
    8. ' values' → logprob: -3.541779041290283
    9. ' s' → logprob: -4.666779041290283
    10. ' integers' → logprob: -4.791779041290283

Token 53: ' La' (ID: 3038)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.2543818950653076
    2. 'ent' → logprob: -1.5043818950653076
    3. 'values' → logprob: -1.5043818950653076
    4. ' numbers' → logprob: -2.3793818950653076
    5. 'nums' → logprob: -2.7543818950653076
    6. ' values' → logprob: -3.3793818950653076
    7. 'vals' → logprob: -3.7543818950653076
    8. 'val' → logprob: -4.129382133483887
    9. ' valeurs' → logprob: -5.254382133483887
    10. 's' → logprob: -5.379382133483887

Token 54: ' fonction' (ID: 17610)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -1.4539318084716797
    2. 'ligne' → logprob: -1.5789318084716797
    3. 's' → logprob: -1.9539318084716797
    4. '#' → logprob: -2.4539318084716797
    5. ' suite' → logprob: -2.5789318084716797
    6. 'suite' → logprob: -2.9539318084716797
    7. 'chaine' → logprob: -3.0789318084716797
    8. 'l' → logprob: -3.2039318084716797
    9. 'val' → logprob: -3.9539318084716797
    10. ' lignes' → logprob: -4.70393180847168

Token 55: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3493066430091858
    2. 'input' → logprob: -1.224306583404541
    3. 'split' → logprob: -7.349306583404541
    4. ' split' → logprob: -9.2243070602417
    5. 's' → logprob: -10.4743070602417
    6. 'map' → logprob: -11.0993070602417
    7. ' map' → logprob: -11.2243070602417
    8. ' ' → logprob: -11.4743070602417
    9. '=input' → logprob: -11.5993070602417
    10. 'list' → logprob: -11.8493070602417

Token 56: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6332036852836609
    2. '()' → logprob: -0.7582036852836609
    3. 's' → logprob: -8.133203506469727
    4. '(' → logprob: -8.758203506469727
    5. '()
' → logprob: -9.883203506469727
    6. '()).' → logprob: -10.758203506469727
    7. '()

' → logprob: -11.008203506469727
    8. '())' → logprob: -11.258203506469727
    9. 'split' → logprob: -11.508203506469727
    10. ')' → logprob: -12.008203506469727

Token 57: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1370541751384735
    2. '().' → logprob: -2.137054204940796
    3. 's' → logprob: -5.137053966522217
    4. 'split' → logprob: -6.762053966522217
    5. '(' → logprob: -7.387053966522217
    6. 'spl' → logprob: -8.012054443359375
    7. '_split' → logprob: -8.012054443359375
    8. '_s' → logprob: -8.262054443359375
    9. '.split' → logprob: -9.012054443359375
    10. ' ()' → logprob: -9.387054443359375

Token 58: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2013683170080185
    2. '()' → logprob: -2.7013683319091797
    3. ' une' → logprob: -2.7013683319091797
    4. ' l' → logprob: -3.9513683319091797
    5. 'la' → logprob: -4.45136833190918
    6. 'l' → logprob: -5.07636833190918
    7. ' ' → logprob: -5.70136833190918
    8. ' ' → logprob: -6.07636833190918
    9. 'une' → logprob: -6.20136833190918
    10. 's' → logprob: -7.57636833190918

Token 59: ' sais' (ID: 30010)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.074671983718872
    2. ' chaîne' → logprob: -1.574671983718872
    3. 'cha' → logprob: -1.824671983718872
    4. ' ligne' → logprob: -1.824671983718872
    5. 'chaine' → logprob: -2.324671983718872
    6. 'l' → logprob: -3.949671983718872
    7. 's' → logprob: -5.324671745300293
    8. 'entrée' → logprob: -5.824671745300293
    9. ' chaine' → logprob: -6.824671745300293
    10. 'ent' → logprob: -7.074671745300293

Token 60: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8404178619384766
    2. 'sie' → logprob: -0.8404178619384766
    3. 'ie' → logprob: -2.5904178619384766
    4. 's' → logprob: -2.8404178619384766
    5. 'ss' → logprob: -6.090417861938477
    6. 'es' → logprob: -7.715417861938477
    7. 't' → logprob: -8.715417861938477
    8. 'se' → logprob: -9.465417861938477
    9. 'si' → logprob: -9.715417861938477
    10. 'rie' → logprob: -9.965417861938477

Token 61: ' utilisateur' (ID: 115595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03253798559308052
    2. '().' → logprob: -4.157537937164307
    3. ',' → logprob: -5.157537937164307
    4. 'e' → logprob: -5.907537937164307
    5. '()
' → logprob: -6.157537937164307
    6. 's' → logprob: -7.032537937164307
    7. ' ' → logprob: -7.532537937164307
    8. '.' → logprob: -7.657537937164307
    9. ' ()' → logprob: -7.782537937164307
    10. ' )' → logprob: -7.907537937164307

Token 62: ' sous' (ID: 14487)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20067360997200012
    2. '()' → logprob: -2.4506735801696777
    3. ',' → logprob: -2.9506735801696777
    4. '.' → logprob: -3.3256735801696777
    5. 's' → logprob: -6.200673580169678
    6. ' .' → logprob: -6.575673580169678
    7. '.split' → logprob: -6.700673580169678
    8. ' ,' → logprob: -7.325673580169678
    9. '()
' → logprob: -7.950673580169678
    10. '(),' → logprob: -7.950673580169678

Token 63: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.003877627197653055
    2. 'forme' → logprob: -6.253877639770508
    3. ' la' → logprob: -7.378877639770508
    4. 'la' → logprob: -8.128877639770508
    5. 'chaine' → logprob: -8.128877639770508
    6. ' une' → logprob: -8.378877639770508
    7. ' form' → logprob: -9.253877639770508
    8. ' ' → logprob: -9.378877639770508
    9. ' ' → logprob: -9.503877639770508
    10. 'ent' → logprob: -10.003877639770508

Token 64: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02460681088268757
    2. ' de' → logprob: -3.774606704711914
    3. 'd' → logprob: -6.649606704711914
    4. 'de' → logprob: -9.774606704711914
    5. 's' → logprob: -13.024606704711914
    6. ' a' → logprob: -13.149606704711914
    7. ' s' → logprob: -14.274606704711914
    8. ' ' → logprob: -14.524606704711914
    9. ' ' → logprob: -14.899606704711914
    10. ' of' → logprob: -15.274606704711914

Token 65: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.280357301235199
    2. 'chaine' → logprob: -1.5303573608398438
    3. ' chaine' → logprob: -4.155357360839844
    4. 'cha' → logprob: -4.655357360839844
    5. ' chaînes' → logprob: -6.905357360839844
    6. ' string' → logprob: -7.155357360839844
    7. 'string' → logprob: -8.280357360839844
    8. ' cha' → logprob: -8.405357360839844
    9. 's' → logprob: -8.780357360839844
    10. 'str' → logprob: -9.405357360839844

Token 66: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09791053831577301
    2. 'de' → logprob: -2.4729106426239014
    3. 's' → logprob: -5.222910404205322
    4. ',' → logprob: -6.597910404205322
    5. ' s' → logprob: -7.347910404205322
    6. ' ,' → logprob: -7.597910404205322
    7. ' ' → logprob: -8.59791088104248
    8. ' puis' → logprob: -8.97291088104248
    9. 'split' → logprob: -9.09791088104248
    10. 'spl' → logprob: -9.47291088104248

Token 67: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.25267305970191956
    2. ' caractères' → logprob: -1.5026730298995972
    3. 'texte' → logprob: -8.377673149108887
    4. ' caract' → logprob: -9.252673149108887
    5. 'chaine' → logprob: -9.502673149108887
    6. 'c' → logprob: -9.627673149108887
    7. ' caractère' → logprob: -9.752673149108887
    8. ' ' → logprob: -10.127673149108887
    9. ' caracteres' → logprob: -10.377673149108887
    10. 'cha' → logprob: -10.377673149108887

Token 68: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39629751443862915
    2. 's' → logprob: -1.3962974548339844
    3. ' ,' → logprob: -2.8962974548339844
    4. 'split' → logprob: -5.271297454833984
    5. 'user' → logprob: -5.521297454833984
    6. '.split' → logprob: -5.771297454833984
    7. ' s' → logprob: -6.146297454833984
    8. 'tokens' → logprob: -6.396297454833984
    9. '#' → logprob: -6.896297454833984
    10. 'n' → logprob: -7.146297454833984

Token 69: '#' (ID: 2)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.3088139295578003
    2. 'numbers' → logprob: -1.3088139295578003
    3. 'values' → logprob: -2.18381404876709
    4. 's' → logprob: -2.18381404876709
    5. ' numbers' → logprob: -2.93381404876709
    6. 'n' → logprob: -3.05881404876709
    7. 'val' → logprob: -3.43381404876709
    8. ' ent' → logprob: -3.68381404876709
    9. 'nums' → logprob: -4.18381404876709
    10. ' values' → logprob: -4.30881404876709

Token 70: ' La' (ID: 3038)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0886342525482178
    2. 'values' → logprob: -1.3386342525482178
    3. 'numbers' → logprob: -1.5886342525482178
    4. 'val' → logprob: -3.3386342525482178
    5. ' numbers' → logprob: -3.7136342525482178
    6. 's' → logprob: -3.8386342525482178
    7. 'nums' → logprob: -3.8386342525482178
    8. ' values' → logprob: -4.213634490966797
    9. 'l' → logprob: -4.338634490966797
    10. 'vals' → logprob: -4.588634490966797

Token 71: ' méthode' (ID: 71490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2966952323913574
    2. 'chaine' → logprob: -2.0466952323913574
    3. 'split' → logprob: -2.9216952323913574
    4. '#' → logprob: -3.6716952323913574
    5. 'suite' → logprob: -4.421695232391357
    6. ' suite' → logprob: -5.546695232391357
    7. 'spl' → logprob: -5.671695232391357
    8. ' chaîne' → logprob: -5.671695232391357
    9. ' chaine' → logprob: -5.671695232391357
    10. ' ligne' → logprob: -5.796695232391357

Token 72: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.2815803289413452
    2. 'split' → logprob: -1.4065803289413452
    3. '.split' → logprob: -8.906579971313477
    4. 'strip' → logprob: -9.031579971313477
    5. ' strip' → logprob: -9.406579971313477
    6. ' .' → logprob: -10.656579971313477
    7. ' s' → logprob: -10.781579971313477
    8. 's' → logprob: -10.906579971313477
    9. ' spl' → logprob: -11.531579971313477
    10. 'spl' → logprob: -12.031579971313477

Token 73: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015403309371322393
    2. '(' → logprob: -7.126540184020996
    3. '('' → logprob: -7.501540184020996
    4. '("' → logprob: -9.126540184020996
    5. '().' → logprob: -10.251540184020996
    6. ' ()' → logprob: -11.626540184020996
    7. '("("' → logprob: -12.251540184020996
    8. '()]' → logprob: -12.501540184020996
    9. '（）' → logprob: -13.126540184020996
    10. '()

' → logprob: -13.251540184020996

Token 74: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.013635420240461826
    2. '('' → logprob: -4.763635635375977
    3. '(' → logprob: -5.763635635375977
    4. ' ()' → logprob: -6.888635635375977
    5. '("' → logprob: -7.763635635375977
    6. '().' → logprob: -8.638635635375977
    7. 'split' → logprob: -9.888635635375977
    8. '("")' → logprob: -10.263635635375977
    9. '(split' → logprob: -10.513635635375977
    10. '("""' → logprob: -11.013635635375977

Token 75: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.020068442448973656
    2. 'p' → logprob: -4.020068645477295
    3. 'page' → logprob: -7.520068645477295
    4. 'пе' → logprob: -8.145068168640137
    5. 'pé' → logprob: -8.395068168640137
    6. '```' → logprob: -9.145068168640137
    7. 'ppe' → logprob: -9.520068168640137
    8. 'pera' → logprob: -9.770068168640137
    9. 'per' → logprob: -10.020068168640137
    10. '``' → logprob: -10.145068168640137

Token 76: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03420642018318176
    2. '('' → logprob: -3.5342063903808594
    3. ' la' → logprob: -6.034206390380859
    4. '(' → logprob: -6.909206390380859
    5. 'la' → logprob: -7.659206390380859
    6. ' ()' → logprob: -8.78420639038086
    7. '("' → logprob: -9.28420639038086
    8. ''' → logprob: -9.78420639038086
    9. 'l' → logprob: -10.03420639038086
    10. ')' → logprob: -10.40920639038086

Token 77: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.03228709101676941
    2. 'cha' → logprob: -4.032287120819092
    3. 'chaine' → logprob: -4.532287120819092
    4. ' chaine' → logprob: -6.032287120819092
    5. ' ligne' → logprob: -8.407286643981934
    6. ' cha' → logprob: -8.782286643981934
    7. ' ' → logprob: -9.032286643981934
    8. 's' → logprob: -9.282286643981934
    9. 'ligne' → logprob: -9.657286643981934
    10. ' string' → logprob: -9.657286643981934

Token 78: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027026453986763954
    2. '('' → logprob: -5.027026653289795
    3. 's' → logprob: -5.277026653289795
    4. ' en' → logprob: -6.402026653289795
    5. '[]' → logprob: -6.527026653289795
    6. 'au' → logprob: -6.902026653289795
    7. ')' → logprob: -6.902026653289795
    8. 'de' → logprob: -7.277026653289795
    9. ' ()' → logprob: -7.277026653289795
    10. '```' → logprob: -7.402026653289795

Token 79: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.70997554063797
    2. ''' → logprob: -2.084975481033325
    3. ' '' → logprob: -2.459975481033325
    4. ' l' → logprob: -2.834975481033325
    5. 's' → logprob: -3.209975481033325
    6. ' espaces' → logprob: -3.709975481033325
    7. ' ' → logprob: -3.709975481033325
    8. 'car' → logprob: -3.709975481033325
    9. ' la' → logprob: -3.959975481033325
    10. ''espace' → logprob: -4.084975719451904

Token 80: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.036328479647636414
    2. '('' → logprob: -3.6613285541534424
    3. ''' → logprob: -5.411328315734863
    4. '(' → logprob: -5.536328315734863
    5. ' ()' → logprob: -7.036328315734863
    6. '("' → logprob: -8.661328315734863
    7. '[' → logprob: -9.661328315734863
    8. '"' → logprob: -9.786328315734863
    9. ' )' → logprob: -9.911328315734863
    10. '()[' → logprob: -10.286328315734863

Token 81: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5339841246604919
    2. ' un' → logprob: -2.1589841842651367
    3. ' ' → logprob: -2.4089841842651367
    4. ' des' → logprob: -2.5339841842651367
    5. ' u' → logprob: -3.6589841842651367
    6. ' []' → logprob: -4.408984184265137
    7. ' espaces' → logprob: -4.533984184265137
    8. 's' → logprob: -4.783984184265137
    9. ' ' → logprob: -4.908984184265137
    10. ' '' → logprob: -4.908984184265137

Token 82: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.11626634001731873
    2. ' ' → logprob: -2.8662662506103516
    3. 's' → logprob: -3.6162662506103516
    4. 'liste' → logprob: -4.741266250610352
    5. ' list' → logprob: -5.616266250610352
    6. ' ligne' → logprob: -5.991266250610352
    7. ' chaîne' → logprob: -5.991266250610352
    8. ' )' → logprob: -6.116266250610352
    9. ' listes' → logprob: -7.116266250610352
    10. ' s' → logprob: -7.366266250610352

Token 83: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0844944715499878
    2. ' de' → logprob: -1.7094944715499878
    3. '[' → logprob: -2.4594945907592773
    4. '()' → logprob: -2.8344945907592773
    5. 'de' → logprob: -2.9594945907592773
    6. 's' → logprob: -3.2094945907592773
    7. '<|end|>' → logprob: -3.2094945907592773
    8. '[]' → logprob: -3.3344945907592773
    9. ' des' → logprob: -3.4594945907592773
    10. ')' → logprob: -3.7094945907592773

Token 84: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.006964235566556454
    2. ' chain' → logprob: -6.256964206695557
    3. ' espaces' → logprob: -6.756964206695557
    4. 'cha' → logprob: -6.881964206695557
    5. ' strings' → logprob: -7.006964206695557
    6. 's' → logprob: -7.881964206695557
    7. 'chain' → logprob: -7.881964206695557
    8. ' chaîne' → logprob: -8.006964683532715
    9. 'strings' → logprob: -8.756964683532715
    10. ' ' → logprob: -9.381964683532715

Token 85: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.28247639536857605
    2. 'strings' → logprob: -2.5324764251708984
    3. 'chain' → logprob: -3.4074764251708984
    4. '-' → logprob: -3.5324764251708984
    5. 'cha' → logprob: -3.6574764251708984
    6. 'm' → logprob: -4.157476425170898
    7. '_' → logprob: -4.407476425170898
    8. '_m' → logprob: -5.032476425170898
    9. 'chaine' → logprob: -5.282476425170898
    10. 's' → logprob: -5.407476425170898

Token 86: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.2044680416584015
    2. 'î' → logprob: -1.704468011856079
    3. 'ines' → logprob: -6.704468250274658
    4. 'Î' → logprob: -7.454468250274658
    5. 'nes' → logprob: -7.829468250274658
    6. 'r' → logprob: -8.4544677734375
    7. 'ì' → logprob: -8.9544677734375
    8. 'îne' → logprob: -9.2044677734375
    9. 'în' → logprob: -9.4544677734375
    10. 'ï' → logprob: -9.4544677734375

Token 87: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7234514951705933
    2. ',' → logprob: -1.0984514951705933
    3. 's' → logprob: -2.848451614379883
    4. '```' → logprob: -3.723451614379883
    5. ')' → logprob: -3.973451614379883
    6. 'tokens' → logprob: -4.348451614379883
    7. '[' → logprob: -4.598451614379883
    8. '.' → logprob: -4.723451614379883
    9. ' ,' → logprob: -5.223451614379883
    10. '[]' → logprob: -5.348451614379883

Token 88: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0993991419672966
    2. ''' → logprob: -3.7243990898132324
    3. 'l' → logprob: -3.9743990898132324
    4. ' les' → logprob: -4.349399089813232
    5. ' ' → logprob: -4.724399089813232
    6. ' '' → logprob: -4.849399089813232
    7. ' espaces' → logprob: -4.974399089813232
    8. 's' → logprob: -5.724399089813232
    9. ''espace' → logprob: -6.474399089813232
    10. '<|end|>' → logprob: -6.599399089813232

Token 89: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.009529399685561657
    2. 'esp' → logprob: -5.0095295906066895
    3. ''esp' → logprob: -6.2595295906066895
    4. ' espace' → logprob: -8.134529113769531
    5. 'es' → logprob: -9.009529113769531
    6. ' ' → logprob: -9.009529113769531
    7. ''espace' → logprob: -9.259529113769531
    8. ' '' → logprob: -9.884529113769531
    9. ' esp' → logprob: -9.884529113769531
    10. ' espacios' → logprob: -10.259529113769531

Token 90: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2997379302978516
    2. ',' → logprob: -1.4247379302978516
    3. 'tokens' → logprob: -1.9247379302978516
    4. 's' → logprob: -2.0497379302978516
    5. ')' → logprob: -2.4247379302978516
    6. 'n' → logprob: -3.4247379302978516
    7. '()' → logprob: -3.7997379302978516
    8. '#' → logprob: -4.174737930297852
    9. '```' → logprob: -4.674737930297852
    10. ' )' → logprob: -5.299737930297852

Token 91: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1695995330810547
    2. 'n' → logprob: -1.1695995330810547
    3. 'numbers' → logprob: -1.9195995330810547
    4. 's' → logprob: -2.7945995330810547
    5. 'values' → logprob: -3.2945995330810547
    6. 'ent' → logprob: -3.6695995330810547
    7. ' numbers' → logprob: -3.9195995330810547
    8. ' N' → logprob: -4.044599533081055
    9. 'nums' → logprob: -4.294599533081055
    10. 'val' → logprob: -4.669599533081055

Token 92: ' La' (ID: 3038)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5968543291091919
    2. 'ent' → logprob: -1.471854329109192
    3. ' numbers' → logprob: -2.8468542098999023
    4. 'n' → logprob: -2.9718542098999023
    5. 'values' → logprob: -3.0968542098999023
    6. 'nums' → logprob: -3.7218542098999023
    7. 's' → logprob: -5.221854209899902
    8. ' ent' → logprob: -5.221854209899902
    9. 'val' → logprob: -5.346854209899902
    10. 'N' → logprob: -5.471854209899902

Token 93: ' fonction' (ID: 17610)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -1.5069559812545776
    2. 'liste' → logprob: -1.7569559812545776
    3. 'l' → logprob: -2.381956100463867
    4. ' lst' → logprob: -2.506956100463867
    5. 'lst' → logprob: -2.631956100463867
    6. 's' → logprob: -2.756956100463867
    7. 'n' → logprob: -3.006956100463867
    8. ' ent' → logprob: -3.631956100463867
    9. 'li' → logprob: -3.881956100463867
    10. 'val' → logprob: -3.881956100463867

Token 94: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16472630202770233
    2. ' list' → logprob: -1.9147262573242188
    3. 'map' → logprob: -5.539726257324219
    4. 'list' → logprob: -8.164726257324219
    5. ' l' → logprob: -9.039726257324219
    6. ' int' → logprob: -9.789726257324219
    7. ' li' → logprob: -10.789726257324219
    8. ' ' → logprob: -11.414726257324219
    9. ' lis' → logprob: -11.414726257324219
    10. ' lst' → logprob: -11.414726257324219

Token 95: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.46340814232826233
    2. '(' → logprob: -1.58840811252594
    3. '(lambda' → logprob: -1.83840811252594
    4. '()' → logprob: -5.83840799331665
    5. '(
' → logprob: -6.46340799331665
    6. '<int' → logprob: -6.58840799331665
    7. '<|end|>' → logprob: -7.58840799331665
    8. '(func' → logprob: -8.463408470153809
    9. '[int' → logprob: -8.713408470153809
    10. '(str' → logprob: -8.838408470153809

Token 96: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022484278306365013
    2. ',' → logprob: -3.897484302520752
    3. '(' → logprob: -7.897484302520752
    4. '(input' → logprob: -7.897484302520752
    5. '))' → logprob: -8.522483825683594
    6. '())' → logprob: -8.647483825683594
    7. ',input' → logprob: -8.647483825683594
    8. ',)' → logprob: -8.772483825683594
    9. ' )' → logprob: -9.022483825683594
    10. '(),' → logprob: -9.897483825683594

Token 97: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7047926783561707
    2. ' input' → logprob: -0.7047926783561707
    3. ')' → logprob: -4.579792499542236
    4. ' )' → logprob: -7.079792499542236
    5. '(input' → logprob: -8.329792976379395
    6. ',input' → logprob: -9.829792976379395
    7. '=input' → logprob: -10.204792976379395
    8. '<input' → logprob: -10.579792976379395
    9. '[input' → logprob: -10.829792976379395
    10. ' ' → logprob: -11.204792976379395

Token 98: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18683815002441406
    2. '(' → logprob: -2.061838150024414
    3. 'convert' → logprob: -4.061838150024414
    4. ' transforme' → logprob: -4.936838150024414
    5. ' )' → logprob: -5.311838150024414
    6. '(
' → logprob: -5.811838150024414
    7. '()' → logprob: -5.936838150024414
    8. ' permet' → logprob: -6.186838150024414
    9. '(convert' → logprob: -6.561838150024414
    10. ' convert' → logprob: -6.811838150024414

Token 99: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10049175471067429
    2. ' int' → logprob: -2.475491762161255
    3. '(int' → logprob: -4.975491523742676
    4. 'lambda' → logprob: -6.350491523742676
    5. '(lambda' → logprob: -6.850491523742676
    6. 'la' → logprob: -7.225491523742676
    7. ' la' → logprob: -7.975491523742676
    8. ' lambda' → logprob: -8.475491523742676
    9. ' ' → logprob: -8.975491523742676
    10. '[int' → logprob: -9.475491523742676

Token 100: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07819197326898575
    2. ' int' → logprob: -2.9531919956207275
    3. 'fonction' → logprob: -4.078191757202148
    4. ' fonction' → logprob: -5.328191757202148
    5. 'list' → logprob: -8.453191757202148
    6. 'lambda' → logprob: -8.578191757202148
    7. ' function' → logprob: -8.828191757202148
    8. ')' → logprob: -8.953191757202148
    9. 'function' → logprob: -9.328191757202148
    10. ' lambda' → logprob: -9.578191757202148

Token 101: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05987062305212021
    2. '(int' → logprob: -3.059870719909668
    3. ' int' → logprob: -4.559870719909668
    4. 'str' → logprob: -8.309870719909668
    5. ')' → logprob: -8.809870719909668
    6. '(' → logprob: -9.809870719909668
    7. '=int' → logprob: -9.809870719909668
    8. '[int' → logprob: -10.059870719909668
    9. '<int' → logprob: -10.184870719909668
    10. '(str' → logprob: -10.559870719909668

Token 102: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06641029566526413
    2. ')' → logprob: -3.3164103031158447
    3. '()' → logprob: -4.066410064697266
    4. '(lambda' → logprob: -4.941410064697266
    5. '(
' → logprob: -7.066410064697266
    6. '(list' → logprob: -7.316410064697266
    7. 's' → logprob: -7.691410064697266
    8. '(int' → logprob: -7.941410064697266
    9. '(...)' → logprob: -8.066410064697266
    10. '(

' → logprob: -8.066410064697266

Token 103: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31747689843177795
    2. ')' → logprob: -1.6924768686294556
    3. '(lambda' → logprob: -2.942476987838745
    4. '()' → logprob: -4.317476749420166
    5. 'sur' → logprob: -4.942476749420166
    6. '(
' → logprob: -5.317476749420166
    7. 'to' → logprob: -6.192476749420166
    8. '(int' → logprob: -6.817476749420166
    9. '```' → logprob: -6.942476749420166
    10. 'lambda' → logprob: -6.942476749420166

Token 104: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07364702224731445
    2. ' chacune' → logprob: -3.3236470222473145
    3. ' each' → logprob: -4.1986470222473145
    4. ' la' → logprob: -4.8236470222473145
    5. ' l' → logprob: -5.3236470222473145
    6. 'cha' → logprob: -6.0736470222473145
    7. 'la' → logprob: -7.0736470222473145
    8. 'l' → logprob: -7.0736470222473145
    9. 'each' → logprob: -7.3236470222473145
    10. ' cha' → logprob: -7.6986470222473145

Token 105: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.007071136496961117
    2. ' élément' → logprob: -5.007071018218994
    3. ')' → logprob: -9.382071495056152
    4. 'element' → logprob: -9.882071495056152
    5. 's' → logprob: -10.007071495056152
    6. ' ' → logprob: -10.507071495056152
    7. 'é' → logprob: -10.757071495056152
    8. 'elem' → logprob: -10.882071495056152
    9. ' chaîne' → logprob: -10.882071495056152
    10. 'chaine' → logprob: -11.382071495056152

Token 106: '-cha' (ID: 163177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.15880286693573
    2. '-' → logprob: -1.28380286693573
    3. 'chaine' → logprob: -1.28380286693573
    4. '-cha' → logprob: -3.0338029861450195
    5. ' chaîne' → logprob: -3.2838029861450195
    6. 'élé' → logprob: -3.7838029861450195
    7. '_str' → logprob: -5.5338029861450195
    8. 'cha' → logprob: -5.6588029861450195
    9. 'str' → logprob: -5.7838029861450195
    10. ')' → logprob: -5.9088029861450195

Token 107: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.6369456648826599
    2. 'î' → logprob: -0.7619456648826599
    3. 'înes' → logprob: -6.636945724487305
    4. 'Î' → logprob: -7.511945724487305
    5. 'ïne' → logprob: -7.761945724487305
    6. 'ine' → logprob: -7.886945724487305
    7. 'în' → logprob: -8.011945724487305
    8. 'ne' → logprob: -8.386945724487305
    9. 'ı' → logprob: -8.511945724487305
    10. 'ì' → logprob: -8.636945724487305

Token 108: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0023072957992554
    2. ' pour' → logprob: -1.0023072957992554
    3. 'pour' → logprob: -2.127307415008545
    4. 'de' → logprob: -2.377307415008545
    5. ',' → logprob: -4.127307415008545
    6. 'l' → logprob: -5.002307415008545
    7. ')' → logprob: -5.252307415008545
    8. 'du' → logprob: -5.377307415008545
    9. ' afin' → logprob: -5.502307415008545
    10. 's' → logprob: -5.752307415008545

Token 109: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.029319023713469505
    2. ' obtenir' → logprob: -4.529318809509277
    3. ' transformer' → logprob: -4.529318809509277
    4. ' les' → logprob: -6.154318809509277
    5. ' créer' → logprob: -6.279318809509277
    6. ' convert' → logprob: -6.279318809509277
    7. 'convert' → logprob: -7.029318809509277
    8. 'transform' → logprob: -8.154318809509277
    9. 'ob' → logprob: -9.029318809509277
    10. ' transform' → logprob: -10.654318809509277

Token 110: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9640234112739563
    2. ' la' → logprob: -0.9640234112739563
    3. ' les' → logprob: -2.0890233516693115
    4. ' chaque' → logprob: -3.2140233516693115
    5. ' )' → logprob: -3.5890233516693115
    6. 'es' → logprob: -4.339023590087891
    7. ' ' → logprob: -4.839023590087891
    8. 's' → logprob: -5.214023590087891
    9. 'e' → logprob: -5.964023590087891
    10. '(' → logprob: -6.089023590087891

Token 111: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0643281564116478
    2. ' élément' → logprob: -2.814328193664551
    3. ' ' → logprob: -6.814328193664551
    4. ' él' → logprob: -7.939328193664551
    5. ' element' → logprob: -8.31432819366455
    6. 'element' → logprob: -8.81432819366455
    7. ' éléments' → logprob: -9.43932819366455
    8. ' )' → logprob: -9.81432819366455
    9. ' chaîne' → logprob: -10.06432819366455
    10. ')' → logprob: -10.06432819366455

Token 112: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.044687420129776
    2. ' de' → logprob: -3.419687509536743
    3. 'en' → logprob: -4.544687271118164
    4. 'de' → logprob: -8.669687271118164
    5. ',' → logprob: -9.919687271118164
    6. ')' → logprob: -10.044687271118164
    7. ' ' → logprob: -10.919687271118164
    8. ' )' → logprob: -11.419687271118164
    9. ' in' → logprob: -11.544687271118164
    10. ' into' → logprob: -11.669687271118164

Token 113: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.4711199998855591
    2. 'ent' → logprob: -1.346119999885559
    3. ' ent' → logprob: -3.0961198806762695
    4. ' int' → logprob: -3.3461198806762695
    5. ' un' → logprob: -3.8461198806762695
    6. 'int' → logprob: -4.5961198806762695
    7. ' des' → logprob: -6.5961198806762695
    8. ' ' → logprob: -7.2211198806762695
    9. ' integer' → logprob: -8.09611988067627
    10. 'un' → logprob: -8.59611988067627

Token 114: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15139445662498474
    2. ')' → logprob: -2.5263943672180176
    3. ',' → logprob: -3.7763943672180176
    4. 'n' → logprob: -4.401394367218018
    5. '.' → logprob: -4.901394367218018
    6. 'N' → logprob: -5.401394367218018
    7. '(' → logprob: -5.776394367218018
    8. ' )' → logprob: -6.276394367218018
    9. 'values' → logprob: -6.651394367218018
    10. 'x' → logprob: -6.776394367218018

Token 115: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1653333902359009
    2. 'N' → logprob: -1.2903333902359009
    3. 's' → logprob: -2.1653332710266113
    4. 'numbers' → logprob: -2.7903332710266113
    5. 'a' → logprob: -3.1653332710266113
    6. 'values' → logprob: -3.2903332710266113
    7. 'ent' → logprob: -3.6653332710266113
    8. 'val' → logprob: -3.7903332710266113
    9. ' N' → logprob: -3.7903332710266113
    10. 'nums' → logprob: -4.415333271026611

Token 116: ' Les' (ID: 7029)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6827592253684998
    2. 'values' → logprob: -1.4327592849731445
    3. 'ent' → logprob: -2.0577592849731445
    4. 'nums' → logprob: -2.5577592849731445
    5. 'val' → logprob: -4.3077592849731445
    6. ' numbers' → logprob: -4.4327592849731445
    7. 'vals' → logprob: -4.8077592849731445
    8. 'lst' → logprob: -5.3077592849731445
    9. ' values' → logprob: -6.5577592849731445
    10. 'ints' → logprob: -6.6827592849731445

Token 117: ' résultats' (ID: 48985)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4996832311153412
    2. ' ent' → logprob: -1.8746832609176636
    3. 'n' → logprob: -2.374683141708374
    4. 'val' → logprob: -2.749683141708374
    5. ' nombres' → logprob: -3.749683141708374
    6. 'result' → logprob: -4.624683380126953
    7. ' valeurs' → logprob: -4.874683380126953
    8. 'lst' → logprob: -5.124683380126953
    9. 'liste' → logprob: -5.124683380126953
    10. ' N' → logprob: -5.374683380126953

Token 118: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3695904016494751
    2. ' =' → logprob: -1.619590401649475
    3. ' sont' → logprob: -2.4945902824401855
    4. '=' → logprob: -4.3695902824401855
    5. ' ' → logprob: -5.1195902824401855
    6. '_' → logprob: -6.1195902824401855
    7. ')' → logprob: -6.2445902824401855
    8. 'ent' → logprob: -6.7445902824401855
    9. '_list' → logprob: -7.7445902824401855
    10. ' are' → logprob: -7.9945902824401855

Token 119: ' ensuite' (ID: 39713)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.8198208212852478
    2. ' ensuite' → logprob: -0.9448208212852478
    3. ' convert' → logprob: -2.8198208808898926
    4. ' plac' → logprob: -3.1948208808898926
    5. 'r' → logprob: -4.319820880889893
    6. 'stock' → logprob: -4.819820880889893
    7. 's' → logprob: -4.819820880889893
    8. ' r' → logprob: -5.194820880889893
    9. ' transform' → logprob: -5.194820880889893
    10. ' mis' → logprob: -5.444820880889893

Token 120: ' transform' (ID: 7118)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7035343647003174
    2. ' convert' → logprob: -1.8285343647003174
    3. ' plac' → logprob: -2.0785343647003174
    4. 'convert' → logprob: -2.7035343647003174
    5. 'stock' → logprob: -2.7035343647003174
    6. 'transform' → logprob: -3.8285343647003174
    7. ' transform' → logprob: -4.203534126281738
    8. 'r' → logprob: -4.328534126281738
    9. 'plac' → logprob: -4.578534126281738
    10. ' r' → logprob: -5.828534126281738

Token 121: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.013074703514575958
    2. 'é' → logprob: -4.51307487487793
    3. 'ées' → logprob: -6.63807487487793
    4. 'ée' → logprob: -7.26307487487793
    5. 'ès' → logprob: -11.88807487487793
    6. 'es' → logprob: -12.38807487487793
    7. 's' → logprob: -14.51307487487793
    8. 'e' → logprob: -14.88807487487793
    9. 'ÉS' → logprob: -15.26307487487793
    10. 'ä' → logprob: -15.38807487487793

Token 122: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0017344404477626085
    2. 'en' → logprob: -6.376734256744385
    3. 'e' → logprob: -11.626734733581543
    4. ' ' → logprob: -12.001734733581543
    5. ' into' → logprob: -12.501734733581543
    6. 's' → logprob: -12.501734733581543
    7. ' ' → logprob: -13.126734733581543
    8. ' in' → logprob: -13.251734733581543
    9. ' e' → logprob: -13.376734733581543
    10. ' list' → logprob: -13.876734733581543

Token 123: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.49777427315711975
    2. ' une' → logprob: -1.3727742433547974
    3. 'liste' → logprob: -2.622774362564087
    4. 'une' → logprob: -3.247774362564087
    5. 'list' → logprob: -3.872774362564087
    6. ' list' → logprob: -5.122774124145508
    7. ' listes' → logprob: -8.747774124145508
    8. ' un' → logprob: -9.622774124145508
    9. ' a' → logprob: -10.372774124145508
    10. 'un' → logprob: -10.497774124145508

Token 124: ' entière' (ID: 61583)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43238478899002075
    2. '()' → logprob: -1.807384729385376
    3. 's' → logprob: -1.807384729385376
    4. '(
' → logprob: -4.307384967803955
    5. '_' → logprob: -6.682384967803955
    6. ',' → logprob: -6.807384967803955
    7. '(numbers' → logprob: -7.057384967803955
    8. 'l' → logprob: -7.307384967803955
    9. '(s' → logprob: -7.432384967803955
    10. 'N' → logprob: -7.557384967803955

Token 125: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02627800777554512
    2. '()' → logprob: -4.026278018951416
    3. '(' → logprob: -5.151278018951416
    4. '(s' → logprob: -7.276278018951416
    5. '(
' → logprob: -7.276278018951416
    6. '_' → logprob: -9.151277542114258
    7. 'es' → logprob: -9.151277542114258
    8. ',' → logprob: -9.151277542114258
    9. ')' → logprob: -9.401277542114258
    10. '()
' → logprob: -9.526277542114258

Token 126: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2693414688110352
    2. ' list' → logprob: -1.6443414688110352
    3. ' ' → logprob: -1.8943414688110352
    4. ' liste' → logprob: -2.519341468811035
    5. 's' → logprob: -2.644341468811035
    6. 'liste' → logprob: -2.894341468811035
    7. 'l' → logprob: -3.144341468811035
    8. 'list' → logprob: -3.644341468811035
    9. 'lst' → logprob: -4.269341468811035
    10. 'n' → logprob: -4.894341468811035

Token 127: ''aide' (ID: 75684)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.380556583404541
    2. 'iste' → logprob: -1.255556583404541
    3. 'ister' → logprob: -4.380556583404541
    4. 'isting' → logprob: -5.005556583404541
    5. 'st' → logprob: -5.755556583404541
    6. 'ists' → logprob: -6.380556583404541
    7. 'isten' → logprob: -6.505556583404541
    8. 'liste' → logprob: -6.880556583404541
    9. 'e' → logprob: -7.005556583404541
    10. 'is' → logprob: -7.380556583404541

Token 128: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005303720012307167
    2. '(list' → logprob: -6.130303859710693
    3. '(
' → logprob: -6.880303859710693
    4. '(int' → logprob: -7.005303859710693
    5. 'list' → logprob: -8.255303382873535
    6. 's' → logprob: -8.380303382873535
    7. ' list' → logprob: -8.630303382873535
    8. '()' → logprob: -9.005303382873535
    9. ')' → logprob: -9.255303382873535
    10. ' de' → logprob: -9.505303382873535

Token 129: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.24678118526935577
    2. ' list' → logprob: -1.6217812299728394
    3. ' la' → logprob: -3.99678111076355
    4. 'la' → logprob: -6.996781349182129
    5. 'l' → logprob: -7.371781349182129
    6. ' l' → logprob: -8.246781349182129
    7. ' ' → logprob: -8.371781349182129
    8. 'liste' → logprob: -8.621781349182129
    9. ' liste' → logprob: -8.746781349182129
    10. '```' → logprob: -8.996781349182129

Token 130: '().
' (ID: 58434)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16199122369289398
    2. '(' → logprob: -2.5369911193847656
    3. '(map' → logprob: -2.6619911193847656
    4. '(...)' → logprob: -8.036991119384766
    5. '(int' → logprob: -10.036991119384766
    6. ' ()' → logprob: -10.161991119384766
    7. '().' → logprob: -10.536991119384766
    8. '()>' → logprob: -11.161991119384766
    9. '(convert' → logprob: -11.286991119384766
    10. '```' → logprob: -11.286991119384766

Token 131: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4944381713867188
    2. 'numbers' → logprob: -1.4944381713867188
    3. ' numbers' → logprob: -1.9944381713867188
    4. 'N' → logprob: -2.2444381713867188
    5. 'ent' → logprob: -2.4944381713867188
    6. ' N' → logprob: -2.7444381713867188
    7. 'n' → logprob: -3.2444381713867188
    8. 'nums' → logprob: -3.3694381713867188
    9. ' ent' → logprob: -3.6194381713867188
    10. ' integers' → logprob: -4.744438171386719

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5779691338539124
    2. 'rray' → logprob: -1.8279690742492676
    3. 'rr' → logprob: -2.2029690742492676
    4. 'r' → logprob: -2.5779690742492676
    5. 's' → logprob: -3.2029690742492676
    6. '=' → logprob: -4.452969074249268
    7. '_list' → logprob: -5.202969074249268
    8. 'nts' → logprob: -5.577969074249268
    9. 'nums' → logprob: -6.077969074249268
    10. 'n' → logprob: -6.202969074249268

Token 133: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12693849205970764
    2. 'list' → logprob: -2.126938581466675
    3. '=list' → logprob: -12.876938819885254
    4. 'int' → logprob: -13.251938819885254
    5. ' ' → logprob: -13.876938819885254
    6. '(list' → logprob: -14.001938819885254
    7. ' ' → logprob: -14.376938819885254
    8. '[list' → logprob: -14.501938819885254
    9. '	list' → logprob: -14.751938819885254
    10. ' li' → logprob: -14.751938819885254

Token 134: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.20249226689338684
    2. '(' → logprob: -1.7024922370910645
    3. '(int' → logprob: -7.3274922370910645
    4. '(input' → logprob: -7.8274922370910645
    5. '(
' → logprob: -12.077492713928223
    6. ' (' → logprob: -12.327492713928223
    7. '()' → logprob: -12.577492713928223
    8. '(m' → logprob: -12.702492713928223
    9. '(

' → logprob: -12.702492713928223
    10. '(mapping' → logprob: -14.202492713928223

Token 135: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023321297019720078
    2. '(' → logprob: -3.7733213901519775
    3. '<int' → logprob: -9.898321151733398
    4. ' (' → logprob: -11.398321151733398
    5. '(
' → logprob: -11.773321151733398
    6. '[int' → logprob: -13.023321151733398
    7. 'int' → logprob: -13.148321151733398
    8. ' int' → logprob: -14.898321151733398
    9. '(

' → logprob: -15.023321151733398
    10. ',int' → logprob: -15.148321151733398

Token 136: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0055733369663357735
    2. ',input' → logprob: -5.255573272705078
    3. '(' → logprob: -8.505573272705078
    4. ' (' → logprob: -9.755573272705078
    5. 'input' → logprob: -10.255573272705078
    6. ',' → logprob: -10.255573272705078
    7. '=input' → logprob: -12.130573272705078
    8. ' input' → logprob: -13.005573272705078
    9. ' ,' → logprob: -14.505573272705078
    10. '(
' → logprob: -15.005573272705078

Token 137: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016081882640719414
    2. ' input' → logprob: -4.141081809997559
    3. '(input' → logprob: -10.016081809997559
    4. ',input' → logprob: -13.516081809997559
    5. '<input' → logprob: -14.891081809997559
    6. '	input' → logprob: -15.016081809997559
    7. '_input' → logprob: -15.516081809997559
    8. '=input' → logprob: -15.641081809997559
    9. ' ' → logprob: -15.891081809997559
    10. '[input' → logprob: -16.141082763671875

Token 138: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022552231326699257
    2. '()' → logprob: -3.897552251815796
    3. '()))' → logprob: -6.647552013397217
    4. '())' → logprob: -7.397552013397217
    5. '())))' → logprob: -10.272552490234375
    6. '()));' → logprob: -10.647552490234375
    7. '()>' → logprob: -11.522552490234375
    8. '(' → logprob: -12.147552490234375
    9. ')' → logprob: -12.647552490234375
    10. '()).' → logprob: -12.897552490234375

Token 139: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.840432565193623e-05
    2. 'strip' → logprob: -9.500088691711426
    3. ' split' → logprob: -11.250088691711426
    4. 'rstrip' → logprob: -15.125088691711426
    5. ')' → logprob: -16.50008773803711
    6. 'spl' → logprob: -16.87508773803711
    7. '(split' → logprob: -17.00008773803711
    8. '.split' → logprob: -18.50008773803711
    9. ' ' → logprob: -19.50008773803711
    10. ' strip' → logprob: -19.62508773803711

Token 140: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5958722829818726
    2. '()' → logprob: -0.8458722829818726
    3. '())' → logprob: -4.220872402191162
    4. '())))' → logprob: -5.345872402191162
    5. '(' → logprob: -9.220871925354004
    6. '))' → logprob: -9.470871925354004
    7. '()));' → logprob: -10.095871925354004
    8. ')))' → logprob: -11.220871925354004
    9. ')' → logprob: -11.720871925354004
    10. '()))
' → logprob: -11.845871925354004

Token 141: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16271866858005524
    2. '<|end|>' → logprob: -2.2877187728881836
    3. '#' → logprob: -4.037718772888184
    4. ' 
' → logprob: -4.662718772888184
    5. '  
' → logprob: -4.912718772888184
    6. '[' → logprob: -4.912718772888184
    7. ' ' → logprob: -6.162718772888184
    8. '\n' → logprob: -6.537718772888184
    9. '[
' → logprob: -6.537718772888184
    10. '```' → logprob: -8.037718772888184

Token 142: ' Initialise' (ID: 179601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0904194116592407
    2. 's' → logprob: -1.2154194116592407
    3. 'sum' → logprob: -1.8404194116592407
    4. 'for' → logprob: -2.590419292449951
    5. 'print' → logprob: -2.715419292449951
    6. 'total' → logprob: -3.840419292449951
    7. 'max' → logprob: -4.840419292449951
    8. 'S' → logprob: -4.840419292449951
    9. 'm' → logprob: -4.965419292449951
    10. 'result' → logprob: -5.090419292449951

Token 143: ' une' (ID: 2463)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4095357656478882
    2. 's' → logprob: -1.5345357656478882
    3. ' ' → logprob: -2.0345358848571777
    4. ' S' → logprob: -2.4095358848571777
    5. ' total' → logprob: -2.6595358848571777
    6. ' a' → logprob: -3.2845358848571777
    7. ' un' → logprob: -3.2845358848571777
    8. ' sum' → logprob: -3.4095358848571777
    9. ' une' → logprob: -3.6595358848571777
    10. ' la' → logprob: -3.7845358848571777

Token 144: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.5782315731048584
    2. ' variable' → logprob: -1.3282315731048584
    3. 's' → logprob: -1.9532315731048584
    4. ' somme' → logprob: -4.5782318115234375
    5. 'liste' → logprob: -4.7032318115234375
    6. ' nouvelle' → logprob: -5.3282318115234375
    7. '#' → logprob: -5.8282318115234375
    8. ' liste' → logprob: -6.7032318115234375
    9. 'nou' → logprob: -7.3282318115234375
    10. 'val' → logprob: -7.5782318115234375

Token 145: ' flag' (ID: 9641)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5508167743682861
    2. ' sum' → logprob: -1.3008167743682861
    3. ' s' → logprob: -3.175816774368286
    4. ' somme' → logprob: -3.425816774368286
    5. 's' → logprob: -3.675816774368286
    6. ' ' → logprob: -4.050816535949707
    7. 'sum' → logprob: -4.800816535949707
    8. ' result' → logprob: -4.925816535949707
    9. ' max' → logprob: -5.175816535949707
    10. 'total' → logprob: -5.425816535949707

Token 146: ' dont' (ID: 11562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22645188868045807
    2. '_flag' → logprob: -2.351451873779297
    3. ' flag' → logprob: -2.851451873779297
    4. 'flag' → logprob: -3.851451873779297
    5. '=' → logprob: -3.976451873779297
    6. '_' → logprob: -5.351451873779297
    7. ' ' → logprob: -6.351451873779297
    8. '=False' → logprob: -7.601451873779297
    9. '	flag' → logprob: -7.976451873779297
    10. '=True' → logprob: -7.976451873779297

Token 147: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05610103905200958
    2. ' l' → logprob: -3.306101083755493
    3. ' le' → logprob: -5.056100845336914
    4. 'l' → logprob: -5.431100845336914
    5. 'la' → logprob: -5.431100845336914
    6. ' ' → logprob: -7.056100845336914
    7. ' on' → logprob: -7.056100845336914
    8. 'le' → logprob: -8.556100845336914
    9. 'val' → logprob: -8.806100845336914
    10. '```' → logprob: -9.181100845336914

Token 148: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2064293622970581
    2. ' valeur' → logprob: -1.706429362297058
    3. 'fonction' → logprob: -6.206429481506348
    4. ' val' → logprob: -6.706429481506348
    5. ' fonction' → logprob: -7.956429481506348
    6. 'value' → logprob: -8.456429481506348
    7. 's' → logprob: -8.831429481506348
    8. 't' → logprob: -8.956429481506348
    9. 'v' → logprob: -9.331429481506348
    10. 'vale' → logprob: -9.581429481506348

Token 149: ' serv' (ID: 2096)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7091366648674011
    2. ' =' → logprob: -1.959136724472046
    3. ' True' → logprob: -2.209136724472046
    4. '=' → logprob: -2.834136724472046
    5. 'False' → logprob: -3.334136724472046
    6. ' False' → logprob: -3.459136724472046
    7. '=True' → logprob: -3.584136724472046
    8. 'True' → logprob: -3.834136724472046
    9. ' is' → logprob: -3.834136724472046
    10. '=False' → logprob: -3.959136724472046

Token 150: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.03926614671945572
    2. 'e' → logprob: -3.4142661094665527
    3. 'a' → logprob: -6.164266109466553
    4. 'ra' → logprob: -6.664266109466553
    5. 'i' → logprob: -7.164266109466553
    6. 'ir' → logprob: -7.914266109466553
    7. 'irà' → logprob: -8.039266586303711
    8. 't' → logprob: -8.789266586303711
    9. 'ait' → logprob: -8.914266586303711
    10. '#' → logprob: -9.164266586303711

Token 151: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02075582556426525
    2. ' ' → logprob: -4.395755767822266
    3. ' to' → logprob: -5.770755767822266
    4. ' de' → logprob: -6.395755767822266
    5. 'à' → logprob: -6.520755767822266
    6. '<|end|>' → logprob: -7.145755767822266
    7. ' as' → logprob: -8.145755767822266
    8. ' d' → logprob: -8.395755767822266
    9. '```' → logprob: -8.520755767822266
    10. ' ' → logprob: -9.145755767822266

Token 152: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.6397053599357605
    2. ' ind' → logprob: -1.1397054195404053
    3. ' déterminer' → logprob: -2.0147054195404053
    4. 'indi' → logprob: -5.139705181121826
    5. ' vérifier' → logprob: -5.389705181121826
    6. 'determ' → logprob: -5.889705181121826
    7. ' détect' → logprob: -7.139705181121826
    8. 'd' → logprob: -7.514705181121826
    9. ' signal' → logprob: -7.764705181121826
    10. ' stock' → logprob: -7.889705181121826

Token 153: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.00018363336857873946
    2. 'iqu' → logprob: -9.000184059143066
    3. 'ic' → logprob: -10.875184059143066
    4. 'ex' → logprob: -11.625184059143066
    5. 'ique' → logprob: -12.000184059143066
    6. 'quer' → logprob: -12.125184059143066
    7. 'iqué' → logprob: -12.125184059143066
    8. 'i' → logprob: -12.250184059143066
    9. 'iq' → logprob: -12.750184059143066
    10. 'icer' → logprob: -13.000184059143066

Token 154: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.6118142604827881
    2. '<|end|>' → logprob: -1.111814260482788
    3. 'si' → logprob: -2.736814260482788
    4. ' if' → logprob: -3.611814260482788
    5. ' True' → logprob: -4.611814498901367
    6. 's' → logprob: -4.986814498901367
    7. ' whether' → logprob: -4.986814498901367
    8. 'whether' → logprob: -5.611814498901367
    9. '```' → logprob: -6.361814498901367
    10. 'True' → logprob: -6.486814498901367

Token 155: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9501180052757263
    2. ' le' → logprob: -1.950118064880371
    3. ' une' → logprob: -2.075118064880371
    4. ' ' → logprob: -2.575118064880371
    5. ' True' → logprob: -2.825118064880371
    6. ' l' → logprob: -2.950118064880371
    7. ' la' → logprob: -3.075118064880371
    8. ' on' → logprob: -4.075118064880371
    9. ' les' → logprob: -4.575118064880371
    10. ' toutes' → logprob: -4.575118064880371

Token 156: ' nombre' (ID: 9733)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.23886780440807343
    2. 'élé' → logprob: -2.23886775970459
    3. ' entier' → logprob: -3.36386775970459
    4. 'e' → logprob: -3.36386775970459
    5. ' nombre' → logprob: -5.36386775970459
    6. 'ent' → logprob: -5.36386775970459
    7. 'é' → logprob: -5.73886775970459
    8. 'element' → logprob: -5.98886775970459
    9. ' doubl' → logprob: -5.98886775970459
    10. ' element' → logprob: -6.30136775970459

Token 157: ' ne' (ID: 453)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3490198254585266
    2. ' pair' → logprob: -2.099019765853882
    3. 'pair' → logprob: -3.099019765853882
    4. ' premier' → logprob: -3.349019765853882
    5. ' est' → logprob: -3.349019765853882
    6. ' positif' → logprob: -4.724020004272461
    7. ' trouvé' → logprob: -4.849020004272461
    8. ' nég' → logprob: -5.224020004272461
    9. 'strict' → logprob: -5.349020004272461
    10. ' impair' → logprob: -5.599020004272461

Token 158: ' respecte' (ID: 140483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13805484771728516
    2. ' respecte' → logprob: -3.263054847717285
    3. 'st' → logprob: -3.888054847717285
    4. 'est' → logprob: -4.638054847717285
    5. ' répond' → logprob: -4.638054847717285
    6. ' correspond' → logprob: -5.013054847717285
    7. ' satisfait' → logprob: -5.013054847717285
    8. 'fait' → logprob: -5.138054847717285
    9. 'cess' → logprob: -5.388054847717285
    10. ' se' → logprob: -5.638054847717285

Token 159: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.02888469398021698
    2. ' ' → logprob: -4.6538848876953125
    3. ' la' → logprob: -4.6538848876953125
    4. 's' → logprob: -5.5288848876953125
    5. ' l' → logprob: -6.6538848876953125
    6. 'pas' → logprob: -7.1538848876953125
    7. ' les' → logprob: -7.4038848876953125
    8. ' aucune' → logprob: -7.7788848876953125
    9. ' s' → logprob: -8.028884887695312
    10. ' le' → logprob: -8.153884887695312

Token 160: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5469369292259216
    2. ' la' → logprob: -1.0469369888305664
    3. 'les' → logprob: -3.4219369888305664
    4. ' l' → logprob: -4.921936988830566
    5. ' certaines' → logprob: -4.921936988830566
    6. ' ' → logprob: -5.546936988830566
    7. '<|end|>' → logprob: -5.546936988830566
    8. ' le' → logprob: -5.921936988830566
    9. ' une' → logprob: -6.171936988830566
    10. 's' → logprob: -6.296936988830566

Token 161: ' condition' (ID: 7060)
  Prédit: ' condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.5244311094284058
    2. ' ' → logprob: -2.0244312286376953
    3. 'condition' → logprob: -2.0244312286376953
    4. ' certain' → logprob: -3.3994312286376953
    5. ' propriété' → logprob: -3.5244312286376953
    6. 'certain' → logprob: -3.5244312286376953
    7. ' crit' → logprob: -4.774431228637695
    8. ' règle' → logprob: -5.399431228637695
    9. 'r' → logprob: -5.524431228637695
    10. ' certaine' → logprob: -5.774431228637695

Token 162: '.
' (ID: 558)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.761879026889801
    2. ' =' → logprob: -1.0118789672851562
    3. 'flag' → logprob: -2.3868789672851562
    4. ' ' → logprob: -3.1368789672851562
    5. ' True' → logprob: -4.636878967285156
    6. '=' → logprob: -4.636878967285156
    7. '_flag' → logprob: -5.511878967285156
    8. '=True' → logprob: -6.261878967285156
    9. 's' → logprob: -6.511878967285156
    10. '=False' → logprob: -6.761878967285156

Token 163: '#' (ID: 2)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.429157555103302
    2. ' flag' → logprob: -1.0541574954986572
    3. '	flag' → logprob: -9.179157257080078
    4. '
' → logprob: -9.304157257080078
    5. ' 
' → logprob: -9.554157257080078
    6. 'Flag' → logprob: -10.179157257080078
    7. '(flag' → logprob: -10.304157257080078
    8. '_flag' → logprob: -10.679157257080078
    9. 'f' → logprob: -10.929157257080078
    10. '```' → logprob: -11.179157257080078

Token 164: ' Initial' (ID: 9209)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.16718439757823944
    2. ' flag' → logprob: -1.9171843528747559
    3. 'f' → logprob: -5.042184352874756
    4. 'fl' → logprob: -9.292184829711914
    5. '
' → logprob: -9.667184829711914
    6. ' f' → logprob: -9.667184829711914
    7. '	flag' → logprob: -10.042184829711914
    8. 'Flag' → logprob: -10.167184829711914
    9. 'F' → logprob: -10.667184829711914
    10. '(flag' → logprob: -10.792184829711914

Token 165: 'ement' (ID: 962)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.010203174315392971
    2. 'ize' → logprob: -5.7602033615112305
    3. 'e' → logprob: -6.3852033615112305
    4. 'ialize' → logprob: -6.8852033615112305
    5. 'aise' → logprob: -7.1352033615112305
    6. 'is' → logprob: -7.5102033615112305
    7. 'al' → logprob: -7.6352033615112305
    8. 'iser' → logprob: -7.7602033615112305
    9. 'isation' → logprob: -7.7602033615112305
    10. 'yse' → logprob: -7.8852033615112305

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6573961973190308
    2. ' flag' → logprob: -1.0323961973190308
    3. 'flag' → logprob: -3.1573963165283203
    4. ' ,' → logprob: -3.1573963165283203
    5. ' ' → logprob: -3.4073963165283203
    6. ' =' → logprob: -5.78239631652832
    7. '_flag' → logprob: -6.03239631652832
    8. ' ' → logprob: -8.03239631652832
    9. '=' → logprob: -8.03239631652832
    10. '_' → logprob: -9.09489631652832

Token 167: ' aucune' (ID: 51173)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.4290851056575775
    2. 'flag' → logprob: -1.0540851354599
    3. '	flag' → logprob: -9.054084777832031
    4. ' ' → logprob: -10.054084777832031
    5. ' on' → logprob: -10.304084777832031
    6. 'fl' → logprob: -10.429084777832031
    7. 'f' → logprob: -10.429084777832031
    8. 'Flag' → logprob: -10.554084777832031
    9. ' ' → logprob: -11.304084777832031
    10. ' le' → logprob: -11.304084777832031

Token 168: ' violation' (ID: 40723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9929230809211731
    2. ' n' → logprob: -2.3679230213165283
    3. 'n' → logprob: -2.4929230213165283
    4. ' erreur' → logprob: -2.6179230213165283
    5. ' flag' → logprob: -2.8679230213165283
    6. 'flag' → logprob: -2.9929230213165283
    7. ' valeur' → logprob: -3.1179230213165283
    8. ' violation' → logprob: -3.3679230213165283
    9. ' ne' → logprob: -3.4929230213165283
    10. '_' → logprob: -3.7429230213165283

Token 169: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.777356743812561
    2. ' =' → logprob: -1.527356743812561
    3. ' n' → logprob: -1.777356743812561
    4. '=' → logprob: -3.1523566246032715
    5. ' de' → logprob: -3.2773566246032715
    6. 'n' → logprob: -3.6523566246032715
    7. ' flag' → logprob: -4.5273566246032715
    8. '_' → logprob: -4.7773566246032715
    9. '=False' → logprob: -5.0273566246032715
    10. 's' → logprob: -5.4023566246032715

Token 170: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1085572242736816
    2. ''a' → logprob: -1.7335572242736816
    3. ' n' → logprob: -1.8585572242736816
    4. 'n' → logprob: -2.2335572242736816
    5. ''est' → logprob: -2.6085572242736816
    6. ''' → logprob: -2.6085572242736816
    7. '<|end|>' → logprob: -2.9835572242736816
    8. ' a' → logprob: -3.9835572242736816
    9. 'e' → logprob: -6.108557224273682
    10. 'u' → logprob: -6.108557224273682

Token 171: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.14706245064735413
    2. 'été' → logprob: -2.1470625400543213
    3. ' pas' → logprob: -4.772062301635742
    4. ' ' → logprob: -5.647062301635742
    5. 'é' → logprob: -6.147062301635742
    6. ' é' → logprob: -6.897062301635742
    7. 'êt' → logprob: -7.397062301635742
    8. ''été' → logprob: -7.772062301635742
    9. 't' → logprob: -7.897062301635742
    10. 'a' → logprob: -8.022062301635742

Token 172: ' trouv' (ID: 40254)
  Prédit: ' détect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' détect' → logprob: -0.08500800281763077
    2. ' trouv' → logprob: -3.710007905960083
    3. 'dé' → logprob: -3.710007905960083
    4. 'detect' → logprob: -4.210008144378662
    5. 'det' → logprob: -4.710008144378662
    6. ' constat' → logprob: -5.960008144378662
    7. ' detect' → logprob: -6.585008144378662
    8. '_detect' → logprob: -6.960008144378662
    9. ' detected' → logprob: -7.460008144378662
    10. ' rencontr' → logprob: -7.835008144378662

Token 173: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.09010986238718033
    2. 'e' → logprob: -3.0901098251342773
    3. 'ie' → logprob: -3.8401098251342773
    4. 'ue' → logprob: -4.340109825134277
    5. 'é' → logprob: -5.215109825134277
    6. 'u' → logprob: -7.965109825134277
    7. ' e' → logprob: -9.340109825134277
    8. 'i' → logprob: -9.840109825134277
    9. ' ' → logprob: -10.215109825134277
    10. '=' → logprob: -10.340109825134277

Token 174: ',' (ID: 11)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.13234823942184448
    2. ' flag' → logprob: -2.1323482990264893
    3. '
' → logprob: -6.50734806060791
    4. ',' → logprob: -6.63234806060791
    5. ' =' → logprob: -6.63234806060791
    6. ' ,' → logprob: -8.38234806060791
    7. '_flag' → logprob: -8.50734806060791
    8. 'f' → logprob: -8.88234806060791
    9. '=' → logprob: -9.25734806060791
    10. '.' → logprob: -9.50734806060791

Token 175: ' donc' (ID: 14206)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.1806829869747162
    2. 'flag' → logprob: -1.8056830167770386
    3. ' ' → logprob: -7.805683135986328
    4. '	flag' → logprob: -8.680683135986328
    5. ' True' → logprob: -9.180683135986328
    6. ' 
' → logprob: -9.680683135986328
    7. 'f' → logprob: -9.805683135986328
    8. '_flag' → logprob: -10.305683135986328
    9. ' ' → logprob: -10.930683135986328
    10. ' f' → logprob: -11.305683135986328

Token 176: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.5236496329307556
    2. ' flag' → logprob: -0.8986496329307556
    3. '	flag' → logprob: -9.148649215698242
    4. ' ' → logprob: -9.273649215698242
    5. 'fl' → logprob: -9.523649215698242
    6. 'f' → logprob: -9.773649215698242
    7. 'Flag' → logprob: -10.523649215698242
    8. '```' → logprob: -10.523649215698242
    9. '
' → logprob: -11.211149215698242
    10. '(flag' → logprob: -11.273649215698242

Token 177: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02335122786462307
    2. '=' → logprob: -3.7733511924743652
    3. ' ' → logprob: -9.773351669311523
    4. 's' → logprob: -10.648351669311523
    5. '=True' → logprob: -11.648351669311523
    6. '=False' → logprob: -12.273351669311523
    7. ' =
' → logprob: -12.773351669311523
    8. ' ' → logprob: -13.523351669311523
    9. ',' → logprob: -14.273351669311523
    10. ')' → logprob: -14.273351669311523

Token 178: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.5028371810913086
    2. 'False' → logprob: -1.6278371810913086
    3. ' True' → logprob: -1.8778371810913086
    4. 'True' → logprob: -4.002837181091309
    5. ' fixé' → logprob: -5.002837181091309
    6. '0' → logprob: -5.502837181091309
    7. ' ' → logprob: -5.502837181091309
    8. ' set' → logprob: -5.752837181091309
    9. ' égal' → logprob: -5.877837181091309
    10. ' =' → logprob: -6.002837181091309

Token 179: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2564834952354431
    2. ' False' → logprob: -1.506483554840088
    3. 'True' → logprob: -6.381483554840088
    4. '0' → logprob: -6.631483554840088
    5. ' True' → logprob: -6.881483554840088
    6. '=' → logprob: -8.38148307800293
    7. ' =' → logprob: -8.50648307800293
    8. '=False' → logprob: -9.88148307800293
    9. 'F' → logprob: -11.63148307800293
    10. ' ' → logprob: -12.25648307800293

Token 180: '.
' (ID: 558)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.030203284695744514
    2. ' =' → logprob: -4.030203342437744
    3. ' flag' → logprob: -4.530203342437744
    4. '=' → logprob: -7.280203342437744
    5. '
' → logprob: -7.655203342437744
    6. '	flag' → logprob: -11.405202865600586
    7. '(flag' → logprob: -11.905202865600586
    8. '_flag' → logprob: -11.905202865600586
    9. ' =
' → logprob: -12.280202865600586
    10. ' 
' → logprob: -12.905202865600586

Token 181: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0041290996596217155
    2. ' flag' → logprob: -5.754128932952881
    3. '
' → logprob: -7.004128932952881
    4. ' 
' → logprob: -10.629129409790039
    5. 'f' → logprob: -12.129129409790039
    6. 'fl' → logprob: -12.504129409790039
    7. '	flag' → logprob: -12.754129409790039
    8. '```' → logprob: -13.129129409790039
    9. '  
' → logprob: -13.879129409790039
    10. '
' → logprob: -14.254129409790039

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023250021040439606
    2. '=' → logprob: -3.773250102996826
    3. ' ' → logprob: -12.398249626159668
    4. ' =
' → logprob: -16.273250579833984
    5. ',' → logprob: -16.398250579833984
    6. ' ' → logprob: -16.523250579833984
    7. 's' → logprob: -16.773250579833984
    8. ')' → logprob: -17.023250579833984
    9. '=int' → logprob: -17.898250579833984
    10. ' ,' → logprob: -18.148250579833984

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196768581867218
    2. ' ' → logprob: -2.811967611312866
    3. ' ' → logprob: -16.936967849731445
    4. '۰' → logprob: -19.561967849731445
    5. '０' → logprob: -21.561967849731445
    6. '=' → logprob: -21.936967849731445
    7. '  ' → logprob: -21.999467849731445
    8. '	' → logprob: -22.061967849731445
    9. ' ' → logprob: -22.124467849731445
    10. '```' → logprob: -22.249467849731445

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -20.125003814697266
    4. '```' → logprob: -21.562503814697266
    5. '０' → logprob: -21.750003814697266
    6. '   ' → logprob: -22.312503814697266
    7. '=' → logprob: -22.437503814697266
    8. ' ' → logprob: -22.562503814697266
    9. '1' → logprob: -22.562503814697266
    10. '00' → logprob: -22.812503814697266

Token 185: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008627578616142273
    2. 'for' → logprob: -5.133627414703369
    3. '<|end|>' → logprob: -6.883627414703369
    4. ' for' → logprob: -7.133627414703369
    5. ' 
' → logprob: -8.133627891540527
    6. '
' → logprob: -8.383627891540527
    7. '

' → logprob: -9.008627891540527
    8. '  
' → logprob: -9.133627891540527
    9. '\n' → logprob: -9.383627891540527
    10. '<|end|>' → logprob: -10.758627891540527

Token 186: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007579309749417007
    2. '
' → logprob: -7.500757694244385
    3. ' for' → logprob: -8.500758171081543
    4. 'i' → logprob: -14.375758171081543
    5. '<|end|>' → logprob: -15.250758171081543
    6. 'if' → logprob: -15.625758171081543
    7. 'while' → logprob: -16.250757217407227
    8. '\n' → logprob: -16.375757217407227
    9. '

' → logprob: -16.375757217407227
    10. ' 
' → logprob: -16.375757217407227

Token 187: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023083435371518135
    2. ' for' → logprob: -8.37523078918457
    3. 'if' → logprob: -15.75023078918457
    4. 'For' → logprob: -16.62523078918457
    5. 'i' → logprob: -17.25023078918457
    6. 'while' → logprob: -17.62523078918457
    7. '```' → logprob: -18.37523078918457
    8. 'f' → logprob: -18.50023078918457
    9. 'fo' → logprob: -18.62523078918457
    10. '
' → logprob: -18.75023078918457

Token 188: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.10242690145969391
    2. 'our' → logprob: -2.4774270057678223
    3. 'ourt' → logprob: -4.727427005767822
    4. 'oure' → logprob: -5.852427005767822
    5. 'ourse' → logprob: -7.727427005767822
    6. 'ou' → logprob: -8.227426528930664
    7. 'or' → logprob: -8.227426528930664
    8. '#' → logprob: -8.352426528930664
    9. 'o' → logprob: -8.477426528930664
    10. 'ourses' → logprob: -9.727426528930664

Token 189: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.044644445180892944
    2. 'range' → logprob: -3.419644355773926
    3. ' A' → logprob: -5.044644355773926
    4. '(range' → logprob: -5.669644355773926
    5. ' ' → logprob: -7.419644355773926
    6. 'A' → logprob: -8.419644355773926
    7. ' la' → logprob: -9.794644355773926
    8. ' for' → logprob: -9.919644355773926
    9. '(' → logprob: -10.044644355773926
    10. 'Range' → logprob: -11.044644355773926

Token 190: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6092116236686707
    2. ' élément' → logprob: -1.6092116832733154
    3. ' nombre' → logprob: -2.6092116832733154
    4. 'nombre' → logprob: -2.9842116832733154
    5. 'element' → logprob: -3.2342116832733154
    6. ' element' → logprob: -3.3592116832733154
    7. 'a' → logprob: -3.9842116832733154
    8. 'i' → logprob: -4.859211444854736
    9. ' a' → logprob: -4.859211444854736
    10. ' i' → logprob: -5.109211444854736

Token 191: ' '' (ID: 461)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08204133063554764
    2. ' in' → logprob: -2.9570412635803223
    3. ' dans' → logprob: -4.707041263580322
    4. 'in' → logprob: -5.082041263580322
    5. ' A' → logprob: -5.332041263580322
    6. 'de' → logprob: -6.457041263580322
    7. ' ' → logprob: -6.582041263580322
    8. ' for' → logprob: -6.832041263580322
    9. 'A' → logprob: -7.082041263580322
    10. 'for' → logprob: -7.707041263580322

Token 192: 'i' (ID: 72)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5411593317985535
    2. 'A' → logprob: -0.9161593317985535
    3. 'a' → logprob: -4.791159152984619
    4. ' a' → logprob: -5.041159152984619
    5. 'i' → logprob: -7.666159152984619
    6. ' ' → logprob: -7.666159152984619
    7. 'x' → logprob: -7.791159152984619
    8. ' i' → logprob: -8.041159629821777
    9. ' x' → logprob: -8.416159629821777
    10. ' in' → logprob: -8.416159629821777

Token 193: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17922180891036987
    2. 'in' → logprob: -2.0542218685150146
    3. ''' → logprob: -3.9292218685150146
    4. ' ' → logprob: -4.9292216300964355
    5. ' '' → logprob: -5.3042216300964355
    6. ',' → logprob: -6.1792216300964355
    7. ')' → logprob: -7.6792216300964355
    8. ' dans' → logprob: -8.304222106933594
    9. ''in' → logprob: -8.554222106933594
    10. ' i' → logprob: -8.929222106933594

Token 194: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06617400795221329
    2. 'in' → logprob: -2.941174030303955
    3. ' de' → logprob: -5.566174030303955
    4. ' dans' → logprob: -5.691174030303955
    5. ' ' → logprob: -5.816174030303955
    6. ' of' → logprob: -8.066173553466797
    7. 'dans' → logprob: -8.691173553466797
    8. ',' → logprob: -9.066173553466797
    9. 'de' → logprob: -9.191173553466797
    10. 's' → logprob: -9.441173553466797

Token 195: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1426795870065689
    2. ' A' → logprob: -2.0176796913146973
    3. ' range' → logprob: -13.517679214477539
    4. 'range' → logprob: -13.767679214477539
    5. ' la' → logprob: -14.017679214477539
    6. ' ' → logprob: -15.267679214477539
    7. 'l' → logprob: -15.392679214477539
    8. ' the' → logprob: -15.642679214477539
    9. ' ' → logprob: -15.892679214477539
    10. 'a' → logprob: -15.892679214477539

Token 196: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.010962223634123802
    2. ' A' → logprob: -4.760962009429932
    3. 'liste' → logprob: -6.885962009429932
    4. 'range' → logprob: -7.260962009429932
    5. 'list' → logprob: -8.13596248626709
    6. ' liste' → logprob: -8.76096248626709
    7. ' range' → logprob: -8.88596248626709
    8. ' list' → logprob: -11.88596248626709
    9. 'lista' → logprob: -12.13596248626709
    10. 'a' → logprob: -13.26096248626709

Token 197: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.34874382615089417
    2. 'A' → logprob: -1.2237437963485718
    3. ' de' → logprob: -8.973743438720703
    4. 'for' → logprob: -10.098743438720703
    5. ' for' → logprob: -10.223743438720703
    6. ' ' → logprob: -10.848743438720703
    7. 's' → logprob: -11.348743438720703
    8. 'de' → logprob: -11.348743438720703
    9. ' ' → logprob: -11.848743438720703
    10. ' in' → logprob: -11.973743438720703

Token 198: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04698507487773895
    2. ':
' → logprob: -3.296985149383545
    3. 'for' → logprob: -5.171985149383545
    4. ' for' → logprob: -5.921985149383545
    5. ' :' → logprob: -8.671984672546387
    6. '
' → logprob: -9.046984672546387
    7. ' :
' → logprob: -9.296984672546387
    8. ',' → logprob: -9.421984672546387
    9. 'in' → logprob: -10.796984672546387
    10. ':

' → logprob: -10.921984672546387

Token 199: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4767751693725586
    2. ' range' → logprob: -0.9767751693725586
    3. ':' → logprob: -7.851775169372559
    4. ' la' → logprob: -7.851775169372559
    5. 'for' → logprob: -8.226775169372559
    6. '	range' → logprob: -8.726775169372559
    7. ' A' → logprob: -8.851775169372559
    8. 'l' → logprob: -9.101775169372559
    9. 'A' → logprob: -9.226775169372559
    10. ' l' → logprob: -9.226775169372559

Token 200: ''aide' (ID: 75684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5508126616477966
    2. 'range' → logprob: -1.6758127212524414
    3. ''aide' → logprob: -2.6758127212524414
    4. 'i' → logprob: -4.050812721252441
    5. 'ex' → logprob: -4.675812721252441
    6. ')' → logprob: -4.675812721252441
    7. 'h' → logprob: -4.675812721252441
    8. 'orizontal' → logprob: -4.800812721252441
    9. '#' → logprob: -4.925812721252441
    10. 'a' → logprob: -5.050812721252441

Token 201: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06640829145908356
    2. ' de' → logprob: -2.941408395767212
    3. 'd' → logprob: -4.691408157348633
    4. 'de' → logprob: -6.191408157348633
    5. 'for' → logprob: -9.066408157348633
    6. ' for' → logprob: -9.316408157348633
    7. ' of' → logprob: -11.191408157348633
    8. ' du' → logprob: -11.691408157348633
    9. 's' → logprob: -13.691408157348633
    10. ' a' → logprob: -13.691408157348633

Token 202: ''une' (ID: 13337)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3213603496551514
    2. ' range' → logprob: -1.5713603496551514
    3. ' un' → logprob: -1.8213603496551514
    4. ' une' → logprob: -2.5713603496551514
    5. '<|end|>' → logprob: -2.8213603496551514
    6. 'une' → logprob: -2.9463603496551514
    7. ''un' → logprob: -3.1963603496551514
    8. 'for' → logprob: -3.3213603496551514
    9. ''une' → logprob: -3.4463603496551514
    10. ' for' → logprob: -3.8213603496551514

Token 203: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6621571183204651
    2. ' for' → logprob: -1.2871570587158203
    3. ':' → logprob: -2.4121570587158203
    4. ' range' → logprob: -2.5371570587158203
    5. 'range' → logprob: -3.2871570587158203
    6. ' ' → logprob: -7.03715705871582
    7. ':
' → logprob: -8.16215705871582
    8. ' ' → logprob: -8.16215705871582
    9. ' :' → logprob: -8.66215705871582
    10. 'r' → logprob: -9.16215705871582

Token 204: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5245524048805237
    2. ' for' → logprob: -0.8995524048805237
    3. ':' → logprob: -6.774552345275879
    4. ':
' → logprob: -8.399552345275879
    5. ' :
' → logprob: -11.399552345275879
    6. ' :' → logprob: -11.524552345275879
    7. 'pour' → logprob: -11.649552345275879
    8. ' ' → logprob: -11.774552345275879
    9. ' pour' → logprob: -12.024552345275879
    10. '
' → logprob: -12.274552345275879

Token 205: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11730124801397324
    2. ' :' → logprob: -2.3673012256622314
    3. ':
' → logprob: -4.9923014640808105
    4. ' :
' → logprob: -5.1173014640808105
    5. 'in' → logprob: -6.8673014640808105
    6. 'for' → logprob: -7.1173014640808105
    7. ',' → logprob: -7.2423014640808105
    8. ' for' → logprob: -7.7423014640808105
    9. ' i' → logprob: -8.117300987243652
    10. 's' → logprob: -8.742300987243652

Token 206: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07501672208309174
    2. ' for' → logprob: -2.700016736984253
    3. '
' → logprob: -5.575016498565674
    4. ' 
' → logprob: -7.200016498565674
    5. '```' → logprob: -7.950016498565674
    6. ':' → logprob: -9.700016975402832
    7. '  
' → logprob: -10.700016975402832
    8. 's' → logprob: -11.450016975402832
    9. 'f' → logprob: -11.575016975402832
    10. ':
' → logprob: -11.700016975402832

Token 207: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05521421507000923
    2. ' ' → logprob: -2.9302141666412354
    3. 'i' → logprob: -8.180213928222656
    4. ' ' → logprob: -10.305213928222656
    5. ' ‌' → logprob: -11.805213928222656
    6. ' _' → logprob: -12.305213928222656
    7. '  ' → logprob: -13.180213928222656
    8. '_' → logprob: -13.555213928222656
    9. '	i' → logprob: -13.930213928222656
    10. ' ' → logprob: -14.055213928222656

Token 208: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02494988963007927
    2. 'in' → logprob: -3.774949789047241
    3. ' ' → logprob: -6.39995002746582
    4. ' i' → logprob: -10.89995002746582
    5. ' ' → logprob: -12.52495002746582
    6. ',' → logprob: -12.77495002746582
    7. '  ' → logprob: -12.77495002746582
    8. ' ,' → logprob: -13.27495002746582
    9. '	in' → logprob: -13.39995002746582
    10. 's' → logprob: -13.77495002746582

Token 209: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04860450699925423
    2. ' A' → logprob: -3.0486044883728027
    3. ' range' → logprob: -11.298604965209961
    4. 'range' → logprob: -12.298604965209961
    5. ' ' → logprob: -15.923604965209961
    6. '	A' → logprob: -17.29860496520996
    7. ')' → logprob: -18.79860496520996
    8. '  ' → logprob: -18.92360496520996
    9. 'a' → logprob: -19.54860496520996
    10. '(A' → logprob: -19.54860496520996

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.198043699143454e-05
    2. ' :' → logprob: -9.625091552734375
    3. ':
' → logprob: -10.625091552734375
    4. '>' → logprob: -14.375091552734375
    5. ',' → logprob: -14.500091552734375
    6. '=' → logprob: -14.875091552734375
    7. 'if' → logprob: -17.125091552734375
    8. ':**' → logprob: -17.500091552734375
    9. ':

' → logprob: -17.625091552734375
    10. ' if' → logprob: -17.875091552734375

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13854099810123444
    2. ' if' → logprob: -2.6385409832000732
    3. ' 
' → logprob: -3.6385409832000732
    4. ' ' → logprob: -4.013541221618652
    5. '    
' → logprob: -5.388541221618652
    6. '<|end|>' → logprob: -5.638541221618652
    7. '
' → logprob: -6.013541221618652
    8. ':' → logprob: -7.263541221618652
    9. '    ' → logprob: -7.513541221618652
    10. 'if' → logprob: -7.513541221618652

Token 212: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47871845960617065
    2. '   ' → logprob: -1.3537185192108154
    3. 'if' → logprob: -2.1037185192108154
    4. ' ' → logprob: -9.728718757629395
    5. '   ' → logprob: -10.603718757629395
    6. '    ' → logprob: -10.978718757629395
    7. '
' → logprob: -11.728718757629395
    8. '```' → logprob: -11.853718757629395
    9. '  ' → logprob: -11.978718757629395
    10. '    
' → logprob: -12.103718757629395

Token 213: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16026820242404938
    2. ' if' → logprob: -1.9102681875228882
    3. '   ' → logprob: -10.66026782989502
    4. 'i' → logprob: -11.53526782989502
    5. ' i' → logprob: -12.16026782989502
    6. 'If' → logprob: -13.66026782989502
    7. 's' → logprob: -14.03526782989502
    8. ' ' → logprob: -14.16026782989502
    9. ' si' → logprob: -14.16026782989502
    10. 'si' → logprob: -14.53526782989502

Token 214: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.289869487285614
    2. '   ' → logprob: -1.9148695468902588
    3. 'if' → logprob: -2.289869546890259
    4. 'ifiez' → logprob: -7.28986930847168
    5. 'ifier' → logprob: -7.91486930847168
    6. 'f' → logprob: -7.91486930847168
    7. '       ' → logprob: -8.16486930847168
    8. ' if' → logprob: -8.91486930847168
    9. '#' → logprob: -8.91486930847168
    10. '    ' → logprob: -9.16486930847168

Token 215: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0287050548940897
    2. ' i' → logprob: -3.77870512008667
    3. 'if' → logprob: -6.15370512008667
    4. ' ' → logprob: -6.40370512008667
    5. '   ' → logprob: -7.15370512008667
    6. ' si' → logprob: -7.77870512008667
    7. ' ' → logprob: -8.903704643249512
    8. '    ' → logprob: -9.528704643249512
    9. ' whether' → logprob: -9.778704643249512
    10. '  ' → logprob: -10.153704643249512

Token 216: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04404621571302414
    2. 'i' → logprob: -3.16904616355896
    3. ' not' → logprob: -7.669046401977539
    4. ' ' → logprob: -8.169046401977539
    5. 'not' → logprob: -10.044046401977539
    6. 'flag' → logprob: -10.044046401977539
    7. 'N' → logprob: -10.294046401977539
    8. ' abs' → logprob: -10.544046401977539
    9. ' flag' → logprob: -10.544046401977539
    10. ' N' → logprob: -10.544046401977539

Token 217: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6346386075019836
    2. 'i' → logprob: -0.7596386075019836
    3. ' ' → logprob: -7.634638786315918
    4. ' not' → logprob: -7.884638786315918
    5. 'N' → logprob: -8.384638786315918
    6. 'not' → logprob: -9.009638786315918
    7. 'abs' → logprob: -9.009638786315918
    8. ' N' → logprob: -9.134638786315918
    9. '(i' → logprob: -9.259638786315918
    10. ' (' → logprob: -9.384638786315918

Token 218: ''' (ID: 6)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.016599055379629135
    2. '%' → logprob: -4.516599178314209
    3. ' <' → logprob: -5.641599178314209
    4. ' <=' → logprob: -7.266599178314209
    5. ' >' → logprob: -7.266599178314209
    6. ' ' → logprob: -7.766599178314209
    7. ' >=' → logprob: -9.51659870147705
    8. ' ==' → logprob: -9.89159870147705
    9. '<' → logprob: -11.76659870147705
    10. ' !=' → logprob: -12.01659870147705

Token 219: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3256867229938507
    2. '%' → logprob: -2.0756866931915283
    3. ' <' → logprob: -2.2006866931915283
    4. ' >' → logprob: -3.7006866931915283
    5. ' <=' → logprob: -4.825686931610107
    6. '<' → logprob: -5.825686931610107
    7. ' ' → logprob: -5.950686931610107
    8. ' >=' → logprob: -6.325686931610107
    9. '>' → logprob: -7.325686931610107
    10. '<=' → logprob: -8.07568645477295

Token 220: ' divisible' (ID: 167813)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2258630990982056
    2. ' inférieur' → logprob: -1.3508630990982056
    3. ' supérieur' → logprob: -2.100862979888916
    4. ' divisible' → logprob: -2.475862979888916
    5. 'strict' → logprob: -3.225862979888916
    6. '%' → logprob: -3.475862979888916
    7. 'not' → logprob: -3.475862979888916
    8. ' N' → logprob: -4.225862979888916
    9. 'N' → logprob: -4.475862979888916
    10. ' ' → logprob: -4.600862979888916

Token 221: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4263913035392761
    2. 'par' → logprob: -1.301391363143921
    3. ' ' → logprob: -2.926391363143921
    4. '%' → logprob: -4.551391124725342
    5. ' %' → logprob: -6.301391124725342
    6. 'by' → logprob: -6.301391124725342
    7. ' by' → logprob: -6.426391124725342
    8. '_par' → logprob: -6.551391124725342
    9. '	par' → logprob: -7.676391124725342
    10. '  ' → logprob: -7.676391124725342

Token 222: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33947643637657166
    2. ' N' → logprob: -1.964476466178894
    3. '2' → logprob: -2.0894763469696045
    4. 'N' → logprob: -3.9644763469696045
    5. '3' → logprob: -5.464476585388184
    6. '10' → logprob: -8.464476585388184
    7. '7' → logprob: -8.839476585388184
    8. '4' → logprob: -9.339476585388184
    9. '9' → logprob: -10.339476585388184
    10. '6' → logprob: -10.339476585388184

Token 223: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2673425078392029
    2. '2' → logprob: -1.5173425674438477
    3. '3' → logprob: -4.767342567443848
    4. ' N' → logprob: -5.392342567443848
    5. ' ' → logprob: -6.767342567443848
    6. '7' → logprob: -7.392342567443848
    7. '4' → logprob: -8.642342567443848
    8. '10' → logprob: -9.142342567443848
    9. '5' → logprob: -9.767342567443848
    10. '9' → logprob: -10.392342567443848

Token 224: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4840703010559082
    2. '   ' → logprob: -1.4840703010559082
    3. ' :' → logprob: -2.609070301055908
    4. ' and' → logprob: -2.859070301055908
    5. ' or' → logprob: -4.109070301055908
    6. 'and' → logprob: -5.109070301055908
    7. ' ==' → logprob: -6.984070301055908
    8. '==' → logprob: -7.484070301055908
    9. '    ' → logprob: -7.859070301055908
    10. ',' → logprob: -7.859070301055908

Token 225: ' c' (ID: 274)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7608156204223633
    2. '   ' → logprob: -1.5108156204223633
    3. ' ' → logprob: -2.3858156204223633
    4. ' not' → logprob: -3.0108156204223633
    5. ' continue' → logprob: -3.3858156204223633
    6. '       ' → logprob: -4.010815620422363
    7. ' mais' → logprob: -4.260815620422363
    8. ' or' → logprob: -4.385815620422363
    9. '0' → logprob: -4.635815620422363
    10. ' et' → logprob: -4.760815620422363

Token 226: ''est' (ID: 6616)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2804069221019745
    2. ''est' → logprob: -2.155406951904297
    3. '   ' → logprob: -3.405406951904297
    4. 'on' → logprob: -3.530406951904297
    5. 'ont' → logprob: -4.155406951904297
    6. 'e' → logprob: -4.780406951904297
    7. 'i' → logprob: -5.280406951904297
    8. 'ar' → logprob: -5.405406951904297
    9. 'est' → logprob: -5.530406951904297
    10. ''' → logprob: -5.530406951904297

Token 227: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.04687497392296791
    2. 'à' → logprob: -3.921875
    3. '=' → logprob: -4.921875
    4. '-' → logprob: -5.171875
    5. 'False' → logprob: -5.921875
    6. ' à' → logprob: -5.921875
    7. '   ' → logprob: -6.046875
    8. 'a' → logprob: -6.796875
    9. '_' → logprob: -7.421875
    10. '0' → logprob: -7.421875

Token 228: '-dire' (ID: 76064)
  Prédit: '-à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.18735146522521973
    2. 'False' → logprob: -2.4373514652252197
    3. 'pas' → logprob: -4.187351226806641
    4. '#' → logprob: -4.437351226806641
    5. 'à' → logprob: -4.562351226806641
    6. 'non' → logprob: -4.687351226806641
    7. '=' → logprob: -4.937351226806641
    8. '0' → logprob: -5.187351226806641
    9. 'i' → logprob: -5.312351226806641
    10. 'dire' → logprob: -5.437351226806641

Token 229: ' si' (ID: 1784)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05086328089237213
    2. 'i' → logprob: -3.050863265991211
    3. ' if' → logprob: -6.800863265991211
    4. 'if' → logprob: -7.675863265991211
    5. '   ' → logprob: -8.175863265991211
    6. '(i' → logprob: -8.675863265991211
    7. ' ' → logprob: -8.800863265991211
    8. ' not' → logprob: -10.175863265991211
    9. '  ' → logprob: -11.300863265991211
    10. 'not' → logprob: -11.550863265991211

Token 230: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04860338568687439
    2. 'i' → logprob: -3.0486032962799072
    3. ' ' → logprob: -11.798603057861328
    4. '   ' → logprob: -13.173603057861328
    5. ' ' → logprob: -13.423603057861328
    6. '	i' → logprob: -13.548603057861328
    7. '(i' → logprob: -13.673603057861328
    8. '  ' → logprob: -14.298603057861328
    9. ' (' → logprob: -14.673603057861328
    10. '```' → logprob: -14.923603057861328

Token 231: ''est' (ID: 6616)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04798818379640579
    2. 'i' → logprob: -3.797988176345825
    3. '   ' → logprob: -4.297988414764404
    4. ' ' → logprob: -5.047988414764404
    5. '(i' → logprob: -5.922988414764404
    6. '%' → logprob: -7.672988414764404
    7. '  ' → logprob: -8.297987937927246
    8. 'est' → logprob: -8.797987937927246
    9. 'e' → logprob: -8.922987937927246
    10. 'on' → logprob: -9.672987937927246

Token 232: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.34151574969291687
    2. ' i' → logprob: -2.3415157794952393
    3. ' pair' → logprob: -3.0915157794952393
    4. 'i' → logprob: -3.7165157794952393
    5. 'un' → logprob: -3.8415157794952393
    6. ' ' → logprob: -3.8415157794952393
    7. 'pair' → logprob: -4.21651554107666
    8. ' divisible' → logprob: -4.34151554107666
    9. ' pas' → logprob: -4.46651554107666
    10. ' not' → logprob: -5.09151554107666

Token 233: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5918657183647156
    2. 'nombre' → logprob: -1.7168657779693604
    3. ' ' → logprob: -2.0918657779693604
    4. ' multiple' → logprob: -2.3418657779693604
    5. ' pair' → logprob: -3.9668657779693604
    6. ' entier' → logprob: -4.091865539550781
    7. 'multiple' → logprob: -6.216865539550781
    8. 'pair' → logprob: -6.341865539550781
    9. ' paire' → logprob: -6.716865539550781
    10. 'n' → logprob: -6.841865539550781

Token 234: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.7405875325202942
    2. 'pair' → logprob: -0.7405875325202942
    3. ' impair' → logprob: -3.3655874729156494
    4. ' paire' → logprob: -5.2405877113342285
    5. '%' → logprob: -5.9905877113342285
    6. ' divisible' → logprob: -6.9905877113342285
    7. '   ' → logprob: -7.7405877113342285
    8. ' pairs' → logprob: -7.9905877113342285
    9. '_pair' → logprob: -8.11558723449707
    10. 'prem' → logprob: -8.36558723449707

Token 235: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3596557676792145
    2. ':' → logprob: -1.234655737876892
    3. ' :' → logprob: -4.734655857086182
    4. ' and' → logprob: -7.109655857086182
    5. ' if' → logprob: -7.609655857086182
    6. 'and' → logprob: -8.359655380249023
    7. 'if' → logprob: -8.484655380249023
    8. ' or' → logprob: -8.609655380249023
    9. ':
' → logprob: -8.859655380249023
    10. '  ' → logprob: -9.609655380249023

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003978992172051221
    2. ' if' → logprob: -8.000397682189941
    3. '    
' → logprob: -10.500397682189941
    4. 'if' → logprob: -11.000397682189941
    5. '   ' → logprob: -11.625397682189941
    6. '```' → logprob: -12.250397682189941
    7. '
' → logprob: -13.375397682189941
    8. '   
' → logprob: -14.625397682189941
    9. ' 
' → logprob: -14.750397682189941
    10. '  ' → logprob: -15.000397682189941

Token 237: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07368002086877823
    2. ' if' → logprob: -3.0736799240112305
    3. 'if' → logprob: -3.6986799240112305
    4. '    
' → logprob: -11.57367992401123
    5. '   ' → logprob: -11.82367992401123
    6. '    ' → logprob: -13.19867992401123
    7. '  ' → logprob: -13.69867992401123
    8. ' ' → logprob: -13.94867992401123
    9. '	if' → logprob: -14.07367992401123
    10. '
' → logprob: -14.19867992401123

Token 238: ' L' (ID: 451)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5281223058700562
    2. '   ' → logprob: -1.2781223058700562
    3. 'if' → logprob: -2.0281224250793457
    4. '    ' → logprob: -9.528121948242188
    5. ' ' → logprob: -10.778121948242188
    6. '   ' → logprob: -11.278121948242188
    7. 'If' → logprob: -11.653121948242188
    8. '    
' → logprob: -11.778121948242188
    9. '  ' → logprob: -11.778121948242188
    10. '	if' → logprob: -12.278121948242188

Token 239: ''op' (ID: 70747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8863500952720642
    2. 'if' → logprob: -0.8863500952720642
    3. ' ' → logprob: -2.761350154876709
    4. ' if' → logprob: -3.011350154876709
    5. 'f' → logprob: -4.011350154876709
    6. ' i' → logprob: -4.136350154876709
    7. 'i' → logprob: -4.261350154876709
    8. '  ' → logprob: -4.886350154876709
    9. '    ' → logprob: -6.386350154876709
    10. '#' → logprob: -7.511350154876709

Token 240: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.090649127960205
    2. '%i' → logprob: -1.465649127960205
    3. 'i' → logprob: -1.840649127960205
    4. '%' → logprob: -2.590649127960205
    5. 'érateur' → logprob: -2.590649127960205
    6. 'ération' → logprob: -3.215649127960205
    7. 'ér' → logprob: -3.715649127960205
    8. 'r' → logprob: -4.465649127960205
    9. '=i' → logprob: -4.715649127960205
    10. 'é' → logprob: -4.840649127960205

Token 241: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02389390394091606
    2. ' %' → logprob: -3.7738938331604004
    3. '%i' → logprob: -7.3988938331604
    4. '%d' → logprob: -11.398894309997559
    5. ' i' → logprob: -12.148894309997559
    6. ' ' → logprob: -12.273894309997559
    7. '%n' → logprob: -12.898894309997559
    8. '%=' → logprob: -13.148894309997559
    9. ' ' → logprob: -13.398894309997559
    10. '%s' → logprob: -13.523894309997559

Token 242: ' calc' (ID: 25691)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0766269639134407
    2. ' ==' → logprob: -3.451627016067505
    3. ' ' → logprob: -3.826627016067505
    4. '2' → logprob: -5.076626777648926
    5. '(i' → logprob: -5.076626777648926
    6. 'i' → logprob: -5.576626777648926
    7. '==' → logprob: -6.076626777648926
    8. '%' → logprob: -7.451626777648926
    9. '   ' → logprob: -8.451626777648926
    10. ' (' → logprob: -8.826626777648926

Token 243: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.01008010283112526
    2. '%' → logprob: -4.760080337524414
    3. 'ulé' → logprob: -7.135080337524414
    4. 'ul' → logprob: -8.135080337524414
    5. '```' → logprob: -9.260080337524414
    6. 'cule' → logprob: -9.385080337524414
    7. 'ulte' → logprob: -10.010080337524414
    8. '%c' → logprob: -11.135080337524414
    9. '=' → logprob: -11.385080337524414
    10. 'u' → logprob: -11.510080337524414

Token 244: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2694881856441498
    2. 'i' → logprob: -1.5194882154464722
    3. ' ' → logprob: -5.019488334655762
    4. '2' → logprob: -5.019488334655762
    5. ' le' → logprob: -6.144488334655762
    6. 'le' → logprob: -6.644488334655762
    7. '(i' → logprob: -8.269488334655762
    8. '1' → logprob: -9.019488334655762
    9. ' la' → logprob: -9.269488334655762
    10. 'l' → logprob: -9.519488334655762

Token 245: ' reste' (ID: 26769)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.05709719657897949
    2. 'mod' → logprob: -3.5570971965789795
    3. 'rest' → logprob: -4.057097434997559
    4. ' reste' → logprob: -5.182097434997559
    5. 're' → logprob: -6.182097434997559
    6. '2' → logprob: -7.682097434997559
    7. ' modulo' → logprob: -7.932097434997559
    8. ' ' → logprob: -8.432097434997559
    9. 'r' → logprob: -8.682097434997559
    10. 'i' → logprob: -8.807097434997559

Token 246: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4541887938976288
    2. ' de' → logprob: -1.2041888236999512
    3. '   ' → logprob: -3.204188823699951
    4. ' i' → logprob: -4.329188823699951
    5. '  ' → logprob: -5.704188823699951
    6. ' ==' → logprob: -5.829188823699951
    7. 'de' → logprob: -6.079188823699951
    8. '    ' → logprob: -7.454188823699951
    9. ' des' → logprob: -7.829188823699951
    10. '2' → logprob: -8.204188346862793

Token 247: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22694489359855652
    2. 'i' → logprob: -1.601944923400879
    3. ' la' → logprob: -7.226944923400879
    4. ' ' → logprob: -7.601944923400879
    5. 'l' → logprob: -9.601944923400879
    6. ' l' → logprob: -9.851944923400879
    7. '2' → logprob: -9.976944923400879
    8. 'division' → logprob: -10.101944923400879
    9. ' division' → logprob: -10.601944923400879
    10. 'la' → logprob: -10.601944923400879

Token 248: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.008496616035699844
    2. ' division' → logprob: -5.2584967613220215
    3. 'div' → logprob: -5.7584967613220215
    4. 'i' → logprob: -9.258496284484863
    5. ' i' → logprob: -12.258496284484863
    6. 'Division' → logprob: -15.008496284484863
    7. '```' → logprob: -15.383496284484863
    8. ' div' → logprob: -15.508496284484863
    9. ' ' → logprob: -15.758496284484863
    10. '(i' → logprob: -16.38349723815918

Token 249: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07877553999423981
    2. '2' → logprob: -3.703775644302368
    3. ' ' → logprob: -4.078775405883789
    4. 'i' → logprob: -4.328775405883789
    5. '   ' → logprob: -4.578775405883789
    6. ' de' → logprob: -4.953775405883789
    7. '(i' → logprob: -6.203775405883789
    8. '1' → logprob: -7.953775405883789
    9. ' par' → logprob: -8.203775405883789
    10. 'de' → logprob: -8.453775405883789

Token 250: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18006625771522522
    2. ' i' → logprob: -1.8050662279129028
    3. '2' → logprob: -8.555066108703613
    4. ' ' → logprob: -9.055066108703613
    5. '1' → logprob: -12.805066108703613
    6. '```' → logprob: -12.930066108703613
    7. '	i' → logprob: -13.055066108703613
    8. ' ' → logprob: -14.180066108703613
    9. '   ' → logprob: -14.305066108703613
    10. '  ' → logprob: -14.555066108703613

Token 251: ' par' (ID: 686)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17222419381141663
    2. ' par' → logprob: -2.672224283218384
    3. ' ' → logprob: -3.172224283218384
    4. '   ' → logprob: -3.922224283218384
    5. 'i' → logprob: -5.172224044799805
    6. ' ==' → logprob: -5.297224044799805
    7. '(i' → logprob: -5.922224044799805
    8. ')' → logprob: -6.047224044799805
    9. ' de' → logprob: -6.047224044799805
    10. ' by' → logprob: -6.422224044799805

Token 252: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07889771461486816
    2. ' ' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.078897476196289
    4. '```' → logprob: -14.078897476196289
    5. ' i' → logprob: -14.703897476196289
    6. 'de' → logprob: -15.703897476196289
    7. '   ' → logprob: -15.953897476196289
    8. ' deux' → logprob: -15.953897476196289
    9. '1' → logprob: -16.07889747619629
    10. 'i' → logprob: -16.32889747619629

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.0000057220459
    4. '
' → logprob: -19.3750057220459
    5. 'de' → logprob: -21.3750057220459
    6. '  ' → logprob: -21.5000057220459
    7. '   ' → logprob: -21.6250057220459
    8. '۲' → logprob: -22.1250057220459
    9. ' ' → logprob: -22.2500057220459
    10. 'div' → logprob: -22.2500057220459

Token 254: '.
' (ID: 558)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7001802921295166
    2. ' ==' → logprob: -1.0751802921295166
    3. '   ' → logprob: -2.4501802921295166
    4. '==' → logprob: -3.4501802921295166
    5. '!=' → logprob: -3.5751802921295166
    6. ':' → logprob: -4.3251800537109375
    7. ' :' → logprob: -6.9501800537109375
    8. ',' → logprob: -7.8251800537109375
    9. ' ' → logprob: -7.9501800537109375
    10. ' if' → logprob: -7.9501800537109375

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005667106248438358
    2. ' if' → logprob: -5.380667209625244
    3. 'if' → logprob: -6.880667209625244
    4. '   ' → logprob: -11.255666732788086
    5. '```' → logprob: -13.005666732788086
    6. '    
' → logprob: -13.880666732788086
    7. '       ' → logprob: -14.255666732788086
    8. '	if' → logprob: -14.755666732788086
    9. '  ' → logprob: -14.880666732788086
    10. '   ' → logprob: -15.255666732788086

Token 256: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12383255362510681
    2. 'if' → logprob: -2.4988324642181396
    3. ' if' → logprob: -3.3738324642181396
    4. '   ' → logprob: -11.123832702636719
    5. '       ' → logprob: -12.373832702636719
    6. '  ' → logprob: -12.623832702636719
    7. ' ' → logprob: -12.873832702636719
    8. '    ' → logprob: -12.998832702636719
    9. '```' → logprob: -13.498832702636719
    10. '    
' → logprob: -13.498832702636719

Token 257: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09085623919963837
    2. ' if' → logprob: -2.4658563137054443
    3. '   ' → logprob: -6.340856075286865
    4. 'If' → logprob: -9.590856552124023
    5. 'Si' → logprob: -10.215856552124023
    6. ' si' → logprob: -10.840856552124023
    7. ' Si' → logprob: -11.715856552124023
    8. 'si' → logprob: -12.590856552124023
    9. '```' → logprob: -12.715856552124023
    10. '  ' → logprob: -12.840856552124023

Token 258: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.033674515783786774
    2. 'i' → logprob: -3.408674478530884
    3. ' ' → logprob: -11.408674240112305
    4. ' ' → logprob: -11.783674240112305
    5. '(i' → logprob: -12.533674240112305
    6. '	i' → logprob: -13.033674240112305
    7. ' (' → logprob: -13.408674240112305
    8. 'flag' → logprob: -14.033674240112305
    9. ' flag' → logprob: -14.533674240112305
    10. '   ' → logprob: -15.283674240112305

Token 259: ' reste' (ID: 26769)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4807351529598236
    2. ' i' → logprob: -0.980735182762146
    3. 'reste' → logprob: -6.1057353019714355
    4. 're' → logprob: -6.3557353019714355
    5. ' reste' → logprob: -6.7307353019714355
    6. 'rest' → logprob: -6.8557353019714355
    7. ' remainder' → logprob: -8.605734825134277
    8. 'r' → logprob: -8.980734825134277
    9. ' rest' → logprob: -9.980734825134277
    10. ' ' → logprob: -10.730734825134277

Token 260: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5029395222663879
    2. ' ==' → logprob: -1.1279394626617432
    3. '==' → logprob: -3.502939462661743
    4. '!=' → logprob: -3.627939462661743
    5. ' ' → logprob: -4.502939701080322
    6. ' de' → logprob: -6.877939701080322
    7. '=' → logprob: -7.377939701080322
    8. ' i' → logprob: -7.752939701080322
    9. ' =' → logprob: -7.877939701080322
    10. ' est' → logprob: -8.127939224243164

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7318646907806396
    2. ' ' → logprob: -0.9818646907806396
    3. ' différent' → logprob: -2.3568646907806396
    4. ' different' → logprob: -3.6068646907806396
    5. ' égal' → logprob: -4.856864929199219
    6. 'different' → logprob: -5.231864929199219
    7. '1' → logprob: -6.106864929199219
    8. '=' → logprob: -6.231864929199219
    9. ' !=' → logprob: -6.981864929199219
    10. ' =' → logprob: -7.106864929199219

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011916478164494038
    2. 'diff' → logprob: -5.136916637420654
    3. ' ' → logprob: -6.636916637420654
    4. 'different' → logprob: -6.636916637420654
    5. ' différent' → logprob: -6.636916637420654
    6. '!=' → logprob: -7.261916637420654
    7. '==' → logprob: -7.761916637420654
    8. ' different' → logprob: -8.136916160583496
    9. '=' → logprob: -8.136916160583496
    10. '1' → logprob: -8.511916160583496

Token 263: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09911870211362839
    2. ' ==' → logprob: -2.724118709564209
    3. ' :' → logprob: -4.724118709564209
    4. '   ' → logprob: -4.849118709564209
    5. ',' → logprob: -5.349118709564209
    6. '==' → logprob: -5.599118709564209
    7. ' !=' → logprob: -5.724118709564209
    8. ':
' → logprob: -9.47411823272705
    9. '!=' → logprob: -9.47411823272705
    10. ' ,' → logprob: -9.97411823272705

Token 264: ' alors' (ID: 17971)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.09126174449920654
    2. '   ' → logprob: -2.966261863708496
    3. 'flag' → logprob: -3.716261863708496
    4. '    ' → logprob: -5.591261863708496
    5. ' i' → logprob: -5.841261863708496
    6. ' ' → logprob: -6.466261863708496
    7. ' if' → logprob: -7.466261863708496
    8. '    
' → logprob: -7.466261863708496
    9. ' continue' → logprob: -8.091261863708496
    10. '(flag' → logprob: -8.216261863708496

Token 265: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04871942475438118
    2. 'i' → logprob: -3.0487194061279297
    3. '   ' → logprob: -10.17371940612793
    4. ' flag' → logprob: -10.42371940612793
    5. ' ' → logprob: -10.54871940612793
    6. 'flag' → logprob: -10.92371940612793
    7. '(i' → logprob: -11.79871940612793
    8. '  ' → logprob: -12.79871940612793
    9. ' ' → logprob: -12.79871940612793
    10. ' (' → logprob: -12.92371940612793

Token 266: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07145435363054276
    2. '%' → logprob: -2.6964542865753174
    3. ' est' → logprob: -6.6964545249938965
    4. ' ' → logprob: -8.446454048156738
    5. ' ==' → logprob: -10.071454048156738
    6. 'est' → logprob: -11.946454048156738
    7. ' ' → logprob: -12.196454048156738
    8. ' is' → logprob: -12.696454048156738
    9. '   ' → logprob: -12.946454048156738
    10. '%d' → logprob: -13.821454048156738

Token 267: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.19636449217796326
    2. 'pair' → logprob: -2.446364402770996
    3. ' divisible' → logprob: -2.446364402770996
    4. ' paire' → logprob: -5.696364402770996
    5. ' even' → logprob: -7.821364402770996
    6. ' ' → logprob: -7.821364402770996
    7. 'div' → logprob: -8.071364402770996
    8. 'even' → logprob: -8.821364402770996
    9. '_pair' → logprob: -9.321364402770996
    10. ' égal' → logprob: -9.821364402770996

Token 268: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5263909101486206
    2. ':' → logprob: -0.9013909101486206
    3. ' :' → logprob: -6.65139102935791
    4. ',' → logprob: -6.90139102935791
    5. '       ' → logprob: -7.40139102935791
    6. '.' → logprob: -8.90139102935791
    7. ':
' → logprob: -9.15139102935791
    8. ' if' → logprob: -10.90139102935791
    9. ' and' → logprob: -11.02639102935791
    10. '    ' → logprob: -11.15139102935791

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020351072307676077
    2. ' if' → logprob: -6.377035140991211
    3. 'if' → logprob: -8.127035140991211
    4. '   ' → logprob: -11.752035140991211
    5. '    
' → logprob: -11.877035140991211
    6. ':' → logprob: -12.127035140991211
    7. '```' → logprob: -12.127035140991211
    8. '       ' → logprob: -12.377035140991211
    9. '
' → logprob: -12.877035140991211
    10. '  ' → logprob: -13.752035140991211

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5131086707115173
    2. '   ' → logprob: -1.013108730316162
    3. ' if' → logprob: -3.263108730316162
    4. '	if' → logprob: -13.013108253479004
    5. ' ' → logprob: -13.138108253479004
    6. '  ' → logprob: -13.138108253479004
    7. '   ' → logprob: -13.513108253479004
    8. '    
' → logprob: -14.138108253479004
    9. '```' → logprob: -14.138108253479004
    10. '       ' → logprob: -14.513108253479004

Token 271: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0025231034960597754
    2. 'i' → logprob: -6.002522945404053
    3. ' ' → logprob: -10.127523422241211
    4. '(i' → logprob: -13.127523422241211
    5. '   ' → logprob: -13.377523422241211
    6. ' ' → logprob: -13.377523422241211
    7. ' (' → logprob: -13.752523422241211
    8. '  ' → logprob: -14.377523422241211
    9. '	i' → logprob: -14.627523422241211
    10. '(' → logprob: -17.00252342224121

Token 272: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0028238967061042786
    2. '%' → logprob: -5.877823829650879
    3. ' ' → logprob: -10.877823829650879
    4. ' ' → logprob: -15.752823829650879
    5. ' %
' → logprob: -17.002824783325195
    6. '   ' → logprob: -18.877824783325195
    7. '```' → logprob: -19.127824783325195
    8. ')' → logprob: -19.252824783325195
    9. '  ' → logprob: -19.627824783325195
    10. '2' → logprob: -19.752824783325195

Token 273: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2014141082763672
    2. '2' → logprob: -1.7014141082763672
    3. '```' → logprob: -14.576414108276367
    4. ' ' → logprob: -15.826414108276367
    5. '1' → logprob: -16.326414108276367
    6. '0' → logprob: -16.638914108276367
    7. '  ' → logprob: -17.138914108276367
    8. '=' → logprob: -17.701414108276367
    9. ' 
' → logprob: -17.763914108276367
    10. '<|end|>' → logprob: -18.076414108276367

Token 274: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -17.62500762939453
    4. '   ' → logprob: -18.87500762939453
    5. '  ' → logprob: -20.43750762939453
    6. '0' → logprob: -20.43750762939453
    7. '۲' → logprob: -20.56250762939453
    8. '==' → logprob: -20.87500762939453
    9. '
' → logprob: -21.00000762939453
    10. '２' → logprob: -21.50000762939453

Token 275: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4765189290046692
    2. ' !=' → logprob: -1.2265188694000244
    3. '==' → logprob: -2.6015188694000244
    4. ' ==' → logprob: -4.4765191078186035
    5. '=' → logprob: -9.351518630981445
    6. ':' → logprob: -9.851518630981445
    7. '0' → logprob: -10.726518630981445
    8. ')!=' → logprob: -11.726518630981445
    9. '```' → logprob: -12.101518630981445
    10. '!' → logprob: -12.351518630981445

Token 276: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3140188455581665
    2. ' ' → logprob: -1.3140188455581665
    3. '1' → logprob: -7.189018726348877
    4. '```' → logprob: -14.376519203186035
    5. ' ' → logprob: -14.876519203186035
    6. '  ' → logprob: -15.126519203186035
    7. '   ' → logprob: -16.12651824951172
    8. '=' → logprob: -16.81401824951172
    9. '۰' → logprob: -16.81401824951172
    10. '==' → logprob: -17.06401824951172

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021843716967850924
    2. ' ' → logprob: -8.500218391418457
    3. '1' → logprob: -11.125218391418457
    4. '```' → logprob: -16.500219345092773
    5. '2' → logprob: -16.562719345092773
    6. '   ' → logprob: -17.562719345092773
    7. '  ' → logprob: -17.562719345092773
    8. ':' → logprob: -18.625219345092773
    9. '۰' → logprob: -18.687719345092773
    10. ')' → logprob: -19.000219345092773

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012783447280526161
    2. ':
' → logprob: -4.387783527374268
    3. '   ' → logprob: -8.26278305053711
    4. ' :' → logprob: -12.01278305053711
    5. ' and' → logprob: -12.13778305053711
    6. '       ' → logprob: -13.88778305053711
    7. 'and' → logprob: -14.51278305053711
    8. ' :
' → logprob: -14.63778305053711
    9. '):' → logprob: -15.01278305053711
    10. ':
' → logprob: -15.01278305053711

Token 279: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6948739886283875
    2. '       ' → logprob: -0.6948739886283875
    3. ' flag' → logprob: -7.069873809814453
    4. ':' → logprob: -8.069873809814453
    5. 'flag' → logprob: -8.319873809814453
    6. '    
' → logprob: -9.819873809814453
    7. '
' → logprob: -9.819873809814453
    8. ' continue' → logprob: -10.444873809814453
    9. '   ' → logprob: -10.569873809814453
    10. '    ' → logprob: -11.194873809814453

Token 280: ' #' (ID: 1069)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.09194637089967728
    2. '   ' → logprob: -2.4669463634490967
    3. 'continue' → logprob: -6.591946601867676
    4. ' flag' → logprob: -7.091946601867676
    5. 'print' → logprob: -7.966946601867676
    6. '       ' → logprob: -8.716946601867676
    7. '	flag' → logprob: -9.716946601867676
    8. 'pass' → logprob: -9.716946601867676
    9. '    
' → logprob: -10.091946601867676
    10. '  ' → logprob: -10.841946601867676

Token 281: ' Si' (ID: 7832)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0008221378084272146
    2. 'continue' → logprob: -7.875822067260742
    3. 'print' → logprob: -8.750822067260742
    4. '   ' → logprob: -9.000822067260742
    5. ' flag' → logprob: -9.250822067260742
    6. 'pass' → logprob: -9.875822067260742
    7. 'fl' → logprob: -12.750822067260742
    8. '	flag' → logprob: -12.750822067260742
    9. 'f' → logprob: -14.000822067260742
    10. '       ' → logprob: -14.125822067260742

Token 282: ' '' (ID: 461)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.20431897044181824
    2. 'flag' → logprob: -1.7043190002441406
    3. ' not' → logprob: -6.704319000244141
    4. ' i' → logprob: -7.829319000244141
    5. ' ' → logprob: -7.954319000244141
    6. '	flag' → logprob: -8.20431900024414
    7. '   ' → logprob: -8.70431900024414
    8. ' True' → logprob: -9.20431900024414
    9. '(flag' → logprob: -9.70431900024414
    10. '    ' → logprob: -9.70431900024414

Token 283: 'i' (ID: 72)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.09876248240470886
    2. ' flag' → logprob: -2.5987625122070312
    3. 'i' → logprob: -4.223762512207031
    4. ' i' → logprob: -5.723762512207031
    5. ' not' → logprob: -7.723762512207031
    6. 'True' → logprob: -7.848762512207031
    7. 'not' → logprob: -7.973762512207031
    8. ' True' → logprob: -8.348762512207031
    9. '	flag' → logprob: -9.598762512207031
    10. ')' → logprob: -9.973762512207031

Token 284: ''' (ID: 6)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5886958837509155
    2. '%' → logprob: -1.4636958837509155
    3. ' !=' → logprob: -1.7136958837509155
    4. ' ==' → logprob: -4.088696002960205
    5. ' ' → logprob: -5.588696002960205
    6. '!=' → logprob: -5.713696002960205
    7. ' flag' → logprob: -6.463696002960205
    8. ' >' → logprob: -6.463696002960205
    9. ' n' → logprob: -6.588696002960205
    10. '   ' → logprob: -6.838696002960205

Token 285: ' est' (ID: 893)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7735856175422668
    2. ' !=' → logprob: -1.148585557937622
    3. '%' → logprob: -2.023585557937622
    4. '>' → logprob: -3.773585557937622
    5. 'flag' → logprob: -4.273585796356201
    6. '==' → logprob: -4.523585796356201
    7. ' ==' → logprob: -4.523585796356201
    8. ' flag' → logprob: -4.523585796356201
    9. '=' → logprob: -5.398585796356201
    10. ' %' → logprob: -5.523585796356201

Token 286: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.5576720833778381
    2. ' pair' → logprob: -1.0576720237731934
    3. '0' → logprob: -3.4326720237731934
    4. '1' → logprob: -4.432672023773193
    5. ' not' → logprob: -5.057672023773193
    6. ' ' → logprob: -5.057672023773193
    7. 'flag' → logprob: -5.557672023773193
    8. ' divisible' → logprob: -5.557672023773193
    9. ' paire' → logprob: -5.682672023773193
    10. 'not' → logprob: -5.932672023773193

Token 287: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0407734140753746
    2. ':
' → logprob: -3.540773391723633
    3. '       ' → logprob: -5.290773391723633
    4. '           ' → logprob: -5.415773391723633
    5. ',' → logprob: -7.540773391723633
    6. ' :' → logprob: -7.790773391723633
    7. '   ' → logprob: -8.790773391723633
    8. ' and' → logprob: -8.915773391723633
    9. '=' → logprob: -9.790773391723633
    10. ' flag' → logprob: -10.040773391723633

Token 288: ' on' (ID: 402)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.5795804858207703
    2. ' flag' → logprob: -0.9545804858207703
    3. '   ' → logprob: -3.079580545425415
    4. '       ' → logprob: -4.954580307006836
    5. ' continue' → logprob: -7.454580307006836
    6. 'continue' → logprob: -7.704580307006836
    7. 'print' → logprob: -8.454580307006836
    8. '	flag' → logprob: -8.829580307006836
    9. '    ' → logprob: -8.954580307006836
    10. ' ' → logprob: -9.079580307006836

Token 289: ' s' (ID: 265)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1809536218643188
    2. ' flag' → logprob: -1.1809536218643188
    3. '       ' → logprob: -2.1809535026550293
    4. 'flag' → logprob: -2.4309535026550293
    5. '           ' → logprob: -2.6809535026550293
    6. 'continue' → logprob: -2.9309535026550293
    7. ' print' → logprob: -3.5559535026550293
    8. 'print' → logprob: -3.6809535026550293
    9. '   ' → logprob: -6.180953502655029
    10. ' n' → logprob: -6.555953502655029

Token 290: ''ass' (ID: 43919)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.020359216257929802
    2. 'ort' → logprob: -4.270359039306641
    3. 'etting' → logprob: -6.145359039306641
    4. 'e' → logprob: -6.895359039306641
    5. 'ette' → logprob: -7.145359039306641
    6. ''arr' → logprob: -8.02035903930664
    7. 'etter' → logprob: -8.02035903930664
    8. 'ais' → logprob: -8.89535903930664
    9. ''aff' → logprob: -9.14535903930664
    10. 'é' → logprob: -9.14535903930664

Token 291: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0818694457411766
    2. '#' → logprob: -3.95686936378479
    3. 'igne' → logprob: -3.95686936378479
    4. 'ert' → logprob: -4.081869602203369
    5. 'e' → logprob: -4.331869602203369
    6. 'ur' → logprob: -5.331869602203369
    7. 'eur' → logprob: -6.081869602203369
    8. 'oit' → logprob: -6.831869602203369
    9. 'ign' → logprob: -7.581869602203369
    10. 'et' → logprob: -7.956869602203369

Token 292: ' qu' (ID: 474)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3960951864719391
    2. '       ' → logprob: -1.7710951566696167
    3. ' que' → logprob: -2.0210952758789062
    4. ' de' → logprob: -4.146095275878906
    5. '        ' → logprob: -5.771095275878906
    6. '   ' → logprob: -6.771095275878906
    7. '          ' → logprob: -7.271095275878906
    8. ' that' → logprob: -7.396095275878906
    9. ' d' → logprob: -7.521095275878906
    10. ' ' → logprob: -7.521095275878906

Token 293: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08645948767662048
    2. '       ' → logprob: -3.5864593982696533
    3. 'pas' → logprob: -4.086459636688232
    4. ' flag' → logprob: -5.461459636688232
    5. ' pas' → logprob: -5.461459636688232
    6. 'u' → logprob: -5.586459636688232
    7. ' que' → logprob: -5.711459636688232
    8. ''' → logprob: -5.961459636688232
    9. 'flag' → logprob: -6.211459636688232
    10. 'o' → logprob: -6.211459636688232

Token 294: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.89604252576828
    2. ' ne' → logprob: -1.1460425853729248
    3. 'n' → logprob: -2.146042585372925
    4. '#' → logprob: -3.396042585372925
    5. 'est' → logprob: -4.021042346954346
    6. ''est' → logprob: -4.021042346954346
    7. 'n't' → logprob: -4.271042346954346
    8. ' continue' → logprob: -4.521042346954346
    9. 'ne' → logprob: -4.646042346954346
    10. 'continue' → logprob: -5.021042346954346

Token 295: ' divisible' (ID: 167813)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.5756441354751587
    2. '>' → logprob: -2.075644016265869
    3. '>=' → logprob: -2.450644016265869
    4. ' not' → logprob: -2.700644016265869
    5. ' différent' → logprob: -2.700644016265869
    6. ' divisible' → logprob: -2.700644016265869
    7. 'not' → logprob: -2.825644016265869
    8. 'different' → logprob: -2.950644016265869
    9. ' different' → logprob: -3.075644016265869
    10. 'strict' → logprob: -3.325644016265869

Token 296: ' soit' (ID: 17293)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4495934247970581
    2. 'par' → logprob: -1.074593424797058
    3. '   ' → logprob: -5.074593544006348
    4. 'au' → logprob: -5.574593544006348
    5. ' au' → logprob: -5.824593544006348
    6. ' aussi' → logprob: -5.949593544006348
    7. ' ' → logprob: -6.949593544006348
    8. 'a' → logprob: -7.324593544006348
    9. '       ' → logprob: -7.574593544006348
    10. 'égal' → logprob: -8.512093544006348

Token 297: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04428744688630104
    2. 'par' → logprob: -3.4192874431610107
    3. ' ' → logprob: -5.54428768157959
    4. '<|end|>' → logprob: -6.16928768157959
    5. ' au' → logprob: -7.29428768157959
    6. '   ' → logprob: -7.66928768157959
    7. ' pas' → logprob: -7.66928768157959
    8. ' by' → logprob: -7.85678768157959
    9. ' aussi' → logprob: -7.91928768157959
    10. 'au' → logprob: -8.16928768157959

Token 298: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.09000430256128311
    2. ' ' → logprob: -2.4650042057037354
    3. '4' → logprob: -6.9650044441223145
    4. '5' → logprob: -9.590003967285156
    5. ' N' → logprob: -11.465003967285156
    6. 'N' → logprob: -11.965003967285156
    7. '6' → logprob: -11.965003967285156
    8. '2' → logprob: -11.965003967285156
    9. '7' → logprob: -12.152503967285156
    10. '   ' → logprob: -12.840003967285156

Token 299: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023566193878650665
    2. '4' → logprob: -3.773566246032715
    3. '5' → logprob: -8.773566246032715
    4. ' ' → logprob: -9.523566246032715
    5. '2' → logprob: -10.523566246032715
    6. '6' → logprob: -10.648566246032715
    7. 'N' → logprob: -11.273566246032715
    8. '7' → logprob: -11.773566246032715
    9. '10' → logprob: -11.898566246032715
    10. '8' → logprob: -12.898566246032715

Token 300: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4548913538455963
    2. '       ' → logprob: -1.079891324043274
    3. ' ou' → logprob: -4.704891204833984
    4. ',' → logprob: -5.204891204833984
    5. '   ' → logprob: -5.454891204833984
    6. 'or' → logprob: -5.579891204833984
    7. '      ' → logprob: -7.329891204833984
    8. '           ' → logprob: -7.704891204833984
    9. '  ' → logprob: -7.829891204833984
    10. ' ' → logprob: -7.954891204833984

Token 301: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.18738022446632385
    2. '       ' → logprob: -2.812380313873291
    3. ' ' → logprob: -3.312380313873291
    4. ' either' → logprob: -3.562380313873291
    5. ' else' → logprob: -4.312380313873291
    6. '        ' → logprob: -5.437380313873291
    7. '           ' → logprob: -5.687380313873291
    8. ' continue' → logprob: -5.812380313873291
    9. ' or' → logprob: -5.937380313873291
    10. ' i' → logprob: -6.187380313873291

Token 302: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.10061001777648926
    2. 'par' → logprob: -2.3506100177764893
    3. '7' → logprob: -8.97560977935791
    4. 'by' → logprob: -9.22560977935791
    5. ' by' → logprob: -9.85060977935791
    6. ' ' → logprob: -10.97560977935791
    7. 'au' → logprob: -11.10060977935791
    8. '       ' → logprob: -11.10060977935791
    9. '   ' → logprob: -11.22560977935791
    10. '9' → logprob: -11.60060977935791

Token 303: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12897558510303497
    2. ' ' → logprob: -2.1289756298065186
    3. '7' → logprob: -6.2539753913879395
    4. '2' → logprob: -9.878975868225098
    5. ' ' → logprob: -10.378975868225098
    6. '9' → logprob: -10.878975868225098
    7. 'or' → logprob: -12.128975868225098
    8. '```' → logprob: -13.128975868225098
    9. '_' → logprob: -13.378975868225098
    10. '   ' → logprob: -13.628975868225098

Token 304: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005040321499109268
    2. '7' → logprob: -5.380040168762207
    3. ' ' → logprob: -8.255040168762207
    4. '4' → logprob: -9.380040168762207
    5. '2' → logprob: -10.130040168762207
    6. '9' → logprob: -10.755040168762207
    7. '11' → logprob: -12.505040168762207
    8. ' ' → logprob: -13.630040168762207
    9. '6' → logprob: -13.942540168762207
    10. '17' → logprob: -14.130040168762207

Token 305: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012717535719275475
    2. '.' → logprob: -5.2627177238464355
    3. ':' → logprob: -5.7627177238464355
    4. ',' → logprob: -5.7627177238464355
    5. ' or' → logprob: -7.2627177238464355
    6. ' if' → logprob: -9.137717247009277
    7. '   ' → logprob: -9.387717247009277
    8. '      ' → logprob: -9.887717247009277
    9. '           ' → logprob: -10.012717247009277
    10. ' :' → logprob: -10.637717247009277

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004723937716335058
    2. ' if' → logprob: -5.379724025726318
    3. 'if' → logprob: -9.87972354888916
    4. '   ' → logprob: -10.12972354888916
    5. '           ' → logprob: -12.25472354888916
    6. '        
' → logprob: -13.12972354888916
    7. '      ' → logprob: -13.62972354888916
    8. ' continue' → logprob: -13.75472354888916
    9. ',' → logprob: -13.87972354888916
    10. '    ' → logprob: -15.37972354888916

Token 307: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6950151920318604
    2. 'if' → logprob: -0.9450151920318604
    3. ' if' → logprob: -2.1950151920318604
    4. '   ' → logprob: -7.070014953613281
    5. '	if' → logprob: -11.570014953613281
    6. 'continue' → logprob: -11.570014953613281
    7. '           ' → logprob: -11.695014953613281
    8. ' ' → logprob: -11.820014953613281
    9. '      ' → logprob: -12.695014953613281
    10. '    ' → logprob: -12.695014953613281

Token 308: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06745510548353195
    2. ' if' → logprob: -2.9424550533294678
    3. '       ' → logprob: -4.442455291748047
    4. '   ' → logprob: -7.567455291748047
    5. 'continue' → logprob: -9.442455291748047
    6. 'If' → logprob: -9.567455291748047
    7. ' continue' → logprob: -11.067455291748047
    8. ' ' → logprob: -11.192455291748047
    9. '           ' → logprob: -11.567455291748047
    10. '#' → logprob: -12.692455291748047

Token 309: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7173941135406494
    2. 'continue' → logprob: -1.4673941135406494
    3. ' continue' → logprob: -1.8423941135406494
    4. ' if' → logprob: -2.4673941135406494
    5. 'contin' → logprob: -3.4673941135406494
    6. '       ' → logprob: -6.21739387512207
    7. 'elif' → logprob: -6.59239387512207
    8. ' continues' → logprob: -6.71739387512207
    9. 'n' → logprob: -7.46739387512207
    10. 's' → logprob: -8.34239387512207

Token 310: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0012424940941855311
    2. 'if' → logprob: -7.251242637634277
    3. 'ifiez' → logprob: -8.501242637634277
    4. 'rite' → logprob: -9.876242637634277
    5. 'er' → logprob: -10.001242637634277
    6. 'rif' → logprob: -10.251242637634277
    7. 'ifies' → logprob: -10.376242637634277
    8. 'elif' → logprob: -10.751242637634277
    9. 'ifi' → logprob: -11.126242637634277
    10. 'ify' → logprob: -11.501242637634277

Token 311: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7308470010757446
    2. '       ' → logprob: -1.3558470010757446
    3. ' if' → logprob: -1.4808470010757446
    4. 'not' → logprob: -3.855846881866455
    5. '   ' → logprob: -4.855846881866455
    6. ' not' → logprob: -5.730846881866455
    7. '           ' → logprob: -7.605846881866455
    8. ' que' → logprob: -8.355847358703613
    9. '      ' → logprob: -9.855847358703613
    10. ' ' → logprob: -9.855847358703613

Token 312: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05342089384794235
    2. 'u' → logprob: -4.3034210205078125
    3. ''abord' → logprob: -4.5534210205078125
    4. 'es' → logprob: -5.3034210205078125
    5. 'not' → logprob: -5.4284210205078125
    6. 'ans' → logprob: -6.0534210205078125
    7. '   ' → logprob: -6.0534210205078125
    8. 'i' → logprob: -6.4284210205078125
    9. ' e' → logprob: -6.5534210205078125
    10. 'eux' → logprob: -6.9284210205078125

Token 313: ' qu' (ID: 474)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.166260227560997
    2. ' if' → logprob: -1.9162602424621582
    3. '(i' → logprob: -5.666260242462158
    4. 'not' → logprob: -6.666260242462158
    5. '   ' → logprob: -8.041259765625
    6. ' i' → logprob: -8.041259765625
    7. ' not' → logprob: -8.166259765625
    8. ' (' → logprob: -9.041259765625
    9. 'i' → logprob: -9.416259765625
    10. ' ' → logprob: -9.791259765625

Token 314: ''il' (ID: 14683)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22165894508361816
    2. 'not' → logprob: -2.221658945083618
    3. ' not' → logprob: -2.846658945083618
    4. ' i' → logprob: -4.721658706665039
    5. '(not' → logprob: -5.221658706665039
    6. 'if' → logprob: -5.846658706665039
    7. 'i' → logprob: -5.846658706665039
    8. ' e' → logprob: -5.971658706665039
    9. '(i' → logprob: -6.096658706665039
    10. ' if' → logprob: -6.221658706665039

Token 315: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2431740015745163
    2. 'n' → logprob: -1.8681739568710327
    3. ' ne' → logprob: -3.2431740760803223
    4. 'ne' → logprob: -4.618174076080322
    5. '%' → logprob: -5.118174076080322
    6. 'n't' → logprob: -5.993174076080322
    7. ' not' → logprob: -6.743174076080322
    8. 'est' → logprob: -7.743174076080322
    9. 'not' → logprob: -7.868174076080322
    10. '!' → logprob: -7.993174076080322

Token 316: ''' (ID: 6)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.028030436486005783
    2. ' %' → logprob: -3.7780303955078125
    3. 'ot' → logprob: -6.7780303955078125
    4. '!=' → logprob: -7.0280303955078125
    5. '>=' → logprob: -7.5280303955078125
    6. '>' → logprob: -7.9030303955078125
    7. '=' → logprob: -7.9030303955078125
    8. ' !=' → logprob: -8.028030395507812
    9. '==' → logprob: -8.653030395507812
    10. ' ==' → logprob: -8.903030395507812

Token 317: 'EST' (ID: 8292)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5755801796913147
    2. ''est' → logprob: -1.20058012008667
    3. ''' → logprob: -2.82558012008667
    4. 'n' → logprob: -2.82558012008667
    5. 'e' → logprob: -5.07558012008667
    6. 'pas' → logprob: -5.20058012008667
    7. ''#' → logprob: -7.07558012008667
    8. '')' → logprob: -7.45058012008667
    9. '%' → logprob: -7.57558012008667
    10. '’est' → logprob: -7.70058012008667

Token 318: ' PAS' (ID: 66794)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5502721071243286
    2. ' pas' → logprob: -1.1752721071243286
    3. ' PAS' → logprob: -2.425271987915039
    4. 'PAS' → logprob: -4.550271987915039
    5. 'not' → logprob: -4.800271987915039
    6. ' not' → logprob: -5.050271987915039
    7. '_pas' → logprob: -7.550271987915039
    8. 'Pas' → logprob: -9.300271987915039
    9. ' NOT' → logprob: -10.050271987915039
    10. 'NOT' → logprob: -11.300271987915039

Token 319: ' divisible' (ID: 167813)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.11076349765062332
    2. ' (' → logprob: -2.3607635498046875
    3. '(' → logprob: -4.9857635498046875
    4. ' pas' → logprob: -6.9857635498046875
    5. ' divisible' → logprob: -7.1107635498046875
    6. ' i' → logprob: -7.3607635498046875
    7. '(not' → logprob: -7.7357635498046875
    8. ' not' → logprob: -7.9857635498046875
    9. 'pas' → logprob: -8.235763549804688
    10. 'not' → logprob: -9.110763549804688

Token 320: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.9258690476417542
    2. ' par' → logprob: -1.3008689880371094
    3. 'pas' → logprob: -1.3008689880371094
    4. ' pas' → logprob: -2.9258689880371094
    5. '   ' → logprob: -5.675868988037109
    6. '       ' → logprob: -6.800868988037109
    7. '```' → logprob: -8.92586898803711
    8. ' ni' → logprob: -9.30086898803711
    9. '(par' → logprob: -9.30086898803711
    10. ' ' → logprob: -9.80086898803711

Token 321: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.030237291008234024
    2. ' ' → logprob: -3.5302371978759766
    3. '(' → logprob: -8.780237197875977
    4. '6' → logprob: -9.030237197875977
    5. '```' → logprob: -9.280237197875977
    6. ' (' → logprob: -10.280237197875977
    7. ' trois' → logprob: -10.530237197875977
    8. 'au' → logprob: -11.530237197875977
    9. '   ' → logprob: -12.030237197875977
    10. '2' → logprob: -12.405237197875977

Token 322: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00013810492237098515
    2. ' ' → logprob: -9.125138282775879
    3. '```' → logprob: -11.750138282775879
    4. '2' → logprob: -12.125138282775879
    5. '(' → logprob: -12.500138282775879
    6. '6' → logprob: -13.000138282775879
    7. '   ' → logprob: -13.375138282775879
    8. '1' → logprob: -14.000138282775879
    9. ' trois' → logprob: -14.000138282775879
    10. 'either' → logprob: -14.125138282775879

Token 323: ' en' (ID: 469)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6184432506561279
    2. ' and' → logprob: -0.8684432506561279
    3. ' or' → logprob: -3.493443250656128
    4. 'or' → logprob: -5.118443489074707
    5. '       ' → logprob: -5.868443489074707
    6. 'et' → logprob: -6.743443489074707
    7. '   ' → logprob: -7.493443489074707
    8. ' et' → logprob: -8.868443489074707
    9. ':' → logprob: -8.993443489074707
    10. ')' → logprob: -9.243443489074707

Token 324: ' vér' (ID: 42524)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1380162239074707
    2. 'not' → logprob: -1.8880162239074707
    3. 'and' → logprob: -2.0130162239074707
    4. ' if' → logprob: -2.0130162239074707
    5. 'if' → logprob: -2.1380162239074707
    6. ' and' → logprob: -2.3880162239074707
    7. ' or' → logprob: -3.5130162239074707
    8. 'or' → logprob: -4.888016223907471
    9. ' ' → logprob: -5.388016223907471
    10. '(not' → logprob: -6.263016223907471

Token 325: 'ifiant' (ID: 91447)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.45415565371513367
    2. 'ifie' → logprob: -1.454155683517456
    3. 'ifiant' → logprob: -2.079155683517456
    4. 'ifi' → logprob: -5.579155445098877
    5. 'ifié' → logprob: -7.579155445098877
    6. 'ifiez' → logprob: -7.829155445098877
    7. '   ' → logprob: -8.454155921936035
    8. ' if' → logprob: -8.454155921936035
    9. 'rif' → logprob: -8.704155921936035
    10. 'rai' → logprob: -8.704155921936035

Token 326: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22314327955245972
    2. ' i' → logprob: -2.7231433391571045
    3. 'if' → logprob: -2.8481433391571045
    4. ' not' → logprob: -3.2231433391571045
    5. ' que' → logprob: -3.8481433391571045
    6. 'not' → logprob: -5.348143100738525
    7. ' ' → logprob: -5.973143100738525
    8. ' (' → logprob: -6.223143100738525
    9. '   ' → logprob: -6.348143100738525
    10. 'i' → logprob: -6.348143100738525

Token 327: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1917072981595993
    2. 'i' → logprob: -1.8167072534561157
    3. ' not' → logprob: -4.941707134246826
    4. 'not' → logprob: -6.191707134246826
    5. '   ' → logprob: -6.941707134246826
    6. ' ' → logprob: -7.191707134246826
    7. ' (' → logprob: -7.941707134246826
    8. '(i' → logprob: -8.316707611083984
    9. '  ' → logprob: -9.316707611083984
    10. '(' → logprob: -9.691707611083984

Token 328: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.474109411239624
    2. ' %' → logprob: -0.974109411239624
    3. ' ' → logprob: -10.849109649658203
    4. '   ' → logprob: -11.724109649658203
    5. ' ' → logprob: -13.474109649658203
    6. '```' → logprob: -14.224109649658203
    7. '  ' → logprob: -14.724109649658203
    8. ')' → logprob: -14.724109649658203
    9. '       ' → logprob: -15.099109649658203
    10. '
' → logprob: -15.474109649658203

Token 329: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.14267855882644653
    2. ' ' → logprob: -2.0176784992218018
    3. '```' → logprob: -13.267678260803223
    4. '2' → logprob: -14.142678260803223
    5. '  ' → logprob: -15.017678260803223
    6. ' ' → logprob: -15.517678260803223
    7. '   ' → logprob: -15.642678260803223
    8. '1' → logprob: -16.45517921447754
    9. '
' → logprob: -17.01767921447754
    10. '`' → logprob: -17.14267921447754

Token 330: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001751103438436985
    2. ' ' → logprob: -6.376750946044922
    3. '2' → logprob: -10.251750946044922
    4. '1' → logprob: -11.876750946044922
    5. '!=' → logprob: -13.626750946044922
    6. '0' → logprob: -13.751750946044922
    7. '```' → logprob: -13.876750946044922
    8. '==' → logprob: -14.501750946044922
    9. '=' → logprob: -14.501750946044922
    10. '3' → logprob: -14.689250946044922

Token 331: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.428899347782135
    2. ' !=' → logprob: -1.0538992881774902
    3. ')!=' → logprob: -9.428899765014648
    4. '()!=' → logprob: -9.553899765014648
    5. ')' → logprob: -11.428899765014648
    6. '!==' → logprob: -11.678899765014648
    7. '!=-' → logprob: -12.053899765014648
    8. ']!=' → logprob: -12.178899765014648
    9. '!='' → logprob: -12.678899765014648
    10. '```' → logprob: -12.678899765014648

Token 332: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20142298936843872
    2. ' ' → logprob: -1.701422929763794
    3. '=' → logprob: -12.951422691345215
    4. ' ' → logprob: -13.076422691345215
    5. '```' → logprob: -13.201422691345215
    6. '1' → logprob: -14.451422691345215
    7. '  ' → logprob: -14.576422691345215
    8. ')' → logprob: -14.638922691345215
    9. '   ' → logprob: -15.076422691345215
    10. '==' → logprob: -15.388922691345215

Token 333: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011056660674512386
    2. ' ' → logprob: -4.511056423187256
    3. '=' → logprob: -12.948556900024414
    4. '```' → logprob: -13.261056900024414
    5. '1' → logprob: -14.073556900024414
    6. ' ' → logprob: -14.198556900024414
    7. '  ' → logprob: -14.823556900024414
    8. '5' → logprob: -14.823556900024414
    9. '   ' → logprob: -14.886056900024414
    10. '==' → logprob: -15.011056900024414

Token 334: '.
' (ID: 558)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8200687766075134
    2. ' or' → logprob: -1.4450688362121582
    3. '       ' → logprob: -1.4450688362121582
    4. 'and' → logprob: -2.820068836212158
    5. ')' → logprob: -4.695068836212158
    6. ':' → logprob: -4.820068836212158
    7. 'or' → logprob: -5.945068836212158
    8. ',' → logprob: -6.070068836212158
    9. ' et' → logprob: -6.320068836212158
    10. '   ' → logprob: -6.695068836212158

Token 335: '       ' (ID: 309)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10493841022253036
    2. '       ' → logprob: -3.354938507080078
    3. 'or' → logprob: -3.479938507080078
    4. ' and' → logprob: -3.729938507080078
    5. ':' → logprob: -5.354938507080078
    6. 'and' → logprob: -5.729938507080078
    7. '   ' → logprob: -7.229938507080078
    8. ')' → logprob: -8.229938507080078
    9. ' ou' → logprob: -8.479938507080078
    10. ',' → logprob: -8.729938507080078

Token 336: ' #' (ID: 1069)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6274996995925903
    2. ' and' → logprob: -1.3774996995925903
    3. '       ' → logprob: -1.8774996995925903
    4. 'and' → logprob: -3.377499580383301
    5. 'or' → logprob: -3.752499580383301
    6. '   ' → logprob: -6.877499580383301
    7. 'et' → logprob: -7.627499580383301
    8. ' et' → logprob: -7.877499580383301
    9. ' ou' → logprob: -8.0024995803833
    10. ' ' → logprob: -8.2524995803833

Token 337: ' Sim' (ID: 7973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1664644181728363
    2. ' or' → logprob: -2.416464328765869
    3. ' and' → logprob: -3.916464328765869
    4. 'or' → logprob: -4.166464328765869
    5. 'and' → logprob: -4.666464328765869
    6. 'if' → logprob: -4.791464328765869
    7. ' if' → logprob: -5.291464328765869
    8. '   ' → logprob: -6.666464328765869
    9. 'et' → logprob: -7.166464328765869
    10. 'print' → logprob: -7.291464328765869

Token 338: 'ila' (ID: 4977)
  Prédit: 'plement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plement' → logprob: -0.03068789653480053
    2. 'ple' → logprob: -3.9056878089904785
    3. 'ultan' → logprob: -5.2806878089904785
    4. '       ' → logprob: -6.5306878089904785
    5. 'PLEMENT' → logprob: -7.1556878089904785
    6. 'p' → logprob: -8.155688285827637
    7. '   ' → logprob: -8.280688285827637
    8. 'ila' → logprob: -8.405688285827637
    9. 'pl' → logprob: -8.405688285827637
    10. 'on' → logprob: -8.655688285827637

Token 339: 'irement' (ID: 19343)
  Prédit: 'irement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irement' → logprob: -0.013249756768345833
    2. 'rement' → logprob: -4.51324987411499
    3. 'ire' → logprob: -6.38824987411499
    4. 'r' → logprob: -8.513249397277832
    5. '#' → logprob: -9.388249397277832
    6. 'urement' → logprob: -9.763249397277832
    7. '```' → logprob: -9.763249397277832
    8. 'i' → logprob: -11.763249397277832
    9. '_' → logprob: -12.013249397277832
    10. '()' → logprob: -12.138249397277832

Token 340: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.23491685092449188
    2. '       ' → logprob: -2.609916925430298
    3. ' and' → logprob: -2.609916925430298
    4. ' ou' → logprob: -4.234916687011719
    5. 'or' → logprob: -4.484916687011719
    6. '   ' → logprob: -4.609916687011719
    7. 'and' → logprob: -4.734916687011719
    8. ' et' → logprob: -4.734916687011719
    9. 'ou' → logprob: -5.609916687011719
    10. 'et' → logprob: -6.359916687011719

Token 341: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10698016732931137
    2. 'i' → logprob: -2.606980085372925
    3. '       ' → logprob: -4.231980323791504
    4. ' and' → logprob: -5.481980323791504
    5. ' if' → logprob: -6.606980323791504
    6. 'and' → logprob: -6.606980323791504
    7. '        ' → logprob: -7.356980323791504
    8. ' or' → logprob: -7.356980323791504
    9. ' then' → logprob: -7.356980323791504
    10. 'if' → logprob: -7.606980323791504

Token 342: ' vér' (ID: 42524)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6943747401237488
    2. 'if' → logprob: -1.5693747997283936
    3. 'v' → logprob: -1.9443747997283936
    4. 'continue' → logprob: -3.5693747997283936
    5. '       ' → logprob: -3.8193747997283936
    6. ' if' → logprob: -3.9443747997283936
    7. ' and' → logprob: -4.0693745613098145
    8. 'or' → logprob: -4.1943745613098145
    9. 'elif' → logprob: -4.9443745613098145
    10. 'n' → logprob: -4.9443745613098145

Token 343: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.004656422417610884
    2. 'ife' → logprob: -7.0046563148498535
    3. 'ement' → logprob: -7.2546563148498535
    4. 'e' → logprob: -7.2546563148498535
    5. 'ise' → logprob: -7.5046563148498535
    6. 'if' → logprob: -7.8796563148498535
    7. 'er' → logprob: -8.504656791687012
    8. 'aire' → logprob: -8.504656791687012
    9. 'era' → logprob: -8.629656791687012
    10. 'ablement' → logprob: -8.879656791687012

Token 344: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.14394307136535645
    2. ' that' → logprob: -2.3939430713653564
    3. 'que' → logprob: -4.018942832946777
    4. '       ' → logprob: -4.893942832946777
    5. 'that' → logprob: -5.143942832946777
    6. '   ' → logprob: -5.393942832946777
    7. ' i' → logprob: -6.018942832946777
    8. ' if' → logprob: -6.518942832946777
    9. ' not' → logprob: -7.268942832946777
    10. ' ' → logprob: -8.268942832946777

Token 345: ''il' (ID: 14683)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10860154032707214
    2. ' que' → logprob: -2.9836015701293945
    3. 'i' → logprob: -3.2336015701293945
    4. '   ' → logprob: -5.4836015701293945
    5. ' that' → logprob: -5.8586015701293945
    6. '       ' → logprob: -6.1086015701293945
    7. ' ' → logprob: -6.3586015701293945
    8. '  ' → logprob: -7.7336015701293945
    9. ' not' → logprob: -7.8586015701293945
    10. 'que' → logprob: -8.358601570129395

Token 346: ' N' (ID: 478)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3485438823699951
    2. '%' → logprob: -1.2235438823699951
    3. ' ' → logprob: -10.098544120788574
    4. '   ' → logprob: -10.598544120788574
    5. '       ' → logprob: -11.973544120788574
    6. ' also' → logprob: -12.473544120788574
    7. 'i' → logprob: -12.473544120788574
    8. 'n' → logprob: -12.848544120788574
    9. '  ' → logprob: -13.098544120788574
    10. ' i' → logprob: -13.223544120788574

Token 347: ''' (ID: 6)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.000455340719781816
    2. ' %' → logprob: -7.750455379486084
    3. 's' → logprob: -11.500454902648926
    4. 'a' → logprob: -12.625454902648926
    5. '%s' → logprob: -13.125454902648926
    6. 'est' → logprob: -14.250454902648926
    7. ')' → logprob: -14.250454902648926
    8. '%i' → logprob: -14.250454902648926
    9. 'i' → logprob: -14.500454902648926
    10. '   ' → logprob: -14.625454902648926

Token 348: 'EST' (ID: 8292)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.42798206210136414
    2. 'EST' → logprob: -2.0529820919036865
    3. 'pas' → logprob: -2.1779820919036865
    4. '%' → logprob: -2.8029820919036865
    5. ''est' → logprob: -3.4279820919036865
    6. 'PAS' → logprob: -5.302981853485107
    7. 's' → logprob: -6.802981853485107
    8. 'n' → logprob: -7.052981853485107
    9. ''' → logprob: -7.052981853485107
    10. 'i' → logprob: -7.177981853485107

Token 349: ' PAS' (ID: 66794)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2527560293674469
    2. ' pas' → logprob: -1.5027559995651245
    3. 'not' → logprob: -7.877756118774414
    4. ' not' → logprob: -8.377756118774414
    5. '_pas' → logprob: -8.752756118774414
    6. ' ' → logprob: -11.127756118774414
    7. 'Pas' → logprob: -11.252756118774414
    8. 't' → logprob: -12.002756118774414
    9. 'PAS' → logprob: -12.377756118774414
    10. ' PAS' → logprob: -12.502756118774414

Token 350: ' divisible' (ID: 167813)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03686702623963356
    2. 'i' → logprob: -3.411867141723633
    3. ' ' → logprob: -5.911867141723633
    4. '   ' → logprob: -8.911867141723633
    5. '3' → logprob: -9.161867141723633
    6. '(i' → logprob: -9.661867141723633
    7. ' que' → logprob: -10.661867141723633
    8. '  ' → logprob: -10.786867141723633
    9. ' par' → logprob: -11.036867141723633
    10. '       ' → logprob: -11.036867141723633

Token 351: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07033674418926239
    2. 'par' → logprob: -2.6953368186950684
    3. ' by' → logprob: -8.69533634185791
    4. 'by' → logprob: -9.32033634185791
    5. '       ' → logprob: -10.57033634185791
    6. ')' → logprob: -10.57033634185791
    7. '(par' → logprob: -10.69533634185791
    8. ' ' → logprob: -10.69533634185791
    9. '	par' → logprob: -11.57033634185791
    10. '   ' → logprob: -11.69533634185791

Token 352: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011078709736466408
    2. ' ' → logprob: -4.511078834533691
    3. '   ' → logprob: -11.386078834533691
    4. '6' → logprob: -12.386078834533691
    5. '  ' → logprob: -12.886078834533691
    6. ' ' → logprob: -13.011078834533691
    7. ' trois' → logprob: -13.761078834533691
    8. '2' → logprob: -13.886078834533691
    9. '```' → logprob: -13.886078834533691
    10. '.' → logprob: -14.386078834533691

Token 353: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0002334568416699767
    2. ' ' → logprob: -8.37523365020752
    3. ' ' → logprob: -14.12523365020752
    4. '   ' → logprob: -14.62523365020752
    5. '```' → logprob: -15.06273365020752
    6. '6' → logprob: -15.37523365020752
    7. '2' → logprob: -15.43773365020752
    8. '  ' → logprob: -15.50023365020752
    9. '1' → logprob: -16.375232696533203
    10. '
' → logprob: -16.500232696533203

Token 354: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6097733378410339
    2. ' and' → logprob: -0.9847733378410339
    3. ' or' → logprob: -2.8597733974456787
    4. ' et' → logprob: -4.8597731590271
    5. 'and' → logprob: -5.2347731590271
    6. ')' → logprob: -5.8597731590271
    7. 'et' → logprob: -6.6097731590271
    8. ' ' → logprob: -6.8597731590271
    9. ' !=' → logprob: -7.2347731590271
    10. ' if' → logprob: -7.2347731590271

Token 355: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07217194885015488
    2. 'i' → logprob: -2.697171926498413
    3. ' (' → logprob: -6.947172164916992
    4. '   ' → logprob: -7.822172164916992
    5. ' ' → logprob: -8.072172164916992
    6. '(i' → logprob: -8.822172164916992
    7. ' not' → logprob: -8.947172164916992
    8. '  ' → logprob: -9.572172164916992
    9. '(' → logprob: -9.947172164916992
    10. '       ' → logprob: -10.197172164916992

Token 356: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3868960440158844
    2. ' %' → logprob: -1.136896014213562
    3. ' ' → logprob: -11.386896133422852
    4. '   ' → logprob: -12.636896133422852
    5. '```' → logprob: -13.824396133422852
    6. '  ' → logprob: -13.886896133422852
    7. ' ' → logprob: -14.199396133422852
    8. '       ' → logprob: -14.261896133422852
    9. ')' → logprob: -14.324396133422852
    10. '`' → logprob: -14.824396133422852

Token 357: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0699506625533104
    2. ' ' → logprob: -2.694950580596924
    3. '```' → logprob: -11.694951057434082
    4. '   ' → logprob: -13.319951057434082
    5. ' ' → logprob: -13.569951057434082
    6. '2' → logprob: -14.069951057434082
    7. '  ' → logprob: -14.444951057434082
    8. '`' → logprob: -14.569951057434082
    9. '>' → logprob: -15.507451057434082
    10. '    ' → logprob: -15.694951057434082

Token 358: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009142052149400115
    2. ' ' → logprob: -7.000914096832275
    3. '```' → logprob: -13.875914573669434
    4. '   ' → logprob: -14.375914573669434
    5. '2' → logprob: -14.875914573669434
    6. '  ' → logprob: -15.875914573669434
    7. ' ' → logprob: -16.375913619995117
    8. '`' → logprob: -16.563413619995117
    9. '>' → logprob: -16.813413619995117
    10. '``' → logprob: -16.938413619995117

Token 359: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.029769349843263626
    2. ' !=' → logprob: -3.5297694206237793
    3. ')!=' → logprob: -11.279768943786621
    4. '()!=' → logprob: -12.529768943786621
    5. '!=-' → logprob: -13.779768943786621
    6. ']!=' → logprob: -14.654768943786621
    7. '!==' → logprob: -14.779768943786621
    8. '>' → logprob: -15.029768943786621
    9. '==' → logprob: -15.904768943786621
    10. ')' → logprob: -16.654769897460938

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519383430480957
    2. ' ' → logprob: -1.5019383430480957
    3. '  ' → logprob: -13.251937866210938
    4. '```' → logprob: -13.251937866210938
    5. '   ' → logprob: -13.501937866210938
    6. '=' → logprob: -13.814437866210938
    7. ' ' → logprob: -14.001937866210938
    8. '3' → logprob: -14.314437866210938
    9. '1' → logprob: -15.439437866210938
    10. ')' → logprob: -15.814437866210938

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008626160211861134
    2. ' ' → logprob: -4.7586259841918945
    3. '3' → logprob: -11.758625984191895
    4. '=' → logprob: -14.133625984191895
    5. '   ' → logprob: -14.383625984191895
    6. '  ' → logprob: -14.696125984191895
    7. '```' → logprob: -15.071125984191895
    8. '1' → logprob: -15.133625984191895
    9. ')' → logprob: -15.133625984191895
    10. ' ' → logprob: -15.258625984191895

Token 362: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14452695846557617
    2. ' and' → logprob: -2.519526958465576
    3. ':' → logprob: -3.519526958465576
    4. ' or' → logprob: -3.894526958465576
    5. 'and' → logprob: -6.394526958465576
    6. ':
' → logprob: -6.644526958465576
    7. '   ' → logprob: -7.769526958465576
    8. '      ' → logprob: -9.019527435302734
    9. '           ' → logprob: -9.144527435302734
    10. ',' → logprob: -9.269527435302734

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03463176637887955
    2. ':' → logprob: -3.5346317291259766
    3. ' and' → logprob: -5.659631729125977
    4. ' or' → logprob: -7.659631729125977
    5. '           ' → logprob: -8.284631729125977
    6. '):' → logprob: -8.909631729125977
    7. ' :' → logprob: -8.909631729125977
    8. '   ' → logprob: -9.034631729125977
    9. 'and' → logprob: -9.409631729125977
    10. ':
' → logprob: -10.159631729125977

Token 364: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01655602641403675
    2. ' and' → logprob: -4.891556262969971
    3. ' or' → logprob: -5.891556262969971
    4. ':' → logprob: -6.391556262969971
    5. 'and' → logprob: -6.516556262969971
    6. 'if' → logprob: -6.516556262969971
    7. ' if' → logprob: -7.016556262969971
    8. '   ' → logprob: -8.516555786132812
    9. 'or' → logprob: -8.891555786132812
    10. '           ' → logprob: -9.641555786132812

Token 365: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09520860761404037
    2. 'if' → logprob: -2.4702086448669434
    3. ' if' → logprob: -5.095208644866943
    4. '   ' → logprob: -9.345208168029785
    5. '      ' → logprob: -11.345208168029785
    6. '           ' → logprob: -11.970208168029785
    7. 'flag' → logprob: -12.470208168029785
    8. 'elif' → logprob: -12.470208168029785
    9. '     ' → logprob: -12.720208168029785
    10. '	if' → logprob: -13.345208168029785

Token 366: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35006386041641235
    2. 'i' → logprob: -1.2250638008117676
    3. '   ' → logprob: -7.100063800811768
    4. ' ' → logprob: -7.600063800811768
    5. ' not' → logprob: -9.850064277648926
    6. ' (' → logprob: -9.975064277648926
    7. '(i' → logprob: -10.100064277648926
    8. '(' → logprob: -10.600064277648926
    9. 'not' → logprob: -10.600064277648926
    10. '    ' → logprob: -10.600064277648926

Token 367: ' deux' (ID: 10301)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3055240511894226
    2. 'i' → logprob: -1.4305241107940674
    3. '   ' → logprob: -4.680523872375488
    4. ' ' → logprob: -5.430523872375488
    5. ' deux' → logprob: -6.055523872375488
    6. ' not' → logprob: -6.430523872375488
    7. ' conditions' → logprob: -6.930523872375488
    8. 'if' → logprob: -7.055523872375488
    9. '  ' → logprob: -7.180523872375488
    10. ' two' → logprob: -7.305523872375488

Token 368: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.04371102526783943
    2. 'conditions' → logprob: -3.168710947036743
    3. ':' → logprob: -7.543711185455322
    4. 'condition' → logprob: -10.168710708618164
    5. ' condition' → logprob: -10.918710708618164
    6. ' condi' → logprob: -11.043710708618164
    7. 'conds' → logprob: -11.168710708618164
    8. '_conditions' → logprob: -11.293710708618164
    9. ' i' → logprob: -11.418710708618164
    10. 'cond' → logprob: -11.418710708618164

Token 369: ' sont' (ID: 5242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05268244817852974
    2. ' sont' → logprob: -3.927682399749756
    3. ' are' → logprob: -4.302682399749756
    4. 's' → logprob: -5.427682399749756
    5. ':
' → logprob: -5.552682399749756
    6. ' and' → logprob: -6.052682399749756
    7. '):' → logprob: -6.052682399749756
    8. ' :' → logprob: -6.177682399749756
    9. ')' → logprob: -6.802682399749756
    10. '   ' → logprob: -8.302682876586914

Token 370: ' vra' (ID: 16065)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.26252231001853943
    2. 'True' → logprob: -1.6375223398208618
    3. ' true' → logprob: -3.7625222206115723
    4. 'v' → logprob: -5.637522220611572
    5. ' ' → logprob: -5.637522220611572
    6. 'true' → logprob: -6.262522220611572
    7. ' vrai' → logprob: -7.012522220611572
    8. '_true' → logprob: -7.262522220611572
    9. ':' → logprob: -7.387522220611572
    10. ' vra' → logprob: -7.387522220611572

Token 371: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -2.15310683415737e-05
    2. 'is' → logprob: -11.250021934509277
    3. 'i' → logprob: -11.750021934509277
    4. 'ises' → logprob: -15.500021934509277
    5. 'iment' → logprob: -15.750021934509277
    6. 'ires' → logprob: -16.50002098083496
    7. 'es' → logprob: -17.37502098083496
    8. 'ie' → logprob: -17.62502098083496
    9. 'ices' → logprob: -18.12502098083496
    10. '```' → logprob: -18.12502098083496

Token 372: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038703661412000656
    2. ',' → logprob: -4.413703441619873
    3. '       ' → logprob: -4.663703441619873
    4. ' and' → logprob: -5.163703441619873
    5. ' :' → logprob: -5.163703441619873
    6. '           ' → logprob: -5.538703441619873
    7. ':
' → logprob: -8.163703918457031
    8. '):' → logprob: -8.163703918457031
    9. ' ,' → logprob: -8.913703918457031
    10. '   ' → logprob: -8.913703918457031

Token 373: ' alors' (ID: 17971)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3529762327671051
    2. '       ' → logprob: -1.2279762029647827
    3. ' flag' → logprob: -5.852976322174072
    4. '        ' → logprob: -8.227975845336914
    5. '        
' → logprob: -8.352975845336914
    6. '   ' → logprob: -8.727975845336914
    7. 'flag' → logprob: -8.727975845336914
    8. '          ' → logprob: -9.102975845336914
    9. '               ' → logprob: -9.477975845336914
    10. '
' → logprob: -9.602975845336914

Token 374: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.908176064491272
    2. ' flag' → logprob: -0.908176064491272
    3. 'flag' → logprob: -2.4081759452819824
    4. '           ' → logprob: -2.6581759452819824
    5. '   ' → logprob: -3.5331759452819824
    6. '  ' → logprob: -7.158175945281982
    7. ' ' → logprob: -7.283175945281982
    8. '    ' → logprob: -7.658175945281982
    9. '      ' → logprob: -7.908175945281982
    10. ':' → logprob: -8.15817642211914

Token 375: ' nombre' (ID: 9733)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.027275074273347855
    2. ' flag' → logprob: -3.7772750854492188
    3. '   ' → logprob: -5.652275085449219
    4. '       ' → logprob: -8.777275085449219
    5. '
' → logprob: -9.402275085449219
    6. ' ' → logprob: -9.652275085449219
    7. '	flag' → logprob: -10.027275085449219
    8. '    
' → logprob: -10.527275085449219
    9. '  ' → logprob: -10.652275085449219
    10. '           ' → logprob: -10.652275085449219

Token 376: ' pair' (ID: 10610)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7243645787239075
    2. '       ' → logprob: -1.3493645191192627
    3. ' flag' → logprob: -2.3493645191192627
    4. ' continue' → logprob: -3.2243645191192627
    5. '   ' → logprob: -3.8493645191192627
    6. 'n' → logprob: -4.099364757537842
    7. 'flag' → logprob: -4.224364757537842
    8. '           ' → logprob: -4.224364757537842
    9. 'continue' → logprob: -4.474364757537842
    10. ' not' → logprob: -5.224364757537842

Token 377: ' ne' (ID: 453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01518607884645462
    2. ':' → logprob: -4.390186309814453
    3. '           ' → logprob: -6.640186309814453
    4. ',' → logprob: -7.640186309814453
    5. '   ' → logprob: -8.640186309814453
    6. ' :' → logprob: -9.140186309814453
    7. ' n' → logprob: -9.140186309814453
    8. ' and' → logprob: -9.390186309814453
    9. ' est' → logprob: -9.890186309814453
    10. '      ' → logprob: -10.140186309814453

Token 378: ' satisfait' (ID: 174890)
  Prédit: ' respecte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' respecte' → logprob: -1.1578209400177002
    2. 'pas' → logprob: -1.2828209400177002
    3. ' n' → logprob: -1.6578209400177002
    4. 'n' → logprob: -2.5328209400177
    5. ' pas' → logprob: -3.0328209400177
    6. ' continue' → logprob: -3.7828209400177
    7. 's' → logprob: -4.282820701599121
    8. ' ne' → logprob: -4.782820701599121
    9. ' respect' → logprob: -4.907820701599121
    10. ' pass' → logprob: -5.282820701599121

Token 379: ' pas' (ID: 2173)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3173108696937561
    2. '       ' → logprob: -2.0673108100891113
    3. ' la' → logprob: -3.0673108100891113
    4. '   ' → logprob: -3.1923108100891113
    5. ':' → logprob: -3.9423108100891113
    6. ' flag' → logprob: -3.9423108100891113
    7. ' le' → logprob: -5.817310810089111
    8. 'flag' → logprob: -6.192310810089111
    9. ' ' → logprob: -6.567310810089111
    10. '  ' → logprob: -6.692310810089111

Token 380: ' la' (ID: 557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7545374035835266
    2. '       ' → logprob: -1.7545373439788818
    3. ' la' → logprob: -2.004537343978882
    4. ':' → logprob: -2.129537343978882
    5. '   ' → logprob: -2.879537343978882
    6. ' le' → logprob: -4.879537582397461
    7. ' ' → logprob: -4.879537582397461
    8. ' the' → logprob: -5.129537582397461
    9. ' :' → logprob: -5.129537582397461
    10. ' not' → logprob: -6.379537582397461

Token 381: ' règle' (ID: 115826)
  Prédit: ' condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' condition' → logprob: -0.48410776257514954
    2. 'condition' → logprob: -1.1091077327728271
    3. ' ' → logprob: -3.859107732772827
    4. '   ' → logprob: -4.609107971191406
    5. '       ' → logprob: -5.109107971191406
    6. ' if' → logprob: -5.859107971191406
    7. 'if' → logprob: -5.859107971191406
    8. 'continue' → logprob: -5.984107971191406
    9. ' conditions' → logprob: -6.484107971191406
    10. 'conditions' → logprob: -6.609107971191406

Token 382: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15694846212863922
    2. '       ' → logprob: -2.6569485664367676
    3. '           ' → logprob: -2.6569485664367676
    4. ' :' → logprob: -6.031948566436768
    5. ',' → logprob: -7.156948566436768
    6. ':
' → logprob: -7.156948566436768
    7. '):' → logprob: -7.406948566436768
    8. ' or' → logprob: -9.53194808959961
    9. '.' → logprob: -9.78194808959961
    10. ' and' → logprob: -9.90694808959961

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003825293097179383
    2. ':' → logprob: -8.625382423400879
    3. '           ' → logprob: -9.625382423400879
    4. '	' → logprob: -10.125382423400879
    5. ' if' → logprob: -10.625382423400879
    6. '   ' → logprob: -10.750382423400879
    7. ' and' → logprob: -11.000382423400879
    8. ' :' → logprob: -11.750382423400879
    9. '      ' → logprob: -12.625382423400879
    10. ',' → logprob: -12.625382423400879

Token 384: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002304412191733718
    2. 'if' (adapté à ' if') → logprob: -7.627304553985596
    3. '           ' → logprob: -7.627304553985596
    4. ' if' → logprob: -7.752304553985596
    5. 'flag' → logprob: -7.752304553985596
    6. ' flag' → logprob: -7.877304553985596
    7. '   ' → logprob: -9.502304077148438
    8. '      ' → logprob: -12.127304077148438
    9. '        ' → logprob: -13.627304077148438
    10. '     ' → logprob: -13.627304077148438

Token 385: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03849789872765541
    2. 'i' → logprob: -3.2884979248046875
    3. '   ' → logprob: -8.663497924804688
    4. ' (' → logprob: -8.913497924804688
    5. ' ' → logprob: -9.663497924804688
    6. '(i' → logprob: -9.663497924804688
    7. '  ' → logprob: -12.038497924804688
    8. '(' → logprob: -12.413497924804688
    9. '	i' → logprob: -12.663497924804688
    10. '       ' → logprob: -12.663497924804688

Token 386: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.016055837273597717
    2. '%' → logprob: -4.141056060791016
    3. ' ' → logprob: -10.766056060791016
    4. '   ' → logprob: -15.766056060791016
    5. ' ' → logprob: -16.016056060791016
    6. '```' → logprob: -17.141056060791016
    7. '       ' → logprob: -17.641056060791016
    8. ' %
' → logprob: -17.641056060791016
    9. '  ' → logprob: -17.766056060791016
    10. '`' → logprob: -17.891056060791016

Token 387: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2660997807979584
    2. '5' → logprob: -1.5160998106002808
    3. ' ' → logprob: -4.26609992980957
    4. '2' → logprob: -10.76609992980957
    5. '```' → logprob: -12.39109992980957
    6. '   ' → logprob: -13.20359992980957
    7. '  ' → logprob: -13.57859992980957
    8. '1' → logprob: -14.01609992980957
    9. '6' → logprob: -14.14109992980957
    10. '`' → logprob: -14.76609992980957

Token 388: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6933353543281555
    2. '5' → logprob: -0.6933353543281555
    3. '2' → logprob: -9.19333553314209
    4. ' ' → logprob: -9.44333553314209
    5. '   ' → logprob: -13.19333553314209
    6. '```' → logprob: -13.81833553314209
    7. '  ' → logprob: -14.56833553314209
    8. '6' → logprob: -14.63083553314209
    9. '1' → logprob: -14.63083553314209
    10. '{' → logprob: -15.25583553314209

Token 389: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3868987262248993
    2. ' !=' → logprob: -1.1368987560272217
    3. '()!=' → logprob: -11.2618989944458
    4. ')!=' → logprob: -11.6368989944458
    5. '!' → logprob: -13.2618989944458
    6. '```' → logprob: -13.6368989944458
    7. '!==' → logprob: -14.5118989944458
    8. ']!=' → logprob: -14.5118989944458
    9. '!=-' → logprob: -14.7618989944458
    10. ' ' → logprob: -14.7618989944458

Token 390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484461009502411
    2. ' ' → logprob: -1.2234461307525635
    3. '=' → logprob: -14.973445892333984
    4. '```' → logprob: -15.098445892333984
    5. '  ' → logprob: -15.348445892333984
    6. ' ' → logprob: -15.348445892333984
    7. '   ' → logprob: -15.848445892333984
    8. ')' → logprob: -16.285945892333984
    9. '<|end|>' → logprob: -16.973445892333984
    10. '`' → logprob: -17.410945892333984

Token 391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '=' → logprob: -15.626326560974121
    4. '```' → logprob: -16.126327514648438
    5. '==' → logprob: -16.626327514648438
    6. '  ' → logprob: -16.688827514648438
    7. '   ' → logprob: -16.751327514648438
    8. '5' → logprob: -16.813827514648438
    9. '00' → logprob: -17.313827514648438
    10. '۰' → logprob: -17.751327514648438

Token 392: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20142114162445068
    2. 'and' → logprob: -1.7014211416244507
    3. ' ' → logprob: -12.076420783996582
    4. '   ' → logprob: -13.576420783996582
    5. '    ' → logprob: -15.326420783996582
    6. '       ' → logprob: -15.826420783996582
    7. '	and' → logprob: -15.826420783996582
    8. '        ' → logprob: -16.0764217376709
    9. '  ' → logprob: -16.0764217376709
    10. '           ' → logprob: -16.8264217376709

Token 393: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009775806218385696
    2. 'i' → logprob: -4.634775638580322
    3. ' ' → logprob: -11.25977611541748
    4. '   ' → logprob: -13.13477611541748
    5. '  ' → logprob: -13.38477611541748
    6. '    ' → logprob: -13.63477611541748
    7. '	i' → logprob: -13.75977611541748
    8. ' ' → logprob: -14.25977611541748
    9. '        ' → logprob: -16.509775161743164
    10. '       ' → logprob: -16.509775161743164

Token 394: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2519476115703583
    2. '%' → logprob: -1.5019476413726807
    3. ' ' → logprob: -11.001947402954102
    4. '   ' → logprob: -14.376947402954102
    5. '  ' → logprob: -15.001947402954102
    6. '7' → logprob: -15.626947402954102
    7. ' ' → logprob: -15.876947402954102
    8. ' !=' → logprob: -16.1269474029541
    9. '       ' → logprob: -16.2519474029541
    10. '```' → logprob: -16.7519474029541

Token 395: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06994076818227768
    2. ' ' → logprob: -2.6949408054351807
    3. '```' → logprob: -13.319940567016602
    4. '  ' → logprob: -13.944940567016602
    5. '   ' → logprob: -14.694940567016602
    6. '<|end|>' → logprob: -14.944940567016602
    7. ' ' → logprob: -15.069940567016602
    8. '    ' → logprob: -15.319940567016602
    9. '۳' → logprob: -16.3199405670166
    10. '.' → logprob: -17.0699405670166

Token 396: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.554343366995454e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.250085830688477
    4. '  ' → logprob: -15.750085830688477
    5. '```' → logprob: -16.062585830688477
    6. '    ' → logprob: -17.500085830688477
    7. '       ' → logprob: -18.062585830688477
    8. '     ' → logprob: -18.375085830688477
    9. '۳' → logprob: -18.437585830688477
    10. '1' → logprob: -18.750085830688477

Token 397: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.12754666805267334
    2. '!=' → logprob: -2.127546787261963
    3. '()!=' → logprob: -7.752546787261963
    4. ')!=' → logprob: -9.002546310424805
    5. '<|end|>' → logprob: -10.752546310424805
    6. ' ' → logprob: -11.377546310424805
    7. ']!=' → logprob: -11.752546310424805
    8. '!=-' → logprob: -12.127546310424805
    9. ')' → logprob: -12.377546310424805
    10. '  ' → logprob: -12.877546310424805

Token 398: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28115764260292053
    2. ' ' → logprob: -1.4061576128005981
    3. ' ' → logprob: -12.906157493591309
    4. '```' → logprob: -13.781157493591309
    5. '   ' → logprob: -13.843657493591309
    6. '  ' → logprob: -14.281157493591309
    7. '=' → logprob: -14.593657493591309
    8. '	' → logprob: -15.156157493591309
    9. '3' → logprob: -15.656157493591309
    10. '1' → logprob: -15.718657493591309

Token 399: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002622894535306841
    2. ' ' → logprob: -8.250262260437012
    3. '3' → logprob: -14.937762260437012
    4. '```' → logprob: -15.875262260437012
    5. '   ' → logprob: -16.375263214111328
    6. '  ' → logprob: -16.500263214111328
    7. '=' → logprob: -16.750263214111328
    8. '2' → logprob: -17.062763214111328
    9. '۰' → logprob: -17.125263214111328
    10. ' ' → logprob: -17.125263214111328

Token 400: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1269560307264328
    2. ':
' → logprob: -2.126955986022949
    3. '       ' → logprob: -11.12695598602295
    4. '   ' → logprob: -12.62695598602295
    5. '):
' → logprob: -13.00195598602295
    6. ':
' → logprob: -13.12695598602295
    7. ' :' → logprob: -13.25195598602295
    8. ' :
' → logprob: -13.25195598602295
    9. '):' → logprob: -14.37695598602295
    10. '           ' → logprob: -14.62695598602295

Token 401: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028190376237034798
    2. '
' → logprob: -4.278190612792969
    3. '           ' → logprob: -4.778190612792969
    4. ':' → logprob: -5.778190612792969
    5. ':
' → logprob: -6.528190612792969
    6. '   ' → logprob: -7.778190612792969
    7. '        
' → logprob: -8.903190612792969
    8. '\n' → logprob: -9.153190612792969
    9. ' flag' → logprob: -9.278190612792969
    10. ' =' → logprob: -10.653190612792969

Token 402: ' #' (ID: 1069)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.49649250507354736
    2. '           ' → logprob: -1.6214925050735474
    3. ' flag' → logprob: -1.9964925050735474
    4. '   ' → logprob: -2.996492385864258
    5. '       ' → logprob: -4.871492385864258
    6. '	flag' → logprob: -8.746492385864258
    7. '               ' → logprob: -9.496492385864258
    8. '   ' → logprob: -11.121492385864258
    9. ' ' → logprob: -11.496492385864258
    10. '		' → logprob: -11.871492385864258

Token 403: ' On' (ID: 2160)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -1.0280383548888494e-06
    2. '   ' → logprob: -14.375000953674316
    3. ' flag' → logprob: -14.750000953674316
    4. '	flag' → logprob: -18.500001907348633
    5. '           ' → logprob: -18.875001907348633
    6. '       ' → logprob: -19.250001907348633
    7. '  ' → logprob: -20.875001907348633
    8. 'flags' → logprob: -21.500001907348633
    9. 'Flag' → logprob: -22.250001907348633
    10. '_flag' → logprob: -23.125001907348633

Token 404: ' sign' (ID: 2232)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.030322985723614693
    2. '=' → logprob: -3.530323028564453
    3. ' flag' → logprob: -7.530323028564453
    4. ' =' → logprob: -11.280323028564453
    5. '           ' → logprob: -12.155323028564453
    6. '   ' → logprob: -12.155323028564453
    7. 'break' → logprob: -12.405323028564453
    8. '+=' → logprob: -13.030323028564453
    9. '
' → logprob: -13.655323028564453
    10. '	flag' → logprob: -13.655323028564453

Token 405: 'ale' (ID: 1167)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4893495738506317
    2. 'ifie' → logprob: -1.864349603652954
    3. 'flag' → logprob: -1.864349603652954
    4. 'al' → logprob: -3.364349603652954
    5. 'ale' → logprob: -3.989349603652954
    6. 'aler' → logprob: -4.614349365234375
    7. 'if' → logprob: -5.114349365234375
    8. 'aled' → logprob: -6.114349365234375
    9. 'ify' → logprob: -7.364349365234375
    10. '_flag' → logprob: -7.364349365234375

Token 406: ' que' (ID: 661)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.8073645830154419
    2. '=' → logprob: -1.557364583015442
    3. 'flag' → logprob: -1.557364583015442
    4. ' =' → logprob: -2.0573644638061523
    5. ' ' → logprob: -6.057364463806152
    6. '(flag' → logprob: -7.057364463806152
    7. '   ' → logprob: -7.307364463806152
    8. '           ' → logprob: -8.307364463806152
    9. '	flag' → logprob: -8.557364463806152
    10. ' +=' → logprob: -8.932364463806152

Token 407: ' la' (ID: 557)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6931872367858887
    2. 'flag' → logprob: -0.6931872367858887
    3. ' le' → logprob: -11.318187713623047
    4. '	flag' → logprob: -11.693187713623047
    5. 'le' → logprob: -12.443187713623047
    6. ' la' → logprob: -12.693187713623047
    7. ' ' → logprob: -12.943187713623047
    8. '   ' → logprob: -13.068187713623047
    9. 'la' → logprob: -13.568187713623047
    10. '1' → logprob: -13.568187713623047

Token 408: ' règle' (ID: 115826)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0008090290939435363
    2. ' flag' → logprob: -7.125809192657471
    3. '	flag' → logprob: -13.125808715820312
    4. 'fl' → logprob: -14.125808715820312
    5. '_flag' → logprob: -14.125808715820312
    6. '   ' → logprob: -15.625808715820312
    7. 'f' → logprob: -15.750808715820312
    8. 'Flag' → logprob: -15.875808715820312
    9. '
' → logprob: -16.000808715820312
    10. ' ' → logprob: -16.625808715820312

Token 409: ' n' (ID: 297)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1393137127161026
    2. '=' → logprob: -2.1393136978149414
    3. '           ' → logprob: -5.889313697814941
    4. ' a' → logprob: -5.889313697814941
    5. 'flag' → logprob: -6.639313697814941
    6. 'a' → logprob: -6.764313697814941
    7. ' n' → logprob: -7.014313697814941
    8. ' est' → logprob: -7.139313697814941
    9. 'n' → logprob: -7.889313697814941
    10. 'vient' → logprob: -8.139313697814941

Token 410: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.2053181678056717
    2. 'pas' → logprob: -2.3303182125091553
    3. 'e' → logprob: -3.7053182125091553
    4. ''' → logprob: -4.705317974090576
    5. ''ex' → logprob: -4.705317974090576
    6. '’est' → logprob: -4.705317974090576
    7. ''a' → logprob: -5.330317974090576
    8. 'a' → logprob: -5.455317974090576
    9. 'on' → logprob: -5.580317974090576
    10. 'ot' → logprob: -5.580317974090576

Token 411: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.520638644695282
    2. ' pas' → logprob: -1.0206387042999268
    3. ' respect' → logprob: -3.5206387042999268
    4. 'respect' → logprob: -4.145638465881348
    5. 's' → logprob: -10.645638465881348
    6. ' respecte' → logprob: -11.270638465881348
    7. 'plus' → logprob: -11.520638465881348
    8. ' plus' → logprob: -11.895638465881348
    9. '#' → logprob: -12.020638465881348
    10. 'p' → logprob: -12.020638465881348

Token 412: ' respect' (ID: 5618)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.0008932363707572222
    2. ' respect' → logprob: -7.2508931159973145
    3. 'res' → logprob: -8.750893592834473
    4. 'resp' → logprob: -11.000893592834473
    5. 'su' → logprob: -13.375893592834473
    6. ' respected' → logprob: -13.500893592834473
    7. 'valid' → logprob: -13.625893592834473
    8. 'Respect' → logprob: -13.875893592834473
    9. 'v' → logprob: -14.125893592834473
    10. 'rem' → logprob: -14.625893592834473

Token 413: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4836116135120392
    2. 'e' → logprob: -1.1086115837097168
    3. 'é' → logprob: -3.358611583709717
    4. '           ' → logprob: -5.108611583709717
    5. 'er' → logprob: -5.358611583709717
    6. ' =' → logprob: -5.358611583709717
    7. 'ifie' → logprob: -6.608611583709717
    8. '       ' → logprob: -7.233611583709717
    9. 'ée' → logprob: -8.233612060546875
    10. 'al' → logprob: -8.483612060546875

Token 414: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031876976136118174
    2. ' =' → logprob: -5.753187656402588
    3. '           ' → logprob: -12.003188133239746
    4. 'flag' → logprob: -13.253188133239746
    5. '=
' → logprob: -13.628188133239746
    6. '   ' → logprob: -14.878188133239746
    7. '+=' → logprob: -15.628188133239746
    8. '=

' → logprob: -15.753188133239746
    9. '       ' → logprob: -15.878188133239746
    10. ' flag' → logprob: -15.878188133239746

Token 415: ' position' (ID: 4010)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.4294120967388153
    2. ' flag' → logprob: -1.0544121265411377
    3. '           ' → logprob: -8.179411888122559
    4. '   ' → logprob: -8.679411888122559
    5. '```' → logprob: -8.804411888122559
    6. '	flag' → logprob: -11.179411888122559
    7. ' mettant' → logprob: -11.179411888122559
    8. '            
' → logprob: -11.304411888122559
    9. 'assign' → logprob: -11.929411888122559
    10. '_flag' → logprob: -12.179411888122559

Token 416: 'nant' (ID: 48648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.023004174232483
    2. ' =' → logprob: -1.273004174232483
    3. 'flag' → logprob: -1.398004174232483
    4. ' flag' → logprob: -2.5230040550231934
    5. '(flag' → logprob: -4.898004055023193
    6. '   ' → logprob: -5.273004055023193
    7. ' ' → logprob: -5.398004055023193
    8. '           ' → logprob: -6.148004055023193
    9. '	flag' → logprob: -6.523004055023193
    10. '_flag' → logprob: -7.398004055023193

Token 417: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.018156379461288452
    2. 'flag' → logprob: -4.0181565284729
    3. '	flag' → logprob: -13.018156051635742
    4. '(flag' → logprob: -13.018156051635742
    5. ' le' → logprob: -13.768156051635742
    6. ' ' → logprob: -15.143156051635742
    7. '_flag' → logprob: -15.393156051635742
    8. '.flag' → logprob: -15.893156051635742
    9. ' la' → logprob: -16.143156051635742
    10. 'le' → logprob: -16.268156051635742

Token 418: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868740200996399
    2. '=' → logprob: -1.1368739604949951
    3. ' +=' → logprob: -13.761874198913574
    4. '=True' → logprob: -14.261874198913574
    5. ' ' → logprob: -14.386874198913574
    6. '+=' → logprob: -15.261874198913574
    7. '1' → logprob: -15.636874198913574
    8. '<|end|>' → logprob: -15.761874198913574
    9. ' |=' → logprob: -16.261873245239258
    10. ' =
' → logprob: -17.386873245239258

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.25000762939453
    4. '=' → logprob: -19.50000762939453
    5. '           ' → logprob: -19.62500762939453
    6. '
' → logprob: -21.00000762939453
    7. '```' → logprob: -21.75000762939453
    8. '    ' → logprob: -22.75000762939453
    9. '.' → logprob: -22.87500762939453
    10. '  ' → logprob: -23.00000762939453

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -22.0
    4. '-' → logprob: -22.125
    5. '=' → logprob: -22.125
    6. '2' → logprob: -22.875
    7. '۱' → logprob: -23.5
    8. '0' → logprob: -23.875
    9. '```' → logprob: -23.9375
    10. '१' → logprob: -23.9375

Token 421: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12934738397598267
    2. ' =' → logprob: -2.129347324371338
    3. '           ' → logprob: -6.129347324371338
    4. 'flag' → logprob: -8.629347801208496
    5. ' flag' → logprob: -11.254347801208496
    6. '=
' → logprob: -11.379347801208496
    7. '   ' → logprob: -11.504347801208496
    8. '       ' → logprob: -11.504347801208496
    9. '            
' → logprob: -12.629347801208496
    10. ' =
' → logprob: -12.754347801208496

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010077148675918579
    2. ' =' → logprob: -5.010076999664307
    3. '=' → logprob: -6.260076999664307
    4. 'flag' → logprob: -7.385076999664307
    5. '       ' → logprob: -8.010077476501465
    6. ' flag' → logprob: -8.385077476501465
    7. '               ' → logprob: -9.135077476501465
    8. '   ' → logprob: -9.760077476501465
    9. '            
' → logprob: -10.135077476501465
    10. '
' → logprob: -10.635077476501465

Token 423: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.4559706449508667
    2. ' flag' → logprob: -1.5809706449508667
    3. '           ' → logprob: -1.8309706449508667
    4. '   ' → logprob: -9.580970764160156
    5. '       ' → logprob: -10.205970764160156
    6. '               ' → logprob: -11.705970764160156
    7. '1' → logprob: -12.080970764160156
    8. '	flag' → logprob: -12.330970764160156
    9. '            
' → logprob: -12.830970764160156
    10. '(flag' → logprob: -13.580970764160156

Token 424: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407856583595276
    2. '=' → logprob: -0.9740785360336304
    3. ' +=' → logprob: -13.849078178405762
    4. ' ' → logprob: -14.724078178405762
    5. ' |=' → logprob: -16.349079132080078
    6. '+=' → logprob: -16.849079132080078
    7. ' =
' → logprob: -17.599079132080078
    8. '   ' → logprob: -18.849079132080078
    9. '＝' → logprob: -18.974079132080078
    10. ' ' → logprob: -18.974079132080078

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -19.250085830688477
    4. '```' → logprob: -21.125085830688477
    5. '۱' → logprob: -21.250085830688477
    6. '  ' → logprob: -21.375085830688477
    7. '=' → logprob: -21.625085830688477
    8. '	' → logprob: -21.875085830688477
    9. '' → logprob: -22.000085830688477
    10. '0' → logprob: -22.000085830688477

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -22.75
    4. '0' → logprob: -23.125
    5. '   ' → logprob: -23.25
    6. '=' → logprob: -23.875
    7. '۱' → logprob: -24.125
    8. '#' → logprob: -24.5
    9. '' → logprob: -24.75
    10. 'True' → logprob: -25.125

Token 427: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.9888433093437925e-05
    2. 'print' → logprob: -10.750040054321289
    3. 'break' → logprob: -11.500040054321289
    4. '       ' → logprob: -13.000040054321289
    5. '		' → logprob: -13.375040054321289
    6. '            
' → logprob: -14.000040054321289
    7. '   ' → logprob: -14.250040054321289
    8. '          ' → logprob: -14.750040054321289
    9. '               ' → logprob: -14.750040054321289
    10. '	       ' → logprob: -14.875040054321289

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3544423381972592e-05
    2. '       ' → logprob: -12.25001335144043
    3. '   ' → logprob: -13.12501335144043
    4. 'break' → logprob: -13.12501335144043
    5. '            
' → logprob: -13.62501335144043
    6. 'print' → logprob: -14.00001335144043
    7. '          ' → logprob: -14.50001335144043
    8. '		' → logprob: -14.62501335144043
    9. ' break' → logprob: -15.00001335144043
    10. '               ' → logprob: -15.25001335144043

Token 429: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010128123685717583
    2. '       ' → logprob: -4.885128021240234
    3. '   ' → logprob: -6.260128021240234
    4. 'break' → logprob: -8.010128021240234
    5. ' break' → logprob: -8.260128021240234
    6. '		' → logprob: -12.885128021240234
    7. '	   ' → logprob: -13.010128021240234
    8. '    ' → logprob: -13.010128021240234
    9. '	break' → logprob: -13.260128021240234
    10. '               ' → logprob: -13.385128021240234

Token 430: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.003301412332803011
    2. '           ' → logprob: -6.628301620483398
    3. ' break' → logprob: -6.878301620483398
    4. '       ' → logprob: -7.003301620483398
    5. '   ' → logprob: -10.503301620483398
    6. '	break' → logprob: -12.878301620483398
    7. '#' → logprob: -13.503301620483398
    8. 'breaker' → logprob: -14.003301620483398
    9. 'print' → logprob: -14.503301620483398
    10. 'BREAK' → logprob: -14.503301620483398

Token 431: ' quitte' (ID: 167254)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.39361605048179626
    2. ' break' → logprob: -1.1436160802841187
    3. '   ' → logprob: -5.393616199493408
    4. '       ' → logprob: -6.893616199493408
    5. '    ' → logprob: -7.268616199493408
    6. '	break' → logprob: -8.51861572265625
    7. '           ' → logprob: -9.51861572265625
    8. '_break' → logprob: -10.14361572265625
    9. '    
' → logprob: -10.51861572265625
    10. '     ' → logprob: -11.14361572265625

Token 432: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5832002758979797
    2. ' the' → logprob: -1.083200216293335
    3. ' le' → logprob: -2.958200216293335
    4. 'the' → logprob: -3.583200216293335
    5. 'le' → logprob: -4.083200454711914
    6. ' l' → logprob: -6.083200454711914
    7. ' for' → logprob: -6.958200454711914
    8. 'la' → logprob: -7.208200454711914
    9. '<|end|>' → logprob: -7.333200454711914
    10. 'for' → logprob: -7.333200454711914

Token 433: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.1524726003408432
    2. 'for' → logprob: -2.027472496032715
    3. ' boucle' → logprob: -5.277472496032715
    4. 'loop' → logprob: -5.777472496032715
    5. 'break' → logprob: -6.902472496032715
    6. 'b' → logprob: -8.027472496032715
    7. ' for' → logprob: -9.277472496032715
    8. '```' → logprob: -10.027472496032715
    9. 'bo' → logprob: -10.652472496032715
    10. 'bu' → logprob: -11.652472496032715

Token 434: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029272133484482765
    2. '   ' → logprob: -5.029272079467773
    3. '
' → logprob: -5.154272079467773
    4. '               ' → logprob: -5.779272079467773
    5. '       ' → logprob: -5.779272079467773
    6. '            
' → logprob: -5.779272079467773
    7. '    
' → logprob: -6.154272079467773
    8. 'break' → logprob: -6.279272079467773
    9. ' break' → logprob: -7.029272079467773
    10. '            ' → logprob: -7.279272079467773

Token 435: ' immédiatement' (ID: 100743)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005059692775830626
    2. '       ' → logprob: -8.500506401062012
    3. '
' → logprob: -8.750506401062012
    4. '               ' → logprob: -9.750506401062012
    5. '   ' → logprob: -10.500506401062012
    6. '            
' → logprob: -10.500506401062012
    7. 'break' → logprob: -11.000506401062012
    8. '    
' → logprob: -11.875506401062012
    9. ' break' → logprob: -12.875506401062012
    10. '          ' → logprob: -13.875506401062012

Token 436: ' car' (ID: 1669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003066479926928878
    2. '       ' → logprob: -6.628066539764404
    3. 'break' → logprob: -7.253066539764404
    4. '   ' → logprob: -7.753066539764404
    5. '
' → logprob: -7.878066539764404
    6. '            
' → logprob: -9.253066062927246
    7. ' break' → logprob: -9.753066062927246
    8. '               ' → logprob: -10.503066062927246
    9. '    
' → logprob: -10.503066062927246
    10. '	break' → logprob: -12.378066062927246

Token 437: ' il' (ID: 1793)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5055012106895447
    2. ' le' → logprob: -1.7555012702941895
    3. ' ' → logprob: -3.1305012702941895
    4. 'break' → logprob: -3.2555012702941895
    5. ' not' → logprob: -3.3805012702941895
    6. ' flag' → logprob: -3.7555012702941895
    7. ' the' → logprob: -3.8805012702941895
    8. ' la' → logprob: -4.0055012702941895
    9. ' l' → logprob: -5.0055012702941895
    10. ' il' → logprob: -5.2555012702941895

Token 438: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09304237365722656
    2. 'n' → logprob: -2.5930423736572266
    3. ' faut' → logprob: -5.343042373657227
    4. ' break' → logprob: -5.718042373657227
    5. 'break' → logprob: -6.343042373657227
    6. 's' → logprob: -6.843042373657227
    7. ' ' → logprob: -7.218042373657227
    8. ' y' → logprob: -7.218042373657227
    9. '   ' → logprob: -7.718042373657227
    10. ' ne' → logprob: -7.968042373657227

Token 439: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.2812938988208771
    2. 'est' → logprob: -2.6562938690185547
    3. 'y' → logprob: -2.7812938690185547
    4. 'n' → logprob: -3.1562938690185547
    5. ''y' → logprob: -3.6562938690185547
    6. ' n' → logprob: -4.406293869018555
    7. ' y' → logprob: -5.031293869018555
    8. '```' → logprob: -5.281293869018555
    9. '’est' → logprob: -5.531293869018555
    10. ''' → logprob: -6.031293869018555

Token 440: ' pas' (ID: 2173)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.7865819931030273
    2. 'pas' → logprob: -1.4115819931030273
    3. 'plus' → logprob: -1.6615819931030273
    4. 'f' → logprob: -2.9115819931030273
    5. ' pas' → logprob: -3.2865819931030273
    6. 's' → logprob: -4.536581993103027
    7. 'needed' → logprob: -6.286581993103027
    8. 'necessary' → logprob: -6.411581993103027
    9. ' ' → logprob: -6.536581993103027
    10. ' nécessaire' → logprob: -8.036581993103027

Token 441: ' nécessaire' (ID: 43098)
  Prédit: ' nécessaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.3006003201007843
    2. 'né' → logprob: -2.300600290298462
    3. 'necessary' → logprob: -2.425600290298462
    4. 'necess' → logprob: -3.550600290298462
    5. ' besoin' → logprob: -3.925600290298462
    6. ' necessary' → logprob: -4.800600528717041
    7. 'n' → logprob: -5.300600528717041
    8. 'utile' → logprob: -5.925600528717041
    9. ' nécessaires' → logprob: -6.050600528717041
    10. 'needed' → logprob: -6.925600528717041

Token 442: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07166897505521774
    2. '           ' → logprob: -2.821668863296509
    3. 'de' → logprob: -5.196669101715088
    4. ' d' → logprob: -5.946669101715088
    5. '   ' → logprob: -7.071669101715088
    6. '       ' → logprob: -8.07166862487793
    7. 'd' → logprob: -8.32166862487793
    8. '    ' → logprob: -10.57166862487793
    9. '            ' → logprob: -10.57166862487793
    10. '               ' → logprob: -10.94666862487793

Token 443: ' vérifier' (ID: 93671)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.09447013586759567
    2. ' continuer' → logprob: -2.5944700241088867
    3. 'continue' → logprob: -4.469470024108887
    4. ' poursuivre' → logprob: -5.844470024108887
    5. 'continu' → logprob: -7.344470024108887
    6. 'cont' → logprob: -9.219470024108887
    7. 'chercher' → logprob: -9.219470024108887
    8. '```' → logprob: -9.594470024108887
    9. ' continue' → logprob: -9.844470024108887
    10. 'continued' → logprob: -10.219470024108887

Token 444: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' suite' (ID: 13800)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.01269175298511982
    2. ' break' → logprob: -4.387691974639893
    3. 'b' → logprob: -9.512691497802734
    4. 'for' → logprob: -10.012691497802734
    5. 'rest' → logprob: -10.512691497802734
    6. ' reste' → logprob: -11.637691497802734
    7. 'reste' → logprob: -12.512691497802734
    8. 'continue' → logprob: -12.512691497802734
    9. ' for' → logprob: -12.762691497802734
    10. ' ' → logprob: -12.887691497802734

Token 446: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014820750802755356
    2. '   ' → logprob: -4.764820575714111
    3. 'break' → logprob: -6.139820575714111
    4. '.' → logprob: -6.514820575714111
    5. '               ' → logprob: -6.889820575714111
    6. '       ' → logprob: -7.389820575714111
    7. ' break' → logprob: -8.13982105255127
    8. '		' → logprob: -8.88982105255127
    9. '<|end|>' → logprob: -9.38982105255127
    10. '	break' → logprob: -9.88982105255127

Token 447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5031583905220032
    2. 'break' → logprob: -1.7531583309173584
    3. '   ' → logprob: -2.0031583309173584
    4. '       ' → logprob: -2.5031583309173584
    5. ' break' → logprob: -5.2531585693359375
    6. '	break' → logprob: -8.878158569335938
    7. '               ' → logprob: -10.878158569335938
    8. '```' → logprob: -12.378158569335938
    9. '    
' → logprob: -12.628158569335938
    10. '		' → logprob: -12.628158569335938

Token 448: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00033415461075492203
    2. ' break' → logprob: -8.500333786010742
    3. '           ' → logprob: -9.000333786010742
    4. '   ' → logprob: -12.250333786010742
    5. '       ' → logprob: -13.250333786010742
    6. '	break' → logprob: -14.375333786010742
    7. '```' → logprob: -16.750333786010742
    8. 'breaking' → logprob: -17.500333786010742
    9. 'BREAK' → logprob: -17.500333786010742
    10. 'Break' → logprob: -17.875333786010742

Token 449: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1830330789089203
    2. 'if' → logprob: -2.183032989501953
    3. '
' → logprob: -3.183032989501953
    4. '<|end|>' → logprob: -5.683032989501953
    5. ' if' → logprob: -6.433032989501953
    6. '#' → logprob: -6.433032989501953
    7. '

' → logprob: -6.808032989501953
    8. ')' → logprob: -6.933032989501953
    9. ' print' → logprob: -7.308032989501953
    10. '```' → logprob: -7.558032989501953

Token 450: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004735326394438744
    2. 'print' → logprob: -5.504735469818115
    3. '#' → logprob: -8.004734992980957
    4. '
' → logprob: -8.254734992980957
    5. '```' → logprob: -10.379734992980957
    6. ' if' → logprob: -10.629734992980957
    7. '  
' → logprob: -13.504734992980957
    8. '``' → logprob: -14.004734992980957
    9. '#
' → logprob: -14.129734992980957
    10. '#print' → logprob: -14.629734992980957

Token 451: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023251768201589584
    2. 'print' → logprob: -3.77325177192688
    3. ' if' → logprob: -12.2732515335083
    4. '#' → logprob: -13.7732515335083
    5. '```' → logprob: -15.5232515335083
    6. 'If' → logprob: -16.898252487182617
    7. ' print' → logprob: -17.023252487182617
    8. '#print' → logprob: -17.148252487182617
    9. 'Print' → logprob: -17.523252487182617
    10. 'prin' → logprob: -17.523252487182617

Token 452: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3108578324317932
    2. 'le' → logprob: -2.3108577728271484
    3. ' la' → logprob: -2.5608577728271484
    4. ' avoir' → logprob: -3.5608577728271484
    5. 'l' → logprob: -3.9358577728271484
    6. 'for' → logprob: -4.310857772827148
    7. 'if' → logprob: -4.310857772827148
    8. ' le' → logprob: -4.810857772827148
    9. '#' → logprob: -6.060857772827148
    10. 'avoir' → logprob: -6.060857772827148

Token 453: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4851877689361572
    2. 'bou' → logprob: -0.9851877689361572
    3. ' boucle' → logprob: -4.735187530517578
    4. 'if' → logprob: -7.110187530517578
    5. 'loop' → logprob: -7.485187530517578
    6. ' for' → logprob: -7.485187530517578
    7. 'print' → logprob: -9.610187530517578
    8. 'v' → logprob: -9.985187530517578
    9. ' bou' → logprob: -10.360187530517578
    10. 'validation' → logprob: -10.485187530517578

Token 454: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000561373308300972
    2. '#' → logprob: -8.125561714172363
    3. 'print' → logprob: -8.625561714172363
    4. ' if' → logprob: -10.000561714172363
    5. '

' → logprob: -10.750561714172363
    6. '
' → logprob: -12.125561714172363
    7. ',' → logprob: -12.250561714172363
    8. ':' → logprob: -12.375561714172363
    9. 'else' → logprob: -13.500561714172363
    10. '```' → logprob: -14.500561714172363

Token 455: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00013047587708570063
    2. 'print' → logprob: -9.000130653381348
    3. ' if' → logprob: -11.875130653381348
    4. '#' → logprob: -17.12512969970703
    5. '```' → logprob: -18.62512969970703
    6. '
' → logprob: -19.50012969970703
    7. ' print' → logprob: -20.25012969970703
    8. 'If' → logprob: -21.87512969970703
    9. 'ift' → logprob: -21.87512969970703
    10. '#print' → logprob: -22.00012969970703

Token 456: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004258496221154928
    2. 'print' → logprob: -5.754258632659912
    3. ' if' → logprob: -6.879258632659912
    4. ' print' → logprob: -10.629258155822754
    5. '#' → logprob: -10.754258155822754
    6. 'continue' → logprob: -13.129258155822754
    7. 'ifie' → logprob: -14.129258155822754
    8. 'ift' → logprob: -14.504258155822754
    9. '```' → logprob: -14.629258155822754
    10. 's' → logprob: -14.754258155822754

Token 457: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0003646633995231241
    2. 'if' → logprob: -8.250364303588867
    3. 'ifi' → logprob: -10.500364303588867
    4. 'ifié' → logprob: -11.000364303588867
    5. 'ife' → logprob: -11.375364303588867
    6. '```' → logprob: -11.625364303588867
    7. 'ifiez' → logprob: -12.125364303588867
    8. 'rif' → logprob: -12.125364303588867
    9. '#' → logprob: -12.375364303588867
    10. 'ifier' → logprob: -13.125364303588867

Token 458: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10957488417625427
    2. 'if' → logprob: -2.359574794769287
    3. ' flag' → logprob: -5.109574794769287
    4. 'flag' → logprob: -6.609574794769287
    5. ' si' → logprob: -6.734574794769287
    6. ' ' → logprob: -7.734574794769287
    7. '   ' → logprob: -8.859575271606445
    8. '(flag' → logprob: -9.484575271606445
    9. 'si' → logprob: -10.359575271606445
    10. '  ' → logprob: -11.109575271606445

Token 459: ' valeur' (ID: 41664)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.03744753822684288
    2. ' flag' → logprob: -3.537447452545166
    3. 'condition' → logprob: -5.662447452545166
    4. 'if' → logprob: -5.912447452545166
    5. ' condition' → logprob: -7.412447452545166
    6. ' if' → logprob: -8.287447929382324
    7. 'print' → logprob: -8.662447929382324
    8. 'result' → logprob: -9.162447929382324
    9. 'value' → logprob: -9.287447929382324
    10. ' ' → logprob: -10.412447929382324

Token 460: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3271849453449249
    2. 'flag' → logprob: -2.0771849155426025
    3. 'de' → logprob: -2.9521849155426025
    4. ' de' → logprob: -3.2021849155426025
    5. 'du' → logprob: -3.8271849155426025
    6. ' if' → logprob: -3.9521849155426025
    7. ' flag' → logprob: -4.077185153961182
    8. ' du' → logprob: -6.702185153961182
    9. '(flag' → logprob: -6.952185153961182
    10. ' ' → logprob: -8.952184677124023

Token 461: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.029753385111689568
    2. ' flag' → logprob: -3.5297534465789795
    3. '(flag' → logprob: -13.154753684997559
    4. '	flag' → logprob: -14.654753684997559
    5. 'fl' → logprob: -15.529753684997559
    6. 'flags' → logprob: -15.904753684997559
    7. 'Flag' → logprob: -16.529752731323242
    8. '_flag' → logprob: -16.779752731323242
    9. 'f' → logprob: -17.029752731323242
    10. '.flag' → logprob: -17.904752731323242

Token 462: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001105762057704851
    2. ' if' → logprob: -9.250110626220703
    3. 'print' → logprob: -11.625110626220703
    4. '
' → logprob: -12.250110626220703
    5. ';if' → logprob: -15.125110626220703
    6. '```' → logprob: -15.375110626220703
    7. '#' → logprob: -16.125110626220703
    8. 'i' → logprob: -17.375110626220703
    9. 'for' → logprob: -17.500110626220703
    10. '

' → logprob: -17.875110626220703

Token 463: ' décider' (ID: 155719)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6855941414833069
    2. 'determ' → logprob: -2.185594081878662
    3. 'voir' → logprob: -2.310594081878662
    4. 'aff' → logprob: -2.435594081878662
    5. ' déterminer' → logprob: -2.810594081878662
    6. ' voir' → logprob: -3.560594081878662
    7. ' print' → logprob: -4.185594081878662
    8. 'dé' → logprob: -4.185594081878662
    9. 'dec' → logprob: -4.310594081878662
    10. 'det' → logprob: -4.435594081878662

Token 464: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07892944663763046
    2. '   ' → logprob: -2.8289294242858887
    3. ' if' → logprob: -4.453929424285889
    4. 'si' → logprob: -6.078929424285889
    5. ' si' → logprob: -6.578929424285889
    6. ' ' → logprob: -7.578929424285889
    7. '  ' → logprob: -8.203929901123047
    8. 'print' → logprob: -8.703929901123047
    9. ' de' → logprob: -9.203929901123047
    10. '    ' → logprob: -9.453929901123047

Token 465: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.41083237528800964
    2. 'print' → logprob: -1.160832405090332
    3. 'result' → logprob: -4.535832405090332
    4. ' message' → logprob: -4.785832405090332
    5. 'texte' → logprob: -6.160832405090332
    6. 'output' → logprob: -7.035832405090332
    7. 'rés' → logprob: -7.285832405090332
    8. ' print' → logprob: -7.660832405090332
    9. 'msg' → logprob: -9.035832405090332
    10. ' résultat' → logprob: -9.160832405090332

Token 466: ' à' (ID: 1221)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.710618905955926e-05
    2. ' if' → logprob: -9.250097274780273
    3. 'print' → logprob: -14.250097274780273
    4. ':' → logprob: -16.500097274780273
    5. '```' → logprob: -16.625097274780273
    6. 's' → logprob: -17.250097274780273
    7. '#' → logprob: -17.250097274780273
    8. 'si' → logprob: -17.750097274780273
    9. 'for' → logprob: -18.500097274780273
    10. '
' → logprob: -19.000097274780273

Token 467: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.014405004680156708
    2. ' afficher' → logprob: -4.889404773712158
    3. 'print' → logprob: -5.014404773712158
    4. 'Afficher' → logprob: -9.514405250549316
    5. 'display' → logprob: -10.389405250549316
    6. 'im' → logprob: -10.889405250549316
    7. ' aff' → logprob: -13.389405250549316
    8. ''aff' → logprob: -13.639405250549316
    9. '_aff' → logprob: -13.764405250549316
    10. '#' → logprob: -13.764405250549316

Token 468: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.771655115589965e-05
    2. '
' → logprob: -11.500018119812012
    3. ' if' → logprob: -12.375018119812012
    4. 'print' → logprob: -12.750018119812012
    5. '```' → logprob: -14.750018119812012
    6. ';if' → logprob: -17.625017166137695
    7. 'i' → logprob: -17.750017166137695
    8. '``' → logprob: -18.750017166137695
    9. 'ifs' → logprob: -19.000017166137695
    10. 'If' → logprob: -19.000017166137695

Token 469: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.4849443838757e-06
    2. 'print' → logprob: -12.750004768371582
    3. ' if' → logprob: -13.500004768371582
    4. '```' → logprob: -16.250003814697266
    5. 'i' → logprob: -17.500003814697266
    6. '
' → logprob: -18.125003814697266
    7. 'If' → logprob: -19.125003814697266
    8. ';if' → logprob: -19.250003814697266
    9. 'for' → logprob: -19.625003814697266
    10. '#' → logprob: -20.375003814697266

Token 470: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.054901693016290665
    2. 'flag' → logprob: -2.929901599884033
    3. '	flag' → logprob: -11.804902076721191
    4. '(flag' → logprob: -12.429902076721191
    5. ' ' → logprob: -12.554902076721191
    6. ' ' → logprob: -12.554902076721191
    7. '   ' → logprob: -15.429902076721191
    8. 'fl' → logprob: -15.554902076721191
    9. '  ' → logprob: -15.679902076721191
    10. 'f' → logprob: -15.929902076721191

Token 471: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023823618888855
    2. '==' → logprob: -1.910238265991211
    3. ':' → logprob: -12.160238265991211
    4. '=' → logprob: -12.910238265991211
    5. ' =' → logprob: -13.535238265991211
    6. ' :' → logprob: -13.785238265991211
    7. ' ' → logprob: -13.910238265991211
    8. ' ' → logprob: -14.035238265991211
    9. '==
' → logprob: -14.160238265991211
    10. '```' → logprob: -14.910238265991211

Token 472: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018471233546733856
    2. ' ' → logprob: -4.1434712409973145
    3. '1' → logprob: -6.0184712409973145
    4. '```' → logprob: -15.893470764160156
    5. '   ' → logprob: -16.205970764160156
    6. '<|end|>' → logprob: -16.268470764160156
    7. '۰' → logprob: -16.643470764160156
    8. '	' → logprob: -16.955970764160156
    9. ' ' → logprob: -17.018470764160156
    10. ' ' → logprob: -17.268470764160156

Token 473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01004941388964653
    2. '1' → logprob: -4.635049343109131
    3. ' ' → logprob: -8.135049819946289
    4. '۰' → logprob: -16.88504981994629
    5. '```' → logprob: -17.01004981994629
    6. '   ' → logprob: -17.13504981994629
    7. '' → logprob: -17.69754981994629
    8. ' ' → logprob: -17.82254981994629
    9. '=' → logprob: -18.01004981994629
    10. '	' → logprob: -18.13504981994629

Token 474: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20143301784992218
    2. ':
' → logprob: -1.7014330625534058
    3. ' :
' → logprob: -11.701433181762695
    4. ' :' → logprob: -11.826433181762695
    5. ':
' → logprob: -12.826433181762695
    6. ':

' → logprob: -14.576433181762695
    7. 'print' → logprob: -14.701433181762695
    8. '   ' → logprob: -14.951433181762695
    9. ' print' → logprob: -15.826433181762695
    10. '):
' → logprob: -17.451433181762695

Token 475: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07008849084377289
    2. '   ' → logprob: -2.8200883865356445
    3. ' print' → logprob: -4.8200883865356445
    4. '	print' → logprob: -10.820088386535645
    5. ' ' → logprob: -14.070088386535645
    6. '
' → logprob: -15.195088386535645
    7. '   ' → logprob: -15.195088386535645
    8. '    
' → logprob: -15.820088386535645
    9. '  ' → logprob: -16.07008934020996
    10. '```' → logprob: -16.19508934020996

Token 476: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023727675899863243
    2. ' print' → logprob: -3.7737276554107666
    3. '   ' → logprob: -7.648727893829346
    4. '
' → logprob: -12.648727416992188
    5. '	print' → logprob: -13.273727416992188
    6. '```' → logprob: -16.148727416992188
    7. '    ' → logprob: -16.398727416992188
    8. 'Print' → logprob: -16.773727416992188
    9. ' ' → logprob: -16.773727416992188
    10. '
' → logprob: -16.898727416992188

Token 477: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005412927363067865
    2. ' print' → logprob: -5.255413055419922
    3. '   ' → logprob: -8.630413055419922
    4. '	print' → logprob: -14.755413055419922
    5. 'Print' → logprob: -16.880413055419922
    6. 'prin' → logprob: -17.755413055419922
    7. '    ' → logprob: -18.005413055419922
    8. 'pr' → logprob: -18.005413055419922
    9. ' ' → logprob: -18.130413055419922
    10. '       ' → logprob: -18.380413055419922

Token 478: ' signifie' (ID: 81149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29348069429397583
    2. ' print' → logprob: -1.418480634689331
    3. '   ' → logprob: -4.41848087310791
    4. '	print' → logprob: -8.91848087310791
    5. 'pr' → logprob: -11.41848087310791
    6. '.print' → logprob: -11.79348087310791
    7. '    ' → logprob: -11.79348087310791
    8. ':' → logprob: -12.16848087310791
    9. ' ' → logprob: -12.41848087310791
    10. ' prin' → logprob: -12.66848087310791

Token 479: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4313718378543854
    2. 'print' → logprob: -1.181371808052063
    3. ' print' → logprob: -3.1813719272613525
    4. ' que' → logprob: -6.306371688842773
    5. ' ' → logprob: -9.556371688842773
    6. '    ' → logprob: -10.306371688842773
    7. 'que' → logprob: -10.306371688842773
    8. '  ' → logprob: -11.556371688842773
    9. ' that' → logprob: -12.181371688842773
    10. '	print' → logprob: -12.306371688842773

Token 480: ' tous' (ID: 10688)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.180879816180095e-05
    2. ' print' → logprob: -11.000051498413086
    3. '"' → logprob: -11.250051498413086
    4. '   ' → logprob: -11.250051498413086
    5. 'pr' → logprob: -12.250051498413086
    6. ' ' → logprob: -13.625051498413086
    7. 'Print' → logprob: -14.875051498413086
    8. '  ' → logprob: -15.000051498413086
    9. '       ' → logprob: -15.500051498413086
    10. '    ' → logprob: -15.500051498413086

Token 481: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.11307530105113983
    2. 'les' → logprob: -2.2380752563476562
    3. 's' → logprob: -9.363075256347656
    4. ' i' → logprob: -9.488075256347656
    5. ' ' → logprob: -10.738075256347656
    6. '   ' → logprob: -10.988075256347656
    7. 'i' → logprob: -11.613075256347656
    8. ' le' → logprob: -11.988075256347656
    9. 'print' → logprob: -12.238075256347656
    10. '#' → logprob: -12.363075256347656

Token 482: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07839535176753998
    2. ' nombres' → logprob: -3.328395366668701
    3. 'nombre' → logprob: -3.453395366668701
    4. 'élé' → logprob: -5.703395366668701
    5. 'ent' → logprob: -6.578395366668701
    6. 'i' → logprob: -6.578395366668701
    7. 'num' → logprob: -7.453395366668701
    8. 'print' → logprob: -8.078394889831543
    9. ' éléments' → logprob: -8.578394889831543
    10. 'numbers' → logprob: -8.953394889831543

Token 483: ' pairs' (ID: 24702)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.74076247215271
    2. 'respect' → logprob: -0.99076247215271
    3. 's' → logprob: -2.24076247215271
    4. 'ont' → logprob: -3.49076247215271
    5. ' ont' → logprob: -4.990762710571289
    6. 'resp' → logprob: -6.115762710571289
    7. ' sont' → logprob: -6.240762710571289
    8. ' respecte' → logprob: -7.240762710571289
    9. '   ' → logprob: -7.365762710571289
    10. 'res' → logprob: -7.615762710571289

Token 484: ' étaient' (ID: 40979)
  Prédit: ' respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' respect' → logprob: -0.6751117706298828
    2. 's' → logprob: -1.1751117706298828
    3. 'respect' → logprob: -2.175111770629883
    4. 'ont' → logprob: -3.050111770629883
    5. ' sont' → logprob: -5.050111770629883
    6. ' ont' → logprob: -5.425111770629883
    7. '   ' → logprob: -5.550111770629883
    8. ' satisf' → logprob: -6.675111770629883
    9. 'resp' → logprob: -6.675111770629883
    10. 'print' → logprob: -6.800111770629883

Token 485: ' divis' (ID: 37826)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -1.203438639640808
    2. 'con' → logprob: -1.578438639640808
    3. 'valid' → logprob: -1.703438639640808
    4. 'val' → logprob: -2.3284387588500977
    5. 'bien' → logprob: -2.4534387588500977
    6. ' conform' → logprob: -2.9534387588500977
    7. 'div' → logprob: -3.0784387588500977
    8. ' correct' → logprob: -4.453438758850098
    9. 'so' → logprob: -5.328438758850098
    10. 'accept' → logprob: -5.953438758850098

Token 486: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.0016072244616225362
    2. 'ible' → logprob: -6.626607418060303
    3. 'ibes' → logprob: -9.376606941223145
    4. 'i' → logprob: -10.501606941223145
    5. 'bles' → logprob: -10.626606941223145
    6. '```' → logprob: -10.751606941223145
    7. 'iles' → logprob: -11.126606941223145
    8. 'es' → logprob: -11.126606941223145
    9. 'ib' → logprob: -11.501606941223145
    10. 'ables' → logprob: -11.626606941223145

Token 487: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5866679549217224
    2. ' par' → logprob: -0.8366679549217224
    3. ' au' → logprob: -5.336668014526367
    4. 'au' → logprob: -6.086668014526367
    5. ' soit' → logprob: -6.086668014526367
    6. '   ' → logprob: -6.836668014526367
    7. ' ' → logprob: -9.211668014526367
    8. 'so' → logprob: -10.461668014526367
    9. '```' → logprob: -10.461668014526367
    10. '       ' → logprob: -10.836668014526367

Token 488: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.014511697925627232
    2. ' ' → logprob: -4.264511585235596
    3. 'au' → logprob: -9.014512062072754
    4. ' either' → logprob: -9.014512062072754
    5. 'either' → logprob: -9.764512062072754
    6. ' au' → logprob: -11.139512062072754
    7. '5' → logprob: -11.514512062072754
    8. ' trois' → logprob: -11.889512062072754
    9. ' soit' → logprob: -12.139512062072754
    10. ' ' → logprob: -12.764512062072754

Token 489: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000990295666269958
    2. ' ' → logprob: -7.125990390777588
    3. 'au' → logprob: -9.25098991394043
    4. '5' → logprob: -9.75098991394043
    5. 'either' → logprob: -11.50098991394043
    6. '   ' → logprob: -12.62598991394043
    7. '```' → logprob: -12.62598991394043
    8. ' either' → logprob: -12.75098991394043
    9. ' trois' → logprob: -13.00098991394043
    10. ' au' → logprob: -13.25098991394043

Token 490: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.6370472311973572
    2. ' ou' → logprob: -0.7620472311973572
    3. ' or' → logprob: -5.887047290802002
    4. '   ' → logprob: -7.012047290802002
    5. 'or' → logprob: -7.387047290802002
    6. ' ' → logprob: -9.887046813964844
    7. 'au' → logprob: -10.637046813964844
    8. '  ' → logprob: -11.262046813964844
    9. ' au' → logprob: -11.387046813964844
    10. ',' → logprob: -11.762046813964844

Token 491: ' par' (ID: 686)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.011089201085269451
    2. ' ' → logprob: -4.511089324951172
    3. '   ' → logprob: -11.011089324951172
    4. ' par' → logprob: -11.636089324951172
    5. '#' → logprob: -12.386089324951172
    6. 'par' → logprob: -12.636089324951172
    7. ' cinq' → logprob: -12.761089324951172
    8. '```' → logprob: -13.261089324951172
    9. ' ' → logprob: -14.261089324951172
    10. 'by' → logprob: -14.636089324951172

Token 492: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04300639405846596
    2. ' ' → logprob: -3.168006420135498
    3. '```' → logprob: -13.04300594329834
    4. '   ' → logprob: -13.79300594329834
    5. ' ' → logprob: -13.91800594329834
    6. ' cinq' → logprob: -14.04300594329834
    7. '  ' → logprob: -14.16800594329834
    8. 'au' → logprob: -15.10550594329834
    9. ' au' → logprob: -15.98050594329834
    10. '.' → logprob: -16.230506896972656

Token 493: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005541055579669774
    2. ' ' → logprob: -7.500554084777832
    3. '```' → logprob: -14.750554084777832
    4. ' ' → logprob: -16.06305503845215
    5. '  ' → logprob: -16.43805503845215
    6. ' cinq' → logprob: -16.56305503845215
    7. '   ' → logprob: -16.81305503845215
    8. '٥' → logprob: -17.50055503845215
    9. '.' → logprob: -17.75055503845215
    10. '1' → logprob: -17.87555503845215

Token 494: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006664573680609465
    2. 'print' → logprob: -5.131664752960205
    3. ':' → logprob: -7.756664752960205
    4. ' print' → logprob: -8.256664276123047
    5. '
' → logprob: -11.131664276123047
    6. '       ' → logprob: -11.506664276123047
    7. ':
' → logprob: -11.631664276123047
    8. '```' → logprob: -12.881664276123047
    9. '.' → logprob: -13.006664276123047
    10. ',' → logprob: -13.131664276123047

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013219872489571571
    2. 'print' → logprob: -4.513219833374023
    3. ' print' → logprob: -6.138219833374023
    4. '       ' → logprob: -12.013219833374023
    5. '	print' → logprob: -12.763219833374023
    6. '   ' → logprob: -13.513219833374023
    7. '  ' → logprob: -15.638219833374023
    8. '    ' → logprob: -15.888219833374023
    9. ' ' → logprob: -16.138219833374023
    10. '    
' → logprob: -16.388219833374023

Token 496: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.010105117224156857
    2. '   ' → logprob: -4.760105133056641
    3. ' print' → logprob: -6.510105133056641
    4. '	print' → logprob: -14.13510513305664
    5. '```' → logprob: -15.88510513305664
    6. ' ' → logprob: -16.13510513305664
    7. '
' → logprob: -17.01010513305664
    8. '       ' → logprob: -17.26010513305664
    9. '  ' → logprob: -17.63510513305664
    10. 'Print' → logprob: -18.01010513305664

Token 497: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0022719393018633127
    2. '(' → logprob: -6.127272129058838
    3. '('' → logprob: -9.37727165222168
    4. '(True' → logprob: -14.50227165222168
    5. '(":' → logprob: -14.62727165222168
    6. '()' → logprob: -14.87727165222168
    7. '("")' → logprob: -15.37727165222168
    8. ' ("' → logprob: -15.62727165222168
    9. '"' → logprob: -16.37727165222168
    10. '("'' → logprob: -17.37727165222168

Token 498: 'APP' (ID: 13444)
  Prédit: 'OK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.40134695172309875
    2. 'YES' → logprob: -2.2763469219207764
    3. 'Tous' → logprob: -2.6513469219207764
    4. 'O' → logprob: -2.9013469219207764
    5. 'Oui' → logprob: -3.0263469219207764
    6. 'Valid' → logprob: -4.2763471603393555
    7. 'Yes' → logprob: -4.5263471603393555
    8. 'Ok' → logprob: -4.6513471603393555
    9. 'Tout' → logprob: -4.7763471603393555
    10. 'VALID' → logprob: -6.1513471603393555

Token 499: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.01768731325864792
    2. 'R' → logprob: -4.3926873207092285
    3. 'ROB' → logprob: -5.7676873207092285
    4. 'L' → logprob: -8.01768684387207
    5. 'ROI' → logprob: -8.01768684387207
    6. 'LI' → logprob: -8.89268684387207
    7. 'LY' → logprob: -9.01768684387207
    8. 'RE' → logprob: -9.51768684387207
    9. 'OR' → logprob: -9.95518684387207
    10. '_RO' → logprob: -9.95518684387207

Token 500: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -0.5499741435050964
    2. 'U' → logprob: -1.0499742031097412
    3. 'UV' → logprob: -2.674974203109741
    4. 'VE' → logprob: -6.424973964691162
    5. 'OVED' → logprob: -6.549973964691162
    6. 'V' → logprob: -7.299973964691162
    7. 'VAL' → logprob: -10.17497444152832
    8. 'D' → logprob: -10.29997444152832
    9. 'OVE' → logprob: -10.42497444152832
    10. ' U' → logprob: -10.67497444152832

Token 501: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0010532920714467764
    2. '')
' → logprob: -6.876053333282471
    3. '')
' → logprob: -11.501052856445312
    4. '!' → logprob: -12.626052856445312
    5. ')' → logprob: -12.626052856445312
    6. '")' → logprob: -12.876052856445312
    7. ''' → logprob: -14.376052856445312
    8. '')

' → logprob: -14.876052856445312
    9. '.')' → logprob: -16.751052856445312
    10. '()' → logprob: -17.126052856445312

Token 502: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.9146995327901095e-05
    2. ' else' → logprob: -10.875019073486328
    3. 'elif' → logprob: -16.000019073486328
    4. '```' → logprob: -18.500019073486328
    5. '}else' → logprob: -19.000019073486328
    6. 'elses' → logprob: -19.125019073486328
    7. 'e' → logprob: -19.625019073486328
    8. '    
' → logprob: -19.750019073486328
    9. 'elser' → logprob: -19.750019073486328
    10. 'els' → logprob: -20.000019073486328

Token 503: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.350237637758255
    2. ':
' → logprob: -1.2252376079559326
    3. '   ' → logprob: -6.475237846374512
    4. 'print' → logprob: -8.725237846374512
    5. ' :
' → logprob: -10.100237846374512
    6. ' :' → logprob: -10.475237846374512
    7. ' print' → logprob: -11.350237846374512
    8. ':
' → logprob: -12.600237846374512
    9. ':

' → logprob: -14.225237846374512
    10. '  ' → logprob: -14.725237846374512

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31590354442596436
    2. 'print' → logprob: -1.3159035444259644
    3. ' print' → logprob: -5.940903663635254
    4. '	print' → logprob: -11.815903663635254
    5. ' ' → logprob: -15.065903663635254
    6. '       ' → logprob: -15.190903663635254
    7. '  ' → logprob: -15.815903663635254
    8. '```' → logprob: -15.940903663635254
    9. '   ' → logprob: -15.940903663635254
    10. '    ' → logprob: -16.065902709960938

Token 505: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.362307223957032e-05
    2. ' print' → logprob: -9.875073432922363
    3. '   ' → logprob: -10.750073432922363
    4. 'PRINT' → logprob: -15.000073432922363
    5. '	print' → logprob: -15.500073432922363
    6. ''' → logprob: -17.00007438659668
    7. 'Print' → logprob: -18.12507438659668
    8. '```' → logprob: -18.25007438659668
    9. '.print' → logprob: -18.37507438659668
    10. '    
' → logprob: -18.75007438659668

Token 506: ' flag' (ID: 9641)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.182190554682165e-05
    2. '   ' → logprob: -10.125061988830566
    3. ' print' → logprob: -10.750061988830566
    4. '	print' → logprob: -15.625061988830566
    5. 'Print' → logprob: -16.75006103515625
    6. ' ' → logprob: -17.62506103515625
    7. '  ' → logprob: -18.25006103515625
    8. '#print' → logprob: -18.25006103515625
    9. 'PRINT' → logprob: -18.62506103515625
    10. '.print' → logprob: -19.00006103515625

Token 507: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8062202334403992
    2. ' ==' → logprob: -0.8062202334403992
    3. '=' → logprob: -2.556220293045044
    4. ' =' → logprob: -3.681220293045044
    5. 'print' → logprob: -5.681220054626465
    6. '   ' → logprob: -7.681220054626465
    7. ' print' → logprob: -9.806220054626465
    8. '  ' → logprob: -10.556220054626465
    9. ' ' → logprob: -10.681220054626465
    10. '!=' → logprob: -10.806220054626465

Token 508: ' égal' (ID: 15059)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01529139094054699
    2. ' ' → logprob: -4.265291213989258
    3. '   ' → logprob: -7.515291213989258
    4. '=' → logprob: -7.765291213989258
    5. '==' → logprob: -9.640291213989258
    6. ' =' → logprob: -9.765291213989258
    7. ' ==' → logprob: -10.390291213989258
    8. '    ' → logprob: -13.640291213989258
    9. '```' → logprob: -13.765291213989258
    10. '  ' → logprob: -14.015291213989258

Token 509: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.46588706970214844
    2. '1' → logprob: -1.2158870697021484
    3. 'à' → logprob: -3.2158870697021484
    4. '=' → logprob: -3.5908870697021484
    5. ' ' → logprob: -5.590887069702148
    6. ' =' → logprob: -5.590887069702148
    7. '   ' → logprob: -7.340887069702148
    8. '0' → logprob: -9.840887069702148
    9. ' a' → logprob: -10.465887069702148
    10. '  ' → logprob: -10.840887069702148

Token 510: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.875911712646484
    4. '`' → logprob: -17.500911712646484
    5. '   ' → logprob: -17.625911712646484
    6. '```' → logprob: -18.375911712646484
    7. ''' → logprob: -18.625911712646484
    8. '=' → logprob: -19.000911712646484
    9. '  ' → logprob: -19.188411712646484
    10. '0' → logprob: -19.250911712646484

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.5000057220459
    4. '0' → logprob: -19.3750057220459
    5. '   ' → logprob: -19.8750057220459
    6. '' → logprob: -20.1875057220459
    7. '１' → logprob: -20.2500057220459
    8. '  ' → logprob: -20.5000057220459
    9. '`' → logprob: -20.5000057220459
    10. '=' → logprob: -20.8750057220459

Token 512: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16364611685276031
    2. '   ' → logprob: -1.9136461019515991
    3. ' print' → logprob: -6.288646221160889
    4. ':
' → logprob: -7.163646221160889
    5. ':' → logprob: -7.288646221160889
    6. '.print' → logprob: -11.16364574432373
    7. '	print' → logprob: -11.16364574432373
    8. ' ' → logprob: -11.28864574432373
    9. '(print' → logprob: -11.41364574432373
    10. '```' → logprob: -12.03864574432373

Token 513: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03715628758072853
    2. '   ' → logprob: -3.537156343460083
    3. ' print' → logprob: -4.912156105041504
    4. ' ' → logprob: -11.537156105041504
    5. '	print' → logprob: -12.037156105041504
    6. '  ' → logprob: -12.912156105041504
    7. '    ' → logprob: -13.537156105041504
    8. '.print' → logprob: -14.412156105041504
    9. '       ' → logprob: -14.662156105041504
    10. '    
' → logprob: -15.537156105041504

Token 514: ' qui' (ID: 2780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.09049654006958
    2. ''' → logprob: -1.46549654006958
    3. '#' → logprob: -1.71549654006958
    4. 'qui' → logprob: -2.71549654006958
    5. ''est' → logprob: -3.21549654006958
    6. 'n' → logprob: -3.96549654006958
    7. 'st' → logprob: -3.96549654006958
    8. ' qui' → logprob: -4.09049654006958
    9. '=' → logprob: -4.21549654006958
    10. '   ' → logprob: -4.59049654006958

Token 515: ' veut' (ID: 41653)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.23465876281261444
    2. 'print' → logprob: -1.7346587181091309
    3. 'sign' → logprob: -3.984658718109131
    4. ' veut' → logprob: -5.609658718109131
    5. ' indique' → logprob: -5.734658718109131
    6. 'ind' → logprob: -5.859658718109131
    7. '#' → logprob: -5.984658718109131
    8. ' print' → logprob: -7.609658718109131
    9. 'means' → logprob: -7.609658718109131
    10. ' means' → logprob: -8.359659194946289

Token 516: ' dire' (ID: 4071)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.0008525127195753157
    2. ' dire' → logprob: -7.250852584838867
    3. '#' → logprob: -9.625852584838867
    4. '-dire' → logprob: -9.750852584838867
    5. 'dir' → logprob: -11.500852584838867
    6. '   ' → logprob: -12.625852584838867
    7. 'sign' → logprob: -13.125852584838867
    8. 'direction' → logprob: -14.125852584838867
    9. 'Dire' → logprob: -14.375852584838867
    10. '```' → logprob: -15.000852584838867

Token 517: ' qu' (ID: 474)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009935753419995308
    2. 'que' → logprob: -5.0099358558654785
    3. '   ' → logprob: -6.8849358558654785
    4. ' que' → logprob: -7.2599358558654785
    5. ''D' → logprob: -7.8849358558654785
    6. ' '' → logprob: -8.38493537902832
    7. '('' → logprob: -8.63493537902832
    8. 'qu' → logprob: -8.75993537902832
    9. '"' → logprob: -8.88493537902832
    10. ' ' → logprob: -8.88493537902832

Token 518: ''au' (ID: 63689)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.895950436592102
    2. ''' → logprob: -1.020950436592102
    3. 'e' → logprob: -2.6459503173828125
    4. 'que' → logprob: -3.1459503173828125
    5. ''il' → logprob: -3.3959503173828125
    6. ''une' → logprob: -3.5209503173828125
    7. 'u' → logprob: -3.7709503173828125
    8. ''on' → logprob: -3.8959503173828125
    9. ''u' → logprob: -5.6459503173828125
    10. 'ue' → logprob: -6.2709503173828125

Token 519: ' moins' (ID: 15924)
  Prédit: 'cun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cun' → logprob: -0.33233126997947693
    2. 'c' → logprob: -1.7073312997817993
    3. 'un' → logprob: -2.5823311805725098
    4. 'une' → logprob: -4.70733118057251
    5. 'ucun' → logprob: -4.70733118057251
    6. 'moins' → logprob: -5.95733118057251
    7. 'uns' → logprob: -6.33233118057251
    8. 'cu' → logprob: -7.08233118057251
    9. 'ucune' → logprob: -7.20733118057251
    10. '```' → logprob: -7.95733118057251

Token 520: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.3898438513278961
    2. ' un' → logprob: -1.1398438215255737
    3. ''un' → logprob: -6.014843940734863
    4. 'une' → logprob: -8.764843940734863
    5. ' ' → logprob: -9.389843940734863
    6. '#' → logprob: -9.514843940734863
    7. '1' → logprob: -9.764843940734863
    8. 'l' → logprob: -10.139843940734863
    9. '	un' → logprob: -10.764843940734863
    10. '   ' → logprob: -10.764843940734863

Token 521: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.18065571784973145
    2. ' nombre' → logprob: -2.1806557178497314
    3. 'number' → logprob: -3.1806557178497314
    4. 'print' → logprob: -5.930655479431152
    5. ''' → logprob: -6.305655479431152
    6. 'pair' → logprob: -6.555655479431152
    7. 'n' → logprob: -6.555655479431152
    8. ' number' → logprob: -6.805655479431152
    9. 'APP' → logprob: -7.805655479431152
    10. 'non' → logprob: -8.555655479431152

Token 522: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.28658807277679443
    2. ' pair' → logprob: -1.9115880727767944
    3. 'n' → logprob: -3.036588191986084
    4. ' n' → logprob: -3.661588191986084
    5. ' ne' → logprob: -4.286588191986084
    6. 'ne' → logprob: -5.786588191986084
    7. 'even' → logprob: -5.911588191986084
    8. ''' → logprob: -6.661588191986084
    9. 'non' → logprob: -6.786588191986084
    10. 'print' → logprob: -6.911588191986084

Token 523: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37824001908302307
    2. 'print' → logprob: -1.3782399892807007
    3. 'a' → logprob: -3.1282401084899902
    4. 'ne' → logprob: -4.62824010848999
    5. '   ' → logprob: -5.75324010848999
    6. ' n' → logprob: -6.12824010848999
    7. 'does' → logprob: -7.37824010848999
    8. 'did' → logprob: -7.50324010848999
    9. '```' → logprob: -7.75324010848999
    10. ''' → logprob: -8.628239631652832

Token 524: ' respecte' (ID: 140483)
  Prédit: ' respecte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' respecte' → logprob: -0.614071786403656
    2. 'respect' → logprob: -0.989071786403656
    3. ' respect' → logprob: -2.489071846008301
    4. 's' → logprob: -6.489071846008301
    5. 'pas' → logprob: -7.364071846008301
    6. 'print' → logprob: -7.489071846008301
    7. 'resp' → logprob: -8.1140718460083
    8. ' pas' → logprob: -8.6140718460083
    9. 'a' → logprob: -8.8640718460083
    10. ' respects' → logprob: -8.9890718460083

Token 525: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.25252917408943176
    2. ' pas' → logprob: -1.5025291442871094
    3. ' la' → logprob: -8.62752914428711
    4. '_pas' → logprob: -8.62752914428711
    5. 'la' → logprob: -10.00252914428711
    6. 'the' → logprob: -10.00252914428711
    7. ''' → logprob: -10.25252914428711
    8. 't' → logprob: -11.37752914428711
    9. '}' → logprob: -11.37752914428711
    10. ' the' → logprob: -11.50252914428711

Token 526: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3354857265949249
    2. ' la' → logprob: -1.3354856967926025
    3. 'the' → logprob: -4.835485935211182
    4. ''' → logprob: -5.210485935211182
    5. '('' → logprob: -5.460485935211182
    6. 'les' → logprob: -6.085485935211182
    7. 'pas' → logprob: -7.460485935211182
    8. '#' → logprob: -8.335485458374023
    9. ' the' → logprob: -8.460485458374023
    10. '   ' → logprob: -8.585485458374023

Token 527: ' condition' (ID: 7060)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.00706451153382659
    2. 'r' → logprob: -5.882064342498779
    3. 'condition' → logprob: -6.132064342498779
    4. 'reg' → logprob: -6.382064342498779
    5. ' rule' → logprob: -9.382064819335938
    6. 'RULE' → logprob: -9.382064819335938
    7. 'print' → logprob: -9.757064819335938
    8. ' règle' → logprob: -10.007064819335938
    9. 'regel' → logprob: -10.257064819335938
    10. 'rules' → logprob: -10.507064819335938

Token 528: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.355960488319397
    2. 'print' → logprob: -1.355960488319397
    3. '('' → logprob: -3.2309603691101074
    4. ' print' → logprob: -7.105960369110107
    5. ''' → logprob: -7.355960369110107
    6. ',' → logprob: -9.230960845947266
    7. ')' → logprob: -9.480960845947266
    8. '.print' → logprob: -9.605960845947266
    9. '```' → logprob: -9.605960845947266
    10. '.' → logprob: -9.730960845947266

Token 529: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003195185214281082
    2. '   ' → logprob: -5.753195285797119
    3. ' print' → logprob: -11.003194808959961
    4. '```' → logprob: -14.753194808959961
    5. '	print' → logprob: -14.878194808959961
    6. 'Print' → logprob: -17.12819480895996
    7. 'PRINT' → logprob: -18.12819480895996
    8. '.print' → logprob: -18.25319480895996
    9. 'printf' → logprob: -18.87819480895996
    10. '       ' → logprob: -19.12819480895996

Token 530: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.0219828002154827e-05
    2. '   ' → logprob: -11.250020027160645
    3. ' print' → logprob: -11.875020027160645
    4. '	print' → logprob: -16.00002098083496
    5. 'Print' → logprob: -17.12502098083496
    6. '```' → logprob: -17.75002098083496
    7. 'printf' → logprob: -18.37502098083496
    8. '#print' → logprob: -18.37502098083496
    9. 'PRINT' → logprob: -18.37502098083496
    10. '.print' → logprob: -18.50002098083496

Token 531: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000556012790184468
    2. '(' → logprob: -7.500555992126465
    3. '("' → logprob: -12.750555992126465
    4. ' ('' → logprob: -16.37555694580078
    5. '()' → logprob: -17.87555694580078
    6. '(('' → logprob: -18.87555694580078
    7. ''' → logprob: -19.12555694580078
    8. '(\'' → logprob: -19.87555694580078
    9. '('_' → logprob: -20.00055694580078
    10. '('(' → logprob: -20.75055694580078

Token 532: 'DEN' (ID: 109767)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.05303456261754036
    2. ''' → logprob: -3.553034543991089
    3. 'NOT' → logprob: -4.553034782409668
    4. 'DEN' → logprob: -4.553034782409668
    5. 'REF' → logprob: -7.803034782409668
    6. 'DIS' → logprob: -7.928034782409668
    7. 'DECL' → logprob: -8.053034782409668
    8. 'FAILED' → logprob: -8.553034782409668
    9. ''Re' → logprob: -8.803034782409668
    10. 'NO' → logprob: -8.928034782409668

Token 533: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -4.9424725148128346e-05
    2. 'Y' → logprob: -10.125049591064453
    3. 'I' → logprob: -11.750049591064453
    4. 'N' → logprob: -15.000049591064453
    5. 'ied' → logprob: -15.000049591064453
    6. 'ED' → logprob: -15.250049591064453
    7. 'IAL' → logprob: -15.750049591064453
    8. 'IABLE' → logprob: -16.750049591064453
    9. '"' → logprob: -16.875049591064453
    10. '```' → logprob: -17.125049591064453

Token 534: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -4.596781946020201e-05
    2. ')' → logprob: -10.000045776367188
    3. '")' → logprob: -14.625045776367188
    4. '()' → logprob: -17.125045776367188
    5. ''' → logprob: -17.625045776367188
    6. '')
' → logprob: -17.875045776367188
    7. '('' → logprob: -18.000045776367188
    8. '}')' → logprob: -18.750045776367188
    9. '');' → logprob: -19.250045776367188
    10. '.')' → logprob: -19.375045776367188


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 532
Tokens correctement prédits (1ère position, stricte): 153
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 335
Précision stricte (1ère position): 28.76%
Précision adaptée (1ère position): 29.70%
Précision (top 10): 62.97%
================================================================================
