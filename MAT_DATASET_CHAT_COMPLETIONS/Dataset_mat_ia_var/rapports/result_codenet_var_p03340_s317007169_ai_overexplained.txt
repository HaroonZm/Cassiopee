================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer un entier N via la fonction input()
# input() lit une ligne de texte depuis la console (par défaut)
# int() convertit la chaîne obtenue en entier décimal
N = int(input())

# Demande à l'utilisateur d'entrer une séquence d'entiers séparés par des espaces
# La première input() lit la ligne sous forme de chaîne de caractères
# split() découpe cette chaîne en une liste de sous-chaînes (ici séparées par des espaces)
# map(int, ...) applique la fonction int à chaque sous-chaîne pour la convertir en entier
# list(...) construit finalement une liste de tous ces entiers et l'affecte à la variable A
A = list(map(int, input().split()))

# On initialise la variable right à 0
# Cela représentera la borne droite du segment courant sur lequel on va optimiser
right = 0

# Initialisation de sum_n et bit_n à 0
# sum_n servira à garder la somme courante des éléments du segment A[left:right]
# bit_n contiendra le résultat xor (opérateur ^) de ce même segment
sum_n = 0
bit_n = 0

# Initialisation de ans à 0
# ans va servir à compter le nombre total de sous-tableaux qui satisfont la condition donnée
ans = 0

# On boucle sur tous les indices possibles pour le bord gauche du segment (left)
# range(N) va de 0 inclus à N exclus, c'est-à-dire de 0 à N-1
for left in range(N):
    # Cette boucle while vise à avancer le bord droit du segment aussi loin que possible
    # Tant que right reste inférieur à N (pour ne pas sortir du tableau)
    # et que l'élément qu'on voudrait ajouter à ce segment (A[right]) respecte une condition
    # La condition : la somme des éléments + A[right] doit être égale au xor de ces mêmes éléments + A[right]
    # sum_n + A[right] == sum_n ^ A[right]
    # Si la condition est vraie, on peut inclure l'élément A[right]
    while right < N and sum_n + A[right] == sum_n ^ A[right]:
        # On ajoute cet élément à la somme courante
        sum_n += A[right]
        # On fait un xor (^) avec la valeur courante bit_n pour l'actualiser
        bit_n ^= A[right]
        # On avance le bord droit du segment d'un cran vers la droite
        right += 1

    # On a trouvé un segment maximal [left, right)
    # Tous les segments commençant par left (inclus) et se terminant avant right (exclus) sont valides
    # Leur nombre est right - left
    # On ajoute ce nombre à ans
    ans += right - left

    # Maintenant, il faut préparer le prochain tour de boucle pour passer left à left+1
    # Si right et left sont au même endroit, cela signifie qu'on n'a pas avancé right, donc rien à enlever
    if right == left:
        # On avance simplement right d'un cran pour éviter un blocage infini
        right += 1
    else:
        # Sinon, on retire de sum_n et bit_n la valeur de l'élément qui sort du segment (A[left])
        # Cela permet de maintenir l'invariant que sum_n et bit_n représentent bien [left+1, right)
        sum_n -= A[left]
        bit_n ^= A[left]

# Finalement, on affiche le résultat
# print() affiche la valeur contenue dans ans sur la sortie standard (console)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16773441433906555
    2. ' l' → logprob: -1.9177343845367432
    3. ' ' → logprob: -5.667734622955322
    4. ' user' → logprob: -6.667734622955322
    5. 'user' → logprob: -7.167734622955322
    6. ''' → logprob: -7.917734622955322
    7. 'u' → logprob: -8.167734146118164
    8. '_' → logprob: -8.417734146118164
    9. ' ' → logprob: -8.917734146118164
    10. ' utilisateur' → logprob: -8.917734146118164

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13838054239749908
    2. 'u' → logprob: -2.763380527496338
    3. ''' → logprob: -3.263380527496338
    4. 'util' → logprob: -4.763380527496338
    5. 'a' → logprob: -5.013380527496338
    6. '’utilisateur' → logprob: -5.138380527496338
    7. ' utilisateur' → logprob: -5.513380527496338
    8. 'e' → logprob: -7.638380527496338
    9. ''user' → logprob: -7.763380527496338
    10. '_' → logprob: -7.888380527496338

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17506203055381775
    2. 'name' → logprob: -2.6750619411468506
    3. 'n' → logprob: -3.4250619411468506
    4. 's' → logprob: -4.30006217956543
    5. ' nom' → logprob: -4.80006217956543
    6. 'user' → logprob: -4.92506217956543
    7. ' =' → logprob: -6.05006217956543
    8. 'prenom' → logprob: -6.05006217956543
    9. 'print' → logprob: -6.17506217956543
    10. 'input' → logprob: -6.17506217956543

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14220651984214783
    2. ''' → logprob: -2.1422064304351807
    3. ''entrée' → logprob: -5.76720666885376
    4. 'u' → logprob: -6.26720666885376
    5. '_' → logprob: -6.39220666885376
    6. 'a' → logprob: -6.39220666885376
    7. ''une' → logprob: -6.64220666885376
    8. 'é' → logprob: -7.14220666885376
    9. ''ent' → logprob: -7.39220666885376
    10. 'entrée' → logprob: -7.64220666885376

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.9196633100509644
    2. 'entrée' → logprob: -0.9196633100509644
    3. 'ent' → logprob: -1.6696633100509644
    4. 'input' → logprob: -5.419663429260254
    5. 's' → logprob: -5.419663429260254
    6. 'entre' → logprob: -7.044663429260254
    7. 'e' → logprob: -7.294663429260254
    8. 'être' → logprob: -7.544663429260254
    9. 'avoir' → logprob: -7.919663429260254
    10. 'é' → logprob: -8.044663429260254

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00024643904180265963
    2. 'éer' → logprob: -9.250246047973633
    3. 'rer' → logprob: -9.500246047973633
    4. 'e' → logprob: -11.250246047973633
    5. 'é' → logprob: -11.625246047973633
    6. 'érer' → logprob: -11.625246047973633
    7. ''er' → logprob: -11.750246047973633
    8. ' er' → logprob: -12.000246047973633
    9. 'erer' → logprob: -12.000246047973633
    10. 'trer' → logprob: -12.125246047973633

Token 10: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09059526771306992
    2. ' un' → logprob: -3.215595245361328
    3. ''' → logprob: -4.090595245361328
    4. ' une' → logprob: -4.590595245361328
    5. '_' → logprob: -4.840595245361328
    6. 'u' → logprob: -5.965595245361328
    7. 'une' → logprob: -6.715595245361328
    8. ' a' → logprob: -6.965595245361328
    9. 'un' → logprob: -6.965595245361328
    10. ' u' → logprob: -6.965595245361328

Token 11: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1826799213886261
    2. ' espace' → logprob: -2.4326798915863037
    3. 'e' → logprob: -2.8076798915863037
    4. 'es' → logprob: -5.932680130004883
    5. ' nom' → logprob: -6.307680130004883
    6. 'a' → logprob: -6.307680130004883
    7. ' mot' → logprob: -6.682680130004883
    8. ' e' → logprob: -6.682680130004883
    9. '_' → logprob: -7.057680130004883
    10. ' )' → logprob: -7.307680130004883

Token 12: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22027896344661713
    2. 'x' → logprob: -1.9702789783477783
    3. '\' → logprob: -4.595278739929199
    4. 'i' → logprob: -4.720278739929199
    5. '\n' → logprob: -4.845278739929199
    6. 'e' → logprob: -4.970278739929199
    7. '```' → logprob: -5.095278739929199
    8. 'entr' → logprob: -5.470278739929199
    9. 'ent' → logprob: -6.095278739929199
    10. ':' → logprob: -6.345278739929199

Token 13: ' via' (ID: 4493)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4757898449897766
    2. 'n' → logprob: -0.9757898449897766
    3. '```' → logprob: -7.475790023803711
    4. 'i' → logprob: -8.350790023803711
    5. 'x' → logprob: -8.600790023803711
    6. '#' → logprob: -8.725790023803711
    7. '\n' → logprob: -8.725790023803711
    8. '`' → logprob: -8.850790023803711
    9. 'e' → logprob: -9.225790023803711
    10. '\' → logprob: -10.350790023803711

Token 14: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7242158055305481
    2. ' input' → logprob: -0.7242158055305481
    3. 'l' → logprob: -4.474215984344482
    4. ' l' → logprob: -5.224215984344482
    5. 'une' → logprob: -5.599215984344482
    6. '=input' → logprob: -5.974215984344482
    7. '`' → logprob: -6.349215984344482
    8. '```' → logprob: -6.724215984344482
    9. ' un' → logprob: -7.349215984344482
    10. ' la' → logprob: -7.474215984344482

Token 15: ' fonction' (ID: 17610)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4539434313774109
    2. 'input' → logprob: -1.2039434909820557
    3. '=input' → logprob: -3.0789434909820557
    4. 'n' → logprob: -5.078943252563477
    5. 's' → logprob: -5.453943252563477
    6. ' =' → logprob: -6.078943252563477
    7. ' ' → logprob: -6.703943252563477
    8. '=' → logprob: -6.953943252563477
    9. 'r' → logprob: -7.078943252563477
    10. '_' → logprob: -7.828943252563477

Token 16: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04435198754072189
    2. ' input' → logprob: -3.1693520545959473
    3. '(input' → logprob: -7.669352054595947
    4. '=input' → logprob: -8.044351577758789
    5. '```' → logprob: -8.669351577758789
    6. '`' → logprob: -8.919351577758789
    7. ' ' → logprob: -10.294351577758789
    8. '_' → logprob: -10.294351577758789
    9. 'int' → logprob: -10.544351577758789
    10. ' `' → logprob: -10.544351577758789

Token 17: '()
' (ID: 1234)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027213601395487785
    2. 'N' → logprob: -4.1522135734558105
    3. '(' → logprob: -6.2772135734558105
    4. 'i' → logprob: -6.5272135734558105
    5. ',' → logprob: -6.6522135734558105
    6. '```' → logprob: -6.7772135734558105
    7. 'e' → logprob: -6.9022135734558105
    8. 'x' → logprob: -7.0272135734558105
    9. '`' → logprob: -7.0272135734558105
    10. '#' → logprob: -7.2772135734558105

Token 18: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6933234930038452
    2. 'n' → logprob: -0.6933234930038452
    3. '```' → logprob: -9.443323135375977
    4. '#' → logprob: -10.068323135375977
    5. '`' → logprob: -11.318323135375977
    6. ' N' → logprob: -11.568323135375977
    7. ',' → logprob: -12.193323135375977
    8. '\n' → logprob: -12.318323135375977
    9. 'x' → logprob: -12.568323135375977
    10. 'i' → logprob: -12.568323135375977

Token 19: ' input' (ID: 3422)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18298014998435974
    2. 'n' → logprob: -1.8079801797866821
    3. ' N' → logprob: -6.557980060577393
    4. '#' → logprob: -6.807980060577393
    5. ' ' → logprob: -8.55798053741455
    6. ' n' → logprob: -8.93298053741455
    7. 'i' → logprob: -9.30798053741455
    8. ' #' → logprob: -10.05798053741455
    9. 'x' → logprob: -10.18298053741455
    10. 'u' → logprob: -10.30798053741455

Token 20: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023685127962380648
    2. '()' → logprob: -7.127368450164795
    3. '('' → logprob: -7.502368450164795
    4. '(
' → logprob: -7.877368450164795
    5. '.' → logprob: -9.502368927001953
    6. ''' → logprob: -9.502368927001953
    7. 's' → logprob: -9.502368927001953
    8. ' (' → logprob: -9.877368927001953
    9. '("' → logprob: -10.002368927001953
    10. ')' → logprob: -10.127368927001953

Token 21: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05361954867839813
    2. 'n' → logprob: -3.803619623184204
    3. '#' → logprob: -4.803619384765625
    4. ')' → logprob: -5.428619384765625
    5. 'N' → logprob: -6.053619384765625
    6. ' ' → logprob: -6.303619384765625
    7. '(
' → logprob: -6.303619384765625
    8. ':' → logprob: -6.428619384765625
    9. '()' → logprob: -6.553619384765625
    10. '```' → logprob: -7.053619384765625

Token 22: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7454701066017151
    2. ' une' → logprob: -1.4954700469970703
    3. 'une' → logprob: -2.4954700469970703
    4. ' la' → logprob: -2.4954700469970703
    5. '(' → logprob: -3.2454700469970703
    6. ' l' → logprob: -3.2454700469970703
    7. 'l' → logprob: -3.3704700469970703
    8. 's' → logprob: -5.24547004699707
    9. 'la' → logprob: -5.87047004699707
    10. 'ent' → logprob: -6.12047004699707

Token 23: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.06111667677760124
    2. ' ligne' → logprob: -3.4361166954040527
    3. ' chaine' → logprob: -4.561116695404053
    4. 's' → logprob: -5.186116695404053
    5. ' valeur' → logprob: -5.686116695404053
    6. 'cha' → logprob: -6.186116695404053
    7. 'chaine' → logprob: -6.311116695404053
    8. ' ' → logprob: -6.936116695404053
    9. 'ligne' → logprob: -7.186116695404053
    10. 'entrée' → logprob: -7.186116695404053

Token 24: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6944541335105896
    2. '#' → logprob: -1.8194541931152344
    3. '\n' → logprob: -2.0694541931152344
    4. '.' → logprob: -3.0694541931152344
    5. ' ' → logprob: -3.1944541931152344
    6. ',' → logprob: -3.6944541931152344
    7. '\' → logprob: -3.8194541931152344
    8. '
' → logprob: -4.319454193115234
    9. 'e' → logprob: -4.819454193115234
    10. 'N' → logprob: -4.819454193115234

Token 25: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.09902045130729675
    2. 'code' → logprob: -3.224020481109619
    3. ' texte' → logprob: -3.349020481109619
    4. 'l' → logprob: -4.349020481109619
    5. ' code' → logprob: -6.224020481109619
    6. ' l' → logprob: -6.724020481109619
    7. 's' → logprob: -7.099020481109619
    8. 'text' → logprob: -7.724020481109619
    9. 'chaine' → logprob: -7.724020481109619
    10. 'string' → logprob: -7.849020481109619

Token 26: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36190178990364075
    2. 'N' → logprob: -1.2369017601013184
    3. '#' → logprob: -4.486901760101318
    4. '\n' → logprob: -7.111901760101318
    5. ',' → logprob: -7.861901760101318
    6. '\' → logprob: -8.486902236938477
    7. '
' → logprob: -8.736902236938477
    8. '```' → logprob: -9.111902236938477
    9. 'x' → logprob: -9.611902236938477
    10. '.' → logprob: -9.861902236938477

Token 27: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3178549110889435
    2. ' l' → logprob: -1.317854881286621
    3. 'le' → logprob: -5.942854881286621
    4. '	l' → logprob: -7.192854881286621
    5. 'la' → logprob: -8.317854881286621
    6. ' le' → logprob: -8.692854881286621
    7. ' clavier' → logprob: -8.817854881286621
    8. ' la' → logprob: -8.942854881286621
    9. '```' → logprob: -9.692854881286621
    10. ' standard' → logprob: -9.817854881286621

Token 28: ' console' (ID: 3887)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.5352428555488586
    2. 's' → logprob: -2.035242795944214
    3. ' clavier' → logprob: -2.660242795944214
    4. 'console' → logprob: -2.910242795944214
    5. 'cl' → logprob: -2.910242795944214
    6. 'ent' → logprob: -4.160243034362793
    7. 'entr' → logprob: -4.160243034362793
    8. 'stdin' → logprob: -4.285243034362793
    9. 'input' → logprob: -4.410243034362793
    10. ' console' → logprob: -5.035243034362793

Token 29: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2525765001773834
    2. 'n' → logprob: -1.502576470375061
    3. '#' → logprob: -8.25257682800293
    4. '```' → logprob: -8.62757682800293
    5. '\n' → logprob: -9.12757682800293
    6. '\' → logprob: -10.25257682800293
    7. ',' → logprob: -11.25257682800293
    8. 'x' → logprob: -11.50257682800293
    9. '`' → logprob: -11.50257682800293
    10. ' N' → logprob: -11.87757682800293

Token 30: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027383046690374613
    2. ' )' → logprob: -6.5027384757995605
    3. '`)' → logprob: -8.627737998962402
    4. ',' → logprob: -8.752737998962402
    5. '')' → logprob: -8.752737998962402
    6. '")' → logprob: -9.002737998962402
    7. '#' → logprob: -9.002737998962402
    8. '),' → logprob: -9.502737998962402
    9. 'n' → logprob: -9.627737998962402
    10. 'et' → logprob: -10.002737998962402

Token 31: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.6806296706199646
    2. 'ex' → logprob: -1.8056297302246094
    3. 'def' → logprob: -2.3056297302246094
    4. 'dé' → logprob: -2.5556297302246094
    5. '```' → logprob: -2.8056297302246094
    6. ' exemple' → logprob: -4.180629730224609
    7. 'ent' → logprob: -4.180629730224609
    8. ' def' → logprob: -4.930629730224609
    9. 'default' → logprob: -5.180629730224609
    10. 'ce' → logprob: -5.305629730224609

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018052661791443825
    2. ',' → logprob: -5.143052577972412
    3. '),' → logprob: -5.143052577972412
    4. 'input' → logprob: -6.268052577972412
    5. ' )' → logprob: -6.268052577972412
    6. ' et' → logprob: -8.14305305480957
    7. '#' → logprob: -8.26805305480957
    8. '')' → logprob: -8.39305305480957
    9. ' en' → logprob: -8.51805305480957
    10. 'et' → logprob: -8.76805305480957

Token 33: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10036346316337585
    2. 'n' → logprob: -2.3503634929656982
    3. '```' → logprob: -9.725363731384277
    4. '#' → logprob: -9.850363731384277
    5. '\' → logprob: -11.100363731384277
    6. '\n' → logprob: -11.225363731384277
    7. 'ent' → logprob: -12.725363731384277
    8. '`' → logprob: -12.725363731384277
    9. 'x' → logprob: -12.850363731384277
    10. ' N' → logprob: -13.600363731384277

Token 34: ' int' (ID: 677)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009789262898266315
    2. 'n' → logprob: -4.63478946685791
    3. '#' → logprob: -10.50978946685791
    4. ' N' → logprob: -13.00978946685791
    5. '```' → logprob: -13.38478946685791
    6. '\' → logprob: -14.50978946685791
    7. '

' → logprob: -15.00978946685791
    8. '\n' → logprob: -15.50978946685791
    9. 'x' → logprob: -16.009788513183594
    10. 'i' → logprob: -16.134788513183594

Token 35: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.433829159708694e-05
    2. '()' → logprob: -9.87507438659668
    3. '(
' → logprob: -11.62507438659668
    4. ' (' → logprob: -12.75007438659668
    5. '('' → logprob: -12.75007438659668
    6. '(int' → logprob: -13.75007438659668
    7. '(user' → logprob: -13.87507438659668
    8. '<|end|>' → logprob: -14.25007438659668
    9. '(input' → logprob: -14.37507438659668
    10. '(n' → logprob: -14.50007438659668

Token 36: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008324974915012717
    2. '()' → logprob: -8.125832557678223
    3. 'convert' → logprob: -8.500832557678223
    4. '(
' → logprob: -9.750832557678223
    5. ' (' → logprob: -9.875832557678223
    6. '(convert' → logprob: -9.875832557678223
    7. 'def' → logprob: -10.750832557678223
    8. ')' → logprob: -10.750832557678223
    9. '(int' → logprob: -11.125832557678223
    10. '<|end|>' → logprob: -11.250832557678223

Token 37: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -6.802049756515771e-05
    2. 'i' → logprob: -10.375067710876465
    3. ' it' → logprob: -10.750067710876465
    4. '()' → logprob: -12.750067710876465
    5. '(' → logprob: -13.000067710876465
    6. '(it' → logprob: -13.125067710876465
    7. 'ir' → logprob: -13.375067710876465
    8. 't' → logprob: -13.625067710876465
    9. 'ît' → logprob: -14.000067710876465
    10. '_it' → logprob: -14.250067710876465

Token 38: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7706406116485596
    2. 'l' → logprob: -1.8956406116485596
    3. ' l' → logprob: -2.0206406116485596
    4. ' ' → logprob: -2.7706406116485596
    5. ' la' → logprob: -2.7706406116485596
    6. ' (' → logprob: -3.5206406116485596
    7. '()' → logprob: -3.6456406116485596
    8. 's' → logprob: -4.1456403732299805
    9. 'la' → logprob: -4.6456403732299805
    10. '(input' → logprob: -5.1456403732299805

Token 39: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.15486836433410645
    2. 'chaine' → logprob: -2.7798683643341064
    3. ' chaine' → logprob: -3.7798683643341064
    4. 'entrée' → logprob: -4.154868125915527
    5. ' input' → logprob: -4.779868125915527
    6. 'val' → logprob: -4.904868125915527
    7. ' valeur' → logprob: -4.904868125915527
    8. 'cha' → logprob: -5.029868125915527
    9. 's' → logprob: -5.279868125915527
    10. 'ent' → logprob: -6.029868125915527

Token 40: ' obten' (ID: 28150)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0476431846618652
    2. 's' → logprob: -1.2976431846618652
    3. ' ' → logprob: -2.4226431846618652
    4. ' (' → logprob: -2.5476431846618652
    5. ' en' → logprob: -3.6726431846618652
    6. '()' → logprob: -3.7976431846618652
    7. 'e' → logprob: -3.9226431846618652
    8. ' d' → logprob: -4.297643184661865
    9. ' de' → logprob: -4.547643184661865
    10. ')' → logprob: -4.797643184661865

Token 41: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6350544095039368
    2. 'ue' → logprob: -0.7600544095039368
    3. 'e' → logprob: -6.510054588317871
    4. 'enue' → logprob: -7.135054588317871
    5. 'ant' → logprob: -9.510054588317871
    6. '```' → logprob: -11.010054588317871
    7. 'r' → logprob: -11.510054588317871
    8. 'ie' → logprob: -11.760054588317871
    9. 'en' → logprob: -12.010054588317871
    10. ''u' → logprob: -12.385054588317871

Token 42: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2655884325504303
    2. 'N' → logprob: -2.8905885219573975
    3. ',' → logprob: -3.0155885219573975
    4. 'n' → logprob: -3.2655885219573975
    5. '(' → logprob: -3.7655885219573975
    6. ')' → logprob: -4.765588283538818
    7. '.' → logprob: -4.890588283538818
    8. ':' → logprob: -5.265588283538818
    9. ' (' → logprob: -5.265588283538818
    10. 'u' → logprob: -5.515588283538818

Token 43: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.12091110646724701
    2. ' entier' → logprob: -2.620911121368408
    3. ' int' → logprob: -3.870911121368408
    4. ' ' → logprob: -4.995911121368408
    5. 'ent' → logprob: -5.245911121368408
    6. 'un' → logprob: -5.370911121368408
    7. 'int' → logprob: -6.495911121368408
    8. ' nombre' → logprob: -7.370911121368408
    9. ' ent' → logprob: -7.620911121368408
    10. ' integer' → logprob: -8.49591064453125

Token 44: ' déc' (ID: 8498)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04862154647707939
    2. 'n' → logprob: -3.048621654510498
    3. '#' → logprob: -10.67362117767334
    4. '```' → logprob: -11.92362117767334
    5. '\' → logprob: -14.17362117767334
    6. 'x' → logprob: -14.29862117767334
    7. '\n' → logprob: -14.29862117767334
    8. '
' → logprob: -14.67362117767334
    9. ' N' → logprob: -14.79862117767334
    10. '

' → logprob: -14.79862117767334

Token 45: 'imal' (ID: 3882)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6789103746414185
    2. 'i' → logprob: -1.8039103746414185
    3. 'imal' → logprob: -1.9289103746414185
    4. 'l' → logprob: -2.428910255432129
    5. 'e' → logprob: -3.053910255432129
    6. 't' → logprob: -3.678910255432129
    7. '```' → logprob: -5.678910255432129
    8. 'al' → logprob: -6.053910255432129
    9. '#' → logprob: -6.303910255432129
    10. 'ri' → logprob: -6.303910255432129

Token 46: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06200330704450607
    2. 'n' → logprob: -2.8120033740997314
    3. '#' → logprob: -10.562003135681152
    4. '```' → logprob: -12.062003135681152
    5. '\n' → logprob: -14.312003135681152
    6. '\' → logprob: -14.312003135681152
    7. 'x' → logprob: -14.437003135681152
    8. ' N' → logprob: -14.812003135681152
    9. '`' → logprob: -14.812003135681152
    10. 'i' → logprob: -15.062003135681152

Token 47: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006720347795635462
    2. 'n' → logprob: -5.006720542907715
    3. '```' → logprob: -12.756720542907715
    4. '#' → logprob: -13.506720542907715
    5. '\' → logprob: -15.631720542907715
    6. ' N' → logprob: -16.0067195892334
    7. '\n' → logprob: -16.1317195892334
    8. 'x' → logprob: -16.2567195892334
    9. '
' → logprob: -16.3817195892334
    10. '

' → logprob: -16.5067195892334

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00593033991754055
    2. '=' → logprob: -5.130930423736572
    3. ' ' → logprob: -14.755929946899414
    4. 'space' → logprob: -15.130929946899414
    5. 's' → logprob: -15.255929946899414
    6. ' =
' → logprob: -15.505929946899414
    7. '=int' → logprob: -15.755929946899414
    8. '=input' → logprob: -16.005929946899414
    9. ' ' → logprob: -16.255929946899414
    10. '_' → logprob: -16.255929946899414

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1002492681145668
    2. 'int' → logprob: -2.3502492904663086
    3. ' input' → logprob: -10.475249290466309
    4. 'input' → logprob: -11.350249290466309
    5. '=int' → logprob: -13.100249290466309
    6. '<int' → logprob: -15.600249290466309
    7. '[int' → logprob: -15.850249290466309
    8. '(int' → logprob: -16.100248336791992
    9. ' ' → logprob: -16.600248336791992
    10. ' ' → logprob: -16.725248336791992

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38689693808555603
    2. '(' → logprob: -1.1368969678878784
    3. ' (' → logprob: -11.011897087097168
    4. 'input' → logprob: -12.636897087097168
    5. '(
' → logprob: -12.761897087097168
    6. '('' → logprob: -13.511897087097168
    7. '(

' → logprob: -13.886897087097168
    8. '()' → logprob: -14.386897087097168
    9. '(user' → logprob: -16.76189613342285
    10. '("' → logprob: -16.88689613342285

Token 51: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5292221307754517
    2. '(' → logprob: -1.2792221307754517
    3. '())' → logprob: -2.029222011566162
    4. '('' → logprob: -7.279222011566162
    5. ')' → logprob: -8.65422248840332
    6. ' ())' → logprob: -9.15422248840332
    7. '("' → logprob: -9.77922248840332
    8. '()))' → logprob: -10.02922248840332
    9. '(()' → logprob: -10.15422248840332
    10. '(""))' → logprob: -10.65422248840332

Token 52: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7127620577812195
    2. '#' → logprob: -1.3377621173858643
    3. ')' → logprob: -2.2127621173858643
    4. '<|end|>' → logprob: -2.3377621173858643
    5. ' 
' → logprob: -5.212761878967285
    6. ':' → logprob: -5.462761878967285
    7. '.' → logprob: -5.712761878967285
    8. '\' → logprob: -5.712761878967285
    9. 'for' → logprob: -5.837761878967285
    10. '+' → logprob: -5.837761878967285

Token 53: ' Dem' (ID: 9458)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1805475652217865
    2. ' for' → logprob: -2.5555474758148193
    3. 'factor' → logprob: -3.4305474758148193
    4. 's' → logprob: -3.5555474758148193
    5. '#' → logprob: -4.805547714233398
    6. 'result' → logprob: -5.305547714233398
    7. 'sum' → logprob: -6.055547714233398
    8. 'if' → logprob: -6.305547714233398
    9. 'fact' → logprob: -6.430547714233398
    10. 'total' → logprob: -6.680547714233398

Token 54: 'ande' (ID: 4102)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1223880052566528
    2. 'e' → logprob: -1.3723880052566528
    3. 'ière' → logprob: -2.7473878860473633
    4. 'ande' → logprob: -2.8723878860473633
    5. '#' → logprob: -2.9973878860473633
    6. 'er' → logprob: -3.1223878860473633
    7. 'andez' → logprob: -3.2473878860473633
    8. 'print' → logprob: -3.9973878860473633
    9. 'and' → logprob: -4.247387886047363
    10. 'for' → logprob: -4.372387886047363

Token 55: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16079695522785187
    2. '()' → logprob: -2.285796880722046
    3. ' ' → logprob: -4.785797119140625
    4. 's' → logprob: -5.285797119140625
    5. '#' → logprob: -5.285797119140625
    6. ' (' → logprob: -5.410797119140625
    7. ')' → logprob: -5.535797119140625
    8. '("' → logprob: -5.660797119140625
    9. '<|end|>' → logprob: -5.910797119140625
    10. '('' → logprob: -6.410797119140625

Token 56: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.49061450362205505
    2. 'l' → logprob: -0.9906145334243774
    3. '<|end|>' → logprob: -5.865614414215088
    4. ' un' → logprob: -6.115614414215088
    5. ' une' → logprob: -6.115614414215088
    6. 'user' → logprob: -6.490614414215088
    7. ' ' → logprob: -6.615614414215088
    8. ' la' → logprob: -6.740614414215088
    9. ' user' → logprob: -6.865614414215088
    10. 'un' → logprob: -7.365614414215088

Token 57: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0032448475249111652
    2. 'util' → logprob: -6.628244876861572
    3. '’utilisateur' → logprob: -7.128244876861572
    4. ''util' → logprob: -7.628244876861572
    5. ''' → logprob: -8.628244400024414
    6. 'user' → logprob: -9.128244400024414
    7. 'u' → logprob: -9.128244400024414
    8. 'a' → logprob: -9.753244400024414
    9. ''user' → logprob: -9.753244400024414
    10. ' utilisateur' → logprob: -10.128244400024414

Token 58: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8353496193885803
    2. 'd' → logprob: -1.4603495597839355
    3. '(' → logprob: -1.5853495597839355
    4. ' ' → logprob: -3.0853495597839355
    5. 's' → logprob: -3.9603495597839355
    6. '#' → logprob: -4.3353495597839355
    7. ')' → logprob: -4.7103495597839355
    8. '()' → logprob: -4.7103495597839355
    9. '("' → logprob: -5.4603495597839355
    10. '_' → logprob: -5.7103495597839355

Token 59: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07584670186042786
    2. ''entrée' → logprob: -3.4508466720581055
    3. ''ent' → logprob: -3.7008466720581055
    4. 'e' → logprob: -4.4508466720581055
    5. ''entre' → logprob: -7.8258466720581055
    6. 'a' → logprob: -7.9508466720581055
    7. ' '' → logprob: -7.9508466720581055
    8. ' e' → logprob: -8.075846672058105
    9. ''é' → logprob: -8.075846672058105
    10. ''aff' → logprob: -8.200846672058105

Token 60: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.061891820281744
    2. ''' → logprob: -4.061892032623291
    3. ' entrer' → logprob: -4.561892032623291
    4. ' saisir' → logprob: -5.311892032623291
    5. 'entrée' → logprob: -5.436892032623291
    6. 'a' → logprob: -5.561892032623291
    7. 's' → logprob: -6.061892032623291
    8. 'n' → logprob: -6.186892032623291
    9. ''ent' → logprob: -6.311892032623291
    10. ''entrée' → logprob: -6.311892032623291

Token 61: 'er' (ID: 259)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.29699867963790894
    2. 'er' → logprob: -1.5469987392425537
    3. 'ter' → logprob: -3.4219987392425537
    4. 'éer' → logprob: -5.921998500823975
    5. 'e' → logprob: -6.296998500823975
    6. 'trer' → logprob: -6.296998500823975
    7. 'tre' → logprob: -6.796998500823975
    8. '```' → logprob: -7.171998500823975
    9. 'te' → logprob: -7.421998500823975
    10. 'ée' → logprob: -7.921998500823975

Token 62: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22651366889476776
    2. '()' → logprob: -2.226513624191284
    3. ' un' → logprob: -2.601513624191284
    4. ' ' → logprob: -5.101513862609863
    5. '_' → logprob: -5.601513862609863
    6. 'un' → logprob: -5.976513862609863
    7. ' (' → logprob: -6.476513862609863
    8. ')' → logprob: -6.726513862609863
    9. '("' → logprob: -7.101513862609863
    10. ' une' → logprob: -7.601513862609863

Token 63: ' sé' (ID: 7462)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6255262494087219
    2. ' ' → logprob: -1.5005261898040771
    3. ' espace' → logprob: -2.625526189804077
    4. 'chaine' → logprob: -3.250526189804077
    5. ' autre' → logprob: -3.500526189804077
    6. ' chaine' → logprob: -4.250526428222656
    7. ' phrase' → logprob: -4.625526428222656
    8. 'entrée' → logprob: -4.875526428222656
    9. ' valeur' → logprob: -4.875526428222656
    10. ' deuxième' → logprob: -5.000526428222656

Token 64: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.03486032038927078
    2. 'rie' → logprob: -3.409860372543335
    3. 'qu' → logprob: -8.159860610961914
    4. 'conde' → logprob: -8.659860610961914
    5. 'q' → logprob: -9.034860610961914
    6. 'que' → logprob: -9.159860610961914
    7. '#' → logprob: -9.409860610961914
    8. 'QUENCE' → logprob: -9.409860610961914
    9. 'ance' → logprob: -9.784860610961914
    10. 'ries' → logprob: -10.284860610961914

Token 65: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ''ent' (ID: 53422)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5264328718185425
    2. ' ent' → logprob: -1.6514328718185425
    3. ''ent' → logprob: -2.776432991027832
    4. ''espace' → logprob: -3.401432991027832
    5. ''esp' → logprob: -3.651432991027832
    6. ' caractères' → logprob: -4.026432991027832
    7. ' espace' → logprob: -4.401432991027832
    8. ' nombres' → logprob: -4.776432991027832
    9. 'es' → logprob: -4.901432991027832
    10. ' space' → logprob: -5.151432991027832

Token 67: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0031398090068250895
    2. 'ières' → logprob: -6.378139972686768
    3. 'i' → logprob: -6.628139972686768
    4. 't' → logprob: -9.87813949584961
    5. '```' → logprob: -10.25313949584961
    6. 'ié' → logprob: -11.62813949584961
    7. 'ier' → logprob: -12.00313949584961
    8. 'ière' → logprob: -12.12813949584961
    9. 'ti' → logprob: -13.12813949584961
    10. 'ieres' → logprob: -13.62813949584961

Token 68: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21283598244190216
    2. ' ' → logprob: -2.3378360271453857
    3. ' s' → logprob: -3.9628360271453857
    4. '()' → logprob: -4.212835788726807
    5. '[' → logprob: -4.837835788726807
    6. 'input' → logprob: -4.837835788726807
    7. 'a' → logprob: -4.837835788726807
    8. ' ,' → logprob: -5.587835788726807
    9. ' input' → logprob: -5.587835788726807
    10. ' )' → logprob: -5.712835788726807

Token 69: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.1865874081850052
    2. 'é' → logprob: -1.8115874528884888
    3. 'ée' → logprob: -5.061587333679199
    4. 'e' → logprob: -8.5615873336792
    5. 'es' → logprob: -9.3115873336792
    6. 's' → logprob: -9.5615873336792
    7. 'ées' → logprob: -10.1865873336792
    8. 'ément' → logprob: -10.9365873336792
    9. ' par' → logprob: -11.6865873336792
    10. ''é' → logprob: -11.9365873336792

Token 70: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5532399415969849
    2. '()' → logprob: -1.8032399415969849
    3. 'par' → logprob: -2.4282398223876953
    4. 'de' → logprob: -3.1782398223876953
    5. 's' → logprob: -3.5532398223876953
    6. 'es' → logprob: -3.5532398223876953
    7. 'e' → logprob: -4.178239822387695
    8. '('' → logprob: -4.178239822387695
    9. 'd' → logprob: -4.803239822387695
    10. '(' → logprob: -5.303239822387695

Token 71: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.4268988370895386
    2. 'es' → logprob: -1.5518988370895386
    3. 'des' → logprob: -1.9268988370895386
    4. ''espace' → logprob: -2.301898956298828
    5. 'un' → logprob: -2.551898956298828
    6. ' des' → logprob: -2.551898956298828
    7. 'spaces' → logprob: -3.551898956298828
    8. 'space' → logprob: -3.676898956298828
    9. ' espace' → logprob: -4.051898956298828
    10. 'esp' → logprob: -4.176898956298828

Token 72: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.6388626098632812
    2. ' espaces' → logprob: -0.8888626098632812
    3. ''esp' → logprob: -3.0138626098632812
    4. 'spaces' → logprob: -5.138862609863281
    5. 'es' → logprob: -6.013862609863281
    6. ''espace' → logprob: -6.138862609863281
    7. '’esp' → logprob: -7.763862609863281
    8. 'paces' → logprob: -8.263862609863281
    9. 'space' → logprob: -8.388862609863281
    10. ' espace' → logprob: -9.138862609863281

Token 73: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019580746069550514
    2. 'n' → logprob: -5.269580841064453
    3. ' s' → logprob: -5.519580841064453
    4. 'a' → logprob: -6.394580841064453
    5. 'x' → logprob: -6.394580841064453
    6. 'sequence' → logprob: -6.519580841064453
    7. 'input' → logprob: -7.519580841064453
    8. ' ' → logprob: -7.519580841064453
    9. 'i' → logprob: -7.644580841064453
    10. 'inputs' → logprob: -7.894580841064453

Token 74: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6182189583778381
    2. 's' → logprob: -1.1182188987731934
    3. 'numbers' → logprob: -2.3682188987731934
    4. 'ent' → logprob: -3.9932188987731934
    5. 'values' → logprob: -5.368218898773193
    6. 'nums' → logprob: -5.993218898773193
    7. ' sequence' → logprob: -6.243218898773193
    8. 'n' → logprob: -6.743218898773193
    9. 'se' → logprob: -6.868218898773193
    10. 'seq' → logprob: -6.993218898773193

Token 75: ' La' (ID: 3038)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6842746734619141
    2. 'numbers' → logprob: -1.809274673461914
    3. 's' → logprob: -2.059274673461914
    4. 'ent' → logprob: -3.059274673461914
    5. 'L' → logprob: -3.434274673461914
    6. 'seq' → logprob: -3.559274673461914
    7. 'values' → logprob: -3.934274673461914
    8. 'lst' → logprob: -4.059274673461914
    9. ' sequence' → logprob: -4.309274673461914
    10. 'l' → logprob: -4.559274673461914

Token 76: ' première' (ID: 23423)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4833546280860901
    2. 'sequence' → logprob: -1.7333545684814453
    3. ' sequence' → logprob: -2.8583545684814453
    4. 'seq' → logprob: -3.1083545684814453
    5. '#' → logprob: -3.9833545684814453
    6. 'sé' → logprob: -4.483354568481445
    7. 'se' → logprob: -4.483354568481445
    8. 'chaine' → logprob: -4.608354568481445
    9. 'ent' → logprob: -5.108354568481445
    10. 'liste' → logprob: -5.233354568481445

Token 77: ' input' (ID: 3422)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.0096039772033691
    2. 's' → logprob: -1.2596039772033691
    3. ' ligne' → logprob: -1.6346039772033691
    4. '_' → logprob: -3.009603977203369
    5. '#' → logprob: -3.384603977203369
    6. 'sé' → logprob: -4.009603977203369
    7. 'l' → logprob: -4.509603977203369
    8. 'sequence' → logprob: -5.009603977203369
    9. 'suite' → logprob: -5.009603977203369
    10. 'chaine' → logprob: -5.509603977203369

Token 78: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017588881019037217
    2. 's' → logprob: -10.000175476074219
    3. '(' → logprob: -10.375175476074219
    4. '_l' → logprob: -11.125175476074219
    5. '_line' → logprob: -11.125175476074219
    6. '()

' → logprob: -11.750175476074219
    7. '()
' → logprob: -11.750175476074219
    8. 'l' → logprob: -11.875175476074219
    9. '_' → logprob: -12.000175476074219
    10. '().' → logprob: -12.250175476074219

Token 79: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7363241910934448
    2. 's' → logprob: -0.8613241910934448
    3. 'sequence' → logprob: -3.7363243103027344
    4. 'chaine' → logprob: -4.236324310302734
    5. '_sequence' → logprob: -5.111324310302734
    6. 'ligne' → logprob: -5.361324310302734
    7. ' =' → logprob: -5.611324310302734
    8. 'input' → logprob: -5.861324310302734
    9. 'se' → logprob: -5.861324310302734
    10. 'line' → logprob: -5.986324310302734

Token 80: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10280128568410873
    2. ' une' → logprob: -2.9778013229370117
    3. 'une' → logprob: -3.4778013229370117
    4. ' la' → logprob: -4.477801322937012
    5. 'la' → logprob: -5.977801322937012
    6. ' ()' → logprob: -7.102801322937012
    7. 'l' → logprob: -8.227801322937012
    8. 'le' → logprob: -8.727801322937012
    9. '().' → logprob: -9.102801322937012
    10. 's' → logprob: -9.727801322937012

Token 81: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.26878976821899414
    2. 'chaine' → logprob: -1.6437897682189941
    3. 'sé' → logprob: -4.643789768218994
    4. 'cha' → logprob: -4.643789768218994
    5. 's' → logprob: -5.143789768218994
    6. 'l' → logprob: -5.268789768218994
    7. ' chaîne' → logprob: -5.643789768218994
    8. ' ligne' → logprob: -5.768789768218994
    9. 'liste' → logprob: -6.268789768218994
    10. 'suite' → logprob: -6.643789768218994

Token 82: ' sous' (ID: 14487)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.026366256177425385
    2. '()' → logprob: -4.651366233825684
    3. ' suivant' → logprob: -5.151366233825684
    4. 's' → logprob: -5.901366233825684
    5. ' suivantes' → logprob: -6.651366233825684
    6. 'de' → logprob: -6.901366233825684
    7. ' ' → logprob: -7.026366233825684
    8. ' )' → logprob: -7.401366233825684
    9. ' complète' → logprob: -7.776366233825684
    10. ' de' → logprob: -7.901366233825684

Token 83: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.25965267419815063
    2. 'forme' → logprob: -2.009652614593506
    3. 'la' → logprob: -3.384652614593506
    4. 'ent' → logprob: -3.509652614593506
    5. 'form' → logprob: -4.009652614593506
    6. 'chaine' → logprob: -5.759652614593506
    7. 't' → logprob: -6.384652614593506
    8. 'format' → logprob: -7.009652614593506
    9. ' la' → logprob: -7.009652614593506
    10. 's' → logprob: -7.509652614593506

Token 84: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.37309694290161133
    2. ' de' → logprob: -1.2480969429016113
    3. 'de' → logprob: -4.248096942901611
    4. 'd' → logprob: -4.623096942901611
    5. '#' → logprob: -8.623096466064453
    6. ''d' → logprob: -11.623096466064453
    7. 'chaine' → logprob: -11.748096466064453
    8. 's' → logprob: -12.248096466064453
    9. '()' → logprob: -12.748096466064453
    10. ' des' → logprob: -12.873096466064453

Token 85: ' chaîne' (ID: 89288)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.781808078289032
    2. 'chaine' → logprob: -0.906808078289032
    3. ' chaîne' → logprob: -2.5318081378936768
    4. 'cha' → logprob: -2.9068081378936768
    5. ' texte' → logprob: -6.656807899475098
    6. 'une' → logprob: -7.031807899475098
    7. ' chaine' → logprob: -7.031807899475098
    8. 'str' → logprob: -7.156807899475098
    9. 'string' → logprob: -8.281807899475098
    10. ' chaînes' → logprob: -9.281807899475098

Token 86: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2644372284412384
    2. 'sequence' → logprob: -1.889437198638916
    3. 'line' → logprob: -4.514437198638916
    4. 'ligne' → logprob: -4.639437198638916
    5. 'S' → logprob: -4.764437198638916
    6. 'L' → logprob: -5.014437198638916
    7. ' sequence' → logprob: -5.014437198638916
    8. 'ent' → logprob: -5.264437198638916
    9. 'numbers' → logprob: -5.264437198638916
    10. 'chaine' → logprob: -5.389437198638916

Token 87: ' caractères' (ID: 183106)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.18048694729804993
    2. 'car' → logprob: -2.0554869174957275
    3. ' caractères' → logprob: -3.8054869174957275
    4. ' texte' → logprob: -4.430487155914307
    5. 'text' → logprob: -6.180487155914307
    6. 'chaine' → logprob: -7.930487155914307
    7. 'chars' → logprob: -9.805486679077148
    8. 'str' → logprob: -9.930486679077148
    9. 't' → logprob: -10.055486679077148
    10. 's' → logprob: -10.055486679077148

Token 88: '
' (ID: 198)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.7110051512718201
    2. 's' → logprob: -1.0860052108764648
    3. 'ent' → logprob: -3.336005210876465
    4. 'ligne' → logprob: -3.461005210876465
    5. 'l' → logprob: -3.961005210876465
    6. 'numbers' → logprob: -4.086005210876465
    7. ' sequence' → logprob: -4.211005210876465
    8. 'line' → logprob: -4.336005210876465
    9. 'seq' → logprob: -5.211005210876465
    10. 'L' → logprob: -5.211005210876465

Token 89: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.8341358304023743
    2. 's' → logprob: -1.0841357707977295
    3. 'ent' → logprob: -2.2091357707977295
    4. 'numbers' → logprob: -3.8341357707977295
    5. 'line' → logprob: -4.334136009216309
    6. 'l' → logprob: -4.459136009216309
    7. 'ligne' → logprob: -4.459136009216309
    8. 'chaine' → logprob: -4.834136009216309
    9. 'seq' → logprob: -4.834136009216309
    10. ' sequence' → logprob: -5.084136009216309

Token 90: ' split' (ID: 12648)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.3483121395111084
    2. 'numbers' → logprob: -1.3483121395111084
    3. 'ent' → logprob: -1.4733121395111084
    4. 'values' → logprob: -2.5983121395111084
    5. 's' → logprob: -3.2233121395111084
    6. 'nums' → logprob: -3.5983121395111084
    7. 'val' → logprob: -3.5983121395111084
    8. 'L' → logprob: -4.3483123779296875
    9. 'chaine' → logprob: -4.7233123779296875
    10. 'seq' → logprob: -4.8483123779296875

Token 91: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002764710516203195
    2. '(' → logprob: -8.250276565551758
    3. '('' → logprob: -12.625276565551758
    4. '()]' → logprob: -12.625276565551758
    5. ' ()' → logprob: -13.500276565551758
    6. '()

' → logprob: -13.625276565551758
    7. '("' → logprob: -13.750276565551758
    8. '().' → logprob: -14.250276565551758
    9. '())' → logprob: -14.375276565551758
    10. '()`' → logprob: -14.500276565551758

Token 92: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003712784731760621
    2. '(' → logprob: -6.6287126541137695
    3. 'split' → logprob: -7.5037126541137695
    4. '().' → logprob: -7.6287126541137695
    5. ' ()' → logprob: -8.12871265411377
    6. ')' → logprob: -8.50371265411377
    7. '<|end|>' → logprob: -8.75371265411377
    8. '('' → logprob: -8.87871265411377
    9. 'spl' → logprob: -9.37871265411377
    10. '.split' → logprob: -9.87871265411377

Token 93: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0004419935867190361
    2. 'p' → logprob: -8.375441551208496
    3. 'page' → logprob: -9.125441551208496
    4. '```' → logprob: -10.625441551208496
    5. 'пе' → logprob: -10.875441551208496
    6. 'pé' → logprob: -11.125441551208496
    7. 'per' → logprob: -11.500441551208496
    8. '#' → logprob: -12.250441551208496
    9. 'ne' → logprob: -12.750441551208496
    10. '``' → logprob: -12.875441551208496

Token 94: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7238649725914001
    2. ' la' → logprob: -0.8488649725914001
    3. 'la' → logprob: -2.723865032196045
    4. ' cette' → logprob: -5.473865032196045
    5. 's' → logprob: -5.723865032196045
    6. '('' → logprob: -5.848865032196045
    7. 'au' → logprob: -6.473865032196045
    8. 'the' → logprob: -6.723865032196045
    9. 'l' → logprob: -6.973865032196045
    10. '(' → logprob: -7.098865032196045

Token 95: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.048953622579574585
    2. 'chaine' → logprob: -3.6739535331726074
    3. 'cha' → logprob: -4.298953533172607
    4. ' chaine' → logprob: -5.048953533172607
    5. ' la' → logprob: -7.298953533172607
    6. ' string' → logprob: -7.798953533172607
    7. ' cha' → logprob: -8.048954010009766
    8. 'la' → logprob: -8.423954010009766
    9. ' ligne' → logprob: -8.673954010009766
    10. 'ligne' → logprob: -9.048954010009766

Token 96: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012017780914902687
    2. ')' → logprob: -6.012017726898193
    3. 'par' → logprob: -6.512017726898193
    4. '<|end|>' → logprob: -6.637017726898193
    5. ' par' → logprob: -6.887017726898193
    6. '#' → logprob: -7.137017726898193
    7. ' )' → logprob: -7.137017726898193
    8. 's' → logprob: -7.637017726898193
    9. '())' → logprob: -8.012018203735352
    10. ' en' → logprob: -8.137018203735352

Token 97: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.08923977613449097
    2. 'une' → logprob: -2.5892398357391357
    3. ' liste' → logprob: -5.089239597320557
    4. 'liste' → logprob: -5.964239597320557
    5. ' des' → logprob: -7.089239597320557
    6. ' espaces' → logprob: -8.964240074157715
    7. ''une' → logprob: -9.339240074157715
    8. 'tokens' → logprob: -9.589240074157715
    9. 'des' → logprob: -9.589240074157715
    10. 'un' → logprob: -9.714240074157715

Token 98: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.05681140720844269
    2. ' liste' → logprob: -2.9318113327026367
    3. 'list' → logprob: -6.556811332702637
    4. 's' → logprob: -7.806811332702637
    5. 'Liste' → logprob: -9.931811332702637
    6. 'lista' → logprob: -10.681811332702637
    7. 'lst' → logprob: -11.556811332702637
    8. ' listes' → logprob: -11.681811332702637
    9. ' list' → logprob: -13.056811332702637
    10. 'lis' → logprob: -13.056811332702637

Token 99: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019221927970647812
    2. '(' → logprob: -4.894221782684326
    3. '('' → logprob: -5.394221782684326
    4. ' ()' → logprob: -5.769221782684326
    5. 's' → logprob: -6.269221782684326
    6. '[' → logprob: -7.519221782684326
    7. '("' → logprob: -8.394222259521484
    8. ' (' → logprob: -8.394222259521484
    9. '<|end|>' → logprob: -9.019222259521484
    10. 'des' → logprob: -9.394222259521484

Token 100: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.032926883548498154
    2. 'cha' → logprob: -4.0329270362854
    3. 'str' → logprob: -5.0329270362854
    4. 'chain' → logprob: -5.6579270362854
    5. 'strings' → logprob: -6.5329270362854
    6. 'chaine' → logprob: -7.0329270362854
    7. ' chaîne' → logprob: -7.2829270362854
    8. ' chain' → logprob: -7.5329270362854
    9. ' espaces' → logprob: -8.532926559448242
    10. ' strings' → logprob: -8.657926559448242

Token 101: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.020078953355550766
    2. 'cha' → logprob: -4.270079135894775
    3. 'chain' → logprob: -5.895079135894775
    4. '-cha' → logprob: -6.895079135894775
    5. ' chain' → logprob: -7.270079135894775
    6. 'chaine' → logprob: -8.395078659057617
    7. ' chaîne' → logprob: -8.520078659057617
    8. 'strings' → logprob: -8.520078659057617
    9. '_' → logprob: -9.145078659057617
    10. 's' → logprob: -9.270078659057617

Token 102: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.031831540167331696
    2. 'î' → logprob: -3.5318315029144287
    3. 'ines' → logprob: -7.281831741333008
    4. 'r' → logprob: -7.406831741333008
    5. 'nes' → logprob: -8.156831741333008
    6. 'Î' → logprob: -8.656831741333008
    7. 'ì' → logprob: -10.031831741333008
    8. 'ın' → logprob: -10.406831741333008
    9. '	' → logprob: -10.406831741333008
    10. '```' → logprob: -10.531831741333008

Token 103: ' (' (ID: 350)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.4207333028316498
    2. 's' → logprob: -1.2957333326339722
    3. 'numbers' → logprob: -4.170733451843262
    4. 'lst' → logprob: -4.295733451843262
    5. 'n' → logprob: -5.045733451843262
    6. ' tokens' → logprob: -5.795733451843262
    7. ' s' → logprob: -6.170733451843262
    8. '[' → logprob: -6.170733451843262
    9. '<|end|>' → logprob: -6.170733451843262
    10. 'se' → logprob: -6.420733451843262

Token 104: 'ici' (ID: 3757)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48099371790885925
    2. ' des' → logprob: -1.9809937477111816
    3. ' )' → logprob: -2.3559937477111816
    4. ' espaces' → logprob: -2.6059937477111816
    5. ''' → logprob: -3.7309937477111816
    6. 'des' → logprob: -4.105993747711182
    7. ''esp' → logprob: -5.230993747711182
    8. ' '' → logprob: -5.355993747711182
    9. 'au' → logprob: -5.980993747711182
    10. ' ' → logprob: -5.980993747711182

Token 105: ' sépar' (ID: 97160)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8580183386802673
    2. ')' → logprob: -1.108018398284912
    3. ' )' → logprob: -1.608018398284912
    4. ' des' → logprob: -5.233018398284912
    5. ' au' → logprob: -5.233018398284912
    6. ',' → logprob: -5.358018398284912
    7. ' espaces' → logprob: -5.483018398284912
    8. 'par' → logprob: -5.608018398284912
    9. ' en' → logprob: -5.608018398284912
    10. 'au' → logprob: -5.733018398284912

Token 106: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.10561973601579666
    2. 'ée' → logprob: -2.3556196689605713
    3. 'é' → logprob: -5.98061990737915
    4. ' par' → logprob: -6.35561990737915
    5. 'par' → logprob: -7.48061990737915
    6. 'és' → logprob: -7.98061990737915
    7. 'ateur' → logprob: -9.980619430541992
    8. 'e' → logprob: -9.980619430541992
    9. 'ant' → logprob: -10.605619430541992
    10. 'Par' → logprob: -10.855619430541992

Token 107: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6370450854301453
    2. ' par' → logprob: -0.7620450854301453
    3. ')' → logprob: -5.637044906616211
    4. ' )' → logprob: -8.137044906616211
    5. 'au' → logprob: -8.762044906616211
    6. '"' → logprob: -9.262044906616211
    7. '()' → logprob: -9.512044906616211
    8. '(par' → logprob: -9.762044906616211
    9. 's' → logprob: -10.262044906616211
    10. '_par' → logprob: -10.762044906616211

Token 108: ' des' (ID: 731)
  Prédit: ''esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''esp' → logprob: -0.9396500587463379
    2. ' des' → logprob: -1.564650058746338
    3. ''' → logprob: -1.939650058746338
    4. 'des' → logprob: -2.314650058746338
    5. ' espaces' → logprob: -2.814650058746338
    6. ''un' → logprob: -3.189650058746338
    7. ''espace' → logprob: -3.439650058746338
    8. ' '' → logprob: -4.689650058746338
    9. '"' → logprob: -4.814650058746338
    10. 'esp' → logprob: -6.189650058746338

Token 109: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -1.050976276397705
    2. ''esp' → logprob: -1.050976276397705
    3. ' espaces' → logprob: -1.425976276397705
    4. ''espace' → logprob: -3.550976276397705
    5. 'es' → logprob: -3.925976276397705
    6. 'spaces' → logprob: -4.675976276397705
    7. '’esp' → logprob: -7.050976276397705
    8. '"' → logprob: -7.550976276397705
    9. ''' → logprob: -7.800976276397705
    10. '’espace' → logprob: -8.550975799560547

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04491879791021347
    2. 's' → logprob: -4.044919013977051
    3. ' )' → logprob: -5.044919013977051
    4. 'sequence' → logprob: -5.794919013977051
    5. ')
' → logprob: -6.044919013977051
    6. 'tokens' → logprob: -6.294919013977051
    7. 'chaine' → logprob: -6.294919013977051
    8. '#' → logprob: -6.419919013977051
    9. 'ligne' → logprob: -6.669919013977051
    10. 'lst' → logprob: -6.794919013977051

Token 111: '#' (ID: 2)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.1587496995925903
    2. 'numbers' → logprob: -1.2837496995925903
    3. 'sequence' → logprob: -1.4087496995925903
    4. 'values' → logprob: -3.533749580383301
    5. 'val' → logprob: -3.783749580383301
    6. 'seq' → logprob: -3.908749580383301
    7. 'nums' → logprob: -3.908749580383301
    8. 's' → logprob: -4.533749580383301
    9. 'A' → logprob: -4.658749580383301
    10. 'lst' → logprob: -4.783749580383301

Token 112: ' map' (ID: 4014)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.0308269262313843
    2. 'arr' → logprob: -1.9058269262313843
    3. 'lst' → logprob: -1.9058269262313843
    4. 'sequence' → logprob: -2.155827045440674
    5. 'values' → logprob: -3.280827045440674
    6. 'L' → logprob: -3.280827045440674
    7. 'A' → logprob: -3.405827045440674
    8. 'nums' → logprob: -3.780827045440674
    9. 'seq' → logprob: -3.905827045440674
    10. 'ent' → logprob: -4.155827045440674

Token 113: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38930705189704895
    2. '(' → logprob: -1.1393070220947266
    3. '(lambda' → logprob: -6.514307022094727
    4. '(list' → logprob: -8.014307022094727
    5. '(str' → logprob: -8.264307022094727
    6. '(
' → logprob: -8.514307022094727
    7. '()' → logprob: -9.264307022094727
    8. '<int' → logprob: -10.764307022094727
    9. '=int' → logprob: -11.764307022094727
    10. '[int' → logprob: -12.389307022094727

Token 114: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059414565563201904
    2. ',' → logprob: -2.9344146251678467
    3. ',input' → logprob: -6.184414386749268
    4. '(input' → logprob: -6.559414386749268
    5. ',)' → logprob: -7.559414386749268
    6. '(' → logprob: -8.684414863586426
    7. ' )' → logprob: -10.059414863586426
    8. '`)' → logprob: -10.184414863586426
    9. ')(' → logprob: -10.309414863586426
    10. '),' → logprob: -10.434414863586426

Token 115: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.361133873462677
    2. ' input' → logprob: -1.3611338138580322
    3. ')' → logprob: -3.1111338138580322
    4. ' )' → logprob: -6.361134052276611
    5. '(input' → logprob: -8.861133575439453
    6. ' N' → logprob: -9.361133575439453
    7. '[input' → logprob: -9.611133575439453
    8. 'N' → logprob: -9.736133575439453
    9. '=input' → logprob: -10.736133575439453
    10. '))' → logprob: -10.986133575439453

Token 116: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19463202357292175
    2. '(' → logprob: -2.194632053375244
    3. '()' → logprob: -3.444632053375244
    4. '(input' → logprob: -4.444632053375244
    5. '(int' → logprob: -5.069632053375244
    6. 'input' → logprob: -5.819632053375244
    7. '(
' → logprob: -5.944632053375244
    8. 'list' → logprob: -6.944632053375244
    9. '(list' → logprob: -7.319632053375244
    10. '(s' → logprob: -7.319632053375244

Token 117: ' la' (ID: 557)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09201910346746445
    2. 'int' → logprob: -2.4670190811157227
    3. ' int' → logprob: -7.092019081115723
    4. '<|end|>' → logprob: -7.467019081115723
    5. '=int' → logprob: -7.967019081115723
    6. '(lambda' → logprob: -8.092019081115723
    7. '<int' → logprob: -8.217019081115723
    8. '[int' → logprob: -8.217019081115723
    9. '(' → logprob: -8.842019081115723
    10. ']int' → logprob: -8.967019081115723

Token 118: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038014065474271774
    2. ' int' → logprob: -3.7880141735076904
    3. 'fonction' → logprob: -4.288013935089111
    4. ' fonction' → logprob: -7.163013935089111
    5. 'function' → logprob: -9.66301441192627
    6. ' ' → logprob: -10.66301441192627
    7. ' function' → logprob: -10.91301441192627
    8. '<int' → logprob: -11.28801441192627
    9. '=int' → logprob: -11.91301441192627
    10. ' à' → logprob: -11.91301441192627

Token 119: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6344090104103088
    2. 'int' → logprob: -0.7594090104103088
    3. ' int' → logprob: -7.009408950805664
    4. '=int' → logprob: -8.134408950805664
    5. '(lambda' → logprob: -8.884408950805664
    6. '<|end|>' → logprob: -9.009408950805664
    7. '(' → logprob: -9.134408950805664
    8. '<int' → logprob: -9.259408950805664
    9. '()' → logprob: -10.134408950805664
    10. '[int' → logprob: -10.509408950805664

Token 120: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21774737536907196
    2. '(' → logprob: -2.217747449874878
    3. '()' → logprob: -2.842747449874878
    4. '(lambda' → logprob: -4.592747211456299
    5. '(map' → logprob: -5.342747211456299
    6. '(input' → logprob: -5.592747211456299
    7. '(list' → logprob: -5.717747211456299
    8. '(...)' → logprob: -6.467747211456299
    9. 'sur' → logprob: -6.717747211456299
    10. 'list' → logprob: -7.342747211456299

Token 121: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.21756088733673096
    2. ' each' → logprob: -2.4675607681274414
    3. ' chacune' → logprob: -3.0925607681274414
    4. 'each' → logprob: -3.2175607681274414
    5. ' la' → logprob: -4.842560768127441
    6. 'l' → logprob: -5.342560768127441
    7. 'la' → logprob: -5.592560768127441
    8. '<|end|>' → logprob: -5.842560768127441
    9. ' l' → logprob: -6.092560768127441
    10. 'Chaque' → logprob: -7.342560768127441

Token 122: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0020091719925403595
    2. ' élément' → logprob: -6.502009391784668
    3. 's' → logprob: -7.877009391784668
    4. 'element' → logprob: -10.002009391784668
    5. 'él' → logprob: -11.002009391784668
    6. 'é' → logprob: -11.127009391784668
    7. 'chaine' → logprob: -11.502009391784668
    8. ' sous' → logprob: -11.502009391784668
    9. ')' → logprob: -12.252009391784668
    10. 'elem' → logprob: -12.752009391784668

Token 123: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6539641618728638
    2. '()' → logprob: -1.7789641618728638
    3. '-' → logprob: -2.278964042663574
    4. '_' → logprob: -2.403964042663574
    5. ')' → logprob: -4.278964042663574
    6. '(' → logprob: -4.278964042663574
    7. '-cha' → logprob: -4.278964042663574
    8. 'élé' → logprob: -4.653964042663574
    9. '-l' → logprob: -5.153964042663574
    10. 'cha' → logprob: -5.278964042663574

Token 124: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.632011353969574
    2. 'înes' → logprob: -0.882011353969574
    3. 'î' → logprob: -3.5070114135742188
    4. 'ne' → logprob: -4.132011413574219
    5. 'nes' → logprob: -5.132011413574219
    6. 'ine' → logprob: -7.132011413574219
    7. 'ïne' → logprob: -7.257011413574219
    8. 'ï' → logprob: -8.132011413574219
    9. 'ines' → logprob: -8.257011413574219
    10. 'r' → logprob: -9.632011413574219

Token 125: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0685458853840828
    2. '(' → logprob: -3.9435458183288574
    3. 's' → logprob: -4.193545818328857
    4. '()' → logprob: -5.068545818328857
    5. '(
' → logprob: -5.443545818328857
    6. '(numbers' → logprob: -5.693545818328857
    7. 'numbers' → logprob: -6.068545818328857
    8. ',' → logprob: -6.568545818328857
    9. 'sequence' → logprob: -6.568545818328857
    10. 'ent' → logprob: -6.818545818328857

Token 126: ' la' (ID: 557)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.7775379419326782
    2. ' convertir' → logprob: -1.1525379419326782
    3. 'ob' → logprob: -2.0275378227233887
    4. ' transformer' → logprob: -3.5275378227233887
    5. 'transform' → logprob: -3.7775378227233887
    6. ' créer' → logprob: -3.7775378227233887
    7. 'convert' → logprob: -4.277537822723389
    8. ' les' → logprob: -7.152537822723389
    9. ' convert' → logprob: -7.277537822723389
    10. ' produire' → logprob: -7.652537822723389

Token 127: ' convertir' (ID: 79223)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.7040263414382935
    2. ' convertir' → logprob: -1.3290263414382935
    3. 'transform' → logprob: -1.5790263414382935
    4. ' transformer' → logprob: -3.704026222229004
    5. 'con' → logprob: -5.829026222229004
    6. 'ob' → logprob: -6.079026222229004
    7. 'cr' → logprob: -6.704026222229004
    8. ' créer' → logprob: -7.204026222229004
    9. 'converter' → logprob: -7.329026222229004
    10. '#' → logprob: -7.454026222229004

Token 128: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49256524443626404
    2. '#' → logprob: -2.492565155029297
    3. 'lst' → logprob: -2.867565155029297
    4. 'sur' → logprob: -3.367565155029297
    5. '(lst' → logprob: -3.617565155029297
    6. 'liste' → logprob: -4.242565155029297
    7. '(' → logprob: -4.367565155029297
    8. '(sequence' → logprob: -4.492565155029297
    9. '(numbers' → logprob: -4.617565155029297
    10. 'tokens' → logprob: -4.742565155029297

Token 129: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.08008097112178802
    2. ' ent' → logprob: -3.080080986022949
    3. ' une' → logprob: -4.330080986022949
    4. ' liste' → logprob: -5.830080986022949
    5. 'inte' → logprob: -5.830080986022949
    6. 'liste' → logprob: -6.080080986022949
    7. ' integers' → logprob: -6.205080986022949
    8. 'une' → logprob: -6.330080986022949
    9. ' entier' → logprob: -6.455080986022949
    10. 'list' → logprob: -6.580080986022949

Token 130: '
' (ID: 198)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.4792972803115845
    2. 'sequence' → logprob: -1.6042972803115845
    3. 'arr' → logprob: -1.9792972803115845
    4. 'values' → logprob: -2.354297161102295
    5. 'A' → logprob: -2.604297161102295
    6. 'lst' → logprob: -2.729297161102295
    7. 'nums' → logprob: -3.229297161102295
    8. 'ent' → logprob: -3.354297161102295
    9. 'seq' → logprob: -3.604297161102295
    10. 's' → logprob: -3.979297161102295

Token 131: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.0835180282592773
    2. 'sequence' → logprob: -1.5835180282592773
    3. 'values' → logprob: -2.2085180282592773
    4. 'ent' → logprob: -2.2085180282592773
    5. 'A' → logprob: -2.7085180282592773
    6. 'arr' → logprob: -3.4585180282592773
    7. 'lst' → logprob: -3.8335180282592773
    8. 'nums' → logprob: -4.083518028259277
    9. 'val' → logprob: -4.083518028259277
    10. 'liste' → logprob: -4.083518028259277

Token 132: ' list' (ID: 1562)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.3561897277832031
    2. 'arr' → logprob: -1.8561897277832031
    3. 'sequence' → logprob: -1.8561897277832031
    4. 'numbers' → logprob: -1.8561897277832031
    5. 'liste' → logprob: -2.981189727783203
    6. 'values' → logprob: -3.231189727783203
    7. 'A' → logprob: -3.481189727783203
    8. 'L' → logprob: -3.606189727783203
    9. 'nums' → logprob: -3.856189727783203
    10. ' sequence' → logprob: -4.106189727783203

Token 133: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14529672265052795
    2. '()' → logprob: -2.020296812057495
    3. '=' → logprob: -7.020296573638916
    4. '(input' → logprob: -8.020297050476074
    5. 's' → logprob: -8.395297050476074
    6. '(map' → logprob: -8.645297050476074
    7. '(s' → logprob: -8.895297050476074
    8. '(int' → logprob: -9.395297050476074
    9. '(N' → logprob: -9.520297050476074
    10. '(lambda' → logprob: -9.770297050476074

Token 134: ' construit' (ID: 119882)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26394525170326233
    2. ' =' → logprob: -1.76394522190094
    3. 's' → logprob: -4.51394510269165
    4. 'numbers' → logprob: -4.63894510269165
    5. 'ent' → logprob: -4.88894510269165
    6. '(sequence' → logprob: -5.01394510269165
    7. 'sequence' → logprob: -5.38894510269165
    8. ')' → logprob: -5.51394510269165
    9. '(numbers' → logprob: -5.88894510269165
    10. '(' → logprob: -6.26394510269165

Token 135: ' finalement' (ID: 77979)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042273249477148056
    2. '(map' → logprob: -3.7922732830047607
    3. 'une' → logprob: -5.167273044586182
    4. '(list' → logprob: -5.792273044586182
    5. ' une' → logprob: -6.042273044586182
    6. '(...)' → logprob: -6.417273044586182
    7. ' la' → logprob: -6.542273044586182
    8. '([' → logprob: -6.667273044586182
    9. '([]' → logprob: -6.917273044586182
    10. '()' → logprob: -7.042273044586182

Token 136: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.28289833664894104
    2. ' une' → logprob: -1.6578983068466187
    3. 'une' → logprob: -3.032898426055908
    4. 'la' → logprob: -4.907898426055908
    5. '()' → logprob: -9.40789794921875
    6. '_la' → logprob: -9.90789794921875
    7. ' ' → logprob: -10.03289794921875
    8. '[]' → logprob: -10.15789794921875
    9. 'list' → logprob: -10.90789794921875
    10. 'liste' → logprob: -11.65789794921875

Token 137: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2521113455295563
    2. 'liste' → logprob: -1.5021113157272339
    3. 'list' → logprob: -8.752111434936523
    4. ' list' → logprob: -11.502111434936523
    5. 'Liste' → logprob: -12.252111434936523
    6. ' ' → logprob: -13.377111434936523
    7. ' Liste' → logprob: -13.627111434936523
    8. '[' → logprob: -14.002111434936523
    9. 'l' → logprob: -14.002111434936523
    10. '```' → logprob: -14.002111434936523

Token 138: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.683306097984314
    2. 's' → logprob: -1.933306097984314
    3. '()' → logprob: -2.9333062171936035
    4. '(
' → logprob: -3.1833062171936035
    5. '(numbers' → logprob: -3.5583062171936035
    6. 'numbers' → logprob: -3.9333062171936035
    7. '=' → logprob: -3.9333062171936035
    8. 'tokens' → logprob: -4.0583062171936035
    9. 'des' → logprob: -4.0583062171936035
    10. 'ent' → logprob: -4.1833062171936035

Token 139: ' tous' (ID: 10688)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1226302832365036
    2. 'int' → logprob: -2.4976303577423096
    3. ' ent' → logprob: -3.8726303577423096
    4. 'ces' → logprob: -5.6226301193237305
    5. ' nombres' → logprob: -5.6226301193237305
    6. 'val' → logprob: -6.7476301193237305
    7. ' int' → logprob: -6.9976301193237305
    8. 'ints' → logprob: -7.2476301193237305
    9. 'n' → logprob: -7.3726301193237305
    10. 'N' → logprob: -7.7476301193237305

Token 140: ' ces' (ID: 10532)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.10262367874383926
    2. ' les' → logprob: -2.477623701095581
    3. 'ces' → logprob: -4.602623462677002
    4. 'ent' → logprob: -5.852623462677002
    5. ' ces' → logprob: -7.727623462677002
    6. 'élé' → logprob: -10.22762393951416
    7. ' ent' → logprob: -10.35262393951416
    8. 'l' → logprob: -10.47762393951416
    9. ' éléments' → logprob: -10.47762393951416
    10. 'la' → logprob: -10.60262393951416

Token 141: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.04506581649184227
    2. 'élé' → logprob: -3.7950658798217773
    3. ' ent' → logprob: -4.545065879821777
    4. ' éléments' → logprob: -4.920065879821777
    5. ' nombres' → logprob: -5.670065879821777
    6. 'int' → logprob: -9.670065879821777
    7. 'é' → logprob: -10.670065879821777
    8. 'n' → logprob: -10.795065879821777
    9. 'nombre' → logprob: -10.920065879821777
    10. 'inte' → logprob: -11.045065879821777

Token 142: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -5.037835580878891e-05
    2. 'i' → logprob: -10.00005054473877
    3. '```' → logprob: -13.25005054473877
    4. 'ers' → logprob: -14.00005054473877
    5. 'ières' → logprob: -14.37505054473877
    6. '#' → logprob: -14.37505054473877
    7. '   ' → logprob: -15.12505054473877
    8. 'ier' → logprob: -15.25005054473877
    9. '_i' → logprob: -16.500049591064453
    10. ' i' → logprob: -16.500049591064453

Token 143: ' et' (ID: 859)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.1843814849853516
    2. 'A' → logprob: -1.5593814849853516
    3. 'sequence' → logprob: -1.5593814849853516
    4. 'values' → logprob: -2.9343814849853516
    5. 'lst' → logprob: -3.0593814849853516
    6. 'arr' → logprob: -3.5593814849853516
    7. 'seq' → logprob: -3.8093814849853516
    8. 'nums' → logprob: -4.059381484985352
    9. 's' → logprob: -4.184381484985352
    10. 'ent' → logprob: -4.184381484985352

Token 144: ' l' (ID: 305)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.3361830413341522
    2. ' la' → logprob: -2.8361830711364746
    3. ' les' → logprob: -2.9611830711364746
    4. ' l' → logprob: -3.0861830711364746
    5. 'stock' → logprob: -3.2111830711364746
    6. 's' → logprob: -4.461183071136475
    7. 'aff' → logprob: -4.711183071136475
    8. 'assign' → logprob: -4.836183071136475
    9. ' affect' → logprob: -4.836183071136475
    10. ' N' → logprob: -5.086183071136475

Token 145: ''aff' (ID: 53397)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0318212509155273
    2. 'iste' → logprob: -1.0318212509155273
    3. 'ist' → logprob: -1.5318212509155273
    4. 'st' → logprob: -3.9068212509155273
    5. 'is' → logprob: -3.9068212509155273
    6. 'es' → logprob: -4.781821250915527
    7. ' =' → logprob: -5.031821250915527
    8. '=[]' → logprob: -5.531821250915527
    9. 'e' → logprob: -6.406821250915527
    10. '#' → logprob: -6.531821250915527

Token 146: 'ect' (ID: 534)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.33825549483299255
    2. 'iche' → logprob: -1.713255524635315
    3. 'ichage' → logprob: -3.4632554054260254
    4. 'ect' → logprob: -3.7132554054260254
    5. 'ich' → logprob: -4.088255405426025
    6. '#' → logprob: -4.338255405426025
    7. 'ic' → logprob: -5.588255405426025
    8. 'er' → logprob: -5.838255405426025
    9. ')' → logprob: -6.088255405426025
    10. 'iché' → logprob: -6.213255405426025

Token 147: 'e' (ID: 68)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.3916890025138855
    2. 'e' → logprob: -1.1416890621185303
    3. 'er' → logprob: -6.016688823699951
    4. 'uer' → logprob: -6.766688823699951
    5. 'uée' → logprob: -7.141688823699951
    6. 'u' → logprob: -8.76668930053711
    7. 'ée' → logprob: -9.14168930053711
    8. '=' → logprob: -9.64168930053711
    9. 'é' → logprob: -10.26668930053711
    10. 'ué' → logprob: -10.76668930053711

Token 148: ' à' (ID: 1221)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9433850049972534
    2. 'lst' → logprob: -1.1933850049972534
    3. 'sequence' → logprob: -2.318385124206543
    4. 'seq' → logprob: -3.068385124206543
    5. 'ent' → logprob: -3.193385124206543
    6. 'L' → logprob: -3.818385124206543
    7. 'ma' → logprob: -4.193385124206543
    8. 'a' → logprob: -4.568385124206543
    9. 'table' → logprob: -4.818385124206543
    10. 's' → logprob: -5.068385124206543

Token 149: ' la' (ID: 557)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.3620579242706299
    2. 'lst' → logprob: -1.8620579242706299
    3. 'numbers' → logprob: -2.11205792427063
    4. 'ent' → logprob: -2.98705792427063
    5. ' sequence' → logprob: -2.98705792427063
    6. 'la' → logprob: -2.98705792427063
    7. 'seq' → logprob: -2.98705792427063
    8. 'L' → logprob: -3.36205792427063
    9. 'liste' → logprob: -3.36205792427063
    10. ' lst' → logprob: -3.48705792427063

Token 150: ' variable' (ID: 11076)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0862516164779663
    2. 'liste' → logprob: -1.5862516164779663
    3. 'lst' → logprob: -1.8362516164779663
    4. 'table' → logprob: -2.336251735687256
    5. 'sequence' → logprob: -3.211251735687256
    6. 'L' → logprob: -3.336251735687256
    7. 'tab' → logprob: -3.336251735687256
    8. 'numbers' → logprob: -3.586251735687256
    9. 'val' → logprob: -4.086251735687256
    10. 'A' → logprob: -5.086251735687256

Token 151: ' A' (ID: 355)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.0526765584945679
    2. 'L' → logprob: -1.3026765584945679
    3. 'lst' → logprob: -2.4276766777038574
    4. 'numbers' → logprob: -2.4276766777038574
    5. 'ent' → logprob: -2.8026766777038574
    6. 'seq' → logprob: -3.0526766777038574
    7. 'A' → logprob: -3.4276766777038574
    8. 'liste' → logprob: -4.302676677703857
    9. 'nums' → logprob: -4.552676677703857
    10. 'arr' → logprob: -4.552676677703857

Token 152: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.635164754698053e-05
    2. '
' → logprob: -10.375066757202148
    3. 's' → logprob: -10.750066757202148
    4. ' A' → logprob: -11.375066757202148
    5. '#' → logprob: -13.875066757202148
    6. '```' → logprob: -15.000066757202148
    7. 'a' → logprob: -15.750066757202148
    8. '  
' → logprob: -16.37506675720215
    9. ' 
' → logprob: -16.50006675720215
    10. '

' → logprob: -17.00006675720215

Token 153: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.522638169466518e-05
    2. ' A' → logprob: -10.875024795532227
    3. '
' → logprob: -13.375024795532227
    4. 'sequence' → logprob: -13.875024795532227
    5. 's' → logprob: -14.000024795532227
    6. '```' → logprob: -14.625024795532227
    7. 'ligne' → logprob: -14.875024795532227
    8. 'a' → logprob: -15.125024795532227
    9. '#' → logprob: -15.125024795532227
    10. 'line' → logprob: -15.625024795532227

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014184147119522
    2. '=' → logprob: -1.701418399810791
    3. 's' → logprob: -13.57641887664795
    4. ' =[' → logprob: -14.20141887664795
    5. '=[]' → logprob: -14.45141887664795
    6. ' ' → logprob: -14.70141887664795
    7. '[' → logprob: -15.20141887664795
    8. '=[' → logprob: -15.20141887664795
    9. '=list' → logprob: -15.32641887664795
    10. ')' → logprob: -15.45141887664795

Token 155: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002476135268807411
    2. ' list' → logprob: -6.002476215362549
    3. '[list' → logprob: -15.50247573852539
    4. 'int' → logprob: -16.37747573852539
    5. '=list' → logprob: -16.50247573852539
    6. '(list' → logprob: -18.00247573852539
    7. 'List' → logprob: -18.12747573852539
    8. '[int' → logprob: -18.87747573852539
    9. '	list' → logprob: -19.00247573852539
    10. '[' → logprob: -19.00247573852539

Token 156: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0019491063430905342
    2. '(' → logprob: -6.251949310302734
    3. '(int' → logprob: -11.126949310302734
    4. ' (' → logprob: -12.751949310302734
    5. '(input' → logprob: -13.626949310302734
    6. 'map' → logprob: -14.376949310302734
    7. '(
' → logprob: -14.376949310302734
    8. '(m' → logprob: -15.251949310302734
    9. '(

' → logprob: -16.501949310302734
    10. '(mapping' → logprob: -17.251949310302734

Token 157: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005249887239187956
    2. '(' → logprob: -5.255249977111816
    3. 'int' → logprob: -11.505249977111816
    4. '[int' → logprob: -13.380249977111816
    5. '<int' → logprob: -13.380249977111816
    6. '(
' → logprob: -13.630249977111816
    7. ' (' → logprob: -13.880249977111816
    8. ' int' → logprob: -15.005249977111816
    9. '=int' → logprob: -15.880249977111816
    10. ',int' → logprob: -16.6302490234375

Token 158: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.035566478967666626
    2. ',input' → logprob: -3.410566568374634
    3. ',' → logprob: -6.410566329956055
    4. '(' → logprob: -8.535566329956055
    5. ' (' → logprob: -10.160566329956055
    6. 'input' → logprob: -10.410566329956055
    7. ' ,' → logprob: -12.660566329956055
    8. '=input' → logprob: -12.660566329956055
    9. ' input' → logprob: -13.285566329956055
    10. '(
' → logprob: -14.035566329956055

Token 159: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00081963452976197
    2. ' input' → logprob: -7.125819683074951
    3. '(input' → logprob: -11.125819206237793
    4. ' ' → logprob: -15.750819206237793
    5. '<input' → logprob: -16.37582015991211
    6. ',input' → logprob: -17.12582015991211
    7. '   ' → logprob: -17.37582015991211
    8. '	input' → logprob: -17.50082015991211
    9. '[input' → logprob: -18.25082015991211
    10. '=input' → logprob: -18.37582015991211

Token 160: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.627176768844947e-05
    2. '()' → logprob: -9.250096321105957
    3. ' ().' → logprob: -16.00009536743164
    4. '()))' → logprob: -17.75009536743164
    5. '()
' → logprob: -18.00009536743164
    6. '(' → logprob: -18.00009536743164
    7. '())' → logprob: -18.50009536743164
    8. '())))' → logprob: -19.37509536743164
    9. ')' → logprob: -19.62509536743164
    10. '("").' → logprob: -19.75009536743164

Token 161: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015035520773380995
    2. 'strip' → logprob: -6.5015034675598145
    3. ' split' → logprob: -14.001503944396973
    4. 'rstrip' → logprob: -15.126503944396973
    5. ')' → logprob: -16.751502990722656
    6. '(split' → logprob: -17.251502990722656
    7. '.split' → logprob: -17.751502990722656
    8. 'spl' → logprob: -19.001502990722656
    9. ' strip' → logprob: -20.251502990722656
    10. '().' → logprob: -20.501502990722656

Token 162: '()))

' (ID: 125972)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.49130013585090637
    2. '()))' → logprob: -0.991300106048584
    3. '())' → logprob: -4.241300106048584
    4. '())))' → logprob: -5.991300106048584
    5. '(' → logprob: -9.491300582885742
    6. '))' → logprob: -10.116300582885742
    7. '()));' → logprob: -10.491300582885742
    8. ')' → logprob: -11.116300582885742
    9. ')))' → logprob: -11.866300582885742
    10. '()]' → logprob: -12.241300582885742

Token 163: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3472350835800171
    2. 's' → logprob: -2.2222352027893066
    3. '#' → logprob: -2.3472352027893066
    4. '
' → logprob: -2.8472352027893066
    5. 'f' → logprob: -4.472235202789307
    6. 'sum' → logprob: -5.347235202789307
    7. 'if' → logprob: -5.472235202789307
    8. 'count' → logprob: -5.722235202789307
    9. 'i' → logprob: -6.097235202789307
    10. ' 
' → logprob: -6.722235202789307

Token 164: ' On' (ID: 2160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6091634035110474
    2. '#' → logprob: -2.109163284301758
    3. 'for' → logprob: -2.484163284301758
    4. 'if' → logprob: -2.609163284301758
    5. 'sum' → logprob: -2.609163284301758
    6. 'total' → logprob: -2.984163284301758
    7. 'result' → logprob: -3.609163284301758
    8. 'count' → logprob: -4.234163284301758
    9. 'som' → logprob: -5.484163284301758
    10. 'max' → logprob: -6.484163284301758

Token 165: ' initialise' (ID: 145250)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6746970415115356
    2. '#' → logprob: -0.7996970415115356
    3. ' for' → logprob: -3.549696922302246
    4. 's' → logprob: -5.674696922302246
    5. 'if' → logprob: -5.799696922302246
    6. ' #' → logprob: -6.174696922302246
    7. '_' → logprob: -6.799696922302246
    8. 'print' → logprob: -7.674696922302246
    9. 'def' → logprob: -7.924696922302246
    10. '=' → logprob: -8.549696922302246

Token 166: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19975510239601135
    2. 'S' → logprob: -2.9497551918029785
    3. 'sum' → logprob: -3.5747551918029785
    4. 'max' → logprob: -3.9497551918029785
    5. 'total' → logprob: -4.0747551918029785
    6. ' s' → logprob: -4.8247551918029785
    7. ' max' → logprob: -5.1997551918029785
    8. ' total' → logprob: -5.1997551918029785
    9. 'count' → logprob: -5.1997551918029785
    10. ' somme' → logprob: -5.1997551918029785

Token 167: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.062028855085372925
    2. 'max' → logprob: -3.1870288848876953
    3. ' somme' → logprob: -5.187028884887695
    4. 'i' → logprob: -6.062028884887695
    5. 'S' → logprob: -6.062028884887695
    6. 'som' → logprob: -6.312028884887695
    7. 'result' → logprob: -6.312028884887695
    8. 'maximum' → logprob: -7.437028884887695
    9. 'min' → logprob: -7.812028884887695
    10. 'c' → logprob: -7.812028884887695

Token 168: ' right' (ID: 1849)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8086733222007751
    2. 'max' → logprob: -1.55867338180542
    3. 'sum' → logprob: -1.93367338180542
    4. 'S' → logprob: -2.93367338180542
    5. 'count' → logprob: -3.55867338180542
    6. ' max' → logprob: -3.68367338180542
    7. 'total' → logprob: -3.93367338180542
    8. 'result' → logprob: -4.05867338180542
    9. ' somme' → logprob: -4.18367338180542
    10. ' sum' → logprob: -4.93367338180542

Token 169: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6055480241775513
    2. '=' → logprob: -1.3555480241775513
    3. '_max' → logprob: -2.3555479049682617
    4. '_index' → logprob: -3.8555479049682617
    5. 'most' → logprob: -4.105547904968262
    6. '_min' → logprob: -4.105547904968262
    7. 'max' → logprob: -4.855547904968262
    8. '_bound' → logprob: -5.105547904968262
    9. '_count' → logprob: -5.230547904968262
    10. '_m' → logprob: -5.480547904968262

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21674537658691406
    2. 'N' → logprob: -1.841745376586914
    3. '-' → logprob: -3.841745376586914
    4. 'len' → logprob: -4.966745376586914
    5. ' ' → logprob: -5.466745376586914
    6. '1' → logprob: -6.466745376586914
    7. ' N' → logprob: -7.091745376586914
    8. ' -' → logprob: -7.716745376586914
    9. '100' → logprob: -8.591745376586914
    10. 'float' → logprob: -8.716745376586914

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2726622223854065
    2. 'N' → logprob: -1.8976621627807617
    3. '-' → logprob: -2.5226621627807617
    4. 'len' → logprob: -5.022662162780762
    5. '1' → logprob: -6.647662162780762
    6. 'float' → logprob: -8.897662162780762
    7. 'n' → logprob: -9.522662162780762
    8. '100' → logprob: -9.522662162780762
    9. '-N' → logprob: -9.897662162780762
    10. ' -' → logprob: -10.022662162780762

Token 172: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35634830594062805
    2. 'right' → logprob: -1.2313482761383057
    3. 'r' → logprob: -5.106348514556885
    4. '
' → logprob: -6.981348514556885
    5. ' 
' → logprob: -8.231348037719727
    6. ' right' → logprob: -8.606348037719727
    7. '' → logprob: -8.731348037719727
    8. '  
' → logprob: -9.731348037719727
    9. 's' → logprob: -10.231348037719727
    10. 'i' → logprob: -10.231348037719727

Token 173: '#' (ID: 2)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -2.2603901015827432e-05
    2. ' right' → logprob: -11.000022888183594
    3. 'r' → logprob: -12.875022888183594
    4. '
' → logprob: -13.875022888183594
    5. 'for' → logprob: -14.625022888183594
    6. 'left' → logprob: -14.750022888183594
    7. '#' → logprob: -15.125022888183594
    8. '```' → logprob: -15.625022888183594
    9. '	right' → logprob: -16.000022888183594
    10. 'rig' → logprob: -16.375022888183594

Token 174: ' Cela' (ID: 44403)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00039766079862602055
    2. ' right' → logprob: -8.000397682189941
    3. 'max' → logprob: -10.625397682189941
    4. 'left' → logprob: -11.500397682189941
    5. 'for' → logprob: -11.750397682189941
    6. 'r' → logprob: -12.000397682189941
    7. '
' → logprob: -13.250397682189941
    8. 'count' → logprob: -13.500397682189941
    9. 'i' → logprob: -13.625397682189941
    10. '#' → logprob: -13.875397682189941

Token 175: ' représent' (ID: 42664)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.5647879838943481
    2. ' représente' → logprob: -2.4397878646850586
    3. 'for' → logprob: -2.5647878646850586
    4. ' indique' → logprob: -3.1897878646850586
    5. 'right' → logprob: -3.3147878646850586
    6. ' for' → logprob: -3.9397878646850586
    7. ' permet' → logprob: -3.9397878646850586
    8. '#' → logprob: -4.189787864685059
    9. ' correspond' → logprob: -4.439787864685059
    10. ' sert' → logprob: -4.564787864685059

Token 176: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003478593716863543
    2. 'ant' → logprob: -9.000348091125488
    3. 'er' → logprob: -9.375348091125488
    4. 'era' → logprob: -9.500348091125488
    5. ' e' → logprob: -10.125348091125488
    6. 'ent' → logprob: -10.750348091125488
    7. 'a' → logprob: -13.625348091125488
    8. '#' → logprob: -13.875348091125488
    9. '	e' → logprob: -15.375348091125488
    10. '```' → logprob: -15.625348091125488

Token 177: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8851759433746338
    2. ' l' → logprob: -1.7601759433746338
    3. 'le' → logprob: -1.8851759433746338
    4. 'la' → logprob: -2.135175943374634
    5. ' la' → logprob: -2.385175943374634
    6. ' le' → logprob: -3.135175943374634
    7. 'the' → logprob: -6.135175704956055
    8. 'index' → logprob: -6.760175704956055
    9. 'un' → logprob: -7.385175704956055
    10. ' ' → logprob: -7.635175704956055

Token 178: ' borne' (ID: 111819)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.5629907846450806
    2. 'indice' → logprob: -1.8129907846450806
    3. 'position' → logprob: -2.187990665435791
    4. 'dro' → logprob: -2.187990665435791
    5. ' droite' → logprob: -3.187990665435791
    6. ' position' → logprob: -3.187990665435791
    7. ' index' → logprob: -3.562990665435791
    8. 'd' → logprob: -3.687990665435791
    9. 'point' → logprob: -4.062990665435791
    10. 'b' → logprob: -4.375490665435791

Token 179: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.46079692244529724
    2. ' de' → logprob: -2.21079683303833
    3. ',' → logprob: -3.46079683303833
    4. ')' → logprob: -3.46079683303833
    5. 'right' → logprob: -3.71079683303833
    6. ' =' → logprob: -3.83579683303833
    7. ' ' → logprob: -3.96079683303833
    8. '_' → logprob: -3.96079683303833
    9. 'de' → logprob: -4.08579683303833
    10. 'dro' → logprob: -4.21079683303833

Token 180: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31823647022247314
    2. '<|end|>' → logprob: -2.1932363510131836
    3. '=' → logprob: -3.6932363510131836
    4. ' =' → logprob: -3.8182363510131836
    5. 'right' → logprob: -3.8182363510131836
    6. ',' → logprob: -4.068236351013184
    7. ' de' → logprob: -4.068236351013184
    8. '_' → logprob: -4.693236351013184
    9. ' for' → logprob: -4.943236351013184
    10. ')' → logprob: -4.943236351013184

Token 181: ' segment' (ID: 14806)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2179492712020874
    2. ' interval' → logprob: -1.5929492712020874
    3. 'interval' → logprob: -1.5929492712020874
    4. ' segment' → logprob: -1.9679492712020874
    5. 'segment' → logprob: -2.592949390411377
    6. ' sous' → logprob: -2.842949390411377
    7. 'window' → logprob: -5.592949390411377
    8. 'l' → logprob: -5.592949390411377
    9. 'plus' → logprob: -6.217949390411377
    10. 'fen' → logprob: -6.592949390411377

Token 182: ' courant' (ID: 74694)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0763474777340889
    2. 'left' → logprob: -4.201347351074219
    3. 'for' → logprob: -4.326347351074219
    4. ' =' → logprob: -4.701347351074219
    5. ',' → logprob: -4.951347351074219
    6. ' right' → logprob: -5.326347351074219
    7. ' for' → logprob: -5.326347351074219
    8. '=' → logprob: -5.326347351074219
    9. 's' → logprob: -6.201347351074219
    10. 'i' → logprob: -6.201347351074219

Token 183: ' sur' (ID: 1512)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01729138195514679
    2. '
' → logprob: -5.26729154586792
    3. ' right' → logprob: -5.76729154586792
    4. '=' → logprob: -6.01729154586792
    5. 'r' → logprob: -6.14229154586792
    6. ',' → logprob: -6.64229154586792
    7. ' =' → logprob: -6.89229154586792
    8. 'for' → logprob: -7.64229154586792
    9. ')' → logprob: -8.392291069030762
    10. '0' → logprob: -8.642291069030762

Token 184: ' lequel' (ID: 55154)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25235089659690857
    2. 'la' → logprob: -2.2523508071899414
    3. 'A' → logprob: -2.7523508071899414
    4. 'l' → logprob: -3.6273508071899414
    5. ' A' → logprob: -4.502350807189941
    6. 'le' → logprob: -5.377350807189941
    7. ' l' → logprob: -5.377350807189941
    8. ' le' → logprob: -5.752350807189941
    9. ' lequel' → logprob: -6.502350807189941
    10. ' laquelle' → logprob: -7.502350807189941

Token 185: ' on' (ID: 402)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.43892982602119446
    2. ' on' → logprob: -1.563929796218872
    3. ' A' → logprob: -2.813929796218872
    4. ' ' → logprob: -3.188929796218872
    5. 'on' → logprob: -4.688930034637451
    6. ' la' → logprob: -5.563930034637451
    7. ' l' → logprob: -5.563930034637451
    8. 's' → logprob: -5.563930034637451
    9. 'range' → logprob: -5.688930034637451
    10. 'l' → logprob: -5.813930034637451

Token 186: ' va' (ID: 3423)
  Prédit: 'cherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cherche' → logprob: -1.465717077255249
    2. 'pe' → logprob: -2.465717077255249
    3. '#' → logprob: -2.715717077255249
    4. 've' → logprob: -2.840717077255249
    5. 'va' → logprob: -2.965717077255249
    6. 'tr' → logprob: -3.215717077255249
    7. ' cherche' → logprob: -3.215717077255249
    8. 'expl' → logprob: -3.340717077255249
    9. 'comp' → logprob: -3.465717077255249
    10. 'avance' → logprob: -3.465717077255249

Token 187: ' optimiser' (ID: 195777)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.12839500606060028
    2. 'bas' → logprob: -3.6283950805664062
    3. 'se' → logprob: -3.8783950805664062
    4. 's' → logprob: -4.003395080566406
    5. ' travailler' → logprob: -5.003395080566406
    6. 'chercher' → logprob: -5.128395080566406
    7. 'faire' → logprob: -5.378395080566406
    8. 'it' → logprob: -5.503395080566406
    9. '```' → logprob: -6.003395080566406
    10. 'trav' → logprob: -6.003395080566406

Token 188: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00781966745853424
    2. '
' → logprob: -5.007819652557373
    3. ' right' → logprob: -7.007819652557373
    4. 'left' → logprob: -9.382820129394531
    5. 'max' → logprob: -10.132820129394531
    6. 'for' → logprob: -11.507820129394531
    7. 'r' → logprob: -12.007820129394531
    8. '#' → logprob: -12.507820129394531
    9. '
' → logprob: -12.507820129394531
    10. ',' → logprob: -12.507820129394531

Token 189: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0006970656104385853
    2. 'max' → logprob: -8.125697135925293
    3. 'left' → logprob: -8.250697135925293
    4. ' right' → logprob: -9.750697135925293
    5. 'for' → logprob: -10.625697135925293
    6. 'answer' → logprob: -11.625697135925293
    7. 'count' → logprob: -11.750697135925293
    8. 'result' → logprob: -12.000697135925293
    9. 'segment' → logprob: -12.375697135925293
    10. 'sum' → logprob: -12.500697135925293

Token 190: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2044156789779663
    2. ' =' → logprob: -1.7044156789779663
    3. ' +=' → logprob: -6.579415798187256
    4. '+=' → logprob: -6.954415798187256
    5. '+' → logprob: -8.079415321350098
    6. ')' → logprob: -8.579415321350098
    7. '_' → logprob: -9.329415321350098
    8. ' ' → logprob: -10.954415321350098
    9. ',' → logprob: -11.329415321350098
    10. ' +' → logprob: -11.704415321350098

Token 191: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036003058776259422
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -16.62860107421875
    4. '1' → logprob: -17.06610107421875
    5. ' ' → logprob: -17.75360107421875
    6. '=' → logprob: -18.50360107421875
    7. '  ' → logprob: -18.81610107421875
    8. '`' → logprob: -18.81610107421875
    9. '```' → logprob: -19.31610107421875
    10. '00' → logprob: -19.37860107421875

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -17.125017166137695
    4. '-' → logprob: -18.062517166137695
    5. '   ' → logprob: -18.062517166137695
    6. '```' → logprob: -18.062517166137695
    7. '=' → logprob: -19.062517166137695
    8. '#' → logprob: -19.562517166137695
    9. '000' → logprob: -19.625017166137695
    10. '+' → logprob: -19.687517166137695

Token 193: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18571250140666962
    2. '<|end|>' → logprob: -2.1857125759124756
    3. 'max' → logprob: -3.6857125759124756
    4. '#' → logprob: -4.4357123374938965
    5. 'for' → logprob: -4.5607123374938965
    6. ')' → logprob: -5.8107123374938965
    7. 'while' → logprob: -6.3107123374938965
    8. ',' → logprob: -7.3107123374938965
    9. ' for' → logprob: -7.5607123374938965
    10. 's' → logprob: -7.6857123374938965

Token 194: '#' (ID: 2)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3298945724964142
    2. '
' → logprob: -2.204894542694092
    3. '#' → logprob: -2.329894542694092
    4. 'sum' → logprob: -3.329894542694092
    5. 'for' → logprob: -3.829894542694092
    6. 'count' → logprob: -5.329894542694092
    7. 'n' → logprob: -6.329894542694092
    8. 'current' → logprob: -6.454894542694092
    9. 's' → logprob: -6.579894542694092
    10. 'result' → logprob: -6.704894542694092

Token 195: ' Initial' (ID: 9209)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2847689092159271
    2. 'current' → logprob: -2.28476881980896
    3. 'count' → logprob: -3.03476881980896
    4. 'total' → logprob: -3.78476881980896
    5. 'sum' → logprob: -4.034769058227539
    6. 'for' → logprob: -4.284769058227539
    7. 's' → logprob: -4.909769058227539
    8. 'result' → logprob: -4.909769058227539
    9. 'best' → logprob: -4.909769058227539
    10. 'n' → logprob: -5.159769058227539

Token 196: 'isation' (ID: 6993)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4326014518737793
    2. 'i' → logprob: -2.8076014518737793
    3. 'e' → logprob: -2.8076014518737793
    4. '_' → logprob: -3.3076014518737793
    5. 'iser' → logprob: -3.6826014518737793
    6. '_max' → logprob: -3.6826014518737793
    7. '_counter' → logprob: -3.8076014518737793
    8. '_count' → logprob: -4.307601451873779
    9. 'isation' → logprob: -4.307601451873779
    10. 'ization' → logprob: -4.432601451873779

Token 197: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4947053790092468
    2. ' =' → logprob: -1.8697054386138916
    3. 'sum' → logprob: -2.1197054386138916
    4. ' max' → logprob: -3.6197054386138916
    5. '#' → logprob: -3.9947054386138916
    6. 's' → logprob: -4.1197052001953125
    7. 'count' → logprob: -4.6197052001953125
    8. 'left' → logprob: -4.7447052001953125
    9. 'total' → logprob: -4.7447052001953125
    10. '=' → logprob: -5.1197052001953125

Token 198: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5489851832389832
    2. ' max' → logprob: -1.048985242843628
    3. 'left' → logprob: -4.298985004425049
    4. 'count' → logprob: -4.798985004425049
    5. ' left' → logprob: -4.798985004425049
    6. 'best' → logprob: -4.923985004425049
    7. ' result' → logprob: -5.048985004425049
    8. ' best' → logprob: -5.298985004425049
    9. 'result' → logprob: -5.548985004425049
    10. 'sum' → logprob: -5.673985004425049

Token 199: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01887594722211361
    2. 'ma' → logprob: -4.643876075744629
    3. '_val' → logprob: -5.268876075744629
    4. '_value' → logprob: -6.518876075744629
    5. '_sum' → logprob: -6.768876075744629
    6. '_current' → logprob: -8.393876075744629
    7. '_so' → logprob: -8.393876075744629
    8. ' =' → logprob: -8.768876075744629
    9. '_=' → logprob: -9.143876075744629
    10. 'A' → logprob: -9.268876075744629

Token 200: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06980191916227341
    2. ' =' → logprob: -3.0698018074035645
    3. '_sum' → logprob: -4.0698018074035645
    4. '=' → logprob: -6.6948018074035645
    5. '_val' → logprob: -7.0698018074035645
    6. '_n' → logprob: -7.4448018074035645
    7. '_=' → logprob: -7.9448018074035645
    8. 'um' → logprob: -8.319802284240723
    9. 'sum' → logprob: -8.444802284240723
    10. '_value' → logprob: -9.694802284240723

Token 201: ' bit' (ID: 3546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3600013256072998
    2. ' max' → logprob: -1.3600013256072998
    3. 'count' → logprob: -4.610001564025879
    4. '0' → logprob: -5.235001564025879
    5. 'current' → logprob: -5.235001564025879
    6. ' current' → logprob: -5.235001564025879
    7. 'sum' → logprob: -5.235001564025879
    8. 'best' → logprob: -5.735001564025879
    9. ' best' → logprob: -5.985001564025879
    10. ' sum' → logprob: -6.235001564025879

Token 202: '_n' (ID: 2170)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.210464358329773
    2. '_' → logprob: -1.335464358329773
    3. '_s' → logprob: -1.710464358329773
    4. '_sum' → logprob: -1.835464358329773
    5. 's' → logprob: -2.4604644775390625
    6. '=' → logprob: -5.0854644775390625
    7. 'sum' → logprob: -5.7104644775390625
    8. '_count' → logprob: -6.7104644775390625
    9. '_mask' → logprob: -7.3354644775390625
    10. 'mask' → logprob: -7.8354644775390625

Token 203: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04080076515674591
    2. '=' → logprob: -3.2908008098602295
    3. '_' → logprob: -6.66580057144165
    4. '_sum' → logprob: -6.66580057144165
    5. '_n' → logprob: -9.165801048278809
    6. 'sum' → logprob: -10.040801048278809
    7. '_s' → logprob: -10.415801048278809
    8. ',' → logprob: -11.790801048278809
    9. ' ' → logprob: -12.290801048278809
    10. 's' → logprob: -12.540801048278809

Token 204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016599490481894463
    2. 'A' → logprob: -9.375165939331055
    3. ' ' → logprob: -9.500165939331055
    4. 'N' → logprob: -13.500165939331055
    5. 'len' → logprob: -13.875165939331055
    6. '[]' → logprob: -14.000165939331055
    7. '[' → logprob: -14.500165939331055
    8. '=' → logprob: -14.750165939331055
    9. ' A' → logprob: -14.750165939331055
    10. 'sum' → logprob: -14.875165939331055

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002833848411682993
    2. 'A' → logprob: -8.250283241271973
    3. ' ' → logprob: -11.625283241271973
    4. '[' → logprob: -12.500283241271973
    5. '[]' → logprob: -12.875283241271973
    6. 'N' → logprob: -12.875283241271973
    7. 'int' → logprob: -13.500283241271973
    8. '1' → logprob: -14.750283241271973
    9. 'len' → logprob: -14.875283241271973
    10. '[A' → logprob: -14.875283241271973

Token 206: '
' (ID: 198)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.029790299013257027
    2. '
' → logprob: -3.5297904014587402
    3. ' sum' → logprob: -10.904789924621582
    4. '
' → logprob: -11.529789924621582
    5. '_sum' → logprob: -12.029789924621582
    6. '(sum' → logprob: -13.779789924621582
    7. '=sum' → logprob: -13.904789924621582
    8. ' =' → logprob: -14.029789924621582
    9. '=' → logprob: -14.654789924621582
    10. '#' → logprob: -14.654789924621582

Token 207: '#' (ID: 2)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00012558852904476225
    2. '
' → logprob: -9.000125885009766
    3. ' sum' → logprob: -13.750125885009766
    4. '#' → logprob: -14.875125885009766
    5. '_sum' → logprob: -15.125125885009766
    6. 's' → logprob: -15.500125885009766
    7. '(sum' → logprob: -15.875125885009766
    8. '	sum' → logprob: -17.125125885009766
    9. '
' → logprob: -17.250125885009766
    10. 'n' → logprob: -17.375125885009766

Token 208: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007329129730351269
    2. ' sum' → logprob: -7.250732898712158
    3. '
' → logprob: -10.750733375549316
    4. 's' → logprob: -15.000733375549316
    5. '#' → logprob: -15.375733375549316
    6. '_sum' → logprob: -15.375733375549316
    7. '(sum' → logprob: -15.625733375549316
    8. '	sum' → logprob: -15.750733375549316
    9. '```' → logprob: -16.375732421875
    10. ' 
' → logprob: -16.500732421875

Token 209: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.25215980410575867
    2. '_' → logprob: -1.502159833908081
    3. '_sum' → logprob: -8.62716007232666
    4. '_=' → logprob: -10.87716007232666
    5. ' =' → logprob: -11.37716007232666
    6. '_s' → logprob: -11.62716007232666
    7. '_total' → logprob: -12.50216007232666
    8. '=' → logprob: -13.12716007232666
    9. ' _' → logprob: -13.37716007232666
    10. '_value' → logprob: -14.25216007232666

Token 210: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028322279453278
    2. '=' → logprob: -1.9102832078933716
    3. ',' → logprob: -10.035283088684082
    4. ' ' → logprob: -12.160283088684082
    5. '_sum' → logprob: -12.535283088684082
    6. ' ,' → logprob: -13.285283088684082
    7. ' ' → logprob: -13.410283088684082
    8. '_' → logprob: -13.535283088684082
    9. '=sum' → logprob: -14.035283088684082
    10. '_n' → logprob: -15.160283088684082

Token 211: 'ira' (ID: 2633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019483910873532295
    2. 'e' → logprob: -7.126948356628418
    3. ' =' → logprob: -7.376948356628418
    4. '=sum' → logprob: -9.126948356628418
    5. '=int' → logprob: -9.376948356628418
    6. '+=' → logprob: -9.751948356628418
    7. '=e' → logprob: -9.876948356628418
    8. 'ant' → logprob: -10.251948356628418
    9. 'sum' → logprob: -10.501948356628418
    10. 'er' → logprob: -10.501948356628418

Token 212: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10096191614866257
    2. ' =' → logprob: -2.350961923599243
    3. ' à' → logprob: -7.725961685180664
    4. 'to' → logprob: -9.350961685180664
    5. 'à' → logprob: -9.600961685180664
    6. ' ' → logprob: -9.725961685180664
    7. ' to' → logprob: -10.100961685180664
    8. ',' → logprob: -11.100961685180664
    9. ')' → logprob: -11.350961685180664
    10. '=sum' → logprob: -12.100961685180664

Token 213: ' garder' (ID: 63069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014128545299172401
    2. ' ' → logprob: -6.626412868499756
    3. 'sum' → logprob: -9.501412391662598
    4. 'calcul' → logprob: -12.876412391662598
    5. 's' → logprob: -13.501412391662598
    6. 'acc' → logprob: -13.626412391662598
    7. '   ' → logprob: -14.501412391662598
    8. '=' → logprob: -14.501412391662598
    9. ' sum' → logprob: -14.876412391662598
    10. 'int' → logprob: -14.876412391662598

Token 214: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20662367343902588
    2. 'la' → logprob: -2.3316235542297363
    3. ' à' → logprob: -3.0816235542297363
    4. 'à' → logprob: -4.706623554229736
    5. ' le' → logprob: -4.831623554229736
    6. 'le' → logprob: -5.081623554229736
    7. ' ' → logprob: -5.206623554229736
    8. ' track' → logprob: -5.706623554229736
    9. '=' → logprob: -5.956623554229736
    10. ' =' → logprob: -6.206623554229736

Token 215: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5719497799873352
    2. '0' → logprob: -1.1969497203826904
    3. 'sum' → logprob: -2.8219497203826904
    4. 'som' → logprob: -3.0719497203826904
    5. 'total' → logprob: -4.6969499588012695
    6. 'current' → logprob: -5.3219499588012695
    7. 'count' → logprob: -6.0719499588012695
    8. ' ' → logprob: -6.1969499588012695
    9. ' somme' → logprob: -6.3219499588012695
    10. 'val' → logprob: -7.0719499588012695

Token 216: ' cour' (ID: 2871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15049484372138977
    2. ' =' → logprob: -2.9004948139190674
    3. ' des' → logprob: -4.0254950523376465
    4. '=' → logprob: -4.4004950523376465
    5. '_current' → logprob: -4.6504950523376465
    6. '_c' → logprob: -4.7754950523376465
    7. '_des' → logprob: -5.1504950523376465
    8. 'current' → logprob: -5.1504950523376465
    9. '_n' → logprob: -5.1504950523376465
    10. 'des' → logprob: -5.4004950523376465

Token 217: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.012474102899432182
    2. 'ente' → logprob: -4.637474060058594
    3. 'e' → logprob: -6.512474060058594
    4. 'r' → logprob: -7.762474060058594
    5. 'ant' → logprob: -7.887474060058594
    6. '#' → logprob: -8.637474060058594
    7. 'u' → logprob: -9.012474060058594
    8. 'ée' → logprob: -10.387474060058594
    9. '   ' → logprob: -10.512474060058594
    10. 'nante' → logprob: -11.512474060058594

Token 218: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.506512463092804
    2. ' =' → logprob: -1.7565124034881592
    3. 'sum' → logprob: -2.631512403488159
    4. '=' → logprob: -3.506512403488159
    5. ',' → logprob: -3.756512403488159
    6. '_n' → logprob: -3.881512403488159
    7. '<|end|>' → logprob: -4.256512641906738
    8. ' ' → logprob: -4.756512641906738
    9. '_sum' → logprob: -4.756512641906738
    10. '
' → logprob: -5.006512641906738

Token 219: ' éléments' (ID: 57375)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07970568537712097
    2. ' A' → logprob: -2.5797057151794434
    3. 'élé' → logprob: -8.579705238342285
    4. ' ' → logprob: -8.579705238342285
    5. 'val' → logprob: -8.704705238342285
    6. '0' → logprob: -9.579705238342285
    7. 'elements' → logprob: -10.329705238342285
    8. ')' → logprob: -10.329705238342285
    9. ' elements' → logprob: -11.079705238342285
    10. 'n' → logprob: -11.329705238342285

Token 220: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07258876413106918
    2. '_n' → logprob: -3.6975886821746826
    3. ' =' → logprob: -3.9475886821746826
    4. '=' → logprob: -5.447588920593262
    5. ' _' → logprob: -5.572588920593262
    6. '_current' → logprob: -5.947588920593262
    7. 'current' → logprob: -6.072588920593262
    8. ' ' → logprob: -6.197588920593262
    9. ',' → logprob: -6.447588920593262
    10. '<|end|>' → logprob: -6.697588920593262

Token 221: ' segment' (ID: 14806)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004638503771275282
    2. 'segment' → logprob: -6.129638671875
    3. ' A' → logprob: -6.254638671875
    4. ' segment' → logprob: -8.754638671875
    5. '#' → logprob: -9.004638671875
    6. 's' → logprob: -9.379638671875
    7. ')' → logprob: -10.379638671875
    8. ' ' → logprob: -10.629638671875
    9. 'range' → logprob: -10.879638671875
    10. 'segments' → logprob: -11.004638671875

Token 222: ' A' (ID: 355)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1408066302537918
    2. '=' → logprob: -2.5158066749572754
    3. 'sum' → logprob: -3.5158066749572754
    4. '_sum' → logprob: -4.890806674957275
    5. '_' → logprob: -5.390806674957275
    6. '_n' → logprob: -5.640806674957275
    7. ',' → logprob: -6.515806674957275
    8. '=sum' → logprob: -6.515806674957275
    9. 's' → logprob: -7.390806674957275
    10. 'n' → logprob: -8.015806198120117

Token 223: '[left' (ID: 98859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0996953696012497
    2. '=' → logprob: -2.7246954441070557
    3. '_' → logprob: -3.9746954441070557
    4. '_n' → logprob: -5.224695205688477
    5. 'sum' → logprob: -6.349695205688477
    6. '_sum' → logprob: -6.599695205688477
    7. ',' → logprob: -7.224695205688477
    8. '
' → logprob: -8.349695205688477
    9. '_s' → logprob: -8.349695205688477
    10. 's' → logprob: -8.724695205688477

Token 224: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.2684207856655121
    2. ':' → logprob: -2.018420696258545
    3. ']' → logprob: -3.018420696258545
    4. '])' → logprob: -4.018420696258545
    5. ':left' → logprob: -4.143420696258545
    6. ' :' → logprob: -4.893420696258545
    7. 'right' → logprob: -5.393420696258545
    8. ']+' → logprob: -6.393420696258545
    9. '],' → logprob: -7.268420696258545
    10. ':start' → logprob: -7.393420696258545

Token 225: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.045025356113910675
    2. '])
' → logprob: -3.79502534866333
    3. '+' → logprob: -4.67002534866333
    4. ']' → logprob: -4.67002534866333
    5. ']+' → logprob: -6.67002534866333
    6. ')' → logprob: -8.295025825500488
    7. ' ])' → logprob: -8.295025825500488
    8. '])
' → logprob: -8.420025825500488
    9. '])+' → logprob: -8.795025825500488
    10. '])

' → logprob: -8.920025825500488

Token 226: '#' (ID: 2)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012569108977913857
    2. '
' → logprob: -4.387568950653076
    3. ' sum' → logprob: -10.512569427490234
    4. '=sum' → logprob: -12.137569427490234
    5. '=' → logprob: -12.387569427490234
    6. ' 
' → logprob: -12.512569427490234
    7. '#' → logprob: -12.887569427490234
    8. '(sum' → logprob: -13.012569427490234
    9. '  
' → logprob: -13.012569427490234
    10. '
' → logprob: -13.012569427490234

Token 227: ' bit' (ID: 3546)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.000263481488218531
    2. 'bit' → logprob: -8.750263214111328
    3. '
' → logprob: -9.500263214111328
    4. ' sum' → logprob: -10.875263214111328
    5. '#' → logprob: -11.500263214111328
    6. '
' → logprob: -15.125263214111328
    7. ' bit' → logprob: -15.750263214111328
    8. 's' → logprob: -15.750263214111328
    9. '	sum' → logprob: -16.000263214111328
    10. '(sum' → logprob: -16.375263214111328

Token 228: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.12706512212753296
    2. '_' → logprob: -2.1270651817321777
    3. ' _' → logprob: -9.75206470489502
    4. '_s' → logprob: -10.50206470489502
    5. '=' → logprob: -11.50206470489502
    6. '_
' → logprob: -11.87706470489502
    7. '_sum' → logprob: -12.25206470489502
    8. ' =' → logprob: -13.25206470489502
    9. 'n' → logprob: -13.25206470489502
    10. '_

' → logprob: -13.37706470489502

Token 229: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34852588176727295
    2. '=' → logprob: -1.223525881767273
    3. ' ' → logprob: -9.848526000976562
    4. '_' → logprob: -11.598526000976562
    5. ',' → logprob: -11.723526000976562
    6. 's' → logprob: -13.473526000976562
    7. ' ' → logprob: -13.473526000976562
    8. 'a' → logprob: -13.973526000976562
    9. ' a' → logprob: -13.973526000976562
    10. '  ' → logprob: -14.098526000976562

Token 230: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041065435856580734
    2. 'inue' → logprob: -3.5410654544830322
    3. 'in' → logprob: -4.541065216064453
    4. 'ent' → logprob: -7.916065216064453
    5. ' =' → logprob: -9.291065216064453
    6. 'i' → logprob: -10.541065216064453
    7. 'inu' → logprob: -10.541065216064453
    8. 'e' → logprob: -11.541065216064453
    9. '=in' → logprob: -11.666065216064453
    10. '=i' → logprob: -11.791065216064453

Token 231: 'endra' (ID: 32364)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2332340031862259
    2. 'n' → logprob: -2.23323392868042
    3. 'ent' → logprob: -2.98323392868042
    4. 'inue' → logprob: -4.48323392868042
    5. 'e' → logprob: -4.73323392868042
    6. 'ue' → logprob: -5.23323392868042
    7. 'nu' → logprob: -5.23323392868042
    8. 'en' → logprob: -5.35823392868042
    9. '#' → logprob: -6.10823392868042
    10. 'u' → logprob: -6.23323392868042

Token 232: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05533310025930405
    2. ' ' → logprob: -2.930333137512207
    3. ' A' → logprob: -9.305333137512207
    4. 'A' → logprob: -9.555333137512207
    5. '   ' → logprob: -10.055333137512207
    6. ' the' → logprob: -10.180333137512207
    7. ' right' → logprob: -10.430333137512207
    8. '  ' → logprob: -10.680333137512207
    9. '=' → logprob: -11.180333137512207
    10. ' le' → logprob: -11.305333137512207

Token 233: ' résultat' (ID: 62556)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039921682327985764
    2. '1' → logprob: -3.414921760559082
    3. ' ' → logprob: -6.039921760559082
    4. 'right' → logprob: -6.664921760559082
    5. 'A' → logprob: -7.039921760559082
    6. 'xor' → logprob: -8.414921760559082
    7. 'bin' → logprob: -9.039921760559082
    8. '&' → logprob: -9.164921760559082
    9. 'sum' → logprob: -9.164921760559082
    10. 'None' → logprob: -9.414921760559082

Token 234: ' xor' (ID: 106402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5934933423995972
    2. '_' → logprob: -1.3434933423995972
    3. ' bit' → logprob: -2.3434934616088867
    4. '=' → logprob: -2.8434934616088867
    5. ' ' → logprob: -4.593493461608887
    6. '_bit' → logprob: -5.343493461608887
    7. 'bit' → logprob: -5.468493461608887
    8. ' ^=' → logprob: -5.968493461608887
    9. ' de' → logprob: -5.968493461608887
    10. ' _' → logprob: -6.093493461608887

Token 235: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.290530800819397
    2. '=' → logprob: -1.415530800819397
    3. '_' → logprob: -5.415530681610107
    4. ' ' → logprob: -5.915530681610107
    5. ' bit' → logprob: -7.165530681610107
    6. '0' → logprob: -7.790530681610107
    7. '_n' → logprob: -7.915530681610107
    8. 'bit' → logprob: -9.040531158447266
    9. ' _' → logprob: -9.540531158447266
    10. '_=' → logprob: -9.790531158447266

Token 236: 'op' (ID: 467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43476083874702454
    2. ' )' → logprob: -1.1847608089447021
    3. ' ' → logprob: -3.684760808944702
    4. '^' → logprob: -5.059761047363281
    5. '^)' → logprob: -5.309761047363281
    6. '_' → logprob: -5.809761047363281
    7. ' ^' → logprob: -6.184761047363281
    8. '0' → logprob: -6.309761047363281
    9. ' bit' → logprob: -7.309761047363281
    10. '=' → logprob: -7.559761047363281

Token 237: 'érateur' (ID: 108528)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0249488353729248
    2. '_' → logprob: -1.7749488353729248
    3. 'er' → logprob: -1.7749488353729248
    4. '=' → logprob: -1.8999488353729248
    5. ' )' → logprob: -2.524948835372925
    6. '^' → logprob: -4.024949073791504
    7. 'érateur' → logprob: -4.274949073791504
    8. '^)' → logprob: -4.899949073791504
    9. 'ération' → logprob: -5.149949073791504
    10. '_)' → logprob: -5.774949073791504

Token 238: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7719460725784302
    2. '^)' → logprob: -1.0219460725784302
    3. '=' → logprob: -1.8969460725784302
    4. ')' → logprob: -4.021945953369141
    5. ' ^=' → logprob: -5.396945953369141
    6. ' ^' → logprob: -5.521945953369141
    7. ')^' → logprob: -7.896945953369141
    8. ' ' → logprob: -8.02194595336914
    9. ' )' → logprob: -8.27194595336914
    10. ' =' → logprob: -8.77194595336914

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02077614516019821
    2. ' )' → logprob: -4.270776271820068
    3. '=' → logprob: -5.270776271820068
    4. ' ' → logprob: -7.520776271820068
    5. '^)' → logprob: -8.02077579498291
    6. ' bit' → logprob: -8.52077579498291
    7. '^' → logprob: -9.02077579498291
    8. ' xor' → logprob: -9.27077579498291
    9. 'xor' → logprob: -10.02077579498291
    10. ' ^' → logprob: -10.89577579498291

Token 240: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5530641674995422
    2. ' =' → logprob: -0.9280641674995422
    3. 'sum' → logprob: -4.803064346313477
    4. '_' → logprob: -5.053064346313477
    5. ' bit' → logprob: -5.428064346313477
    6. 'bit' → logprob: -6.053064346313477
    7. '_n' → logprob: -6.178064346313477
    8. ' ' → logprob: -6.428064346313477
    9. '0' → logprob: -6.678064346313477
    10. 'right' → logprob: -7.428064346313477

Token 241: ' ce' (ID: 2357)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.36874303221702576
    2. ' A' → logprob: -1.2437430620193481
    3. '0' → logprob: -4.243742942810059
    4. ' ' → logprob: -5.868742942810059
    5. ' les' → logprob: -6.868742942810059
    6. 'les' → logprob: -7.868742942810059
    7. ' right' → logprob: -8.368742942810059
    8. ' the' → logprob: -8.493742942810059
    9. ' la' → logprob: -8.493742942810059
    10. 'right' → logprob: -9.118742942810059

Token 242: ' même' (ID: 9679)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6492862701416016
    2. '_' → logprob: -2.3992862701416016
    3. 'segment' → logprob: -2.3992862701416016
    4. '^' → logprob: -2.5242862701416016
    5. 'que' → logprob: -3.5242862701416016
    6. 'right' → logprob: -3.6492862701416016
    7. ')' → logprob: -3.6492862701416016
    8. ' A' → logprob: -3.8992862701416016
    9. ' segment' → logprob: -4.149286270141602
    10. 'n' → logprob: -4.149286270141602

Token 243: ' segment' (ID: 14806)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02602112479507923
    2. 'segment' → logprob: -4.1510210037231445
    3. ' segment' → logprob: -5.2760210037231445
    4. ' _' → logprob: -6.6510210037231445
    5. '_n' → logprob: -6.9010210037231445
    6. 'A' → logprob: -7.0260210037231445
    7. '_segment' → logprob: -7.5260210037231445
    8. ' A' → logprob: -8.401021003723145
    9. 's' → logprob: -9.401021003723145
    10. 'n' → logprob: -9.651021003723145

Token 244: '
' (ID: 198)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012552275322377682
    2. '
' → logprob: -4.387552261352539
    3. ' sum' → logprob: -10.887552261352539
    4. '
' → logprob: -11.887552261352539
    5. '

' → logprob: -12.762552261352539
    6. ' 
' → logprob: -12.762552261352539
    7. 'left' → logprob: -13.012552261352539
    8. '#' → logprob: -13.012552261352539
    9. '(sum' → logprob: -13.012552261352539
    10. '  
' → logprob: -14.137552261352539

Token 245: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.003673590486869216
    2. '
' → logprob: -5.628673553466797
    3. 'left' → logprob: -9.878673553466797
    4. '#' → logprob: -11.628673553466797
    5. ' sum' → logprob: -12.003673553466797
    6. '(sum' → logprob: -12.503673553466797
    7. '

' → logprob: -14.378673553466797
    8. 'right' → logprob: -14.378673553466797
    9. ' 
' → logprob: -14.628673553466797
    10. '  
' → logprob: -15.003673553466797

Token 246: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005629229708574712
    2. '_' → logprob: -7.500563144683838
    3. '_sum' → logprob: -11.75056266784668
    4. ' _' → logprob: -13.37556266784668
    5. '_s' → logprob: -16.12556266784668
    6. ')_' → logprob: -16.25056266784668
    7. '_=' → logprob: -16.62556266784668
    8. '=_' → logprob: -17.12556266784668
    9. '_
' → logprob: -17.62556266784668
    10. '__' → logprob: -17.87556266784668

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023924946784973
    2. '=' → logprob: -1.9102392196655273
    3. ',' → logprob: -11.160239219665527
    4. ' ' → logprob: -14.785239219665527
    5. ' ,' → logprob: -15.285239219665527
    6. ')' → logprob: -16.035240173339844
    7. ' ' → logprob: -16.910240173339844
    8. ' =
' → logprob: -17.035240173339844
    9. ' +=' → logprob: -17.910240173339844
    10. '＝' → logprob: -18.035240173339844

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. 'bit' → logprob: -18.625059127807617
    4. '   ' → logprob: -19.125059127807617
    5. '00' → logprob: -19.625059127807617
    6. '000' → logprob: -20.000059127807617
    7. '  ' → logprob: -20.000059127807617
    8. '۰' → logprob: -20.125059127807617
    9. '=' → logprob: -20.250059127807617
    10. ' bit' → logprob: -20.500059127807617

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'bit' → logprob: -16.5000057220459
    4. 'right' → logprob: -18.7500057220459
    5. '000' → logprob: -18.8750057220459
    6. '00' → logprob: -19.0000057220459
    7. '۰' → logprob: -19.0000057220459
    8. '   ' → logprob: -20.1250057220459
    9. '```' → logprob: -20.1250057220459
    10. '  ' → logprob: -20.1875057220459

Token 250: '
' (ID: 198)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.18191269040107727
    2. '
' → logprob: -2.056912660598755
    3. ' bit' → logprob: -3.306912660598755
    4. ',' → logprob: -7.056912899017334
    5. '(bit' → logprob: -8.431912422180176
    6. ' 
' → logprob: -9.056912422180176
    7. 'right' → logprob: -9.181912422180176
    8. ',
' → logprob: -9.681912422180176
    9. '<|end|>' → logprob: -9.681912422180176
    10. 'bitr' → logprob: -9.806912422180176

Token 251: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0009791015181690454
    2. ' bit' → logprob: -7.500978946685791
    3. '
' → logprob: -8.12597942352295
    4. '0' → logprob: -9.00097942352295
    5. ',' → logprob: -12.25097942352295
    6. '(bit' → logprob: -14.25097942352295
    7. 'left' → logprob: -14.62597942352295
    8. 'right' → logprob: -15.87597942352295
    9. 'bits' → logprob: -16.000978469848633
    10. ',
' → logprob: -16.000978469848633

Token 252: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.3136073648929596
    2. '_' → logprob: -1.3136073350906372
    3. ' _' → logprob: -8.063607215881348
    4. '<|end|>' → logprob: -11.188607215881348
    5. '_
' → logprob: -12.063607215881348
    6. '_=' → logprob: -12.563607215881348
    7. '=' → logprob: -13.063607215881348
    8. 'n' → logprob: -13.938607215881348
    9. ')' → logprob: -14.188607215881348
    10. '_)' → logprob: -14.688607215881348

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.938261985778809
    4. ',' → logprob: -16.688261032104492
    5. '0' → logprob: -16.813261032104492
    6. ')' → logprob: -17.313261032104492
    7. '=
' → logprob: -17.563261032104492
    8. ' =
' → logprob: -18.188261032104492
    9. '<|end|>' → logprob: -18.188261032104492
    10. '=

' → logprob: -18.563261032104492

Token 254: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '۰' → logprob: -18.875553131103516
    4. '   ' → logprob: -19.000553131103516
    5. '000' → logprob: -19.125553131103516
    6. '  ' → logprob: -19.500553131103516
    7. '<|end|>' → logprob: -19.813053131103516
    8. ' ' → logprob: -20.125553131103516
    9. '00' → logprob: -20.188053131103516
    10. ' ' → logprob: -20.750553131103516

Token 255: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۰' → logprob: -20.875
    4. '000' → logprob: -21.625
    5. '00' → logprob: -21.875
    6. '   ' → logprob: -22.0
    7. '०' → logprob: -23.0
    8. '  ' → logprob: -23.375
    9. '০' → logprob: -23.6875
    10. '０' → logprob: -24.1875

Token 256: '

' (ID: 279)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06075563654303551
    2. '<|end|>' → logprob: -3.185755729675293
    3. 'for' → logprob: -4.185755729675293
    4. '#' → logprob: -6.935755729675293
    5. ' left' → logprob: -7.810755729675293
    6. '[left' → logprob: -8.060755729675293
    7. '
' → logprob: -8.560755729675293
    8. ' for' → logprob: -9.185755729675293
    9. '```' → logprob: -9.435755729675293
    10. 'N' → logprob: -9.810755729675293

Token 257: '#' (ID: 2)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.08139459788799286
    2. 'for' → logprob: -3.081394672393799
    3. '#' → logprob: -3.581394672393799
    4. '<|end|>' → logprob: -5.956394672393799
    5. 'N' → logprob: -6.956394672393799
    6. ' left' → logprob: -8.45639419555664
    7. 'length' → logprob: -8.70639419555664
    8. 'from' → logprob: -9.20639419555664
    9. '[left' → logprob: -9.20639419555664
    10. 'n' → logprob: -9.83139419555664

Token 258: ' Initial' (ID: 9209)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1168530285358429
    2. 'for' → logprob: -2.2418529987335205
    3. 'N' → logprob: -5.9918532371521
    4. 'from' → logprob: -7.2418532371521
    5. '#' → logprob: -7.4918532371521
    6. 'right' → logprob: -9.616852760314941
    7. ' left' → logprob: -9.616852760314941
    8. 'max' → logprob: -10.741852760314941
    9. 'length' → logprob: -10.741852760314941
    10. 'n' → logprob: -10.866852760314941

Token 259: 'isation' (ID: 6993)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.006476148962974548
    2. 'isation' → logprob: -5.506475925445557
    3. 'ization' → logprob: -7.131475925445557
    4. '#' → logprob: -7.381475925445557
    5. '_left' → logprob: -7.756475925445557
    6. 'right' → logprob: -8.756476402282715
    7. ' left' → logprob: -8.756476402282715
    8. '=' → logprob: -9.131476402282715
    9. 'for' → logprob: -10.256476402282715
    10. 'i' → logprob: -11.256476402282715

Token 260: ' de' (ID: 334)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0070860497653484344
    2. ' left' → logprob: -6.132086277008057
    3. 'of' → logprob: -6.382086277008057
    4. ' of' → logprob: -6.507086277008057
    5. '#' → logprob: -6.632086277008057
    6. '_left' → logprob: -9.382085800170898
    7. '[left' → logprob: -9.632085800170898
    8. 'right' → logprob: -10.132085800170898
    9. 'for' → logprob: -10.132085800170898
    10. 'de' → logprob: -10.257085800170898

Token 261: ' ans' (ID: 3345)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0006354739889502525
    2. '0' → logprob: -7.625635623931885
    3. ' left' → logprob: -9.250635147094727
    4. 'right' → logprob: -10.250635147094727
    5. 'max' → logprob: -12.500635147094727
    6. 'answer' → logprob: -13.125635147094727
    7. '```' → logprob: -13.250635147094727
    8. '[left' → logprob: -13.375635147094727
    9. 'ans' → logprob: -14.250635147094727
    10. 'result' → logprob: -14.500635147094727

Token 262: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631778717041
    2. '=' → logprob: -1.313263177871704
    3. 's' → logprob: -14.063262939453125
    4. ',' → logprob: -15.813262939453125
    5. '=int' → logprob: -15.938262939453125
    6. 'ans' → logprob: -16.688262939453125
    7. ' ' → logprob: -16.938262939453125
    8. '0' → logprob: -17.063262939453125
    9. ' ' → logprob: -17.063262939453125
    10. '＝' → logprob: -17.188262939453125

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014048750745132565
    2. 'float' → logprob: -7.251404762268066
    3. 'N' → logprob: -8.001404762268066
    4. '-' → logprob: -8.001404762268066
    5. ' ' → logprob: -11.251404762268066
    6. '[]' → logprob: -12.751404762268066
    7. 'None' → logprob: -13.751404762268066
    8. '1' → logprob: -14.001404762268066
    9. 'int' → logprob: -14.001404762268066
    10. 'max' → logprob: -14.126404762268066

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013077369658276439
    2. '-' → logprob: -6.876307964324951
    3. 'float' → logprob: -8.501307487487793
    4. 'N' → logprob: -9.626307487487793
    5. '1' → logprob: -13.376307487487793
    6. ' ' → logprob: -14.001307487487793
    7. '[]' → logprob: -14.626307487487793
    8. 'None' → logprob: -14.876307487487793
    9. 'False' → logprob: -15.001307487487793
    10. '-N' → logprob: -15.001307487487793

Token 265: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. ' ans' → logprob: -17.5
    4. '0' → logprob: -18.375
    5. '(ans' → logprob: -18.875
    6. '	ans' → logprob: -19.125
    7. 'answer' → logprob: -20.125
    8. '#' → logprob: -20.5
    9. '=' → logprob: -21.0
    10. '_ans' → logprob: -21.375

Token 266: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.5649528298527e-05
    2. ' ans' → logprob: -9.500075340270996
    3. '	ans' → logprob: -14.750075340270996
    4. '(ans' → logprob: -15.500075340270996
    5. 'answer' → logprob: -15.875075340270996
    6. '
' → logprob: -17.250076293945312
    7. '_ans' → logprob: -17.375076293945312
    8. '#' → logprob: -18.125076293945312
    9. 'anst' → logprob: -19.000076293945312
    10. '0' → logprob: -19.250076293945312

Token 267: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3856492842023727e-06
    2. ' ans' → logprob: -14.375000953674316
    3. '#' → logprob: -14.500000953674316
    4. '	ans' → logprob: -16.625001907348633
    5. '
' → logprob: -17.375001907348633
    6. 'anst' → logprob: -17.750001907348633
    7. '(ans' → logprob: -17.750001907348633
    8. 'answer' → logprob: -17.875001907348633
    9. 'ann' → logprob: -19.000001907348633
    10. 'anse' → logprob: -19.750001907348633

Token 268: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326285004615784
    2. '=' → logprob: -1.3132628202438354
    3. ' ' → logprob: -13.938262939453125
    4. ',' → logprob: -16.313262939453125
    5. ')' → logprob: -17.313262939453125
    6. '  ' → logprob: -18.063262939453125
    7. 's' → logprob: -18.188262939453125
    8. ' ' → logprob: -18.188262939453125
    9. '#' → logprob: -18.563262939453125
    10. ' =
' → logprob: -18.688262939453125

Token 269: ' servir' (ID: 42557)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36326658725738525
    2. ' =' → logprob: -1.8632665872573853
    3. ' servir' → logprob: -3.6132664680480957
    4. 'max' → logprob: -3.7382664680480957
    5. ' stock' → logprob: -3.9882664680480957
    6. ' ' → logprob: -3.9882664680480957
    7. ' store' → logprob: -4.738266468048096
    8. '0' → logprob: -5.113266468048096
    9. 'stock' → logprob: -5.113266468048096
    10. ' max' → logprob: -5.488266468048096

Token 270: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26902735233306885
    2. ' =' → logprob: -1.5190273523330688
    3. ' à' → logprob: -4.269027233123779
    4. 'à' → logprob: -6.019027233123779
    5. ' ' → logprob: -8.144027709960938
    6. '#' → logprob: -9.519027709960938
    7. ' to' → logprob: -10.269027709960938
    8. ' a' → logprob: -10.519027709960938
    9. 'a' → logprob: -10.644027709960938
    10. 'to' → logprob: -11.019027709960938

Token 271: ' compter' (ID: 81694)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023962247651070356
    2. 'max' → logprob: -7.002396106719971
    3. 'stock' → logprob: -7.252396106719971
    4. ' ' → logprob: -7.377396106719971
    5. ' stock' → logprob: -10.377396583557129
    6. '1' → logprob: -10.877396583557129
    7. 'store' → logprob: -11.127396583557129
    8. 'calcul' → logprob: -11.252396583557129
    9. 'acc' → logprob: -11.627396583557129
    10. 'ans' → logprob: -11.877396583557129

Token 272: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1032638549804688
    2. ' le' → logprob: -1.3532638549804688
    3. ' la' → logprob: -2.3532638549804688
    4. '=' → logprob: -2.3532638549804688
    5. 'max' → logprob: -2.7282638549804688
    6. '0' → logprob: -2.8532638549804688
    7. ' =' → logprob: -3.8532638549804688
    8. ' ' → logprob: -4.228263854980469
    9. '#' → logprob: -4.603263854980469
    10. ' à' → logprob: -5.228263854980469

Token 273: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.07805812358856201
    2. '#' → logprob: -2.9530582427978516
    3. 'maximum' → logprob: -4.578058242797852
    4. 'max' → logprob: -4.703058242797852
    5. 'me' → logprob: -6.453058242797852
    6. ' nombre' → logprob: -6.703058242797852
    7. ' #' → logprob: -8.203058242797852
    8. 'plus' → logprob: -8.703058242797852
    9. 'result' → logprob: -9.703058242797852
    10. 'nb' → logprob: -10.078058242797852

Token 274: ' total' (ID: 3609)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5564033389091492
    2. ' des' → logprob: -2.181403398513794
    3. ' de' → logprob: -2.681403398513794
    4. 'des' → logprob: -2.931403398513794
    5. '_' → logprob: -3.306403398513794
    6. 'd' → logprob: -3.431403398513794
    7. ' ' → logprob: -3.431403398513794
    8. '_des' → logprob: -3.556403398513794
    9. '_d' → logprob: -4.431403160095215
    10. '  ' → logprob: -4.556403160095215

Token 275: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9994447827339172
    2. '#' → logprob: -1.6244447231292725
    3. ' de' → logprob: -1.7494447231292725
    4. ' des' → logprob: -1.8744447231292725
    5. 'des' → logprob: -3.2494447231292725
    6. 'de' → logprob: -3.8744447231292725
    7. 'd' → logprob: -3.9994447231292725
    8. ' of' → logprob: -4.999444961547852
    9. ' #' → logprob: -5.374444961547852
    10. '=' → logprob: -5.374444961547852

Token 276: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6399169564247131
    2. 'segments' → logprob: -0.7649169564247131
    3. 'sub' → logprob: -5.639916896820068
    4. 'p' → logprob: -6.389916896820068
    5. ' sous' → logprob: -7.014916896820068
    6. 'segment' → logprob: -7.764916896820068
    7. ' segments' → logprob: -8.264917373657227
    8. 'pairs' → logprob: -8.514917373657227
    9. 'seg' → logprob: -9.764917373657227
    10. 'bons' → logprob: -10.014917373657227

Token 277: '-table' (ID: 35909)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.10987697541713715
    2. '_' → logprob: -3.609876871109009
    3. '-' → logprob: -3.984876871109009
    4. 'sé' → logprob: -4.234877109527588
    5. 'arrays' → logprob: -4.609877109527588
    6. 's' → logprob: -5.359877109527588
    7. 'list' → logprob: -5.359877109527588
    8. 'strings' → logprob: -5.734877109527588
    9. 'ense' → logprob: -5.734877109527588
    10. '_sequences' → logprob: -5.984877109527588

Token 278: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.00836244598031044
    2. 'ments' → logprob: -6.008362293243408
    3. 'ttes' → logprob: -6.008362293243408
    4. 'ces' → logprob: -6.508362293243408
    5. 'gments' → logprob: -8.133362770080566
    6. 'segments' → logprob: -8.258362770080566
    7. 'quences' → logprob: -8.508362770080566
    8. 'xes' → logprob: -9.383362770080566
    9. 'n' → logprob: -9.508362770080566
    10. 'au' → logprob: -9.508362770080566

Token 279: ' qui' (ID: 2780)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35985806584358215
    2. ' =' → logprob: -1.3598580360412598
    3. 'ans' → logprob: -3.1098580360412598
    4. ' ans' → logprob: -7.48485803604126
    5. '(ans' → logprob: -8.734858512878418
    6. '	ans' → logprob: -9.609858512878418
    7. '0' → logprob: -9.984858512878418
    8. '_ans' → logprob: -10.234858512878418
    9. ' ' → logprob: -10.859858512878418
    10. ',' → logprob: -11.359858512878418

Token 280: ' satisf' (ID: 8824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05449064075946808
    2. 'ont' → logprob: -3.054490566253662
    3. 'cont' → logprob: -6.054490566253662
    4. '#' → logprob: -6.679490566253662
    5. ' satisf' → logprob: -7.054490566253662
    6. 'respect' → logprob: -7.679490566253662
    7. 'v' → logprob: -8.67949104309082
    8. 'sat' → logprob: -8.67949104309082
    9. 'con' → logprob: -8.80449104309082
    10. 'compr' → logprob: -8.80449104309082

Token 281: 'ont' (ID: 645)
  Prédit: 'ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.08769059181213379
    2. 'aient' → logprob: -2.712690591812134
    3. 'ais' → logprob: -4.587690353393555
    4. 'ait' → logprob: -5.212690353393555
    5. 'a' → logprob: -6.462690353393555
    6. 'ent' → logprob: -8.962690353393555
    7. '#' → logprob: -10.212690353393555
    8. '```' → logprob: -10.212690353393555
    9. 'aiset' → logprob: -10.337690353393555
    10. '_' → logprob: -10.712690353393555

Token 282: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.45704299211502075
    2. ' la' → logprob: -1.582042932510376
    3. 'à' → logprob: -3.082042932510376
    4. 'les' → logprob: -3.832042932510376
    5. ' à' → logprob: -4.207043170928955
    6. 'le' → logprob: -4.207043170928955
    7. 'au' → logprob: -4.457043170928955
    8. ' une' → logprob: -4.582043170928955
    9. '=' → logprob: -4.832043170928955
    10. 'une' → logprob: -5.207043170928955

Token 283: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.004487800411880016
    2. 'pro' → logprob: -5.754487991333008
    3. ' condition' → logprob: -7.504487991333008
    4. 'crit' → logprob: -8.379487991333008
    5. 'criteria' → logprob: -9.254487991333008
    6. 'property' → logprob: -9.504487991333008
    7. '条件' → logprob: -9.754487991333008
    8. 'conditions' → logprob: -9.754487991333008
    9. '#' → logprob: -10.004487991333008
    10. 'criter' → logprob: -10.254487991333008

Token 284: ' donnée' (ID: 130126)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005557744298130274
    2. 'left' → logprob: -7.875555992126465
    3. '
' → logprob: -10.000555992126465
    4. 'for' → logprob: -10.125555992126465
    5. '(ans' → logprob: -10.500555992126465
    6. '=' → logprob: -10.875555992126465
    7. ' ans' → logprob: -11.125555992126465
    8. 'answer' → logprob: -11.250555992126465
    9. '```' → logprob: -12.500555992126465
    10. ' =' → logprob: -12.625555992126465

Token 285: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02389366924762726
    2. 'left' → logprob: -3.7738935947418213
    3. 'for' → logprob: -8.148893356323242
    4. '=' → logprob: -9.398893356323242
    5. 'answer' → logprob: -9.648893356323242
    6. '
' → logprob: -9.648893356323242
    7. '(ans' → logprob: -10.148893356323242
    8. ' ans' → logprob: -10.648893356323242
    9. ' =' → logprob: -10.773893356323242
    10. '#' → logprob: -11.273893356323242

Token 286: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.25000286102295
    3. 'left' → logprob: -14.62500286102295
    4. ' ans' → logprob: -15.37500286102295
    5. '```' → logprob: -16.375003814697266
    6. 'answer' → logprob: -16.500003814697266
    7. '(ans' → logprob: -16.500003814697266
    8. '
' → logprob: -16.625003814697266
    9. '#' → logprob: -17.125003814697266
    10. '	ans' → logprob: -17.125003814697266

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ' ' → logprob: -15.724077224731445
    4. ' +=' → logprob: -16.974077224731445
    5. '+=' → logprob: -18.724077224731445
    6. '＝' → logprob: -18.974077224731445
    7. ' =
' → logprob: -19.724077224731445
    8. ',' → logprob: -19.849077224731445
    9. ')' → logprob: -20.599077224731445
    10. ' ' → logprob: -20.599077224731445

Token 288: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012509655207395554
    2. ' ' → logprob: -4.387509822845459
    3. ' ' → logprob: -17.137510299682617
    4. '   ' → logprob: -18.575010299682617
    5. '۰' → logprob: -18.887510299682617
    6. '000' → logprob: -19.575010299682617
    7. '  ' → logprob: -20.012510299682617
    8. '00' → logprob: -20.450010299682617
    9. '=' → logprob: -20.575010299682617
    10. '1' → logprob: -20.700010299682617

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '000' → logprob: -19.125
    4. '۰' → logprob: -19.375
    5. '00' → logprob: -21.0
    6. '०' → logprob: -21.125
    7. '০' → logprob: -21.125
    8. 'int' → logprob: -21.1875
    9. '```' → logprob: -21.1875
    10. '０' → logprob: -21.375

Token 290: '

' (ID: 279)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.16275981068611145
    2. 'for' → logprob: -2.412759780883789
    3. '<|end|>' → logprob: -3.162759780883789
    4. '
' → logprob: -4.162759780883789
    5. ' left' → logprob: -7.287759780883789
    6. '[left' → logprob: -7.912759780883789
    7. '#' → logprob: -7.912759780883789
    8. ' for' → logprob: -8.162759780883789
    9. 'N' → logprob: -8.287759780883789
    10. '<|end|>' → logprob: -8.662759780883789

Token 291: '#' (ID: 2)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.31356972455978394
    2. 'for' → logprob: -1.3135697841644287
    3. '#' → logprob: -8.813570022583008
    4. 'N' → logprob: -10.063570022583008
    5. ' left' → logprob: -10.188570022583008
    6. 'from' → logprob: -10.438570022583008
    7. ' for' → logprob: -10.438570022583008
    8. '```' → logprob: -11.938570022583008
    9. '
' → logprob: -12.438570022583008
    10. 'right' → logprob: -12.563570022583008

Token 292: ' On' (ID: 2160)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.532620906829834
    2. 'for' → logprob: -0.907620906829834
    3. 'from' → logprob: -4.782620906829834
    4. 'N' → logprob: -6.907620906829834
    5. 'right' → logprob: -10.782621383666992
    6. 'n' → logprob: -10.782621383666992
    7. '#' → logprob: -11.657621383666992
    8. ' left' → logprob: -11.657621383666992
    9. 'def' → logprob: -11.907621383666992
    10. ' for' → logprob: -12.157621383666992

Token 293: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07215908914804459
    2. 'left' → logprob: -2.6971590518951416
    3. ' for' → logprob: -7.197159290313721
    4. ' left' → logprob: -7.197159290313721
    5. 'or' → logprob: -8.197158813476562
    6. 'n' → logprob: -8.447158813476562
    7. '=' → logprob: -9.572158813476562
    8. 'N' → logprob: -10.197158813476562
    9. 'right' → logprob: -10.822158813476562
    10. '#' → logprob: -11.072158813476562

Token 294: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06228449568152428
    2. ' for' → logprob: -3.062284469604492
    3. 'left' → logprob: -4.312284469604492
    4. ' left' → logprob: -8.687284469604492
    5. 'over' → logprob: -12.062284469604492
    6. ' over' → logprob: -12.187284469604492
    7. '(left' → logprob: -12.312284469604492
    8. 'from' → logprob: -12.937284469604492
    9. 'range' → logprob: -13.062284469604492
    10. 'right' → logprob: -13.062284469604492

Token 295: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08752678334712982
    2. ' range' → logprob: -2.837526798248291
    3. 'left' → logprob: -3.712526798248291
    4. ' left' → logprob: -7.212526798248291
    5. 'right' → logprob: -10.587526321411133
    6. 'i' → logprob: -11.212526321411133
    7. '_' → logprob: -11.587526321411133
    8. 'rang' → logprob: -11.712526321411133
    9. '_left' → logprob: -12.462526321411133
    10. ' i' → logprob: -12.462526321411133

Token 296: ' les' (ID: 1341)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.25235357880592346
    2. 'left' → logprob: -1.502353549003601
    3. ' i' → logprob: -9.25235366821289
    4. '_left' → logprob: -9.25235366821289
    5. '	left' → logprob: -10.12735366821289
    6. ' lef' → logprob: -10.25235366821289
    7. 'i' → logprob: -10.50235366821289
    8. ' le' → logprob: -10.87735366821289
    9. 'right' → logprob: -11.00235366821289
    10. '_' → logprob: -11.12735366821289

Token 297: ' indices' (ID: 30378)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.006658061407506466
    2. ' left' → logprob: -5.13165807723999
    3. 'indices' → logprob: -8.006657600402832
    4. 'i' → logprob: -8.131657600402832
    5. ' indices' → logprob: -9.881657600402832
    6. 'right' → logprob: -11.381657600402832
    7. 'index' → logprob: -11.506657600402832
    8. 'indexes' → logprob: -12.006657600402832
    9. 'possible' → logprob: -12.131657600402832
    10. '	left' → logprob: -12.506657600402832

Token 298: ' possibles' (ID: 97753)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.42252084612846375
    2. 'left' → logprob: -1.1725208759307861
    3. ' for' → logprob: -4.297520637512207
    4. ' de' → logprob: -4.922520637512207
    5. ' in' → logprob: -5.672520637512207
    6. 'for' → logprob: -5.797520637512207
    7. ' gauche' → logprob: -5.797520637512207
    8. ' i' → logprob: -7.047520637512207
    9. 'de' → logprob: -7.297520637512207
    10. '_' → logprob: -7.297520637512207

Token 299: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2563340365886688
    2. 'left' → logprob: -1.8813340663909912
    3. ' for' → logprob: -2.756334066390991
    4. ' left' → logprob: -4.631333827972412
    5. 'pour' → logprob: -8.75633430480957
    6. 'range' → logprob: -9.25633430480957
    7. 'de' → logprob: -10.38133430480957
    8. 'in' → logprob: -10.50633430480957
    9. ' pour' → logprob: -10.50633430480957
    10. ' range' → logprob: -10.75633430480957

Token 300: ' le' (ID: 505)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.20160922408103943
    2. ' left' → logprob: -1.7016092538833618
    3. '_left' → logprob: -9.32660961151123
    4. 'right' → logprob: -10.07660961151123
    5. '	left' → logprob: -11.07660961151123
    6. 'range' → logprob: -11.82660961151123
    7. '_' → logprob: -11.95160961151123
    8. ' range' → logprob: -12.07660961151123
    9. ' lef' → logprob: -12.20160961151123
    10. ' gauche' → logprob: -12.20160961151123

Token 301: ' bord' (ID: 26431)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.002196763874962926
    2. ' left' → logprob: -6.127196788787842
    3. '_left' → logprob: -12.002196311950684
    4. 'right' → logprob: -12.627196311950684
    5. ' gauche' → logprob: -15.002196311950684
    6. '	left' → logprob: -15.127196311950684
    7. 'lef' → logprob: -15.252196311950684
    8. 'i' → logprob: -15.377196311950684
    9. ' lef' → logprob: -15.377196311950684
    10. '```' → logprob: -16.002197265625

Token 302: ' gauche' (ID: 58367)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.6440351009368896
    2. 'left' → logprob: -1.1440351009368896
    3. ' gauche' → logprob: -2.0190351009368896
    4. '_left' → logprob: -4.144035339355469
    5. '_' → logprob: -5.894035339355469
    6. 'g' → logprob: -6.269035339355469
    7. '_g' → logprob: -6.894035339355469
    8. ' _' → logprob: -7.019035339355469
    9. ' ' → logprob: -8.644035339355469
    10. ' de' → logprob: -9.269035339355469

Token 303: ' du' (ID: 1462)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7205716371536255
    2. 'for' → logprob: -0.7205716371536255
    3. 'left' → logprob: -4.470571517944336
    4. ' left' → logprob: -4.720571517944336
    5. ' in' → logprob: -6.345571517944336
    6. ' de' → logprob: -6.595571517944336
    7. 'in' → logprob: -7.470571517944336
    8. ' of' → logprob: -7.720571517944336
    9. 'range' → logprob: -7.720571517944336
    10. ' i' → logprob: -7.845571517944336

Token 304: ' segment' (ID: 14806)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.051688890904188156
    2. ' range' → logprob: -3.1766889095306396
    3. 'A' → logprob: -5.0516886711120605
    4. 'for' → logprob: -6.5516886711120605
    5. ' A' → logprob: -7.8016886711120605
    6. 'right' → logprob: -8.801689147949219
    7. ' for' → logprob: -8.926689147949219
    8. 'left' → logprob: -10.801689147949219
    9. 'rang' → logprob: -10.801689147949219
    10. 'la' → logprob: -10.926689147949219

Token 305: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017821642104536295
    2. ' for' → logprob: -6.751781940460205
    3. 'left' → logprob: -8.001782417297363
    4. '
' → logprob: -8.251782417297363
    5. 'range' → logprob: -12.126782417297363
    6. '```' → logprob: -12.126782417297363
    7. ':' → logprob: -13.001782417297363
    8. ' left' → logprob: -14.376782417297363
    9. '[left' → logprob: -14.626782417297363
    10. 'from' → logprob: -14.751782417297363

Token 306: 'left' (ID: 4530)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21054817736148834
    2. ' range' → logprob: -1.7105481624603271
    3. 'for' → logprob: -5.710548400878906
    4. 'left' → logprob: -6.085548400878906
    5. ')' → logprob: -6.835548400878906
    6. 'N' → logprob: -6.960548400878906
    7. '0' → logprob: -8.085548400878906
    8. 'right' → logprob: -8.210548400878906
    9. ' for' → logprob: -8.585548400878906
    10. 'in' → logprob: -8.585548400878906

Token 307: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15358364582061768
    2. '):' → logprob: -3.278583526611328
    3. 'in' → logprob: -3.403583526611328
    4. ' in' → logprob: -3.528583526611328
    5. ' )' → logprob: -3.778583526611328
    6. ',' → logprob: -4.528583526611328
    7. ' ):' → logprob: -5.153583526611328
    8. 'for' → logprob: -7.278583526611328
    9. '):
' → logprob: -7.278583526611328
    10. ' ' → logprob: -8.153583526611328

Token 308: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007278018747456372
    2. ' for' → logprob: -7.250727653503418
    3. '
' → logprob: -11.000727653503418
    4. '```' → logprob: -14.375727653503418
    5. 'left' → logprob: -15.125727653503418
    6. ' 
' → logprob: -15.750727653503418
    7. ':' → logprob: -16.125728607177734
    8. 'range' → logprob: -16.500728607177734
    9. ',' → logprob: -17.875728607177734
    10. '#' → logprob: -18.750728607177734

Token 309: ' range' (ID: 3352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.36574100604048e-06
    2. ' for' → logprob: -12.375004768371582
    3. '
' → logprob: -17.000003814697266
    4. 'left' → logprob: -17.250003814697266
    5. 'from' → logprob: -18.500003814697266
    6. '```' → logprob: -19.125003814697266
    7. 'fo' → logprob: -22.125003814697266
    8. 'n' → logprob: -22.250003814697266
    9. 'N' → logprob: -22.500003814697266
    10. 'right' → logprob: -23.000003814697266

Token 310: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20144394040107727
    2. '(' → logprob: -1.7014439105987549
    3. '(len' → logprob: -10.826443672180176
    4. ' (' → logprob: -12.326443672180176
    5. '(
' → logprob: -12.701443672180176
    6. '(n' → logprob: -13.701443672180176
    7. '(left' → logprob: -13.951443672180176
    8. '(L' → logprob: -14.326443672180176
    9. '（' → logprob: -15.701443672180176
    10. '1' → logprob: -16.201444625854492

Token 311: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2839612364768982
    2. ')' → logprob: -1.408961296081543
    3. '()' → logprob: -6.533961296081543
    4. '():' → logprob: -7.658961296081543
    5. '):
' → logprob: -7.658961296081543
    6. '(' → logprob: -8.533961296081543
    7. ' ):' → logprob: -8.908961296081543
    8. ':' → logprob: -10.533961296081543
    9. '):

' → logprob: -11.783961296081543
    10. '#' → logprob: -11.783961296081543

Token 312: ' va' (ID: 3423)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045970384031534195
    2. 'for' → logprob: -3.2959704399108887
    3. ':
' → logprob: -5.045970439910889
    4. ' for' → logprob: -6.545970439910889
    5. '(' → logprob: -11.92096996307373
    6. '(range' → logprob: -12.29596996307373
    7. ' :' → logprob: -12.42096996307373
    8. 'range' → logprob: -13.17096996307373
    9. ')' → logprob: -13.42096996307373
    10. 'in' → logprob: -13.54596996307373

Token 313: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9127968549728394
    2. ' for' → logprob: -1.2877968549728394
    3. 'range' → logprob: -1.7877968549728394
    4. ' range' → logprob: -1.9127968549728394
    5. ' parcour' → logprob: -5.912796974182129
    6. ' continuer' → logprob: -6.787796974182129
    7. ' couvrir' → logprob: -7.037796974182129
    8. ' iter' → logprob: -7.287796974182129
    9. ' ' → logprob: -7.412796974182129
    10. 'contin' → logprob: -8.162796974182129

Token 314: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006313055637292564
    2. ' ' → logprob: -7.375631332397461
    3. 'N' → logprob: -13.125631332397461
    4. '(' → logprob: -13.500631332397461
    5. 'range' → logprob: -14.250631332397461
    6. ' range' → logprob: -14.750631332397461
    7. ' N' → logprob: -15.625631332397461
    8. 'left' → logprob: -17.12563133239746
    9. '```' → logprob: -18.37563133239746
    10. '(N' → logprob: -18.75063133239746

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. 'range' → logprob: -18.250003814697266
    4. 'N' → logprob: -19.000003814697266
    5. '(' → logprob: -19.875003814697266
    6. '```' → logprob: -21.000003814697266
    7. '1' → logprob: -21.375003814697266
    8. 'left' → logprob: -21.375003814697266
    9. 'start' → logprob: -21.875003814697266
    10. ' range' → logprob: -21.875003814697266

Token 316: ' inclus' (ID: 11891)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8587388396263123
    2. ',' → logprob: -1.108738899230957
    3. ' ' → logprob: -1.983738899230957
    4. ' à' → logprob: -3.108738899230957
    5. ' jusqu' → logprob: -3.608738899230957
    6. 'to' → logprob: -4.358738899230957
    7. ')' → logprob: -4.858738899230957
    8. ' N' → logprob: -4.983738899230957
    9. ' ,' → logprob: -5.733738899230957
    10. ' до' → logprob: -6.108738899230957

Token 317: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4666697084903717
    2. ' ' → logprob: -1.4666696786880493
    3. ',' → logprob: -2.091669797897339
    4. ' jusqu' → logprob: -4.34166955947876
    5. 'à' → logprob: -6.21666955947876
    6. ' to' → logprob: -6.59166955947876
    7. ')' → logprob: -7.34166955947876
    8. ' ,' → logprob: -7.59166955947876
    9. ' a' → logprob: -8.216670036315918
    10. ' ' → logprob: -8.591670036315918

Token 318: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25193095207214355
    2. ' N' → logprob: -1.5019309520721436
    3. ' ' → logprob: -14.376931190490723
    4. ' ' → logprob: -14.626931190490723
    5. '	N' → logprob: -14.876931190490723
    6. '(N' → logprob: -15.001931190490723
    7. ',' → logprob: -16.376930236816406
    8. 'n' → logprob: -17.251930236816406
    9. ')' → logprob: -17.626930236816406
    10. ',N' → logprob: -18.126930236816406

Token 319: ' exclus' (ID: 9398)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7734481692314148
    2. ':' → logprob: -0.8984481692314148
    3. ')' → logprob: -2.1484482288360596
    4. '):
' → logprob: -4.8984479904174805
    5. ' :' → logprob: -6.2734479904174805
    6. 'for' → logprob: -7.1484479904174805
    7. '+' → logprob: -7.2734479904174805
    8. ':
' → logprob: -8.14844799041748
    9. ' ):' → logprob: -8.27344799041748
    10. ' (' → logprob: -8.27344799041748

Token 320: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02282620780169964
    2. ' for' → logprob: -4.397826194763184
    3. ':' → logprob: -4.897826194763184
    4. '
' → logprob: -6.147826194763184
    5. ':
' → logprob: -7.397826194763184
    6. '```' → logprob: -10.647826194763184
    7. 'range' → logprob: -11.772826194763184
    8. '(range' → logprob: -12.397826194763184
    9. '(' → logprob: -13.022826194763184
    10. ' 
' → logprob: -13.147826194763184

Token 321: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04975846782326698
    2. 'for' → logprob: -3.5497584342956543
    3. ' ' → logprob: -4.174758434295654
    4. ' so' → logprob: -7.424758434295654
    5. ' pour' → logprob: -7.549758434295654
    6. ' in' → logprob: -7.799758434295654
    7. ' left' → logprob: -7.924758434295654
    8. '1' → logprob: -8.299758911132812
    9. ' col' → logprob: -8.424758911132812
    10. ' right' → logprob: -8.424758911132812

Token 322: ''est' (ID: 6616)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.1470215916633606
    2. 'ont' → logprob: -3.647021532058716
    3. 'omm' → logprob: -3.772021532058716
    4. '#' → logprob: -3.897021532058716
    5. 'on' → logprob: -3.897021532058716
    6. 'om' → logprob: -4.897021770477295
    7. '=' → logprob: -5.272021770477295
    8. 'range' → logprob: -5.397021770477295
    9. 'omp' → logprob: -5.522021770477295
    10. ':' → logprob: -6.272021770477295

Token 323: '-à' (ID: 56297)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.461249977350235
    2. ':' → logprob: -2.586250066757202
    3. 'à' → logprob: -2.586250066757202
    4. '-à' → logprob: -2.836250066757202
    5. ' N' → logprob: -3.211250066757202
    6. ' à' → logprob: -3.961250066757202
    7. 'range' → logprob: -3.961250066757202
    8. 'la' → logprob: -3.961250066757202
    9. '0' → logprob: -4.461249828338623
    10. ' la' → logprob: -4.711249828338623

Token 324: '-dire' (ID: 76064)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.548412024974823
    2. '(' → logprob: -2.7984120845794678
    3. 'int' → logprob: -2.9234120845794678
    4. '0' → logprob: -3.0484120845794678
    5. 'à' → logprob: -3.4234120845794678
    6. '1' → logprob: -3.4234120845794678
    7. '4' → logprob: -3.5484120845794678
    8. '#' → logprob: -3.7984120845794678
    9. 'n' → logprob: -3.7984120845794678
    10. 'x' → logprob: -4.423411846160889

Token 325: ' de' (ID: 334)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05511279031634331
    2. ' N' → logprob: -2.930112838745117
    3. ' range' → logprob: -8.930112838745117
    4. 'range' → logprob: -9.430112838745117
    5. '0' → logprob: -11.805112838745117
    6. ' ' → logprob: -12.805112838745117
    7. '(N' → logprob: -13.430112838745117
    8. 'for' → logprob: -13.680112838745117
    9. '1' → logprob: -14.055112838745117
    10. '	N' → logprob: -14.180112838745117

Token 326: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03136364743113518
    2. 'N' → logprob: -3.5313637256622314
    3. ' ' → logprob: -6.781363487243652
    4. ' N' → logprob: -7.656363487243652
    5. '1' → logprob: -13.406363487243652
    6. 'range' → logprob: -13.656363487243652
    7. ' range' → logprob: -14.656363487243652
    8. 'left' → logprob: -14.656363487243652
    9. '```' → logprob: -15.031363487243652
    10. '(' → logprob: -16.65636444091797

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16023682057857513
    2. 'N' → logprob: -1.9102368354797363
    3. ' N' → logprob: -11.910236358642578
    4. ' ' → logprob: -12.410236358642578
    5. '1' → logprob: -13.410236358642578
    6. 'range' → logprob: -15.785236358642578
    7. '(N' → logprob: -16.410236358642578
    8. '```' → logprob: -16.410236358642578
    9. 'left' → logprob: -16.535236358642578
    10. '
' → logprob: -17.910236358642578

Token 328: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.45004934072494507
    2. ' à' → logprob: -1.4500494003295898
    3. 'to' → logprob: -2.95004940032959
    4. ' ' → logprob: -3.70004940032959
    5. ' jusqu' → logprob: -3.70004940032959
    6. ')' → logprob: -4.07504940032959
    7. 'à' → logprob: -5.57504940032959
    8. '<|end|>' → logprob: -7.07504940032959
    9. ' up' → logprob: -7.32504940032959
    10. 'import' → logprob: -7.45004940032959

Token 329: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.008614808320999146
    2. ' N' → logprob: -4.758615016937256
    3. ' ' → logprob: -16.383615493774414
    4. '```' → logprob: -16.383615493774414
    5. '(N' → logprob: -17.008615493774414
    6. '	N' → logprob: -17.258615493774414
    7. ' ' → logprob: -18.008615493774414
    8. '
' → logprob: -18.508615493774414
    9. '<N' → logprob: -19.008615493774414
    10. ',' → logprob: -19.258615493774414

Token 330: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0021162033081055
    2. 'N' → logprob: -1.2521162033081055
    3. '1' → logprob: -1.6271162033081055
    4. '+' → logprob: -2.5021162033081055
    5. '):' → logprob: -3.6271162033081055
    6. ')' → logprob: -4.2521162033081055
    7. 'range' → logprob: -4.8771162033081055
    8. '```' → logprob: -5.1271162033081055
    9. '):
' → logprob: -5.2521162033081055
    10. '
' → logprob: -6.6271162033081055

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021343429398257285
    2. 'N' → logprob: -8.750213623046875
    3. ' ' → logprob: -9.875213623046875
    4. ')' → logprob: -13.250213623046875
    5. ' N' → logprob: -14.625213623046875
    6. 'left' → logprob: -15.000213623046875
    7. '```' → logprob: -15.125213623046875
    8. 'right' → logprob: -15.875213623046875
    9. '2' → logprob: -16.500213623046875
    10. '-' → logprob: -16.750213623046875

Token 332: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007590038585476577
    2. '
' → logprob: -7.500759124755859
    3. ' for' → logprob: -9.12575912475586
    4. ':' → logprob: -9.75075912475586
    5. ':
' → logprob: -10.62575912475586
    6. '```' → logprob: -11.25075912475586
    7. ' 
' → logprob: -14.37575912475586
    8. 'left' → logprob: -14.62575912475586
    9. '  
' → logprob: -15.25075912475586
    10. 'range' → logprob: -16.75075912475586

Token 333: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -15.000000953674316
    3. 'left' → logprob: -15.750000953674316
    4. '```' → logprob: -16.25
    5. '
' → logprob: -18.125
    6. 'right' → logprob: -20.625
    7. '	for' → logprob: -21.75
    8. '``' → logprob: -22.125
    9. 'from' → logprob: -22.375
    10. '  
' → logprob: -22.625

Token 334: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -5.1093578804284334e-05
    2. ' ' → logprob: -10.375051498413086
    3. 'left' → logprob: -11.375051498413086
    4. ' lef' → logprob: -12.500051498413086
    5. ' _' → logprob: -13.500051498413086
    6. '_' → logprob: -14.125051498413086
    7. ' ' → logprob: -14.125051498413086
    8. '_left' → logprob: -14.375051498413086
    9. ' i' → logprob: -14.625051498413086
    10. '	left' → logprob: -14.875051498413086

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16032403707504272
    2. 'in' → logprob: -1.9103240966796875
    3. ' ' → logprob: -9.410324096679688
    4. ',' → logprob: -12.285324096679688
    5. ')' → logprob: -12.410324096679688
    6. 'In' → logprob: -13.660324096679688
    7. ' ' → logprob: -13.660324096679688
    8. '	in' → logprob: -13.910324096679688
    9. '  ' → logprob: -14.035324096679688
    10. '1' → logprob: -14.410324096679688

Token 336: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740893542766571
    2. 'range' → logprob: -0.9740893840789795
    3. '(range' → logprob: -11.349089622497559
    4. ' ' → logprob: -15.849089622497559
    5. ' N' → logprob: -15.974089622497559
    6. 'N' → logprob: -16.599088668823242
    7. '0' → logprob: -16.849088668823242
    8. '	range' → logprob: -16.849088668823242
    9. ')' → logprob: -17.349088668823242
    10. '(' → logprob: -18.099088668823242

Token 337: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07890014350414276
    2. '(' → logprob: -2.578900098800659
    3. ' (' → logprob: -11.953900337219238
    4. '(
' → logprob: -12.578900337219238
    5. '(n' → logprob: -15.203900337219238
    6. '((' → logprob: -16.703899383544922
    7. '(

' → logprob: -16.953899383544922
    8. 'N' → logprob: -17.078899383544922
    9. '(len' → logprob: -17.328899383544922
    10. '(NUM' → logprob: -17.703899383544922

Token 338: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00032247265335172415
    2. ':' → logprob: -8.875322341918945
    3. ' ):' → logprob: -9.000322341918945
    4. '):
' → logprob: -9.875322341918945
    5. ')' → logprob: -12.500322341918945
    6. '+' → logprob: -13.250322341918945
    7. ' :' → logprob: -14.125322341918945
    8. '():' → logprob: -14.125322341918945
    9. '):
' → logprob: -16.000322341918945
    10. '}:' → logprob: -16.250322341918945

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6728957891464233
    2. ' while' → logprob: -1.7978957891464233
    3. '<|end|>' → logprob: -1.7978957891464233
    4. 'while' → logprob: -1.9228957891464233
    5. '	while' → logprob: -4.922895908355713
    6. '    
' → logprob: -6.047895908355713
    7. '<|end|>' → logprob: -7.422895908355713
    8. '  ' → logprob: -7.547895908355713
    9. ' ' → logprob: -7.672895908355713
    10. '    ' → logprob: -8.297895431518555

Token 340: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08619365841150284
    2. '   ' → logprob: -2.586193561553955
    3. ' while' → logprob: -4.961193561553955
    4. '	while' → logprob: -8.461194038391113
    5. '  ' → logprob: -10.086194038391113
    6. '    
' → logprob: -11.586194038391113
    7. '<|end|>' → logprob: -12.961194038391113
    8. '    ' → logprob: -13.336194038391113
    9. ' ' → logprob: -13.461194038391113
    10. 'While' → logprob: -13.836194038391113

Token 341: ' Cette' (ID: 27383)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -6.349075556499884e-05
    2. '#' → logprob: -9.7500638961792
    3. ' while' → logprob: -13.0000638961792
    4. 'While' → logprob: -13.1250638961792
    5. '   ' → logprob: -14.5000638961792
    6. '	while' → logprob: -15.6250638961792
    7. 'wh' → logprob: -16.625062942504883
    8. 'right' → logprob: -17.000062942504883
    9. '
' → logprob: -17.875062942504883
    10. 'if' → logprob: -18.000062942504883

Token 342: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05331138148903847
    2. ' while' → logprob: -3.053311347961426
    3. '#' → logprob: -5.428311347961426
    4. '   ' → logprob: -9.303311347961426
    5. 'wh' → logprob: -9.428311347961426
    6. ' ' → logprob: -9.928311347961426
    7. ' #' → logprob: -10.303311347961426
    8. '
' → logprob: -12.178311347961426
    9. '	while' → logprob: -12.178311347961426
    10. 'fois' → logprob: -12.178311347961426

Token 343: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21238531172275543
    2. ' while' → logprob: -2.087385416030884
    3. 'while' → logprob: -2.712385416030884
    4. '	while' → logprob: -7.587385177612305
    5. ':' → logprob: -7.962385177612305
    6. '   ' → logprob: -10.337385177612305
    7. ' ' → logprob: -10.837385177612305
    8. ',' → logprob: -11.337385177612305
    9. '    ' → logprob: -11.962385177612305
    10. '  ' → logprob: -12.212385177612305

Token 344: ' vise' (ID: 63639)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.04534028843045235
    2. 'right' → logprob: -3.2953402996063232
    3. '   ' → logprob: -5.420340061187744
    4. ' sum' → logprob: -7.170340061187744
    5. ' not' → logprob: -7.545340061187744
    6. '    ' → logprob: -7.545340061187744
    7. ' bit' → logprob: -7.795340061187744
    8. ' ' → logprob: -8.670340538024902
    9. ' (' → logprob: -9.170340538024902
    10. ' while' → logprob: -9.670340538024902

Token 345: ' à' (ID: 1221)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.20277076959609985
    2. 'right' → logprob: -1.702770709991455
    3. '(right' → logprob: -8.077771186828613
    4. ' sum' → logprob: -8.327771186828613
    5. ' ' → logprob: -8.327771186828613
    6. '   ' → logprob: -8.577771186828613
    7. ' not' → logprob: -9.202771186828613
    8. ' (' → logprob: -9.577771186828613
    9. ' bit' → logprob: -9.577771186828613
    10. '	right' → logprob: -9.952771186828613

Token 346: ' avancer' (ID: 151163)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006752548273652792
    2. ' right' → logprob: -5.0067524909973145
    3. '(right' → logprob: -10.881752967834473
    4. 'while' → logprob: -11.756752967834473
    5. '	right' → logprob: -12.506752967834473
    6. '   ' → logprob: -12.756752967834473
    7. ' ' → logprob: -13.506752967834473
    8. 'left' → logprob: -14.256752967834473
    9. '[right' → logprob: -14.631752967834473
    10. '  ' → logprob: -15.506752967834473

Token 347: ' le' (ID: 505)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.12703613936901093
    2. 'right' → logprob: -2.1270360946655273
    3. '   ' → logprob: -9.377036094665527
    4. '	right' → logprob: -11.252036094665527
    5. '(right' → logprob: -12.752036094665527
    6. ' ' → logprob: -12.877036094665527
    7. ' bit' → logprob: -14.002036094665527
    8. ' while' → logprob: -14.127036094665527
    9. '    ' → logprob: -14.252036094665527
    10. '  ' → logprob: -14.377036094665527

Token 348: ' bord' (ID: 26431)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.002226264216005802
    2. ' right' → logprob: -6.12722635269165
    3. 'while' → logprob: -11.002225875854492
    4. '   ' → logprob: -11.627225875854492
    5. ' ' → logprob: -12.502225875854492
    6. 'if' → logprob: -12.502225875854492
    7. '	right' → logprob: -13.752225875854492
    8. '[right' → logprob: -13.877225875854492
    9. 'left' → logprob: -14.127225875854492
    10. 'r' → logprob: -14.252225875854492

Token 349: ' droit' (ID: 29964)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.19715829193592072
    2. ' right' → logprob: -1.9471583366394043
    3. ' droit' → logprob: -3.5721583366394043
    4. '   ' → logprob: -5.447158336639404
    5. ' droite' → logprob: -6.697158336639404
    6. '_right' → logprob: -6.822158336639404
    7. 'dro' → logprob: -7.572158336639404
    8. '	right' → logprob: -8.447157859802246
    9. ' ' → logprob: -9.072157859802246
    10. '[right' → logprob: -9.572157859802246

Token 350: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05753564462065697
    2. 'while' → logprob: -3.5575356483459473
    3. ' while' → logprob: -4.682535648345947
    4. 'if' → logprob: -5.807535648345947
    5. ' <' → logprob: -6.057535648345947
    6. '  ' → logprob: -6.307535648345947
    7. ' ' → logprob: -6.432535648345947
    8. ' if' → logprob: -6.432535648345947
    9. ' and' → logprob: -6.557535648345947
    10. '    ' → logprob: -6.807535648345947

Token 351: ' segment' (ID: 14806)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0908978059887886
    2. ' right' → logprob: -2.840897798538208
    3. 'segment' → logprob: -3.840897798538208
    4. ' segment' → logprob: -5.090898036956787
    5. 'while' → logprob: -7.965898036956787
    6. ' ' → logprob: -9.340897560119629
    7. '1' → logprob: -9.465897560119629
    8. '   ' → logprob: -9.715897560119629
    9. ' while' → logprob: -10.215897560119629
    10. 'range' → logprob: -10.340897560119629

Token 352: ' aussi' (ID: 9894)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32011252641677856
    2. 'while' → logprob: -1.6951124668121338
    3. ' while' → logprob: -2.445112466812134
    4. '	while' → logprob: -6.070112705230713
    5. '    ' → logprob: -8.195112228393555
    6. '  ' → logprob: -8.195112228393555
    7. '    
' → logprob: -8.570112228393555
    8. ' if' → logprob: -9.320112228393555
    9. '       ' → logprob: -9.320112228393555
    10. ',' → logprob: -9.320112228393555

Token 353: ' loin' (ID: 40875)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08455251157283783
    2. 'while' → logprob: -3.334552526473999
    3. '    ' → logprob: -4.08455228805542
    4. 'long' → logprob: -4.58455228805542
    5. ' while' → logprob: -4.83455228805542
    6. ' longtemps' → logprob: -5.70955228805542
    7. ' long' → logprob: -5.70955228805542
    8. '       ' → logprob: -6.20955228805542
    9. '  ' → logprob: -6.95955228805542
    10. ' ' → logprob: -7.83455228805542

Token 354: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033147744834423065
    2. ' que' → logprob: -4.033147811889648
    3. ' as' → logprob: -5.783147811889648
    4. '    ' → logprob: -6.158147811889648
    5. 'right' → logprob: -6.158147811889648
    6. 'as' → logprob: -6.408147811889648
    7. '       ' → logprob: -6.783147811889648
    8. 'while' → logprob: -6.908147811889648
    9. '  ' → logprob: -7.158147811889648
    10. ' ' → logprob: -7.533147811889648

Token 355: ' possible' (ID: 4149)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.001316308742389083
    2. ' right' → logprob: -6.751316070556641
    3. '(right' → logprob: -9.62631607055664
    4. 'left' → logprob: -9.87631607055664
    5. '   ' → logprob: -11.75131607055664
    6. 'N' → logprob: -12.12631607055664
    7. 'True' → logprob: -12.37631607055664
    8. ' ' → logprob: -12.87631607055664
    9. '	right' → logprob: -13.12631607055664
    10. 'possible' → logprob: -13.37631607055664

Token 356: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03826490417122841
    2. 'while' → logprob: -3.9132649898529053
    3. ' while' → logprob: -4.163264751434326
    4. '    ' → logprob: -7.413264751434326
    5. ' and' → logprob: -8.038265228271484
    6. 'and' → logprob: -8.288265228271484
    7. ',' → logprob: -8.413265228271484
    8. '	while' → logprob: -8.538265228271484
    9. '  ' → logprob: -9.163265228271484
    10. '       ' → logprob: -9.663265228271484

Token 357: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012682810425758362
    2. ' while' → logprob: -5.262682914733887
    3. 'while' → logprob: -5.762682914733887
    4. ':' → logprob: -6.387682914733887
    5. ' and' → logprob: -7.262682914733887
    6. '    ' → logprob: -7.637682914733887
    7. ',' → logprob: -8.012682914733887
    8. '  ' → logprob: -8.137682914733887
    9. '       ' → logprob: -8.137682914733887
    10. ' ' → logprob: -9.387682914733887

Token 358: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18908575177192688
    2. ' while' → logprob: -1.9390857219696045
    3. '   ' → logprob: -3.5640857219696045
    4. '	while' → logprob: -9.064085960388184
    5. '  ' → logprob: -12.689085960388184
    6. ' ' → logprob: -12.939085960388184
    7. '    ' → logprob: -13.064085960388184
    8. 'if' → logprob: -13.564085960388184
    9. 'While' → logprob: -15.314085960388184
    10. '       ' → logprob: -15.439085960388184

Token 359: ' Tant' (ID: 169541)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23676112294197083
    2. ' while' → logprob: -1.7367610931396484
    3. '   ' → logprob: -3.3617610931396484
    4. '	while' → logprob: -9.861761093139648
    5. '  ' → logprob: -13.861761093139648
    6. ' ' → logprob: -14.361761093139648
    7. 'While' → logprob: -14.486761093139648
    8. 'if' → logprob: -14.611761093139648
    9. '    ' → logprob: -14.611761093139648
    10. '
' → logprob: -15.236761093139648

Token 360: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6286091804504395
    2. ' right' → logprob: -0.8786091804504395
    3. 'right' → logprob: -3.1286091804504395
    4. ' sum' → logprob: -5.6286091804504395
    5. 'que' → logprob: -6.3786091804504395
    6. ' bit' → logprob: -7.1286091804504395
    7. '   ' → logprob: -7.6286091804504395
    8. 'sum' → logprob: -8.253608703613281
    9. ' ' → logprob: -8.628608703613281
    10. '(right' → logprob: -8.878608703613281

Token 361: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16026048362255096
    2. ' right' → logprob: -1.9102604389190674
    3. '(right' → logprob: -10.535260200500488
    4. '   ' → logprob: -12.160260200500488
    5. '	right' → logprob: -12.785260200500488
    6. ' ' → logprob: -14.660260200500488
    7. '[right' → logprob: -15.035260200500488
    8. '右' → logprob: -15.785260200500488
    9. 'Right' → logprob: -16.035261154174805
    10. '_right' → logprob: -16.285261154174805

Token 362: ' reste' (ID: 26769)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23007066547870636
    2. '<' → logprob: -1.60507071018219
    3. '<N' → logprob: -5.4800705909729
    4. '<len' → logprob: -7.9800705909729
    5. '<n' → logprob: -9.105071067810059
    6. '<size' → logprob: -12.105071067810059
    7. '<num' → logprob: -12.980071067810059
    8. '<M' → logprob: -13.105071067810059
    9. ' ' → logprob: -13.105071067810059
    10. '<m' → logprob: -13.730071067810059

Token 363: ' inférieur' (ID: 191498)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1968449503183365
    2. '<N' → logprob: -2.196845054626465
    3. ' <' → logprob: -2.696845054626465
    4. '<n' → logprob: -9.821845054626465
    5. '<len' → logprob: -10.196845054626465
    6. '<M' → logprob: -12.821845054626465
    7. '<C' → logprob: -12.946845054626465
    8. ' ' → logprob: -13.571845054626465
    9. '<T' → logprob: -13.696845054626465
    10. '<num' → logprob: -13.821845054626465

Token 364: ' à' (ID: 1221)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8797726035118103
    2. ' à' → logprob: -1.129772663116455
    3. 'to' → logprob: -2.254772663116455
    4. 'à' → logprob: -2.879772663116455
    5. ' to' → logprob: -2.879772663116455
    6. '(N' → logprob: -3.254772663116455
    7. '<N' → logprob: -5.879772663116455
    8. ' N' → logprob: -6.754772663116455
    9. 'and' → logprob: -7.379772663116455
    10. ')' → logprob: -7.879772663116455

Token 365: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00671584764495492
    2. ' N' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.256715774536133
    4. '	N' → logprob: -16.506715774536133
    5. '   ' → logprob: -17.006715774536133
    6. 'n' → logprob: -17.506715774536133
    7. '  ' → logprob: -18.506715774536133
    8. '>N' → logprob: -18.881715774536133
    9. '<N' → logprob: -19.256715774536133
    10. 'len' → logprob: -19.756715774536133

Token 366: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03829542547464371
    2. 'and' → logprob: -3.2882955074310303
    3. '   ' → logprob: -8.66329574584961
    4. 'et' → logprob: -10.16329574584961
    5. ' et' → logprob: -10.53829574584961
    6. ' ' → logprob: -11.66329574584961
    7. '    ' → logprob: -12.41329574584961
    8. ' и' → logprob: -13.66329574584961
    9. '	and' → logprob: -14.03829574584961
    10. '  ' → logprob: -14.78829574584961

Token 367: 'pour' (ID: 52723)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13689024746418
    2. 'and' → logprob: -2.636890172958374
    3. ')' → logprob: -2.886890172958374
    4. ' )' → logprob: -7.636890411376953
    5. 'right' → logprob: -9.761890411376953
    6. ' right' → logprob: -11.011890411376953
    7. ' et' → logprob: -11.261890411376953
    8. ' ' → logprob: -11.386890411376953
    9. 'et' → logprob: -11.636890411376953
    10. 'N' → logprob: -11.886890411376953

Token 368: ' ne' (ID: 453)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9090976715087891
    2. 'N' → logprob: -1.159097671508789
    3. ')' → logprob: -2.159097671508789
    4. 'right' → logprob: -2.284097671508789
    5. ' right' → logprob: -3.409097671508789
    6. ' continuer' → logprob: -5.034097671508789
    7. ' la' → logprob: -5.909097671508789
    8. ' not' → logprob: -6.034097671508789
    9. ' ' → logprob: -6.034097671508789
    10. '<' → logprob: -6.284097671508789

Token 369: ' pas' (ID: 2173)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.957697868347168
    2. ' pas' → logprob: -0.957697868347168
    3. 'pas' → logprob: -2.207697868347168
    4. ' <' → logprob: -4.707697868347168
    5. '<len' → logprob: -5.207697868347168
    6. 'on' → logprob: -5.332697868347168
    7. ' continuer' → logprob: -5.332697868347168
    8. 'moins' → logprob: -5.332697868347168
    9. 'n' → logprob: -5.457697868347168
    10. 'int' → logprob: -5.457697868347168

Token 370: ' sortir' (ID: 55515)
  Prédit: ' dépasser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dépasser' → logprob: -0.23966462910175323
    2. ' dépass' → logprob: -2.2396645545959473
    3. ' ' → logprob: -3.8646645545959473
    4. ' exceed' → logprob: -4.239664554595947
    5. ' dépasse' → logprob: -4.489664554595947
    6. ' surpass' → logprob: -4.614664554595947
    7. '>=' → logprob: -4.614664554595947
    8. ' <' → logprob: -4.739664554595947
    9. ' >=' → logprob: -4.739664554595947
    10. '<' → logprob: -4.989664554595947

Token 371: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.018485398963093758
    2. 'de' → logprob: -4.3934855461120605
    3. ' du' → logprob: -5.6434855461120605
    4. ')' → logprob: -6.5184855461120605
    5. ' des' → logprob: -7.2684855461120605
    6. 'du' → logprob: -8.768485069274902
    7. 'des' → logprob: -10.768485069274902
    8. ' ' → logprob: -11.143485069274902
    9. ' )' → logprob: -11.518485069274902
    10. '   ' → logprob: -11.643485069274902

Token 372: ' tableau' (ID: 67053)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3946472704410553
    2. 'N' → logprob: -1.519647240638733
    3. 'list' → logprob: -4.019647121429443
    4. 'len' → logprob: -4.019647121429443
    5. ')' → logprob: -4.269647121429443
    6. 'liste' → logprob: -4.394647121429443
    7. ' range' → logprob: -4.519647121429443
    8. 'right' → logprob: -5.144647121429443
    9. 'table' → logprob: -5.394647121429443
    10. 'la' → logprob: -5.394647121429443

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29339900612831116
    2. ' and' → logprob: -1.5433989763259888
    3. 'and' → logprob: -3.6683990955352783
    4. ' )' → logprob: -4.543398857116699
    5. '   ' → logprob: -6.043398857116699
    6. 'et' → logprob: -6.793398857116699
    7. ' et' → logprob: -7.168398857116699
    8. '),' → logprob: -9.2933988571167
    9. ' ' → logprob: -10.1683988571167
    10. '    ' → logprob: -10.6683988571167

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12582626938819885
    2. ' and' → logprob: -2.375826358795166
    3. 'and' → logprob: -3.750826358795166
    4. '    ' → logprob: -6.625826358795166
    5. '  ' → logprob: -8.625825881958008
    6. ' ' → logprob: -9.000825881958008
    7. ',' → logprob: -10.500825881958008
    8. ' while' → logprob: -10.500825881958008
    9. '       ' → logprob: -10.750825881958008
    10. 'while' → logprob: -10.875825881958008

Token 375: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18701297044754028
    2. ' and' → logprob: -1.9370129108428955
    3. 'and' → logprob: -3.8120129108428955
    4. ' while' → logprob: -5.937013149261475
    5. 'while' → logprob: -6.937013149261475
    6. '    ' → logprob: -7.562013149261475
    7. ' ' → logprob: -9.687012672424316
    8. '  ' → logprob: -10.062012672424316
    9. '   ' → logprob: -11.187012672424316
    10. '       ' → logprob: -11.187012672424316

Token 376: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7458741664886475
    2. 'and' → logprob: -1.1208741664886475
    3. '   ' → logprob: -1.6208741664886475
    4. '    ' → logprob: -6.620874404907227
    5. '  ' → logprob: -8.745874404907227
    6. 'while' → logprob: -8.870874404907227
    7. ' ' → logprob: -9.120874404907227
    8. 'et' → logprob: -9.245874404907227
    9. ' et' → logprob: -10.120874404907227
    10. ' while' → logprob: -10.245874404907227

Token 377: ' que' (ID: 661)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4003840684890747
    2. 'sum' → logprob: -2.400383949279785
    3. ' (' → logprob: -2.525383949279785
    4. ' bit' → logprob: -3.025383949279785
    5. ' A' → logprob: -3.150383949279785
    6. '(sum' → logprob: -3.150383949279785
    7. 'A' → logprob: -4.525383949279785
    8. '   ' → logprob: -5.025383949279785
    9. '(A' → logprob: -6.025383949279785
    10. 'bit' → logprob: -6.525383949279785

Token 378: ' l' (ID: 305)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.44839242100715637
    2. '(sum' → logprob: -1.573392391204834
    3. ' sum' → logprob: -2.073392391204834
    4. ' (' → logprob: -4.573392391204834
    5. 'right' → logprob: -5.073392391204834
    6. '(right' → logprob: -5.948392391204834
    7. '(bit' → logprob: -6.323392391204834
    8. ' right' → logprob: -6.448392391204834
    9. '(A' → logprob: -6.573392391204834
    10. 'bit' → logprob: -6.698392391204834

Token 379: ''' (ID: 6)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5979580283164978
    2. ' bit' → logprob: -1.5979580879211426
    3. 'sum' → logprob: -2.0979580879211426
    4. ' right' → logprob: -2.8479580879211426
    5. ' (' → logprob: -3.9729580879211426
    6. 'bit' → logprob: -4.222958087921143
    7. '(sum' → logprob: -4.472958087921143
    8. '(bit' → logprob: -5.097958087921143
    9. 'right' → logprob: -5.347958087921143
    10. ' A' → logprob: -5.472958087921143

Token 380: 'élé' (ID: 15228)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1427336484193802
    2. 'bit' → logprob: -2.767733573913574
    3. '(sum' → logprob: -3.767733573913574
    4. 'A' → logprob: -4.142733573913574
    5. 'right' → logprob: -4.392733573913574
    6. ' sum' → logprob: -4.767733573913574
    7. '(bit' → logprob: -5.642733573913574
    8. '(A' → logprob: -6.142733573913574
    9. ' bit' → logprob: -6.517733573913574
    10. ' A' → logprob: -7.017733573913574

Token 381: 'ment' (ID: 508)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.9113616943359375
    2. 'e' → logprob: -1.9113616943359375
    3. ' right' → logprob: -2.6613616943359375
    4. 'A' → logprob: -3.1613616943359375
    5. ' ' → logprob: -3.4113616943359375
    6. '   ' → logprob: -3.5363616943359375
    7. 't' → logprob: -3.5363616943359375
    8. '=' → logprob: -3.7863616943359375
    9. 'sum' → logprob: -3.9113616943359375
    10. '_n' → logprob: -4.0363616943359375

Token 382: ' qu' (ID: 474)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11522142589092255
    2. ' A' → logprob: -2.9902215003967285
    3. '[right' → logprob: -3.2402215003967285
    4. ' at' → logprob: -5.2402215003967285
    5. ' right' → logprob: -5.8652215003967285
    6. '   ' → logprob: -5.9902215003967285
    7. 'right' → logprob: -6.2402215003967285
    8. 's' → logprob: -6.8652215003967285
    9. '[' → logprob: -7.1152215003967285
    10. '[left' → logprob: -7.2402215003967285

Token 383: ''on' (ID: 25812)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0743168592453003
    2. '[right' → logprob: -1.3243168592453003
    3. '[' → logprob: -1.4493168592453003
    4. ' A' → logprob: -2.82431697845459
    5. '   ' → logprob: -3.57431697845459
    6. ' at' → logprob: -4.32431697845459
    7. '[left' → logprob: -4.44931697845459
    8. '[]' → logprob: -4.94931697845459
    9. '[A' → logprob: -5.57431697845459
    10. 's' → logprob: -5.57431697845459

Token 384: ' voud' (ID: 86091)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.7021112442016602
    2. '[right' → logprob: -1.3271112442016602
    3. ' right' → logprob: -1.5771112442016602
    4. 'A' → logprob: -4.20211124420166
    5. ' A' → logprob: -4.95211124420166
    6. 'aj' → logprob: -5.95211124420166
    7. 'd' → logprob: -6.32711124420166
    8. ' ajoute' → logprob: -6.57711124420166
    9. 'int' → logprob: -7.32711124420166
    10. 'n' → logprob: -7.57711124420166

Token 385: 'rait' (ID: 16425)
  Prédit: 'rait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rait' → logprob: -0.6423492431640625
    2. 'ait' → logprob: -0.8923492431640625
    3. 'A' → logprob: -4.2673492431640625
    4. 'ra' → logprob: -4.3923492431640625
    5. 'a' → logprob: -4.7673492431640625
    6. '   ' → logprob: -5.0173492431640625
    7. 'int' → logprob: -5.0173492431640625
    8. 'à' → logprob: -6.0173492431640625
    9. 'ent' → logprob: -6.0173492431640625
    10. 'ut' → logprob: -6.2673492431640625

Token 386: ' ajouter' (ID: 78457)
  Prédit: ' ajouter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -0.18866857886314392
    2. 'aj' → logprob: -1.9386686086654663
    3. '   ' → logprob: -4.563668727874756
    4. ' incl' → logprob: -5.188668727874756
    5. 'Ajouter' → logprob: -6.313668727874756
    6. ' intégrer' → logprob: -6.563668727874756
    7. 'incl' → logprob: -6.688668727874756
    8. 'int' → logprob: -6.688668727874756
    9. '+' → logprob: -6.938668727874756
    10. ' Ajouter' → logprob: -7.563668727874756

Token 387: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6228343844413757
    2. '[right' → logprob: -1.3728344440460205
    3. '   ' → logprob: -2.7478344440460205
    4. ')' → logprob: -3.3728344440460205
    5. 'right' → logprob: -4.247834205627441
    6. ' !=' → logprob: -4.247834205627441
    7. ' not' → logprob: -4.247834205627441
    8. ' at' → logprob: -4.372834205627441
    9. ' right' → logprob: -4.497834205627441
    10. ' to' → logprob: -4.747834205627441

Token 388: ' ce' (ID: 2357)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.389639675617218
    2. ' bit' → logprob: -1.6396396160125732
    3. 'sum' → logprob: -2.7646396160125732
    4. 'right' → logprob: -3.0146396160125732
    5. ' right' → logprob: -5.389639854431152
    6. ' sum' → logprob: -5.639639854431152
    7. 'la' → logprob: -6.264639854431152
    8. ' la' → logprob: -6.264639854431152
    9. 'A' → logprob: -6.889639854431152
    10. 'segment' → logprob: -7.139639854431152

Token 389: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2379617542028427
    2. 'segment' → logprob: -1.612961769104004
    3. ' bit' → logprob: -5.112961769104004
    4. 'bit' → logprob: -5.737961769104004
    5. 'right' → logprob: -6.487961769104004
    6. ' right' → logprob: -7.612961769104004
    7. 'xor' → logprob: -8.112961769104004
    8. ' xor' → logprob: -8.362961769104004
    9. 'sum' → logprob: -8.737961769104004
    10. ')' → logprob: -9.737961769104004

Token 390: ' (' (ID: 350)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.33599188923835754
    2. ')' → logprob: -2.960991859436035
    3. '[left' → logprob: -3.210991859436035
    4. '   ' → logprob: -3.210991859436035
    5. '[' → logprob: -3.835991859436035
    6. ' ^' → logprob: -3.960991859436035
    7. ' !=' → logprob: -3.960991859436035
    8. ' ne' → logprob: -3.960991859436035
    9. ' à' → logprob: -4.335991859436035
    10. ']' → logprob: -4.710991859436035

Token 391: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21323876082897186
    2. ' A' → logprob: -2.4632387161254883
    3. 'right' → logprob: -2.9632387161254883
    4. ' right' → logprob: -3.3382387161254883
    5. ')' → logprob: -4.838238716125488
    6. '   ' → logprob: -5.838238716125488
    7. 'sum' → logprob: -6.213238716125488
    8. ' bit' → logprob: -6.338238716125488
    9. 'bit' → logprob: -6.838238716125488
    10. ' sum' → logprob: -7.338238716125488

Token 392: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.00017636561824474484
    2. '[left' → logprob: -9.375176429748535
    3. 'right' → logprob: -10.375176429748535
    4. ')' → logprob: -10.875176429748535
    5. ')[' → logprob: -11.125176429748535
    6. '   ' → logprob: -11.125176429748535
    7. '[' → logprob: -12.625176429748535
    8. ' [' → logprob: -13.875176429748535
    9. '```' → logprob: -13.875176429748535
    10. '

' → logprob: -14.000176429748535

Token 393: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1153554916381836
    2. ']' → logprob: -2.2403554916381836
    3. ' ])' → logprob: -6.365355491638184
    4. ')' → logprob: -8.115355491638184
    5. ' ]' → logprob: -8.490355491638184
    6. ']))' → logprob: -10.115355491638184
    7. '])
' → logprob: -10.240355491638184
    8. '   ' → logprob: -10.615355491638184
    9. ']])' → logprob: -10.615355491638184
    10. '[' → logprob: -10.740355491638184

Token 394: ' respecte' (ID: 140483)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0731241703033447
    2. ')' → logprob: -1.6981241703033447
    3. ' +' → logprob: -2.0731241703033447
    4. ' <=' → logprob: -2.4481241703033447
    5. '+' → logprob: -3.0731241703033447
    6. ' <' → logprob: -3.1981241703033447
    7. ' &' → logprob: -3.4481241703033447
    8. ' and' → logprob: -3.5731241703033447
    9. ' ==' → logprob: -3.6981241703033447
    10. ' !=' → logprob: -3.9481241703033447

Token 395: ' une' (ID: 2463)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.3696529865264893
    2. ' not' → logprob: -1.3696529865264893
    3. ' bit' → logprob: -1.7446529865264893
    4. ' right' → logprob: -2.1196529865264893
    5. ' sum' → logprob: -2.7446529865264893
    6. ' la' → logprob: -3.4946529865264893
    7. ' (' → logprob: -3.6196529865264893
    8. '   ' → logprob: -4.61965274810791
    9. 'right' → logprob: -4.61965274810791
    10. 'not' → logprob: -4.86965274810791

Token 396: ' condition' (ID: 7060)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8694576621055603
    2. ' not' → logprob: -1.244457721710205
    3. ' &' → logprob: -2.244457721710205
    4. 'and' → logprob: -2.869457721710205
    5. ' +' → logprob: -3.494457721710205
    6. ' condition' → logprob: -3.494457721710205
    7. 'not' → logprob: -4.119457721710205
    8. 'condition' → logprob: -4.619457721710205
    9. '+' → logprob: -4.869457721710205
    10. ' <=' → logprob: -4.869457721710205

Token 397: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.032780617475509644
    2. 'and' → logprob: -3.907780647277832
    3. '   ' → logprob: -5.282780647277832
    4. ' et' → logprob: -5.657780647277832
    5. ':' → logprob: -6.157780647277832
    6. ' ' → logprob: -8.157780647277832
    7. ' de' → logprob: -8.157780647277832
    8. 'et' → logprob: -8.282780647277832
    9. '  ' → logprob: -8.907780647277832
    10. ' :' → logprob: -9.032780647277832

Token 398: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08095680177211761
    2. 'and' → logprob: -2.5809566974639893
    3. '   ' → logprob: -6.830956935882568
    4. ' et' → logprob: -7.830956935882568
    5. 'et' → logprob: -8.33095645904541
    6. ':' → logprob: -9.08095645904541
    7. ' ' → logprob: -9.45595645904541
    8. '  ' → logprob: -10.58095645904541
    9. ' (' → logprob: -10.95595645904541
    10. ' not' → logprob: -11.33095645904541

Token 399: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14556562900543213
    2. 'and' → logprob: -2.0205655097961426
    3. 'et' → logprob: -7.020565509796143
    4. ' et' → logprob: -7.020565509796143
    5. '   ' → logprob: -7.270565509796143
    6. ':' → logprob: -8.7705659866333
    7. ' not' → logprob: -9.6455659866333
    8. ' ' → logprob: -9.8955659866333
    9. 'not' → logprob: -10.6455659866333
    10. '    ' → logprob: -11.5205659866333

Token 400: ' La' (ID: 3038)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1424684077501297
    2. 'and' → logprob: -2.1424684524536133
    3. ' right' → logprob: -5.142468452453613
    4. 'right' → logprob: -5.642468452453613
    5. ' sum' → logprob: -6.142468452453613
    6. 'sum' → logprob: -6.642468452453613
    7. '   ' → logprob: -7.392468452453613
    8. ' et' → logprob: -8.392468452453613
    9. ' (' → logprob: -8.517468452453613
    10. 'et' → logprob: -8.767468452453613

Token 401: ' condition' (ID: 7060)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.3355042338371277
    2. ' sum' → logprob: -1.8355042934417725
    3. 'bit' → logprob: -3.4605042934417725
    4. 'sum' → logprob: -3.4605042934417725
    5. ' A' → logprob: -3.9605042934417725
    6. ' right' → logprob: -4.460504055023193
    7. ' not' → logprob: -4.710504055023193
    8. 'A' → logprob: -5.585504055023193
    9. ' and' → logprob: -5.585504055023193
    10. ' (' → logprob: -5.710504055023193

Token 402: ' :' (ID: 712)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8340952396392822
    2. ' =' → logprob: -1.2090952396392822
    3. '=' → logprob: -2.2090952396392822
    4. ':' → logprob: -2.7090952396392822
    5. ' ==' → logprob: -3.3340952396392822
    6. 'and' → logprob: -3.8340952396392822
    7. ' not' → logprob: -4.959095001220703
    8. '   ' → logprob: -5.584095001220703
    9. '==' → logprob: -5.709095001220703
    10. ' is' → logprob: -5.834095001220703

Token 403: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5598352551460266
    2. ' sum' → logprob: -0.9348352551460266
    3. '(sum' → logprob: -3.809835195541382
    4. 'right' → logprob: -5.059835433959961
    5. ' right' → logprob: -5.559835433959961
    6. ' (' → logprob: -6.434835433959961
    7. ' bit' → logprob: -7.434835433959961
    8. 'bit' → logprob: -7.809835433959961
    9. '(right' → logprob: -8.184835433959961
    10. '   ' → logprob: -8.434835433959961

Token 404: ' somme' (ID: 64484)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.41012144088745117
    2. 'sum' → logprob: -1.2851214408874512
    3. ' somme' → logprob: -3.535121440887451
    4. ' +' → logprob: -4.160121440887451
    5. '(sum' → logprob: -5.285121440887451
    6. '+' → logprob: -6.035121440887451
    7. ' ' → logprob: -6.035121440887451
    8. 's' → logprob: -6.660121440887451
    9. ' suma' → logprob: -7.410121440887451
    10. '   ' → logprob: -7.535121440887451

Token 405: ' des' (ID: 731)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07494892925024033
    2. '+' → logprob: -2.699949026107788
    3. '_n' → logprob: -5.574948787689209
    4. ' plus' → logprob: -8.074949264526367
    5. '   ' → logprob: -8.449949264526367
    6. ' ' → logprob: -9.074949264526367
    7. '_' → logprob: -9.074949264526367
    8. 'n' → logprob: -9.074949264526367
    9. '+n' → logprob: -9.199949264526367
    10. 'sum' → logprob: -9.824949264526367

Token 406: ' éléments' (ID: 57375)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3153955638408661
    2. 'sum' → logprob: -1.3153955936431885
    3. ' bit' → logprob: -7.315395355224609
    4. ' +' → logprob: -7.565395355224609
    5. ' A' → logprob: -7.940395355224609
    6. '(sum' → logprob: -8.56539535522461
    7. ' ' → logprob: -8.94039535522461
    8. ' (' → logprob: -9.56539535522461
    9. 'bit' → logprob: -10.31539535522461
    10. '+' → logprob: -10.31539535522461

Token 407: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03378032147884369
    2. '+' → logprob: -3.408780336380005
    3. '   ' → logprob: -10.033780097961426
    4. ' ' → logprob: -10.283780097961426
    5. ' plus' → logprob: -10.783780097961426
    6. '_n' → logprob: -12.033780097961426
    7. '  ' → logprob: -12.908780097961426
    8. '_' → logprob: -12.908780097961426
    9. '[right' → logprob: -13.033780097961426
    10. '[left' → logprob: -13.158780097961426

Token 408: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.20142823457717896
    2. 'A' → logprob: -1.7014281749725342
    3. '   ' → logprob: -11.451428413391113
    4. ' ' → logprob: -12.826428413391113
    5. '	A' → logprob: -14.701428413391113
    6. 'a' → logprob: -15.701428413391113
    7. '```' → logprob: -15.701428413391113
    8. '(A' → logprob: -15.951428413391113
    9. '    ' → logprob: -16.326427459716797
    10. '=A' → logprob: -16.451427459716797

Token 409: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -1.4498052223643754e-05
    2. 'right' → logprob: -11.375014305114746
    3. '[left' → logprob: -13.625014305114746
    4. '[' → logprob: -14.125014305114746
    5. '[
' → logprob: -14.750014305114746
    6. ' [' → logprob: -15.500014305114746
    7. '	right' → logprob: -15.750014305114746
    8. '   ' → logprob: -16.625015258789062
    9. ' right' → logprob: -17.125015258789062
    10. '(right' → logprob: -17.250015258789062

Token 410: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32024624943733215
    2. ')' → logprob: -1.4452462196350098
    3. '[right' → logprob: -4.19524621963501
    4. '])' → logprob: -4.94524621963501
    5. ' <=' → logprob: -5.44524621963501
    6. '[' → logprob: -5.82024621963501
    7. ' ]' → logprob: -6.57024621963501
    8. ' )' → logprob: -6.69524621963501
    9. ']<=' → logprob: -6.94524621963501
    10. '[left' → logprob: -6.94524621963501

Token 411: ' doit' (ID: 21822)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.023342963308095932
    2. ' +' → logprob: -4.023343086242676
    3. '<=' → logprob: -6.273343086242676
    4. ')' → logprob: -6.398343086242676
    5. '+' → logprob: -7.023343086242676
    6. ' <' → logprob: -8.023343086242676
    7. ' ' → logprob: -8.773343086242676
    8. '   ' → logprob: -9.648343086242676
    9. ')<=' → logprob: -9.773343086242676
    10. ' plus' → logprob: -9.898343086242676

Token 412: ' être' (ID: 9104)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.003065653145313263
    2. '<=' → logprob: -6.003065586090088
    3. ' be' → logprob: -8.503066062927246
    4. ' +' → logprob: -9.003066062927246
    5. '+' → logprob: -9.628066062927246
    6. ' <' → logprob: -9.753066062927246
    7. ' ' → logprob: -9.878066062927246
    8. ' >=' → logprob: -10.253066062927246
    9. ' ≤' → logprob: -11.628066062927246
    10. ')<=' → logprob: -12.128066062927246

Token 413: ' ég' (ID: 33150)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.030637148767709732
    2. '<=' → logprob: -3.530637264251709
    3. ' ' → logprob: -8.03063678741455
    4. ' <' → logprob: -8.15563678741455
    5. '<' → logprob: -9.03063678741455
    6. ' ≤' → logprob: -9.28063678741455
    7. ' less' → logprob: -11.53063678741455
    8. ' +' → logprob: -11.65563678741455
    9. ' plus' → logprob: -11.78063678741455
    10. '+' → logprob: -11.90563678741455

Token 414: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0033507244661450386
    2. 'al' → logprob: -5.878350734710693
    3. 'le' → logprob: -9.503350257873535
    4. '<=' → logprob: -10.253350257873535
    5. '   ' → logprob: -10.378350257873535
    6. '```' → logprob: -10.628350257873535
    7. '{' → logprob: -10.753350257873535
    8. '<' → logprob: -11.003350257873535
    9. 'alee' → logprob: -11.003350257873535
    10. '#' → logprob: -11.065850257873535

Token 415: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1103440448641777
    2. '   ' → logprob: -3.6103439331054688
    3. ' sum' → logprob: -3.9853439331054688
    4. 'sum' → logprob: -4.110343933105469
    5. ' ' → logprob: -4.485343933105469
    6. 'à' → logprob: -4.610343933105469
    7. '=' → logprob: -5.110343933105469
    8. ' aux' → logprob: -5.485343933105469
    9. ' to' → logprob: -6.235343933105469
    10. ' =' → logprob: -6.485343933105469

Token 416: ' xor' (ID: 106402)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4745965301990509
    2. ' sum' → logprob: -1.2245965003967285
    3. ' bit' → logprob: -3.0995965003967285
    4. 'bit' → logprob: -3.4745965003967285
    5. '(sum' → logprob: -5.8495965003967285
    6. ' somme' → logprob: -6.2245965003967285
    7. 'xor' → logprob: -6.9745965003967285
    8. '(bit' → logprob: -7.4745965003967285
    9. ' (' → logprob: -7.8495965003967285
    10. ' xor' → logprob: -7.9745965003967285

Token 417: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0256870985031128
    2. 'sum' → logprob: -1.7756870985031128
    3. '_n' → logprob: -2.4006872177124023
    4. ' (' → logprob: -2.7756872177124023
    5. '(' → logprob: -2.9006872177124023
    6. ' ' → logprob: -3.4006872177124023
    7. ' and' → logprob: -3.5256872177124023
    8. ' of' → logprob: -3.5256872177124023
    9. '(sum' → logprob: -3.6506872177124023
    10. ' ==' → logprob: -3.6506872177124023

Token 418: ' ces' (ID: 10532)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.8039312362670898
    2. 'bit' → logprob: -1.3039312362670898
    3. 'sum' → logprob: -1.5539312362670898
    4. ' sum' → logprob: -2.80393123626709
    5. '(bit' → logprob: -5.30393123626709
    6. ' (' → logprob: -6.55393123626709
    7. '(sum' → logprob: -6.67893123626709
    8. '   ' → logprob: -7.42893123626709
    9. ' ' → logprob: -7.80393123626709
    10. '  ' → logprob: -10.17893123626709

Token 419: ' mêmes' (ID: 71634)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -1.0899735689163208
    2. ' ^' → logprob: -2.0899734497070312
    3. 'elements' → logprob: -2.5899734497070312
    4. ' ' → logprob: -2.7149734497070312
    5. ' sum' → logprob: -2.7149734497070312
    6. 'élé' → logprob: -2.9649734497070312
    7. 'sum' → logprob: -2.9649734497070312
    8. '_' → logprob: -3.2149734497070312
    9. ' bit' → logprob: -3.5899734497070312
    10. ' +' → logprob: -3.5899734497070312

Token 420: ' éléments' (ID: 57375)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.9365656971931458
    2. ' sum' → logprob: -1.311565637588501
    3. ' +' → logprob: -2.311565637588501
    4. 'sum' → logprob: -2.686565637588501
    5. ' ' → logprob: -2.811565637588501
    6. ' A' → logprob: -2.936565637588501
    7. 'elements' → logprob: -3.811565637588501
    8. ' bit' → logprob: -4.68656587600708
    9. ' right' → logprob: -5.18656587600708
    10. 'A' → logprob: -5.56156587600708

Token 421: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4556254744529724
    2. ' and' → logprob: -1.0806255340576172
    3. 'and' → logprob: -3.705625534057617
    4. ':' → logprob: -7.705625534057617
    5. ' et' → logprob: -7.830625534057617
    6. '    ' → logprob: -8.205625534057617
    7. ' ' → logprob: -8.955625534057617
    8. '  ' → logprob: -9.080625534057617
    9. ' if' → logprob: -9.455625534057617
    10. ',' → logprob: -9.705625534057617

Token 422: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.0854043960571289
    2. 'A' → logprob: -2.585404396057129
    3. ' (' → logprob: -5.210404396057129
    4. '(A' → logprob: -7.585404396057129
    5. ' ' → logprob: -8.085404396057129
    6. '(' → logprob: -9.085404396057129
    7. '   ' → logprob: -10.335404396057129
    8. '  ' → logprob: -10.710404396057129
    9. '	A' → logprob: -12.210404396057129
    10. ' (
' → logprob: -12.460404396057129

Token 423: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.00010914575977949426
    2. '[left' → logprob: -10.25010871887207
    3. 'right' → logprob: -10.37510871887207
    4. 'A' → logprob: -11.12510871887207
    5. '[' → logprob: -11.75010871887207
    6. '_right' → logprob: -11.87510871887207
    7. '[next' → logprob: -13.12510871887207
    8. '_[' → logprob: -13.12510871887207
    9. ' [' → logprob: -13.25010871887207
    10. '[
' → logprob: -13.87510871887207

Token 424: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6998987793922424
    2. '):' → logprob: -1.5748987197875977
    3. ']):' → logprob: -2.3248987197875977
    4. ')' → logprob: -2.4498987197875977
    5. '])' → logprob: -2.9498987197875977
    6. ']:' → logprob: -3.9498987197875977
    7. 'right' → logprob: -5.074898719787598
    8. '+' → logprob: -5.699898719787598
    9. '):
' → logprob: -5.699898719787598
    10. ':' → logprob: -5.949898719787598

Token 425: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10273458808660507
    2. 'and' → logprob: -2.3527345657348633
    3. '   ' → logprob: -6.102734565734863
    4. 'while' → logprob: -9.352734565734863
    5. 'right' → logprob: -9.727734565734863
    6. ' while' → logprob: -9.852734565734863
    7. ' et' → logprob: -11.227734565734863
    8. 'if' → logprob: -11.227734565734863
    9. ' if' → logprob: -11.477734565734863
    10. ' ' → logprob: -11.727734565734863

Token 426: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4267376661300659
    2. 'while' → logprob: -1.176737666130066
    3. ' while' → logprob: -3.3017377853393555
    4. 'and' → logprob: -6.8017377853393555
    5. ' and' → logprob: -7.0517377853393555
    6. '	while' → logprob: -8.301737785339355
    7. 'if' → logprob: -11.676737785339355
    8. '    ' → logprob: -12.051737785339355
    9. '       ' → logprob: -12.426737785339355
    10. ':' → logprob: -12.551737785339355

Token 427: ' sum' (ID: 4215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5129550099372864
    2. 'while' → logprob: -1.2629549503326416
    3. ' while' → logprob: -2.1379549503326416
    4. '	while' → logprob: -7.512955188751221
    5. '   ' → logprob: -12.387954711914062
    6. '       ' → logprob: -12.762954711914062
    7. '    ' → logprob: -13.012954711914062
    8. '    
' → logprob: -13.137954711914062
    9. 'While' → logprob: -13.137954711914062
    10. '
' → logprob: -13.262954711914062

Token 428: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0014710607938468456
    2. '_' → logprob: -7.001471042633057
    3. ' +' → logprob: -8.251471519470215
    4. '+' → logprob: -8.251471519470215
    5. '+n' → logprob: -10.626471519470215
    6. 'n' → logprob: -11.876471519470215
    7. ' _' → logprob: -13.001471519470215
    8. '==' → logprob: -14.126471519470215
    9. '   ' → logprob: -14.251471519470215
    10. ' ==' → logprob: -14.626471519470215

Token 429: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132679760456085
    2. '+' → logprob: -1.3132679462432861
    3. '+A' → logprob: -12.438267707824707
    4. ' ' → logprob: -14.813267707824707
    5. '＋' → logprob: -15.063267707824707
    6. ' plus' → logprob: -15.063267707824707
    7. ' ' → logprob: -15.438267707824707
    8. '==' → logprob: -15.563267707824707
    9. ' +
' → logprob: -15.688267707824707
    10. '+=' → logprob: -16.938268661499023

Token 430: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006266565760597587
    2. ' A' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.875627517700195
    4. ' ' → logprob: -17.625627517700195
    5. '	A' → logprob: -17.750627517700195
    6. 'a' → logprob: -17.875627517700195
    7. '  ' → logprob: -19.500627517700195
    8. '```' → logprob: -20.125627517700195
    9. '=A' → logprob: -20.125627517700195
    10. '(A' → logprob: -20.625627517700195

Token 431: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -3.35706390615087e-05
    2. 'right' → logprob: -10.500033378601074
    3. '[' → logprob: -12.875033378601074
    4. '[left' → logprob: -13.125033378601074
    5. '	right' → logprob: -15.000033378601074
    6. '_right' → logprob: -15.125033378601074
    7. '[
' → logprob: -15.250033378601074
    8. '\[' → logprob: -16.12503433227539
    9. '   ' → logprob: -16.25003433227539
    10. '[next' → logprob: -16.62503433227539

Token 432: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5961048007011414
    2. ' ==' → logprob: -1.0961048603057861
    3. '==' → logprob: -2.346104860305786
    4. ' <=' → logprob: -4.346104621887207
    5. '<=' → logprob: -5.971104621887207
    6. ' )' → logprob: -6.096104621887207
    7. ')==' → logprob: -8.221104621887207
    8. ' and' → logprob: -8.221104621887207
    9. ' !=' → logprob: -8.346104621887207
    10. ' ' → logprob: -8.596104621887207

Token 433: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2107410728931427
    2. '==' → logprob: -1.9607410430908203
    3. ' <=' → logprob: -3.2107410430908203
    4. '<=' → logprob: -5.21074104309082
    5. ' !=' → logprob: -6.08574104309082
    6. '!=' → logprob: -7.71074104309082
    7. ' >=' → logprob: -8.21074104309082
    8. '+' → logprob: -9.08574104309082
    9. '>=' → logprob: -9.08574104309082
    10. ' +' → logprob: -9.46074104309082

Token 434: ' sum' (ID: 4215)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.44845953583717346
    2. 'bit' → logprob: -1.073459506034851
    3. '(bit' → logprob: -4.073459625244141
    4. ' (' → logprob: -6.698459625244141
    5. 'sum' → logprob: -7.323459625244141
    6. ' sum' → logprob: -7.573459625244141
    7. '(sum' → logprob: -9.19845962524414
    8. '(' → logprob: -11.57345962524414
    9. 'xor' → logprob: -12.07345962524414
    10. ' xor' → logprob: -12.32345962524414

Token 435: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0002658655575942248
    2. '_' → logprob: -8.250266075134277
    3. 'n' → logprob: -13.500266075134277
    4. ' _' → logprob: -13.625266075134277
    5. 'bit' → logprob: -14.250266075134277
    6. '_bit' → logprob: -15.000266075134277
    7. '​' → logprob: -16.25026512145996
    8. 'right' → logprob: -16.37526512145996
    9. '_)' → logprob: -16.50026512145996
    10. '+' → logprob: -16.75026512145996

Token 436: ' ^' (ID: 7602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.40060293674468994
    2. '+' → logprob: -1.27560293674469
    3. ' ^' → logprob: -3.1506028175354004
    4. '^' → logprob: -5.1506028175354
    5. ' ' → logprob: -6.5256028175354
    6. 'A' → logprob: -8.525603294372559
    7. ' bit' → logprob: -9.025603294372559
    8. '   ' → logprob: -9.150603294372559
    9. ' A' → logprob: -9.275603294372559
    10. 'bit' → logprob: -10.275603294372559

Token 437: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01104935072362423
    2. ' A' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.761049270629883
    4. '   ' → logprob: -14.886049270629883
    5. '  ' → logprob: -17.011049270629883
    6. '	A' → logprob: -17.886049270629883
    7. 'right' → logprob: -18.886049270629883
    8. ' ' → logprob: -19.261049270629883
    9. '_A' → logprob: -19.511049270629883
    10. '(A' → logprob: -19.511049270629883

Token 438: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.0005208624061197042
    2. 'right' → logprob: -7.625520706176758
    3. '_right' → logprob: -11.125520706176758
    4. '_n' → logprob: -11.500520706176758
    5. '   ' → logprob: -13.000520706176758
    6. '[left' → logprob: -13.750520706176758
    7. '[' → logprob: -13.750520706176758
    8. '	right' → logprob: -14.000520706176758
    9. 'n' → logprob: -14.250520706176758
    10. '_[' → logprob: -14.500520706176758

Token 439: ']
' (ID: 1592)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17946003377437592
    2. '):
' → logprob: -2.429460048675537
    3. ')' → logprob: -3.054460048675537
    4. ':' → logprob: -3.679460048675537
    5. '   ' → logprob: -6.179460048675537
    6. ' and' → logprob: -7.304460048675537
    7. ':
' → logprob: -7.679460048675537
    8. ' ):' → logprob: -9.054459571838379
    9. 'and' → logprob: -9.179459571838379
    10. '):
' → logprob: -10.304459571838379

Token 440: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2715216875076294
    2. '   ' → logprob: -1.7715216875076294
    3. 'and' → logprob: -2.89652156829834
    4. ':' → logprob: -4.52152156829834
    5. ' if' → logprob: -7.64652156829834
    6. ':
' → logprob: -7.77152156829834
    7. 'if' → logprob: -8.77152156829834
    8. ' while' → logprob: -9.02152156829834
    9. ',' → logprob: -9.27152156829834
    10. ')' → logprob: -9.39652156829834

Token 441: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5591250061988831
    2. 'while' → logprob: -1.4341249465942383
    3. ' while' → logprob: -1.6841249465942383
    4. '	while' → logprob: -5.809124946594238
    5. ':' → logprob: -7.059124946594238
    6. ' and' → logprob: -8.309124946594238
    7. 'and' → logprob: -9.684124946594238
    8. '       ' → logprob: -10.184124946594238
    9. 'While' → logprob: -10.309124946594238
    10. ':
' → logprob: -10.434124946594238

Token 442: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.663728654384613
    2. 'while' → logprob: -1.0387287139892578
    3. ' while' → logprob: -2.038728713989258
    4. '	while' → logprob: -7.163728713989258
    5. ':' → logprob: -9.038728713989258
    6. '       ' → logprob: -11.538728713989258
    7. 'if' → logprob: -11.538728713989258
    8. ' and' → logprob: -11.663728713989258
    9. ')' → logprob: -12.038728713989258
    10. '    ' → logprob: -12.163728713989258

Token 443: ' la' (ID: 557)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0263502337038517
    2. 'right' → logprob: -3.776350259780884
    3. ' sum' → logprob: -6.276350021362305
    4. ' not' → logprob: -7.276350021362305
    5. ' ' → logprob: -8.776350021362305
    6. 'sum' → logprob: -9.151350021362305
    7. ' A' → logprob: -9.401350021362305
    8. 'A' → logprob: -9.776350021362305
    9. ' ' → logprob: -10.276350021362305
    10. '   ' → logprob: -11.026350021362305

Token 444: ' condition' (ID: 7060)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6371419429779053
    2. 'right' → logprob: -0.7621419429779053
    3. ' sum' → logprob: -6.512142181396484
    4. 'sum' → logprob: -6.762142181396484
    5. 'condition' → logprob: -7.262142181396484
    6. ' condition' → logprob: -7.887142181396484
    7. 'while' → logprob: -8.262142181396484
    8. ' while' → logprob: -9.012142181396484
    9. ' ' → logprob: -9.137142181396484
    10. ' not' → logprob: -10.012142181396484

Token 445: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29631903767585754
    2. ' and' → logprob: -1.5463190078735352
    3. 'and' → logprob: -3.421319007873535
    4. 'right' → logprob: -5.421319007873535
    5. ' :' → logprob: -5.671319007873535
    6. ' right' → logprob: -6.421319007873535
    7. '   ' → logprob: -7.921319007873535
    8. ' et' → logprob: -8.046319007873535
    9. 'et' → logprob: -8.296319007873535
    10. ':
' → logprob: -9.671319007873535

Token 446: ' vraie' (ID: 105841)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.39646777510643005
    2. 'v' → logprob: -1.6464678049087524
    3. ' True' → logprob: -2.146467685699463
    4. 'true' → logprob: -4.646467685699463
    5. 's' → logprob: -5.521467685699463
    6. 'right' → logprob: -6.396467685699463
    7. ' true' → logprob: -7.396467685699463
    8. 'sum' → logprob: -7.396467685699463
    9. '   ' → logprob: -7.896467685699463
    10. ' right' → logprob: -8.271468162536621

Token 447: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3907007575035095
    2. ' and' → logprob: -1.6407008171081543
    3. '   ' → logprob: -2.1407008171081543
    4. ':
' → logprob: -5.015700817108154
    5. 'and' → logprob: -5.890700817108154
    6. ' :' → logprob: -6.640700817108154
    7. '       ' → logprob: -7.765700817108154
    8. '):' → logprob: -8.140700340270996
    9. ',' → logprob: -8.390700340270996
    10. ' :
' → logprob: -9.640700340270996

Token 448: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07283861935138702
    2. ' right' → logprob: -3.072838544845581
    3. '       ' → logprob: -4.44783878326416
    4. 'right' → logprob: -4.94783878326416
    5. '    ' → logprob: -5.82283878326416
    6. ' while' → logprob: -6.69783878326416
    7. ':' → logprob: -7.94783878326416
    8. 'while' → logprob: -8.94783878326416
    9. '   ' → logprob: -8.94783878326416
    10. '	right' → logprob: -9.32283878326416

Token 449: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19826212525367737
    2. 'right' → logprob: -2.6982622146606445
    3. ' right' → logprob: -3.3232622146606445
    4. 'sum' → logprob: -3.8232622146606445
    5. 'add' → logprob: -4.3232622146606445
    6. '#' → logprob: -4.8232622146606445
    7. ' add' → logprob: -4.8232622146606445
    8. '    ' → logprob: -4.9482622146606445
    9. ' sum' → logprob: -5.6982622146606445
    10. 'while' → logprob: -6.0732622146606445

Token 450: ' incl' (ID: 11368)
  Prédit: ' ajouter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -0.6422895193099976
    2. '   ' → logprob: -1.1422895193099976
    3. ' right' → logprob: -3.142289638519287
    4. 'right' → logprob: -3.392289638519287
    5. ' add' → logprob: -3.517289638519287
    6. 'add' → logprob: -3.642289638519287
    7. ' continuer' → logprob: -4.767289638519287
    8. '#' → logprob: -5.642289638519287
    9. 'sum' → logprob: -6.392289638519287
    10. 'aj' → logprob: -6.642289638519287

Token 451: 'ure' (ID: 627)
  Prédit: 'ude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ude' → logprob: -0.12124190479516983
    2. 'uder' → logprob: -2.246241807937622
    3. 'ud' → logprob: -5.871242046356201
    4. 'udir' → logprob: -6.621242046356201
    5. '   ' → logprob: -7.121242046356201
    6. 'u' → logprob: -7.121242046356201
    7. 'uer' → logprob: -7.746242046356201
    8. 'uire' → logprob: -7.871242046356201
    9. 'user' → logprob: -7.996242046356201
    10. 'right' → logprob: -8.246241569519043

Token 452: ' l' (ID: 305)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.18237510323524475
    2. 'A' → logprob: -1.8073750734329224
    3. ' right' → logprob: -6.682374954223633
    4. '   ' → logprob: -7.307374954223633
    5. ' ' → logprob: -7.807374954223633
    6. 'right' → logprob: -8.307374954223633
    7. '	A' → logprob: -11.557374954223633
    8. '  ' → logprob: -11.682374954223633
    9. ' ' → logprob: -11.807374954223633
    10. '    ' → logprob: -12.182374954223633

Token 453: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24618835747241974
    2. ' A' → logprob: -1.7461884021759033
    3. 'right' → logprob: -3.8711884021759033
    4. ' right' → logprob: -3.8711884021759033
    5. '[right' → logprob: -7.371188163757324
    6. 'ight' → logprob: -7.621188163757324
    7. '   ' → logprob: -7.871188163757324
    8. ' ' → logprob: -9.121188163757324
    9. '+' → logprob: -10.121188163757324
    10. 'e' → logprob: -10.246188163757324

Token 454: 'élé' (ID: 15228)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.3857104778289795
    2. 'A' → logprob: -1.5107104778289795
    3. 'right' → logprob: -2.7607104778289795
    4. ' right' → logprob: -3.7607104778289795
    5. ' A' → logprob: -5.260710716247559
    6. '[' → logprob: -6.135710716247559
    7. '   ' → logprob: -6.385710716247559
    8. ' ' → logprob: -6.885710716247559
    9. ']' → logprob: -7.010710716247559
    10. ')' → logprob: -8.385710716247559

Token 455: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0004230475169606507
    2. '   ' → logprob: -8.625423431396484
    3. 'ent' → logprob: -9.500423431396484
    4. 'ement' → logprob: -10.125423431396484
    5. ']' → logprob: -10.500423431396484
    6. '_' → logprob: -11.375423431396484
    7. 'ément' → logprob: -11.375423431396484
    8. ')' → logprob: -11.500423431396484
    9. ' ment' → logprob: -11.750423431396484
    10. '       ' → logprob: -12.000423431396484

Token 456: ' A' (ID: 355)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.7467836141586304
    2. '   ' → logprob: -1.6217836141586304
    3. ' right' → logprob: -1.7467836141586304
    4. 'A' → logprob: -2.87178373336792
    5. 'right' → logprob: -2.99678373336792
    6. ' A' → logprob: -3.24678373336792
    7. '[next' → logprob: -6.74678373336792
    8. '    ' → logprob: -6.74678373336792
    9. ' de' → logprob: -7.12178373336792
    10. ' ' → logprob: -7.12178373336792

Token 457: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.00018506382184568793
    2. 'right' → logprob: -9.000185012817383
    3. '   ' → logprob: -10.375185012817383
    4. '[' → logprob: -10.875185012817383
    5. '[left' → logprob: -11.750185012817383
    6. '\[' → logprob: -14.000185012817383
    7. '	right' → logprob: -14.750185012817383
    8. ' [' → logprob: -15.125185012817383
    9. '       ' → logprob: -15.250185012817383
    10. ',right' → logprob: -15.500185012817383

Token 458: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6412725448608398
    2. '])' → logprob: -0.7662725448608398
    3. ')' → logprob: -5.51627254486084
    4. ' ]' → logprob: -6.26627254486084
    5. ' ])' → logprob: -6.89127254486084
    6. '[right' → logprob: -7.89127254486084
    7. ' )' → logprob: -8.39127254486084
    8. 'right' → logprob: -8.51627254486084
    9. '   ' → logprob: -9.01627254486084
    10. '],' → logprob: -9.14127254486084

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029843395575881004
    2. ':' → logprob: -4.654843330383301
    3. ' while' → logprob: -5.279843330383301
    4. 'while' → logprob: -5.279843330383301
    5. ' and' → logprob: -5.654843330383301
    6. ' if' → logprob: -6.029843330383301
    7. 'if' → logprob: -6.404843330383301
    8. ':
' → logprob: -7.404843330383301
    9. 'and' → logprob: -8.0298433303833
    10. ')' → logprob: -8.6548433303833

Token 460: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10925934463739395
    2. 'while' (adapté à ' while') → logprob: -2.8592593669891357
    3. ' while' → logprob: -3.1092593669891357
    4. ' if' → logprob: -7.609259128570557
    5. '	while' → logprob: -7.859259128570557
    6. 'if' → logprob: -7.859259128570557
    7. '       ' → logprob: -8.984259605407715
    8. ':' → logprob: -9.609259605407715
    9. '    
' → logprob: -10.359259605407715
    10. ' and' → logprob: -11.109259605407715

Token 461: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.00018422940047457814
    2. 'right' → logprob: -8.625184059143066
    3. ' ' → logprob: -12.625184059143066
    4. '(right' → logprob: -14.875184059143066
    5. ' ' → logprob: -15.000184059143066
    6. '	right' → logprob: -15.125184059143066
    7. ' (' → logprob: -15.250184059143066
    8. 'Right' → logprob: -16.750185012817383
    9. ' left' → logprob: -17.625185012817383
    10. ' sum' → logprob: -18.000185012817383

Token 462: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03512599691748619
    2. '<' → logprob: -3.410125970840454
    3. '<N' → logprob: -6.535126209259033
    4. '<len' → logprob: -11.285125732421875
    5. '<n' → logprob: -11.410125732421875
    6. ' ' → logprob: -13.285125732421875
    7. '<size' → logprob: -14.035125732421875
    8. '<num' → logprob: -15.660125732421875
    9. '<K' → logprob: -16.035125732421875
    10. '<th' → logprob: -16.410125732421875

Token 463: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.836499985889532e-05
    2. ' N' → logprob: -9.7500581741333
    3. '	N' → logprob: -20.500059127807617
    4. ' ' → logprob: -21.375059127807617
    5. '   ' → logprob: -22.000059127807617
    6. '>N' → logprob: -22.250059127807617
    7. '<N' → logprob: -22.750059127807617
    8. '
' → logprob: -23.250059127807617
    9. 'n' → logprob: -23.500059127807617
    10. '  ' → logprob: -24.125059127807617

Token 464: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01833571307361126
    2. 'and' → logprob: -4.018335819244385
    3. '   ' → logprob: -8.643335342407227
    4. ' ' → logprob: -12.518335342407227
    5. '    ' → logprob: -13.018335342407227
    6. ' et' → logprob: -13.518335342407227
    7. '	and' → logprob: -14.268335342407227
    8. ' и' → logprob: -14.768335342407227
    9. 'et' → logprob: -14.893335342407227
    10. '  ' → logprob: -15.518335342407227

Token 465: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7012758851051331
    2. 'sum' → logprob: -0.7012758851051331
    3. '(sum' → logprob: -5.076275825500488
    4. ' (' → logprob: -6.326275825500488
    5. '   ' → logprob: -10.326275825500488
    6. ' ' → logprob: -11.576275825500488
    7. ' ' → logprob: -11.951275825500488
    8. '(s' → logprob: -12.451275825500488
    9. '	sum' → logprob: -12.576275825500488
    10. '  ' → logprob: -13.701275825500488

Token 466: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -8.41866585687967e-06
    2. '_' → logprob: -11.750008583068848
    3. ' _' → logprob: -14.875008583068848
    4. '+' → logprob: -16.62500762939453
    5. 'n' → logprob: -18.87500762939453
    6. ' +' → logprob: -19.12500762939453
    7. '+n' → logprob: -19.50000762939453
    8. '```' → logprob: -19.87500762939453
    9. ')' → logprob: -20.62500762939453
    10. '_
' → logprob: -20.87500762939453

Token 467: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002296432852745
    2. '+' → logprob: -2.3502297401428223
    3. '+A' → logprob: -11.350229263305664
    4. ' ' → logprob: -12.100229263305664
    5. ' plus' → logprob: -13.475229263305664
    6. '   ' → logprob: -13.850229263305664
    7. ' ' → logprob: -14.350229263305664
    8. '[' → logprob: -14.600229263305664
    9. ' +
' → logprob: -14.725229263305664
    10. '  ' → logprob: -15.100229263305664

Token 468: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3132743537425995
    2. 'A' → logprob: -1.3132743835449219
    3. ' ' → logprob: -11.438274383544922
    4. '	A' → logprob: -14.688274383544922
    5. '(A' → logprob: -14.688274383544922
    6. '   ' → logprob: -15.688274383544922
    7. ' (' → logprob: -15.813274383544922
    8. '<|end|>' → logprob: -15.938274383544922
    9. '  ' → logprob: -16.063274383544922
    10. '=A' → logprob: -16.313274383544922

Token 469: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -6.630610641877865e-06
    2. 'right' → logprob: -12.625006675720215
    3. '[left' → logprob: -13.375006675720215
    4. '[' → logprob: -13.625006675720215
    5. '[
' → logprob: -15.750006675720215
    6. '\[' → logprob: -17.0000057220459
    7. 'A' → logprob: -17.1250057220459
    8. '	right' → logprob: -17.2500057220459
    9. '[root' → logprob: -17.6250057220459
    10. '[next' → logprob: -17.7500057220459

Token 470: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14902743697166443
    2. '==' → logprob: -2.0240273475646973
    3. ']' → logprob: -5.399027347564697
    4. ')' → logprob: -6.524027347564697
    5. ']==' → logprob: -8.774027824401855
    6. ' ' → logprob: -9.024027824401855
    7. '=' → logprob: -10.524027824401855
    8. ' ]' → logprob: -11.274027824401855
    9. ')==' → logprob: -12.024027824401855
    10. '}' → logprob: -12.149027824401855

Token 471: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.252022385597229
    2. ' ==' → logprob: -1.502022385597229
    3. '=' → logprob: -9.377022743225098
    4. '==
' → logprob: -12.002022743225098
    5. '===' → logprob: -14.127022743225098
    6. ' ' → logprob: -14.252022743225098
    7. ' =' → logprob: -14.502022743225098
    8. ' ==
' → logprob: -15.502022743225098
    9. ')' → logprob: -16.25202178955078
    10. ')==' → logprob: -16.37702178955078

Token 472: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.38848546147346497
    2. ' sum' → logprob: -1.1384854316711426
    3. '(sum' → logprob: -6.513485431671143
    4. ' (' → logprob: -9.3884859085083
    5. ' ' → logprob: -10.8884859085083
    6. ' bit' → logprob: -11.0134859085083
    7. 'bit' → logprob: -12.5134859085083
    8. '  ' → logprob: -12.8884859085083
    9. '	sum' → logprob: -13.0134859085083
    10. '(' → logprob: -13.6384859085083

Token 473: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.2664456789934775e-06
    2. 'n' → logprob: -14.875000953674316
    3. '^' → logprob: -15.000000953674316
    4. '_' → logprob: -15.125000953674316
    5. '_^' → logprob: -15.375000953674316
    6. ' _' → logprob: -17.250001907348633
    7. '_x' → logprob: -18.125001907348633
    8. 'xor' → logprob: -18.375001907348633
    9. '_
' → logprob: -18.375001907348633
    10. '_
' → logprob: -18.500001907348633

Token 474: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.005295665469020605
    2. '^' → logprob: -5.255295753479004
    3. ' ' → logprob: -9.880295753479004
    4. ' ' → logprob: -12.130295753479004
    5. '_' → logprob: -13.130295753479004
    6. '_^' → logprob: -14.130295753479004
    7. ' ^
' → logprob: -14.255295753479004
    8. '   ' → logprob: -14.630295753479004
    9. '_n' → logprob: -14.755295753479004
    10. ' ^=' → logprob: -15.755295753479004

Token 475: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18119211494922638
    2. ' A' → logprob: -1.80619215965271
    3. 'bit' → logprob: -7.056191921234131
    4. ' bit' → logprob: -7.556191921234131
    5. ' ' → logprob: -9.806192398071289
    6. '_A' → logprob: -12.931192398071289
    7. '	A' → logprob: -13.931192398071289
    8. '  ' → logprob: -14.056192398071289
    9. '   ' → logprob: -14.181192398071289
    10. 'a' → logprob: -14.681192398071289

Token 476: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.009453007951378822
    2. 'right' → logprob: -4.759452819824219
    3. '_n' → logprob: -7.634452819824219
    4. '_right' → logprob: -8.634452819824219
    5. '_[' → logprob: -9.259452819824219
    6. '[' → logprob: -10.509452819824219
    7. 'n' → logprob: -10.759452819824219
    8. '[left' → logprob: -12.134452819824219
    9. '_' → logprob: -12.259452819824219
    10. '```' → logprob: -12.509452819824219

Token 477: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.044926643371582
    2. '):
' → logprob: -1.044926643371582
    3. '):' → logprob: -1.544926643371582
    4. '   ' → logprob: -2.919926643371582
    5. ':
' → logprob: -3.919926643371582
    6. ']:
' → logprob: -5.794926643371582
    7. '       ' → logprob: -5.919926643371582
    8. ']:' → logprob: -5.919926643371582
    9. ')' → logprob: -8.419926643371582
    10. '}:' → logprob: -8.919926643371582

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024129344150424004
    2. ':' → logprob: -4.149129390716553
    3. '   ' → logprob: -4.899129390716553
    4. '):' → logprob: -8.399128913879395
    5. ':
' → logprob: -9.274128913879395
    6. '<|end|>' → logprob: -9.774128913879395
    7. ' :' → logprob: -10.024128913879395
    8. '):
' → logprob: -10.274128913879395
    9. ')' → logprob: -10.774128913879395
    10. '     ' → logprob: -11.024128913879395

Token 479: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7331028580665588
    2. '       ' → logprob: -1.233102798461914
    3. '   ' → logprob: -1.483102798461914
    4. ' sum' → logprob: -6.733102798461914
    5. '           ' → logprob: -9.983102798461914
    6. '	sum' → logprob: -11.483102798461914
    7. ' ' → logprob: -12.108102798461914
    8. '#' (adapté à ' #') → logprob: -13.233102798461914
    9. '  ' → logprob: -13.233102798461914
    10. '```' → logprob: -13.358102798461914

Token 480: ' On' (ID: 2160)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0001757696009008214
    2. '       ' → logprob: -8.750175476074219
    3. '   ' → logprob: -11.375175476074219
    4. '           ' → logprob: -12.250175476074219
    5. ' sum' → logprob: -14.125175476074219
    6. '#' → logprob: -15.125175476074219
    7. '	sum' → logprob: -17.50017547607422
    8. 'add' → logprob: -17.62517547607422
    9. '     ' → logprob: -17.75017547607422
    10. '```' → logprob: -18.75017547607422

Token 481: ' ajoute' (ID: 91611)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07669134438037872
    2. '       ' → logprob: -3.2016913890838623
    3. ' sum' → logprob: -3.7016913890838623
    4. '   ' → logprob: -5.576691150665283
    5. 'add' → logprob: -6.201691150665283
    6. '           ' → logprob: -6.951691150665283
    7. ' +=' → logprob: -7.326691150665283
    8. '    ' → logprob: -7.576691150665283
    9. '+=' → logprob: -8.826691627502441
    10. ' add' → logprob: -9.701691627502441

Token 482: ' cet' (ID: 19505)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05506687983870506
    2. ' A' → logprob: -2.9300668239593506
    3. '   ' → logprob: -9.18006706237793
    4. '       ' → logprob: -9.93006706237793
    5. '    ' → logprob: -11.30506706237793
    6. '	A' → logprob: -12.18006706237793
    7. ' ' → logprob: -12.43006706237793
    8. '           ' → logprob: -12.55506706237793
    9. '        ' → logprob: -12.68006706237793
    10. ' the' → logprob: -13.55506706237793

Token 483: ' élément' (ID: 99627)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.044827964156866074
    2. ' A' → logprob: -3.169827938079834
    3. '[right' → logprob: -7.294827938079834
    4. '[' → logprob: -7.544827938079834
    5. '_' → logprob: -9.169828414916992
    6. '=' → logprob: -9.794828414916992
    7. '   ' → logprob: -9.919828414916992
    8. ' space' → logprob: -9.919828414916992
    9. '       ' → logprob: -10.169828414916992
    10. '+' → logprob: -10.169828414916992

Token 484: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005664852447807789
    2. '   ' → logprob: -6.005664825439453
    3. ' to' → logprob: -6.755664825439453
    4. '           ' → logprob: -7.505664825439453
    5. 'to' → logprob: -8.005664825439453
    6. '=' → logprob: -8.130664825439453
    7. 'A' → logprob: -8.380664825439453
    8. 'sum' → logprob: -8.505664825439453
    9. ' =' → logprob: -8.755664825439453
    10. ' à' → logprob: -9.880664825439453

Token 485: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.018151817843317986
    2. ' sum' → logprob: -4.018151760101318
    3. 'right' → logprob: -14.268152236938477
    4. 'A' → logprob: -15.018152236938477
    5. ' A' → logprob: -15.018152236938477
    6. '	sum' → logprob: -15.393152236938477
    7. ' la' → logprob: -15.518152236938477
    8. ' ' → logprob: -16.768152236938477
    9. ' right' → logprob: -16.893152236938477
    10. 'la' → logprob: -16.893152236938477

Token 486: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00015979631280060858
    2. ' sum' → logprob: -8.750160217285156
    3. 'A' → logprob: -13.750160217285156
    4. '   ' → logprob: -15.875160217285156
    5. ' A' → logprob: -17.500160217285156
    6. '	sum' → logprob: -17.750160217285156
    7. '       ' → logprob: -18.000160217285156
    8. 'right' → logprob: -18.125160217285156
    9. 's' → logprob: -18.250160217285156
    10. '_sum' → logprob: -18.500160217285156

Token 487: ' cour' (ID: 2871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06304710358381271
    2. '   ' → logprob: -3.063047170639038
    3. 'sum' → logprob: -4.813046932220459
    4. '           ' → logprob: -6.813046932220459
    5. '    ' → logprob: -7.063046932220459
    6. '
' → logprob: -7.188046932220459
    7. '=' → logprob: -7.563046932220459
    8. '        ' → logprob: -7.813046932220459
    9. '        
' → logprob: -8.188047409057617
    10. '	' → logprob: -8.313047409057617

Token 488: 'ante' (ID: 2116)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1259918063879013
    2. '   ' → logprob: -3.6259918212890625
    3. 'ent' → logprob: -3.6259918212890625
    4. 'ante' → logprob: -3.8759918212890625
    5. '       ' → logprob: -4.3759918212890625
    6. 'rent' → logprob: -4.7509918212890625
    7. '_sum' → logprob: -4.8759918212890625
    8. ' sum' → logprob: -5.0009918212890625
    9. 'ente' → logprob: -6.5009918212890625
    10. 'ents' → logprob: -6.7509918212890625

Token 489: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005000106059014797
    2. 'sum' → logprob: -5.630000114440918
    3. '   ' → logprob: -7.755000114440918
    4. '        
' → logprob: -8.630000114440918
    5. '<|end|>' → logprob: -9.130000114440918
    6. ',' → logprob: -9.130000114440918
    7. ' sum' → logprob: -9.255000114440918
    8. '           ' → logprob: -9.380000114440918
    9. '
' → logprob: -10.005000114440918
    10. '        ' → logprob: -10.130000114440918

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012716713361442089
    2. '   ' → logprob: -5.012716770172119
    3. 'sum' → logprob: -5.262716770172119
    4. ' sum' → logprob: -7.262716770172119
    5. '	' → logprob: -10.512716293334961
    6. '	sum' → logprob: -10.762716293334961
    7. '           ' → logprob: -12.012716293334961
    8. '    ' → logprob: -12.012716293334961
    9. '=' → logprob: -12.262716293334961
    10. '        
' → logprob: -12.262716293334961

Token 491: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.21186530590057373
    2. '       ' → logprob: -1.7118653059005737
    3. ' sum' → logprob: -4.586865425109863
    4. '   ' → logprob: -8.586865425109863
    5. '           ' → logprob: -11.461865425109863
    6. '        ' → logprob: -12.586865425109863
    7. '	sum' → logprob: -12.711865425109863
    8. '    ' → logprob: -12.961865425109863
    9. '      ' → logprob: -13.461865425109863
    10. ' ' → logprob: -13.836865425109863

Token 492: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -12.625003814697266
    3. ' _' → logprob: -15.875003814697266
    4. 'n' → logprob: -16.500003814697266
    5. '=_' → logprob: -17.500003814697266
    6. '=' → logprob: -18.125003814697266
    7. ' =' → logprob: -19.000003814697266
    8. '```' → logprob: -19.250003814697266
    9. '_=' → logprob: -19.375003814697266
    10. '_k' → logprob: -19.875003814697266

Token 493: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5774065852165222
    2. '+=' → logprob: -0.8274065852165222
    3. '+' → logprob: -6.577406406402588
    4. '=' → logprob: -10.202406883239746
    5. ' +' → logprob: -10.327406883239746
    6. ' =' → logprob: -13.577406883239746
    7. '   ' → logprob: -13.827406883239746
    8. '    ' → logprob: -14.452406883239746
    9. ']+=' → logprob: -14.577406883239746
    10. '	' → logprob: -14.827406883239746

Token 494: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6931476593017578
    2. ' A' → logprob: -0.6931476593017578
    3. ' ' → logprob: -15.318147659301758
    4. '	A' → logprob: -15.443147659301758
    5. '   ' → logprob: -17.443147659301758
    6. ' ' → logprob: -18.193147659301758
    7. '  ' → logprob: -19.568147659301758
    8. '(A' → logprob: -19.693147659301758
    9. '_A' → logprob: -19.818147659301758
    10. 'a' → logprob: -20.318147659301758

Token 495: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -5.438573680294212e-06
    2. 'right' → logprob: -12.250005722045898
    3. '[left' → logprob: -14.500005722045898
    4. 'A' → logprob: -16.7500057220459
    5. '[' → logprob: -18.1250057220459
    6. '[
' → logprob: -19.1250057220459
    7. '	right' → logprob: -19.3750057220459
    8. '[next' → logprob: -19.5000057220459
    9. ' [' → logprob: -20.0000057220459
    10. '(right' → logprob: -20.1250057220459

Token 496: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11021836847066879
    2. '       ' → logprob: -2.8602182865142822
    3. ']' → logprob: -3.4852182865142822
    4. '<|end|>' → logprob: -4.735218524932861
    5. ')
' → logprob: -5.110218524932861
    6. '   ' → logprob: -6.860218524932861
    7. ']
' → logprob: -8.360218048095703
    8. '<|end|>' → logprob: -9.235218048095703
    9. '}' → logprob: -9.860218048095703
    10. '        
' → logprob: -10.735218048095703

Token 497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04329215735197067
    2. '<|end|>' → logprob: -4.293292045593262
    3. '   ' → logprob: -4.543292045593262
    4. 'right' → logprob: -4.918292045593262
    5. '
' → logprob: -6.043292045593262
    6. '        
' → logprob: -6.543292045593262
    7. '[right' → logprob: -6.543292045593262
    8. ' 
' → logprob: -6.793292045593262
    9. ' right' → logprob: -6.918292045593262
    10. ' ' → logprob: -7.293292045593262

Token 498: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6003998517990112
    2. '       ' → logprob: -1.8503998517990112
    3. '   ' → logprob: -2.350399971008301
    4. ' right' → logprob: -2.725399971008301
    5. ' bit' → logprob: -2.975399971008301
    6. 'bit' → logprob: -3.600399971008301
    7. '<|end|>' → logprob: -3.850399971008301
    8. '[right' → logprob: -4.600399971008301
    9. '	right' → logprob: -5.100399971008301
    10. ' ' → logprob: -5.725399971008301

Token 499: ' On' (ID: 2160)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.0015028368216007948
    2. ' bit' → logprob: -6.501502990722656
    3. '   ' → logprob: -15.626502990722656
    4. '       ' → logprob: -16.126502990722656
    5. '#' → logprob: -17.376502990722656
    6. '(bit' → logprob: -17.501502990722656
    7. ' ' → logprob: -17.751502990722656
    8. 'bitr' → logprob: -17.751502990722656
    9. '
' → logprob: -18.376502990722656
    10. '-bit' → logprob: -18.501502990722656

Token 500: ' fait' (ID: 7473)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6081928014755249
    2. ' ^=' → logprob: -0.8581928014755249
    3. 'bit' → logprob: -3.6081929206848145
    4. ' bit' → logprob: -6.2331929206848145
    5. '=' → logprob: -6.7331929206848145
    6. 'xor' → logprob: -7.2331929206848145
    7. ' ' → logprob: -7.6081929206848145
    8. ' ^' → logprob: -8.733192443847656
    9. '_bit' → logprob: -10.358192443847656
    10. '^)' → logprob: -10.983192443847656

Token 501: ' un' (ID: 537)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.313264399766922
    2. ' bit' → logprob: -1.3132643699645996
    3. '(bit' → logprob: -13.438264846801758
    4. 'xor' → logprob: -14.438264846801758
    5. ' ' → logprob: -15.188264846801758
    6. '   ' → logprob: -16.188264846801758
    7. 'bitr' → logprob: -16.313264846801758
    8. '_bit' → logprob: -16.563264846801758
    9. '^' → logprob: -16.938264846801758
    10. '.bit' → logprob: -18.063264846801758

Token 502: ' xor' (ID: 106402)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.13756762444972992
    2. 'bit' → logprob: -2.7625675201416016
    3. 'xor' → logprob: -2.7625675201416016
    4. ' bit' → logprob: -6.762567520141602
    5. ' ^=' → logprob: -7.262567520141602
    6. ' ' → logprob: -8.887567520141602
    7. 'caret' → logprob: -9.637567520141602
    8. '^)' → logprob: -10.137567520141602
    9. ' xor' → logprob: -10.387567520141602
    10. '_bit' → logprob: -10.637567520141602

Token 503: ' (' (ID: 350)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.5466448068618774
    2. 'bit' → logprob: -1.0466448068618774
    3. '^' → logprob: -2.796644687652588
    4. ' ^=' → logprob: -5.546644687652588
    5. '(bit' → logprob: -6.421644687652588
    6. '   ' → logprob: -6.546644687652588
    7. ' ' → logprob: -7.296644687652588
    8. ' ^' → logprob: -7.421644687652588
    9. '_bit' → logprob: -8.046645164489746
    10. '=' → logprob: -8.171645164489746

Token 504: '^)' (ID: 75099)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5764829516410828
    2. ' bit' → logprob: -0.8264829516410828
    3. '^' → logprob: -7.576482772827148
    4. '_bit' → logprob: -11.326482772827148
    5. '(bit' → logprob: -11.326482772827148
    6. '   ' → logprob: -12.951482772827148
    7. ' ' → logprob: -13.701482772827148
    8. 'xor' → logprob: -13.826482772827148
    9. ' ^' → logprob: -14.201482772827148
    10. ' ^=' → logprob: -15.076482772827148

Token 505: ' avec' (ID: 3937)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.5760127305984497
    2. ' bit' → logprob: -0.8260127305984497
    3. '^' → logprob: -9.95101261138916
    4. '(bit' → logprob: -11.07601261138916
    5. '_bit' → logprob: -12.57601261138916
    6. '   ' → logprob: -13.32601261138916
    7. ' ^=' → logprob: -13.32601261138916
    8. ' ' → logprob: -13.57601261138916
    9. '       ' → logprob: -14.20101261138916
    10. ' ^' → logprob: -14.82601261138916

Token 506: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0724857747554779
    2. 'bit' → logprob: -2.8224856853485107
    3. ' bit' → logprob: -4.94748592376709
    4. ' A' → logprob: -5.69748592376709
    5. 'the' → logprob: -13.69748592376709
    6. ' ' → logprob: -14.19748592376709
    7. 'le' → logprob: -14.44748592376709
    8. '(bit' → logprob: -14.44748592376709
    9. '   ' → logprob: -14.69748592376709
    10. '_A' → logprob: -14.82248592376709

Token 507: ' valeur' (ID: 41664)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2855794429779053
    2. 'bit' → logprob: -1.4105794429779053
    3. ' bit' → logprob: -6.035579681396484
    4. 'right' → logprob: -6.785579681396484
    5. ' A' → logprob: -7.035579681396484
    6. ' right' → logprob: -12.285579681396484
    7. '^' → logprob: -12.660579681396484
    8. ' ' → logprob: -13.535579681396484
    9. '(bit' → logprob: -13.660579681396484
    10. '_bit' → logprob: -14.285579681396484

Token 508: ' cour' (ID: 2871)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.09060094505548477
    2. 'A' → logprob: -3.0906009674072266
    3. ' bit' → logprob: -3.2156009674072266
    4. '   ' → logprob: -7.715600967407227
    5. ' A' → logprob: -8.090600967407227
    6. '       ' → logprob: -8.590600967407227
    7. '(bit' → logprob: -10.590600967407227
    8. '_bit' → logprob: -11.715600967407227
    9. '           ' → logprob: -11.965600967407227
    10. ' ' → logprob: -12.340600967407227

Token 509: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.10506871342658997
    2. 'A' → logprob: -2.4800686836242676
    3. 'right' → logprob: -4.605068683624268
    4. 'ant' → logprob: -5.730068683624268
    5. 'ente' → logprob: -7.480068683624268
    6. 'n' → logprob: -7.980068683624268
    7. 'ent' → logprob: -8.105069160461426
    8. 'rent' → logprob: -8.480069160461426
    9. 'bit' → logprob: -8.730069160461426
    10. '   ' → logprob: -8.730069160461426

Token 510: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.31333133578300476
    2. ' bit' → logprob: -1.3133313655853271
    3. '(bit' → logprob: -10.313331604003906
    4. '   ' → logprob: -10.938331604003906
    5. '^' → logprob: -11.813331604003906
    6. ' A' → logprob: -12.438331604003906
    7. 'A' → logprob: -13.188331604003906
    8. ' ' → logprob: -13.438331604003906
    9. '       ' → logprob: -13.438331604003906
    10. '_bit' → logprob: -13.813331604003906

Token 511: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.500000953674316
    3. '^' → logprob: -16.375
    4. 'bit' → logprob: -16.625
    5. 'n' → logprob: -16.75
    6. '```' → logprob: -18.0
    7. 'xor' → logprob: -18.375
    8. 'right' → logprob: -18.5
    9. ' _' → logprob: -18.625
    10. '_^' → logprob: -18.875

Token 512: ' pour' (ID: 1930)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.668249785900116
    2. '^' → logprob: -0.793249785900116
    3. ' ^' → logprob: -3.5432498455047607
    4. '   ' → logprob: -5.668249607086182
    5. '       ' → logprob: -6.918249607086182
    6. ' bit' → logprob: -6.918249607086182
    7. ' ' → logprob: -7.918249607086182
    8. ' ^
' → logprob: -9.04325008392334
    9. '^{' → logprob: -9.66825008392334
    10. '=' → logprob: -10.66825008392334

Token 513: ' l' (ID: 305)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6053543090820312
    2. ' bit' → logprob: -1.4803543090820312
    3. 'A' → logprob: -2.1053543090820312
    4. ' A' → logprob: -2.4803543090820312
    5. '       ' → logprob: -4.730354309082031
    6. '   ' → logprob: -4.855354309082031
    7. ' ' → logprob: -6.855354309082031
    8. ' ajouter' → logprob: -7.355354309082031
    9. '^' → logprob: -7.480354309082031
    10. '    ' → logprob: -7.605354309082031

Token 514: ''' (ID: 6)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.04996056109666824
    2. ' bit' → logprob: -4.174960613250732
    3. 'right' → logprob: -4.299960613250732
    4. 'ight' → logprob: -4.799960613250732
    5. ' right' → logprob: -5.674960613250732
    6. 'xor' → logprob: -6.049960613250732
    7. '   ' → logprob: -6.424960613250732
    8. '^' → logprob: -6.424960613250732
    9. '       ' → logprob: -7.674960613250732
    10. ' ' → logprob: -7.924960613250732

Token 515: 'actual' (ID: 19106)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.1595838963985443
    2. 'incl' → logprob: -2.284583806991577
    3. 'aj' → logprob: -3.284583806991577
    4. 'int' → logprob: -6.034584045410156
    5. 'include' → logprob: -6.659584045410156
    6. 'inc' → logprob: -7.409584045410156
    7. 'update' → logprob: -7.534584045410156
    8. 'right' → logprob: -7.534584045410156
    9. 'mettre' → logprob: -7.659584045410156
    10. 'xor' → logprob: -7.659584045410156

Token 516: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00023977462842594832
    2. 'bit' → logprob: -9.625239372253418
    3. 'er' → logprob: -9.750239372253418
    4. 'izer' → logprob: -10.500239372253418
    5. 'iter' → logprob: -12.000239372253418
    6. '_bit' → logprob: -12.000239372253418
    7. 'isé' → logprob: -12.000239372253418
    8. '   ' → logprob: -12.375239372253418
    9. 'is' → logprob: -12.375239372253418
    10. 'érer' → logprob: -12.375239372253418

Token 517: '
' (ID: 198)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.468384712934494
    2. '       ' → logprob: -1.7183847427368164
    3. 'bit' → logprob: -1.8433847427368164
    4. '^' → logprob: -3.5933847427368164
    5. '   ' → logprob: -5.343384742736816
    6. ' ^=' → logprob: -6.218384742736816
    7. ' ^' → logprob: -6.718384742736816
    8. '(bit' → logprob: -8.343384742736816
    9. '
' → logprob: -8.843384742736816
    10. '^{' → logprob: -9.343384742736816

Token 518: '       ' (ID: 309)
  Prédit: ' bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.10196390748023987
    2. 'bit' → logprob: -2.351963996887207
    3. '       ' → logprob: -6.601963996887207
    4. '^' → logprob: -8.351963996887207
    5. ' ^=' → logprob: -9.351963996887207
    6. '   ' → logprob: -10.351963996887207
    7. ' ^' → logprob: -10.726963996887207
    8. '(bit' → logprob: -11.851963996887207
    9. '.bit' → logprob: -12.601963996887207
    10. '```' → logprob: -12.726963996887207

Token 519: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -0.0011804660316556692
    2. ' bit' → logprob: -6.751180648803711
    3. '       ' → logprob: -11.626180648803711
    4. '   ' → logprob: -13.626180648803711
    5. 'bitr' → logprob: -17.62618064880371
    6. '(bit' → logprob: -18.62618064880371
    7. '_bit' → logprob: -18.87618064880371
    8. '           ' → logprob: -18.87618064880371
    9. '      ' → logprob: -19.25118064880371
    10. '^' → logprob: -19.37618064880371

Token 520: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.375001907348633
    3. 'n' → logprob: -16.250001907348633
    4. ' _' → logprob: -17.875001907348633
    5. '\' → logprob: -20.875001907348633
    6. '```' → logprob: -21.000001907348633
    7. '_
' → logprob: -21.125001907348633
    8. ')_' → logprob: -21.125001907348633
    9. '=_' → logprob: -21.250001907348633
    10. '}_' → logprob: -21.250001907348633

Token 521: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.20240093767642975
    2. ' ^=' → logprob: -1.7024009227752686
    3. '=' → logprob: -6.952401161193848
    4. ' ^' → logprob: -10.577401161193848
    5. ' =' → logprob: -13.077401161193848
    6. ' ' → logprob: -13.827401161193848
    7. ' ' → logprob: -14.952401161193848
    8. '^{' → logprob: -15.202401161193848
    9. '^

' → logprob: -15.202401161193848
    10. '^\' → logprob: -15.327401161193848

Token 522: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001170225441455841
    2. ' A' → logprob: -6.7511701583862305
    3. ' ' → logprob: -18.876171112060547
    4. '   ' → logprob: -19.251171112060547
    5. '	A' → logprob: -20.001171112060547
    6. '  ' → logprob: -22.251171112060547
    7. ' ' → logprob: -23.001171112060547
    8. '```' → logprob: -23.501171112060547
    9. 'a' → logprob: -24.001171112060547
    10. '_A' → logprob: -24.126171112060547

Token 523: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -2.1888679839321412e-05
    2. 'right' → logprob: -10.750021934509277
    3. '[' → logprob: -15.625021934509277
    4. '[left' → logprob: -15.750021934509277
    5. '	right' → logprob: -18.12502098083496
    6. '[
' → logprob: -18.25002098083496
    7. '[next' → logprob: -18.75002098083496
    8. ' [' → logprob: -19.12502098083496
    9. ',right' → logprob: -19.50002098083496
    10. '(right' → logprob: -19.75002098083496

Token 524: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031070750206708908
    2. ']' → logprob: -4.781070709228516
    3. '[right' → logprob: -4.781070709228516
    4. '       ' → logprob: -5.156070709228516
    5. '<|end|>' → logprob: -5.156070709228516
    6. 'right' → logprob: -7.281070709228516
    7. ')
' → logprob: -7.656070709228516
    8. '   ' → logprob: -7.781070709228516
    9. '<|end|>' → logprob: -7.906070709228516
    10. '}' → logprob: -9.156070709228516

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014902232214808464
    2. 'right' → logprob: -7.501490116119385
    3. ' right' → logprob: -7.501490116119385
    4. '   ' → logprob: -8.001490592956543
    5. '	right' → logprob: -10.376490592956543
    6. '        
' → logprob: -11.626490592956543
    7. '	' → logprob: -12.876490592956543
    8. '[right' → logprob: -13.126490592956543
    9. '    
' → logprob: -13.501490592956543
    10. '
' → logprob: -14.126490592956543

Token 526: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4783291518688202
    2. 'right' → logprob: -0.9783291816711426
    3. ' right' → logprob: -5.478329181671143
    4. '	right' → logprob: -10.103328704833984
    5. '   ' → logprob: -11.228328704833984
    6. '[right' → logprob: -12.103328704833984
    7. '        
' → logprob: -13.728328704833984
    8. '.right' → logprob: -13.728328704833984
    9. '           ' → logprob: -13.853328704833984
    10. ',right' → logprob: -14.228328704833984

Token 527: ' On' (ID: 2160)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0022273333743214607
    2. '       ' → logprob: -6.502227306365967
    3. ' right' → logprob: -7.252227306365967
    4. '   ' → logprob: -11.502227783203125
    5. '	right' → logprob: -12.627227783203125
    6. '           ' → logprob: -13.127227783203125
    7. '++' → logprob: -15.627227783203125
    8. 'Right' → logprob: -15.877227783203125
    9. '右' → logprob: -16.127227783203125
    10. '#' → logprob: -16.252227783203125

Token 528: ' avance' (ID: 81376)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.011923430487513542
    2. ' right' → logprob: -4.511923313140869
    3. '   ' → logprob: -7.386923313140869
    4. '       ' → logprob: -8.511923789978027
    5. '	right' → logprob: -10.386923789978027
    6. '_right' → logprob: -12.011923789978027
    7. '+=' → logprob: -12.386923789978027
    8. '[right' → logprob: -13.011923789978027
    9. '+' → logprob: -13.261923789978027
    10. '    ' → logprob: -13.386923789978027

Token 529: ' le' (ID: 505)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16024738550186157
    2. ' right' → logprob: -1.9102473258972168
    3. '   ' → logprob: -11.410247802734375
    4. '	right' → logprob: -11.535247802734375
    5. '       ' → logprob: -14.035247802734375
    6. '[right' → logprob: -14.160247802734375
    7. '(right' → logprob: -14.785247802734375
    8. '.right' → logprob: -16.160247802734375
    9. ',right' → logprob: -16.660247802734375
    10. '_right' → logprob: -16.785247802734375

Token 530: ' bord' (ID: 26431)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.836499985889532e-05
    2. ' right' → logprob: -9.7500581741333
    3. 'r' → logprob: -17.250059127807617
    4. '	right' → logprob: -18.625059127807617
    5. '[right' → logprob: -19.000059127807617
    6. 'rig' → logprob: -19.125059127807617
    7. 'Right' → logprob: -19.500059127807617
    8. ' ' → logprob: -19.625059127807617
    9. '   ' → logprob: -19.625059127807617
    10. 'left' → logprob: -19.875059127807617

Token 531: ' droit' (ID: 29964)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2826346457004547
    2. ' right' → logprob: -1.4076346158981323
    3. '   ' → logprob: -6.782634735107422
    4. ' droit' → logprob: -8.282634735107422
    5. '	right' → logprob: -9.907634735107422
    6. ' droite' → logprob: -11.407634735107422
    7. '[right' → logprob: -11.782634735107422
    8. ' ' → logprob: -11.907634735107422
    9. '       ' → logprob: -12.407634735107422
    10. '_right' → logprob: -12.657634735107422

Token 532: ' du' (ID: 1462)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9053075909614563
    2. ' +=' → logprob: -1.4053075313568115
    3. 'right' → logprob: -1.5303075313568115
    4. '   ' → logprob: -2.2803075313568115
    5. '[right' → logprob: -4.280307769775391
    6. '       ' → logprob: -4.655307769775391
    7. '+' → logprob: -5.530307769775391
    8. ' right' → logprob: -5.905307769775391
    9. '	right' → logprob: -7.780307769775391
    10. '           ' → logprob: -8.03030776977539

Token 533: ' segment' (ID: 14806)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014168680645525455
    2. ' right' → logprob: -4.264168739318848
    3. '[right' → logprob: -12.764168739318848
    4. ' ' → logprob: -14.264168739318848
    5. '+' → logprob: -14.389168739318848
    6. '	right' → logprob: -15.389168739318848
    7. ',right' → logprob: -15.764168739318848
    8. ' droit' → logprob: -16.01416778564453
    9. 'Right' → logprob: -16.63916778564453
    10. '```' → logprob: -16.76416778564453

Token 534: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02208731696009636
    2. 'right' → logprob: -4.397087097167969
    3. ' right' → logprob: -5.272087097167969
    4. '       ' → logprob: -5.647087097167969
    5. '[right' → logprob: -8.147087097167969
    6. '	right' → logprob: -8.522087097167969
    7. '+' → logprob: -9.147087097167969
    8. '    
' → logprob: -9.147087097167969
    9. ' +=' → logprob: -9.772087097167969
    10. ' +' → logprob: -11.022087097167969

Token 535: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007069521816447377
    2. ' ' → logprob: -7.375707149505615
    3. '+' → logprob: -9.500706672668457
    4. ' +' → logprob: -13.500706672668457
    5. ' +=' → logprob: -13.625706672668457
    6. '+=' → logprob: -14.125706672668457
    7. 'e' → logprob: -15.000706672668457
    8. '```' → logprob: -15.125706672668457
    9. '   ' → logprob: -15.250706672668457
    10. '<|end|>' → logprob: -15.750706672668457

Token 536: ' cran' (ID: 90499)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05020400509238243
    2. ' ' → logprob: -4.675203800201416
    3. 'right' → logprob: -4.675203800201416
    4. 'pas' → logprob: -4.925203800201416
    5. 'token' → logprob: -5.050203800201416
    6. '+' → logprob: -5.300203800201416
    7. 'increment' → logprob: -5.675203800201416
    8. ' pas' → logprob: -6.425203800201416
    9. ' token' → logprob: -6.550203800201416
    10. 'e' → logprob: -6.675203800201416

Token 537: ' vers' (ID: 3640)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1649058610200882
    2. ' right' → logprob: -2.4149057865142822
    3. '   ' → logprob: -2.7899057865142822
    4. '[right' → logprob: -7.789906024932861
    5. '	right' → logprob: -7.914906024932861
    6. '       ' → logprob: -8.539905548095703
    7. '    
' → logprob: -9.789905548095703
    8. '(right' → logprob: -9.914905548095703
    9. ',right' → logprob: -10.539905548095703
    10. '
' → logprob: -10.664905548095703

Token 538: ' la' (ID: 557)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6103743314743042
    2. '1' → logprob: -0.8603743314743042
    3. ' right' → logprob: -3.7353744506835938
    4. ' droite' → logprob: -5.610374450683594
    5. ' ' → logprob: -6.235374450683594
    6. 'dro' → logprob: -6.485374450683594
    7. '+' → logprob: -7.110374450683594
    8. 'la' → logprob: -7.110374450683594
    9. 'plus' → logprob: -8.485374450683594
    10. ' la' → logprob: -8.610374450683594

Token 539: ' droite' (ID: 61428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2905426621437073
    2. 'right' → logprob: -1.4155426025390625
    3. '+' → logprob: -5.1655426025390625
    4. 'dro' → logprob: -6.4155426025390625
    5. 'd' → logprob: -6.6655426025390625
    6. 'plus' → logprob: -8.165542602539062
    7. '```' → logprob: -9.165542602539062
    8. ' ' → logprob: -9.165542602539062
    9. '+
' → logprob: -9.290542602539062
    10. ' droite' → logprob: -9.790542602539062

Token 540: '
' (ID: 198)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4329657554626465
    2. '   ' → logprob: -1.3079657554626465
    3. ' right' → logprob: -2.6829657554626465
    4. '       ' → logprob: -4.4329657554626465
    5. '	right' → logprob: -7.9329657554626465
    6. '[right' → logprob: -8.557966232299805
    7. '    
' → logprob: -8.932966232299805
    8. ',right' → logprob: -10.682966232299805
    9. '
' → logprob: -10.932966232299805
    10. '.right' → logprob: -11.307966232299805

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08545507490634918
    2. 'right' → logprob: -2.9604551792144775
    3. ' right' → logprob: -3.7104551792144775
    4. '   ' → logprob: -5.210454940795898
    5. '[right' → logprob: -9.960454940795898
    6. '	right' → logprob: -10.210454940795898
    7. '
' → logprob: -10.335454940795898
    8. '        
' → logprob: -10.835454940795898
    9. '    
' → logprob: -10.960454940795898
    10. '           ' → logprob: -11.335454940795898

Token 542: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00033593899570405483
    2. ' right' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.750335693359375
    4. '1' → logprob: -16.250335693359375
    5. '	right' → logprob: -19.000335693359375
    6. '+' → logprob: -19.125335693359375
    7. '```' → logprob: -19.250335693359375
    8. 'r' → logprob: -19.750335693359375
    9. 'Right' → logprob: -19.875335693359375
    10. '[right' → logprob: -20.000335693359375

Token 543: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47425752878189087
    2. ' +=' → logprob: -0.9742575287818909
    3. '+' → logprob: -8.724257469177246
    4. '=' → logprob: -11.099257469177246
    5. ']+=' → logprob: -13.849257469177246
    6. '   ' → logprob: -14.099257469177246
    7. '```' → logprob: -14.974257469177246
    8. ')' → logprob: -15.599257469177246
    9. '+="' → logprob: -15.974257469177246
    10. ' +' → logprob: -16.099258422851562

Token 544: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -18.88604736328125
    4. '```' → logprob: -19.38604736328125
    5. ' ' → logprob: -19.76104736328125
    6. '0' → logprob: -20.26104736328125
    7. '  ' → logprob: -20.51104736328125
    8. '１' → logprob: -21.63604736328125
    9. '۱' → logprob: -21.82354736328125
    10. '	' → logprob: -22.13604736328125

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -20.625
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -22.25
    6. '0' → logprob: -22.5
    7. '۱' → logprob: -22.625
    8. '+' → logprob: -22.625
    9. '১' → logprob: -23.5625
    10. '=' → logprob: -23.875

Token 546: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012798800598829985
    2. 'ans' → logprob: -6.751279830932617
    3. '#' → logprob: -9.751279830932617
    4. '```' → logprob: -10.501279830932617
    5. '	ans' → logprob: -11.376279830932617
    6. ' ans' → logprob: -12.751279830932617
    7. '    
' → logprob: -12.751279830932617
    8. '       ' → logprob: -12.876279830932617
    9. '   ' → logprob: -13.251279830932617
    10. '  ' → logprob: -14.376279830932617

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023379646241664886
    2. 'ans' → logprob: -3.7733795642852783
    3. '#' → logprob: -9.8983793258667
    4. '	ans' → logprob: -9.8983793258667
    5. ' ans' → logprob: -10.8983793258667
    6. '```' → logprob: -11.3983793258667
    7. '(ans' → logprob: -13.2733793258667
    8. '    
' → logprob: -14.0233793258667
    9. '   ' → logprob: -14.6483793258667
    10. '  ' → logprob: -15.1483793258667

Token 548: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2522909641265869
    2. '   ' → logprob: -1.502290964126587
    3. '```' → logprob: -8.502290725708008
    4. ' ans' → logprob: -9.502290725708008
    5. '	ans' → logprob: -9.752290725708008
    6. '#' (adapté à ' #') → logprob: -11.002290725708008
    7. '(ans' → logprob: -11.877290725708008
    8. '``' → logprob: -14.502290725708008
    9. '  ' → logprob: -14.502290725708008
    10. '`' → logprob: -15.127290725708008

Token 549: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04868115857243538
    2. '#' → logprob: -3.0486812591552734
    3. '   ' → logprob: -9.423681259155273
    4. ' ans' → logprob: -12.298681259155273
    5. '```' → logprob: -12.798681259155273
    6. '	ans' → logprob: -13.423681259155273
    7. '(ans' → logprob: -13.548681259155273
    8. 'answer' → logprob: -14.798681259155273
    9. '
' → logprob: -15.298681259155273
    10. '    
' → logprob: -15.298681259155273

Token 550: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05031442269682884
    2. 'aj' → logprob: -3.300314426422119
    3. '#' → logprob: -4.425314426422119
    4. ' ans' → logprob: -9.675313949584961
    5. '	ans' → logprob: -9.800313949584961
    6. ' ajoute' → logprob: -10.675313949584961
    7. '   ' → logprob: -11.175313949584961
    8. '+=' → logprob: -11.800313949584961
    9. 'add' → logprob: -11.925313949584961
    10. '++' → logprob: -11.925313949584961

Token 551: ' trouvé' (ID: 60081)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7205454111099243
    2. 'ans' → logprob: -1.4705454111099243
    3. ' ans' → logprob: -2.4705452919006348
    4. '   ' → logprob: -2.7205452919006348
    5. ' #' → logprob: -2.7205452919006348
    6. 'aj' → logprob: -2.9705452919006348
    7. ' maintenant' → logprob: -5.470545291900635
    8. ' ajouté' → logprob: -5.470545291900635
    9. ' ' → logprob: -6.095545291900635
    10. 'maint' → logprob: -7.595545291900635

Token 552: ' un' (ID: 537)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9095712304115295
    2. '   ' → logprob: -1.0345711708068848
    3. 'right' → logprob: -2.1595711708068848
    4. 'ans' → logprob: -2.7845711708068848
    5. 'le' → logprob: -4.034571170806885
    6. 'la' → logprob: -4.534571170806885
    7. ' le' → logprob: -4.909571170806885
    8. 'les' → logprob: -5.034571170806885
    9. ' right' → logprob: -5.284571170806885
    10. ' la' → logprob: -5.534571170806885

Token 553: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04290669038891792
    2. 's' → logprob: -3.6679067611694336
    3. ' segment' → logprob: -5.292906761169434
    4. '#' → logprob: -5.292906761169434
    5. 'nou' → logprob: -5.542906761169434
    6. 'nombre' → logprob: -6.917906761169434
    7. 'interval' → logprob: -7.667906761169434
    8. 'segments' → logprob: -8.042906761169434
    9. '   ' → logprob: -9.292906761169434
    10. ' nouveau' → logprob: -9.417906761169434

Token 554: ' maximal' (ID: 65414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12406529486179352
    2. 'ans' → logprob: -2.374065399169922
    3. '#' → logprob: -4.124065399169922
    4. 'de' → logprob: -6.374065399169922
    5. 'length' → logprob: -6.499065399169922
    6. '=' → logprob: -6.999065399169922
    7. 'du' → logprob: -7.874065399169922
    8. ' ans' → logprob: -7.999065399169922
    9. '(ans' → logprob: -7.999065399169922
    10. ' =' → logprob: -8.124065399169922

Token 555: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006355565972626209
    2. 'ans' → logprob: -5.1313557624816895
    3. ' ans' → logprob: -7.8813557624816895
    4. '(ans' → logprob: -10.381355285644531
    5. '	ans' → logprob: -11.006355285644531
    6. '   ' → logprob: -14.881355285644531
    7. '#' → logprob: -15.006355285644531
    8. '  ' → logprob: -15.256355285644531
    9. '       ' → logprob: -15.381355285644531
    10. '_ans' → logprob: -15.881355285644531

Token 556: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0001242772996192798
    2. ' left' → logprob: -9.000123977661133
    3. ',' → logprob: -14.500123977661133
    4. ',left' → logprob: -15.750123977661133
    5. '[left' → logprob: -15.875123977661133
    6. '   ' → logprob: -16.875123977661133
    7. '(left' → logprob: -17.250123977661133
    8. '	left' → logprob: -17.875123977661133
    9. ':left' → logprob: -18.250123977661133
    10. '
' → logprob: -18.375123977661133

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06289342045783997
    2. ',right' → logprob: -2.8128933906555176
    3. ' ,' → logprob: -8.062893867492676
    4. ';' → logprob: -8.062893867492676
    5. ':right' → logprob: -8.437893867492676
    6. 'right' → logprob: -9.937893867492676
    7. '[right' → logprob: -11.437893867492676
    8. ',left' → logprob: -12.312893867492676
    9. '	right' → logprob: -12.937893867492676
    10. ',
' → logprob: -13.062893867492676

Token 558: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5759422183036804
    2. ' right' → logprob: -0.8259422183036804
    3. ',right' → logprob: -13.450942039489746
    4. ',' → logprob: -14.075942039489746
    5. '	right' → logprob: -15.825942039489746
    6. ' ' → logprob: -16.075942993164062
    7. ' ' → logprob: -16.450942993164062
    8. '
' → logprob: -16.450942993164062
    9. '   ' → logprob: -16.825942993164062
    10. ')' → logprob: -16.950942993164062

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015955790877342224
    2. '[' → logprob: -9.37515926361084
    3. ')
' → logprob: -10.25015926361084
    4. ']' → logprob: -10.50015926361084
    5. '),' → logprob: -12.75015926361084
    6. ')#' → logprob: -13.25015926361084
    7. ' )' → logprob: -13.37515926361084
    8. '-' → logprob: -13.37515926361084
    9. '#' → logprob: -13.50015926361084
    10. ')`' → logprob: -14.62515926361084

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006489885039627552
    2. 'ans' → logprob: -5.1314897537231445
    3. ' ans' → logprob: -7.5064897537231445
    4. '	ans' → logprob: -11.881489753723145
    5. '(ans' → logprob: -12.631489753723145
    6. '   ' → logprob: -14.506489753723145
    7. '       ' → logprob: -16.00649070739746
    8. ',' → logprob: -16.00649070739746
    9. '```' → logprob: -16.00649070739746
    10. '#' → logprob: -16.13149070739746

Token 561: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005600620643235743
    2. '   ' → logprob: -7.500560283660889
    3. ' ans' → logprob: -12.00055980682373
    4. '	ans' → logprob: -14.00055980682373
    5. '(ans' → logprob: -16.375560760498047
    6. '#' (adapté à ' #') → logprob: -18.000560760498047
    7. '```' → logprob: -18.000560760498047
    8. '    
' → logprob: -19.250560760498047
    9. '
' → logprob: -19.250560760498047
    10. '_ans' → logprob: -19.500560760498047

Token 562: ' Tous' (ID: 64900)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.5094070477061905e-05
    2. '   ' → logprob: -11.500015258789062
    3. ' ans' → logprob: -12.250015258789062
    4. '	ans' → logprob: -16.000015258789062
    5. '(ans' → logprob: -17.125015258789062
    6. '#' → logprob: -18.125015258789062
    7. '
' → logprob: -18.500015258789062
    8. '    
' → logprob: -19.125015258789062
    9. 'answer' → logprob: -19.500015258789062
    10. '```' → logprob: -19.625015258789062

Token 563: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7734552025794983
    2. '#' → logprob: -1.3984551429748535
    3. 'right' → logprob: -1.6484551429748535
    4. 'sub' → logprob: -3.2734551429748535
    5. ' les' → logprob: -3.7734551429748535
    6. '(right' → logprob: -4.1484551429748535
    7. '[right' → logprob: -4.6484551429748535
    8. '   ' → logprob: -5.3984551429748535
    9. '+=' → logprob: -6.6484551429748535
    10. 'des' → logprob: -7.0234551429748535

Token 564: ' segments' (ID: 33749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5868961811065674
    2. 'segments' → logprob: -0.9618961811065674
    3. 'sub' → logprob: -3.5868961811065674
    4. '#' → logprob: -3.9618961811065674
    5. 'élé' → logprob: -5.211895942687988
    6. 'ans' → logprob: -5.586895942687988
    7. 'right' → logprob: -6.086895942687988
    8. 'indices' → logprob: -6.961895942687988
    9. 'elements' → logprob: -6.961895942687988
    10. ' sous' → logprob: -7.961895942687988

Token 565: ' comm' (ID: 1394)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.12097775936126709
    2. '[right' → logprob: -2.6209778785705566
    3. ' [' → logprob: -4.620977878570557
    4. '[start' → logprob: -4.620977878570557
    5. '   ' → logprob: -4.870977878570557
    6. 'de' → logprob: -5.745977878570557
    7. 'starting' → logprob: -6.620977878570557
    8. 'cont' → logprob: -6.870977878570557
    9. 'with' → logprob: -7.245977878570557
    10. 'qui' → logprob: -7.495977878570557

Token 566: 'en' (ID: 262)
  Prédit: 'enc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enc' → logprob: -0.12938855588436127
    2. 'ent' → logprob: -3.0043885707855225
    3. 'enç' → logprob: -3.1293885707855225
    4. 'ents' → logprob: -5.129388332366943
    5. 'çant' → logprob: -5.879388332366943
    6. 'encent' → logprob: -6.004388332366943
    7. 'en' → logprob: -6.254388332366943
    8. 'e' → logprob: -6.254388332366943
    9. '[i' → logprob: -6.379388332366943
    10. '[' → logprob: -6.504388332366943

Token 567: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.14550615847110748
    2. 'for' → logprob: -2.7705061435699463
    3. 't' → logprob: -3.5205061435699463
    4. 'ç' → logprob: -4.520506381988525
    5. '[i' → logprob: -5.020506381988525
    6. 'ur' → logprob: -5.270506381988525
    7. '[' → logprob: -6.020506381988525
    8. 'enc' → logprob: -6.020506381988525
    9. 'és' → logprob: -6.520506381988525
    10. 's' → logprob: -6.520506381988525

Token 568: ' par' (ID: 686)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5790550112724304
    2. 'à' → logprob: -1.4540550708770752
    3. 'at' → logprob: -2.954055070877075
    4. ' à' → logprob: -3.079055070877075
    5. ' at' → logprob: -3.829055070877075
    6. 'en' → logprob: -3.829055070877075
    7. 'dans' → logprob: -4.204054832458496
    8. ' from' → logprob: -4.579054832458496
    9. 'de' → logprob: -5.204054832458496
    10. 'par' → logprob: -5.204054832458496

Token 569: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.005996101535856724
    2. ' left' → logprob: -5.130996227264404
    3. 'right' → logprob: -9.755995750427246
    4. '`' → logprob: -13.005995750427246
    5. '_left' → logprob: -13.380995750427246
    6. '```' → logprob: -14.005995750427246
    7. '	left' → logprob: -14.005995750427246
    8. '   ' → logprob: -14.130995750427246
    9. ' ' → logprob: -14.380995750427246
    10. '[left' → logprob: -14.505995750427246

Token 570: ' (' (ID: 350)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.46844857931137085
    2. 'et' → logprob: -1.3434486389160156
    3. ' and' → logprob: -2.8434486389160156
    4. '   ' → logprob: -3.7184486389160156
    5. 'and' → logprob: -4.093448638916016
    6. '#' → logprob: -4.843448638916016
    7. ' ' → logprob: -6.093448638916016
    8. ' #' → logprob: -7.218448638916016
    9. 'for' → logprob: -8.093448638916016
    10. ' for' → logprob: -8.093448638916016

Token 571: 'in' (ID: 258)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.273131787776947
    2. ' ans' → logprob: -2.023131847381592
    3. '   ' → logprob: -2.523131847381592
    4. '#' → logprob: -4.023131847381592
    5. ')' → logprob: -5.648131847381592
    6. '(ans' → logprob: -6.648131847381592
    7. '	ans' → logprob: -6.773131847381592
    8. 'right' → logprob: -7.273131847381592
    9. ' #' → logprob: -7.398131847381592
    10. ' ' → logprob: -8.023131370544434

Token 572: 'clus' (ID: 4085)
  Prédit: 'clus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clus' → logprob: -1.3732107877731323
    2. 'cl' → logprob: -1.4982107877731323
    3. 'dex' → logprob: -1.4982107877731323
    4. 'range' → logprob: -2.373210906982422
    5. 'clusive' → logprob: -2.623210906982422
    6. 'right' → logprob: -3.373210906982422
    7. ',' → logprob: -4.123210906982422
    8. ' et' → logprob: -4.498210906982422
    9. ' range' → logprob: -4.623210906982422
    10. ' right' → logprob: -4.873210906982422

Token 573: ')' (ID: 8)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3070962727069855
    2. 'et' → logprob: -1.932096242904663
    3. ')' → logprob: -2.307096242904663
    4. ' and' → logprob: -4.432096481323242
    5. 'and' → logprob: -6.057096481323242
    6. ',' → logprob: -6.432096481323242
    7. '   ' → logprob: -6.682096481323242
    8. '#' → logprob: -6.682096481323242
    9. ' ' → logprob: -7.932096481323242
    10. ' )' → logprob: -8.682096481323242

Token 574: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002118619391694665
    2. ' et' → logprob: -6.7521185874938965
    3. '#' → logprob: -7.7521185874938965
    4. 'et' → logprob: -8.502119064331055
    5. 'and' → logprob: -9.002119064331055
    6. ' and' → logprob: -9.877119064331055
    7. '  ' → logprob: -10.377119064331055
    8. ' #' → logprob: -10.877119064331055
    9. ' ' → logprob: -11.002119064331055
    10. ' jusqu' → logprob: -11.002119064331055

Token 575: ' se' (ID: 458)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.41567009687423706
    2. 'termin' → logprob: -1.4156701564788818
    3. 'se' → logprob: -2.415670156478882
    4. 'f' → logprob: -5.290669918060303
    5. 'all' → logprob: -6.165669918060303
    6. 'ayant' → logprob: -7.790669918060303
    7. 'term' → logprob: -9.040670394897461
    8. 's' → logprob: -9.290670394897461
    9. 'ending' → logprob: -9.790670394897461
    10. 'dont' → logprob: -10.040670394897461

Token 576: ' termin' (ID: 18412)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'termin' → logprob: -0.00413088034838438
    2. 'fin' → logprob: -5.629130840301514
    3. 'term' → logprob: -8.629131317138672
    4. 'f' → logprob: -8.879131317138672
    5. 't' → logprob: -10.129131317138672
    6. 'con' → logprob: -10.254131317138672
    7. 'r' → logprob: -10.254131317138672
    8. 'n' → logprob: -11.504131317138672
    9. 'nt' → logprob: -11.629131317138672
    10. 'Termin' → logprob: -11.629131317138672

Token 577: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.15076759457588196
    2. 'nant' → logprob: -2.5257675647735596
    3. 'issant' → logprob: -3.9007675647735596
    4. 'rant' → logprob: -4.650767803192139
    5. 'à' → logprob: -5.025767803192139
    6. ' à' → logprob: -5.275767803192139
    7. 'right' → logprob: -5.900767803192139
    8. 'r' → logprob: -6.150767803192139
    9. ')' → logprob: -6.275767803192139
    10. 'endant' → logprob: -6.525767803192139

Token 578: ' avant' (ID: 13339)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.8177280426025391
    2. ' avant' → logprob: -0.9427280426025391
    3. ' entre' → logprob: -2.942728042602539
    4. 'before' → logprob: -3.442728042602539
    5. 'between' → logprob: -4.192728042602539
    6. 'au' → logprob: -4.567728042602539
    7. ' au' → logprob: -4.692728042602539
    8. 'entre' → logprob: -4.942728042602539
    9. 'aux' → logprob: -4.942728042602539
    10. '<|end|>' → logprob: -5.067728042602539

Token 579: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.028845442458987236
    2. ' right' → logprob: -3.6538455486297607
    3. 'ou' → logprob: -7.153845310211182
    4. 'or' → logprob: -7.403845310211182
    5. '[right' → logprob: -7.903845310211182
    6. 'd' → logprob: -8.77884578704834
    7. '   ' → logprob: -9.15384578704834
    8. '=' → logprob: -9.27884578704834
    9. '(right' → logprob: -9.40384578704834
    10. ',right' → logprob: -9.52884578704834

Token 580: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.371675580739975
    2. ' +=' → logprob: -1.6216756105422974
    3. '+=' → logprob: -2.371675491333008
    4. 'for' → logprob: -4.996675491333008
    5. '+' → logprob: -5.746675491333008
    6. 'right' → logprob: -6.121675491333008
    7. ' for' → logprob: -6.371675491333008
    8. ':' → logprob: -6.871675491333008
    9. ' right' → logprob: -7.371675491333008
    10. '=' → logprob: -7.621675491333008

Token 581: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005360402166843414
    2. 'right' → logprob: -6.0053606033325195
    3. '`)' → logprob: -7.8803606033325195
    4. '   ' → logprob: -8.38036060333252
    5. '```' → logprob: -8.38036060333252
    6. ',' → logprob: -8.38036060333252
    7. ')**' → logprob: -8.88036060333252
    8. ' )' → logprob: -9.00536060333252
    9. ' ' → logprob: -9.13036060333252
    10. '),' → logprob: -9.13036060333252

Token 582: 'clus' (ID: 4085)
  Prédit: 'cluded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cluded' → logprob: -0.5605528950691223
    2. 'clude' → logprob: -1.9355528354644775
    3. 'right' → logprob: -1.9355528354644775
    4. ')' → logprob: -2.8105528354644775
    5. 'clud' → logprob: -3.9355528354644775
    6. 'clusive' → logprob: -4.310553073883057
    7. 'cl' → logprob: -4.685553073883057
    8. 'clusion' → logprob: -4.935553073883057
    9. 'cluding' → logprob: -5.060553073883057
    10. 'clusions' → logprob: -5.310553073883057

Token 583: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0493893139064312
    2. '):' → logprob: -3.174389362335205
    3. '   ' → logprob: -5.799389362335205
    4. ':' → logprob: -5.924389362335205
    5. '):
' → logprob: -8.049388885498047
    6. 'right' → logprob: -8.799388885498047
    7. '+' → logprob: -10.174388885498047
    8. ' right' → logprob: -10.799388885498047
    9. ' ' → logprob: -11.049388885498047
    10. '#' → logprob: -11.174388885498047

Token 584: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000624514592345804
    2. 'ans' → logprob: -7.500624656677246
    3. ' ans' → logprob: -9.625624656677246
    4. '	ans' → logprob: -12.875624656677246
    5. '  ' → logprob: -13.500624656677246
    6. '(ans' → logprob: -14.000624656677246
    7. ' ' → logprob: -14.750624656677246
    8. '    ' → logprob: -16.25062370300293
    9. '       ' → logprob: -16.25062370300293
    10. ' =' → logprob: -17.50062370300293

Token 585: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09362895786762238
    2. 'ans' → logprob: -2.4686288833618164
    3. 'val' → logprob: -6.093628883361816
    4. 'valid' → logprob: -6.218628883361816
    5. '  ' → logprob: -9.718628883361816
    6. ' ans' → logprob: -9.843628883361816
    7. '	ans' → logprob: -10.093628883361816
    8. ' valid' → logprob: -10.468628883361816
    9. 'aj' → logprob: -10.593628883361816
    10. '
' → logprob: -10.593628883361816

Token 586: 'ides' (ID: 4105)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9236679077148438
    2. 'uable' → logprob: -1.4236679077148438
    3. 'ans' → logprob: -2.4236679077148438
    4. 'lus' → logprob: -2.7986679077148438
    5. 'u' → logprob: -2.9236679077148438
    6. 'ais' → logprob: -3.6736679077148438
    7. 'idable' → logprob: -3.9236679077148438
    8. 'ues' → logprob: -3.9236679077148438
    9. 'cul' → logprob: -4.423667907714844
    10. 'ide' → logprob: -4.923667907714844

Token 587: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10049563646316528
    2. 'ans' → logprob: -2.3504955768585205
    3. ' ans' → logprob: -8.475495338439941
    4. '(ans' → logprob: -10.475495338439941
    5. '	ans' → logprob: -10.725495338439941
    6. '
' → logprob: -10.975495338439941
    7. '```' → logprob: -11.475495338439941
    8. '    
' → logprob: -13.475495338439941
    9. '``' → logprob: -14.850495338439941
    10. '   ' → logprob: -15.350495338439941

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014281029812991619
    2. 'ans' → logprob: -4.264280796051025
    3. ' ans' → logprob: -9.139281272888184
    4. '```' → logprob: -12.014281272888184
    5. '	ans' → logprob: -13.014281272888184
    6. '(ans' → logprob: -13.639281272888184
    7. '
' → logprob: -15.014281272888184
    8. '   ' → logprob: -16.514280319213867
    9. '``' → logprob: -16.889280319213867
    10. '       ' → logprob: -17.139280319213867

Token 589: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.583200991153717
    2. 'ans' → logprob: -0.833200991153717
    3. ' ans' → logprob: -4.958200931549072
    4. '	ans' → logprob: -9.20820140838623
    5. '```' → logprob: -9.95820140838623
    6. '(ans' → logprob: -9.95820140838623
    7. '
' → logprob: -11.58320140838623
    8. '``' → logprob: -13.70820140838623
    9. '  ' → logprob: -13.70820140838623
    10. '    
' → logprob: -14.08320140838623

Token 590: ' Leur' (ID: 135723)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.925185440806672e-05
    2. '   ' → logprob: -9.250099182128906
    3. ' ans' → logprob: -12.875099182128906
    4. '	ans' → logprob: -15.000099182128906
    5. '```' → logprob: -15.625099182128906
    6. '(ans' → logprob: -16.500099182128906
    7. 'answer' → logprob: -17.500099182128906
    8. '    
' → logprob: -18.750099182128906
    9. '
' → logprob: -19.000099182128906
    10. '`' → logprob: -20.125099182128906

Token 591: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4466228485107422
    2. 'length' → logprob: -1.3216228485107422
    3. 'long' → logprob: -3.196622848510742
    4. 'len' → logprob: -4.946622848510742
    5. 'nombre' → logprob: -4.946622848510742
    6. 'leng' → logprob: -5.196622848510742
    7. 'tail' → logprob: -5.571622848510742
    8. ' ans' → logprob: -5.696622848510742
    9. ' longueur' → logprob: -5.696622848510742
    10. 'count' → logprob: -5.946622848510742

Token 592: ' est' (ID: 893)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2549287676811218
    2. '+=' → logprob: -1.5049288272857666
    3. '   ' → logprob: -5.8799285888671875
    4. '+=(' → logprob: -9.379928588867188
    5. '+' → logprob: -9.629928588867188
    6. '    ' → logprob: -11.379928588867188
    7. '=' → logprob: -11.504928588867188
    8. ' ' → logprob: -11.879928588867188
    9. '  ' → logprob: -12.379928588867188
    10. '	' → logprob: -12.379928588867188

Token 593: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.003085851902142167
    2. ' right' → logprob: -5.878086090087891
    3. '   ' → logprob: -8.50308609008789
    4. '(right' → logprob: -9.87808609008789
    5. 'ans' → logprob: -11.12808609008789
    6. '	right' → logprob: -12.12808609008789
    7. '[right' → logprob: -13.00308609008789
    8. '+=' → logprob: -14.25308609008789
    9. ',right' → logprob: -14.62808609008789
    10. '```' → logprob: -14.75308609008789

Token 594: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6330418586730957
    2. ' -' → logprob: -0.7580418586730957
    3. '   ' → logprob: -7.883041858673096
    4. '-left' → logprob: -10.258041381835938
    5. ' ' → logprob: -11.883041381835938
    6. ' ' → logprob: -12.383041381835938
    7. '−' → logprob: -12.883041381835938
    8. '-token' → logprob: -13.008041381835938
    9. '[right' → logprob: -13.133041381835938
    10. '```' → logprob: -13.133041381835938

Token 595: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.547789674485102e-05
    2. ' left' → logprob: -10.250035285949707
    3. '	left' → logprob: -19.250036239624023
    4. '_left' → logprob: -20.750036239624023
    5. 'right' → logprob: -20.875036239624023
    6. 'lef' → logprob: -21.250036239624023
    7. '   ' → logprob: -21.875036239624023
    8. '[left' → logprob: -22.125036239624023
    9. ' ' → logprob: -22.750036239624023
    10. 'Left' → logprob: -22.875036239624023

Token 596: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05153423175215721
    2. 'ans' → logprob: -3.0515341758728027
    3. ' ans' → logprob: -6.551534175872803
    4. '
' → logprob: -6.926534175872803
    5. '	ans' → logprob: -8.551534652709961
    6. '```' → logprob: -8.676534652709961
    7. '(ans' → logprob: -8.926534652709961
    8. '    
' → logprob: -11.301534652709961
    9. '\n' → logprob: -12.051534652709961
    10. '``' → logprob: -12.426534652709961

Token 597: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12723644077777863
    2. '   ' → logprob: -2.1272363662719727
    3. ' ans' → logprob: -8.127236366271973
    4. '	ans' → logprob: -11.627236366271973
    5. '(ans' → logprob: -12.502236366271973
    6. '```' → logprob: -15.627236366271973
    7. 'answer' → logprob: -16.87723731994629
    8. 'anst' → logprob: -17.50223731994629
    9. '_ans' → logprob: -17.62723731994629
    10. ' ' → logprob: -17.75223731994629

Token 598: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.787507714354433e-05
    2. '   ' → logprob: -10.00004768371582
    3. ' ans' → logprob: -13.00004768371582
    4. '	ans' → logprob: -16.00004768371582
    5. '```' → logprob: -16.62504768371582
    6. '(ans' → logprob: -17.87504768371582
    7. 'answer' → logprob: -20.25004768371582
    8. '_ans' → logprob: -21.00004768371582
    9. ' ' → logprob: -21.50004768371582
    10. 'anst' → logprob: -21.87504768371582

Token 599: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.25000286102295
    3. ' ans' → logprob: -13.50000286102295
    4. '	ans' → logprob: -17.250003814697266
    5. '(ans' → logprob: -18.625003814697266
    6. '```' → logprob: -19.625003814697266
    7. 'answer' → logprob: -20.625003814697266
    8. '_ans' → logprob: -21.500003814697266
    9. 'Ans' → logprob: -23.000003814697266
    10. '
' → logprob: -23.375003814697266

Token 600: ' ajoute' (ID: 91611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0014754603616893291
    2. ' +=' → logprob: -6.7514753341674805
    3. 'ans' → logprob: -8.12647533416748
    4. ']+=' → logprob: -12.50147533416748
    5. '=' → logprob: -12.87647533416748
    6. '   ' → logprob: -14.25147533416748
    7. '
' → logprob: -14.50147533416748
    8. '+' → logprob: -14.62647533416748
    9. '+=(' → logprob: -15.00147533416748
    10. '+="' → logprob: -15.00147533416748

Token 601: ' ce' (ID: 2357)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.31451690196990967
    2. ' right' → logprob: -1.3145169019699097
    3. '(right' → logprob: -6.814517021179199
    4. '   ' → logprob: -9.0645170211792
    5. '	right' → logprob: -10.8145170211792
    6. ' (' → logprob: -11.5645170211792
    7. '[right' → logprob: -12.1895170211792
    8. ' ' → logprob: -13.5645170211792
    9. '```' → logprob: -14.0645170211792
    10. 'ans' → logprob: -14.5645170211792

Token 602: ' nombre' (ID: 9733)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1743038445711136
    2. ' right' → logprob: -2.0493037700653076
    3. '+' → logprob: -3.7993037700653076
    4. '[right' → logprob: -5.299304008483887
    5. '(right' → logprob: -6.924304008483887
    6. '   ' → logprob: -7.049304008483887
    7. ' +' → logprob: -7.549304008483887
    8. '+=' → logprob: -8.174304008483887
    9. ' +=' → logprob: -8.174304008483887
    10. '
' → logprob: -9.049304008483887

Token 603: ' à' (ID: 1221)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.608052134513855
    2. ' +=' → logprob: -0.858052134513855
    3. '   ' → logprob: -3.4830522537231445
    4. '```' → logprob: -7.9830522537231445
    5. ' ans' → logprob: -8.233052253723145
    6. 'ans' → logprob: -9.108052253723145
    7. '(ans' → logprob: -10.108052253723145
    8. '=' → logprob: -10.108052253723145
    9. '+=(' → logprob: -10.608052253723145
    10. '	ans' → logprob: -10.733052253723145

Token 604: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0031812789384275675
    2. ' ans' → logprob: -5.753181457519531
    3. '(ans' → logprob: -13.253181457519531
    4. '	ans' → logprob: -13.378181457519531
    5. 'answer' → logprob: -16.00318145751953
    6. '   ' → logprob: -17.12818145751953
    7. '_ans' → logprob: -17.37818145751953
    8. '```' → logprob: -17.87818145751953
    9. '
' → logprob: -18.12818145751953
    10. '`' → logprob: -19.12818145751953

Token 605: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6397784948348999
    2. '   ' → logprob: -1.1397784948349
    3. ' ans' → logprob: -1.8897784948349
    4. '(ans' → logprob: -7.1397786140441895
    5. '	ans' → logprob: -7.2647786140441895
    6. '```' → logprob: -9.514778137207031
    7. '
' → logprob: -11.389778137207031
    8. '    
' → logprob: -12.264778137207031
    9. '  ' → logprob: -12.639778137207031
    10. '_ans' → logprob: -12.764778137207031

Token 606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5774605870246887
    2. 'ans' → logprob: -1.077460527420044
    3. ' ans' → logprob: -2.327460527420044
    4. '```' → logprob: -8.327460289001465
    5. '	ans' → logprob: -8.452460289001465
    6. '(ans' → logprob: -8.452460289001465
    7. '
' → logprob: -12.827460289001465
    8. '``' → logprob: -12.952460289001465
    9. '_ans' → logprob: -14.202460289001465
    10. '    
' → logprob: -14.577460289001465

Token 607: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0003009041247423738
    2. '   ' → logprob: -8.500301361083984
    3. ' ans' → logprob: -9.250301361083984
    4. '	ans' → logprob: -14.125301361083984
    5. '```' → logprob: -14.625301361083984
    6. '(ans' → logprob: -15.625301361083984
    7. '_ans' → logprob: -19.250301361083984
    8. '  ' → logprob: -19.625301361083984
    9. 'answer' → logprob: -19.750301361083984
    10. ' ' → logprob: -19.875301361083984

Token 608: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931854486465454
    2. '+=' → logprob: -0.6931854486465454
    3. '+' → logprob: -10.693185806274414
    4. '+=(' → logprob: -11.693185806274414
    5. ']+=' → logprob: -12.693185806274414
    6. '+="' → logprob: -13.443185806274414
    7. '=' → logprob: -14.068185806274414
    8. '+='' → logprob: -14.318185806274414
    9. '```' → logprob: -14.318185806274414
    10. '   ' → logprob: -14.568185806274414

Token 609: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014287383295595646
    2. ' right' → logprob: -4.26428747177124
    3. '(right' → logprob: -9.014286994934082
    4. '[right' → logprob: -13.889286994934082
    5. '	right' → logprob: -13.889286994934082
    6. '   ' → logprob: -15.889286994934082
    7. ' (' → logprob: -16.1392879486084
    8. ' ' → logprob: -16.7642879486084
    9. ',right' → logprob: -18.0142879486084
    10. ':right' → logprob: -18.2642879486084

Token 610: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038043901324272156
    2. '-' → logprob: -3.288043975830078
    3. ' ' → logprob: -14.413043975830078
    4. '   ' → logprob: -14.913043975830078
    5. ' ' → logprob: -14.913043975830078
    6. ' –' → logprob: -15.038043975830078
    7. '<|end|>' → logprob: -15.663043975830078
    8. '-left' → logprob: -15.788043975830078
    9. '  ' → logprob: -15.788043975830078
    10. ' −' → logprob: -16.538043975830078

Token 611: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.5491004129871726e-05
    2. ' left' → logprob: -10.000045776367188
    3. '	left' → logprob: -17.000045776367188
    4. '[left' → logprob: -19.750045776367188
    5. '_left' → logprob: -20.125045776367188
    6. '   ' → logprob: -20.375045776367188
    7. ':left' → logprob: -21.000045776367188
    8. ' ' → logprob: -21.625045776367188
    9. '(left' → logprob: -22.125045776367188
    10. '1' → logprob: -22.375045776367188

Token 612: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14159010350704193
    2. 'if' → logprob: -2.266590118408203
    3. '#' → logprob: -3.641590118408203
    4. 'sum' → logprob: -6.641590118408203
    5. ' if' → logprob: -8.016590118408203
    6. '    
' → logprob: -8.016590118408203
    7. '```' → logprob: -9.391590118408203
    8. 'A' → logprob: -10.891590118408203
    9. '
' → logprob: -11.016590118408203
    10. '   
' → logprob: -11.391590118408203

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04334958642721176
    2. '#' → logprob: -3.418349504470825
    3. 'if' → logprob: -5.418349742889404
    4. 'sum' → logprob: -5.918349742889404
    5. '    
' → logprob: -6.418349742889404
    6. '
' → logprob: -7.168349742889404
    7. '```' → logprob: -10.043349266052246
    8. '   
' → logprob: -10.293349266052246
    9. '  
' → logprob: -10.793349266052246
    10. '  ' → logprob: -12.293349266052246

Token 614: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08664587885141373
    2. '#' (adapté à ' #') → logprob: -3.0866458415985107
    3. 'sum' → logprob: -3.3366458415985107
    4. '   ' → logprob: -6.33664608001709
    5. ' if' → logprob: -11.46164608001709
    6. '```' → logprob: -12.71164608001709
    7. '    
' → logprob: -13.08664608001709
    8. 'left' → logprob: -14.83664608001709
    9. '
' → logprob: -15.46164608001709
    10. ' #' → logprob: -15.83664608001709

Token 615: ' Maintenant' (ID: 163349)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6409933567047119
    2. 'sum' → logprob: -0.8909933567047119
    3. '#' → logprob: -2.765993356704712
    4. '   ' → logprob: -10.015993118286133
    5. ' if' → logprob: -11.390993118286133
    6. 'left' → logprob: -12.640993118286133
    7. ' sum' → logprob: -13.015993118286133
    8. '```' → logprob: -13.890993118286133
    9. '
' → logprob: -14.140993118286133
    10. ' #' → logprob: -14.265993118286133

Token 616: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1172366812825203
    2. 'if' → logprob: -2.242236614227295
    3. '#' → logprob: -5.492236614227295
    4. ' if' → logprob: -8.242237091064453
    5. '  ' → logprob: -11.992237091064453
    6. ',' → logprob: -12.992237091064453
    7. '=' → logprob: -12.992237091064453
    8. ':' → logprob: -13.242237091064453
    9. '       ' → logprob: -13.492237091064453
    10. '	if' → logprob: -13.617237091064453

Token 617: ' il' (ID: 1793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09425968676805496
    2. 'sum' → logprob: -3.219259738922119
    3. '   ' → logprob: -3.594259738922119
    4. '#' → logprob: -3.844259738922119
    5. ' if' → logprob: -6.844259738922119
    6. ' sum' → logprob: -11.219259262084961
    7. ' #' → logprob: -12.844259262084961
    8. '    
' → logprob: -13.719259262084961
    9. '    ' → logprob: -14.594259262084961
    10. '  ' → logprob: -14.969259262084961

Token 618: ' faut' (ID: 17821)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.017085736617445946
    2. 'if' → logprob: -4.517085552215576
    3. '   ' → logprob: -5.392085552215576
    4. ' #' → logprob: -7.517085552215576
    5. '>' → logprob: -7.892085552215576
    6. ' if' → logprob: -9.017086029052734
    7. ' faut' → logprob: -9.267086029052734
    8. '=' → logprob: -9.392086029052734
    9. 's' → logprob: -10.142086029052734
    10. 'elif' → logprob: -10.642086029052734

Token 619: ' préparer' (ID: 86536)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.15756087005138397
    2. '#' → logprob: -2.2825608253479004
    3. '   ' → logprob: -4.4075608253479
    4. 'sou' → logprob: -4.7825608253479
    5. ' retirer' → logprob: -5.0325608253479
    6. 'en' → logprob: -5.1575608253479
    7. 'sup' → logprob: -5.6575608253479
    8. 're' → logprob: -5.7825608253479
    9. 'if' → logprob: -7.0325608253479
    10. 'retr' → logprob: -7.0325608253479

Token 620: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2612061500549316
    2. 'à' → logprob: -1.5112061500549316
    3. 'le' → logprob: -2.2612061500549316
    4. 'for' → logprob: -2.2612061500549316
    5. '   ' → logprob: -2.5112061500549316
    6. 'la' → logprob: -2.6362061500549316
    7. 'l' → logprob: -2.7612061500549316
    8. 'sum' → logprob: -3.7612061500549316
    9. ' à' → logprob: -4.011206150054932
    10. ' ' → logprob: -5.136206150054932

Token 621: ' prochain' (ID: 52413)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.26342159509658813
    2. '#' → logprob: -1.7634215354919434
    3. 'if' → logprob: -2.8884215354919434
    4. 'left' → logprob: -5.638421535491943
    5. '   ' → logprob: -7.888421535491943
    6. 'next' → logprob: -8.513422012329102
    7. 'som' → logprob: -9.263422012329102
    8. ' sum' → logprob: -10.388422012329102
    9. 's' → logprob: -10.388422012329102
    10. ' #' → logprob: -10.638422012329102

Token 622: ' tour' (ID: 6970)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.8407944440841675
    2. 'if' → logprob: -1.2157944440841675
    3. '   ' → logprob: -1.5907944440841675
    4. '#' → logprob: -3.340794563293457
    5. ' if' → logprob: -3.840794563293457
    6. ' left' → logprob: -5.340794563293457
    7. ' ' → logprob: -6.340794563293457
    8. 'right' → logprob: -6.340794563293457
    9. 'sum' → logprob: -7.465794563293457
    10. '  ' → logprob: -7.465794563293457

Token 623: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011510594777064398
    2. '    
' → logprob: -9.500115394592285
    3. '#' → logprob: -11.125115394592285
    4. ',' → logprob: -11.875115394592285
    5. '   
' → logprob: -12.250115394592285
    6. '
' → logprob: -12.750115394592285
    7. '   ' → logprob: -12.875115394592285
    8. '  ' → logprob: -13.125115394592285
    9. '    ' → logprob: -13.250115394592285
    10. ':' → logprob: -13.875115394592285

Token 624: ' boucle' (ID: 174211)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.08770893514156342
    2. 'bou' → logprob: -2.9627089500427246
    3. 'for' → logprob: -4.212708950042725
    4. ' boucle' → logprob: -4.462708950042725
    5. 'loop' → logprob: -5.337708950042725
    6. ' la' → logprob: -7.212708950042725
    7. 'b' → logprob: -8.712708473205566
    8. 'l' → logprob: -9.462708473205566
    9. '```' → logprob: -10.212708473205566
    10. '#' → logprob: -10.337708473205566

Token 625: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003614801215007901
    2. '#' → logprob: -5.878614902496338
    3. '
' → logprob: -8.50361442565918
    4. 'sum' → logprob: -8.87861442565918
    5. '    
' → logprob: -9.00361442565918
    6. '  ' → logprob: -9.62861442565918
    7. '   
' → logprob: -9.62861442565918
    8. ' #' → logprob: -9.75361442565918
    9. ',' → logprob: -10.12861442565918
    10. '```' → logprob: -10.12861442565918

Token 626: ' passer' (ID: 27727)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.010584368370473385
    2. 'la' → logprob: -5.260584354400635
    3. '#' → logprob: -5.885584354400635
    4. 'for' → logprob: -7.510584354400635
    5. 'right' → logprob: -7.510584354400635
    6. 'le' → logprob: -7.510584354400635
    7. 'l' → logprob: -7.885584354400635
    8. 'sum' → logprob: -8.760584831237793
    9. 'g' → logprob: -8.885584831237793
    10. ' left' → logprob: -9.635584831237793

Token 627: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36824262142181396
    2. ' à' → logprob: -1.243242621421814
    3. 'à' → logprob: -4.4932427406311035
    4. ' to' → logprob: -5.3682427406311035
    5. '    ' → logprob: -6.8682427406311035
    6. 'left' → logprob: -6.9932427406311035
    7. 'to' → logprob: -7.3682427406311035
    8. '#' → logprob: -7.7432427406311035
    9. '  ' → logprob: -8.243242263793945
    10. ' au' → logprob: -8.993242263793945

Token 628: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010565725155174732
    2. ':' → logprob: -5.135565757751465
    3. 'if' → logprob: -6.385565757751465
    4. '=' → logprob: -6.635565757751465
    5. '  ' → logprob: -7.760565757751465
    6. '#' → logprob: -8.510565757751465
    7. ',' → logprob: -8.635565757751465
    8. ' if' → logprob: -9.010565757751465
    9. 'while' → logprob: -9.010565757751465
    10. '    
' → logprob: -9.135565757751465

Token 629: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0001222508290084079
    2. '+' → logprob: -9.6251220703125
    3. ' left' → logprob: -10.3751220703125
    4. 'la' → logprob: -12.0001220703125
    5. 'the' → logprob: -12.0001220703125
    6. 'plus' → logprob: -12.1251220703125
    7. 'l' → logprob: -13.5001220703125
    8. '```' → logprob: -13.5001220703125
    9. 'next' → logprob: -14.0001220703125
    10. '[left' → logprob: -14.1251220703125

Token 630: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04308220371603966
    2. ' +' → logprob: -3.1680822372436523
    3. ' +=' → logprob: -9.668082237243652
    4. '+=' → logprob: -11.543082237243652
    5. '   ' → logprob: -12.543082237243652
    6. ' plus' → logprob: -13.043082237243652
    7. '+
' → logprob: -13.543082237243652
    8. '1' → logprob: -14.168082237243652
    9. ' +
' → logprob: -14.293082237243652
    10. ' ' → logprob: -14.668082237243652

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043400691356509924
    2. ' ' → logprob: -7.750433921813965
    3. '+' → logprob: -12.750433921813965
    4. ' +' → logprob: -15.000433921813965
    5. '   ' → logprob: -16.25043487548828
    6. '```' → logprob: -16.50043487548828
    7. '  ' → logprob: -18.12543487548828
    8. '`' → logprob: -19.00043487548828
    9. ' plus' → logprob: -20.12543487548828
    10. '‌' → logprob: -20.50043487548828

Token 632: '
' (ID: 198)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.24093160033226013
    2. '   ' → logprob: -1.6159316301345825
    3. 'if' → logprob: -4.865931510925293
    4. '#' → logprob: -5.490931510925293
    5. ' sum' → logprob: -6.240931510925293
    6. '
' → logprob: -7.115931510925293
    7. ' if' → logprob: -7.490931510925293
    8. '    
' → logprob: -9.740931510925293
    9. '  ' → logprob: -10.115931510925293
    10. '```' → logprob: -10.115931510925293

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3925779461860657
    2. 'sum' → logprob: -1.142577886581421
    3. 'if' → logprob: -5.517578125
    4. '#' → logprob: -6.517578125
    5. '```' → logprob: -9.517578125
    6. ' sum' → logprob: -10.267578125
    7. '
' → logprob: -11.142578125
    8. ' if' → logprob: -11.267578125
    9. '(sum' → logprob: -11.392578125
    10. '	sum' → logprob: -11.642578125

Token 634: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12574879825115204
    2. 'if' → logprob: -2.375748872756958
    3. '   ' → logprob: -4.375748634338379
    4. '#' (adapté à ' #') → logprob: -4.375748634338379
    5. ' if' → logprob: -10.000748634338379
    6. ' sum' → logprob: -11.375748634338379
    7. '```' → logprob: -13.750748634338379
    8. ' #' → logprob: -13.875748634338379
    9. '	sum' → logprob: -14.750748634338379
    10. '  ' → logprob: -14.750748634338379

Token 635: ' Si' (ID: 7832)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07548939436674118
    2. 'if' → logprob: -2.7004892826080322
    3. '#' → logprob: -5.200489521026611
    4. '   ' → logprob: -10.950489044189453
    5. ' if' → logprob: -12.700489044189453
    6. ' sum' → logprob: -13.200489044189453
    7. '```' → logprob: -14.825489044189453
    8. 'If' → logprob: -15.450489044189453
    9. '	sum' → logprob: -16.075489044189453
    10. '(sum' → logprob: -16.325489044189453

Token 636: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6669540405273438
    2. 'right' → logprob: -0.9169540405273438
    3. ' right' → logprob: -2.9169540405273438
    4. ' left' → logprob: -3.4169540405273438
    5. '	right' → logprob: -10.291954040527344
    6. '	left' → logprob: -10.416954040527344
    7. ' ' → logprob: -11.166954040527344
    8. '   ' → logprob: -12.666954040527344
    9. '  ' → logprob: -13.541954040527344
    10. '(left' → logprob: -14.541954040527344

Token 637: ' et' (ID: 859)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.040356963872909546
    2. ' >' → logprob: -3.2903568744659424
    3. '==' → logprob: -6.1653571128845215
    4. ' ==' → logprob: -8.665356636047363
    5. '!=' → logprob: -10.540356636047363
    6. '-' → logprob: -12.790356636047363
    7. ' ' → logprob: -12.915356636047363
    8. ' !=' → logprob: -13.165356636047363
    9. 'and' → logprob: -13.290356636047363
    10. '=' → logprob: -13.790356636047363

Token 638: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -7.541112427134067e-05
    2. ' left' → logprob: -9.500075340270996
    3. 'N' → logprob: -15.750075340270996
    4. 'right' → logprob: -15.875075340270996
    5. '	left' → logprob: -16.000076293945312
    6. '[left' → logprob: -16.375076293945312
    7. '(left' → logprob: -18.125076293945312
    8. ':left' → logprob: -18.875076293945312
    9. ' ' → logprob: -19.250076293945312
    10. '.left' → logprob: -19.625076293945312

Token 639: ' sont' (ID: 5242)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6282215118408203
    2. '==' → logprob: -0.8782215118408203
    3. ' <=' → logprob: -4.12822151184082
    4. ' >=' → logprob: -4.50322151184082
    5. '<=' → logprob: -4.62822151184082
    6. '>=' → logprob: -4.62822151184082
    7. '>' → logprob: -6.00322151184082
    8. ' >' → logprob: -6.75322151184082
    9. ' <' → logprob: -8.25322151184082
    10. '=' → logprob: -9.37822151184082

Token 640: ' au' (ID: 2791)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.6576335430145264
    2. 'eg' → logprob: -2.0326335430145264
    3. 'égal' → logprob: -2.1576335430145264
    4. ' ég' → logprob: -2.2826335430145264
    5. 'equal' → logprob: -2.4076335430145264
    6. 'ident' → logprob: -3.9076335430145264
    7. 'egal' → logprob: -4.5326337814331055
    8. ' eg' → logprob: -6.1576337814331055
    9. 'pare' → logprob: -6.4076337814331055
    10. 'à' → logprob: -6.6576337814331055

Token 641: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7017876505851746
    2. 'moins' → logprob: -0.7017876505851746
    3. 'less' → logprob: -5.32678747177124
    4. 'same' → logprob: -6.95178747177124
    5. 'mo' → logprob: -7.45178747177124
    6. ' moins' → logprob: -7.70178747177124
    7. 'left' → logprob: -7.82678747177124
    8. 'minimum' → logprob: -8.201787948608398
    9. 'least' → logprob: -8.451787948608398
    10. ' même' → logprob: -8.701787948608398

Token 642: ' endroit' (ID: 79158)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06505180895328522
    2. 'index' → logprob: -3.565051794052124
    3. 'end' → logprob: -4.315052032470703
    4. 'niveau' → logprob: -4.815052032470703
    5. 'indice' → logprob: -5.190052032470703
    6. 'point' → logprob: -5.690052032470703
    7. 'moment' → logprob: -7.190052032470703
    8. 'left' → logprob: -7.190052032470703
    9. 'position' → logprob: -7.940052032470703
    10. 'interval' → logprob: -8.190052032470703

Token 643: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6581307649612427
    2. ':' → logprob: -1.2831307649612427
    3. 'and' → logprob: -1.7831307649612427
    4. '   ' → logprob: -4.033130645751953
    5. ' ==' → logprob: -4.658130645751953
    6. 'if' → logprob: -5.533130645751953
    7. '==' → logprob: -6.033130645751953
    8. ':
' → logprob: -6.533130645751953
    9. ' if' → logprob: -7.283130645751953
    10. ',' → logprob: -7.783130645751953

Token 644: ' cela' (ID: 17542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04111704230308533
    2. 'if' → logprob: -3.291116952896118
    3. ' if' → logprob: -5.916117191314697
    4. '#' → logprob: -8.291116714477539
    5. '       ' → logprob: -10.416116714477539
    6. 'sum' → logprob: -10.666116714477539
    7. 'right' → logprob: -11.041116714477539
    8. '    ' → logprob: -11.291116714477539
    9. '   ' → logprob: -11.666116714477539
    10. 'left' → logprob: -11.916116714477539

Token 645: ' signifie' (ID: 81149)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6680352687835693
    2. '>' → logprob: -1.4180352687835693
    3. ' ==' → logprob: -1.7930352687835693
    4. '   ' → logprob: -3.4180352687835693
    5. '<' → logprob: -4.168035507202148
    6. ' >' → logprob: -4.793035507202148
    7. 'if' → logprob: -5.418035507202148
    8. '#' → logprob: -5.543035507202148
    9. '!=' → logprob: -5.918035507202148
    10. 'continue' → logprob: -6.043035507202148

Token 646: ' qu' (ID: 474)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.188012033700943
    2. 'right' → logprob: -1.8130120038986206
    3. ' right' → logprob: -5.43801212310791
    4. 'left' → logprob: -6.68801212310791
    5. ' que' → logprob: -7.06301212310791
    6. '  ' → logprob: -7.18801212310791
    7. 'if' → logprob: -8.43801212310791
    8. 'that' → logprob: -8.43801212310791
    9. '    ' → logprob: -8.56301212310791
    10. ' ' → logprob: -9.56301212310791

Token 647: ''on' (ID: 25812)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.051665227860212326
    2. 'left' → logprob: -3.5516653060913086
    3. ' right' → logprob: -4.051665306091309
    4. '   ' → logprob: -5.676665306091309
    5. ' left' → logprob: -7.801665306091309
    6. 'sum' → logprob: -8.176665306091309
    7. '	right' → logprob: -9.801665306091309
    8. '  ' → logprob: -10.176665306091309
    9. ' ' → logprob: -10.801665306091309
    10. 'A' → logprob: -11.551665306091309

Token 648: ' n' (ID: 297)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32650601863861084
    2. 'n' → logprob: -2.2015061378479004
    3. 'do' → logprob: -3.4515061378479004
    4. 'sum' → logprob: -3.4515061378479004
    5. 'right' → logprob: -3.5765061378479004
    6. 'pe' → logprob: -3.7015061378479004
    7. '>' → logprob: -4.7015061378479
    8. 'ne' → logprob: -4.8265061378479
    9. 'continue' → logprob: -5.2015061378479
    10. 'aj' → logprob: -5.4515061378479

Token 649: ''a' (ID: 10443)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8331185579299927
    2. '>' → logprob: -2.333118438720703
    3. 'e' → logprob: -2.583118438720703
    4. 'if' → logprob: -2.833118438720703
    5. '   ' → logprob: -3.083118438720703
    6. 'a' → logprob: -3.208118438720703
    7. ' a' → logprob: -3.458118438720703
    8. 'right' → logprob: -3.458118438720703
    9. ' #' → logprob: -3.958118438720703
    10. ' doit' → logprob: -4.208118438720703

Token 650: ' pas' (ID: 2173)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3543119728565216
    2. 'pas' → logprob: -1.3543119430541992
    3. 'left' → logprob: -3.729311943054199
    4. ' right' → logprob: -4.979311943054199
    5. '#' → logprob: -5.729311943054199
    6. '0' → logprob: -6.979311943054199
    7. ' pas' → logprob: -7.104311943054199
    8. 'd' → logprob: -7.229311943054199
    9. 'aj' → logprob: -8.1043119430542
    10. ' ' → logprob: -8.2293119430542

Token 651: ' avanc' (ID: 87985)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.7644490003585815
    2. 'right' → logprob: -1.7644490003585815
    3. 'aj' → logprob: -2.389449119567871
    4. 'av' → logprob: -3.014449119567871
    5. 'dé' → logprob: -3.014449119567871
    6. ' avanc' → logprob: -3.389449119567871
    7. 'incl' → logprob: -3.639449119567871
    8. 'enc' → logprob: -3.889449119567871
    9. 'in' → logprob: -4.389449119567871
    10. 'left' → logprob: -4.514449119567871

Token 652: 'é' (ID: 377)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.19038552045822144
    2. '=' → logprob: -2.690385580062866
    3. ' right' → logprob: -3.565385580062866
    4. 'u' → logprob: -3.690385580062866
    5. 'é' → logprob: -3.690385580062866
    6. 'e' → logprob: -4.315385341644287
    7. 'ed' → logprob: -5.190385341644287
    8. 'left' → logprob: -6.690385341644287
    9. ' ' → logprob: -6.815385341644287
    10. '_right' → logprob: -7.065385341644287

Token 653: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3829144537448883
    2. 'if' → logprob: -1.757914423942566
    3. 'left' → logprob: -2.2579145431518555
    4. ' right' → logprob: -3.8829145431518555
    5. ' if' → logprob: -4.3829145431518555
    6. '   ' → logprob: -5.5079145431518555
    7. ' left' → logprob: -6.5079145431518555
    8. 'while' → logprob: -7.5079145431518555
    9. ' ' → logprob: -7.6329145431518555
    10. ':' → logprob: -7.8829145431518555

Token 654: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5747665166854858
    2. 'if' → logprob: -1.4497665166854858
    3. ':' → logprob: -2.1997666358947754
    4. ' and' → logprob: -3.1997666358947754
    5. 'and' → logprob: -3.9497666358947754
    6. ' if' → logprob: -3.9497666358947754
    7. '==' → logprob: -5.699766635894775
    8. ' or' → logprob: -5.824766635894775
    9. ' ==' → logprob: -5.824766635894775
    10. ':
' → logprob: -7.324766635894775

Token 655: ' donc' (ID: 14206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18984012305736542
    2. '   ' → logprob: -1.9398400783538818
    3. ' if' → logprob: -3.564840078353882
    4. 'else' → logprob: -7.939840316772461
    5. '#' → logprob: -8.189840316772461
    6. '       ' → logprob: -9.064840316772461
    7. '    ' → logprob: -10.189840316772461
    8. 'sum' → logprob: -10.189840316772461
    9. '  ' → logprob: -11.564840316772461
    10. 'while' → logprob: -11.814840316772461

Token 656: ' rien' (ID: 23082)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010652788914740086
    2. 'right' → logprob: -5.010653018951416
    3. '   ' → logprob: -5.635653018951416
    4. ' if' → logprob: -8.885652542114258
    5. 'continue' → logprob: -9.760652542114258
    6. 'sum' → logprob: -10.010652542114258
    7. 'pass' → logprob: -10.135652542114258
    8. '#' → logprob: -10.385652542114258
    9. 'left' → logprob: -10.885652542114258
    10. '       ' → logprob: -12.010652542114258

Token 657: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8015097379684448
    2. 'to' → logprob: -1.5515097379684448
    3. 'à' → logprob: -2.0515098571777344
    4. 'if' → logprob: -2.4265098571777344
    5. 'n' → logprob: -2.8015098571777344
    6. 'ne' → logprob: -3.6765098571777344
    7. ' à' → logprob: -4.176509857177734
    8. ' to' → logprob: -5.301509857177734
    9. '==' → logprob: -5.551509857177734
    10. '+=' → logprob: -6.176509857177734

Token 658: ' enlever' (ID: 196982)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.19619973003864288
    2. 'faire' → logprob: -2.196199655532837
    3. 'sup' → logprob: -3.446199655532837
    4. 'en' → logprob: -3.571199655532837
    5. ' retirer' → logprob: -6.071199893951416
    6. 'aj' → logprob: -6.946199893951416
    7. 'sou' → logprob: -7.071199893951416
    8. 'mettre' → logprob: -7.321199893951416
    9. 'changer' → logprob: -7.446199893951416
    10. 'modifier' → logprob: -7.821199893951416

Token 659: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4031844437122345
    2. 'if' → logprob: -1.153184413909912
    3. ' if' → logprob: -4.153184413909912
    4. ':' → logprob: -8.02818489074707
    5. '	if' → logprob: -10.15318489074707
    6. '```' → logprob: -10.40318489074707
    7. ' and' → logprob: -11.02818489074707
    8. ' or' → logprob: -11.77818489074707
    9. 'while' → logprob: -11.77818489074707
    10. 'and' → logprob: -11.77818489074707

Token 660: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4769856333732605
    2. '   ' → logprob: -0.9769856333732605
    3. ' if' → logprob: -5.851985454559326
    4. 'else' → logprob: -11.351985931396484
    5. 'while' → logprob: -12.226985931396484
    6. '```' → logprob: -12.351985931396484
    7. '	if' → logprob: -12.476985931396484
    8. '    
' → logprob: -12.726985931396484
    9. '       ' → logprob: -14.726985931396484
    10. '
' → logprob: -15.101985931396484

Token 661: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004415517207235098
    2. '   ' → logprob: -5.504415512084961
    3. ' if' → logprob: -8.004415512084961
    4. '```' → logprob: -13.754415512084961
    5. 'else' → logprob: -13.879415512084961
    6. 'while' → logprob: -14.629415512084961
    7. '	if' → logprob: -14.754415512084961
    8. '    
' → logprob: -16.25441551208496
    9. ' ' → logprob: -17.00441551208496
    10. '  ' → logprob: -17.37941551208496

Token 662: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.17517758905887604
    2. ' right' → logprob: -1.9251775741577148
    3. 'left' → logprob: -4.300177574157715
    4. ' left' → logprob: -6.675177574157715
    5. '	right' → logprob: -11.300177574157715
    6. '   ' → logprob: -14.925177574157715
    7. '	left' → logprob: -14.925177574157715
    8. '[right' → logprob: -15.675177574157715
    9. ' ' → logprob: -15.800177574157715
    10. '(right' → logprob: -15.925177574157715

Token 663: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04912422597408295
    2. ' ==' → logprob: -3.049124240875244
    3. '<=' → logprob: -7.674124240875244
    4. '=' → logprob: -9.799123764038086
    5. ' <=' → logprob: -11.799123764038086
    6. '>' → logprob: -12.674123764038086
    7. '==
' → logprob: -12.674123764038086
    8. ']==' → logprob: -14.174123764038086
    9. ')==' → logprob: -14.299123764038086
    10. '```' → logprob: -14.424123764038086

Token 664: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.981667537620524e-06
    2. ' left' → logprob: -13.250001907348633
    3. '	left' → logprob: -16.250001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '[left' → logprob: -20.125001907348633
    6. ' ' → logprob: -21.250001907348633
    7. ':left' → logprob: -21.750001907348633
    8. '.left' → logprob: -22.750001907348633
    9. '_left' → logprob: -22.875001907348633
    10. '  ' → logprob: -23.125001907348633

Token 665: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18329013884067535
    2. ':
' → logprob: -1.8082901239395142
    3. '   ' → logprob: -5.683290004730225
    4. ' :' → logprob: -10.683290481567383
    5. ' ' → logprob: -10.933290481567383
    6. ':right' → logprob: -11.183290481567383
    7. ' :
' → logprob: -11.308290481567383
    8. '  ' → logprob: -11.683290481567383
    9. ':return' → logprob: -11.683290481567383
    10. '       ' → logprob: -11.808290481567383

Token 666: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25203341245651245
    2. 'right' → logprob: -1.5020334720611572
    3. '	right' → logprob: -10.127033233642578
    4. ' right' → logprob: -10.127033233642578
    5. '       ' → logprob: -10.877033233642578
    6. 'continue' → logprob: -13.252033233642578
    7. '    
' → logprob: -14.127033233642578
    8. '[right' → logprob: -14.502033233642578
    9. '   ' → logprob: -14.502033233642578
    10. '```' → logprob: -14.752033233642578

Token 667: ' #' (ID: 1069)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06073791906237602
    2. '       ' → logprob: -3.3107378482818604
    3. '   ' → logprob: -3.8107378482818604
    4. ' right' → logprob: -8.685737609863281
    5. '           ' → logprob: -9.060737609863281
    6. '	right' → logprob: -10.935737609863281
    7. '#' (adapté à ' #') → logprob: -13.435737609863281
    8. '     ' → logprob: -13.435737609863281
    9. ' ' → logprob: -14.185737609863281
    10. '```' → logprob: -14.810737609863281

Token 668: ' On' (ID: 2160)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0011879685334861279
    2. '   ' → logprob: -6.751187801361084
    3. '       ' → logprob: -11.501188278198242
    4. ' right' → logprob: -11.876188278198242
    5. '	right' → logprob: -14.751188278198242
    6. '           ' → logprob: -15.751188278198242
    7. '#' → logprob: -16.376188278198242
    8. '     ' → logprob: -17.501188278198242
    9. ' ' → logprob: -17.876188278198242
    10. '  ' → logprob: -18.251188278198242

Token 669: ' avance' (ID: 81376)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.009343532845377922
    2. '       ' → logprob: -5.00934362411499
    3. '   ' → logprob: -6.13434362411499
    4. ' right' → logprob: -8.134343147277832
    5. '#' → logprob: -9.509343147277832
    6. '           ' → logprob: -10.259343147277832
    7. '
' → logprob: -10.884343147277832
    8. '	right' → logprob: -10.884343147277832
    9. '```' → logprob: -12.384343147277832
    10. '        
' → logprob: -12.509343147277832

Token 670: ' simplement' (ID: 45065)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0006722823018208146
    2. ' right' → logprob: -8.000672340393066
    3. '       ' → logprob: -8.375672340393066
    4. '   ' → logprob: -9.875672340393066
    5. '           ' → logprob: -10.125672340393066
    6. '	right' → logprob: -11.250672340393066
    7. 'left' → logprob: -14.375672340393066
    8. 'r' → logprob: -15.125672340393066
    9. '[right' → logprob: -15.625672340393066
    10. '```' → logprob: -15.875672340393066

Token 671: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0006527475197799504
    2. '   ' → logprob: -8.125652313232422
    3. ' right' → logprob: -8.750652313232422
    4. '       ' → logprob: -8.750652313232422
    5. '           ' → logprob: -10.375652313232422
    6. '	right' → logprob: -11.875652313232422
    7. '```' → logprob: -13.875652313232422
    8. 'left' → logprob: -15.375652313232422
    9. '[right' → logprob: -16.000652313232422
    10. 'Right' → logprob: -16.500652313232422

Token 672: ' d' (ID: 272)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5349178314208984
    2. ' +=' → logprob: -0.9099178314208984
    3. '   ' → logprob: -4.659917831420898
    4. '       ' → logprob: -6.284917831420898
    5. 'right' → logprob: -8.659917831420898
    6. '```' → logprob: -9.534917831420898
    7. '           ' → logprob: -10.034917831420898
    8. '=' → logprob: -10.659917831420898
    9. '<|end|>' → logprob: -10.659917831420898
    10. ' right' → logprob: -11.034917831420898

Token 673: ''un' (ID: 9788)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -11.250022888183594
    3. '   ' → logprob: -13.000022888183594
    4. '+' → logprob: -13.125022888183594
    5. '<|end|>' → logprob: -13.125022888183594
    6. '```' → logprob: -13.875022888183594
    7. 'right' → logprob: -15.000022888183594
    8. 'e' → logprob: -15.250022888183594
    9. 's' → logprob: -15.375022888183594
    10. 'ans' → logprob: -15.750022888183594

Token 674: ' cran' (ID: 90499)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002734620589762926
    2. '<|end|>' → logprob: -6.752734661102295
    3. '```' → logprob: -7.127734661102295
    4. '+' → logprob: -9.002734184265137
    5. '<|end|>' → logprob: -9.127734184265137
    6. 'right' → logprob: -9.252734184265137
    7. 'token' → logprob: -9.377734184265137
    8. '++' → logprob: -9.752734184265137
    9. 'increment' → logprob: -9.877734184265137
    10. '   ' → logprob: -10.877734184265137

Token 675: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39011359214782715
    2. '   ' → logprob: -1.8901135921478271
    3. 'right' → logprob: -2.515113592147827
    4. '           ' → logprob: -3.515113592147827
    5. '=' → logprob: -3.765113592147827
    6. ' right' → logprob: -4.265113830566406
    7. '+' → logprob: -4.765113830566406
    8. '<|end|>' → logprob: -5.515113830566406
    9. '[right' → logprob: -6.265113830566406
    10. ')' → logprob: -6.515113830566406

Token 676: ' éviter' (ID: 64013)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0004842962371185422
    2. ' right' → logprob: -7.750484466552734
    3. '   ' → logprob: -10.375484466552734
    4. '       ' → logprob: -11.000484466552734
    5. '	right' → logprob: -12.375484466552734
    6. '           ' → logprob: -14.875484466552734
    7. '1' → logprob: -15.250484466552734
    8. 'continue' → logprob: -15.375484466552734
    9. '```' → logprob: -15.375484466552734
    10. '[right' → logprob: -16.000484466552734

Token 677: ' un' (ID: 537)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.624090313911438
    2. 'in' → logprob: -1.374090313911438
    3. 'une' → logprob: -1.999090313911438
    4. ' right' → logprob: -3.7490901947021484
    5. 'inf' → logprob: -3.9990901947021484
    6. ' une' → logprob: -4.124090194702148
    7. 'un' → logprob: -4.624090194702148
    8. ' un' → logprob: -6.249090194702148
    9. ' infinite' → logprob: -6.499090194702148
    10. 'blo' → logprob: -6.749090194702148

Token 678: ' bloc' (ID: 51218)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.6792954802513123
    2. 'bloc' → logprob: -1.179295539855957
    3. 'blo' → logprob: -2.929295539855957
    4. 'while' → logprob: -3.554295539855957
    5. 'in' → logprob: -3.804295539855957
    6. 'block' → logprob: -4.054295539855957
    7. 'b' → logprob: -4.054295539855957
    8. '```' → logprob: -4.554295539855957
    9. 'inf' → logprob: -5.179295539855957
    10. 'loop' → logprob: -5.304295539855957

Token 679: 'age' (ID: 477)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32498040795326233
    2. 'right' → logprob: -1.57498037815094
    3. '       ' → logprob: -2.6999804973602295
    4. 'break' → logprob: -6.82498025894165
    5. '           ' → logprob: -7.07498025894165
    6. ' right' → logprob: -7.82498025894165
    7. 'age' → logprob: -8.449980735778809
    8. '    ' → logprob: -8.699980735778809
    9. ' ' → logprob: -8.824980735778809
    10. 'continue' → logprob: -9.074980735778809

Token 680: ' inf' (ID: 5603)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.36434999108314514
    2. '       ' → logprob: -1.4893499612808228
    3. ' right' → logprob: -2.8643500804901123
    4. '   ' → logprob: -4.489349842071533
    5. '           ' → logprob: -4.864349842071533
    6. '```' → logprob: -6.489349842071533
    7. '
' → logprob: -6.864349842071533
    8. '[right' → logprob: -7.614349842071533
    9. '	right' → logprob: -8.114350318908691
    10. '    
' → logprob: -9.739350318908691

Token 681: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.022185372188687325
    2. 'inite' → logprob: -4.522185325622559
    3. 'init' → logprob: -4.522185325622559
    4. 'in' → logprob: -10.522185325622559
    5. 'initely' → logprob: -10.522185325622559
    6. 'i' → logprob: -11.147185325622559
    7. '#' → logprob: -11.272185325622559
    8. 'inity' → logprob: -11.272185325622559
    9. 'if' → logprob: -11.647185325622559
    10. 'ine' → logprob: -11.772185325622559

Token 682: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2953657805919647
    2. 'right' → logprob: -1.545365810394287
    3. ' right' → logprob: -3.920365810394287
    4. '   ' → logprob: -4.295365810394287
    5. '
' → logprob: -4.920365810394287
    6. '           ' → logprob: -6.920365810394287
    7. '	right' → logprob: -8.295365333557129
    8. '[right' → logprob: -8.920365333557129
    9. '```' → logprob: -9.420365333557129
    10. '    
' → logprob: -9.670365333557129

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056331612169742584
    2. 'right' → logprob: -3.1813316345214844
    3. ' right' → logprob: -4.556331634521484
    4. '   ' → logprob: -6.556331634521484
    5. '           ' → logprob: -7.181331634521484
    6. '	right' → logprob: -8.806331634521484
    7. '[right' → logprob: -8.931331634521484
    8. '
' → logprob: -9.306331634521484
    9. '        
' → logprob: -9.681331634521484
    10. '```' → logprob: -10.556331634521484

Token 684: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.750001907348633
    3. ' right' → logprob: -13.750001907348633
    4. '	right' → logprob: -18.000001907348633
    5. '       ' → logprob: -21.125001907348633
    6. '```' → logprob: -21.750001907348633
    7. '[right' → logprob: -22.500001907348633
    8. 'Right' → logprob: -22.625001907348633
    9. ',right' → logprob: -22.750001907348633
    10. '右' → logprob: -22.750001907348633

Token 685: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0181950144469738
    2. ' +=' → logprob: -4.018195152282715
    3. '+' → logprob: -10.643195152282715
    4. '=' → logprob: -10.893195152282715
    5. ']+=' → logprob: -13.893195152282715
    6. '++' → logprob: -14.893195152282715
    7. '+='' → logprob: -14.893195152282715
    8. '+="' → logprob: -15.018195152282715
    9. '```' → logprob: -15.143195152282715
    10. '<|end|>' → logprob: -15.268195152282715

Token 686: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -17.000003814697266
    4. '```' → logprob: -18.625003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '۱' → logprob: -20.375003814697266
    7. '<|end|>' → logprob: -21.312503814697266
    8. '১' → logprob: -21.312503814697266
    9. 'python' → logprob: -21.625003814697266
    10. '१' → logprob: -21.687503814697266

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۱' → logprob: -20.25
    4. '```' → logprob: -20.375
    5. '0' → logprob: -20.625
    6. '<|end|>' → logprob: -20.75
    7. '১' → logprob: -21.625
    8. '१' → logprob: -21.75
    9. '１' → logprob: -22.5
    10. '+' → logprob: -22.625

Token 688: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06208173185586929
    2. 'else' → logprob: -3.062081813812256
    3. '       ' → logprob: -4.562081813812256
    4. ' else' → logprob: -6.562081813812256
    5. 'continue' → logprob: -6.562081813812256
    6. ' continue' → logprob: -10.437081336975098
    7. '    
' → logprob: -10.812081336975098
    8. 'elif' → logprob: -10.937081336975098
    9. '```' → logprob: -11.187081336975098
    10. '	continue' → logprob: -11.312081336975098

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44903329014778137
    2. 'else' → logprob: -1.074033260345459
    3. ' else' → logprob: -3.949033260345459
    4. 'sum' → logprob: -8.199033737182617
    5. '    
' → logprob: -8.324033737182617
    6. 'continue' → logprob: -9.074033737182617
    7. '```' → logprob: -9.324033737182617
    8. '<|end|>' → logprob: -10.449033737182617
    9. '  ' → logprob: -11.324033737182617
    10. '	else' → logprob: -11.449033737182617

Token 690: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0036984162870794535
    2. '   ' → logprob: -5.753698348999023
    3. ' else' → logprob: -8.253698348999023
    4. 'sum' → logprob: -8.378698348999023
    5. '```' → logprob: -10.503698348999023
    6. '#' → logprob: -13.128698348999023
    7. '    
' → logprob: -14.878698348999023
    8. 'elif' → logprob: -15.503698348999023
    9. '``' → logprob: -15.753698348999023
    10. '	else' → logprob: -16.253698348999023

Token 691: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7721343040466309
    2. ':' → logprob: -1.1471343040466309
    3. ':
' → logprob: -1.5221343040466309
    4. '       ' → logprob: -6.272134304046631
    5. ' :
' → logprob: -9.272134780883789
    6. '#' → logprob: -9.522134780883789
    7. ' :' → logprob: -9.772134780883789
    8. '):
' → logprob: -10.897134780883789
    9. ':#' → logprob: -11.022134780883789
    10. '```' → logprob: -11.897134780883789

Token 692: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31418871879577637
    2. '       ' → logprob: -1.3141887187957764
    3. 'sum' → logprob: -7.1891889572143555
    4. '#' → logprob: -8.689188957214355
    5. ' sum' → logprob: -13.189188957214355
    6. '           ' → logprob: -15.189188957214355
    7. '	sum' → logprob: -15.189188957214355
    8. '    ' → logprob: -15.689188957214355
    9. '```' → logprob: -15.814188957214355
    10. '   ' → logprob: -16.18918800354004

Token 693: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7178868651390076
    2. 'sum' → logprob: -0.7178868651390076
    3. '   ' → logprob: -3.9678869247436523
    4. '#' (adapté à ' #') → logprob: -5.217886924743652
    5. ' sum' → logprob: -9.342886924743652
    6. '	sum' → logprob: -11.967886924743652
    7. '           ' → logprob: -12.342886924743652
    8. ' #' → logprob: -13.717886924743652
    9. '     ' → logprob: -14.092886924743652
    10. '      ' → logprob: -14.217886924743652

Token 694: ' Sinon' (ID: 154924)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3617999851703644
    2. '#' → logprob: -1.611799955368042
    3. '   ' → logprob: -2.611799955368042
    4. '       ' → logprob: -3.486799955368042
    5. ' sum' → logprob: -10.486800193786621
    6. ' #' → logprob: -12.236800193786621
    7. '	sum' → logprob: -12.361800193786621
    8. '           ' → logprob: -12.486800193786621
    9. '     ' → logprob: -13.361800193786621
    10. '    ' → logprob: -13.486800193786621

Token 695: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4726319909095764
    2. '   ' → logprob: -1.0976319313049316
    3. '#' → logprob: -3.2226319313049316
    4. ':' → logprob: -5.847631931304932
    5. ' #' → logprob: -9.22263240814209
    6. 'sum' → logprob: -9.22263240814209
    7. '           ' → logprob: -11.09763240814209
    8. ':
' → logprob: -11.59763240814209
    9. ' sum' → logprob: -12.22263240814209
    10. ',' → logprob: -12.72263240814209

Token 696: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42160871624946594
    2. 'sum' → logprob: -1.5466086864471436
    3. '#' → logprob: -2.4216086864471436
    4. '   ' → logprob: -3.1716086864471436
    5. ' sum' → logprob: -8.296608924865723
    6. ' #' → logprob: -10.296608924865723
    7. '	sum' → logprob: -11.171608924865723
    8. '           ' → logprob: -11.296608924865723
    9. '      ' → logprob: -12.796608924865723
    10. '     ' → logprob: -13.171608924865723

Token 697: ' retire' (ID: 48410)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4421652853488922
    2. '#' → logprob: -1.6921652555465698
    3. 'sum' → logprob: -1.8171652555465698
    4. 'remove' → logprob: -5.942165374755859
    5. 'sub' → logprob: -6.067165374755859
    6. 'subtract' → logprob: -6.067165374755859
    7. '   ' → logprob: -6.567165374755859
    8. 'sup' → logprob: -7.317165374755859
    9. ' sum' → logprob: -7.567165374755859
    10. ' #' → logprob: -8.06716537475586

Token 698: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008583370596170425
    2. ' A' → logprob: -4.8835835456848145
    3. '   ' → logprob: -7.0085835456848145
    4. '       ' → logprob: -10.258583068847656
    5. '    ' → logprob: -11.508583068847656
    6. '	A' → logprob: -11.508583068847656
    7. 'sum' → logprob: -11.883583068847656
    8. ' ' → logprob: -12.383583068847656
    9. '  ' → logprob: -13.758583068847656
    10. '        ' → logprob: -13.758583068847656

Token 699: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.014317808672785759
    2. ' sum' → logprob: -4.264317989349365
    3. 'A' → logprob: -9.139317512512207
    4. ' A' → logprob: -10.764317512512207
    5. ')' → logprob: -11.889317512512207
    6. '   ' → logprob: -12.264317512512207
    7. ' ' → logprob: -12.389317512512207
    8. '	sum' → logprob: -13.514317512512207
    9. '(sum' → logprob: -13.639317512512207
    10. '       ' → logprob: -13.889317512512207

Token 700: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00017445837147533894
    2. '_' → logprob: -8.875174522399902
    3. '   ' → logprob: -11.250174522399902
    4. 'n' → logprob: -12.000174522399902
    5. '       ' → logprob: -12.750174522399902
    6. '```' → logprob: -12.750174522399902
    7. 'sum' → logprob: -13.000174522399902
    8. 'A' → logprob: -13.125174522399902
    9. ' -=' → logprob: -13.750174522399902
    10. '#' → logprob: -14.500174522399902

Token 701: ' et' (ID: 859)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -1.4256500005722046
    2. '   ' → logprob: -1.5506500005722046
    3. '       ' → logprob: -1.8006500005722046
    4. 'A' → logprob: -1.9256500005722046
    5. '-' → logprob: -2.300650119781494
    6. 'sum' → logprob: -3.425650119781494
    7. ' A' → logprob: -3.800650119781494
    8. ' -' → logprob: -4.300650119781494
    9. '    ' → logprob: -4.425650119781494
    10. '-=' → logprob: -4.675650119781494

Token 702: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6368451714515686
    2. 'A' → logprob: -1.5118451118469238
    3. ' bit' → logprob: -1.5118451118469238
    4. 'sum' → logprob: -4.136845111846924
    5. ' A' → logprob: -4.386845111846924
    6. ' sum' → logprob: -6.886845111846924
    7. '       ' → logprob: -9.261845588684082
    8. 'xor' → logprob: -9.386845588684082
    9. '   ' → logprob: -9.511845588684082
    10. '        ' → logprob: -9.761845588684082

Token 703: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.726595241460018e-05
    2. '_' → logprob: -10.25003719329834
    3. 'n' → logprob: -13.87503719329834
    4. '```' → logprob: -15.50003719329834
    5. ' _' → logprob: -15.75003719329834
    6. '_^' → logprob: -15.87503719329834
    7. '_=' → logprob: -16.750038146972656
    8. '^' → logprob: -17.125038146972656
    9. 'A' → logprob: -17.500038146972656
    10. '=' → logprob: -17.500038146972656

Token 704: ' la' (ID: 557)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6434712409973145
    2. 'A' → logprob: -0.8934712409973145
    3. ' the' → logprob: -4.1434712409973145
    4. 'sum' → logprob: -4.5184712409973145
    5. '[' → logprob: -5.1434712409973145
    6. ' sum' → logprob: -5.3934712409973145
    7. '[A' → logprob: -5.3934712409973145
    8. ' ' → logprob: -5.7684712409973145
    9. '   ' → logprob: -6.0184712409973145
    10. ' l' → logprob: -6.1434712409973145

Token 705: ' valeur' (ID: 41664)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0028091557323932648
    2. ' A' → logprob: -5.877809047698975
    3. ' ' → logprob: -13.252809524536133
    4. '   ' → logprob: -13.752809524536133
    5. ' ' → logprob: -15.377809524536133
    6. '  ' → logprob: -15.627809524536133
    7. '	A' → logprob: -15.752809524536133
    8. '[' → logprob: -15.877809524536133
    9. '```' → logprob: -15.877809524536133
    10. 'left' → logprob: -16.127809524536133

Token 706: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.15943236649036407
    2. 'de' → logprob: -3.0344324111938477
    3. ' de' → logprob: -3.1594324111938477
    4. ' A' → logprob: -3.5344324111938477
    5. 'd' → logprob: -4.034432411193848
    6. '   ' → logprob: -5.784432411193848
    7. ' d' → logprob: -5.784432411193848
    8. '(A' → logprob: -6.409432411193848
    9. '[A' → logprob: -6.659432411193848
    10. ' ' → logprob: -8.909432411193848

Token 707: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07889639586210251
    2. ' A' → logprob: -2.5788962841033936
    3. ' ' → logprob: -12.328896522521973
    4. '	A' → logprob: -13.953896522521973
    5. '   ' → logprob: -14.078896522521973
    6. ' ' → logprob: -14.953896522521973
    7. '`' → logprob: -16.828895568847656
    8. '  ' → logprob: -17.078895568847656
    9. '[A' → logprob: -17.203895568847656
    10. '(A' → logprob: -17.703895568847656

Token 708: ''' (ID: 6)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005639957962557673
    2. ' A' → logprob: -7.875564098358154
    3. '[' → logprob: -9.875563621520996
    4. '`' → logprob: -10.375563621520996
    5. '#' → logprob: -10.500563621520996
    6. '   ' → logprob: -10.750563621520996
    7. 'a' → logprob: -11.625563621520996
    8. '[A' → logprob: -11.875563621520996
    9. ']' → logprob: -12.000563621520996
    10. ''A' → logprob: -12.250563621520996

Token 709: 'élé' (ID: 15228)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16065910458564758
    2. 'élé' → logprob: -1.9106590747833252
    3. 'element' → logprob: -8.160658836364746
    4. '#' → logprob: -10.160658836364746
    5. '`' → logprob: -10.285658836364746
    6. '```' → logprob: -10.910658836364746
    7. ' élément' → logprob: -11.410658836364746
    8. '[' → logprob: -11.535658836364746
    9. ' A' → logprob: -12.035658836364746
    10. 'a' → logprob: -12.160658836364746

Token 710: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0034038324374705553
    2. 'ments' → logprob: -6.628403663635254
    3. 'ement' → logprob: -7.378403663635254
    4. '[' → logprob: -7.628403663635254
    5. 'ément' → logprob: -9.128403663635254
    6. '   ' → logprob: -9.128403663635254
    7. 'm' → logprob: -9.128403663635254
    8. 'A' → logprob: -9.253403663635254
    9. '       ' → logprob: -9.503403663635254
    10. 'мент' → logprob: -9.503403663635254

Token 711: ' qui' (ID: 2780)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09308148175477982
    2. ' A' → logprob: -2.593081474304199
    3. '   ' → logprob: -5.093081474304199
    4. '[A' → logprob: -5.468081474304199
    5. '[' → logprob: -6.843081474304199
    6. '       ' → logprob: -7.343081474304199
    7. ' ' → logprob: -7.718081474304199
    8. '```' → logprob: -7.843081474304199
    9. ' de' → logprob: -8.2180814743042
    10. ' ' → logprob: -9.0930814743042

Token 712: ' sort' (ID: 4506)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.25775760412216187
    2. 'A' → logprob: -1.5077576637268066
    3. '[right' → logprob: -6.507757663726807
    4. 'left' → logprob: -6.507757663726807
    5. '[' → logprob: -6.632757663726807
    6. ' A' → logprob: -7.382757663726807
    7. 'à' → logprob: -8.132757186889648
    8. '[A' → logprob: -8.382757186889648
    9. '#' → logprob: -10.007757186889648
    10. '[start' → logprob: -10.382757186889648

Token 713: ' du' (ID: 1462)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.9483246803283691
    2. '   ' → logprob: -1.4483246803283691
    3. ' de' → logprob: -2.323324680328369
    4. '       ' → logprob: -2.448324680328369
    5. 'de' → logprob: -3.073324680328369
    6. '=' → logprob: -3.573324680328369
    7. '_' → logprob: -3.573324680328369
    8. 'from' → logprob: -3.698324680328369
    9. 'A' → logprob: -4.073324680328369
    10. ')' → logprob: -4.198324680328369

Token 714: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.10290969163179398
    2. ' segment' → logprob: -2.352909803390503
    3. 'A' → logprob: -6.102909564971924
    4. ' A' → logprob: -8.227910041809082
    5. 'sum' → logprob: -9.727910041809082
    6. 'seg' → logprob: -10.102910041809082
    7. 'window' → logprob: -10.727910041809082
    8. '_segment' → logprob: -11.102910041809082
    9. '_' → logprob: -11.477910041809082
    10. ' ' → logprob: -11.727910041809082

Token 715: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2553236484527588
    2. '       ' → logprob: -1.5053236484527588
    3. 'sum' → logprob: -5.75532341003418
    4. '```' → logprob: -8.75532341003418
    5. ' sum' → logprob: -11.13032341003418
    6. '``' → logprob: -11.25532341003418
    7. ',' → logprob: -11.75532341003418
    8. '           ' → logprob: -11.75532341003418
    9. '
' → logprob: -12.75532341003418
    10. 'A' → logprob: -13.00532341003418

Token 716: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0013022610219195485
    2. ' A' → logprob: -6.876302242279053
    3. '   ' → logprob: -9.001302719116211
    4. ')' → logprob: -9.376302719116211
    5. '       ' → logprob: -10.251302719116211
    6. '```' → logprob: -12.001302719116211
    7. ')
' → logprob: -12.251302719116211
    8. '           ' → logprob: -12.501302719116211
    9. '#' → logprob: -13.501302719116211
    10. '`' → logprob: -13.626302719116211

Token 717: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -3.368984107510187e-05
    2. 'left' → logprob: -10.375033378601074
    3. '[right' → logprob: -13.750033378601074
    4. '[' → logprob: -14.625033378601074
    5. '   ' → logprob: -15.250033378601074
    6. ']' → logprob: -15.375033378601074
    7. '][' → logprob: -16.12503433227539
    8. '```' → logprob: -16.25003433227539
    9. ')' → logprob: -16.62503433227539
    10. ',left' → logprob: -17.00003433227539

Token 718: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004920631647109985
    2. '])
' → logprob: -5.879920482635498
    3. ']' → logprob: -6.754920482635498
    4. ')' → logprob: -7.129920482635498
    5. '])
' → logprob: -10.129920959472656
    6. ' ])' → logprob: -10.254920959472656
    7. '       ' → logprob: -10.754920959472656
    8. ')]' → logprob: -11.379920959472656
    9. '])

' → logprob: -11.879920959472656
    10. ')])' → logprob: -12.254920959472656

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004758342169225216
    2. '   ' → logprob: -5.504758358001709
    3. '
' → logprob: -8.25475788116455
    4. '```' → logprob: -8.50475788116455
    5. 'sum' → logprob: -8.75475788116455
    6. '``' → logprob: -10.75475788116455
    7. '        
' → logprob: -11.37975788116455
    8. '           ' → logprob: -11.62975788116455
    9. ' sum' → logprob: -12.75475788116455
    10. '      ' → logprob: -13.00475788116455

Token 720: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0035254789981991053
    2. '       ' → logprob: -6.003525257110596
    3. '   ' → logprob: -7.003525257110596
    4. ' sum' → logprob: -8.878525733947754
    5. '	sum' → logprob: -14.378525733947754
    6. '           ' → logprob: -15.003525733947754
    7. '```' → logprob: -15.628525733947754
    8. '  ' → logprob: -17.003524780273438
    9. '    ' → logprob: -17.253524780273438
    10. '     ' → logprob: -17.253524780273438

Token 721: ' Cela' (ID: 44403)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012918193824589252
    2. '   ' → logprob: -4.762917995452881
    3. '       ' → logprob: -5.512917995452881
    4. ' sum' → logprob: -8.262918472290039
    5. '	sum' → logprob: -13.512918472290039
    6. '  ' → logprob: -15.387918472290039
    7. '           ' → logprob: -15.387918472290039
    8. ' ' → logprob: -16.26291847229004
    9. '    ' → logprob: -16.38791847229004
    10. '     ' → logprob: -16.63791847229004

Token 722: ' permet' (ID: 11798)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03490624576807022
    2. '   ' → logprob: -3.9099061489105225
    3. ' sum' → logprob: -4.784906387329102
    4. '       ' → logprob: -5.909906387329102
    5. '=' → logprob: -6.534906387329102
    6. '#' → logprob: -7.534906387329102
    7. '=sum' → logprob: -8.284906387329102
    8. ' -=' → logprob: -8.534906387329102
    9. ' =' → logprob: -8.534906387329102
    10. '	sum' → logprob: -9.409906387329102

Token 723: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7607048749923706
    2. 'de' → logprob: -1.2607048749923706
    3. 'd' → logprob: -2.01070499420166
    4. 'sum' → logprob: -2.88570499420166
    5. '       ' → logprob: -3.38570499420166
    6. ' de' → logprob: -3.88570499420166
    7. ' d' → logprob: -6.01070499420166
    8. '    ' → logprob: -7.01070499420166
    9. '  ' → logprob: -7.38570499420166
    10. ' ' → logprob: -8.01070499420166

Token 724: ' maintenir' (ID: 105693)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0012679706560447812
    2. ' sum' → logprob: -6.751267910003662
    3. '   ' → logprob: -9.87626838684082
    4. '       ' → logprob: -10.62626838684082
    5. 'remove' → logprob: -12.37626838684082
    6. '#' → logprob: -12.62626838684082
    7. '	sum' → logprob: -12.87626838684082
    8. 'sub' → logprob: -13.25126838684082
    9. '```' → logprob: -13.37626838684082
    10. 'continue' → logprob: -13.37626838684082

Token 725: ' l' (ID: 305)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0033545205369591713
    2. ' sum' → logprob: -6.003354549407959
    3. '   ' → logprob: -7.753354549407959
    4. '       ' → logprob: -7.878354549407959
    5. '    ' → logprob: -11.1283540725708
    6. '#' → logprob: -11.3783540725708
    7. '```' → logprob: -11.3783540725708
    8. ' ' → logprob: -12.3783540725708
    9. 'correct' → logprob: -12.3783540725708
    10. '	sum' → logprob: -12.5033540725708

Token 726: ''in' (ID: 17942)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2541729509830475
    2. ' sum' → logprob: -1.504172921180725
    3. '   ' → logprob: -6.7541728019714355
    4. '       ' → logprob: -7.1291728019714355
    5. '_sum' → logprob: -9.254173278808594
    6. ' ' → logprob: -10.004173278808594
    7. '#' → logprob: -10.379173278808594
    8. '	sum' → logprob: -10.879173278808594
    9. '  ' → logprob: -11.129173278808594
    10. 's' → logprob: -11.379173278808594

Token 727: 'variant' (ID: 27649)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0021403860300779343
    2. '#' → logprob: -7.127140522003174
    3. 'variant' → logprob: -7.252140522003174
    4. 'for' → logprob: -8.377140045166016
    5. 'var' → logprob: -9.252140045166016
    6. ' sum' → logprob: -10.252140045166016
    7. 'range' → logprob: -10.252140045166016
    8. '   ' → logprob: -10.377140045166016
    9. 'valid' → logprob: -10.502140045166016
    10. '```' → logprob: -10.627140045166016

Token 728: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4964682459831238
    2. 'sum' → logprob: -1.1214683055877686
    3. ' sum' → logprob: -3.1214683055877686
    4. '       ' → logprob: -3.8714683055877686
    5. ' ' → logprob: -9.246468544006348
    6. '  ' → logprob: -9.246468544006348
    7. '```' → logprob: -9.246468544006348
    8. '    ' → logprob: -9.496468544006348
    9. '(sum' → logprob: -10.121468544006348
    10. '	sum' → logprob: -10.496468544006348

Token 729: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0325924449716695e-05
    2. ' sum' → logprob: -12.37501049041748
    3. '   ' → logprob: -12.87501049041748
    4. '       ' → logprob: -13.37501049041748
    5. '#' → logprob: -14.00001049041748
    6. 'A' → logprob: -14.50001049041748
    7. '           ' → logprob: -15.25001049041748
    8. '```' → logprob: -15.87501049041748
    9. '
' → logprob: -16.000009536743164
    10. '	sum' → logprob: -17.250009536743164

Token 730: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.619311974034645e-05
    2. '_' → logprob: -10.375036239624023
    3. 'n' → logprob: -12.750036239624023
    4. '```' → logprob: -14.750036239624023
    5. ' _' → logprob: -15.375036239624023
    6. '   ' → logprob: -15.375036239624023
    7. ')' → logprob: -15.500036239624023
    8. '#' → logprob: -15.500036239624023
    9. '=' → logprob: -16.000036239624023
    10. 's' → logprob: -16.250036239624023

Token 731: ' et' (ID: 859)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.4746886193752289
    2. ' -=' → logprob: -0.9746886491775513
    3. '-' → logprob: -7.599688529968262
    4. '=' → logprob: -9.724688529968262
    5. '+=' → logprob: -10.724688529968262
    6. ' -' → logprob: -10.974688529968262
    7. '   ' → logprob: -12.474688529968262
    8. ' =' → logprob: -13.224688529968262
    9. ' +=' → logprob: -13.349688529968262
    10. ' ' → logprob: -13.349688529968262

Token 732: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.12692978978157043
    2. ' bit' → logprob: -2.126929759979248
    3. ' ' → logprob: -13.751930236816406
    4. '   ' → logprob: -15.126930236816406
    5. '(bit' → logprob: -15.626930236816406
    6. 'xor' → logprob: -16.626930236816406
    7. ' ' → logprob: -17.501930236816406
    8. '_bit' → logprob: -17.626930236816406
    9. '  ' → logprob: -17.751930236816406
    10. 'bitr' → logprob: -17.751930236816406

Token 733: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.696077227592468e-05
    2. '_' → logprob: -10.750077247619629
    3. '^' → logprob: -10.875077247619629
    4. '_^' → logprob: -10.875077247619629
    5. 'n' → logprob: -11.375077247619629
    6. 'xor' → logprob: -12.875077247619629
    7. ' ^=' → logprob: -14.375077247619629
    8. ' ^' → logprob: -14.750077247619629
    9. '_x' → logprob: -14.875077247619629
    10. ' _' → logprob: -15.000077247619629

Token 734: ' représentent' (ID: 169478)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.05289866030216217
    2. '-=' → logprob: -3.052898645401001
    3. ' ^=' → logprob: -5.67789888381958
    4. '=' → logprob: -7.42789888381958
    5. ' +=' → logprob: -9.677898406982422
    6. ' =' → logprob: -9.802898406982422
    7. '+=' → logprob: -9.802898406982422
    8. '   ' → logprob: -10.177898406982422
    9. '-' → logprob: -10.427898406982422
    10. ' &=' → logprob: -10.802898406982422

Token 735: ' bien' (ID: 5340)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.15985286235809326
    2. ' sum' → logprob: -2.659852981567383
    3. 'A' → logprob: -2.909852981567383
    4. ' A' → logprob: -4.034852981567383
    5. '   ' → logprob: -5.784852981567383
    6. '       ' → logprob: -6.409852981567383
    7. '=' → logprob: -8.534852981567383
    8. ' ' → logprob: -9.034852981567383
    9. ' the' → logprob: -9.284852981567383
    10. '=A' → logprob: -9.409852981567383

Token 736: ' [' (ID: 723)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4357544183731079
    2. 'A' → logprob: -1.560754418373108
    3. ' A' → logprob: -2.6857542991638184
    4. ' sum' → logprob: -3.0607542991638184
    5. '=' → logprob: -4.435754299163818
    6. '   ' → logprob: -4.560754299163818
    7. '=A' → logprob: -6.310754299163818
    8. ' =' → logprob: -6.935754299163818
    9. '       ' → logprob: -7.185754299163818
    10. ' ' → logprob: -7.560754299163818

Token 737: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018298370763659477
    2. ' left' → logprob: -4.143298149108887
    3. 'right' → logprob: -6.393298149108887
    4. 'A' → logprob: -7.893298149108887
    5. ']' → logprob: -9.768298149108887
    6. ' right' → logprob: -10.393298149108887
    7. ' A' → logprob: -10.518298149108887
    8. '[left' → logprob: -10.518298149108887
    9. '   ' → logprob: -10.643298149108887
    10. '	left' → logprob: -11.393298149108887

Token 738: '+' (ID: 10)
  Prédit: ':right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.04379136115312576
    2. ']' → logprob: -3.4187912940979004
    3. ':' → logprob: -5.5437912940979
    4. '+' → logprob: -6.1687912940979
    5. ' :' → logprob: -6.6687912940979
    6. ':left' → logprob: -6.9187912940979
    7. '   ' → logprob: -7.6687912940979
    8. ',right' → logprob: -8.168791770935059
    9. ',' → logprob: -8.293791770935059
    10. ' +' → logprob: -8.293791770935059

Token 739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.875009536743164
    3. '+' → logprob: -13.125009536743164
    4. ']' → logprob: -15.000009536743164
    5. '   ' → logprob: -15.250009536743164
    6. '```' → logprob: -16.500009536743164
    7. ']+' → logprob: -17.250009536743164
    8. ')' → logprob: -17.500009536743164
    9. 'right' → logprob: -17.875009536743164
    10. ' +' → logprob: -18.000009536743164

Token 740: ',' (ID: 11)
  Prédit: ':right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.031273651868104935
    2. ':left' → logprob: -4.53127384185791
    3. ',' → logprob: -4.78127384185791
    4. ',right' → logprob: -5.03127384185791
    5. ':' → logprob: -5.78127384185791
    6. ']' → logprob: -6.65627384185791
    7. ' :' → logprob: -8.90627384185791
    8. '[right' → logprob: -8.90627384185791
    9. '],' → logprob: -8.90627384185791
    10. 'right' → logprob: -9.90627384185791

Token 741: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.07889892905950546
    2. ' right' → logprob: -2.5788989067077637
    3. '   ' → logprob: -12.953899383544922
    4. '	right' → logprob: -13.203899383544922
    5. ' ' → logprob: -13.453899383544922
    6. '[right' → logprob: -13.703899383544922
    7. ',right' → logprob: -14.703899383544922
    8. ':right' → logprob: -14.828899383544922
    9. '```' → logprob: -15.453899383544922
    10. ' ' → logprob: -15.453899383544922

Token 742: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045724231749773026
    2. ']' → logprob: -3.1707241535186768
    3. ')`' → logprob: -6.295724391937256
    4. '])' → logprob: -8.420723915100098
    5. '-' → logprob: -9.045723915100098
    6. ')
' → logprob: -9.420723915100098
    7. ')]' → logprob: -9.545723915100098
    8. ')-' → logprob: -9.670723915100098
    9. ' )' → logprob: -10.420723915100098
    10. ')**' → logprob: -10.545723915100098

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09572265297174454
    2. '   ' → logprob: -2.5957226753234863
    3. 'sum' → logprob: -4.095722675323486
    4. '```' → logprob: -10.970722198486328
    5. '           ' → logprob: -11.345722198486328
    6. ' sum' → logprob: -11.345722198486328
    7. '        ' → logprob: -13.345722198486328
    8. '``' → logprob: -13.470722198486328
    9. '	sum' → logprob: -13.970722198486328
    10. '      ' → logprob: -14.470722198486328

Token 744: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.002677083481103182
    2. '   ' → logprob: -6.502676963806152
    3. '       ' → logprob: -6.752676963806152
    4. ' sum' → logprob: -12.127676963806152
    5. '	sum' → logprob: -14.752676963806152
    6. '```' → logprob: -15.127676963806152
    7. '           ' → logprob: -15.252676963806152
    8. '  ' → logprob: -17.75267791748047
    9. '    ' → logprob: -18.37767791748047
    10. '        ' → logprob: -18.50267791748047

Token 745: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -13.375001907348633
    3. 'n' → logprob: -15.750001907348633
    4. ' _' → logprob: -16.125001907348633
    5. '\' → logprob: -16.500001907348633
    6. '```' → logprob: -16.625001907348633
    7. '=_' → logprob: -17.000001907348633
    8. ')_' → logprob: -17.875001907348633
    9. '_sum' → logprob: -18.500001907348633
    10. 's' → logprob: -18.500001907348633

Token 746: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.16989870369434357
    2. ' -=' → logprob: -2.169898748397827
    3. '-' → logprob: -3.169898748397827
    4. ' -' → logprob: -10.169898986816406
    5. '=' → logprob: -11.294898986816406
    6. '   ' → logprob: -13.919898986816406
    7. '+=' → logprob: -14.419898986816406
    8. ' ' → logprob: -16.044898986816406
    9. '	' → logprob: -16.044898986816406
    10. ' ' → logprob: -16.919898986816406

Token 747: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -6.2729995988775045e-06
    2. ' A' → logprob: -12.000006675720215
    3. '	A' → logprob: -21.2500057220459
    4. '   ' → logprob: -22.3750057220459
    5. '```' → logprob: -23.6250057220459
    6. ' ' → logprob: -24.5000057220459
    7. '_A' → logprob: -24.7500057220459
    8. 'a' → logprob: -24.8750057220459
    9. '=A' → logprob: -25.3750057220459
    10. '`' → logprob: -25.3750057220459

Token 748: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -6.2729995988775045e-06
    2. 'left' → logprob: -12.000006675720215
    3. '[' → logprob: -19.6250057220459
    4. '```' → logprob: -20.2500057220459
    5. '[right' → logprob: -20.3750057220459
    6. '(left' → logprob: -21.2500057220459
    7. '\[' → logprob: -21.3750057220459
    8. '	left' → logprob: -22.0000057220459
    9. '[
' → logprob: -22.0000057220459
    10. ' [' → logprob: -22.0000057220459

Token 749: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.31489139795303345
    2. ']' → logprob: -1.3148913383483887
    3. ')
' → logprob: -6.814891338348389
    4. ')' → logprob: -8.064891815185547
    5. ']
' → logprob: -8.689891815185547
    6. '       ' → logprob: -10.564891815185547
    7. ' bit' → logprob: -12.314891815185547
    8. 'bit' → logprob: -12.689891815185547
    9. '   ' → logprob: -12.814891815185547
    10. ']

' → logprob: -12.939891815185547

Token 750: '       ' (ID: 309)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.004454093519598246
    2. ' bit' → logprob: -5.504454135894775
    3. '       ' → logprob: -8.379453659057617
    4. '```' → logprob: -9.504453659057617
    5. '   ' → logprob: -9.754453659057617
    6. '``' → logprob: -11.879453659057617
    7. '
' → logprob: -12.879453659057617
    8. '(bit' → logprob: -13.504453659057617
    9. '.bit' → logprob: -14.504453659057617
    10. 'bitr' → logprob: -14.754453659057617

Token 751: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' (adapté à ' bit') → logprob: -2.963691804325208e-05
    2. '       ' → logprob: -10.750029563903809
    3. ' bit' → logprob: -11.750029563903809
    4. '   ' → logprob: -15.500029563903809
    5. 'bits' → logprob: -19.500030517578125
    6. '```' → logprob: -19.875030517578125
    7. '(bit' → logprob: -20.625030517578125
    8. 'bitr' → logprob: -20.625030517578125
    9. ' ' → logprob: -21.125030517578125
    10. '           ' → logprob: -21.375030517578125

Token 752: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: 0.0
    2. 'n' → logprob: -17.625
    3. '_^' → logprob: -17.875
    4. '^' → logprob: -18.125
    5. ' _' → logprob: -18.125
    6. '_' → logprob: -18.375
    7. 'xor' → logprob: -20.375
    8. 'bit' → logprob: -20.75
    9. '```' → logprob: -20.75
    10. ' ^=' → logprob: -21.25

Token 753: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.2014184147119522
    2. '^' → logprob: -1.701418399810791
    3. '=' → logprob: -12.82641887664795
    4. ' ^' → logprob: -13.32641887664795
    5. ' ' → logprob: -14.70141887664795
    6. '^^' → logprob: -16.576417922973633
    7. '-=' → logprob: -16.701417922973633
    8. '_^' → logprob: -16.826417922973633
    9. '^)' → logprob: -17.201417922973633
    10. 'xor' → logprob: -17.326417922973633

Token 754: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0206720617134124e-05
    2. ' A' → logprob: -11.50001049041748
    3. '	A' → logprob: -23.000009536743164
    4. '[A' → logprob: -24.000009536743164
    5. '   ' → logprob: -24.875009536743164
    6. '(A' → logprob: -25.125009536743164
    7. '=A' → logprob: -25.375009536743164
    8. '_A' → logprob: -25.750009536743164
    9. '```' → logprob: -25.875009536743164
    10. 'a' → logprob: -26.000009536743164

Token 755: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -1.6240566083070007e-06
    2. 'left' → logprob: -13.625001907348633
    3. '[' → logprob: -15.875001907348633
    4. '[right' → logprob: -16.000001907348633
    5. '```' → logprob: -16.500001907348633
    6. 'A' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.125001907348633
    8. '\[' → logprob: -18.375001907348633
    9. '[user' → logprob: -18.875001907348633
    10. '[A' → logprob: -19.375001907348633

Token 756: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002995293354615569
    2. ')' → logprob: -6.002995491027832
    3. '<|end|>' → logprob: -7.877995491027832
    4. '}' → logprob: -10.002995491027832
    5. '[' → logprob: -10.127995491027832
    6. ' ]' → logprob: -11.127995491027832
    7. '```' → logprob: -11.752995491027832
    8. '']' → logprob: -12.002995491027832
    9. '[right' → logprob: -12.127995491027832
    10. '   ' → logprob: -12.377995491027832

Token 757: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.868328920158092e-05
    2. '#' → logprob: -11.250028610229492
    3. '```' → logprob: -11.625028610229492
    4. '
' → logprob: -12.250028610229492
    5. ' print' → logprob: -13.375028610229492
    6. '#print' → logprob: -14.875028610229492
    7. '``' → logprob: -17.250028610229492
    8. '

' → logprob: -17.625028610229492
    9. '  
' → logprob: -17.750028610229492
    10. '(print' → logprob: -18.625028610229492

Token 758: ' Final' (ID: 12625)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '#' → logprob: -20.0
    3. ' print' → logprob: -20.5
    4. '#print' → logprob: -21.625
    5. '```' → logprob: -23.5
    6. 'Print' → logprob: -26.25
    7. '
' → logprob: -26.875
    8. '	print' → logprob: -27.625
    9. 'printf' → logprob: -28.125
    10. 'prints' → logprob: -28.25

Token 759: 'ement' (ID: 962)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.176947600673884e-05
    2. ' print' → logprob: -10.750021934509277
    3. '_print' → logprob: -15.875021934509277
    4. '#' → logprob: -16.75002098083496
    5. '#print' → logprob: -16.75002098083496
    6. '(print' → logprob: -17.87502098083496
    7. '.print' → logprob: -18.75002098083496
    8. '```' → logprob: -19.00002098083496
    9. 'Print' → logprob: -19.12502098083496
    10. 'prin' → logprob: -19.12502098083496

Token 760: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.008129963040119e-06
    2. ' print' → logprob: -13.125003814697266
    3. '#' → logprob: -13.625003814697266
    4. '
' → logprob: -14.375003814697266
    5. '#print' → logprob: -16.250003814697266
    6. '(print' → logprob: -19.000003814697266
    7. 'Print' → logprob: -19.375003814697266
    8. '```' → logprob: -19.750003814697266
    9. '.print' → logprob: -19.875003814697266
    10. 'prints' → logprob: -19.875003814697266

Token 761: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '#' → logprob: -20.625
    4. '#print' → logprob: -21.5
    5. '```' → logprob: -22.0
    6. 'Print' → logprob: -25.5
    7. '
' → logprob: -25.5
    8. 'printf' → logprob: -26.0
    9. 'prints' → logprob: -26.125
    10. '(print' → logprob: -27.0

Token 762: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.014684110297821e-06
    2. '#' → logprob: -11.750008583068848
    3. ' print' → logprob: -14.375008583068848
    4. '#print' → logprob: -14.625008583068848
    5. 'prints' → logprob: -18.250009536743164
    6. '
' → logprob: -18.500009536743164
    7. '```' → logprob: -18.875009536743164
    8. '(print' → logprob: -19.375009536743164
    9. 'Print' → logprob: -19.750009536743164
    10. 'pr' → logprob: -19.875009536743164

Token 763: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.01814994215965271
    2. 'ans' → logprob: -4.0181498527526855
    3. ' ans' → logprob: -17.268150329589844
    4. 'print' → logprob: -18.018150329589844
    5. '	ans' → logprob: -18.393150329589844
    6. 'ANS' → logprob: -20.268150329589844
    7. '_ans' → logprob: -20.643150329589844
    8. '(' → logprob: -21.143150329589844
    9. 'Ans' → logprob: -21.768150329589844
    10. '(answer' → logprob: -22.143150329589844

Token 764: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00014919086243025959
    2. '(ans' → logprob: -9.25014877319336
    3. 'result' → logprob: -10.12514877319336
    4. 'print' → logprob: -11.75014877319336
    5. 'answer' → logprob: -12.62514877319336
    6. 'nombre' → logprob: -13.50014877319336
    7. ' ans' → logprob: -15.25014877319336
    8. 'total' → logprob: -17.50014877319336
    9. 'res' → logprob: -17.50014877319336
    10. 'resultado' → logprob: -18.00014877319336

Token 765: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' print' → logprob: -18.375
    4. '``' → logprob: -23.125
    5. '
' → logprob: -23.375
    6. '#print' → logprob: -23.625
    7. '(print' → logprob: -25.0
    8. 'Print' → logprob: -26.0
    9. '	print' → logprob: -26.5
    10. '#' → logprob: -26.5

Token 766: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ' print' → logprob: -22.25
    4. '``' → logprob: -23.75
    5. '`' → logprob: -25.0
    6. '
' → logprob: -27.5
    7. '#print' → logprob: -27.875
    8. '	print' → logprob: -29.5
    9. 'Print' → logprob: -29.75
    10. 'printf' → logprob: -29.875

Token 767: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -19.0
    3. ' print' → logprob: -22.25
    4. 'pr' → logprob: -26.875
    5. '``' → logprob: -27.0
    6. 'prin' → logprob: -27.125
    7. '#print' → logprob: -27.375
    8. '
' → logprob: -27.625
    9. '`' → logprob: -28.125
    10. 'printf' → logprob: -28.375

Token 768: '()' (ID: 416)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0068413494154810905
    2. '(' → logprob: -5.00684118270874
    3. '()' → logprob: -9.006841659545898
    4. 'ans' → logprob: -13.006841659545898
    5. '(
' → logprob: -14.756841659545898
    6. '(answer' → logprob: -15.006841659545898
    7. '('' → logprob: -16.0068416595459
    8. ' (' → logprob: -16.3818416595459
    9. '(f' → logprob: -16.5068416595459
    10. '("' → logprob: -16.8818416595459

Token 769: ' affiche' (ID: 127479)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.41866585687967e-06
    2. 'ans' → logprob: -11.750008583068848
    3. '(' → logprob: -14.750008583068848
    4. '()' → logprob: -18.25000762939453
    5. '(answer' → logprob: -19.00000762939453
    6. '(
' → logprob: -19.62500762939453
    7. '(print' → logprob: -20.37500762939453
    8. 'print' → logprob: -20.37500762939453
    9. ' (' → logprob: -20.50000762939453
    10. '(abs' → logprob: -20.87500762939453

Token 770: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.547789674485102e-05
    2. 'ans' → logprob: -10.250035285949707
    3. '(' → logprob: -17.250036239624023
    4. '	ans' → logprob: -17.625036239624023
    5. '()' → logprob: -19.625036239624023
    6. ' ans' → logprob: -20.125036239624023
    7. '(
' → logprob: -20.750036239624023
    8. '(answer' → logprob: -21.125036239624023
    9. '(abs' → logprob: -21.250036239624023
    10. ' (' → logprob: -21.875036239624023

Token 771: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.023264233022928238
    2. 'ans' → logprob: -3.773264169692993
    3. 'result' → logprob: -12.148263931274414
    4. '(' → logprob: -12.148263931274414
    5. 'nombre' → logprob: -13.148263931274414
    6. '(result' → logprob: -13.398263931274414
    7. '()' → logprob: -13.398263931274414
    8. 'total' → logprob: -14.023263931274414
    9. '(answer' → logprob: -14.523263931274414
    10. 'value' → logprob: -14.773263931274414

Token 772: ' conten' (ID: 23523)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00014203863975126296
    2. '(' → logprob: -9.000142097473145
    3. '()' → logprob: -11.625142097473145
    4. 'ans' → logprob: -11.625142097473145
    5. '(
' → logprob: -14.250142097473145
    6. '(answer' → logprob: -17.250141143798828
    7. '(`' → logprob: -17.875141143798828
    8. '```' → logprob: -17.875141143798828
    9. ' (' → logprob: -18.500141143798828
    10. '(f' → logprob: -18.875141143798828

Token 773: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.3135644197463989
    2. 'u' → logprob: -1.313564419746399
    3. 't' → logprob: -8.56356430053711
    4. 'e' → logprob: -9.18856430053711
    5. 'eur' → logprob: -13.18856430053711
    6. 'ur' → logprob: -13.56356430053711
    7. '#' → logprob: -13.68856430053711
    8. '```' → logprob: -13.93856430053711
    9. '0' → logprob: -14.06356430053711
    10. 'print' → logprob: -14.81356430053711

Token 774: ' dans' (ID: 2671)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.927930654550437e-05
    2. '(' → logprob: -10.750029563903809
    3. 'ans' → logprob: -11.875029563903809
    4. '()' → logprob: -14.500029563903809
    5. '(print' → logprob: -16.125028610229492
    6. 'print' → logprob: -16.250028610229492
    7. '(answer' → logprob: -17.375028610229492
    8. ' (' → logprob: -18.000028610229492
    9. '(
' → logprob: -18.250028610229492
    10. '   ' → logprob: -18.625028610229492

Token 775: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.10020667314529419
    2. 'ans' → logprob: -2.3502066135406494
    3. '	ans' → logprob: -17.72520637512207
    4. ' ans' → logprob: -18.22520637512207
    5. 'ANS' → logprob: -20.47520637512207
    6. '_ans' → logprob: -21.10020637512207
    7. '(' → logprob: -21.60020637512207
    8. 'Ans' → logprob: -22.47520637512207
    9. '(answer' → logprob: -23.60020637512207
    10. 'a' → logprob: -24.10020637512207

Token 776: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -13.750001907348633
    3. ' print' → logprob: -15.000001907348633
    4. '(print' → logprob: -18.250001907348633
    5. '``' → logprob: -19.375001907348633
    6. '.print' → logprob: -21.375001907348633
    7. '
' → logprob: -21.750001907348633
    8. 'ans' → logprob: -22.125001907348633
    9. '#print' → logprob: -22.125001907348633
    10. '	print' → logprob: -22.500001907348633

Token 777: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2815302312374115
    2. '()' → logprob: -1.9065302610397339
    3. 'l' → logprob: -3.0315301418304443
    4. 'une' → logprob: -3.2815301418304443
    5. 'ans' → logprob: -5.781530380249023
    6. 'un' → logprob: -6.156530380249023
    7. 'le' → logprob: -6.906530380249023
    8. '(ans' → logprob: -6.906530380249023
    9. 'a' → logprob: -7.031530380249023
    10. '```' → logprob: -7.406530380249023

Token 778: ' sortie' (ID: 52761)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.22099876403808594
    2. 'ligne' → logprob: -2.970998764038086
    3. 'l' → logprob: -3.720998764038086
    4. 'é' → logprob: -3.970998764038086
    5. 'stdout' → logprob: -4.470998764038086
    6. 'single' → logprob: -4.720998764038086
    7. 'output' → logprob: -4.720998764038086
    8. 'python' → logprob: -4.720998764038086
    9. '```' → logprob: -4.970998764038086
    10. '#' → logprob: -5.095998764038086

Token 779: ' standard' (ID: 7024)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0004418743774294853
    2. '(' → logprob: -8.125441551208496
    3. '()' → logprob: -9.125441551208496
    4. 'ans' → logprob: -10.250441551208496
    5. '(
' → logprob: -14.125441551208496
    6. '(answer' → logprob: -15.250441551208496
    7. ' (' → logprob: -15.500441551208496
    8. 'print' → logprob: -15.750441551208496
    9. '(abs' → logprob: -17.125442504882812
    10. '((' → logprob: -17.375442504882812

Token 780: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.25000286102295
    3. ' print' → logprob: -13.75000286102295
    4. '(print' → logprob: -15.25000286102295
    5. '
' → logprob: -16.750003814697266
    6. 'ans' → logprob: -18.500003814697266
    7. '``' → logprob: -18.625003814697266
    8. '#print' → logprob: -19.375003814697266
    9. '.print' → logprob: -19.750003814697266
    10. '(' → logprob: -20.250003814697266

Token 781: 'console' (ID: 9343)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045066267251968384
    2. 'ans' → logprob: -3.1700663566589355
    3. '0' → logprob: -7.7950663566589355
    4. '")' → logprob: -8.170065879821777
    5. '(ans' → logprob: -8.295065879821777
    6. ')
' → logprob: -8.420065879821777
    7. ' )' → logprob: -8.670065879821777
    8. '1' → logprob: -8.795065879821777
    9. '())' → logprob: -9.170065879821777
    10. 'stdout' → logprob: -9.295065879821777

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002564480062574148
    2. ')
' → logprob: -6.502564430236816
    3. '()' → logprob: -7.002564430236816
    4. '())' → logprob: -9.002564430236816
    5. '(ans' → logprob: -11.252564430236816
    6. '(' → logprob: -12.002564430236816
    7. '()
' → logprob: -12.502564430236816
    8. ' )' → logprob: -13.252564430236816
    9. '())
' → logprob: -13.877564430236816
    10. ')#' → logprob: -14.252564430236816

Token 783: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -13.750000953674316
    3. ' print' → logprob: -17.500001907348633
    4. '``' → logprob: -21.125001907348633
    5. 'pr' → logprob: -21.375001907348633
    6. '(print' → logprob: -23.000001907348633
    7. '#print' → logprob: -23.500001907348633
    8. '	print' → logprob: -23.625001907348633
    9. 'prin' → logprob: -23.625001907348633
    10. '.print' → logprob: -24.000001907348633

Token 784: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00015908108616713434
    2. '(' → logprob: -8.75015926361084
    3. 'ans' → logprob: -14.75015926361084
    4. '()' → logprob: -17.125158309936523
    5. ' (' → logprob: -17.375158309936523
    6. '(answer' → logprob: -18.250158309936523
    7. '(abs' → logprob: -19.000158309936523
    8. '(
' → logprob: -19.375158309936523
    9. '(args' → logprob: -19.875158309936523
    10. '	ans' → logprob: -20.125158309936523

Token 785: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')`' → logprob: -17.0
    4. '()' → logprob: -17.375
    5. '())' → logprob: -17.5
    6. '))' → logprob: -18.125
    7. ')#' → logprob: -18.375
    8. ')
' → logprob: -18.875
    9. '(' → logprob: -19.875
    10. '),' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 783
Tokens correctement prédits (1ère position, stricte): 166
Tokens correctement prédits (1ère position, avec adaptation): 175
Tokens correctement prédits (top 10): 422
Précision stricte (1ère position): 21.20%
Précision adaptée (1ère position): 22.35%
Précision (top 10): 53.90%
================================================================================
