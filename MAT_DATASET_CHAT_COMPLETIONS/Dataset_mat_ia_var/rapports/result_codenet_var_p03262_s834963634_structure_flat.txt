================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import fractions

n_x = input().rstrip().split(" ")
n = int(n_x[0])
x = int(n_x[1])

x_list = input().rstrip().split(" ")
for i in range(len(x_list)):
    x_list[i] = int(x_list[i])

current = abs(x - x_list[0])
i = 1
while i < n:
    current = fractions.gcd(current, abs(x - x_list[i]))
    i += 1

print(current)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' fractions' (ID: 110523)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6457742175552994e-05
    2. '.`' → logprob: -11.750056266784668
    3. 'import' → logprob: -12.000056266784668
    4. '.f' → logprob: -12.125056266784668
    5. '\' → logprob: -12.250056266784668
    6. '```' → logprob: -12.375056266784668
    7. '.F' → logprob: -12.500056266784668
    8. '\.' → logprob: -12.625056266784668
    9. '.
' → logprob: -13.000056266784668
    10. ',' → logprob: -13.125056266784668

Token 4: '_x' (ID: 7054)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.24932162463665009
    2. '_' → logprob: -1.9993215799331665
    3. 'u' → logprob: -3.374321699142456
    4. 'a' → logprob: -3.999321699142456
    5. 't' → logprob: -4.374321460723877
    6. '=' → logprob: -5.124321460723877
    7. 'e' → logprob: -5.749321460723877
    8. ' ' → logprob: -5.874321460723877
    9. ',' → logprob: -6.499321460723877
    10. 'o' → logprob: -6.624321460723877

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4805612564086914
    2. '_' → logprob: -1.1055612564086914
    3. '.' → logprob: -3.6055612564086914
    4. 't' → logprob: -4.855561256408691
    5. ',' → logprob: -5.605561256408691
    6. '=' → logprob: -5.855561256408691
    7. 's' → logprob: -6.480561256408691
    8. ')' → logprob: -6.480561256408691
    9. ']' → logprob: -6.730561256408691
    10. ' =' → logprob: -7.355561256408691

Token 6: ' input' (ID: 3422)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.1496720165014267
    2. ' ' → logprob: -2.274672031402588
    3. 'fra' → logprob: -4.399672031402588
    4. ' int' → logprob: -4.899672031402588
    5. '10' → logprob: -5.774672031402588
    6. '5' → logprob: -6.024672031402588
    7. '1' → logprob: -6.149672031402588
    8. '3' → logprob: -6.149672031402588
    9. '0' → logprob: -6.524672031402588
    10. ' []' → logprob: -6.899672031402588

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022651629988104105
    2. '('' → logprob: -6.877264976501465
    3. ''' → logprob: -7.127264976501465
    4. '(
' → logprob: -9.002264976501465
    5. '("("' → logprob: -9.002264976501465
    6. '"' → logprob: -9.252264976501465
    7. ')' → logprob: -11.377264976501465
    8. '(

' → logprob: -11.502264976501465
    9. '[' → logprob: -11.627264976501465
    10. '```' → logprob: -11.752264976501465

Token 8: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0340258851647377
    2. 'split' → logprob: -3.4090259075164795
    3. 'isdigit' → logprob: -8.409026145935059
    4. 'rstrip' → logprob: -9.159026145935059
    5. 'replace' → logprob: -11.034026145935059
    6. 'lower' → logprob: -11.284026145935059
    7. ' strip' → logprob: -11.409026145935059
    8. 'r' → logprob: -12.909026145935059
    9. 'read' → logprob: -13.284026145935059
    10. ' split' → logprob: -13.409026145935059

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021989934146404266
    2. '()' → logprob: -4.646989822387695
    3. '"' → logprob: -4.771989822387695
    4. ''' → logprob: -6.396989822387695
    5. '(
' → logprob: -7.521989822387695
    6. ')' → logprob: -7.646989822387695
    7. '`' → logprob: -8.021989822387695
    8. '```' → logprob: -8.271989822387695
    9. '('' → logprob: -9.646989822387695
    10. '   ' → logprob: -10.146989822387695

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.15226522088050842
    2. 'isdigit' → logprob: -2.9022653102874756
    3. 'l' → logprob: -3.7772653102874756
    4. 'rstrip' → logprob: -3.9022653102874756
    5. 'strip' → logprob: -4.1522650718688965
    6. 'replace' → logprob: -4.4022650718688965
    7. 'den' → logprob: -5.1522650718688965
    8. 'r' → logprob: -5.4022650718688965
    9. 'lower' → logprob: -6.2772650718688965
    10. 'is' → logprob: -7.7772650718688965

Token 11: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.26986998319625854
    2. '(' → logprob: -1.6448700428009033
    3. '("("' → logprob: -3.1448700428009033
    4. '()' → logprob: -9.394869804382324
    5. '(`' → logprob: -9.394869804382324
    6. ''' → logprob: -9.394869804382324
    7. '```' → logprob: -10.144869804382324
    8. '((' → logprob: -11.019869804382324
    9. '('.')' → logprob: -11.144869804382324
    10. '`' → logprob: -11.144869804382324

Token 12: ' ")
' (ID: 31232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09835470467805862
    2. '/' → logprob: -2.8483548164367676
    3. ' )' → logprob: -3.9733548164367676
    4. '")' → logprob: -5.098354816436768
    5. ' ' → logprob: -5.848354816436768
    6. ',' → logprob: -6.098354816436768
    7. ' ")' → logprob: -6.098354816436768
    8. '')' → logprob: -7.223354816436768
    9. '())' → logprob: -7.973354816436768
    10. '()' → logprob: -7.973354816436768

Token 13: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2652680575847626
    2. '[' → logprob: -2.390268087387085
    3. 'a' → logprob: -2.390268087387085
    4. 'x' → logprob: -3.890268087387085
    5. '=' → logprob: -4.515267848968506
    6. 'm' → logprob: -5.515267848968506
    7. 'numer' → logprob: -6.015267848968506
    8. 'result' → logprob: -6.140267848968506
    9. 'for' → logprob: -6.265267848968506
    10. '/' → logprob: -6.390267848968506

Token 14: ' =' (ID: 314)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.40399324893951416
    2. '_' → logprob: -1.1539932489395142
    3. '[' → logprob: -4.153993129730225
    4. '_[' → logprob: -7.778993129730225
    5. '[_' → logprob: -7.903993129730225
    6. '_)' → logprob: -9.153993606567383
    7. '[:]' → logprob: -9.903993606567383
    8. '_n' → logprob: -10.153993606567383
    9. 'x' → logprob: -10.278993606567383
    10. '_]' → logprob: -10.403993606567383

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3628048598766327
    2. 'int' → logprob: -1.237804889678955
    3. ' fractions' → logprob: -4.487804889678955
    4. ' n' → logprob: -7.362804889678955
    5. '[int' → logprob: -7.362804889678955
    6. 'fra' → logprob: -7.487804889678955
    7. ' float' → logprob: -8.237804412841797
    8. ' ' → logprob: -8.487804412841797
    9. ' len' → logprob: -8.612804412841797
    10. 'n' → logprob: -8.862804412841797

Token 16: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018582407385110855
    2. '(n' → logprob: -4.018582344055176
    3. '("("' → logprob: -8.393582344055176
    4. '()' → logprob: -10.018582344055176
    5. '('' → logprob: -10.143582344055176
    6. '(
' → logprob: -10.768582344055176
    7. ')' → logprob: -10.768582344055176
    8. '("' → logprob: -11.143582344055176
    9. '("")' → logprob: -11.768582344055176
    10. '(`' → logprob: -12.018582344055176

Token 17: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.007732742466032505
    2. '[' → logprob: -5.13273286819458
    3. ')' → logprob: -7.00773286819458
    4. '_' → logprob: -8.007732391357422
    5. 'x' → logprob: -9.007732391357422
    6. '_)' → logprob: -9.257732391357422
    7. '[n' → logprob: -9.507732391357422
    8. '[_' → logprob: -9.507732391357422
    9. '[x' → logprob: -10.132732391357422
    10. 'n' → logprob: -10.257732391357422

Token 18: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6312321753939614e-05
    2. ')' → logprob: -10.500036239624023
    3. '[n' → logprob: -12.375036239624023
    4. ' [' → logprob: -13.125036239624023
    5. '[
' → logprob: -14.250036239624023
    6. '   ' → logprob: -15.000036239624023
    7. '['' → logprob: -15.125036239624023
    8. ')[' → logprob: -15.125036239624023
    9. '["' → logprob: -15.250036239624023
    10. '[-' → logprob: -16.000036239624023

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.082895273109898e-05
    2. '1' → logprob: -10.750030517578125
    3. ' ' → logprob: -11.625030517578125
    4. ')' → logprob: -15.375030517578125
    5. '])' → logprob: -16.750030517578125
    6. ']' → logprob: -17.125030517578125
    7. '   ' → logprob: -18.125030517578125
    8. '۰' → logprob: -18.375030517578125
    9. '  ' → logprob: -19.125030517578125
    10. '```' → logprob: -19.625030517578125

Token 20: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2566413879394531
    2. ')' → logprob: -1.5066413879394531
    3. ']' → logprob: -5.381641387939453
    4. ' ])' → logprob: -10.381641387939453
    5. ')])' → logprob: -10.506641387939453
    6. ')]' → logprob: -11.631641387939453
    7. ' )' → logprob: -12.006641387939453
    8. '])
' → logprob: -12.256641387939453
    9. ''])' → logprob: -12.506641387939453
    10. ')
' → logprob: -12.756641387939453

Token 21: 'x' (ID: 87)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7665876746177673
    2. '<|end|>' → logprob: -1.266587734222412
    3. ' ' → logprob: -1.891587734222412
    4. ')' → logprob: -2.766587734222412
    5. 'x' → logprob: -4.266587734222412
    6. ' n' → logprob: -4.891587734222412
    7. '_' → logprob: -5.266587734222412
    8. '<|end|>' → logprob: -5.516587734222412
    9. ' )' → logprob: -6.391587734222412
    10. '[' → logprob: -6.641587734222412

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5385316610336304
    2. '=' → logprob: -0.9135316610336304
    3. '_' → logprob: -4.28853178024292
    4. ')' → logprob: -6.78853178024292
    5. '[' → logprob: -8.538531303405762
    6. '_space' → logprob: -9.663531303405762
    7. '=int' → logprob: -10.288531303405762
    8. '_x' → logprob: -10.663531303405762
    9. '[]' → logprob: -11.038531303405762
    10. ',' → logprob: -11.288531303405762

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07917684316635132
    2. ' int' → logprob: -2.579176902770996
    3. 'float' → logprob: -8.329176902770996
    4. ' float' → logprob: -10.704176902770996
    5. 'n' → logprob: -11.579176902770996
    6. ' n' → logprob: -11.954176902770996
    7. ' ' → logprob: -12.829176902770996
    8. '(int' → logprob: -13.454176902770996
    9. '1' → logprob: -14.079176902770996
    10. '[int' → logprob: -14.454176902770996

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02363920398056507
    2. '(' → logprob: -3.77363920211792
    3. '(x' → logprob: -7.89863920211792
    4. '("("' → logprob: -11.398639678955078
    5. ' (' → logprob: -13.023639678955078
    6. '()' → logprob: -13.148639678955078
    7. '((' → logprob: -13.523639678955078
    8. '('' → logprob: -14.148639678955078
    9. ' ' → logprob: -14.523639678955078
    10. '(nx' → logprob: -14.898639678955078

Token 25: '_x' (ID: 7054)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038141097873449326
    2. '_x' → logprob: -3.5381410121917725
    3. '1' → logprob: -5.038141250610352
    4. '_' → logprob: -7.413141250610352
    5. '])' → logprob: -8.038141250610352
    6. ']' → logprob: -8.038141250610352
    7. ' ' → logprob: -8.913141250610352
    8. ' [' → logprob: -9.163141250610352
    9. '][' → logprob: -9.288141250610352
    10. 'x' → logprob: -9.413141250610352

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027254095766693354
    2. '1' → logprob: -8.250272750854492
    3. ' [' → logprob: -12.500272750854492
    4. ')[' → logprob: -12.875272750854492
    5. '][' → logprob: -13.000272750854492
    6. ')' → logprob: -13.875272750854492
    7. '```' → logprob: -14.125272750854492
    8. ']' → logprob: -15.000272750854492
    9. '\[' → logprob: -15.375272750854492
    10. '2' → logprob: -16.000272750854492

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.500005722045898
    3. '0' → logprob: -14.000005722045898
    4. '])' → logprob: -14.875005722045898
    5. '-' → logprob: -15.875005722045898
    6. '```' → logprob: -16.2500057220459
    7. '   ' → logprob: -16.3125057220459
    8. ']' → logprob: -16.3125057220459
    9. '2' → logprob: -16.9375057220459
    10. '' → logprob: -17.0625057220459

Token 28: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.672236824873835e-05
    2. '])' → logprob: -10.000076293945312
    3. '))' → logprob: -10.750076293945312
    4. ' )' → logprob: -13.375076293945312
    5. '）' → logprob: -13.375076293945312
    6. '`)' → logprob: -13.500076293945312
    7. '})' → logprob: -13.500076293945312
    8. ')])' → logprob: -14.000076293945312
    9. ']' → logprob: -14.625076293945312
    10. '),' → logprob: -15.000076293945312

Token 29: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8734357357025146
    2. 's' → logprob: -2.1234357357025146
    3. 'f' → logprob: -2.3734357357025146
    4. 'result' → logprob: -2.3734357357025146
    5. 'total' → logprob: -3.3734357357025146
    6. 'd' → logprob: -3.4984357357025146
    7. '+' → logprob: -3.6234357357025146
    8. 't' → logprob: -3.9984357357025146
    9. 'r' → logprob: -3.9984357357025146
    10. 'g' → logprob: -4.248435974121094

Token 30: '_list' (ID: 4162)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3897223472595215
    2. '**' → logprob: -1.3897223472595215
    3. ' ' → logprob: -2.2647223472595215
    4. '%' → logprob: -2.2647223472595215
    5. '[' → logprob: -2.5147223472595215
    6. '<|end|>' → logprob: -2.7647223472595215
    7. '*' → logprob: -3.0147223472595215
    8. ' **' → logprob: -3.2647223472595215
    9. '_' → logprob: -4.1397223472595215
    10. ' %' → logprob: -4.6397223472595215

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5320901274681091
    2. ' =' → logprob: -0.9070901274681091
    3. '.' → logprob: -5.032090187072754
    4. '.append' → logprob: -6.657090187072754
    5. '=[]' → logprob: -7.282090187072754
    6. '[' → logprob: -9.157090187072754
    7. '.=' → logprob: -9.282090187072754
    8. '[:]' → logprob: -9.407090187072754
    9. 's' → logprob: -9.907090187072754
    10. '_' → logprob: -10.782090187072754

Token 32: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.2252386808395386
    2. '[' → logprob: -1.7252386808395386
    3. '[]' → logprob: -1.7252386808395386
    4. '[x' → logprob: -1.8502386808395386
    5. '[input' → logprob: -2.225238800048828
    6. '[list' → logprob: -2.975238800048828
    7. ' [' → logprob: -4.725238800048828
    8. ' list' → logprob: -4.975238800048828
    9. 'input' → logprob: -5.225238800048828
    10. '[f' → logprob: -5.350238800048828

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14301297068595886
    2. '().' → logprob: -2.0180130004882812
    3. '(' → logprob: -8.393013000488281
    4. ' ()' → logprob: -9.893013000488281
    5. '())' → logprob: -11.143013000488281
    6. '()(' → logprob: -12.018013000488281
    7. '();' → logprob: -12.393013000488281
    8. '()

' → logprob: -12.518013000488281
    9. '()<' → logprob: -12.768013000488281
    10. '.' → logprob: -12.893013000488281

Token 34: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.029777921736240387
    2. 'split' → logprob: -3.529778003692627
    3. 'strip' → logprob: -10.654777526855469
    4. 'rs' → logprob: -12.779777526855469
    5. 'rst' → logprob: -14.654777526855469
    6. 'spl' → logprob: -15.154777526855469
    7. '.rstrip' → logprob: -15.529777526855469
    8. ' split' → logprob: -17.02977752685547
    9. 'rl' → logprob: -17.27977752685547
    10. 'read' → logprob: -17.90477752685547

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10057811439037323
    2. '()' → logprob: -2.3505780696868896
    3. '(' → logprob: -7.975578308105469
    4. '())' → logprob: -11.600578308105469
    5. '()).' → logprob: -12.600578308105469
    6. ' ().' → logprob: -12.975578308105469
    7. '()

' → logprob: -13.350578308105469
    8. '().'' → logprob: -13.725578308105469
    9. '()`' → logprob: -13.850578308105469
    10. '().__' → logprob: -13.850578308105469

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.246537173457909e-06
    2. ' split' → logprob: -13.375003814697266
    3. 'rstrip' → logprob: -13.375003814697266
    4. 'spl' → logprob: -14.000003814697266
    5. 'strip' → logprob: -15.750003814697266
    6. 'sp' → logprob: -17.000003814697266
    7. '(split' → logprob: -17.125003814697266
    8. 'replace' → logprob: -17.250003814697266
    9. '.split' → logprob: -17.750003814697266
    10. 'plit' → logprob: -18.375003814697266

Token 37: '("' (ID: 568)
  Prédit: '("("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("("' → logprob: -0.1735788732767105
    2. '("' → logprob: -2.173578977584839
    3. '('' → logprob: -4.04857873916626
    4. '()' → logprob: -4.17357873916626
    5. '(' → logprob: -4.42357873916626
    6. '("")' → logprob: -7.79857873916626
    7. '("="' → logprob: -9.673579216003418
    8. '"' → logprob: -9.673579216003418
    9. '("""' → logprob: -10.173579216003418
    10. '(">' → logprob: -10.298579216003418

Token 38: ' ")
' (ID: 31232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41902658343315125
    2. '")' → logprob: -1.7940266132354736
    3. '"' → logprob: -1.9190266132354736
    4. ' )' → logprob: -4.5440263748168945
    5. ' ' → logprob: -4.6690263748168945
    6. ' ")' → logprob: -4.7940263748168945
    7. ' "' → logprob: -7.5440263748168945
    8. ''' → logprob: -9.294026374816895
    9. '("' → logprob: -9.919026374816895
    10. '()' → logprob: -9.919026374816895

Token 39: 'for' (ID: 1938)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1785438358783722
    2. 'a' → logprob: -2.92854380607605
    3. 'l' → logprob: -3.80354380607605
    4. 'result' → logprob: -3.92854380607605
    5. 'ans' → logprob: -4.303544044494629
    6. 'arr' → logprob: -4.928544044494629
    7. 'numbers' → logprob: -5.053544044494629
    8. 'nums' → logprob: -5.178544044494629
    9. 'num' → logprob: -5.803544044494629
    10. 'f' → logprob: -5.928544044494629

Token 40: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.845126211643219
    2. ' _' → logprob: -0.970126211643219
    3. ' ' → logprob: -1.9701261520385742
    4. '_' → logprob: -2.970126152038574
    5. ' x' → logprob: -7.595126152038574
    6. 'i' → logprob: -8.970126152038574
    7. '_i' → logprob: -10.720126152038574
    8. '  ' → logprob: -10.970126152038574
    9. ' ‌' → logprob: -11.595126152038574
    10. ' ' → logprob: -12.095126152038574

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.050671786069869995
    2. 'in' → logprob: -3.0506718158721924
    3. ' ' → logprob: -6.300671577453613
    4. '_' → logprob: -9.425671577453613
    5. '  ' → logprob: -9.550671577453613
    6. '	in' → logprob: -11.050671577453613
    7. '_in' → logprob: -11.050671577453613
    8. '<|end|>' → logprob: -11.550671577453613
    9. ',' → logprob: -11.675671577453613
    10. ')' → logprob: -12.175671577453613

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10943352431058884
    2. ' range' → logprob: -2.35943341255188
    3. 'x' → logprob: -4.734433650970459
    4. ' x' → logprob: -7.859433650970459
    5. ' xrange' → logprob: -12.7344331741333
    6. '(range' → logprob: -12.9844331741333
    7. ')' → logprob: -13.7344331741333
    8. '(x' → logprob: -14.1094331741333
    9. '	range' → logprob: -14.2344331741333
    10. ' ' → logprob: -14.2344331741333

Token 43: '(len' (ID: 14990)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5767743587493896
    2. '(' → logprob: -0.8267743587493896
    3. ' n' → logprob: -7.826774597167969
    4. ' (' → logprob: -7.826774597167969
    5. '(len' → logprob: -10.701774597167969
    6. 'n' → logprob: -11.701774597167969
    7. ' ' → logprob: -12.326774597167969
    8. '(
' → logprob: -14.076774597167969
    9. '(range' → logprob: -15.576774597167969
    10. '(

' → logprob: -15.701774597167969

Token 44: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.01107329223304987
    2. '(' → logprob: -4.511073112487793
    3. 'x' → logprob: -10.886073112487793
    4. '(s' → logprob: -13.136073112487793
    5. ' (' → logprob: -13.511073112487793
    6. '(n' → logprob: -13.636073112487793
    7. ' x' → logprob: -13.886073112487793
    8. ')' → logprob: -14.386073112487793
    9. '(
' → logprob: -15.636073112487793
    10. ' ' → logprob: -15.636073112487793

Token 45: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. '))' → logprob: -13.87500286102295
    3. ')_' → logprob: -14.00000286102295
    4. 'list' → logprob: -15.00000286102295
    5. ')):' → logprob: -15.00000286102295
    6. '_' → logprob: -15.12500286102295
    7. ')' → logprob: -15.25000286102295
    8. 'List' → logprob: -17.875003814697266
    9. '_x' → logprob: -17.875003814697266
    10. ' _' → logprob: -18.750003814697266

Token 46: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008375041070394218
    2. ')' → logprob: -7.625837326049805
    3. ' ):' → logprob: -8.750837326049805
    4. ')):' → logprob: -8.875837326049805
    5. ':' → logprob: -10.750837326049805
    6. '):
' → logprob: -11.750837326049805
    7. '>):' → logprob: -11.875837326049805
    8. '))' → logprob: -11.875837326049805
    9. ']):' → logprob: -12.875837326049805
    10. '>' → logprob: -13.875837326049805

Token 47: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.29765036702156067
    2. 'x' → logprob: -1.6726503372192383
    3. '   ' → logprob: -2.6726503372192383
    4. '    ' → logprob: -8.172650337219238
    5. ' ' → logprob: -8.547650337219238
    6. '	x' → logprob: -9.422650337219238
    7. ' n' → logprob: -11.422650337219238
    8. 'n' → logprob: -11.422650337219238
    9. '```' → logprob: -11.672650337219238
    10. ' ' → logprob: -12.047650337219238

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2254587560892105
    2. 'x' (adapté à ' x') → logprob: -1.6004587411880493
    3. '   ' → logprob: -10.225459098815918
    4. '    ' → logprob: -12.975459098815918
    5. '	x' → logprob: -12.975459098815918
    6. 'n' → logprob: -13.225459098815918
    7. ' ' → logprob: -13.725459098815918
    8. '```' → logprob: -14.100459098815918
    9. ' n' → logprob: -14.350459098815918
    10. '_x' → logprob: -15.475459098815918

Token 49: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00015395533409900963
    2. '[i' → logprob: -9.000153541564941
    3. '[' → logprob: -10.875153541564941
    4. '[_' → logprob: -11.750153541564941
    5. '_lists' → logprob: -14.125153541564941
    6. '[int' → logprob: -14.500153541564941
    7. '[x' → logprob: -14.750153541564941
    8. 'list' → logprob: -15.000153541564941
    9. '_[' → logprob: -15.375153541564941
    10. '\[' → logprob: -15.375153541564941

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0723528265953064
    2. '[int' → logprob: -2.947352886199951
    3. '[' → logprob: -4.072352886199951
    4. ' [' → logprob: -8.822352409362793
    5. '[x' → logprob: -10.572352409362793
    6. ' =' → logprob: -10.572352409362793
    7. '\[' → logprob: -11.197352409362793
    8. '[I' → logprob: -11.447352409362793
    9. '=' → logprob: -11.697352409362793
    10. '[:]' → logprob: -11.947352409362793

Token 51: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008772927336394787
    2. ')=' → logprob: -4.883772850036621
    3. '=' → logprob: -6.883772850036621
    4. ' =' → logprob: -9.508772850036621
    5. ' )' → logprob: -10.258772850036621
    6. ']' → logprob: -11.383772850036621
    7. '])' → logprob: -12.258772850036621
    8. '）' → logprob: -12.633772850036621
    9. '=int' → logprob: -12.758772850036621
    10. ']=' → logprob: -13.133772850036621

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01869543083012104
    2. ' =' → logprob: -4.01869535446167
    3. '=int' → logprob: -7.51869535446167
    4. '=f' → logprob: -14.643695831298828
    5. '=

' → logprob: -15.018695831298828
    6. ' ' → logprob: -15.518695831298828
    7. '=
' → logprob: -15.518695831298828
    8. '*=' → logprob: -15.768695831298828
    9. '＝' → logprob: -15.893695831298828
    10. '_=' → logprob: -16.018695831298828

Token 53: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.591863214969635
    2. ' int' → logprob: -0.841863214969635
    3. ' fractions' → logprob: -4.46686315536499
    4. 'fra' → logprob: -5.46686315536499
    5. 'fr' → logprob: -10.591863632202148
    6. 'fraction' → logprob: -11.091863632202148
    7. ' ' → logprob: -11.216863632202148
    8. '(int' → logprob: -12.091863632202148
    9. 'float' → logprob: -12.591863632202148
    10. 'Fraction' → logprob: -12.716863632202148

Token 54: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602395623922348
    2. '(x' → logprob: -1.910239577293396
    3. '(
' → logprob: -12.285239219665527
    4. '(

' → logprob: -12.410239219665527
    5. ' (' → logprob: -12.660239219665527
    6. '("("' → logprob: -13.410239219665527
    7. '('' → logprob: -14.410239219665527
    8. 'x' → logprob: -15.410239219665527
    9. '()' → logprob: -15.410239219665527
    10. ' ' → logprob: -15.535239219665527

Token 55: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0032177609391510487
    2. '[i' → logprob: -5.753217697143555
    3. ')' → logprob: -11.003217697143555
    4. 'List' → logprob: -12.378217697143555
    5. '])' → logprob: -12.378217697143555
    6. '[' → logprob: -12.378217697143555
    7. ')[' → logprob: -12.503217697143555
    8. 'list' → logprob: -13.128217697143555
    9. ']' → logprob: -13.878217697143555
    10. ')_' → logprob: -14.003217697143555

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.000003814697266
    3. ')' → logprob: -13.250003814697266
    4. ')i' → logprob: -15.875003814697266
    5. '[I' → logprob: -18.125003814697266
    6. ')[' → logprob: -18.125003814697266
    7. '[
' → logprob: -18.750003814697266
    8. '[x' → logprob: -19.375003814697266
    9. '```' → logprob: -19.625003814697266
    10. 'i' → logprob: -20.000003814697266

Token 57: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2923903167247772
    2. '])' → logprob: -1.4173903465270996
    3. '))' → logprob: -4.5423903465271
    4. ')])' → logprob: -8.292389869689941
    5. ']' → logprob: -8.667389869689941
    6. ')]' → logprob: -10.667389869689941
    7. ']))' → logprob: -10.792389869689941
    8. '})' → logprob: -10.917389869689941
    9. ' )' → logprob: -11.792389869689941
    10. '[i' → logprob: -12.167389869689941

Token 58: 'current' (ID: 5804)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2841885983943939
    2. 'result' → logprob: -2.7841885089874268
    3. 'l' → logprob: -3.2841885089874268
    4. 'a' → logprob: -3.4091885089874268
    5. 'ans' → logprob: -3.7841885089874268
    6. 'from' → logprob: -4.159188747406006
    7. 'd' → logprob: -4.159188747406006
    8. 'res' → logprob: -4.534188747406006
    9. 'answer' → logprob: -4.909188747406006
    10. 'den' → logprob: -5.034188747406006

Token 59: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019793592393398285
    2. '_g' → logprob: -4.144793510437012
    3. '_sum' → logprob: -6.519793510437012
    4. ' _' → logprob: -7.394793510437012
    5. '_value' → logprob: -8.394793510437012
    6. '_div' → logprob: -8.394793510437012
    7. '_val' → logprob: -8.644793510437012
    8. ' =' → logprob: -8.894793510437012
    9. '=' → logprob: -9.019793510437012
    10. '_=' → logprob: -9.269793510437012

Token 60: ' abs' (ID: 8443)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.709708571434021
    2. 'x' → logprob: -1.084708571434021
    3. ' ' → logprob: -2.4597086906433105
    4. '1' → logprob: -2.9597086906433105
    5. '0' → logprob: -3.9597086906433105
    6. ' fractions' → logprob: -4.5847086906433105
    7. 'fra' → logprob: -6.0847086906433105
    8. ' n' → logprob: -7.9597086906433105
    9. 'f' → logprob: -8.334708213806152
    10. ' f' → logprob: -8.584708213806152

Token 61: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.18136665225028992
    2. '(' → logprob: -1.8063666820526123
    3. '(current' → logprob: -6.681366443634033
    4. '(f' → logprob: -8.431366920471191
    5. '((' → logprob: -9.931366920471191
    6. '(n' → logprob: -10.181366920471191
    7. '(sum' → logprob: -11.056366920471191
    8. '(a' → logprob: -11.931366920471191
    9. '("("' → logprob: -11.931366920471191
    10. '(`' → logprob: -12.056366920471191

Token 62: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.362631231546402
    2. ' -' → logprob: -1.2376312017440796
    3. '[' → logprob: -5.112631320953369
    4. '-x' → logprob: -5.112631320953369
    5. ')' → logprob: -7.112631320953369
    6. '-current' → logprob: -7.362631320953369
    7. '[i' → logprob: -8.862630844116211
    8. '[x' → logprob: -8.987630844116211
    9. '[-' → logprob: -9.112630844116211
    10. ' ' → logprob: -9.987630844116211

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00023596010578330606
    2. ' x' → logprob: -8.375235557556152
    3. '0' → logprob: -13.375235557556152
    4. 'current' → logprob: -14.000235557556152
    5. 'n' → logprob: -14.125235557556152
    6. ')' → logprob: -15.000235557556152
    7. '1' → logprob: -15.125235557556152
    8. '   ' → logprob: -15.375235557556152
    9. 'int' → logprob: -15.875235557556152
    10. '  ' → logprob: -15.875235557556152

Token 64: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.214019307051785e-05
    2. 'List' → logprob: -11.625032424926758
    3. 'list' → logprob: -11.625032424926758
    4. '[i' → logprob: -11.750032424926758
    5. '[' → logprob: -12.750032424926758
    6. ')' → logprob: -13.125032424926758
    7. '_' → logprob: -14.875032424926758
    8. '[_' → logprob: -14.875032424926758
    9. '_)' → logprob: -16.000032424926758
    10. '_[' → logprob: -16.750032424926758

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002382249804213643
    2. '[i' → logprob: -8.375238418579102
    3. '0' → logprob: -12.125238418579102
    4. ' [' → logprob: -14.625238418579102
    5. '[current' → logprob: -14.625238418579102
    6. ')' → logprob: -14.875238418579102
    7. '[-' → logprob: -14.875238418579102
    8. '[
' → logprob: -16.0002384185791
    9. '[n' → logprob: -16.1252384185791
    10. '[s' → logprob: -16.2502384185791

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.375016212463379
    3. '1' → logprob: -13.125016212463379
    4. '-' → logprob: -13.500016212463379
    5. '[' → logprob: -14.625016212463379
    6. '   ' → logprob: -16.000017166137695
    7. ')' → logprob: -16.375017166137695
    8. '０' → logprob: -16.437517166137695
    9. '۰' → logprob: -16.500017166137695
    10. '])' → logprob: -16.750017166137695

Token 67: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017290872347075492
    2. '))' → logprob: -8.75017261505127
    3. ' )' → logprob: -11.87517261505127
    4. '])' → logprob: -12.25017261505127
    5. ')))' → logprob: -14.25017261505127
    6. '})' → logprob: -14.37517261505127
    7. ')
' → logprob: -15.00017261505127
    8. '>)' → logprob: -15.00017261505127
    9. '`)' → logprob: -15.50017261505127
    10. ')**' → logprob: -15.75017261505127

Token 68: 'i' (ID: 72)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4085823893547058
    2. 'for' → logprob: -1.1585824489593506
    3. ' for' → logprob: -3.9085824489593506
    4. '
' → logprob: -8.15858268737793
    5. '\r' → logprob: -8.40858268737793
    6. '\' → logprob: -8.65858268737793
    7. ' \' → logprob: -8.78358268737793
    8. ' ' → logprob: -9.28358268737793
    9. '  
' → logprob: -9.65858268737793
    10. ' 
' → logprob: -9.90858268737793

Token 69: ' =' (ID: 314)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.9371737241744995
    2. '=' → logprob: -1.6871737241744995
    3. 'n' → logprob: -1.6871737241744995
    4. 'f' → logprob: -1.8121737241744995
    5. '+' → logprob: -2.937173843383789
    6. '1' → logprob: -4.937173843383789
    7. ' ' → logprob: -5.187173843383789
    8. '0' → logprob: -6.312173843383789
    9. 'm' → logprob: -6.937173843383789
    10. '>' → logprob: -7.062173843383789

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043326523154973984
    2. '0' → logprob: -3.7933266162872314
    3. ' ' → logprob: -3.9183266162872314
    4. '2' → logprob: -12.043326377868652
    5. '   ' → logprob: -15.668326377868652
    6. '  ' → logprob: -16.79332733154297
    7. '+' → logprob: -16.98082733154297
    8. '```' → logprob: -17.23082733154297
    9. 'current' → logprob: -17.48082733154297
    10. '１' → logprob: -17.48082733154297

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007941609248518944
    2. '0' → logprob: -4.882941722869873
    3. ' ' → logprob: -8.007941246032715
    4. '2' → logprob: -13.132941246032715
    5. '   ' → logprob: -16.00794219970703
    6. '１' → logprob: -16.38294219970703
    7. '  ' → logprob: -16.94544219970703
    8. '+' → logprob: -17.13294219970703
    9. '-' → logprob: -17.25794219970703
    10. '100' → logprob: -17.32044219970703

Token 72: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22986379265785217
    2. '
' → logprob: -1.9798637628555298
    3. ' while' → logprob: -2.7298638820648193
    4. ' 
' → logprob: -6.97986364364624
    5. '<|end|>' → logprob: -7.72986364364624
    6. '

' → logprob: -8.604864120483398
    7. '```' → logprob: -8.854864120483398
    8. 'for' → logprob: -9.854864120483398
    9. '  
' → logprob: -9.979864120483398
    10. '
' → logprob: -10.104864120483398

Token 73: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20020057260990143
    2. ' while' → logprob: -1.8252005577087402
    3. '
' → logprob: -3.9502005577087402
    4. '<|end|>' → logprob: -7.95020055770874
    5. 'for' → logprob: -8.700201034545898
    6. ' 
' → logprob: -9.075201034545898
    7. 'current' → logprob: -9.325201034545898
    8. '\n' → logprob: -9.575201034545898
    9. '

' → logprob: -10.450201034545898
    10. '```' → logprob: -10.700201034545898

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007616087328642607
    2. 'i' → logprob: -4.88261604309082
    3. ' ' → logprob: -12.13261604309082
    4. ' len' → logprob: -13.63261604309082
    5. '(i' → logprob: -13.63261604309082
    6. '	i' → logprob: -14.38261604309082
    7. ' n' → logprob: -14.75761604309082
    8. '<' → logprob: -15.38261604309082
    9. '(' → logprob: -15.75761604309082
    10. ' (' → logprob: -16.00761604309082

Token 75: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2519970238208771
    2. '<' → logprob: -1.5019969940185547
    3. '<len' → logprob: -9.626996994018555
    4. '<n' → logprob: -13.251996994018555
    5. '<size' → logprob: -16.126996994018555
    6. ' <=' → logprob: -16.501996994018555
    7. ' ' → logprob: -17.501996994018555
    8. '<=' → logprob: -17.626996994018555
    9. '＜' → logprob: -18.126996994018555
    10. ' len' → logprob: -18.251996994018555

Token 76: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10354315489530563
    2. ' n' → logprob: -2.3535430431365967
    3. 'len' → logprob: -5.853543281555176
    4. ' len' → logprob: -7.728543281555176
    5. ' ' → logprob: -11.103543281555176
    6. '	n' → logprob: -12.728543281555176
    7. '   ' → logprob: -13.228543281555176
    8. '  ' → logprob: -14.353543281555176
    9. '(n' → logprob: -15.978543281555176
    10. '<n' → logprob: -16.22854232788086

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027883611619472504
    2. ' and' → logprob: -6.252788543701172
    3. ' :' → logprob: -7.877788543701172
    4. 'and' → logprob: -8.377788543701172
    5. ':
' → logprob: -8.377788543701172
    6. '):' → logprob: -11.377788543701172
    7. '   ' → logprob: -13.377788543701172
    8. '():' → logprob: -13.627788543701172
    9. ' :
' → logprob: -13.877788543701172
    10. ' ' → logprob: -14.127788543701172

Token 78: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1077722311019897
    2. ' ' → logprob: -1.6077722311019897
    3. '   ' → logprob: -1.9827722311019897
    4. ' current' → logprob: -2.1077723503112793
    5. 'current' → logprob: -2.2327723503112793
    6. ':
' → logprob: -2.7327723503112793
    7. ' :
' → logprob: -4.482772350311279
    8. '<|end|>' → logprob: -4.982772350311279
    9. '
' → logprob: -5.107772350311279
    10. ' :' → logprob: -5.732772350311279

Token 79: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5176439881324768
    2. '
' → logprob: -1.642643928527832
    3. 'current' (adapté à ' current') → logprob: -1.767643928527832
    4. ' 
' → logprob: -4.767643928527832
    5. 'diff' → logprob: -5.017643928527832
    6. 'd' → logprob: -5.267643928527832
    7. ' d' → logprob: -5.392643928527832
    8. ' diff' → logprob: -5.642643928527832
    9. '```' → logprob: -6.642643928527832
    10. 'v' → logprob: -7.017643928527832

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760829448699951
    2. ' =' → logprob: -0.8260829448699951
    3. '>' → logprob: -10.201083183288574
    4. '.' → logprob: -11.326083183288574
    5. '<' → logprob: -11.326083183288574
    6. ' ' → logprob: -11.451083183288574
    7. '=min' → logprob: -11.451083183288574
    8. '.=' → logprob: -11.951083183288574
    9. '+=' → logprob: -11.951083183288574
    10. '>=' → logprob: -12.201083183288574

Token 81: ' fractions' (ID: 110523)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6154593229293823
    2. ' min' → logprob: -1.6154593229293823
    3. 'fra' → logprob: -1.9904593229293823
    4. ' fractions' → logprob: -2.865459442138672
    5. 'max' → logprob: -3.240459442138672
    6. ' max' → logprob: -3.740459442138672
    7. 'abs' → logprob: -6.490459442138672
    8. ' abs' → logprob: -6.740459442138672
    9. 'fr' → logprob: -7.240459442138672
    10. ' ' → logprob: -7.990459442138672

Token 82: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.23150883615016937
    2. '.F' → logprob: -1.7315088510513306
    3. '.' → logprob: -4.106508731842041
    4. '.abs' → logprob: -5.231508731842041
    5. '.f' → logprob: -5.481508731842041
    6. '.Abs' → logprob: -6.731508731842041
    7. '.Absolute' → logprob: -7.231508731842041
    8. '.G' → logprob: -7.856508731842041
    9. '.P' → logprob: -8.7315092086792
    10. ' .' → logprob: -9.1065092086792

Token 83: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0002512071805540472
    2. 'g' → logprob: -9.875250816345215
    3. 'ath' → logprob: -10.000250816345215
    4. '   ' → logprob: -10.125250816345215
    5. 'math' → logprob: -10.250250816345215
    6. 'u' → logprob: -11.000250816345215
    7. '```' → logprob: -11.125250816345215
    8. 'e' → logprob: -11.125250816345215
    9. 'CD' → logprob: -12.250250816345215
    10. 'a' → logprob: -12.500250816345215

Token 84: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.028293756768107414
    2. '(' → logprob: -4.278293609619141
    3. '(abs' → logprob: -4.278293609619141
    4. 'abs' → logprob: -9.27829360961914
    5. 'current' → logprob: -9.90329360961914
    6. '(x' → logprob: -12.02829360961914
    7. '(
' → logprob: -12.27829360961914
    8. '<|end|>' → logprob: -12.40329360961914
    9. ' current' → logprob: -13.65329360961914
    10. ' (' → logprob: -14.02829360961914

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006026087794452906
    2. ',x' → logprob: -5.506026268005371
    3. ' ,' → logprob: -6.256026268005371
    4. 'abs' → logprob: -10.756026268005371
    5. ',current' → logprob: -13.131026268005371
    6. ',n' → logprob: -14.131026268005371
    7. ' abs' → logprob: -14.256026268005371
    8. 'x' → logprob: -14.631026268005371
    9. ',
' → logprob: -14.881026268005371
    10. ',int' → logprob: -15.131026268005371

Token 86: ' abs' (ID: 8443)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07933322340250015
    2. 'x' → logprob: -2.5793333053588867
    3. ' abs' → logprob: -8.079333305358887
    4. 'abs' → logprob: -8.954333305358887
    5. ' ' → logprob: -13.329333305358887
    6. ' ' → logprob: -14.329333305358887
    7. '(x' → logprob: -14.704333305358887
    8. '    ' → logprob: -15.079333305358887
    9. '	x' → logprob: -15.079333305358887
    10. ')' → logprob: -15.579333305358887

Token 87: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023249205201864243
    2. '(x' → logprob: -3.7732491493225098
    3. '(
' → logprob: -13.273249626159668
    4. 'x' → logprob: -13.273249626159668
    5. ' (' → logprob: -15.398249626159668
    6. ')' → logprob: -17.02324867248535
    7. '(-' → logprob: -17.27324867248535
    8. '(

' → logprob: -17.39824867248535
    9. '((' → logprob: -17.52324867248535
    10. '(i' → logprob: -17.89824867248535

Token 88: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10027966648340225
    2. '-' → logprob: -2.3502795696258545
    3. ' ' → logprob: -9.600279808044434
    4. ' -
' → logprob: -13.475279808044434
    5. '-x' → logprob: -14.100279808044434
    6. ')' → logprob: -14.225279808044434
    7. '-list' → logprob: -14.600279808044434
    8. '<|end|>' → logprob: -15.225279808044434
    9. '_' → logprob: -15.350279808044434
    10. '  ' → logprob: -15.600279808044434

Token 89: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868784010410309
    2. 'x' → logprob: -1.1368783712387085
    3. ' ' → logprob: -12.51187801361084
    4. '<|end|>' → logprob: -13.63687801361084
    5. '	x' → logprob: -14.01187801361084
    6. ')' → logprob: -14.76187801361084
    7. '(x' → logprob: -15.26187801361084
    8. ')x' → logprob: -15.26187801361084
    9. ' ' → logprob: -16.011878967285156
    10. '   ' → logprob: -16.136878967285156

Token 90: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.630610641877865e-06
    2. '[i' → logprob: -12.750006675720215
    3. 'List' → logprob: -13.500006675720215
    4. 'list' → logprob: -14.000006675720215
    5. '_' → logprob: -14.375006675720215
    6. '[' → logprob: -15.500006675720215
    7. ')' → logprob: -16.1250057220459
    8. '_LIST' → logprob: -16.5000057220459
    9. '-list' → logprob: -16.7500057220459
    10. ' _' → logprob: -16.8750057220459

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020449401927180588
    2. '[' → logprob: -8.500204086303711
    3. ')' → logprob: -14.500204086303711
    4. '[
' → logprob: -14.875204086303711
    5. 'i' → logprob: -16.12520408630371
    6. '[I' → logprob: -17.25020408630371
    7. '[int' → logprob: -18.00020408630371
    8. ' [' → logprob: -18.12520408630371
    9. ' ' → logprob: -18.12520408630371
    10. '[current' → logprob: -18.37520408630371

Token 92: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.02268218994140625
    2. '))' → logprob: -4.272682189941406
    3. ')))' → logprob: -5.272682189941406
    4. ']' → logprob: -6.522682189941406
    5. ')' → logprob: -7.522682189941406
    6. ']))
' → logprob: -7.772682189941406
    7. '])' → logprob: -7.772682189941406
    8. '']))' → logprob: -9.022682189941406
    9. '"]))' → logprob: -9.397682189941406
    10. '])))' → logprob: -9.397682189941406

Token 93: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1429675817489624
    2. '   ' → logprob: -2.017967700958252
    3. '+' → logprob: -2.142967700958252
    4. 'i' → logprob: -2.392967700958252
    5. '+i' → logprob: -2.642967700958252
    6. ' ' → logprob: -2.767967700958252
    7. ' 
' → logprob: -3.017967700958252
    8. ')' → logprob: -3.392967700958252
    9. '
' → logprob: -3.517967700958252
    10. '  
' → logprob: -3.892967700958252

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.07947438955307007
    2. ' i' → logprob: -2.579474449157715
    3. '   ' → logprob: -7.454474449157715
    4. '	i' → logprob: -13.204474449157715
    5. ' ' → logprob: -13.329474449157715
    6. '1' → logprob: -14.454474449157715
    7. '  ' → logprob: -15.079474449157715
    8. '[i' → logprob: -15.204474449157715
    9. ',i' → logprob: -15.454474449157715
    10. ' 
' → logprob: -15.579474449157715

Token 95: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006874621845781803
    2. ' +' → logprob: -5.0068745613098145
    3. ' +=' → logprob: -9.256875038146973
    4. '+=' → logprob: -9.756875038146973
    5. '++' → logprob: -12.381875038146973
    6. ' ' → logprob: -14.631875038146973
    7. '+++' → logprob: -15.006875038146973
    8. '<|end|>' → logprob: -15.131875038146973
    9. '+)' → logprob: -15.756875038146973
    10. '+
' → logprob: -15.881875038146973

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '```' → logprob: -17.25247573852539
    4. '１' → logprob: -17.62747573852539
    5. '   ' → logprob: -17.87747573852539
    6. ' ' → logprob: -18.37747573852539
    7. '<|end|>' → logprob: -18.62747573852539
    8. '  ' → logprob: -19.06497573852539
    9. '۱' → logprob: -19.62747573852539
    10. '	' → logprob: -19.75247573852539

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -19.75
    5. '<|end|>' → logprob: -19.75
    6. '１' → logprob: -20.625
    7. '  ' → logprob: -21.625
    8. '+' → logprob: -22.0
    9. '۱' → logprob: -22.125
    10. 'python' → logprob: -22.375

Token 98: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.793929398059845
    2. '<|end|>' → logprob: -0.793929398059845
    3. '#' → logprob: -3.4189293384552
    4. 'current' → logprob: -3.6689293384552
    5. 'print' → logprob: -4.043929576873779
    6. ' ' → logprob: -4.668929576873779
    7. '```' → logprob: -6.043929576873779
    8. ',' → logprob: -6.668929576873779
    9. 'g' → logprob: -6.793929576873779
    10. '.' → logprob: -6.918929576873779

Token 100: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16045920550823212
    2. '(current' → logprob: -1.9104591608047485
    3. '(f' → logprob: -8.660459518432617
    4. '("("' → logprob: -11.035459518432617
    5. '()' → logprob: -11.535459518432617
    6. ' (' → logprob: -11.785459518432617
    7. '(g' → logprob: -12.160459518432617
    8. '('' → logprob: -12.160459518432617
    9. 'current' → logprob: -12.285459518432617
    10. '((' → logprob: -12.285459518432617

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -15.875000953674316
    4. ')
' → logprob: -16.75
    5. ')`' → logprob: -17.375
    6. ')}' → logprob: -18.25
    7. '()' → logprob: -19.25
    8. ')**' → logprob: -19.375
    9. '）' → logprob: -19.5
    10. '(' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 99
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 41.41%
Précision adaptée (1ère position): 42.42%
Précision (top 10): 77.78%
================================================================================
