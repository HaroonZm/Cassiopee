================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul
from itertools import islice, count, chain
from collections import deque

MOD = 998244353
R = 2500100

def accumulate_mod(f, r, o):
    def generator():
        acc = 1
        yield acc
        for i in range(1, r):
            acc = (acc * i) % o
            yield acc
    return list(generator())

F = accumulate_mod([1], R, MOD)

inv = lambda x: pow(x, MOD-2, MOD)

def comb(n, k):
    try:
        return F[n] * inv(F[n-k]) * inv(F[k]) % MOD
    except IndexError:
        return 0

n, m = map(int, input().split())

def exotic_aggregate(n, m):
    base = (comb(n + 3*m - 1, n - 1) - n*comb(n + m - 2, n - 1)) % MOD
    if n <= m + 1:
        return base

    def skip_odd_triplets():
        for i in range(m + 1, min(3*m, n) + 1):
            q, r = divmod(3*m - i, 2)
            if r:
                continue
            yield i, q

    delta = sum((comb(n, i) * comb(q + n - 1, n - 1)) % MOD for i, q in skip_odd_triplets())
    return (base - delta) % MOD

def recursive_lazy_evaluation(n, m):
    return exotic_aggregate(n, m)

print(recursive_lazy_evaluation(n, m))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.25372281670570374
    2. 'partial' → logprob: -1.7537227869033813
    3. 'reduce' → logprob: -3.503722906112671
    4. ' wraps' → logprob: -4.003722667694092
    5. 'l' → logprob: -6.753722667694092
    6. ' partial' → logprob: -7.378722667694092
    7. 'cache' → logprob: -8.37872314453125
    8. '```' → logprob: -8.62872314453125
    9. 'cached' → logprob: -9.00372314453125
    10. 'cmp' → logprob: -9.25372314453125

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06605874747037888
    2. 'import' → logprob: -2.81605863571167
    3. '.' → logprob: -5.69105863571167
    4. ' ' → logprob: -7.44105863571167
    5. ' .' → logprob: -10.066059112548828
    6. '.import' → logprob: -10.191059112548828
    7. '	import' → logprob: -11.066059112548828
    8. '_import' → logprob: -12.066059112548828
    9. '-import' → logprob: -13.316059112548828
    10. ' ,' → logprob: -13.316059112548828

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1261378824710846
    2. '*' → logprob: -2.8761379718780518
    3. '\' → logprob: -3.6261379718780518
    4. '\n' → logprob: -4.501137733459473
    5. '(
' → logprob: -4.751137733459473
    6. ',' → logprob: -5.126137733459473
    7. '`' → logprob: -6.126137733459473
    8. '#' → logprob: -6.501137733459473
    9. 'a' → logprob: -6.751137733459473
    10. '\(' → logprob: -6.876137733459473

Token 10: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5172733664512634
    2. '\' → logprob: -2.267273426055908
    3. 'a' → logprob: -2.267273426055908
    4. 'd' → logprob: -2.642273426055908
    5. '(' → logprob: -3.392273426055908
    6. '#' → logprob: -4.142273426055908
    7. '(
' → logprob: -4.142273426055908
    8. 'x' → logprob: -4.517273426055908
    9. '\n' → logprob: -4.767273426055908
    10. '*' → logprob: -5.392273426055908

Token 11: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.020102793350815773
    2. 'math' → logprob: -4.2701029777526855
    3. ' itertools' → logprob: -5.1451029777526855
    4. ' ' → logprob: -10.395102500915527
    5. ' functools' → logprob: -10.395102500915527
    6. ' numpy' → logprob: -11.020102500915527
    7. ' random' → logprob: -13.020102500915527
    8. 'it' → logprob: -13.145102500915527
    9. ' operator' → logprob: -13.145102500915527
    10. ' typing' → logprob: -13.395102500915527

Token 12: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3282717168331146
    2. 'import' → logprob: -1.578271746635437
    3. ' import' → logprob: -2.7032716274261475
    4. ' .' → logprob: -5.703271865844727
    5. '.import' → logprob: -5.953271865844727
    6. '.im' → logprob: -8.703271865844727
    7. '<|end|>' → logprob: -8.953271865844727
    8. '	import' → logprob: -10.328271865844727
    9. '.groupby' → logprob: -10.578271865844727
    10. ' itertools' → logprob: -10.703271865844727

Token 13: ' is' (ID: 382)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.5999537110328674
    2. 'per' → logprob: -1.8499536514282227
    3. 'com' → logprob: -1.8499536514282227
    4. 'acc' → logprob: -2.7249536514282227
    5. 'count' → logprob: -3.4749536514282227
    6. ' product' → logprob: -4.224953651428223
    7. ' permutations' → logprob: -4.974953651428223
    8. 'chain' → logprob: -5.099953651428223
    9. ' combinations' → logprob: -5.599953651428223
    10. 'is' → logprob: -6.099953651428223

Token 14: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00010211274639004841
    2. 'l' → logprob: -9.500102043151855
    3. 'lic' → logprob: -11.125102043151855
    4. 'land' → logprob: -12.625102043151855
    5. 'lices' → logprob: -12.750102043151855
    6. 'li' → logprob: -13.375102043151855
    7. 'licing' → logprob: -13.625102043151855
    8. 'liced' → logprob: -14.125102043151855
    9. '```' → logprob: -14.250102043151855
    10. '#' → logprob: -14.375102043151855

Token 15: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9414170980453491
    2. '(' → logprob: -1.0664170980453491
    3. '(
' → logprob: -1.5664170980453491
    4. ',' → logprob: -3.9414172172546387
    5. '\' → logprob: -5.066417217254639
    6. '\n' → logprob: -5.441417217254639
    7. 'for' → logprob: -6.066417217254639
    8. 'd' → logprob: -6.066417217254639
    9. ',
' → logprob: -6.191417217254639
    10. '
' → logprob: -6.191417217254639

Token 16: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.45870742201805115
    2. 'cycle' → logprob: -2.083707332611084
    3. 'take' → logprob: -2.583707332611084
    4. 'chain' → logprob: -2.583707332611084
    5. 'acc' → logprob: -3.708707332611084
    6. 'tee' → logprob: -3.833707332611084
    7. 'zip' → logprob: -4.833707332611084
    8. 'per' → logprob: -4.833707332611084
    9. 'com' → logprob: -4.833707332611084
    10. 'product' → logprob: -5.458707332611084

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24481436610221863
    2. 'def' → logprob: -2.244814395904541
    3. '(
' → logprob: -2.619814395904541
    4. '\' → logprob: -4.369814395904541
    5. '#' → logprob: -5.119814395904541
    6. ',' → logprob: -5.869814395904541
    7. '\n' → logprob: -6.119814395904541
    8. 'd' → logprob: -6.494814395904541
    9. '[' → logprob: -6.619814395904541
    10. '`' → logprob: -6.744814395904541

Token 18: ' chain' (ID: 13464)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.8365373611450195
    2. 'take' → logprob: -1.3365373611450195
    3. ' cycle' → logprob: -2.2115373611450195
    4. 'chain' → logprob: -2.8365373611450195
    5. 'acc' → logprob: -3.2115373611450195
    6. ' take' → logprob: -3.7115373611450195
    7. 'filter' → logprob: -4.2115373611450195
    8. ' chain' → logprob: -4.3365373611450195
    9. ' accumulate' → logprob: -4.7115373611450195
    10. 'drop' → logprob: -5.3365373611450195

Token 19: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4270910918712616
    2. '(
' → logprob: -1.927091121673584
    3. ',' → logprob: -2.177091121673584
    4. 'def' → logprob: -3.052091121673584
    5. ',
' → logprob: -4.802091121673584
    6. '\' → logprob: -5.052091121673584
    7. '
' → logprob: -5.552091121673584
    8. '(

' → logprob: -5.927091121673584
    9. '\n' → logprob: -5.927091121673584
    10. '```' → logprob: -6.177091121673584

Token 20: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4913131892681122
    2. '(
' → logprob: -1.6163132190704346
    3. 'def' → logprob: -1.8663132190704346
    4. 'd' → logprob: -3.9913132190704346
    5. '\' → logprob: -4.9913129806518555
    6. '(

' → logprob: -6.3663129806518555
    7. ',' → logprob: -6.8663129806518555
    8. 'a' → logprob: -7.2413129806518555
    9. ',
' → logprob: -7.3663129806518555
    10. 'x' → logprob: -7.4913129806518555

Token 21: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6590689420700073
    2. 'math' → logprob: -0.7840689420700073
    3. ' more' → logprob: -5.159069061279297
    4. ' functools' → logprob: -5.284069061279297
    5. 'collections' → logprob: -5.784069061279297
    6. ' operator' → logprob: -6.284069061279297
    7. 'operator' → logprob: -6.409069061279297
    8. 'more' → logprob: -6.534069061279297
    9. ' collections' → logprob: -6.534069061279297
    10. ' built' → logprob: -6.784069061279297

Token 22: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.026622701436281204
    2. ' import' → logprob: -3.651622772216797
    3. '<|end|>' → logprob: -8.776622772216797
    4. '.' → logprob: -9.526622772216797
    5. 'abc' → logprob: -10.276622772216797
    6. '```' → logprob: -11.026622772216797
    7. '	import' → logprob: -11.776622772216797
    8. 'from' → logprob: -12.401622772216797
    9. '6' → logprob: -12.776622772216797
    10. '_import' → logprob: -13.026622772216797

Token 23: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.17488738894462585
    2. ' deque' → logprob: -2.1748874187469482
    3. ' defaultdict' → logprob: -3.5498874187469482
    4. 'abc' → logprob: -4.549887180328369
    5. ' abc' → logprob: -5.799887180328369
    6. 'default' → logprob: -6.174887180328369
    7. 'de' → logprob: -6.674887180328369
    8. '```' → logprob: -8.174887657165527
    9. 'import' → logprob: -8.299887657165527
    10. 'Counter' → logprob: -8.924887657165527

Token 24: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4962780773639679
    2. ',' → logprob: -1.6212780475616455
    3. '(' → logprob: -2.9962780475616455
    4. '\' → logprob: -3.3712780475616455
    5. 'd' → logprob: -3.7462780475616455
    6. '#' → logprob: -3.7462780475616455
    7. '(
' → logprob: -4.371278285980225
    8. ',
' → logprob: -4.621278285980225
    9. '```' → logprob: -5.121278285980225
    10. ' ' → logprob: -5.246278285980225

Token 25: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006021230015903711
    2. '```' → logprob: -6.006021022796631
    3. 'd' → logprob: -6.381021022796631
    4. 'n' → logprob: -7.756021022796631
    5. '#' → logprob: -8.131021499633789
    6. 'a' → logprob: -8.631021499633789
    7. 'data' → logprob: -9.131021499633789
    8. 's' → logprob: -9.256021499633789
    9. '\' → logprob: -9.381021499633789
    10. 'x' → logprob: -9.506021499633789

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16107076406478882
    2. '=' → logprob: -1.9110708236694336
    3. 'ULO' → logprob: -7.911070823669434
    4. '_' → logprob: -8.661070823669434
    5. ' ' → logprob: -9.036070823669434
    6. 'UL' → logprob: -9.161070823669434
    7. ',' → logprob: -11.036070823669434
    8. 'ULAR' → logprob: -11.411070823669434
    9. 'ul' → logprob: -11.786070823669434
    10. 'ULE' → logprob: -11.786070823669434

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07225246727466583
    2. '10' → logprob: -2.6972525119781494
    3. '100' → logprob: -6.07225227355957
    4. '1' → logprob: -11.94725227355957
    5. '_' → logprob: -15.44725227355957
    6. ' (' → logprob: -15.57225227355957
    7. '998' → logprob: -15.69725227355957
    8. 'int' → logprob: -16.44725227355957
    9. ' ' → logprob: -16.44725227355957
    10. '0' → logprob: -16.44725227355957

Token 28: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09118220210075378
    2. '100' → logprob: -2.466182231903076
    3. '998' → logprob: -6.216182231903076
    4. '1' → logprob: -8.466181755065918
    5. '999' → logprob: -12.091181755065918
    6. '123' → logprob: -12.341181755065918
    7. ' ' → logprob: -12.591181755065918
    8. '101' → logprob: -13.091181755065918
    9. '2' → logprob: -13.091181755065918
    10. '0' → logprob: -13.466181755065918

Token 29: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.2878376841545105
    2. '*' → logprob: -2.7878377437591553
    3. ')' → logprob: -3.4128377437591553
    4. '459' → logprob: -3.7878377437591553
    5. 'def' → logprob: -4.287837505340576
    6. '344' → logprob: -4.537837505340576
    7. '444' → logprob: -4.537837505340576
    8. '44' → logprob: -4.787837505340576
    9. '47' → logprob: -4.912837505340576
    10. '2' → logprob: -5.037837505340576

Token 30: '353' (ID: 32996)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6816691756248474
    2. '

' → logprob: -0.9316691756248474
    3. 'def' → logprob: -3.056669235229492
    4. '_' → logprob: -4.056669235229492
    5. '\' → logprob: -5.056669235229492
    6. '' → logprob: -5.056669235229492
    7. '
' → logprob: -5.181669235229492
    8. '_

' → logprob: -5.556669235229492
    9. '\n' → logprob: -5.931669235229492
    10. ' 

' → logprob: -5.931669235229492

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8230589032173157
    2. 'def' → logprob: -1.073058843612671
    3. '

' → logprob: -1.573058843612671
    4. '
' → logprob: -5.07305908203125
    5. '```' → logprob: -6.32305908203125
    6. ' def' → logprob: -7.32305908203125
    7. '\' → logprob: -7.69805908203125
    8. '\n' → logprob: -7.82305908203125
    9. 'n' → logprob: -8.07305908203125
    10. ',' → logprob: -8.19805908203125

Token 32: 'R' (ID: 49)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16602963209152222
    2. '

' → logprob: -2.166029691696167
    3. '
' → logprob: -3.416029691696167
    4. ' def' → logprob: -6.291029453277588
    5. 'n' → logprob: -7.166029453277588
    6. '\n' → logprob: -7.416029453277588
    7. '#' → logprob: -7.791029453277588
    8. '\' → logprob: -8.041029930114746
    9. '```' → logprob: -8.041029930114746
    10. '
' → logprob: -8.416029930114746

Token 33: ' =' (ID: 314)
  Prédit: 'EV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EV' → logprob: -1.3870314359664917
    2. 'ANGE' → logprob: -1.5120314359664917
    3. 'E' → logprob: -1.8870314359664917
    4. 'ES' → logprob: -2.8870315551757812
    5. 'OOT' → logprob: -3.0120315551757812
    6. ' =' → logprob: -3.2620315551757812
    7. 'AND' → logprob: -3.2620315551757812
    8. 'A' → logprob: -3.5120315551757812
    9. 'EF' → logprob: -3.8870315551757812
    10. '=' → logprob: -3.8870315551757812

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16500864923000336
    2. '2' → logprob: -2.415008544921875
    3. '998' → logprob: -3.790008544921875
    4. '10' → logprob: -4.040008544921875
    5. ' pow' → logprob: -5.165008544921875
    6. 'pow' → logprob: -5.415008544921875
    7. '3' → logprob: -5.915008544921875
    8. '0' → logprob: -6.040008544921875
    9. '100' → logprob: -6.165008544921875
    10. '1' → logprob: -6.290008544921875

Token 35: '250' (ID: 6911)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.40683287382125854
    2. '998' → logprob: -1.5318329334259033
    3. '2' → logprob: -3.0318329334259033
    4. '100' → logprob: -3.9068329334259033
    5. 'pow' → logprob: -4.031832695007324
    6. '3' → logprob: -4.656832695007324
    7. '1' → logprob: -5.281832695007324
    8. '31' → logprob: -6.031832695007324
    9. '0' → logprob: -6.156832695007324
    10. ' ' → logprob: -7.156832695007324

Token 36: '010' (ID: 13522)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5949328541755676
    2. 'def' → logprob: -2.094932794570923
    3. ' ' → logprob: -2.719932794570923
    4. '
' → logprob: -3.219932794570923
    5. ' 
' → logprob: -3.219932794570923
    6. '

' → logprob: -3.469932794570923
    7. ' 

' → logprob: -3.844932794570923
    8. '*' → logprob: -3.844932794570923
    9. '\' → logprob: -3.844932794570923
    10. '\n' → logprob: -4.094933032989502

Token 37: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.190830260515213
    2. 'def' → logprob: -2.4408302307128906
    3. '

' → logprob: -2.8158302307128906
    4. '
' → logprob: -4.940830230712891
    5. '\n' → logprob: -5.065830230712891
    6. '' → logprob: -6.190830230712891
    7. ' 
' → logprob: -6.315830230712891
    8. 'n' → logprob: -6.315830230712891
    9. ' 

' → logprob: -6.565830230712891
    10. '#' → logprob: -6.690830230712891

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1419759839773178
    2. '

' → logprob: -2.2669758796691895
    3. '
' → logprob: -3.8919758796691895
    4. 'def' → logprob: -6.2669758796691895
    5. ' 

' → logprob: -6.7669758796691895
    6. ' 
' → logprob: -6.7669758796691895
    7. '\n' → logprob: -7.6419758796691895
    8. '```' → logprob: -7.6419758796691895
    9. ' ' → logprob: -7.8919758796691895
    10. '#' → logprob: -8.016976356506348

Token 39: 'def' (ID: 1314)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.40693414211273193
    2. 'factor' → logprob: -2.0319342613220215
    3. 'fac' → logprob: -2.4069342613220215
    4. 'def' → logprob: -3.1569342613220215
    5. 'pow' → logprob: -4.5319342613220215
    6. 'dp' → logprob: -4.6569342613220215
    7. 'class' → logprob: -4.9069342613220215
    8. 'f' → logprob: -4.9069342613220215
    9. 'inv' → logprob: -5.1569342613220215
    10. 'arr' → logprob: -5.6569342613220215

Token 40: ' accumulate' (ID: 74226)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.8386531472206116
    2. ' pre' → logprob: -1.2136530876159668
    3. ' pow' → logprob: -2.338653087615967
    4. ' factorial' → logprob: -2.463653087615967
    5. ' prepare' → logprob: -4.338653087615967
    6. ' solve' → logprob: -4.338653087615967
    7. ' main' → logprob: -4.713653087615967
    8. ' fast' → logprob: -4.713653087615967
    9. ' ' → logprob: -4.838653087615967
    10. ' power' → logprob: -5.088653087615967

Token 41: '_mod' (ID: 15325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06445714831352234
    2. '(iter' → logprob: -2.8144571781158447
    3. '(a' → logprob: -7.314456939697266
    4. '(iterator' → logprob: -7.314456939697266
    5. '(sequence' → logprob: -8.439456939697266
    6. ' (' → logprob: -8.689456939697266
    7. '(seq' → logprob: -8.814456939697266
    8. '_(' → logprob: -9.439456939697266
    9. '_' → logprob: -9.689456939697266
    10. '(lst' → logprob: -9.689456939697266

Token 42: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04141867905855179
    2. '(a' → logprob: -3.6664187908172607
    3. '(iter' → logprob: -5.416418552398682
    4. '(x' → logprob: -5.791418552398682
    5. ' (' → logprob: -6.041418552398682
    6. '(arr' → logprob: -6.541418552398682
    7. '(lst' → logprob: -7.416418552398682
    8. '(acc' → logprob: -7.666418552398682
    9. '(seq' → logprob: -8.04141902923584
    10. '(sequence' → logprob: -8.04141902923584

Token 43: ',' (ID: 11)
  Prédit: 'unc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unc' → logprob: -0.38626620173454285
    2. '):' → logprob: -1.6362662315368652
    3. ',' → logprob: -2.6362662315368652
    4. 'un' → logprob: -3.5112662315368652
    5. 'n' → logprob: -4.261266231536865
    6. ')' → logprob: -6.136266231536865
    7. '):
' → logprob: -6.261266231536865
    8. 'unction' → logprob: -6.511266231536865
    9. 'nc' → logprob: -6.886266231536865
    10. 'or' → logprob: -7.136266231536865

Token 44: ' r' (ID: 428)
  Prédit: ' iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' iterable' → logprob: -0.381344735622406
    2. 'iter' → logprob: -1.7563447952270508
    3. 'seq' → logprob: -2.881344795227051
    4. ' seq' → logprob: -4.256344795227051
    5. 'a' → logprob: -4.506344795227051
    6. 'start' → logprob: -4.631344795227051
    7. 'data' → logprob: -4.756344795227051
    8. 'acc' → logprob: -5.381344795227051
    9. ' data' → logprob: -5.506344795227051
    10. ' start' → logprob: -5.881344795227051

Token 45: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23982708156108856
    2. ',' → logprob: -1.614827036857605
    3. '=' → logprob: -5.3648271560668945
    4. 'ange' → logprob: -5.7398271560668945
    5. '):
' → logprob: -6.8648271560668945
    6. ':' → logprob: -6.9898271560668945
    7. 'ef' → logprob: -7.3648271560668945
    8. ')' → logprob: -7.6148271560668945
    9. '=None' → logprob: -7.7398271560668945
    10. 'eg' → logprob: -8.114827156066895

Token 46: ' o' (ID: 293)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2961400747299194
    2. ' iterable' → logprob: -1.6711400747299194
    3. 'n' → logprob: -1.7961400747299194
    4. ' start' → logprob: -2.296140193939209
    5. 'start' → logprob: -2.671140193939209
    6. 'init' → logprob: -3.796140193939209
    7. ' acc' → logprob: -4.296140193939209
    8. ' a' → logprob: -4.421140193939209
    9. ' initial' → logprob: -4.796140193939209
    10. 's' → logprob: -4.796140193939209

Token 47: '):
' (ID: 1883)
  Prédit: 'ffset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ffset' → logprob: -0.7356579303741455
    2. 'ut' → logprob: -0.8606579303741455
    3. 'bj' → logprob: -3.7356579303741455
    4. '=' → logprob: -3.7356579303741455
    5. 'p' → logprob: -4.610657691955566
    6. '):' → logprob: -4.860657691955566
    7. 'r' → logprob: -5.110657691955566
    8. 'b' → logprob: -5.360657691955566
    9. 'ld' → logprob: -5.985657691955566
    10. 'uter' → logprob: -5.985657691955566

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8629521131515503
    2. '   ' → logprob: -1.3629521131515503
    3. '):' → logprob: -2.23795223236084
    4. ' :' → logprob: -3.36295223236084
    5. ' =' → logprob: -3.36295223236084
    6. ' ' → logprob: -3.73795223236084
    7. 'r' → logprob: -3.98795223236084
    8. '  ' → logprob: -4.11295223236084
    9. ',' → logprob: -4.11295223236084
    10. 'p' → logprob: -4.23795223236084

Token 49: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3103924989700317
    2. '   ' → logprob: -1.8103924989700317
    3. 'acc' → logprob: -2.310392379760742
    4. ' for' → logprob: -2.310392379760742
    5. ' res' → logprob: -2.560392379760742
    6. 'yield' → logprob: -3.185392379760742
    7. 'res' → logprob: -3.435392379760742
    8. 'r' → logprob: -3.560392379760742
    9. ' yield' → logprob: -3.560392379760742
    10. 'prev' → logprob: -3.685392379760742

Token 50: ' generator' (ID: 23989)
  Prédit: ' wrapper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wrapper' → logprob: -0.594654381275177
    2. ' accumulator' → logprob: -1.9696543216705322
    3. ' inner' → logprob: -2.7196543216705322
    4. ' g' → logprob: -2.7196543216705322
    5. ' acc' → logprob: -2.8446543216705322
    6. 'acc' → logprob: -3.4696543216705322
    7. '_wrapper' → logprob: -3.5946543216705322
    8. ' accumulate' → logprob: -3.8446543216705322
    9. ' func' → logprob: -4.844654560089111
    10. 'wrapper' → logprob: -4.969654560089111

Token 51: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.08087995648384094
    2. '(*' → logprob: -2.7058799266815186
    3. '(' → logprob: -5.080880165100098
    4. '(x' → logprob: -5.705880165100098
    5. '():
' → logprob: -7.955880165100098
    6. '(...' → logprob: -8.580880165100098
    7. '(a' → logprob: -9.080880165100098
    8. ':' → logprob: -9.205880165100098
    9. '(s' → logprob: -9.705880165100098
    10. '(r' → logprob: -9.830880165100098

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018323658034205437
    2. ' i' → logprob: -4.8933234214782715
    3. 'i' → logprob: -6.3933234214782715
    4. ' prev' → logprob: -6.3933234214782715
    5. ' for' → logprob: -6.7683234214782715
    6. ' acc' → logprob: -7.0183234214782715
    7. 'prev' → logprob: -7.2683234214782715
    8. '     ' → logprob: -7.5183234214782715
    9. ' yield' → logprob: -7.7683234214782715
    10. '   ' → logprob: -7.8933234214782715

Token 53: ' acc' (ID: 1259)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.895200252532959
    2. 'v' → logprob: -1.020200252532959
    3. '       ' → logprob: -2.520200252532959
    4. 'acc' (adapté à ' acc') → logprob: -3.020200252532959
    5. 'i' → logprob: -4.270200252532959
    6. 'prev' → logprob: -4.270200252532959
    7. 'cur' → logprob: -4.395200252532959
    8. 'yield' → logprob: -4.645200252532959
    9. 'res' → logprob: -5.020200252532959
    10. '   ' → logprob: -5.020200252532959

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2321149855852127
    2. '=' → logprob: -1.6071150302886963
    3. 'umulator' → logprob: -5.482114791870117
    4. 'um' → logprob: -6.482114791870117
    5. 'umulate' → logprob: -7.357114791870117
    6. 'umul' → logprob: -8.232114791870117
    7. ' ' → logprob: -10.857114791870117
    8. '   ' → logprob: -10.857114791870117
    9. '  ' → logprob: -11.982114791870117
    10. '       ' → logprob: -12.107114791870117

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5693651437759399
    2. 'o' → logprob: -1.31936514377594
    3. 'f' → logprob: -2.8193650245666504
    4. ' ' → logprob: -3.0693650245666504
    5. 'r' → logprob: -3.8193650245666504
    6. ' o' → logprob: -3.9443650245666504
    7. ' f' → logprob: -4.31936502456665
    8. ' r' → logprob: -5.81936502456665
    9. '1' → logprob: -6.69436502456665
    10. '   ' → logprob: -7.44436502456665

Token 56: '1' (ID: 16)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.27813249826431274
    2. '0' → logprob: -1.528132438659668
    3. 'r' → logprob: -4.403132438659668
    4. 'f' → logprob: -4.403132438659668
    5. 'next' → logprob: -7.153132438659668
    6. 'None' → logprob: -7.903132438659668
    7. '1' → logprob: -8.653132438659668
    8. 'R' → logprob: -11.028132438659668
    9. '(o' → logprob: -11.903132438659668
    10. '[o' → logprob: -12.403132438659668

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029119648039340973
    2. '<|end|>' → logprob: -3.9041197299957275
    3. '<|end|>' → logprob: -5.779119491577148
    4. '
' → logprob: -5.904119491577148
    5. '' → logprob: -7.029119491577148
    6. ' 
' → logprob: -8.404119491577148
    7. '       ' → logprob: -8.654119491577148
    8. ' ' → logprob: -8.779119491577148
    9. ' for' → logprob: -9.154119491577148
    10. '    
' → logprob: -9.404119491577148

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0233134962618351
    2. '
' → logprob: -4.773313522338867
    3. '<|end|>' → logprob: -4.773313522338867
    4. '<|end|>' → logprob: -6.273313522338867
    5. '0' → logprob: -7.273313522338867
    6. '	' → logprob: -7.398313522338867
    7. ':' → logprob: -7.773313522338867
    8. ',' → logprob: -7.773313522338867
    9. '        
' → logprob: -8.523313522338867
    10. '   ' → logprob: -8.648313522338867

Token 59: ' yield' (ID: 14376)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.735520601272583
    2. '       ' → logprob: -1.110520601272583
    3. ' for' → logprob: -2.985520601272583
    4. 'yield' (adapté à ' yield') → logprob: -2.985520601272583
    5. '	yield' → logprob: -3.860520601272583
    6. 'for' → logprob: -3.860520601272583
    7. ' yield' → logprob: -4.485520362854004
    8. ':' → logprob: -4.610520362854004
    9. '   ' → logprob: -5.110520362854004
    10. ' ' → logprob: -5.235520362854004

Token 60: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.20373718440532684
    2. 'acc' → logprob: -2.453737258911133
    3. '1' → logprob: -2.953737258911133
    4. ' ' → logprob: -3.078737258911133
    5. '(acc' → logprob: -9.453737258911133
    6. '  ' → logprob: -10.203737258911133
    7. '	acc' → logprob: -10.953737258911133
    8. '0' → logprob: -11.266237258911133
    9. 'r' → logprob: -12.078737258911133
    10. '   ' → logprob: -12.203737258911133

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1366884410381317
    2. '        
' → logprob: -3.011688470840454
    3. '\n' → logprob: -3.636688470840454
    4. '       ' → logprob: -3.761688470840454
    5. ' 
' → logprob: -4.886688232421875
    6. '<|end|>' → logprob: -5.386688232421875
    7. '    
' → logprob: -5.511688232421875
    8. '  
' → logprob: -5.886688232421875
    9. '<|end|>' → logprob: -6.636688232421875
    10. '   ' → logprob: -6.886688232421875

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018530795350670815
    2. '        
' → logprob: -4.64353084564209
    3. '
' → logprob: -5.26853084564209
    4. ' 
' → logprob: -7.14353084564209
    5. '    
' → logprob: -7.51853084564209
    6. '        ' → logprob: -8.26853084564209
    7. '   ' → logprob: -8.26853084564209
    8. '  
' → logprob: -8.39353084564209
    9. ' for' → logprob: -8.76853084564209
    10. ' ' → logprob: -8.89353084564209

Token 63: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13176660239696503
    2. ' for' → logprob: -2.3817665576934814
    3. 'for' (adapté à ' for') → logprob: -4.0067667961120605
    4. '   ' → logprob: -5.3817667961120605
    5. '        ' → logprob: -6.0067667961120605
    6. ' ' → logprob: -6.6317667961120605
    7. '
' → logprob: -7.1317667961120605
    8. '    ' → logprob: -7.2567667961120605
    9. '           ' → logprob: -7.5067667961120605
    10. '      ' → logprob: -7.7567667961120605

Token 64: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.21167364716529846
    2. 'x' → logprob: -1.711673617362976
    3. ' i' → logprob: -5.211673736572266
    4. 'i' → logprob: -6.711673736572266
    5. ' e' → logprob: -7.086673736572266
    6. ' v' → logprob: -7.086673736572266
    7. 'e' → logprob: -7.836673736572266
    8. 'v' → logprob: -8.086673736572266
    9. ' a' → logprob: -8.211673736572266
    10. ' ' → logprob: -8.211673736572266

Token 65: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7292195558547974
    2. ' in' → logprob: -0.7292195558547974
    3. 'in' → logprob: -3.479219436645508
    4. ',' → logprob: -5.604219436645508
    5. 'd' → logprob: -8.604219436645508
    6. 'nd' → logprob: -8.604219436645508
    7. ',n' → logprob: -8.604219436645508
    8. ' n' → logprob: -9.354219436645508
    9. 'nt' → logprob: -9.854219436645508
    10. ' ' → logprob: -10.479219436645508

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6299043893814087
    2. ' o' → logprob: -1.7549043893814087
    3. ' r' → logprob: -1.7549043893814087
    4. 'r' → logprob: -2.754904270172119
    5. 'range' → logprob: -3.754904270172119
    6. 'o' → logprob: -3.879904270172119
    7. ' chain' → logprob: -4.879904270172119
    8. 'chain' → logprob: -6.254904270172119
    9. ' ' → logprob: -7.254904270172119
    10. '	o' → logprob: -7.629904270172119

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9034417271614075
    2. '(o' → logprob: -1.1534416675567627
    3. '(r' → logprob: -1.5284416675567627
    4. '(len' → logprob: -2.7784416675567627
    5. '(f' → logprob: -9.403441429138184
    6. '(l' → logprob: -10.153441429138184
    7. 'len' → logprob: -10.278441429138184
    8. '(R' → logprob: -11.028441429138184
    9. '(n' → logprob: -11.028441429138184
    10. '(length' → logprob: -11.153441429138184

Token 68: '1' (ID: 16)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.0252693891525269
    2. '(len' → logprob: -1.1502693891525269
    3. '(o' → logprob: -1.5252693891525269
    4. '(' → logprob: -3.0252695083618164
    5. 'len' → logprob: -3.6502695083618164
    6. 'o' → logprob: -4.275269508361816
    7. 'r' → logprob: -4.650269508361816
    8. '1' → logprob: -4.775269508361816
    9. '0' → logprob: -8.150269508361816
    10. '(R' → logprob: -9.650269508361816

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00439284835010767
    2. ',len' → logprob: -5.629392623901367
    3. ' ,' → logprob: -7.504392623901367
    4. ',r' → logprob: -8.379392623901367
    5. '(len' → logprob: -12.004392623901367
    6. 'len' → logprob: -12.879392623901367
    7. ',length' → logprob: -13.754392623901367
    8. ',
' → logprob: -14.254392623901367
    9. ',n' → logprob: -14.754392623901367
    10. 'r' → logprob: -15.254392623901367

Token 70: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06952162086963654
    2. ' r' → logprob: -2.81952166557312
    3. 'len' → logprob: -5.069521427154541
    4. ' len' → logprob: -6.819521427154541
    5. 'R' → logprob: -9.0695219039917
    6. ' R' → logprob: -11.1945219039917
    7. '   ' → logprob: -11.8195219039917
    8. ' ' → logprob: -12.4445219039917
    9. '  ' → logprob: -13.4445219039917
    10. 'o' → logprob: -13.6945219039917

Token 71: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5259307026863098
    2. '):
' → logprob: -1.150930643081665
    3. ' +' → logprob: -3.025930643081665
    4. '):' → logprob: -3.150930643081665
    5. ' ):
' → logprob: -7.400930881500244
    6. ' -' → logprob: -8.650930404663086
    7. '+r' → logprob: -9.025930404663086
    8. '):
' → logprob: -9.025930404663086
    9. ' ):' → logprob: -9.150930404663086
    10. ')' → logprob: -9.900930404663086

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13769830763339996
    2. ':' → logprob: -2.1376984119415283
    3. ':
' → logprob: -5.762698173522949
    4. '       ' → logprob: -6.262698173522949
    5. ',' → logprob: -7.137698173522949
    6. '	       ' → logprob: -7.137698173522949
    7. '<|end|>' → logprob: -7.387698173522949
    8. '):' → logprob: -7.887698173522949
    9. '            
' → logprob: -8.01269817352295
    10. '          ' → logprob: -8.01269817352295

Token 73: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.07937319576740265
    2. ' yield' → logprob: -3.2043731212615967
    3. 'acc' (adapté à ' acc') → logprob: -3.7043731212615967
    4. '           ' → logprob: -5.829373359680176
    5. 'yield' → logprob: -5.954373359680176
    6. '               ' → logprob: -6.204373359680176
    7. '       ' → logprob: -6.454373359680176
    8. '        ' → logprob: -6.454373359680176
    9. '            ' → logprob: -9.079373359680176
    10. '   ' → logprob: -9.704373359680176

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07001857459545135
    2. '=' → logprob: -2.6950185298919678
    3. ' *=' → logprob: -9.570018768310547
    4. '*=' → logprob: -11.945018768310547
    5. ' ' → logprob: -12.695018768310547
    6. '=f' → logprob: -12.945018768310547
    7. '	' → logprob: -14.945018768310547
    8. ' <<=' → logprob: -16.945018768310547
    9. '*' → logprob: -17.320018768310547
    10. '＝' → logprob: -17.445018768310547

Token 75: ' (' (ID: 350)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5199424624443054
    2. ' f' → logprob: -1.0199425220489502
    3. ' (' → logprob: -3.64494252204895
    4. '(f' → logprob: -4.019942283630371
    5. '(' → logprob: -7.519942283630371
    6. 'acc' → logprob: -9.769942283630371
    7. ' ' → logprob: -10.269942283630371
    8. '(acc' → logprob: -10.644942283630371
    9. '	f' → logprob: -11.019942283630371
    10. '   ' → logprob: -11.394942283630371

Token 76: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.37023451924324036
    2. 'f' → logprob: -1.245234489440918
    3. ' f' → logprob: -4.245234489440918
    4. ' acc' → logprob: -5.120234489440918
    5. '(acc' → logprob: -6.995234489440918
    6. '(f' → logprob: -8.495234489440918
    7. ' (' → logprob: -10.620234489440918
    8. ')' → logprob: -10.995234489440918
    9. '(' → logprob: -11.120234489440918
    10. '   ' → logprob: -11.245234489440918

Token 77: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10531261563301086
    2. '*' → logprob: -2.9803125858306885
    3. '*f' → logprob: -4.230312824249268
    4. '(f' → logprob: -4.355312824249268
    5. ')' → logprob: -5.105312824249268
    6. ' f' → logprob: -5.230312824249268
    7. 'f' → logprob: -5.730312824249268
    8. ' ' → logprob: -6.105312824249268
    9. 'o' → logprob: -6.730312824249268
    10. ',' → logprob: -7.105312824249268

Token 78: ' i' (ID: 575)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1624661684036255
    2. ' f' → logprob: -1.9124661684036255
    3. '(f' → logprob: -7.412466049194336
    4. 'o' → logprob: -7.662466049194336
    5. 'next' → logprob: -8.037466049194336
    6. ' next' → logprob: -8.037466049194336
    7. ' o' → logprob: -8.162466049194336
    8. ' (' → logprob: -8.787466049194336
    9. '(next' → logprob: -10.287466049194336
    10. '   ' → logprob: -12.037466049194336

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06683287024497986
    2. ' )' → logprob: -3.1918327808380127
    3. ' *' → logprob: -5.066833019256592
    4. ' +' → logprob: -5.316833019256592
    5. '*f' → logprob: -5.566833019256592
    6. ')%' → logprob: -6.191833019256592
    7. '*' → logprob: -6.316833019256592
    8. '+' → logprob: -6.441833019256592
    9. ' f' → logprob: -7.066833019256592
    10. ' %' → logprob: -7.441833019256592

Token 80: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6457942724227905
    2. '%' → logprob: -1.3957942724227905
    3. ')' → logprob: -1.5207942724227905
    4. ')%' → logprob: -4.77079439163208
    5. ' )' → logprob: -7.64579439163208
    6. ' ' → logprob: -9.020793914794922
    7. ' if' → logprob: -9.270793914794922
    8. 'def' → logprob: -9.645793914794922
    9. 'f' → logprob: -9.770793914794922
    10. '%c' → logprob: -9.770793914794922

Token 81: ' o' (ID: 293)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0004994167247787118
    2. ' MOD' → logprob: -7.625499248504639
    3. '_MOD' → logprob: -12.250499725341797
    4. 'o' → logprob: -12.625499725341797
    5. ' ' → logprob: -14.125499725341797
    6. '```' → logprob: -14.125499725341797
    7. '`' → logprob: -15.125499725341797
    8. '   ' → logprob: -15.250499725341797
    9. '.MOD' → logprob: -15.250499725341797
    10. 'MO' → logprob: -15.500499725341797

Token 82: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057705458253622055
    2. '       ' → logprob: -3.5577054023742676
    3. 'yield' → logprob: -3.6827054023742676
    4. ' yield' → logprob: -7.057705402374268
    5. '
' → logprob: -7.432705402374268
    6. '   ' → logprob: -7.932705402374268
    7. '	yield' → logprob: -8.807705879211426
    8. '               ' → logprob: -9.432705879211426
    9. '            
' → logprob: -9.682705879211426
    10. '```' → logprob: -9.807705879211426

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03472595661878586
    2. 'yield' → logprob: -3.6597259044647217
    3. '       ' → logprob: -5.034726142883301
    4. ' yield' → logprob: -6.409726142883301
    5. '	yield' → logprob: -8.6597261428833
    6. ',' → logprob: -11.2847261428833
    7. '```' → logprob: -11.2847261428833
    8. '.' → logprob: -11.9097261428833
    9. '   ' → logprob: -11.9097261428833
    10. ' yields' → logprob: -12.6597261428833

Token 84: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.00038336371653713286
    2. ' yield' → logprob: -8.250383377075195
    3. '       ' → logprob: -9.500383377075195
    4. '	yield' → logprob: -10.375383377075195
    5. '           ' → logprob: -11.125383377075195
    6. '```' → logprob: -14.000383377075195
    7. '   ' → logprob: -15.000383377075195
    8. 'Yield' → logprob: -16.625383377075195
    9. 'y' → logprob: -16.875383377075195
    10. '0' → logprob: -18.000383377075195

Token 85: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08896901458501816
    2. ' acc' → logprob: -2.4639689922332764
    3. '(acc' → logprob: -10.588969230651855
    4. '	acc' → logprob: -12.963969230651855
    5. ' accu' → logprob: -14.088969230651855
    6. ' ' → logprob: -14.588969230651855
    7. 'acce' → logprob: -15.838969230651855
    8. 'ac' → logprob: -15.838969230651855
    9. ' accum' → logprob: -16.46396827697754
    10. '  ' → logprob: -16.71396827697754

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025508655235171318
    2. 'return' → logprob: -4.400508880615234
    3. ')' → logprob: -4.525508880615234
    4. 'def' → logprob: -6.650508880615234
    5. 'acc' → logprob: -8.275508880615234
    6. '       ' → logprob: -9.025508880615234
    7. ' return' → logprob: -9.400508880615234
    8. 'next' → logprob: -10.400508880615234
    9. 'result' → logprob: -10.525508880615234
    10. '<|end|>' → logprob: -10.650508880615234

Token 88: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.036837268620729446
    2. '   ' → logprob: -3.536837339401245
    3. ' return' → logprob: -5.161837100982666
    4. 'acc' → logprob: -7.536837100982666
    5. ')' → logprob: -7.786837100982666
    6. ' ' → logprob: -9.411837577819824
    7. 'def' → logprob: -9.786837577819824
    8. 'next' → logprob: -10.161837577819824
    9. 'yield' → logprob: -10.411837577819824
    10. 'for' → logprob: -10.536837577819824

Token 89: ' list' (ID: 1562)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.6479748487472534
    2. 'list' → logprob: -0.7729748487472534
    3. 'tuple' → logprob: -4.897974967956543
    4. 'generator' → logprob: -5.647974967956543
    5. 'chain' → logprob: -5.897974967956543
    6. ' list' → logprob: -7.522974967956543
    7. '(generator' → logprob: -8.397974967956543
    8. 're' → logprob: -8.897974967956543
    9. 'de' → logprob: -9.397974967956543
    10. 'map' → logprob: -9.522974967956543

Token 90: '(generator' (ID: 119716)
  Prédit: '(generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(generator' → logprob: -4.4849443838757e-06
    2. '(generate' → logprob: -12.375004768371582
    3. '(' → logprob: -15.375004768371582
    4. '(gen' → logprob: -17.500003814697266
    5. '(chain' → logprob: -18.000003814697266
    6. 'generator' → logprob: -18.750003814697266
    7. '(map' → logprob: -19.750003814697266
    8. '(function' → logprob: -19.875003814697266
    9. '(iterator' → logprob: -20.125003814697266
    10. '(filter' → logprob: -20.375003814697266

Token 91: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.022432992234826088
    2. ')' → logprob: -4.022432804107666
    3. '()' → logprob: -6.022432804107666
    4. '()))' → logprob: -6.397432804107666
    5. '))' → logprob: -9.272433280944824
    6. ' ())' → logprob: -9.397433280944824
    7. '(' → logprob: -12.647433280944824
    8. '();)' → logprob: -13.397433280944824
    9. '())))' → logprob: -14.897433280944824
    10. ' )' → logprob: -15.147433280944824

Token 92: 'F' (ID: 37)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.8130362629890442
    2. 'factor' → logprob: -1.3130362033843994
    3. 'R' → logprob: -2.1880362033843994
    4. 'f' → logprob: -2.3130362033843994
    5. '(R' → logprob: -3.6880362033843994
    6. 'fac' → logprob: -4.0630364418029785
    7. 'facts' → logprob: -4.9380364418029785
    8. 'F' → logprob: -5.1880364418029785
    9. 'r' → logprob: -5.1880364418029785
    10. '(f' → logprob: -5.5630364418029785

Token 93: ' =' (ID: 314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9374845027923584
    2. 'a' → logprob: -1.9374845027923584
    3. 'AC' → logprob: -2.0624845027923584
    4. 'ac' → logprob: -2.4374845027923584
    5. '=' → logprob: -2.8124845027923584
    6. ' =' → logprob: -3.0624845027923584
    7. '```' → logprob: -3.3124845027923584
    8. 'act' → logprob: -3.6874845027923584
    9. '_' → logprob: -3.8124845027923584
    10. 'acs' → logprob: -4.1874847412109375

Token 94: ' accumulate' (ID: 74226)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.008844422176480293
    2. ' accumulate' → logprob: -4.758844375610352
    3. '(acc' → logprob: -8.633844375610352
    4. 'reduce' → logprob: -11.633844375610352
    5. ' acc' → logprob: -11.758844375610352
    6. 'ac' → logprob: -11.758844375610352
    7. '	acc' → logprob: -11.758844375610352
    8. '[' → logprob: -12.258844375610352
    9. '  ' → logprob: -12.258844375610352
    10. '   ' → logprob: -12.633844375610352

Token 95: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0005152635276317596
    2. 'mod' → logprob: -7.625515460968018
    3. '_' → logprob: -10.87551498413086
    4. '(mod' → logprob: -13.00051498413086
    5. '_MOD' → logprob: -13.37551498413086
    6. '_factor' → logprob: -13.87551498413086
    7. 'f' → logprob: -14.62551498413086
    8. 'factor' → logprob: -14.75051498413086
    9. '_mul' → logprob: -15.25051498413086
    10. 'fact' → logprob: -15.62551498413086

Token 96: '([' (ID: 5194)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.7367455363273621
    2. '(m' → logprob: -1.3617455959320068
    3. '(lambda' → logprob: -1.7367455959320068
    4. '(' → logprob: -2.736745595932007
    5. '(int' → logprob: -4.236745357513428
    6. '(range' → logprob: -5.611745357513428
    7. 'factor' → logprob: -6.236745357513428
    8. '(re' → logprob: -6.986745357513428
    9. '(pow' → logprob: -7.361745357513428
    10. '(mod' → logprob: -7.861745357513428

Token 97: '1' (ID: 16)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.07316995412111282
    2. 'None' → logprob: -3.0731699466705322
    3. 'range' → logprob: -4.948170185089111
    4. 'R' → logprob: -5.198170185089111
    5. 'lambda' → logprob: -5.823170185089111
    6. '0' → logprob: -5.948170185089111
    7. 'int' → logprob: -5.948170185089111
    8. '1' → logprob: -6.948170185089111
    9. 'MOD' → logprob: -7.698170185089111
    10. ']' → logprob: -8.073169708251953

Token 98: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013689281418919563
    2. ',R' → logprob: -4.5136895179748535
    3. 'R' → logprob: -6.0136895179748535
    4. ' ,' → logprob: -9.388689041137695
    5. ',r' → logprob: -10.138689041137695
    6. '],' → logprob: -11.013689041137695
    7. ')' → logprob: -12.013689041137695
    8. ' R' → logprob: -12.013689041137695
    9. '250' → logprob: -12.138689041137695
    10. '),' → logprob: -12.263689041137695

Token 99: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0013932115398347378
    2. ' R' → logprob: -6.6263933181762695
    3. '250' → logprob: -9.62639331817627
    4. '  ' → logprob: -14.62639331817627
    5. ' ' → logprob: -14.62639331817627
    6. '25' → logprob: -16.001392364501953
    7. 'r' → logprob: -16.251392364501953
    8. '   ' → logprob: -16.876392364501953
    9. ')' → logprob: -16.876392364501953
    10. '2' → logprob: -17.126392364501953

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015140273608267307
    2. ' ,' → logprob: -6.501513957977295
    3. ')' → logprob: -11.876514434814453
    4. 'MOD' → logprob: -13.626514434814453
    5. ' ' → logprob: -14.001514434814453
    6. ',M' → logprob: -14.751514434814453
    7. ' -' → logprob: -15.001514434814453
    8. ' MOD' → logprob: -15.126514434814453
    9. ',F' → logprob: -15.126514434814453
    10. ',R' → logprob: -15.626514434814453

Token 101: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.002477796748280525
    2. ' MOD' → logprob: -6.002477645874023
    3. '998' → logprob: -13.502477645874023
    4. ' ' → logprob: -15.502477645874023
    5. '_MOD' → logprob: -15.502477645874023
    6. '   ' → logprob: -16.502477645874023
    7. '999' → logprob: -16.627477645874023
    8. 'MO' → logprob: -16.752477645874023
    9. ')' → logprob: -17.127477645874023
    10. '.MOD' → logprob: -17.377477645874023

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001234428636962548
    2. ',' → logprob: -9.500123023986816
    3. ' )' → logprob: -10.375123023986816
    4. ',)' → logprob: -11.125123023986816
    5. '))' → logprob: -14.000123023986816
    6. '[' → logprob: -14.375123023986816
    7. '),' → logprob: -15.125123023986816
    8. ')`' → logprob: -15.750123023986816
    9. '(' → logprob: -16.375123977661133
    10. ')}' → logprob: -16.625123977661133

Token 103: 'inv' (ID: 31086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23840516805648804
    2. '(' → logprob: -1.9884052276611328
    3. '<|end|>' → logprob: -2.988405227661133
    4. ',' → logprob: -4.238405227661133
    5. '[' → logprob: -5.738405227661133
    6. '(lambda' → logprob: -6.363405227661133
    7. '(
' → logprob: -7.113405227661133
    8. ' ' → logprob: -7.738405227661133
    9. '<|end|>' → logprob: -7.738405227661133
    10. '0' → logprob: -7.738405227661133

Token 104: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1557105928659439
    2. '_factor' → logprob: -2.1557106971740723
    3. 'F' → logprob: -4.905710697174072
    4. '_f' → logprob: -5.280710697174072
    5. '_F' → logprob: -5.280710697174072
    6. '_fact' → logprob: -6.155710697174072
    7. ' =' → logprob: -6.405710697174072
    8. 's' → logprob: -6.405710697174072
    9. '=' → logprob: -6.780710697174072
    10. '(' → logprob: -7.780710697174072

Token 105: ' lambda' (ID: 27871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08403850346803665
    2. 'acc' → logprob: -3.084038496017456
    3. ' [' → logprob: -4.709038734436035
    4. 'pow' → logprob: -5.209038734436035
    5. 'lambda' → logprob: -5.334038734436035
    6. ' accumulate' → logprob: -5.709038734436035
    7. '[F' → logprob: -5.709038734436035
    8. '{}' → logprob: -5.834038734436035
    9. '[]' → logprob: -6.084038734436035
    10. '{' → logprob: -6.959038734436035

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28941547870635986
    2. ' x' → logprob: -1.4144154787063599
    3. 'a' → logprob: -5.16441535949707
    4. ' a' → logprob: -6.53941535949707
    5. 'pow' → logprob: -7.53941535949707
    6. 'n' → logprob: -8.66441535949707
    7. ' n' → logprob: -9.03941535949707
    8. 'i' → logprob: -9.66441535949707
    9. ' i' → logprob: -10.28941535949707
    10. 'f' → logprob: -10.78941535949707

Token 107: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02339828386902809
    2. ' :' → logprob: -3.8983983993530273
    3. 'pow' → logprob: -6.023398399353027
    4. ' pow' → logprob: -8.023398399353027
    5. 'x' → logprob: -10.273398399353027
    6. ',' → logprob: -10.773398399353027
    7. '(pow' → logprob: -10.898398399353027
    8. ' x' → logprob: -12.273398399353027
    9. '   ' → logprob: -12.398398399353027
    10. ':x' → logprob: -12.523398399353027

Token 108: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0005544631858356297
    2. ' pow' → logprob: -7.50055456161499
    3. '(pow' → logprob: -13.500554084777832
    4. 'power' → logprob: -18.37555503845215
    5. '   ' → logprob: -18.87555503845215
    6. '_pow' → logprob: -19.00055503845215
    7. 'Pow' → logprob: -20.12555503845215
    8. ' ' → logprob: -20.37555503845215
    9. 'mod' → logprob: -20.50055503845215
    10. 'x' → logprob: -20.87555503845215

Token 109: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16041360795497894
    2. '(' → logprob: -1.9104136228561401
    3. '<|end|>' → logprob: -8.66041374206543
    4. '(pow' → logprob: -11.66041374206543
    5. '(
' → logprob: -12.53541374206543
    6. ')' → logprob: -14.03541374206543
    7. 'x' → logprob: -14.16041374206543
    8. '<|end|>' → logprob: -14.41041374206543
    9. '(

' → logprob: -14.78541374206543
    10. ' (' → logprob: -15.78541374206543

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3676733690081164e-05
    2. ' ,' → logprob: -11.25002384185791
    3. ',-' → logprob: -12.37502384185791
    4. 'MOD' → logprob: -13.12502384185791
    5. ',
' → logprob: -13.37502384185791
    6. ',M' → logprob: -14.12502384185791
    7. ')' → logprob: -14.37502384185791
    8. '2' → logprob: -15.25002384185791
    9. ',

' → logprob: -15.50002384185791
    10. 'mod' → logprob: -15.87502384185791

Token 111: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0077890316024422646
    2. '-' → logprob: -5.007789134979248
    3. ' MOD' → logprob: -7.007789134979248
    4. '998' → logprob: -9.38278865814209
    5. '_MOD' → logprob: -10.25778865814209
    6. ' -' → logprob: -11.13278865814209
    7. '.MOD' → logprob: -11.25778865814209
    8. ' ' → logprob: -11.25778865814209
    9. '```' → logprob: -13.25778865814209
    10. '   ' → logprob: -13.75778865814209

Token 112: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00029613598599098623
    2. ' -' → logprob: -8.125296592712402
    3. '–' → logprob: -17.750295639038086
    4. '−' → logprob: -17.750295639038086
    5. ' ' → logprob: -18.250295639038086
    6. '```' → logprob: -18.375295639038086
    7. '2' → logprob: -20.000295639038086
    8. ')' → logprob: -20.000295639038086
    9. ''s' → logprob: -20.375295639038086
    10. '   ' → logprob: -21.187795639038086

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '```' → logprob: -15.500000953674316
    4. '

' → logprob: -16.8125
    5. '-' → logprob: -16.9375
    6. '3' → logprob: -17.875
    7. '   ' → logprob: -17.875
    8. '{' → logprob: -18.0
    9. '"' → logprob: -18.0625
    10. '２' → logprob: -18.3125

Token 114: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020641623064875603
    2. ',' → logprob: -3.895641565322876
    3. ' )' → logprob: -9.270641326904297
    4. ' ,' → logprob: -13.270641326904297
    5. ',)' → logprob: -13.520641326904297
    6. '}' → logprob: -14.645641326904297
    7. '))' → logprob: -14.770641326904297
    8. '),' → logprob: -15.020641326904297
    9. ' ' → logprob: -15.020641326904297
    10. '<|end|>' → logprob: -15.270641326904297

Token 115: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00317783304490149
    2. ' MOD' → logprob: -5.753177642822266
    3. ')' → logprob: -17.253177642822266
    4. '_MOD' → logprob: -17.753177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '.MOD' → logprob: -19.253177642822266
    7. '998' → logprob: -19.628177642822266
    8. '   ' → logprob: -20.503177642822266
    9. '```' → logprob: -20.503177642822266
    10. 'MO' → logprob: -21.253177642822266

Token 116: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -16.75
    3. ')

' → logprob: -17.625
    4. '))' → logprob: -18.0
    5. '),' → logprob: -18.75
    6. ')
' → logprob: -18.75
    7. ')`' → logprob: -19.125
    8. ')#' → logprob: -20.125
    9. ')}' → logprob: -20.5
    10. '}' → logprob: -20.75

Token 117: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8511989712715149
    2. ')' → logprob: -1.4761989116668701
    3. 'def' → logprob: -1.4761989116668701
    4. 'for' → logprob: -2.60119891166687
    5. 'F' → logprob: -3.72619891166687
    6. '(' → logprob: -5.101199150085449
    7. ']' → logprob: -5.601199150085449
    8. '#' → logprob: -5.851199150085449
    9. '<|end|>' → logprob: -6.726199150085449
    10. '*' → logprob: -7.101199150085449

Token 118: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.1755512952804565
    2. ' n' → logprob: -1.4255512952804565
    3. ' mod' → logprob: -2.050551414489746
    4. ' factorial' → logprob: -2.050551414489746
    5. 'n' → logprob: -2.175551414489746
    6. ' fact' → logprob: -3.925551414489746
    7. 'mod' → logprob: -4.425551414489746
    8. 'comb' → logprob: -4.550551414489746
    9. 'factor' → logprob: -5.175551414489746
    10. ' choose' → logprob: -5.425551414489746

Token 119: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011307948443572968
    2. '(' → logprob: -9.750113487243652
    3. 'ination' → logprob: -10.000113487243652
    4. 'n' → logprob: -12.750113487243652
    5. '(k' → logprob: -13.250113487243652
    6. '(a' → logprob: -13.875113487243652
    7. '(i' → logprob: -13.875113487243652
    8. '(N' → logprob: -14.375113487243652
    9. ' (' → logprob: -14.375113487243652
    10. 'ine' → logprob: -14.750113487243652

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. ',k' → logprob: -10.50003433227539
    3. ' ,' → logprob: -12.62503433227539
    4. ',n' → logprob: -12.75003433227539
    5. ',r' → logprob: -15.75003433227539
    6. 'k' → logprob: -16.50003433227539
    7. ',m' → logprob: -16.87503433227539
    8. ',
' → logprob: -17.25003433227539
    9. 'n' → logprob: -18.00003433227539
    10. 's' → logprob: -18.00003433227539

Token 121: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08009098470211029
    2. 'r' → logprob: -2.5800909996032715
    3. ' k' → logprob: -6.9550909996032715
    4. ' r' → logprob: -8.330090522766113
    5. '
' → logprob: -12.705090522766113
    6. '```' → logprob: -13.455090522766113
    7. ' ' → logprob: -14.580090522766113
    8. '   ' → logprob: -15.705090522766113
    9. 'm' → logprob: -16.45509147644043
    10. '
' → logprob: -16.58009147644043

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.664371848164592e-05
    2. ')' → logprob: -11.625016212463379
    3. '):
' → logprob: -12.125016212463379
    4. ' ):' → logprob: -13.625016212463379
    5. ':' → logprob: -14.000016212463379
    6. ',' → logprob: -17.625017166137695
    7. '):
' → logprob: -17.750017166137695
    8. ']:' → logprob: -17.875017166137695
    9. '}:' → logprob: -18.125017166137695
    10. '   ' → logprob: -19.125017166137695

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04347478598356247
    2. ' if' → logprob: -3.1684746742248535
    3. 'if' → logprob: -8.793475151062012
    4. '<|end|>' → logprob: -8.793475151062012
    5. '```' → logprob: -10.418475151062012
    6. '    ' → logprob: -10.418475151062012
    7. '	if' → logprob: -10.543475151062012
    8. ' ' → logprob: -10.793475151062012
    9. '    
' → logprob: -10.918475151062012
    10. ' return' → logprob: -11.543475151062012

Token 124: ' try' (ID: 2075)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12714995443820953
    2. ' if' → logprob: -2.127150058746338
    3. '   ' → logprob: -9.00214958190918
    4. 'return' → logprob: -9.25214958190918
    5. ' return' → logprob: -13.37714958190918
    6. '	if' → logprob: -14.37714958190918
    7. '    ' → logprob: -15.50214958190918
    8. '```' → logprob: -15.62714958190918
    9. 'n' → logprob: -15.87714958190918
    10. ' ' → logprob: -17.12714958190918

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017947778105735779
    2. ':
' → logprob: -7.001794815063477
    3. ' :' → logprob: -7.626794815063477
    4. '   ' → logprob: -8.626794815063477
    5. ':return' → logprob: -8.876794815063477
    6. '    ' → logprob: -10.251794815063477
    7. ' if' → logprob: -11.001794815063477
    8. ' return' → logprob: -11.876794815063477
    9. '):' → logprob: -12.626794815063477
    10. '[' → logprob: -12.751794815063477

Token 126: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7034345865249634
    2. '       ' → logprob: -0.8284345865249634
    3. '    ' → logprob: -3.703434467315674
    4. '   ' → logprob: -3.953434467315674
    5. ' return' → logprob: -4.453434467315674
    6. ' n' → logprob: -4.953434467315674
    7. 'if' → logprob: -6.078434467315674
    8. ' def' → logprob: -7.328434467315674
    9. 'def' → logprob: -7.578434467315674
    10. ':' → logprob: -7.828434467315674

Token 127: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08886628597974777
    2. 'return' (adapté à ' return') → logprob: -3.0888662338256836
    3. ' if' → logprob: -3.3388662338256836
    4. '   ' → logprob: -6.088866233825684
    5. '       ' → logprob: -7.088866233825684
    6. ' return' → logprob: -7.088866233825684
    7. 'result' → logprob: -11.213866233825684
    8. 'res' → logprob: -11.338866233825684
    9. '    ' → logprob: -11.838866233825684
    10. 'b' → logprob: -12.088866233825684

Token 128: ' F' (ID: 454)
  Prédit: ' F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.8953812122344971
    2. 'F' → logprob: -1.020381212234497
    3. '(F' → logprob: -1.895381212234497
    4. ' (' → logprob: -2.520381212234497
    5. '(' → logprob: -8.645380973815918
    6. '   ' → logprob: -9.020380973815918
    7. '	F' → logprob: -10.520380973815918
    8. ' ' → logprob: -10.770380973815918
    9. '((' → logprob: -11.395380973815918
    10. '    ' → logprob: -11.395380973815918

Token 129: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.375000953674316
    3. '[' → logprob: -18.25
    4. '[k' → logprob: -18.875
    5. '(n' → logprob: -19.125
    6. '	n' → logprob: -19.875
    7. '[r' → logprob: -20.625
    8. '[
' → logprob: -20.875
    9. '```' → logprob: -21.125
    10. '[int' → logprob: -21.25

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004636130295693874
    2. '-' → logprob: -5.504636287689209
    3. ' -' → logprob: -7.879636287689209
    4. ']*' → logprob: -8.87963581085205
    5. ' ]' → logprob: -10.87963581085205
    6. ']
' → logprob: -11.62963581085205
    7. '   ' → logprob: -11.75463581085205
    8. '
' → logprob: -14.37963581085205
    9. '"]' → logprob: -14.50463581085205
    10. ' ' → logprob: -14.75463581085205

Token 131: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16031379997730255
    2. '*' → logprob: -1.9103138446807861
    3. '//' → logprob: -9.785313606262207
    4. ' //' → logprob: -10.910313606262207
    5. '   ' → logprob: -11.660313606262207
    6. ' ' → logprob: -13.160313606262207
    7. ' ' → logprob: -13.535313606262207
    8. '    ' → logprob: -14.035313606262207
    9. '**' → logprob: -14.535313606262207
    10. '
' → logprob: -15.160313606262207

Token 132: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.7730309963226318
    2. 'pow' → logprob: -1.1480309963226318
    3. ' inv' → logprob: -1.7730309963226318
    4. ' pow' → logprob: -3.023030996322632
    5. '(inv' → logprob: -6.773031234741211
    6. '(pow' → logprob: -7.648031234741211
    7. '   ' → logprob: -7.773031234741211
    8. ' (' → logprob: -8.773031234741211
    9. 'inverse' → logprob: -9.023031234741211
    10. '(' → logprob: -9.398031234741211

Token 133: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.00013679367839358747
    2. '((' → logprob: -9.250136375427246
    3. 'F' → logprob: -10.625136375427246
    4. '(
' → logprob: -12.250136375427246
    5. '(' → logprob: -12.500136375427246
    6. '[F' → logprob: -12.500136375427246
    7. '(f' → logprob: -13.250136375427246
    8. ')' → logprob: -14.375136375427246
    9. ' (' → logprob: -14.500136375427246
    10. '[(' → logprob: -15.125136375427246

Token 134: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.931863051955588e-05
    2. '[n' → logprob: -9.750059127807617
    3. 'k' → logprob: -14.750059127807617
    4. '

' → logprob: -15.250059127807617
    5. '```' → logprob: -16.125059127807617
    6. '
' → logprob: -16.250059127807617
    7. '(k' → logprob: -17.000059127807617
    8. '   ' → logprob: -17.375059127807617
    9. ' [' → logprob: -17.375059127807617
    10. '[' → logprob: -17.375059127807617

Token 135: '-k' (ID: 10897)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.19285406172275543
    2. '-k' → logprob: -1.8178540468215942
    3. 'k' → logprob: -4.442853927612305
    4. ' -' → logprob: -7.567853927612305
    5. '[n' → logprob: -7.692853927612305
    6. '-' → logprob: -8.692853927612305
    7. '
' → logprob: -9.567853927612305
    8. ']' → logprob: -11.067853927612305
    9. '[' → logprob: -11.442853927612305
    10. '(k' → logprob: -12.442853927612305

Token 136: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001113189267925918
    2. ']' → logprob: -6.876113414764404
    3. ')' → logprob: -10.251112937927246
    4. ' ])' → logprob: -11.001112937927246
    5. ']%' → logprob: -11.626112937927246
    6. '])*' → logprob: -11.876112937927246
    7. '])
' → logprob: -12.626112937927246
    8. ''])' → logprob: -12.751112937927246
    9. '   ' → logprob: -13.501112937927246
    10. '%' → logprob: -14.001112937927246

Token 137: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3284708857536316
    2. '%' → logprob: -1.4534709453582764
    3. ' *' → logprob: -3.0784709453582764
    4. '*' → logprob: -8.828471183776855
    5. '   ' → logprob: -10.828471183776855
    6. ' ' → logprob: -12.328471183776855
    7. ')' → logprob: -12.328471183776855
    8. 'def' → logprob: -13.203471183776855
    9. '(' → logprob: -13.453471183776855
    10. ' ' → logprob: -13.578471183776855

Token 138: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.005641736090183258
    2. ' inv' → logprob: -5.630641937255859
    3. 'F' → logprob: -6.255641937255859
    4. '(inv' → logprob: -9.50564193725586
    5. ' F' → logprob: -10.63064193725586
    6. '   ' → logprob: -11.75564193725586
    7. '(' → logprob: -12.38064193725586
    8. ' ' → logprob: -13.13064193725586
    9. 'in' → logprob: -13.63064193725586
    10. '  ' → logprob: -13.75564193725586

Token 139: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -9.555654105497524e-05
    2. '(' → logprob: -9.37509536743164
    3. ' (' → logprob: -11.75009536743164
    4. '[F' → logprob: -13.87509536743164
    5. '(
' → logprob: -14.25009536743164
    6. 'F' → logprob: -15.12509536743164
    7. ')(' → logprob: -15.37509536743164
    8. '<|end|>' → logprob: -15.50009536743164
    9. ')' → logprob: -15.62509536743164
    10. '(

' → logprob: -16.50009536743164

Token 140: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -9.610702363715973e-06
    2. 'k' → logprob: -11.875009536743164
    3. '(k' → logprob: -13.750009536743164
    4. '{k' → logprob: -14.750009536743164
    5. '[F' → logprob: -15.250009536743164
    6. ',k' → logprob: -15.250009536743164
    7. '[' → logprob: -15.750009536743164
    8. ')' → logprob: -16.625009536743164
    9. '[n' → logprob: -16.750009536743164
    10. '-k' → logprob: -17.000009536743164

Token 141: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.030034061521291733
    2. ')' → logprob: -3.530034065246582
    3. ')%' → logprob: -9.030034065246582
    4. ']' → logprob: -10.030034065246582
    5. '%' → logprob: -10.530034065246582
    6. ')])' → logprob: -10.905034065246582
    7. ')]' → logprob: -11.155034065246582
    8. ']%' → logprob: -11.405034065246582
    9. ' ])' → logprob: -11.405034065246582
    10. '   ' → logprob: -11.655034065246582

Token 142: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06225156411528587
    2. '%' → logprob: -2.812251567840576
    3. ')' → logprob: -8.312251091003418
    4. '%n' → logprob: -10.812251091003418
    5. ')%' → logprob: -11.312251091003418
    6. '%B' → logprob: -13.187251091003418
    7. '%A' → logprob: -13.562251091003418
    8. '%D' → logprob: -14.187251091003418
    9. ' %#' → logprob: -14.562251091003418
    10. ']' → logprob: -15.812251091003418

Token 143: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.006717743817716837
    2. ' MOD' → logprob: -5.006717681884766
    3. '998' → logprob: -13.506717681884766
    4. '_MOD' → logprob: -14.256717681884766
    5. '.MOD' → logprob: -16.256717681884766
    6. ' ' → logprob: -16.381717681884766
    7. ' ' → logprob: -17.381717681884766
    8. '999' → logprob: -17.631717681884766
    9. '```' → logprob: -17.631717681884766
    10. '(M' → logprob: -17.756717681884766

Token 144: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22271375358104706
    2. '<|end|>' → logprob: -2.0977137088775635
    3. '   ' → logprob: -2.5977137088775635
    4. '<|end|>' → logprob: -6.847713947296143
    5. '),' → logprob: -8.222713470458984
    6. '}' → logprob: -8.597713470458984
    7. ')
' → logprob: -8.972713470458984
    8. '%' → logprob: -9.097713470458984
    9. ' ' → logprob: -9.097713470458984
    10. ')*' → logprob: -9.222713470458984

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004705187864601612
    2. 'except' → logprob: -6.00470495223999
    3. ')' → logprob: -6.50470495223999
    4. ' except' → logprob: -7.75470495223999
    5. '<|end|>' → logprob: -8.504705429077148
    6. '	except' → logprob: -11.254705429077148
    7. '
' → logprob: -11.504705429077148
    8. ')
' → logprob: -11.629705429077148
    9. '<|end|>' → logprob: -11.754705429077148
    10. '       ' → logprob: -11.754705429077148

Token 146: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.38258257508277893
    2. ')' → logprob: -1.7575825452804565
    3. ' except' → logprob: -2.007582664489746
    4. '   ' → logprob: -4.757582664489746
    5. '<|end|>' → logprob: -6.757582664489746
    6. '	except' → logprob: -8.257582664489746
    7. ')
' → logprob: -8.882582664489746
    8. '),' → logprob: -8.882582664489746
    9. '.' → logprob: -9.382582664489746
    10. ';' → logprob: -9.382582664489746

Token 147: ' Index' (ID: 14580)
  Prédit: ' Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.165056049823761
    2. '(Index' → logprob: -2.165055990219116
    3. 'Index' → logprob: -3.290055990219116
    4. ' (' → logprob: -9.415056228637695
    5. '(Type' → logprob: -10.415056228637695
    6. '(' → logprob: -11.165056228637695
    7. '(Exception' → logprob: -11.665056228637695
    8. '[Index' → logprob: -11.915056228637695
    9. ':' → logprob: -12.040056228637695
    10. '(Key' → logprob: -12.790056228637695

Token 148: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.875
    3. 'error' → logprob: -19.0
    4. 'Index' → logprob: -21.125
    5. ' Error' → logprob: -21.75
    6. 'Erro' → logprob: -21.75
    7. 'Er' → logprob: -22.625
    8. '[' → logprob: -23.125
    9. 'Errors' → logprob: -23.125
    10. '_error' → logprob: -23.5

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004655591677874327
    2. ':
' → logprob: -5.504655361175537
    3. ' :' → logprob: -8.379655838012695
    4. '(' → logprob: -8.879655838012695
    5. ':return' → logprob: -9.379655838012695
    6. '():' → logprob: -10.004655838012695
    7. '   ' → logprob: -10.254655838012695
    8. '):' → logprob: -11.879655838012695
    9. '(None' → logprob: -12.129655838012695
    10. ' as' → logprob: -12.129655838012695

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0206018686294556
    2. ':' → logprob: -1.5206018686294556
    3. '   ' → logprob: -1.5206018686294556
    4. ':
' → logprob: -2.645601749420166
    5. ' return' → logprob: -2.770601749420166
    6. 'return' → logprob: -3.395601749420166
    7. ':return' → logprob: -3.520601749420166
    8. '	return' → logprob: -6.645601749420166
    9. '0' → logprob: -6.770601749420166
    10. ' or' → logprob: -7.520601749420166

Token 151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005877026706002653
    2. ' return' → logprob: -7.5005879402160645
    3. '0' → logprob: -10.875587463378906
    4. '   ' → logprob: -11.250587463378906
    5. '
' → logprob: -13.000587463378906
    6. '       ' → logprob: -15.125587463378906
    7. 'raise' → logprob: -16.250587463378906
    8. '	return' → logprob: -17.000587463378906
    9. ':return' → logprob: -17.750587463378906
    10. 'eturn' → logprob: -18.125587463378906

Token 152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.37509536743164
    4. '00' → logprob: -17.75009536743164
    5. 'None' → logprob: -17.81259536743164
    6. '(' → logprob: -17.87509536743164
    7. '1' → logprob: -18.00009536743164
    8. '000' → logprob: -18.06259536743164
    9. ' ' → logprob: -18.06259536743164
    10. '`' → logprob: -18.43759536743164

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.375
    4. '000' → logprob: -19.625
    5. '۰' → logprob: -20.0
    6. '00' → logprob: -20.125
    7. '
' → logprob: -20.25
    8. '```' → logprob: -21.0
    9. 'None' → logprob: -21.25
    10. '  ' → logprob: -21.5

Token 154: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7556642293930054
    2. '[' → logprob: -0.8806642293930054
    3. ':' → logprob: -3.380664348602295
    4. '(' → logprob: -3.755664348602295
    5. '=' → logprob: -4.005664348602295
    6. 'def' → logprob: -4.880664348602295
    7. ']' → logprob: -4.880664348602295
    8. ',' → logprob: -5.005664348602295
    9. 'F' → logprob: -5.630664348602295
    10. '<|end|>' → logprob: -5.880664348602295

Token 155: 'n' (ID: 77)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14803946018218994
    2. '(' → logprob: -2.7730393409729004
    3. '[' → logprob: -3.6480393409729004
    4. ')' → logprob: -3.8980393409729004
    5. '=' → logprob: -4.8980393409729
    6. 'def' → logprob: -5.2730393409729
    7. '):' → logprob: -5.3980393409729
    8. '),' → logprob: -6.3980393409729
    9. ',[' → logprob: -6.3980393409729
    10. ':' → logprob: -6.3980393409729

Token 156: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6332636475563049
    2. ',' → logprob: -1.5082635879516602
    3. '=' → logprob: -1.5082635879516602
    4. ' ' → logprob: -3.75826358795166
    5. ' ,' → logprob: -6.00826358795166
    6. ')' → logprob: -8.50826358795166
    7. '<|end|>' → logprob: -9.00826358795166
    8. '  ' → logprob: -9.25826358795166
    9. '.' → logprob: -9.63326358795166
    10. '=int' → logprob: -9.88326358795166

Token 157: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11336824297904968
    2. ' k' → logprob: -2.488368272781372
    3. 'm' → logprob: -3.863368272781372
    4. ' m' → logprob: -6.613368034362793
    5. '=' → logprob: -7.238368034362793
    6. ' =' → logprob: -7.488368034362793
    7. 'q' → logprob: -8.863368034362793
    8. ' ' → logprob: -9.613368034362793
    9. 'n' → logprob: -9.613368034362793
    10. 'a' → logprob: -10.238368034362793

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760773420333862
    2. '=' → logprob: -0.8260773420333862
    3. ',' → logprob: -8.951077461242676
    4. '=input' → logprob: -12.576077461242676
    5. ')' → logprob: -13.326077461242676
    6. '=int' → logprob: -13.451077461242676
    7. '<|end|>' → logprob: -14.951077461242676
    8. ' =
' → logprob: -15.201077461242676
    9. ')=' → logprob: -15.951077461242676
    10. ' ' → logprob: -16.20107650756836

Token 159: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6935412287712097
    2. ' map' → logprob: -0.6935412287712097
    3. ' ' → logprob: -8.568541526794434
    4. '5' → logprob: -9.693541526794434
    5. 'list' → logprob: -10.318541526794434
    6. '[' → logprob: -10.818541526794434
    7. '10' → logprob: -10.818541526794434
    8. '	map' → logprob: -11.318541526794434
    9. '(map' → logprob: -11.818541526794434
    10. '0' → logprob: -11.818541526794434

Token 160: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00011784763046307489
    2. 'int' → logprob: -9.125118255615234
    3. '(' → logprob: -11.750118255615234
    4. '(input' → logprob: -14.625118255615234
    5. '=int' → logprob: -15.750118255615234
    6. '<int' → logprob: -15.750118255615234
    7. 'input' → logprob: -16.375118255615234
    8. '[int' → logprob: -17.000118255615234
    9. ' int' → logprob: -17.250118255615234
    10. '(
' → logprob: -18.000118255615234

Token 161: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.149904265999794
    2. ',' → logprob: -2.024904251098633
    3. '(input' → logprob: -5.524904251098633
    4. 'input' → logprob: -5.899904251098633
    5. '(),' → logprob: -8.399904251098633
    6. ' ,' → logprob: -9.274904251098633
    7. ' input' → logprob: -9.774904251098633
    8. '=input' → logprob: -10.024904251098633
    9. '(' → logprob: -10.274904251098633
    10. '```' → logprob: -11.899904251098633

Token 162: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00317783304490149
    2. ' input' → logprob: -5.753177642822266
    3. 'open' → logprob: -16.128177642822266
    4. '=input' → logprob: -18.128177642822266
    5. ' ' → logprob: -18.878177642822266
    6. '(input' → logprob: -19.128177642822266
    7. 'lambda' → logprob: -19.128177642822266
    8. ',input' → logprob: -20.128177642822266
    9. 'int' → logprob: -20.253177642822266
    10. '<input' → logprob: -20.253177642822266

Token 163: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.9424725148128346e-05
    2. '()' → logprob: -10.000049591064453
    3. '())' → logprob: -12.625049591064453
    4. ' ().' → logprob: -15.500049591064453
    5. ')' → logprob: -15.625049591064453
    6. '(' → logprob: -15.625049591064453
    7. '()
' → logprob: -17.250049591064453
    8. '()[' → logprob: -17.500049591064453
    9. '(),' → logprob: -18.250049591064453
    10. '()?.' → logprob: -18.375049591064453

Token 164: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.710618905955926e-05
    2. 'strip' → logprob: -9.250097274780273
    3. ' split' → logprob: -14.375097274780273
    4. 'rstrip' → logprob: -15.625097274780273
    5. '(split' → logprob: -15.750097274780273
    6. 'read' → logprob: -17.375097274780273
    7. '().' → logprob: -17.375097274780273
    8. ')' → logprob: -17.625097274780273
    9. 'plit' → logprob: -18.750097274780273
    10. 'spl' → logprob: -18.750097274780273

Token 165: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10262410342693329
    2. ')' → logprob: -2.8526241779327393
    3. '()' → logprob: -3.2276241779327393
    4. '(' → logprob: -8.85262393951416
    5. '().' → logprob: -10.72762393951416
    6. '('' → logprob: -11.85262393951416
    7. '(),' → logprob: -11.85262393951416
    8. '())
' → logprob: -12.85262393951416
    9. '());' → logprob: -13.60262393951416
    10. '(','' → logprob: -13.72762393951416

Token 166: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9974144101142883
    2. 'result' → logprob: -1.7474143505096436
    3. 'F' → logprob: -1.8724143505096436
    4. 'f' → logprob: -2.4974143505096436
    5. 's' → logprob: -2.7474143505096436
    6. 'res' → logprob: -3.8724143505096436
    7. 'for' → logprob: -3.8724143505096436
    8. 'ans' → logprob: -3.9974143505096436
    9. 'dp' → logprob: -4.122414588928223
    10. 'arr' → logprob: -4.872414588928223

Token 167: ' exotic' (ID: 55332)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8253008723258972
    2. 'solve' → logprob: -1.200300931930542
    3. ' main' → logprob: -1.950300931930542
    4. 'main' → logprob: -3.075300931930542
    5. ' ways' → logprob: -4.700300693511963
    6. 'count' → logprob: -5.325300693511963
    7. ' f' → logprob: -5.450300693511963
    8. 'ways' → logprob: -5.575300693511963
    9. 'dfs' → logprob: -5.575300693511963
    10. ' count' → logprob: -5.575300693511963

Token 168: '_' (ID: 62)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.640032410621643
    2. '_sequence' → logprob: -1.890032410621643
    3. '(n' → logprob: -2.0150322914123535
    4. '_com' → logprob: -2.3900322914123535
    5. '_sequences' → logprob: -2.3900322914123535
    6. '_factor' → logprob: -3.0150322914123535
    7. '_function' → logprob: -3.1400322914123535
    8. '_comb' → logprob: -3.1400322914123535
    9. '_count' → logprob: -3.6400322914123535
    10. '_paths' → logprob: -4.2650322914123535

Token 169: 'aggregate' (ID: 77600)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.0333911180496216
    2. 'paths' → logprob: -1.9083911180496216
    3. 'count' → logprob: -2.408390998840332
    4. 'sum' → logprob: -2.533390998840332
    5. 'path' → logprob: -2.658390998840332
    6. 'product' → logprob: -2.908390998840332
    7. 'com' → logprob: -3.158390998840332
    8. 'factor' → logprob: -3.533390998840332
    9. 'acc' → logprob: -3.658390998840332
    10. 'pow' → logprob: -4.158390998840332

Token 170: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6811755299568176
    2. '(f' → logprob: -1.3061754703521729
    3. '(' → logprob: -2.556175470352173
    4. '(a' → logprob: -3.056175470352173
    5. '(lst' → logprob: -3.806175470352173
    6. '(arr' → logprob: -3.931175470352173
    7. '(s' → logprob: -4.056175708770752
    8. '():' → logprob: -5.181175708770752
    9. '(data' → logprob: -5.556175708770752
    10. '(k' → logprob: -5.681175708770752

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010319997556507587
    2. '):' → logprob: -4.63532018661499
    3. '):
' → logprob: -8.135319709777832
    4. ',n' → logprob: -8.760319709777832
    5. ' ,' → logprob: -9.635319709777832
    6. ',k' → logprob: -11.260319709777832
    7. ')' → logprob: -11.885319709777832
    8. ':' → logprob: -12.635319709777832
    9. 'def' → logprob: -12.635319709777832
    10. '(n' → logprob: -12.885319709777832

Token 172: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05916425213217735
    2. 'k' → logprob: -3.43416428565979
    3. ' m' → logprob: -4.559164047241211
    4. 'r' → logprob: -5.684164047241211
    5. 'x' → logprob: -5.934164047241211
    6. 'f' → logprob: -6.184164047241211
    7. 'a' → logprob: -6.809164047241211
    8. 'arr' → logprob: -7.434164047241211
    9. 'mod' → logprob: -7.434164047241211
    10. ' k' → logprob: -7.559164047241211

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00022439735766965896
    2. ',' → logprob: -9.000224113464355
    3. '):
' → logprob: -10.125224113464355
    4. ':' → logprob: -10.375224113464355
    5. ')' → logprob: -10.500224113464355
    6. ' ):' → logprob: -14.000224113464355
    7. '):
' → logprob: -15.000224113464355
    8. '}:' → logprob: -15.750224113464355
    9. ']:' → logprob: -15.750224113464355
    10. '=' → logprob: -16.375225067138672

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017988269682973623
    2. '    ' → logprob: -7.626798629760742
    3. '    
' → logprob: -7.626798629760742
    4. ' for' → logprob: -9.126798629760742
    5. '<|end|>' → logprob: -9.251798629760742
    6. ' return' → logprob: -10.001798629760742
    7. ')' → logprob: -10.001798629760742
    8. 'def' → logprob: -10.001798629760742
    9. '
' → logprob: -10.126798629760742
    10. '   ' → logprob: -10.376798629760742

Token 175: ' base' (ID: 3611)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.933356761932373
    2. 'result' → logprob: -1.558356761932373
    3. ' res' → logprob: -1.683356761932373
    4. 'dp' → logprob: -2.683356761932373
    5. '   ' → logprob: -2.933356761932373
    6. 's' → logprob: -3.683356761932373
    7. 'total' → logprob: -4.308356761932373
    8. ' result' → logprob: -4.308356761932373
    9. 'if' → logprob: -4.558356761932373
    10. ' dp' → logprob: -5.433356761932373

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4755193293094635
    2. ' =' → logprob: -0.9755192995071411
    3. '   ' → logprob: -7.600519180297852
    4. '_' → logprob: -8.350519180297852
    5. 'def' → logprob: -8.725519180297852
    6. ',' → logprob: -8.850519180297852
    7. ')' → logprob: -8.975519180297852
    8. 's' → logprob: -10.850519180297852
    9. '_count' → logprob: -10.850519180297852
    10. '_factor' → logprob: -10.850519180297852

Token 177: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.056130290031433
    2. 'pow' → logprob: -2.5561304092407227
    3. '0' → logprob: -2.6811304092407227
    4. '(' → logprob: -3.0561304092407227
    5. 'comb' → logprob: -3.0561304092407227
    6. '(m' → logprob: -3.3061304092407227
    7. 'F' → logprob: -3.4311304092407227
    8. '[' → logprob: -3.5561304092407227
    9. '2' → logprob: -3.6811304092407227
    10. '(n' → logprob: -3.8061304092407227

Token 178: 'comb' (ID: 43606)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9702000617980957
    2. 'n' → logprob: -1.5952000617980957
    3. 'comb' → logprob: -1.7202000617980957
    4. '2' → logprob: -2.4702000617980957
    5. 'F' → logprob: -3.4702000617980957
    6. '1' → logprob: -3.5952000617980957
    7. 'pow' → logprob: -3.5952000617980957
    8. '(' → logprob: -3.7202000617980957
    9. '(m' → logprob: -4.220200061798096
    10. '(n' → logprob: -4.970200061798096

Token 179: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.025007903575897217
    2. '(m' → logprob: -4.025007724761963
    3. '(' → logprob: -5.025007724761963
    4. 'n' → logprob: -8.900008201599121
    5. 'm' → logprob: -9.525008201599121
    6. ')' → logprob: -11.525008201599121
    7. '(
' → logprob: -11.650008201599121
    8. ')n' → logprob: -12.025008201599121
    9. '((' → logprob: -12.150008201599121
    10. ' (' → logprob: -12.650008201599121

Token 180: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20548340678215027
    2. ',m' → logprob: -2.2054834365844727
    3. '+m' → logprob: -3.2054834365844727
    4. '-' → logprob: -3.8304834365844727
    5. ' ,' → logprob: -5.830483436584473
    6. 'm' → logprob: -5.955483436584473
    7. '+' → logprob: -6.080483436584473
    8. ' +' → logprob: -6.455483436584473
    9. ' -' → logprob: -6.705483436584473
    10. ',n' → logprob: -6.830483436584473

Token 181: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0022632593754678965
    2. ' m' → logprob: -6.377263069152832
    3. '2' → logprob: -8.002263069152832
    4. 'n' → logprob: -8.752263069152832
    5. '1' → logprob: -11.002263069152832
    6. '3' → logprob: -11.377263069152832
    7. ' ' → logprob: -11.877263069152832
    8. '   ' → logprob: -12.002263069152832
    9. '(' → logprob: -12.502263069152832
    10. '(m' → logprob: -12.752263069152832

Token 182: '3' (ID: 18)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0008123667794279754
    2. '2' → logprob: -8.125812530517578
    3. 'n' → logprob: -8.500812530517578
    4. ' m' → logprob: -9.250812530517578
    5. '1' → logprob: -9.750812530517578
    6. '(m' → logprob: -9.875812530517578
    7. '   ' → logprob: -10.375812530517578
    8. '3' → logprob: -11.125812530517578
    9. '(' → logprob: -11.250812530517578
    10. '  ' → logprob: -12.188312530517578

Token 183: '*m' (ID: 85049)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03173071891069412
    2. ',m' → logprob: -3.6567306518554688
    3. ' ,' → logprob: -5.531730651855469
    4. ',n' → logprob: -6.906730651855469
    5. 'm' → logprob: -8.656730651855469
    6. '(n' → logprob: -9.531730651855469
    7. '   ' → logprob: -10.031730651855469
    8. 'n' → logprob: -10.281730651855469
    9. '(m' → logprob: -10.531730651855469
    10. '(' → logprob: -10.906730651855469

Token 184: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026019146665930748
    2. '-' → logprob: -4.776019096374512
    3. ' -' → logprob: -4.776019096374512
    4. ' ,' → logprob: -5.651019096374512
    5. ',n' → logprob: -5.776019096374512
    6. '(n' → logprob: -6.526019096374512
    7. '(),' → logprob: -8.276019096374512
    8. '[' → logprob: -9.526019096374512
    9. '[n' → logprob: -9.526019096374512
    10. ',m' → logprob: -9.901019096374512

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010280468501150608
    2. '3' → logprob: -5.260280609130859
    3. '2' → logprob: -5.510280609130859
    4. '4' → logprob: -7.260280609130859
    5. '6' → logprob: -9.38528060913086
    6. '5' → logprob: -9.63528060913086
    7. '   ' → logprob: -9.76028060913086
    8. ' ' → logprob: -10.51028060913086
    9. '7' → logprob: -11.38528060913086
    10. 'n' → logprob: -11.63528060913086

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002289664000272751
    2. '3' → logprob: -6.877289772033691
    3. '2' → logprob: -7.002289772033691
    4. '4' → logprob: -8.252289772033691
    5. '   ' → logprob: -10.377289772033691
    6. '6' → logprob: -10.877289772033691
    7. '5' → logprob: -11.127289772033691
    8. ' ' → logprob: -11.752289772033691
    9. '7' → logprob: -12.877289772033691
    10. '
' → logprob: -13.189789772033691

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023350996896624565
    2. '(n' → logprob: -4.898351192474365
    3. ' ,' → logprob: -4.898351192474365
    4. ',n' → logprob: -4.898351192474365
    5. '   ' → logprob: -8.398350715637207
    6. '(' → logprob: -9.273350715637207
    7. '(),' → logprob: -9.898350715637207
    8. '-' → logprob: -10.023350715637207
    9. ',m' → logprob: -10.023350715637207
    10. 'n' → logprob: -10.023350715637207

Token 188: ' n' (ID: 297)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0325279235839844
    2. ' n' → logprob: -1.2825279235839844
    3. ' ' → logprob: -1.7825279235839844
    4. 'n' → logprob: -2.1575279235839844
    5. '2' → logprob: -3.0325279235839844
    6. ' m' → logprob: -4.032527923583984
    7. 'm' → logprob: -4.532527923583984
    8. '4' → logprob: -5.282527923583984
    9. '   ' → logprob: -8.157527923583984
    10. '  ' → logprob: -8.407527923583984

Token 189: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09549232572317123
    2. '-' → logprob: -3.470492362976074
    3. '))' → logprob: -3.720492362976074
    4. ',' → logprob: -3.970492362976074
    5. ' -' → logprob: -4.845492362976074
    6. '+' → logprob: -5.595492362976074
    7. '),' → logprob: -6.345492362976074
    8. '+m' → logprob: -7.345492362976074
    9. ' )' → logprob: -7.595492362976074
    10. ' +' → logprob: -7.595492362976074

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005862667225301266
    2. '2' → logprob: -5.630862712860107
    3. '3' → logprob: -6.505862712860107
    4. 'm' → logprob: -7.880862712860107
    5. '4' → logprob: -9.13086223602295
    6. '0' → logprob: -9.25586223602295
    7. ' ' → logprob: -9.75586223602295
    8. '   ' → logprob: -10.25586223602295
    9. 'n' → logprob: -10.75586223602295
    10. ')' → logprob: -11.13086223602295

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002125637838616967
    2. '2' → logprob: -6.6271257400512695
    3. '3' → logprob: -7.5021257400512695
    4. 'm' → logprob: -9.25212574005127
    5. '4' → logprob: -9.62712574005127
    6. '0' → logprob: -10.00212574005127
    7. ' ' → logprob: -11.62712574005127
    8. '   ' → logprob: -11.75212574005127
    9. 'n' → logprob: -12.56462574005127
    10. '(' → logprob: -12.68962574005127

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006633305456489325
    2. '))' → logprob: -5.256633281707764
    3. ' )' → logprob: -7.881633281707764
    4. '+' → logprob: -8.006633758544922
    5. ',' → logprob: -8.631633758544922
    6. ')*' → logprob: -8.756633758544922
    7. '   ' → logprob: -8.881633758544922
    8. ')+' → logprob: -10.131633758544922
    9. ')))' → logprob: -10.256633758544922
    10. ')
' → logprob: -10.381633758544922

Token 193: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4484277665615082
    2. '   ' → logprob: -1.0734277963638306
    3. ' *' → logprob: -4.698427677154541
    4. '+' → logprob: -6.073427677154541
    5. '*' → logprob: -6.198427677154541
    6. ',' → logprob: -6.698427677154541
    7. ' +' → logprob: -7.073427677154541
    8. '...' → logprob: -7.073427677154541
    9. ' )' → logprob: -7.448427677154541
    10. 'def' → logprob: -7.823427677154541

Token 194: ' n' (ID: 297)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.3488256633281708
    2. ' comb' → logprob: -1.2238256931304932
    3. '(com' → logprob: -9.098825454711914
    4. 'com' → logprob: -9.348825454711914
    5. '1' → logprob: -10.098825454711914
    6. ' (' → logprob: -10.223825454711914
    7. '0' → logprob: -10.348825454711914
    8. '(' → logprob: -10.598825454711914
    9. ' ' → logprob: -11.473825454711914
    10. '   ' → logprob: -11.723825454711914

Token 195: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05679496005177498
    2. '+' → logprob: -3.4317948818206787
    3. ' +' → logprob: -4.806795120239258
    4. ')%' → logprob: -4.806795120239258
    5. ' )' → logprob: -5.556795120239258
    6. '*' → logprob: -7.431795120239258
    7. 'def' → logprob: -7.681795120239258
    8. '   ' → logprob: -7.806795120239258
    9. ' *' → logprob: -8.056795120239258
    10. '%' → logprob: -8.681795120239258

Token 196: 'comb' (ID: 43606)
  Prédit: 'comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.01699092425405979
    2. ' comb' → logprob: -5.016991138458252
    3. 'pow' → logprob: -5.266991138458252
    4. '(com' → logprob: -6.141991138458252
    5. '(' → logprob: -6.391991138458252
    6. '(m' → logprob: -8.141990661621094
    7. ' (' → logprob: -8.391990661621094
    8. 'com' → logprob: -9.141990661621094
    9. 'm' → logprob: -9.266990661621094
    10. '2' → logprob: -9.391990661621094

Token 197: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00046379686682485044
    2. '(' → logprob: -8.000463485717773
    3. '(m' → logprob: -9.375463485717773
    4. 'n' → logprob: -10.625463485717773
    5. ' (' → logprob: -11.250463485717773
    6. '(
' → logprob: -12.750463485717773
    7. 'm' → logprob: -14.000463485717773
    8. '((' → logprob: -14.125463485717773
    9. ')n' → logprob: -14.125463485717773
    10. ')' → logprob: -14.500463485717773

Token 198: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7388480305671692
    2. ' +' → logprob: -0.7388480305671692
    3. '+m' → logprob: -4.1138482093811035
    4. '(' → logprob: -4.2388482093811035
    5. '(n' → logprob: -4.9888482093811035
    6. '(m' → logprob: -5.7388482093811035
    7. '-' → logprob: -6.9888482093811035
    8. '+n' → logprob: -7.4888482093811035
    9. ' (' → logprob: -7.6138482093811035
    10. 'n' → logprob: -8.238847732543945

Token 199: ' m' (ID: 284)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.013081883080303669
    2. ' ' → logprob: -4.388082027435303
    3. 'm' → logprob: -8.263081550598145
    4. '(' → logprob: -8.888081550598145
    5. ' m' → logprob: -9.513081550598145
    6. '  ' → logprob: -10.263081550598145
    7. '   ' → logprob: -10.263081550598145
    8. '2' → logprob: -11.513081550598145
    9. ' (' → logprob: -11.888081550598145
    10. '(m' → logprob: -12.513081550598145

Token 200: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23503315448760986
    2. ' -' → logprob: -1.6100331544876099
    3. '3' → logprob: -4.86003303527832
    4. '(' → logprob: -6.98503303527832
    5. ',' → logprob: -7.73503303527832
    6. ' ' → logprob: -8.86003303527832
    7. '(n' → logprob: -9.61003303527832
    8. '  ' → logprob: -10.11003303527832
    9. '+' → logprob: -10.23503303527832
    10. '   ' → logprob: -10.48503303527832

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006175024900585413
    2. '3' → logprob: -5.6311750411987305
    3. '2' → logprob: -6.2561750411987305
    4. 'm' → logprob: -8.00617504119873
    5. 'n' → logprob: -9.13117504119873
    6. '4' → logprob: -9.50617504119873
    7. ' ' → logprob: -9.63117504119873
    8. '   ' → logprob: -10.00617504119873
    9. '-' → logprob: -11.88117504119873
    10. '(' → logprob: -12.00617504119873

Token 202: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028696097433567047
    2. '2' → logprob: -8.875287055969238
    3. ' ' → logprob: -9.125287055969238
    4. '   ' → logprob: -11.000287055969238
    5. 'm' → logprob: -11.750287055969238
    6. 'n' → logprob: -12.000287055969238
    7. '3' → logprob: -13.125287055969238
    8. '  ' → logprob: -13.562787055969238
    9. '    ' → logprob: -14.375287055969238
    10. '4' → logprob: -14.687787055969238

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018527198117226362
    2. ',n' → logprob: -7.251852512359619
    3. ' ,' → logprob: -7.376852512359619
    4. '(n' → logprob: -8.376852989196777
    5. ',m' → logprob: -8.501852989196777
    6. '(' → logprob: -10.751852989196777
    7. '+' → logprob: -11.751852989196777
    8. 'm' → logprob: -11.876852989196777
    9. '),' → logprob: -12.126852989196777
    10. ')' → logprob: -12.126852989196777

Token 204: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4496256113052368
    2. 'n' → logprob: -1.0746256113052368
    3. ' n' → logprob: -4.574625492095947
    4. ' m' → logprob: -4.699625492095947
    5. '   ' → logprob: -7.449625492095947
    6. '3' → logprob: -8.324625968933105
    7. '2' → logprob: -8.824625968933105
    8. '    ' → logprob: -9.449625968933105
    9. '       ' → logprob: -9.699625968933105
    10. ' ' → logprob: -9.949625968933105

Token 205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1797601580619812
    2. ' -' → logprob: -1.804760217666626
    3. ' ' → logprob: -12.179759979248047
    4. '   ' → logprob: -12.554759979248047
    5. ')' → logprob: -13.179759979248047
    6. ',' → logprob: -13.304759979248047
    7. '  ' → logprob: -14.054759979248047
    8. '[' → logprob: -14.179759979248047
    9. ')-' → logprob: -15.054759979248047
    10. '1' → logprob: -15.429759979248047

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004644196014851332
    2. '2' → logprob: -5.379644393920898
    3. ' ' → logprob: -11.004644393920898
    4. '   ' → logprob: -12.129644393920898
    5. '```' → logprob: -14.567144393920898
    6. '           ' → logprob: -15.567144393920898
    7. '
' → logprob: -15.692144393920898
    8. '  ' → logprob: -15.692144393920898
    9. '    ' → logprob: -16.3171443939209
    10. '3' → logprob: -16.6921443939209

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020555783063173294
    2. '2' → logprob: -3.8955557346343994
    3. '   ' → logprob: -12.14555549621582
    4. ' ' → logprob: -13.08305549621582
    5. '```' → logprob: -13.14555549621582
    6. '3' → logprob: -13.77055549621582
    7. '
' → logprob: -14.39555549621582
    8. '           ' → logprob: -15.27055549621582
    9. '0' → logprob: -15.33305549621582
    10. '    ' → logprob: -15.45805549621582

Token 208: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5393274426460266
    2. ')' → logprob: -0.9143274426460266
    3. '   ' → logprob: -4.289327621459961
    4. ',' → logprob: -7.164327621459961
    5. ')%' → logprob: -7.539327621459961
    6. ')))' → logprob: -7.914327621459961
    7. ')+' → logprob: -8.664327621459961
    8. 'def' → logprob: -9.539327621459961
    9. ')
' → logprob: -9.664327621459961
    10. '       ' → logprob: -9.664327621459961

Token 209: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6989092826843262
    2. ')' → logprob: -0.8239092826843262
    3. ' %' → logprob: -3.198909282684326
    4. '%' → logprob: -4.448909282684326
    5. ')%' → logprob: -5.573909282684326
    6. 'def' → logprob: -6.323909282684326
    7. ')
' → logprob: -6.323909282684326
    8. '
' → logprob: -6.448909282684326
    9. ',' → logprob: -7.573909282684326
    10. '<|end|>' → logprob: -7.573909282684326

Token 210: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.2961512513575144e-05
    2. ' MOD' → logprob: -10.750022888183594
    3. '998' → logprob: -13.500022888183594
    4. '_MOD' → logprob: -18.500022888183594
    5. '   ' → logprob: -19.125022888183594
    6. ' ' → logprob: -19.500022888183594
    7. '(M' → logprob: -19.875022888183594
    8. '.MOD' → logprob: -20.000022888183594
    9. 'MO' → logprob: -21.125022888183594
    10. '  ' → logprob: -21.625022888183594

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03439879044890404
    2. ')' → logprob: -3.5343987941741943
    3. '<|end|>' → logprob: -5.409398555755615
    4. '
' → logprob: -9.784399032592773
    5. '<|end|>' → logprob: -10.534399032592773
    6. ')
' → logprob: -11.284399032592773
    7. ',' → logprob: -11.659399032592773
    8. ')+' → logprob: -12.034399032592773
    9. 'def' → logprob: -12.284399032592773
    10. '...' → logprob: -12.409399032592773

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008524737320840359
    2. ')' → logprob: -5.2585248947143555
    3. '<|end|>' → logprob: -5.7585248947143555
    4. ' return' → logprob: -11.258524894714355
    5. '<|end|>' → logprob: -11.258524894714355
    6. '    
' → logprob: -11.383524894714355
    7. '	return' → logprob: -11.508524894714355
    8. '
' → logprob: -11.508524894714355
    9. '.' → logprob: -11.633524894714355
    10. 'return' → logprob: -11.883524894714355

Token 213: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01893923059105873
    2. 'return' → logprob: -4.143939018249512
    3. ' return' → logprob: -6.143939018249512
    4. 'result' → logprob: -7.518939018249512
    5. ' result' → logprob: -9.893939018249512
    6. 'base' → logprob: -10.768939018249512
    7. 'for' → logprob: -10.893939018249512
    8. '<|end|>' → logprob: -11.018939018249512
    9. ')' → logprob: -11.143939018249512
    10. 'def' → logprob: -11.393939018249512

Token 214: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.593748152256012
    2. ' m' → logprob: -0.968748152256012
    3. ' n' → logprob: -3.343748092651367
    4. 'n' → logprob: -3.468748092651367
    5. ' not' → logprob: -6.718748092651367
    6. 'not' → logprob: -7.968748092651367
    7. '   ' → logprob: -10.093748092651367
    8. '(m' → logprob: -10.593748092651367
    9. ' base' → logprob: -10.843748092651367
    10. ' ' → logprob: -11.281248092651367

Token 215: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.05372953414917
    2. ' >' → logprob: -1.05372953414917
    3. '==' → logprob: -2.30372953414917
    4. ' ==' → logprob: -2.30372953414917
    5. ' <=' → logprob: -3.42872953414917
    6. ' <' → logprob: -3.42872953414917
    7. '<=' → logprob: -3.80372953414917
    8. '<' → logprob: -4.80372953414917
    9. '=' → logprob: -5.92872953414917
    10. '>=' → logprob: -6.67872953414917

Token 216: ' m' (ID: 284)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22227686643600464
    2. '0' → logprob: -1.7222769260406494
    3. 'm' → logprob: -4.47227668762207
    4. '3' → logprob: -5.34727668762207
    5. '2' → logprob: -5.59727668762207
    6. ' ' → logprob: -7.47227668762207
    7. '4' → logprob: -9.22227668762207
    8. '250' → logprob: -10.22227668762207
    9. '5' → logprob: -11.47227668762207
    10. ' m' → logprob: -11.97227668762207

Token 217: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04587075859308243
    2. ':
' → logprob: -3.170870780944824
    3. ':return' → logprob: -5.920870780944824
    4. '   ' → logprob: -8.920870780944824
    5. ' or' → logprob: -10.545870780944824
    6. ' :' → logprob: -11.795870780944824
    7. ' and' → logprob: -12.170870780944824
    8. '):' → logprob: -12.920870780944824
    9. '):
' → logprob: -13.420870780944824
    10. ',' → logprob: -13.920870780944824

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024763941764831543
    2. '2' → logprob: -4.399764060974121
    3. '3' → logprob: -5.149764060974121
    4. '0' → logprob: -5.274764060974121
    5. '4' → logprob: -7.649764060974121
    6. ' ' → logprob: -7.774764060974121
    7. '5' → logprob: -8.774764060974121
    8. 'n' → logprob: -10.149764060974121
    9. '6' → logprob: -10.524764060974121
    10. 'm' → logprob: -10.774764060974121

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06765543669462204
    2. '0' → logprob: -3.442655324935913
    3. '2' → logprob: -4.067655563354492
    4. '3' → logprob: -4.317655563354492
    5. 'm' → logprob: -6.942655563354492
    6. 'n' → logprob: -7.442655563354492
    7. '4' → logprob: -7.692655563354492
    8. ' ' → logprob: -8.067655563354492
    9. '5' → logprob: -8.317655563354492
    10. '6' → logprob: -9.692655563354492

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04108660668134689
    2. ':
' → logprob: -3.2910866737365723
    3. '   ' → logprob: -6.416086673736572
    4. ':return' → logprob: -6.666086673736572
    5. '       ' → logprob: -9.916086196899414
    6. ' or' → logprob: -10.416086196899414
    7. ' and' → logprob: -11.041086196899414
    8. '):' → logprob: -11.666086196899414
    9. ',' → logprob: -11.666086196899414
    10. '):
' → logprob: -11.916086196899414

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004001641063950956
    2. ' return' → logprob: -8.37540054321289
    3. 'return' → logprob: -9.00040054321289
    4. '   ' → logprob: -10.25040054321289
    5. '
' → logprob: -12.00040054321289
    6. '           ' → logprob: -13.75040054321289
    7. '      ' → logprob: -14.75040054321289
    8. '```' → logprob: -14.75040054321289
    9. ',' → logprob: -14.87540054321289
    10. '	return' → logprob: -15.00040054321289

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.37073391675949097
    2. '   ' → logprob: -1.6207339763641357
    3. ' return' → logprob: -2.8707339763641357
    4. 'base' → logprob: -3.2457339763641357
    5. '       ' → logprob: -4.495733737945557
    6. ' base' → logprob: -5.370733737945557
    7. '
' → logprob: -8.495734214782715
    8. '	return' → logprob: -8.870734214782715
    9. '	base' → logprob: -9.745734214782715
    10. ' ' → logprob: -10.245734214782715

Token 223: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4809264838695526
    2. ' base' → logprob: -1.605926513671875
    3. '0' → logprob: -1.980926513671875
    4. '(base' → logprob: -3.355926513671875
    5. '(' → logprob: -5.730926513671875
    6. ' ' → logprob: -5.980926513671875
    7. ' (' → logprob: -6.605926513671875
    8. '1' → logprob: -7.480926513671875
    9. ' n' → logprob: -8.480926513671875
    10. 'n' → logprob: -8.855926513671875

Token 224: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001112116384319961
    2. '
' → logprob: -7.62611198425293
    3. '    
' → logprob: -7.87611198425293
    4. '<|end|>' → logprob: -9.00111198425293
    5. 'else' → logprob: -10.62611198425293
    6. ',' → logprob: -11.00111198425293
    7. 'def' → logprob: -11.00111198425293
    8. '       ' → logprob: -11.75111198425293
    9. 'import' → logprob: -11.87611198425293
    10. '        
' → logprob: -12.25111198425293

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023347358219325542
    2. '
' → logprob: -6.7523345947265625
    3. '    
' → logprob: -7.6273345947265625
    4. 'def' → logprob: -8.377334594726562
    5. ' else' → logprob: -8.877334594726562
    6. 'else' → logprob: -9.627334594726562
    7. ')' → logprob: -10.002334594726562
    8. '<|end|>' → logprob: -10.377334594726562
    9. ' +' → logprob: -11.002334594726562
    10. ' 
' → logprob: -11.127334594726562

Token 226: ' def' (ID: 1056)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4607945382595062
    2. '   ' → logprob: -1.9607945680618286
    3. 'result' → logprob: -2.460794448852539
    4. ' res' → logprob: -3.210794448852539
    5. 'return' → logprob: -3.460794448852539
    6. 'ans' → logprob: -4.210794448852539
    7. 'diff' → logprob: -4.710794448852539
    8. 'acc' → logprob: -4.835794448852539
    9. ' result' → logprob: -5.460794448852539
    10. 'for' → logprob: -5.585794448852539

Token 227: ' skip' (ID: 16677)
  Prédit: ' inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inner' → logprob: -1.7876567840576172
    2. ' helper' → logprob: -1.7876567840576172
    3. 'ex' → logprob: -2.412656784057617
    4. ' solve' → logprob: -3.037656784057617
    5. ' f' → logprob: -3.162656784057617
    6. ' dp' → logprob: -3.287656784057617
    7. 'inner' → logprob: -3.412656784057617
    8. 'dp' → logprob: -3.912656784057617
    9. 'helper' → logprob: -4.037656784057617
    10. ' exotic' → logprob: -4.100156784057617

Token 228: '_' (ID: 62)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.13715685904026031
    2. '(iter' → logprob: -3.7621569633483887
    3. '_elements' → logprob: -4.137156963348389
    4. 'while' → logprob: -4.137156963348389
    5. '_generator' → logprob: -4.262156963348389
    6. '(r' → logprob: -4.512156963348389
    7. '_' → logprob: -5.387156963348389
    8. '(' → logprob: -5.512156963348389
    9. '()' → logprob: -5.637156963348389
    10. '_tokens' → logprob: -5.762156963348389

Token 229: 'odd' (ID: 18303)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15451326966285706
    2. '(n' → logprob: -2.654513359069824
    3. 'n' → logprob: -3.529513359069824
    4. 'def' → logprob: -4.154513359069824
    5. 'count' → logprob: -5.404513359069824
    6. 'r' → logprob: -5.654513359069824
    7. 'generator' → logprob: -6.279513359069824
    8. '_generator' → logprob: -6.529513359069824
    9. '(r' → logprob: -6.654513359069824
    10. 'is' → logprob: -6.779513359069824

Token 230: '_trip' (ID: 154353)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04853206127882004
    2. '(i' → logprob: -3.798532009124756
    3. '(k' → logprob: -4.548532009124756
    4. '(' → logprob: -5.548532009124756
    5. '(index' → logprob: -5.798532009124756
    6. '_numbers' → logprob: -6.423532009124756
    7. '(idx' → logprob: -6.673532009124756
    8. 's' → logprob: -6.923532009124756
    9. '_steps' → logprob: -7.548532009124756
    10. '(s' → logprob: -7.673532009124756

Token 231: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.6618231534957886
    2. 'les' → logprob: -1.5368231534957886
    3. 'le' → logprob: -1.6618231534957886
    4. 'let' → logprob: -2.536823272705078
    5. '(' → logprob: -10.661823272705078
    6. 'def' → logprob: -11.036823272705078
    7. '
' → logprob: -11.161823272705078
    8. '(let' → logprob: -11.661823272705078
    9. 'ples' → logprob: -12.286823272705078
    10. 's' → logprob: -12.536823272705078

Token 232: '():
' (ID: 8595)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03993679955601692
    2. '():' → logprob: -3.9149367809295654
    3. '(k' → logprob: -4.9149370193481445
    4. '(s' → logprob: -5.4149370193481445
    5. '(i' → logprob: -6.4149370193481445
    6. '(start' → logprob: -6.5399370193481445
    7. '(r' → logprob: -6.7899370193481445
    8. '(' → logprob: -7.4149370193481445
    9. '(m' → logprob: -7.6649370193481445
    10. '():
' → logprob: -7.6649370193481445

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001175343873910606
    2. ' for' → logprob: -7.126175403594971
    3. '   ' → logprob: -9.001174926757812
    4. ' yield' → logprob: -10.001174926757812
    5. 'for' → logprob: -10.126174926757812
    6. 'yield' → logprob: -10.376174926757812
    7. 'n' → logprob: -11.126174926757812
    8. '           ' → logprob: -11.376174926757812
    9. '      ' → logprob: -11.376174926757812
    10. 'def' → logprob: -11.626174926757812

Token 234: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.15961754322052
    2. '   ' → logprob: -1.65961754322052
    3. 'for' (adapté à ' for') → logprob: -2.0346174240112305
    4. 'i' → logprob: -2.1596174240112305
    5. 'acc' → logprob: -2.9096174240112305
    6. 'skip' → logprob: -3.5346174240112305
    7. 'q' → logprob: -3.6596174240112305
    8. 's' → logprob: -3.7846174240112305
    9. 'd' → logprob: -4.0346174240112305
    10. 'prev' → logprob: -4.5346174240112305

Token 235: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6121742129325867
    2. 'x' → logprob: -1.3621742725372314
    3. 'k' → logprob: -2.6121742725372314
    4. ' i' → logprob: -3.1121742725372314
    5. ' x' → logprob: -3.6121742725372314
    6. 'trip' → logprob: -4.362174034118652
    7. 'a' → logprob: -4.612174034118652
    8. ' k' → logprob: -5.237174034118652
    9. 'j' → logprob: -5.362174034118652
    10. 't' → logprob: -5.362174034118652

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008822795003652573
    2. 'in' → logprob: -4.758822917938232
    3. ',' → logprob: -9.133822441101074
    4. '   ' → logprob: -10.383822441101074
    5. '       ' → logprob: -11.258822441101074
    6. ' ' → logprob: -11.383822441101074
    7. '    ' → logprob: -11.633822441101074
    8. '        ' → logprob: -11.758822441101074
    9. 'n' → logprob: -12.258822441101074
    10. '1' → logprob: -12.633822441101074

Token 237: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2913411557674408
    2. 'count' → logprob: -1.7913411855697632
    3. ' range' → logprob: -3.1663410663604736
    4. 'chain' → logprob: -3.2913410663604736
    5. 'is' → logprob: -5.291341304779053
    6. ' count' → logprob: -7.041341304779053
    7. ' chain' → logprob: -7.666341304779053
    8. ' is' → logprob: -8.666340827941895
    9. 'filter' → logprob: -10.166340827941895
    10. 'skip' → logprob: -11.541340827941895

Token 238: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1623954474925995
    2. '(m' → logprob: -2.287395477294922
    3. '(n' → logprob: -3.287395477294922
    4. '1' → logprob: -4.787395477294922
    5. '0' → logprob: -7.412395477294922
    6. 'm' → logprob: -7.787395477294922
    7. '3' → logprob: -8.037395477294922
    8. '((' → logprob: -8.037395477294922
    9. '2' → logprob: -8.162395477294922
    10. '(i' → logprob: -8.287395477294922

Token 239: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8427688479423523
    2. '):
' → logprob: -1.217768907546997
    3. '):' → logprob: -2.217768907546997
    4. ' +' → logprob: -2.217768907546997
    5. ',' → logprob: -2.967768907546997
    6. '   ' → logprob: -6.842768669128418
    7. ' ,' → logprob: -7.342768669128418
    8. '       ' → logprob: -7.342768669128418
    9. '*' → logprob: -7.467768669128418
    10. '-' → logprob: -7.467768669128418

Token 240: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004798684269189835
    2. '2' → logprob: -5.504798889160156
    3. ' ' → logprob: -7.629798889160156
    4. '3' → logprob: -9.629798889160156
    5. 'm' → logprob: -9.629798889160156
    6. '0' → logprob: -11.004798889160156
    7. '
' → logprob: -11.129798889160156
    8. 'n' → logprob: -11.379798889160156
    9. '   ' → logprob: -11.629798889160156
    10. '4' → logprob: -11.692298889160156

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018439048901200294
    2. '2' → logprob: -4.018438816070557
    3. '3' → logprob: -8.893439292907715
    4. 'm' → logprob: -9.768439292907715
    5. ' ' → logprob: -10.268439292907715
    6. '0' → logprob: -11.205939292907715
    7. '4' → logprob: -11.830939292907715
    8. 'n' → logprob: -12.268439292907715
    9. '
' → logprob: -12.580939292907715
    10. '(' → logprob: -12.580939292907715

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9140308499336243
    2. '):
' → logprob: -1.0390307903289795
    3. '):' → logprob: -1.4140307903289795
    4. ' ,' → logprob: -6.789031028747559
    5. ',n' → logprob: -8.164031028747559
    6. '       ' → logprob: -8.289031028747559
    7. '   ' → logprob: -8.539031028747559
    8. ')' → logprob: -9.914031028747559
    9. '):
' → logprob: -10.164031028747559
    10. '):

' → logprob: -10.539031028747559

Token 243: ' min' (ID: 1349)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04704365134239197
    2. ' n' → logprob: -3.172043561935425
    3. 'm' → logprob: -6.422043800354004
    4. '(n' → logprob: -6.797043800354004
    5. '(' → logprob: -7.922043800354004
    6. '3' → logprob: -8.297043800354004
    7. '   ' → logprob: -9.047043800354004
    8. '2' → logprob: -9.172043800354004
    9. ' m' → logprob: -9.297043800354004
    10. ' (' → logprob: -9.797043800354004

Token 244: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018706903792917728
    2. '(' → logprob: -6.501870632171631
    3. '(m' → logprob: -8.001871109008789
    4. '(
' → logprob: -11.376871109008789
    5. '((' → logprob: -11.751871109008789
    6. 'n' → logprob: -11.751871109008789
    7. '(len' → logprob: -13.876871109008789
    8. '(r' → logprob: -14.251871109008789
    9. '(i' → logprob: -14.251871109008789
    10. '```' → logprob: -14.251871109008789

Token 245: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024376364424824715
    2. '(n' → logprob: -3.899376392364502
    3. 'm' → logprob: -6.399376392364502
    4. ' n' → logprob: -7.024376392364502
    5. '   ' → logprob: -8.024375915527344
    6. ',' → logprob: -8.149375915527344
    7. '(m' → logprob: -8.774375915527344
    8. '(' → logprob: -9.274375915527344
    9. ',n' → logprob: -9.274375915527344
    10. ')' → logprob: -9.649375915527344

Token 246: '*m' (ID: 85049)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2046605348587036
    2. '(m' → logprob: -1.5796605348587036
    3. '*m' → logprob: -1.5796605348587036
    4. ',' → logprob: -2.079660415649414
    5. '(n' → logprob: -2.204660415649414
    6. '*n' → logprob: -4.079660415649414
    7. 'n' → logprob: -4.329660415649414
    8. ' *' → logprob: -4.579660415649414
    9. ',m' → logprob: -6.079660415649414
    10. '*(' → logprob: -6.204660415649414

Token 247: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8306202292442322
    2. ' +' → logprob: -1.080620288848877
    3. '()' → logprob: -2.205620288848877
    4. ',' → logprob: -2.955620288848877
    5. '()+' → logprob: -2.955620288848877
    6. '(),' → logprob: -5.330620288848877
    7. ')+' → logprob: -7.205620288848877
    8. '),' → logprob: -7.205620288848877
    9. ')' → logprob: -7.330620288848877
    10. '(i' → logprob: -7.455620288848877

Token 248: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008380175568163395
    2. ' n' → logprob: -5.25838041305542
    3. '2' → logprob: -6.75838041305542
    4. '3' → logprob: -7.38338041305542
    5. '(n' → logprob: -7.38338041305542
    6. '(' → logprob: -8.008379936218262
    7. 'm' → logprob: -8.758379936218262
    8. '   ' → logprob: -9.258379936218262
    9. ' ' → logprob: -10.258379936218262
    10. ' (' → logprob: -10.508379936218262

Token 249: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.435929298400879
    2. '-' → logprob: -1.435929298400879
    3. ')):
' → logprob: -1.810929298400879
    4. ' -' → logprob: -1.935929298400879
    5. ')):' → logprob: -2.435929298400879
    6. ' +' → logprob: -3.310929298400879
    7. ')' → logprob: -3.435929298400879
    8. ')+' → logprob: -3.810929298400879
    9. '):' → logprob: -4.060929298400879
    10. '):
' → logprob: -4.685929298400879

Token 250: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.729400098323822
    2. '):' → logprob: -1.2294001579284668
    3. '):
' → logprob: -1.6044001579284668
    4. ' +' → logprob: -4.229400157928467
    5. ',' → logprob: -5.354400157928467
    6. ')):' → logprob: -6.104400157928467
    7. ')):
' → logprob: -6.354400157928467
    8. '   ' → logprob: -7.979400157928467
    9. ')' → logprob: -8.729399681091309
    10. '):

' → logprob: -9.229399681091309

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006379772676154971
    2. ' ' → logprob: -7.375638008117676
    3. '   ' → logprob: -12.125638008117676
    4. '2' → logprob: -13.000638008117676
    5. '  ' → logprob: -13.875638008117676
    6. '(' → logprob: -14.375638008117676
    7. '0' → logprob: -14.375638008117676
    8. '
' → logprob: -15.125638008117676
    9. '```' → logprob: -15.125638008117676
    10. '    ' → logprob: -15.750638008117676

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -10.500029563903809
    3. '   ' → logprob: -14.500029563903809
    4. ')' → logprob: -15.000029563903809
    5. '2' → logprob: -15.125029563903809
    6. '0' → logprob: -15.625029563903809
    7. '
' → logprob: -16.250028610229492
    8. '):
' → logprob: -16.250028610229492
    9. '  ' → logprob: -16.500028610229492
    10. '+' → logprob: -16.625028610229492

Token 253: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3492380976676941
    2. '):
' → logprob: -1.2242381572723389
    3. ',' → logprob: -8.099238395690918
    4. ':' → logprob: -8.099238395690918
    5. '       ' → logprob: -9.099238395690918
    6. '           ' → logprob: -10.599238395690918
    7. '):
' → logprob: -10.974238395690918
    8. '   ' → logprob: -11.849238395690918
    9. '):

' → logprob: -12.099238395690918
    10. ':
' → logprob: -12.349238395690918

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006635877070948482
    2. '<|end|>' → logprob: -8.750663757324219
    3. '```' → logprob: -9.000663757324219
    4. '       ' → logprob: -9.000663757324219
    5. '               ' → logprob: -9.375663757324219
    6. '            ' → logprob: -10.375663757324219
    7. '            
' → logprob: -10.750663757324219
    8. ',' → logprob: -10.875663757324219
    9. '	       ' → logprob: -11.000663757324219
    10. ':' → logprob: -11.375663757324219

Token 255: ' q' (ID: 2335)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0024300813674927
    2. 'if' → logprob: -1.6274300813674927
    3. ' yield' → logprob: -1.7524300813674927
    4. '       ' → logprob: -2.127429962158203
    5. 'yield' → logprob: -2.877429962158203
    6. '           ' → logprob: -3.127429962158203
    7. ' s' → logprob: -5.377429962158203
    8. ' for' → logprob: -5.627429962158203
    9. 'for' → logprob: -5.627429962158203
    10. ' term' → logprob: -6.002429962158203

Token 256: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16420124471187592
    2. '=' → logprob: -2.664201259613037
    3. ',' → logprob: -2.789201259613037
    4. 'u' → logprob: -4.164201259613037
    5. '   ' → logprob: -6.164201259613037
    6. ' ,' → logprob: -7.039201259613037
    7. ',u' → logprob: -7.789201259613037
    8. '    ' → logprob: -8.039200782775879
    9. ' ' → logprob: -8.664200782775879
    10. '  ' → logprob: -8.789200782775879

Token 257: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020734336227178574
    2. ' r' → logprob: -3.8957343101501465
    3. '=' → logprob: -10.145734786987305
    4. ' ' → logprob: -10.270734786987305
    5. '   ' → logprob: -10.895734786987305
    6. ' =' → logprob: -11.020734786987305
    7. '_' → logprob: -11.395734786987305
    8. '
' → logprob: -11.770734786987305
    9. 'div' → logprob: -11.895734786987305
    10. ',' → logprob: -12.145734786987305

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10047581046819687
    2. ' =' → logprob: -2.350475788116455
    3. ',' → logprob: -8.225476264953613
    4. '=i' → logprob: -13.975476264953613
    5. ' ' → logprob: -15.725476264953613
    6. '=q' → logprob: -16.225475311279297
    7. ' ,' → logprob: -16.850475311279297
    8. '=k' → logprob: -17.100475311279297
    9. '=
' → logprob: -17.225475311279297
    10. '   ' → logprob: -17.475475311279297

Token 259: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.003858389565721154
    2. ' div' → logprob: -5.62885856628418
    3. '           ' → logprob: -8.62885856628418
    4. 'i' → logprob: -9.50385856628418
    5. '   ' → logprob: -13.00385856628418
    6. ' i' → logprob: -14.37885856628418
    7. '(i' → logprob: -15.00385856628418
    8. '               ' → logprob: -15.12885856628418
    9. '
' → logprob: -15.37885856628418
    10. '	div' → logprob: -15.62885856628418

Token 260: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.005594087298959494
    2. 'i' → logprob: -5.380594253540039
    3. '(i' → logprob: -7.005594253540039
    4. ' i' → logprob: -9.755594253540039
    5. 'm' → logprob: -13.255594253540039
    6. 'ision' → logprob: -13.380594253540039
    7. ',i' → logprob: -13.630594253540039
    8. 'ide' → logprob: -14.130594253540039
    9. 'idend' → logprob: -14.380594253540039
    10. 'exact' → logprob: -14.380594253540039

Token 261: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0017632400849834085
    2. 'i' → logprob: -6.376763343811035
    3. '(' → logprob: -10.376763343811035
    4. ' i' → logprob: -10.626763343811035
    5. ' (' → logprob: -12.626763343811035
    6. '   ' → logprob: -14.876763343811035
    7. '(
' → logprob: -15.001763343811035
    8. '(n' → logprob: -15.126763343811035
    9. ',i' → logprob: -15.376763343811035
    10. '           ' → logprob: -15.501763343811035

Token 262: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00036204091156832874
    2. ' i' → logprob: -8.250362396240234
    3. 'n' → logprob: -9.500362396240234
    4. '(i' → logprob: -11.625362396240234
    5. '   ' → logprob: -12.000362396240234
    6. '3' → logprob: -12.875362396240234
    7. 'q' → logprob: -13.125362396240234
    8. ' ' → logprob: -13.625362396240234
    9. ')' → logprob: -14.500362396240234
    10. '           ' → logprob: -14.750362396240234

Token 263: '*m' (ID: 85049)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5539026260375977
    2. 'i' → logprob: -1.1789026260375977
    3. '*i' → logprob: -2.9289026260375977
    4. '*m' → logprob: -2.9289026260375977
    5. 'n' → logprob: -5.553902626037598
    6. ',' → logprob: -6.303902626037598
    7. ' i' → logprob: -6.678902626037598
    8. '*' → logprob: -6.803902626037598
    9. ' m' → logprob: -7.303902626037598
    10. ' *' → logprob: -7.553902626037598

Token 264: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05653294548392296
    2. 'i' → logprob: -3.931532859802246
    3. ' ,' → logprob: -4.681532859802246
    4. ',i' → logprob: -4.681532859802246
    5. '-' → logprob: -5.056532859802246
    6. ' i' → logprob: -5.431532859802246
    7. ' -' → logprob: -5.431532859802246
    8. '-i' → logprob: -6.556532859802246
    9. '           ' → logprob: -9.306532859802246
    10. '(i' → logprob: -10.681532859802246

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009315869538113475
    2. ' i' → logprob: -7.000931739807129
    3. 'n' → logprob: -12.250931739807129
    4. 'q' → logprob: -12.375931739807129
    5. '2' → logprob: -13.125931739807129
    6. '           ' → logprob: -13.250931739807129
    7. '3' → logprob: -14.125931739807129
    8. '<|end|>' → logprob: -14.250931739807129
    9. ' ' → logprob: -14.500931739807129
    10. '   ' → logprob: -14.500931739807129

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004850530531257391
    2. ' ,' → logprob: -5.504850387573242
    3. '2' → logprob: -7.504850387573242
    4. '1' → logprob: -9.254850387573242
    5. '3' → logprob: -10.254850387573242
    6. '```' → logprob: -10.504850387573242
    7. '0' → logprob: -11.254850387573242
    8. ' ' → logprob: -11.379850387573242
    9. '[' → logprob: -11.879850387573242
    10. ')' → logprob: -12.254850387573242

Token 267: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05575712025165558
    2. '2' → logprob: -2.9307570457458496
    3. ' ' → logprob: -7.30575704574585
    4. '6' → logprob: -9.555757522583008
    5. '4' → logprob: -9.680757522583008
    6. '9' → logprob: -10.680757522583008
    7. 'n' → logprob: -11.055757522583008
    8. 'i' → logprob: -12.055757522583008
    9. '   ' → logprob: -12.180757522583008
    10. '7' → logprob: -12.555757522583008

Token 268: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04913704842329025
    2. '2' → logprob: -3.0491371154785156
    3. '4' → logprob: -8.174137115478516
    4. '6' → logprob: -9.299137115478516
    5. ' ' → logprob: -9.799137115478516
    6. '9' → logprob: -10.174137115478516
    7. 'n' → logprob: -10.424137115478516
    8. 'i' → logprob: -11.424137115478516
    9. '7' → logprob: -11.799137115478516
    10. ')' → logprob: -11.924137115478516

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6974932551383972
    2. ')
' → logprob: -0.6974932551383972
    3. '           ' → logprob: -5.697493076324463
    4. '):
' → logprob: -7.447493076324463
    5. '       ' → logprob: -9.072493553161621
    6. ')
' → logprob: -9.572493553161621
    7. '):' → logprob: -10.072493553161621
    8. ')

' → logprob: -10.072493553161621
    9. ' )
' → logprob: -10.197493553161621
    10. ',' → logprob: -10.447493553161621

Token 270: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009200352360494435
    2. '<|end|>' → logprob: -7.125919818878174
    3. '       ' → logprob: -10.000920295715332
    4. '	       ' → logprob: -10.500920295715332
    5. '               ' → logprob: -11.250920295715332
    6. '            
' → logprob: -12.250920295715332
    7. ',' → logprob: -12.250920295715332
    8. '            ' → logprob: -12.500920295715332
    9. '<|end|>' → logprob: -12.500920295715332
    10. '```' → logprob: -12.625920295715332

Token 271: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24790044128894806
    2. '       ' → logprob: -2.8729004859924316
    3. 'yield' → logprob: -2.8729004859924316
    4. 'if' (adapté à ' if') → logprob: -3.2479004859924316
    5. ' yield' → logprob: -3.4979004859924316
    6. ' if' → logprob: -3.6229004859924316
    7. 's' → logprob: -6.122900485992432
    8. 'for' → logprob: -6.247900485992432
    9. ' for' → logprob: -6.997900485992432
    10. ' s' → logprob: -6.997900485992432

Token 272: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017123708501458168
    2. ' r' → logprob: -4.892123699188232
    3. 'q' → logprob: -5.267123699188232
    4. '(r' → logprob: -6.017123699188232
    5. 'i' → logprob: -7.142123699188232
    6. '(i' → logprob: -7.892123699188232
    7. ' q' → logprob: -9.01712417602539
    8. '(q' → logprob: -9.01712417602539
    9. 'n' → logprob: -9.26712417602539
    10. 'not' → logprob: -9.26712417602539

Token 273: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08277948945760727
    2. ' ==' → logprob: -2.5827794075012207
    3. ':' → logprob: -5.707779407501221
    4. '!=' → logprob: -8.332779884338379
    5. '=' → logprob: -9.332779884338379
    6. ' !=' → logprob: -9.957779884338379
    7. ':
' → logprob: -10.082779884338379
    8. ')==' → logprob: -10.332779884338379
    9. '0' → logprob: -10.457779884338379
    10. '<|end|>' → logprob: -11.082779884338379

Token 274: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0059136273339390755
    2. '           ' → logprob: -5.880913734436035
    3. ' continue' → logprob: -6.130913734436035
    4. 'continue' → logprob: -7.255913734436035
    5. ',' → logprob: -9.380913734436035
    6. ':
' → logprob: -10.255913734436035
    7. ':' → logprob: -10.255913734436035
    8. ' =' → logprob: -10.630913734436035
    9. '```' → logprob: -11.880913734436035
    10. '       ' → logprob: -12.255913734436035

Token 275: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2475179135799408
    2. ' continue' → logprob: -1.8725179433822632
    3. '               ' → logprob: -2.8725178241729736
    4. '           ' → logprob: -5.122518062591553
    5. '                   ' → logprob: -6.247518062591553
    6. '```' → logprob: -7.872518062591553
    7. 'yield' → logprob: -7.997518062591553
    8. ' yield' → logprob: -9.747517585754395
    9. '   ' → logprob: -9.872517585754395
    10. '	continue' → logprob: -10.122517585754395

Token 276: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031964892987161875
    2. 'yield' → logprob: -5.878196716308594
    3. ' yield' → logprob: -8.253196716308594
    4. '       ' → logprob: -10.128196716308594
    5. '<|end|>' → logprob: -10.378196716308594
    6. ',' → logprob: -11.628196716308594
    7. '```' → logprob: -11.878196716308594
    8. '               ' → logprob: -11.878196716308594
    9. '
' → logprob: -12.128196716308594
    10. 'def' → logprob: -12.378196716308594

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0066149537451565266
    2. 'yield' → logprob: -5.131615161895752
    3. '       ' → logprob: -8.006614685058594
    4. ' yield' → logprob: -8.881614685058594
    5. '<|end|>' → logprob: -9.506614685058594
    6. 'def' → logprob: -10.506614685058594
    7. '```' → logprob: -10.631614685058594
    8. 'for' → logprob: -11.381614685058594
    9. '               ' → logprob: -11.881614685058594
    10. 's' → logprob: -11.881614685058594

Token 278: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.971635639667511
    2. '       ' → logprob: -1.0966355800628662
    3. 'yield' (adapté à ' yield') → logprob: -1.7216355800628662
    4. ' yield' → logprob: -2.346635580062866
    5. 'result' → logprob: -5.846635818481445
    6. 'res' → logprob: -6.721635818481445
    7. 'x' → logprob: -6.846635818481445
    8. '
' → logprob: -6.971635818481445
    9. 's' → logprob: -7.346635818481445
    10. '```' → logprob: -7.721635818481445

Token 279: ' i' (ID: 575)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.42223885655403137
    2. ' (' → logprob: -2.172238826751709
    3. 'comb' → logprob: -2.172238826751709
    4. '(' → logprob: -3.047238826751709
    5. '(i' → logprob: -3.172238826751709
    6. ' comb' → logprob: -4.172238826751709
    7. '((' → logprob: -6.172238826751709
    8. 'com' → logprob: -6.172238826751709
    9. '(mod' → logprob: -6.547238826751709
    10. '(n' → logprob: -7.047238826751709

Token 280: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' q' (ID: 2335)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.6209145784378052
    2. ' (' → logprob: -1.7459145784378052
    3. 'comb' → logprob: -1.7459145784378052
    4. '(' → logprob: -3.3709144592285156
    5. ' comb' → logprob: -3.7459144592285156
    6. '((' → logprob: -4.620914459228516
    7. '(base' → logprob: -5.245914459228516
    8. 'com' → logprob: -5.370914459228516
    9. '(q' → logprob: -5.495914459228516
    10. '(i' → logprob: -5.495914459228516

Token 282: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44464635848999023
    2. '<|end|>' → logprob: -1.6946463584899902
    3. ' for' → logprob: -2.6946463584899902
    4. '       ' → logprob: -2.9446463584899902
    5. ')' → logprob: -3.6946463584899902
    6. 'for' → logprob: -3.9446463584899902
    7. 'def' → logprob: -6.44464635848999
    8. ',' → logprob: -6.44464635848999
    9. '<|end|>' → logprob: -6.94464635848999
    10. '#' → logprob: -6.94464635848999

Token 284: ' delta' (ID: 18800)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6160925030708313
    2. 'res' → logprob: -1.2410924434661865
    3. 'for' → logprob: -2.8660924434661865
    4. 'total' → logprob: -3.3660924434661865
    5. 's' → logprob: -4.241092681884766
    6. '   ' → logprob: -4.366092681884766
    7. 'ans' → logprob: -4.491092681884766
    8. 'acc' → logprob: -4.616092681884766
    9. 'sum' → logprob: -4.866092681884766
    10. 'def' → logprob: -5.241092681884766

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0517423190176487
    2. '=' → logprob: -3.0517423152923584
    3. 's' → logprob: -5.8017425537109375
    4. '_' → logprob: -9.426742553710938
    5. ',' → logprob: -10.926742553710938
    6. '   ' → logprob: -11.551742553710938
    7. ' ' → logprob: -12.176742553710938
    8. '_base' → logprob: -12.926742553710938
    9. '_values' → logprob: -13.301742553710938
    10. '_sum' → logprob: -13.676742553710938

Token 286: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.9688060879707336
    2. 'sum' → logprob: -1.0938060283660889
    3. '0' → logprob: -1.3438060283660889
    4. ' ' → logprob: -4.218806266784668
    5. '(sum' → logprob: -5.718806266784668
    6. '(' → logprob: -6.343806266784668
    7. ' (' → logprob: -6.593806266784668
    8. '   ' → logprob: -7.218806266784668
    9. '(-' → logprob: -7.343806266784668
    10. ' base' → logprob: -7.468806266784668

Token 287: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.15327298641204834
    2. '(((' → logprob: -3.403273105621338
    3. '(com' → logprob: -3.653273105621338
    4. '(i' → logprob: -3.653273105621338
    5. '(' → logprob: -4.028273105621338
    6. '(
' → logprob: -4.778273105621338
    7. '((-' → logprob: -4.778273105621338
    8. '(pow' → logprob: -5.278273105621338
    9. '(x' → logprob: -5.403273105621338
    10. '(skip' → logprob: -6.028273105621338

Token 288: 'comb' (ID: 43606)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5772742033004761
    2. 'comb' → logprob: -2.3272743225097656
    3. 'x' → logprob: -2.5772743225097656
    4. '(-' → logprob: -3.4522743225097656
    5. '(' → logprob: -3.5772743225097656
    6. '(i' → logprob: -3.7022743225097656
    7. '-' → logprob: -4.077274322509766
    8. 'c' → logprob: -4.327274322509766
    9. 'val' → logprob: -4.452274322509766
    10. 'a' → logprob: -4.452274322509766

Token 289: '(n' (ID: 2406)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20601965487003326
    2. '(n' → logprob: -1.831019639968872
    3. '(' → logprob: -4.206019878387451
    4. '(x' → logprob: -5.956019878387451
    5. '(k' → logprob: -6.331019878387451
    6. '(a' → logprob: -6.456019878387451
    7. '(j' → logprob: -6.956019878387451
    8. '(t' → logprob: -7.081019878387451
    9. 'n' → logprob: -7.581019878387451
    10. '(s' → logprob: -7.831019878387451

Token 290: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9042316675186157
    2. '(i' → logprob: -1.5292316675186157
    3. '+' → logprob: -1.6542316675186157
    4. '+i' → logprob: -2.904231548309326
    5. ',' → logprob: -3.279231548309326
    6. '(' → logprob: -4.279231548309326
    7. '+k' → logprob: -4.404231548309326
    8. '(n' → logprob: -4.654231548309326
    9. '[i' → logprob: -5.154231548309326
    10. 'i' → logprob: -5.154231548309326

Token 291: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09840472042560577
    2. 'x' → logprob: -3.0984046459198
    3. 'k' → logprob: -3.7234046459198
    4. 'j' → logprob: -4.223404884338379
    5. ' i' → logprob: -5.973404884338379
    6. 'a' → logprob: -6.473404884338379
    7. '   ' → logprob: -6.848404884338379
    8. 't' → logprob: -7.223404884338379
    9. 'b' → logprob: -7.473404884338379
    10. 'n' → logprob: -7.598404884338379

Token 292: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005832694936543703
    2. ')*' → logprob: -5.380832672119141
    3. '   ' → logprob: -7.755832672119141
    4. ',' → logprob: -8.63083267211914
    5. '(i' → logprob: -8.63083267211914
    6. '[i' → logprob: -9.75583267211914
    7. '),' → logprob: -10.13083267211914
    8. ' )' → logprob: -10.13083267211914
    9. '(n' → logprob: -10.25583267211914
    10. '-' → logprob: -10.63083267211914

Token 293: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17095868289470673
    2. '*' → logprob: -2.2959587574005127
    3. ',' → logprob: -2.9209587574005127
    4. ' ,' → logprob: -7.795958518981934
    5. 'def' → logprob: -8.045958518981934
    6. '```' → logprob: -8.295958518981934
    7. '(i' → logprob: -8.545958518981934
    8. '   ' → logprob: -8.545958518981934
    9. ' for' → logprob: -8.795958518981934
    10. '(' → logprob: -9.045958518981934

Token 294: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.13342243432998657
    2. 'pow' → logprob: -3.008422374725342
    3. '(' → logprob: -3.633422374725342
    4. 'inv' → logprob: -4.633422374725342
    5. '(com' → logprob: -5.258422374725342
    6. ' comb' → logprob: -5.508422374725342
    7. 'F' → logprob: -5.758422374725342
    8. '(m' → logprob: -5.883422374725342
    9. '(-' → logprob: -5.883422374725342
    10. '(i' → logprob: -6.133422374725342

Token 295: '(q' (ID: 21479)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.540516197681427
    2. '(' → logprob: -1.0405161380767822
    3. '(i' → logprob: -3.1655161380767822
    4. '(m' → logprob: -4.165516376495361
    5. '3' → logprob: -5.540516376495361
    6. '(q' → logprob: -6.540516376495361
    7. 'n' → logprob: -7.290516376495361
    8. '((' → logprob: -9.040515899658203
    9. ' (' → logprob: -9.415515899658203
    10. '(
' → logprob: -9.790515899658203

Token 296: ' +' (ID: 659)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.626075029373169
    2. ',' → logprob: -1.126075029373169
    3. '(' → logprob: -2.376075029373169
    4. '(m' → logprob: -5.12607479095459
    5. '3' → logprob: -5.25107479095459
    6. '(r' → logprob: -5.25107479095459
    7. '(i' → logprob: -5.50107479095459
    8. '+' → logprob: -5.50107479095459
    9. ',n' → logprob: -5.87607479095459
    10. '-' → logprob: -6.00107479095459

Token 297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6197389960289001
    2. 'i' → logprob: -1.119739055633545
    3. 'm' → logprob: -2.244739055633545
    4. '2' → logprob: -4.744739055633545
    5. '3' → logprob: -4.744739055633545
    6. ' n' → logprob: -5.994739055633545
    7. '   ' → logprob: -6.244739055633545
    8. ' i' → logprob: -6.494739055633545
    9. 'q' → logprob: -6.994739055633545
    10. 'r' → logprob: -6.994739055633545

Token 298: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05367502570152283
    2. ' -' → logprob: -3.1786749362945557
    3. 'i' → logprob: -5.178675174713135
    4. ',' → logprob: -5.928675174713135
    5. 'm' → logprob: -7.303675174713135
    6. '[i' → logprob: -8.303674697875977
    7. 'n' → logprob: -8.678674697875977
    8. 'k' → logprob: -8.803674697875977
    9. '3' → logprob: -8.803674697875977
    10. '(i' → logprob: -9.053674697875977

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1739729344844818
    2. '-' → logprob: -2.7989728450775146
    3. 'm' → logprob: -3.9239728450775146
    4. 'n' → logprob: -3.9239728450775146
    5. '2' → logprob: -4.048973083496094
    6. 'i' → logprob: -4.298973083496094
    7. 'r' → logprob: -4.423973083496094
    8. '3' → logprob: -5.173973083496094
    9. ' -' → logprob: -5.548973083496094
    10. 'k' → logprob: -6.298973083496094

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009323452599346638
    2. 'i' → logprob: -4.884323596954346
    3. '2' → logprob: -7.384323596954346
    4. 'm' → logprob: -7.509323596954346
    5. '3' → logprob: -8.134323120117188
    6. 'q' → logprob: -9.384323120117188
    7. 'n' → logprob: -9.884323120117188
    8. '-' → logprob: -10.259323120117188
    9. 'r' → logprob: -10.259323120117188
    10. '(i' → logprob: -11.384323120117188

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021583907306194305
    2. '(n' → logprob: -4.2715840339660645
    3. ')' → logprob: -6.2715840339660645
    4. '(i' → logprob: -6.3965840339660645
    5. ' ,' → logprob: -6.8965840339660645
    6. '-' → logprob: -7.1465840339660645
    7. '   ' → logprob: -7.2715840339660645
    8. ',n' → logprob: -8.146583557128906
    9. ',i' → logprob: -8.271583557128906
    10. '[i' → logprob: -9.146583557128906

Token 302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002258975524455309
    2. ' n' → logprob: -6.877258777618408
    3. 'i' → logprob: -7.502258777618408
    4. '3' → logprob: -8.377259254455566
    5. 'q' → logprob: -8.627259254455566
    6. 'm' → logprob: -9.002259254455566
    7. '   ' → logprob: -10.502259254455566
    8. '(n' → logprob: -10.877259254455566
    9. '2' → logprob: -11.002259254455566
    10. ')' → logprob: -11.252259254455566

Token 303: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02633327804505825
    2. ' -' → logprob: -3.6513333320617676
    3. ')' → logprob: -11.02633285522461
    4. '           ' → logprob: -11.77633285522461
    5. '   ' → logprob: -12.52633285522461
    6. '```' → logprob: -13.52633285522461
    7. '       ' → logprob: -13.90133285522461
    8. '1' → logprob: -14.52633285522461
    9. '  ' → logprob: -14.52633285522461
    10. ' ' → logprob: -14.65133285522461

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. ' ' → logprob: -10.375052452087402
    3. '2' → logprob: -11.375052452087402
    4. '   ' → logprob: -12.375052452087402
    5. ')' → logprob: -13.375052452087402
    6. '-' → logprob: -14.500052452087402
    7. '           ' → logprob: -14.562552452087402
    8. '
' → logprob: -14.750052452087402
    9. '  ' → logprob: -14.750052452087402
    10. 'i' → logprob: -14.875052452087402

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8351892473874614e-05
    2. '2' → logprob: -10.500048637390137
    3. ' ' → logprob: -11.625048637390137
    4. ')' → logprob: -12.250048637390137
    5. '-' → logprob: -12.625048637390137
    6. '   ' → logprob: -13.375048637390137
    7. 'i' → logprob: -14.500048637390137
    8. '
' → logprob: -14.937548637390137
    9. '```' → logprob: -15.250048637390137
    10. ' -' → logprob: -15.625048637390137

Token 306: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18296974897384644
    2. ' for' → logprob: -2.307969808578491
    3. 'for' → logprob: -2.932969808578491
    4. ')%' → logprob: -4.932969570159912
    5. ' )' → logprob: -6.057969570159912
    6. '%' → logprob: -6.182969570159912
    7. '   ' → logprob: -6.307969570159912
    8. '))' → logprob: -7.807969570159912
    9. ' %' → logprob: -8.18297004699707
    10. '    ' → logprob: -9.30797004699707

Token 307: ' %' (ID: 1851)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14418448507785797
    2. 'for' → logprob: -2.0191845893859863
    3. '%' → logprob: -6.894184589385986
    4. ' %' → logprob: -8.519184112548828
    5. '   ' → logprob: -9.144184112548828
    6. '    ' → logprob: -10.519184112548828
    7. '           ' → logprob: -10.644184112548828
    8. ')' → logprob: -10.894184112548828
    9. ' *' → logprob: -10.894184112548828
    10. '       ' → logprob: -11.019184112548828

Token 308: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.3458322731312364e-06
    2. ' MOD' → logprob: -11.875007629394531
    3. '998' → logprob: -15.500007629394531
    4. '
' → logprob: -16.87500762939453
    5. '   ' → logprob: -17.87500762939453
    6. '(M' → logprob: -18.25000762939453
    7. '.MOD' → logprob: -18.62500762939453
    8. '999' → logprob: -18.75000762939453
    9. '```' → logprob: -19.00000762939453
    10. '
' → logprob: -19.12500762939453

Token 309: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5241803526878357
    2. 'for' → logprob: -0.8991803526878357
    3. '   ' → logprob: -8.02418041229248
    4. '           ' → logprob: -8.52418041229248
    5. '    ' → logprob: -8.52418041229248
    6. '       ' → logprob: -9.39918041229248
    7. '          ' → logprob: -9.89918041229248
    8. '        ' → logprob: -9.89918041229248
    9. '*' → logprob: -10.52418041229248
    10. '            ' → logprob: -11.02418041229248

Token 310: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005181243759579957
    2. ' i' → logprob: -8.000517845153809
    3. '_,' → logprob: -9.125517845153809
    4. '(i' → logprob: -10.500517845153809
    5. ',' → logprob: -10.875517845153809
    6. '   ' → logprob: -12.125517845153809
    7. '_i' → logprob: -12.250517845153809
    8. '```' → logprob: -12.250517845153809
    9. 'idx' → logprob: -13.250517845153809
    10. '
' → logprob: -13.625517845153809

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002036656951531768
    2. ',q' → logprob: -6.3770365715026855
    3. ' in' → logprob: -8.502037048339844
    4. ' ,' → logprob: -9.502037048339844
    5. 'in' → logprob: -11.127037048339844
    6. 'q' → logprob: -11.502037048339844
    7. ',
' → logprob: -12.002037048339844
    8. ',r' → logprob: -12.127037048339844
    9. ',i' → logprob: -12.627037048339844
    10. ',_' → logprob: -13.002037048339844

Token 312: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01142102386802435
    2. 'r' → logprob: -4.761421203613281
    3. ' q' → logprob: -6.636421203613281
    4. 'skip' → logprob: -6.761421203613281
    5. ' skip' → logprob: -9.511421203613281
    6. 'p' → logprob: -9.761421203613281
    7. '(q' → logprob: -9.886421203613281
    8. ' r' → logprob: -10.511421203613281
    9. '_' → logprob: -10.636421203613281
    10. 't' → logprob: -11.136421203613281

Token 313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07893286645412445
    2. 'in' → logprob: -2.578932762145996
    3. ')' → logprob: -10.578932762145996
    4. ',' → logprob: -11.203932762145996
    5. ' ' → logprob: -13.703932762145996
    6. '	in' → logprob: -14.453932762145996
    7. ' )' → logprob: -14.578932762145996
    8. '),' → logprob: -15.453932762145996
    9. 'n' → logprob: -15.578932762145996
    10. '   ' → logprob: -16.203933715820312

Token 314: ' skip' (ID: 16677)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.00038586699520237744
    2. ' skip' → logprob: -7.875385761260986
    3. '(skip' → logprob: -12.625386238098145
    4. '   ' → logprob: -13.625386238098145
    5. ' ' → logprob: -14.875386238098145
    6. 'zip' → logprob: -15.875386238098145
    7. 'enumer' → logprob: -16.000385284423828
    8. 'chain' → logprob: -16.125385284423828
    9. '```' → logprob: -16.125385284423828
    10. '
' → logprob: -16.375385284423828

Token 315: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.128163257315464e-07
    2. 'odd' → logprob: -15.125
    3. 'Odd' → logprob: -18.375
    4. ')' → logprob: -18.875
    5. '_even' → logprob: -19.125
    6. ' odd' → logprob: -19.375
    7. '_od' → logprob: -19.375
    8. '‌' → logprob: -20.0
    9. '```' → logprob: -20.0
    10. '_trip' → logprob: -20.25

Token 316: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.05212622135877609
    2. 'trip' → logprob: -3.052126169204712
    3. '_' → logprob: -5.677126407623291
    4. '_trip' → logprob: -9.302125930786133
    5. 'Odd' → logprob: -12.052125930786133
    6. 'skip' → logprob: -12.177125930786133
    7. 'od' → logprob: -13.177125930786133
    8. '```' → logprob: -13.177125930786133
    9. ' odd' → logprob: -13.802125930786133
    10. 'quad' → logprob: -15.552125930786133

Token 317: '_trip' (ID: 154353)
  Prédit: '_trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trip' → logprob: -0.002809748286381364
    2. 'trip' → logprob: -5.877809524536133
    3. ' trip' → logprob: -12.502809524536133
    4. 'skip' → logprob: -14.627809524536133
    5. '```' → logprob: -15.627809524536133
    6. '_tri' → logprob: -16.127809524536133
    7. '_skip' → logprob: -16.252809524536133
    8. 'Trip' → logprob: -16.502809524536133
    9. ')' → logprob: -16.627809524536133
    10. '
' → logprob: -17.002809524536133

Token 318: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.00036156410351395607
    2. 'let' → logprob: -8.125361442565918
    3. 'ets' → logprob: -9.750361442565918
    4. 'ts' → logprob: -13.125361442565918
    5. 'plets' → logprob: -13.750361442565918
    6. 'les' → logprob: -14.000361442565918
    7. 'l' → logprob: -14.250361442565918
    8. 's' → logprob: -14.625361442565918
    9. '```' → logprob: -14.625361442565918
    10. '(' → logprob: -15.000361442565918

Token 319: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002239708323031664
    2. '())' → logprob: -6.50223970413208
    3. '   ' → logprob: -8.127240180969238
    4. ')
' → logprob: -8.252240180969238
    5. '()' → logprob: -8.877240180969238
    6. ' )' → logprob: -10.752240180969238
    7. 'if' → logprob: -11.877240180969238
    8. ' if' → logprob: -12.752240180969238
    9. '))' → logprob: -13.002240180969238
    10. '())
' → logprob: -13.002240180969238

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1871175765991211
    2. ' return' → logprob: -2.562117576599121
    3. '
' → logprob: -2.687117576599121
    4. 'return' → logprob: -3.687117576599121
    5. ')' → logprob: -9.187117576599121
    6. '	return' → logprob: -9.312117576599121
    7. '    
' → logprob: -10.187117576599121
    8. '

' → logprob: -10.187117576599121
    9. '  ' → logprob: -11.062117576599121
    10. ' result' → logprob: -11.187117576599121

Token 321: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34239330887794495
    2. 'return' (adapté à ' return') → logprob: -1.3423932790756226
    3. ' return' → logprob: -3.592393398284912
    4. '
' → logprob: -7.092393398284912
    5. 'result' → logprob: -8.592392921447754
    6. '	return' → logprob: -9.592392921447754
    7. '    
' → logprob: -10.842392921447754
    8. ')' → logprob: -10.842392921447754
    9. ' result' → logprob: -11.342392921447754
    10. '```' → logprob: -11.842392921447754

Token 322: ' (' (ID: 350)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.0005761472275480628
    2. ' (' → logprob: -7.500576019287109
    3. '   ' → logprob: -10.75057601928711
    4. ' ' → logprob: -14.12557601928711
    5. '(Base' → logprob: -15.12557601928711
    6. '
' → logprob: -15.12557601928711
    7. '(BASE' → logprob: -15.62557601928711
    8. '  ' → logprob: -16.25057601928711
    9. '(delta' → logprob: -16.50057601928711
    10. '(abs' → logprob: -16.62557601928711

Token 323: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.02390030212700367
    2. '(base' → logprob: -3.773900270462036
    3. ' base' → logprob: -7.398900508880615
    4. '   ' → logprob: -10.148900032043457
    5. '	base' → logprob: -13.773900032043457
    6. ' (' → logprob: -14.148900032043457
    7. ' ' → logprob: -14.398900032043457
    8. '
' → logprob: -15.273900032043457
    9. '  ' → logprob: -15.898900032043457
    10. '.base' → logprob: -16.023900985717773

Token 324: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.042842283844947815
    2. '-' → logprob: -3.792842388153076
    3. ' +' → logprob: -4.167842388153076
    4. '+' → logprob: -5.542842388153076
    5. ' ' → logprob: -12.792841911315918
    6. ' ' → logprob: -13.917841911315918
    7. '   ' → logprob: -14.292841911315918
    8. '-d' → logprob: -14.917841911315918
    9. '  ' → logprob: -16.917842864990234
    10. ',' → logprob: -16.917842864990234

Token 325: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.014182187616825104
    2. ' delta' → logprob: -4.264182090759277
    3. '(delta' → logprob: -11.639182090759277
    4. '   ' → logprob: -11.889182090759277
    5. ' ' → logprob: -13.514182090759277
    6. ' (' → logprob: -15.139182090759277
    7. '(' → logprob: -15.264182090759277
    8. 'd' → logprob: -15.514182090759277
    9. '
' → logprob: -15.889182090759277
    10. '  ' → logprob: -16.389183044433594

Token 326: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007070713327266276
    2. ')%' → logprob: -7.375707149505615
    3. ' )' → logprob: -9.500706672668457
    4. '+' → logprob: -12.875706672668457
    5. ' +' → logprob: -13.500706672668457
    6. '%' → logprob: -13.875706672668457
    7. '   ' → logprob: -14.125706672668457
    8. '）' → logprob: -18.000707626342773
    9. ' ' → logprob: -18.125707626342773
    10. ' ' → logprob: -18.500707626342773

Token 327: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.061995361000299454
    2. '%' → logprob: -2.811995267868042
    3. ')' → logprob: -11.061995506286621
    4. ' ' → logprob: -12.686995506286621
    5. ' ' → logprob: -12.811995506286621
    6. '   ' → logprob: -12.811995506286621
    7. ' *' → logprob: -14.186995506286621
    8. ')%' → logprob: -14.936995506286621
    9. 'def' → logprob: -14.936995506286621
    10. '%A' → logprob: -14.936995506286621

Token 328: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.15310683415737e-05
    2. ' MOD' → logprob: -10.750021934509277
    3. '998' → logprob: -17.00002098083496
    4. '_MOD' → logprob: -19.50002098083496
    5. '.MOD' → logprob: -20.12502098083496
    6. '   ' → logprob: -20.87502098083496
    7. ' ' → logprob: -21.12502098083496
    8. '(M' → logprob: -21.37502098083496
    9. 'MO' → logprob: -21.50002098083496
    10. '999' → logprob: -22.50002098083496

Token 329: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008259449969045818
    2. 'result' → logprob: -7.125825881958008
    3. ')' → logprob: -12.000825881958008
    4. '#' → logprob: -12.750825881958008
    5. 'output' → logprob: -12.750825881958008
    6. 'answer' → logprob: -13.125825881958008
    7. 'for' → logprob: -13.250825881958008
    8. ' print' → logprob: -13.500825881958008
    9. '```' → logprob: -14.250825881958008
    10. '
' → logprob: -14.250825881958008

Token 330: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000693016336299479
    2. 'result' → logprob: -8.000693321228027
    3. 'for' → logprob: -8.000693321228027
    4. 'n' → logprob: -12.125693321228027
    5. 'F' → logprob: -12.250693321228027
    6. 'answer' → logprob: -12.250693321228027
    7. '```' → logprob: -12.875693321228027
    8. 'if' → logprob: -14.250693321228027
    9. 'output' → logprob: -14.375693321228027
    10. ' print' → logprob: -14.500693321228027

Token 331: ' recursive' (ID: 66711)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.037758104503154755
    2. 'main' → logprob: -3.9127581119537354
    3. 'ex' → logprob: -4.162757873535156
    4. ' ex' → logprob: -7.287757873535156
    5. '_ex' → logprob: -8.287757873535156
    6. ' solve' → logprob: -8.662757873535156
    7. '__' → logprob: -8.787757873535156
    8. 'solve' → logprob: -9.662757873535156
    9. ' solution' → logprob: -10.287757873535156
    10. '_' → logprob: -10.537757873535156

Token 332: '_lazy' (ID: 114691)
  Prédit: '_ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.7477067708969116
    2. '_factor' → logprob: -1.7477067708969116
    3. '_sum' → logprob: -1.8727067708969116
    4. '_function' → logprob: -2.497706890106201
    5. '_' → logprob: -3.372706890106201
    6. '_count' → logprob: -3.747706890106201
    7. '(n' → logprob: -4.372706890106201
    8. '_depth' → logprob: -4.622706890106201
    9. '_m' → logprob: -5.122706890106201
    10. '_call' → logprob: -6.122706890106201

Token 333: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.6177433729171753
    2. '(n' → logprob: -1.8677433729171753
    3. '_f' → logprob: -3.117743492126465
    4. '(lambda' → logprob: -3.242743492126465
    5. '_sum' → logprob: -3.492743492126465
    6. '(' → logprob: -3.492743492126465
    7. '_eval' → logprob: -3.617743492126465
    8. '_factor' → logprob: -4.242743492126465
    9. '_function' → logprob: -4.367743492126465
    10. '(f' → logprob: -4.617743492126465

Token 334: 'valuation' (ID: 24207)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8679541945457458
    2. 'valuate' → logprob: -0.9929541945457458
    3. 'x' → logprob: -1.6179542541503906
    4. 'valuator' → logprob: -5.367954254150391
    5. 'valuation' → logprob: -5.492954254150391
    6. 'xp' → logprob: -6.242954254150391
    7. 'num' → logprob: -8.74295425415039
    8. 'ager' → logprob: -8.99295425415039
    9. 'xt' → logprob: -9.11795425415039
    10. 'ngine' → logprob: -9.61795425415039

Token 335: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003361769951879978
    2. '(f' → logprob: -6.878361701965332
    3. '(depth' → logprob: -7.253361701965332
    4. '(' → logprob: -7.378361701965332
    5. '():' → logprob: -8.253361701965332
    6. '(i' → logprob: -9.128361701965332
    7. ' (' → logprob: -9.378361701965332
    8. '(func' → logprob: -9.503361701965332
    9. '(lst' → logprob: -9.503361701965332
    10. '(k' → logprob: -9.878361701965332

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007327937055379152
    2. ',m' → logprob: -7.625732898712158
    3. ' ,' → logprob: -9.000732421875
    4. ',n' → logprob: -9.875732421875
    5. 'm' → logprob: -10.375732421875
    6. '):
' → logprob: -11.625732421875
    7. ',k' → logprob: -11.875732421875
    8. '):' → logprob: -12.000732421875
    9. 'n' → logprob: -12.250732421875
    10. '   ' → logprob: -13.500732421875

Token 337: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020663689821958542
    2. ' m' → logprob: -3.8956637382507324
    3. 'k' → logprob: -9.770663261413574
    4. 'n' → logprob: -11.395663261413574
    5. 'def' → logprob: -11.395663261413574
    6. '   ' → logprob: -11.520663261413574
    7. ' ' → logprob: -12.145663261413574
    8. ')' → logprob: -12.895663261413574
    9. ' k' → logprob: -13.145663261413574
    10. 'mod' → logprob: -13.583163261413574

Token 338: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0111380098387599
    2. ',' → logprob: -4.636137962341309
    3. '):
' → logprob: -6.636137962341309
    4. ',n' → logprob: -10.761137962341309
    5. '   ' → logprob: -11.136137962341309
    6. ')' → logprob: -11.386137962341309
    7. ':' → logprob: -11.636137962341309
    8. '(n' → logprob: -11.886137962341309
    9. ' ):' → logprob: -13.011137962341309
    10. '):
' → logprob: -13.761137962341309

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14363932609558105
    2. ' if' → logprob: -2.018639326095581
    3. 'if' → logprob: -7.14363956451416
    4. ' def' → logprob: -9.64363956451416
    5. 'def' → logprob: -9.89363956451416
    6. ' result' → logprob: -10.76863956451416
    7. ' return' → logprob: -11.39363956451416
    8. ' for' → logprob: -12.01863956451416
    9. '```' → logprob: -12.01863956451416
    10. ' stack' → logprob: -12.89363956451416

Token 340: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8527024984359741
    2. '   ' → logprob: -1.2277024984359741
    3. ' if' → logprob: -1.3527024984359741
    4. 'def' → logprob: -5.352702617645264
    5. 'result' → logprob: -5.602702617645264
    6. 'cache' → logprob: -5.852702617645264
    7. ' result' → logprob: -6.102702617645264
    8. ' res' → logprob: -6.352702617645264
    9. ' cache' → logprob: -6.602702617645264
    10. 'res' → logprob: -6.602702617645264

Token 341: ' exotic' (ID: 55332)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.2685602307319641
    2. '(ex' → logprob: -1.5185601711273193
    3. ' (' → logprob: -5.143560409545898
    4. ' exotic' → logprob: -5.143560409545898
    5. 'sum' → logprob: -7.143560409545898
    6. ' ex' → logprob: -7.268560409545898
    7. '(' → logprob: -7.518560409545898
    8. '(n' → logprob: -7.768560409545898
    9. '(sum' → logprob: -7.893560409545898
    10. ' sum' → logprob: -8.268560409545898

Token 342: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2664456789934775e-06
    2. 'aggregate' → logprob: -13.875000953674316
    3. '_ex' → logprob: -15.250000953674316
    4. '.aggregate' → logprob: -18.125001907348633
    5. '\' → logprob: -19.125001907348633
    6. '```' → logprob: -19.500001907348633
    7. '‌' → logprob: -19.625001907348633
    8. '_ag' → logprob: -20.125001907348633
    9. 'ex' → logprob: -20.250001907348633
    10. '_recursive' → logprob: -20.625001907348633

Token 343: 'aggregate' (ID: 77600)
  Prédit: 'aggregate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aggregate' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.37500286102295
    3. '.aggregate' → logprob: -14.87500286102295
    4. ' aggregate' → logprob: -15.00000286102295
    5. 'aggreg' → logprob: -15.87500286102295
    6. 'ex' → logprob: -17.250001907348633
    7. 'Aggregate' → logprob: -17.750001907348633
    8. 'agg' → logprob: -18.750001907348633
    9. 'ag' → logprob: -19.000001907348633
    10. 'aggregation' → logprob: -19.875001907348633

Token 344: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.750004768371582
    3. ' (' → logprob: -13.875004768371582
    4. '
' → logprob: -14.875004768371582
    5. '<|end|>' → logprob: -14.875004768371582
    6. 'n' → logprob: -15.750004768371582
    7. '```' → logprob: -16.7500057220459
    8. '(
' → logprob: -17.0000057220459
    9. '

' → logprob: -17.5000057220459
    10. ' ' → logprob: -17.7500057220459

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006113647948950529
    2. ' ,' → logprob: -5.381113529205322
    3. ',m' → logprob: -6.756113529205322
    4. '+' → logprob: -8.75611400604248
    5. '   ' → logprob: -9.38111400604248
    6. '-' → logprob: -9.88111400604248
    7. ' +' → logprob: -11.00611400604248
    8. ' ' → logprob: -12.00611400604248
    9. ' -' → logprob: -12.63111400604248
    10. 'm' → logprob: -13.50611400604248

Token 346: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006717386189848185
    2. ' m' → logprob: -5.006717205047607
    3. '   ' → logprob: -14.006717681884766
    4. ')' → logprob: -15.006717681884766
    5. '    ' → logprob: -15.006717681884766
    6. ' ' → logprob: -15.131717681884766
    7. '3' → logprob: -16.381717681884766
    8. '  ' → logprob: -16.881717681884766
    9. '2' → logprob: -17.256717681884766
    10. '
' → logprob: -17.381717681884766

Token 347: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032354547875002027
    2. '   ' → logprob: -8.625323295593262
    3. ' )' → logprob: -9.375323295593262
    4. ',' → logprob: -10.375323295593262
    5. ')
' → logprob: -11.500323295593262
    6. '))' → logprob: -11.875323295593262
    7. ' ' → logprob: -12.875323295593262
    8. ')))' → logprob: -14.000323295593262
    9. '),' → logprob: -14.375323295593262
    10. ')return' → logprob: -14.500323295593262

Token 348: 'print' (ID: 1598)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.606756865978241
    2. ')' → logprob: -0.981756865978241
    3. 'F' → logprob: -3.2317569255828857
    4. '<|end|>' → logprob: -3.6067569255828857
    5. ']' → logprob: -4.856756687164307
    6. '#' → logprob: -6.606756687164307
    7. '(' → logprob: -7.106756687164307
    8. '=' → logprob: -7.356756687164307
    9. '<|end|>' → logprob: -7.481756687164307
    10. ',' → logprob: -7.856756687164307

Token 349: '(rec' (ID: 67620)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2025514394044876
    2. '(rec' → logprob: -1.7025514841079712
    3. '('' → logprob: -7.202551364898682
    4. '("("' → logprob: -8.70255184173584
    5. '()' → logprob: -9.95255184173584
    6. '_recursive' → logprob: -10.07755184173584
    7. 'recursive' → logprob: -10.32755184173584
    8. '(
' → logprob: -10.70255184173584
    9. '(print' → logprob: -11.70255184173584
    10. '("' → logprob: -11.70255184173584

Token 350: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.0006992113194428384
    2. 'urs' → logprob: -7.375699043273926
    3. 'usive' → logprob: -10.250699043273926
    4. '(' → logprob: -11.750699043273926
    5. 'ur' → logprob: -11.750699043273926
    6. 'ursion' → logprob: -12.125699043273926
    7. 'urse' → logprob: -12.375699043273926
    8. '_' → logprob: -12.750699043273926
    9. 'usr' → logprob: -13.125699043273926
    10. '```' → logprob: -14.000699043273926

Token 351: '_lazy' (ID: 114691)
  Prédit: '_lazy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lazy' → logprob: -3.128163257315464e-07
    2. 'lazy' → logprob: -16.25
    3. '_la' → logprob: -16.75
    4. '_l' → logprob: -17.375
    5. '_' → logprob: -18.0
    6. '_recursive' → logprob: -18.375
    7. ' lazy' → logprob: -19.75
    8. 'Lazy' → logprob: -20.125
    9. ' _' → logprob: -20.375
    10. ' Lazy' → logprob: -20.375

Token 352: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.00045426786527968943
    2. 'evaluation' → logprob: -7.875454425811768
    3. 'ation' → logprob: -9.75045394897461
    4. 'e' → logprob: -11.87545394897461
    5. '_' → logprob: -12.62545394897461
    6. '_eval' → logprob: -12.87545394897461
    7. 'valuation' → logprob: -13.50045394897461
    8. 'evaluate' → logprob: -15.00045394897461
    9. 'vation' → logprob: -15.25045394897461
    10. 'Evaluation' → logprob: -15.25045394897461

Token 353: 'valuation' (ID: 24207)
  Prédit: 'valuation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuation' → logprob: -0.01626790687441826
    2. 'val' → logprob: -4.766267776489258
    3. 'vation' → logprob: -4.891267776489258
    4. 'valuate' → logprob: -10.266267776489258
    5. 'valu' → logprob: -10.516267776489258
    6. 'v' → logprob: -11.391267776489258
    7. ' valuation' → logprob: -11.516267776489258
    8. 'uation' → logprob: -11.891267776489258
    9. 'Val' → logprob: -12.141267776489258
    10. '```' → logprob: -13.016267776489258

Token 354: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0263474453240633
    2. '(' → logprob: -3.6513473987579346
    3. ' (' → logprob: -10.776347160339355
    4. ')' → logprob: -10.776347160339355
    5. '((' → logprob: -13.276347160339355
    6. '(
' → logprob: -13.776347160339355
    7. '()' → logprob: -13.776347160339355
    8. '(

' → logprob: -14.901347160339355
    9. '())' → logprob: -15.151347160339355
    10. ')(' → logprob: -16.151348114013672

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.792751032160595e-05
    2. ' ,' → logprob: -9.37508773803711
    3. ',m' → logprob: -13.00008773803711
    4. ',
' → logprob: -15.25008773803711
    5. ' ' → logprob: -15.62508773803711
    6. ')' → logprob: -15.62508773803711
    7. '‌,' → logprob: -16.37508773803711
    8. ',n' → logprob: -17.00008773803711
    9. ',

' → logprob: -18.00008773803711
    10. '),' → logprob: -18.12508773803711

Token 356: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023245595395565033
    2. ' m' → logprob: -3.7732455730438232
    3. '    ' → logprob: -16.648244857788086
    4. '   ' → logprob: -16.898244857788086
    5. ' ' → logprob: -17.023244857788086
    6. ')m' → logprob: -17.398244857788086
    7. ')' → logprob: -17.898244857788086
    8. '	m' → logprob: -18.398244857788086
    9. '  ' → logprob: -18.523244857788086
    10. ' ' → logprob: -19.773244857788086

Token 357: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023246990516781807
    2. ')' → logprob: -3.773247003555298
    3. ')))' → logprob: -14.273246765136719
    4. '()))' → logprob: -15.148246765136719
    5. '))
' → logprob: -15.148246765136719
    6. '())' → logprob: -15.398246765136719
    7. '()' → logprob: -16.39824676513672
    8. ')
' → logprob: -18.02324676513672
    9. ' ))' → logprob: -18.14824676513672
    10. '),' → logprob: -18.77324676513672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 355
Tokens correctement prédits (1ère position, stricte): 123
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 286
Précision stricte (1ère position): 34.65%
Précision adaptée (1ère position): 36.34%
Précision (top 10): 80.56%
================================================================================
