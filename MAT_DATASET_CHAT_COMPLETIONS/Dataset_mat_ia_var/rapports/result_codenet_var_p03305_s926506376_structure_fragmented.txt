================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
import sys

def read_input():
    return sys.stdin.readline()

def parse_first_line(line):
    return map(int, line.split())

def create_empty_edges(n):
    return ([[] for _ in range(n)], [[] for _ in range(n)])

def encode_edge(cost, v):
    return cost * (10 ** 6) + v

def decode_edge(e):
    return e // (10 ** 6), e % (10 ** 6)

def add_bidirectional_edge(edge, u, v, cost):
    edge[u].append(encode_edge(cost, v))
    edge[v].append(encode_edge(cost, u))

def process_edges_input(edge1, edge2, n, m):
    for _ in range(m):
        u, v, a, b = map(int, read_input().split())
        add_bidirectional_edge(edge1, u - 1, v - 1, a)
        add_bidirectional_edge(edge2, u - 1, v - 1, b)

def initialize_dijkstra(n, s):
    d = [float("inf")] * n
    used = [True] * n
    d[s] = 0
    used[s] = False
    return d, used

def push_initial_edges_to_heap(edge, s, edgelist):
    for e in edge[s]:
        heapq.heappush(edgelist, e)

def process_adjacent_edges(edge, minedge_v, edgelist, used, minedge_cost):
    for e in edge[minedge_v]:
        e_cost, e_v = decode_edge(e)
        if used[e_v]:
            heapq.heappush(edgelist, encode_edge(e_cost + minedge_cost, e_v))

def dijkstra_heap(edge, s, n):
    d, used = initialize_dijkstra(n, s)
    edgelist = []
    push_initial_edges_to_heap(edge, s, edgelist)
    while edgelist:
        minedge = heapq.heappop(edgelist)
        minedge_cost, minedge_v = decode_edge(minedge)
        if not used[minedge_v]:
            continue
        d[minedge_v] = minedge_cost
        used[minedge_v] = False
        process_adjacent_edges(edge, minedge_v, edgelist, used, minedge_cost)
    return d

def sum_distances(d1, d2, n):
    return [d1[i] + d2[i] for i in range(n)]

def update_min_right_to_left(d, n):
    for i in range(n-1):
        d[-i-2] = min(d[-i-2], d[-i-1])

def print_results(d):
    for dd in d:
        print(10 ** 15 - dd)

def main():
    input_line = read_input()
    n, m, s, t = parse_first_line(input_line)
    edge1, edge2 = create_empty_edges(n)
    process_edges_input(edge1, edge2, n, m)
    d1 = dijkstra_heap(edge1, s - 1, n)
    d2 = dijkstra_heap(edge2, t - 1, n)
    d = sum_distances(d1, d2, n)
    update_min_right_to_left(d, n)
    print_results(d)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -11.250060081481934
    3. '.\' → logprob: -11.250060081481934
    4. '.
' → logprob: -11.875060081481934
    5. '.​' → logprob: -11.875060081481934
    6. '."""' → logprob: -12.500060081481934
    7. '```' → logprob: -12.750060081481934
    8. '\' → logprob: -12.875060081481934
    9. ' .' → logprob: -13.250060081481934
    10. '.

' → logprob: -13.500060081481934

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020509003661572933
    2. '\' → logprob: -9.500205039978027
    3. '.

' → logprob: -10.875205039978027
    4. '(' → logprob: -11.000205039978027
    5. '.
' → logprob: -11.000205039978027
    6. '```' → logprob: -11.250205039978027
    7. '<|end|>' → logprob: -11.750205039978027
    8. '

' → logprob: -11.750205039978027
    9. '.\' → logprob: -11.750205039978027
    10. '.

' → logprob: -12.000205039978027

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13629791140556335
    2. ' collections' → logprob: -3.1362979412078857
    3. ' math' → logprob: -3.1362979412078857
    4. ' itertools' → logprob: -3.6362979412078857
    5. ' os' → logprob: -5.136297702789307
    6. ' threading' → logprob: -5.511297702789307
    7. 'sys' → logprob: -6.386297702789307
    8. 'collections' → logprob: -7.136297702789307
    9. ' queue' → logprob: -7.261297702789307
    10. ' ' → logprob: -8.136298179626465

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3858225643634796
    2. '\n' → logprob: -1.6358225345611572
    3. '\' → logprob: -2.2608225345611572
    4. '
' → logprob: -5.385822772979736
    5. '```' → logprob: -5.510822772979736
    6. '<|end|>' → logprob: -5.635822772979736
    7. 'newline' → logprob: -5.760822772979736
    8. '[' → logprob: -6.635822772979736
    9. '<|end|>' → logprob: -6.760822772979736
    10. '.readline' → logprob: -7.010822772979736

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005488567985594273
    2. '\' → logprob: -6.380488395690918
    3. 'def' → logprob: -6.505488395690918
    4. '```' → logprob: -7.505488395690918
    5. '.
' → logprob: -8.380488395690918
    6. '\n' → logprob: -8.755488395690918
    7. '[' → logprob: -8.880488395690918
    8. 'data' → logprob: -9.005488395690918
    9. '=' → logprob: -9.005488395690918
    10. '`' → logprob: -9.130488395690918

Token 8: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0012067806674167514
    2. ' ' → logprob: -8.251206398010254
    3. ' find' → logprob: -8.501206398010254
    4. ' a' → logprob: -8.876206398010254
    5. ' heap' → logprob: -9.126206398010254
    6. ' process' → logprob: -9.376206398010254
    7. ' space' → logprob: -10.001206398010254
    8. '_' → logprob: -10.126206398010254
    9. ' he' → logprob: -10.376206398010254
    10. ' solve' → logprob: -10.376206398010254

Token 9: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7303492426872253
    2. '_line' → logprob: -0.9803492426872253
    3. '(' → logprob: -2.10534930229187
    4. '():' → logprob: -5.230349063873291
    5. '):' → logprob: -5.730349063873291
    6. '_input' → logprob: -5.980349063873291
    7. 'line' → logprob: -5.980349063873291
    8. '_data' → logprob: -6.730349063873291
    9. '_token' → logprob: -6.980349063873291
    10. '_file' → logprob: -6.980349063873291

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025841647759079933
    2. '_' → logprob: -4.40084171295166
    3. '():' → logprob: -4.52584171295166
    4. '):' → logprob: -7.77584171295166
    5. ' (' → logprob: -7.90084171295166
    6. '(_' → logprob: -8.27584171295166
    7. '(:' → logprob: -8.27584171295166
    8. ':' → logprob: -8.90084171295166
    9. '(_:' → logprob: -8.90084171295166
    10. '("("' → logprob: -9.40084171295166

Token 11: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5929046273231506
    2. '   ' → logprob: -1.2179045677185059
    3. '()' → logprob: -3.217904567718506
    4. ':' → logprob: -4.092904567718506
    5. '\' → logprob: -4.342904567718506
    6. '(' → logprob: -4.342904567718506
    7. '):' → logprob: -4.592904567718506
    8. '<|end|>' → logprob: -4.592904567718506
    9. '\n' → logprob: -4.842904567718506
    10. '    ' → logprob: -5.467904567718506

Token 12: ' return' (ID: 622)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9486360549926758
    2. '   ' → logprob: -1.6986360549926758
    3. ' data' → logprob: -1.6986360549926758
    4. ' lines' → logprob: -2.073636054992676
    5. ' return' → logprob: -2.573636054992676
    6. 'data' → logprob: -3.448636054992676
    7. 'return' (adapté à ' return') → logprob: -5.573636054992676
    8. 'line' → logprob: -5.573636054992676
    9. ' n' → logprob: -5.948636054992676
    10. ' input' → logprob: -6.948636054992676

Token 13: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25286194682121277
    2. ' list' → logprob: -1.8778619766235352
    3. 'list' → logprob: -3.502861976623535
    4. 'sys' → logprob: -3.877861976623535
    5. ' ' → logprob: -4.877861976623535
    6. ' map' → logprob: -5.127861976623535
    7. '[' → logprob: -6.377861976623535
    8. ' []' → logprob: -6.502861976623535
    9. 'map' → logprob: -7.127861976623535
    10. '[]' → logprob: -7.252861976623535

Token 14: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00141440040897578
    2. '.' → logprob: -6.8764142990112305
    3. '.argv' → logprob: -8.62641429901123
    4. '.stdout' → logprob: -8.75141429901123
    5. '.std' → logprob: -10.25141429901123
    6. '.readline' → logprob: -12.25141429901123
    7. ' .' → logprob: -14.00141429901123
    8. '.st' → logprob: -14.00141429901123
    9. 'stdin' → logprob: -14.62641429901123
    10. '.stderr' → logprob: -14.75141429901123

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034102473873645067
    2. '.' → logprob: -6.628410339355469
    3. '.readlines' → logprob: -6.753410339355469
    4. '.read' → logprob: -7.003410339355469
    5. '.buffer' → logprob: -12.378410339355469
    6. '```' → logprob: -14.628410339355469
    7. ' .' → logprob: -14.878410339355469
    8. 'read' → logprob: -14.878410339355469
    9. '.Read' → logprob: -15.128410339355469
    10. ')' → logprob: -15.378410339355469

Token 16: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02642105519771576
    2. '().' → logprob: -3.651421070098877
    3. '()

' → logprob: -10.526420593261719
    4. '()
' → logprob: -10.901420593261719
    5. '()(' → logprob: -10.901420593261719
    6. '(' → logprob: -10.901420593261719
    7. ' ()' → logprob: -11.026420593261719
    8. '())' → logprob: -12.026420593261719
    9. ')' → logprob: -12.276420593261719
    10. ' ' → logprob: -13.151420593261719

Token 17: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009348372928798199
    2. '
' → logprob: -5.134348392486572
    3. '()' → logprob: -6.259348392486572
    4. '\' → logprob: -8.259347915649414
    5. '(' → logprob: -8.509347915649414
    6. '

' → logprob: -8.759347915649414
    7. '\n' → logprob: -8.884347915649414
    8. '  
' → logprob: -9.259347915649414
    9. '```' → logprob: -9.259347915649414
    10. '    
' → logprob: -9.509347915649414

Token 18: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06707848608493805
    2. ' ' → logprob: -3.8170785903930664
    3. ' process' → logprob: -4.067078590393066
    4. ' heap' → logprob: -4.692078590393066
    5. ' add' → logprob: -5.317078590393066
    6. ' parse' → logprob: -5.817078590393066
    7. '_' → logprob: -6.692078590393066
    8. ' push' → logprob: -7.067078590393066
    9. ' solve' → logprob: -7.067078590393066
    10. ' insert' → logprob: -7.192078590393066

Token 19: '_first' (ID: 29347)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.3935786783695221
    2. '(' → logprob: -1.6435786485671997
    3. '_input' → logprob: -2.3935787677764893
    4. '_' → logprob: -3.6435787677764893
    5. '(line' → logprob: -5.26857852935791
    6. '_token' → logprob: -5.51857852935791
    7. '_data' → logprob: -6.89357852935791
    8. '_tokens' → logprob: -7.01857852935791
    9. ')' → logprob: -7.39357852935791
    10. 'line' → logprob: -7.89357852935791

Token 20: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.022811291739344597
    2. '_' → logprob: -4.147811412811279
    3. '_token' → logprob: -5.022811412811279
    4. '_word' → logprob: -10.147810935974121
    5. '_key' → logprob: -10.897810935974121
    6. '_value' → logprob: -11.022810935974121
    7. ' _' → logprob: -11.147810935974121
    8. '_name' → logprob: -11.647810935974121
    9. '_number' → logprob: -11.647810935974121
    10. '_input' → logprob: -12.022810935974121

Token 21: '(line' (ID: 18178)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008723890408873558
    2. '(' → logprob: -4.883723735809326
    3. ' ():' → logprob: -7.383723735809326
    4. '()' → logprob: -8.008724212646484
    5. '):' → logprob: -9.758724212646484
    6. ' (' → logprob: -10.883724212646484
    7. ':' → logprob: -11.008724212646484
    8. '("("' → logprob: -11.133724212646484
    9. ' ()' → logprob: -11.758724212646484
    10. '(line' → logprob: -12.133724212646484

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009936298010870814
    2. ' ):' → logprob: -7.500993728637695
    3. '):
' → logprob: -8.250993728637695
    4. ')' → logprob: -9.000993728637695
    5. ':' → logprob: -11.000993728637695
    6. ',' → logprob: -11.125993728637695
    7. '   ' → logprob: -11.875993728637695
    8. '):
' → logprob: -12.125993728637695
    9. ' ' → logprob: -12.875993728637695
    10. '():' → logprob: -13.250993728637695

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050680506974458694
    2. ' return' → logprob: -3.17568039894104
    3. ' tokens' → logprob: -5.300680637359619
    4. 'tokens' → logprob: -7.050680637359619
    5. ' line' → logprob: -7.425680637359619
    6. 'return' → logprob: -7.550680637359619
    7. '    ' → logprob: -7.925680637359619
    8. ' parts' → logprob: -9.300680160522461
    9. ' split' → logprob: -10.050680160522461
    10. '_tokens' → logprob: -10.675680160522461

Token 24: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6838861107826233
    2. ' line' → logprob: -1.8088860511779785
    3. 'return' (adapté à ' return') → logprob: -2.0588860511779785
    4. ' parts' → logprob: -2.3088860511779785
    5. '   ' → logprob: -3.6838860511779785
    6. ' tokens' → logprob: -3.6838860511779785
    7. 'line' → logprob: -3.8088860511779785
    8. 'tokens' → logprob: -4.0588860511779785
    9. 'parts' → logprob: -5.0588860511779785
    10. 'int' → logprob: -5.5588860511779785

Token 25: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4519503116607666
    2. ' int' → logprob: -1.7019503116607666
    3. ' line' → logprob: -2.7019503116607666
    4. ' map' → logprob: -2.8269503116607666
    5. ' tuple' → logprob: -3.8269503116607666
    6. 'int' → logprob: -4.7019500732421875
    7. 'list' → logprob: -4.8269500732421875
    8. '[int' → logprob: -5.0769500732421875
    9. ' [' → logprob: -5.3269500732421875
    10. 'line' → logprob: -6.0769500732421875

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022173458710312843
    2. '(' → logprob: -6.1272172927856445
    3. '(str' → logprob: -10.502217292785645
    4. 'int' → logprob: -13.127217292785645
    5. '=int' → logprob: -14.377217292785645
    6. '(lambda' → logprob: -14.377217292785645
    7. '<int' → logprob: -14.627217292785645
    8. ',int' → logprob: -14.877217292785645
    9. ' (' → logprob: -15.752217292785645
    10. '[int' → logprob: -15.752217292785645

Token 27: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008974037133157253
    2. '(' → logprob: -5.008974075317383
    3. ')' → logprob: -6.258974075317383
    4. ',line' → logprob: -8.508974075317383
    5. ' line' → logprob: -10.008974075317383
    6. ' (' → logprob: -10.258974075317383
    7. ',' → logprob: -10.758974075317383
    8. '	line' → logprob: -11.633974075317383
    9. '#line' → logprob: -11.758974075317383
    10. '=line' → logprob: -11.883974075317383

Token 28: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0052386182360351086
    2. 'line' → logprob: -5.2552385330200195
    3. '	line' → logprob: -12.75523853302002
    4. ')' → logprob: -13.75523853302002
    5. '(line' → logprob: -14.88023853302002
    6. ',line' → logprob: -15.88023853302002
    7. '[line' → logprob: -16.005239486694336
    8. '#line' → logprob: -16.005239486694336
    9. '=line' → logprob: -16.130239486694336
    10. ' )' → logprob: -16.630239486694336

Token 29: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.11885255575180054
    2. '().' → logprob: -2.3688526153564453
    3. '.split' → logprob: -4.493852615356445
    4. '.' → logprob: -4.993852615356445
    5. '.rstrip' → logprob: -7.993852615356445
    6. ' .' → logprob: -8.868852615356445
    7. ').' → logprob: -11.493852615356445
    8. 'strip' → logprob: -11.618852615356445
    9. ' ().' → logprob: -12.368852615356445
    10. ')' → logprob: -12.618852615356445

Token 30: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11990053206682205
    2. '())' → logprob: -2.2449004650115967
    3. '()' → logprob: -5.619900703430176
    4. '(' → logprob: -5.744900703430176
    5. '("("' → logprob: -9.494900703430176
    6. ')' → logprob: -10.244900703430176
    7. '(','' → logprob: -10.619900703430176
    8. '("' → logprob: -10.744900703430176
    9. '()))' → logprob: -11.119900703430176
    10. '(()' → logprob: -11.244900703430176

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024163322523236275
    2. '
' → logprob: -4.024163246154785
    3. '

' → logprob: -5.274163246154785
    4. '\' → logprob: -8.149163246154785
    5. 'class' → logprob: -9.024163246154785
    6. '```' → logprob: -9.274163246154785
    7. '
' → logprob: -9.899163246154785
    8. ' 

' → logprob: -10.149163246154785
    9. '\n' → logprob: -10.399163246154785
    10. '<|end|>' → logprob: -10.399163246154785

Token 32: ' create' (ID: 2501)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.7054791450500488
    2. ' process' → logprob: -1.5804791450500488
    3. ' main' → logprob: -2.330479145050049
    4. 'parse' → logprob: -2.705479145050049
    5. ' read' → logprob: -3.330479145050049
    6. ' find' → logprob: -3.705479145050049
    7. 'process' → logprob: -4.330479145050049
    8. ' solve' → logprob: -4.330479145050049
    9. ' def' → logprob: -4.455479145050049
    10. ' build' → logprob: -4.580479145050049

Token 33: '_empty' (ID: 35051)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.0966748371720314
    2. '_' → logprob: -3.096674919128418
    3. '_p' → logprob: -3.221674919128418
    4. '_priority' → logprob: -5.846674919128418
    5. '_min' → logprob: -6.721674919128418
    6. 'heap' → logprob: -6.971674919128418
    7. '_max' → logprob: -7.846674919128418
    8. '_queue' → logprob: -8.096674919128418
    9. ' heap' → logprob: -8.221674919128418
    10. '(heap' → logprob: -8.221674919128418

Token 34: '_edges' (ID: 68870)
  Prédit: '_heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.17505303025245667
    2. '_' → logprob: -1.9250530004501343
    3. '_p' → logprob: -5.300053119659424
    4. 'heap' → logprob: -5.425053119659424
    5. '_list' → logprob: -6.550053119659424
    6. '_he' → logprob: -6.550053119659424
    7. '_priority' → logprob: -7.675053119659424
    8. '_lists' → logprob: -8.050052642822266
    9. '_dict' → logprob: -8.050052642822266
    10. '_queue' → logprob: -8.175052642822266

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6509822607040405
    2. '(' → logprob: -1.7759822607040405
    3. '_list' → logprob: -1.9009822607040405
    4. '(num' → logprob: -2.65098237991333
    5. '(size' → logprob: -3.02598237991333
    6. '(N' → logprob: -4.77598237991333
    7. '(len' → logprob: -4.90098237991333
    8. '_array' → logprob: -5.15098237991333
    9. '(number' → logprob: -5.40098237991333
    10. ' (' → logprob: -5.77598237991333

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00340359378606081
    2. '):
' → logprob: -6.003403663635254
    3. ')' → logprob: -7.628403663635254
    4. ' ):' → logprob: -7.878403663635254
    5. '_' → logprob: -11.253403663635254
    6. ',' → logprob: -11.503403663635254
    7. '):
' → logprob: -11.628403663635254
    8. '_list' → logprob: -12.128403663635254
    9. '_edges' → logprob: -12.503403663635254
    10. '_nodes' → logprob: -12.753403663635254

Token 37: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8129984736442566
    2. '   ' → logprob: -1.0629985332489014
    3. ':' → logprob: -3.0629985332489014
    4. ' return' → logprob: -3.4379985332489014
    5. ' []' → logprob: -3.5629985332489014
    6. '[]' → logprob: -3.6879985332489014
    7. ' :' → logprob: -4.312998294830322
    8. '):
' → logprob: -4.312998294830322
    9. ' [[]' → logprob: -4.437998294830322
    10. '=[]' → logprob: -4.937998294830322

Token 38: ' return' (ID: 622)
  Prédit: ' [[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.22282831370830536
    2. ' [' → logprob: -1.9728282690048218
    3. ' return' → logprob: -3.2228283882141113
    4. '[' → logprob: -4.472828388214111
    5. ' []' → logprob: -5.722828388214111
    6. 'return' (adapté à ' return') → logprob: -5.847828388214111
    7. '[]' → logprob: -6.597828388214111
    8. ' {' → logprob: -6.972828388214111
    9. '   ' → logprob: -7.597828388214111
    10. ' {}' → logprob: -8.972827911376953

Token 39: ' ([' (ID: 31338)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033374905586242676
    2. ' [[]' → logprob: -3.908374786376953
    3. '{' → logprob: -4.408374786376953
    4. '[]' → logprob: -7.783374786376953
    5. 'default' → logprob: -9.533374786376953
    6. ' {' → logprob: -10.658374786376953
    7. '[[' → logprob: -10.908374786376953
    8. '[n' → logprob: -11.158374786376953
    9. ' [' → logprob: -11.408374786376953
    10. '[{' → logprob: -12.158374786376953

Token 40: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0018585572252050042
    2. ']' → logprob: -6.751858711242676
    3. ' []' → logprob: -8.126858711242676
    4. '[]
' → logprob: -8.501858711242676
    5. '][]' → logprob: -9.501858711242676
    6. '0' → logprob: -9.876858711242676
    7. '[' → logprob: -10.876858711242676
    8. '[]

' → logprob: -11.376858711242676
    9. 'list' → logprob: -11.501858711242676
    10. 'None' → logprob: -12.376858711242676

Token 41: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10271306335926056
    2. 'for' → logprob: -2.352713108062744
    3. ']' → logprob: -6.227713108062744
    4. ' ' → logprob: -8.477712631225586
    5. ')' → logprob: -8.977712631225586
    6. '()' → logprob: -9.227712631225586
    7. '	for' → logprob: -10.352712631225586
    8. ',' → logprob: -10.602712631225586
    9. '   ' → logprob: -10.852712631225586
    10. ' ]' → logprob: -12.352712631225586

Token 42: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5281755924224854
    2. ' _' → logprob: -0.9031755924224854
    3. ' in' → logprob: -5.653175354003906
    4. '(' → logprob: -8.028175354003906
    5. '_in' → logprob: -8.153175354003906
    6. 'in' → logprob: -8.528175354003906
    7. ' ' → logprob: -8.528175354003906
    8. '_i' → logprob: -8.778175354003906
    9. 'range' → logprob: -9.153175354003906
    10. '_range' → logprob: -9.653175354003906

Token 43: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6363902688026428
    2. ' in' → logprob: -0.7613902688026428
    3. 'range' → logprob: -5.636390209197998
    4. ' ' → logprob: -8.886390686035156
    5. '  ' → logprob: -10.886390686035156
    6. 'i' → logprob: -11.011390686035156
    7. 'n' → logprob: -11.011390686035156
    8. ' range' → logprob: -11.136390686035156
    9. 'import' → logprob: -13.011390686035156
    10. '   ' → logprob: -13.136390686035156

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026319116353988647
    2. ' range' → logprob: -3.6513190269470215
    3. ' ' → logprob: -11.65131950378418
    4. '  ' → logprob: -12.65131950378418
    5. '   ' → logprob: -13.27631950378418
    6. '	range' → logprob: -13.52631950378418
    7. '_' → logprob: -13.77631950378418
    8. '(range' → logprob: -14.52631950378418
    9. '_range' → logprob: -14.65131950378418
    10. '    ' → logprob: -14.90131950378418

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.885492621222511e-05
    2. '(' → logprob: -9.625068664550781
    3. ' (' → logprob: -12.875068664550781
    4. 'n' → logprob: -16.37506866455078
    5. '](' → logprob: -17.75006866455078
    6. ')n' → logprob: -17.87506866455078
    7. ')(' → logprob: -18.00006866455078
    8. ' n' → logprob: -18.50006866455078
    9. ')' → logprob: -18.75006866455078
    10. ']' → logprob: -19.37506866455078

Token 46: ')],' (ID: 60559)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.018193373456597328
    2. ')]' → logprob: -4.268193244934082
    3. ')' → logprob: -6.268193244934082
    4. ')],' → logprob: -6.518193244934082
    5. '])' → logprob: -7.518193244934082
    6. ']' → logprob: -10.768193244934082
    7. ']])' → logprob: -11.018193244934082
    8. ' )' → logprob: -11.018193244934082
    9. '])]' → logprob: -11.018193244934082
    10. ')])
' → logprob: -11.268193244934082

Token 47: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.245580792427063
    2. ' [' → logprob: -1.370580792427063
    3. ' [])' → logprob: -1.870580792427063
    4. ' {})' → logprob: -2.3705806732177734
    5. '[])' → logprob: -2.4955806732177734
    6. '{})' → logprob: -2.9955806732177734
    7. '[]' → logprob: -3.4955806732177734
    8. '{}' → logprob: -4.245580673217773
    9. ' [[]' → logprob: -4.745580673217773
    10. ' []' → logprob: -5.120580673217773

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20970368385314941
    2. 'for' → logprob: -1.7097036838531494
    3. '(n' → logprob: -4.95970344543457
    4. '[n' → logprob: -7.08470344543457
    5. '[' → logprob: -9.33470344543457
    6. ' (' → logprob: -9.45970344543457
    7. ')' → logprob: -9.70970344543457
    8. 'n' → logprob: -9.70970344543457
    9. '(' → logprob: -10.08470344543457
    10. ' [' → logprob: -10.33470344543457

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0340946726500988
    2. ' _' → logprob: -3.4090945720672607
    3. ' range' → logprob: -8.15909481048584
    4. 'range' → logprob: -9.78409481048584
    5. ' in' → logprob: -10.15909481048584
    6. '_range' → logprob: -10.28409481048584
    7. '(range' → logprob: -11.03409481048584
    8. ' (' → logprob: -11.90909481048584
    9. '(n' → logprob: -12.78409481048584
    10. 'n' → logprob: -13.28409481048584

Token 50: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007739362306892872
    2. ' range' → logprob: -4.882739543914795
    3. '(range' → logprob: -9.007739067077637
    4. 'in' → logprob: -12.257739067077637
    5. ' in' → logprob: -12.507739067077637
    6. 'n' → logprob: -14.132739067077637
    7. '_range' → logprob: -14.507739067077637
    8. '	range' → logprob: -14.882739067077637
    9. 'ange' → logprob: -15.507739067077637
    10. '(n' → logprob: -15.632739067077637

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023966670036316
    2. ' range' → logprob: -1.9102396965026855
    3. 'n' → logprob: -11.785239219665527
    4. '(range' → logprob: -11.910239219665527
    5. ' n' → logprob: -15.160239219665527
    6. '	range' → logprob: -15.285239219665527
    7. '(n' → logprob: -15.410239219665527
    8. '_range' → logprob: -15.910239219665527
    9. ')' → logprob: -16.160240173339844
    10. ' ' → logprob: -16.410240173339844

Token 52: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00025430647656321526
    2. 'n' → logprob: -8.62525463104248
    3. ' (' → logprob: -9.87525463104248
    4. '(' → logprob: -10.87525463104248
    5. ' n' → logprob: -13.50025463104248
    6. ')' → logprob: -14.00025463104248
    7. '(s' → logprob: -15.00025463104248
    8. '   ' → logprob: -15.25025463104248
    9. ')n' → logprob: -15.62525463104248
    10. '[n' → logprob: -15.87525463104248

Token 53: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.00419165613129735
    2. '])' → logprob: -6.129191875457764
    3. ')' → logprob: -6.754191875457764
    4. ')]' → logprob: -7.129191875457764
    5. ')],' → logprob: -11.129191398620605
    6. ')])

' → logprob: -11.879191398620605
    7. ')])
' → logprob: -12.129191398620605
    8. ']])' → logprob: -13.004191398620605
    9. '))' → logprob: -13.004191398620605
    10. ']))' → logprob: -13.129191398620605

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3086985945701599
    2. '
' → logprob: -1.6836986541748047
    3. '<|end|>' → logprob: -2.6836986541748047
    4. '

' → logprob: -5.058698654174805
    5. '<|end|>' → logprob: -6.058698654174805
    6. ')' → logprob: -7.183698654174805
    7. '_' → logprob: -7.808698654174805
    8. ' def' → logprob: -7.933698654174805
    9. '```' → logprob: -8.058698654174805
    10. '
' → logprob: -8.808698654174805

Token 55: ' encode' (ID: 31288)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7783244848251343
    2. ' add' → logprob: -0.9033244848251343
    3. 'd' → logprob: -2.403324604034424
    4. 'add' → logprob: -4.153324604034424
    5. ' find' → logprob: -5.278324604034424
    6. ' build' → logprob: -5.403324604034424
    7. ' def' → logprob: -5.528324604034424
    8. ' create' → logprob: -5.653324604034424
    9. ' main' → logprob: -6.528324604034424
    10. 'def' → logprob: -6.528324604034424

Token 56: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.02392718754708767
    2. '_node' → logprob: -4.648927211761475
    3. '_edges' → logprob: -5.523927211761475
    4. '_' → logprob: -5.773927211761475
    5. '(node' → logprob: -6.773927211761475
    6. '(' → logprob: -7.023927211761475
    7. ' edge' → logprob: -7.148927211761475
    8. '(edge' → logprob: -7.148927211761475
    9. 'edge' → logprob: -7.648927211761475
    10. '<|end|>' → logprob: -8.023926734924316

Token 57: '(cost' (ID: 133554)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.10838549584150314
    2. '(' → logprob: -2.4833855628967285
    3. '(a' → logprob: -5.1083855628967285
    4. '(node' → logprob: -5.7333855628967285
    5. '(edge' → logprob: -6.1083855628967285
    6. ' (' → logprob: -6.2333855628967285
    7. '(s' → logprob: -6.9833855628967285
    8. '(from' → logprob: -6.9833855628967285
    9. '(src' → logprob: -7.1083855628967285
    10. '((' → logprob: -7.7333855628967285

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00722204614430666
    2. '):' → logprob: -5.5072221755981445
    3. ')' → logprob: -6.1322221755981445
    4. ' ,' → logprob: -8.507222175598145
    5. 's' → logprob: -8.882222175598145
    6. '_cost' → logprob: -8.882222175598145
    7. '_,' → logprob: -9.632222175598145
    8. '=' → logprob: -10.132222175598145
    9. ' ' → logprob: -10.132222175598145
    10. '1' → logprob: -10.382222175598145

Token 59: ' v' (ID: 323)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.000386357307434
    2. 'to' → logprob: -1.750386357307434
    3. ' node' → logprob: -1.750386357307434
    4. 'u' → logprob: -2.3753862380981445
    5. 'v' → logprob: -3.5003862380981445
    6. ' to' → logprob: -3.8753862380981445
    7. 'vertex' → logprob: -4.0003862380981445
    8. ' u' → logprob: -4.1253862380981445
    9. 'from' → logprob: -4.1253862380981445
    10. 'neighbor' → logprob: -4.2503862380981445

Token 60: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16209574043750763
    2. ',' → logprob: -2.912095785140991
    3. 'al' → logprob: -3.662095785140991
    4. 'er' → logprob: -3.787095785140991
    5. '1' → logprob: -4.287095546722412
    6. '):' → logprob: -4.412095546722412
    7. 'ert' → logprob: -5.162095546722412
    8. '2' → logprob: -5.162095546722412
    9. ',)' → logprob: -6.162095546722412
    10. 'id' → logprob: -6.537095546722412

Token 61: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1418474167585373
    2. '   ' → logprob: -2.6418473720550537
    3. 'return' → logprob: -2.8918473720550537
    4. ' (' → logprob: -6.141847610473633
    5. '    ' → logprob: -7.141847610473633
    6. ' =' → logprob: -7.266847610473633
    7. ' v' → logprob: -8.141847610473633
    8. ' cost' → logprob: -8.391847610473633
    9. ' ' → logprob: -8.641847610473633
    10. 'cost' → logprob: -8.641847610473633

Token 62: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07245028764009476
    2. ' (' → logprob: -3.3224503993988037
    3. 'return' (adapté à ' return') → logprob: -3.8224503993988037
    4. ' f' → logprob: -5.072450160980225
    5. '   ' → logprob: -6.072450160980225
    6. ' cost' → logprob: -6.947450160980225
    7. ' v' → logprob: -7.322450160980225
    8. ' ' → logprob: -7.447450160980225
    9. '    ' → logprob: -7.822450160980225
    10. 'cost' → logprob: -8.447450637817383

Token 63: ' cost' (ID: 3097)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.5360838770866394
    2. ' (' → logprob: -1.4110839366912842
    3. ' cost' → logprob: -2.161083936691284
    4. 'cost' → logprob: -2.911083936691284
    5. '(' → logprob: -7.411083698272705
    6. '(c' → logprob: -7.786083698272705
    7. '(v' → logprob: -8.286084175109863
    8. 'v' → logprob: -9.786084175109863
    9. '   ' → logprob: -10.036084175109863
    10. ' ' → logprob: -11.161084175109863

Token 64: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8785426020622253
    2. '<<' → logprob: -1.3785426616668701
    3. '*' → logprob: -1.5035426616668701
    4. ' <<' → logprob: -2.62854266166687
    5. ',' → logprob: -3.87854266166687
    6. '+' → logprob: -5.253542423248291
    7. ' +' → logprob: -5.378542423248291
    8. '*v' → logprob: -6.128542423248291
    9. ',v' → logprob: -6.628542423248291
    10. '<|end|>' → logprob: -6.878542423248291

Token 65: ' (' (ID: 350)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.25565022230148315
    2. '10' → logprob: -2.005650281906128
    3. '(' → logprob: -3.005650281906128
    4. ' ' → logprob: -3.505650281906128
    5. ' (' → logprob: -4.880650043487549
    6. '(v' → logprob: -5.755650043487549
    7. '1' → logprob: -8.005650520324707
    8. 'v' → logprob: -8.755650520324707
    9. '200' → logprob: -9.380650520324707
    10. '(n' → logprob: -9.505650520324707

Token 66: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10765743255615234
    2. '100' → logprob: -2.4826574325561523
    3. ' ' → logprob: -4.107657432556152
    4. '(' → logprob: -6.982657432556152
    5. ' (' → logprob: -7.357657432556152
    6. '(v' → logprob: -8.357657432556152
    7. 'v' → logprob: -8.857657432556152
    8. '1' → logprob: -8.982657432556152
    9. ' v' → logprob: -11.482657432556152
    10. '(n' → logprob: -12.107657432556152

Token 67: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.8051353096961975
    2. '7' → logprob: -1.1801352500915527
    3. '9' → logprob: -1.4301352500915527
    4. '8' → logprob: -5.305135250091553
    5. '5' → logprob: -6.680135250091553
    6. '**' → logprob: -8.805135726928711
    7. '10' → logprob: -9.555135726928711
    8. '+' → logprob: -12.055135726928711
    9. ' ' → logprob: -12.180135726928711
    10. '_' → logprob: -13.180135726928711

Token 68: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.49463340640068054
    2. '6' → logprob: -1.369633436203003
    3. '7' → logprob: -2.119633436203003
    4. '8' → logprob: -4.619633197784424
    5. '5' → logprob: -5.744633197784424
    6. '10' → logprob: -5.869633197784424
    7. '12' → logprob: -10.369633674621582
    8. '15' → logprob: -12.119633674621582
    9. ' ' → logprob: -12.744633674621582
    10. '11' → logprob: -12.869633674621582

Token 69: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.37544164061546326
    2. '6' → logprob: -1.8754416704177856
    3. '7' → logprob: -2.125441551208496
    4. '8' → logprob: -3.875441551208496
    5. '10' → logprob: -4.500441551208496
    6. '5' → logprob: -4.875441551208496
    7. '12' → logprob: -7.375441551208496
    8. '15' → logprob: -9.000441551208496
    9. '18' → logprob: -10.125441551208496
    10. '11' → logprob: -10.250441551208496

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002879880368709564
    2. ')+' → logprob: -5.877880096435547
    3. ' )' → logprob: -10.002880096435547
    4. '+' → logprob: -10.502880096435547
    5. '0' → logprob: -14.002880096435547
    6. ' +' → logprob: -14.502880096435547
    7. '+)' → logprob: -15.377880096435547
    8. '）' → logprob: -15.877880096435547
    9. '000' → logprob: -16.377880096435547
    10. '),' → logprob: -16.377880096435547

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22545590996742249
    2. ' +' → logprob: -1.6004558801651
    3. ' ' → logprob: -10.225456237792969
    4. ' ' → logprob: -13.600456237792969
    5. '+
' → logprob: -13.725456237792969
    6. '0' → logprob: -13.725456237792969
    7. ' plus' → logprob: -14.225456237792969
    8. ' +
' → logprob: -14.225456237792969
    9. 'v' → logprob: -15.100456237792969
    10. '+k' → logprob: -15.225456237792969

Token 72: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003178071230649948
    2. ' v' → logprob: -5.753178119659424
    3. '(v' → logprob: -14.878177642822266
    4. '	v' → logprob: -18.003177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '_v' → logprob: -19.378177642822266
    7. ' (' → logprob: -20.003177642822266
    8. '   ' → logprob: -20.253177642822266
    9. '?v' → logprob: -20.753177642822266
    10. '$v' → logprob: -20.753177642822266

Token 73: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.488170862197876
    2. 'def' → logprob: -0.988170862197876
    3. '

' → logprob: -5.238170623779297
    4. '<|end|>' → logprob: -5.238170623779297
    5. '
' → logprob: -6.613170623779297
    6. '<|end|>' → logprob: -7.613170623779297
    7. '\n' → logprob: -7.988170623779297
    8. '_' → logprob: -8.113170623779297
    9. '```' → logprob: -8.488170623779297
    10. '\' → logprob: -8.988170623779297

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08960430324077606
    2. '
' → logprob: -2.464604377746582
    3. '

' → logprob: -8.214604377746582
    4. '<|end|>' → logprob: -8.714604377746582
    5. '
' → logprob: -9.339604377746582
    6. ' def' → logprob: -9.589604377746582
    7. '  
' → logprob: -10.964604377746582
    8. '\' → logprob: -11.464604377746582
    9. '```' → logprob: -11.839604377746582
    10. '_def' → logprob: -12.089604377746582

Token 75: ' decode' (ID: 32043)
  Prédit: ' decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decode' → logprob: -0.007642009295523167
    2. ' encode' → logprob: -6.382641792297363
    3. 'decode' → logprob: -6.382641792297363
    4. ' d' → logprob: -7.007641792297363
    5. ' find' → logprob: -7.007641792297363
    6. ' add' → logprob: -7.507641792297363
    7. '_decode' → logprob: -8.132641792297363
    8. ' calculate' → logprob: -8.382641792297363
    9. ' create' → logprob: -8.632641792297363
    10. ' get' → logprob: -8.632641792297363

Token 76: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -2.4987974029500037e-05
    2. '_encoded' → logprob: -11.125024795532227
    3. '_edges' → logprob: -11.750024795532227
    4. '_code' → logprob: -14.500024795532227
    5. '_token' → logprob: -15.125024795532227
    6. 'edge' → logprob: -15.375024795532227
    7. '_' → logprob: -15.375024795532227
    8. '_encode' → logprob: -15.625024795532227
    9. '_cost' → logprob: -15.750024795532227
    10. '_encoding' → logprob: -15.875024795532227

Token 77: '(e' (ID: 3454)
  Prédit: '(encoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(encoded' → logprob: -0.02405591867864132
    2. '(code' → logprob: -4.5240559577941895
    3. '(cost' → logprob: -4.5240559577941895
    4. '(edge' → logprob: -6.6490559577941895
    5. '(value' → logprob: -8.149055480957031
    6. '(' → logprob: -8.524055480957031
    7. '(data' → logprob: -8.774055480957031
    8. '(token' → logprob: -9.149055480957031
    9. 'encoded' → logprob: -11.399055480957031
    10. '(enc' → logprob: -11.899055480957031

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0667639672756195
    2. 'd' → logprob: -3.0667638778686523
    3. '):
' → logprob: -4.691763877868652
    4. 'dge' → logprob: -4.816763877868652
    5. ')' → logprob: -8.066763877868652
    6. 'de' → logprob: -8.941763877868652
    7. 'code' → logprob: -9.816763877868652
    8. '):

' → logprob: -9.941763877868652
    9. 'dg' → logprob: -9.941763877868652
    10. '):
' → logprob: -10.691763877868652

Token 79: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9818520545959473
    2. '   ' → logprob: -1.1068520545959473
    3. 'return' → logprob: -1.7318520545959473
    4. 'cost' → logprob: -2.6068520545959473
    5. ' cost' → logprob: -3.8568520545959473
    6. 'e' → logprob: -4.481852054595947
    7. ' e' → logprob: -5.356852054595947
    8. '(cost' → logprob: -5.481852054595947
    9. ' (' → logprob: -6.606852054595947
    10. '(e' → logprob: -7.231852054595947

Token 80: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.353776752948761
    2. 'e' → logprob: -2.228776693344116
    3. 'cost' → logprob: -2.728776693344116
    4. '(e' → logprob: -2.978776693344116
    5. ' return' → logprob: -3.603776693344116
    6. 'v' → logprob: -3.603776693344116
    7. '   ' → logprob: -4.853776931762695
    8. '(cost' → logprob: -4.978776931762695
    9. ' (' → logprob: -6.478776931762695
    10. 'div' → logprob: -6.853776931762695

Token 81: ' e' (ID: 319)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.7299883365631104
    2. 'e' → logprob: -1.2299883365631104
    3. ' (' → logprob: -1.8549883365631104
    4. ' e' → logprob: -2.7299883365631104
    5. '(' → logprob: -5.604988098144531
    6. 'div' → logprob: -8.604988098144531
    7. '((' → logprob: -9.354988098144531
    8. '   ' → logprob: -9.979988098144531
    9. ' div' → logprob: -10.104988098144531
    10. ' ' → logprob: -10.354988098144531

Token 82: ' //' (ID: 602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' (' (ID: 350)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10028905421495438
    2. '10' → logprob: -2.3502891063690186
    3. '(' → logprob: -9.600289344787598
    4. ' ' → logprob: -11.725289344787598
    5. '1' → logprob: -12.225289344787598
    6. '106' → logprob: -13.600289344787598
    7. '[' → logprob: -15.100289344787598
    8. '```' → logprob: -16.47528839111328
    9. '​' → logprob: -17.72528839111328
    10. '_' → logprob: -17.72528839111328

Token 84: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10024183988571167
    2. '100' → logprob: -2.3502418994903564
    3. ' ' → logprob: -10.350241661071777
    4. '(' → logprob: -12.850241661071777
    5. '1' → logprob: -14.475241661071777
    6. '106' → logprob: -17.100242614746094
    7. '  ' → logprob: -17.850242614746094
    8. ')' → logprob: -18.475242614746094
    9. ' (' → logprob: -18.725242614746094
    10. '   ' → logprob: -18.725242614746094

Token 85: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -1.5570885807392187e-05
    2. '```' → logprob: -12.375015258789062
    3. '006' → logprob: -12.875015258789062
    4. '' → logprob: -13.125015258789062
    5. '+' → logprob: -13.125015258789062
    6. ' ' → logprob: -13.250015258789062
    7. '06' → logprob: -14.500015258789062
    8. '_' → logprob: -14.625015258789062
    9. '**' → logprob: -15.500015258789062
    10. '۶' → logprob: -15.625015258789062

Token 86: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.625000953674316
    3. '06' → logprob: -15.125000953674316
    4. '```' → logprob: -15.625000953674316
    5. '<|end|>' → logprob: -17.062501907348633
    6. '۶' → logprob: -17.062501907348633
    7. '7' → logprob: -17.125001907348633
    8. '006' → logprob: -17.375001907348633
    9. '' → logprob: -17.375001907348633
    10. '६' → logprob: -17.437501907348633

Token 87: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '६' → logprob: -17.0
    4. '۶' → logprob: -17.0
    5. '```' → logprob: -17.0625
    6. 'six' → logprob: -17.5
    7. '' → logprob: -17.625
    8. '9' → logprob: -17.6875
    9. '٦' → logprob: -17.875
    10. '৬' → logprob: -17.9375

Token 88: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002486476907506585
    2. ' ,' → logprob: -6.252486705780029
    3. '),' → logprob: -7.877486705780029
    4. ')' → logprob: -8.877486228942871
    5. ',
' → logprob: -11.127486228942871
    6. ' ' → logprob: -11.502486228942871
    7. ',v' → logprob: -13.377486228942871
    8. '0' → logprob: -13.502486228942871
    9. ',e' → logprob: -13.502486228942871
    10. '7' → logprob: -14.127486228942871

Token 89: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.08898112177848816
    2. 'e' → logprob: -2.4639811515808105
    3. ' ' → logprob: -10.338980674743652
    4. ' ' → logprob: -12.838980674743652
    5. '`' → logprob: -13.588980674743652
    6. ' (' → logprob: -13.838980674743652
    7. ' `' → logprob: -14.088980674743652
    8. ' _' → logprob: -14.838980674743652
    9. '(e' → logprob: -15.213980674743652
    10. '_' → logprob: -15.213980674743652

Token 90: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.026722412556409836
    2. ' %' → logprob: -3.6517224311828613
    3. '`' → logprob: -8.526721954345703
    4. 'e' → logprob: -9.151721954345703
    5. '%e' → logprob: -10.026721954345703
    6. ' ' → logprob: -10.526721954345703
    7. '```' → logprob: -11.651721954345703
    8. '%s' → logprob: -11.776721954345703
    9. '10' → logprob: -12.276721954345703
    10. '1' → logprob: -12.401721954345703

Token 91: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011717714369297028
    2. ' (' → logprob: -6.751171588897705
    3. '100' → logprob: -14.126172065734863
    4. '10' → logprob: -14.126172065734863
    5. ' ' → logprob: -15.751172065734863
    6. '(int' → logprob: -18.001171112060547
    7. '1' → logprob: -19.126171112060547
    8. '\(' → logprob: -19.126171112060547
    9. '```' → logprob: -19.376171112060547
    10. '(
' → logprob: -19.876171112060547

Token 92: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001189041300676763
    2. '100' → logprob: -6.751189231872559
    3. '(' → logprob: -11.001189231872559
    4. '1' → logprob: -13.751189231872559
    5. ' ' → logprob: -13.751189231872559
    6. '```' → logprob: -17.876188278198242
    7. ')' → logprob: -18.251188278198242
    8. '۱۰' → logprob: -19.001188278198242
    9. '_' → logprob: -19.501188278198242
    10. '１０' → logprob: -19.501188278198242

Token 93: ' **' (ID: 6240)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3231869339942932
    2. '**' → logprob: -1.3231868743896484
    3. ' **' → logprob: -4.823186874389648
    4. ' ' → logprob: -7.073186874389648
    5. '```' → logprob: -7.448186874389648
    6. '006' → logprob: -8.823186874389648
    7. '+' → logprob: -9.573186874389648
    8. '000' → logprob: -9.823186874389648
    9. '_' → logprob: -10.323186874389648
    10. '^' → logprob: -10.698186874389648

Token 94: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -15.625000953674316
    4. '7' → logprob: -16.875001907348633
    5. '_' → logprob: -17.500001907348633
    6. '۶' → logprob: -17.875001907348633
    7. ')' → logprob: -18.500001907348633
    8. '' → logprob: -18.500001907348633
    9. '006' → logprob: -18.500001907348633
    10. '६' → logprob: -18.937501907348633

Token 95: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '7' → logprob: -18.125
    4. '```' → logprob: -18.625
    5. '۶' → logprob: -19.75
    6. ')' → logprob: -20.25
    7. '६' → logprob: -20.5
    8. '9' → logprob: -20.875
    9. '' → logprob: -21.0
    10. '٦' → logprob: -21.5

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.000000953674316
    4. '))' → logprob: -16.875
    5. ')return' → logprob: -18.125
    6. '')' → logprob: -18.375
    7. ')`' → logprob: -18.5
    8. ')#' → logprob: -18.625
    9. '),' → logprob: -19.0
    10. '`)' → logprob: -19.0

Token 97: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08015425503253937
    2. 'd' → logprob: -2.5801541805267334
    3. '#' → logprob: -7.4551544189453125
    4. '\' → logprob: -8.580154418945312
    5. '
' → logprob: -8.955154418945312
    6. 'de' → logprob: -9.330154418945312
    7. 'n' → logprob: -9.330154418945312
    8. '```' → logprob: -9.830154418945312
    9. '

' → logprob: -10.955154418945312
    10. '' → logprob: -10.955154418945312

Token 98: ' add' (ID: 1147)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01330222561955452
    2. ' main' → logprob: -5.138302326202393
    3. ' find' → logprob: -6.138302326202393
    4. ' prim' → logprob: -6.638302326202393
    5. 'd' → logprob: -7.263302326202393
    6. ' solve' → logprob: -7.388302326202393
    7. ' calculate' → logprob: -8.013301849365234
    8. ' compute' → logprob: -8.138301849365234
    9. ' build' → logprob: -8.263301849365234
    10. ' ' → logprob: -8.263301849365234

Token 99: '_bid' (ID: 149277)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.007057996466755867
    2. '_edges' → logprob: -5.507058143615723
    3. '_' → logprob: -5.882058143615723
    4. '_node' → logprob: -11.132058143615723
    5. '_line' → logprob: -11.257058143615723
    6. '_connection' → logprob: -11.632058143615723
    7. '_ed' → logprob: -11.632058143615723
    8. '_e' → logprob: -11.882058143615723
    9. '_cost' → logprob: -11.882058143615723
    10. '_neighbor' → logprob: -11.882058143615723

Token 100: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -0.10318099707365036
    2. 'rection' → logprob: -2.9781808853149414
    3. '_re' → logprob: -3.7281808853149414
    4. '_edge' → logprob: -5.603180885314941
    5. 'ge' → logprob: -5.728180885314941
    6. 'irect' → logprob: -6.228180885314941
    7. '```' → logprob: -6.228180885314941
    8. 'rect' → logprob: -6.353180885314941
    9. 're' → logprob: -6.478180885314941
    10. 'j' → logprob: -6.603180885314941

Token 101: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.043367497622966766
    2. '_edges' → logprob: -3.293367385864258
    3. '_' → logprob: -5.293367385864258
    4. '_line' → logprob: -9.293367385864258
    5. '```' → logprob: -10.293367385864258
    6. ' _' → logprob: -10.793367385864258
    7. '_node' → logprob: -10.918367385864258
    8. '_connection' → logprob: -10.918367385864258
    9. '_parent' → logprob: -11.168367385864258
    10. '_e' → logprob: -11.293367385864258

Token 102: '(edge' (ID: 84023)
  Prédit: '(edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.272045373916626
    2. '(graph' → logprob: -2.397045373916626
    3. '(u' → logprob: -2.647045373916626
    4. '(' → logprob: -3.272045373916626
    5. '(nodes' → logprob: -3.647045373916626
    6. '(n' → logprob: -5.647045135498047
    7. '(edge' → logprob: -6.272045135498047
    8. '(node' → logprob: -6.272045135498047
    9. '(G' → logprob: -6.772045135498047
    10. '(adj' → logprob: -6.772045135498047

Token 103: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.1782583391759545e-05
    2. ',' → logprob: -11.500031471252441
    3. '_s' → logprob: -12.625031471252441
    4. '1' → logprob: -12.750031471252441
    5. '_list' → logprob: -12.750031471252441
    6. '_lists' → logprob: -13.000031471252441
    7. ' s' → logprob: -13.125031471252441
    8. 'es' → logprob: -13.750031471252441
    9. 'ss' → logprob: -14.000031471252441
    10. ')' → logprob: -14.000031471252441

Token 104: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12701283395290375
    2. ' u' → logprob: -2.2520127296447754
    3. 'from' → logprob: -5.877012729644775
    4. 'edges' → logprob: -6.002012729644775
    5. ' edges' → logprob: -6.377012729644775
    6. 'n' → logprob: -6.377012729644775
    7. 'v' → logprob: -7.127012729644775
    8. 'node' → logprob: -7.377012729644775
    9. 'a' → logprob: -7.627012729644775
    10. 'graph' → logprob: -7.877012729644775

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',u' → logprob: -13.750021934509277
    4. 's' → logprob: -14.500021934509277
    5. '_,' → logprob: -15.250021934509277
    6. 'e' → logprob: -15.500021934509277
    7. ',
' → logprob: -15.750021934509277
    8. '):' → logprob: -16.00002098083496
    9. ',n' → logprob: -16.37502098083496
    10. ',v' → logprob: -16.75002098083496

Token 106: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02975083328783512
    2. ' v' → logprob: -3.5297508239746094
    3. '	v' → logprob: -16.02975082397461
    4. 'cost' → logprob: -16.02975082397461
    5. 'vq' → logprob: -16.77975082397461
    6. 'u' → logprob: -17.27975082397461
    7. ' ' → logprob: -17.90475082397461
    8. 'vi' → logprob: -18.02975082397461
    9. 've' → logprob: -18.15475082397461
    10. 'vv' → logprob: -18.27975082397461

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.8325677703833207e-05
    2. ' ,' → logprob: -10.500028610229492
    3. '),' → logprob: -15.250028610229492
    4. '‌,' → logprob: -16.125028610229492
    5. ',c' → logprob: -16.375028610229492
    6. '):' → logprob: -16.375028610229492
    7. ',int' → logprob: -17.125028610229492
    8. ',e' → logprob: -17.125028610229492
    9. '_,' → logprob: -17.250028610229492
    10. 'e' → logprob: -17.750028610229492

Token 108: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1517980694770813
    2. 'c' → logprob: -2.5267980098724365
    3. ' cost' → logprob: -2.9017980098724365
    4. 'w' → logprob: -5.651798248291016
    5. ' c' → logprob: -6.526798248291016
    6. 'weight' → logprob: -7.526798248291016
    7. ' w' → logprob: -8.151798248291016
    8. '   ' → logprob: -10.026798248291016
    9. 'cos' → logprob: -10.901798248291016
    10. 'co' → logprob: -10.901798248291016

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002529952325858176
    2. ')' → logprob: -8.375252723693848
    3. '):
' → logprob: -10.875252723693848
    4. ',' → logprob: -13.375252723693848
    5. ' ):' → logprob: -13.500252723693848
    6. ':' → logprob: -14.875252723693848
    7. '):
' → logprob: -16.750253677368164
    8. ' ' → logprob: -17.375253677368164
    9. '   ' → logprob: -17.750253677368164
    10. '=' → logprob: -18.250253677368164

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01377958431839943
    2. ')' → logprob: -5.513779640197754
    3. ' edge' → logprob: -5.888779640197754
    4. '=edge' → logprob: -6.013779640197754
    5. '<|end|>' → logprob: -6.763779640197754
    6. ',' → logprob: -7.263779640197754
    7. '[' → logprob: -7.638779640197754
    8. '.' → logprob: -8.013779640197754
    9. '    
' → logprob: -8.013779640197754
    10. 'edge' → logprob: -8.513779640197754

Token 111: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.05881577357649803
    2. '   ' → logprob: -3.5588157176971436
    3. 'edge' (adapté à ' edge') → logprob: -3.6838157176971436
    4. ' u' → logprob: -6.183815956115723
    5. ' edges' → logprob: -7.433815956115723
    6. 'u' → logprob: -7.808815956115723
    7. ' cost' → logprob: -9.183815956115723
    8. 'edges' → logprob: -9.558815956115723
    9. ' for' → logprob: -10.621315956115723
    10. '    
' → logprob: -10.683815956115723

Token 112: '[u' (ID: 48750)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011061973869800568
    2. '[u' → logprob: -4.511062145233154
    3. '```' → logprob: -12.636061668395996
    4. '[v' → logprob: -12.761061668395996
    5. '[][' → logprob: -13.136061668395996
    6. '][' → logprob: -13.511061668395996
    7. 's' → logprob: -13.761061668395996
    8. ' [' → logprob: -13.886061668395996
    9. '\[' → logprob: -14.261061668395996
    10. '   ' → logprob: -15.386061668395996

Token 113: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.107425062713446e-06
    2. ']' → logprob: -12.375006675720215
    3. '][' → logprob: -13.500006675720215
    4. '[u' → logprob: -14.250006675720215
    5. ']).' → logprob: -15.125006675720215
    6. '[' → logprob: -16.00000762939453
    7. ' ].' → logprob: -16.00000762939453
    8. '.append' → logprob: -16.87500762939453
    9. ').' → logprob: -17.37500762939453
    10. '],' → logprob: -17.62500762939453

Token 114: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.696889623621246e-06
    2. '.append' → logprob: -13.37500286102295
    3. ' append' → logprob: -14.12500286102295
    4. 'appen' → logprob: -15.62500286102295
    5. 'app' → logprob: -16.125001907348633
    6. '	append' → logprob: -17.375001907348633
    7. '_append' → logprob: -17.375001907348633
    8. 'push' → logprob: -18.125001907348633
    9. 'insert' → logprob: -19.000001907348633
    10. 'Append' → logprob: -19.375001907348633

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5213274309644476e-05
    2. '((' → logprob: -11.500015258789062
    3. '(encoded' → logprob: -12.625015258789062
    4. ' (' → logprob: -14.000015258789062
    5. 'encode' → logprob: -14.125015258789062
    6. '(de' → logprob: -16.500015258789062
    7. '(
' → logprob: -18.125015258789062
    8. '(

' → logprob: -19.000015258789062
    9. '.encode' → logprob: -19.250015258789062
    10. '(enc' → logprob: -19.375015258789062

Token 116: 'encode' (ID: 12949)
  Prédit: 'encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encode' → logprob: -0.006716079078614712
    2. ' encode' → logprob: -5.006716251373291
    3. 'encoded' → logprob: -15.256715774536133
    4. '   ' → logprob: -15.506715774536133
    5. '.encode' → logprob: -16.381715774536133
    6. ')' → logprob: -16.506715774536133
    7. '_encode' → logprob: -17.006715774536133
    8. 'decode' → logprob: -17.256715774536133
    9. 'encoder' → logprob: -18.881715774536133
    10. 'Encode' → logprob: -19.131715774536133

Token 117: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.981667537620524e-06
    2. 'edge' → logprob: -14.500001907348633
    3. '_edges' → logprob: -14.750001907348633
    4. '_' → logprob: -15.375001907348633
    5. ')_' → logprob: -15.500001907348633
    6. '_EDGE' → logprob: -16.000001907348633
    7. '(edge' → logprob: -16.250001907348633
    8. '_cost' → logprob: -16.250001907348633
    9. '```' → logprob: -16.250001907348633
    10. ')' → logprob: -16.500001907348633

Token 118: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.003240816527977586
    2. '(' → logprob: -5.753240585327148
    3. ')' → logprob: -10.003240585327148
    4. ')(' → logprob: -11.753240585327148
    5. ' (' → logprob: -11.878240585327148
    6. '(c' → logprob: -14.128240585327148
    7. ',' → logprob: -14.378240585327148
    8. '(
' → logprob: -14.753240585327148
    9. '(edge' → logprob: -15.253240585327148
    10. 'cost' → logprob: -15.503240585327148

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020008347928524017
    2. ',v' → logprob: -8.625200271606445
    3. ' ,' → logprob: -10.875200271606445
    4. ')' → logprob: -14.750200271606445
    5. '',' → logprob: -15.125200271606445
    6. 'v' → logprob: -15.250200271606445
    7. '‌,' → logprob: -15.875200271606445
    8. ' ' → logprob: -16.250200271606445
    9. ',u' → logprob: -16.250200271606445
    10. ',
' → logprob: -16.500200271606445

Token 120: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.038042064756155014
    2. ' v' → logprob: -3.2880420684814453
    3. ')v' → logprob: -14.538042068481445
    4. '	v' → logprob: -16.538042068481445
    5. '(v' → logprob: -17.663042068481445
    6. ' ' → logprob: -18.163042068481445
    7. 'vq' → logprob: -18.163042068481445
    8. ')' → logprob: -18.538042068481445
    9. 'vj' → logprob: -18.538042068481445
    10. '   ' → logprob: -18.913042068481445

Token 121: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.031228944659233093
    2. ')' → logprob: -3.531229019165039
    3. '))
' → logprob: -6.531229019165039
    4. ')
' → logprob: -11.406229019165039
    5. '))

' → logprob: -12.281229019165039
    6. ' ))' → logprob: -13.156229019165039
    7. ')))' → logprob: -14.281229019165039
    8. '))
' → logprob: -14.531229019165039
    9. '),' → logprob: -14.656229019165039
    10. '));' → logprob: -15.281229019165039

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004860842600464821
    2. 'edge' → logprob: -7.750485897064209
    3. ' edge' → logprob: -9.875486373901367
    4. 'edges' → logprob: -13.750486373901367
    5. '   ' → logprob: -14.375486373901367
    6. '```' → logprob: -14.375486373901367
    7. '(edge' → logprob: -14.625486373901367
    8. '  ' → logprob: -15.625486373901367
    9. ' edges' → logprob: -15.875486373901367
    10. '.edge' → logprob: -16.000486373901367

Token 123: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.0045104618184268475
    2. '   ' → logprob: -5.879510402679443
    3. ' edge' → logprob: -6.379510402679443
    4. 'edges' → logprob: -12.879510879516602
    5. ' ' → logprob: -13.629510879516602
    6. '.edge' → logprob: -13.879510879516602
    7. '(edge' → logprob: -13.879510879516602
    8. '  ' → logprob: -14.379510879516602
    9. 'error' → logprob: -14.879510879516602
    10. '
' → logprob: -15.004510879516602

Token 124: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.500001907348633
    3. '[u' → logprob: -14.625001907348633
    4. 'v' → logprob: -16.750001907348633
    5. '```' → logprob: -16.875001907348633
    6. '[s' → logprob: -17.000001907348633
    7. ' [' → logprob: -17.625001907348633
    8. '[b' → logprob: -18.625001907348633
    9. '[val' → logprob: -18.625001907348633
    10. '][' → logprob: -19.125001907348633

Token 125: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0172415878623724
    2. ').' → logprob: -4.267241477966309
    3. '[u' → logprob: -5.892241477966309
    4. ']' → logprob: -8.767241477966309
    5. '.' → logprob: -9.267241477966309
    6. '[' → logprob: -10.142241477966309
    7. '.append' → logprob: -11.392241477966309
    8. ')' → logprob: -12.142241477966309
    9. ' ].' → logprob: -13.142241477966309
    10. '}.' → logprob: -13.642241477966309

Token 126: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.5776860184123507e-06
    2. ' append' → logprob: -13.62500286102295
    3. '.append' → logprob: -14.25000286102295
    4. 'appen' → logprob: -14.62500286102295
    5. '	append' → logprob: -16.375001907348633
    6. '_append' → logprob: -17.750001907348633
    7. 'Append' → logprob: -17.875001907348633
    8. 'add' → logprob: -18.000001907348633
    9. 'app' → logprob: -18.500001907348633
    10. 'prepend' → logprob: -19.500001907348633

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(encoded' → logprob: -16.375
    3. ' (' → logprob: -17.0
    4. '((' → logprob: -18.5
    5. '(
' → logprob: -18.75
    6. 'encode' → logprob: -20.375
    7. '(enc' → logprob: -20.75
    8. '(

' → logprob: -22.25
    9. '(en' → logprob: -22.5
    10. '(embed' → logprob: -22.625

Token 128: 'encode' (ID: 12949)
  Prédit: 'encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encode' → logprob: -1.9743012671824545e-05
    2. ' encode' → logprob: -11.000020027160645
    3. '(' → logprob: -13.125020027160645
    4. '.encode' → logprob: -14.000020027160645
    5. 'decode' → logprob: -15.750020027160645
    6. '_encode' → logprob: -17.375019073486328
    7. ')' → logprob: -17.750019073486328
    8. 'encoded' → logprob: -18.250019073486328
    9. '[' → logprob: -19.750019073486328
    10. 'ecode' → logprob: -19.750019073486328

Token 129: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.05037846788764
    2. 'encode' → logprob: -3.3003785610198975
    3. 'edge' → logprob: -4.425378322601318
    4. '_encode' → logprob: -8.800378799438477
    5. 'Edge' → logprob: -9.925378799438477
    6. ' encode' → logprob: -10.925378799438477
    7. 'cost' → logprob: -11.050378799438477
    8. '_cost' → logprob: -11.925378799438477
    9. '(' → logprob: -12.050378799438477
    10. '```' → logprob: -12.050378799438477

Token 130: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. 'cost' → logprob: -15.12500286102295
    4. ' cost' → logprob: -16.000001907348633
    5. ' (' → logprob: -16.625001907348633
    6. ')' → logprob: -16.875001907348633
    7. '(code' → logprob: -17.625001907348633
    8. '(c' → logprob: -19.125001907348633
    9. '(
' → logprob: -19.625001907348633
    10. '```' → logprob: -19.750001907348633

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.613945101387799e-05
    2. ' ,' → logprob: -9.750085830688477
    3. ',u' → logprob: -10.625085830688477
    4. ',
' → logprob: -12.750085830688477
    5. 'u' → logprob: -15.375085830688477
    6. ',v' → logprob: -16.000085830688477
    7. ',c' → logprob: -16.375085830688477
    8. '‌,' → logprob: -17.500085830688477
    9. ',
' → logprob: -18.000085830688477
    10. ',w' → logprob: -18.000085830688477

Token 132: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004079112783074379
    2. ' u' → logprob: -5.504079341888428
    3. '   ' → logprob: -16.004079818725586
    4. ')' → logprob: -16.254079818725586
    5. '
' → logprob: -16.254079818725586
    6. ' ' → logprob: -16.379079818725586
    7. '	u' → logprob: -16.629079818725586
    8. '[u' → logprob: -16.879079818725586
    9. ''u' → logprob: -17.504079818725586
    10. '<|end|>' → logprob: -17.879079818725586

Token 133: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10022026300430298
    2. ')' → logprob: -2.350220203399658
    3. '))
' → logprob: -11.600220680236816
    4. ')
' → logprob: -12.725220680236816
    5. ')))' → logprob: -13.975220680236816
    6. ' ))' → logprob: -15.225220680236816
    7. '))

' → logprob: -16.6002197265625
    8. ' )' → logprob: -16.7252197265625
    9. '),' → logprob: -16.7252197265625
    10. '));' → logprob: -16.9752197265625

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011928485473617911
    2. '
' → logprob: -6.751193046569824
    3. '

' → logprob: -12.001193046569824
    4. '```' → logprob: -12.376193046569824
    5. 'ndef' → logprob: -13.001193046569824
    6. '
' → logprob: -13.001193046569824
    7. 'd' → logprob: -13.001193046569824
    8. ' def' → logprob: -13.626193046569824
    9. '0' → logprob: -14.126193046569824
    10. '\' → logprob: -14.126193046569824

Token 135: ' process' (ID: 2273)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.592982828617096
    2. ' def' → logprob: -0.967982828617096
    3. 'def' → logprob: -3.342982769012451
    4. ' prim' → logprob: -4.217982769012451
    5. ' main' → logprob: -5.092982769012451
    6. ' find' → logprob: -5.592982769012451
    7. 'd' → logprob: -6.467982769012451
    8. ' shortest' → logprob: -6.842982769012451
    9. ' run' → logprob: -7.217982769012451
    10. ' solve' → logprob: -7.342982769012451

Token 136: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.17960667610168457
    2. '_input' → logprob: -3.1796066761016846
    3. '(' → logprob: -3.4296066761016846
    4. '_graph' → logprob: -3.5546066761016846
    5. '_edge' → logprob: -4.0546064376831055
    6. '_' → logprob: -4.0546064376831055
    7. '_line' → logprob: -4.1796064376831055
    8. '_nodes' → logprob: -5.8046064376831055
    9. '_query' → logprob: -6.9296064376831055
    10. '_data' → logprob: -6.9296064376831055

Token 137: '_input' (ID: 12507)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.5144276022911072
    2. '(edge' → logprob: -1.764427661895752
    3. '(edges' → logprob: -2.264427661895752
    4. '(n' → logprob: -2.389427661895752
    5. '(' → logprob: -3.639427661895752
    6. '(lines' → logprob: -5.014427661895752
    7. '(num' → logprob: -7.139427661895752
    8. ' (' → logprob: -7.889427661895752
    9. '():' → logprob: -8.264427185058594
    10. '(number' → logprob: -8.389427185058594

Token 138: '(edge' (ID: 84023)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.15368056297302246
    2. '(n' → logprob: -2.1536805629730225
    3. '():' → logprob: -3.9036805629730225
    4. '(' → logprob: -5.403680801391602
    5. '(lines' → logprob: -7.403680801391602
    6. '(num' → logprob: -7.653680801391602
    7. ' (' → logprob: -8.153680801391602
    8. '(number' → logprob: -9.778680801391602
    9. '(size' → logprob: -9.778680801391602
    10. '(len' → logprob: -10.278680801391602

Token 139: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35141029953956604
    2. ',' → logprob: -1.2264102697372437
    3. ' ,' → logprob: -6.976410388946533
    4. ',s' → logprob: -7.601410388946533
    5. ',line' → logprob: -7.601410388946533
    6. '):' → logprob: -7.976410388946533
    7. ',n' → logprob: -8.351409912109375
    8. '_,' → logprob: -9.351409912109375
    9. '_line' → logprob: -9.601409912109375
    10. '):
' → logprob: -9.726409912109375

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024410806596279144
    2. '):' → logprob: -4.524410724639893
    3. 's' → logprob: -4.774410724639893
    4. ' ,' → logprob: -5.899410724639893
    5. ')' → logprob: -7.399410724639893
    6. ',n' → logprob: -8.02441120147705
    7. ',line' → logprob: -8.27441120147705
    8. '1' → logprob: -8.39941120147705
    9. '):
' → logprob: -9.14941120147705
    10. '_,' → logprob: -9.52441120147705

Token 141: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1596335917711258
    2. 'n' → logprob: -2.7846336364746094
    3. ' edge' → logprob: -3.2846336364746094
    4. 'edges' → logprob: -3.7846336364746094
    5. ' n' → logprob: -4.909633636474609
    6. 'm' → logprob: -5.034633636474609
    7. ' edges' → logprob: -5.534633636474609
    8. 'line' → logprob: -5.659633636474609
    9. ')' → logprob: -6.784633636474609
    10. 'num' → logprob: -7.284633636474609

Token 142: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5977481603622437
    2. 's' → logprob: -0.8477481603622437
    3. '1' → logprob: -3.972748279571533
    4. '):' → logprob: -6.847748279571533
    5. '2' → logprob: -7.472748279571533
    6. ' ,' → logprob: -7.847748279571533
    7. '_,' → logprob: -8.097747802734375
    8. '0' → logprob: -9.597747802734375
    9. ',s' → logprob: -9.722747802734375
    10. '[' → logprob: -10.472747802734375

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00148486637044698
    2. ',n' → logprob: -6.7514848709106445
    3. ' ,' → logprob: -8.126484870910645
    4. '):' → logprob: -11.751484870910645
    5. ',line' → logprob: -12.751484870910645
    6. ',u' → logprob: -13.251484870910645
    7. 'n' → logprob: -13.376484870910645
    8. '(n' → logprob: -13.876484870910645
    9. ',num' → logprob: -14.251484870910645
    10. ',
' → logprob: -14.376484870910645

Token 144: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.273488849401474
    2. 'n' → logprob: -2.023488759994507
    3. ' m' → logprob: -2.898488759994507
    4. 'num' → logprob: -4.023488998413086
    5. ' n' → logprob: -4.148488998413086
    6. 'edges' → logprob: -5.648488998413086
    7. ' edges' → logprob: -6.148488998413086
    8. ' num' → logprob: -6.523488998413086
    9. 'edge' → logprob: -6.523488998413086
    10. '   ' → logprob: -6.648488998413086

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2543685734272003
    2. '):' → logprob: -1.504368543624878
    3. '):
' → logprob: -6.379368782043457
    4. ')' → logprob: -7.879368782043457
    5. ' ,' → logprob: -8.879368782043457
    6. ',line' → logprob: -8.879368782043457
    7. ' ):' → logprob: -10.754368782043457
    8. ',
' → logprob: -11.504368782043457
    9. ',input' → logprob: -12.004368782043457
    10. ':' → logprob: -12.129368782043457

Token 146: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25411027669906616
    2. ' m' → logprob: -1.504110336303711
    3. 'q' → logprob: -7.879110336303711
    4. ' ' → logprob: -8.254110336303711
    5. '   ' → logprob: -8.379110336303711
    6. ')' → logprob: -8.379110336303711
    7. 'k' → logprob: -9.129110336303711
    8. 'e' → logprob: -9.379110336303711
    9. '):
' → logprob: -9.379110336303711
    10. ' edges' → logprob: -9.379110336303711

Token 147: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034281764179468155
    2. '):' → logprob: -3.4092817306518555
    3. ',line' → logprob: -7.6592817306518555
    4. '):
' → logprob: -9.034281730651855
    5. ' ,' → logprob: -11.409281730651855
    6. ',
' → logprob: -11.659281730651855
    7. ')' → logprob: -12.034281730651855
    8. ':' → logprob: -12.034281730651855
    9. ',input' → logprob: -12.534281730651855
    10. '   ' → logprob: -13.409281730651855

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021918678656220436
    2. ' for' → logprob: -3.896918773651123
    3. 'for' → logprob: -6.896918773651123
    4. '
' → logprob: -8.771918296813965
    5. '	for' → logprob: -9.146918296813965
    6. '    
' → logprob: -9.396918296813965
    7. ' lines' → logprob: -11.771918296813965
    8. '   ' → logprob: -11.896918296813965
    9. ' line' → logprob: -14.021918296813965
    10. ',' → logprob: -14.146918296813965

Token 149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10077870637178421
    2. ' for' → logprob: -2.350778818130493
    3. '   ' → logprob: -7.475778579711914
    4. '
' → logprob: -12.350778579711914
    5. '    
' → logprob: -14.850778579711914
    6. ' lines' → logprob: -15.600778579711914
    7. 'line' → logprob: -15.850778579711914
    8. '	for' → logprob: -15.975778579711914
    9. 'lines' → logprob: -16.475778579711914
    10. ' line' → logprob: -17.975778579711914

Token 150: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00016516048344783485
    2. '_' → logprob: -8.750164985656738
    3. ' ' → logprob: -12.125164985656738
    4. ' ' → logprob: -14.125164985656738
    5. ' i' → logprob: -14.875164985656738
    6. ' range' → logprob: -16.250165939331055
    7. ' _
' → logprob: -17.000165939331055
    8. ' ‌' → logprob: -17.125165939331055
    9. ' __' → logprob: -18.500165939331055
    10. ' in' → logprob: -18.625165939331055

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014025522395968437
    2. 'in' → logprob: -4.389025688171387
    3. 'range' → logprob: -6.889025688171387
    4. ' ' → logprob: -7.889025688171387
    5. ' range' → logprob: -9.764025688171387
    6. '  ' → logprob: -10.764025688171387
    7. 'import' → logprob: -11.014025688171387
    8. 's' → logprob: -11.889025688171387
    9. '<|end|>' → logprob: -12.764025688171387
    10. '```' → logprob: -13.389025688171387

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013151203747838736
    2. ' range' → logprob: -6.751315116882324
    3. '(range' → logprob: -8.876315116882324
    4. '	range' → logprob: -13.501315116882324
    5. ' ' → logprob: -13.876315116882324
    6. 'read' → logprob: -14.126315116882324
    7. 'ange' → logprob: -14.251315116882324
    8. '  ' → logprob: -15.251315116882324
    9. ')' → logprob: -15.376315116882324
    10. '   ' → logprob: -15.501315116882324

Token 153: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02080181986093521
    2. ' m' → logprob: -4.520802021026611
    3. ' (' → logprob: -4.895802021026611
    4. '(' → logprob: -6.145802021026611
    5. 'm' → logprob: -9.770801544189453
    6. ' ' → logprob: -11.395801544189453
    7. '	m' → logprob: -11.520801544189453
    8. '   ' → logprob: -13.020801544189453
    9. '(n' → logprob: -13.520801544189453
    10. ',' → logprob: -13.520801544189453

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2279469072818756
    2. '):
' → logprob: -1.6029468774795532
    3. ':' → logprob: -6.477946758270264
    4. ' ):' → logprob: -7.352946758270264
    5. ' ):
' → logprob: -8.727947235107422
    6. ')' → logprob: -9.352947235107422
    7. '):
' → logprob: -9.977947235107422
    8. ',' → logprob: -10.852947235107422
    9. ':
' → logprob: -10.852947235107422
    10. ' :' → logprob: -12.352947235107422

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04434503614902496
    2. ',' → logprob: -4.169344902038574
    3. '   ' → logprob: -4.669344902038574
    4. ' line' → logprob: -4.669344902038574
    5. '
' → logprob: -6.294344902038574
    6. 'line' → logprob: -6.794344902038574
    7. ' ' → logprob: -6.919344902038574
    8. '<|end|>' → logprob: -7.294344902038574
    9. '        
' → logprob: -7.419344902038574
    10. ' 
' → logprob: -7.794344902038574

Token 156: ' u' (ID: 337)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.45950400829315186
    2. ' u' → logprob: -1.4595040082931519
    3. 'line' → logprob: -2.5845041275024414
    4. 'u' (adapté à ' u') → logprob: -2.8345041275024414
    5. '   ' → logprob: -7.459504127502441
    6. '       ' → logprob: -8.209504127502441
    7. '	line' → logprob: -8.209504127502441
    8. 's' → logprob: -8.709504127502441
    9. ' s' → logprob: -9.209504127502441
    10. '	u' → logprob: -9.584504127502441

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005125953815877438
    2. ',v' → logprob: -5.505125999450684
    3. ' ,' → logprob: -6.880125999450684
    4. ',c' → logprob: -13.255125999450684
    5. 'v' → logprob: -13.380125999450684
    6. ',s' → logprob: -13.505125999450684
    7. ',u' → logprob: -13.505125999450684
    8. '_,' → logprob: -13.630125999450684
    9. ' ' → logprob: -13.630125999450684
    10. 's' → logprob: -13.880125999450684

Token 158: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4287321865558624
    2. ' v' → logprob: -1.05373215675354
    3. ',v' → logprob: -11.053731918334961
    4. ',' → logprob: -11.928731918334961
    5. 'cost' → logprob: -12.928731918334961
    6. ' ' → logprob: -13.428731918334961
    7. '	v' → logprob: -13.553731918334961
    8. ' cost' → logprob: -14.178731918334961
    9. 'vq' → logprob: -14.178731918334961
    10. '<|end|>' → logprob: -14.428731918334961

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033347986172884703
    2. '=' → logprob: -6.003334999084473
    3. ' ,' → logprob: -7.503334999084473
    4. ' =' → logprob: -8.128334999084473
    5. ',v' → logprob: -12.378334999084473
    6. ',c' → logprob: -13.253334999084473
    7. ',u' → logprob: -13.378334999084473
    8. ' ' → logprob: -13.878334999084473
    9. '<|end|>' → logprob: -13.878334999084473
    10. 'u' → logprob: -14.503334999084473

Token 160: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4740623235702515
    2. ' c' → logprob: -1.4740623235702515
    3. ' w' → logprob: -1.5990623235702515
    4. 'cost' → logprob: -1.8490623235702515
    5. ' cost' → logprob: -2.349062442779541
    6. 'w' → logprob: -2.474062442779541
    7. ' ' → logprob: -6.974062442779541
    8. ',' → logprob: -7.099062442779541
    9. '<|end|>' → logprob: -7.974062442779541
    10. ',c' → logprob: -8.099061965942383

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.514726459980011
    2. '=' → logprob: -1.2647264003753662
    3. ' =' → logprob: -2.139726400375366
    4. ' ,' → logprob: -7.514726638793945
    5. 'cost' → logprob: -7.514726638793945
    6. ',b' → logprob: -7.889726638793945
    7. ' ' → logprob: -8.264726638793945
    8. 'b' → logprob: -9.014726638793945
    9. ')' → logprob: -9.639726638793945
    10. ' cost' → logprob: -9.889726638793945

Token 162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008618946187198162
    2. ' b' → logprob: -4.8836188316345215
    3. 'c' → logprob: -7.8836188316345215
    4. 'd' → logprob: -8.63361930847168
    5. 't' → logprob: -8.63361930847168
    6. 's' → logprob: -8.88361930847168
    7. '<|end|>' → logprob: -10.13361930847168
    8. ' ' → logprob: -11.13361930847168
    9. 'z' → logprob: -11.88361930847168
    10. '=' → logprob: -12.00861930847168

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133021295070648
    2. '=' → logprob: -1.3133021593093872
    3. ',' → logprob: -10.313302040100098
    4. ' ' → logprob: -13.063302040100098
    5. '=line' → logprob: -13.188302040100098
    6. ')' → logprob: -14.563302040100098
    7. '   ' → logprob: -15.063302040100098
    8. '    ' → logprob: -15.063302040100098
    9. '  ' → logprob: -15.188302040100098
    10. ' ' → logprob: -15.438302040100098

Token 164: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1461816132068634
    2. ' parse' → logprob: -2.271181583404541
    3. 'map' → logprob: -3.646181583404541
    4. 'parse' → logprob: -5.021181583404541
    5. ' read' → logprob: -9.3961820602417
    6. ' ' → logprob: -11.5211820602417
    7. '   ' → logprob: -11.7711820602417
    8. 'read' → logprob: -11.8961820602417
    9. '	map' → logprob: -12.7711820602417
    10. '  ' → logprob: -13.5211820602417

Token 165: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017446773126721382
    2. '(' → logprob: -6.376744747161865
    3. '[int' → logprob: -11.376744270324707
    4. '<int' → logprob: -11.876744270324707
    5. 'int' → logprob: -12.001744270324707
    6. '=int' → logprob: -12.251744270324707
    7. '(str' → logprob: -12.751744270324707
    8. ']int' → logprob: -12.751744270324707
    9. '<|end|>' → logprob: -13.251744270324707
    10. ' (' → logprob: -13.626744270324707

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009890899993479252
    2. '(read' → logprob: -4.759891033172607
    3. 'read' → logprob: -6.884891033172607
    4. ',input' → logprob: -8.75989055633545
    5. ' read' → logprob: -9.75989055633545
    6. ' ,' → logprob: -11.50989055633545
    7. ')' → logprob: -11.75989055633545
    8. ',(' → logprob: -12.50989055633545
    9. '(' → logprob: -12.63489055633545
    10. '	read' → logprob: -12.75989055633545

Token 167: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.31327250599861145
    2. ' read' → logprob: -1.313272476196289
    3. '(read' → logprob: -12.438272476196289
    4. '	read' → logprob: -12.563272476196289
    5. 'sys' → logprob: -13.188272476196289
    6. ' sys' → logprob: -14.313272476196289
    7. ' readline' → logprob: -15.563272476196289
    8. '   ' → logprob: -15.563272476196289
    9. '_read' → logprob: -15.688272476196289
    10. '.read' → logprob: -15.813272476196289

Token 168: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.7252845029579476e-05
    2. '()' → logprob: -11.375027656555176
    3. 'input' → logprob: -11.625027656555176
    4. '_' → logprob: -12.625027656555176
    5. '_line' → logprob: -14.125027656555176
    6. '(' → logprob: -14.125027656555176
    7. '(_' → logprob: -14.750027656555176
    8. '(input' → logprob: -14.875027656555176
    9. ')' → logprob: -15.875027656555176
    10. '```' → logprob: -16.12502670288086

Token 169: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023565027862787247
    2. '()' → logprob: -4.02356481552124
    3. '())' → logprob: -5.27356481552124
    4. ')' → logprob: -8.273565292358398
    5. '()
' → logprob: -12.148565292358398
    6. '(' → logprob: -13.023565292358398
    7. ' ' → logprob: -13.273565292358398
    8. ' ())' → logprob: -13.273565292358398
    9. ' ().' → logprob: -13.398565292358398
    10. ' ()' → logprob: -13.398565292358398

Token 170: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3149378299713135
    2. 'strip' → logprob: -1.3149378299713135
    3. 'rstrip' → logprob: -6.439937591552734
    4. ' split' → logprob: -10.189937591552734
    5. ' strip' → logprob: -10.564937591552734
    6. ')' → logprob: -12.314937591552734
    7. ' ' → logprob: -12.564937591552734
    8. '().' → logprob: -12.689937591552734
    9. '(split' → logprob: -13.189937591552734
    10. '()' → logprob: -14.814937591552734

Token 171: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02843349613249302
    2. '()' → logprob: -3.7784335613250732
    3. ')' → logprob: -5.278433322906494
    4. '(' → logprob: -10.403433799743652
    5. '())
' → logprob: -10.528433799743652
    6. '()))' → logprob: -12.153433799743652
    7. '(),' → logprob: -12.403433799743652
    8. ' ())' → logprob: -12.778433799743652
    9. '());' → logprob: -13.903433799743652
    10. '()
' → logprob: -13.903433799743652

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5465455055236816
    2. '   ' → logprob: -1.5465455055236816
    3. '
' → logprob: -2.4215455055236816
    4. ')' → logprob: -2.9215455055236816
    5. '<|end|>' → logprob: -2.9215455055236816
    6. '        
' → logprob: -5.671545505523682
    7. ' ' → logprob: -6.796545505523682
    8. '  
' → logprob: -6.796545505523682
    9. ')
' → logprob: -6.796545505523682
    10. '    
' → logprob: -6.796545505523682

Token 173: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.09045088291168213
    2. ' add' → logprob: -2.5904507637023926
    3. '   ' → logprob: -4.840450763702393
    4. '       ' → logprob: -6.090450763702393
    5. 'edge' → logprob: -7.340450763702393
    6. '
' → logprob: -8.21545124053955
    7. 'if' → logprob: -9.09045124053955
    8. ' edge' → logprob: -9.59045124053955
    9. ' if' → logprob: -10.21545124053955
    10. ')add' → logprob: -10.21545124053955

Token 174: '_bid' (ID: 149277)
  Prédit: '_bid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bid' → logprob: -9.269565634895116e-05
    2. '_b' → logprob: -9.500092506408691
    3. '_' → logprob: -11.375092506408691
    4. '_bit' → logprob: -13.375092506408691
    5. '_edge' → logprob: -13.375092506408691
    6. 'bid' → logprob: -13.500092506408691
    7. '_bd' → logprob: -14.625092506408691
    8. ' bid' → logprob: -15.625092506408691
    9. '_bin' → logprob: -15.625092506408691
    10. '```' → logprob: -15.625092506408691

Token 175: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -1.747814349073451e-05
    2. 'ir' → logprob: -11.125017166137695
    3. 'irection' → logprob: -13.250017166137695
    4. 'rection' → logprob: -14.750017166137695
    5. 'i' → logprob: -16.000017166137695
    6. 'irected' → logprob: -16.125017166137695
    7. 'ire' → logprob: -16.250017166137695
    8. 'irect' → logprob: -16.375017166137695
    9. 'itional' → logprob: -17.250017166137695
    10. 'irections' → logprob: -17.500017166137695

Token 176: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.6087021473795176e-05
    2. '_' → logprob: -10.750045776367188
    3. '_edges' → logprob: -11.000045776367188
    4. '_ed' → logprob: -12.750045776367188
    5. '_e' → logprob: -14.375045776367188
    6. '_line' → logprob: -14.625045776367188
    7. '```' → logprob: -14.750045776367188
    8. '(edge' → logprob: -14.750045776367188
    9. '_arrow' → logprob: -14.875045776367188
    10. 'edge' → logprob: -15.250045776367188

Token 177: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.0013948804698884487
    2. '(' → logprob: -6.626394748687744
    3. '(edges' → logprob: -9.876395225524902
    4. '<|end|>' → logprob: -11.501395225524902
    5. '=edge' → logprob: -12.626395225524902
    6. 'edge' → logprob: -13.751395225524902
    7. ' (' → logprob: -13.876395225524902
    8. '(e' → logprob: -14.251395225524902
    9. ' edge' → logprob: -15.001395225524902
    10. '(line' → logprob: -15.376395225524902

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03729158639907837
    2. '(edge' → logprob: -3.4122915267944336
    3. 'edge' → logprob: -6.162291526794434
    4. '(' → logprob: -7.037291526794434
    5. '=edge' → logprob: -8.412291526794434
    6. ' (' → logprob: -8.912291526794434
    7. ')' → logprob: -9.787291526794434
    8. '[' → logprob: -9.787291526794434
    9. '(u' → logprob: -10.287291526794434
    10. '
' → logprob: -10.412291526794434

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018996549770236015
    2. ' ,' → logprob: -4.518996715545654
    3. ',u' → logprob: -5.393996715545654
    4. '(u' → logprob: -6.268996715545654
    5. '(' → logprob: -7.018996715545654
    6. ')' → logprob: -7.893996715545654
    7. ' (' → logprob: -9.768996238708496
    8. '),' → logprob: -10.643996238708496
    9. '(edge' → logprob: -10.643996238708496
    10. ',n' → logprob: -11.518996238708496

Token 180: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11295562237501144
    2. 'u' → logprob: -2.2379555702209473
    3. '<|end|>' → logprob: -10.112956047058105
    4. ' ' → logprob: -10.362956047058105
    5. ')' → logprob: -11.112956047058105
    6. '0' → logprob: -11.237956047058105
    7. '	u' → logprob: -11.362956047058105
    8. '[u' → logprob: -12.737956047058105
    9. ' n' → logprob: -13.487956047058105
    10. ',u' → logprob: -13.487956047058105

Token 181: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16572977602481842
    2. '-' → logprob: -2.4157297611236572
    3. ' -' → logprob: -3.1657297611236572
    4. ' ,' → logprob: -3.9157297611236572
    5. ',v' → logprob: -6.790729999542236
    6. ' ' → logprob: -9.540729522705078
    7. ')' → logprob: -10.790729522705078
    8. '-,' → logprob: -11.040729522705078
    9. '[' → logprob: -11.290729522705078
    10. ',u' → logprob: -11.665729522705078

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013548793504014611
    2. ' ' → logprob: -6.626354694366455
    3. '<|end|>' → logprob: -10.626355171203613
    4. ',' → logprob: -13.126355171203613
    5. ')' → logprob: -14.126355171203613
    6. 'to' → logprob: -15.813855171203613
    7. '<|end|>' → logprob: -15.813855171203613
    8. '=' → logprob: -15.876355171203613
    9. '[' → logprob: -15.876355171203613
    10. '```' → logprob: -15.876355171203613

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001005630983854644
    2. ' ' → logprob: -9.250100135803223
    3. '<|end|>' → logprob: -12.625100135803223
    4. ',' → logprob: -15.125100135803223
    5. ')' → logprob: -15.437600135803223
    6. '```' → logprob: -16.43760108947754
    7. '.' → logprob: -16.62510108947754
    8. '2' → logprob: -16.81260108947754
    9. '   ' → logprob: -17.18760108947754
    10. '[' → logprob: -17.31260108947754

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014345310628414154
    2. ' ,' → logprob: -4.264345169067383
    3. ',v' → logprob: -8.639345169067383
    4. ')' → logprob: -12.889345169067383
    5. '<|end|>' → logprob: -14.264345169067383
    6. ',
' → logprob: -14.889345169067383
    7. ',u' → logprob: -15.139345169067383
    8. ' ' → logprob: -15.639345169067383
    9. '‌,' → logprob: -15.764345169067383
    10. 'v' → logprob: -16.389345169067383

Token 185: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.17975229024887085
    2. ' v' → logprob: -1.8047523498535156
    3. '	v' → logprob: -12.304752349853516
    4. '<|end|>' → logprob: -14.054752349853516
    5. ')v' → logprob: -14.304752349853516
    6. ' ' → logprob: -15.179752349853516
    7. '    ' → logprob: -15.804752349853516
    8. 'b' → logprob: -15.804752349853516
    9. ')' → logprob: -16.054752349853516
    10. ' ' → logprob: -16.117252349853516

Token 186: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012592414394021034
    2. '-' → logprob: -4.387592315673828
    3. ' ' → logprob: -9.512592315673828
    4. ')' → logprob: -12.262592315673828
    5. '   ' → logprob: -13.137592315673828
    6. ',' → logprob: -14.512592315673828
    7. '<|end|>' → logprob: -14.887592315673828
    8. '<|end|>' → logprob: -15.762592315673828
    9. '  ' → logprob: -15.887592315673828
    10. ' -
' → logprob: -15.887592315673828

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004627360496670008
    2. ' ' → logprob: -5.379627227783203
    3. '<|end|>' → logprob: -12.504627227783203
    4. ',' → logprob: -14.567127227783203
    5. '```' → logprob: -14.879627227783203
    6. '<|end|>' → logprob: -14.879627227783203
    7. '2' → logprob: -14.879627227783203
    8. ')' → logprob: -15.442127227783203
    9. ' -' → logprob: -15.879627227783203
    10. '   ' → logprob: -16.004627227783203

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022078317124396563
    2. ' ' → logprob: -6.1272077560424805
    3. '2' → logprob: -11.37720775604248
    4. '<|end|>' → logprob: -12.12720775604248
    5. '```' → logprob: -13.56470775604248
    6. ',' → logprob: -14.06470775604248
    7. '   ' → logprob: -14.81470775604248
    8. '-' → logprob: -14.93970775604248
    9. '<|end|>' → logprob: -15.12720775604248
    10. ')' → logprob: -15.37720775604248

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001173321157693863
    2. ' ,' → logprob: -6.751173496246338
    3. ',b' → logprob: -13.75117301940918
    4. ')' → logprob: -13.87617301940918
    5. ',a' → logprob: -15.50117301940918
    6. '),' → logprob: -15.75117301940918
    7. '```' → logprob: -15.87617301940918
    8. 'b' → logprob: -16.00117301940918
    9. ' ' → logprob: -16.12617301940918
    10. '`,' → logprob: -16.25117301940918

Token 190: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05489785596728325
    2. ' a' → logprob: -2.9298977851867676
    3. 'b' → logprob: -11.929898262023926
    4. '	a' → logprob: -12.429898262023926
    5. ' ' → logprob: -13.554898262023926
    6. '   ' → logprob: -13.804898262023926
    7. ')a' → logprob: -14.054898262023926
    8. ' b' → logprob: -15.054898262023926
    9. '1' → logprob: -15.679898262023926
    10. '#a' → logprob: -15.804898262023926

Token 191: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.57632976770401
    2. ')' → logprob: -0.82632976770401
    3. ')
' → logprob: -8.451330184936523
    4. ')

' → logprob: -8.951330184936523
    5. ' )
' → logprob: -10.451330184936523
    6. ' )' → logprob: -11.326330184936523
    7. '   ' → logprob: -12.576330184936523
    8. '       ' → logprob: -14.076330184936523
    9. ')b' → logprob: -15.201330184936523
    10. '),' → logprob: -15.576330184936523

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011784763046307489
    2. '   ' → logprob: -9.875118255615234
    3. 'add' → logprob: -10.375118255615234
    4. ' add' → logprob: -11.375118255615234
    5. ',' → logprob: -12.000118255615234
    6. '<|end|>' → logprob: -12.375118255615234
    7. ' ' → logprob: -12.625118255615234
    8. '        
' → logprob: -12.875118255615234
    9. '	' → logprob: -13.000118255615234
    10. '      ' → logprob: -13.875118255615234

Token 193: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.06539009511470795
    2. ' add' → logprob: -2.815390110015869
    3. '       ' → logprob: -5.815390110015869
    4. '   ' → logprob: -7.815390110015869
    5. ' ' → logprob: -11.565389633178711
    6. '	add' → logprob: -11.690389633178711
    7. '  ' → logprob: -12.940389633178711
    8. '    ' → logprob: -13.065389633178711
    9. '           ' → logprob: -13.315389633178711
    10. '      ' → logprob: -13.565389633178711

Token 194: '_bid' (ID: 149277)
  Prédit: '_bid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bid' → logprob: -2.935296834039036e-06
    2. '_b' → logprob: -12.87500286102295
    3. 'bid' → logprob: -16.500003814697266
    4. '_bit' → logprob: -16.500003814697266
    5. '_' → logprob: -17.125003814697266
    6. '_bd' → logprob: -17.500003814697266
    7. '```' → logprob: -18.000003814697266
    8. '_direction' → logprob: -18.500003814697266
    9. '"_' → logprob: -19.125003814697266
    10. ' bid' → logprob: -19.250003814697266

Token 195: 'irectional' (ID: 86044)
  Prédit: 'irectional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irectional' → logprob: -1.4021237802808173e-05
    2. 'itional' → logprob: -12.250014305114746
    3. 'irection' → logprob: -12.500014305114746
    4. 'ir' → logprob: -12.875014305114746
    5. 'irected' → logprob: -13.875014305114746
    6. 'direction' → logprob: -14.125014305114746
    7. 'al' → logprob: -15.000014305114746
    8. 'def' → logprob: -15.750014305114746
    9. 'line' → logprob: -16.00001335144043
    10. 'irections' → logprob: -16.00001335144043

Token 196: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.00018411019118502736
    2. 'edge' → logprob: -8.625184059143066
    3. '(edge' → logprob: -12.375184059143066
    4. '_edges' → logprob: -16.000185012817383
    5. ' edge' → logprob: -16.125185012817383
    6. '_' → logprob: -16.250185012817383
    7. 'e' → logprob: -17.000185012817383
    8. 'Edge' → logprob: -17.375185012817383
    9. '_EDGE' → logprob: -17.375185012817383
    10. '_ed' → logprob: -18.250185012817383

Token 197: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.250003814697266
    3. 'edge' → logprob: -13.750003814697266
    4. '=edge' → logprob: -14.500003814697266
    5. ' (' → logprob: -15.750003814697266
    6. '(edges' → logprob: -17.000003814697266
    7. ' edge' → logprob: -17.625003814697266
    8. '(
' → logprob: -17.625003814697266
    9. '.edge' → logprob: -20.000003814697266
    10. '(ed' → logprob: -20.250003814697266

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.125
    4. '[' → logprob: -16.5
    5. ')' → logprob: -17.375
    6. 'def' → logprob: -17.625
    7. '
' → logprob: -17.875
    8. '(' → logprob: -17.875
    9. '۲' → logprob: -18.375
    10. 's' → logprob: -18.375

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002141458389814943
    2. ' ,' → logprob: -8.500214576721191
    3. ')' → logprob: -12.000214576721191
    4. ',
' → logprob: -13.125214576721191
    5. '(edge' → logprob: -13.875214576721191
    6. '<|end|>' → logprob: -15.125214576721191
    7. '(' → logprob: -15.375214576721191
    8. '[' → logprob: -16.000213623046875
    9. 'edge' → logprob: -16.000213623046875
    10. '‌,' → logprob: -16.250213623046875

Token 200: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5560256838798523
    2. ' u' → logprob: -0.9310256838798523
    3. 'v' → logprob: -3.556025743484497
    4. ' v' → logprob: -5.681025505065918
    5. '<|end|>' → logprob: -8.306025505065918
    6. 'b' → logprob: -10.056025505065918
    7. 'user' → logprob: -10.931025505065918
    8. 'edge' → logprob: -11.306025505065918
    9. '	u' → logprob: -11.556025505065918
    10. ' ' → logprob: -11.556025505065918

Token 201: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28121647238731384
    2. '-' → logprob: -1.4062165021896362
    3. '[' → logprob: -10.281216621398926
    4. ' ' → logprob: -11.281216621398926
    5. ')' → logprob: -11.656216621398926
    6. ',' → logprob: -13.156216621398926
    7. 'def' → logprob: -13.281216621398926
    8. '<|end|>' → logprob: -13.531216621398926
    9. 'user' → logprob: -14.031216621398926
    10. '```' → logprob: -14.531216621398926

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0076343161053955555
    2. ' ' → logprob: -4.882634162902832
    3. '2' → logprob: -11.632634162902832
    4. '<|end|>' → logprob: -11.882634162902832
    5. '0' → logprob: -13.445134162902832
    6. ')' → logprob: -13.507634162902832
    7. '   ' → logprob: -13.695134162902832
    8. '```' → logprob: -13.757634162902832
    9. '<|end|>' → logprob: -13.757634162902832
    10. '-' → logprob: -13.820134162902832

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039980647852644324
    2. ' ' → logprob: -7.875399589538574
    3. '-' → logprob: -11.375399589538574
    4. 'v' → logprob: -12.125399589538574
    5. '2' → logprob: -13.875399589538574
    6. ' -' → logprob: -14.625399589538574
    7. ' v' → logprob: -14.750399589538574
    8. ')' → logprob: -15.562899589538574
    9. '<|end|>' → logprob: -15.875399589538574
    10. '   ' → logprob: -16.25040054321289

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001713590754661709
    2. ' ,' → logprob: -8.875171661376953
    3. ',v' → logprob: -10.375171661376953
    4. 'v' → logprob: -16.625171661376953
    5. ')' → logprob: -16.625171661376953
    6. ',
' → logprob: -16.750171661376953
    7. ' ' → logprob: -17.500171661376953
    8. '-' → logprob: -18.250171661376953
    9. '),' → logprob: -18.625171661376953
    10. '[' → logprob: -18.750171661376953

Token 205: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008614808320999146
    2. ' v' → logprob: -4.758615016937256
    3. '	v' → logprob: -15.258614540100098
    4. ')v' → logprob: -17.008615493774414
    5. '<v' → logprob: -18.258615493774414
    6. '   ' → logprob: -18.883615493774414
    7. '
' → logprob: -19.008615493774414
    8. ' ' → logprob: -19.133615493774414
    9. ',v' → logprob: -19.258615493774414
    10. 'vq' → logprob: -19.383615493774414

Token 206: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2814227342605591
    2. '-' → logprob: -1.406422734260559
    3. ' ' → logprob: -8.78142261505127
    4. ')' → logprob: -9.40642261505127
    5. '1' → logprob: -12.03142261505127
    6. '_' → logprob: -12.03142261505127
    7. '2' → logprob: -12.03142261505127
    8. '[' → logprob: -12.65642261505127
    9. ',' → logprob: -12.90642261505127
    10. '=' → logprob: -12.90642261505127

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004094547126442194
    2. ' ' → logprob: -5.50409460067749
    3. '<|end|>' → logprob: -11.629094123840332
    4. ' -' → logprob: -13.754094123840332
    5. '-' → logprob: -14.004094123840332
    6. ')' → logprob: -14.129094123840332
    7. '<|end|>' → logprob: -14.379094123840332
    8. '```' → logprob: -14.504094123840332
    9. '2' → logprob: -14.566594123840332
    10. ',' → logprob: -14.754094123840332

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033832306507974863
    2. ' ' → logprob: -8.000338554382324
    3. '-' → logprob: -14.250338554382324
    4. '```' → logprob: -14.437838554382324
    5. '2' → logprob: -14.875338554382324
    6. '   ' → logprob: -15.000338554382324
    7. '
' → logprob: -15.875338554382324
    8. '  ' → logprob: -16.375337600708008
    9. 'b' → logprob: -16.937837600708008
    10. ')' → logprob: -16.937837600708008

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026765360962599516
    2. ' ,' → logprob: -8.25026798248291
    3. ',b' → logprob: -12.50026798248291
    4. 'b' → logprob: -13.12526798248291
    5. ')' → logprob: -15.12526798248291
    6. ' b' → logprob: -16.750267028808594
    7. ',
' → logprob: -16.875267028808594
    8. ' ' → logprob: -17.000267028808594
    9. 'def' → logprob: -17.125267028808594
    10. '```' → logprob: -17.625267028808594

Token 210: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022524237632751
    2. ' b' → logprob: -1.91022527217865
    3. ')b' → logprob: -14.660224914550781
    4. '   ' → logprob: -15.410224914550781
    5. '	b' → logprob: -15.910224914550781
    6. '    ' → logprob: -16.16022491455078
    7. ' ' → logprob: -16.41022491455078
    8. ')' → logprob: -16.78522491455078
    9. 'B' → logprob: -17.28522491455078
    10. ' ' → logprob: -17.91022491455078

Token 211: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.082895273109898e-05
    2. ')
' → logprob: -10.500030517578125
    3. ' )' → logprob: -12.875030517578125
    4. '))' → logprob: -15.375030517578125
    5. ')

' → logprob: -16.000030517578125
    6. ')return' → logprob: -16.375030517578125
    7. '   ' → logprob: -16.750030517578125
    8. '())' → logprob: -17.375030517578125
    9. ')#' → logprob: -17.625030517578125
    10. '<|end|>' → logprob: -17.625030517578125

Token 212: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39430779218673706
    2. '<|end|>' → logprob: -1.2693078517913818
    3. '
' → logprob: -3.394307851791382
    4. '```' → logprob: -4.769307613372803
    5. '<|end|>' → logprob: -7.144307613372803
    6. 'return' → logprob: -7.769307613372803
    7. ')' → logprob: -7.769307613372803
    8. '\n' → logprob: -8.019308090209961
    9. '

' → logprob: -8.269308090209961
    10. '#' → logprob: -8.769308090209961

Token 213: ' initialize' (ID: 18400)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7536526918411255
    2. ' d' → logprob: -0.7536526918411255
    3. 'def' → logprob: -3.128652572631836
    4. ' def' → logprob: -5.753652572631836
    5. 'solve' → logprob: -5.878652572631836
    6. ' solve' → logprob: -6.753652572631836
    7. ' find' → logprob: -6.878652572631836
    8. 'calculate' → logprob: -7.003652572631836
    9. ' main' → logprob: -7.128652572631836
    10. 'dj' → logprob: -7.503652572631836

Token 214: '_d' (ID: 1565)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.11393623054027557
    2. '_distance' → logprob: -2.863936185836792
    3. 'dist' → logprob: -4.613936424255371
    4. '_' → logprob: -4.863936424255371
    5. '()' → logprob: -4.988936424255371
    6. '_cost' → logprob: -5.238936424255371
    7. '_times' → logprob: -6.238936424255371
    8. '_d' → logprob: -6.363936424255371
    9. '(' → logprob: -6.363936424255371
    10. '_heap' → logprob: -6.363936424255371

Token 215: 'ijkstra' (ID: 124290)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.07651058584451675
    2. 'ists' → logprob: -2.9515106678009033
    3. 'istance' → logprob: -4.201510429382324
    4. 'p' → logprob: -5.951510429382324
    5. 'is' → logprob: -6.451510429382324
    6. 'ijkstra' → logprob: -6.951510429382324
    7. '```' → logprob: -8.326510429382324
    8. '(dist' → logprob: -8.326510429382324
    9. 'dist' → logprob: -9.076510429382324
    10. '_dist' → logprob: -9.326510429382324

Token 216: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0186066627502441
    2. '(n' → logprob: -1.1436066627502441
    3. '(' → logprob: -1.8936066627502441
    4. '(edge' → logprob: -2.768606662750244
    5. '(distance' → logprob: -3.393606662750244
    6. '(edges' → logprob: -3.768606662750244
    7. '(dist' → logprob: -4.268606662750244
    8. '(size' → logprob: -5.143606662750244
    9. '(start' → logprob: -5.268606662750244
    10. '(graph' → logprob: -5.268606662750244

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11529484391212463
    2. '):' → logprob: -2.240294933319092
    3. '):
' → logprob: -6.115294933319092
    4. ',n' → logprob: -9.740294456481934
    5. ' ,' → logprob: -10.115294456481934
    6. ')' → logprob: -10.240294456481934
    7. '(n' → logprob: -11.365294456481934
    8. '):
' → logprob: -11.365294456481934
    9. ',size' → logprob: -11.490294456481934
    10. ' ):' → logprob: -11.615294456481934

Token 218: ' s' (ID: 265)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.308658242225647
    2. ' start' → logprob: -1.683658242225647
    3. 's' → logprob: -3.3086581230163574
    4. 'source' → logprob: -3.6836581230163574
    5. ' source' → logprob: -5.058658123016357
    6. ' s' → logprob: -5.808658123016357
    7. 'src' → logprob: -6.183658123016357
    8. 'edges' → logprob: -6.308658123016357
    9. 'dist' → logprob: -6.433658123016357
    10. 'edge' → logprob: -7.058658123016357

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38154587149620056
    2. ',' → logprob: -1.381545901298523
    3. '):
' → logprob: -2.7565457820892334
    4. ')' → logprob: -6.3815460205078125
    5. '):
' → logprob: -7.6315460205078125
    6. '):

' → logprob: -9.256546020507812
    7. ' ):' → logprob: -10.131546020507812
    8. '1' → logprob: -11.006546020507812
    9. 'e' → logprob: -11.006546020507812
    10. ',
' → logprob: -11.256546020507812

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4501812160015106
    2. 'dist' → logprob: -1.075181245803833
    3. ' dist' → logprob: -5.325181007385254
    4. ' distances' → logprob: -5.700181007385254
    5. 'return' → logprob: -5.825181007385254
    6. 'import' → logprob: -5.950181007385254
    7. ' return' → logprob: -5.950181007385254
    8. '(dist' → logprob: -6.325181007385254
    9. 'distance' → logprob: -7.200181007385254
    10. ' (' → logprob: -7.325181007385254

Token 221: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.33901509642601013
    2. '   ' → logprob: -1.9640151262283325
    3. 'return' → logprob: -2.214015007019043
    4. '([' → logprob: -4.214015007019043
    5. 'import' → logprob: -4.589015007019043
    6. '(dist' → logprob: -5.089015007019043
    7. 'distance' → logprob: -6.464015007019043
    8. ' dist' → logprob: -7.089015007019043
    9. 'cost' → logprob: -7.214015007019043
    10. ' return' → logprob: -7.214015007019043

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021944453939795494
    2. 'ist' → logprob: -4.146944522857666
    3. '=' → logprob: -6.021944522857666
    4. 'ists' → logprob: -6.146944522857666
    5. 'istance' → logprob: -6.896944522857666
    6. '=[' → logprob: -8.271944046020508
    7. 'is' → logprob: -10.646944046020508
    8. '   ' → logprob: -11.646944046020508
    9. ' =[' → logprob: -11.646944046020508
    10. 'dist' → logprob: -12.521944046020508

Token 223: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002063068561255932
    2. '[n' → logprob: -7.127063274383545
    3. '[int' → logprob: -7.627063274383545
    4. ' [' → logprob: -8.252062797546387
    5. '[s' → logprob: -8.377062797546387
    6. '[node' → logprob: -9.877062797546387
    7. '[array' → logprob: -10.127062797546387
    8. '[in' → logprob: -10.627062797546387
    9. '[new' → logprob: -10.877062797546387
    10. '[a' → logprob: -11.377062797546387

Token 224: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.012936439365148544
    2. '10' → logprob: -4.512936592102051
    3. '-' → logprob: -7.637936592102051
    4. 'sys' → logprob: -7.887936592102051
    5. '(float' → logprob: -7.887936592102051
    6. '(' → logprob: -8.26293659210205
    7. '[' → logprob: -8.51293659210205
    8. 'int' → logprob: -8.76293659210205
    9. ' float' → logprob: -11.51293659210205
    10. '1' → logprob: -11.76293659210205

Token 225: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -8.93579563125968e-05
    2. ''in' → logprob: -9.500089645385742
    3. '("' → logprob: -11.250089645385742
    4. ''' → logprob: -13.750089645385742
    5. '(' → logprob: -15.500089645385742
    6. 'inf' → logprob: -16.750089645385742
    7. '(in' → logprob: -16.875089645385742
    8. ''s' → logprob: -17.125089645385742
    9. ''inc' → logprob: -17.625089645385742
    10. ''ex' → logprob: -18.125089645385742

Token 226: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.128163257315464e-07
    2. 'in' → logprob: -15.5
    3. '"' → logprob: -17.25
    4. 'info' → logprob: -18.125
    5. '_inf' → logprob: -18.625
    6. ''in' → logprob: -18.875
    7. ''' → logprob: -18.875
    8. 'Inf' → logprob: -19.0
    9. 'INF' → logprob: -19.5
    10. '.inf' → logprob: -19.875

Token 227: '")]' (ID: 71224)
  Prédit: '")]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.020772289484739304
    2. ')]' → logprob: -4.020772457122803
    3. ']' → logprob: -6.770772457122803
    4. '")' → logprob: -7.145772457122803
    5. ')' → logprob: -7.395772457122803
    6. '')]' → logprob: -10.770771980285645
    7. '"),' → logprob: -11.020771980285645
    8. '"' → logprob: -11.270771980285645
    9. ',' → logprob: -12.270771980285645
    10. '"]' → logprob: -12.395771980285645

Token 228: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0642331838607788
    2. '*' → logprob: -1.5642331838607788
    3. ' *' → logprob: -2.6892333030700684
    4. ']' → logprob: -2.6892333030700684
    5. '
' → logprob: -2.6892333030700684
    6. ',' → logprob: -2.8142333030700684
    7. ')' → logprob: -3.0642333030700684
    8. 'for' → logprob: -3.8142333030700684
    9. '[' → logprob: -4.064233303070068
    10. 'd' → logprob: -4.189233303070068

Token 229: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00343910395167768
    2. ' n' → logprob: -5.753438949584961
    3. '(n' → logprob: -8.253438949584961
    4. '(' → logprob: -14.128438949584961
    5. ' (' → logprob: -15.753438949584961
    6. '	n' → logprob: -16.12843894958496
    7. ')n' → logprob: -17.75343894958496
    8. '   ' → logprob: -19.37843894958496
    9. '_n' → logprob: -19.87843894958496
    10. '(
' → logprob: -19.87843894958496

Token 230: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.050667136907577515
    2. 'd' → logprob: -3.0506670475006104
    3. '
' → logprob: -7.5506672859191895
    4. 's' → logprob: -8.050666809082031
    5. '    
' → logprob: -8.050666809082031
    6. '  
' → logprob: -8.175666809082031
    7. '	
' → logprob: -9.300666809082031
    8. ',' → logprob: -9.300666809082031
    9. '<|end|>' → logprob: -9.300666809082031
    10. ' 
' → logprob: -9.425666809082031

Token 231: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04870625212788582
    2. '   ' → logprob: -3.048706293106079
    3. ' d' → logprob: -9.5487060546875
    4. ' ' → logprob: -11.2987060546875
    5. '	d' → logprob: -11.2987060546875
    6. 's' → logprob: -11.4237060546875
    7. '  ' → logprob: -12.1737060546875
    8. '
' → logprob: -13.6737060546875
    9. '```' → logprob: -14.1737060546875
    10. 'p' → logprob: -14.2987060546875

Token 232: ' used' (ID: 2061)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.240481914370321e-05
    2. '   ' → logprob: -10.375052452087402
    3. 's' → logprob: -11.625052452087402
    4. ' d' → logprob: -11.750052452087402
    5. ' ' → logprob: -13.375052452087402
    6. 'p' → logprob: -14.625052452087402
    7. '```' → logprob: -14.625052452087402
    8. '	d' → logprob: -14.750052452087402
    9. '  ' → logprob: -14.875052452087402
    10. 'import' → logprob: -15.250052452087402

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05512576922774315
    2. '=' → logprob: -2.9301257133483887
    3. '[' → logprob: -8.680126190185547
    4. ' ' → logprob: -9.930126190185547
    5. ',' → logprob: -12.055126190185547
    6. '   ' → logprob: -12.555126190185547
    7. ')' → logprob: -12.680126190185547
    8. ' =[' → logprob: -12.805126190185547
    9. '  ' → logprob: -13.430126190185547
    10. '[s' → logprob: -13.430126190185547

Token 234: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008625805377960205
    2. ' [' → logprob: -4.7586259841918945
    3. '[n' → logprob: -11.508625984191895
    4. '[s' → logprob: -15.258625984191895
    5. ' ' → logprob: -15.383625984191895
    6. ' ' → logprob: -15.633625984191895
    7. '   ' → logprob: -16.008625030517578
    8. '[]' → logprob: -17.008625030517578
    9. 'False' → logprob: -17.133625030517578
    10. '[int' → logprob: -17.133625030517578

Token 235: 'True' (ID: 4710)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.836499985889532e-05
    2. ' False' → logprob: -9.7500581741333
    3. '(False' → logprob: -18.000059127807617
    4. '0' → logprob: -18.250059127807617
    5. '   ' → logprob: -19.250059127807617
    6. '=False' → logprob: -19.750059127807617
    7. 'True' → logprob: -20.250059127807617
    8. 'F' → logprob: -20.875059127807617
    9. '.False' → logprob: -21.000059127807617
    10. ']' → logprob: -22.125059127807617

Token 236: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022323327139019966
    2. ' ]' → logprob: -6.377232551574707
    3. ']*' → logprob: -7.752232551574707
    4. ' for' → logprob: -9.752232551574707
    5. '   ' → logprob: -11.127232551574707
    6. ',' → logprob: -11.627232551574707
    7. 'for' → logprob: -13.002232551574707
    8. ')' → logprob: -13.127232551574707
    9. '    ' → logprob: -13.127232551574707
    10. '  ' → logprob: -13.252232551574707

Token 237: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10949400067329407
    2. ' ]' → logprob: -2.8594939708709717
    3. ',' → logprob: -4.109494209289551
    4. 'False' → logprob: -4.734494209289551
    5. ' ' → logprob: -5.484494209289551
    6. '   ' → logprob: -5.609494209289551
    7. ' for' → logprob: -5.609494209289551
    8. '  ' → logprob: -5.984494209289551
    9. ' False' → logprob: -6.859494209289551
    10. '+' → logprob: -7.359494209289551

Token 238: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006277294596657157
    2. ' n' → logprob: -7.375627517700195
    3. '(n' → logprob: -14.000627517700195
    4. ' (' → logprob: -15.500627517700195
    5. '(' → logprob: -16.500627517700195
    6. ')n' → logprob: -17.625627517700195
    7. '	n' → logprob: -18.000627517700195
    8. '   ' → logprob: -18.250627517700195
    9. '<|end|>' → logprob: -18.500627517700195
    10. ' ' → logprob: -18.625627517700195

Token 239: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08438893407583237
    2. '<|end|>' → logprob: -2.8343889713287354
    3. '   ' → logprob: -4.084388732910156
    4. '    
' → logprob: -6.084388732910156
    5. ' 
' → logprob: -7.084388732910156
    6. '  
' → logprob: -7.209388732910156
    7. ' ' → logprob: -7.709388732910156
    8. '   
' → logprob: -7.959388732910156
    9. '  ' → logprob: -8.459388732910156
    10. '<|end|>' → logprob: -9.084388732910156

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.342944473028183
    2. 'd' → logprob: -2.092944383621216
    3. '
' → logprob: -2.092944383621216
    4. '<|end|>' → logprob: -3.592944383621216
    5. ' used' → logprob: -5.092944622039795
    6. ' ' → logprob: -5.842944622039795
    7. '    
' → logprob: -6.092944622039795
    8. 'used' → logprob: -6.967944622039795
    9. 'def' → logprob: -7.342944622039795
    10. ')' → logprob: -7.467944622039795

Token 241: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.6723031401634216
    2. 'used' → logprob: -1.6723031997680664
    3. '   ' → logprob: -1.7973031997680664
    4. ' used' → logprob: -2.0473031997680664
    5. ' d' → logprob: -5.547303199768066
    6. '  ' → logprob: -6.922303199768066
    7. ' ' → logprob: -7.297303199768066
    8. 'False' → logprob: -7.922303199768066
    9. '    
' → logprob: -8.922303199768066
    10. 'return' → logprob: -9.172303199768066

Token 242: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.014917649328708649
    2. '[' → logprob: -4.389917850494385
    3. '<|end|>' → logprob: -6.264917850494385
    4. 's' → logprob: -7.764917850494385
    5. '<|end|>' → logprob: -11.389917373657227
    6. '<s' → logprob: -11.889917373657227
    7. ' s' → logprob: -11.889917373657227
    8. '=s' → logprob: -12.139917373657227
    9. ' =' → logprob: -12.139917373657227
    10. '(s' → logprob: -12.389917373657227

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006383348954841495
    2. ' ]' → logprob: -7.375638484954834
    3. ']=' → logprob: -11.500638008117676
    4. ')' → logprob: -14.750638008117676
    5. ']
' → logprob: -15.000638008117676
    6. '[' → logprob: -15.625638008117676
    7. 'space' → logprob: -16.000638961791992
    8. ' ' → logprob: -16.000638961791992
    9. '],' → logprob: -16.125638961791992
    10. ')]' → logprob: -16.500638961791992

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759703516960144
    2. '=' → logprob: -0.8259703516960144
    3. ',' → logprob: -11.825970649719238
    4. '<|end|>' → logprob: -11.950970649719238
    5. '[' → logprob: -12.950970649719238
    6. ']' → logprob: -12.950970649719238
    7. ')' → logprob: -13.200970649719238
    8. ' =
' → logprob: -13.450970649719238
    9. ' ' → logprob: -13.575970649719238
    10. ']=' → logprob: -14.075970649719238

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '۰' → logprob: -17.31250762939453
    4. '   ' → logprob: -17.50000762939453
    5. '000' → logprob: -17.50000762939453
    6. '00' → logprob: -17.68750762939453
    7. '1' → logprob: -18.43750762939453
    8. 's' → logprob: -18.56250762939453
    9. '  ' → logprob: -18.75000762939453
    10. 'float' → logprob: -18.81250762939453

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'float' → logprob: -16.312503814697266
    4. '۰' → logprob: -17.000003814697266
    5. '1' → logprob: -17.437503814697266
    6. '00' → logprob: -17.937503814697266
    7. '000' → logprob: -18.187503814697266
    8. '０' → logprob: -18.562503814697266
    9. '   ' → logprob: -18.750003814697266
    10. '-' → logprob: -19.000003814697266

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1430872678756714
    2. '   ' → logprob: -2.518087387084961
    3. '<|end|>' → logprob: -3.018087387084961
    4. '    
' → logprob: -6.643087387084961
    5. ' ' → logprob: -7.018087387084961
    6. '  
' → logprob: -7.643087387084961
    7. ' 
' → logprob: -7.893087387084961
    8. '	return' → logprob: -8.768087387084961
    9. '\n' → logprob: -9.393087387084961
    10. ',' → logprob: -9.518087387084961

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005064044613391161
    2. '<|end|>' → logprob: -5.505064010620117
    3. '
' → logprob: -7.630064010620117
    4. '	return' → logprob: -8.755064010620117
    5. '    
' → logprob: -8.880064010620117
    6. '\t' → logprob: -9.880064010620117
    7. ',' → logprob: -10.630064010620117
    8. ' ' → logprob: -11.130064010620117
    9. '   ' → logprob: -11.380064010620117
    10. ' used' → logprob: -11.380064010620117

Token 249: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.03699764981865883
    2. '   ' → logprob: -4.1619977951049805
    3. ' used' → logprob: -4.5369977951049805
    4. 'False' → logprob: -5.5369977951049805
    5. 'import' → logprob: -6.7869977951049805
    6. 'heap' → logprob: -6.9119977951049805
    7. 'def' → logprob: -7.1619977951049805
    8. 'True' → logprob: -7.5369977951049805
    9. 'return' → logprob: -7.7869977951049805
    10. '
' → logprob: -7.9119977951049805

Token 250: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.031304843723773956
    2. ' =' → logprob: -4.156304836273193
    3. '=' → logprob: -4.406304836273193
    4. '[' → logprob: -5.906304836273193
    5. '=False' → logprob: -9.031305313110352
    6. '[:]' → logprob: -10.156305313110352
    7. '=[' → logprob: -10.781305313110352
    8. '=s' → logprob: -11.406305313110352
    9. '=True' → logprob: -11.781305313110352
    10. 'False' → logprob: -12.156305313110352

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.796184723294573e-06
    2. ']=' → logprob: -12.375005722045898
    3. ' ]' → logprob: -13.375005722045898
    4. ']
' → logprob: -17.0000057220459
    5. '=' → logprob: -18.3750057220459
    6. ')' → logprob: -19.1250057220459
    7. '']' → logprob: -19.6250057220459
    8. '`]' → logprob: -19.6250057220459
    9. ']

' → logprob: -20.7500057220459
    10. '   ' → logprob: -20.7500057220459

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026478411629796028
    2. ' =' → logprob: -3.6514785289764404
    3. '=False' → logprob: -8.65147876739502
    4. 'False' → logprob: -13.15147876739502
    5. '=True' → logprob: -14.77647876739502
    6. '=false' → logprob: -15.15147876739502
    7. 'alse' → logprob: -16.401477813720703
    8. '[' → logprob: -16.526477813720703
    9. ',' → logprob: -16.651477813720703
    10. ' ' → logprob: -16.651477813720703

Token 253: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.848420551046729e-05
    2. ' False' → logprob: -9.7500581741333
    3. 'True' → logprob: -16.000059127807617
    4. '(False' → logprob: -18.250059127807617
    5. '0' → logprob: -19.125059127807617
    6. '=False' → logprob: -19.875059127807617
    7. 'F' → logprob: -20.125059127807617
    8. '
' → logprob: -20.250059127807617
    9. '   ' → logprob: -20.500059127807617
    10. '[' → logprob: -20.750059127807617

Token 254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061417847871780396
    2. '<|end|>' → logprob: -3.061417818069458
    3. '
' → logprob: -4.811418056488037
    4. '	return' → logprob: -5.561418056488037
    5. '<|end|>' → logprob: -8.311417579650879
    6. '    
' → logprob: -8.811417579650879
    7. ' return' → logprob: -9.061417579650879
    8. 'return' → logprob: -9.311417579650879
    9. ' ' → logprob: -9.936417579650879
    10. ')' → logprob: -11.061417579650879

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06523140519857407
    2. '<|end|>' → logprob: -2.8152313232421875
    3. '	return' → logprob: -6.3152313232421875
    4. '
' → logprob: -7.9402313232421875
    5. '<|end|>' → logprob: -8.565231323242188
    6. ' ' → logprob: -9.065231323242188
    7. '    
' → logprob: -9.190231323242188
    8. 'def' → logprob: -9.190231323242188
    9. ',' → logprob: -9.565231323242188
    10. ')' → logprob: -9.690231323242188

Token 256: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6446574926376343
    2. 'return' (adapté à ' return') → logprob: -0.7696574926376343
    3. ' return' → logprob: -5.269657611846924
    4. 'heap' → logprob: -5.769657611846924
    5. 'import' → logprob: -6.144657611846924
    6. '	return' → logprob: -7.269657611846924
    7. 'pq' → logprob: -7.394657611846924
    8. 'queue' → logprob: -9.894657135009766
    9. ' ' → logprob: -10.144657135009766
    10. 'q' → logprob: -10.269657135009766

Token 257: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011069283820688725
    2. ' d' → logprob: -4.511069297790527
    3. '(d' → logprob: -10.761069297790527
    4. ' (' → logprob: -16.01106834411621
    5. '	d' → logprob: -16.51106834411621
    6. '   ' → logprob: -17.01106834411621
    7. '[d' → logprob: -18.01106834411621
    8. '(' → logprob: -18.63606834411621
    9. ' ' → logprob: -20.01106834411621
    10. '_d' → logprob: -20.38606834411621

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043925188947468996
    2. ' ,' → logprob: -8.625439643859863
    3. '<|end|>' → logprob: -8.625439643859863
    4. 'used' → logprob: -10.375439643859863
    5. ' used' → logprob: -10.750439643859863
    6. ',
' → logprob: -12.125439643859863
    7. '   ' → logprob: -12.375439643859863
    8. 'def' → logprob: -13.000439643859863
    9. '	' → logprob: -13.000439643859863
    10. '<|end|>' → logprob: -13.125439643859863

Token 259: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.07889066636562347
    2. ' used' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.953890800476074
    4. '.used' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.203889846801758
    6. '[' → logprob: -16.703889846801758
    7. '_used' → logprob: -16.828889846801758
    8. 'use' → logprob: -16.953889846801758
    9. 'user' → logprob: -17.328889846801758
    10. ' ' → logprob: -17.453889846801758

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05688348039984703
    2. '<|end|>' → logprob: -2.9318835735321045
    3. '<|end|>' → logprob: -7.181883335113525
    4. '
' → logprob: -7.431883335113525
    5. ')' → logprob: -7.931883335113525
    6. '```' → logprob: -9.681883811950684
    7. 'd' → logprob: -10.181883811950684
    8. '#' → logprob: -10.306883811950684
    9. ' def' → logprob: -10.681883811950684
    10. ',' → logprob: -10.806883811950684

Token 262: ' push' (ID: 9349)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4365285336971283
    2. ' d' → logprob: -1.0615285634994507
    3. ' run' → logprob: -5.68652868270874
    4. 'run' → logprob: -6.18652868270874
    5. 'solve' → logprob: -8.686528205871582
    6. 'multi' → logprob: -8.936528205871582
    7. 'def' → logprob: -8.999028205871582
    8. ' find' → logprob: -9.374028205871582
    9. ' bid' → logprob: -9.436528205871582
    10. 'main' → logprob: -9.624028205871582

Token 263: '_initial' (ID: 45740)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.13201692700386047
    2. ' (' → logprob: -2.632016897201538
    3. '(' → logprob: -3.507016897201538
    4. '_' → logprob: -4.632017135620117
    5. '_heap' → logprob: -5.132017135620117
    6. '(queue' → logprob: -5.757017135620117
    7. 'heap' → logprob: -7.007017135620117
    8. '_(' → logprob: -7.882017135620117
    9. '<|end|>' → logprob: -8.257017135620117
    10. ' heap' → logprob: -8.507017135620117

Token 264: '_edges' (ID: 68870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2731059193611145
    2. '(heap' → logprob: -2.3981058597564697
    3. ' (' → logprob: -2.7731058597564697
    4. '_' → logprob: -4.148106098175049
    5. '_heap' → logprob: -4.398106098175049
    6. '(d' → logprob: -4.523106098175049
    7. '_distance' → logprob: -4.648106098175049
    8. '_dist' → logprob: -5.023106098175049
    9. '(dist' → logprob: -5.648106098175049
    10. '_p' → logprob: -6.023106098175049

Token 265: '_to' (ID: 5089)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.12097448110580444
    2. '(' → logprob: -2.620974540710449
    3. '(d' → logprob: -3.745974540710449
    4. '(edges' → logprob: -4.620974540710449
    5. '(heap' → logprob: -5.245974540710449
    6. ' (' → logprob: -6.620974540710449
    7. '(ed' → logprob: -7.995974540710449
    8. '(u' → logprob: -8.62097454071045
    9. '(queue' → logprob: -8.74597454071045
    10. '(distance' → logprob: -9.24597454071045

Token 266: '_heap' (ID: 88741)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.016691209748387337
    2. 'queue' → logprob: -4.516691207885742
    3. 'def' → logprob: -6.516691207885742
    4. '_heap' → logprob: -6.641691207885742
    5. ' heap' → logprob: -6.766691207885742
    6. '(heap' → logprob: -6.766691207885742
    7. '_queue' → logprob: -8.516691207885742
    8. 'priority' → logprob: -9.391691207885742
    9. 'pq' → logprob: -9.766691207885742
    10. '(queue' → logprob: -10.141691207885742

Token 267: '(edge' (ID: 84023)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.10249371081590652
    2. '(' → logprob: -2.6024937629699707
    3. '(edge' → logprob: -4.102493762969971
    4. '(h' → logprob: -5.477493762969971
    5. '(edges' → logprob: -6.977493762969971
    6. '(d' → logprob: -7.102493762969971
    7. ' (' → logprob: -7.602493762969971
    8. '(queue' → logprob: -9.727493286132812
    9. '(n' → logprob: -9.727493286132812
    10. '(u' → logprob: -9.852493286132812

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05061058700084686
    2. '1' → logprob: -3.5506105422973633
    3. 's' → logprob: -4.050610542297363
    4. ' ,' → logprob: -6.925610542297363
    5. '):' → logprob: -7.050610542297363
    6. '[' → logprob: -7.800610542297363
    7. ')' → logprob: -8.050610542297363
    8. ',s' → logprob: -8.800610542297363
    9. ',
' → logprob: -8.925610542297363
    10. '[s' → logprob: -9.175610542297363

Token 269: ' s' (ID: 265)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1126019954681396
    2. ' d' → logprob: -1.2376019954681396
    3. ' s' → logprob: -1.9876019954681396
    4. 's' → logprob: -2.3626019954681396
    5. ' heap' → logprob: -2.3626019954681396
    6. 'heap' → logprob: -3.3626019954681396
    7. 'u' → logprob: -4.987602233886719
    8. ' n' → logprob: -5.362602233886719
    9. ' u' → logprob: -5.737602233886719
    10. 'n' → logprob: -5.987602233886719

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003206234658136964
    2. '):' → logprob: -5.753206253051758
    3. ' ,' → logprob: -11.128206253051758
    4. '):
' → logprob: -11.753206253051758
    5. '   ' → logprob: -14.253206253051758
    6. ')' → logprob: -14.253206253051758
    7. ',s' → logprob: -14.378206253051758
    8. ',n' → logprob: -14.753206253051758
    9. ',d' → logprob: -14.753206253051758
    10. ' ):' → logprob: -14.753206253051758

Token 271: ' ed' (ID: 1648)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.48610740900039673
    2. ' d' → logprob: -1.486107349395752
    3. 'heap' → logprob: -2.111107349395752
    4. ' heap' → logprob: -3.361107349395752
    5. 'h' → logprob: -6.361107349395752
    6. ' h' → logprob: -8.36110782623291
    7. ')' → logprob: -8.79860782623291
    8. 'he' → logprob: -8.98610782623291
    9. ' ' → logprob: -9.42360782623291
    10. '```' → logprob: -9.98610782623291

Token 272: 'gel' (ID: 9457)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.0024753010366111994
    2. 'ges' → logprob: -6.252475261688232
    3. 'get' → logprob: -9.12747573852539
    4. ')' → logprob: -9.62747573852539
    5. 'g' → logprob: -9.75247573852539
    6. ',' → logprob: -9.87747573852539
    7. '[' → logprob: -10.37747573852539
    8. 'ege' → logprob: -10.37747573852539
    9. 'dge' → logprob: -10.50247573852539
    10. 'gel' → logprob: -10.62747573852539

Token 273: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.2590201497077942
    2. 'st' → logprob: -1.8840200901031494
    3. 'ess' → logprob: -3.6340200901031494
    4. 'en' → logprob: -4.6340203285217285
    5. 'e' → logprob: -5.2590203285217285
    6. 'ines' → logprob: -5.5090203285217285
    7. 'ength' → logprob: -5.8840203285217285
    8. 'ine' → logprob: -6.0090203285217285
    9. 'oop' → logprob: -6.1340203285217285
    10. 'l' → logprob: -6.1340203285217285

Token 274: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3199186325073242
    2. '):' → logprob: -1.3199186325073242
    3. '):
' → logprob: -5.444918632507324
    4. ')' → logprob: -7.194918632507324
    5. ' ):' → logprob: -7.569918632507324
    6. ' ,' → logprob: -7.944918632507324
    7. 't' → logprob: -8.319918632507324
    8. 's' → logprob: -8.569918632507324
    9. '),' → logprob: -9.569918632507324
    10. 'e' → logprob: -10.444918632507324

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12411299347877502
    2. ':' → logprob: -2.499113082885742
    3. ',' → logprob: -3.749113082885742
    4. ' for' → logprob: -5.249113082885742
    5. '):' → logprob: -6.499113082885742
    6. ' :' → logprob: -6.874113082885742
    7. ':
' → logprob: -7.249113082885742
    8. '	for' → logprob: -7.749113082885742
    9. '(heap' → logprob: -7.874113082885742
    10. '):
' → logprob: -8.249113082885742

Token 276: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23371736705303192
    2. ' for' → logprob: -1.7337173223495483
    3. '   ' → logprob: -3.983717441558838
    4. 'heap' → logprob: -4.858717441558838
    5. 'import' → logprob: -5.858717441558838
    6. ' heap' → logprob: -6.108717441558838
    7. '	for' → logprob: -9.10871696472168
    8. ' import' → logprob: -9.73371696472168
    9. 'def' → logprob: -10.35871696472168
    10. 'h' → logprob: -10.48371696472168

Token 277: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.056153446435928345
    2. ' e' → logprob: -3.1811535358428955
    3. 'encoded' → logprob: -4.806153297424316
    4. ' encoded' → logprob: -6.056153297424316
    5. 'edge' → logprob: -6.806153297424316
    6. 'i' → logprob: -8.056153297424316
    7. ' edge' → logprob: -8.431153297424316
    8. 'cost' → logprob: -8.931153297424316
    9. 'enc' → logprob: -9.181153297424316
    10. 'neighbor' → logprob: -9.431153297424316

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012573933228850365
    2. 'in' → logprob: -4.387573719024658
    3. 'n' → logprob: -10.512574195861816
    4. ' ' → logprob: -11.387574195861816
    5. 'e' → logprob: -11.762574195861816
    6. 'd' → logprob: -12.137574195861816
    7. 's' → logprob: -12.512574195861816
    8. '  ' → logprob: -13.637574195861816
    9. ')' → logprob: -14.012574195861816
    10. 'i' → logprob: -14.325074195861816

Token 279: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07914920151233673
    2. ' edge' → logprob: -2.5791492462158203
    3. '(edge' → logprob: -8.32914924621582
    4. '=edge' → logprob: -11.20414924621582
    5. 'dge' → logprob: -13.07914924621582
    6. 'ed' → logprob: -13.82914924621582
    7. 'e' → logprob: -14.57914924621582
    8. 'range' → logprob: -15.57914924621582
    9. ' ' → logprob: -15.70414924621582
    10. '_edge' → logprob: -15.82914924621582

Token 280: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00010747690976131707
    2. 's' → logprob: -9.750107765197754
    3. '[' → logprob: -10.250107765197754
    4. '(s' → logprob: -13.000107765197754
    5. '   ' → logprob: -13.375107765197754
    6. '[e' → logprob: -13.750107765197754
    7. ' s' → logprob: -14.125107765197754
    8. '[S' → logprob: -14.375107765197754
    9. ')' → logprob: -14.500107765197754
    10. '=s' → logprob: -14.500107765197754

Token 281: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1172368973493576
    2. ']):' → logprob: -2.242236852645874
    3. '):' → logprob: -5.992237091064453
    4. ']' → logprob: -6.367237091064453
    5. '])' → logprob: -9.492237091064453
    6. ']):
' → logprob: -10.617237091064453
    7. ']:
' → logprob: -10.867237091064453
    8. ' ]' → logprob: -11.117237091064453
    9. ':' → logprob: -11.492237091064453
    10. ']>' → logprob: -11.867237091064453

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015725912526249886
    2. ' heap' → logprob: -7.126572608947754
    3. '   ' → logprob: -8.126572608947754
    4. 'heap' → logprob: -8.376572608947754
    5. 'ed' → logprob: -9.251572608947754
    6. 'he' → logprob: -9.626572608947754
    7. ' ed' → logprob: -10.501572608947754
    8. '           ' → logprob: -11.001572608947754
    9. ' he' → logprob: -11.501572608947754
    10. '      ' → logprob: -12.126572608947754

Token 283: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.22444960474967957
    2. '   ' → logprob: -2.474449634552002
    3. ' heap' → logprob: -2.974449634552002
    4. 'ed' → logprob: -2.974449634552002
    5. 'he' → logprob: -4.974449634552002
    6. '       ' → logprob: -5.474449634552002
    7. '           ' → logprob: -6.474449634552002
    8. ' he' → logprob: -8.099449157714844
    9. ' ed' → logprob: -8.099449157714844
    10. 'if' → logprob: -8.099449157714844

Token 284: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00021152703266125172
    2. '.he' → logprob: -9.125211715698242
    3. '.' → logprob: -9.500211715698242
    4. '.push' → logprob: -11.375211715698242
    5. ' .' → logprob: -12.250211715698242
    6. '   ' → logprob: -12.625211715698242
    7. '.append' → logprob: -13.500211715698242
    8. '```' → logprob: -13.875211715698242
    9. '.q' → logprob: -14.000211715698242
    10. 'e' → logprob: -14.125211715698242

Token 285: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.558399319241289e-05
    2. '.' → logprob: -10.750025749206543
    3. 'he' → logprob: -13.250025749206543
    4. '.push' → logprob: -13.750025749206543
    5. '.heap' → logprob: -13.750025749206543
    6. ' .' → logprob: -16.750024795532227
    7. ' he' → logprob: -17.250024795532227
    8. 'push' → logprob: -17.750024795532227
    9. '_he' → logprob: -18.375024795532227
    10. '.h' → logprob: -18.625024795532227

Token 286: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.4121114822482923e-06
    2. 'ap' → logprob: -12.750003814697266
    3. 'pp' → logprob: -14.875003814697266
    4. 'push' → logprob: -16.000003814697266
    5. 'a' → logprob: -19.500003814697266
    6. '```' → logprob: -20.000003814697266
    7. '[' → logprob: -20.125003814697266
    8. 'p' → logprob: -20.625003814697266
    9. 'appen' → logprob: -21.000003814697266
    10. 'q' → logprob: -21.250003814697266

Token 287: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.04294940456748009
    2. 'push' → logprob: -3.2929494380950928
    3. 'uf' → logprob: -5.667949199676514
    4. 'p' → logprob: -7.792949199676514
    5. 'rf' → logprob: -9.042949676513672
    6. 'ut' → logprob: -9.042949676513672
    7. 'n' → logprob: -9.167949676513672
    8. 'Push' → logprob: -9.292949676513672
    9. 'app' → logprob: -9.417949676513672
    10. 'le' → logprob: -9.667949676513672

Token 288: '(ed' (ID: 135912)
  Prédit: '(ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ed' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. ' (' → logprob: -14.125004768371582
    4. 'ed' → logprob: -16.375003814697266
    5. ' ed' → logprob: -16.875003814697266
    6. '(edge' → logprob: -17.250003814697266
    7. '(e' → logprob: -17.750003814697266
    8. '(edges' → logprob: -18.000003814697266
    9. '(heap' → logprob: -18.375003814697266
    10. '(m' → logprob: -18.875003814697266

Token 289: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -7.226628895296017e-06
    2. 'ge' → logprob: -12.375007629394531
    3. 'del' → logprob: -13.500007629394531
    4. '
' → logprob: -15.000007629394531
    5. 'g' → logprob: -15.250007629394531
    6. ' gel' → logprob: -15.250007629394531
    7. 'get' → logprob: -16.12500762939453
    8. 'vel' → logprob: -16.12500762939453
    9. '   ' → logprob: -16.50000762939453
    10. '```' → logprob: -16.50000762939453

Token 290: 'ist' (ID: 421)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.012364253401756287
    2. 'q' → logprob: -5.137364387512207
    3. 'ist' → logprob: -5.887364387512207
    4. 'ap' → logprob: -6.637364387512207
    5. 'op' → logprob: -7.262364387512207
    6. 'p' → logprob: -7.512364387512207
    7. 'e' → logprob: -7.637364387512207
    8. 'el' → logprob: -8.512364387512207
    9. '[' → logprob: -8.887364387512207
    10. 'push' → logprob: -9.512364387512207

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18581992387771606
    2. '(' → logprob: -2.0608198642730713
    3. '(e' → logprob: -3.4358198642730713
    4. ',e' → logprob: -4.93582010269165
    5. ',(' → logprob: -6.18582010269165
    6. ' ,' → logprob: -7.93582010269165
    7. ')' → logprob: -8.685819625854492
    8. '(edge' → logprob: -8.935819625854492
    9. ' (' → logprob: -10.685819625854492
    10. ' (,' → logprob: -11.185819625854492

Token 292: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12620723247528076
    2. '(e' → logprob: -2.7512073516845703
    3. '(' → logprob: -3.7512073516845703
    4. ' (' → logprob: -4.12620735168457
    5. ' e' → logprob: -4.25120735168457
    6. 'decode' → logprob: -7.87620735168457
    7. '   ' → logprob: -9.25120735168457
    8. '(de' → logprob: -9.37620735168457
    9. ' decode' → logprob: -9.62620735168457
    10. ')' → logprob: -9.75120735168457

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ' )' → logprob: -11.500019073486328
    3. ')
' → logprob: -12.125019073486328
    4. '   ' → logprob: -13.250019073486328
    5. '       ' → logprob: -14.125019073486328
    6. '())' → logprob: -15.875019073486328
    7. ')e' → logprob: -16.250019073486328
    8. ')return' → logprob: -16.375019073486328
    9. '))' → logprob: -17.125019073486328
    10. '`)' → logprob: -17.625019073486328

Token 294: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7838061451911926
    2. '<|end|>' → logprob: -0.7838061451911926
    3. '
' → logprob: -3.408806085586548
    4. ')' → logprob: -3.408806085586548
    5. '```' → logprob: -4.533806324005127
    6. '#' → logprob: -6.033806324005127
    7. '\n' → logprob: -7.033806324005127
    8. 'd' → logprob: -7.158806324005127
    9. 'newline' → logprob: -7.158806324005127
    10. '<|end|>' → logprob: -7.283806324005127

Token 295: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2794380486011505
    2. ' def' → logprob: -1.9044380187988281
    3. 'd' → logprob: -3.404438018798828
    4. ' process' → logprob: -4.029438018798828
    5. ' d' → logprob: -4.404438018798828
    6. 'process' → logprob: -4.404438018798828
    7. ' run' → logprob: -5.529438018798828
    8. ' find' → logprob: -6.279438018798828
    9. 'run' → logprob: -6.404438018798828
    10. 'ef' → logprob: -6.779438018798828

Token 296: '_adj' (ID: 117293)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5429933667182922
    2. '_edge' → logprob: -2.0429933071136475
    3. '_ed' → logprob: -2.2929933071136475
    4. '_' → logprob: -2.4179933071136475
    5. '_d' → logprob: -2.7929933071136475
    6. '_next' → logprob: -4.167993545532227
    7. '_heap' → logprob: -5.917993545532227
    8. '_nodes' → logprob: -5.917993545532227
    9. '_line' → logprob: -6.167993545532227
    10. '_queue' → logprob: -6.542993545532227

Token 297: 'acent' (ID: 28063)
  Prédit: 'acency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acency' → logprob: -0.20422440767288208
    2. 'acent' → logprob: -1.7042243480682373
    3. 'ac' → logprob: -7.204224586486816
    4. '[' → logprob: -7.454224586486816
    5. '_list' → logprob: -7.829224586486816
    6. '```' → logprob: -8.329224586486816
    7. '_edges' → logprob: -8.454224586486816
    8. 'ec' → logprob: -8.829224586486816
    9. '[]' → logprob: -9.329224586486816
    10. '[u' → logprob: -9.704224586486816

Token 298: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.051855847239494324
    2. '_edge' → logprob: -3.5518558025360107
    3. '_nodes' → logprob: -4.42685604095459
    4. '(edge' → logprob: -5.55185604095459
    5. '_vertices' → logprob: -6.42685604095459
    6. '_' → logprob: -7.30185604095459
    7. 'edges' → logprob: -7.30185604095459
    8. 'edge' → logprob: -7.67685604095459
    9. '_list' → logprob: -7.92685604095459
    10. '_node' → logprob: -8.05185604095459

Token 299: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.08045414090156555
    2. '(' → logprob: -2.580454111099243
    3. '(ed' → logprob: -7.080454349517822
    4. '(edges' → logprob: -8.205453872680664
    5. '(line' → logprob: -8.330453872680664
    6. ' (' → logprob: -8.955453872680664
    7. '(def' → logprob: -11.080453872680664
    8. '(
' → logprob: -11.205453872680664
    9. '(node' → logprob: -11.580453872680664
    10. '(e' → logprob: -12.205453872680664

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014406509581021965
    2. ' ,' → logprob: -9.250144004821777
    3. '):' → logprob: -11.375144004821777
    4. ',s' → logprob: -11.875144004821777
    5. '   ' → logprob: -12.000144004821777
    6. '(edge' → logprob: -12.250144004821777
    7. '[' → logprob: -12.625144004821777
    8. '):
' → logprob: -13.500144004821777
    9. 's' → logprob: -13.500144004821777
    10. ',
' → logprob: -13.750144004821777

Token 301: ' min' (ID: 1349)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3252888917922974
    2. ' u' → logprob: -1.8252888917922974
    3. 'v' → logprob: -2.075288772583008
    4. ' v' → logprob: -2.200288772583008
    5. 'd' → logprob: -2.700288772583008
    6. ' node' → logprob: -3.075288772583008
    7. ' used' → logprob: -3.075288772583008
    8. 'used' → logprob: -3.325288772583008
    9. ' d' → logprob: -3.575288772583008
    10. 'node' → logprob: -3.575288772583008

Token 302: 'edge' (ID: 13457)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5264582633972168
    2. '_ed' → logprob: -1.5264582633972168
    3. 'ed' → logprob: -1.7764582633972168
    4. '_e' → logprob: -2.526458263397217
    5. '_edge' → logprob: -2.651458263397217
    6. '_dist' → logprob: -2.776458263397217
    7. '_' → logprob: -3.276458263397217
    8. 'dist' → logprob: -3.776458263397217
    9. '_cost' → logprob: -3.901458263397217
    10. '_edges' → logprob: -4.151458263397217

Token 303: '_v' (ID: 5390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008421548642218113
    2. 's' → logprob: -6.008421421051025
    3. '):' → logprob: -6.133421421051025
    4. 'list' → logprob: -7.008421421051025
    5. '_list' → logprob: -7.633421421051025
    6. 'ist' → logprob: -7.883421421051025
    7. 'e' → logprob: -8.258421897888184
    8. '):
' → logprob: -8.508421897888184
    9. ' ,' → logprob: -8.633421897888184
    10. '_,' → logprob: -8.758421897888184

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1596461832523346
    2. '):' → logprob: -2.1596462726593018
    3. 'al' → logprob: -3.7846462726593018
    4. '):
' → logprob: -5.034646034240723
    5. '):

' → logprob: -7.659646034240723
    6. 'alue' → logprob: -8.034646034240723
    7. ' ,' → logprob: -8.034646034240723
    8. ')' → logprob: -8.034646034240723
    9. 'e' → logprob: -8.284646034240723
    10. 'ert' → logprob: -9.034646034240723

Token 305: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.4403952360153198
    2. 'd' → logprob: -1.8153952360153198
    3. ' ed' → logprob: -1.9403952360153198
    4. 'used' → logprob: -2.1903953552246094
    5. ' used' → logprob: -2.8153953552246094
    6. ' d' → logprob: -2.8153953552246094
    7. ' s' → logprob: -3.4403953552246094
    8. 'min' → logprob: -3.5653953552246094
    9. ' min' → logprob: -3.6903953552246094
    10. 'v' → logprob: -3.8153953552246094

Token 306: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -3.7146746763028204e-05
    2. 'ge' → logprob: -10.62503719329834
    3. 'ges' → logprob: -12.50003719329834
    4. 'gest' → logprob: -13.00003719329834
    5. 'get' → logprob: -13.50003719329834
    6. 'egel' → logprob: -14.00003719329834
    7. 'g' → logprob: -14.12503719329834
    8. ' gel' → logprob: -14.50003719329834
    9. 'gen' → logprob: -14.87503719329834
    10. 'eg' → logprob: -15.31253719329834

Token 307: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00016945181414484978
    2. 'st' → logprob: -9.00016975402832
    3. 'is' → logprob: -11.37516975402832
    4. 'ists' → logprob: -11.87516975402832
    5. 'i' → logprob: -12.50016975402832
    6. '[' → logprob: -13.37516975402832
    7. '
' → logprob: -13.43766975402832
    8. 'ost' → logprob: -13.50016975402832
    9. '   ' → logprob: -13.68766975402832
    10. '_' → logprob: -13.75016975402832

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03373341262340546
    2. '):' → logprob: -3.408733367919922
    3. '):
' → logprob: -10.408733367919922
    4. ')' → logprob: -11.033733367919922
    5. ' ,' → logprob: -11.033733367919922
    6. ' ):' → logprob: -11.158733367919922
    7. ':' → logprob: -12.908733367919922
    8. '   ' → logprob: -13.283733367919922
    9. ',s' → logprob: -14.283733367919922
    10. 's' → logprob: -14.408733367919922

Token 309: ' used' (ID: 2061)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16294750571250916
    2. ' d' → logprob: -2.537947416305542
    3. 'used' → logprob: -3.287947416305542
    4. ' used' → logprob: -4.162947654724121
    5. 'min' → logprob: -4.412947654724121
    6. ' min' → logprob: -5.912947654724121
    7. 'edge' → logprob: -7.662947654724121
    8. ')' → logprob: -8.100447654724121
    9. 'heap' → logprob: -8.225447654724121
    10. 's' → logprob: -8.350447654724121

Token 310: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02073013223707676
    2. ',' → logprob: -4.145730018615723
    3. '):
' → logprob: -5.395730018615723
    4. ' ):' → logprob: -9.770730018615723
    5. ')' → logprob: -10.020730018615723
    6. '):
' → logprob: -10.645730018615723
    7. '):

' → logprob: -11.895730018615723
    8. 'v' → logprob: -12.895730018615723
    9. '[]):' → logprob: -13.645730018615723
    10. '[' → logprob: -13.645730018615723

Token 311: ' min' (ID: 1349)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05172884464263916
    2. ' d' → logprob: -3.1767287254333496
    3. 'min' → logprob: -5.67672872543335
    4. ')' → logprob: -6.92672872543335
    5. 's' → logprob: -7.30172872543335
    6. 'v' → logprob: -7.30172872543335
    7. 'u' → logprob: -7.55172872543335
    8. ' min' → logprob: -7.67672872543335
    9. 'edge' → logprob: -7.80172872543335
    10. 'n' → logprob: -8.051729202270508

Token 312: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0008290443220175803
    2. '_edge' → logprob: -7.875829219818115
    3. 'egde' → logprob: -8.750828742980957
    4. 'e' → logprob: -9.375828742980957
    5. 'dge' → logprob: -10.000828742980957
    6. 'cost' → logprob: -10.500828742980957
    7. 'ed' → logprob: -10.750828742980957
    8. 'edges' → logprob: -11.000828742980957
    9. '=edge' → logprob: -11.000828742980957
    10. ' edge' → logprob: -11.375828742980957

Token 313: '_cost' (ID: 36820)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.33546996116638184
    2. '_u' → logprob: -2.085469961166382
    3. '):' → logprob: -2.210469961166382
    4. '):
' → logprob: -3.335469961166382
    5. '   ' → logprob: -4.835470199584961
    6. '_c' → logprob: -6.710470199584961
    7. ',' → logprob: -6.710470199584961
    8. ')' → logprob: -7.210470199584961
    9. 'u' → logprob: -7.460470199584961
    10. '_e' → logprob: -7.710470199584961

Token 314: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1242513433098793
    2. '):
' → logprob: -2.624251365661621
    3. ',' → logprob: -3.124251365661621
    4. '):
' → logprob: -8.499251365661621
    5. ')' → logprob: -9.124251365661621
    6. ' ):' → logprob: -10.499251365661621
    7. 'v' → logprob: -11.374251365661621
    8. '):

' → logprob: -11.499251365661621
    9. '   ' → logprob: -12.624251365661621
    10. ':' → logprob: -13.374251365661621

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002399793826043606
    2. ' for' → logprob: -6.502399921417236
    3. 'for' → logprob: -7.627399921417236
    4. ':' → logprob: -8.502399444580078
    5. '	for' → logprob: -8.752399444580078
    6. '       ' → logprob: -11.502399444580078
    7. ',' → logprob: -11.752399444580078
    8. '   ' → logprob: -12.127399444580078
    9. ' while' → logprob: -12.252399444580078
    10. '):' → logprob: -12.377399444580078

Token 316: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.038510631769895554
    2. 'for' (adapté à ' for') → logprob: -3.41351056098938
    3. '   ' → logprob: -5.663510799407959
    4. ' while' → logprob: -6.913510799407959
    5. 'if' → logprob: -8.6635103225708
    6. 'v' → logprob: -9.1635103225708
    7. 'e' → logprob: -10.1635103225708
    8. ' for' → logprob: -10.7885103225708
    9. 'u' → logprob: -10.9135103225708
    10. 'i' → logprob: -12.1635103225708

Token 317: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.026784149929881096
    2. ' e' → logprob: -3.6517841815948486
    3. '   ' → logprob: -8.52678394317627
    4. 'i' → logprob: -8.77678394317627
    5. '	e' → logprob: -10.52678394317627
    6. 'encoded' → logprob: -10.52678394317627
    7. 'edge' → logprob: -11.52678394317627
    8. ' i' → logprob: -11.52678394317627
    9. 'ei' → logprob: -11.65178394317627
    10. '_e' → logprob: -11.65178394317627

Token 318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760332345962524
    2. 'in' → logprob: -0.8260332345962524
    3. ' ' → logprob: -10.201033592224121
    4. 's' → logprob: -11.701033592224121
    5. 'import' → logprob: -11.701033592224121
    6. '   ' → logprob: -11.826033592224121
    7. '	in' → logprob: -11.951033592224121
    8. '_in' → logprob: -12.326033592224121
    9. 'e' → logprob: -12.701033592224121
    10. ',' → logprob: -12.701033592224121

Token 319: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.014264345169067383
    2. ' edge' → logprob: -4.264264106750488
    3. '(edge' → logprob: -9.639264106750488
    4. '=edge' → logprob: -10.764264106750488
    5. 'range' → logprob: -12.264264106750488
    6. ' ' → logprob: -12.764264106750488
    7. 'e' → logprob: -13.264264106750488
    8. '   ' → logprob: -13.389264106750488
    9. '.edge' → logprob: -14.389264106750488
    10. 'ed' → logprob: -14.639264106750488

Token 320: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.004200917202979326
    2. 'min' → logprob: -6.6292009353637695
    3. '[' → logprob: -7.0042009353637695
    4. '[v' → logprob: -7.2542009353637695
    5. '[s' → logprob: -8.50420093536377
    6. ':' → logprob: -8.50420093536377
    7. ']' → logprob: -9.00420093536377
    8. 'v' → logprob: -9.25420093536377
    9. '```' → logprob: -9.50420093536377
    10. '[m' → logprob: -9.75420093536377

Token 321: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -4.167648876318708e-05
    2. 'egde' → logprob: -11.125041961669922
    3. 'adj' → logprob: -11.250041961669922
    4. '_edge' → logprob: -12.500041961669922
    5. '(edge' → logprob: -12.625041961669922
    6. ' edge' → logprob: -13.500041961669922
    7. 'e' → logprob: -13.750041961669922
    8. '=edge' → logprob: -14.250041961669922
    9. 'ed' → logprob: -14.250041961669922
    10. '
' → logprob: -14.375041961669922

Token 322: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -6.749814019713085e-06
    2. 'v' → logprob: -12.000006675720215
    3. '_' → logprob: -15.875006675720215
    4. '
' → logprob: -16.25000762939453
    5. '_u' → logprob: -17.00000762939453
    6. '	v' → logprob: -17.37500762939453
    7. ',' → logprob: -17.43750762939453
    8. ' _' → logprob: -17.50000762939453
    9. '##_' → logprob: -17.81250762939453
    10. '

' → logprob: -18.00000762939453

Token 323: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0008847765857353806
    2. '):' → logprob: -7.250885009765625
    3. ']:
' → logprob: -9.375885009765625
    4. ':' → logprob: -10.125885009765625
    5. '():' → logprob: -11.250885009765625
    6. ']):' → logprob: -11.375885009765625
    7. '}:' → logprob: -11.750885009765625
    8. ']' → logprob: -12.000885009765625
    9. '>:' → logprob: -12.125885009765625
    10. ']:
' → logprob: -13.250885009765625

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004225016571581364
    2. ',' → logprob: -5.754225254058838
    3. ':' → logprob: -8.00422477722168
    4. ' cost' → logprob: -8.75422477722168
    5. 'cost' → logprob: -8.75422477722168
    6. ':
' → logprob: -9.00422477722168
    7. '   ' → logprob: -9.62922477722168
    8. 'v' → logprob: -10.87922477722168
    9. '        
' → logprob: -10.87922477722168
    10. ' if' → logprob: -11.00422477722168

Token 325: ' e' (ID: 319)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.042437899857759476
    2. '       ' → logprob: -3.417437791824341
    3. 'c' → logprob: -5.04243803024292
    4. 'if' → logprob: -7.41743803024292
    5. '           ' → logprob: -7.54243803024292
    6. ' cost' → logprob: -7.54243803024292
    7. 'heap' → logprob: -8.667437553405762
    8. '   ' → logprob: -8.792437553405762
    9. 'v' → logprob: -9.042437553405762
    10. 'e' (adapté à ' e') → logprob: -9.417437553405762

Token 326: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.014606730081140995
    2. 'cost' → logprob: -4.389606952667236
    3. '_' → logprob: -6.764606952667236
    4. 'v' → logprob: -8.014606475830078
    5. ' =' → logprob: -8.264606475830078
    6. '_v' → logprob: -9.014606475830078
    7. '=' → logprob: -9.389606475830078
    8. ' cost' → logprob: -10.014606475830078
    9. '_c' → logprob: -10.639606475830078
    10. 'Cost' → logprob: -10.764606475830078

Token 327: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012428058311343193
    2. '=' → logprob: -4.887428283691406
    3. ',e' → logprob: -6.262428283691406
    4. ' ,' → logprob: -6.512428283691406
    5. ' =' → logprob: -6.637428283691406
    6. ',c' → logprob: -9.512428283691406
    7. '=e' → logprob: -11.512428283691406
    8. 'e' → logprob: -12.012428283691406
    9. 'cost' → logprob: -12.262428283691406
    10. ',v' → logprob: -13.262428283691406

Token 328: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25214025378227234
    2. ' e' → logprob: -1.5021402835845947
    3. 'v' → logprob: -8.627140045166016
    4. ' v' → logprob: -10.752140045166016
    5. '	e' → logprob: -12.502140045166016
    6. '   ' → logprob: -13.002140045166016
    7. ' ' → logprob: -13.252140045166016
    8. 'u' → logprob: -14.689640045166016
    9. '_e' → logprob: -14.752140045166016
    10. '  ' → logprob: -15.064640045166016

Token 329: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.012020254507660866
    2. 'v' → logprob: -4.762020111083984
    3. ' =' → logprob: -6.137020111083984
    4. '=' → logprob: -7.512020111083984
    5. ',' → logprob: -7.762020111083984
    6. '_val' → logprob: -9.637020111083984
    7. 'e' → logprob: -9.762020111083984
    8. ',v' → logprob: -9.762020111083984
    9. '_' → logprob: -10.762020111083984
    10. '_cost' → logprob: -10.887020111083984

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021001845598221
    2. ' =' → logprob: -2.350209951400757
    3. ',' → logprob: -12.850210189819336
    4. '   ' → logprob: -14.725210189819336
    5. '=e' → logprob: -15.850210189819336
    6. ' ' → logprob: -16.600210189819336
    7. ')' → logprob: -17.850210189819336
    8. '＝' → logprob: -17.975210189819336
    9. '    ' → logprob: -18.225210189819336
    10. 'e' → logprob: -18.350210189819336

Token 331: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.02975083328783512
    2. ' decode' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.02975082397461
    4. '.decode' → logprob: -17.27975082397461
    5. '_decode' → logprob: -17.77975082397461
    6. '  ' → logprob: -18.40475082397461
    7. '    ' → logprob: -18.65475082397461
    8. 'decoded' → logprob: -18.77975082397461
    9. ' ' → logprob: -19.27975082397461
    10. '           ' → logprob: -19.52975082397461

Token 332: '_edge' (ID: 43226)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.5094154477119446
    2. 'e' → logprob: -1.3844153881072998
    3. '_edge' → logprob: -2.0094153881073
    4. 'edge' → logprob: -4.259415626525879
    5. '_e' → logprob: -8.259415626525879
    6. ' e' → logprob: -9.384415626525879
    7. '(' → logprob: -10.134415626525879
    8. 'Edge' → logprob: -10.384415626525879
    9. '(edge' → logprob: -11.384415626525879
    10. ')e' → logprob: -11.634415626525879

Token 333: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.1080467781284824e-05
    2. '(' → logprob: -10.125041007995605
    3. 'e' → logprob: -14.375041007995605
    4. '(
' → logprob: -14.750041007995605
    5. ' (' → logprob: -17.250041961669922
    6. ')' → logprob: -18.500041961669922
    7. ' e' → logprob: -19.250041961669922
    8. ')e' → logprob: -19.250041961669922
    9. ',e' → logprob: -19.625041961669922
    10. '	e' → logprob: -20.750041961669922

Token 334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869473934173584
    2. ')
' → logprob: -1.1369473934173584
    3. ')
' → logprob: -9.886947631835938
    4. ')e' → logprob: -11.636947631835938
    5. ')

' → logprob: -12.011947631835938
    6. '   ' → logprob: -12.886947631835938
    7. '       ' → logprob: -13.011947631835938
    8. ')=' → logprob: -13.261947631835938
    9. ')`
' → logprob: -13.636947631835938
    10. ' )
' → logprob: -13.761947631835938

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06404945254325867
    2. ' if' → logprob: -3.439049482345581
    3. '
' → logprob: -3.939049482345581
    4. '<|end|>' → logprob: -5.439049243927002
    5. ' 
' → logprob: -6.189049243927002
    6. '        
' → logprob: -6.814049243927002
    7. ' ' → logprob: -7.189049243927002
    8. 'if' → logprob: -7.689049243927002
    9. ',' → logprob: -7.814049243927002
    10. ')' → logprob: -8.06404972076416

Token 336: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37920239567756653
    2. '       ' → logprob: -1.3792023658752441
    3. ' if' → logprob: -2.754202365875244
    4. '   ' → logprob: -9.379202842712402
    5. 'heap' → logprob: -10.379202842712402
    6. '	if' → logprob: -11.504202842712402
    7. '           ' → logprob: -12.004202842712402
    8. ' heap' → logprob: -12.129202842712402
    9. '        
' → logprob: -13.004202842712402
    10. '
' → logprob: -13.129202842712402

Token 337: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5463963150978088
    2. ' used' → logprob: -1.796396255493164
    3. 'not' → logprob: -2.171396255493164
    4. ' not' → logprob: -2.421396255493164
    5. 'd' → logprob: -3.796396255493164
    6. 'e' → logprob: -4.421396255493164
    7. ' d' → logprob: -4.671396255493164
    8. ' e' → logprob: -5.296396255493164
    9. '   ' → logprob: -5.921396255493164
    10. 'min' → logprob: -8.796396255493164

Token 338: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0003694205661304295
    2. '[' → logprob: -8.00036907196045
    3. 'e' → logprob: -10.62536907196045
    4. ' [' → logprob: -11.75036907196045
    5. ' e' → logprob: -14.75036907196045
    6. '
' → logprob: -14.75036907196045
    7. '[
' → logprob: -15.12536907196045
    8. '	e' → logprob: -16.125370025634766
    9. '[min' → logprob: -16.125370025634766
    10. '```' → logprob: -16.375370025634766

Token 339: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0015233141602948308
    2. '[e' → logprob: -6.876523494720459
    3. '_e' → logprob: -7.876523494720459
    4. 'v' → logprob: -10.7515230178833
    5. '[v' → logprob: -10.8765230178833
    6. 'e' → logprob: -11.1265230178833
    7. '_' → logprob: -11.3765230178833
    8. '
' → logprob: -11.5015230178833
    9. '[' → logprob: -12.0015230178833
    10. '_cost' → logprob: -12.1265230178833

Token 340: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07893231511116028
    2. 'and' → logprob: -2.578932285308838
    3. ' ' → logprob: -10.703932762145996
    4. ':' → logprob: -11.578932762145996
    5. ']' → logprob: -12.703932762145996
    6. ')' → logprob: -12.703932762145996
    7. '>' → logprob: -13.828932762145996
    8. '	and' → logprob: -14.578932762145996
    9. ':
' → logprob: -14.828932762145996
    10. '==' → logprob: -14.953932762145996

Token 341: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005974538624286652
    2. '           ' → logprob: -5.255974769592285
    3. 'and' → logprob: -8.130974769592285
    4. '       ' → logprob: -9.380974769592285
    5. '<|end|>' → logprob: -9.380974769592285
    6. '        ' → logprob: -10.130974769592285
    7. '            ' → logprob: -10.255974769592285
    8. ',' → logprob: -10.255974769592285
    9. ':
' → logprob: -10.630974769592285
    10. '               ' → logprob: -10.630974769592285

Token 342: ' heap' (ID: 37237)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17589452862739563
    2. '               ' → logprob: -2.4258944988250732
    3. '           ' → logprob: -3.1758944988250732
    4. 'if' → logprob: -3.5508944988250732
    5. ' heap' → logprob: -7.175894737243652
    6. ' continue' → logprob: -8.175894737243652
    7. '   ' → logprob: -8.425894737243652
    8. ' new' → logprob: -8.425894737243652
    9. 'heap' (adapté à ' heap') → logprob: -8.675894737243652
    10. ' min' → logprob: -9.425894737243652

Token 343: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -14.875
    3. '```' → logprob: -17.625
    4. 'e' → logprob: -18.125
    5. 'push' → logprob: -18.625
    6. 'h' → logprob: -18.75
    7. 'x' → logprob: -19.25
    8. '.push' → logprob: -19.25
    9. '[' → logprob: -19.5
    10. 'queue' → logprob: -19.75

Token 344: '.he' (ID: 67786)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.33254826068878174
    2. '.he' → logprob: -1.3325482606887817
    3. 'push' → logprob: -4.457548141479492
    4. 'q' → logprob: -5.207548141479492
    5. 'he' → logprob: -6.957548141479492
    6. '.push' → logprob: -7.207548141479492
    7. 'app' → logprob: -9.082548141479492
    8. '.' → logprob: -9.457548141479492
    9. 'h' → logprob: -9.957548141479492
    10. 'p' → logprob: -9.957548141479492

Token 345: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.895480277715251e-06
    2. 'pp' → logprob: -11.750008583068848
    3. 'ap' → logprob: -14.125008583068848
    4. 'push' → logprob: -15.500008583068848
    5. 'ush' → logprob: -19.500009536743164
    6. 'appen' → logprob: -20.000009536743164
    7. 'e' → logprob: -20.125009536743164
    8. '[' → logprob: -20.375009536743164
    9. 'q' → logprob: -20.750009536743164
    10. '```' → logprob: -21.125009536743164

Token 346: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.978233846486546e-05
    2. 'push' → logprob: -10.125049591064453
    3. 'app' → logprob: -12.125049591064453
    4. 'e' → logprob: -12.500049591064453
    5. 'p' → logprob: -16.125049591064453
    6. 'pp' → logprob: -16.375049591064453
    7. 'op' → logprob: -16.750049591064453
    8. 'sh' → logprob: -17.250049591064453
    9. '   ' → logprob: -17.375049591064453
    10. 'ap' → logprob: -17.750049591064453

Token 347: '(ed' (ID: 135912)
  Prédit: '(ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ed' → logprob: -4.320199877838604e-07
    2. 'ed' → logprob: -15.0
    3. '(' → logprob: -19.375
    4. ' ed' → logprob: -19.5
    5. ' (' → logprob: -20.0
    6. '(e' → logprob: -20.5
    7. '(edge' → logprob: -21.0
    8. '_ed' → logprob: -22.125
    9. '(edges' → logprob: -22.125
    10. '-ed' → logprob: -22.25

Token 348: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -0.00036787090357393026
    2. 'del' → logprob: -8.125368118286133
    3. 'ge' → logprob: -10.875368118286133
    4. 'vel' → logprob: -11.375368118286133
    5. 'gest' → logprob: -11.875368118286133
    6. '
' → logprob: -12.625368118286133
    7. 'sel' → logprob: -12.625368118286133
    8. 'rel' → logprob: -12.875368118286133
    9. 'gl' → logprob: -12.875368118286133
    10. 'get' → logprob: -13.000368118286133

Token 349: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0017977542011067271
    2. 'st' → logprob: -6.376797676086426
    3. 'list' → logprob: -9.501797676086426
    4. 'el' → logprob: -11.876797676086426
    5. '[' → logprob: -12.001797676086426
    6. 'est' → logprob: -14.001797676086426
    7. 'is' → logprob: -14.001797676086426
    8. 'e' → logprob: -14.001797676086426
    9. 'l' → logprob: -14.126797676086426
    10. 'ed' → logprob: -14.376797676086426

Token 350: ',' (ID: 11)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.10344244539737701
    2. ',' → logprob: -2.353442430496216
    3. ',e' → logprob: -6.228442668914795
    4. '(' → logprob: -6.728442668914795
    5. ',(' → logprob: -10.353442192077637
    6. ')' → logprob: -11.728442192077637
    7. ' ,' → logprob: -11.728442192077637
    8. ' (' → logprob: -11.853442192077637
    9. '),' → logprob: -12.853442192077637
    10. ')(' → logprob: -13.603442192077637

Token 351: ' encode' (ID: 31288)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07890840619802475
    2. ' e' → logprob: -2.5789084434509277
    3. 'encode' → logprob: -11.45390796661377
    4. '(e' → logprob: -12.45390796661377
    5. ' encode' → logprob: -13.20390796661377
    6. ' (' → logprob: -14.57890796661377
    7. 'ecode' → logprob: -14.70390796661377
    8. ')' → logprob: -15.07890796661377
    9. '(' → logprob: -15.07890796661377
    10. ')e' → logprob: -15.20390796661377

Token 352: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.8670179997570813e-05
    2. 'edge' → logprob: -11.000019073486328
    3. 'e' → logprob: -14.625019073486328
    4. '_cost' → logprob: -14.875019073486328
    5. 'Edge' → logprob: -15.375019073486328
    6. '(edge' → logprob: -15.375019073486328
    7. '_EDGE' → logprob: -15.375019073486328
    8. ' edge' → logprob: -16.000019073486328
    9. '_' → logprob: -16.250019073486328
    10. '_e' → logprob: -16.250019073486328

Token 353: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -6.265633419388905e-05
    2. '(min' → logprob: -9.750062942504883
    3. '(' → logprob: -12.750062942504883
    4. 'min' → logprob: -14.375062942504883
    5. 'e' → logprob: -14.750062942504883
    6. ')' → logprob: -15.500062942504883
    7. '(cost' → logprob: -16.500062942504883
    8. '(
' → logprob: -16.750062942504883
    9. ')e' → logprob: -17.000062942504883
    10. '((' → logprob: -17.375062942504883

Token 354: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0015046248445287347
    2. 'cost' → logprob: -6.501504421234131
    3. 'e' → logprob: -13.876504898071289
    4. 'Cost' → logprob: -14.501504898071289
    5. ' cost' → logprob: -15.126504898071289
    6. '_COST' → logprob: -15.376504898071289
    7. ')' → logprob: -15.626504898071289
    8. '_c' → logprob: -16.50150489807129
    9. '```' → logprob: -17.37650489807129
    10. '[' → logprob: -17.62650489807129

Token 355: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005220544408075511
    2. ' ,' → logprob: -7.875522136688232
    3. ',e' → logprob: -8.875521659851074
    4. 'e' → logprob: -14.625521659851074
    5. ' e' → logprob: -15.000521659851074
    6. ',
' → logprob: -15.125521659851074
    7. '```' → logprob: -15.375521659851074
    8. '+' → logprob: -15.375521659851074
    9. ' +' → logprob: -15.750521659851074
    10. ',v' → logprob: -16.12552261352539

Token 356: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.009671452455222607
    2. ' min' → logprob: -4.759671688079834
    3. 'd' → logprob: -7.009671688079834
    4. '   ' → logprob: -9.884671211242676
    5. '
' → logprob: -10.884671211242676
    6. '(min' → logprob: -11.259671211242676
    7. '[min' → logprob: -11.259671211242676
    8. ' d' → logprob: -11.884671211242676
    9. '```' → logprob: -11.884671211242676
    10. '=min' → logprob: -12.134671211242676

Token 357: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.3544423381972592e-05
    2. 'egde' → logprob: -11.50001335144043
    3. '_edge' → logprob: -13.50001335144043
    4. ' edge' → logprob: -13.75001335144043
    5. '=edge' → logprob: -15.00001335144043
    6. '(edge' → logprob: -15.25001335144043
    7. 'e' → logprob: -15.62501335144043
    8. '-edge' → logprob: -16.12501335144043
    9. '.edge' → logprob: -17.62501335144043
    10. 'Edge' → logprob: -17.75001335144043

Token 358: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.36574100604048e-06
    2. 'cost' → logprob: -12.875004768371582
    3. '_v' → logprob: -14.375004768371582
    4. '_c' → logprob: -14.500004768371582
    5. '_' → logprob: -15.625004768371582
    6. ' cost' → logprob: -16.250003814697266
    7. ' _' → logprob: -16.750003814697266
    8. '_COST' → logprob: -16.875003814697266
    9. '_cos' → logprob: -17.000003814697266
    10. '_co' → logprob: -17.000003814697266

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003254527400713414
    2. ' ,' → logprob: -8.375325202941895
    3. ',e' → logprob: -9.875325202941895
    4. ')' → logprob: -10.500325202941895
    5. '),' → logprob: -12.625325202941895
    6. '   ' → logprob: -13.000325202941895
    7. 'e' → logprob: -13.250325202941895
    8. ',
' → logprob: -13.750325202941895
    9. '```' → logprob: -13.875325202941895
    10. ',v' → logprob: -14.000325202941895

Token 360: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.011048170737922192
    2. ' e' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.511048316955566
    4. '	e' → logprob: -16.76104736328125
    5. ' ' → logprob: -16.88604736328125
    6. '
' → logprob: -17.26104736328125
    7. ')' → logprob: -17.26104736328125
    8. ')e' → logprob: -17.76104736328125
    9. '    ' → logprob: -18.13604736328125
    10. ' ' → logprob: -18.13604736328125

Token 361: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -3.054500666621607e-06
    2. 'v' → logprob: -12.75000286102295
    3. '_' → logprob: -19.000003814697266
    4. ')' → logprob: -19.250003814697266
    5. ' _' → logprob: -19.250003814697266
    6. 'e' → logprob: -19.375003814697266
    7. '	v' → logprob: -19.500003814697266
    8. ' v' → logprob: -19.875003814697266
    9. '-v' → logprob: -20.250003814697266
    10. '```' → logprob: -20.375003814697266

Token 362: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0033391944598406553
    2. ')' → logprob: -5.7533392906188965
    3. '))
' → logprob: -8.878338813781738
    4. ' ))' → logprob: -11.503338813781738
    5. ')))' → logprob: -11.628338813781738
    6. '           ' → logprob: -14.253338813781738
    7. ')
' → logprob: -14.378338813781738
    8. '       ' → logprob: -14.503338813781738
    9. '));' → logprob: -15.003338813781738
    10. '               ' → logprob: -15.628338813781738

Token 363: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0200223922729492
    2. ')' → logprob: -1.5200223922729492
    3. '<|end|>' → logprob: -1.8950223922729492
    4. '
' → logprob: -2.895022392272949
    5. 'def' → logprob: -3.020022392272949
    6. '#' → logprob: -3.020022392272949
    7. 'd' → logprob: -3.395022392272949
    8. '_' → logprob: -3.520022392272949
    9. ',' → logprob: -4.145022392272949
    10. '.' → logprob: -5.020022392272949

Token 364: ' d' (ID: 272)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16070224344730377
    2. 'def' → logprob: -1.9107022285461426
    3. '
' → logprob: -8.5357027053833
    4. ' ' → logprob: -9.9107027053833
    5. '_' → logprob: -10.0357027053833
    6. 'ndef' → logprob: -10.4107027053833
    7. 'd' → logprob: -10.6607027053833
    8. ' define' → logprob: -11.2857027053833
    9. ' 
' → logprob: -11.4107027053833
    10. 's' → logprob: -11.5357027053833

Token 365: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.002214965643361211
    2. 'ijk' → logprob: -6.1272149085998535
    3. 'ij' → logprob: -10.752215385437012
    4. 'i' → logprob: -12.752215385437012
    5. 'jik' → logprob: -12.877215385437012
    6. 'ijkl' → logprob: -13.377215385437012
    7. 'ijks' → logprob: -14.877215385437012
    8. '_' → logprob: -15.002215385437012
    9. 'ef' → logprob: -15.877215385437012
    10. 'ijs' → logprob: -16.252214431762695

Token 366: '_heap' (ID: 88741)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.5892605185508728
    2. '(' → logprob: -0.8392605185508728
    3. '(n' → logprob: -5.464260578155518
    4. '(edges' → logprob: -6.214260578155518
    5. '_edge' → logprob: -6.464260578155518
    6. '_(' → logprob: -6.714260578155518
    7. ' (' → logprob: -6.839260578155518
    8. '_' → logprob: -7.214260578155518
    9. '(node' → logprob: -7.589260578155518
    10. '(s' → logprob: -7.839260578155518

Token 367: '(edge' (ID: 84023)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5808567404747009
    2. '(' → logprob: -1.8308568000793457
    3. '(edge' → logprob: -1.8308568000793457
    4. '(s' → logprob: -2.8308568000793457
    5. '(ed' → logprob: -4.330856800079346
    6. '():' → logprob: -4.705856800079346
    7. '(graph' → logprob: -5.455856800079346
    8. '(heap' → logprob: -5.455856800079346
    9. '(edges' → logprob: -5.580856800079346
    10. '(d' → logprob: -5.705856800079346

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002457238151691854
    2. '):' → logprob: -8.875246047973633
    3. '(edge' → logprob: -10.125246047973633
    4. ' ,' → logprob: -10.375246047973633
    5. '1' → logprob: -11.375246047973633
    6. ')' → logprob: -12.625246047973633
    7. ',n' → logprob: -12.750246047973633
    8. ',
' → logprob: -12.750246047973633
    9. '   ' → logprob: -13.000246047973633
    10. 's' → logprob: -13.125246047973633

Token 369: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21888352930545807
    2. 'n' → logprob: -2.093883514404297
    3. ' s' → logprob: -3.593883514404297
    4. 'start' → logprob: -3.593883514404297
    5. ' n' → logprob: -4.593883514404297
    6. 'used' → logprob: -5.718883514404297
    7. ' start' → logprob: -5.843883514404297
    8. 'source' → logprob: -6.968883514404297
    9. ' used' → logprob: -7.843883514404297
    10. 'edge' → logprob: -8.593883514404297

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003542926860973239
    2. '):' → logprob: -8.375354766845703
    3. ',n' → logprob: -9.125354766845703
    4. ' ,' → logprob: -11.750354766845703
    5. '   ' → logprob: -13.000354766845703
    6. ',d' → logprob: -13.000354766845703
    7. ',v' → logprob: -14.375354766845703
    8. ',s' → logprob: -15.250354766845703
    9. ':' → logprob: -15.625354766845703
    10. '_,' → logprob: -15.875354766845703

Token 371: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1543305218219757
    2. 'd' → logprob: -2.6543304920196533
    3. ' n' → logprob: -2.7793304920196533
    4. ' d' → logprob: -5.154330730438232
    5. 'used' → logprob: -5.654330730438232
    6. ' used' → logprob: -7.404330730438232
    7. 'edge' → logprob: -8.654330253601074
    8. ' ' → logprob: -8.904330253601074
    9. '   ' → logprob: -8.904330253601074
    10. 'ed' → logprob: -9.154330253601074

Token 372: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3871381878852844
    2. ',' → logprob: -1.1371381282806396
    3. '):
' → logprob: -8.762138366699219
    4. ')' → logprob: -9.387138366699219
    5. '   ' → logprob: -11.762138366699219
    6. ' ):' → logprob: -12.137138366699219
    7. ':' → logprob: -12.262138366699219
    8. ' ,' → logprob: -13.262138366699219
    9. ',s' → logprob: -13.512138366699219
    10. '):
' → logprob: -13.762138366699219

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007015622220933437
    2. 'd' → logprob: -5.132015705108643
    3. ' d' → logprob: -6.882015705108643
    4. '	d' → logprob: -10.007015228271484
    5. '```' → logprob: -12.382015228271484
    6. '   ' → logprob: -12.632015228271484
    7. '_d' → logprob: -13.257015228271484
    8. ',d' → logprob: -13.382015228271484
    9. ' ' → logprob: -13.882015228271484
    10. 'ed' → logprob: -14.007015228271484

Token 374: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.053615935146808624
    2. ' d' → logprob: -3.3036160469055176
    3. '   ' → logprob: -4.178616046905518
    4. '
' → logprob: -9.67861557006836
    5. ' ' → logprob: -10.55361557006836
    6. '	d' → logprob: -10.67861557006836
    7. '  ' → logprob: -12.05361557006836
    8. 'import' → logprob: -12.17861557006836
    9. '```' → logprob: -12.30361557006836
    10. '_d' → logprob: -13.42861557006836

Token 375: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137019872665405
    2. ',' → logprob: -1.3137019872665405
    3. '=' → logprob: -7.81370210647583
    4. ' ,' → logprob: -10.813701629638672
    5. '   ' → logprob: -12.438701629638672
    6. ' ' → logprob: -12.563701629638672
    7. '  ' → logprob: -12.813701629638672
    8. 'ef' → logprob: -13.688701629638672
    9. 'ist' → logprob: -13.813701629638672
    10. ' =[' → logprob: -14.813701629638672

Token 376: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.03804333135485649
    2. ' used' → logprob: -3.288043260574341
    3. '   ' → logprob: -14.538043022155762
    4. ' ' → logprob: -14.913043022155762
    5. '_used' → logprob: -14.913043022155762
    6. '  ' → logprob: -15.788043022155762
    7. '[' → logprob: -16.163043975830078
    8. '.used' → logprob: -16.538043975830078
    9. ' s' → logprob: -17.038043975830078
    10. 's' → logprob: -17.038043975830078

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869250416755676
    2. '=' → logprob: -1.1369249820709229
    3. ',' → logprob: -9.886924743652344
    4. ')' → logprob: -13.636924743652344
    5. ' ' → logprob: -14.261924743652344
    6. '=
' → logprob: -15.261924743652344
    7. ' =
' → logprob: -15.511924743652344
    8. '```' → logprob: -15.761924743652344
    9. '   ' → logprob: -16.136924743652344
    10. '=create' → logprob: -16.386924743652344

Token 378: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.023257242515683174
    2. ' initialize' → logprob: -3.773257255554199
    3. '   ' → logprob: -12.2732572555542
    4. '[' → logprob: -12.3982572555542
    5. ' [' → logprob: -13.6482572555542
    6. '	initialize' → logprob: -14.6482572555542
    7. ' ' → logprob: -15.0232572555542
    8. '_initialize' → logprob: -15.2732572555542
    9. '([' → logprob: -15.5232572555542
    10. 'initial' → logprob: -15.6482572555542

Token 379: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.004952427931129932
    2. '(n' → logprob: -5.629952430725098
    3. 'd' → logprob: -6.629952430725098
    4. 'n' → logprob: -12.504952430725098
    5. '```' → logprob: -12.504952430725098
    6. '(d' → logprob: -12.754952430725098
    7. 'ijkstra' → logprob: -12.754952430725098
    8. ',' → logprob: -13.254952430725098
    9. '[n' → logprob: -13.379952430725098
    10. '_n' → logprob: -13.379952430725098

Token 380: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00021152703266125172
    2. '_d' → logprob: -9.125211715698242
    3. 'd' → logprob: -9.750211715698242
    4. 'ijk' → logprob: -10.250211715698242
    5. '(d' → logprob: -12.750211715698242
    6. '```' → logprob: -13.000211715698242
    7. 'ij' → logprob: -14.375211715698242
    8. 'python' → logprob: -15.125211715698242
    9. 'ijkl' → logprob: -15.500211715698242
    10. 'array' → logprob: -15.875211715698242

Token 381: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -11.000028610229492
    3. ' (' → logprob: -12.000028610229492
    4. 'n' → logprob: -13.125028610229492
    5. ',' → logprob: -13.625028610229492
    6. '```' → logprob: -14.250028610229492
    7. '   ' → logprob: -14.875028610229492
    8. '
' → logprob: -15.000028610229492
    9. '<|end|>' → logprob: -15.250028610229492
    10. '(
' → logprob: -15.625028610229492

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024855269584804773
    2. ',s' → logprob: -6.002485752105713
    3. ' ,' → logprob: -11.877485275268555
    4. 's' → logprob: -13.252485275268555
    5. ',
' → logprob: -14.877485275268555
    6. '   ' → logprob: -15.002485275268555
    7. '=s' → logprob: -16.127485275268555
    8. '(s' → logprob: -16.752485275268555
    9. '	s' → logprob: -17.002485275268555
    10. ' s' → logprob: -17.002485275268555

Token 383: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.941850526549388e-06
    2. ' s' → logprob: -11.750007629394531
    3. '_s' → logprob: -20.37500762939453
    4. '
' → logprob: -20.62500762939453
    5. '	s' → logprob: -21.75000762939453
    6. '   ' → logprob: -22.62500762939453
    7. ')' → logprob: -22.75000762939453
    8. ' ' → logprob: -23.87500762939453
    9. '<|end|>' → logprob: -24.12500762939453
    10. ')s' → logprob: -24.37500762939453

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002636006975080818
    2. ')
' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.125263214111328
    4. ')

' → logprob: -16.375263214111328
    5. ' )' → logprob: -16.500263214111328
    6. ')
' → logprob: -17.500263214111328
    7. '),' → logprob: -18.500263214111328
    8. ' ' → logprob: -18.750263214111328
    9. ')#' → logprob: -18.750263214111328
    10. ')`' → logprob: -18.750263214111328

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40673717856407166
    2. 'ed' → logprob: -1.156737208366394
    3. ' ed' → logprob: -4.031737327575684
    4. '	' → logprob: -7.031737327575684
    5. '   ' → logprob: -8.406737327575684
    6. ' heap' → logprob: -8.781737327575684
    7. '```' → logprob: -8.906737327575684
    8. '  ' → logprob: -9.156737327575684
    9. '_ed' → logprob: -9.156737327575684
    10. 'heap' → logprob: -9.781737327575684

Token 386: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' (adapté à ' ed') → logprob: -0.001118307700380683
    2. '   ' → logprob: -7.126118183135986
    3. 'import' → logprob: -8.251118659973145
    4. ' ' → logprob: -11.001118659973145
    5. '  ' → logprob: -12.126118659973145
    6. ' ed' → logprob: -12.376118659973145
    7. 'heap' → logprob: -12.626118659973145
    8. '
' → logprob: -12.751118659973145
    9. '    
' → logprob: -12.876118659973145
    10. '```' → logprob: -13.001118659973145

Token 387: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -4.5252596464706585e-05
    2. 'ge' → logprob: -10.125044822692871
    3. 'get' → logprob: -13.625044822692871
    4. ' gel' → logprob: -13.750044822692871
    5. 'g' → logprob: -14.125044822692871
    6. 'egel' → logprob: -14.250044822692871
    7. 'gest' → logprob: -14.750044822692871
    8. '
' → logprob: -15.875044822692871
    9. 'gelig' → logprob: -16.125045776367188
    10. 'eg' → logprob: -16.250045776367188

Token 388: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -6.392202976712724e-06
    2. 'is' → logprob: -12.500006675720215
    3. 'st' → logprob: -13.500006675720215
    4. 'i' → logprob: -14.875006675720215
    5. '   ' → logprob: -15.250006675720215
    6. 'est' → logprob: -15.750006675720215
    7. ' ist' → logprob: -16.0000057220459
    8. '[' → logprob: -17.0000057220459
    9. 'list' → logprob: -17.0000057220459
    10. '```' → logprob: -17.0000057220459

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759503841400146
    2. ' =' → logprob: -0.8259503841400146
    3. '=[]' → logprob: -12.075950622558594
    4. ',' → logprob: -12.325950622558594
    5. '  ' → logprob: -15.825950622558594
    6. ' ' → logprob: -15.825950622558594
    7. ')' → logprob: -15.950950622558594
    8. '   ' → logprob: -16.075950622558594
    9. '={}' → logprob: -16.575950622558594
    10. 'import' → logprob: -17.075950622558594

Token 390: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.4974866644479334e-05
    2. '[]
' → logprob: -11.375015258789062
    3. ' []' → logprob: -13.500015258789062
    4. '[' → logprob: -14.000015258789062
    5. '[]}' → logprob: -14.500015258789062
    6. '[]

' → logprob: -15.000015258789062
    7. 'heap' → logprob: -16.000015258789062
    8. 'list' → logprob: -16.375015258789062
    9. '[])' → logprob: -17.000015258789062
    10. '[],' → logprob: -17.125015258789062

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5929708480834961
    2. 'push' → logprob: -0.8429708480834961
    3. ' push' → logprob: -4.217970848083496
    4. 'for' → logprob: -7.217970848083496
    5. '	push' → logprob: -7.717970848083496
    6. ' for' → logprob: -7.842970848083496
    7. 'while' → logprob: -8.592970848083496
    8. '    
' → logprob: -9.217970848083496
    9. 'd' → logprob: -9.592970848083496
    10. ' while' → logprob: -9.842970848083496

Token 392: ' push' (ID: 9349)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' (adapté à ' push') → logprob: -0.0006089136004447937
    2. 'for' → logprob: -8.125608444213867
    3. 'heap' → logprob: -9.375608444213867
    4. ' push' → logprob: -9.375608444213867
    5. '   ' → logprob: -9.750608444213867
    6. 'while' → logprob: -10.250608444213867
    7. 'used' → logprob: -10.250608444213867
    8. '	push' → logprob: -12.625608444213867
    9. 'he' → logprob: -13.250608444213867
    10. 'd' → logprob: -13.250608444213867

Token 393: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.00021069261129014194
    2. 'initial' → logprob: -8.500210762023926
    3. '```' → logprob: -13.000210762023926
    4. '_init' → logprob: -14.000210762023926
    5. '_existing' → logprob: -14.125210762023926
    6. '_' → logprob: -14.250210762023926
    7. '_initialized' → logprob: -14.500210762023926
    8. '_in' → logprob: -15.125210762023926
    9. '_final' → logprob: -15.375210762023926
    10. '`' → logprob: -15.375210762023926

Token 394: '_edges' (ID: 68870)
  Prédit: '_initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.8460224866867065
    2. '_' → logprob: -1.2210224866867065
    3. '_edges' → logprob: -1.3460224866867065
    4. '_ed' → logprob: -4.721022605895996
    5. '_under' → logprob: -6.346022605895996
    6. '```' → logprob: -6.346022605895996
    7. '_spaces' → logprob: -7.471022605895996
    8. '_edge' → logprob: -8.221022605895996
    9. '_tokens' → logprob: -8.346022605895996
    10. '_existing' → logprob: -8.471022605895996

Token 395: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.5048530030981055e-06
    2. 'to' → logprob: -13.875001907348633
    3. '```' → logprob: -15.875001907348633
    4. '_' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.625001907348633
    6. 'To' → logprob: -16.625001907348633
    7. '(' → logprob: -16.750001907348633
    8. '(edge' → logprob: -17.125001907348633
    9. 't' → logprob: -17.250001907348633
    10. '_t' → logprob: -17.250001907348633

Token 396: '_heap' (ID: 88741)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.006008310243487358
    2. '_heap' → logprob: -5.131008148193359
    3. 'edge' → logprob: -10.63100814819336
    4. '(heap' → logprob: -10.75600814819336
    5. 'he' → logprob: -10.88100814819336
    6. 'Heap' → logprob: -12.00600814819336
    7. 'e' → logprob: -13.00600814819336
    8. ' heap' → logprob: -13.13100814819336
    9. 'list' → logprob: -13.75600814819336
    10. '.heap' → logprob: -14.00600814819336

Token 397: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.0007110013975761831
    2. '(' → logprob: -7.250710964202881
    3. '(
' → logprob: -14.625711441040039
    4. 'edge' → logprob: -14.875711441040039
    5. '=edge' → logprob: -15.375711441040039
    6. ' (' → logprob: -17.25071144104004
    7. '(edges' → logprob: -18.37571144104004
    8. ' edge' → logprob: -18.75071144104004
    9. '(

' → logprob: -19.25071144104004
    10. '(error' → logprob: -19.50071144104004

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031998122576624155
    2. ',s' → logprob: -5.878199577331543
    3. '[s' → logprob: -8.878199577331543
    4. '(s' → logprob: -9.003199577331543
    5. ' ,' → logprob: -10.003199577331543
    6. '[' → logprob: -10.753199577331543
    7. ')' → logprob: -11.128199577331543
    8. '(' → logprob: -11.253199577331543
    9. ',[' → logprob: -11.378199577331543
    10. 's' → logprob: -11.753199577331543

Token 399: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019286326132714748
    2. ' s' → logprob: -6.251928806304932
    3. '	s' → logprob: -19.376928329467773
    4. '_s' → logprob: -20.751928329467773
    5. '   ' → logprob: -20.876928329467773
    6. ' ' → logprob: -21.501928329467773
    7. '(s' → logprob: -21.626928329467773
    8. '<|end|>' → logprob: -22.501928329467773
    9. ',' → logprob: -22.626928329467773
    10. ')' → logprob: -23.001928329467773

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02059689536690712
    2. ')' → logprob: -3.895596981048584
    3. '   ' → logprob: -10.520596504211426
    4. ' ,' → logprob: -11.395596504211426
    5. ',)' → logprob: -11.895596504211426
    6. ')
' → logprob: -12.770596504211426
    7. ',
' → logprob: -13.270596504211426
    8. ',n' → logprob: -13.520596504211426
    9. ',d' → logprob: -13.645596504211426
    10. ' )' → logprob: -14.270596504211426

Token 401: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00407923199236393
    2. ' ed' → logprob: -5.504079341888428
    3. 'edd' → logprob: -15.50407886505127
    4. ' ' → logprob: -15.87907886505127
    5. '_ed' → logprob: -16.629079818725586
    6. '   ' → logprob: -16.754079818725586
    7. '(ed' → logprob: -17.754079818725586
    8. 'eds' → logprob: -17.754079818725586
    9. 'edi' → logprob: -17.879079818725586
    10. '
' → logprob: -17.879079818725586

Token 402: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -1.2664456789934775e-06
    2. 'ge' → logprob: -14.125000953674316
    3. ' gel' → logprob: -15.250000953674316
    4. 'del' → logprob: -16.500001907348633
    5. 'get' → logprob: -17.000001907348633
    6. 'g' → logprob: -17.625001907348633
    7. '
' → logprob: -18.000001907348633
    8. 'egel' → logprob: -18.250001907348633
    9. 'гел' → logprob: -18.625001907348633
    10. 'ges' → logprob: -18.625001907348633

Token 403: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00042923877481371164
    2. 'el' → logprob: -8.625429153442383
    3. 'st' → logprob: -8.750429153442383
    4. 'is' → logprob: -10.875429153442383
    5. 'list' → logprob: -11.562929153442383
    6. '[' → logprob: -11.687929153442383
    7. 'il' → logprob: -12.250429153442383
    8. '```' → logprob: -12.250429153442383
    9. 'ed' → logprob: -12.312929153442383
    10. 'ists' → logprob: -12.750429153442383

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025518848560750484
    2. ')
' → logprob: -6.002552032470703
    3. '   ' → logprob: -9.627552032470703
    4. ',' → logprob: -13.002552032470703
    5. ' )' → logprob: -13.127552032470703
    6. ')return' → logprob: -13.252552032470703
    7. ')

' → logprob: -13.502552032470703
    8. '
' → logprob: -13.502552032470703
    9. ')
' → logprob: -14.252552032470703
    10. ' ' → logprob: -15.377552032470703

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5656388401985168
    2. 'while' → logprob: -1.190638780593872
    3. ' while' → logprob: -2.065638780593872
    4. '```' → logprob: -7.690639019012451
    5. '    
' → logprob: -7.940639019012451
    6. '	while' → logprob: -8.065638542175293
    7. '  ' → logprob: -10.315638542175293
    8. ')' → logprob: -11.440638542175293
    9. 'for' → logprob: -11.440638542175293
    10. '<|end|>' → logprob: -11.690638542175293

Token 406: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.008251317776739597
    2. ' while' → logprob: -5.008251190185547
    3. '   ' → logprob: -6.508251190185547
    4. '	while' → logprob: -10.133251190185547
    5. '```' → logprob: -14.133251190185547
    6. ' ' → logprob: -14.383251190185547
    7. 'wh' → logprob: -14.508251190185547
    8. '  ' → logprob: -14.633251190185547
    9. 'for' → logprob: -14.883251190185547
    10. '    
' → logprob: -14.883251190185547

Token 407: ' ed' (ID: 1648)
  Prédit: ' ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ed' → logprob: -0.030060095712542534
    2. 'ed' → logprob: -3.530060052871704
    3. ' len' → logprob: -8.780059814453125
    4. 'len' → logprob: -9.780059814453125
    5. '(ed' → logprob: -10.155059814453125
    6. 'True' → logprob: -10.780059814453125
    7. ' True' → logprob: -11.030059814453125
    8. ' not' → logprob: -12.405059814453125
    9. 'd' → logprob: -12.530059814453125
    10. '_ed' → logprob: -12.655059814453125

Token 408: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -0.013181055895984173
    2. 'el' → logprob: -4.763181209564209
    3. 'del' → logprob: -6.138181209564209
    4. 'ge' → logprob: -6.888181209564209
    5. 'gl' → logprob: -8.01318073272705
    6. 'ist' → logprob: -8.26318073272705
    7. 'list' → logprob: -9.01318073272705
    8. 'uel' → logprob: -9.63818073272705
    9. 'e' → logprob: -9.88818073272705
    10. '
' → logprob: -10.01318073272705

Token 409: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0003961185284424573
    2. 'el' → logprob: -9.250395774841309
    3. 'is' → logprob: -9.625395774841309
    4. 'st' → logprob: -10.000395774841309
    5. 'e' → logprob: -10.375395774841309
    6. 'em' → logprob: -11.125395774841309
    7. 'il' → logprob: -11.187895774841309
    8. 'i' → logprob: -11.250395774841309
    9. '
' → logprob: -11.437895774841309
    10. 'if' → logprob: -11.500395774841309

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006285638664849102
    2. '):' → logprob: -7.625628471374512
    3. '>:' → logprob: -9.875628471374512
    4. ' and' → logprob: -10.375628471374512
    5. 'and' → logprob: -10.375628471374512
    6. ':
' → logprob: -11.375628471374512
    7. ':**' → logprob: -12.625628471374512
    8. '>' → logprob: -13.250628471374512
    9. ']:' → logprob: -13.375628471374512
    10. '[' → logprob: -13.750628471374512

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004707918502390385
    2. '   ' → logprob: -5.7547078132629395
    3. '
' → logprob: -8.129708290100098
    4. ',' → logprob: -8.379708290100098
    5. ' e' → logprob: -8.504708290100098
    6. 'e' → logprob: -8.754708290100098
    7. '	' → logprob: -9.129708290100098
    8. '```' → logprob: -9.254708290100098
    9. '    ' → logprob: -9.754708290100098
    10. ' 
' → logprob: -9.754708290100098

Token 412: ' min' (ID: 1349)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13684824109077454
    2. 'cost' → logprob: -2.636848211288452
    3. 'cur' → logprob: -3.886848211288452
    4. '   ' → logprob: -3.886848211288452
    5. 'curr' → logprob: -4.886848449707031
    6. ' e' → logprob: -5.761848449707031
    7. 'min' (adapté à ' min') → logprob: -6.386848449707031
    8. 'current' → logprob: -7.136848449707031
    9. ' cost' → logprob: -7.636848449707031
    10. 'c' → logprob: -8.011848449707031

Token 413: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.009991460479795933
    2. 'e' → logprob: -5.009991645812988
    3. '_edge' → logprob: -5.884991645812988
    4. '_cost' → logprob: -8.134991645812988
    5. 'cost' → logprob: -9.134991645812988
    6. '_e' → logprob: -10.759991645812988
    7. ' edge' → logprob: -11.384991645812988
    8. '=edge' → logprob: -11.509991645812988
    9. 'ed' → logprob: -12.259991645812988
    10. '_' → logprob: -12.259991645812988

Token 414: ' =' (ID: 314)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.5885583162307739
    2. ' =' → logprob: -1.213558316230774
    3. '=' → logprob: -2.0885581970214844
    4. '_encoded' → logprob: -4.588558197021484
    5. '_cost' → logprob: -5.088558197021484
    6. '=e' → logprob: -5.838558197021484
    7. 'e' → logprob: -6.838558197021484
    8. 'cost' → logprob: -6.963558197021484
    9. '_' → logprob: -7.463558197021484
    10. '_v' → logprob: -7.963558197021484

Token 415: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.029783355072140694
    2. ' heap' → logprob: -3.529783248901367
    3. 'he' → logprob: -10.654783248901367
    4. 'ed' → logprob: -12.154783248901367
    5. '   ' → logprob: -14.029783248901367
    6. '(heap' → logprob: -14.404783248901367
    7. 'e' → logprob: -15.029783248901367
    8. '.heap' → logprob: -15.154783248901367
    9. 'h' → logprob: -15.279783248901367
    10. ' ed' → logprob: -15.404783248901367

Token 416: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'e' → logprob: -17.75
    3. '[' → logprob: -18.5
    4. 'p' → logprob: -18.875
    5. '
' → logprob: -19.25
    6. 'h' → logprob: -19.375
    7. '```' → logprob: -20.625
    8. '

' → logprob: -20.75
    9. 'k' → logprob: -20.75
    10. 'l' → logprob: -21.625

Token 417: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.012811454944312572
    2. 'q' → logprob: -4.512811660766602
    3. 'he' → logprob: -6.387811660766602
    4. '.heap' → logprob: -10.012811660766602
    5. 'pop' → logprob: -12.012811660766602
    6. 'op' → logprob: -12.262811660766602
    7. '.pop' → logprob: -12.512811660766602
    8. ' he' → logprob: -12.512811660766602
    9. '.' → logprob: -12.512811660766602
    10. '```' → logprob: -12.637811660766602

Token 418: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.130576806142926e-05
    2. 'pp' → logprob: -10.500031471252441
    3. 'ap' → logprob: -12.750031471252441
    4. '[' → logprob: -15.250031471252441
    5. 'q' → logprob: -15.500031471252441
    6. 'a' → logprob: -15.625031471252441
    7. 'e' → logprob: -16.375030517578125
    8. 'appe' → logprob: -16.375030517578125
    9. 'pop' → logprob: -17.125030517578125
    10. 'opp' → logprob: -17.625030517578125

Token 419: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0008479830576106906
    2. 'ush' → logprob: -7.125847816467285
    3. 'ap' → logprob: -11.000847816467285
    4. 'app' → logprob: -11.375847816467285
    5. 'e' → logprob: -11.750847816467285
    6. 'pop' → logprob: -13.000847816467285
    7. 'p' → logprob: -13.500847816467285
    8. '[' → logprob: -13.500847816467285
    9. 'o' → logprob: -14.250847816467285
    10. 'opp' → logprob: -15.375847816467285

Token 420: '(ed' (ID: 135912)
  Prédit: '(ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ed' → logprob: -1.5094070477061905e-05
    2. 'ed' → logprob: -11.125015258789062
    3. ' ed' → logprob: -15.750015258789062
    4. '(' → logprob: -16.375015258789062
    5. '-ed' → logprob: -17.250015258789062
    6. ''ed' → logprob: -18.000015258789062
    7. '_ed' → logprob: -18.125015258789062
    8. '.ed' → logprob: -18.250015258789062
    9. '(
' → logprob: -19.750015258789062
    10. '(edges' → logprob: -20.250015258789062

Token 421: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -0.0027079882565885782
    2. 'del' → logprob: -6.1277079582214355
    3. 'el' → logprob: -8.502708435058594
    4. 'rel' → logprob: -8.877708435058594
    5. 'list' → logprob: -9.752708435058594
    6. 'gl' → logprob: -10.627708435058594
    7. '```' → logprob: -11.127708435058594
    8. 'vel' → logprob: -11.252708435058594
    9. 'ge' → logprob: -11.627708435058594
    10. '
' → logprob: -11.627708435058594

Token 422: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0009313485352322459
    2. 'st' → logprob: -7.000931262969971
    3. 'is' → logprob: -11.625931739807129
    4. '   ' → logprob: -12.875931739807129
    5. '
' → logprob: -13.375931739807129
    6. 'list' → logprob: -14.000931739807129
    7. 'est' → logprob: -14.125931739807129
    8. '       ' → logprob: -14.750931739807129
    9. 'ap' → logprob: -15.125931739807129
    10. '[' → logprob: -15.125931739807129

Token 423: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47412872314453125
    2. ')
' → logprob: -0.9741287231445312
    3. ')
' → logprob: -10.724128723144531
    4. '       ' → logprob: -11.099128723144531
    5. ')

' → logprob: -12.099128723144531
    6. '   ' → logprob: -13.224128723144531
    7. ' )
' → logprob: -13.474128723144531
    8. '[' → logprob: -13.474128723144531
    9. ' )' → logprob: -14.099128723144531
    10. ',' → logprob: -14.224128723144531

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6103463768959045
    2. '
' → logprob: -1.1103463172912598
    3. ' 
' → logprob: -2.8603463172912598
    4. '<|end|>' → logprob: -3.3603463172912598
    5. '        
' → logprob: -4.61034631729126
    6. '  
' → logprob: -4.73534631729126
    7. '   ' → logprob: -5.61034631729126
    8. ' ' → logprob: -6.73534631729126
    9. ')' → logprob: -6.73534631729126
    10. '   
' → logprob: -6.86034631729126

Token 425: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.043017685413360596
    2. ' min' → logprob: -3.293017625808716
    3. 'd' → logprob: -6.418017864227295
    4. '       ' → logprob: -6.543017864227295
    5. 'e' → logprob: -7.043017864227295
    6. 'cost' → logprob: -7.668017864227295
    7. '   ' → logprob: -8.668017387390137
    8. ' d' → logprob: -8.918017387390137
    9. ' e' → logprob: -9.418017387390137
    10. 'm' → logprob: -10.043017387390137

Token 426: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.002164063509553671
    2. 'cost' → logprob: -6.877163887023926
    3. '_cost' → logprob: -7.377163887023926
    4. 'e' → logprob: -8.002163887023926
    5. '_edge' → logprob: -8.752163887023926
    6. ' edge' → logprob: -11.877163887023926
    7. 'egde' → logprob: -13.377163887023926
    8. 'ed' → logprob: -14.002163887023926
    9. 'eg' → logprob: -14.627163887023926
    10. 'edges' → logprob: -14.877163887023926

Token 427: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00011188744247192517
    2. '_' → logprob: -9.25011157989502
    3. 'cost' → logprob: -11.62511157989502
    4. ' _' → logprob: -13.12511157989502
    5. ',_' → logprob: -14.12511157989502
    6. '_val' → logprob: -14.25011157989502
    7. '_v' → logprob: -14.25011157989502
    8. '_,' → logprob: -14.75011157989502
    9. '_COST' → logprob: -14.87511157989502
    10. '_c' → logprob: -15.12511157989502

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036084887688048184
    2. '=' → logprob: -8.125360488891602
    3. ' ,' → logprob: -9.875360488891602
    4. ',min' → logprob: -11.625360488891602
    5. ' =' → logprob: -12.750360488891602
    6. ',v' → logprob: -15.125360488891602
    7. '=min' → logprob: -15.250360488891602
    8. ',
' → logprob: -15.500360488891602
    9. '‌,' → logprob: -16.0003604888916
    10. ',val' → logprob: -16.1253604888916

Token 429: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.009799649938941002
    2. ' min' → logprob: -4.634799480438232
    3. 'v' → logprob: -10.63479995727539
    4. 'u' → logprob: -11.63479995727539
    5. '	min' → logprob: -12.88479995727539
    6. '   ' → logprob: -13.25979995727539
    7. ' v' → logprob: -13.50979995727539
    8. '_min' → logprob: -13.88479995727539
    9. '    ' → logprob: -14.13479995727539
    10. ' u' → logprob: -14.50979995727539

Token 430: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -3.380904672667384e-05
    2. '_edge' → logprob: -10.875033378601074
    3. 'e' → logprob: -12.125033378601074
    4. 'egde' → logprob: -12.125033378601074
    5. ' edge' → logprob: -13.125033378601074
    6. '(edge' → logprob: -14.500033378601074
    7. '=edge' → logprob: -14.875033378601074
    8. '<|end|>' → logprob: -15.000033378601074
    9. '_v' → logprob: -15.500033378601074
    10. 'edges' → logprob: -16.00003433227539

Token 431: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0076099359430372715
    2. 'v' → logprob: -4.882609844207764
    3. '<|end|>' → logprob: -13.632610321044922
    4. ' =' → logprob: -14.757610321044922
    5. '_' → logprob: -14.757610321044922
    6. 'e' → logprob: -14.882610321044922
    7. '_val' → logprob: -15.257610321044922
    8. '```' → logprob: -15.507610321044922
    9. 's' → logprob: -15.632610321044922
    10. '
' → logprob: -15.882610321044922

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141352713108063
    2. '=' → logprob: -1.7014135122299194
    3. ' ' → logprob: -16.326414108276367
    4. ')' → logprob: -16.451414108276367
    5. '   ' → logprob: -17.201414108276367
    6. ',' → logprob: -17.201414108276367
    7. ' =
' → logprob: -18.201414108276367
    8. '	' → logprob: -18.326414108276367
    9. '    ' → logprob: -18.576414108276367
    10. '=

' → logprob: -18.701414108276367

Token 433: ' decode' (ID: 32043)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.0067154900170862675
    2. ' decode' → logprob: -5.006715297698975
    3. '.decode' → logprob: -16.756715774536133
    4. '   ' → logprob: -17.506715774536133
    5. '_decode' → logprob: -17.881715774536133
    6. 'decoded' → logprob: -19.756715774536133
    7. 'de' → logprob: -21.256715774536133
    8. 'dec' → logprob: -21.631715774536133
    9. '	de' → logprob: -21.881715774536133
    10. '  ' → logprob: -22.131715774536133

Token 434: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0015077205607667565
    2. 'edge' → logprob: -6.501507759094238
    3. '(min' → logprob: -12.751507759094238
    4. 'Edge' → logprob: -13.876507759094238
    5. '(edge' → logprob: -14.126507759094238
    6. 'min' → logprob: -14.376507759094238
    7. '_EDGE' → logprob: -16.501506805419922
    8. ' edge' → logprob: -16.626506805419922
    9. '-edge' → logprob: -17.001506805419922
    10. 'e' → logprob: -17.876506805419922

Token 435: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.75
    3. 'min' → logprob: -17.0
    4. ' min' → logprob: -19.625
    5. '(
' → logprob: -19.875
    6. '[min' → logprob: -21.0
    7. '(max' → logprob: -21.125
    8. ',min' → logprob: -21.375
    9. '(m' → logprob: -22.0
    10. '=min' → logprob: -22.125

Token 436: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.3856492842023727e-06
    2. 'egde' → logprob: -13.875000953674316
    3. '(edge' → logprob: -15.125000953674316
    4. '_edge' → logprob: -16.500001907348633
    5. ' edge' → logprob: -17.625001907348633
    6. 'e' → logprob: -17.750001907348633
    7. 'dge' → logprob: -18.000001907348633
    8. '=edge' → logprob: -18.375001907348633
    9. 'heap' → logprob: -18.875001907348633
    10. 'Edge' → logprob: -19.500001907348633

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06228012591600418
    2. ')
' → logprob: -2.8122801780700684
    3. '()' → logprob: -8.18727970123291
    4. ')
' → logprob: -11.56227970123291
    5. ')

' → logprob: -11.56227970123291
    6. '()
' → logprob: -11.68727970123291
    7. '())' → logprob: -12.81227970123291
    8. '   ' → logprob: -13.31227970123291
    9. '())
' → logprob: -13.43727970123291
    10. ' )' → logprob: -15.06227970123291

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16302143037319183
    2. '<|end|>' → logprob: -2.0380213260650635
    3. '```' → logprob: -5.163021564483643
    4. '
' → logprob: -5.163021564483643
    5. ' if' → logprob: -5.538021564483643
    6. '   ' → logprob: -6.163021564483643
    7. ')' → logprob: -7.538021564483643
    8. '        
' → logprob: -8.288021087646484
    9. 'if' → logprob: -8.288021087646484
    10. ' ' → logprob: -8.413021087646484

Token 439: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47649312019348145
    2. ' if' → logprob: -0.9764931201934814
    3. '   ' → logprob: -6.226492881774902
    4. '       ' → logprob: -7.976492881774902
    5. 'i' → logprob: -10.226492881774902
    6. '```' → logprob: -11.101492881774902
    7. '	if' → logprob: -11.476492881774902
    8. '    ' → logprob: -11.601492881774902
    9. ' 
' → logprob: -11.726492881774902
    10. ' ' → logprob: -12.226492881774902

Token 440: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5667765736579895
    2. ' used' → logprob: -1.8167765140533447
    3. 'not' → logprob: -1.9417765140533447
    4. 'used' → logprob: -2.0667765140533447
    5. ' d' → logprob: -11.191776275634766
    6. '(not' → logprob: -11.941776275634766
    7. ' ' → logprob: -11.941776275634766
    8. '   ' → logprob: -12.254276275634766
    9. '!' → logprob: -12.816776275634766
    10. '	not' → logprob: -12.816776275634766

Token 441: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.16022422909736633
    2. ' used' → logprob: -1.910224199295044
    3. 'Used' → logprob: -17.28522491455078
    4. '.used' → logprob: -17.28522491455078
    5. ' ' → logprob: -17.53522491455078
    6. '
' → logprob: -17.53522491455078
    7. '_used' → logprob: -17.78522491455078
    8. 'use' → logprob: -17.91022491455078
    9. '   ' → logprob: -17.91022491455078
    10. '-used' → logprob: -18.28522491455078

Token 442: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.125001907348633
    3. 'min' → logprob: -14.125001907348633
    4. ' min' → logprob: -17.375001907348633
    5. '[max' → logprob: -17.375001907348633
    6. ' [' → logprob: -17.375001907348633
    7. '[m' → logprob: -17.875001907348633
    8. '(min' → logprob: -18.500001907348633
    9. '[
' → logprob: -18.750001907348633
    10. '
' → logprob: -19.125001907348633

Token 443: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.0683535037969705e-05
    2. 'egde' → logprob: -11.75001049041748
    3. ' edge' → logprob: -14.00001049041748
    4. '_edge' → logprob: -14.50001049041748
    5. '(edge' → logprob: -14.62501049041748
    6. '=edge' → logprob: -15.62501049041748
    7. 'e' → logprob: -16.000011444091797
    8. '```' → logprob: -16.250011444091797
    9. '-edge' → logprob: -16.625011444091797
    10. 'ed' → logprob: -16.875011444091797

Token 444: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -2.45848218582978e-06
    2. 'v' → logprob: -13.12500286102295
    3. '
' → logprob: -16.125001907348633
    4. '[v' → logprob: -16.250001907348633
    5. '_' → logprob: -16.750001907348633
    6. '[' → logprob: -17.625001907348633
    7. '
' → logprob: -17.750001907348633
    8. ' _' → logprob: -18.000001907348633
    9. '	v' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 445: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.10161289572715759
    2. ']:
' → logprob: -2.3516128063201904
    3. ':' → logprob: -7.3516130447387695
    4. ']' → logprob: -7.9766130447387695
    5. '):
' → logprob: -9.35161304473877
    6. '):' → logprob: -9.35161304473877
    7. ':
' → logprob: -9.35161304473877
    8. ' ]' → logprob: -9.85161304473877
    9. ']:
' → logprob: -9.85161304473877
    10. ']:

' → logprob: -11.35161304473877

Token 446: '           ' (ID: 352)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02937423624098301
    2. '           ' → logprob: -3.779374122619629
    3. 'continue' → logprob: -5.279374122619629
    4. '       ' → logprob: -7.154374122619629
    5. ':
' → logprob: -9.654374122619629
    6. '	continue' → logprob: -9.654374122619629
    7. ':' → logprob: -10.404374122619629
    8. '   ' → logprob: -10.779374122619629
    9. '_continue' → logprob: -10.904374122619629
    10. ' continues' → logprob: -11.279374122619629

Token 447: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.014293497428297997
    2. 'continue' (adapté à ' continue') → logprob: -4.264293670654297
    3. '           ' → logprob: -9.889293670654297
    4. '	continue' → logprob: -10.389293670654297
    5. '   ' → logprob: -11.264293670654297
    6. '       ' → logprob: -11.514293670654297
    7. '               ' → logprob: -11.639293670654297
    8. ' continu' → logprob: -11.639293670654297
    9. 'contin' → logprob: -12.764293670654297
    10. '_continue' → logprob: -13.014293670654297

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004135868512094021
    2. '   ' → logprob: -6.254136085510254
    3. ' used' → logprob: -6.379136085510254
    4. '<|end|>' → logprob: -8.754136085510254
    5. '        
' → logprob: -9.379136085510254
    6. 'used' → logprob: -9.629136085510254
    7. '
' → logprob: -10.004136085510254
    8. ')' → logprob: -10.504136085510254
    9. '```' → logprob: -10.879136085510254
    10. '    
' → logprob: -11.004136085510254

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13506171107292175
    2. '   ' → logprob: -2.760061740875244
    3. ' used' → logprob: -2.885061740875244
    4. '<|end|>' → logprob: -5.885061740875244
    5. 'used' → logprob: -6.260061740875244
    6. '```' → logprob: -6.635061740875244
    7. '    ' → logprob: -8.885061264038086
    8. '    
' → logprob: -9.135061264038086
    9. '        
' → logprob: -9.135061264038086
    10. '[' → logprob: -9.135061264038086

Token 450: ' d' (ID: 272)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.004098585341125727
    2. 'used' → logprob: -5.879098415374756
    3. '       ' → logprob: -7.004098415374756
    4. '   ' → logprob: -7.879098415374756
    5. '    ' → logprob: -13.379098892211914
    6. '_used' → logprob: -13.629098892211914
    7. '        
' → logprob: -14.254098892211914
    8. '```' → logprob: -14.504098892211914
    9. '.used' → logprob: -14.504098892211914
    10. '    
' → logprob: -14.879098892211914

Token 451: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -5.5577775128767826e-06
    2. '[' → logprob: -12.250005722045898
    3. 'min' → logprob: -15.000005722045898
    4. '[max' → logprob: -16.3750057220459
    5. '```' → logprob: -16.7500057220459
    6. ',min' → logprob: -16.8750057220459
    7. '[m' → logprob: -17.0000057220459
    8. '[
' → logprob: -17.2500057220459
    9. ' [' → logprob: -17.3750057220459
    10. '=min' → logprob: -17.7500057220459

Token 452: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -9.088346359931165e-07
    2. 'egde' → logprob: -14.500000953674316
    3. '_edge' → logprob: -15.750000953674316
    4. ' edge' → logprob: -16.625
    5. '(edge' → logprob: -16.75
    6. '=edge' → logprob: -16.875
    7. 'heap' → logprob: -17.75
    8. '-edge' → logprob: -19.25
    9. 'ed' → logprob: -19.875
    10. 'min' → logprob: -20.0

Token 453: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.0921942703134846e-05
    2. '_cost' → logprob: -12.00001049041748
    3. '[min' → logprob: -12.62501049041748
    4. 'cost' → logprob: -13.75001049041748
    5. 'v' → logprob: -15.62501049041748
    6. '_' → logprob: -17.000011444091797
    7. 'Cost' → logprob: -17.375011444091797
    8. '_V' → logprob: -17.375011444091797
    9. '[v' → logprob: -17.500011444091797
    10. '[' → logprob: -17.750011444091797

Token 454: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31963205337524414
    2. '=' → logprob: -1.3196320533752441
    3. ']' → logprob: -5.569632053375244
    4. ')' → logprob: -6.069632053375244
    5. ']=' → logprob: -9.194631576538086
    6. ')=' → logprob: -9.319631576538086
    7. ',' → logprob: -11.069631576538086
    8. '=min' → logprob: -11.319631576538086
    9. ' )' → logprob: -13.319631576538086
    10. ' ]' → logprob: -13.444631576538086

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931783556938171
    2. ' =' → logprob: -0.6931783556938171
    3. '=min' → logprob: -10.693178176879883
    4. ',' → logprob: -11.693178176879883
    5. '   ' → logprob: -17.443178176879883
    6. ')' → logprob: -17.443178176879883
    7. ' =
' → logprob: -17.693178176879883
    8. '=
' → logprob: -17.818178176879883
    9. '＝' → logprob: -18.193178176879883
    10. '=

' → logprob: -18.318178176879883

Token 456: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001170225441455841
    2. ' min' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.751171112060547
    4. '	min' → logprob: -17.751171112060547
    5. 'max' → logprob: -18.876171112060547
    6. 'm' → logprob: -18.876171112060547
    7. '[min' → logprob: -19.626171112060547
    8. 'mind' → logprob: -19.751171112060547
    9. 'mi' → logprob: -19.751171112060547
    10. ' ' → logprob: -19.876171112060547

Token 457: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -2.3080716346157715e-05
    2. '_edge' → logprob: -11.125022888183594
    3. ' edge' → logprob: -12.250022888183594
    4. 'egde' → logprob: -13.250022888183594
    5. '(edge' → logprob: -14.375022888183594
    6. 'min' → logprob: -14.875022888183594
    7. '(min' → logprob: -15.625022888183594
    8. 'ed' → logprob: -16.000022888183594
    9. 'e' → logprob: -16.125022888183594
    10. 'cost' → logprob: -16.625022888183594

Token 458: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -8.180258191714529e-06
    2. 'cost' → logprob: -11.750008583068848
    3. '_cos' → logprob: -17.00000762939453
    4. '_co' → logprob: -17.12500762939453
    5. '_' → logprob: -17.37500762939453
    6. 'Cost' → logprob: -17.50000762939453
    7. '_COST' → logprob: -17.75000762939453
    8. '_c' → logprob: -17.75000762939453
    9. '-cost' → logprob: -18.25000762939453
    10. ' cost' → logprob: -18.50000762939453

Token 459: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047469813376665115
    2. ' used' → logprob: -3.2974698543548584
    3. '
' → logprob: -5.047469615936279
    4. 'used' → logprob: -5.922469615936279
    5. ',' → logprob: -8.547470092773438
    6. '   ' → logprob: -10.047470092773438
    7. '<|end|>' → logprob: -11.672470092773438
    8. '```' → logprob: -11.922470092773438
    9. ',
' → logprob: -12.297470092773438
    10. '.used' → logprob: -12.422470092773438

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12099697440862656
    2. ' used' → logprob: -2.2459969520568848
    3. 'used' → logprob: -4.870996952056885
    4. '   ' → logprob: -7.870996952056885
    5. '```' → logprob: -10.370997428894043
    6. '_used' → logprob: -11.245997428894043
    7. '	' → logprob: -11.870997428894043
    8. '      ' → logprob: -11.870997428894043
    9. '.used' → logprob: -11.995997428894043
    10. ' ' → logprob: -12.495997428894043

Token 461: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.07918201386928558
    2. ' used' → logprob: -2.5791819095611572
    3. '       ' → logprob: -8.204181671142578
    4. '   ' → logprob: -10.954181671142578
    5. '.used' → logprob: -14.454181671142578
    6. '_used' → logprob: -15.454181671142578
    7. '```' → logprob: -16.079181671142578
    8. '
' → logprob: -16.329181671142578
    9. 'Used' → logprob: -16.704181671142578
    10. '           ' → logprob: -16.704181671142578

Token 462: '[min' (ID: 135647)
  Prédit: '[min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[min' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. '[max' → logprob: -17.125
    4. '[m' → logprob: -17.875
    5. '```' → logprob: -18.375
    6. 'min' → logprob: -19.125
    7. '[
' → logprob: -19.375
    8. ' [' → logprob: -19.75
    9. '	min' → logprob: -21.125
    10. '(min' → logprob: -21.25

Token 463: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0010056582977995276
    2. '[min' → logprob: -7.50100564956665
    3. 'min' → logprob: -7.75100564956665
    4. 'egde' → logprob: -11.376006126403809
    5. '_edge' → logprob: -12.251006126403809
    6. '(min' → logprob: -13.126006126403809
    7. 'edges' → logprob: -13.876006126403809
    8. ' min' → logprob: -14.376006126403809
    9. 'ed' → logprob: -14.626006126403809
    10. ' edge' → logprob: -15.001006126403809

Token 464: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.1160349458805285e-05
    2. '[min' → logprob: -12.000011444091797
    3. 'v' → logprob: -12.250011444091797
    4. '[v' → logprob: -16.750011444091797
    5. '[' → logprob: -19.125011444091797
    6. 'V' → logprob: -19.125011444091797
    7. '_V' → logprob: -19.250011444091797
    8. '_min' → logprob: -19.500011444091797
    9. '```' → logprob: -19.500011444091797
    10. '_m' → logprob: -19.500011444091797

Token 465: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005697138840332627
    2. '[min' → logprob: -7.500569820404053
    3. ']=' → logprob: -11.125569343566895
    4. ' ]' → logprob: -13.625569343566895
    5. 'min' → logprob: -14.750569343566895
    6. '[' → logprob: -15.750569343566895
    7. '=' → logprob: -15.750569343566895
    8. '[m' → logprob: -16.62557029724121
    9. 'v' → logprob: -16.75057029724121
    10. ']
' → logprob: -17.00057029724121

Token 466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=False' → logprob: -15.788042068481445
    4. '[' → logprob: -16.663042068481445
    5. '=True' → logprob: -16.913042068481445
    6. '=
' → logprob: -18.663042068481445
    7. ' ' → logprob: -18.788042068481445
    8. '＝' → logprob: -18.788042068481445
    9. ',' → logprob: -19.913042068481445
    10. ')' → logprob: -20.038042068481445

Token 467: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.547789674485102e-05
    2. ' False' → logprob: -10.250035285949707
    3. 'True' → logprob: -19.250036239624023
    4. '(False' → logprob: -20.000036239624023
    5. '0' → logprob: -21.875036239624023
    6. '=False' → logprob: -22.125036239624023
    7. 'F' → logprob: -22.625036239624023
    8. 'false' → logprob: -22.875036239624023
    9. '_false' → logprob: -24.375036239624023
    10. 'Fal' → logprob: -24.500036239624023

Token 468: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007102620787918568
    2. '<|end|>' → logprob: -5.0071024894714355
    3. '
' → logprob: -8.882102966308594
    4. '   ' → logprob: -9.507102966308594
    5. '        
' → logprob: -9.632102966308594
    6. 'process' → logprob: -10.507102966308594
    7. ')' → logprob: -11.007102966308594
    8. ',' → logprob: -11.382102966308594
    9. ' process' → logprob: -11.382102966308594
    10. '	' → logprob: -11.632102966308594

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10073785483837128
    2. '<|end|>' → logprob: -2.6007378101348877
    3. '   ' → logprob: -4.600738048553467
    4. '
' → logprob: -4.600738048553467
    5. ')' → logprob: -8.225737571716309
    6. '        
' → logprob: -8.600737571716309
    7. '	' → logprob: -8.850737571716309
    8. '        ' → logprob: -8.975737571716309
    9. '```' → logprob: -9.225737571716309
    10. '<|end|>' → logprob: -9.350737571716309

Token 470: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.0005078765680082142
    2. '       ' → logprob: -8.000508308410645
    3. ' process' → logprob: -8.750508308410645
    4. '   ' → logprob: -11.250508308410645
    5. '	process' → logprob: -13.875508308410645
    6. '(process' → logprob: -17.000507354736328
    7. '           ' → logprob: -18.000507354736328
    8. '
' → logprob: -18.000507354736328
    9. '.process' → logprob: -18.375507354736328
    10. 'proces' → logprob: -18.625507354736328

Token 471: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -1.1041145626222715e-05
    2. 'adj' → logprob: -11.625011444091797
    3. '_edges' → logprob: -13.750011444091797
    4. '_' → logprob: -14.125011444091797
    5. '_ad' → logprob: -15.375011444091797
    6. '```' → logprob: -17.125011444091797
    7. '_edge' → logprob: -17.625011444091797
    8. '(adj' → logprob: -17.875011444091797
    9. ' adjacent' → logprob: -18.500011444091797
    10. 'Adjacent' → logprob: -19.000011444091797

Token 472: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0001295222609769553
    2. 'acency' → logprob: -9.375129699707031
    3. 'edge' → logprob: -11.125129699707031
    4. 'cent' → logprob: -12.125129699707031
    5. '_edge' → logprob: -12.250129699707031
    6. 'used' → logprob: -12.375129699707031
    7. '_edges' → logprob: -12.625129699707031
    8. 'ac' → logprob: -13.000129699707031
    9. 'edges' → logprob: -13.375129699707031
    10. 'min' → logprob: -13.500129699707031

Token 473: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0009608853724785149
    2. '_edge' → logprob: -7.125960826873779
    3. 'edges' → logprob: -9.125961303710938
    4. 'edge' → logprob: -10.875961303710938
    5. '(edge' → logprob: -11.375961303710938
    6. '```' → logprob: -11.875961303710938
    7. '_' → logprob: -12.250961303710938
    8. 's' → logprob: -12.875961303710938
    9. '_ed' → logprob: -14.000961303710938
    10. 'Edges' → logprob: -14.500961303710938

Token 474: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -2.951771421066951e-05
    2. '(' → logprob: -10.500029563903809
    3. '=edge' → logprob: -13.750029563903809
    4. '(
' → logprob: -14.625029563903809
    5. '(edges' → logprob: -15.625029563903809
    6. 'edge' → logprob: -15.750029563903809
    7. ' edge' → logprob: -18.250028610229492
    8. '```' → logprob: -18.750028610229492
    9. '(ed' → logprob: -19.125028610229492
    10. '(e' → logprob: -19.375028610229492

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018718011677265167
    2. '(edge' → logprob: -4.018718242645264
    3. '(' → logprob: -7.768718242645264
    4. ' ,' → logprob: -9.393717765808105
    5. '(
' → logprob: -10.768717765808105
    6. ',min' → logprob: -11.518717765808105
    7. '(min' → logprob: -11.768717765808105
    8. ',
' → logprob: -12.018717765808105
    9. '   ' → logprob: -13.018717765808105
    10. ')' → logprob: -13.018717765808105

Token 476: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002613358374219388
    2. ' min' → logprob: -8.250261306762695
    3. '[min' → logprob: -17.625261306762695
    4. '	min' → logprob: -17.750261306762695
    5. '
' → logprob: -18.750261306762695
    6. '_min' → logprob: -19.250261306762695
    7. '(min' → logprob: -19.500261306762695
    8. '   ' → logprob: -21.000261306762695
    9. ' ' → logprob: -21.375261306762695
    10. 'm' → logprob: -21.375261306762695

Token 477: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -4.008129963040119e-06
    2. 'egde' → logprob: -12.625003814697266
    3. 'min' → logprob: -14.875003814697266
    4. ' edge' → logprob: -16.750003814697266
    5. '=edge' → logprob: -17.250003814697266
    6. '_edge' → logprob: -17.250003814697266
    7. 'ed' → logprob: -17.375003814697266
    8. 'dge' → logprob: -17.375003814697266
    9. 'edges' → logprob: -17.625003814697266
    10. 'e' → logprob: -17.750003814697266

Token 478: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -14.500000953674316
    3. '```' → logprob: -18.375
    4. '_' → logprob: -19.5
    5. '[' → logprob: -20.375
    6. ' _' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. '
' → logprob: -21.125
    9. ',' → logprob: -21.25
    10. ')' → logprob: -21.5

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008247529622167349
    2. ',d' → logprob: -7.125824928283691
    3. ' ,' → logprob: -11.500824928283691
    4. '   ' → logprob: -12.000824928283691
    5. ',min' → logprob: -12.875824928283691
    6. ',
' → logprob: -14.375824928283691
    7. '```' → logprob: -15.375824928283691
    8. 'd' → logprob: -15.875824928283691
    9. '       ' → logprob: -16.000823974609375
    10. ')' → logprob: -16.000823974609375

Token 480: ' ed' (ID: 1648)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.014166681095957756
    2. ' ed' → logprob: -4.264166831970215
    3. 'd' → logprob: -12.889166831970215
    4. '_ed' → logprob: -15.514166831970215
    5. 'edd' → logprob: -16.6391658782959
    6. 'eds' → logprob: -16.6391658782959
    7. '-ed' → logprob: -16.8891658782959
    8. 'e' → logprob: -16.8891658782959
    9. '(ed' → logprob: -17.3891658782959
    10. ' ' → logprob: -17.6391658782959

Token 481: 'gel' (ID: 9457)
  Prédit: 'gel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gel' → logprob: -6.034592388459714e-06
    2. 'del' → logprob: -13.000005722045898
    3. 'ge' → logprob: -13.125005722045898
    4. 'get' → logprob: -14.625005722045898
    5. ' gel' → logprob: -15.625005722045898
    6. 'rel' → logprob: -15.750005722045898
    7. '
' → logprob: -15.875005722045898
    8. '```' → logprob: -16.1250057220459
    9. 'vel' → logprob: -16.2500057220459
    10. 'gl' → logprob: -16.5000057220459

Token 482: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00043591417488642037
    2. 'list' → logprob: -8.000435829162598
    3. 'st' → logprob: -9.500435829162598
    4. 'el' → logprob: -11.000435829162598
    5. '_list' → logprob: -13.375435829162598
    6. 'elist' → logprob: -13.625435829162598
    7. '```' → logprob: -13.875435829162598
    8. 'ilist' → logprob: -14.250435829162598
    9. '
' → logprob: -14.625435829162598
    10. 'ed' → logprob: -14.750435829162598

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019833561964333057
    2. ',d' → logprob: -6.376983165740967
    3. ' ,' → logprob: -8.251983642578125
    4. '   ' → logprob: -11.501983642578125
    5. ',min' → logprob: -12.001983642578125
    6. ')' → logprob: -13.501983642578125
    7. ',
' → logprob: -14.126983642578125
    8. '       ' → logprob: -14.751983642578125
    9. '```' → logprob: -15.001983642578125
    10. 'd' → logprob: -15.251983642578125

Token 484: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.061967913061380386
    2. ' used' → logprob: -2.8119678497314453
    3. '   ' → logprob: -15.936967849731445
    4. '```' → logprob: -16.186967849731445
    5. '.used' → logprob: -16.936967849731445
    6. '_used' → logprob: -17.436967849731445
    7. '-used' → logprob: -17.811967849731445
    8. 'Used' → logprob: -18.436967849731445
    9. '
' → logprob: -18.436967849731445
    10. 'd' → logprob: -18.811967849731445

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010245654731988907
    2. ',d' → logprob: -4.6352458000183105
    3. ' ,' → logprob: -8.010245323181152
    4. 'd' → logprob: -9.510245323181152
    5. ',min' → logprob: -9.635245323181152
    6. '   ' → logprob: -12.260245323181152
    7. 'min' → logprob: -12.260245323181152
    8. ' d' → logprob: -12.760245323181152
    9. '```' → logprob: -13.885245323181152
    10. ',
' → logprob: -14.010245323181152

Token 486: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018004190176725388
    2. 'd' → logprob: -4.143004417419434
    3. ' min' → logprob: -6.268004417419434
    4. ' d' → logprob: -9.643004417419434
    5. '   ' → logprob: -13.018004417419434
    6. '	min' → logprob: -13.643004417419434
    7. 'mind' → logprob: -14.518004417419434
    8. ' ' → logprob: -14.643004417419434
    9. '
' → logprob: -14.643004417419434
    10. '```' → logprob: -14.643004417419434

Token 487: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -2.2961512513575144e-05
    2. 'min' → logprob: -11.250022888183594
    3. '_edge' → logprob: -12.500022888183594
    4. 'egde' → logprob: -12.500022888183594
    5. ' edge' → logprob: -14.000022888183594
    6. 'e' → logprob: -14.875022888183594
    7. 'dge' → logprob: -15.500022888183594
    8. 'ed' → logprob: -15.625022888183594
    9. '```' → logprob: -15.625022888183594
    10. '(edge' → logprob: -15.875022888183594

Token 488: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00023500648967456073
    2. 'cost' → logprob: -8.375234603881836
    3. 'v' → logprob: -13.500234603881836
    4. 'Cost' → logprob: -13.875234603881836
    5. '_v' → logprob: -14.000234603881836
    6. '_COST' → logprob: -15.125234603881836
    7. ' cost' → logprob: -15.875234603881836
    8. '_' → logprob: -16.000234603881836
    9. '```' → logprob: -16.125234603881836
    10. '_c' → logprob: -16.250234603881836

Token 489: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ')
' → logprob: -11.375017166137695
    3. '   ' → logprob: -12.500017166137695
    4. ')return' → logprob: -13.875017166137695
    5. ' )' → logprob: -13.875017166137695
    6. '       ' → logprob: -15.625017166137695
    7. ')

' → logprob: -16.500017166137695
    8. ')#' → logprob: -17.000017166137695
    9. '<|end|>' → logprob: -17.000017166137695
    10. '),' → logprob: -17.750017166137695

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08097879588603973
    2. '<|end|>' → logprob: -2.7059788703918457
    3. 'return' → logprob: -5.205978870391846
    4. '
' → logprob: -5.955978870391846
    5. ' return' → logprob: -7.205978870391846
    6. '```' → logprob: -7.955978870391846
    7. '	return' → logprob: -8.080978393554688
    8. ')' → logprob: -8.205978393554688
    9. '[' → logprob: -8.330978393554688
    10. '}' → logprob: -8.580978393554688

Token 491: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14580458402633667
    2. '<|end|>' → logprob: -2.2708046436309814
    3. 'return' (adapté à ' return') → logprob: -4.020804405212402
    4. ')' → logprob: -5.270804405212402
    5. '```' → logprob: -6.270804405212402
    6. ' ' → logprob: -6.395804405212402
    7. '
' → logprob: -6.520804405212402
    8. ' return' → logprob: -6.770804405212402
    9. '	return' → logprob: -7.395804405212402
    10. ']' → logprob: -7.770804405212402

Token 492: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005233882926404476
    2. ' d' → logprob: -5.2552337646484375
    3. '	d' → logprob: -17.380233764648438
    4. '(d' → logprob: -17.630233764648438
    5. ' ' → logprob: -18.255233764648438
    6. '[d' → logprob: -18.255233764648438
    7. '   ' → logprob: -19.005233764648438
    8. '[' → logprob: -19.255233764648438
    9. '  ' → logprob: -19.880233764648438
    10. '_d' → logprob: -20.255233764648438

Token 493: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014362464658915997
    2. '#' → logprob: -5.264362335205078
    3. '```' → logprob: -5.514362335205078
    4. 'n' → logprob: -6.139362335205078
    5. 'if' → logprob: -6.514362335205078
    6. '<|end|>' → logprob: -7.764362335205078
    7. 'print' → logprob: -8.139362335205078
    8. 's' → logprob: -8.639362335205078
    9. '
' → logprob: -9.014362335205078
    10. 'for' → logprob: -9.264362335205078

Token 495: ' sum' (ID: 4215)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04925769567489624
    2. 'main' → logprob: -3.049257755279541
    3. ' def' → logprob: -8.674257278442383
    4. 'def' → logprob: -9.049257278442383
    5. ' solve' → logprob: -9.049257278442383
    6. ' process' → logprob: -9.174257278442383
    7. ' parse' → logprob: -9.674257278442383
    8. 'parse' → logprob: -10.799257278442383
    9. 'process' → logprob: -10.799257278442383
    10. 'solve' → logprob: -10.799257278442383

Token 496: '_dist' (ID: 37968)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2731744050979614
    2. '_' → logprob: -2.148174285888672
    3. 'def' → logprob: -2.898174285888672
    4. '(_' → logprob: -4.023174285888672
    5. '(d' → logprob: -4.773174285888672
    6. '_cost' → logprob: -5.273174285888672
    7. '(_)' → logprob: -5.273174285888672
    8. '(
' → logprob: -5.523174285888672
    9. '([' → logprob: -5.648174285888672
    10. '(dist' → logprob: -6.648174285888672

Token 497: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.27325624227523804
    2. 'ance' → logprob: -1.5232563018798828
    3. '(' → logprob: -4.773256301879883
    4. '([]' → logprob: -4.898256301879883
    5. '()' → logprob: -5.773256301879883
    6. '(d' → logprob: -8.023256301879883
    7. 'def' → logprob: -8.023256301879883
    8. '(edges' → logprob: -8.398256301879883
    9. '=[]' → logprob: -8.523256301879883
    10. '([' → logprob: -8.898256301879883

Token 498: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.40298163890838623
    2. '(edge' → logprob: -1.6529816389083862
    3. '(' → logprob: -2.027981758117676
    4. '(dist' → logprob: -5.527981758117676
    5. '(distance' → logprob: -6.652981758117676
    6. '(a' → logprob: -7.152981758117676
    7. '(s' → logprob: -7.402981758117676
    8. '(*' → logprob: -8.027981758117676
    9. '(def' → logprob: -8.152981758117676
    10. ' (' → logprob: -8.527981758117676

Token 499: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019008245319128036
    2. '):
' → logprob: -4.019008159637451
    3. ',' → logprob: -7.519008159637451
    4. ')' → logprob: -8.76900863647461
    5. '(d' → logprob: -9.26900863647461
    6. '):
' → logprob: -10.89400863647461
    7. ' ):' → logprob: -11.01900863647461
    8. 'd' → logprob: -12.14400863647461
    9. ',d' → logprob: -12.26900863647461
    10. '(' → logprob: -12.26900863647461

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01823153719305992
    2. ',d' → logprob: -4.018231391906738
    3. ' ,' → logprob: -9.768231391906738
    4. 'd' → logprob: -11.143231391906738
    5. '):' → logprob: -12.268231391906738
    6. ',
' → logprob: -13.643231391906738
    7. ')' → logprob: -14.143231391906738
    8. '_,' → logprob: -14.268231391906738
    9. 's' → logprob: -14.268231391906738
    10. '):
' → logprob: -15.018231391906738

Token 501: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1426922082901001
    2. ' d' → logprob: -2.0176920890808105
    3. ')' → logprob: -11.767692565917969
    4. ' ' → logprob: -12.767692565917969
    5. ')d' → logprob: -13.767692565917969
    6. '   ' → logprob: -14.267692565917969
    7. '<|end|>' → logprob: -14.267692565917969
    8. 'n' → logprob: -14.267692565917969
    9. '
' → logprob: -14.642692565917969
    10. '  ' → logprob: -14.892692565917969

Token 502: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.190178904333152e-05
    2. ',' → logprob: -10.500031471252441
    3. '```' → logprob: -13.625031471252441
    4. ' ' → logprob: -14.000031471252441
    5. '1' → logprob: -14.875031471252441
    6. '_' → logprob: -15.250031471252441
    7. ' ,' → logprob: -15.375031471252441
    8. '_,' → logprob: -15.375031471252441
    9. '
' → logprob: -15.500031471252441
    10. '２' → logprob: -15.500031471252441

Token 503: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007340872660279274
    2. '):
' → logprob: -5.132340908050537
    3. ',' → logprob: -6.632340908050537
    4. ')' → logprob: -9.632340431213379
    5. '):
' → logprob: -11.132340431213379
    6. ' ):' → logprob: -12.632340431213379
    7. '[]):' → logprob: -13.132340431213379
    8. '   ' → logprob: -13.257340431213379
    9. '):

' → logprob: -13.757340431213379
    10. ':' → logprob: -14.257340431213379

Token 504: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25115591287612915
    2. ' n' → logprob: -1.6261558532714844
    3. 's' → logprob: -4.751155853271484
    4. 'd' → logprob: -4.751155853271484
    5. ' s' → logprob: -6.001155853271484
    6. 'k' → logprob: -6.626155853271484
    7. ' d' → logprob: -7.001155853271484
    8. ')' → logprob: -7.126155853271484
    9. 'i' → logprob: -7.251155853271484
    10. ' )' → logprob: -8.501155853271484

Token 505: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007257323246449232
    2. '):
' → logprob: -5.007257461547852
    3. ',' → logprob: -7.882257461547852
    4. ')' → logprob: -8.757257461547852
    5. '):
' → logprob: -12.757257461547852
    6. '   ' → logprob: -13.007257461547852
    7. ' ):' → logprob: -13.507257461547852
    8. ':' → logprob: -15.507257461547852
    9. '):

' → logprob: -15.757257461547852
    10. '  ' → logprob: -16.75725746154785

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024829184636473656
    2. 'total' → logprob: -4.649829387664795
    3. 'result' → logprob: -4.649829387664795
    4. 'return' → logprob: -6.399829387664795
    5. 'sum' → logprob: -6.774829387664795
    6. 'res' → logprob: -6.899829387664795
    7. ' total' → logprob: -7.149829387664795
    8. 's' → logprob: -8.274828910827637
    9. ' result' → logprob: -8.524828910827637
    10. '
' → logprob: -9.274828910827637

Token 507: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0558842420578003
    2. 'total' → logprob: -1.0558842420578003
    3. 'result' → logprob: -1.5558842420578003
    4. 's' → logprob: -3.43088436126709
    5. '   ' → logprob: -3.55588436126709
    6. 'res' → logprob: -3.55588436126709
    7. 'sum' → logprob: -5.93088436126709
    8. 'ans' → logprob: -8.30588436126709
    9. ' total' → logprob: -8.55588436126709
    10. ' return' → logprob: -8.68088436126709

Token 508: ' [' (ID: 723)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3487645089626312
    2. ' sum' → logprob: -1.2237645387649536
    3. '0' → logprob: -9.098764419555664
    4. ' min' → logprob: -9.598764419555664
    5. 'min' → logprob: -9.973764419555664
    6. '   ' → logprob: -10.473764419555664
    7. '(sum' → logprob: -10.598764419555664
    8. ' d' → logprob: -10.723764419555664
    9. 'd' → logprob: -11.598764419555664
    10. ' ' → logprob: -12.598764419555664

Token 509: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001272854395210743
    2. '(d' → logprob: -6.876272678375244
    3. ' d' → logprob: -9.251273155212402
    4. 'min' → logprob: -9.501273155212402
    5. 'max' → logprob: -10.251273155212402
    6. '(min' → logprob: -11.876273155212402
    7. '(' → logprob: -12.126273155212402
    8. 'float' → logprob: -12.251273155212402
    9. '0' → logprob: -12.876273155212402
    10. 'int' → logprob: -13.126273155212402

Token 510: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02703886479139328
    2. '[i' → logprob: -3.902038812637329
    3. 'i' → logprob: -5.277039051055908
    4. 'd' → logprob: -7.402039051055908
    5. '[' → logprob: -8.15203857421875
    6. '
' → logprob: -9.02703857421875
    7. '[d' → logprob: -9.40203857421875
    8. ' i' → logprob: -9.65203857421875
    9. '```' → logprob: -10.83953857421875
    10. ' d' → logprob: -11.15203857421875

Token 511: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.607391408877447e-05
    2. 'i' → logprob: -10.250036239624023
    3. '[' → logprob: -15.500036239624023
    4. '[u' → logprob: -15.625036239624023
    5. '[_' → logprob: -16.500036239624023
    6. '[v' → logprob: -16.625036239624023
    7. ' i' → logprob: -16.875036239624023
    8. ']' → logprob: -17.250036239624023
    9. '[j' → logprob: -17.375036239624023
    10. '(i' → logprob: -17.625036239624023

Token 512: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07820916920900345
    2. ' +' → logprob: -2.703209161758423
    3. '+d' → logprob: -4.828209400177002
    4. ']+' → logprob: -8.578208923339844
    5. ']' → logprob: -10.203208923339844
    6. '+
' → logprob: -13.203208923339844
    7. '+D' → logprob: -13.203208923339844
    8. '+i' → logprob: -13.453208923339844
    9. 'd' → logprob: -13.703208923339844
    10. ')+' → logprob: -13.703208923339844

Token 513: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13121163845062256
    2. ' +' → logprob: -2.256211757659912
    3. '+d' → logprob: -4.006211757659912
    4. '+
' → logprob: -11.881211280822754
    5. '+D' → logprob: -12.756211280822754
    6. 'd' → logprob: -13.506211280822754
    7. ' ' → logprob: -13.881211280822754
    8. ' ' → logprob: -14.131211280822754
    9. '<' → logprob: -14.256211280822754
    10. ' d' → logprob: -14.631211280822754

Token 514: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03804149478673935
    2. ' d' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.288042068481445
    4. '    ' → logprob: -18.413042068481445
    5. '
' → logprob: -18.538042068481445
    6. '	d' → logprob: -18.788042068481445
    7. ' ' → logprob: -18.913042068481445
    8. '  ' → logprob: -19.413042068481445
    9. '"d' → logprob: -20.663042068481445
    10. ')d' → logprob: -20.788042068481445

Token 515: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010927118128165603
    2. 'd' → logprob: -6.876092910766602
    3. '[i' → logprob: -10.751092910766602
    4. 'i' → logprob: -11.001092910766602
    5. ' d' → logprob: -11.626092910766602
    6. '1' → logprob: -11.626092910766602
    7. ' ' → logprob: -13.501092910766602
    8. '   ' → logprob: -14.126092910766602
    9. '
' → logprob: -14.751092910766602
    10. '[' → logprob: -15.001092910766602

Token 516: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. 'i' → logprob: -13.750004768371582
    3. ' [' → logprob: -14.000004768371582
    4. '[' → logprob: -14.250004768371582
    5. '(i' → logprob: -14.250004768371582
    6. ']' → logprob: -14.625004768371582
    7. '][' → logprob: -15.375004768371582
    8. 'for' → logprob: -16.000003814697266
    9. '[n' → logprob: -16.250003814697266
    10. '   ' → logprob: -16.500003814697266

Token 517: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19713355600833893
    2. ']' → logprob: -2.1971335411071777
    3. 'for' → logprob: -2.6971335411071777
    4. '-' → logprob: -8.947134017944336
    5. ' ' → logprob: -9.322134017944336
    6. ' -' → logprob: -9.447134017944336
    7. '	for' → logprob: -10.572134017944336
    8. '   ' → logprob: -10.697134017944336
    9. ' if' → logprob: -11.322134017944336
    10. ')' → logprob: -11.322134017944336

Token 518: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25197237730026245
    2. 'for' → logprob: -1.5019724369049072
    3. '   ' → logprob: -11.251972198486328
    4. ' ' → logprob: -11.501972198486328
    5. '	for' → logprob: -11.626972198486328
    6. '-' → logprob: -12.251972198486328
    7. ')' → logprob: -13.501972198486328
    8. ']' → logprob: -13.626972198486328
    9. ' -' → logprob: -13.751972198486328
    10. ' if' → logprob: -14.001972198486328

Token 519: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02324768900871277
    2. ' i' → logprob: -3.773247718811035
    3. ' range' → logprob: -13.773247718811035
    4. 'range' → logprob: -13.898247718811035
    5. ' in' → logprob: -15.648247718811035
    6. 'in' → logprob: -17.27324676513672
    7. '
' → logprob: -18.77324676513672
    8. ' ' → logprob: -18.89824676513672
    9. ' ' → logprob: -18.89824676513672
    10. '	i' → logprob: -19.27324676513672

Token 520: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3874204456806183
    2. 'in' → logprob: -1.137420415878296
    3. 'range' → logprob: -7.762420654296875
    4. 'i' → logprob: -10.012420654296875
    5. ' range' → logprob: -10.137420654296875
    6. ' ' → logprob: -11.012420654296875
    7. 'n' → logprob: -11.137420654296875
    8. ' i' → logprob: -12.887420654296875
    9. '  ' → logprob: -13.762420654296875
    10. ',' → logprob: -14.012420654296875

Token 521: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -17.125335693359375
    4. ' ' → logprob: -19.500335693359375
    5. '	range' → logprob: -20.375335693359375
    6. '   ' → logprob: -20.500335693359375
    7. '
' → logprob: -21.000335693359375
    8. 'n' → logprob: -21.000335693359375
    9. 'r' → logprob: -21.375335693359375
    10. '  ' → logprob: -21.750335693359375

Token 522: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10029163956642151
    2. 'n' → logprob: -2.3502917289733887
    3. '(' → logprob: -9.97529125213623
    4. ' n' → logprob: -10.22529125213623
    5. ' (' → logprob: -13.47529125213623
    6. '(
' → logprob: -14.60029125213623
    7. '	n' → logprob: -15.72529125213623
    8. '   ' → logprob: -16.350292205810547
    9. '
' → logprob: -16.600292205810547
    10. ')n' → logprob: -17.475292205810547

Token 523: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07895643264055252
    2. ']' → logprob: -2.578956365585327
    3. ')' → logprob: -10.453956604003906
    4. ' ]' → logprob: -10.578956604003906
    5. ']
' → logprob: -12.703956604003906
    6. '   ' → logprob: -13.078956604003906
    7. '])]' → logprob: -13.328956604003906
    8. '])' → logprob: -13.453956604003906
    9. ']]' → logprob: -13.703956604003906
    10. ' )' → logprob: -14.203956604003906

Token 524: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09362591803073883
    2. '<|end|>' → logprob: -2.718626022338867
    3. '
' → logprob: -4.343626022338867
    4. '```' → logprob: -5.593626022338867
    5. '[' → logprob: -5.718626022338867
    6. 'n' → logprob: -6.843626022338867
    7. '#' → logprob: -7.093626022338867
    8. '<|end|>' → logprob: -7.468626022338867
    9. '[
' → logprob: -8.343626022338867
    10. '\' → logprob: -8.593626022338867

Token 525: ' update' (ID: 4027)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05586748197674751
    2. ' main' → logprob: -2.9308674335479736
    3. 'solve' → logprob: -7.180867671966553
    4. 'def' → logprob: -9.555867195129395
    5. 'read' → logprob: -9.805867195129395
    6. 'process' → logprob: -10.305867195129395
    7. ' solve' → logprob: -10.555867195129395
    8. 'calculate' → logprob: -11.805867195129395
    9. 'sum' → logprob: -11.930867195129395
    10. 'reverse' → logprob: -12.555867195129395

Token 526: '_min' (ID: 15950)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5071659088134766
    2. '_remaining' → logprob: -2.3821659088134766
    3. '_sum' → logprob: -3.2571659088134766
    4. '_result' → logprob: -3.5071659088134766
    5. '_answer' → logprob: -3.6321659088134766
    6. '_s' → logprob: -3.6321659088134766
    7. '_cost' → logprob: -3.7571659088134766
    8. '_results' → logprob: -4.007165908813477
    9. '_min' → logprob: -4.007165908813477
    10. '(n' → logprob: -4.132165908813477

Token 527: '_right' (ID: 24402)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.27315211296081543
    2. '_' → logprob: -2.6481521129608154
    3. '_cost' → logprob: -2.7731521129608154
    4. '_edge' → logprob: -3.8981521129608154
    5. '_sum' → logprob: -3.8981521129608154
    6. '_distance' → logprob: -4.0231523513793945
    7. '_edges' → logprob: -4.5231523513793945
    8. 'imum' → logprob: -5.1481523513793945
    9. '_values' → logprob: -5.3981523513793945
    10. 'dist' → logprob: -5.5231523513793945

Token 528: '_to' (ID: 5089)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.2118619680404663
    2. '_right' → logprob: -1.9618619680404663
    3. '(dist' → logprob: -2.461862087249756
    4. '(i' → logprob: -2.586862087249756
    5. '(ans' → logprob: -2.961862087249756
    6. '(right' → logprob: -3.086862087249756
    7. 's' → logprob: -3.461862087249756
    8. '(arr' → logprob: -3.586862087249756
    9. '(sum' → logprob: -3.836862087249756
    10. '(s' → logprob: -3.836862087249756

Token 529: '_left' (ID: 22189)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.013832839205861092
    2. 'n' → logprob: -5.388833045959473
    3. 'right' → logprob: -5.513833045959473
    4. 'max' → logprob: -6.763833045959473
    5. '_left' → logprob: -7.138833045959473
    6. 'i' → logprob: -7.513833045959473
    7. '(n' → logprob: -8.388833045959473
    8. 'lef' → logprob: -8.388833045959473
    9. 'l' → logprob: -8.513833045959473
    10. 'end' → logprob: -8.763833045959473

Token 530: '(d' (ID: 2572)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3147827982902527
    2. '(min' → logprob: -2.4397828578948975
    3. '(arr' → logprob: -2.5647828578948975
    4. '(' → logprob: -3.4397828578948975
    5. '(d' → logprob: -3.4397828578948975
    6. '(s' → logprob: -5.064782619476318
    7. '(lst' → logprob: -5.439782619476318
    8. '(right' → logprob: -5.564782619476318
    9. '(dist' → logprob: -5.689782619476318
    10. '(array' → logprob: -6.064782619476318

Token 531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9298976063728333
    2. '1' → logprob: -1.4298975467681885
    3. ')' → logprob: -1.6798975467681885
    4. '2' → logprob: -3.8048975467681885
    5. '_r' → logprob: -3.8048975467681885
    6. '[i' → logprob: -3.9298975467681885
    7. ')_' → logprob: -4.054897785186768
    8. ',i' → logprob: -4.304897785186768
    9. '_right' → logprob: -4.429897785186768
    10. '[' → logprob: -4.929897785186768

Token 532: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0550987720489502
    2. ' n' → logprob: -1.0550987720489502
    3. 'd' → logprob: -2.18009877204895
    4. ' d' → logprob: -2.55509877204895
    5. ' i' → logprob: -3.55509877204895
    6. '):
' → logprob: -3.68009877204895
    7. 'i' → logprob: -3.68009877204895
    8. '):' → logprob: -5.305098533630371
    9. ' min' → logprob: -5.680098533630371
    10. 'min' → logprob: -6.055098533630371

Token 533: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1582595854997635
    2. ',' → logprob: -2.408259630203247
    3. '):
' → logprob: -2.908259630203247
    4. '):
' → logprob: -7.408259391784668
    5. ',d' → logprob: -7.908259391784668
    6. '   ' → logprob: -8.158259391784668
    7. ')' → logprob: -8.158259391784668
    8. '-' → logprob: -9.158259391784668
    9. ' ):' → logprob: -10.033259391784668
    10. ' ,' → logprob: -10.783259391784668

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1411413550376892
    2. 'for' → logprob: -2.141141414642334
    3. ' for' → logprob: -4.266141414642334
    4. 'min' → logprob: -9.891140937805176
    5. '	for' → logprob: -11.016140937805176
    6. 'result' → logprob: -13.141140937805176
    7. 'right' → logprob: -13.516140937805176
    8. 'res' → logprob: -13.641140937805176
    9. 'ans' → logprob: -13.641140937805176
    10. '```' → logprob: -14.141140937805176

Token 535: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001078302855603397
    2. '   ' → logprob: -7.001078128814697
    3. ' for' → logprob: -8.751078605651855
    4. '```' → logprob: -11.751078605651855
    5. '	for' → logprob: -14.876078605651855
    6. '
' → logprob: -15.876078605651855
    7. '``' → logprob: -16.37607765197754
    8. 'i' → logprob: -19.00107765197754
    9. 'min' → logprob: -19.62607765197754
    10. ' ' → logprob: -20.62607765197754

Token 536: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3279837667942047
    2. 'n' → logprob: -1.5779837369918823
    3. 'range' → logprob: -3.202983856201172
    4. ' i' → logprob: -3.702983856201172
    5. ' n' → logprob: -4.952983856201172
    6. ' range' → logprob: -7.202983856201172
    7. ' ' → logprob: -9.827983856201172
    8. '   ' → logprob: -10.452983856201172
    9. '_' → logprob: -11.577983856201172
    10. '	i' → logprob: -11.952983856201172

Token 537: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03373110666871071
    2. 'in' → logprob: -3.40873122215271
    3. '   ' → logprob: -10.158731460571289
    4. '	in' → logprob: -10.908731460571289
    5. 'n' → logprob: -11.658731460571289
    6. ' ' → logprob: -12.033731460571289
    7. '```' → logprob: -12.783731460571289
    8. 'd' → logprob: -13.408731460571289
    9. '1' → logprob: -13.533731460571289
    10. ' n' → logprob: -14.033731460571289

Token 538: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20184120535850525
    2. ' range' → logprob: -1.7018412351608276
    3. '   ' → logprob: -8.701841354370117
    4. 'n' → logprob: -9.076841354370117
    5. ' reversed' → logprob: -9.326841354370117
    6. ' n' → logprob: -10.576841354370117
    7. '	range' → logprob: -11.701841354370117
    8. 'reverse' → logprob: -12.326841354370117
    9. 're' → logprob: -12.326841354370117
    10. 'rang' → logprob: -12.576841354370117

Token 539: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030734142288565636
    2. ' n' → logprob: -3.530734062194824
    3. '(n' → logprob: -7.155734062194824
    4. '	n' → logprob: -8.655734062194824
    5. '   ' → logprob: -10.530734062194824
    6. '
' → logprob: -14.405734062194824
    7. ',n' → logprob: -14.780734062194824
    8. ')n' → logprob: -14.780734062194824
    9. '[n' → logprob: -14.905734062194824
    10. '(' → logprob: -16.03073501586914

Token 540: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029751179739832878
    2. ' -' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.27975082397461
    4. '   ' → logprob: -16.77975082397461
    5. '1' → logprob: -17.52975082397461
    6. '2' → logprob: -17.65475082397461
    7. '-
' → logprob: -17.77975082397461
    8. '
' → logprob: -18.65475082397461
    9. '−' → logprob: -18.65475082397461
    10. '	' → logprob: -18.77975082397461

Token 541: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.764977686339989e-05
    2. ' ' → logprob: -10.125057220458984
    3. '1' → logprob: -11.000057220458984
    4. '
' → logprob: -15.000057220458984
    5. '-' → logprob: -15.500057220458984
    6. '   ' → logprob: -16.250057220458984
    7. '```' → logprob: -17.250057220458984
    8. '  ' → logprob: -17.437557220458984
    9. ' -' → logprob: -17.687557220458984
    10. '

' → logprob: -17.937557220458984

Token 542: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03452640399336815
    2. ' -' → logprob: -3.4095263481140137
    3. ',' → logprob: -7.159526348114014
    4. '1' → logprob: -9.659526824951172
    5. ' ' → logprob: -11.534526824951172
    6. ' ,' → logprob: -11.784526824951172
    7. ',-' → logprob: -11.909526824951172
    8. '   ' → logprob: -12.159526824951172
    9. '2' → logprob: -12.784526824951172
    10. '):
' → logprob: -12.909526824951172

Token 543: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3610614836215973
    2. 'n' → logprob: -1.236061453819275
    3. '       ' → logprob: -4.8610615730285645
    4. '	n' → logprob: -5.9860615730285645
    5. ' n' → logprob: -6.8610615730285645
    6. '```' → logprob: -7.3610615730285645
    7. '
' → logprob: -8.736061096191406
    8. ',n' → logprob: -8.986061096191406
    9. '+' → logprob: -10.111061096191406
    10. ' if' → logprob: -10.111061096191406

Token 544: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33571088314056396
    2. '   ' → logprob: -1.335710883140564
    3. 'd' (adapté à ' d') → logprob: -4.5857110023498535
    4. 'n' → logprob: -4.8357110023498535
    5. ' if' → logprob: -5.5857110023498535
    6. '       ' → logprob: -9.085710525512695
    7. 'i' → logprob: -9.710710525512695
    8. '	if' → logprob: -10.210710525512695
    9. '  ' → logprob: -10.460710525512695
    10. '```' → logprob: -11.335710525512695

Token 545: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010616567305987701
    2. '[' → logprob: -9.375105857849121
    3. '   ' → logprob: -11.500105857849121
    4. '1' → logprob: -13.125105857849121
    5. '[min' → logprob: -13.375105857849121
    6. '[n' → logprob: -13.875105857849121
    7. '=' → logprob: -13.875105857849121
    8. '+' → logprob: -14.125105857849121
    9. '```' → logprob: -14.375105857849121
    10. ' =' → logprob: -14.375105857849121

Token 546: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1867731660604477
    2. '1' → logprob: -2.3117730617523193
    3. '(i' → logprob: -3.0617730617523193
    4. '(' → logprob: -3.8117730617523193
    5. '2' → logprob: -7.061773300170898
    6. 'n' → logprob: -7.436773300170898
    7. ']' → logprob: -8.311773300170898
    8. ' (' → logprob: -8.436773300170898
    9. ' i' → logprob: -8.686773300170898
    10. '(n' → logprob: -9.561773300170898

Token 547: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015627454966306686
    2. ' -' → logprob: -4.390627384185791
    3. '1' → logprob: -6.140627384185791
    4. '2' → logprob: -7.015627384185791
    5. ']' → logprob: -10.76562786102295
    6. '```' → logprob: -11.26562786102295
    7. '
' → logprob: -11.64062786102295
    8. '   ' → logprob: -11.89062786102295
    9. ' ' → logprob: -12.51562786102295
    10. '][' → logprob: -13.26562786102295

Token 548: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.301394023466855e-05
    2. '1' → logprob: -10.250062942504883
    3. ' ' → logprob: -11.375062942504883
    4. '-' → logprob: -12.125062942504883
    5. '```' → logprob: -12.375062942504883
    6. '   ' → logprob: -12.750062942504883
    7. ' -' → logprob: -14.312562942504883
    8. '
' → logprob: -14.312562942504883
    9. '    
' → logprob: -15.250062942504883
    10. '' → logprob: -15.312562942504883

Token 549: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00979162473231554
    2. ']=' → logprob: -4.634791851043701
    3. ' ]' → logprob: -11.384791374206543
    4. '=' → logprob: -11.509791374206543
    5. '],' → logprob: -12.384791374206543
    6. '   ' → logprob: -13.259791374206543
    7. ']+=' → logprob: -13.509791374206543
    8. ')' → logprob: -14.009791374206543
    9. '>' → logprob: -14.384791374206543
    10. ')]' → logprob: -14.509791374206543

Token 550: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009183725342154503
    2. ' =' → logprob: -4.759183883666992
    3. '=min' → logprob: -7.884183883666992
    4. ']=' → logprob: -8.884183883666992
    5. '>=' → logprob: -10.634183883666992
    6. '>' → logprob: -12.009183883666992
    7. '   ' → logprob: -12.509183883666992
    8. ']' → logprob: -13.009183883666992
    9. ')=' → logprob: -13.384183883666992
    10. '=
' → logprob: -13.384183883666992

Token 551: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001208211062476039
    2. ' min' → logprob: -6.751208305358887
    3. 'max' → logprob: -10.251208305358887
    4. '   ' → logprob: -13.126208305358887
    5. '	min' → logprob: -14.376208305358887
    6. '=min' → logprob: -18.12620735168457
    7. ' max' → logprob: -18.75120735168457
    8. 'minimum' → logprob: -18.87620735168457
    9. '[min' → logprob: -18.87620735168457
    10. ' ' → logprob: -18.87620735168457

Token 552: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.511406809295295e-06
    2. 'd' → logprob: -12.000006675720215
    3. '(' → logprob: -14.875006675720215
    4. '(
' → logprob: -16.7500057220459
    5. '```' → logprob: -19.8750057220459
    6. '	d' → logprob: -20.1250057220459
    7. '[d' → logprob: -21.1250057220459
    8. '((' → logprob: -21.7500057220459
    9. ' (' → logprob: -21.7500057220459
    10. '([' → logprob: -22.1250057220459

Token 553: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.75000286102295
    3. '[
' → logprob: -14.62500286102295
    4. 'd' → logprob: -14.87500286102295
    5. '][-' → logprob: -15.12500286102295
    6. '[i' → logprob: -16.125001907348633
    7. ' [-' → logprob: -16.375001907348633
    8. '
' → logprob: -16.500001907348633
    9. '[:-' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.000001907348633

Token 554: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.4868770196917467e-05
    2. '(i' → logprob: -10.750024795532227
    3. ' i' → logprob: -13.750024795532227
    4. '2' → logprob: -13.875024795532227
    5. '-i' → logprob: -15.000024795532227
    6. '1' → logprob: -15.250024795532227
    7. '_i' → logprob: -15.750024795532227
    8. '{i' → logprob: -15.875024795532227
    9. '```' → logprob: -16.000024795532227
    10. '[i' → logprob: -16.000024795532227

Token 555: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020566295832395554
    2. '2' → logprob: -3.89556622505188
    3. ' -' → logprob: -11.2705659866333
    4. '1' → logprob: -11.8955659866333
    5. '```' → logprob: -13.3955659866333
    6. ']-' → logprob: -13.5205659866333
    7. '   ' → logprob: -14.0205659866333
    8. '3' → logprob: -15.5205659866333
    9. ']' → logprob: -15.7705659866333
    10. ' ' → logprob: -15.8955659866333

Token 556: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004982246900908649
    2. '1' → logprob: -7.625498294830322
    3. ' ' → logprob: -12.875497817993164
    4. '3' → logprob: -13.375497817993164
    5. '```' → logprob: -13.750497817993164
    6. '   ' → logprob: -13.937997817993164
    7. '
' → logprob: -14.000497817993164
    8. '-' → logprob: -14.687997817993164
    9. '``' → logprob: -15.187997817993164
    10. '{' → logprob: -15.437997817993164

Token 557: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2863864004611969
    2. ',' → logprob: -1.4113863706588745
    3. ',d' → logprob: -5.661386489868164
    4. 'd' → logprob: -7.161386489868164
    5. ' ,' → logprob: -7.411386489868164
    6. ' ],' → logprob: -8.286386489868164
    7. ']' → logprob: -9.786386489868164
    8. '   ' → logprob: -10.786386489868164
    9. '],
' → logprob: -11.411386489868164
    10. '+' → logprob: -12.161386489868164

Token 558: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038256190717220306
    2. ' d' → logprob: -3.2882561683654785
    3. '       ' → logprob: -8.913256645202637
    4. '   ' → logprob: -9.788256645202637
    5. '    ' → logprob: -11.788256645202637
    6. '      ' → logprob: -12.538256645202637
    7. '        ' → logprob: -12.788256645202637
    8. '           ' → logprob: -12.913256645202637
    9. '     ' → logprob: -13.288256645202637
    10. '  ' → logprob: -13.663256645202637

Token 559: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00011319868644932285
    2. '[' → logprob: -9.875113487243652
    3. '-' → logprob: -10.750113487243652
    4. '-i' → logprob: -11.625113487243652
    5. '
' → logprob: -11.875113487243652
    6. '[
' → logprob: -12.000113487243652
    7. '   ' → logprob: -12.125113487243652
    8. '  ' → logprob: -13.250113487243652
    9. '[i' → logprob: -13.250113487243652
    10. '(-' → logprob: -13.625113487243652

Token 560: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00022976152831688523
    2. '1' → logprob: -8.500229835510254
    3. '(i' → logprob: -10.750229835510254
    4. ' i' → logprob: -12.500229835510254
    5. '(' → logprob: -14.625229835510254
    6. '{i' → logprob: -15.625229835510254
    7. '_i' → logprob: -16.625228881835938
    8. '```' → logprob: -16.875228881835938
    9. ''i' → logprob: -17.000228881835938
    10. ' (' → logprob: -17.000228881835938

Token 561: '-' (ID: 12)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027367644011974335
    2. '-' → logprob: -3.65236759185791
    3. '3' → logprob: -6.90236759185791
    4. ' -' → logprob: -10.02736759185791
    5. ' ' → logprob: -11.77736759185791
    6. '   ' → logprob: -12.27736759185791
    7. '```' → logprob: -13.27736759185791
    8. '2' → logprob: -13.40236759185791
    9. '  ' → logprob: -15.02736759185791
    10. '[' → logprob: -15.02736759185791

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.875004768371582
    3. '3' → logprob: -14.000004768371582
    4. '   ' → logprob: -15.187504768371582
    5. '```' → logprob: -16.000003814697266
    6. '
' → logprob: -16.125003814697266
    7. '2' → logprob: -16.187503814697266
    8. '１' → logprob: -16.375003814697266
    9. '۱' → logprob: -16.750003814697266
    10. 'i' → logprob: -17.125003814697266

Token 563: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002221272327005863
    2. ']' → logprob: -7.25222110748291
    3. '])
' → logprob: -7.37722110748291
    4. ')' → logprob: -7.75222110748291
    5. ' ])' → logprob: -8.37722110748291
    6. '+' → logprob: -9.12722110748291
    7. ']+' → logprob: -9.62722110748291
    8. '   ' → logprob: -11.25222110748291
    9. '])

' → logprob: -11.75222110748291
    10. ' )' → logprob: -11.87722110748291

Token 564: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19755277037620544
    2. '<|end|>' → logprob: -2.0725526809692383
    3. 'd' → logprob: -3.9475526809692383
    4. '```' → logprob: -4.072552680969238
    5. '
' → logprob: -4.947552680969238
    6. 'for' → logprob: -5.572552680969238
    7. 'n' → logprob: -6.322552680969238
    8. '#' → logprob: -6.322552680969238
    9. '[' → logprob: -7.572552680969238
    10. 'return' → logprob: -7.947552680969238

Token 565: ' print' (ID: 2123)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.902060329914093
    2. ' main' → logprob: -1.0270602703094482
    3. 'main' → logprob: -2.0270602703094482
    4. 'update' → logprob: -2.7770602703094482
    5. ' sum' → logprob: -4.027060508728027
    6. 'sum' → logprob: -5.152060508728027
    7. ' process' → logprob: -5.402060508728027
    8. 'def' → logprob: -5.652060508728027
    9. 'd' → logprob: -5.902060508728027
    10. ' d' → logprob: -6.527060508728027

Token 566: '_results' (ID: 31049)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0585767030715942
    2. '_results' → logprob: -1.4335767030715942
    3. '_' → logprob: -2.4335765838623047
    4. '("_' → logprob: -2.5585765838623047
    5. '_result' → logprob: -2.6835765838623047
    6. '()' → logprob: -3.0585765838623047
    7. '_min' → logprob: -3.5585765838623047
    8. '(d' → logprob: -4.058576583862305
    9. '('_' → logprob: -4.308576583862305
    10. '_remaining' → logprob: -4.308576583862305

Token 567: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.21789801120758057
    2. '()' → logprob: -1.9678980112075806
    3. '(' → logprob: -3.217897891998291
    4. '():' → logprob: -4.467897891998291
    5. '():
' → logprob: -6.217897891998291
    6. '(n' → logprob: -6.467897891998291
    7. 'def' → logprob: -7.967897891998291
    8. '(def' → logprob: -8.21789836883545
    9. '()
' → logprob: -9.46789836883545
    10. '()(' → logprob: -9.59289836883545

Token 568: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.578312337398529
    2. '):' → logprob: -0.828312337398529
    3. ')' → logprob: -6.328312397003174
    4. '):
' → logprob: -7.578312397003174
    5. ',' → logprob: -10.078311920166016
    6. '   ' → logprob: -11.328311920166016
    7. ')
' → logprob: -12.078311920166016
    8. '):

' → logprob: -12.453311920166016
    9. ' ):' → logprob: -12.953311920166016
    10. ' ):
' → logprob: -13.578311920166016

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3624928891658783
    2. 'for' → logprob: -1.3624929189682007
    3. ' for' → logprob: -3.237492799758911
    4. 'def' → logprob: -5.48749303817749
    5. '
' → logprob: -5.73749303817749
    6. '```' → logprob: -6.61249303817749
    7. '    
' → logprob: -10.487492561340332
    8. ' def' → logprob: -10.987492561340332
    9. '``' → logprob: -11.112492561340332
    10. '	for' → logprob: -11.987492561340332

Token 570: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000145137935760431
    2. ' for' → logprob: -9.250144958496094
    3. '   ' → logprob: -10.000144958496094
    4. '
' → logprob: -13.000144958496094
    5. 'n' → logprob: -14.125144958496094
    6. '```' → logprob: -15.125144958496094
    7. 'def' → logprob: -15.750144958496094
    8. 'import' → logprob: -16.625144958496094
    9. '``' → logprob: -18.750144958496094
    10. '    
' → logprob: -19.500144958496094

Token 571: ' dd' (ID: 18636)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08702600747346878
    2. 'val' → logprob: -3.8370261192321777
    3. 'value' → logprob: -3.8370261192321777
    4. 'dist' → logprob: -3.9620261192321777
    5. ' x' → logprob: -4.962026119232178
    6. 'res' → logprob: -5.462026119232178
    7. ' val' → logprob: -5.587026119232178
    8. 'i' → logprob: -5.712026119232178
    9. ' dist' → logprob: -7.212026119232178
    10. ' value' → logprob: -7.587026119232178

Token 572: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12706784904003143
    2. 'in' → logprob: -2.127067804336548
    3. 'd' → logprob: -9.252067565917969
    4. 'i' → logprob: -11.127067565917969
    5. ' ' → logprob: -11.377067565917969
    6. '   ' → logprob: -11.877067565917969
    7. '_in' → logprob: -12.752067565917969
    8. '  ' → logprob: -13.002067565917969
    9. ')' → logprob: -13.127067565917969
    10. '	in' → logprob: -13.877067565917969

Token 573: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008771585416980088
    2. 're' → logprob: -7.500877380371094
    3. ' d' → logprob: -8.125877380371094
    4. ' reversed' → logprob: -10.875877380371094
    5. 'range' → logprob: -12.875877380371094
    6. 'reverse' → logprob: -13.375877380371094
    7. 'map' → logprob: -13.625877380371094
    8. 'sorted' → logprob: -13.875877380371094
    9. '
' → logprob: -14.500877380371094
    10. '   ' → logprob: -14.625877380371094

Token 574: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11340166628360748
    2. ':
' → logprob: -2.2384016513824463
    3. 'print' → logprob: -7.988401889801025
    4. '):' → logprob: -10.113401412963867
    5. '():
' → logprob: -10.113401412963867
    6. '   ' → logprob: -10.238401412963867
    7. '():' → logprob: -10.613401412963867
    8. ' print' → logprob: -10.863401412963867
    9. '):
' → logprob: -11.113401412963867
    10. '       ' → logprob: -11.363401412963867

Token 575: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27308857440948486
    2. 'print' → logprob: -1.7730885744094849
    3. ' print' → logprob: -2.8980884552001953
    4. '       ' → logprob: -4.273088455200195
    5. '```' → logprob: -9.648088455200195
    6. '	print' → logprob: -11.523088455200195
    7. '    
' → logprob: -11.898088455200195
    8. '
' → logprob: -12.273088455200195
    9. '  ' → logprob: -12.398088455200195
    10. ' ' → logprob: -13.148088455200195

Token 576: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.690834273584187e-05
    2. ' print' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.50003719329834
    4. '```' → logprob: -16.625036239624023
    5. '       ' → logprob: -16.875036239624023
    6. '
' → logprob: -19.000036239624023
    7. 'sys' → logprob: -19.375036239624023
    8. 'pr' → logprob: -19.625036239624023
    9. '	print' → logprob: -20.000036239624023
    10. 'printf' → logprob: -20.250036239624023

Token 577: '(' (ID: 7)
  Prédit: '(dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dd' → logprob: -0.018249792978167534
    2. 'dd' → logprob: -4.018249988555908
    3. '(' → logprob: -9.89324951171875
    4. '(int' → logprob: -10.64324951171875
    5. 'int' → logprob: -11.76824951171875
    6. '(d' → logprob: -11.89324951171875
    7. ' dd' → logprob: -12.64324951171875
    8. '(max' → logprob: -13.01824951171875
    9. '(-' → logprob: -13.14324951171875
    10. '-dd' → logprob: -14.26824951171875

Token 578: '10' (ID: 702)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.004273800179362297
    2. '10' → logprob: -5.754273891448975
    3. 'int' → logprob: -7.879273891448975
    4. 'float' → logprob: -8.004273414611816
    5. 'max' → logprob: -8.754273414611816
    6. 'd' → logprob: -9.754273414611816
    7. ' dd' → logprob: -9.879273414611816
    8. '(dd' → logprob: -10.129273414611816
    9. '-dd' → logprob: -11.004273414611816
    10. '100' → logprob: -11.129273414611816

Token 579: ' **' (ID: 6240)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.03650549054145813
    2. '**' → logprob: -3.4115054607391357
    3. '18' → logprob: -6.161505699157715
    4. '14' → logprob: -8.036505699157715
    5. '16' → logprob: -8.911505699157715
    6. '9' → logprob: -9.161505699157715
    7. '12' → logprob: -9.161505699157715
    8. '17' → logprob: -10.786505699157715
    9. '19' → logprob: -11.161505699157715
    10. ' **' → logprob: -11.286505699157715

Token 580: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -4.751746746478602e-05
    2. '9' → logprob: -10.12504768371582
    3. '16' → logprob: -12.87504768371582
    4. '5' → logprob: -13.62504768371582
    5. '1' → logprob: -14.00004768371582
    6. '10' → logprob: -14.37504768371582
    7. '14' → logprob: -15.12504768371582
    8. '

' → logprob: -15.37504768371582
    9. '```' → logprob: -15.81254768371582
    10. '12' → logprob: -15.93754768371582

Token 581: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -2.081584716506768e-05
    2. '9' → logprob: -11.125020980834961
    3. '16' → logprob: -12.750020980834961
    4. '18' → logprob: -13.875020980834961
    5. '14' → logprob: -14.250020980834961
    6. '17' → logprob: -15.250020980834961
    7. '10' → logprob: -15.500020980834961
    8. '1' → logprob: -15.750020980834961
    9. '5' → logprob: -15.750020980834961
    10. '20' → logprob: -16.00002098083496

Token 582: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38704705238342285
    2. ' -' → logprob: -1.1370470523834229
    3. '-dd' → logprob: -9.262046813964844
    4. '-end' → logprob: -10.262046813964844
    5. '+' → logprob: -10.387046813964844
    6. '-d' → logprob: -12.012046813964844
    7. ' +' → logprob: -13.262046813964844
    8. ')' → logprob: -13.262046813964844
    9. ' ' → logprob: -13.387046813964844
    10. '-ex' → logprob: -14.137046813964844

Token 583: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.0002615742268972099
    2. ' dd' → logprob: -8.250261306762695
    3. '(dd' → logprob: -15.500261306762695
    4. '_dd' → logprob: -17.000261306762695
    5. 'ddd' → logprob: -18.125261306762695
    6. '   ' → logprob: -18.875261306762695
    7. 'd' → logprob: -19.125261306762695
    8. '-dd' → logprob: -19.250261306762695
    9. 'dddd' → logprob: -19.875261306762695
    10. 'int' → logprob: -20.250261306762695

Token 584: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. ')
' → logprob: -12.00002384185791
    3. ' )' → logprob: -12.00002384185791
    4. '))' → logprob: -12.50002384185791
    5. ',' → logprob: -13.50002384185791
    6. '`)' → logprob: -14.25002384185791
    7. '),' → logprob: -14.25002384185791
    8. '   ' → logprob: -14.37502384185791
    9. '')' → logprob: -14.37502384185791
    10. '())' → logprob: -14.62502384185791

Token 585: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3779163062572479
    2. '<|end|>' → logprob: -1.2529163360595703
    3. '
' → logprob: -4.50291633605957
    4. 'n' → logprob: -4.87791633605957
    5. '#' → logprob: -5.50291633605957
    6. '```' → logprob: -6.00291633605957
    7. 'if' → logprob: -6.87791633605957
    8. '<|end|>' → logprob: -6.87791633605957
    9. 'for' → logprob: -7.75291633605957
    10. 'import' → logprob: -8.12791633605957

Token 586: ' main' (ID: 2758)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07097309827804565
    2. 'main' → logprob: -2.8209731578826904
    3. 'read' → logprob: -5.195972919464111
    4. '__' → logprob: -6.820972919464111
    5. ' main' → logprob: -7.570972919464111
    6. 'parse' → logprob: -7.695972919464111
    7. ' def' → logprob: -8.07097339630127
    8. 'process' → logprob: -8.19597339630127
    9. '
' → logprob: -8.32097339630127
    10. 'if' → logprob: -8.82097339630127

Token 587: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.6312321753939614e-05
    2. ' ():' → logprob: -11.000036239624023
    3. '():
' → logprob: -11.375036239624023
    4. '()' → logprob: -12.000036239624023
    5. '(' → logprob: -13.500036239624023
    6. '():
' → logprob: -16.000036239624023
    7. '()>' → logprob: -16.250036239624023
    8. ':' → logprob: -16.500036239624023
    9. '()">' → logprob: -17.250036239624023
    10. '_' → logprob: -17.250036239624023

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3651476800441742
    2. ' n' → logprob: -1.3651477098464966
    3. 'n' → logprob: -2.990147590637207
    4. '	n' → logprob: -8.365147590637207
    5. '```' → logprob: -10.490147590637207
    6. ' ' → logprob: -11.740147590637207
    7. '  ' → logprob: -12.490147590637207
    8. ' line' → logprob: -12.865147590637207
    9. 'import' → logprob: -13.240147590637207
    10. ',n' → logprob: -13.490147590637207

Token 589: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02342972159385681
    2. '   ' → logprob: -4.273429870605469
    3. ' n' → logprob: -4.773429870605469
    4. 'line' → logprob: -7.273429870605469
    5. ' line' → logprob: -9.898429870605469
    6. '	n' → logprob: -11.023429870605469
    7. 'import' → logprob: -12.523429870605469
    8. ' ' → logprob: -12.648429870605469
    9. '    
' → logprob: -13.648429870605469
    10. '  ' → logprob: -14.398429870605469

Token 590: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6415927410125732
    2. '()' → logprob: -0.7665927410125732
    3. '_' → logprob: -5.266592979431152
    4. 'line' → logprob: -6.266592979431152
    5. '_lines' → logprob: -7.391592979431152
    6. '=' → logprob: -7.641592979431152
    7. ' =' → logprob: -8.016592979431152
    8. '_data' → logprob: -8.391592979431152
    9. '()
' → logprob: -9.641592979431152
    10. '_=' → logprob: -10.641592979431152

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4523496627807617
    2. '()' → logprob: -1.3273496627807617
    3. ' =' → logprob: -2.3273496627807617
    4. '_line' → logprob: -7.827349662780762
    5. '   ' → logprob: -7.827349662780762
    6. '_' → logprob: -8.827349662780762
    7. 's' → logprob: -9.702349662780762
    8. '(' → logprob: -10.952349662780762
    9. ' ' → logprob: -11.202349662780762
    10. ' ()' → logprob: -11.202349662780762

Token 592: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0011879685334861279
    2. ' read' → logprob: -6.751187801361084
    3. 'sys' → logprob: -11.126188278198242
    4. '   ' → logprob: -13.751188278198242
    5. 'input' → logprob: -14.251188278198242
    6. ' sys' → logprob: -14.376188278198242
    7. 'parse' → logprob: -14.376188278198242
    8. '  ' → logprob: -17.001188278198242
    9. '	read' → logprob: -17.126188278198242
    10. ' ' → logprob: -17.626188278198242

Token 593: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43001753091812134
    2. '_input' → logprob: -1.0550174713134766
    3. '()
' → logprob: -7.180017471313477
    4. '_' → logprob: -8.305017471313477
    5. '_line' → logprob: -8.430017471313477
    6. 'input' → logprob: -10.805017471313477
    7. ')' → logprob: -11.055017471313477
    8. '())' → logprob: -11.180017471313477
    9. ' ()' → logprob: -12.180017471313477
    10. '().' → logprob: -12.305017471313477

Token 594: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001633643638342619
    2. '().' → logprob: -6.501633644104004
    3. '()
' → logprob: -9.001633644104004
    4. '()

' → logprob: -12.876633644104004
    5. '())' → logprob: -13.251633644104004
    6. ' ()' → logprob: -13.626633644104004
    7. '(' → logprob: -14.001633644104004
    8. '()[' → logprob: -14.876633644104004
    9. '()
' → logprob: -15.001633644104004
    10. '();' → logprob: -15.376633644104004

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12921813130378723
    2. 'n' → logprob: -2.129218101501465
    3. ' n' → logprob: -6.254218101501465
    4. '(n' → logprob: -8.754218101501465
    5. '	n' → logprob: -9.754218101501465
    6. '    
' → logprob: -10.129218101501465
    7. ',n' → logprob: -10.629218101501465
    8. '  ' → logprob: -10.754218101501465
    9. '<|end|>' → logprob: -11.004218101501465
    10. ',' → logprob: -11.504218101501465

Token 596: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00016611411410849541
    2. '   ' → logprob: -8.750165939331055
    3. ' n' → logprob: -12.000165939331055
    4. 'N' → logprob: -15.000165939331055
    5. '    
' → logprob: -15.375165939331055
    6. '	n' → logprob: -15.375165939331055
    7. '  ' → logprob: -15.500165939331055
    8. '(n' → logprob: -16.125165939331055
    9. 'if' → logprob: -16.250165939331055
    10. 'while' → logprob: -16.625165939331055

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014609156642109156
    2. '=' → logprob: -9.50014591217041
    3. ' ,' → logprob: -10.00014591217041
    4. ' =' → logprob: -11.75014591217041
    5. ',n' → logprob: -12.12514591217041
    6. ',m' → logprob: -12.50014591217041
    7. ',int' → logprob: -13.75014591217041
    8. ',num' → logprob: -13.87514591217041
    9. ',input' → logprob: -14.12514591217041
    10. ')' → logprob: -14.25014591217041

Token 598: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5761210322380066
    2. ' m' → logprob: -0.8261210322380066
    3. 'input' → logprob: -9.82612133026123
    4. ' ' → logprob: -10.32612133026123
    5. ' =' → logprob: -10.32612133026123
    6. ' input' → logprob: -10.45112133026123
    7. '=' → logprob: -11.07612133026123
    8. '    ' → logprob: -11.57612133026123
    9. '  ' → logprob: -12.95112133026123
    10. '   ' → logprob: -13.32612133026123

Token 599: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47414037585258484
    2. '=' → logprob: -0.9741404056549072
    3. ',' → logprob: -9.849140167236328
    4. '   ' → logprob: -12.724140167236328
    5. ')' → logprob: -12.974140167236328
    6. '    ' → logprob: -13.849140167236328
    7. '=input' → logprob: -13.974140167236328
    8. '=int' → logprob: -14.099140167236328
    9. '=n' → logprob: -14.599140167236328
    10. ')=' → logprob: -14.599140167236328

Token 600: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001138431136496365
    2. '_s' → logprob: -8.251138687133789
    3. 'S' → logprob: -8.376138687133789
    4. 'k' → logprob: -8.626138687133789
    5. ' s' → logprob: -9.126138687133789
    6. 'start' → logprob: -9.251138687133789
    7. 't' → logprob: -9.376138687133789
    8. '_' → logprob: -9.501138687133789
    9. 'q' → logprob: -10.376138687133789
    10. 'x' → logprob: -11.251138687133789

Token 601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8826411366462708
    2. ' =' → logprob: -0.8826411366462708
    3. '=' → logprob: -1.757641077041626
    4. '   ' → logprob: -9.632640838623047
    5. ' ' → logprob: -9.882640838623047
    6. ' ,' → logprob: -11.132640838623047
    7. '  ' → logprob: -11.132640838623047
    8. '    ' → logprob: -11.757640838623047
    9. '	' → logprob: -12.632640838623047
    10. ')' → logprob: -12.757640838623047

Token 602: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -9.543733904138207e-05
    2. ' t' → logprob: -9.50009536743164
    3. 'k' → logprob: -11.25009536743164
    4. ' =' → logprob: -13.62509536743164
    5. '_' → logprob: -14.00009536743164
    6. '=' → logprob: -14.37509536743164
    7. '_t' → logprob: -14.50009536743164
    8. 'f' → logprob: -14.62509536743164
    9. 'T' → logprob: -14.75009536743164
    10. 's' → logprob: -14.87509536743164

Token 603: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740928113460541
    2. '=' → logprob: -0.9740928411483765
    3. ',' → logprob: -11.099092483520508
    4. ')' → logprob: -14.849092483520508
    5. '=line' → logprob: -15.599092483520508
    6. ' ' → logprob: -16.474092483520508
    7. '   ' → logprob: -17.224092483520508
    8. '  ' → logprob: -17.224092483520508
    9. '＝' → logprob: -17.599092483520508
    10. ')=' → logprob: -17.724092483520508

Token 604: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.4260917603969574
    2. ' parse' → logprob: -1.4260917901992798
    3. 'map' → logprob: -2.5510916709899902
    4. ' map' → logprob: -3.5510916709899902
    5. '   ' → logprob: -12.926092147827148
    6. 'list' → logprob: -13.051092147827148
    7. '=parse' → logprob: -14.301092147827148
    8. 'tuple' → logprob: -14.676092147827148
    9. '(parse' → logprob: -14.926092147827148
    10. ' list' → logprob: -15.176092147827148

Token 605: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0003606104583013803
    2. 'first' → logprob: -8.000360488891602
    3. 'input' → logprob: -11.250360488891602
    4. '(input' → logprob: -12.250360488891602
    5. 'First' → logprob: -12.875360488891602
    6. 'int' → logprob: -12.875360488891602
    7. '(int' → logprob: -14.750360488891602
    8. '_input' → logprob: -14.750360488891602
    9. '_FIRST' → logprob: -14.875360488891602
    10. '(first' → logprob: -15.625360488891602

Token 606: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0013283335138112307
    2. 'line' → logprob: -6.626328468322754
    3. 'token' → logprob: -13.501328468322754
    4. 'lin' → logprob: -15.126328468322754
    5. '_lin' → logprob: -15.626328468322754
    6. ' line' → logprob: -15.876328468322754
    7. '_LINE' → logprob: -16.376327514648438
    8. 'input' → logprob: -16.876327514648438
    9. 'tokens' → logprob: -17.001327514648438
    10. '_token' → logprob: -17.001327514648438

Token 607: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.935296834039036e-06
    2. 'input' → logprob: -12.75000286102295
    3. '(' → logprob: -18.500003814697266
    4. ' (' → logprob: -20.625003814697266
    5. '=input' → logprob: -20.750003814697266
    6. ',input' → logprob: -20.750003814697266
    7. '(line' → logprob: -21.250003814697266
    8. ' input' → logprob: -21.250003814697266
    9. '<input' → logprob: -23.125003814697266
    10. '[input' → logprob: -23.250003814697266

Token 608: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.8624639324116288e-06
    2. 'line' → logprob: -13.375001907348633
    3. ')' → logprob: -15.625001907348633
    4. ')_' → logprob: -16.750001907348633
    5. '(line' → logprob: -17.125001907348633
    6. 'Line' → logprob: -17.125001907348633
    7. '()' → logprob: -17.500001907348633
    8. '_LINE' → logprob: -17.750001907348633
    9. '_' → logprob: -18.750001907348633
    10. '```' → logprob: -19.125001907348633

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.87500286102295
    3. '())' → logprob: -14.12500286102295
    4. '   ' → logprob: -14.25000286102295
    5. ' )' → logprob: -14.87500286102295
    6. '()' → logprob: -14.87500286102295
    7. '))' → logprob: -16.875003814697266
    8. ')`' → logprob: -17.000003814697266
    9. ' ' → logprob: -18.500003814697266
    10. ');' → logprob: -18.625003814697266

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05169975385069847
    2. '
' → logprob: -3.176699638366699
    3. '    
' → logprob: -4.926699638366699
    4. 'edge' → logprob: -6.926699638366699
    5. '```' → logprob: -8.8016996383667
    6. 's' → logprob: -9.5516996383667
    7. ' edge' → logprob: -10.0516996383667
    8. 'edges' → logprob: -10.0516996383667
    9. '        
' → logprob: -10.8016996383667
    10. '   
' → logprob: -10.9266996383667

Token 611: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.23006592690944672
    2. ' edge' → logprob: -1.605065941810608
    3. '   ' → logprob: -5.855065822601318
    4. 'edges' → logprob: -7.230065822601318
    5. 's' → logprob: -7.980065822601318
    6. ' edges' → logprob: -8.355066299438477
    7. '
' → logprob: -8.605066299438477
    8. ' s' → logprob: -9.605066299438477
    9. '```' → logprob: -9.980066299438477
    10. 'e' → logprob: -10.105066299438477

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01934492401778698
    2. ',' → logprob: -4.019344806671143
    3. 's' → logprob: -7.269344806671143
    4. ' =' → logprob: -8.0193452835083
    5. '=' → logprob: -9.1443452835083
    6. ' ,' → logprob: -10.6443452835083
    7. '[' → logprob: -11.7693452835083
    8. '```' → logprob: -11.8943452835083
    9. '(s' → logprob: -12.6443452835083
    10. ',s' → logprob: -12.7693452835083

Token 613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.098748053773306e-05
    2. ' ,' → logprob: -9.87506103515625
    3. ' =' → logprob: -12.25006103515625
    4. '=edge' → logprob: -13.12506103515625
    5. '=' → logprob: -13.75006103515625
    6. '1' → logprob: -15.00006103515625
    7. ',
' → logprob: -15.37506103515625
    8. 'edge' → logprob: -15.62506103515625
    9. '‌,' → logprob: -15.75006103515625
    10. '(edge' → logprob: -15.75006103515625

Token 614: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.08929330855607986
    2. ' edge' → logprob: -2.4642932415008545
    3. '(edge' → logprob: -8.339293479919434
    4. '=edge' → logprob: -9.714293479919434
    5. '<|end|>' → logprob: -10.839293479919434
    6. ' =' → logprob: -11.464293479919434
    7. '   ' → logprob: -11.839293479919434
    8. '_edge' → logprob: -12.464293479919434
    9. '[' → logprob: -13.214293479919434
    10. ' ' → logprob: -13.214293479919434

Token 615: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ',' → logprob: -11.500015258789062
    3. ' =' → logprob: -13.375015258789062
    4. '=' → logprob: -14.250015258789062
    5. '[' → logprob: -14.250015258789062
    6. ' ' → logprob: -14.625015258789062
    7. 's' → logprob: -15.000015258789062
    8. '
' → logprob: -16.250015258789062
    9. '   ' → logprob: -16.375015258789062
    10. '_' → logprob: -16.500015258789062

Token 616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132769465446472
    2. ' =' → logprob: -1.313277006149292
    3. ',' → logprob: -11.688277244567871
    4. '=create' → logprob: -12.188277244567871
    5. '=edge' → logprob: -13.938277244567871
    6. '   ' → logprob: -15.188277244567871
    7. '＝' → logprob: -15.688277244567871
    8. ')' → logprob: -16.813276290893555
    9. ' ' → logprob: -16.938276290893555
    10. '<|end|>' → logprob: -17.063276290893555

Token 617: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.014165159314870834
    2. ' create' → logprob: -4.264164924621582
    3. '(create' → logprob: -13.514164924621582
    4. '   ' → logprob: -15.764164924621582
    5. 'reate' → logprob: -16.8891658782959
    6. '	create' → logprob: -17.2641658782959
    7. '=create' → logprob: -17.3891658782959
    8. '_create' → logprob: -17.6391658782959
    9. '.create' → logprob: -17.8891658782959
    10. '
' → logprob: -19.1391658782959

Token 618: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.0001146291324403137
    2. 'empty' → logprob: -9.125114440917969
    3. '([' → logprob: -12.375114440917969
    4. 'Empty' → logprob: -14.750114440917969
    5. '([],' → logprob: -14.750114440917969
    6. '_' → logprob: -15.875114440917969
    7. '([]' → logprob: -15.875114440917969
    8. '_EMPTY' → logprob: -16.62511444091797
    9. '_edge' → logprob: -16.75011444091797
    10. 'n' → logprob: -17.37511444091797

Token 619: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0009408812038600445
    2. 'edges' → logprob: -7.125940799713135
    3. '(edges' → logprob: -9.500941276550293
    4. '(n' → logprob: -10.625941276550293
    5. '_edge' → logprob: -10.875941276550293
    6. ' edges' → logprob: -12.500941276550293
    7. '(edge' → logprob: -12.625941276550293
    8. 'Edges' → logprob: -13.250941276550293
    9. 'edge' → logprob: -13.375941276550293
    10. '(s' → logprob: -13.500941276550293

Token 620: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -14.125001907348633
    3. 'n' → logprob: -14.375001907348633
    4. '(' → logprob: -15.000001907348633
    5. '```' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '((' → logprob: -19.250001907348633
    8. '
' → logprob: -19.875001907348633
    9. '[n' → logprob: -20.000001907348633
    10. ' ' → logprob: -20.125001907348633

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011714138090610504
    2. ')
' → logprob: -6.751171588897705
    3. ')

' → logprob: -14.376171112060547
    4. ')
' → logprob: -15.251171112060547
    5. '   ' → logprob: -15.626171112060547
    6. ' )' → logprob: -16.251171112060547
    7. '),' → logprob: -17.376171112060547
    8. ' ' → logprob: -18.126171112060547
    9. '()' → logprob: -18.251171112060547
    10. '())' → logprob: -18.501171112060547

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2562526762485504
    2. 'process' → logprob: -1.631252646446228
    3. ' process' → logprob: -3.5062527656555176
    4. '	process' → logprob: -9.50625228881836
    5. 'def' → logprob: -9.75625228881836
    6. ' for' → logprob: -9.75625228881836
    7. 'for' → logprob: -9.88125228881836
    8. '  ' → logprob: -10.50625228881836
    9. ' ' → logprob: -11.00625228881836
    10. '<|end|>' → logprob: -11.00625228881836

Token 623: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.0005601812736131251
    2. ' process' → logprob: -7.875560283660889
    3. '   ' → logprob: -8.62555980682373
    4. '	process' → logprob: -14.62555980682373
    5. '```' → logprob: -17.250560760498047
    6. '(process' → logprob: -17.375560760498047
    7. '
' → logprob: -17.375560760498047
    8. 'm' → logprob: -17.375560760498047
    9. '`' → logprob: -18.750560760498047
    10. '.process' → logprob: -18.875560760498047

Token 624: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.9623810658231378e-05
    2. 'edges' → logprob: -10.875020027160645
    3. '```' → logprob: -15.250020027160645
    4. '_edge' → logprob: -16.000019073486328
    5. '(edges' → logprob: -16.125019073486328
    6. '_' → logprob: -16.250019073486328
    7. 'Edges' → logprob: -17.750019073486328
    8. '(' → logprob: -18.375019073486328
    9. '(_' → logprob: -18.625019073486328
    10. ' edges' → logprob: -18.750019073486328

Token 625: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.2729995988775045e-06
    2. 'input' → logprob: -12.125006675720215
    3. 'Input' → logprob: -15.125006675720215
    4. '_inputs' → logprob: -15.250006675720215
    5. '```' → logprob: -16.5000057220459
    6. '1' → logprob: -17.3750057220459
    7. 's' → logprob: -17.3750057220459
    8. '_INPUT' → logprob: -17.7500057220459
    9. '
' → logprob: -18.3750057220459
    10. '(input' → logprob: -18.8750057220459

Token 626: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '=edge' → logprob: -15.12500286102295
    4. ' (' → logprob: -16.250001907348633
    5. 'edge' → logprob: -16.375001907348633
    6. '(edges' → logprob: -17.875001907348633
    7. '(
' → logprob: -18.500001907348633
    8. '```' → logprob: -18.625001907348633
    9. '((' → logprob: -19.625001907348633
    10. ' edge' → logprob: -20.125001907348633

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005618501454591751
    2. '(edge' → logprob: -8.125561714172363
    3. '=edge' → logprob: -9.250561714172363
    4. ',' → logprob: -9.375561714172363
    5. 'edge' → logprob: -10.000561714172363
    6. ')' → logprob: -11.500561714172363
    7. '```' → logprob: -11.500561714172363
    8. '
' → logprob: -11.875561714172363
    9. '[' → logprob: -13.125561714172363
    10. 's' → logprob: -13.250561714172363

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010771531378850341
    2. ' ,' → logprob: -9.375107765197754
    3. '(edge' → logprob: -11.375107765197754
    4. ',
' → logprob: -12.250107765197754
    5. '=edge' → logprob: -12.625107765197754
    6. 'edge' → logprob: -13.000107765197754
    7. ' edge' → logprob: -14.500107765197754
    8. ')' → logprob: -16.250106811523438
    9. '
' → logprob: -16.500106811523438
    10. '‌,' → logprob: -16.500106811523438

Token 629: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.020555783063173294
    2. ' edge' → logprob: -3.8955557346343994
    3. '(edge' → logprob: -11.77055549621582
    4. '   ' → logprob: -12.64555549621582
    5. '=edge' → logprob: -13.64555549621582
    6. '
' → logprob: -14.39555549621582
    7. '.edge' → logprob: -14.89555549621582
    8. ' ' → logprob: -15.89555549621582
    9. '    ' → logprob: -15.89555549621582
    10. 'edges' → logprob: -16.14555549621582

Token 630: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ',' → logprob: -13.250003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '```' → logprob: -14.500003814697266
    5. '_' → logprob: -15.250003814697266
    6. ' ,' → logprob: -15.875003814697266
    7. 'edge' → logprob: -16.000003814697266
    8. '[' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.625003814697266
    10. ',
' → logprob: -16.937503814697266

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002497767563909292
    2. ',n' → logprob: -8.375249862670898
    3. ' ,' → logprob: -11.000249862670898
    4. '(n' → logprob: -13.250249862670898
    5. '   ' → logprob: -15.500249862670898
    6. ',
' → logprob: -15.625249862670898
    7. 'n' → logprob: -15.750249862670898
    8. ')' → logprob: -16.6252498626709
    9. '
' → logprob: -17.1252498626709
    10. '(' → logprob: -17.1252498626709

Token 632: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014165041036903858
    2. ' n' → logprob: -4.264164924621582
    3. 'm' → logprob: -13.889164924621582
    4. '
' → logprob: -16.1391658782959
    5. ')n' → logprob: -16.1391658782959
    6. '<|end|>' → logprob: -16.1391658782959
    7. '	n' → logprob: -16.3891658782959
    8. '   ' → logprob: -16.3891658782959
    9. ')' → logprob: -16.7641658782959
    10. ' ' → logprob: -17.5141658782959

Token 633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016754455282352865
    2. ',m' → logprob: -9.250167846679688
    3. ' ,' → logprob: -9.750167846679688
    4. 'm' → logprob: -11.250167846679688
    5. ',
' → logprob: -16.250167846679688
    6. ')' → logprob: -17.250167846679688
    7. ' m' → logprob: -17.500167846679688
    8. '   ' → logprob: -17.750167846679688
    9. 'import' → logprob: -19.375167846679688
    10. ' ' → logprob: -19.375167846679688

Token 634: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011049231514334679
    2. ' m' → logprob: -4.511049270629883
    3. '   ' → logprob: -14.386049270629883
    4. ' ' → logprob: -14.886049270629883
    5. '
' → logprob: -16.386049270629883
    6. ')' → logprob: -16.386049270629883
    7. '  ' → logprob: -16.511049270629883
    8. '    ' → logprob: -16.761049270629883
    9. ')m' → logprob: -17.011049270629883
    10. '```' → logprob: -17.136049270629883

Token 635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. ',' → logprob: -10.875030517578125
    3. ')
' → logprob: -11.500030517578125
    4. ' )' → logprob: -14.500030517578125
    5. '   ' → logprob: -15.500030517578125
    6. ')

' → logprob: -16.000030517578125
    7. ')s' → logprob: -16.000030517578125
    8. ',)' → logprob: -16.250030517578125
    9. ')`' → logprob: -17.375030517578125
    10. '),' → logprob: -17.500030517578125

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040940605103969574
    2. 'd' → logprob: -3.290940523147583
    3. '
' → logprob: -6.665940761566162
    4. 's' → logprob: -6.915940761566162
    5. ' d' → logprob: -8.415940284729004
    6. '    
' → logprob: -8.540940284729004
    7. 'def' → logprob: -9.540940284729004
    8. '```' → logprob: -9.790940284729004
    9. '<|end|>' → logprob: -10.915940284729004
    10. 't' → logprob: -11.290940284729004

Token 637: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.02517833188176155
    2. '   ' → logprob: -3.7751784324645996
    3. ' d' → logprob: -6.4001784324646
    4. 'dist' → logprob: -9.275177955627441
    5. '```' → logprob: -9.400177955627441
    6. ' ' → logprob: -10.025177955627441
    7. 'distance' → logprob: -11.150177955627441
    8. '  ' → logprob: -12.025177955627441
    9. '``' → logprob: -12.150177955627441
    10. '	d' → logprob: -12.650177955627441

Token 638: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003048378275707364
    2. 's' → logprob: -8.75030517578125
    3. '_s' → logprob: -9.50030517578125
    4. '_' → logprob: -10.25030517578125
    5. ' =' → logprob: -11.62530517578125
    6. 't' → logprob: -12.25030517578125
    7. ',' → logprob: -12.50030517578125
    8. 'ist' → logprob: -12.50030517578125
    9. 'f' → logprob: -13.00030517578125
    10. '=' → logprob: -13.12530517578125

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3965308666229248
    2. '=' → logprob: -1.1465308666229248
    3. ',' → logprob: -4.646531105041504
    4. ' ,' → logprob: -11.771531105041504
    5. '=d' → logprob: -12.396531105041504
    6. ',d' → logprob: -12.521531105041504
    7. '_' → logprob: -14.146531105041504
    8. 's' → logprob: -14.646531105041504
    9. '[' → logprob: -14.646531105041504
    10. '＝' → logprob: -15.521531105041504

Token 640: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031815171241760254
    2. ' d' → logprob: -5.753181457519531
    3. '	d' → logprob: -13.003181457519531
    4. '   ' → logprob: -13.628181457519531
    5. '(d' → logprob: -16.25318145751953
    6. ' ' → logprob: -16.75318145751953
    7. '  ' → logprob: -16.87818145751953
    8. '.d' → logprob: -17.12818145751953
    9. '_d' → logprob: -17.12818145751953
    10. '[d' → logprob: -17.25318145751953

Token 641: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00018196819291915745
    2. ',' → logprob: -9.500182151794434
    3. ' =' → logprob: -10.375182151794434
    4. '1' → logprob: -10.500182151794434
    5. 'ijk' → logprob: -10.625182151794434
    6. '=' → logprob: -11.500182151794434
    7. '_' → logprob: -12.375182151794434
    8. 'ij' → logprob: -12.750182151794434
    9. 'iker' → logprob: -14.125182151794434
    10. '```' → logprob: -14.250182151794434

Token 642: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -4.620622712536715e-05
    2. 'heap' → logprob: -10.125045776367188
    3. '_' → logprob: -12.750045776367188
    4. '(heap' → logprob: -13.000045776367188
    5. '```' → logprob: -15.375045776367188
    6. '_heat' → logprob: -15.375045776367188
    7. '_he' → logprob: -16.375045776367188
    8. '(' → logprob: -16.875045776367188
    9. '
' → logprob: -17.125045776367188
    10. 'Heap' → logprob: -17.125045776367188

Token 643: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.50000286102295
    3. '=edge' → logprob: -14.25000286102295
    4. '(
' → logprob: -15.12500286102295
    5. ' (' → logprob: -17.125001907348633
    6. '(edges' → logprob: -17.750001907348633
    7. 'edge' → logprob: -18.000001907348633
    8. '(ed' → logprob: -18.250001907348633
    9. '(enemy' → logprob: -19.750001907348633
    10. '```' → logprob: -19.875001907348633

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059991199523210526
    2. '(edge' → logprob: -2.9349911212921143
    3. '=edge' → logprob: -5.434991359710693
    4. ',' → logprob: -7.559991359710693
    5. ')' → logprob: -9.059990882873535
    6. 's' → logprob: -10.434990882873535
    7. '(
' → logprob: -11.059990882873535
    8. '```' → logprob: -11.184990882873535
    9. 'edge' → logprob: -11.559990882873535
    10. '=' → logprob: -12.059990882873535

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011356930481269956
    2. ',s' → logprob: -7.25113582611084
    3. ' ,' → logprob: -8.25113582611084
    4. ',d' → logprob: -9.50113582611084
    5. '(s' → logprob: -9.62613582611084
    6. ',t' → logprob: -11.50113582611084
    7. 's' → logprob: -11.87613582611084
    8. '(' → logprob: -12.37613582611084
    9. '   ' → logprob: -14.75113582611084
    10. ')' → logprob: -15.00113582611084

Token 646: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009181279456242919
    2. ' s' → logprob: -7.000917911529541
    3. '   ' → logprob: -12.0009183883667
    4. 't' → logprob: -15.0009183883667
    5. '	s' → logprob: -16.625917434692383
    6. ' ' → logprob: -17.625917434692383
    7. '  ' → logprob: -17.750917434692383
    8. '(s' → logprob: -18.125917434692383
    9. '    ' → logprob: -18.250917434692383
    10. '_s' → logprob: -18.875917434692383

Token 647: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.281546950340271
    2. '-' → logprob: -1.406546950340271
    3. ')' → logprob: -7.9065470695495605
    4. '0' → logprob: -12.031546592712402
    5. ' ' → logprob: -12.281546592712402
    6. '1' → logprob: -12.406546592712402
    7. '),' → logprob: -12.656546592712402
    8. ',' → logprob: -13.031546592712402
    9. '   ' → logprob: -13.656546592712402
    10. '[' → logprob: -13.781546592712402

Token 648: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -15.00000286102295
    4. '   ' → logprob: -16.875003814697266
    5. '```' → logprob: -17.500003814697266
    6. ',' → logprob: -17.750003814697266
    7. '<|end|>' → logprob: -18.000003814697266
    8. '۱' → logprob: -19.500003814697266
    9. '-' → logprob: -19.562503814697266
    10. '
' → logprob: -19.750003814697266

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -17.500001907348633
    4. '```' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '
' → logprob: -18.875001907348633
    7. '2' → logprob: -18.937501907348633
    8. ',' → logprob: -18.937501907348633
    9. '۱' → logprob: -19.062501907348633
    10. '<|end|>' → logprob: -19.750001907348633

Token 650: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932904720306396
    2. ')
' → logprob: -0.6932904720306396
    3. ')
' → logprob: -8.943290710449219
    4. '   ' → logprob: -12.443290710449219
    5. ' )
' → logprob: -12.568290710449219
    6. ' )' → logprob: -13.068290710449219
    7. ')

' → logprob: -13.443290710449219
    8. ')#' → logprob: -14.443290710449219
    9. '  ' → logprob: -15.193290710449219
    10. ' ' → logprob: -15.318290710449219

Token 651: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.9795445849886164e-05
    2. ' n' → logprob: -9.750060081481934
    3. 't' → logprob: -13.625060081481934
    4. ')n' → logprob: -16.250059127807617
    5. '	n' → logprob: -16.375059127807617
    6. '   ' → logprob: -17.000059127807617
    7. ')' → logprob: -18.000059127807617
    8. '[n' → logprob: -19.625059127807617
    9. '
' → logprob: -19.875059127807617
    10. '(n' → logprob: -20.125059127807617

Token 652: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018213625997304916
    2. ')
' → logprob: -4.018213748931885
    3. '   ' → logprob: -9.893213272094727
    4. ' )' → logprob: -12.018213272094727
    5. ')
' → logprob: -12.143213272094727
    6. ')d' → logprob: -13.893213272094727
    7. ' )
' → logprob: -14.393213272094727
    8. ')

' → logprob: -16.143213272094727
    9. ' ' → logprob: -16.893213272094727
    10. ')#' → logprob: -17.018213272094727

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07485470175743103
    2. 'd' → logprob: -2.699854612350464
    3. ' d' → logprob: -5.324854850769043
    4. '	d' → logprob: -10.949854850769043
    5. ',d' → logprob: -12.199854850769043
    6. ' ' → logprob: -12.699854850769043
    7. '    
' → logprob: -12.824854850769043
    8. '
' → logprob: -13.199854850769043
    9. '```' → logprob: -13.199854850769043
    10. '  ' → logprob: -14.074854850769043

Token 654: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.032476238906383514
    2. '   ' → logprob: -3.5324761867523193
    3. ' d' → logprob: -5.907476425170898
    4. '	d' → logprob: -13.532476425170898
    5. ' ' → logprob: -13.782476425170898
    6. '
' → logprob: -14.907476425170898
    7. '  ' → logprob: -15.657476425170898
    8. '```' → logprob: -16.0324764251709
    9. '_d' → logprob: -17.1574764251709
    10. '    
' → logprob: -17.2824764251709

Token 655: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ',' → logprob: -14.750000953674316
    3. ' =' → logprob: -15.250000953674316
    4. '=' → logprob: -16.375001907348633
    5. ' ' → logprob: -16.375001907348633
    6. '_' → logprob: -16.500001907348633
    7. '```' → logprob: -16.875001907348633
    8. '２' → logprob: -17.750001907348633
    9. '
' → logprob: -17.875001907348633
    10. ' ,' → logprob: -18.375001907348633

Token 656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193095207214355
    2. ' =' → logprob: -1.5019309520721436
    3. '=d' → logprob: -13.251931190490723
    4. ' ' → logprob: -17.501930236816406
    5. '＝' → logprob: -17.876930236816406
    6. '=

' → logprob: -18.751930236816406
    7. '=
' → logprob: -19.001930236816406
    8. 'd' → logprob: -19.126930236816406
    9. '=D' → logprob: -19.501930236816406
    10. ' =
' → logprob: -19.751930236816406

Token 657: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05488668009638786
    2. ' d' → logprob: -2.92988657951355
    3. '   ' → logprob: -13.179886817932129
    4. '	d' → logprob: -13.304886817932129
    5. '(d' → logprob: -14.679886817932129
    6. '_d' → logprob: -16.429885864257812
    7. '[d' → logprob: -16.429885864257812
    8. ')d' → logprob: -16.429885864257812
    9. ' ' → logprob: -16.929885864257812
    10. '.d' → logprob: -17.054885864257812

Token 658: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.16138742864131927
    2. 'd' → logprob: -1.9113874435424805
    3. ' =' → logprob: -7.5363874435424805
    4. '=d' → logprob: -8.16138744354248
    5. 'ijk' → logprob: -9.78638744354248
    6. '=' → logprob: -9.91138744354248
    7. ' d' → logprob: -9.91138744354248
    8. '_d' → logprob: -10.53638744354248
    9. 'di' → logprob: -10.78638744354248
    10. '```' → logprob: -10.91138744354248

Token 659: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.00018089536752086133
    2. 'heap' → logprob: -8.625181198120117
    3. 'd' → logprob: -14.375181198120117
    4. '(heap' → logprob: -14.875181198120117
    5. '```' → logprob: -15.625181198120117
    6. '_heat' → logprob: -16.000181198120117
    7. 'Heap' → logprob: -16.875181198120117
    8. '(d' → logprob: -17.375181198120117
    9. '.heap' → logprob: -17.875181198120117
    10. ' heap' → logprob: -18.250181198120117

Token 660: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -1.0280383548888494e-06
    2. 'edge' → logprob: -14.625000953674316
    3. '(
' → logprob: -15.250000953674316
    4. '(' → logprob: -15.750000953674316
    5. '=edge' → logprob: -16.125001907348633
    6. ' edge' → logprob: -20.000001907348633
    7. '```' → logprob: -20.875001907348633
    8. '(edges' → logprob: -20.875001907348633
    9. ' (' → logprob: -21.125001907348633
    10. '.edge' → logprob: -21.500001907348633

Token 661: '2' (ID: 17)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.16187696158885956
    2. 'edge' → logprob: -1.911876916885376
    3. '2' → logprob: -6.786877155303955
    4. 'heap' → logprob: -8.286876678466797
    5. '=edge' → logprob: -8.786876678466797
    6. '_heap' → logprob: -9.661876678466797
    7. '_edge' → logprob: -10.161876678466797
    8. ' edge' → logprob: -11.786876678466797
    9. '(heap' → logprob: -12.661876678466797
    10. '(
' → logprob: -13.661876678466797

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16038548946380615
    2. '(edge' → logprob: -1.9103854894638062
    3. 'edge' → logprob: -9.160385131835938
    4. ' ,' → logprob: -10.660385131835938
    5. '(' → logprob: -11.660385131835938
    6. ' edge' → logprob: -11.660385131835938
    7. '=edge' → logprob: -11.910385131835938
    8. ',t' → logprob: -12.785385131835938
    9. ',d' → logprob: -13.535385131835938
    10. ')' → logprob: -13.660385131835938

Token 663: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011048528365790844
    2. ' t' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.886048316955566
    4. '(t' → logprob: -16.511049270629883
    5. '	t' → logprob: -16.636049270629883
    6. '`t' → logprob: -16.886049270629883
    7. '[t' → logprob: -17.261049270629883
    8. 'd' → logprob: -17.511049270629883
    9. '
' → logprob: -17.761049270629883
    10. ',' → logprob: -17.886049270629883

Token 664: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01815052703022957
    2. '-' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.393150329589844
    4. ')' → logprob: -18.143150329589844
    5. ' ' → logprob: -18.143150329589844
    6. '   ' → logprob: -19.018150329589844
    7. ',' → logprob: -19.268150329589844
    8. '−' → logprob: -19.643150329589844
    9. '<|end|>' → logprob: -19.893150329589844
    10. ' −' → logprob: -20.018150329589844

Token 665: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028057026211172342
    2. ' ' → logprob: -5.877805709838867
    3. '```' → logprob: -15.127805709838867
    4. '-' → logprob: -15.377805709838867
    5. ')' → logprob: -16.627805709838867
    6. '   ' → logprob: -16.752805709838867
    7. '(' → logprob: -16.752805709838867
    8. ' (' → logprob: -17.815305709838867
    9. '
' → logprob: -17.877805709838867
    10. '2' → logprob: -17.877805709838867

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. '-' → logprob: -14.625067710876465
    4. '```' → logprob: -15.500067710876465
    5. '
' → logprob: -15.812567710876465
    6. '   ' → logprob: -16.25006675720215
    7. '2' → logprob: -16.37506675720215
    8. '11' → logprob: -17.87506675720215
    9. '(' → logprob: -17.87506675720215
    10. '`' → logprob: -18.00006675720215

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0484450437361374e-05
    2. ' ,' → logprob: -10.375040054321289
    3. ',n' → logprob: -11.750040054321289
    4. ')' → logprob: -14.375040054321289
    5. ',
' → logprob: -14.375040054321289
    6. 'import' → logprob: -17.00004005432129
    7. '<|end|>' → logprob: -17.37504005432129
    8. 'n' → logprob: -17.62504005432129
    9. '‌,' → logprob: -18.50004005432129
    10. '),' → logprob: -18.50004005432129

Token 668: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008614808320999146
    2. ' n' → logprob: -4.758615016937256
    3. '	n' → logprob: -16.258615493774414
    4. ')n' → logprob: -16.633615493774414
    5. ',n' → logprob: -18.133615493774414
    6. '<|end|>' → logprob: -18.633615493774414
    7. '   ' → logprob: -19.883615493774414
    8. '(n' → logprob: -20.508615493774414
    9. '_n' → logprob: -20.508615493774414
    10. ')' → logprob: -20.508615493774414

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. ')
' → logprob: -10.875022888183594
    3. '   ' → logprob: -12.750022888183594
    4. ' )' → logprob: -14.250022888183594
    5. '))' → logprob: -17.625022888183594
    6. ')return' → logprob: -18.375022888183594
    7. ')
' → logprob: -18.500022888183594
    8. ' ' → logprob: -18.625022888183594
    9. ')d' → logprob: -19.125022888183594
    10. ')

' → logprob: -19.250022888183594

Token 670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04966941848397255
    2. 'd' → logprob: -3.1746695041656494
    3. '
' → logprob: -5.79966926574707
    4. 'combined' → logprob: -6.92466926574707
    5. ' d' → logprob: -7.17466926574707
    6. ' combined' → logprob: -7.79966926574707
    7. 'result' → logprob: -7.92466926574707
    8. ' ' → logprob: -8.29966926574707
    9. '```' → logprob: -8.29966926574707
    10. 'sum' → logprob: -9.42466926574707

Token 671: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.013707151636481285
    2. 'ans' → logprob: -5.888707160949707
    3. 'res' → logprob: -6.013707160949707
    4. 'ds' → logprob: -6.138707160949707
    5. 'sum' → logprob: -6.513707160949707
    6. 'result' → logprob: -6.638707160949707
    7. 'dd' → logprob: -7.013707160949707
    8. 'combined' → logprob: -7.013707160949707
    9. 'total' → logprob: -7.138707160949707
    10. 'dr' → logprob: -9.013707160949707

Token 672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8832617998123169
    2. ' =' → logprob: -1.133261799812317
    3. '_sum' → logprob: -1.508261799812317
    4. '_comb' → logprob: -3.7582616806030273
    5. 'sum' → logprob: -4.383261680603027
    6. 'combined' → logprob: -5.133261680603027
    7. 's' → logprob: -7.633261680603027
    8. '1' → logprob: -7.883261680603027
    9. '=sum' → logprob: -8.383261680603027
    10. '_' → logprob: -9.008261680603027

Token 673: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.31332504749298096
    2. ' sum' → logprob: -1.313325047492981
    3. '   ' → logprob: -9.813324928283691
    4. '[' → logprob: -12.313324928283691
    5. ' [' → logprob: -13.438324928283691
    6. ' ' → logprob: -13.438324928283691
    7. '(sum' → logprob: -14.813324928283691
    8. '  ' → logprob: -14.938324928283691
    9. '	sum' → logprob: -15.438324928283691
    10. '.sum' → logprob: -16.938325881958008

Token 674: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -2.5776860184123507e-06
    2. 'dist' → logprob: -13.00000286102295
    3. '(dist' → logprob: -16.750001907348633
    4. 'd' → logprob: -17.125001907348633
    5. '_' → logprob: -17.375001907348633
    6. 'Distances' → logprob: -17.500001907348633
    7. '_d' → logprob: -17.625001907348633
    8. '_distance' → logprob: -17.625001907348633
    9. '_lengths' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 675: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.1414979100227356
    2. 'ist' → logprob: -2.641497850418091
    3. '_dist' → logprob: -3.266497850418091
    4. 'dist' → logprob: -4.14149808883667
    5. 'Distances' → logprob: -5.76649808883667
    6. '(dist' → logprob: -6.51649808883667
    7. 'ences' → logprob: -6.76649808883667
    8. 'er' → logprob: -8.266497611999512
    9. 'istance' → logprob: -9.016497611999512
    10. 'erg' → logprob: -9.266497611999512

Token 676: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -15.250012397766113
    4. ' (' → logprob: -16.625011444091797
    5. 'd' → logprob: -17.625011444091797
    6. '([' → logprob: -18.875011444091797
    7. '```' → logprob: -19.125011444091797
    8. '(def' → logprob: -19.250011444091797
    9. 'def' → logprob: -19.500011444091797
    10. '(D' → logprob: -19.875011444091797

Token 677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004003841895610094
    2. ',' → logprob: -6.379004001617432
    3. '(' → logprob: -7.254004001617432
    4. '[' → logprob: -7.254004001617432
    5. '(d' → logprob: -7.254004001617432
    6. ',d' → logprob: -9.504003524780273
    7. ')' → logprob: -9.754003524780273
    8. '```' → logprob: -11.504003524780273
    9. ',[' → logprob: -11.754003524780273
    10. 'd' → logprob: -12.504003524780273

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014305241405963898
    2. ',d' → logprob: -4.264305114746094
    3. ' ,' → logprob: -9.139305114746094
    4. '(d' → logprob: -10.389305114746094
    5. '(' → logprob: -13.264305114746094
    6. ',
' → logprob: -13.514305114746094
    7. 'd' → logprob: -15.389305114746094
    8. '[' → logprob: -16.639305114746094
    9. '   ' → logprob: -17.639305114746094
    10. ')' → logprob: -18.014305114746094

Token 679: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000553151941858232
    2. ' d' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.500553131103516
    4. '(d' → logprob: -17.250553131103516
    5. '  ' → logprob: -18.250553131103516
    6. '
' → logprob: -18.625553131103516
    7. '[d' → logprob: -18.750553131103516
    8. '	d' → logprob: -18.750553131103516
    9. '    ' → logprob: -19.250553131103516
    10. ')d' → logprob: -19.875553131103516

Token 680: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.250000953674316
    3. ',' → logprob: -16.625
    4. '۲' → logprob: -16.875
    5. 'd' → logprob: -17.0
    6. '２' → logprob: -17.375
    7. '```' → logprob: -17.75
    8. ')' → logprob: -18.0
    9. '   ' → logprob: -18.25
    10. '22' → logprob: -19.375

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014628469944000244
    2. ',n' → logprob: -4.2646284103393555
    3. '(n' → logprob: -7.7646284103393555
    4. ' ,' → logprob: -10.389628410339355
    5. 'n' → logprob: -12.014628410339355
    6. '   ' → logprob: -14.139628410339355
    7. ',
' → logprob: -14.139628410339355
    8. '(' → logprob: -14.264628410339355
    9. '```' → logprob: -14.514628410339355
    10. ')' → logprob: -15.264628410339355

Token 682: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024756586644798517
    2. ' n' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.12747573852539
    4. '	n' → logprob: -19.25247573852539
    5. ')n' → logprob: -20.87747573852539
    6. 'len' → logprob: -22.00247573852539
    7. ' ' → logprob: -22.75247573852539
    8. '    ' → logprob: -23.00247573852539
    9. '```' → logprob: -23.00247573852539
    10. ')' → logprob: -23.50247573852539

Token 683: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6037378311157227
    2. ')' → logprob: -0.8537378311157227
    3. '   ' → logprob: -3.6037378311157227
    4. '
' → logprob: -8.853737831115723
    5. ')
' → logprob: -11.603737831115723
    6. '    
' → logprob: -11.603737831115723
    7. ')d' → logprob: -11.603737831115723
    8. ',' → logprob: -13.103737831115723
    9. ' )
' → logprob: -13.103737831115723
    10. ')

' → logprob: -13.103737831115723

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1062999740242958
    2. 'update' → logprob: -2.356299877166748
    3. ' update' → logprob: -5.106299877166748
    4. '```' → logprob: -11.231300354003906
    5. '	update' → logprob: -13.481300354003906
    6. '
' → logprob: -13.981300354003906
    7. '(update' → logprob: -14.606300354003906
    8. '    
' → logprob: -16.106300354003906
    9. '``' → logprob: -16.356300354003906
    10. '   ' → logprob: -16.481300354003906

Token 685: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.0012158327735960484
    2. ' update' → logprob: -6.751215934753418
    3. '   ' → logprob: -10.001215934753418
    4. '```' → logprob: -16.5012149810791
    5. '
' → logprob: -16.8762149810791
    6. '	update' → logprob: -17.2512149810791
    7. '.update' → logprob: -17.2512149810791
    8. ' ' → logprob: -17.3762149810791
    9. '(update' → logprob: -17.8762149810791
    10. '    
' → logprob: -18.7512149810791

Token 686: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.9361264946837764e-07
    2. 'min' → logprob: -16.125
    3. '_max' → logprob: -17.5
    4. '```' → logprob: -20.125
    5. '_m' → logprob: -20.5
    6. '_right' → logprob: -21.25
    7. '(min' → logprob: -21.875
    8. '_MIN' → logprob: -22.0
    9. 'd' → logprob: -22.75
    10. '_mult' → logprob: -22.875

Token 687: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -3.128163257315464e-07
    2. 'right' → logprob: -16.5
    3. '```' → logprob: -16.625
    4. '_left' → logprob: -17.625
    5. '_min' → logprob: -18.0
    6. '_max' → logprob: -18.5
    7. 'Right' → logprob: -19.0
    8. '\' → logprob: -19.25
    9. '_rhs' → logprob: -19.625
    10. '__' → logprob: -19.625

Token 688: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.9795445849886164e-05
    2. '_right' → logprob: -9.750060081481934
    3. '```' → logprob: -14.125060081481934
    4. '   ' → logprob: -16.000059127807617
    5. 'def' → logprob: -16.250059127807617
    6. '_left' → logprob: -16.625059127807617
    7. 'to' → logprob: -16.750059127807617
    8. 'To' → logprob: -17.125059127807617
    9. '_from' → logprob: -17.125059127807617
    10. ')_' → logprob: -17.250059127807617

Token 689: '_left' (ID: 22189)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.070975071750581e-05
    2. '_left' → logprob: -10.500030517578125
    3. 'lef' → logprob: -12.875030517578125
    4. 'eft' → logprob: -15.375030517578125
    5. ' left' → logprob: -16.125030517578125
    6. '	left' → logprob: -17.000030517578125
    7. '-left' → logprob: -17.125030517578125
    8. 'ight' → logprob: -17.125030517578125
    9. 'opleft' → logprob: -17.250030517578125
    10. 'le' → logprob: -17.500030517578125

Token 690: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: 0.0
    2. '(' → logprob: -17.375
    3. ' (' → logprob: -17.5
    4. '(def' → logprob: -19.5
    5. '(
' → logprob: -20.0
    6. 'd' → logprob: -20.125
    7. 'def' → logprob: -20.375
    8. '```' → logprob: -20.75
    9. '(data' → logprob: -21.625
    10. '   ' → logprob: -22.125

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005799740087240934
    2. ',n' → logprob: -5.880799770355225
    3. ' ,' → logprob: -6.255799770355225
    4. '(n' → logprob: -7.505799770355225
    5. ',d' → logprob: -7.755799770355225
    6. ')' → logprob: -9.755799293518066
    7. '(d' → logprob: -11.130799293518066
    8. '(' → logprob: -11.630799293518066
    9. '   ' → logprob: -12.130799293518066
    10. 'd' → logprob: -13.380799293518066

Token 692: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007099286303855479
    2. ' n' → logprob: -7.2507100105285645
    3. ')n' → logprob: -18.625709533691406
    4. '	n' → logprob: -19.375709533691406
    5. '   ' → logprob: -19.625709533691406
    6. 'len' → logprob: -21.500709533691406
    7. ')' → logprob: -21.750709533691406
    8. '_n' → logprob: -22.875709533691406
    9. '(n' → logprob: -23.875709533691406
    10. '
' → logprob: -23.875709533691406

Token 693: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08839979022741318
    2. ')' → logprob: -2.588399887084961
    3. ')
' → logprob: -4.713399887084961
    4. '
' → logprob: -7.713399887084961
    5. 'def' → logprob: -12.213399887084961
    6. '<|end|>' → logprob: -12.213399887084961
    7. '()
' → logprob: -12.338399887084961
    8. 'print' → logprob: -12.338399887084961
    9. '```' → logprob: -12.338399887084961
    10. '()' → logprob: -12.463399887084961

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6940823197364807
    2. 'print' → logprob: -0.6940823197364807
    3. '```' → logprob: -7.444082260131836
    4. '
' → logprob: -8.569082260131836
    5. ' print' → logprob: -9.194082260131836
    6. '	print' → logprob: -10.194082260131836
    7. '    
' → logprob: -11.319082260131836
    8. '(print' → logprob: -12.194082260131836
    9. '``' → logprob: -13.819082260131836
    10. '<|end|>' → logprob: -14.194082260131836

Token 695: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.319370302458992e-06
    2. '   ' → logprob: -12.500005722045898
    3. ' print' → logprob: -13.500005722045898
    4. '```' → logprob: -16.3750057220459
    5. '
' → logprob: -18.3750057220459
    6. '	print' → logprob: -19.1250057220459
    7. '  ' → logprob: -19.7500057220459
    8. ' ' → logprob: -20.1250057220459
    9. '(print' → logprob: -20.3750057220459
    10. '#print' → logprob: -20.5000057220459

Token 696: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -2.816093228830141e-06
    2. 'results' → logprob: -13.62500286102295
    3. 's' → logprob: -13.87500286102295
    4. '(results' → logprob: -16.000001907348633
    5. '(_' → logprob: -16.125001907348633
    6. 'Results' → logprob: -16.625001907348633
    7. '(' → logprob: -17.000001907348633
    8. '_' → logprob: -17.000001907348633
    9. '('_' → logprob: -17.000001907348633
    10. '```' → logprob: -17.125001907348633

Token 697: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -15.250052452087402
    4. '(
' → logprob: -15.875052452087402
    5. 'd' → logprob: -16.500051498413086
    6. '(def' → logprob: -17.000051498413086
    7. '(div' → logprob: -17.125051498413086
    8. '\(' → logprob: -18.125051498413086
    9. '(data' → logprob: -18.250051498413086
    10. '(D' → logprob: -18.250051498413086

Token 698: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9862216504407115e-05
    2. ')
' → logprob: -11.250020027160645
    3. '())' → logprob: -12.250020027160645
    4. ' )' → logprob: -14.000020027160645
    5. '()' → logprob: -14.250020027160645
    6. ')d' → logprob: -15.500020027160645
    7. ')

' → logprob: -16.250019073486328
    8. '(' → logprob: -16.625019073486328
    9. '[])' → logprob: -17.250019073486328
    10. '[' → logprob: -17.375019073486328

Token 699: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006893210811540484
    2. 'main' → logprob: -7.500689506530762
    3. '
' → logprob: -9.250689506530762
    4. '```' → logprob: -10.625689506530762
    5. ' if' → logprob: -11.125689506530762
    6. '(main' → logprob: -15.000689506530762
    7. '<|end|>' → logprob: -15.500689506530762
    8. '#' → logprob: -15.750689506530762
    9. '\
' → logprob: -16.125688552856445
    10. ' main' → logprob: -16.125688552856445

Token 700: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 698
Tokens correctement prédits (1ère position, stricte): 352
Tokens correctement prédits (1ère position, avec adaptation): 382
Tokens correctement prédits (top 10): 631
Précision stricte (1ère position): 50.43%
Précision adaptée (1ère position): 54.73%
Précision (top 10): 90.40%
================================================================================
