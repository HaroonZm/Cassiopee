================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
"""
Ce programme construit une matrice de taille NxN selon un schéma récursif.
À chaque niveau de récursion, il partitionne un ensemble d'indices en deux sous-ensembles, et attribue à chaque paire (i, j) de deux sous-ensembles un niveau de profondeur, stocké dans une matrice A.
En fin de programme, il affiche la partie supérieure (hors diagonale) de cette matrice.
"""

def construire_matrice(N):
    """
    Construit une matrice NxN où A[i][j] indique le niveau de la première dissociation
    entre les indices i et j lors d'un partitionnement récursif par dichotomie.
    
    Args:
        N (int): La taille de la matrice carrée à construire.
    
    Returns:
        list[list[int]]: La matrice construite selon l'algorithme.
    """
    # Initialisation de la matrice avec des valeurs None
    matrice = [[None] * N for _ in range(N)]

    def partition_et_label(liste_indices, niveau):
        """
        Partitionne récursivement la liste des indices et assigne un niveau
        aux couples d'indices situés dans deux sous-listes différentes à chaque étape.

        Args:
            liste_indices (list[int]): Liste courante d'indices à partitionner.
            niveau (int): Niveau de récursion actuel à assigner aux couples inter-groupes.
        """
        # Si la sous-liste ne comprend qu'un seul élément, il n'y a plus rien à faire
        if len(liste_indices) == 1:
            return
        
        # Division en deux sous-listes (éléments pairs et impairs)
        sous_liste_0 = liste_indices[::2]
        sous_liste_1 = liste_indices[1::2]
        
        # Pour chaque paire d'indices appartenant à des sous-listes différentes,
        # on affecte le niveau dans la matrice (symétriquement)
        for i in sous_liste_0:
            for j in sous_liste_1:
                matrice[i][j] = niveau
                matrice[j][i] = niveau

        # Appels récursifs sur chaque sous-liste, en augmentant le niveau
        partition_et_label(sous_liste_0, niveau + 1)
        partition_et_label(sous_liste_1, niveau + 1)
    
    # Déclenchement de la récursion sur l'ensemble des indices
    partition_et_label(list(range(N)), 1)
    return matrice

def afficher_matrice_superieure(matrice):
    """
    Affiche la partie supérieure hors diagonale de la matrice fournie.
    Chaque ligne i affiche les éléments situés après la colonne i.

    Args:
        matrice (list[list[int]]): La matrice à afficher.
    """
    N = len(matrice)
    for i, ligne in enumerate(matrice[:-1]):
        # Affiche, pour la ligne i, les éléments de la colonne i+1 à la fin
        print(*ligne[i+1:])

def main():
    """
    Fonction principale du programme :
    - Récupère la taille N de la matrice
    - Construit la matrice
    - Affiche la portion utile de la matrice
    """
    # Lecture de l'entrée utilisateur (taille de la matrice)
    N = int(input())
    # Construction de la matrice
    matrice = construire_matrice(N)
    # Affichage du résultat
    afficher_matrice_superieure(matrice)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '"""
' (ID: 15611)
  → Token d'amorce (pas de prédiction)

Token 1: 'Ce' (ID: 24306)
  → Token d'amorce (pas de prédiction)

Token 2: ' programme' (ID: 18190)
  → Token d'amorce (pas de prédiction)

Token 3: ' construit' (ID: 119882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.051995739340782166
    2. ' est' → logprob: -4.301995754241943
    3. ' ```' → logprob: -5.051995754241943
    4. ' a' → logprob: -5.801995754241943
    5. '_' → logprob: -5.926995754241943
    6. ' s' → logprob: -5.926995754241943
    7. 's' → logprob: -6.176995754241943
    8. ' """' → logprob: -6.301995754241943
    9. ' n' → logprob: -6.301995754241943
    10. '```' → logprob: -6.676995754241943

Token 4: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011830721981823444
    2. ' un' → logprob: -4.511830806732178
    3. 's' → logprob: -7.886830806732178
    4. ' une' → logprob: -9.13683032989502
    5. ' ' → logprob: -9.51183032989502
    6. ' a' → logprob: -9.88683032989502
    7. '```' → logprob: -10.38683032989502
    8. '  ' → logprob: -10.63683032989502
    9. '"""' → logprob: -10.76183032989502
    10. ' le' → logprob: -10.88683032989502

Token 5: ' matr' (ID: 25095)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.1088671684265137
    2. ' interface' → logprob: -1.9838671684265137
    3. ' liste' → logprob: -2.1088671684265137
    4. 's' → logprob: -2.3588671684265137
    5. ' pyram' → logprob: -3.2338671684265137
    6. ' chaine' → logprob: -3.2338671684265137
    7. ' phrase' → logprob: -3.4838671684265137
    8. ' fenêtre' → logprob: -3.7338671684265137
    9. ' image' → logprob: -3.9838671684265137
    10. ' application' → logprob: -3.9838671684265137

Token 6: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.005383399315178394
    2. 'rice' → logprob: -5.255383491516113
    3. 'ix' → logprob: -10.005383491516113
    4. 'r' → logprob: -10.755383491516113
    5. '```' → logprob: -11.005383491516113
    6. 'ri' → logprob: -11.130383491516113
    7. 'i' → logprob: -11.380383491516113
    8. 'rique' → logprob: -11.880383491516113
    9. '\' → logprob: -12.380383491516113
    10. 'ique' → logprob: -12.505383491516113

Token 7: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9201512336730957
    2. '.' → logprob: -1.7951512336730957
    3. ' de' → logprob: -2.0451512336730957
    4. ' d' → logprob: -2.5451512336730957
    5. '[' → logprob: -2.6701512336730957
    6. '\' → logprob: -3.4201512336730957
    7. ',' → logprob: -3.5451512336730957
    8. '```' → logprob: -3.9201512336730957
    9. '"""' → logprob: -4.295151233673096
    10. 'd' → logprob: -5.420151233673096

Token 8: ' taille' (ID: 41644)
  Prédit: ' transition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' transition' → logprob: -1.112388014793396
    2. 'adj' → logprob: -1.362388014793396
    3. 'transition' → logprob: -1.737388014793396
    4. ' confusion' → logprob: -3.1123881340026855
    5. ' covariance' → logprob: -3.4873881340026855
    6. ' distances' → logprob: -3.6123881340026855
    7. 'conf' → logprob: -3.7373881340026855
    8. 'distance' → logprob: -3.8623881340026855
    9. 'dist' → logprob: -4.4873881340026855
    10. 'coeff' → logprob: -4.8623881340026855

Token 9: ' Nx' (ID: 178338)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003825252642855048
    2. ' d' → logprob: -7.2538251876831055
    3. '  ' → logprob: -7.3788251876831055
    4. '```' → logprob: -7.8788251876831055
    5. ' n' → logprob: -8.253825187683105
    6. 'n' → logprob: -8.253825187683105
    7. ' de' → logprob: -8.378825187683105
    8. ' (' → logprob: -8.628825187683105
    9. ' ,' → logprob: -8.878825187683105
    10. '[' → logprob: -8.878825187683105

Token 10: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0034078743774443865
    2. 'M' → logprob: -5.753407955169678
    3. 'n' → logprob: -9.12840747833252
    4. '```' → logprob: -10.25340747833252
    5. ' N' → logprob: -10.37840747833252
    6. ' ' → logprob: -11.37840747833252
    7. '1' → logprob: -11.37840747833252
    8. 'x' → logprob: -11.75340747833252
    9. 'K' → logprob: -12.25340747833252
    10. '*' → logprob: -13.12840747833252

Token 11: ' selon' (ID: 27571)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9470846652984619
    2. ',' → logprob: -1.947084665298462
    3. '```' → logprob: -1.947084665298462
    4. '.' → logprob: -2.197084665298462
    5. '\' → logprob: -2.572084665298462
    6. '"""' → logprob: -3.447084665298462
    7. '\n' → logprob: -3.822084665298462
    8. '"""
' → logprob: -4.447084426879883
    9. 'a' → logprob: -4.697084426879883
    10. ' 
' → logprob: -4.947084426879883

Token 12: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0701369047164917
    2. ' l' → logprob: -1.5701369047164917
    3. '<|end|>' → logprob: -2.0701370239257812
    4. ' la' → logprob: -2.3201370239257812
    5. '"""' → logprob: -2.5701370239257812
    6. 'une' → logprob: -3.3201370239257812
    7. '```' → logprob: -3.4451370239257812
    8. 's' → logprob: -4.195137023925781
    9. ' ' → logprob: -4.320137023925781
    10. ' ' → logprob: -4.820137023925781

Token 13: ' sch' (ID: 1781)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.129368782043457
    2. ' espace' → logprob: -1.504368782043457
    3. 'esp' → logprob: -1.754368782043457
    4. 'pattern' → logprob: -2.504368782043457
    5. 'es' → logprob: -2.754368782043457
    6. '"""' → logprob: -3.504368782043457
    7. 's' → logprob: -4.504368782043457
    8. 'certain' → logprob: -4.629368782043457
    9. ' principe' → logprob: -4.879368782043457
    10. '```' → logprob: -5.254368782043457

Token 14: 'éma' (ID: 56901)
  Prédit: 'éma'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éma' → logprob: -0.020669881254434586
    2. 'é' → logprob: -3.895669937133789
    3. 'è' → logprob: -9.645669937133789
    4. 'ématique' → logprob: -10.770669937133789
    5. 'ém' → logprob: -11.145669937133789
    6. '```' → logprob: -12.270669937133789
    7. 'ème' → logprob: -12.395669937133789
    8. ' é' → logprob: -12.895669937133789
    9. 'ema' → logprob: -13.020669937133789
    10. 'ê' → logprob: -13.145669937133789

Token 15: ' réc' (ID: 36254)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06274676322937012
    2. '_' → logprob: -4.562747001647949
    3. '.' → logprob: -4.687747001647949
    4. ',' → logprob: -4.812747001647949
    5. ' de' → logprob: -5.062747001647949
    6. ' space' → logprob: -5.562747001647949
    7. ' d' → logprob: -5.812747001647949
    8. '```' → logprob: -5.812747001647949
    9. '[' → logprob: -6.312747001647949
    10. ' :' → logprob: -6.687747001647949

Token 16: 'urs' (ID: 1628)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.602790892124176
    2. 'ur' → logprob: -1.1027908325195312
    3. 'urs' → logprob: -2.8527908325195312
    4. 'urrent' → logprob: -2.8527908325195312
    5. 'ursive' → logprob: -5.352790832519531
    6. 'urr' → logprob: -8.852790832519531
    7. 'urent' → logprob: -9.227790832519531
    8. '"""' → logprob: -9.602790832519531
    9. 'urse' → logprob: -9.727790832519531
    10. 'ursion' → logprob: -9.852790832519531

Token 17: 'if' (ID: 366)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.755252480506897
    2. 'urs' → logprob: -1.005252480506897
    3. 'urrent' → logprob: -2.1302523612976074
    4. 'u' → logprob: -3.6302523612976074
    5. 'ursive' → logprob: -4.130252361297607
    6. 'urent' → logprob: -6.630252361297607
    7. 'ursion' → logprob: -7.880252361297607
    8. 'urse' → logprob: -8.130252838134766
    9. 'e' → logprob: -8.130252838134766
    10. 'a' → logprob: -9.880252838134766

Token 18: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6170036196708679
    2. 'n' → logprob: -1.3670036792755127
    3. '"""
' → logprob: -3.1170036792755127
    4. ' 
' → logprob: -3.7420036792755127
    5. 'def' → logprob: -3.8670036792755127
    6. '\' → logprob: -3.8670036792755127
    7. '"""' → logprob: -3.8670036792755127
    8. '
' → logprob: -4.617003440856934
    9. '\n' → logprob: -4.992003440856934
    10. ' ' → logprob: -5.242003440856934

Token 19: 'À' (ID: 18724)
  Prédit: '"""

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""

' → logprob: -1.401358723640442
    2. '"""
' → logprob: -1.526358723640442
    3. '"""' → logprob: -1.901358723640442
    4. '\n' → logprob: -1.901358723640442
    5. '
' → logprob: -2.4013586044311523
    6. '#' → logprob: -2.9013586044311523
    7. '```' → logprob: -3.5263586044311523
    8. '.' → logprob: -4.651358604431152
    9. '\' → logprob: -4.776358604431152
    10. ' 
' → logprob: -4.901358604431152

Token 20: ' chaque' (ID: 21194)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1982789039611816
    2. ' chaque' → logprob: -1.9482789039611816
    3. 'l' → logprob: -2.3232789039611816
    4. 'n' → logprob: -2.3232789039611816
    5. ' ' → logprob: -2.4482789039611816
    6. ' partir' → logprob: -2.6982789039611816
    7. 'i' → logprob: -2.6982789039611816
    8. 's' → logprob: -4.198278903961182
    9. '"""' → logprob: -4.323278903961182
    10. 'c' → logprob: -4.448278903961182

Token 21: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -1.1995455026626587
    2. ' ' → logprob: -1.6995455026626587
    3. 'n' → logprob: -2.324545383453369
    4. '\n' → logprob: -2.824545383453369
    5. 'élé' → logprob: -2.824545383453369
    6. '_' → logprob: -3.449545383453369
    7. 'é' → logprob: -3.699545383453369
    8. ' niveau' → logprob: -3.824545383453369
    9. '```' → logprob: -3.949545383453369
    10. '\' → logprob: -4.074545383453369

Token 22: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6904105544090271
    2. ' de' → logprob: -0.9404105544090271
    3. ' d' → logprob: -3.065410614013672
    4. ' ,' → logprob: -3.190410614013672
    5. 'de' → logprob: -4.815410614013672
    6. ' ' → logprob: -5.815410614013672
    7. ' ' → logprob: -6.190410614013672
    8. 'd' → logprob: -6.690410614013672
    9. ',
' → logprob: -7.190410614013672
    10. 'n' → logprob: -7.190410614013672

Token 23: ' réc' (ID: 36254)
  Prédit: ' profondeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' profondeur' → logprob: -0.9685000777244568
    2. ' réc' → logprob: -1.5935001373291016
    3. ' indentation' → logprob: -2.2185001373291016
    4. 'rec' → logprob: -2.2185001373291016
    5. 'indent' → logprob: -2.8435001373291016
    6. 'r' → logprob: -3.2185001373291016
    7. 're' → logprob: -3.8435001373291016
    8. 'niveau' → logprob: -3.8435001373291016
    9. 'ré' → logprob: -4.468500137329102
    10. 'd' → logprob: -4.843500137329102

Token 24: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.12738853693008423
    2. 'urs' → logprob: -2.2523884773254395
    3. 'ur' → logprob: -4.6273884773254395
    4. 'urrence' → logprob: -6.1273884773254395
    5. 'ursive' → logprob: -7.0023884773254395
    6. 'u' → logprob: -7.6273884773254395
    7. 'urse' → logprob: -8.002388954162598
    8. '```' → logprob: -9.127388954162598
    9. 'rs' → logprob: -10.002388954162598
    10. 'urrent' → logprob: -10.314888954162598

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005583302117884159
    2. ' ,' → logprob: -5.2555832862854
    3. ' ' → logprob: -8.880583763122559
    4. 'n' → logprob: -9.755583763122559
    5. ',
' → logprob: -10.005583763122559
    6. 's' → logprob: -10.755583763122559
    7. '.' → logprob: -11.630583763122559
    8. ')' → logprob: -11.880583763122559
    9. '<|end|>' → logprob: -12.005583763122559
    10. 'i' → logprob: -12.005583763122559

Token 26: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21104371547698975
    2. ' on' → logprob: -1.8360437154769897
    3. ' la' → logprob: -5.086043834686279
    4. ' ' → logprob: -5.211043834686279
    5. 'n' → logprob: -5.461043834686279
    6. 'l' → logprob: -5.836043834686279
    7. ' l' → logprob: -5.836043834686279
    8. ' ```' → logprob: -7.086043834686279
    9. 'space' → logprob: -7.336043834686279
    10. ' ‌' → logprob: -7.336043834686279

Token 27: ' partition' (ID: 31512)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.9375619292259216
    2. ' place' → logprob: -1.1875619888305664
    3. ' crée' → logprob: -2.3125619888305664
    4. ' copie' → logprob: -2.8125619888305664
    5. ' rem' → logprob: -2.9375619888305664
    6. ' construit' → logprob: -4.062561988830566
    7. ' complète' → logprob: -4.937561988830566
    8. ' ins' → logprob: -5.312561988830566
    9. ' div' → logprob: -5.312561988830566
    10. ' ' → logprob: -5.312561988830566

Token 28: 'ne' (ID: 611)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.025477508082985878
    2. 'ne' → logprob: -3.775477409362793
    3. 'n' → logprob: -6.150477409362793
    4. 'nne' → logprob: -9.650477409362793
    5. ' ' → logprob: -11.150477409362793
    6. '```' → logprob: -12.775477409362793
    7. 'a' → logprob: -12.900477409362793
    8. ' e' → logprob: -13.275477409362793
    9. '"""' → logprob: -13.400477409362793
    10. '_' → logprob: -13.650477409362793

Token 29: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.43672338128089905
    2. ' ' → logprob: -1.5617233514785767
    3. '<|end|>' → logprob: -2.186723470687866
    4. ' ' → logprob: -5.436723232269287
    5. '```' → logprob: -5.561723232269287
    6. 'la' → logprob: -5.561723232269287
    7. ' l' → logprob: -6.061723232269287
    8. ' en' → logprob: -6.186723232269287
    9. 's' → logprob: -6.186723232269287
    10. ' the' → logprob: -6.311723232269287

Token 30: ' ensemble' (ID: 33081)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.41509684920310974
    2. ' espace' → logprob: -1.2900968790054321
    3. 'esp' → logprob: -4.290096759796143
    4. 'e' → logprob: -4.790096759796143
    5. ''espace' → logprob: -5.165096759796143
    6. '_' → logprob: -5.290096759796143
    7. ' carré' → logprob: -5.290096759796143
    8. 'a' → logprob: -5.790096759796143
    9. ' morceau' → logprob: -5.915096759796143
    10. ' bloc' → logprob: -5.915096759796143

Token 31: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4852607250213623
    2. ' de' → logprob: -1.8602607250213623
    3. '<|end|>' → logprob: -2.1102607250213623
    4. ' d' → logprob: -2.9852607250213623
    5. '_' → logprob: -4.110260963439941
    6. ' en' → logprob: -4.235260963439941
    7. '<|end|>' → logprob: -5.235260963439941
    8. 's' → logprob: -5.485260963439941
    9. ' """' → logprob: -6.110260963439941
    10. '[' → logprob: -6.360260963439941

Token 32: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3121790587902069
    2. ''ent' → logprob: -2.5621790885925293
    3. 'indices' → logprob: -2.6871790885925293
    4. ''esp' → logprob: -3.1871790885925293
    5. 'e' → logprob: -3.5621790885925293
    6. 'élé' → logprob: -4.562179088592529
    7. ' indices' → logprob: -4.687179088592529
    8. ''é' → logprob: -4.687179088592529
    9. ''ind' → logprob: -5.687179088592529
    10. '’' → logprob: -5.937179088592529

Token 33: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.005201620515435934
    2. ' indices' → logprob: -5.880201816558838
    3. 'élé' → logprob: -6.880201816558838
    4. 'indice' → logprob: -8.00520133972168
    5. 'index' → logprob: -8.13020133972168
    6. ''' → logprob: -8.25520133972168
    7. 'ent' → logprob: -8.50520133972168
    8. 'ind' → logprob: -9.50520133972168
    9. 'indexes' → logprob: -9.63020133972168
    10. ''ent' → logprob: -10.38020133972168

Token 34: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0033609867095947
    2. 's' → logprob: -1.3783609867095947
    3. ' ' → logprob: -1.5033609867095947
    4. '[' → logprob: -3.0033609867095947
    5. ' ,' → logprob: -3.6283609867095947
    6. ',' → logprob: -3.7533609867095947
    7. '```' → logprob: -4.003360748291016
    8. ' _' → logprob: -4.753360748291016
    9. ' ```' → logprob: -5.253360748291016
    10. ' en' → logprob: -5.503360748291016

Token 35: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9150575995445251
    2. ' trois' → logprob: -1.16505765914917
    3. ' quatre' → logprob: -2.04005765914917
    4. ' deux' → logprob: -2.91505765914917
    5. '3' → logprob: -3.79005765914917
    6. '2' → logprob: -3.91505765914917
    7. '```' → logprob: -4.04005765914917
    8. '4' → logprob: -4.54005765914917
    9. ' des' → logprob: -5.29005765914917
    10. ' espaces' → logprob: -5.66505765914917

Token 36: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0645407438278198
    2. ' espaces' → logprob: -1.6895407438278198
    3. ' groupes' → logprob: -2.0645408630371094
    4. ' parts' → logprob: -3.3145408630371094
    5. ' ensembles' → logprob: -3.3145408630371094
    6. '.' → logprob: -3.5645408630371094
    7. '_' → logprob: -3.8145408630371094
    8. ',' → logprob: -3.8145408630371094
    9. 'spaces' → logprob: -4.189540863037109
    10. 'esp' → logprob: -4.314540863037109

Token 37: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0037718163803219795
    2. '_' → logprob: -6.503771781921387
    3. 'ense' → logprob: -7.003771781921387
    4. ' ensembles' → logprob: -7.128771781921387
    5. '-part' → logprob: -9.128771781921387
    6. 's' → logprob: -9.503771781921387
    7. 'ensemble' → logprob: -9.628771781921387
    8. '--' → logprob: -10.003771781921387
    9. '-es' → logprob: -10.628771781921387
    10. ' espaces' → logprob: -10.628771781921387

Token 38: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.009001443162560463
    2. 'ensemble' → logprob: -5.0090012550354
    3. 'list' → logprob: -7.0090012550354
    4. ' ensembles' → logprob: -8.384001731872559
    5. 'esp' → logprob: -8.634001731872559
    6. '-' → logprob: -8.884001731872559
    7. 'group' → logprob: -9.259001731872559
    8. 'part' → logprob: -9.259001731872559
    9. '```' → logprob: -9.384001731872559
    10. 'sets' → logprob: -9.759001731872559

Token 39: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.010069949552416801
    2. 'm' → logprob: -5.510069847106934
    3. 'mble' → logprob: -5.635069847106934
    4. 'mb' → logprob: -6.760069847106934
    5. 'ts' → logprob: -6.885069847106934
    6. 'cts' → logprob: -10.010069847106934
    7. 't' → logprob: -10.260069847106934
    8. 'mbler' → logprob: -10.260069847106934
    9. 'ments' → logprob: -10.760069847106934
    10. '```' → logprob: -10.885069847106934

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10057099908590317
    2. 's' → logprob: -2.9755709171295166
    3. '.' → logprob: -3.8505709171295166
    4. ' ,' → logprob: -4.350571155548096
    5. '_' → logprob: -5.725571155548096
    6. ')' → logprob: -5.850571155548096
    7. ' ' → logprob: -7.100571155548096
    8. ' de' → logprob: -7.475571155548096
    9. ' et' → logprob: -7.600571155548096
    10. '[' → logprob: -8.350570678710938

Token 41: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.708087682723999
    2. ' puis' → logprob: -1.333087682723999
    3. 's' → logprob: -2.833087682723999
    4. '_' → logprob: -3.958087682723999
    5. ' ,' → logprob: -4.083087921142578
    6. ',' → logprob: -4.208087921142578
    7. ' et' → logprob: -4.208087921142578
    8. ' i' → logprob: -4.333087921142578
    9. ')' → logprob: -4.458087921142578
    10. ' """' → logprob: -4.458087921142578

Token 42: ' attrib' (ID: 72186)
  Prédit: ' rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rem' → logprob: -1.2248307466506958
    2. ' construit' → logprob: -1.3498307466506958
    3. ' les' → logprob: -1.4748307466506958
    4. ' crée' → logprob: -2.9748306274414062
    5. ' continue' → logprob: -3.2248306274414062
    6. ' complète' → logprob: -4.349830627441406
    7. ' place' → logprob: -4.724830627441406
    8. ' réalise' → logprob: -5.099830627441406
    9. ' rempli' → logprob: -5.224830627441406
    10. ' repart' → logprob: -5.224830627441406

Token 43: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0014805786777287722
    2. 'u' → logprob: -6.626480579376221
    3. 'uera' → logprob: -10.001480102539062
    4. 'uer' → logprob: -10.251480102539062
    5. 'ué' → logprob: -10.751480102539062
    6. 'uée' → logprob: -11.251480102539062
    7. 'uez' → logprob: -11.626480102539062
    8. 'uent' → logprob: -11.751480102539062
    9. 'uant' → logprob: -12.001480102539062
    10. '```' → logprob: -12.376480102539062

Token 44: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23767748475074768
    2. ' des' → logprob: -2.862677574157715
    3. 's' → logprob: -2.987677574157715
    4. '_' → logprob: -2.987677574157715
    5. ''' → logprob: -4.987677574157715
    6. '<|end|>' → logprob: -5.237677574157715
    7. ' un' → logprob: -5.612677574157715
    8. '  ' → logprob: -5.612677574157715
    9. ' _' → logprob: -5.612677574157715
    10. '```' → logprob: -6.112677574157715

Token 45: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4816185235977173
    2. ' chaque' → logprob: -1.4816185235977173
    3. ' la' → logprob: -2.1066184043884277
    4. ' l' → logprob: -2.3566184043884277
    5. 's' → logprob: -2.6066184043884277
    6. '```' → logprob: -3.1066184043884277
    7. '<|end|>' → logprob: -3.7316184043884277
    8. 'l' → logprob: -3.7316184043884277
    9. ' each' → logprob: -4.231618404388428
    10. ' chacune' → logprob: -4.231618404388428

Token 46: ' paire' (ID: 148856)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0397502183914185
    2. ' partie' → logprob: -2.164750099182129
    3. 's' → logprob: -2.414750099182129
    4. ' part' → logprob: -2.414750099182129
    5. ' sous' → logprob: -2.539750099182129
    6. ' élément' → logprob: -2.789750099182129
    7. 'ensemble' → logprob: -3.289750099182129
    8. ' ' → logprob: -3.664750099182129
    9. 'part' → logprob: -3.914750099182129
    10. '_' → logprob: -4.039750099182129

Token 47: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3430231511592865
    2. ' de' → logprob: -1.9680231809616089
    3. ' d' → logprob: -2.4680230617523193
    4. '<|end|>' → logprob: -3.7180230617523193
    5. 's' → logprob: -4.218023300170898
    6. 'd' → logprob: -5.593023300170898
    7. '  ' → logprob: -5.718023300170898
    8. ' (' → logprob: -5.718023300170898
    9. '_' → logprob: -5.843023300170898
    10. '[' → logprob: -5.968023300170898

Token 48: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1741629838943481
    2. 'indices' → logprob: -2.0491628646850586
    3. 'd' → logprob: -2.1741628646850586
    4. ' i' → logprob: -2.2991628646850586
    5. '(indices' → logprob: -2.2991628646850586
    6. ' d' → logprob: -2.7991628646850586
    7. ' (' → logprob: -2.9241628646850586
    8. 'indice' → logprob: -3.1741628646850586
    9. '(i' → logprob: -3.5491628646850586
    10. ')' → logprob: -4.299162864685059

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013269288465380669
    2. ',j' → logprob: -4.638269424438477
    3. ')' → logprob: -6.638269424438477
    4. 's' → logprob: -7.388269424438477
    5. '1' → logprob: -7.638269424438477
    6. ',)' → logprob: -8.263269424438477
    7. 'j' → logprob: -8.513269424438477
    8. ' ,' → logprob: -8.888269424438477
    9. '_j' → logprob: -9.388269424438477
    10. ',n' → logprob: -10.013269424438477

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4741458594799042
    2. ' j' → logprob: -0.9741458892822266
    3. ' ' → logprob: -10.724145889282227
    4. ' ' → logprob: -10.849145889282227
    5. ',j' → logprob: -11.474145889282227
    6. '	j' → logprob: -12.099145889282227
    7. ',' → logprob: -12.599145889282227
    8. '_j' → logprob: -12.849145889282227
    9. 'i' → logprob: -14.224145889282227
    10. ' )' → logprob: -14.411645889282227

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010533124441280961
    2. ',' → logprob: -10.375104904174805
    3. ' )' → logprob: -11.125104904174805
    4. '')' → logprob: -11.250104904174805
    5. '),' → logprob: -11.375104904174805
    6. 'une' → logprob: -12.000104904174805
    7. '")' → logprob: -12.750104904174805
    8. ' ' → logprob: -13.000104904174805
    9. ')`' → logprob: -13.000104904174805
    10. ' une' → logprob: -13.125104904174805

Token 52: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1393323838710785
    2. ' un' → logprob: -2.1393322944641113
    3. ' une' → logprob: -5.514332294464111
    4. ')' → logprob: -6.389332294464111
    5. 's' → logprob: -6.889332294464111
    6. 'un' → logprob: -7.014332294464111
    7. 'une' → logprob: -7.389332294464111
    8. ' de' → logprob: -7.389332294464111
    9. '"' → logprob: -7.639332294464111
    10. '```' → logprob: -7.639332294464111

Token 53: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5606129765510559
    2. ' indices' → logprob: -1.3106129169464111
    3. 'indices' → logprob: -3.060612916946411
    4. ' l' → logprob: -3.060612916946411
    5. 'l' → logprob: -3.810612916946411
    6. 'la' → logprob: -4.56061315536499
    7. ' lignes' → logprob: -5.43561315536499
    8. 's' → logprob: -5.56061315536499
    9. ' matrices' → logprob: -6.06061315536499
    10. ' éléments' → logprob: -6.06061315536499

Token 54: ' sous' (ID: 14487)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.15069295465946198
    2. 'indices' → logprob: -2.525692939758301
    3. ' espaces' → logprob: -3.650692939758301
    4. ' lignes' → logprob: -4.900692939758301
    5. 's' → logprob: -5.150692939758301
    6. ' éléments' → logprob: -5.650692939758301
    7. ' ' → logprob: -6.025692939758301
    8. ' points' → logprob: -6.525692939758301
    9. 'élé' → logprob: -6.713192939758301
    10. 'i' → logprob: -7.088192939758301

Token 55: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09070121496915817
    2. '_' → logprob: -2.465701103210449
    3. 'ense' → logprob: -7.965701103210449
    4. '-es' → logprob: -8.84070110321045
    5. 'es' → logprob: -9.09070110321045
    6. '_-' → logprob: -9.09070110321045
    7. 's' → logprob: -9.21570110321045
    8. '-é' → logprob: -9.34070110321045
    9. ' -' → logprob: -9.71570110321045
    10. ' ' → logprob: -9.96570110321045

Token 56: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.0067534977570176125
    2. 'ensemble' → logprob: -5.506753444671631
    3. 'indices' → logprob: -6.506753444671631
    4. 'esp' → logprob: -7.881753444671631
    5. 'sets' → logprob: -9.131753921508789
    6. 'mat' → logprob: -9.756753921508789
    7. ' ensembles' → logprob: -9.756753921508789
    8. 'enses' → logprob: -9.881753921508789
    9. 'index' → logprob: -10.006753921508789
    10. '-' → logprob: -10.131753921508789

Token 57: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.08203890919685364
    2. 'mble' → logprob: -2.8320388793945312
    3. 'mb' → logprob: -4.457038879394531
    4. 'm' → logprob: -5.082038879394531
    5. 'mbler' → logprob: -6.582038879394531
    6. 'mbly' → logprob: -7.957038879394531
    7. 'ts' → logprob: -9.457038879394531
    8. 'r' → logprob: -9.457038879394531
    9. 'mbled' → logprob: -9.457038879394531
    10. 'cts' → logprob: -10.082038879394531

Token 58: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.32426825165748596
    2. ' ' → logprob: -1.8242682218551636
    3. ' une' → logprob: -3.074268341064453
    4. ',' → logprob: -3.449268341064453
    5. 'un' → logprob: -4.449268341064453
    6. ' la' → logprob: -5.449268341064453
    7. ')' → logprob: -5.574268341064453
    8. 'une' → logprob: -5.574268341064453
    9. 's' → logprob: -5.949268341064453
    10. '.' → logprob: -6.074268341064453

Token 59: ' niveau' (ID: 21708)
  Prédit: ' coefficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coefficient' → logprob: -1.0167872905731201
    2. 'val' → logprob: -1.7667872905731201
    3. 'e' → logprob: -2.14178729057312
    4. 'ent' → logprob: -2.51678729057312
    5. ' numéro' → logprob: -3.76678729057312
    6. ' ' → logprob: -3.76678729057312
    7. 'coef' → logprob: -3.76678729057312
    8. 'élé' → logprob: -3.89178729057312
    9. 'coeff' → logprob: -4.016787528991699
    10. ' entier' → logprob: -4.141787528991699

Token 60: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.35429713129997253
    2. ' d' → logprob: -1.479297161102295
    3. '_' → logprob: -3.854297161102295
    4. ' ' → logprob: -4.479297161102295
    5. '<|end|>' → logprob: -4.479297161102295
    6. 'de' → logprob: -5.604297161102295
    7. ' _' → logprob: -5.604297161102295
    8. '.' → logprob: -5.729297161102295
    9. 's' → logprob: -5.979297161102295
    10. ',' → logprob: -6.229297161102295

Token 61: ' profondeur' (ID: 128210)
  Prédit: ' réc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.7293484210968018
    2. 'r' → logprob: -1.2293484210968018
    3. ' profondeur' → logprob: -2.2293484210968018
    4. 'rec' → logprob: -2.4793484210968018
    5. 'niveau' → logprob: -4.729348182678223
    6. ' recursion' → logprob: -5.729348182678223
    7. ' rec' → logprob: -6.229348182678223
    8. ' indentation' → logprob: -6.229348182678223
    9. 'partition' → logprob: -6.354348182678223
    10. 'ré' → logprob: -6.479348182678223

Token 62: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0635548830032349
    2. ',' → logprob: -1.1885548830032349
    3. ' de' → logprob: -1.6885548830032349
    4. 's' → logprob: -3.5635547637939453
    5. '"""' → logprob: -3.6885547637939453
    6. ')' → logprob: -4.188554763793945
    7. '_' → logprob: -4.188554763793945
    8. '<|end|>' → logprob: -4.313554763793945
    9. ' d' → logprob: -4.813554763793945
    10. ' ,' → logprob: -5.188554763793945

Token 63: ' stock' (ID: 6546)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.6170847415924072
    2. ' ' → logprob: -2.1170847415924072
    3. ' puis' → logprob: -2.2420847415924072
    4. ',' → logprob: -2.3670847415924072
    5. ' en' → logprob: -2.7420847415924072
    6. ' et' → logprob: -2.7420847415924072
    7. 's' → logprob: -3.1170847415924072
    8. '"""' → logprob: -3.1170847415924072
    9. ' afin' → logprob: -3.2420847415924072
    10. ' i' → logprob: -3.6170847415924072

Token 64: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.18439210951328278
    2. 'e' → logprob: -1.8093920946121216
    3. 'u' → logprob: -6.184391975402832
    4. '_' → logprob: -6.809391975402832
    5. 'ée' → logprob: -6.809391975402832
    6. '=' → logprob: -9.184391975402832
    7. 'è' → logprob: -9.934391975402832
    8. 'a' → logprob: -10.059391975402832
    9. 'és' → logprob: -10.184391975402832
    10. '__' → logprob: -10.559391975402832

Token 65: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.4248303771018982
    2. 'dans' → logprob: -1.924830436706543
    3. ' ' → logprob: -2.674830436706543
    4. '_' → logprob: -2.674830436706543
    5. ' =' → logprob: -4.049830436706543
    6. '=' → logprob: -4.549830436706543
    7. 's' → logprob: -4.924830436706543
    8. '.' → logprob: -5.174830436706543
    9. ' in' → logprob: -5.549830436706543
    10. '"""' → logprob: -6.174830436706543

Token 66: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.013656583614647388
    2. 'la' → logprob: -4.8886566162109375
    3. ' ' → logprob: -5.8886566162109375
    4. ' ' → logprob: -6.8886566162109375
    5. ' l' → logprob: -7.3886566162109375
    6. ' M' → logprob: -8.638656616210938
    7. 'a' → logprob: -8.763656616210938
    8. ' a' → logprob: -8.888656616210938
    9. ' une' → logprob: -8.888656616210938
    10. 'l' → logprob: -9.138656616210938

Token 67: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.28521114587783813
    2. 'mat' → logprob: -1.7852110862731934
    3. ' ' → logprob: -4.035211086273193
    4. ' diction' → logprob: -4.910211086273193
    5. 'matrix' → logprob: -5.160211086273193
    6. ' matrix' → logprob: -5.410211086273193
    7. ' tableau' → logprob: -5.410211086273193
    8. 'd' → logprob: -5.535211086273193
    9. 'liste' → logprob: -5.660211086273193
    10. '"""' → logprob: -5.910211086273193

Token 68: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.07182763516902924
    2. 'i' → logprob: -2.6968276500701904
    3. 'ix' → logprob: -7.196827411651611
    4. 'e' → logprob: -7.571827411651611
    5. 'ic' → logprob: -7.821827411651611
    6. '```' → logprob: -10.07182788848877
    7. '[' → logprob: -10.69682788848877
    8. '\' → logprob: -10.94682788848877
    9. ']' → logprob: -11.07182788848877
    10. 'c' → logprob: -11.57182788848877

Token 69: ' A' (ID: 355)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8320663571357727
    2. '.' → logprob: -1.832066297531128
    3. '[' → logprob: -2.207066297531128
    4. 'import' → logprob: -2.207066297531128
    5. '[
' → logprob: -3.457066297531128
    6. '\' → logprob: -3.582066297531128
    7. ',' → logprob: -3.707066297531128
    8. '\n' → logprob: -3.957066297531128
    9. '```' → logprob: -4.082066535949707
    10. 'n' → logprob: -4.207066535949707

Token 70: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0766490697860718
    2. '.' → logprob: -1.5766490697860718
    3. '```' → logprob: -1.8266490697860718
    4. 'import' → logprob: -2.7016491889953613
    5. '[
' → logprob: -3.0766491889953613
    6. ',' → logprob: -3.7016491889953613
    7. ')' → logprob: -3.7016491889953613
    8. 'def' → logprob: -3.9516491889953613
    9. ']' → logprob: -4.076649188995361
    10. '_' → logprob: -4.201649188995361

Token 71: 'En' (ID: 1568)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7475683689117432
    2. '[' → logprob: -0.9975683689117432
    3. '[
' → logprob: -3.372568368911743
    4. '#' → logprob: -3.372568368911743
    5. 'def' → logprob: -4.372568130493164
    6. 'import' → logprob: -4.622568130493164
    7. '"""' → logprob: -4.622568130493164
    8. ')' → logprob: -4.747568130493164
    9. '\n' → logprob: -4.997568130493164
    10. '.' → logprob: -4.997568130493164

Token 72: ' fin' (ID: 2131)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.42081373929977417
    2. ' fonction' → logprob: -3.045813798904419
    3. 'part' → logprob: -3.170813798904419
    4. ' utilisant' → logprob: -3.295813798904419
    5. ' suivant' → logprob: -3.545813798904419
    6. '```' → logprob: -3.670813798904419
    7. ' continu' → logprob: -3.795813798904419
    8. ' Python' → logprob: -4.04581356048584
    9. 's' → logprob: -4.42081356048584
    10. ' poursu' → logprob: -4.67081356048584

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03169885277748108
    2. '"""' → logprob: -4.156698703765869
    3. 'de' → logprob: -5.156698703765869
    4. ' ' → logprob: -6.406698703765869
    5. ' d' → logprob: -6.656698703765869
    6. 'e' → logprob: -7.031698703765869
    7. ' du' → logprob: -7.031698703765869
    8. '.' → logprob: -7.281698703765869
    9. '"' → logprob: -7.531698703765869
    10. ' """' → logprob: -7.656698703765869

Token 74: ' programme' (ID: 18190)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.27564358711242676
    2. 'programme' → logprob: -2.2756435871124268
    3. 'code' → logprob: -2.9006435871124268
    4. 'texte' → logprob: -3.7756435871124268
    5. 'construction' → logprob: -4.150643348693848
    6. 'ligne' → logprob: -4.150643348693848
    7. 'r' → logprob: -4.525643348693848
    8. 'fonction' → logprob: -4.900643348693848
    9. 'mat' → logprob: -6.025643348693848
    10. 'program' → logprob: -6.775643348693848

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13657072186470032
    2. '"""' → logprob: -2.636570692062378
    3. '.' → logprob: -4.261570930480957
    4. ')' → logprob: -4.886570930480957
    5. '"""
' → logprob: -5.136570930480957
    6. '```' → logprob: -5.261570930480957
    7. '"""

' → logprob: -5.636570930480957
    8. 'import' → logprob: -5.761570930480957
    9. ']' → logprob: -6.261570930480957
    10. 'e' → logprob: -6.261570930480957

Token 76: ' il' (ID: 1793)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7942557334899902
    2. 'on' → logprob: -2.1692557334899902
    3. 'A' → logprob: -2.2942557334899902
    4. ' la' → logprob: -2.2942557334899902
    5. 'la' → logprob: -2.4192557334899902
    6. 'il' → logprob: -3.1692557334899902
    7. 'le' → logprob: -3.5442557334899902
    8. ' A' → logprob: -3.9192557334899902
    9. ' il' → logprob: -3.9192557334899902
    10. 'l' → logprob: -4.66925573348999

Token 77: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.41777148842811584
    2. ' retourne' → logprob: -2.542771577835083
    3. ' rem' → logprob: -2.792771577835083
    4. 'aff' → logprob: -3.292771577835083
    5. 'rem' → logprob: -3.417771577835083
    6. 's' → logprob: -4.042771339416504
    7. ' écrit' → logprob: -4.042771339416504
    8. ' calc' → logprob: -4.542771339416504
    9. ' ren' → logprob: -4.792771339416504
    10. ' stock' → logprob: -4.917771339416504

Token 78: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03732351213693619
    2. 'la' → logprob: -4.287323474884033
    3. 'A' → logprob: -4.787323474884033
    4. 'l' → logprob: -5.412323474884033
    5. ' l' → logprob: -5.912323474884033
    6. ' le' → logprob: -6.287323474884033
    7. ' ' → logprob: -6.287323474884033
    8. ' A' → logprob: -6.412323474884033
    9. ' ' → logprob: -7.537323474884033
    10. 'le' → logprob: -8.287323951721191

Token 79: ' partie' (ID: 22139)
  Prédit: ' matr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.013211056590080261
    2. ' matrix' → logprob: -5.263211250305176
    3. 'mat' → logprob: -5.513211250305176
    4. 's' → logprob: -6.263211250305176
    5. 'matrix' → logprob: -7.763211250305176
    6. ' matrices' → logprob: -7.888211250305176
    7. ' matriz' → logprob: -8.013211250305176
    8. ' mat' → logprob: -8.388211250305176
    9. ' matric' → logprob: -9.013211250305176
    10. ' profondeur' → logprob: -9.013211250305176

Token 80: ' supérieure' (ID: 106336)
  Prédit: ' supérieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.8843888640403748
    2. 'inf' → logprob: -1.3843889236450195
    3. 'sup' → logprob: -2.1343889236450195
    4. ' inf' → logprob: -3.1343889236450195
    5. ' triang' → logprob: -3.1343889236450195
    6. 'tri' → logprob: -3.2593889236450195
    7. '```' → logprob: -3.8843889236450195
    8. ' sup' → logprob: -3.8843889236450195
    9. 'super' → logprob: -4.8843889236450195
    10. 'strict' → logprob: -5.1343889236450195

Token 81: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.7209155559539795
    2. 'sup' → logprob: -1.8459155559539795
    3. 'de' → logprob: -1.9709155559539795
    4. '```' → logprob: -2.0959155559539795
    5. '[' → logprob: -2.3459155559539795
    6. 'A' → logprob: -2.4709155559539795
    7. ' supérieure' → logprob: -2.5959155559539795
    8. 'tri' → logprob: -3.4709155559539795
    9. '_' → logprob: -3.5959155559539795
    10. 'import' → logprob: -4.345915794372559

Token 82: 'hors' (ID: 70144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5593242645263672
    2. 'de' → logprob: -1.1843242645263672
    3. ' de' → logprob: -2.309324264526367
    4. 'tri' → logprob: -5.059324264526367
    5. 'sup' → logprob: -5.559324264526367
    6. ' triang' → logprob: -5.934324264526367
    7. ' ' → logprob: -6.434324264526367
    8. 'triangle' → logprob: -6.434324264526367
    9. ' )' → logprob: -6.684324264526367
    10. '```' → logprob: -6.684324264526367

Token 83: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.05190836265683174
    2. ' diagonal' → logprob: -4.176908493041992
    3. 'diag' → logprob: -4.301908493041992
    4. ' diagon' → logprob: -4.301908493041992
    5. '-di' → logprob: -6.176908493041992
    6. 'la' → logprob: -6.551908493041992
    7. ' ' → logprob: -7.301908493041992
    8. '-' → logprob: -7.551908493041992
    9. 'triangle' → logprob: -7.676908493041992
    10. '```' → logprob: -7.801908493041992

Token 84: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0003290288441348821
    2. 'al' → logprob: -8.62532901763916
    3. 'on' → logprob: -10.00032901763916
    4. 'nale' → logprob: -10.37532901763916
    5. 'rale' → logprob: -11.37532901763916
    6. 'але' → logprob: -11.87532901763916
    7. 'ales' → logprob: -12.12532901763916
    8. ')' → logprob: -12.25032901763916
    9. 'e' → logprob: -12.37532901763916
    10. 'le' → logprob: -12.37532901763916

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00513081531971693
    2. 'sup' → logprob: -7.005130767822266
    3. ' supérieure' → logprob: -7.005130767822266
    4. ' de' → logprob: -7.255130767822266
    5. 'de' → logprob: -7.505130767822266
    6. ').' → logprob: -7.630130767822266
    7. ' )' → logprob: -7.880130767822266
    8. '")' → logprob: -8.130130767822266
    9. ',' → logprob: -8.255130767822266
    10. '),' → logprob: -8.880130767822266

Token 86: ' de' (ID: 334)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.35108184814453125
    2. 'def' → logprob: -1.7260818481445312
    3. 'import' → logprob: -3.8510818481445312
    4. '#' → logprob: -4.101081848144531
    5. '[' → logprob: -4.226081848144531
    6. '
' → logprob: -4.351081848144531
    7. 'n' → logprob: -4.976081848144531
    8. 'A' → logprob: -5.101081848144531
    9. '"""
' → logprob: -5.351081848144531
    10. '\' → logprob: -5.601081848144531

Token 87: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.02724502980709076
    2. 'la' → logprob: -3.777245044708252
    3. 'A' → logprob: -6.027245044708252
    4. 'l' → logprob: -7.152245044708252
    5. ' A' → logprob: -7.902245044708252
    6. ' ' → logprob: -9.027244567871094
    7. ' l' → logprob: -9.152244567871094
    8. 'a' → logprob: -9.527244567871094
    9. ' cette' → logprob: -10.777244567871094
    10. 's' → logprob: -10.777244567871094

Token 88: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.04680933803319931
    2. 'mat' → logprob: -3.171809434890747
    3. ' matrix' → logprob: -6.296809196472168
    4. 'matrix' → logprob: -7.046809196472168
    5. ' matrices' → logprob: -8.046809196472168
    6. ' ' → logprob: -8.421809196472168
    7. ' matriz' → logprob: -8.671809196472168
    8. ' matric' → logprob: -9.421809196472168
    9. ' mat' → logprob: -9.671809196472168
    10. 'm' → logprob: -9.671809196472168

Token 89: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.014981181360781193
    2. 'i' → logprob: -4.264981269836426
    3. 'ix' → logprob: -8.014981269836426
    4. 'ic' → logprob: -8.139981269836426
    5. 'e' → logprob: -9.139981269836426
    6. '```' → logprob: -11.014981269836426
    7. 'u' → logprob: -11.264981269836426
    8. '"""' → logprob: -11.514981269836426
    9. ''''' → logprob: -11.889981269836426
    10. '"""
' → logprob: -12.139981269836426

Token 90: '.
' (ID: 558)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.04888460785150528
    2. 'n' → logprob: -4.423884391784668
    3. 'def' → logprob: -5.173884391784668
    4. '#' → logprob: -5.298884391784668
    5. '[' → logprob: -5.798884391784668
    6. '\' → logprob: -5.798884391784668
    7. 'a' → logprob: -6.048884391784668
    8. 'import' → logprob: -6.048884391784668
    9. '
' → logprob: -6.173884391784668
    10. '\n' → logprob: -6.298884391784668

Token 91: '"""

' (ID: 34508)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.10541871935129166
    2. 'def' → logprob: -3.4804186820983887
    3. 'n' → logprob: -4.355418682098389
    4. '#' → logprob: -4.480418682098389
    5. '\' → logprob: -4.855418682098389
    6. ' 
' → logprob: -5.230418682098389
    7. 'd' → logprob: -5.355418682098389
    8. 'import' → logprob: -5.605418682098389
    9. '\n' → logprob: -5.730418682098389
    10. '[' → logprob: -5.730418682098389

Token 92: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.15351830422878265
    2. '#' → logprob: -3.1535181999206543
    3. 'd' → logprob: -3.1535181999206543
    4. 'def' → logprob: -3.4035181999206543
    5. 'import' → logprob: -4.153518199920654
    6. 'n' → logprob: -5.653518199920654
    7. 'i' → logprob: -6.278518199920654
    8. ' 
' → logprob: -7.653518199920654
    9. '``' → logprob: -8.028518676757812
    10. '
' → logprob: -8.278518676757812

Token 93: ' construire' (ID: 92473)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.3867945373058319
    2. ' recursive' → logprob: -2.3867945671081543
    3. ' recurse' → logprob: -2.6367945671081543
    4. ' partition' → logprob: -3.0117945671081543
    5. ' generate' → logprob: -3.5117945671081543
    6. ' rec' → logprob: -3.7617945671081543
    7. ' f' → logprob: -4.386794567108154
    8. ' construire' → logprob: -4.636794567108154
    9. ' recursion' → logprob: -4.886794567108154
    10. ' matrix' → logprob: -5.511794567108154

Token 94: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.229866161942482
    2. '_m' → logprob: -1.6048661470413208
    3. '_mat' → logprob: -6.229866027832031
    4. '_matrix' → logprob: -6.604866027832031
    5. '_M' → logprob: -7.604866027832031
    6. '_con' → logprob: -8.604866027832031
    7. '_gr' → logprob: -9.479866027832031
    8. '(' → logprob: -9.979866027832031
    9. '_l' → logprob: -10.104866027832031
    10. ' _' → logprob: -10.229866027832031

Token 95: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.0012909513898193836
    2. 'atrix' → logprob: -7.001290798187256
    3. 'at' → logprob: -8.626291275024414
    4. 'a' → logprob: -9.251291275024414
    5. 'atr' → logprob: -10.126291275024414
    6. 'atrices' → logprob: -10.626291275024414
    7. 'atric' → logprob: -11.126291275024414
    8. 'atriz' → logprob: -11.501291275024414
    9. 'atri' → logprob: -12.126291275024414
    10. '_at' → logprob: -12.876291275024414

Token 96: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5039127469062805
    2. '(n' → logprob: -1.2539126873016357
    3. '(' → logprob: -2.2539126873016357
    4. ' (' → logprob: -5.253912925720215
    5. '(
' → logprob: -9.253912925720215
    6. '(size' → logprob: -9.378912925720215
    7. 'def' → logprob: -11.628912925720215
    8. '(s' → logprob: -12.128912925720215
    9. '(T' → logprob: -12.128912925720215
    10. '(t' → logprob: -12.253912925720215

Token 97: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034044671803712845
    2. '):' → logprob: -3.4090447425842285
    3. ')' → logprob: -8.53404426574707
    4. ' ,' → logprob: -9.28404426574707
    5. ' ):' → logprob: -9.40904426574707
    6. ':' → logprob: -11.40904426574707
    7. '):
' → logprob: -11.65904426574707
    8. ',n' → logprob: -13.40904426574707
    9. ',
' → logprob: -13.53404426574707
    10. '   ' → logprob: -13.65904426574707

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33071327209472656
    2. '    
' → logprob: -1.9557132720947266
    3. '
' → logprob: -2.4557132720947266
    4. ' 
' → logprob: -3.4557132720947266
    5. ' A' → logprob: -4.955713272094727
    6. 'A' → logprob: -5.580713272094727
    7. ' import' → logprob: -5.580713272094727
    8. '```' → logprob: -5.580713272094727
    9. 'import' → logprob: -5.955713272094727
    10. '   
' → logprob: -7.830713272094727

Token 99: ' """
' (ID: 7037)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5672795176506042
    2. 'import' → logprob: -1.067279577255249
    3. ' A' → logprob: -2.817279577255249
    4. 'A' → logprob: -3.567279577255249
    5. '   ' → logprob: -7.06727933883667
    6. ' ' → logprob: -9.692279815673828
    7. 'def' → logprob: -10.192279815673828
    8. ' def' → logprob: -10.942279815673828
    9. '```' → logprob: -11.692279815673828
    10. '	import' → logprob: -12.442279815673828

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5316709876060486
    2. '    ' → logprob: -2.6566710472106934
    3. ' Constru' → logprob: -2.7816710472106934
    4. 'Constru' → logprob: -2.7816710472106934
    5. ' if' → logprob: -3.0316710472106934
    6. 'Construct' → logprob: -3.7816710472106934
    7. ' Construct' → logprob: -3.7816710472106934
    8. '"""' → logprob: -4.031671047210693
    9. ' """
' → logprob: -4.156671047210693
    10. ' """' → logprob: -4.281671047210693

Token 101: ' Con' (ID: 1532)
  Prédit: 'Constru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Constru' → logprob: -1.078910231590271
    2. ' Constru' → logprob: -1.953910231590271
    3. 'Construct' → logprob: -2.0789103507995605
    4. ' if' → logprob: -2.3289103507995605
    5. 'Constr' → logprob: -2.7039103507995605
    6. ' Cr' → logprob: -2.9539103507995605
    7. '   ' → logprob: -3.4539103507995605
    8. ' Construct' → logprob: -3.4539103507995605
    9. 'Créer' → logprob: -4.2039103507995605
    10. 'Con' (adapté à ' Con') → logprob: -4.3289103507995605

Token 102: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.05964706465601921
    2. 'stru' → logprob: -3.0596470832824707
    3. 'st' → logprob: -5.059647083282471
    4. 'struct' → logprob: -5.684647083282471
    5. 'stit' → logprob: -7.809647083282471
    6. 't' → logprob: -8.684646606445312
    7. 'tr' → logprob: -8.684646606445312
    8. 's' → logprob: -8.809646606445312
    9. 'struction' → logprob: -9.559646606445312
    10. 'stri' → logprob: -9.559646606445312

Token 103: 'uit' (ID: 2136)
  Prédit: 'uit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uit' → logprob: -0.980666995048523
    2. 'ruit' → logprob: -1.230666995048523
    3. 'uire' → logprob: -1.605666995048523
    4. 'ru' → logprob: -2.4806671142578125
    5. 'u' → logprob: -3.2306671142578125
    6. 'uir' → logprob: -5.1056671142578125
    7. ' u' → logprob: -6.2306671142578125
    8. '_' → logprob: -8.480667114257812
    9. 'uite' → logprob: -9.105667114257812
    10. '   ' → logprob: -9.230667114257812

Token 104: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.17550821602344513
    2. ' ' → logprob: -2.5505082607269287
    3. ' la' → logprob: -2.6755082607269287
    4. ' un' → logprob: -4.42550802230835
    5. 'une' → logprob: -7.67550802230835
    6. ' ' → logprob: -8.050508499145508
    7. '   ' → logprob: -8.550508499145508
    8. 'A' → logprob: -8.550508499145508
    9. ' a' → logprob: -8.550508499145508
    10. 's' → logprob: -8.675508499145508

Token 105: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.3133966028690338
    2. 'mat' → logprob: -1.3133965730667114
    3. ' mat' → logprob: -9.938396453857422
    4. ' matric' → logprob: -10.688396453857422
    5. ' matriz' → logprob: -11.063396453857422
    6. '   ' → logprob: -11.313396453857422
    7. ' ' → logprob: -11.563396453857422
    8. 'matrix' → logprob: -12.688396453857422
    9. ' liste' → logprob: -12.813396453857422
    10. 'mati' → logprob: -12.938396453857422

Token 106: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0004377022560220212
    2. 'ix' → logprob: -8.62543773651123
    3. '   ' → logprob: -9.37543773651123
    4. 'rice' → logprob: -9.62543773651123
    5. 'ixe' → logprob: -10.12543773651123
    6. 'atrice' → logprob: -10.87543773651123
    7. '[]' → logprob: -12.12543773651123
    8. 'ce' → logprob: -12.37543773651123
    9. '#' → logprob: -12.75043773651123
    10. '    ' → logprob: -13.00043773651123

Token 107: ' Nx' (ID: 178338)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13224934041500092
    2. '(N' → logprob: -2.757249355316162
    3. '[N' → logprob: -4.132249355316162
    4. ' numpy' → logprob: -4.382249355316162
    5. ' ' → logprob: -5.132249355316162
    6. ' (' → logprob: -5.507249355316162
    7. '[' → logprob: -5.632249355316162
    8. '(n' → logprob: -5.632249355316162
    9. ' Nx' → logprob: -6.007249355316162
    10. '(np' → logprob: -6.132249355316162

Token 108: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004630816401913762
    2. ' N' → logprob: -8.000463485717773
    3. 'x' → logprob: -9.125463485717773
    4. ' ' → logprob: -11.875463485717773
    5. '   ' → logprob: -13.125463485717773
    6. ' x' → logprob: -14.000463485717773
    7. ',' → logprob: -14.187963485717773
    8. '1' → logprob: -14.187963485717773
    9. '*N' → logprob: -14.187963485717773
    10. '  ' → logprob: -14.312963485717773

Token 109: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12649036943912506
    2. ' avec' → logprob: -2.751490354537964
    3. ' en' → logprob: -3.751490354537964
    4. ',' → logprob: -4.001490592956543
    5. ' ' → logprob: -5.626490592956543
    6. ' de' → logprob: -5.751490592956543
    7. ' à' → logprob: -7.126490592956543
    8. '
' → logprob: -7.376490592956543
    9. '  ' → logprob: -7.376490592956543
    10. ' et' → logprob: -7.501490592956543

Token 110: ' A' (ID: 355)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.11497919261455536
    2. ' les' → logprob: -2.8649792671203613
    3. ' la' → logprob: -3.3649792671203613
    4. ' le' → logprob: -4.739979267120361
    5. ' l' → logprob: -5.989979267120361
    6. '  ' → logprob: -6.614979267120361
    7. ' ' → logprob: -6.864979267120361
    8. ' tous' → logprob: -7.614979267120361
    9. '   ' → logprob: -7.739979267120361
    10. ' toutes' → logprob: -7.739979267120361

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014627409167587757
    2. '[' → logprob: -4.264627456665039
    3. ' =' → logprob: -8.514627456665039
    4. ' [' → logprob: -9.139627456665039
    5. '[u' → logprob: -10.139627456665039
    6. '[int' → logprob: -10.889627456665039
    7. '[I' → logprob: -11.264627456665039
    8. '[j' → logprob: -11.639627456665039
    9. '[
' → logprob: -11.764627456665039
    10. '(i' → logprob: -12.014627456665039

Token 112: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28919580578804016
    2. '][' → logprob: -1.5391957759857178
    3. ',j' → logprob: -3.4141957759857178
    4. ' ,' → logprob: -6.414196014404297
    5. ',i' → logprob: -6.914196014404297
    6. ' ][' → logprob: -7.914196014404297
    7. '   ' → logprob: -8.164196014404297
    8. ']' → logprob: -8.789196014404297
    9. '[i' → logprob: -9.539196014404297
    10. '[' → logprob: -9.789196014404297

Token 113: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0035340175963938236
    2. ']' → logprob: -6.753533840179443
    3. '][' → logprob: -6.753533840179443
    4. 'i' → logprob: -7.378533840179443
    5. ' j' → logprob: -7.628533840179443
    6. ' ][' → logprob: -10.628534317016602
    7. ',' → logprob: -11.003534317016602
    8. ',j' → logprob: -11.128534317016602
    9. ' ]' → logprob: -12.253534317016602
    10. '_j' → logprob: -12.503534317016602

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00027325618430040777
    2. ' ]' → logprob: -9.000273704528809
    3. ']=' → logprob: -9.125273704528809
    4. '"]' → logprob: -11.750273704528809
    5. '   ' → logprob: -11.750273704528809
    6. '],' → logprob: -12.125273704528809
    7. '']' → logprob: -12.625273704528809
    8. ')' → logprob: -12.875273704528809
    9. ',' → logprob: -13.500273704528809
    10. '=' → logprob: -13.625273704528809

Token 115: ' indique' (ID: 97324)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021518105641007423
    2. '=' → logprob: -3.8965179920196533
    3. '   ' → logprob: -7.896518230438232
    4. '    ' → logprob: -8.771517753601074
    5. ' vaut' → logprob: -9.521517753601074
    6. ' est' → logprob: -9.646517753601074
    7. ')' → logprob: -9.771517753601074
    8. '<|end|>' → logprob: -9.771517753601074
    9. ']' → logprob: -10.146517753601074
    10. 's' → logprob: -10.646517753601074

Token 116: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.06824373453855515
    2. 'le' → logprob: -2.9432437419891357
    3. ' la' → logprob: -4.568243503570557
    4. '   ' → logprob: -7.068243503570557
    5. ' l' → logprob: -7.818243503570557
    6. 'niveau' → logprob: -7.818243503570557
    7. 'l' → logprob: -8.068243980407715
    8. ' ' → logprob: -8.693243980407715
    9. 's' → logprob: -8.693243980407715
    10. '_le' → logprob: -8.818243980407715

Token 117: ' niveau' (ID: 21708)
  Prédit: ' niveau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' niveau' → logprob: -0.5240350961685181
    2. 'niveau' → logprob: -0.8990350961685181
    3. ' profondeur' → logprob: -8.274035453796387
    4. 'pro' → logprob: -9.149035453796387
    5. ' degré' → logprob: -9.774035453796387
    6. 'nombre' → logprob: -9.774035453796387
    7. ' nombre' → logprob: -10.024035453796387
    8. 'plus' → logprob: -10.149035453796387
    9. ' niveaux' → logprob: -10.399035453796387
    10. ' ' → logprob: -10.399035453796387

Token 118: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0029385981615632772
    2. 'de' → logprob: -6.877938747406006
    3. ' d' → logprob: -7.627938747406006
    4. ' ' → logprob: -7.752938747406006
    5. ' du' → logprob: -8.252938270568848
    6. '_de' → logprob: -8.377938270568848
    7. '    ' → logprob: -8.377938270568848
    8. '_' → logprob: -9.877938270568848
    9. ' of' → logprob: -10.127938270568848
    10. ' des' → logprob: -10.502938270568848

Token 119: ' la' (ID: 557)
  Prédit: ' profondeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' profondeur' → logprob: -0.46473580598831177
    2. ' réc' → logprob: -1.589735746383667
    3. 'r' → logprob: -1.964735746383667
    4. 'pro' → logprob: -4.964735984802246
    5. 'rec' → logprob: -4.964735984802246
    6. ' profond' → logprob: -5.589735984802246
    7. ' recursion' → logprob: -5.589735984802246
    8. ' r' → logprob: -6.089735984802246
    9. ' prof' → logprob: -7.589735984802246
    10. ' partition' → logprob: -7.714735984802246

Token 120: ' première' (ID: 23423)
  Prédit: ' réc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.4742327332496643
    2. 'r' → logprob: -1.4742326736450195
    3. ' partition' → logprob: -2.4742326736450195
    4. ' profondeur' → logprob: -3.4742326736450195
    5. 'rec' → logprob: -4.4742326736450195
    6. 'partition' → logprob: -5.0992326736450195
    7. ' recursion' → logprob: -5.2242326736450195
    8. ' r' → logprob: -5.2242326736450195
    9. ' ' → logprob: -7.3492326736450195
    10. 'ré' → logprob: -7.4742326736450195

Token 121: ' diss' (ID: 32434)
  Prédit: ' partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.30224406719207764
    2. 'partition' → logprob: -1.5522440671920776
    3. ' séparation' → logprob: -3.302244186401367
    4. ' division' → logprob: -6.177244186401367
    5. 'division' → logprob: -6.302244186401367
    6. ' sé' → logprob: -6.802244186401367
    7. 'diff' → logprob: -6.802244186401367
    8. 'sé' → logprob: -6.927244186401367
    9. ' différence' → logprob: -7.052244186401367
    10. ' ' → logprob: -7.052244186401367

Token 122: 'ociation' (ID: 29498)
  Prédit: 'ociation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ociation' → logprob: -0.515701413154602
    2. 'olution' → logprob: -1.515701413154602
    3. 'ipation' → logprob: -3.0157012939453125
    4. 'oc' → logprob: -3.1407012939453125
    5. 'e' → logprob: -3.3907012939453125
    6. 'u' → logprob: -4.6407012939453125
    7. '```' → logprob: -4.8907012939453125
    8. 'é' → logprob: -5.1407012939453125
    9. 'ection' → logprob: -5.3907012939453125
    10. 'o' → logprob: -5.8907012939453125

Token 123: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2163928747177124
    2. ' entre' → logprob: -1.7163928747177124
    3. ' de' → logprob: -4.966392993927002
    4. ' du' → logprob: -5.466392993927002
    5. ' ' → logprob: -6.841392993927002
    6. ' between' → logprob: -7.591392993927002
    7. ' dans' → logprob: -7.966392993927002
    8. 'des' → logprob: -8.591392517089844
    9. ',' → logprob: -8.716392517089844
    10. 'entre' → logprob: -8.716392517089844

Token 124: '   ' (ID: 271)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.49865663051605225
    2. ' des' → logprob: -1.6236566305160522
    3. ' de' → logprob: -2.873656749725342
    4. '   ' → logprob: -2.998656749725342
    5. ' du' → logprob: -3.873656749725342
    6. '    ' → logprob: -4.248656749725342
    7. ' à' → logprob: -4.498656749725342
    8. ',' → logprob: -4.623656749725342
    9. ' ' → logprob: -4.873656749725342
    10. ' dans' → logprob: -4.998656749725342

Token 125: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.0054571628570557
    2. ' du' → logprob: -1.8804571628570557
    3. ' des' → logprob: -2.0054571628570557
    4. ' de' → logprob: -2.3804571628570557
    5. ' à' → logprob: -2.5054571628570557
    6. ' dans' → logprob: -3.0054571628570557
    7. ' effectu' → logprob: -3.1304571628570557
    8. '   ' → logprob: -3.7554571628570557
    9. ' où' → logprob: -4.380456924438477
    10. ' qui' → logprob: -4.380456924438477

Token 126: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19324226677417755
    2. ' les' → logprob: -2.318242311477661
    3. 'i' → logprob: -2.818242311477661
    4. 'les' → logprob: -4.193242073059082
    5. ' l' → logprob: -6.568242073059082
    6. 'l' → logprob: -7.818242073059082
    7. ' la' → logprob: -9.068242073059082
    8. ' indices' → logprob: -9.443242073059082
    9. ' ' → logprob: -9.693242073059082
    10. ' deux' → logprob: -10.068242073059082

Token 127: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.4039783179759979
    2. 'i' → logprob: -1.9039783477783203
    3. 'ense' → logprob: -2.6539783477783203
    4. ' indices' → logprob: -3.1539783477783203
    5. 's' → logprob: -3.2789783477783203
    6. 'de' → logprob: -4.52897834777832
    7. 'index' → logprob: -5.27897834777832
    8. ' sous' → logprob: -5.77897834777832
    9. ' i' → logprob: -5.90397834777832
    10. 'ensemble' → logprob: -6.02897834777832

Token 128: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018705496564507484
    2. 'i' → logprob: -4.018705368041992
    3. '   ' → logprob: -7.768705368041992
    4. ' de' → logprob: -10.518705368041992
    5. ' (' → logprob: -10.518705368041992
    6. ' ' → logprob: -10.768705368041992
    7. '    ' → logprob: -10.768705368041992
    8. ' des' → logprob: -11.643705368041992
    9. ' ' → logprob: -11.643705368041992
    10. '```' → logprob: -12.518705368041992

Token 129: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.07672622054815292
    2. 'et' → logprob: -2.701726198196411
    3. ',' → logprob: -5.45172643661499
    4. ' and' → logprob: -6.45172643661499
    5. ' ' → logprob: -7.82672643661499
    6. '   ' → logprob: -8.201725959777832
    7. '    ' → logprob: -9.951725959777832
    8. ' и' → logprob: -9.951725959777832
    9. 'and' → logprob: -10.201725959777832
    10. ' ,' → logprob: -10.826725959777832

Token 130: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.12694701552391052
    2. 'j' → logprob: -2.1269469261169434
    3. ' ' → logprob: -11.501947402954102
    4. ' ' → logprob: -12.251947402954102
    5. '	j' → logprob: -13.751947402954102
    6. '```' → logprob: -13.751947402954102
    7. '   ' → logprob: -14.376947402954102
    8. '  ' → logprob: -14.751947402954102
    9. '    ' → logprob: -14.876947402954102
    10. '_j' → logprob: -15.751947402954102

Token 131: ' lors' (ID: 15456)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11959660053253174
    2. ',' → logprob: -2.494596481323242
    3. '.' → logprob: -4.869596481323242
    4. '"""
' → logprob: -4.869596481323242
    5. '
' → logprob: -5.119596481323242
    6. '\n' → logprob: -6.244596481323242
    7. ')' → logprob: -6.494596481323242
    8. '"""' → logprob: -6.869596481323242
    9. '.
' → logprob: -7.119596481323242
    10. '```' → logprob: -7.119596481323242

Token 132: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1565815657377243
    2. ' d' → logprob: -2.5315816402435303
    3. ' la' → logprob: -3.2815816402435303
    4. 'de' → logprob: -4.281581401824951
    5. ' du' → logprob: -4.656581401824951
    6. 'd' → logprob: -5.781581401824951
    7. ' ' → logprob: -8.15658187866211
    8. '   ' → logprob: -8.15658187866211
    9. 'du' → logprob: -8.53158187866211
    10. 'la' → logprob: -9.03158187866211

Token 133: ''un' (ID: 9788)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25765460729599
    2. ''une' → logprob: -2.5076546669006348
    3. ''' → logprob: -3.1326546669006348
    4. 'e' → logprob: -3.5076546669006348
    5. ' la' → logprob: -3.6326546669006348
    6. 'la' → logprob: -3.6326546669006348
    7. ''un' → logprob: -5.132654666900635
    8. 'une' → logprob: -5.632654666900635
    9. 'l' → logprob: -6.007654666900635
    10. 'u' → logprob: -6.132654666900635

Token 134: ' partition' (ID: 31512)
  Prédit: ' partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.25684112310409546
    2. ' décou' → logprob: -2.2568411827087402
    3. ' processus' → logprob: -3.1318411827087402
    4. ' sch' → logprob: -3.5068411827087402
    5. 'partition' → logprob: -3.6318411827087402
    6. ' regroup' → logprob: -5.00684118270874
    7. ' process' → logprob: -5.75684118270874
    8. ' appel' → logprob: -5.88184118270874
    9. 'e' → logprob: -6.25684118270874
    10. 'part' → logprob: -6.50684118270874

Token 135: 'nement' (ID: 15738)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.789693295955658
    2. '   ' → logprob: -1.5396933555603027
    3. ' de' → logprob: -2.1646933555603027
    4. 'nement' → logprob: -2.6646933555603027
    5. ' ' → logprob: -2.7896933555603027
    6. 'ation' → logprob: -3.0396933555603027
    7. ' des' → logprob: -4.414693355560303
    8. '_' → logprob: -4.789693355560303
    9. 'naire' → logprob: -6.289693355560303
    10. '  ' → logprob: -6.289693355560303

Token 136: ' réc' (ID: 36254)
  Prédit: ' réc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' réc' → logprob: -0.5187000632286072
    2. ' des' → logprob: -1.893700122833252
    3. ' recursive' → logprob: -1.893700122833252
    4. ' rec' → logprob: -3.518700122833252
    5. ' de' → logprob: -3.768700122833252
    6. ' du' → logprob: -4.143700122833252
    7. '.' → logprob: -4.768700122833252
    8. ' recursively' → logprob: -4.768700122833252
    9. ' en' → logprob: -5.518700122833252
    10. ' success' → logprob: -6.393700122833252

Token 137: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.2838265299797058
    2. 'u' → logprob: -2.1588265895843506
    3. 'ursive' → logprob: -2.2838265895843506
    4. 'ur' → logprob: -4.0338263511657715
    5. '   ' → logprob: -5.2838263511657715
    6. 'urrent' → logprob: -6.5338263511657715
    7. '-' → logprob: -7.1588263511657715
    8. 'ursion' → logprob: -7.2838263511657715
    9. ' ' → logprob: -7.4088263511657715
    10. '       ' → logprob: -7.7838263511657715

Token 138: 'if' (ID: 366)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3343493342399597
    2. 'e' → logprob: -1.7093493938446045
    3. '   ' → logprob: -2.9593493938446045
    4. ' ent' → logprob: -4.709349155426025
    5. 'er' → logprob: -5.209349155426025
    6. ' en' → logprob: -5.709349155426025
    7. 'atif' → logprob: -5.709349155426025
    8. 'aire' → logprob: -5.959349155426025
    9. 'ente' → logprob: -6.084349155426025
    10. 'es' → logprob: -6.209349155426025

Token 139: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29105594754219055
    2. '.' → logprob: -1.6660559177398682
    3. ',' → logprob: -2.916055917739868
    4. ' de' → logprob: -5.791056156158447
    5. '.
' → logprob: -6.541056156158447
    6. 'def' → logprob: -7.291056156158447
    7. ',
' → logprob: -7.291056156158447
    8. '    
' → logprob: -7.541056156158447
    9. ' ,' → logprob: -8.291055679321289
    10. ' ' → logprob: -8.291055679321289

Token 140: ' dich' (ID: 16637)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7452536225318909
    2. ' ' → logprob: -1.245253562927246
    3. ' deux' → logprob: -2.120253562927246
    4. 'div' → logprob: -4.370253562927246
    5. ' moitié' → logprob: -4.495253562927246
    6. ' la' → logprob: -4.870253562927246
    7. 'division' → logprob: -4.870253562927246
    8. ' powers' → logprob: -5.495253562927246
    9. ' b' → logprob: -5.620253562927246
    10. ' rapport' → logprob: -5.620253562927246

Token 141: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.052113208919763565
    2. 'otom' → logprob: -3.9271132946014404
    3. 'o' → logprob: -4.552113056182861
    4. 'oto' → logprob: -4.802113056182861
    5. 'otomy' → logprob: -4.927113056182861
    6. '   ' → logprob: -6.552113056182861
    7. '```' → logprob: -7.052113056182861
    8. '**' → logprob: -7.927113056182861
    9. '"' → logprob: -8.17711353302002
    10. '-' → logprob: -8.42711353302002

Token 142: 'omie' (ID: 115249)
  Prédit: 'omie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omie' → logprob: -0.06252170354127884
    2. 'om' → logprob: -3.1875216960906982
    3. 'mie' → logprob: -4.187521934509277
    4. 'm' → logprob: -6.562521934509277
    5. 'im' → logprob: -7.437521934509277
    6. 'o' → logprob: -7.687521934509277
    7. '
' → logprob: -8.812521934509277
    8. 'ie' → logprob: -8.812521934509277
    9. '"' → logprob: -8.937521934509277
    10. '**' → logprob: -9.062521934509277

Token 143: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08331289887428284
    2. '.' → logprob: -3.33331298828125
    3. ',' → logprob: -3.58331298828125
    4. ')' → logprob: -5.20831298828125
    5. '
' → logprob: -5.70831298828125
    6. ',
' → logprob: -6.08331298828125
    7. ':' → logprob: -7.20831298828125
    8. '"""' → logprob: -7.20831298828125
    9. '.
' → logprob: -7.33331298828125
    10. '    
' → logprob: -7.33331298828125

Token 144: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003377695567905903
    2. '"""' → logprob: -5.878377914428711
    3. '    
' → logprob: -8.128377914428711
    4. '"""
' → logprob: -9.503377914428711
    5. '
' → logprob: -9.753377914428711
    6. ' """' → logprob: -10.128377914428711
    7. 'def' → logprob: -10.628377914428711
    8. '\n' → logprob: -10.753377914428711
    9. ')' → logprob: -11.128377914428711
    10. '"' → logprob: -11.878377914428711

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03148079290986061
    2. '"""' → logprob: -4.03148078918457
    3. ' """' → logprob: -5.03148078918457
    4. '    
' → logprob: -6.28148078918457
    5. ' """
' → logprob: -6.40648078918457
    6. '"""
' → logprob: -6.65648078918457
    7. '
' → logprob: -7.78148078918457
    8. 'def' → logprob: -7.90648078918457
    9. '    ' → logprob: -8.15648078918457
    10. ' def' → logprob: -8.65648078918457

Token 146: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1262158453464508
    2. 'A' → logprob: -2.376215934753418
    3. ' A' → logprob: -4.626215934753418
    4. 'import' → logprob: -5.376215934753418
    5. 'def' → logprob: -5.626215934753418
    6. ' ' → logprob: -5.876215934753418
    7. '"""
' → logprob: -6.251215934753418
    8. '"""' → logprob: -7.376215934753418
    9. '  ' → logprob: -7.876215934753418
    10. 'La' → logprob: -8.126215934753418

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2743253707885742
    2. ' :' → logprob: -2.524325370788574
    3. '   ' → logprob: -3.024325370788574
    4. ',' → logprob: -3.024325370788574
    5. '(N' → logprob: -3.149325370788574
    6. '):' → logprob: -5.774325370788574
    7. ' (' → logprob: -6.149325370788574
    8. '[N' → logprob: -6.149325370788574
    9. '[' → logprob: -6.274325370788574
    10. '```' → logprob: -6.399325370788574

Token 148: '       ' (ID: 309)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.41244176030158997
    2. '   ' → logprob: -1.7874417304992676
    3. ' self' → logprob: -2.6624417304992676
    4. 'N' → logprob: -3.0374417304992676
    5. 'self' → logprob: -3.9124417304992676
    6. 'n' → logprob: -4.162441730499268
    7. '    ' → logprob: -4.287441730499268
    8. ' n' → logprob: -5.912441730499268
    9. ' ' → logprob: -7.662441730499268
    10. ' ' → logprob: -9.287442207336426

Token 149: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0029309913516044617
    2. 'int' → logprob: -6.627931118011475
    3. ' N' → logprob: -6.752931118011475
    4. '   ' → logprob: -8.377930641174316
    5. 'self' → logprob: -8.627930641174316
    6. ' int' → logprob: -11.127930641174316
    7. 'n' → logprob: -11.877930641174316
    8. ' ' → logprob: -13.127930641174316
    9. '
' → logprob: -13.627930641174316
    10. ' self' → logprob: -13.627930641174316

Token 150: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08276423066854477
    2. ' :' → logprob: -3.332764148712158
    3. '):' → logprob: -3.332764148712158
    4. ':int' → logprob: -5.332764148712158
    5. ' ):' → logprob: -6.207764148712158
    6. '):
' → logprob: -7.082764148712158
    7. ')' → logprob: -8.832764625549316
    8. 'int' → logprob: -10.332764625549316
    9. '=int' → logprob: -10.582764625549316
    10. '(int' → logprob: -10.707764625549316

Token 151: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015923861414194107
    2. ' int' → logprob: -4.265923976898193
    3. '):' → logprob: -6.890923976898193
    4. ')' → logprob: -7.390923976898193
    5. ':int' → logprob: -9.390923500061035
    6. '[int' → logprob: -11.140923500061035
    7. '):
' → logprob: -12.015923500061035
    8. ' ):' → logprob: -12.015923500061035
    9. '=int' → logprob: -12.265923500061035
    10. ':' → logprob: -12.390923500061035

Token 152: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016266146674752235
    2. ')' → logprob: -4.391266345977783
    3. '):
' → logprob: -6.141266345977783
    4. ' ):' → logprob: -6.641266345977783
    5. ',' → logprob: -8.391265869140625
    6. '   ' → logprob: -10.391265869140625
    7. ':' → logprob: -11.391265869140625
    8. ' )' → logprob: -11.891265869140625
    9. '):

' → logprob: -12.766265869140625
    10. '=' → logprob: -13.266265869140625

Token 153: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.2789894640445709
    2. ' la' → logprob: -2.153989553451538
    3. ' Taille' → logprob: -2.528989553451538
    4. 'La' → logprob: -3.528989553451538
    5. 'T' → logprob: -4.903989315032959
    6. ' Le' → logprob: -5.403989315032959
    7. ' taille' → logprob: -5.903989315032959
    8. ' T' → logprob: -6.403989315032959
    9. ' Nombre' → logprob: -7.528989315032959
    10. ' int' → logprob: -8.153989791870117

Token 154: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.006455062422901392
    2. ' ' → logprob: -6.131454944610596
    3. ' nombre' → logprob: -6.381454944610596
    4. 'tail' → logprob: -6.631454944610596
    5. ' dimension' → logprob: -6.881454944610596
    6. ' size' → logprob: -10.131455421447754
    7. '   ' → logprob: -10.131455421447754
    8. ' ' → logprob: -10.631455421447754
    9. 'nombre' → logprob: -10.631455421447754
    10. ' tail' → logprob: -10.881455421447754

Token 155: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.011595913209021091
    2. ' du' → logprob: -5.136595726013184
    3. ')' → logprob: -5.761595726013184
    4. ' )' → logprob: -6.636595726013184
    5. ',' → logprob: -8.011595726013184
    6. ' des' → logprob: -8.136595726013184
    7. ' ' → logprob: -8.136595726013184
    8. ' of' → logprob: -9.261595726013184
    9. 'de' → logprob: -9.636595726013184
    10. ' maximale' → logprob: -10.636595726013184

Token 156: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.483473002910614
    2. ' l' → logprob: -1.1084730625152588
    3. 'l' → logprob: -3.108473062515259
    4. 'la' → logprob: -5.10847282409668
    5. ' ' → logprob: -6.10847282409668
    6. ' N' → logprob: -8.85847282409668
    7. ' ' → logprob: -9.23347282409668
    8. ' the' → logprob: -10.35847282409668
    9. 'N' → logprob: -11.23347282409668
    10. ')' → logprob: -11.35847282409668

Token 157: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.587788999080658
    2. 'mat' → logprob: -0.837788999080658
    3. 'ensemble' → logprob: -5.337789058685303
    4. ' ensemble' → logprob: -5.712789058685303
    5. 'matrix' → logprob: -7.587789058685303
    6. ' ' → logprob: -8.087788581848145
    7. ' matrix' → logprob: -8.087788581848145
    8. ' matric' → logprob: -8.337788581848145
    9. ' liste' → logprob: -8.462788581848145
    10. ' partition' → logprob: -8.462788581848145

Token 158: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.2983168959617615
    2. 'tr' → logprob: -1.7983169555664062
    3. 'atrice' → logprob: -3.4233169555664062
    4. 'rice' → logprob: -4.173316955566406
    5. 'tre' → logprob: -4.673316955566406
    6. '```' → logprob: -5.173316955566406
    7. 't' → logprob: -5.173316955566406
    8. '   ' → logprob: -5.423316955566406
    9. 'î' → logprob: -5.673316955566406
    10. 'ix' → logprob: -6.548316955566406

Token 159: ' carr' (ID: 18321)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6471177339553833
    2. '   ' → logprob: -1.7721177339553833
    3. '
' → logprob: -2.3971176147460938
    4. '):
' → logprob: -2.3971176147460938
    5. '):' → logprob: -3.0221176147460938
    6. ')
' → logprob: -3.1471176147460938
    7. ')\' → logprob: -4.272117614746094
    8. '```' → logprob: -4.897117614746094
    9. ',' → logprob: -5.897117614746094
    10. '\n' → logprob: -6.522117614746094

Token 160: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.005727082025259733
    2. 'ée' → logprob: -5.255727291107178
    3. 'éc' → logprob: -8.00572681427002
    4. 'és' → logprob: -9.50572681427002
    5. 'rée' → logprob: -11.13072681427002
    6. 'cé' → logprob: -11.25572681427002
    7. 'cée' → logprob: -11.63072681427002
    8. ' carré' → logprob: -11.63072681427002
    9. 'è' → logprob: -12.88072681427002
    10. '```' → logprob: -13.00572681427002

Token 161: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024284685030579567
    2. '):' → logprob: -3.774284601211548
    3. '):
' → logprob: -8.024284362792969
    4. ',' → logprob: -8.024284362792969
    5. ' )' → logprob: -9.149284362792969
    6. ').' → logprob: -9.399284362792969
    7. ')\' → logprob: -9.774284362792969
    8. ')
' → logprob: -9.774284362792969
    9. '   ' → logprob: -10.024284362792969
    10. '),' → logprob: -11.149284362792969

Token 162: ' construire' (ID: 92473)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.2834945321083069
    2. ' construire' → logprob: -1.408494472503662
    3. ' créer' → logprob: -6.908494472503662
    4. '   ' → logprob: -8.03349494934082
    5. 'g' → logprob: -8.15849494934082
    6. ' génér' → logprob: -8.15849494934082
    7. 'construct' → logprob: -8.78349494934082
    8. ' constru' → logprob: -9.78349494934082
    9. '```' → logprob: -10.40849494934082
    10. ' construir' → logprob: -10.90849494934082

Token 163: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6432712078094482
    2. '   ' → logprob: -1.1432712078094482
    3. '):
' → logprob: -2.1432712078094482
    4. '):' → logprob: -3.6432712078094482
    5. ')
' → logprob: -5.268271446228027
    6. '
' → logprob: -6.018271446228027
    7. '```' → logprob: -6.643271446228027
    8. ')\' → logprob: -7.143271446228027
    9. ',' → logprob: -7.393271446228027
    10. '):
' → logprob: -7.393271446228027

Token 164: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5980403423309326
    2. '"""
' → logprob: -1.5980403423309326
    3. '    
' → logprob: -2.0980403423309326
    4. '
' → logprob: -2.9730403423309326
    5. ')' → logprob: -3.8480403423309326
    6. '"""' → logprob: -4.098040580749512
    7. '  
' → logprob: -4.348040580749512
    8. '\n' → logprob: -4.723040580749512
    9. '""' → logprob: -5.598040580749512
    10. ')
' → logprob: -5.598040580749512

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2540041208267212
    2. 'Returns' → logprob: -1.5040041208267212
    3. ' Returns' → logprob: -6.504004001617432
    4. '    
' → logprob: -8.25400447845459
    5. 'Retour' → logprob: -9.25400447845459
    6. '"""
' → logprob: -9.62900447845459
    7. '"""' → logprob: -10.12900447845459
    8. 'returns' → logprob: -10.75400447845459
    9. '
' → logprob: -10.87900447845459
    10. '       ' → logprob: -11.00400447845459

Token 166: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.0001347672223346308
    2. ' Returns' → logprob: -9.750134468078613
    3. 'Retour' → logprob: -10.375134468078613
    4. '   ' → logprob: -10.625134468078613
    5. 'returns' → logprob: -11.500134468078613
    6. 'Return' → logprob: -12.000134468078613
    7. '"""
' → logprob: -12.750134468078613
    8. '```' → logprob: -14.500134468078613
    9. '
' → logprob: -14.625134468078613
    10. 'return' → logprob: -15.500134468078613

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.159675121307373
    2. ' :' → logprob: -1.159675121307373
    3. 'A' → logprob: -1.909675121307373
    4. ' ' → logprob: -2.284675121307373
    5. ' A' → logprob: -3.159675121307373
    6. '   ' → logprob: -3.909675121307373
    7. ' ' → logprob: -4.284675121307373
    8. '  ' → logprob: -4.409675121307373
    9. '```' → logprob: -4.409675121307373
    10. ' None' → logprob: -5.534675121307373

Token 168: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37131109833717346
    2. ' A' → logprob: -1.246311068534851
    3. 'A' → logprob: -4.996311187744141
    4. ' None' → logprob: -5.121311187744141
    5. ' [[' → logprob: -5.496311187744141
    6. '    ' → logprob: -6.246311187744141
    7. ' [' → logprob: -6.371311187744141
    8. ' np' → logprob: -6.871311187744141
    9. 'None' → logprob: -8.37131118774414
    10. '[' → logprob: -8.62131118774414

Token 169: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8634498715400696
    2. 'list' (adapté à ' list') → logprob: -0.8634498715400696
    3. 'List' → logprob: -3.238449811935425
    4. ' np' → logprob: -3.488449811935425
    5. 'np' → logprob: -3.738449811935425
    6. ' List' → logprob: -3.738449811935425
    7. 'A' → logprob: -4.488450050354004
    8. ' numpy' → logprob: -4.488450050354004
    9. ' A' → logprob: -4.613450050354004
    10. 'numpy' → logprob: -5.488450050354004

Token 170: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0052153789438307285
    2. '[List' → logprob: -5.380215167999268
    3. ' of' → logprob: -8.005215644836426
    4. '[' → logprob: -8.630215644836426
    5. 'of' → logprob: -11.255215644836426
    6. ' de' → logprob: -11.380215644836426
    7. '   ' → logprob: -11.380215644836426
    8. '[[' → logprob: -11.755215644836426
    9. ':' → logprob: -12.005215644836426
    10. '[
' → logprob: -12.005215644836426

Token 171: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0003542926860973239
    2. 'int' → logprob: -8.125354766845703
    3. '<int' → logprob: -10.250354766845703
    4. ']int' → logprob: -11.000354766845703
    5. '[' → logprob: -12.250354766845703
    6. ']' → logprob: -14.375354766845703
    7. ']]' → logprob: -14.875354766845703
    8. '(int' → logprob: -15.000354766845703
    9. '```' → logprob: -17.125354766845703
    10. '   ' → logprob: -17.375354766845703

Token 172: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.00020449401927180588
    2. ']]]' → logprob: -8.625204086303711
    3. ']]:
' → logprob: -11.250204086303711
    4. ' ]]' → logprob: -12.625204086303711
    5. ']]

' → logprob: -12.875204086303711
    6. ']' → logprob: -13.250204086303711
    7. ']]
' → logprob: -13.875204086303711
    8. ']])' → logprob: -13.875204086303711
    9. '']]' → logprob: -14.750204086303711
    10. '[' → logprob: -14.875204086303711

Token 173: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014760562917217612
    2. 'A' → logprob: -7.501476287841797
    3. ':
' → logprob: -7.751476287841797
    4. ' :' → logprob: -8.251476287841797
    5. '   ' → logprob: -9.126476287841797
    6. '[int' → logprob: -10.501476287841797
    7. '[' → logprob: -10.501476287841797
    8. '):' → logprob: -11.376476287841797
    9. ']:' → logprob: -11.626476287841797
    10. ' ' → logprob: -11.876476287841797

Token 174: ' La' (ID: 3038)
  Prédit: ' La'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.6945275664329529
    2. 'La' → logprob: -0.8195275664329529
    3. 'Une' → logprob: -3.4445276260375977
    4. ' Une' → logprob: -4.319527626037598
    5. '   ' → logprob: -5.194527626037598
    6. 'M' → logprob: -5.444527626037598
    7. ' Mat' → logprob: -6.069527626037598
    8. ' la' → logprob: -7.319527626037598
    9. ' matr' → logprob: -7.444527626037598
    10. 'A' → logprob: -7.569527626037598

Token 175: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.16035360097885132
    2. 'mat' → logprob: -1.910353660583496
    3. ' ' → logprob: -10.660353660583496
    4. '   ' → logprob: -10.785353660583496
    5. ' liste' → logprob: -10.910353660583496
    6. 'matrix' → logprob: -10.910353660583496
    7. ' ' → logprob: -11.535353660583496
    8. ' matric' → logprob: -11.660353660583496
    9. 'A' → logprob: -11.910353660583496
    10. ' matriz' → logprob: -11.910353660583496

Token 176: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00031580092036165297
    2. 'rice' → logprob: -8.62531566619873
    3. 'ix' → logprob: -9.12531566619873
    4. '[' → logprob: -11.25031566619873
    5. 'ce' → logprob: -12.50031566619873
    6. '   ' → logprob: -12.50031566619873
    7. 'atrice' → logprob: -14.00031566619873
    8. 'ixe' → logprob: -14.00031566619873
    9. '[[' → logprob: -14.25031566619873
    10. '```' → logprob: -14.25031566619873

Token 177: ' constru' (ID: 14218)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3421425521373749
    2. ' A' → logprob: -2.0921425819396973
    3. ' de' → logprob: -2.0921425819396973
    4. '   ' → logprob: -4.467142581939697
    5. '[N' → logprob: -4.842142581939697
    6. ' des' → logprob: -5.217142581939697
    7. '[
' → logprob: -5.217142581939697
    8. ' ' → logprob: -5.717142581939697
    9. '[' → logprob: -5.717142581939697
    10. 'de' → logprob: -6.342142581939697

Token 178: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -4.3464544432936236e-05
    2. ' ite' → logprob: -11.250043869018555
    3. 'it' → logprob: -11.500043869018555
    4. 'e' → logprob: -11.750043869018555
    5. 'ited' → logprob: -12.875043869018555
    6. '#' → logprob: -13.125043869018555
    7. '   ' → logprob: -13.625043869018555
    8. 'ie' → logprob: -13.875043869018555
    9. '```' → logprob: -14.500043869018555
    10. 'ed' → logprob: -14.500043869018555

Token 179: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009337624534964561
    2. '.' → logprob: -5.884337425231934
    3. '```' → logprob: -6.259337425231934
    4. ',' → logprob: -6.384337425231934
    5. '
' → logprob: -7.134337425231934
    6. ')' → logprob: -7.259337425231934
    7. '    
' → logprob: -8.009337425231934
    8. 'A' → logprob: -8.634337425231934
    9. ':' → logprob: -8.634337425231934
    10. ']' → logprob: -8.634337425231934

Token 180: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4430502951145172
    2. ' le' → logprob: -1.4430502653121948
    3. 'le' → logprob: -3.0680503845214844
    4. 'la' → logprob: -3.9430503845214844
    5. '[N' → logprob: -4.193050384521484
    6. ' N' → logprob: -4.568050384521484
    7. '   ' → logprob: -4.943050384521484
    8. 'N' → logprob: -5.693050384521484
    9. ' l' → logprob: -5.818050384521484
    10. ' les' → logprob: -5.818050384521484

Token 181: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.19192221760749817
    2. 'a' → logprob: -2.066922187805176
    3. ''' → logprob: -4.191922187805176
    4. ''appro' → logprob: -4.191922187805176
    5. 'es' → logprob: -4.316922187805176
    6. ''ordre' → logprob: -7.566922187805176
    7. ''idée' → logprob: -7.816922187805176
    8. ''application' → logprob: -8.191922187805176
    9. ''esprit' → logprob: -8.441922187805176
    10. '   ' → logprob: -8.691922187805176

Token 182: 'alg' (ID: 15258)
  Prédit: 'alg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alg' → logprob: -0.30544623732566833
    2. 'sch' → logprob: -2.055446147918701
    3. ''' → logprob: -3.680446147918701
    4. '"' → logprob: -3.930446147918701
    5. 'appro' → logprob: -4.055446147918701
    6. 'r' → logprob: -4.305446147918701
    7. 'ordre' → logprob: -5.055446147918701
    8. 'mé' → logprob: -5.055446147918701
    9. 'partition' → logprob: -5.180446147918701
    10. '"""
' → logprob: -5.555446147918701

Token 183: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.00163662014529109
    2. 'orithm' → logprob: -6.626636505126953
    3. 'o' → logprob: -8.876636505126953
    4. 'orit' → logprob: -10.001636505126953
    5. '[' → logprob: -10.126636505126953
    6. 'or' → logprob: -10.376636505126953
    7. 'e' → logprob: -11.376636505126953
    8. '```' → logprob: -11.501636505126953
    9. 'ory' → logprob: -12.251636505126953
    10. '`' → logprob: -12.751636505126953

Token 184: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -1.6405310816480778e-05
    2. 'e' → logprob: -11.375016212463379
    3. 'm' → logprob: -12.500016212463379
    4. 'mes' → logprob: -15.000016212463379
    5. 'hme' → logprob: -15.500016212463379
    6. 'ème' → logprob: -15.875016212463379
    7. 'Me' → logprob: -16.000017166137695
    8. '```' → logprob: -16.375017166137695
    9. 'ме' → logprob: -16.875017166137695
    10. '   ' → logprob: -16.875017166137695

Token 185: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.201425552368164
    2. '   ' → logprob: -1.201425552368164
    3. '.' → logprob: -1.826425552368164
    4. ']
' → logprob: -2.201425552368164
    5. '.
' → logprob: -3.326425552368164
    6. ' de' → logprob: -3.951425552368164
    7. '
' → logprob: -4.326425552368164
    8. ' complète' → logprob: -4.576425552368164
    9. 'def' → logprob: -4.701425552368164
    10. 'de' → logprob: -4.826425552368164

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014264107681810856
    2. '"""' → logprob: -4.514264106750488
    3. ')' → logprob: -6.514264106750488
    4. '    
' → logprob: -7.264264106750488
    5. '
' → logprob: -7.514264106750488
    6. ' """' → logprob: -8.889264106750488
    7. '"""
' → logprob: -8.889264106750488
    8. '```' → logprob: -10.264264106750488
    9. 'def' → logprob: -10.514264106750488
    10. '"""

' → logprob: -10.889264106750488

Token 187: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006967081688344479
    2. '"""
' (adapté à ' """
') → logprob: -5.256967067718506
    3. '"""' → logprob: -6.756967067718506
    4. ' """
' → logprob: -8.381967544555664
    5. '    ' → logprob: -8.506967544555664
    6. '
' → logprob: -10.381967544555664
    7. ' """' → logprob: -10.506967544555664
    8. '""' → logprob: -10.506967544555664
    9. '    
' → logprob: -10.881967544555664
    10. '"""

' → logprob: -11.631967544555664

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016384923947043717
    2. '    
' → logprob: -8.750164031982422
    3. '
' → logprob: -13.000164031982422
    4. 'import' → logprob: -13.250164031982422
    5. 'A' → logprob: -14.125164031982422
    6. '```' → logprob: -15.625164031982422
    7. '   ' → logprob: -15.625164031982422
    8. 'def' → logprob: -16.375164031982422
    9. ' A' → logprob: -16.750164031982422
    10. '    
    
' → logprob: -16.875164031982422

Token 189: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002505743643268943
    2. 'import' → logprob: -6.752505779266357
    3. '   ' → logprob: -7.252505779266357
    4. ' A' → logprob: -8.0025053024292
    5. 'def' → logprob: -8.5025053024292
    6. 'from' → logprob: -9.5025053024292
    7. '#' (adapté à ' #') → logprob: -11.3775053024292
    8. ' ' → logprob: -13.2525053024292
    9. ' import' → logprob: -15.2525053024292
    10. '    
' → logprob: -15.7525053024292

Token 190: ' Initial' (ID: 9209)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.24997973442077637
    2. ' A' → logprob: -1.8749797344207764
    3. 'import' → logprob: -2.7499797344207764
    4. '   ' → logprob: -6.3749799728393555
    5. ' import' → logprob: -7.1249799728393555
    6. 'from' → logprob: -7.2499799728393555
    7. 'def' → logprob: -7.7499799728393555
    8. ' ' → logprob: -9.499979972839355
    9. ' from' → logprob: -10.124979972839355
    10. '  ' → logprob: -10.749979972839355

Token 191: 'isation' (ID: 6993)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7653161287307739
    2. 'er' → logprob: -1.265316128730774
    3. '   ' → logprob: -1.640316128730774
    4. 'A' → logprob: -3.2653160095214844
    5. 'iser' → logprob: -4.390316009521484
    6. 'ale' → logprob: -6.515316009521484
    7. 'ial' → logprob: -6.640316009521484
    8. '       ' → logprob: -6.765316009521484
    9. 'e' → logprob: -7.390316009521484
    10. ' A' → logprob: -7.640316009521484

Token 192: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07805824279785156
    2. 'A' → logprob: -2.7030582427978516
    3. ' A' → logprob: -4.828058242797852
    4. ' de' → logprob: -10.078058242797852
    5. 'de' → logprob: -11.203058242797852
    6. 'import' → logprob: -12.078058242797852
    7. '  ' → logprob: -12.078058242797852
    8. ':' → logprob: -12.078058242797852
    9. ' ' → logprob: -12.203058242797852
    10. '    ' → logprob: -13.453058242797852

Token 193: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16425545513629913
    2. ' A' → logprob: -1.9142554998397827
    3. '[[' → logprob: -5.789255619049072
    4. ' [[' → logprob: -7.539255619049072
    5. '[' → logprob: -8.539255142211914
    6. '   ' → logprob: -9.539255142211914
    7. ' ' → logprob: -9.664255142211914
    8. '[A' → logprob: -10.289255142211914
    9. ' la' → logprob: -10.914255142211914
    10. '[
' → logprob: -11.039255142211914

Token 194: ' matr' (ID: 25095)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002031180774793029
    2. ' A' → logprob: -6.877031326293945
    3. 'mat' → logprob: -7.127031326293945
    4. '[[' → logprob: -8.877031326293945
    5. '#' → logprob: -10.502031326293945
    6. '   ' → logprob: -11.877031326293945
    7. 'import' → logprob: -12.252031326293945
    8. ' [[' → logprob: -12.377031326293945
    9. ' matr' → logprob: -12.752031326293945
    10. '[' → logprob: -12.877031326293945

Token 195: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00015229015843942761
    2. 'rice' → logprob: -9.500152587890625
    3. 'atrice' → logprob: -9.875152587890625
    4. 'ix' → logprob: -11.125152587890625
    5. '[' → logprob: -12.125152587890625
    6. '   ' → logprob: -13.125152587890625
    7. 'ixe' → logprob: -14.125152587890625
    8. '#' → logprob: -15.125152587890625
    9. 'ize' → logprob: -15.250152587890625
    10. 'Ice' → logprob: -15.375152587890625

Token 196: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21628935635089874
    2. 'A' → logprob: -1.7162894010543823
    3. ' A' → logprob: -4.216289520263672
    4. ' ' → logprob: -12.466289520263672
    5. '  ' → logprob: -13.216289520263672
    6. '    
' → logprob: -13.341289520263672
    7. ' =' → logprob: -13.841289520263672
    8. 'import' → logprob: -13.966289520263672
    9. '    ' → logprob: -14.466289520263672
    10. ':' → logprob: -14.466289520263672

Token 197: ' des' (ID: 731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.066218301653862
    2. '[[' → logprob: -3.066218376159668
    3. ' [[' → logprob: -5.066218376159668
    4. ' ' → logprob: -5.066218376159668
    5. ' zeros' → logprob: -6.441218376159668
    6. '[' → logprob: -6.441218376159668
    7. 'zeros' → logprob: -6.941218376159668
    8. ' des' → logprob: -8.941218376159668
    9. '[N' → logprob: -8.941218376159668
    10. 'None' → logprob: -9.066218376159668

Token 198: ' valeurs' (ID: 73668)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43727096915245056
    2. ' zeros' → logprob: -1.937270998954773
    3. ' z' → logprob: -2.3122708797454834
    4. ' ' → logprob: -2.4372708797454834
    5. 'zeros' → logprob: -4.8122711181640625
    6. 'z' → logprob: -4.8122711181640625
    7. ' None' → logprob: -5.6872711181640625
    8. '-' → logprob: -6.1872711181640625
    9. 'None' → logprob: -7.3122711181640625
    10. '-z' → logprob: -7.4372711181640625

Token 199: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12181796133518219
    2. '   ' → logprob: -2.8718180656433105
    3. 'de' → logprob: -4.1218180656433105
    4. 'zeros' → logprob: -4.6218180656433105
    5. '[' → logprob: -4.7468180656433105
    6. ' ' → logprob: -4.9968180656433105
    7. '-' → logprob: -5.3718180656433105
    8. ' de' → logprob: -5.9968180656433105
    9. 'None' → logprob: -5.9968180656433105
    10. ' zeros' → logprob: -6.7468180656433105

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031380318105220795
    2. 'A' → logprob: -6.128138065338135
    3. '
' → logprob: -8.003137588500977
    4. ' A' → logprob: -8.128137588500977
    5. ' =' → logprob: -9.003137588500977
    6. '    
' → logprob: -9.128137588500977
    7. ':' → logprob: -10.128137588500977
    8. ',' → logprob: -10.628137588500977
    9. '  ' → logprob: -11.753137588500977
    10. ' ' → logprob: -12.128137588500977

Token 201: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006769961211830378
    2. 'A' → logprob: -5.131770133972168
    3. ' A' → logprob: -7.381770133972168
    4. '    
' → logprob: -9.506770133972168
    5. ' =' → logprob: -9.756770133972168
    6. ':' → logprob: -10.506770133972168
    7. ',' → logprob: -11.381770133972168
    8. '  ' → logprob: -11.506770133972168
    9. '
' → logprob: -11.756770133972168
    10. ' ' → logprob: -11.881770133972168

Token 202: ' matr' (ID: 25095)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6802952885627747
    2. ' A' → logprob: -1.1802952289581299
    3. '   ' → logprob: -1.6802952289581299
    4. ' ' → logprob: -10.80529499053955
    5. '  ' → logprob: -12.55529499053955
    6. '    
' → logprob: -14.43029499053955
    7. '	A' → logprob: -14.68029499053955
    8. '    ' → logprob: -14.68029499053955
    9. ' ' → logprob: -15.55529499053955
    10. '   ' → logprob: -16.555295944213867

Token 203: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00021629150433000177
    2. 'rice' → logprob: -9.000216484069824
    3. 'ix' → logprob: -9.875216484069824
    4. '   ' → logprob: -10.750216484069824
    5. '[' → logprob: -12.250216484069824
    6. 'ic' → logprob: -12.500216484069824
    7. 'ixe' → logprob: -12.875216484069824
    8. 'i' → logprob: -12.875216484069824
    9. 'ices' → logprob: -14.250216484069824
    10. 'ICE' → logprob: -14.250216484069824

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02976749837398529
    2. '=' → logprob: -3.5297675132751465
    3. '   ' → logprob: -12.029767036437988
    4. '[' → logprob: -12.029767036437988
    5. '=[' → logprob: -13.279767036437988
    6. '=[[' → logprob: -13.279767036437988
    7. ' =[' → logprob: -14.779767036437988
    8. ' ' → logprob: -14.779767036437988
    9. ' =
' → logprob: -15.029767036437988
    10. '[N' → logprob: -16.279767990112305

Token 205: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.008627813309431076
    2. ' [[' → logprob: -4.758627891540527
    3. '[' → logprob: -11.258627891540527
    4. ' [' → logprob: -14.758627891540527
    5. '[n' → logprob: -17.88362693786621
    6. '[N' → logprob: -18.13362693786621
    7. '[['' → logprob: -19.88362693786621
    8. '([[' → logprob: -20.00862693786621
    9. '[
' → logprob: -20.50862693786621
    10. ' ' → logprob: -20.88362693786621

Token 206: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0206720617134124e-05
    2. ' None' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '0' → logprob: -17.750009536743164
    5. '(None' → logprob: -18.000009536743164
    6. 'none' → logprob: -18.750009536743164
    7. '
' → logprob: -19.125009536743164
    8. 'N' → logprob: -19.250009536743164
    9. '_None' → logprob: -19.625009536743164
    10. '=None' → logprob: -19.875009536743164

Token 207: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02987487055361271
    2. 'for' → logprob: -3.529874801635742
    3. ' if' → logprob: -9.904874801635742
    4. ']' → logprob: -10.029874801635742
    5. ']*' → logprob: -11.279874801635742
    6. ' ' → logprob: -11.779874801635742
    7. 'if' → logprob: -12.404874801635742
    8. ')' → logprob: -13.029874801635742
    9. '   ' → logprob: -13.529874801635742
    10. ' ]' → logprob: -13.779874801635742

Token 208: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07897240668535233
    2. 'for' → logprob: -2.578972339630127
    3. ' if' → logprob: -9.828972816467285
    4. 'if' → logprob: -10.578972816467285
    5. ' ' → logprob: -13.453972816467285
    6. ']' → logprob: -14.453972816467285
    7. '   ' → logprob: -14.578972816467285
    8. '	for' → logprob: -14.828972816467285
    9. ' pour' → logprob: -15.578972816467285
    10. ']*' → logprob: -15.578972816467285

Token 209: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0007104054093360901
    2. ' N' → logprob: -7.250710487365723
    3. '(N' → logprob: -15.250710487365723
    4. '   ' → logprob: -15.625710487365723
    5. '	N' → logprob: -17.875709533691406
    6. ' ' → logprob: -18.875709533691406
    7. 'n' → logprob: -19.625709533691406
    8. '(' → logprob: -19.750709533691406
    9. '  ' → logprob: -20.625709533691406
    10. '    ' → logprob: -20.750709533691406

Token 210: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31327179074287415
    2. 'for' → logprob: -1.3132717609405518
    3. ']' → logprob: -12.188271522521973
    4. '	for' → logprob: -13.563271522521973
    5. ' ' → logprob: -13.813271522521973
    6. '   ' → logprob: -14.063271522521973
    7. ')' → logprob: -14.063271522521973
    8. ' pour' → logprob: -14.688271522521973
    9. 'pour' → logprob: -15.563271522521973
    10. ' ]' → logprob: -15.938271522521973

Token 211: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12168771773576736
    2. '_' → logprob: -2.246687650680542
    3. ' range' → logprob: -4.746687889099121
    4. ' i' → logprob: -9.121687889099121
    5. 'range' → logprob: -10.621687889099121
    6. ' ' → logprob: -12.121687889099121
    7. '_range' → logprob: -12.871687889099121
    8. ' in' → logprob: -13.121687889099121
    9. '_i' → logprob: -14.246687889099121
    10. '(range' → logprob: -14.996687889099121

Token 212: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3870253562927246
    2. ' range' → logprob: -1.1370253562927246
    3. ' in' → logprob: -9.762025833129883
    4. '_' → logprob: -10.137025833129883
    5. ' _' → logprob: -10.762025833129883
    6. '_range' → logprob: -11.137025833129883
    7. ' ' → logprob: -12.012025833129883
    8. '	range' → logprob: -12.762025833129883
    9. 'i' → logprob: -13.012025833129883
    10. ' i' → logprob: -13.262025833129883

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324547804892063
    2. ' range' → logprob: -3.7732455730438232
    3. '(range' → logprob: -17.773244857788086
    4. 'rang' → logprob: -18.023244857788086
    5. '	range' → logprob: -18.398244857788086
    6. '_range' → logprob: -18.523244857788086
    7. ']' → logprob: -19.523244857788086
    8. ')' → logprob: -19.773244857788086
    9. '   ' → logprob: -19.773244857788086
    10. ' ' → logprob: -20.023244857788086

Token 214: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00012630375567823648
    2. '(' → logprob: -9.125125885009766
    3. 'N' → logprob: -11.250125885009766
    4. ' (' → logprob: -12.500125885009766
    5. '(
' → logprob: -15.000125885009766
    6. '(n' → logprob: -15.875125885009766
    7. 's' → logprob: -17.000125885009766
    8. '   ' → logprob: -17.625125885009766
    9. '	N' → logprob: -18.375125885009766
    10. ' N' → logprob: -18.500125885009766

Token 215: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.069664333248511e-05
    2. ']' → logprob: -11.375020980834961
    3. ')' → logprob: -12.250020980834961
    4. '   ' → logprob: -12.750020980834961
    5. ')]
' → logprob: -14.625020980834961
    6. ' )' → logprob: -14.750020980834961
    7. ' ]' → logprob: -15.875020980834961
    8. ')],' → logprob: -16.25002098083496
    9. ']]' → logprob: -16.25002098083496
    10. '])]' → logprob: -16.75002098083496

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41154924035072327
    2. '
' → logprob: -1.5365492105484009
    3. '    
' → logprob: -2.1615493297576904
    4. 'def' → logprob: -5.036549091339111
    5. ' 
' → logprob: -8.28654956817627
    6. ' def' → logprob: -8.66154956817627
    7. '   
' → logprob: -9.66154956817627
    8. '  
' → logprob: -10.03654956817627
    9. '

' → logprob: -10.78654956817627
    10. '        
' → logprob: -10.91154956817627

Token 217: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0045969802886247635
    2. '   ' → logprob: -5.629597187042236
    3. '
' → logprob: -7.379597187042236
    4. ' def' → logprob: -8.254596710205078
    5. '    
' → logprob: -9.129596710205078
    6. 'import' → logprob: -13.004596710205078
    7. 'from' → logprob: -14.379596710205078
    8. '	def' → logprob: -14.629596710205078
    9. 'de' → logprob: -15.379596710205078
    10. '  
' → logprob: -15.754596710205078

Token 218: ' partition' (ID: 31512)
  Prédit: ' partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.09648369997739792
    2. 'partition' → logprob: -3.4714837074279785
    3. ' recursive' → logprob: -3.8464837074279785
    4. ' recurse' → logprob: -4.3464837074279785
    5. ' recur' → logprob: -4.7214837074279785
    6. ' recursion' → logprob: -4.8464837074279785
    7. ' rec' → logprob: -5.7214837074279785
    8. ' div' → logprob: -6.0964837074279785
    9. ' repart' → logprob: -6.8464837074279785
    10. 're' → logprob: -7.2214837074279785

Token 219: '_et' (ID: 103440)
  Prédit: '(indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.7455925941467285
    2. 'ner' → logprob: -1.1205925941467285
    3. '(n' → logprob: -2.4955925941467285
    4. '(l' → logprob: -3.1205925941467285
    5. '(' → logprob: -3.4955925941467285
    6. 'er' → logprob: -5.1205925941467285
    7. 'nement' → logprob: -5.1205925941467285
    8. '(s' → logprob: -5.1205925941467285
    9. '(start' → logprob: -5.7455925941467285
    10. '(index' → logprob: -5.9955925941467285

Token 220: '_label' (ID: 13175)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.5525985360145569
    2. 'at' → logprob: -2.052598476409912
    3. 'assign' → logprob: -2.052598476409912
    4. 'attrib' → logprob: -3.052598476409912
    5. 'rem' → logprob: -3.677598476409912
    6. 'aj' → logprob: -4.052598476409912
    7. 'aff' → logprob: -4.302598476409912
    8. 'def' → logprob: -4.927598476409912
    9. 'mettre' → logprob: -4.927598476409912
    10. 'mar' → logprob: -5.177598476409912

Token 221: '(l' (ID: 4179)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.11688823997974396
    2. 'ler' → logprob: -2.8668882846832275
    3. 'le' → logprob: -4.241888046264648
    4. '(' → logprob: -4.241888046264648
    5. 'age' → logprob: -4.866888046264648
    6. 'l' → logprob: -5.991888046264648
    7. 'ing' → logprob: -6.241888046264648
    8. '(m' → logprob: -6.366888046264648
    9. '(l' → logprob: -6.491888046264648
    10. '(N' → logprob: -6.491888046264648

Token 222: 'iste' (ID: 4872)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37031370401382446
    2. 'iste' → logprob: -1.4953136444091797
    3. 'ist' → logprob: -3.1203136444091797
    4. 'eft' → logprob: -3.7453136444091797
    5. 'istes' → logprob: -5.24531364440918
    6. 'e' → logprob: -6.24531364440918
    7. 'o' → logprob: -6.37031364440918
    8. 'st' → logprob: -6.37031364440918
    9. ',g' → logprob: -7.24531364440918
    10. 'ow' → logprob: -7.62031364440918

Token 223: '_indices' (ID: 43508)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10173499584197998
    2. '):' → logprob: -3.3517351150512695
    3. '_indices' → logprob: -3.9767351150512695
    4. '(indices' → logprob: -3.9767351150512695
    5. '):
' → logprob: -4.4767351150512695
    6. 'indices' → logprob: -4.4767351150512695
    7. ' ,' → logprob: -7.4767351150512695
    8. 'Indices' → logprob: -8.85173511505127
    9. 'des' → logprob: -9.60173511505127
    10. ' indices' → logprob: -9.60173511505127

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015192650025710464
    2. '):' → logprob: -6.876519203186035
    3. ' ,' → logprob: -7.876519203186035
    4. '):
' → logprob: -9.376519203186035
    5. '   ' → logprob: -11.501519203186035
    6. '(indices' → logprob: -12.751519203186035
    7. ')' → logprob: -13.126519203186035
    8. ',n' → logprob: -14.001519203186035
    9. ' ):' → logprob: -14.251519203186035
    10. ',l' → logprob: -14.251519203186035

Token 225: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.17209433019161224
    2. 'pro' → logprob: -2.6720943450927734
    3. ' niveau' → logprob: -2.6720943450927734
    4. ' profondeur' → logprob: -4.297094345092773
    5. 'niv' → logprob: -5.797094345092773
    6. 'prof' → logprob: -6.422094345092773
    7. ' ' → logprob: -7.797094345092773
    8. 'level' → logprob: -8.297094345092773
    9. '   ' → logprob: -8.547094345092773
    10. 'depth' → logprob: -8.672094345092773

Token 226: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017017999663949013
    2. '):
' → logprob: -4.142017841339111
    3. ',' → logprob: -7.392017841339111
    4. '=' → logprob: -8.51701831817627
    5. ')' → logprob: -9.14201831817627
    6. ' ):' → logprob: -10.26701831817627
    7. '):
' → logprob: -12.14201831817627
    8. ':' → logprob: -12.26701831817627
    9. '   ' → logprob: -12.51701831817627
    10. '):

' → logprob: -13.14201831817627

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3726523518562317
    2. ':' → logprob: -1.372652292251587
    3. '   ' → logprob: -3.122652292251587
    4. '<|end|>' → logprob: -5.747652530670166
    5. ':
' → logprob: -5.997652530670166
    6. ',' → logprob: -6.122652530670166
    7. '):' → logprob: -6.247652530670166
    8. '):
' → logprob: -6.872652530670166
    9. '    
' → logprob: -7.622652530670166
    10. ' :' → logprob: -7.872652530670166

Token 228: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5986468195915222
    2. '       ' → logprob: -0.8486468195915222
    3. ' if' → logprob: -4.223646640777588
    4. 'if' → logprob: -4.973646640777588
    5. '    
' → logprob: -8.348647117614746
    6. '    ' → logprob: -8.723647117614746
    7. '        
' → logprob: -9.223647117614746
    8. '<|end|>' → logprob: -9.348647117614746
    9. '  ' → logprob: -9.848647117614746
    10. ',' → logprob: -10.223647117614746

Token 229: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7656509876251221
    2. '   ' → logprob: -1.265650987625122
    3. ' if' → logprob: -1.390650987625122
    4. '       ' → logprob: -5.640650749206543
    5. '    ' → logprob: -8.640650749206543
    6. 'n' → logprob: -9.640650749206543
    7. '    
' → logprob: -10.015650749206543
    8. ' n' → logprob: -10.390650749206543
    9. 'length' → logprob: -10.515650749206543
    10. '  ' → logprob: -10.765650749206543

Token 230: ' Partition' (ID: 100394)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23382540047168732
    2. ' if' → logprob: -1.608825445175171
    3. '   ' → logprob: -5.608825206756592
    4. 'Si' → logprob: -5.983825206756592
    5. '       ' → logprob: -6.233825206756592
    6. 'If' → logprob: -9.60882568359375
    7. '#' → logprob: -10.10882568359375
    8. 'split' → logprob: -10.73382568359375
    9. 's' → logprob: -10.98382568359375
    10. 'partition' → logprob: -11.10882568359375

Token 231: 'ne' (ID: 611)
  Prédit: 'ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.38999229669570923
    2. '   ' → logprob: -1.8899922370910645
    3. 'e' → logprob: -2.2649922370910645
    4. '_et' → logprob: -3.3899922370910645
    5. 'ner' → logprob: -4.3899922370910645
    6. '       ' → logprob: -5.3899922370910645
    7. '_e' → logprob: -5.3899922370910645
    8. '    ' → logprob: -5.7649922370910645
    9. '_' → logprob: -6.2649922370910645
    10. 'nez' → logprob: -6.7649922370910645

Token 232: ' réc' (ID: 36254)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05093827843666077
    2. ' les' → logprob: -3.675938367843628
    3. ' liste' → logprob: -5.425938129425049
    4. ' indices' → logprob: -5.550938129425049
    5. 'la' → logprob: -5.925938129425049
    6. 'liste' → logprob: -6.050938129425049
    7. ' ' → logprob: -6.175938129425049
    8. 'indices' → logprob: -6.300938129425049
    9. ' l' → logprob: -6.300938129425049
    10. '   ' → logprob: -7.300938129425049

Token 233: 'urs' (ID: 1628)
  Prédit: 'ursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.2678429186344147
    2. 'urs' → logprob: -2.017843008041382
    3. 'urse' → logprob: -3.017843008041382
    4. 'ur' → logprob: -3.642843008041382
    5. '       ' → logprob: -4.517842769622803
    6. 'urrent' → logprob: -5.392842769622803
    7. 'up' → logprob: -6.017842769622803
    8. 'us' → logprob: -6.642842769622803
    9. 'usive' → logprob: -6.642842769622803
    10. '   ' → logprob: -6.767842769622803

Token 234: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.44972389936447144
    2. 'ent' → logprob: -1.6997239589691162
    3. 'e' → logprob: -2.324723958969116
    4. 'er' → logprob: -3.699723958969116
    5. 'ise' → logprob: -4.074723720550537
    6. 'é' → logprob: -5.324723720550537
    7. 'ive' → logprob: -5.949723720550537
    8. 'def' → logprob: -5.949723720550537
    9. 'ère' → logprob: -5.949723720550537
    10. 'es' → logprob: -6.074723720550537

Token 235: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.41802653670310974
    2. ' les' → logprob: -1.4180265665054321
    3. 'les' → logprob: -3.2930264472961426
    4. '(l' → logprob: -3.4180264472961426
    5. 'la' → logprob: -4.793026447296143
    6. 'l' → logprob: -5.168026447296143
    7. ' l' → logprob: -5.543026447296143
    8. 'indices' → logprob: -5.668026447296143
    9. ' indices' → logprob: -6.418026447296143
    10. 'liste' → logprob: -6.543026447296143

Token 236: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.07138553261756897
    2. ' liste' → logprob: -3.321385622024536
    3. 'tail' → logprob: -4.071385383605957
    4. 'if' → logprob: -5.321385383605957
    5. 'len' → logprob: -5.696385383605957
    6. ' if' → logprob: -5.821385383605957
    7. 'long' → logprob: -5.821385383605957
    8. 'list' → logprob: -7.571385383605957
    9. ' taille' → logprob: -7.821385383605957
    10. ' longueur' → logprob: -8.946385383605957

Token 237: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5432881712913513
    2. '_indices' → logprob: -1.168288230895996
    3. '_des' → logprob: -3.043288230895996
    4. ' d' → logprob: -3.293288230895996
    5. 'd' → logprob: -4.293288230895996
    6. ' _' → logprob: -5.918288230895996
    7. '_' → logprob: -6.168288230895996
    8. 'des' → logprob: -6.418288230895996
    9. '(indices' → logprob: -6.918288230895996
    10. '_d' → logprob: -7.168288230895996

Token 238: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.47413140535354614
    2. ' indices' → logprob: -0.9741314053535461
    3. 'indice' → logprob: -10.47413158416748
    4. '_indices' → logprob: -10.97413158416748
    5. ' ' → logprob: -12.22413158416748
    6. 'Indices' → logprob: -14.09913158416748
    7. '(indices' → logprob: -14.09913158416748
    8. 'index' → logprob: -14.34913158416748
    9. 'ind' → logprob: -14.84913158416748
    10. ' índices' → logprob: -15.09913158416748

Token 239: ' et' (ID: 859)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4386673867702484
    2. ',' → logprob: -1.9386674165725708
    3. '       ' → logprob: -1.9386674165725708
    4. 'en' → logprob: -3.5636672973632812
    5. ' et' → logprob: -3.8136672973632812
    6. '   ' → logprob: -4.688667297363281
    7. 'et' → logprob: -6.688667297363281
    8. ' pour' → logprob: -6.813667297363281
    9. ' selon' → logprob: -6.813667297363281
    10. '.' → logprob: -7.188667297363281

Token 240: ' ass' (ID: 1680)
  Prédit: ' attrib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attrib' → logprob: -0.6031129360198975
    2. ' marque' → logprob: -1.7281129360198975
    3. 'attrib' → logprob: -2.3531129360198975
    4. ' ass' → logprob: -2.9781129360198975
    5. '   ' → logprob: -3.3531129360198975
    6. 'et' → logprob: -3.8531129360198975
    7. ' label' → logprob: -4.478113174438477
    8. 'label' → logprob: -4.853113174438477
    9. 'if' → logprob: -4.978113174438477
    10. ' if' → logprob: -5.103113174438477

Token 241: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.02514520287513733
    2. 'ign' → logprob: -4.025145053863525
    3. 'oc' → logprob: -5.150145053863525
    4. '
' → logprob: -8.275145530700684
    5. '#' → logprob: -8.525145530700684
    6. 'ect' → logprob: -9.150145530700684
    7. '   ' → logprob: -9.275145530700684
    8. '```' → logprob: -9.775145530700684
    9. '\' → logprob: -10.275145530700684
    10. '[' → logprob: -10.400145530700684

Token 242: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4817565083503723
    2. ' un' → logprob: -2.3567564487457275
    3. ' le' → logprob: -2.7317564487457275
    4. 'des' → logprob: -2.7317564487457275
    5. ' les' → logprob: -3.1067564487457275
    6. '<|end|>' → logprob: -3.2317564487457275
    7. 'le' → logprob: -3.3567564487457275
    8. 'niveau' → logprob: -4.481756687164307
    9. '       ' → logprob: -4.606756687164307
    10. 'un' → logprob: -5.481756687164307

Token 243: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.024504689499735832
    2. 'label' → logprob: -4.649504661560059
    3. ' niveau' → logprob: -4.649504661560059
    4. 'for' → logprob: -6.149504661560059
    5. 'level' → logprob: -6.524504661560059
    6. ' for' → logprob: -8.024504661560059
    7. ' label' → logprob: -8.149504661560059
    8. 'labels' → logprob: -8.399504661560059
    9. '   ' → logprob: -9.149504661560059
    10. 'n' → logprob: -9.649504661560059

Token 244: '
' (ID: 198)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.11864645779132843
    2. ' de' → logprob: -3.2436463832855225
    3. '   ' → logprob: -3.9936463832855225
    4. ' à' → logprob: -4.368646621704102
    5. '<|end|>' → logprob: -4.368646621704102
    6. ' au' → logprob: -4.493646621704102
    7. '       ' → logprob: -5.493646621704102
    8. 'aux' → logprob: -5.493646621704102
    9. ' d' → logprob: -6.618646621704102
    10. 'de' → logprob: -6.618646621704102

Token 245: '       ' (ID: 309)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.04579358175396919
    2. '       ' → logprob: -3.6707935333251953
    3. ' de' → logprob: -5.045793533325195
    4. 'aux' → logprob: -5.295793533325195
    5. '   ' → logprob: -5.420793533325195
    6. ' à' → logprob: -6.295793533325195
    7. 'de' → logprob: -7.295793533325195
    8. '           ' → logprob: -7.920793533325195
    9. '        ' → logprob: -9.045793533325195
    10. '    ' → logprob: -9.295793533325195

Token 246: ' aux' (ID: 5850)
  Prédit: 'aux'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' (adapté à ' aux') → logprob: -1.2045021057128906
    2. ' aux' → logprob: -1.2045021057128906
    3. '       ' → logprob: -1.5795021057128906
    4. '   ' → logprob: -1.9545021057128906
    5. ' à' → logprob: -4.204502105712891
    6. 'à' → logprob: -4.329502105712891
    7. 'au' → logprob: -5.079502105712891
    8. 'pour' → logprob: -5.204502105712891
    9. 'de' → logprob: -5.704502105712891
    10. '           ' → logprob: -5.829502105712891

Token 247: ' couples' (ID: 29972)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0020948648452759
    2. ' pairs' → logprob: -1.5020948648452759
    3. ' couples' → logprob: -2.0020947456359863
    4. 'pairs' → logprob: -2.1270947456359863
    5. 'cou' → logprob: -3.5020947456359863
    6. 'for' → logprob: -3.8770947456359863
    7. '   ' → logprob: -3.8770947456359863
    8. 'i' → logprob: -3.8770947456359863
    9. 'p' → logprob: -4.002094745635986
    10. ' for' → logprob: -4.877094745635986

Token 248: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5407675504684448
    2. ' (' → logprob: -1.0407675504684448
    3. '(i' → logprob: -3.2907676696777344
    4. 'd' → logprob: -3.6657676696777344
    5. ' i' → logprob: -7.540767669677734
    6. ' ' → logprob: -7.915767669677734
    7. '(indices' → logprob: -8.040767669677734
    8. ' de' → logprob: -9.165767669677734
    9. 's' → logprob: -9.540767669677734
    10. '(' → logprob: -9.665767669677734

Token 249: ''' (ID: 6)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.5354480743408203
    2. ' indices' → logprob: -1.2854480743408203
    3. '(indices' → logprob: -2.2854480743408203
    4. 'i' → logprob: -3.7854480743408203
    5. '(i' → logprob: -4.53544807434082
    6. 'indice' → logprob: -7.28544807434082
    7. '_indices' → logprob: -7.53544807434082
    8. ' i' → logprob: -8.16044807434082
    9. ''ind' → logprob: -8.28544807434082
    10. '(' → logprob: -8.53544807434082

Token 250: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.000600572966504842
    2. ' indices' → logprob: -8.250600814819336
    3. 'i' → logprob: -9.000600814819336
    4. '(indices' → logprob: -9.375600814819336
    5. 'indice' → logprob: -9.750600814819336
    6. 'idx' → logprob: -10.625600814819336
    7. 'indexes' → logprob: -11.375600814819336
    8. 'index' → logprob: -11.875600814819336
    9. '_indices' → logprob: -12.375600814819336
    10. '"indices' → logprob: -12.375600814819336

Token 251: ' situ' (ID: 4581)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.6258329153060913
    2. ' dans' → logprob: -1.7508329153060913
    3. ' d' → logprob: -1.8758329153060913
    4. ' issus' → logprob: -2.375833034515381
    5. '(i' → logprob: -2.875833034515381
    6. 'dans' → logprob: -3.000833034515381
    7. ' (' → logprob: -3.125833034515381
    8. '   ' → logprob: -3.375833034515381
    9. ' qui' → logprob: -3.625833034515381
    10. ' i' → logprob: -3.875833034515381

Token 252: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00014406509581021965
    2. 'es' → logprob: -9.375144004821777
    3. 'é' → logprob: -9.875144004821777
    4. 'ées' → logprob: -13.000144004821777
    5. '```' → logprob: -13.375144004821777
    6. 'ant' → logprob: -14.000144004821777
    7. 'e' → logprob: -14.125144004821777
    8. '   ' → logprob: -14.500144004821777
    9. 'ÉS' → logprob: -15.000144004821777
    10. '#' → logprob: -15.000144004821777

Token 253: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.2818009555339813
    2. ' dans' → logprob: -1.4068009853363037
    3. ' entre' → logprob: -8.656801223754883
    4. 'ent' → logprob: -9.281801223754883
    5. ' sur' → logprob: -9.656801223754883
    6. 'sur' → logprob: -9.781801223754883
    7. 'entre' → logprob: -9.781801223754883
    8. ' à' → logprob: -9.906801223754883
    9. 'à' → logprob: -10.531801223754883
    10. ' in' → logprob: -10.906801223754883

Token 254: ' deux' (ID: 10301)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.4210224747657776
    2. ' des' → logprob: -1.2960224151611328
    3. 'diff' → logprob: -3.421022415161133
    4. 's' → logprob: -4.046022415161133
    5. 'de' → logprob: -4.421022415161133
    6. ' deux' → logprob: -6.421022415161133
    7. 'part' → logprob: -6.671022415161133
    8. ' différentes' → logprob: -6.671022415161133
    9. 'les' → logprob: -7.546022415161133
    10. '   ' → logprob: -7.671022415161133

Token 255: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3821558356285095
    2. ' sous' → logprob: -1.6321558952331543
    3. 'part' → logprob: -2.1321558952331543
    4. ' partitions' → logprob: -7.257155895233154
    5. 'list' → logprob: -7.632155895233154
    6. 'diff' → logprob: -7.882155895233154
    7. ' groupes' → logprob: -8.132155418395996
    8. ' listes' → logprob: -8.257155418395996
    9. 'parts' → logprob: -9.132155418395996
    10. 'ense' → logprob: -9.132155418395996

Token 256: '-list' (ID: 18463)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03132055699825287
    2. '-list' → logprob: -4.156320571899414
    3. '_list' → logprob: -4.781320571899414
    4. '_' → logprob: -5.531320571899414
    5. '-l' → logprob: -6.406320571899414
    6. '-group' → logprob: -8.281320571899414
    7. 'list' → logprob: -8.406320571899414
    8. '-part' → logprob: -9.156320571899414
    9. '--' → logprob: -9.531320571899414
    10. '   ' → logprob: -9.656320571899414

Token 257: 'es' (ID: 268)
  Prédit: 'tes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tes' → logprob: -0.5772504806518555
    2. 'ets' → logprob: -1.4522504806518555
    3. 'es' → logprob: -2.2022504806518555
    4. 'istes' → logprob: -3.0772504806518555
    5. 'ts' → logprob: -4.3272504806518555
    6. 'ists' → logprob: -5.0772504806518555
    7. 'ects' → logprob: -5.2022504806518555
    8. 'èmes' → logprob: -6.2022504806518555
    9. 'sets' → logprob: -6.2022504806518555
    10. 'ist' → logprob: -6.3272504806518555

Token 258: ' différentes' (ID: 41398)
  Prédit: ' distinct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distinct' → logprob: -0.652794361114502
    2. ' différentes' → logprob: -1.527794361114502
    3. 'distinct' → logprob: -1.527794361114502
    4. 'diff' → logprob: -3.277794361114502
    5. 'dist' → logprob: -5.902794361114502
    6. 'different' → logprob: -6.152794361114502
    7. 'd' → logprob: -7.652794361114502
    8. '   ' → logprob: -7.777794361114502
    9. ' sépar' → logprob: -7.902794361114502
    10. ' différents' → logprob: -8.152793884277344

Token 259: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1401558816432953
    2. '       ' → logprob: -2.515155792236328
    3. '   ' → logprob: -4.015155792236328
    4. '.
' → logprob: -4.140155792236328
    5. ',' → logprob: -4.265155792236328
    6. ',
' → logprob: -7.515155792236328
    7. '        
' → logprob: -7.640155792236328
    8. '
' → logprob: -8.765155792236328
    9. ' .' → logprob: -9.265155792236328
    10. '.

' → logprob: -9.515155792236328

Token 260: ' chaque' (ID: 21194)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.639301061630249
    2. 'part' → logprob: -1.389301061630249
    3. 'ce' → logprob: -2.514301061630249
    4. 'cha' → logprob: -3.014301061630249
    5. ' chaque' → logprob: -3.389301061630249
    6. 'partition' → logprob: -3.889301061630249
    7. 'l' → logprob: -5.139301300048828
    8. 'pro' → logprob: -5.264301300048828
    9. 'la' → logprob: -5.389301300048828
    10. ' partir' → logprob: -5.389301300048828

Token 261: ' étape' (ID: 83661)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.20919716358184814
    2. ' niveau' → logprob: -2.7091970443725586
    3. ' étape' → logprob: -3.0841970443725586
    4. '   ' → logprob: -3.5841970443725586
    5. 'appel' → logprob: -4.209197044372559
    6. 'partition' → logprob: -4.459197044372559
    7. 'ét' → logprob: -5.459197044372559
    8. '
' → logprob: -5.584197044372559
    9. ' appel' → logprob: -5.834197044372559
    10. '       ' → logprob: -5.834197044372559

Token 262: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6005519032478333
    2. '       ' → logprob: -1.2255518436431885
    3. ' de' → logprob: -2.4755518436431885
    4. '   ' → logprob: -3.4755518436431885
    5. ',' → logprob: -4.100552082061768
    6. '.
' → logprob: -4.600552082061768
    7. '        
' → logprob: -5.225552082061768
    8. 'de' → logprob: -5.600552082061768
    9. ',
' → logprob: -6.600552082061768
    10. '    
' → logprob: -6.975552082061768

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004246980883181095
    2. '        
' → logprob: -6.254247188568115
    3. '   ' → logprob: -6.629247188568115
    4. ')' → logprob: -8.004246711730957
    5. '    
' → logprob: -8.379246711730957
    6. '
' → logprob: -8.879246711730957
    7. '<|end|>' → logprob: -9.254246711730957
    8. '"""' → logprob: -9.879246711730957
    9. '```' → logprob: -9.879246711730957
    10. '    ' → logprob: -11.379246711730957

Token 264: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8481459021568298
    2. 'if' → logprob: -0.9731459021568298
    3. ' if' → logprob: -2.2231459617614746
    4. '       ' → logprob: -2.4731459617614746
    5. 'n' → logprob: -7.223145961761475
    6. 'long' → logprob: -8.973145484924316
    7. 'length' → logprob: -9.098145484924316
    8. '    
' → logprob: -9.723145484924316
    9. '    ' → logprob: -9.723145484924316
    10. '        
' → logprob: -9.973145484924316

Token 265: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1618726253509521
    2. '):' → logprob: -1.5368726253509521
    3. '):
' → logprob: -1.5368726253509521
    4. ':' → logprob: -1.9118726253509521
    5. ')' → logprob: -3.161872625350952
    6. ',' → logprob: -3.786872625350952
    7. ' :' → logprob: -4.161872863769531
    8. '           ' → logprob: -4.911872863769531
    9. '=' → logprob: -5.036872863769531
    10. '   ' → logprob: -5.286872863769531

Token 266: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010729423956945539
    2. '           ' → logprob: -6.876072883605957
    3. '   ' → logprob: -10.876072883605957
    4. 'liste' → logprob: -11.876072883605957
    5. 'list' → logprob: -12.501072883605957
    6. '        ' → logprob: -12.751072883605957
    7. '	   ' → logprob: -13.876072883605957
    8. 'lst' → logprob: -14.126072883605957
    9. ' liste' → logprob: -14.251072883605957
    10. '      ' → logprob: -14.376072883605957

Token 267: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' (adapté à ' liste') → logprob: -0.04180850088596344
    2. '           ' → logprob: -4.541808605194092
    3. 'indices' → logprob: -4.541808605194092
    4. 'list' → logprob: -4.916808605194092
    5. '       ' → logprob: -5.041808605194092
    6. ' liste' → logprob: -5.791808605194092
    7. '   ' → logprob: -7.041808605194092
    8. 'lst' → logprob: -7.291808605194092
    9. 'lista' → logprob: -8.416808128356934
    10. 'indexes' → logprob: -8.916808128356934

Token 268: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0004891689168289304
    2. 'indices' → logprob: -8.375489234924316
    3. '(indices' → logprob: -9.500489234924316
    4. 'Indices' → logprob: -9.875489234924316
    5. '[int' → logprob: -10.125489234924316
    6. 'd' → logprob: -10.375489234924316
    7. '"indices' → logprob: -11.375489234924316
    8. '_' → logprob: -11.625489234924316
    9. '<int' → logprob: -11.750489234924316
    10. '[' → logprob: -12.250489234924316

Token 269: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015166111290454865
    2. ':' → logprob: -4.515166282653809
    3. '):' → logprob: -5.765166282653809
    4. ' (' → logprob: -8.015166282653809
    5. '):
' → logprob: -8.515166282653809
    6. ':list' → logprob: -8.640166282653809
    7. '   ' → logprob: -9.515166282653809
    8. '(list' → logprob: -9.890166282653809
    9. ')' → logprob: -10.015166282653809
    10. '```' → logprob: -10.890166282653809

Token 270: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001470226445235312
    2. '):' → logprob: -7.87647008895874
    3. 'List' → logprob: -8.251470565795898
    4. ')' → logprob: -8.376470565795898
    5. ' list' → logprob: -8.501470565795898
    6. '[list' → logprob: -8.501470565795898
    7. ':list' → logprob: -9.001470565795898
    8. '):
' → logprob: -10.251470565795898
    9. '   ' → logprob: -11.126470565795898
    10. '(list' → logprob: -12.126470565795898

Token 271: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0008542861323803663
    2. '<int' → logprob: -7.5008544921875
    3. '):' → logprob: -8.3758544921875
    4. 'int' → logprob: -10.0008544921875
    5. '):
' → logprob: -11.0008544921875
    6. ')' → logprob: -12.8758544921875
    7. '=int' → logprob: -13.3758544921875
    8. '(int' → logprob: -13.8758544921875
    9. ']int' → logprob: -13.8758544921875
    10. '```' → logprob: -14.1258544921875

Token 272: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.004696526564657688
    2. '])' → logprob: -5.879696369171143
    3. ']):
' → logprob: -6.879696369171143
    4. ']' → logprob: -7.254696369171143
    5. ']]' → logprob: -9.6296968460083
    6. '):' → logprob: -10.7546968460083
    7. ')' → logprob: -10.8796968460083
    8. ')]' → logprob: -11.1296968460083
    9. '>):' → logprob: -12.0046968460083
    10. '```' → logprob: -12.2546968460083

Token 273: ' Liste' (ID: 61030)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2911582589149475
    2. ' list' → logprob: -1.7911581993103027
    3. 'list' → logprob: -2.9161581993103027
    4. '           ' → logprob: -4.666158199310303
    5. 'List' → logprob: -5.291158199310303
    6. '<|end|>' → logprob: -5.541158199310303
    7. '               ' → logprob: -5.916158199310303
    8. 'La' → logprob: -6.541158199310303
    9. '[int' → logprob: -6.666158199310303
    10. '       ' → logprob: -6.791158199310303

Token 274: ' cour' (ID: 2871)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.44645002484321594
    2. '[int' → logprob: -1.3214499950408936
    3. ' d' → logprob: -2.4464499950408936
    4. 'd' → logprob: -6.196450233459473
    5. 'des' → logprob: -6.696450233459473
    6. '<|end|>' → logprob: -7.446450233459473
    7. '<int' → logprob: -7.821450233459473
    8. ' of' → logprob: -7.946450233459473
    9. '   ' → logprob: -7.946450233459473
    10. ' indices' → logprob: -8.071450233459473

Token 275: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.012984679080545902
    2. 'ant' → logprob: -4.387984752655029
    3. 'r' → logprob: -8.637984275817871
    4. 'ants' → logprob: -8.762984275817871
    5. '[' → logprob: -9.762984275817871
    6. 'amment' → logprob: -10.137984275817871
    7. 'ent' → logprob: -11.387984275817871
    8. 'ente' → logprob: -11.637984275817871
    9. 'antes' → logprob: -12.012984275817871
    10. 'te' → logprob: -12.387984275817871

Token 276: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.532937228679657
    2. ' d' → logprob: -1.1579372882843018
    3. 'd' → logprob: -2.6579372882843018
    4. '       ' → logprob: -4.782937049865723
    5. ')' → logprob: -5.157937049865723
    6. '[int' → logprob: -5.157937049865723
    7. '           ' → logprob: -5.657937049865723
    8. '   ' → logprob: -6.032937049865723
    9. 'des' → logprob: -6.657937049865723
    10. ' ' → logprob: -7.782937049865723

Token 277: ''' (ID: 6)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.019171396270394325
    2. ' indices' → logprob: -4.019171237945557
    3. ''' → logprob: -7.019171237945557
    4. '(indices' → logprob: -10.144171714782715
    5. '"indices' → logprob: -10.644171714782715
    6. ''ind' → logprob: -11.769171714782715
    7. 'index' → logprob: -11.894171714782715
    8. 'indexes' → logprob: -12.019171714782715
    9. 'indice' → logprob: -12.019171714782715
    10. '_indices' → logprob: -12.269171714782715

Token 278: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.00020663968462031335
    2. 'int' → logprob: -8.87520694732666
    3. ''' → logprob: -9.87520694732666
    4. 'indice' → logprob: -12.25020694732666
    5. ' indices' → logprob: -12.37520694732666
    6. 'index' → logprob: -13.12520694732666
    7. 'indexes' → logprob: -13.37520694732666
    8. 'idx' → logprob: -14.75020694732666
    9. '`' → logprob: -14.75020694732666
    10. ''int' → logprob: -14.87520694732666

Token 279: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4839465618133545
    2. '       ' → logprob: -1.3589465618133545
    3. '           ' → logprob: -2.2339465618133545
    4. '   ' → logprob: -4.983946800231934
    5. '):
' → logprob: -5.233946800231934
    6. '):' → logprob: -5.483946800231934
    7. '```' → logprob: -6.983946800231934
    8. ',' → logprob: -7.858946800231934
    9. 'indices' → logprob: -7.858946800231934
    10. ')
' → logprob: -8.233946800231934

Token 280: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.018271449953317642
    2. 'part' → logprob: -4.268271446228027
    3. ' partition' → logprob: -5.518271446228027
    4. 'trait' → logprob: -10.518271446228027
    5. '   ' → logprob: -10.768271446228027
    6. ' traiter' → logprob: -10.768271446228027
    7. '(part' → logprob: -12.518271446228027
    8. 'div' → logprob: -12.643271446228027
    9. '_partition' → logprob: -13.393271446228027
    10. '-part' → logprob: -13.518271446228027

Token 281: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.0033220804762095213
    2. 'nner' → logprob: -6.003322124481201
    3. 'er' → logprob: -7.253322124481201
    4. '   ' → logprob: -10.378321647644043
    5. 'n' → logprob: -10.503321647644043
    6. '_' → logprob: -10.628321647644043
    7. '```' → logprob: -11.503321647644043
    8. '       ' → logprob: -11.753321647644043
    9. '[' → logprob: -12.628321647644043
    10. '>' → logprob: -12.878321647644043

Token 282: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026300758123397827
    2. '           ' → logprob: -4.40130090713501
    3. '       ' → logprob: -4.52630090713501
    4. '):
' → logprob: -6.90130090713501
    5. ')
' → logprob: -7.27630090713501
    6. '):' → logprob: -7.40130090713501
    7. '   ' → logprob: -8.526300430297852
    8. ' )' → logprob: -9.151300430297852
    9. '),' → logprob: -9.151300430297852
    10. '```' → logprob: -9.901300430297852

Token 283: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08757134526968002
    2. '           ' → logprob: -2.712571382522583
    3. '   ' → logprob: -4.587571144104004
    4. ')' → logprob: -5.212571144104004
    5. '        
' → logprob: -7.587571144104004
    6. '    
' → logprob: -8.087571144104004
    7. '"""' → logprob: -8.462571144104004
    8. '            
' → logprob: -8.837571144104004
    9. '    ' → logprob: -9.087571144104004
    10. ' ' → logprob: -9.587571144104004

Token 284: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' (adapté à ' niveau') → logprob: -0.12786762416362762
    2. 'int' → logprob: -3.2528676986694336
    3. '           ' → logprob: -3.5028676986694336
    4. ' niveau' → logprob: -3.6278676986694336
    5. 'level' → logprob: -4.627867698669434
    6. 'n' → logprob: -5.627867698669434
    7. 'nivel' → logprob: -6.002867698669434
    8. 'depth' → logprob: -6.127867698669434
    9. 'start' → logprob: -6.377867698669434
    10. '       ' → logprob: -7.002867698669434

Token 285: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019490839913487434
    2. '):
' → logprob: -4.144490718841553
    3. '   ' → logprob: -6.144490718841553
    4. ':' → logprob: -7.769490718841553
    5. ' ):' → logprob: -8.019491195678711
    6. ')' → logprob: -8.894491195678711
    7. ':int' → logprob: -9.269491195678711
    8. '(int' → logprob: -9.644491195678711
    9. 'int' → logprob: -9.769491195678711
    10. '       ' → logprob: -9.894491195678711

Token 286: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1778496652841568
    2. '):' → logprob: -2.427849769592285
    3. ')' → logprob: -3.177849769592285
    4. '):
' → logprob: -4.052849769592285
    5. '   ' → logprob: -4.802849769592285
    6. '1' → logprob: -6.052849769592285
    7. ' int' → logprob: -6.427849769592285
    8. ':int' → logprob: -7.052849769592285
    9. '       ' → logprob: -7.302849769592285
    10. '+' → logprob: -7.552849769592285

Token 287: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01957443356513977
    2. '):
' → logprob: -4.0195746421813965
    3. '   ' → logprob: -7.0195746421813965
    4. ')' → logprob: -7.7695746421813965
    5. ' ):' → logprob: -10.019574165344238
    6. '):
' → logprob: -10.519574165344238
    7. '       ' → logprob: -11.394574165344238
    8. ':' → logprob: -12.144574165344238
    9. ')):' → logprob: -12.269574165344238
    10. '):

' → logprob: -12.644574165344238

Token 288: ' Niveau' (ID: 112668)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009288252331316471
    2. ' int' → logprob: -4.759288311004639
    3. 'Le' → logprob: -7.884288311004639
    4. 'L' → logprob: -9.38428783416748
    5. '           ' → logprob: -9.50928783416748
    6. 'La' → logprob: -10.00928783416748
    7. 'Int' → logprob: -10.38428783416748
    8. 'niveau' → logprob: -11.25928783416748
    9. '   ' → logprob: -11.50928783416748
    10. ' Le' → logprob: -11.88428783416748

Token 289: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7844982147216797
    2. '   ' → logprob: -1.9094982147216797
    3. '):' → logprob: -2.0344982147216797
    4. 'de' → logprob: -3.0344982147216797
    5. ',' → logprob: -3.0344982147216797
    6. ')' → logprob: -3.4094982147216797
    7. '_de' → logprob: -4.15949821472168
    8. '):
' → logprob: -4.15949821472168
    9. ' d' → logprob: -4.40949821472168
    10. ' ):' → logprob: -4.40949821472168

Token 290: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2616432309150696
    2. 'pro' → logprob: -1.7616431713104248
    3. 'rec' → logprob: -4.136643409729004
    4. ' réc' → logprob: -4.136643409729004
    5. 'partition' → logprob: -4.261643409729004
    6. ' profondeur' → logprob: -5.136643409729004
    7. 'prof' → logprob: -5.511643409729004
    8. 'ré' → logprob: -6.761643409729004
    9. 'd' → logprob: -8.261643409729004
    10. 'la' → logprob: -8.261643409729004

Token 291: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.014058440923690796
    2. 'urs' → logprob: -4.389058589935303
    3. 'usion' → logprob: -6.639058589935303
    4. 'ur' → logprob: -8.764058113098145
    5. 'ursive' → logprob: -11.764058113098145
    6. '   ' → logprob: -11.889058113098145
    7. ')' → logprob: -12.139058113098145
    8. 'us' → logprob: -12.139058113098145
    9. '_' → logprob: -12.264058113098145
    10. 'ussion' → logprob: -12.389058113098145

Token 292: ' actuel' (ID: 113646)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04927346110343933
    2. '):
' → logprob: -3.2992734909057617
    3. '   ' → logprob: -4.799273490905762
    4. ')' → logprob: -6.299273490905762
    5. '       ' → logprob: -7.549273490905762
    6. ' ):' → logprob: -7.924273490905762
    7. '):
' → logprob: -9.674273490905762
    8. ' actuel' → logprob: -10.674273490905762
    9. 'current' → logprob: -10.924273490905762
    10. ' ):
' → logprob: -11.299273490905762

Token 293: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5340907573699951
    2. '):
' → logprob: -1.0340907573699951
    3. '   ' → logprob: -3.284090757369995
    4. ')' → logprob: -4.534090995788574
    5. '       ' → logprob: -4.659090995788574
    6. '):
' → logprob: -7.659090995788574
    7. '):

' → logprob: -10.284090995788574
    8. ' ):' → logprob: -10.909090995788574
    9. '           ' → logprob: -11.159090995788574
    10. ' ):
' → logprob: -11.659090995788574

Token 294: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.09455537796020508
    2. 'attrib' → logprob: -3.219555377960205
    3. ' attrib' → logprob: -3.844555377960205
    4. 'aff' → logprob: -4.219555377960205
    5. ' assign' → logprob: -5.344555377960205
    6. 'aj' → logprob: -5.719555377960205
    7. ' affect' → logprob: -6.594555377960205
    8. '   ' → logprob: -7.344555377960205
    9. 'ap' → logprob: -7.469555377960205
    10. 'util' → logprob: -7.719555377960205

Token 295: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0003408263437449932
    2. 'é' → logprob: -8.000340461730957
    3. 'e' → logprob: -12.250340461730957
    4. ' er' → logprob: -15.625340461730957
    5. '   ' → logprob: -16.250341415405273
    6. 'ér' → logprob: -16.375341415405273
    7. 'a' → logprob: -16.625341415405273
    8. '­er' → logprob: -16.750341415405273
    9. '       ' → logprob: -17.250341415405273
    10. ''er' → logprob: -18.125341415405273

Token 296: ' aux' (ID: 5850)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05593051016330719
    2. '):
' → logprob: -3.5559306144714355
    3. ')' → logprob: -4.1809306144714355
    4. '   ' → logprob: -4.9309306144714355
    5. '       ' → logprob: -5.9309306144714355
    6. '           ' → logprob: -7.8059306144714355
    7. ' ):' → logprob: -8.930930137634277
    8. '):
' → logprob: -10.180930137634277
    9. '               ' → logprob: -10.430930137634277
    10. '.' → logprob: -10.930930137634277

Token 297: ' couples' (ID: 29972)
  Prédit: ' couples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couples' → logprob: -0.44255581498146057
    2. ' pairs' → logprob: -2.0675559043884277
    3. 'cou' → logprob: -2.1925559043884277
    4. 'pairs' → logprob: -2.5675559043884277
    5. ')' → logprob: -3.5675559043884277
    6. 'indices' → logprob: -5.317555904388428
    7. ' indices' → logprob: -5.692555904388428
    8. 'l' → logprob: -6.567555904388428
    9. '   ' → logprob: -7.067555904388428
    10. ' ' → logprob: -7.442555904388428

Token 298: ' inter' (ID: 993)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6024409532546997
    2. ')' → logprob: -1.1024409532546997
    3. ' )' → logprob: -2.60244083404541
    4. ',' → logprob: -3.85244083404541
    5. 'd' → logprob: -4.72744083404541
    6. ' ,' → logprob: -5.60244083404541
    7. ' (' → logprob: -5.60244083404541
    8. ' de' → logprob: -6.47744083404541
    9. '),' → logprob: -6.97744083404541
    10. '(indices' → logprob: -7.22744083404541

Token 299: '-group' (ID: 9496)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.0167515277862549
    2. '_' → logprob: -1.2667515277862549
    3. '   ' → logprob: -2.016751527786255
    4. '_indices' → logprob: -2.516751527786255
    5. '_list' → logprob: -3.766751527786255
    6. 'actions' → logprob: -3.891751527786255
    7. '_l' → logprob: -4.266751289367676
    8. '-' → logprob: -4.516751289367676
    9. 'ieurs' → logprob: -4.641751289367676
    10. ')' → logprob: -4.766751289367676

Token 300: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.04633566364645958
    2. 'roup' → logprob: -4.671335697174072
    3. 's' → logprob: -4.796335697174072
    4. 'p' → logprob: -5.046335697174072
    5. 'pes' → logprob: -5.421335697174072
    6. 'oupes' → logprob: -5.546335697174072
    7. 'roups' → logprob: -5.796335697174072
    8. 'ements' → logprob: -6.421335697174072
    9. 'ments' → logprob: -6.421335697174072
    10. 'ment' → logprob: -6.796335697174072

Token 301: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1990742683410645
    2. '       ' → logprob: -1.1990742683410645
    3. ').' → logprob: -1.5740742683410645
    4. '):
' → logprob: -2.6990742683410645
    5. '):' → logprob: -2.9490742683410645
    6. '.' → logprob: -3.4490742683410645
    7. '   ' → logprob: -3.9490742683410645
    8. 's' → logprob: -4.8240742683410645
    9. '           ' → logprob: -4.8240742683410645
    10. ' )' → logprob: -7.6990742683410645

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05714111030101776
    2. '   ' → logprob: -3.432141065597534
    3. ')' → logprob: -3.807141065597534
    4. '"""' → logprob: -7.557141304016113
    5. '        
' → logprob: -8.932141304016113
    6. '    
' → logprob: -9.182141304016113
    7. '           ' → logprob: -9.307141304016113
    8. ')
' → logprob: -10.682141304016113
    9. '"""
' → logprob: -10.932141304016113
    10. '<|end|>' → logprob: -11.057141304016113

Token 303: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28682011365890503
    2. '       ' → logprob: -1.4118201732635498
    3. ')' → logprob: -5.911819934844971
    4. '"""' → logprob: -6.036819934844971
    5. 'if' → logprob: -8.286820411682129
    6. '    
' → logprob: -9.536820411682129
    7. '        
' → logprob: -9.911820411682129
    8. '"""
' (adapté à ' """
') → logprob: -9.911820411682129
    9. '           ' → logprob: -10.911820411682129
    10. ')
' → logprob: -10.911820411682129

Token 304: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07911549508571625
    2. '       ' → logprob: -2.579115390777588
    3. 'if' → logprob: -8.579115867614746
    4. ' if' → logprob: -10.704115867614746
    5. '    
' → logprob: -11.954115867614746
    6. '    ' → logprob: -12.704115867614746
    7. '        
' → logprob: -13.204115867614746
    8. '     ' → logprob: -13.954115867614746
    9. '  ' → logprob: -14.704115867614746
    10. 's' → logprob: -14.704115867614746

Token 305: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03929365798830986
    2. '   ' → logprob: -3.5392937660217285
    3. ' if' → logprob: -4.6642937660217285
    4. 'n' → logprob: -10.41429328918457
    5. '       ' → logprob: -10.91429328918457
    6. 'long' → logprob: -11.66429328918457
    7. 'tail' → logprob: -12.28929328918457
    8. 'length' → logprob: -12.41429328918457
    9. '    
' → logprob: -13.53929328918457
    10. '	if' → logprob: -13.91429328918457

Token 306: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07902947068214417
    2. ' if' → logprob: -2.5790295600891113
    3. 'length' → logprob: -9.954029083251953
    4. '   ' → logprob: -10.329029083251953
    5. 'n' → logprob: -10.579029083251953
    6. '       ' → logprob: -10.579029083251953
    7. ' n' → logprob: -13.329029083251953
    8. 'size' → logprob: -13.329029083251953
    9. 'tail' → logprob: -13.704029083251953
    10. 's' → logprob: -13.829029083251953

Token 307: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5759433507919312
    2. 'len' → logprob: -0.8259433507919312
    3. '   ' → logprob: -12.950942993164062
    4. '(len' → logprob: -14.075942993164062
    5. ' ' → logprob: -14.700942993164062
    6. ' not' → logprob: -15.325942993164062
    7. 'not' → logprob: -16.575942993164062
    8. '  ' → logprob: -17.450942993164062
    9. '	len' → logprob: -17.450942993164062
    10. 'l' → logprob: -18.450942993164062

Token 308: ' sous' (ID: 14487)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.37370461225509644
    2. 'long' → logprob: -1.2487046718597412
    3. 'tail' → logprob: -4.373704433441162
    4. 'liste' → logprob: -4.498704433441162
    5. 'lon' → logprob: -7.373704433441162
    6. ' longueur' → logprob: -7.998704433441162
    7. 'length' → logprob: -9.99870491027832
    8. '   ' → logprob: -10.12370491027832
    9. 'fin' → logprob: -10.12370491027832
    10. 'log' → logprob: -11.12370491027832

Token 309: '-l' (ID: 2887)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.3893238604068756
    2. 'liste' → logprob: -2.5143239498138428
    3. '_list' → logprob: -2.7643239498138428
    4. '_' → logprob: -2.8893239498138428
    5. '_indices' → logprob: -2.8893239498138428
    6. '   ' → logprob: -3.6393239498138428
    7. '-l' → logprob: -4.389323711395264
    8. '_len' → logprob: -5.014323711395264
    9. 'len' → logprob: -5.264323711395264
    10. '_lista' → logprob: -6.389323711395264

Token 310: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0015487833879888058
    2. 'liste' → logprob: -7.501548767089844
    3. 'ist' → logprob: -7.876548767089844
    4. 'ste' → logprob: -8.376548767089844
    5. '   ' → logprob: -9.376548767089844
    6. 'site' → logprob: -9.501548767089844
    7. 'is' → logprob: -10.501548767089844
    8. 'ite' → logprob: -11.126548767089844
    9. 'en' → logprob: -11.376548767089844
    10. 'Liste' → logprob: -11.439048767089844

Token 311: ' ne' (ID: 453)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.24869482219219208
    2. 'a' → logprob: -2.373694896697998
    3. ' a' → logprob: -2.373694896697998
    4. '(len' → logprob: -4.498694896697998
    5. '   ' → logprob: -4.873694896697998
    6. 'est' → logprob: -6.123694896697998
    7. ' contient' → logprob: -6.248694896697998
    8. ' est' → logprob: -6.748694896697998
    9. '<len' → logprob: -6.873694896697998
    10. '=len' → logprob: -6.998694896697998

Token 312: ' comprend' (ID: 53093)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3384411334991455
    2. 'est' → logprob: -2.4634411334991455
    3. ' a' → logprob: -2.8384411334991455
    4. 's' → logprob: -3.2134411334991455
    5. 'len' → logprob: -3.4634411334991455
    6. ' contient' → logprob: -3.4634411334991455
    7. ' comporte' → logprob: -5.338440895080566
    8. '   ' → logprob: -5.463440895080566
    9. '_len' → logprob: -5.588440895080566
    10. ' peut' → logprob: -5.713440895080566

Token 313: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.43262821435928345
    2. 'pas' → logprob: -1.4326281547546387
    3. ' qu' → logprob: -2.3076281547546387
    4. 'moins' → logprob: -5.307628154754639
    5. ' pas' → logprob: -5.932628154754639
    6. 'plus' → logprob: -6.057628154754639
    7. 'r' → logprob: -7.057628154754639
    8. 'que' → logprob: -7.182628154754639
    9. 't' → logprob: -8.557628631591797
    10. '<=' → logprob: -8.557628631591797

Token 314: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.029828239232301712
    2. 'un' → logprob: -3.9048283100128174
    3. 'e' → logprob: -4.904828071594238
    4. ''une' → logprob: -7.029828071594238
    5. 'pas' → logprob: -8.029828071594238
    6. 'u' → logprob: -8.654828071594238
    7. '’un' → logprob: -8.779828071594238
    8. ''' → logprob: -9.404828071594238
    9. ''au' → logprob: -9.404828071594238
    10. '['' → logprob: -10.654828071594238

Token 315: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.012615473940968513
    2. 'se' → logprob: -5.01261568069458
    3. 'e' → logprob: -6.13761568069458
    4. 'élé' → logprob: -6.51261568069458
    5. ' élément' → logprob: -6.51261568069458
    6. ' seule' → logprob: -7.88761568069458
    7. ' unique' → logprob: -9.137615203857422
    8. 'element' → logprob: -9.762615203857422
    9. ' ' → logprob: -9.887615203857422
    10. ' element' → logprob: -10.012615203857422

Token 316: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.31382331252098083
    2. ' élément' → logprob: -1.3138233423233032
    3. 'indice' → logprob: -8.188823699951172
    4. 'element' → logprob: -8.438823699951172
    5. 'é' → logprob: -10.938823699951172
    6. 'él' → logprob: -11.313823699951172
    7. ' indice' → logprob: -11.688823699951172
    8. 'index' → logprob: -12.063823699951172
    9. ' element' → logprob: -12.188823699951172
    10. ' ' → logprob: -12.313823699951172

Token 317: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.510148286819458
    2. ' or' → logprob: -1.260148286819458
    3. ' ou' → logprob: -3.135148286819458
    4. 'or' → logprob: -3.510148286819458
    5. '           ' → logprob: -4.010148048400879
    6. ',' → logprob: -4.635148048400879
    7. ':' → logprob: -4.885148048400879
    8. 'ou' → logprob: -5.510148048400879
    9. '   ' → logprob: -6.010148048400879
    10. 'return' → logprob: -8.760148048400879

Token 318: ' il' (ID: 1793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35560914874076843
    2. 'return' → logprob: -1.3556091785430908
    3. ' return' → logprob: -3.230609178543091
    4. '   ' → logprob: -6.355608940124512
    5. '	return' → logprob: -9.605608940124512
    6. '           ' → logprob: -9.855608940124512
    7. 'ret' → logprob: -9.980608940124512
    8. ' retour' → logprob: -11.480608940124512
    9. '	' → logprob: -12.480608940124512
    10. '	   ' → logprob: -12.730608940124512

Token 319: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7920513153076172
    2. 'return' → logprob: -0.9170513153076172
    3. '   ' → logprob: -2.917051315307617
    4. ' return' → logprob: -3.417051315307617
    5. ' n' → logprob: -3.542051315307617
    6. 'f' → logprob: -3.667051315307617
    7. ' faut' → logprob: -5.542051315307617
    8. 'est' → logprob: -7.542051315307617
    9. 's' → logprob: -7.792051315307617
    10. 'ne' → logprob: -8.167051315307617

Token 320: ''y' (ID: 27913)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.151356041431427
    2. 'est' → logprob: -2.7763559818267822
    3. '   ' → logprob: -3.2763559818267822
    4. 'f' → logprob: -3.7763559818267822
    5. ' n' → logprob: -4.651356220245361
    6. '       ' → logprob: -5.401356220245361
    7. 'y' → logprob: -6.901356220245361
    8. 'n't' → logprob: -7.151356220245361
    9. 'return' → logprob: -7.151356220245361
    10. 'ny' → logprob: -8.901355743408203

Token 321: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -9.000203132629395
    3. 'plus' → logprob: -9.625203132629395
    4. 'pas' → logprob: -11.875203132629395
    5. 'y' → logprob: -13.000203132629395
    6. ''a' → logprob: -13.500203132629395
    7. 'have' → logprob: -14.000203132629395
    8. '[a' → logprob: -14.125203132629395
    9. 'has' → logprob: -14.625203132629395
    10. 'à' → logprob: -15.625203132629395

Token 322: ' plus' (ID: 2932)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14823250472545624
    2. 'plus' → logprob: -2.2732324600219727
    3. ' rien' → logprob: -3.5232324600219727
    4. 'pas' → logprob: -5.648232460021973
    5. ' plus' → logprob: -6.398232460021973
    6. ' pas' → logprob: -9.898232460021973
    7. '   ' → logprob: -11.398232460021973
    8. '```' → logprob: -11.773232460021973
    9. ' ' → logprob: -11.898232460021973
    10. 'nothing' → logprob: -12.148232460021973

Token 323: ' rien' (ID: 23082)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4980451762676239
    2. 'r' → logprob: -1.4980452060699463
    3. ' rien' → logprob: -2.1230452060699463
    4. ' de' → logprob: -3.3730452060699463
    5. 'qu' → logprob: -4.873044967651367
    6. 'à' → logprob: -5.873044967651367
    7. 'd' → logprob: -6.248044967651367
    8. 'quoi' → logprob: -7.623044967651367
    9. ' besoin' → logprob: -7.873044967651367
    10. 'pas' → logprob: -8.373044967651367

Token 324: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.14880084991455078
    2. 'à' → logprob: -2.023800849914551
    3. ' ' → logprob: -5.398800849914551
    4. '   ' → logprob: -6.648800849914551
    5. 'a' → logprob: -9.27380084991455
    6. 'À' → logprob: -9.89880084991455
    7. ' a' → logprob: -10.14880084991455
    8. '       ' → logprob: -10.77380084991455
    9. '  ' → logprob: -10.89880084991455
    10. ''à' → logprob: -10.89880084991455

Token 325: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.011978916823863983
    2. 'partition' → logprob: -4.761979103088379
    3. ' faire' → logprob: -5.761979103088379
    4. 'part' → logprob: -8.511979103088379
    5. ' partition' → logprob: -12.261979103088379
    6. 'f' → logprob: -13.261979103088379
    7. 'fait' → logprob: -13.261979103088379
    8. '   ' → logprob: -13.261979103088379
    9. 'Faire' → logprob: -14.136979103088379
    10. ' Faire' → logprob: -14.636979103088379

Token 326: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030812209006398916
    2. '           ' → logprob: -6.003081321716309
    3. 'if' → logprob: -8.628081321716309
    4. '   ' → logprob: -8.753081321716309
    5. '.' → logprob: -9.628081321716309
    6. ',' → logprob: -9.878081321716309
    7. ':' → logprob: -10.128081321716309
    8. ' if' → logprob: -10.253081321716309
    9. 'return' → logprob: -10.253081321716309
    10. ' or' → logprob: -10.753081321716309

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001564586127642542
    2. '   ' → logprob: -9.00015640258789
    3. 'if' → logprob: -11.12515640258789
    4. ',' → logprob: -11.50015640258789
    5. ' if' → logprob: -12.37515640258789
    6. '           ' → logprob: -13.25015640258789
    7. '      ' → logprob: -14.87515640258789
    8. 's' → logprob: -15.00015640258789
    9. '.' → logprob: -15.12515640258789
    10. '```' → logprob: -15.37515640258789

Token 328: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04643091559410095
    2. '       ' → logprob: -3.796430826187134
    3. ' if' → logprob: -3.796430826187134
    4. '   ' → logprob: -7.671431064605713
    5. '	if' → logprob: -13.921430587768555
    6. ' ' → logprob: -15.171430587768555
    7. '           ' → logprob: -15.546430587768555
    8. '  ' → logprob: -15.796430587768555
    9. '    ' → logprob: -16.046430587768555
    10. 'si' → logprob: -16.421430587768555

Token 329: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16022726893424988
    2. ' len' → logprob: -1.9102272987365723
    3. '   ' → logprob: -13.160226821899414
    4. '(len' → logprob: -14.285226821899414
    5. ' ' → logprob: -15.160226821899414
    6. '  ' → logprob: -16.410226821899414
    7. '	len' → logprob: -16.535226821899414
    8. '1' → logprob: -17.535226821899414
    9. '[len' → logprob: -17.785226821899414
    10. '=len' → logprob: -18.535226821899414

Token 330: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0004963174578733742
    2. '(' → logprob: -7.6254963874816895
    3. ' (' → logprob: -12.250495910644531
    4. '(
' → logprob: -13.500495910644531
    5. 'l' → logprob: -14.250495910644531
    6. '	l' → logprob: -14.875495910644531
    7. '(lst' → logprob: -15.625495910644531
    8. '(

' → logprob: -15.625495910644531
    9. '(lista' → logprob: -16.00049591064453
    10. ' ' → logprob: -16.12549591064453

Token 331: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0018567692022770643
    2. '(l' → logprob: -6.751856803894043
    3. 'ist' → logprob: -8.126856803894043
    4. '(' → logprob: -8.251856803894043
    5. 'liste' → logprob: -10.626856803894043
    6. 'ste' → logprob: -10.876856803894043
    7. 'a' → logprob: -11.251856803894043
    8. 'is' → logprob: -11.376856803894043
    9. '[' → logprob: -11.876856803894043
    10. '(a' → logprob: -12.126856803894043

Token 332: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.000499297515489161
    2. '(indices' → logprob: -7.625499248504639
    3. 'indices' → logprob: -12.375499725341797
    4. '_' → logprob: -13.250499725341797
    5. '   ' → logprob: -13.500499725341797
    6. '"indices' → logprob: -13.625499725341797
    7. '(l' → logprob: -13.875499725341797
    8. ' _' → logprob: -14.750499725341797
    9. 'Indices' → logprob: -15.250499725341797
    10. '_ind' → logprob: -15.250499725341797

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009853479452431202
    2. ' <=' → logprob: -6.134853363037109
    3. ' )' → logprob: -6.259853363037109
    4. ')<=' → logprob: -6.384853363037109
    5. '<=' → logprob: -6.509853363037109
    6. '==' → logprob: -6.509853363037109
    7. ')==' → logprob: -7.384853363037109
    8. ' ==' → logprob: -7.759853363037109
    9. 'le' → logprob: -11.50985336303711
    10. '   ' → logprob: -12.88485336303711

Token 334: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5025753974914551
    2. ' <=' → logprob: -1.377575397491455
    3. '==' → logprob: -2.127575397491455
    4. ' ==' → logprob: -3.752575397491455
    5. ')' → logprob: -9.002574920654297
    6. ')<=' → logprob: -9.377574920654297
    7. '<' → logprob: -11.377574920654297
    8. '1' → logprob: -11.877574920654297
    9. ')==' → logprob: -11.877574920654297
    10. 'le' → logprob: -12.252574920654297

Token 335: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '0' → logprob: -15.875380516052246
    4. '   ' → logprob: -16.37537956237793
    5. '```' → logprob: -18.12537956237793
    6. '  ' → logprob: -18.50037956237793
    7. ' ' → logprob: -19.12537956237793
    8. '۱' → logprob: -19.87537956237793
    9. '    ' → logprob: -20.81287956237793
    10. '=' → logprob: -20.93787956237793

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '0' → logprob: -16.750009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '```' → logprob: -18.500009536743164
    6. ')' → logprob: -19.500009536743164
    7. '  ' → logprob: -19.812509536743164
    8. '
' → logprob: -20.125009536743164
    9. '۱' → logprob: -20.437509536743164
    10. '2' → logprob: -20.562509536743164

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12842385470867157
    2. ':
' → logprob: -2.1284239292144775
    3. ':return' → logprob: -6.878423690795898
    4. '       ' → logprob: -8.003423690795898
    5. '   ' → logprob: -9.253423690795898
    6. '           ' → logprob: -11.003423690795898
    7. ' or' → logprob: -11.753423690795898
    8. 'return' → logprob: -12.378423690795898
    9. ':
' → logprob: -12.878423690795898
    10. '):
' → logprob: -14.128423690795898

Token 338: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00791996717453003
    2. '           ' → logprob: -5.507919788360596
    3. ':' → logprob: -5.882919788360596
    4. ':
' → logprob: -7.257919788360596
    5. 'return' → logprob: -8.507920265197754
    6. ':return' → logprob: -9.632920265197754
    7. ' return' → logprob: -10.382920265197754
    8. '   ' → logprob: -10.632920265197754
    9. '               ' → logprob: -11.632920265197754
    10. ',' → logprob: -12.882920265197754

Token 339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4373716413974762
    2. '       ' → logprob: -1.6873716115951538
    3. '           ' → logprob: -1.9373716115951538
    4. ' return' → logprob: -3.6873717308044434
    5. '               ' → logprob: -9.687371253967285
    6. '   ' → logprob: -9.687371253967285
    7. '
' → logprob: -11.687371253967285
    8. '	return' → logprob: -12.187371253967285
    9. ':return' → logprob: -12.937371253967285
    10. '{return' → logprob: -14.687371253967285

Token 340: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6998523473739624
    2. '
' → logprob: -1.0748523473739624
    3. '        
' → logprob: -2.574852466583252
    4. '    
' → logprob: -2.699852466583252
    5. '   ' → logprob: -5.199852466583252
    6. '  
' → logprob: -5.199852466583252
    7. '\n' → logprob: -5.949852466583252
    8. '<|end|>' → logprob: -6.074852466583252
    9. ' 
' → logprob: -7.824852466583252
    10. '    ' → logprob: -8.574851989746094

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07235981523990631
    2. 'mil' → logprob: -3.322359800338745
    3. '   ' → logprob: -4.197360038757324
    4. 'mid' → logprob: -4.322360038757324
    5. '        
' → logprob: -5.947360038757324
    6. 'split' → logprob: -7.697360038757324
    7. 'm' → logprob: -7.947360038757324
    8. '    
' → logprob: -8.072360038757324
    9. 'middle' → logprob: -8.197360038757324
    10. ' mid' → logprob: -8.322360038757324

Token 342: ' #' (ID: 1069)
  Prédit: 'mil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mil' → logprob: -0.2214050590991974
    2. 'mid' → logprob: -1.721405029296875
    3. '       ' → logprob: -4.846405029296875
    4. '   ' → logprob: -5.596405029296875
    5. 'mo' → logprob: -6.096405029296875
    6. '#' (adapté à ' #') → logprob: -6.096405029296875
    7. ' mid' → logprob: -6.221405029296875
    8. 'mi' → logprob: -7.221405029296875
    9. ' milieu' → logprob: -7.971405029296875
    10. 'm' → logprob: -8.846405029296875

Token 343: ' Division' (ID: 25413)
  Prédit: 'mil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mil' → logprob: -0.16740192472934723
    2. 'mid' → logprob: -1.917401909828186
    3. ' mid' → logprob: -5.5424017906188965
    4. ' milieu' → logprob: -6.1674017906188965
    5. 'mi' → logprob: -7.2924017906188965
    6. '   ' → logprob: -8.917402267456055
    7. 'mo' → logprob: -9.292402267456055
    8. 'm' → logprob: -9.667402267456055
    9. '       ' → logprob: -10.292402267456055
    10. 'middle' → logprob: -10.417402267456055

Token 344: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5860923528671265
    2. ' en' → logprob: -1.7110923528671265
    3. ' =' → logprob: -1.8360923528671265
    4. 'en' → logprob: -1.9610923528671265
    5. 'de' → logprob: -2.711092472076416
    6. ' de' → logprob: -2.961092472076416
    7. 'mid' → logprob: -3.336092472076416
    8. ' midpoint' → logprob: -3.461092472076416
    9. 'du' → logprob: -3.961092472076416
    10. '_' → logprob: -3.961092472076416

Token 345: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.11067268997430801
    2. ' deux' → logprob: -2.36067271232605
    3. '2' → logprob: -4.860672473907471
    4. ' ' → logprob: -6.485672473907471
    5. 'two' → logprob: -8.235672950744629
    6. 'm' → logprob: -9.110672950744629
    7. 'mid' → logprob: -9.235672950744629
    8. 'mo' → logprob: -9.235672950744629
    9. '[' → logprob: -9.610672950744629
    10. '   ' → logprob: -9.610672950744629

Token 346: ' sous' (ID: 14487)
  Prédit: ' mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mo' → logprob: -1.382941722869873
    2. 'part' → logprob: -1.382941722869873
    3. 'mo' → logprob: -1.507941722869873
    4. ' parts' → logprob: -1.882941722869873
    5. 'parts' → logprob: -3.132941722869873
    6. ' parties' → logprob: -3.757941722869873
    7. 's' → logprob: -4.757941722869873
    8. ' listes' → logprob: -5.257941722869873
    9. ' part' → logprob: -5.632941722869873
    10. ' ég' → logprob: -5.757941722869873

Token 347: '-list' (ID: 18463)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04839225858449936
    2. '-list' → logprob: -3.6733922958374023
    3. 'list' → logprob: -4.548392295837402
    4. '-' → logprob: -5.048392295837402
    5. '_lists' → logprob: -6.548392295837402
    6. '_' → logprob: -7.048392295837402
    7. '_group' → logprob: -7.423392295837402
    8. '_part' → logprob: -7.673392295837402
    9. '-part' → logprob: -7.798392295837402
    10. '   ' → logprob: -8.673392295837402

Token 348: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00030686063109897077
    2. 's' → logprob: -8.750307083129883
    3. 'tes' → logprob: -9.500307083129883
    4. 'és' → logprob: -10.875307083129883
    5. 'istes' → logprob: -11.625307083129883
    6. 'e' → logprob: -11.750307083129883
    7. 'sets' → logprob: -12.000307083129883
    8. 'ces' → logprob: -12.750307083129883
    9. '   ' → logprob: -13.125307083129883
    10. 'res' → logprob: -13.125307083129883

Token 349: ' (' (ID: 350)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.7323831915855408
    2. ',' → logprob: -2.2323832511901855
    3. ' mid' → logprob: -2.4823832511901855
    4. ' =' → logprob: -2.8573832511901855
    5. '       ' → logprob: -2.9823832511901855
    6. ' midpoint' → logprob: -3.1073832511901855
    7. '        
' → logprob: -3.2323832511901855
    8. '[mid' → logprob: -3.3573832511901855
    9. ':' → logprob: -3.4823832511901855
    10. '(mid' → logprob: -4.4823832511901855

Token 350: 'élé' (ID: 15228)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5599241256713867
    2. 'mid' → logprob: -1.8099241256713867
    3. 'mil' → logprob: -1.9349241256713867
    4. ' milieu' → logprob: -2.9349241256713867
    5. ')' → logprob: -3.8099241256713867
    6. ')
' → logprob: -4.934924125671387
    7. '):
' → logprob: -5.184924125671387
    8. '   ' → logprob: -5.309924125671387
    9. 'm' → logprob: -5.309924125671387
    10. ' midpoint' → logprob: -5.684924125671387

Token 351: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0792628601193428
    2. 'ment' → logprob: -2.5792629718780518
    3. 'mente' → logprob: -8.829262733459473
    4. 'm' → logprob: -9.204262733459473
    5. 'v' → logprob: -10.829262733459473
    6. 'mentar' → logprob: -11.329262733459473
    7. '[' → logprob: -11.454262733459473
    8. 'phants' → logprob: -11.579262733459473
    9. '```' → logprob: -11.954262733459473
    10. 'nts' → logprob: -12.079262733459473

Token 352: ' pairs' (ID: 24702)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3945574760437012
    2. 'mil' → logprob: -1.3945574760437012
    3. 'mid' → logprob: -2.519557476043701
    4. '   ' → logprob: -2.644557476043701
    5. ' milieu' → logprob: -2.769557476043701
    6. ' gauche' → logprob: -3.144557476043701
    7. ' =' → logprob: -3.519557476043701
    8. ' du' → logprob: -3.644557476043701
    9. '_g' → logprob: -3.894557476043701
    10. '[mid' → logprob: -4.019557476043701

Token 353: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.253099262714386
    2. 'et' → logprob: -1.8780992031097412
    3. ',' → logprob: -2.878099203109741
    4. '   ' → logprob: -5.37809944152832
    5. ')' → logprob: -5.50309944152832
    6. ' and' → logprob: -5.75309944152832
    7. ' ' → logprob: -7.75309944152832
    8. ' ,' → logprob: -7.87809944152832
    9. '_et' → logprob: -8.00309944152832
    10. '),' → logprob: -8.87809944152832

Token 354: ' imp' (ID: 3282)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.22603727877140045
    2. ' imp' → logprob: -1.6010372638702393
    3. 'im' → logprob: -8.35103702545166
    4. ' éléments' → logprob: -8.60103702545166
    5. 'élé' → logprob: -9.72603702545166
    6. 'indices' → logprob: -10.72603702545166
    7. ' impair' → logprob: -10.72603702545166
    8. 'n' → logprob: -11.22603702545166
    9. '_imp' → logprob: -11.22603702545166
    10. 'd' → logprob: -11.35103702545166

Token 355: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.002931821858510375
    2. 'air' → logprob: -6.002931594848633
    3. 'aires' → logprob: -8.002931594848633
    4. 'ar' → logprob: -9.752931594848633
    5. 'a' → logprob: -10.502931594848633
    6. '   ' → logprob: -11.377931594848633
    7. 'ares' → logprob: -12.127931594848633
    8. ' ' → logprob: -12.752931594848633
    9. 'aris' → logprob: -13.002931594848633
    10. 'aire' → logprob: -13.377931594848633

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2160566747188568
    2. ')
' → logprob: -1.9660567045211792
    3. ',' → logprob: -3.3410565853118896
    4. '):
' → logprob: -5.216056823730469
    5. '):' → logprob: -5.341056823730469
    6. ' )' → logprob: -6.841056823730469
    7. '   ' → logprob: -6.841056823730469
    8. '       ' → logprob: -7.091056823730469
    9. ')

' → logprob: -7.341056823730469
    10. ' )
' → logprob: -7.341056823730469

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03615913167595863
    2. '        
' → logprob: -3.411159038543701
    3. 's' → logprob: -7.161159038543701
    4. '
' → logprob: -7.911159038543701
    5. '    
' → logprob: -8.53615951538086
    6. '        ' → logprob: -8.91115951538086
    7. '   ' → logprob: -9.16115951538086
    8. ',' → logprob: -9.28615951538086
    9. '       
' → logprob: -9.41115951538086
    10. 'indices' → logprob: -9.78615951538086

Token 358: ' sous' (ID: 14487)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.8823287487030029
    2. 'pairs' → logprob: -1.257328748703003
    3. '       ' → logprob: -1.882328748703003
    4. 'g' → logprob: -3.632328748703003
    5. 'p' → logprob: -3.882328748703003
    6. ' p' → logprob: -4.257328987121582
    7. ' gauche' → logprob: -4.382328987121582
    8. 'pair' → logprob: -4.507328987121582
    9. ' indices' → logprob: -4.632328987121582
    10. 'even' → logprob: -4.757328987121582

Token 359: '_l' (ID: 1478)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1029454916715622
    2. '_indices' → logprob: -3.102945566177368
    3. '_l' → logprob: -3.352945566177368
    4. '_lists' → logprob: -4.977945327758789
    5. 'list' → logprob: -5.852945327758789
    6. '_lst' → logprob: -6.227945327758789
    7. 'liste' → logprob: -6.227945327758789
    8. 's' → logprob: -6.977945327758789
    9. '_' → logprob: -7.227945327758789
    10. 'indices' → logprob: -7.477945327758789

Token 360: 'iste' (ID: 4872)
  Prédit: 'istes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istes' → logprob: -0.3584017753601074
    2. 'iste' → logprob: -1.2334017753601074
    3. 'ist' → logprob: -4.983401775360107
    4. '_' → logprob: -6.858401775360107
    5. '_list' → logprob: -7.858401775360107
    6. 'is' → logprob: -8.608402252197266
    7. 'isted' → logprob: -8.858402252197266
    8. 'list' → logprob: -8.983402252197266
    9. 'ists' → logprob: -8.983402252197266
    10. '   ' → logprob: -9.358402252197266

Token 361: '_' (ID: 62)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.19515421986579895
    2. '_p' → logprob: -3.1951541900634766
    3. '_pair' → logprob: -3.4451541900634766
    4. '_' → logprob: -3.5701541900634766
    5. '_g' → logprob: -3.9451541900634766
    6. ' =' → logprob: -4.070154190063477
    7. 'g' → logprob: -4.445154190063477
    8. '1' → logprob: -4.445154190063477
    9. '_even' → logprob: -5.445154190063477
    10. 'pairs' → logprob: -5.945154190063477

Token 362: '0' (ID: 15)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.6985753774642944
    2. '_pairs' → logprob: -0.9485753774642944
    3. 'pair' → logprob: -2.823575496673584
    4. '_p' → logprob: -3.948575496673584
    5. 'g' → logprob: -4.823575496673584
    6. '_' → logprob: -4.823575496673584
    7. 'p' → logprob: -5.073575496673584
    8. '1' → logprob: -5.073575496673584
    9. '_pair' → logprob: -6.198575496673584
    10. 'pares' → logprob: -6.698575496673584

Token 363: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16034628450870514
    2. '=' → logprob: -1.910346269607544
    3. ',' → logprob: -9.410346031188965
    4. '=[' → logprob: -10.785346031188965
    5. '=[]' → logprob: -12.535346031188965
    6. ' =[' → logprob: -12.535346031188965
    7. 's' → logprob: -12.785346031188965
    8. '   ' → logprob: -13.160346031188965
    9. '0' → logprob: -13.160346031188965
    10. '[' → logprob: -13.535346031188965

Token 364: ' liste' (ID: 31719)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.02224891074001789
    2. '[' → logprob: -4.3972487449646
    3. '[i' → logprob: -4.7722487449646
    4. ' [' → logprob: -7.5222487449646
    5. '[list' → logprob: -7.7722487449646
    6. '[s' → logprob: -9.022249221801758
    7. '[ind' → logprob: -9.772249221801758
    8. '[n' → logprob: -10.897249221801758
    9. '[index' → logprob: -10.897249221801758
    10. 'liste' → logprob: -12.272249221801758

Token 365: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.01364741288125515
    2. '[' → logprob: -5.013647556304932
    3. '[i' → logprob: -5.138647556304932
    4. 'indices' → logprob: -8.138647079467773
    5. 'i' → logprob: -8.888647079467773
    6. '([' → logprob: -9.263647079467773
    7. '[ind' → logprob: -9.513647079467773
    8. '(indices' → logprob: -9.638647079467773
    9. 'd' → logprob: -9.888647079467773
    10. 'Indices' → logprob: -9.888647079467773

Token 366: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010491237044334412
    2. '[:' → logprob: -6.876049041748047
    3. ':' → logprob: -12.501049041748047
    4. ' [' → logprob: -12.626049041748047
    5. '0' → logprob: -13.501049041748047
    6. '[:]' → logprob: -13.876049041748047
    7. '   ' → logprob: -14.001049041748047
    8. ',' → logprob: -14.126049041748047
    9. '[
' → logprob: -14.126049041748047
    10. ':[' → logprob: -14.626049041748047

Token 367: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.24923178553581238
    2. '0' → logprob: -1.8742318153381348
    3. ':' → logprob: -2.7492318153381348
    4. ' :' → logprob: -6.624231815338135
    5. '[' → logprob: -7.374231815338135
    6. '::-' → logprob: -8.374231338500977
    7. '::
' → logprob: -8.499231338500977
    8. ' ' → logprob: -8.499231338500977
    9. ':::' → logprob: -8.874231338500977
    10. ':
' → logprob: -9.249231338500977

Token 368: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. ']' → logprob: -17.000009536743164
    4. '1' → logprob: -17.250009536743164
    5. '   ' → logprob: -18.375009536743164
    6. '
' → logprob: -18.375009536743164
    7. '```' → logprob: -18.500009536743164
    8. '２' → logprob: -19.250009536743164
    9. '۲' → logprob: -19.312509536743164
    10. '

' → logprob: -19.562509536743164

Token 369: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10046619921922684
    2. ']
' → logprob: -2.350466251373291
    3. ' ]' → logprob: -8.850465774536133
    4. ']
' → logprob: -9.725465774536133
    5. ' ]
' → logprob: -10.225465774536133
    6. ']

' → logprob: -10.850465774536133
    7. ' ' → logprob: -15.225465774536133
    8. '   ' → logprob: -15.350465774536133
    9. ' ]
' → logprob: -16.100465774536133
    10. 's' → logprob: -16.225465774536133

Token 370: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16598206758499146
    2. 's' → logprob: -1.9159820079803467
    3. '
' → logprob: -5.665982246398926
    4. '        
' → logprob: -6.290982246398926
    5. '\n' → logprob: -9.040982246398926
    6. '    
' → logprob: -9.665982246398926
    7. '   ' → logprob: -10.040982246398926
    8. '
' → logprob: -10.040982246398926
    9. '_s' → logprob: -10.415982246398926
    10. 'n' → logprob: -10.790982246398926

Token 371: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12198153883218765
    2. ' sous' → logprob: -2.371981620788574
    3. ' liste' → logprob: -4.496981620788574
    4. 'liste' → logprob: -4.746981620788574
    5. ' ' → logprob: -7.871981620788574
    6. 'sou' → logprob: -7.996981620788574
    7. '   ' → logprob: -8.371981620788574
    8. ' ' → logprob: -8.871981620788574
    9. '       ' → logprob: -8.996981620788574
    10. '(s' → logprob: -9.746981620788574

Token 372: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.3782830137643032e-05
    2. '_' → logprob: -11.87501335144043
    3. ' _' → logprob: -13.00001335144043
    4. '_list' → logprob: -13.12501335144043
    5. '_s' → logprob: -14.87501335144043
    6. '_indices' → logprob: -15.37501335144043
    7. '_L' → logprob: -15.37501335144043
    8. 'liste' → logprob: -15.50001335144043
    9. '_li' → logprob: -15.50001335144043
    10. '[' → logprob: -15.75001335144043

Token 373: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.014594858512282372
    2. '_l' → logprob: -5.014595031738281
    3. 'liste' → logprob: -5.139595031738281
    4. '_' → logprob: -6.764595031738281
    5. '_list' → logprob: -8.764595031738281
    6. 'ist' → logprob: -9.014595031738281
    7. '[' → logprob: -9.264595031738281
    8. 'ste' → logprob: -10.014595031738281
    9. 'Liste' → logprob: -10.514595031738281
    10. 'is' → logprob: -10.514595031738281

Token 374: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0023681551683694124
    2. '1' → logprob: -6.627367973327637
    3. '[' → logprob: -6.877367973327637
    4. ' ' → logprob: -12.627367973327637
    5. '   ' → logprob: -12.752367973327637
    6. '_[' → logprob: -13.127367973327637
    7. '_=' → logprob: -14.502367973327637
    8. 'def' → logprob: -14.627367973327637
    9. 's' → logprob: -14.752367973327637
    10. ' _' → logprob: -15.002367973327637

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '[' → logprob: -16.750001907348633
    5. '```' → logprob: -17.125001907348633
    6. '+' → logprob: -18.750001907348633
    7. '0' → logprob: -18.812501907348633
    8. '    ' → logprob: -19.375001907348633
    9. '۱' → logprob: -19.437501907348633
    10. '  ' → logprob: -19.500001907348633

Token 376: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.428707480430603
    2. '=' → logprob: -1.053707480430603
    3. '=l' → logprob: -12.928707122802734
    4. 's' → logprob: -13.428707122802734
    5. '=list' → logprob: -14.428707122802734
    6. ' ' → logprob: -14.428707122802734
    7. '=s' → logprob: -14.553707122802734
    8. ']' → logprob: -15.053707122802734
    9. '[' → logprob: -15.553707122802734
    10. '=[]' → logprob: -16.178707122802734

Token 377: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5760694146156311
    2. 'liste' → logprob: -0.8260694146156311
    3. ' ' → logprob: -9.451069831848145
    4. '[' → logprob: -11.576069831848145
    5. ' lista' → logprob: -11.576069831848145
    6. '   ' → logprob: -12.451069831848145
    7. 'list' → logprob: -12.701069831848145
    8. '  ' → logprob: -12.826069831848145
    9. '[l' → logprob: -12.951069831848145
    10. 'lista' → logprob: -12.951069831848145

Token 378: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0022323327139019966
    2. 'indices' → logprob: -6.127232551574707
    3. 'Indices' → logprob: -10.877232551574707
    4. '"indices' → logprob: -11.627232551574707
    5. '[' → logprob: -11.752232551574707
    6. 'indice' → logprob: -12.127232551574707
    7. '_' → logprob: -13.877232551574707
    8. 'ind' → logprob: -14.002232551574707
    9. '```' → logprob: -14.252232551574707
    10. '(indices' → logprob: -14.377232551574707

Token 379: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ' [' → logprob: -13.750001907348633
    3. '1' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '[
' → logprob: -15.750001907348633
    6. '
' → logprob: -16.000001907348633
    7. 's' → logprob: -16.500001907348633
    8. '```' → logprob: -16.875001907348633
    9. ' ' → logprob: -17.250001907348633
    10. '[[' → logprob: -17.500001907348633

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861930102109909
    2. '[' → logprob: -4.75861930847168
    3. ' ' → logprob: -12.88361930847168
    4. '```' → logprob: -14.25861930847168
    5. '   ' → logprob: -14.88361930847168
    6. '
' → logprob: -15.25861930847168
    7. '::' → logprob: -16.00861930847168
    8. '(' → logprob: -16.00861930847168
    9. ' [' → logprob: -16.13361930847168
    10. '][' → logprob: -16.38361930847168

Token 381: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -0.0006377388490363955
    2. ':' → logprob: -7.375637531280518
    3. '[' → logprob: -12.125638008117676
    4. '::
' → logprob: -12.500638008117676
    5. ':]' → logprob: -14.125638008117676
    6. ' ::' → logprob: -15.000638008117676
    7. ']' → logprob: -15.125638008117676
    8. ':::' → logprob: -15.625638008117676
    9. '1' → logprob: -16.00063705444336
    10. '2' → logprob: -16.12563705444336

Token 382: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.250001907348633
    4. ']' → logprob: -17.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '۲' → logprob: -18.625001907348633
    7. '  ' → logprob: -19.625001907348633
    8. '２' → logprob: -19.937501907348633
    9. '1' → logprob: -20.125001907348633
    10. ')' → logprob: -20.562501907348633

Token 383: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.828512363834307e-05
    2. ' ]' → logprob: -9.625088691711426
    3. ']
' → logprob: -11.125088691711426
    4. ']

' → logprob: -12.125088691711426
    5. '   ' → logprob: -13.750088691711426
    6. '"]' → logprob: -15.375088691711426
    7. ']
' → logprob: -15.500088691711426
    8. '']' → logprob: -16.00008773803711
    9. ')' → logprob: -16.37508773803711
    10. ']

' → logprob: -16.75008773803711

Token 384: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03616028279066086
    2. '        
' → logprob: -3.4111602306365967
    3. '
' → logprob: -6.161160469055176
    4. '    
' → logprob: -8.661160469055176
    5. '   ' → logprob: -9.536160469055176
    6. '<|end|>' → logprob: -9.786160469055176
    7. 'for' → logprob: -10.286160469055176
    8. '  
' → logprob: -10.661160469055176
    9. ' for' → logprob: -11.286160469055176
    10. '       
' → logprob: -11.536160469055176

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015403309371322393
    2. 'for' → logprob: -6.501540184020996
    3. '   ' → logprob: -10.626540184020996
    4. ' for' → logprob: -11.626540184020996
    5. '        
' → logprob: -12.501540184020996
    6. '#' → logprob: -14.001540184020996
    7. '      ' → logprob: -16.376541137695312
    8. '
' → logprob: -16.626541137695312
    9. '           ' → logprob: -17.001541137695312
    10. '     ' → logprob: -17.751541137695312

Token 386: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001408805139362812
    2. '#' (adapté à ' #') → logprob: -6.751408576965332
    3. '       ' → logprob: -8.376408576965332
    4. ' for' → logprob: -12.376408576965332
    5. 'n' → logprob: -13.251408576965332
    6. '   ' → logprob: -13.751408576965332
    7. 'pour' → logprob: -14.126408576965332
    8. '        
' → logprob: -15.751408576965332
    9. 'from' → logprob: -16.50140953063965
    10. 'tail' → logprob: -16.87640953063965

Token 387: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016551809676457196
    2. '#' → logprob: -9.250165939331055
    3. '       ' → logprob: -9.875165939331055
    4. ' for' → logprob: -11.125165939331055
    5. '   ' → logprob: -13.250165939331055
    6. 'pour' → logprob: -14.375165939331055
    7. 'from' → logprob: -14.750165939331055
    8. 'n' → logprob: -15.125165939331055
    9. 'import' → logprob: -16.250165939331055
    10. '
' → logprob: -17.125165939331055

Token 388: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5236417651176453
    2. 'i' → logprob: -0.8986417651176453
    3. ' idx' → logprob: -8.648641586303711
    4. ' ' → logprob: -9.398641586303711
    5. 's' → logprob: -10.148641586303711
    6. 'a' → logprob: -10.273641586303711
    7. 'indice' → logprob: -10.898641586303711
    8. '   ' → logprob: -11.023641586303711
    9. 'idx' → logprob: -11.273641586303711
    10. ' ind' → logprob: -11.523641586303711

Token 389: ' paire' (ID: 148856)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31378933787345886
    2. ' i' → logprob: -1.3137893676757812
    3. 'indice' → logprob: -8.563789367675781
    4. 'idx' → logprob: -9.563789367675781
    5. ' idx' → logprob: -9.813789367675781
    6. 'index' → logprob: -10.563789367675781
    7. ' indice' → logprob: -10.813789367675781
    8. '```' → logprob: -10.938789367675781
    9. 'a' → logprob: -11.063789367675781
    10. ' index' → logprob: -11.188789367675781

Token 390: ' d' (ID: 272)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5821577906608582
    2. '(i' → logprob: -0.9571577906608582
    3. '(s' → logprob: -3.082157850265503
    4. ' i' → logprob: -5.207157611846924
    5. ' de' → logprob: -6.582157611846924
    6. '(' → logprob: -6.582157611846924
    7. 'i' → logprob: -6.832157611846924
    8. ' d' → logprob: -7.207157611846924
    9. 'd' → logprob: -7.832157611846924
    10. 's' → logprob: -8.207158088684082

Token 391: ''' (ID: 6)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.5997593402862549
    2. '(i' → logprob: -1.2247593402862549
    3. '(indices' → logprob: -3.349759340286255
    4. 'i' → logprob: -3.474759340286255
    5. 's' → logprob: -3.724759340286255
    6. '(' → logprob: -3.974759340286255
    7. ''' → logprob: -4.224759101867676
    8. 'élé' → logprob: -4.474759101867676
    9. '(s' → logprob: -4.724759101867676
    10. ' indices' → logprob: -6.099759101867676

Token 392: 'indices' (ID: 30992)
  Prédit: 'indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.18645130097866058
    2. 'i' → logprob: -2.3114511966705322
    3. 'élé' → logprob: -3.8114511966705322
    4. '(i' → logprob: -3.9364511966705322
    5. 's' → logprob: -4.061451435089111
    6. 'indice' → logprob: -5.561451435089111
    7. 'elements' → logprob: -6.561451435089111
    8. ' indices' → logprob: -6.561451435089111
    9. '(indices' → logprob: -6.561451435089111
    10. '(s' → logprob: -6.686451435089111

Token 393: ' apparten' (ID: 165047)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4171130657196045
    2. ' (' → logprob: -1.1671130657196045
    3. ' i' → logprob: -3.6671130657196045
    4. 'i' → logprob: -5.792113304138184
    5. '(s' → logprob: -7.542113304138184
    6. '(' → logprob: -8.417113304138184
    7. ' dans' → logprob: -9.542113304138184
    8. '_i' → logprob: -9.667113304138184
    9. '   ' → logprob: -10.167113304138184
    10. 's' → logprob: -10.292113304138184

Token 394: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0007436376181431115
    2. 'à' → logprob: -8.500743865966797
    3. 'ent' → logprob: -8.875743865966797
    4. 'ants' → logprob: -9.250743865966797
    5. 'ante' → logprob: -9.625743865966797
    6. 'a' → logprob: -10.000743865966797
    7. '_' → logprob: -10.250743865966797
    8. 'aient' → logprob: -10.375743865966797
    9. ' à' → logprob: -11.125743865966797
    10. '[' → logprob: -11.125743865966797

Token 395: ' à' (ID: 1221)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.8183609247207642
    2. 'à' → logprob: -1.5683609247207642
    3. ' à' → logprob: -2.0683608055114746
    4. 's' → logprob: -2.4433608055114746
    5. 'aux' → logprob: -2.8183608055114746
    6. ' (' → logprob: -3.1933608055114746
    7. ' aux' → logprob: -4.318360805511475
    8. '(l' → logprob: -5.193360805511475
    9. 'respect' → logprob: -5.193360805511475
    10. '(' → logprob: -5.568360805511475

Token 396: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.302099347114563
    2. ' sous' → logprob: -1.427099347114563
    3. '(s' → logprob: -4.302099227905273
    4. ' (' → logprob: -6.177099227905273
    5. ' deux' → logprob: -6.677099227905273
    6. 'sou' → logprob: -7.052099227905273
    7. 'sub' → logprob: -7.677099227905273
    8. '(sub' → logprob: -8.052099227905273
    9. '[s' → logprob: -8.302099227905273
    10. '(' → logprob: -8.302099227905273

Token 397: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13760003447532654
    2. ' sous' → logprob: -2.1375999450683594
    3. ' listes' → logprob: -5.137599945068359
    4. 'list' → logprob: -6.887599945068359
    5. ' groupes' → logprob: -7.387599945068359
    6. 'group' → logprob: -7.512599945068359
    7. 'diff' → logprob: -8.13759994506836
    8. 'liste' → logprob: -8.13759994506836
    9. 'sou' → logprob: -8.38759994506836
    10. 'lists' → logprob: -8.38759994506836

Token 398: '-list' (ID: 18463)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0026121633127331734
    2. '_list' → logprob: -6.752612113952637
    3. '_' → logprob: -6.877612113952637
    4. '_lists' → logprob: -9.127612113952637
    5. 'liste' → logprob: -9.502612113952637
    6. '_s' → logprob: -9.502612113952637
    7. '       ' → logprob: -9.752612113952637
    8. ' _' → logprob: -10.502612113952637
    9. 's' → logprob: -10.877612113952637
    10. 'list' → logprob: -11.752612113952637

Token 399: 'es' (ID: 268)
  Prédit: 'tes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tes' → logprob: -0.4881347119808197
    2. 'es' → logprob: -0.9881347417831421
    3. 's' → logprob: -5.488134860992432
    4. 'istes' → logprob: -5.988134860992432
    5. 'stes' → logprob: -6.238134860992432
    6. 'ses' → logprob: -7.363134860992432
    7. 'ces' → logprob: -7.363134860992432
    8. 'sets' → logprob: -7.363134860992432
    9. 'st' → logprob: -7.988134860992432
    10. 'êtes' → logprob: -8.363134384155273

Token 400: ' différentes' (ID: 41398)
  Prédit: ' différentes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différentes' → logprob: -0.4793592095375061
    2. 'diff' → logprob: -1.1043591499328613
    3. '_' → logprob: -4.229359149932861
    4. '0' → logprob: -4.229359149932861
    5. 'different' → logprob: -5.104359149932861
    6. 'distinct' → logprob: -5.229359149932861
    7. ' distinct' → logprob: -5.729359149932861
    8. 'd' → logprob: -6.979359149932861
    9. ' different' → logprob: -6.979359149932861
    10. 'dist' → logprob: -6.979359149932861

Token 401: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22934000194072723
    2. ',' → logprob: -1.7293399572372437
    3. ':' → logprob: -3.729340076446533
    4. ':
' → logprob: -6.104340076446533
    5. '        
' → logprob: -8.229339599609375
    6. '   ' → logprob: -8.479339599609375
    7. ' for' → logprob: -8.854339599609375
    8. 'for' → logprob: -9.104339599609375
    9. ' :' → logprob: -9.354339599609375
    10. '
' → logprob: -9.354339599609375

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003940194379538298
    2. ' for' → logprob: -6.253940105438232
    3. '           ' → logprob: -6.503940105438232
    4. 'for' → logprob: -7.628940105438232
    5. '               ' → logprob: -12.00394058227539
    6. ' pour' → logprob: -12.25394058227539
    7. ' ' → logprob: -12.50394058227539
    8. '   ' → logprob: -12.87894058227539
    9. '        ' → logprob: -13.37894058227539
    10. '        
' → logprob: -13.50394058227539

Token 403: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07015760987997055
    2. ' for' → logprob: -2.695157527923584
    3. '       ' → logprob: -8.445158004760742
    4. '   ' → logprob: -12.945158004760742
    5. '	for' → logprob: -13.695158004760742
    6. '           ' → logprob: -14.070158004760742
    7. '```' → logprob: -14.070158004760742
    8. '        
' → logprob: -14.945158004760742
    9. ' ' → logprob: -15.070158004760742
    10. ' ' → logprob: -15.695158004760742

Token 404: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05615254491567612
    2. ' for' → logprob: -2.931152582168579
    3. '       ' → logprob: -6.68115234375
    4. '   ' → logprob: -11.68115234375
    5. '           ' → logprob: -12.68115234375
    6. '	for' → logprob: -13.68115234375
    7. '```' → logprob: -13.93115234375
    8. '        
' → logprob: -14.80615234375
    9. ' ' → logprob: -14.93115234375
    10. '
' → logprob: -15.55615234375

Token 405: ' affect' (ID: 7902)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35292455554008484
    2. ' for' → logprob: -1.3529245853424072
    3. ' attrib' → logprob: -3.9779245853424072
    4. ' ass' → logprob: -4.102924346923828
    5. 'attrib' → logprob: -6.352924346923828
    6. 'assign' → logprob: -8.227924346923828
    7. ' affect' → logprob: -8.227924346923828
    8. 'ass' → logprob: -8.727924346923828
    9. ' range' → logprob: -8.977924346923828
    10. '   ' → logprob: -8.977924346923828

Token 406: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5760514140129089
    2. 'ue' → logprob: -0.8260514140129089
    3. 'er' → logprob: -9.701051712036133
    4. 'ne' → logprob: -10.451051712036133
    5. 'u' → logprob: -11.201051712036133
    6. 'ent' → logprob: -13.576051712036133
    7. '   ' → logprob: -13.701051712036133
    8. 'uera' → logprob: -14.326051712036133
    9. 'uer' → logprob: -14.326051712036133
    10. '       ' → logprob: -14.701051712036133

Token 407: ' le' (ID: 505)
  Prédit: ' niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' niveau' → logprob: -0.29814139008522034
    2. ' le' → logprob: -2.1731414794921875
    3. 'niveau' → logprob: -2.1731414794921875
    4. '       ' → logprob: -4.7981414794921875
    5. ' for' → logprob: -5.2981414794921875
    6. 'le' → logprob: -5.4231414794921875
    7. '   ' → logprob: -6.5481414794921875
    8. ' la' → logprob: -6.6731414794921875
    9. ' ' → logprob: -6.7981414794921875
    10. ' level' → logprob: -7.1731414794921875

Token 408: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.03587636724114418
    2. ' niveau' → logprob: -3.5358762741088867
    3. 'val' → logprob: -5.535876274108887
    4. 'for' → logprob: -6.910876274108887
    5. 'level' → logprob: -7.785876274108887
    6. 'niv' → logprob: -8.910876274108887
    7. 'label' → logprob: -9.035876274108887
    8. 'code' → logprob: -9.285876274108887
    9. ' for' → logprob: -9.535876274108887
    10. 'nivel' → logprob: -9.910876274108887

Token 409: ' dans' (ID: 2671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24350222945213318
    2. '       ' → logprob: -2.243502140045166
    3. 'for' → logprob: -2.993502140045166
    4. ' pour' → logprob: -4.118502140045166
    5. ' à' → logprob: -4.368502140045166
    6. '        ' → logprob: -4.618502140045166
    7. '   ' → logprob: -5.243502140045166
    8. ' dans' → logprob: -5.743502140045166
    9. '    ' → logprob: -5.993502140045166
    10. 'pour' → logprob: -6.493502140045166

Token 410: ' la' (ID: 557)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.543353259563446
    2. '   ' → logprob: -1.7933533191680908
    3. 'la' → logprob: -2.543353319168091
    4. ' matr' → logprob: -2.543353319168091
    5. 'for' → logprob: -3.293353319168091
    6. ' la' → logprob: -3.418353319168091
    7. 'range' → logprob: -4.793353080749512
    8. ' for' → logprob: -5.418353080749512
    9. ' range' → logprob: -5.793353080749512
    10. ' ' → logprob: -6.168353080749512

Token 411: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.2894841134548187
    2. 'for' → logprob: -1.5394841432571411
    3. '   ' → logprob: -3.5394840240478516
    4. '       ' → logprob: -5.789484024047852
    5. 'range' → logprob: -6.914484024047852
    6. ' matr' → logprob: -7.164484024047852
    7. ' for' → logprob: -7.289484024047852
    8. 'A' → logprob: -7.789484024047852
    9. '           ' → logprob: -7.914484024047852
    10. 'matrix' → logprob: -8.164484024047852

Token 412: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -1.9623810658231378e-05
    2. 'rice' → logprob: -11.000020027160645
    3. 'ic' → logprob: -14.375020027160645
    4. '   ' → logprob: -15.000020027160645
    5. 'ce' → logprob: -15.000020027160645
    6. '[' → logprob: -15.000020027160645
    7. 'ace' → logprob: -15.375020027160645
    8. 'i' → logprob: -15.625020027160645
    9. 'ixe' → logprob: -15.625020027160645
    10. 'Ice' → logprob: -15.625020027160645

Token 413: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016720877029001713
    2. ' for' → logprob: -7.251672267913818
    3. '        
' → logprob: -7.751672267913818
    4. '
' → logprob: -8.00167179107666
    5. 'for' → logprob: -9.25167179107666
    6. '   ' → logprob: -10.12667179107666
    7. '           ' → logprob: -11.00167179107666
    8. ',' → logprob: -11.12667179107666
    9. '<|end|>' → logprob: -11.62667179107666
    10. '       
' → logprob: -12.75167179107666

Token 414: 'sym' (ID: 53095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6066387295722961
    2. ' for' → logprob: -0.8566387295722961
    3. '       ' → logprob: -3.7316386699676514
    4. ')' → logprob: -5.4816389083862305
    5. '           ' → logprob: -7.1066389083862305
    6. '   ' → logprob: -7.9816389083862305
    7. '
' → logprob: -8.60663890838623
    8. '        
' → logprob: -8.73163890838623
    9. ')
' → logprob: -8.98163890838623
    10. ' pour' → logprob: -9.10663890838623

Token 415: 'étr' (ID: 35025)
  Prédit: 'étr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étr' → logprob: -0.014448479749262333
    2. '[' → logprob: -5.389448642730713
    3. '       ' → logprob: -5.389448642730713
    4. '   ' → logprob: -6.014448642730713
    5. 'é' → logprob: -7.514448642730713
    6. 'et' → logprob: -7.889448642730713
    7. '=' → logprob: -8.139448165893555
    8. 'm' → logprob: -8.514448165893555
    9. 'étrica' → logprob: -8.639448165893555
    10. 'étique' → logprob: -8.889448165893555

Token 416: 'iquement' (ID: 83934)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.008258292451500893
    2. 'ie' → logprob: -4.88325834274292
    3. 'iquement' → logprob: -7.75825834274292
    4. 'rique' → logprob: -9.508257865905762
    5. 'e' → logprob: -9.758257865905762
    6. 'i' → logprob: -10.508257865905762
    7. 'iqu' → logprob: -11.258257865905762
    8. 'iques' → logprob: -11.383257865905762
    9. '[' → logprob: -11.383257865905762
    10. '       ' → logprob: -12.133257865905762

Token 417: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2867963910102844
    2. '           ' → logprob: -2.4117963314056396
    3. '       ' → logprob: -3.0367963314056396
    4. ' )' → logprob: -3.2867963314056396
    5. ')
' → logprob: -3.5367963314056396
    6. ' )
' → logprob: -4.411796569824219
    7. ' for' → logprob: -4.536796569824219
    8. ',' → logprob: -5.286796569824219
    9. '               ' → logprob: -5.411796569824219
    10. ' pour' → logprob: -5.661796569824219

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047202190035022795
    2. ' for' → logprob: -8.125472068786621
    3. 'for' → logprob: -9.125472068786621
    4. '   ' → logprob: -10.625472068786621
    5. '
' → logprob: -11.250472068786621
    6. '        
' → logprob: -11.250472068786621
    7. '           ' → logprob: -11.250472068786621
    8. '<|end|>' → logprob: -14.000472068786621
    9. '      ' → logprob: -14.125472068786621
    10. '    
' → logprob: -15.000472068786621

Token 419: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15319976210594177
    2. '       ' → logprob: -2.1531996726989746
    3. ' for' → logprob: -3.6531996726989746
    4. '   ' → logprob: -11.028200149536133
    5. '	for' → logprob: -13.153200149536133
    6. '        
' → logprob: -13.278200149536133
    7. '           ' → logprob: -14.153200149536133
    8. ' ' → logprob: -15.028200149536133
    9. '```' → logprob: -15.903200149536133
    10. '      ' → logprob: -16.153200149536133

Token 420: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2019621878862381
    2. ' i' → logprob: -1.7019622325897217
    3. ' idx' → logprob: -9.0769624710083
    4. '   ' → logprob: -9.0769624710083
    5. 'x' → logprob: -9.2019624710083
    6. 'idx' → logprob: -10.0769624710083
    7. ' ' → logprob: -10.0769624710083
    8. 'a' → logprob: -10.7019624710083
    9. '  ' → logprob: -10.9519624710083
    10. '(i' → logprob: -11.2019624710083

Token 421: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05494378134608269
    2. ' in' → logprob: -2.929943799972534
    3. '_in' → logprob: -10.554944038391113
    4. 's' → logprob: -11.304944038391113
    5. ' ' → logprob: -12.054944038391113
    6. 'dans' → logprob: -12.429944038391113
    7. ',' → logprob: -12.804944038391113
    8. '  ' → logprob: -13.304944038391113
    9. '_' → logprob: -13.429944038391113
    10. '	in' → logprob: -13.554944038391113

Token 422: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028713969513773918
    2. ' sous' → logprob: -3.6537139415740967
    3. ' range' → logprob: -6.778714179992676
    4. 'range' → logprob: -7.028714179992676
    5. 'sub' → logprob: -8.528714179992676
    6. 'sou' → logprob: -8.653714179992676
    7. 'under' → logprob: -12.278714179992676
    8. 'Sous' → logprob: -12.778714179992676
    9. ' ' → logprob: -13.028714179992676
    10. '   ' → logprob: -13.528714179992676

Token 423: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.2948405128554441e-05
    2. 'liste' → logprob: -12.25001335144043
    3. 's' → logprob: -12.37501335144043
    4. '_s' → logprob: -13.75001335144043
    5. '_' → logprob: -14.37501335144043
    6. 'Liste' → logprob: -14.75001335144043
    7. '_list' → logprob: -14.87501335144043
    8. 'l' → logprob: -15.12501335144043
    9. '_L' → logprob: -15.25001335144043
    10. '       ' → logprob: -15.37501335144043

Token 424: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0002251125843031332
    2. 'liste' → logprob: -8.875225067138672
    3. 'ste' → logprob: -11.000225067138672
    4. 'ite' → logprob: -11.125225067138672
    5. 'ist' → logprob: -11.500225067138672
    6. '_' → logprob: -11.625225067138672
    7. '_l' → logprob: -11.625225067138672
    8. 'site' → logprob: -12.125225067138672
    9. 's' → logprob: -12.500225067138672
    10. 'is' → logprob: -12.750225067138672

Token 425: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005242652725428343
    2. '0' → logprob: -5.255242824554443
    3. ',' → logprob: -12.380242347717285
    4. '[' → logprob: -13.505242347717285
    5. '_,' → logprob: -13.755242347717285
    6. ' _' → logprob: -14.380242347717285
    7. '‌' → logprob: -14.755242347717285
    8. 's' → logprob: -15.255242347717285
    9. ' ' → logprob: -15.255242347717285
    10. '   ' → logprob: -15.755242347717285

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '_' → logprob: -16.375
    4. '۰' → logprob: -18.0
    5. '   ' → logprob: -18.75
    6. '[' → logprob: -19.5
    7. '０' → logprob: -19.75
    8. '1' → logprob: -19.8125
    9. '০' → logprob: -20.0
    10. '```' → logprob: -20.1875

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5145936608314514
    2. ' in' → logprob: -1.1395936012268066
    3. ':
' → logprob: -3.1395936012268066
    4. 'in' → logprob: -3.2645936012268066
    5. 'for' → logprob: -8.139594078063965
    6. '   ' → logprob: -9.014594078063965
    7. ' for' → logprob: -9.264594078063965
    8. ',' → logprob: -9.264594078063965
    9. ' :' → logprob: -9.764594078063965
    10. '):
' → logprob: -10.514594078063965

Token 428: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2375277429819107
    2. 'for' → logprob: -1.7375277280807495
    3. '       ' → logprob: -3.612527847290039
    4. '   ' → logprob: -4.987527847290039
    5. '           ' → logprob: -6.737527847290039
    6. ' in' → logprob: -8.862527847290039
    7. '    ' → logprob: -9.862527847290039
    8. '        ' → logprob: -9.862527847290039
    9. '               ' → logprob: -9.862527847290039
    10. '	for' → logprob: -10.112527847290039

Token 429: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47408050298690796
    2. 'for' (adapté à ' for') → logprob: -0.974080502986908
    3. '	for' → logprob: -12.724080085754395
    4. ' 
' → logprob: -15.474080085754395
    5. ' ' → logprob: -15.724080085754395
    6. '   ' → logprob: -16.47408103942871
    7. '       ' → logprob: -16.84908103942871
    8. '_for' → logprob: -17.34908103942871
    9. ' ' → logprob: -17.72408103942871
    10. '<|end|>' → logprob: -18.72408103942871

Token 430: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31326404213905334
    2. ' j' → logprob: -1.313264012336731
    3. '    ' → logprob: -14.188263893127441
    4. '   ' → logprob: -14.313263893127441
    5. '	j' → logprob: -14.813263893127441
    6. ' ' → logprob: -15.188263893127441
    7. '_j' → logprob: -15.813263893127441
    8. 's' → logprob: -16.188264846801758
    9. ' s' → logprob: -17.063264846801758
    10. '  ' → logprob: -17.813264846801758

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20144228637218475
    2. 'in' → logprob: -1.7014422416687012
    3. 's' → logprob: -11.82644271850586
    4. ' ' → logprob: -11.82644271850586
    5. 'dans' → logprob: -12.20144271850586
    6. 'd' → logprob: -13.45144271850586
    7. 'en' → logprob: -14.07644271850586
    8. '_' → logprob: -14.45144271850586
    9. 'n' → logprob: -14.57644271850586
    10. 'au' → logprob: -14.70144271850586

Token 432: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026339083909988403
    2. ' sous' → logprob: -3.651339054107666
    3. '(s' → logprob: -11.651339530944824
    4. ' s' → logprob: -11.776339530944824
    5. 'sub' → logprob: -11.776339530944824
    6. 'sou' → logprob: -12.151339530944824
    7. ' ' → logprob: -12.151339530944824
    8. '	s' → logprob: -13.651339530944824
    9. '_s' → logprob: -14.026339530944824
    10. '<s' → logprob: -14.526339530944824

Token 433: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0015089125372469425
    2. 'liste' → logprob: -6.501508712768555
    3. 'l' → logprob: -12.501508712768555
    4. 'Liste' → logprob: -13.501508712768555
    5. 's' → logprob: -14.126508712768555
    6. '-l' → logprob: -15.126508712768555
    7. '_' → logprob: -16.126508712768555
    8. '\' → logprob: -16.501508712768555
    9. '_s' → logprob: -16.751508712768555
    10. ' liste' → logprob: -16.876508712768555

Token 434: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.1231750026345253
    2. 'liste' → logprob: -2.3731749057769775
    3. 's' → logprob: -4.123175144195557
    4. '_l' → logprob: -5.123175144195557
    5. '_s' → logprob: -8.498174667358398
    6. 'ite' → logprob: -8.623174667358398
    7. 'site' → logprob: -9.998174667358398
    8. 'Liste' → logprob: -10.873174667358398
    9. '_' → logprob: -11.123174667358398
    10. 'ist' → logprob: -11.248174667358398

Token 435: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0031879288144409657
    2. '1' → logprob: -5.753188133239746
    3. 's' → logprob: -11.628188133239746
    4. '[' → logprob: -14.253188133239746
    5. '_s' → logprob: -16.62818717956543
    6. '-' → logprob: -16.75318717956543
    7. 'import' → logprob: -16.75318717956543
    8. ' ' → logprob: -16.87818717956543
    9. '```' → logprob: -17.00318717956543
    10. '...' → logprob: -17.12818717956543

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017349174013361335
    2. 's' → logprob: -6.626734733581543
    3. 'liste' → logprob: -8.251734733581543
    4. '_' → logprob: -8.876734733581543
    5. 'l' → logprob: -12.251734733581543
    6. '0' → logprob: -13.751734733581543
    7. '_s' → logprob: -14.626734733581543
    8. '```' → logprob: -14.876734733581543
    9. 'list' → logprob: -15.376734733581543
    10. '_l' → logprob: -15.501734733581543

Token 437: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6380317807197571
    2. ':' → logprob: -0.7630317807197571
    3. '[' → logprob: -6.263031959533691
    4. '           ' → logprob: -6.513031959533691
    5. '               ' → logprob: -6.888031959533691
    6. '=' → logprob: -8.263031959533691
    7. ' :
' → logprob: -8.763031959533691
    8. '   ' → logprob: -8.888031959533691
    9. '       ' → logprob: -9.513031959533691
    10. '):
' → logprob: -9.888031959533691

Token 438: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005265888292342424
    2. '           ' → logprob: -5.880265712738037
    3. 'mat' → logprob: -6.130265712738037
    4. ' matr' → logprob: -9.005266189575195
    5. '       ' → logprob: -9.630266189575195
    6. '   ' → logprob: -10.505266189575195
    7. '                   ' → logprob: -11.505266189575195
    8. '                
' → logprob: -11.755266189575195
    9. ' ' → logprob: -11.755266189575195
    10. 'mati' → logprob: -11.880266189575195

Token 439: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.027303272858262062
    2. '               ' → logprob: -3.9023032188415527
    3. 'if' → logprob: -6.027303218841553
    4. '                   ' → logprob: -6.277303218841553
    5. ' matr' → logprob: -6.777303218841553
    6. '   ' → logprob: -7.027303218841553
    7. ' if' → logprob: -8.777303695678711
    8. '           ' → logprob: -8.902303695678711
    9. 'mati' → logprob: -10.402303695678711
    10. '       ' → logprob: -11.277303695678711

Token 440: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -2.7372048862162046e-05
    2. 'rice' → logprob: -10.875027656555176
    3. '[' → logprob: -12.500027656555176
    4. 'ise' → logprob: -13.375027656555176
    5. 'ixe' → logprob: -13.875027656555176
    6. 'ce' → logprob: -14.750027656555176
    7. '   ' → logprob: -15.000027656555176
    8. 'ique' → logprob: -15.500027656555176
    9. 'ize' → logprob: -15.750027656555176
    10. 'i' → logprob: -15.750027656555176

Token 441: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.259079363080673e-05
    2. '[' → logprob: -12.125012397766113
    3. '[j' → logprob: -13.125012397766113
    4. ' [' → logprob: -13.625012397766113
    5. '               ' → logprob: -13.625012397766113
    6. 'i' → logprob: -13.750012397766113
    7. '][' → logprob: -14.625012397766113
    8. '           ' → logprob: -14.750012397766113
    9. ')[' → logprob: -16.00001335144043
    10. '[int' → logprob: -16.25001335144043

Token 442: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00025228000595234334
    2. '[j' → logprob: -8.375252723693848
    3. ']' → logprob: -11.875252723693848
    4. '[i' → logprob: -12.375252723693848
    5. ' ][' → logprob: -12.375252723693848
    6. '[' → logprob: -12.625252723693848
    7. '"][' → logprob: -13.875252723693848
    8. '               ' → logprob: -14.500252723693848
    9. '           ' → logprob: -14.875252723693848
    10. ']][' → logprob: -15.250252723693848

Token 443: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1472419600977446e-06
    2. ' j' → logprob: -13.875000953674316
    3. '[j' → logprob: -17.250001907348633
    4. '           ' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '	j' → logprob: -18.500001907348633
    7. '       ' → logprob: -18.500001907348633
    8. ']' → logprob: -18.625001907348633
    9. '
' → logprob: -18.875001907348633
    10. '               ' → logprob: -19.250001907348633

Token 444: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3531077802181244
    2. '=' → logprob: -1.3531078100204468
    3. ' =' → logprob: -3.3531076908111572
    4. ']=' → logprob: -5.728107929229736
    5. ' ]' → logprob: -7.103107929229736
    6. ')' → logprob: -11.853107452392578
    7. '[' → logprob: -13.353107452392578
    8. ' ' → logprob: -14.228107452392578
    9. ']
' → logprob: -15.228107452392578
    10. 's' → logprob: -15.478107452392578

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004307884373702109
    2. ' =' → logprob: -7.750430583953857
    3. '=
' → logprob: -17.375431060791016
    4. '=int' → logprob: -20.000431060791016
    5. '＝' → logprob: -20.625431060791016
    6. '=n' → logprob: -20.750431060791016
    7. ']=' → logprob: -21.500431060791016
    8. '=

' → logprob: -21.625431060791016
    9. '[' → logprob: -21.875431060791016
    10. '=None' → logprob: -22.125431060791016

Token 446: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.00015038289711810648
    2. ' niveau' → logprob: -9.000150680541992
    3. 'niv' → logprob: -10.750150680541992
    4. 'nivel' → logprob: -12.750150680541992
    5. 'n' → logprob: -14.000150680541992
    6. '   ' → logprob: -14.625150680541992
    7. 'level' → logprob: -15.500150680541992
    8. 'nv' → logprob: -15.625150680541992
    9. 'N' → logprob: -15.750150680541992
    10. ' ' → logprob: -16.625150680541992

Token 447: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033200893085449934
    2. '                
' → logprob: -8.50033187866211
    3. '                ' → logprob: -10.00033187866211
    4. '           ' → logprob: -10.25033187866211
    5. 'mat' → logprob: -11.12533187866211
    6. '              ' → logprob: -11.50033187866211
    7. ' matr' → logprob: -12.37533187866211
    8. 'm' → logprob: -12.37533187866211
    9. '<|end|>' → logprob: -12.75033187866211
    10. '                   ' → logprob: -12.87533187866211

Token 448: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002666999935172498
    2. 'mat' → logprob: -8.375267028808594
    3. '                
' → logprob: -10.500267028808594
    4. ' matr' → logprob: -12.750267028808594
    5. '           ' → logprob: -13.375267028808594
    6. 'm' → logprob: -13.375267028808594
    7. '                   ' → logprob: -14.625267028808594
    8. '              ' → logprob: -15.000267028808594
    9. ' mat' → logprob: -15.375267028808594
    10. 'matrix' → logprob: -15.750267028808594

Token 449: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0008598887361586094
    2. ' matr' → logprob: -7.12585973739624
    3. '               ' → logprob: -10.000860214233398
    4. '           ' → logprob: -12.125860214233398
    5. '                   ' → logprob: -13.500860214233398
    6. '   ' → logprob: -13.625860214233398
    7. 'matrix' → logprob: -14.625860214233398
    8. '       ' → logprob: -14.750860214233398
    9. 'mati' → logprob: -15.125860214233398
    10. '                
' → logprob: -15.500860214233398

Token 450: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -4.246537173457909e-06
    2. 'ixe' → logprob: -13.125003814697266
    3. 'ce' → logprob: -14.375003814697266
    4. '```' → logprob: -14.625003814697266
    5. 'rice' → logprob: -15.250003814697266
    6. 'i' → logprob: -15.500003814697266
    7. '   ' → logprob: -15.750003814697266
    8. 'ize' → logprob: -16.125003814697266
    9. 'ix' → logprob: -16.250003814697266
    10. '[' → logprob: -16.750003814697266

Token 451: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.723973582556937e-05
    2. 'j' → logprob: -11.750017166137695
    3. '][' → logprob: -12.250017166137695
    4. '[i' → logprob: -13.125017166137695
    5. '[' → logprob: -13.250017166137695
    6. ' [' → logprob: -15.750017166137695
    7. '   ' → logprob: -15.750017166137695
    8. ')[' → logprob: -16.250017166137695
    9. '           ' → logprob: -16.625017166137695
    10. '```' → logprob: -17.250017166137695

Token 452: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04861586540937424
    2. '[i' → logprob: -3.0486159324645996
    3. '[' → logprob: -11.298615455627441
    4. 'i' → logprob: -12.048615455627441
    5. ')[' → logprob: -12.673615455627441
    6. ']' → logprob: -12.923615455627441
    7. ' ][' → logprob: -13.423615455627441
    8. '}[' → logprob: -14.173615455627441
    9. '   ' → logprob: -14.298615455627441
    10. '           ' → logprob: -15.173615455627441

Token 453: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9361264946837764e-07
    2. ' i' → logprob: -16.375
    3. '[i' → logprob: -16.75
    4. '[' → logprob: -18.875
    5. '           ' → logprob: -19.875
    6. ']' → logprob: -20.5
    7. '   ' → logprob: -20.625
    8. '	i' → logprob: -21.75
    9. '               ' → logprob: -21.875
    10. '                   ' → logprob: -22.0

Token 454: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001691727084107697
    2. ']=' → logprob: -6.876691818237305
    3. '=' → logprob: -7.751691818237305
    4. ' ]' → logprob: -8.501691818237305
    5. ' =' → logprob: -11.001691818237305
    6. '               ' → logprob: -12.501691818237305
    7. ')' → logprob: -12.501691818237305
    8. '                ' → logprob: -14.876691818237305
    9. '[' → logprob: -14.876691818237305
    10. '           ' → logprob: -15.126691818237305

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ' ' → logprob: -14.076415061950684
    4. '                ' → logprob: -15.076415061950684
    5. '[' → logprob: -15.951415061950684
    6. ' =
' → logprob: -16.326414108276367
    7. ']=' → logprob: -17.076414108276367
    8. ']' → logprob: -17.326414108276367
    9. ')' → logprob: -17.451414108276367
    10. '            ' → logprob: -17.701414108276367

Token 456: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.029777569696307182
    2. ' niveau' → logprob: -3.5297775268554688
    3. 'niv' → logprob: -11.279777526855469
    4. 'level' → logprob: -12.404777526855469
    5. 'nivel' → logprob: -12.404777526855469
    6. 'n' → logprob: -12.904777526855469
    7. '   ' → logprob: -14.154777526855469
    8. ' nivel' → logprob: -14.279777526855469
    9. ' niveaux' → logprob: -14.654777526855469
    10. ' niv' → logprob: -14.654777526855469

Token 457: '

' (ID: 279)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.13480818271636963
    2. '       ' → logprob: -2.25980806350708
    3. '
' → logprob: -3.88480806350708
    4. '    
' → logprob: -7.38480806350708
    5. '
        
' → logprob: -8.634808540344238
    6. '                
' → logprob: -8.634808540344238
    7. '            
' → logprob: -9.509808540344238
    8. '        

' → logprob: -10.509808540344238
    9. '		
' → logprob: -10.759808540344238
    10. '   ' → logprob: -10.759808540344238

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025963459629565477
    2. '        
' → logprob: -6.127596378326416
    3. '
' → logprob: -8.127595901489258
    4. 'partition' → logprob: -9.627595901489258
    5. '   ' → logprob: -10.127595901489258
    6. '    
' → logprob: -12.502595901489258
    7. '                
' → logprob: -13.627595901489258
    8. ' partition' → logprob: -13.752595901489258
    9. '#' → logprob: -14.002595901489258
    10. '           ' → logprob: -14.377595901489258

Token 459: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07861346751451492
    2. '   ' → logprob: -3.203613519668579
    3. '        
' → logprob: -3.703613519668579
    4. 'partition' → logprob: -4.82861328125
    5. '
' → logprob: -6.32861328125
    6. ' partition' → logprob: -8.32861328125
    7. '    
' → logprob: -8.32861328125
    8. ' ' → logprob: -10.07861328125
    9. '       
' → logprob: -11.82861328125
    10. '#' (adapté à ' #') → logprob: -12.20361328125

Token 460: ' App' (ID: 2583)
  Prédit: ' partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.32058247923851013
    2. 'partition' → logprob: -1.3205825090408325
    3. '   ' → logprob: -5.320582389831543
    4. '       ' → logprob: -6.070582389831543
    5. '#' → logprob: -10.820582389831543
    6. '    ' → logprob: -11.320582389831543
    7. '        
' → logprob: -11.445582389831543
    8. ' ' → logprob: -11.445582389831543
    9. '  ' → logprob: -11.570582389831543
    10. '.partition' → logprob: -12.070582389831543

Token 461: 'els' (ID: 1989)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.4742690920829773
    2. 'eler' → logprob: -0.9742690920829773
    3. 'eller' → logprob: -9.224268913269043
    4. 'ler' → logprob: -10.224268913269043
    5. 'er' → logprob: -11.224268913269043
    6. 'e' → logprob: -11.224268913269043
    7. '\' → logprob: -12.349268913269043
    8. 'elper' → logprob: -12.474268913269043
    9. 'elle' → logprob: -12.599268913269043
    10. 'l' → logprob: -12.849268913269043

Token 462: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28213346004486084
    2. ' réc' → logprob: -1.9071334600448608
    3. 'recursive' → logprob: -3.0321335792541504
    4. 'rec' → logprob: -3.4071335792541504
    5. 'à' → logprob: -5.15713357925415
    6. '   ' → logprob: -5.65713357925415
    7. ' recursive' → logprob: -5.65713357925415
    8. 'ré' → logprob: -7.15713357925415
    9. 're' → logprob: -7.78213357925415
    10. '_' → logprob: -8.032133102416992

Token 463: 'urs' (ID: 1628)
  Prédit: 'ursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.15404953062534332
    2. 'ursion' → logprob: -2.4040496349334717
    3. 'urs' → logprob: -3.5290496349334717
    4. 'ur' → logprob: -4.154049396514893
    5. '       ' → logprob: -6.279049396514893
    6. 'els' → logprob: -6.404049396514893
    7. 'ursor' → logprob: -7.279049396514893
    8. 'urse' → logprob: -7.279049396514893
    9. 'partition' → logprob: -7.279049396514893
    10. 'ours' → logprob: -7.779049396514893

Token 464: 'ifs' (ID: 14119)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.29991498589515686
    2. 'ur' → logprob: -1.9249149560928345
    3. 'ursion' → logprob: -2.549915075302124
    4. '       ' → logprob: -4.049914836883545
    5. 'ursive' → logprob: -5.049914836883545
    6. 'urses' → logprob: -5.549914836883545
    7. 's' → logprob: -6.299914836883545
    8. '   ' → logprob: -6.924914836883545
    9. 'urse' → logprob: -7.174914836883545
    10. 'els' → logprob: -7.549914836883545

Token 465: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012178543023765087
    2. '(s' → logprob: -5.387178421020508
    3. 'partition' → logprob: -5.637178421020508
    4. '(part' → logprob: -6.637178421020508
    5. '(' → logprob: -7.137178421020508
    6. ' partition' → logprob: -7.512178421020508
    7. ' (' → logprob: -7.762178421020508
    8. '   ' → logprob: -8.012178421020508
    9. 's' → logprob: -8.637178421020508
    10. '(sub' → logprob: -9.637178421020508

Token 466: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0763261616230011
    2. ' sous' → logprob: -2.8263261318206787
    3. '(s' → logprob: -5.451326370239258
    4. '   ' → logprob: -5.451326370239258
    5. 'sou' → logprob: -6.701326370239258
    6. '       ' → logprob: -6.826326370239258
    7. ' s' → logprob: -7.201326370239258
    8. ' ' → logprob: -7.576326370239258
    9. ' les' → logprob: -7.701326370239258
    10. '	s' → logprob: -8.201326370239258

Token 467: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0560024231672287
    2. ' sous' → logprob: -2.931002378463745
    3. '   ' → logprob: -7.056002616882324
    4. ' ' → logprob: -9.806002616882324
    5. 'sou' → logprob: -9.806002616882324
    6. '       ' → logprob: -10.056002616882324
    7. 'sub' → logprob: -10.681002616882324
    8. '    
' → logprob: -11.431002616882324
    9. 'Sous' → logprob: -11.681002616882324
    10. ' s' → logprob: -11.806002616882324

Token 468: '-l' (ID: 2887)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00015693542081862688
    2. '_list' → logprob: -9.375157356262207
    3. '       ' → logprob: -10.375157356262207
    4. '   ' → logprob: -11.625157356262207
    5. 'liste' → logprob: -11.625157356262207
    6. '_' → logprob: -12.000157356262207
    7. '_s' → logprob: -12.375157356262207
    8. 's' → logprob: -13.375157356262207
    9. '\' → logprob: -13.625157356262207
    10. '        
' → logprob: -13.625157356262207

Token 469: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.001498195226304233
    2. 'liste' → logprob: -6.626498222351074
    3. '_' → logprob: -10.126498222351074
    4. '_l' → logprob: -10.251498222351074
    5. 'Liste' → logprob: -11.126498222351074
    6. 'site' → logprob: -11.126498222351074
    7. '_s' → logprob: -11.376498222351074
    8. 's' → logprob: -11.376498222351074
    9. '[' → logprob: -12.251498222351074
    10. 'is' → logprob: -12.751498222351074

Token 470: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069725289940834045
    2. '
' → logprob: -5.881972312927246
    3. '(' → logprob: -6.381972312927246
    4. '        
' → logprob: -6.881972312927246
    5. '(s' → logprob: -7.631972312927246
    6. '(
' → logprob: -8.756972312927246
    7. '   ' → logprob: -8.881972312927246
    8. '(part' → logprob: -8.881972312927246
    9. ',' → logprob: -9.131972312927246
    10. 's' → logprob: -9.506972312927246

Token 471: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4494555592536926
    2. 'partition' → logprob: -1.4494554996490479
    3. ' partition' → logprob: -2.074455499649048
    4. '           ' → logprob: -8.074455261230469
    5. 'niveau' → logprob: -8.074455261230469
    6. '        ' → logprob: -8.199455261230469
    7. '        
' → logprob: -8.449455261230469
    8. '   ' → logprob: -8.574455261230469
    9. ' niveau' → logprob: -9.574455261230469
    10. '               ' → logprob: -9.574455261230469

Token 472: ' augment' (ID: 44474)
  Prédit: 'augment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'augment' → logprob: -0.4321750998497009
    2. 'increment' → logprob: -1.3071751594543457
    3. ' augment' → logprob: -3.6821751594543457
    4. 'in' → logprob: -3.8071751594543457
    5. 'appel' → logprob: -4.057175159454346
    6. 'partition' → logprob: -5.807175159454346
    7. '   ' → logprob: -5.807175159454346
    8. 'continu' → logprob: -5.932175159454346
    9. 'aug' → logprob: -6.307175159454346
    10. ' increment' → logprob: -6.932175159454346

Token 473: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -6.146429223008454e-05
    2. '   ' → logprob: -10.75006103515625
    3. 'er' → logprob: -11.12506103515625
    4. 'ent' → logprob: -11.25006103515625
    5. '#' → logprob: -13.25006103515625
    6. '_ant' → logprob: -13.37506103515625
    7. '               ' → logprob: -13.75006103515625
    8. '           ' → logprob: -13.75006103515625
    9. 'e' → logprob: -14.12506103515625
    10. '       ' → logprob: -14.25006103515625

Token 474: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6817315220832825
    2. '(n' → logprob: -1.0567314624786377
    3. 'niveau' → logprob: -2.0567314624786377
    4. ' le' → logprob: -4.431731700897217
    5. ' niveau' → logprob: -5.681731700897217
    6. 'n' → logprob: -6.681731700897217
    7. ' (' → logprob: -7.431731700897217
    8. '   ' → logprob: -7.681731700897217
    9. 'de' → logprob: -8.056731224060059
    10. 'l' → logprob: -8.681731224060059

Token 475: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.28120362758636475
    2. ' niveau' → logprob: -1.4062036275863647
    3. '   ' → logprob: -11.156203269958496
    4. 'niv' → logprob: -11.281203269958496
    5. ' ' → logprob: -11.531203269958496
    6. 'n' → logprob: -12.656203269958496
    7. 'nivel' → logprob: -13.031203269958496
    8. '  ' → logprob: -13.406203269958496
    9. ' nivel' → logprob: -13.531203269958496
    10. '1' → logprob: -13.531203269958496

Token 476: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4512472450733185
    2. '       ' → logprob: -1.076247215270996
    3. 'partition' → logprob: -4.701247215270996
    4. '(part' → logprob: -5.201247215270996
    5. '           ' → logprob: -5.701247215270996
    6. 'n' → logprob: -7.326247215270996
    7. ' (' → logprob: -7.326247215270996
    8. '               ' → logprob: -7.451247215270996
    9. 'def' → logprob: -7.701247215270996
    10. ',' → logprob: -7.951247215270996

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010604646377032623
    2. '        
' → logprob: -10.500105857849121
    3. '(' → logprob: -10.625105857849121
    4. '
' → logprob: -11.000105857849121
    5. '   ' → logprob: -11.375105857849121
    6. 'partition' → logprob: -11.750105857849121
    7. ',' → logprob: -12.375105857849121
    8. '           ' → logprob: -12.750105857849121
    9. '               ' → logprob: -13.250105857849121
    10. ')' → logprob: -13.500105857849121

Token 478: ' partition' (ID: 31512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1092291921377182
    2. 'partition' (adapté à ' partition') → logprob: -2.35922908782959
    3. ' partition' → logprob: -4.73422908782959
    4. '   ' → logprob: -8.73422908782959
    5. '        
' → logprob: -11.73422908782959
    6. '           ' → logprob: -12.10922908782959
    7. '
' → logprob: -12.85922908782959
    8. '      ' → logprob: -12.85922908782959
    9. ' ' → logprob: -13.10922908782959
    10. 'part' → logprob: -13.73422908782959

Token 479: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -2.081584716506768e-05
    2. '_' → logprob: -11.500020980834961
    3. '_and' → logprob: -12.750020980834961
    4. '_er' → logprob: -12.875020980834961
    5. 'et' → logprob: -13.375020980834961
    6. '_eth' → logprob: -14.125020980834961
    7. 'Et' → logprob: -14.500020980834961
    8. ' _' → logprob: -14.875020980834961
    9. '_e' → logprob: -15.125020980834961
    10. '_es' → logprob: -15.500020980834961

Token 480: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.005266957450658083
    2. 'label' → logprob: -5.255267143249512
    3. 'partition' → logprob: -10.630267143249512
    4. '_labels' → logprob: -13.380267143249512
    5. '_' → logprob: -14.005267143249512
    6. 'lab' → logprob: -14.130267143249512
    7. 'Label' → logprob: -14.255267143249512
    8. '_list' → logprob: -14.755267143249512
    9. '_lab' → logprob: -14.755267143249512
    10. '<label' → logprob: -14.755267143249512

Token 481: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009442188893444836
    2. '(' → logprob: -7.000944137573242
    3. '(l' → logprob: -10.500944137573242
    4. '(n' → logprob: -13.000944137573242
    5. '(
' → logprob: -13.250944137573242
    6. ' (' → logprob: -14.375944137573242
    7. 's' → logprob: -15.750944137573242
    8. '(t' → logprob: -16.500944137573242
    9. '(v' → logprob: -16.625944137573242
    10. ' ' → logprob: -16.875944137573242

Token 482: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -1.3782830137643032e-05
    2. 's' → logprob: -11.25001335144043
    3. '_' → logprob: -15.37501335144043
    4. '(s' → logprob: -16.12501335144043
    5. 'ou' → logprob: -16.12501335144043
    6. '(' → logprob: -16.37501335144043
    7. '[' → logprob: -16.62501335144043
    8. 'ouse' → logprob: -16.75001335144043
    9. 'o' → logprob: -17.62501335144043
    10. '`' → logprob: -18.00001335144043

Token 483: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.696889623621246e-06
    2. 'liste' → logprob: -13.50000286102295
    3. 's' → logprob: -15.12500286102295
    4. '_list' → logprob: -15.12500286102295
    5. 'Liste' → logprob: -15.50000286102295
    6. '_' → logprob: -16.125001907348633
    7. 'l' → logprob: -16.875001907348633
    8. ' _' → logprob: -16.875001907348633
    9. '__' → logprob: -17.125001907348633
    10. '\' → logprob: -17.500001907348633

Token 484: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.000343210413120687
    2. 'liste' → logprob: -9.000343322753906
    3. 'ste' → logprob: -9.375343322753906
    4. '_' → logprob: -10.000343322753906
    5. 'Liste' → logprob: -10.750343322753906
    6. '_l' → logprob: -11.125343322753906
    7. 'ist' → logprob: -11.625343322753906
    8. '_list' → logprob: -12.250343322753906
    9. 'ite' → logprob: -12.250343322753906
    10. 'site' → logprob: -12.750343322753906

Token 485: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.2166411478538066e-05
    2. '0' → logprob: -9.875052452087402
    3. 's' → logprob: -14.500052452087402
    4. 'e' → logprob: -16.625051498413086
    5. '(' → logprob: -17.000051498413086
    6. '(s' → logprob: -18.000051498413086
    7. '[' → logprob: -18.250051498413086
    8. '```' → logprob: -18.875051498413086
    9. 'es' → logprob: -19.375051498413086
    10. '__' → logprob: -19.750051498413086

Token 486: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. '_' → logprob: -10.250046730041504
    3. '1' → logprob: -11.750046730041504
    4. '۰' → logprob: -14.625046730041504
    5. 's' → logprob: -15.187546730041504
    6. 'o' → logprob: -15.250046730041504
    7. 'l' → logprob: -15.437546730041504
    8. '   ' → logprob: -15.687546730041504
    9. ' ' → logprob: -15.750046730041504
    10. '[' → logprob: -16.000045776367188

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. ',n' → logprob: -9.625072479248047
    3. ' ,' → logprob: -12.250072479248047
    4. ',l' → logprob: -13.625072479248047
    5. ',
' → logprob: -17.125072479248047
    6. ',N' → logprob: -17.500072479248047
    7. ',s' → logprob: -17.750072479248047
    8. '，' → logprob: -19.250072479248047
    9. ',j' → logprob: -19.250072479248047
    10. '(n' → logprob: -19.250072479248047

Token 488: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.023264462128281593
    2. ' niveau' → logprob: -3.7732644081115723
    3. 'niv' → logprob: -11.27326488494873
    4. '   ' → logprob: -13.02326488494873
    5. 'nivel' → logprob: -13.77326488494873
    6. 'n' → logprob: -14.02326488494873
    7. 'level' → logprob: -14.52326488494873
    8. ' ' → logprob: -14.77326488494873
    9. ' nivel' → logprob: -14.77326488494873
    10. ' Niveau' → logprob: -15.27326488494873

Token 489: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1269282102584839
    2. ' +' → logprob: -2.1269283294677734
    3. '+)' → logprob: -16.001928329467773
    4. '+n' → logprob: -16.501928329467773
    5. '+
' → logprob: -17.751928329467773
    6. ')' → logprob: -18.376928329467773
    7. '+s' → logprob: -19.376928329467773
    8. '+i' → logprob: -19.501928329467773
    9. '＋' → logprob: -19.501928329467773
    10. '+c' → logprob: -19.751928329467773

Token 490: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.375
    4. '       ' → logprob: -21.125
    5. '```' → logprob: -21.875
    6. '
' → logprob: -22.75
    7. ')' → logprob: -22.75
    8. '           ' → logprob: -23.125
    9. '  ' → logprob: -23.25
    10. '2' → logprob: -23.25

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -21.5
    5. '
' → logprob: -22.625
    6. '  ' → logprob: -22.75
    7. '2' → logprob: -22.875
    8. '[' → logprob: -23.0
    9. ')' → logprob: -23.25
    10. 'def' → logprob: -23.375

Token 492: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01110371295362711
    2. ')' → logprob: -4.511103630065918
    3. ')
' → logprob: -10.136103630065918
    4. '       ' → logprob: -11.136103630065918
    5. '   ' → logprob: -13.386103630065918
    6. ')

' → logprob: -16.261104583740234
    7. ' )
' → logprob: -16.761104583740234
    8. ')`
' → logprob: -19.136104583740234
    9. ' ' → logprob: -20.261104583740234
    10. '),' → logprob: -20.761104583740234

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023289969190955162
    2. 'partition' → logprob: -3.773289918899536
    3. ' partition' → logprob: -10.648289680480957
    4. '   ' → logprob: -10.898289680480957
    5. '        
' → logprob: -13.398289680480957
    6. '
' → logprob: -15.273289680480957
    7. '	' → logprob: -15.648289680480957
    8. '           ' → logprob: -16.273290634155273
    9. '.partition' → logprob: -16.398290634155273
    10. '(part' → logprob: -16.773290634155273

Token 494: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' (adapté à ' partition') → logprob: -0.0015053401002660394
    2. '       ' → logprob: -6.751505374908447
    3. ' partition' → logprob: -8.001504898071289
    4. '   ' → logprob: -16.50150489807129
    5. 'part' → logprob: -17.37650489807129
    6. '.partition' → logprob: -17.50150489807129
    7. '_partition' → logprob: -19.00150489807129
    8. 'Partition' → logprob: -19.50150489807129
    9. '      ' → logprob: -20.50150489807129
    10. '        
' → logprob: -20.75150489807129

Token 495: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -5.438573680294212e-06
    2. '_and' → logprob: -12.375005722045898
    3. '_er' → logprob: -14.500005722045898
    4. '_' → logprob: -15.125005722045898
    5. 'et' → logprob: -15.250005722045898
    6. '_eth' → logprob: -16.7500057220459
    7. '_at' → logprob: -17.6250057220459
    8. '_ent' → logprob: -18.1250057220459
    9. '_en' → logprob: -18.2500057220459
    10. '(et' → logprob: -18.6250057220459

Token 496: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.018163636326789856
    2. 'label' → logprob: -4.018163681030273
    3. 'partition' → logprob: -12.018163681030273
    4. 'Label' → logprob: -12.643163681030273
    5. 's' → logprob: -13.768163681030273
    6. 'l' → logprob: -14.268163681030273
    7. 'lab' → logprob: -14.518163681030273
    8. '_la' → logprob: -14.768163681030273
    9. '_l' → logprob: -15.143163681030273
    10. '_' → logprob: -15.518163681030273

Token 497: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. 's' → logprob: -17.375001907348633
    4. ' (' → logprob: -18.125001907348633
    5. '(
' → logprob: -19.500001907348633
    6. '(S' → logprob: -23.250001907348633
    7. ' ' → logprob: -23.750001907348633
    8. '(sub' → logprob: -23.750001907348633
    9. '()' → logprob: -24.000001907348633
    10. '(n' → logprob: -24.500001907348633

Token 498: 'ous' (ID: 784)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005016815848648548
    2. 'ous' → logprob: -8.50050163269043
    3. '(s' → logprob: -9.37550163269043
    4. 'sou' → logprob: -9.37550163269043
    5. '@s' → logprob: -10.00050163269043
    6. '_s' → logprob: -10.50050163269043
    7. '=s' → logprob: -11.00050163269043
    8. ')s' → logprob: -11.62550163269043
    9. '<s' → logprob: -11.62550163269043
    10. '_' → logprob: -12.37550163269043

Token 499: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0031250715255737305
    2. 's' → logprob: -5.878125190734863
    3. '_s' → logprob: -8.378125190734863
    4. 'liste' → logprob: -9.378125190734863
    5. 'l' → logprob: -13.253125190734863
    6. '_' → logprob: -13.628125190734863
    7. 'Liste' → logprob: -13.753125190734863
    8. '__' → logprob: -15.253125190734863
    9. '\' → logprob: -15.378125190734863
    10. '_list' → logprob: -15.878125190734863

Token 500: 'iste' (ID: 4872)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.09202193468809128
    2. 'iste' → logprob: -2.467021942138672
    3. '_' → logprob: -6.342021942138672
    4. 'liste' → logprob: -6.717021942138672
    5. 's' → logprob: -9.842021942138672
    6. 'ite' → logprob: -11.592021942138672
    7. 'Liste' → logprob: -11.592021942138672
    8. '_list' → logprob: -11.717021942138672
    9. '_s' → logprob: -12.092021942138672
    10. 'l' → logprob: -12.467021942138672

Token 501: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -14.375000953674316
    3. '(s' → logprob: -15.625000953674316
    4. '__' → logprob: -16.750001907348633
    5. 'e' → logprob: -17.375001907348633
    6. '1' → logprob: -17.500001907348633
    7. '[' → logprob: -17.875001907348633
    8. '=s' → logprob: -18.125001907348633
    9. '```' → logprob: -18.250001907348633
    10. '_s' → logprob: -18.250001907348633

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001202254556119442
    2. '_' → logprob: -6.75120210647583
    3. '0' → logprob: -10.626202583312988
    4. 's' → logprob: -12.751202583312988
    5. '01' → logprob: -13.251202583312988
    6. 'i' → logprob: -14.751202583312988
    7. 'l' → logprob: -15.251202583312988
    8. '-' → logprob: -15.751202583312988
    9. '```' → logprob: -15.751202583312988
    10. '１' → logprob: -16.251201629638672

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ',s' → logprob: -10.875022888183594
    3. ' ,' → logprob: -13.250022888183594
    4. '(s' → logprob: -13.750022888183594
    5. 's' → logprob: -14.125022888183594
    6. ',l' → logprob: -15.500022888183594
    7. ')' → logprob: -15.750022888183594
    8. ',n' → logprob: -16.875022888183594
    9. '   ' → logprob: -17.125022888183594
    10. '       ' → logprob: -18.250022888183594

Token 504: ' niveau' (ID: 21708)
  Prédit: 'niveau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'niveau' → logprob: -0.01815064437687397
    2. ' niveau' → logprob: -4.018150806427002
    3. 'level' → logprob: -15.393150329589844
    4. 'niv' → logprob: -15.518150329589844
    5. 'nivel' → logprob: -16.143150329589844
    6. '   ' → logprob: -16.393150329589844
    7. ' nivel' → logprob: -16.393150329589844
    8. 'n' → logprob: -17.268150329589844
    9. ' Niveau' → logprob: -18.393150329589844
    10. ' ' → logprob: -18.518150329589844

Token 505: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408074140548706
    2. ' +' → logprob: -0.9740807414054871
    3. ')' → logprob: -12.599081039428711
    4. '+)' → logprob: -15.474081039428711
    5. '+
' → logprob: -16.72408103942871
    6. '   ' → logprob: -17.09908103942871
    7. ' +
' → logprob: -17.59908103942871
    8. ' ' → logprob: -17.97408103942871
    9. '＋' → logprob: -18.34908103942871
    10. ' )' → logprob: -19.47408103942871

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019558717031031847
    2. ' ' → logprob: -6.626955986022949
    3. '2' → logprob: -7.376955986022949
    4. '+' → logprob: -12.50195598602295
    5. '   ' → logprob: -15.50195598602295
    6. ' +' → logprob: -16.376955032348633
    7. ')' → logprob: -16.501955032348633
    8. '```' → logprob: -16.626955032348633
    9. '  ' → logprob: -18.126955032348633
    10. '
' → logprob: -18.189455032348633

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000665375788230449
    2. '2' → logprob: -7.750665187835693
    3. '+' → logprob: -8.375665664672852
    4. ' ' → logprob: -12.375665664672852
    5. ' +' → logprob: -16.12566566467285
    6. ')' → logprob: -16.87566566467285
    7. '+
' → logprob: -17.62566566467285
    8. '   ' → logprob: -18.12566566467285
    9. '+)' → logprob: -18.75066566467285
    10. '```' → logprob: -19.37566566467285

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.264322317088954e-05
    2. ')
' → logprob: -10.500052452087402
    3. '   ' → logprob: -10.625052452087402
    4. ' )' → logprob: -14.375052452087402
    5. '       ' → logprob: -16.62505340576172
    6. '))' → logprob: -17.12505340576172
    7. ')

' → logprob: -17.25005340576172
    8. ')
' → logprob: -17.50005340576172
    9. '```' → logprob: -18.25005340576172
    10. '")' → logprob: -18.37505340576172

Token 509: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004817549604922533
    2. 'return' → logprob: -6.254817485809326
    3. '
' → logprob: -6.379817485809326
    4. '    
' → logprob: -6.754817485809326
    5. ' return' → logprob: -12.004817962646484
    6. '  
' → logprob: -12.129817962646484
    7. '	return' → logprob: -12.254817962646484
    8. '
' → logprob: -13.254817962646484
    9. '        
' → logprob: -13.504817962646484
    10. 'con' → logprob: -13.629817962646484

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032115804497152567
    2. 'return' → logprob: -5.753211498260498
    3. ' return' → logprob: -10.628211975097656
    4. 'con' → logprob: -12.253211975097656
    5. 'partition' → logprob: -12.503211975097656
    6. '    
' → logprob: -14.128211975097656
    7. '	return' → logprob: -15.628211975097656
    8. '       ' → logprob: -16.128211975097656
    9. '```' → logprob: -17.128211975097656
    10. '  ' → logprob: -17.128211975097656

Token 511: ' #' (ID: 1069)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.05680622160434723
    2. '   ' → logprob: -3.0568063259124756
    3. ' partition' → logprob: -4.8068060874938965
    4. '    
' → logprob: -11.681806564331055
    5. 'part' → logprob: -13.806806564331055
    6. ' ' → logprob: -14.931806564331055
    7. '.partition' → logprob: -15.056806564331055
    8. '
' → logprob: -15.056806564331055
    9. '  ' → logprob: -15.181806564331055
    10. 'return' → logprob: -15.681806564331055

Token 512: ' Dé' (ID: 27247)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.0019368429202586412
    2. ' partition' → logprob: -6.251936912536621
    3. '   ' → logprob: -11.751936912536621
    4. 'part' → logprob: -16.126935958862305
    5. '#' → logprob: -16.376935958862305
    6. '  ' → logprob: -16.751935958862305
    7. '.partition' → logprob: -16.876935958862305
    8. 'if' → logprob: -17.251935958862305
    9. 'Partition' → logprob: -17.501935958862305
    10. '    ' → logprob: -17.751935958862305

Token 513: 'cl' (ID: 565)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.012934084981679916
    2. 'but' → logprob: -5.26293420791626
    3. 'partition' → logprob: -5.38793420791626
    4. 'm' → logprob: -6.13793420791626
    5. 'fin' → logprob: -7.38793420791626
    6. 'mar' → logprob: -8.512933731079102
    7. 'f' → logprob: -9.262933731079102
    8. 'par' → logprob: -11.387933731079102
    9. 'mm' → logprob: -13.012933731079102
    10. '#' → logprob: -13.262933731079102

Token 514: 'enche' (ID: 163916)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3915656507015228
    2. 'encher' → logprob: -1.2665656805038452
    3. 'enche' → logprob: -3.6415655612945557
    4. 'arer' → logprob: -4.266565799713135
    5. 'anchement' → logprob: -7.391565799713135
    6. 'ench' → logprob: -8.141565322875977
    7. 'arrer' → logprob: -8.766565322875977
    8. 'en' → logprob: -8.891565322875977
    9. 'anch' → logprob: -9.391565322875977
    10. 'encer' → logprob: -9.391565322875977

Token 515: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.08221010863780975
    2. 'partition' → logprob: -3.207210063934326
    3. 'r' → logprob: -3.332210063934326
    4. '   ' → logprob: -6.582210063934326
    5. ' partition' → logprob: -7.207210063934326
    6. 'ur' → logprob: -8.457210540771484
    7. 'l' → logprob: -8.707210540771484
    8. '(part' → logprob: -9.832210540771484
    9. ' la' → logprob: -10.332210540771484
    10. 'part' → logprob: -10.707210540771484

Token 516: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07228939980268478
    2. 'partition' → logprob: -3.32228946685791
    3. 'de' → logprob: -3.57228946685791
    4. ' de' → logprob: -5.57228946685791
    5. 'par' → logprob: -7.44728946685791
    6. '(part' → logprob: -7.69728946685791
    7. 'du' → logprob: -8.07228946685791
    8. ' partition' → logprob: -8.32228946685791
    9. ' ' → logprob: -10.32228946685791
    10. '    
' → logprob: -10.82228946685791

Token 517: ' la' (ID: 557)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.0025433204136788845
    2. 'la' → logprob: -6.3775434494018555
    3. ' partition' → logprob: -7.3775434494018555
    4. ' la' → logprob: -8.752543449401855
    5. 'l' → logprob: -10.127543449401855
    6. 'le' → logprob: -11.627543449401855
    7. '   ' → logprob: -11.877543449401855
    8. 'part' → logprob: -14.627543449401855
    9. ' ' → logprob: -14.877543449401855
    10. '#' → logprob: -15.502543449401855

Token 518: ' réc' (ID: 36254)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partition' → logprob: -1.580929347255733e-05
    2. ' partition' → logprob: -11.125016212463379
    3. 'fonction' → logprob: -14.250016212463379
    4. 'part' → logprob: -15.625016212463379
    5. '
' → logprob: -16.875015258789062
    6. 'prem' → logprob: -17.250015258789062
    7. '#' → logprob: -17.500015258789062
    8. 'construction' → logprob: -18.250015258789062
    9. '_partition' → logprob: -18.250015258789062
    10. '.partition' → logprob: -18.625015258789062

Token 519: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.018794061616063118
    2. 'c' → logprob: -4.268794059753418
    3. 'urs' → logprob: -5.393794059753418
    4. 'ur' → logprob: -10.893794059753418
    5. 'ursive' → logprob: -11.018794059753418
    6. 'partition' → logprob: -11.518794059753418
    7. 'usion' → logprob: -11.893794059753418
    8. 'urse' → logprob: -12.268794059753418
    9. '   ' → logprob: -12.393794059753418
    10. 'curse' → logprob: -13.268794059753418

Token 520: ' sur' (ID: 1512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.35368579626083374
    2. '   ' → logprob: -1.4786858558654785
    3. '(part' → logprob: -3.1036858558654785
    4. ' partition' → logprob: -3.7286858558654785
    5. '(' → logprob: -7.8536858558654785
    6. '.partition' → logprob: -8.47868537902832
    7. '    
' → logprob: -9.10368537902832
    8. 'part' → logprob: -9.47868537902832
    9. 'par' → logprob: -9.47868537902832
    10. '(
' → logprob: -10.60368537902832

Token 521: ' l' (ID: 305)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0014454723568633199
    2. ' list' → logprob: -6.626445293426514
    3. 'la' → logprob: -9.376445770263672
    4. 'liste' → logprob: -10.751445770263672
    5. 'range' → logprob: -12.126445770263672
    6. 'l' → logprob: -12.626445770263672
    7. ' la' → logprob: -12.876445770263672
    8. '   ' → logprob: -14.001445770263672
    9. '[list' → logprob: -14.376445770263672
    10. ' ' → logprob: -15.626445770263672

Token 522: ''ensemble' (ID: 79341)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.40683621168136597
    2. 'a' → logprob: -1.2818362712860107
    3. 'ist' → logprob: -3.0318362712860107
    4. ''ensemble' → logprob: -5.156836032867432
    5. 'liste' → logprob: -7.156836032867432
    6. 'e' → logprob: -7.531836032867432
    7. 'ensemble' → logprob: -7.656836032867432
    8. '[' → logprob: -8.15683650970459
    9. 'range' → logprob: -8.90683650970459
    10. 'ista' → logprob: -8.90683650970459

Token 523: ' des' (ID: 731)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07123934477567673
    2. '(range' → logprob: -2.9462392330169678
    3. 'list' → logprob: -4.946239471435547
    4. '   ' → logprob: -5.071239471435547
    5. ' range' → logprob: -6.571239471435547
    6. 'de' → logprob: -7.196239471435547
    7. 'des' → logprob: -8.071239471435547
    8. '(list' → logprob: -8.321239471435547
    9. ' list' → logprob: -9.696239471435547
    10. ' des' → logprob: -10.321239471435547

Token 524: ' indices' (ID: 30378)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6969994306564331
    2. 'range' → logprob: -0.6969994306564331
    3. 'liste' → logprob: -5.821999549865723
    4. ' range' → logprob: -8.071999549865723
    5. 'indices' → logprob: -8.071999549865723
    6. ' list' → logprob: -8.321999549865723
    7. 'indice' → logprob: -12.071999549865723
    8. 'index' → logprob: -13.071999549865723
    9. ' liste' → logprob: -13.071999549865723
    10. 'rang' → logprob: -13.696999549865723

Token 525: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18093667924404144
    2. '(range' → logprob: -2.930936574935913
    3. 'partition' → logprob: -3.555936574935913
    4. ' range' → logprob: -3.680936574935913
    5. 'range' → logprob: -3.930936574935913
    6. ' partition' → logprob: -4.430936813354492
    7. '[' → logprob: -4.555936813354492
    8. 'con' → logprob: -5.430936813354492
    9. ' list' → logprob: -5.680936813354492
    10. '([' → logprob: -5.805936813354492

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2562016546726227
    2. 'partition' → logprob: -1.6312016248703003
    3. ' partition' → logprob: -3.50620174407959
    4. 'range' → logprob: -8.50620174407959
    5. ' range' → logprob: -10.00620174407959
    6. 'con' → logprob: -11.00620174407959
    7. '[' → logprob: -11.88120174407959
    8. ' list' → logprob: -12.00620174407959
    9. 'list' → logprob: -12.13120174407959
    10. ' ' → logprob: -12.50620174407959

Token 527: ' partition' (ID: 31512)
  Prédit: ' partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partition' → logprob: -0.9052218198776245
    2. 'partition' (adapté à ' partition') → logprob: -0.9052218198776245
    3. '   ' → logprob: -1.6552218198776245
    4. '    
' → logprob: -11.905221939086914
    5. 'range' → logprob: -11.905221939086914
    6. ' range' → logprob: -12.030221939086914
    7. ' ' → logprob: -12.530221939086914
    8. ' indices' → logprob: -12.780221939086914
    9. '.partition' → logprob: -12.905221939086914
    10. '   ' → logprob: -13.030221939086914

Token 528: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.500006675720215
    3. '_eth' → logprob: -13.750006675720215
    4. '_and' → logprob: -14.375006675720215
    5. '_er' → logprob: -14.625006675720215
    6. '_ent' → logprob: -15.750006675720215
    7. 'et' → logprob: -16.8750057220459
    8. ' _' → logprob: -17.0000057220459
    9. '_e' → logprob: -17.1250057220459
    10. ' et' → logprob: -17.7500057220459

Token 529: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.3869878351688385
    2. 'label' → logprob: -1.1369878053665161
    3. '_l' → logprob: -10.386987686157227
    4. 'partition' → logprob: -10.761987686157227
    5. '_list' → logprob: -11.511987686157227
    6. 'lab' → logprob: -11.886987686157227
    7. '_la' → logprob: -12.011987686157227
    8. 'list' → logprob: -12.011987686157227
    9. '_labels' → logprob: -12.261987686157227
    10. 'l' → logprob: -12.386987686157227

Token 530: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.006737392861396074
    2. '(range' → logprob: -5.006737232208252
    3. '(' → logprob: -11.00673770904541
    4. '([' → logprob: -12.63173770904541
    5. 'list' → logprob: -13.25673770904541
    6. 'range' → logprob: -16.006736755371094
    7. '(
' → logprob: -16.506736755371094
    8. ' (' → logprob: -16.631736755371094
    9. '=list' → logprob: -16.881736755371094
    10. '[list' → logprob: -17.006736755371094

Token 531: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0007104054093360901
    2. 'range' → logprob: -7.250710487365723
    3. '(' → logprob: -15.250710487365723
    4. ' range' → logprob: -15.625710487365723
    5. '(
' → logprob: -18.375709533691406
    6. '	range' → logprob: -18.500709533691406
    7. ')' → logprob: -20.625709533691406
    8. '```' → logprob: -21.500709533691406
    9. '
' → logprob: -21.750709533691406
    10. '_range' → logprob: -21.875709533691406

Token 532: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002625278721097857
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -14.125262260437012
    4. '(n' → logprob: -14.750262260437012
    5. ' (' → logprob: -16.250263214111328
    6. '```' → logprob: -17.625263214111328
    7. ')' → logprob: -17.750263214111328
    8. 'N' → logprob: -18.500263214111328
    9. '((' → logprob: -19.375263214111328
    10. ')(' → logprob: -19.375263214111328

Token 533: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.04507435858249664
    2. '))' → logprob: -3.170074462890625
    3. '()' → logprob: -7.045074462890625
    4. ')))' → logprob: -7.420074462890625
    5. ')' → logprob: -7.545074462890625
    6. '))),' → logprob: -10.795074462890625
    7. ' ' → logprob: -10.795074462890625
    8. '),' → logprob: -11.045074462890625
    9. '(' → logprob: -11.920074462890625
    10. ')),
' → logprob: -12.670074462890625

Token 534: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009158630855381489
    2. '1' → logprob: -7.000916004180908
    3. ' ' → logprob: -12.37591552734375
    4. '   ' → logprob: -16.25091552734375
    5. '  ' → logprob: -22.50091552734375
    6. '    ' → logprob: -22.62591552734375
    7. '    
' → logprob: -23.37591552734375
    8. '2' → logprob: -23.50091552734375
    9. '```' → logprob: -23.87591552734375
    10. '۰' → logprob: -24.00091552734375

Token 535: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687264919281006
    2. '1' → logprob: -1.13687264919281
    3. ' ' → logprob: -13.511872291564941
    4. '2' → logprob: -15.511872291564941
    5. '   ' → logprob: -17.011873245239258
    6. '
' → logprob: -17.136873245239258
    7. '3' → logprob: -18.949373245239258
    8. '#' → logprob: -19.636873245239258
    9. '  ' → logprob: -19.761873245239258
    10. '```' → logprob: -19.824373245239258

Token 536: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -15.000004768371582
    4. '))' → logprob: -18.000003814697266
    5. ')

' → logprob: -18.875003814697266
    6. ')
' → logprob: -18.875003814697266
    7. ')`' → logprob: -19.125003814697266
    8. ')return' → logprob: -20.000003814697266
    9. ')**' → logprob: -20.875003814697266
    10. '),' → logprob: -20.875003814697266

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009227732080034912
    2. 'return' → logprob: -7.000922679901123
    3. ' return' → logprob: -11.875923156738281
    4. '```' → logprob: -12.625923156738281
    5. '   ' → logprob: -14.500923156738281
    6. '    
' → logprob: -15.000923156738281
    7. '	return' → logprob: -15.625923156738281
    8. '       ' → logprob: -17.62592315673828
    9. 'for' → logprob: -18.25092315673828
    10. '   ' → logprob: -18.62592315673828

Token 538: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10044486075639725
    2. '   ' → logprob: -2.350444793701172
    3. ' return' → logprob: -8.350444793701172
    4. '	return' → logprob: -13.350444793701172
    5. 'ret' → logprob: -15.850444793701172
    6. '```' → logprob: -16.475444793701172
    7. '    
' → logprob: -17.100444793701172
    8. '   ' → logprob: -17.975444793701172
    9. '{return' → logprob: -18.350444793701172
    10. ':return' → logprob: -18.600444793701172

Token 539: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.008618712425231934
    2. ' matr' → logprob: -4.7586188316345215
    3. '   ' → logprob: -13.633618354797363
    4. 'mati' → logprob: -13.633618354797363
    5. 'matrix' → logprob: -14.883618354797363
    6. ' ' → logprob: -15.008618354797363
    7. ' matric' → logprob: -15.008618354797363
    8. ' ' → logprob: -15.383618354797363
    9. ' mat' → logprob: -16.00861930847168
    10. 'ma' → logprob: -16.13361930847168

Token 540: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -3.7697225252486533e-06
    2. 'ce' → logprob: -13.125003814697266
    3. 'rice' → logprob: -13.500003814697266
    4. 'ixe' → logprob: -16.000003814697266
    5. '[' → logprob: -17.250003814697266
    6. 'i' → logprob: -17.500003814697266
    7. 'ix' → logprob: -17.625003814697266
    8. 'e' → logprob: -17.625003814697266
    9. 'ace' → logprob: -17.875003814697266
    10. 'ic' → logprob: -18.125003814697266

Token 541: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012351183220744133
    2. 'def' → logprob: -5.262351036071777
    3. '#' → logprob: -5.762351036071777
    4. '```' → logprob: -6.012351036071777
    5. 'N' → logprob: -6.887351036071777
    6. 'print' → logprob: -8.512351036071777
    7. ' for' → logprob: -8.637351036071777
    8. 'n' → logprob: -9.887351036071777
    9. 'import' → logprob: -11.137351036071777
    10. 'matrix' → logprob: -11.762351036071777

Token 542: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05647978186607361
    2. 'def' → logprob: -3.5564796924591064
    3. '#' → logprob: -3.9314796924591064
    4. 'N' → logprob: -5.5564799308776855
    5. '```' → logprob: -6.1814799308776855
    6. 'print' → logprob: -7.5564799308776855
    7. ' for' → logprob: -8.806479454040527
    8. 'n' → logprob: -9.556479454040527
    9. 'if' → logprob: -10.431479454040527
    10. 'import' → logprob: -11.181479454040527

Token 543: ' afficher' (ID: 146524)
  Prédit: ' afficher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.0016920845955610275
    2. ' affiche' → logprob: -7.376692295074463
    3. ' affich' → logprob: -7.751692295074463
    4. '_aff' → logprob: -8.001691818237305
    5. ' print' → logprob: -9.376691818237305
    6. ' display' → logprob: -9.626691818237305
    7. ' aff' → logprob: -10.126691818237305
    8. ' impr' → logprob: -10.251691818237305
    9. ' main' → logprob: -10.876691818237305
    10. '_' → logprob: -11.126691818237305

Token 544: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.09086526185274124
    2. '_' → logprob: -2.46586537361145
    3. '_part' → logprob: -6.340865135192871
    4. '_la' → logprob: -10.340865135192871
    5. '_mat' → logprob: -10.465865135192871
    6. '_matrix' → logprob: -10.590865135192871
    7. '__' → logprob: -11.090865135192871
    8. '_upper' → logprob: -11.090865135192871
    9. '_s' → logprob: -11.715865135192871
    10. '_p' → logprob: -11.715865135192871

Token 545: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -1.7120533811976202e-05
    2. 'atrix' → logprob: -11.625017166137695
    3. 'atr' → logprob: -12.375017166137695
    4. 'at' → logprob: -13.000017166137695
    5. 'atric' → logprob: -13.750017166137695
    6. 'atrices' → logprob: -15.250017166137695
    7. 'a' → logprob: -16.000017166137695
    8. 'atri' → logprob: -16.625017166137695
    9. 'mat' → logprob: -16.750017166137695
    10. 'atriz' → logprob: -17.625017166137695

Token 546: '_super' (ID: 81649)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.13074608147144318
    2. '(N' → logprob: -2.1307461261749268
    3. '(' → logprob: -6.380745887756348
    4. '(M' → logprob: -6.630745887756348
    5. '(n' → logprob: -8.755745887756348
    6. ' (' → logprob: -9.005745887756348
    7. '(mat' → logprob: -9.130745887756348
    8. '_part' → logprob: -9.255745887756348
    9. '(matrix' → logprob: -9.505745887756348
    10. '_(' → logprob: -9.630745887756348

Token 547: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.029526563361287117
    2. 'ieur' → logprob: -3.654526472091675
    3. 'rie' → logprob: -5.904526710510254
    4. 'e' → logprob: -9.279526710510254
    5. '_' → logprob: -10.029526710510254
    6. 'ficie' → logprob: -10.154526710510254
    7. 'erie' → logprob: -10.654526710510254
    8. '>' → logprob: -10.779526710510254
    9. 'ieu' → logprob: -10.779526710510254
    10. '_ie' → logprob: -10.779526710510254

Token 548: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0013508300762623549
    2. 'ur' → logprob: -6.6263508796691895
    3. 'rie' → logprob: -11.376350402832031
    4. 'urement' → logprob: -12.876350402832031
    5. 'uree' → logprob: -13.001350402832031
    6. 'urre' → logprob: -13.251350402832031
    7. 'urie' → logprob: -14.001350402832031
    8. 'e' → logprob: -14.126350402832031
    9. ' ure' → logprob: -14.501350402832031
    10. '
' → logprob: -14.751350402832031

Token 549: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.007767986040562391
    2. '(N' → logprob: -5.507768154144287
    3. '_part' → logprob: -7.382768154144287
    4. '_' → logprob: -7.507768154144287
    5. '(H' → logprob: -7.507768154144287
    6. '(M' → logprob: -7.632768154144287
    7. '_(' → logprob: -8.257767677307129
    8. '_ex' → logprob: -8.382767677307129
    9. '_h' → logprob: -8.382767677307129
    10. ' (' → logprob: -9.257767677307129

Token 550: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.033869288861751556
    2. 'atr' → logprob: -3.5338692665100098
    3. 'atrix' → logprob: -6.28386926651001
    4. 'at' → logprob: -6.40886926651001
    5. 'atriz' → logprob: -8.783869743347168
    6. 'atric' → logprob: -8.783869743347168
    7. 'def' → logprob: -9.033869743347168
    8. 'atri' → logprob: -9.908869743347168
    9. 'a' → logprob: -10.158869743347168
    10. 'atrices' → logprob: -10.658869743347168

Token 551: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14394059777259827
    2. '):
' → logprob: -2.0189406871795654
    3. '):
' → logprob: -7.268940448760986
    4. '(m' → logprob: -8.268940925598145
    5. ')' → logprob: -8.518940925598145
    6. ',' → logprob: -9.643940925598145
    7. ' ):' → logprob: -10.768940925598145
    8. ',m' → logprob: -11.768940925598145
    9. '   ' → logprob: -12.518940925598145
    10. '(mat' → logprob: -12.768940925598145

Token 552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.800739018013701e-05
    2. 'def' → logprob: -10.0000581741333
    3. ':' → logprob: -12.5000581741333
    4. '```' → logprob: -12.7500581741333
    5. '   ' → logprob: -13.7500581741333
    6. '    
' → logprob: -13.7500581741333
    7. '    ' → logprob: -13.8750581741333
    8. '(n' → logprob: -14.5000581741333
    9. '(' → logprob: -14.8750581741333
    10. '   ' → logprob: -14.8750581741333

Token 553: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25535428524017334
    2. 'def' → logprob: -1.5053542852401733
    3. ' def' → logprob: -6.130354404449463
    4. ' N' → logprob: -7.755354404449463
    5. 'N' → logprob: -8.380353927612305
    6. 'for' → logprob: -8.630353927612305
    7. ' for' → logprob: -8.630353927612305
    8. '```' → logprob: -9.130353927612305
    9. 'n' → logprob: -9.380353927612305
    10. '
' → logprob: -11.505353927612305

Token 554: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009836367331445217
    2. '"""
' → logprob: -5.384836196899414
    3. '"""' → logprob: -6.009836196899414
    4. 'def' → logprob: -6.259836196899414
    5. 'for' → logprob: -7.759836196899414
    6. 'n' → logprob: -9.134836196899414
    7. ')' → logprob: -9.259836196899414
    8. '
' → logprob: -9.884836196899414
    9. '"' → logprob: -10.384836196899414
    10. '    
' → logprob: -10.634836196899414

Token 555: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6386201977729797
    2. 'def' → logprob: -0.7636201977729797
    3. ' def' → logprob: -5.638620376586914
    4. 'n' → logprob: -7.513620376586914
    5. 'for' → logprob: -7.513620376586914
    6. ' N' → logprob: -7.638620376586914
    7. 'N' → logprob: -8.638620376586914
    8. ' n' → logprob: -8.888620376586914
    9. '"""
' → logprob: -8.888620376586914
    10. ' for' → logprob: -9.013620376586914

Token 556: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -3.976922744186595e-05
    2. 'ic' → logprob: -10.875040054321289
    3. 'che' → logprob: -10.875040054321289
    4. 'ichage' → logprob: -14.500040054321289
    5. '
' → logprob: -15.125040054321289
    6. 'i' → logprob: -15.375040054321289
    7. '   ' → logprob: -15.500040054321289
    8. 'icher' → logprob: -16.00004005432129
    9. '\' → logprob: -16.12504005432129
    10. '#' → logprob: -16.25004005432129

Token 557: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.043357692658901215
    2. '(' → logprob: -3.7933576107025146
    3. '(m' → logprob: -4.418357849121094
    4. '   ' → logprob: -5.668357849121094
    5. '(
' → logprob: -5.918357849121094
    6. 'def' → logprob: -7.418357849121094
    7. ' les' → logprob: -8.543357849121094
    8. ' (' → logprob: -8.668357849121094
    9. '(len' → logprob: -9.043357849121094
    10. ' uniquement' → logprob: -9.043357849121094

Token 558: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.9037333726882935
    2. 'def' → logprob: -1.4037333726882935
    3. ' partie' → logprob: -1.6537333726882935
    4. ' part' → logprob: -2.903733253479004
    5. '   ' → logprob: -3.403733253479004
    6. 'for' → logprob: -3.903733253479004
    7. ' matr' → logprob: -4.153733253479004
    8. ' for' → logprob: -4.278733253479004
    9. 'mat' → logprob: -4.528733253479004
    10. ' def' → logprob: -5.903733253479004

Token 559: ' supérieure' (ID: 106336)
  Prédit: ' supérieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.8396755456924438
    2. ' sup' → logprob: -1.2146755456924438
    3. 'sup' → logprob: -1.4646755456924438
    4. '_sup' → logprob: -3.9646754264831543
    5. ' ' → logprob: -4.714675426483154
    6. '   ' → logprob: -5.339675426483154
    7. ' supérieur' → logprob: -5.714675426483154
    8. 'super' → logprob: -6.464675426483154
    9. '  ' → logprob: -6.839675426483154
    10. ' super' → logprob: -6.964675426483154

Token 560: ' hors' (ID: 26087)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3375796973705292
    2. 'de' → logprob: -2.0875797271728516
    3. ' de' → logprob: -2.4625797271728516
    4. '(m' → logprob: -2.7125797271728516
    5. '   ' → logprob: -5.212579727172852
    6. ' hors' → logprob: -6.337579727172852
    7. '(' → logprob: -6.712579727172852
    8. '(de' → logprob: -7.337579727172852
    9. '(h' → logprob: -8.087579727172852
    10. '(
' → logprob: -8.337579727172852

Token 561: ' diagon' (ID: 146014)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.1572498232126236
    2. 'diag' → logprob: -2.157249927520752
    3. ' diagon' → logprob: -4.032249927520752
    4. ' diagonal' → logprob: -4.782249927520752
    5. '_di' → logprob: -6.157249927520752
    6. '   ' → logprob: -7.532249927520752
    7. '-di' → logprob: -7.657249927520752
    8. ' diag' → logprob: -8.157249450683594
    9. '_diag' → logprob: -8.282249450683594
    10. ' ' → logprob: -9.907249450683594

Token 562: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -2.5822400857578032e-05
    2. 'nale' → logprob: -10.875025749206543
    3. 'al' → logprob: -13.625025749206543
    4. 'on' → logprob: -13.750025749206543
    5. 'rale' → logprob: -13.875025749206543
    6. 'cale' → logprob: -14.250025749206543
    7. 'але' → logprob: -14.625025749206543
    8. '</' → logprob: -15.500025749206543
    9. '```' → logprob: -15.625025749206543
    10. 'le' → logprob: -15.625025749206543

Token 563: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.26262661814689636
    2. '   ' → logprob: -1.8876266479492188
    3. '(m' → logprob: -3.1376266479492188
    4. 'de' → logprob: -4.012626647949219
    5. ' (' → logprob: -4.637626647949219
    6. '(' → logprob: -5.762626647949219
    7. '(de' → logprob: -6.012626647949219
    8. '(
' → logprob: -6.637626647949219
    9. ',' → logprob: -7.762626647949219
    10. ' ' → logprob: -7.762626647949219

Token 564: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06203782185912132
    2. 'la' → logprob: -2.812037706375122
    3. 'mat' → logprob: -9.812037467956543
    4. 'def' → logprob: -11.812037467956543
    5. ' matr' → logprob: -12.312037467956543
    6. 'l' → logprob: -13.312037467956543
    7. 'the' → logprob: -14.312037467956543
    8. '   ' → logprob: -15.062037467956543
    9. 'ma' → logprob: -15.062037467956543
    10. ' the' → logprob: -15.312037467956543

Token 565: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.03818722441792488
    2. ' matr' → logprob: -3.288187265396118
    3. 'def' → logprob: -8.913187026977539
    4. 'matrix' → logprob: -12.163187026977539
    5. 'ma' → logprob: -14.038187026977539
    6. ' matric' → logprob: -14.038187026977539
    7. '   ' → logprob: -14.413187026977539
    8. ' matriz' → logprob: -14.413187026977539
    9. ' mat' → logprob: -14.413187026977539
    10. ' def' → logprob: -14.538187026977539

Token 566: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.002868115669116378
    2. 'ce' → logprob: -5.877868175506592
    3. 'ix' → logprob: -10.502867698669434
    4. 'atrice' → logprob: -11.252867698669434
    5. 'e' → logprob: -11.627867698669434
    6. 'ace' → logprob: -12.502867698669434
    7. '
' → logprob: -12.752867698669434
    8. 'ixe' → logprob: -13.627867698669434
    9. '#' → logprob: -13.877867698669434
    10. 'rice' → logprob: -14.127867698669434

Token 567: ' four' (ID: 4242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.539939284324646
    2. '(m' → logprob: -1.664939284324646
    3. 'def' → logprob: -1.789939284324646
    4. ',' → logprob: -3.5399394035339355
    5. ' (' → logprob: -3.5399394035339355
    6. '
' → logprob: -6.9149394035339355
    7. '(mat' → logprob: -7.4149394035339355
    8. '(
' → logprob: -7.7899394035339355
    9. ' def' → logprob: -8.289938926696777
    10. ',
' → logprob: -8.789938926696777

Token 568: 'nie' (ID: 7640)
  Prédit: 'nie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nie' → logprob: -9.662937372922897e-05
    2. 'n' → logprob: -9.500096321105957
    3. '
' → logprob: -12.125096321105957
    4. 'nite' → logprob: -12.875096321105957
    5. 'ni' → logprob: -13.000096321105957
    6. 'nit' → logprob: -13.125096321105957
    7. 'ie' → logprob: -13.125096321105957
    8. '"""
' → logprob: -13.250096321105957
    9. '   ' → logprob: -13.500096321105957
    10. '

' → logprob: -14.625096321105957

Token 569: '.
' (ID: 558)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.14773119986057281
    2. '   ' → logprob: -2.022731304168701
    3. '(
' → logprob: -6.397731304168701
    4. ',' → logprob: -6.522731304168701
    5. '(' → logprob: -7.522731304168701
    6. 'def' → logprob: -7.522731304168701
    7. '(mat' → logprob: -7.897731304168701
    8. ' (' → logprob: -8.272730827331543
    9. '
' → logprob: -9.647730827331543
    10. '(matrix' → logprob: -10.897730827331543

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018402770161628723
    2. 'def' → logprob: -4.018402576446533
    3. '
' → logprob: -9.393403053283691
    4. '    
' → logprob: -9.518403053283691
    5. ' def' → logprob: -9.643403053283691
    6. '```' → logprob: -10.643403053283691
    7. '"""
' → logprob: -12.268403053283691
    8. '"""' → logprob: -13.893403053283691
    9. '  
' → logprob: -14.018403053283691
    10. '   
' → logprob: -15.268403053283691

Token 571: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001070442725904286
    2. 'def' → logprob: -6.876070499420166
    3. ' def' → logprob: -10.376070022583008
    4. '
' → logprob: -13.126070022583008
    5. '```' → logprob: -13.126070022583008
    6. '    
' → logprob: -13.251070022583008
    7. ' for' → logprob: -14.626070022583008
    8. 'for' → logprob: -16.876070022583008
    9. '"""' → logprob: -16.876070022583008
    10. '   ' → logprob: -17.001070022583008

Token 572: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5670758485794067
    2. ' ' → logprob: -1.9420758485794067
    3. '   ' → logprob: -2.692075729370117
    4. ' val' → logprob: -3.067075729370117
    5. ' valeur' → logprob: -3.067075729370117
    6. 'ligne' → logprob: -3.442075729370117
    7. ' i' → logprob: -3.817075729370117
    8. ' element' → logprob: -3.942075729370117
    9. 'val' → logprob: -4.192075729370117
    10. ' élément' → logprob: -4.442075729370117

Token 573: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21628227829933167
    2. 'def' → logprob: -2.466282367706299
    3. ' =' → logprob: -2.591282367706299
    4. ' def' → logprob: -4.216282367706299
    5. ' de' → logprob: -4.966282367706299
    6. ',' → logprob: -5.966282367706299
    7. '    ' → logprob: -6.091282367706299
    8. ' (' → logprob: -6.466282367706299
    9. ' du' → logprob: -6.591282367706299
    10. ' est' → logprob: -6.966282367706299

Token 574: ' affiche' (ID: 127479)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23639501631259918
    2. '   ' → logprob: -1.736395001411438
    3. ' def' → logprob: -4.111394882202148
    4. ' for' → logprob: -4.736394882202148
    5. '[' → logprob: -5.736394882202148
    6. 'for' → logprob: -6.361394882202148
    7. ',' → logprob: -6.736394882202148
    8. ' =' → logprob: -6.986394882202148
    9. '[i' → logprob: -8.111394882202148
    10. '    ' → logprob: -8.611394882202148

Token 575: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8855705857276917
    2. '('' → logprob: -1.5105705261230469
    3. ' les' → logprob: -2.260570526123047
    4. '   ' → logprob: -2.635570526123047
    5. '"' → logprob: -2.885570526123047
    6. ''' → logprob: -3.260570526123047
    7. '(' → logprob: -3.885570526123047
    8. '("' → logprob: -4.135570526123047
    9. ' '' → logprob: -4.135570526123047
    10. 'les' → logprob: -5.260570526123047

Token 576: ' éléments' (ID: 57375)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.630205512046814
    2. ' éléments' → logprob: -1.630205512046814
    3. ' valeurs' → logprob: -1.880205512046814
    4. 'élé' → logprob: -3.0052056312561035
    5. ' j' → logprob: -3.7552056312561035
    6. ' val' → logprob: -4.5052056312561035
    7. ' elements' → logprob: -4.5052056312561035
    8. ' indices' → logprob: -5.2552056312561035
    9. 'indices' → logprob: -5.5052056312561035
    10. 'elements' → logprob: -5.5052056312561035

Token 577: ' situ' (ID: 4581)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42566221952438354
    2. ' de' → logprob: -1.8006622791290283
    3. '[j' → logprob: -3.1756622791290283
    4. '[' → logprob: -3.4256622791290283
    5. ' à' → logprob: -3.5506622791290283
    6. ' i' → logprob: -3.6756622791290283
    7. 'i' → logprob: -3.8006622791290283
    8. 'de' → logprob: -4.050662040710449
    9. '   ' → logprob: -5.675662040710449
    10. 'from' → logprob: -5.800662040710449

Token 578: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -3.070975071750581e-05
    2. 'es' → logprob: -11.500030517578125
    3. 'ée' → logprob: -11.750030517578125
    4. 'ées' → logprob: -12.000030517578125
    5. 'é' → logprob: -12.250030517578125
    6. 'ès' → logprob: -13.875030517578125
    7. 's' → logprob: -14.875030517578125
    8. '```' → logprob: -16.125030517578125
    9. '   ' → logprob: -16.375030517578125
    10. 'e' → logprob: -16.875030517578125

Token 579: ' après' (ID: 16460)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.18272066116333
    2. '[j' → logprob: -1.30772066116333
    3. ' j' → logprob: -1.93272066116333
    4. ' dans' → logprob: -2.80772066116333
    5. '   ' → logprob: -2.93272066116333
    6. 'j' → logprob: -3.43272066116333
    7. 'dans' → logprob: -3.55772066116333
    8. ' après' → logprob: -3.93272066116333
    9. ' entre' → logprob: -4.05772066116333
    10. '[i' → logprob: -4.43272066116333

Token 580: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5849080681800842
    2. 'la' → logprob: -1.5849080085754395
    3. 'i' → logprob: -1.7099080085754395
    4. ' i' → logprob: -3.4599080085754395
    5. 'l' → logprob: -3.8349080085754395
    6. ' l' → logprob: -5.9599080085754395
    7. ' ' → logprob: -7.5849080085754395
    8. 'j' → logprob: -8.209908485412598
    9. 'le' → logprob: -8.459908485412598
    10. ' le' → logprob: -9.459908485412598

Token 581: ' colonne' (ID: 148275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2265777289867401
    2. ' i' → logprob: -1.8515777587890625
    3. 'di' → logprob: -3.6015777587890625
    4. ' diagonal' → logprob: -4.9765777587890625
    5. ' diagon' → logprob: -5.8515777587890625
    6. ',' → logprob: -5.9765777587890625
    7. 'j' → logprob: -6.6015777587890625
    8. 'ligne' → logprob: -6.9765777587890625
    9. '```' → logprob: -6.9765777587890625
    10. 'diag' → logprob: -7.6015777587890625

Token 582: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2522331476211548
    2. ' i' → logprob: -1.5022331476211548
    3. '   ' → logprob: -8.752233505249023
    4. 'j' → logprob: -9.377233505249023
    5. ' j' → logprob: -10.502233505249023
    6. '	i' → logprob: -10.627233505249023
    7. '[i' → logprob: -12.377233505249023
    8. '_i' → logprob: -13.002233505249023
    9. ' ' → logprob: -14.002233505249023
    10. '(i' → logprob: -14.502233505249023

Token 583: '.

' (ID: 364)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1779640167951584
    2. ',' → logprob: -2.302963972091675
    3. 'i' → logprob: -3.302963972091675
    4. ' i' → logprob: -4.802964210510254
    5. ' +' → logprob: -5.052964210510254
    6. '   ' → logprob: -5.427964210510254
    7. '[i' → logprob: -5.802964210510254
    8. 'j' → logprob: -7.052964210510254
    9. ' j' → logprob: -7.802964210510254
    10. '[' → logprob: -7.927964210510254

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5792306661605835
    2. 'def' → logprob: -0.8292306661605835
    3. ' def' → logprob: -6.204230785369873
    4. '
' → logprob: -7.579230785369873
    5. '"""
' → logprob: -8.204230308532715
    6. '```' → logprob: -8.204230308532715
    7. '    
' → logprob: -8.829230308532715
    8. '"""' → logprob: -10.204230308532715
    9. '  
' → logprob: -12.204230308532715
    10. ' 
' → logprob: -12.579230308532715

Token 585: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03008299134671688
    2. 'def' → logprob: -3.530082941055298
    3. '
' → logprob: -8.780082702636719
    4. '"""
' → logprob: -9.655082702636719
    5. ' def' → logprob: -9.905082702636719
    6. '    
' → logprob: -10.530082702636719
    7. '```' → logprob: -10.530082702636719
    8. '"""' → logprob: -12.280082702636719
    9. '\' → logprob: -13.280082702636719
    10. '\n' → logprob: -13.530082702636719

Token 586: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5694112181663513
    2. 'def' → logprob: -1.694411277770996
    3. '(m' → logprob: -2.444411277770996
    4. '):
' → logprob: -2.694411277770996
    5. ':
' → logprob: -2.944411277770996
    6. ':' → logprob: -3.819411277770996
    7. '       ' → logprob: -5.194411277770996
    8. ' :' → logprob: -5.819411277770996
    9. ' def' → logprob: -6.069411277770996
    10. '```' → logprob: -6.194411277770996

Token 587: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004362718027550727
    2. '       ' → logprob: -8.250435829162598
    3. 'def' → logprob: -8.875435829162598
    4. '```' → logprob: -11.500435829162598
    5. '
' → logprob: -12.125435829162598
    6. 'mat' → logprob: -12.500435829162598
    7. '    ' → logprob: -12.625435829162598
    8. ' def' → logprob: -12.625435829162598
    9. '    
' → logprob: -12.875435829162598
    10. '  ' → logprob: -13.375435829162598

Token 588: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0004273315134923905
    2. '   ' → logprob: -8.00042724609375
    3. ' matr' → logprob: -9.37542724609375
    4. 'matrix' → logprob: -12.25042724609375
    5. 'mati' → logprob: -14.25042724609375
    6. ' mat' → logprob: -14.50042724609375
    7. 'liste' → logprob: -15.50042724609375
    8. '```' → logprob: -15.62542724609375
    9. 'ma' → logprob: -16.00042724609375
    10. 'mar' → logprob: -16.37542724609375

Token 589: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.5977504849433899
    2. 'mat' → logprob: -1.4727504253387451
    3. 'atrice' → logprob: -2.222750425338745
    4. 'ce' → logprob: -3.472750425338745
    5. 'ixe' → logprob: -3.972750425338745
    6. '   ' → logprob: -3.972750425338745
    7. 'ix' → logprob: -4.097750663757324
    8. 'atr' → logprob: -5.097750663757324
    9. 'tr' → logprob: -5.097750663757324
    10. '```' → logprob: -5.847750663757324

Token 590: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06128387153148651
    2. ':' → logprob: -3.436283826828003
    3. '   ' → logprob: -4.686284065246582
    4. '):' → logprob: -4.936284065246582
    5. '(list' → logprob: -5.061284065246582
    6. '):
' → logprob: -6.311284065246582
    7. '[list' → logprob: -6.936284065246582
    8. ')' → logprob: -7.811284065246582
    9. ':list' → logprob: -8.061284065246582
    10. '```' → logprob: -8.061284065246582

Token 591: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.1008713702030946e-06
    2. ' list' → logprob: -13.500001907348633
    3. ')' → logprob: -15.000001907348633
    4. 'List' → logprob: -16.125001907348633
    5. '[list' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. 'liste' → logprob: -17.375001907348633
    8. ':list' → logprob: -18.500001907348633
    9. '(list' → logprob: -19.375001907348633
    10. '```' → logprob: -19.625001907348633

Token 592: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.0003078142472077161
    2. '[List' → logprob: -8.7503080368042
    3. '[int' → logprob: -9.8753080368042
    4. '[[' → logprob: -10.5003080368042
    5. '[' → logprob: -11.0003080368042
    6. '```' → logprob: -11.0003080368042
    7. '):
' → logprob: -11.6253080368042
    8. '):' → logprob: -11.7503080368042
    9. ':list' → logprob: -12.0003080368042
    10. ')' → logprob: -12.2503080368042

Token 593: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0445127372804563e-05
    2. 'int' → logprob: -11.50001049041748
    3. '[' → logprob: -16.125009536743164
    4. '<int' → logprob: -16.375009536743164
    5. ']int' → logprob: -18.500009536743164
    6. '```' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.625009536743164
    8. '[
' → logprob: -20.375009536743164
    9. '(int' → logprob: -20.500009536743164
    10. '[list' → logprob: -20.500009536743164

Token 594: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.10801488906145096
    2. '[int' → logprob: -2.3580148220062256
    3. ']])' → logprob: -4.858015060424805
    4. '[List' → logprob: -12.608015060424805
    5. '[' → logprob: -12.733015060424805
    6. 'int' → logprob: -13.608015060424805
    7. ']])
' → logprob: -13.983015060424805
    8. '```' → logprob: -14.108015060424805
    9. ']]]' → logprob: -14.233015060424805
    10. ']):' → logprob: -14.733015060424805

Token 595: '):' (ID: 3127)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.5924534797668457
    2. ']):' → logprob: -0.8424534797668457
    3. '])' → logprob: -4.592453479766846
    4. '   ' → logprob: -5.717453479766846
    5. ')' → logprob: -6.467453479766846
    6. '):
' → logprob: -7.467453479766846
    7. ']' → logprob: -8.467453002929688
    8. '):' → logprob: -8.592453002929688
    9. ']]' → logprob: -8.717453002929688
    10. ')]' → logprob: -9.217453002929688

Token 596: ' La' (ID: 3038)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4049972593784332
    2. '   ' → logprob: -1.1549972295761108
    3. ' list' → logprob: -4.0299973487854
    4. '       ' → logprob: -9.279996871948242
    5. 'List' → logprob: -10.279996871948242
    6. ')' → logprob: -10.404996871948242
    7. '```' → logprob: -11.904996871948242
    8. 'liste' → logprob: -12.029996871948242
    9. 'La' → logprob: -12.154996871948242
    10. 'def' → logprob: -13.154996871948242

Token 597: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.09081410616636276
    2. 'def' → logprob: -3.2158141136169434
    3. ' matr' → logprob: -3.5908141136169434
    4. '   ' → logprob: -4.965814113616943
    5. 'matrix' → logprob: -4.965814113616943
    6. 'size' → logprob: -6.715814113616943
    7. ')' → logprob: -7.090814113616943
    8. 'tail' → logprob: -7.465814113616943
    9. 'liste' → logprob: -7.965814113616943
    10. 'list' → logprob: -7.965814113616943

Token 598: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0009863656014204025
    2. 'rice' → logprob: -7.875986576080322
    3. 'ix' → logprob: -8.125986099243164
    4. 'atrice' → logprob: -8.625986099243164
    5. '#' → logprob: -10.750986099243164
    6. 'ixe' → logprob: -10.750986099243164
    7. 'def' → logprob: -11.000986099243164
    8. 'ce' → logprob: -11.000986099243164
    9. '   ' → logprob: -11.125986099243164
    10. 'ize' → logprob: -11.250986099243164

Token 599: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2031150609254837
    2. '   ' → logprob: -2.3281149864196777
    3. '):' → logprob: -3.0781149864196777
    4. '):
' → logprob: -4.078114986419678
    5. ':
' → logprob: -4.703114986419678
    6. ')' → logprob: -4.828114986419678
    7. ' :' → logprob: -6.078114986419678
    8. ' à' → logprob: -6.578114986419678
    9. 'à' → logprob: -7.828114986419678
    10. '[int' → logprob: -7.828114986419678

Token 600: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.0008126051397994161
    2. ' afficher' → logprob: -7.125812530517578
    3. 'Afficher' → logprob: -12.500812530517578
    4. 'print' → logprob: -12.875812530517578
    5. '   ' → logprob: -14.500812530517578
    6. ' aff' → logprob: -14.750812530517578
    7. '_aff' → logprob: -15.250812530517578
    8. ''aff' → logprob: -15.500812530517578
    9. '```' → logprob: -16.250812530517578
    10. '-aff' → logprob: -16.625812530517578

Token 601: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04475388675928116
    2. '):' → logprob: -3.4197537899017334
    3. '   ' → logprob: -4.7947540283203125
    4. ')' → logprob: -5.9197540283203125
    5. '):
' → logprob: -9.544754028320312
    6. '```' → logprob: -11.919754028320312
    7. '"):
' → logprob: -13.169754028320312
    8. '):

' → logprob: -13.419754028320312
    9. ')**' → logprob: -13.794754028320312
    10. 'def' → logprob: -13.794754028320312

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020699729793705046
    2. ')' → logprob: -9.62520694732666
    3. '):
' → logprob: -9.62520694732666
    4. '"""' → logprob: -10.75020694732666
    5. '    
' → logprob: -10.87520694732666
    6. '):' → logprob: -11.37520694732666
    7. '```' → logprob: -11.37520694732666
    8. '"""
' → logprob: -11.75020694732666
    9. '
' → logprob: -14.12520694732666
    10. '   ' → logprob: -14.50020694732666

Token 603: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036582681350409985
    2. '):
' → logprob: -6.003658294677734
    3. '"""
' (adapté à ' """
') → logprob: -7.253658294677734
    4. ')' → logprob: -8.503658294677734
    5. '):' → logprob: -8.753658294677734
    6. '"""' → logprob: -9.503658294677734
    7. '```' → logprob: -10.878658294677734
    8. 'def' → logprob: -11.628658294677734
    9. '    
' → logprob: -12.628658294677734
    10. ' """
' → logprob: -12.878658294677734

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.333223139634356e-05
    2. 'for' → logprob: -10.625033378601074
    3. ' for' → logprob: -12.000033378601074
    4. 'def' → logprob: -13.000033378601074
    5. '```' → logprob: -15.375033378601074
    6. '    
' → logprob: -16.250032424926758
    7. '   ' → logprob: -16.500032424926758
    8. '
' → logprob: -17.375032424926758
    9. 'n' → logprob: -17.750032424926758
    10. '  ' → logprob: -18.750032424926758

Token 605: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08659014105796814
    2. 'for' → logprob: -2.836590051651001
    3. 'N' (adapté à ' N') → logprob: -4.33659029006958
    4. 'n' → logprob: -4.58659029006958
    5. ' for' → logprob: -6.96159029006958
    6. 'def' → logprob: -9.961589813232422
    7. ' N' → logprob: -10.586589813232422
    8. '```' → logprob: -10.961589813232422
    9. ' n' → logprob: -11.336589813232422
    10. '    
' → logprob: -13.461589813232422

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519327998161316
    2. '=' → logprob: -1.5019328594207764
    3. '=len' → logprob: -12.626933097839355
    4. '=int' → logprob: -15.126933097839355
    5. '   ' → logprob: -16.87693214416504
    6. '=size' → logprob: -18.25193214416504
    7. '=n' → logprob: -18.50193214416504
    8. '=N' → logprob: -19.12693214416504
    9. '＝' → logprob: -19.37693214416504
    10. ',' → logprob: -19.37693214416504

Token 607: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001170225441455841
    2. ' len' → logprob: -6.7511701583862305
    3. '(len' → logprob: -18.501171112060547
    4. '[len' → logprob: -20.626171112060547
    5. '   ' → logprob: -21.501171112060547
    6. '=len' → logprob: -21.876171112060547
    7. '	len' → logprob: -22.001171112060547
    8. ',len' → logprob: -25.751171112060547
    9. '<len' → logprob: -26.126171112060547
    10. 'Len' → logprob: -26.251171112060547

Token 608: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. 'm' → logprob: -16.12501335144043
    4. ' (' → logprob: -18.37501335144043
    5. '(
' → logprob: -19.00001335144043
    6. 'mat' → logprob: -19.25001335144043
    7. '	m' → logprob: -21.37501335144043
    8. '(mat' → logprob: -21.87501335144043
    9. '(ma' → logprob: -22.00001335144043
    10. '[m' → logprob: -22.50001335144043

Token 609: 'atrice' (ID: 48155)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.00016754455282352865
    2. 'atrice' → logprob: -8.750167846679688
    3. ' matr' → logprob: -11.875167846679688
    4. '   ' → logprob: -14.125167846679688
    5. '(m' → logprob: -15.000167846679688
    6. ')' → logprob: -15.500167846679688
    7. '[' → logprob: -15.625167846679688
    8. '```' → logprob: -16.000167846679688
    9. '(mat' → logprob: -16.500167846679688
    10. '=' → logprob: -16.625167846679688

Token 610: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01828947477042675
    2. ')' → logprob: -4.018289566040039
    3. '   ' → logprob: -9.518289566040039
    4. ')
' → logprob: -9.643289566040039
    5. ')m' → logprob: -14.643289566040039
    6. ')

' → logprob: -15.018289566040039
    7. 'def' → logprob: -15.393289566040039
    8. ' )
' → logprob: -16.01828956604004
    9. ')`
' → logprob: -16.76828956604004
    10. ' ' → logprob: -18.14328956604004

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.810037742368877e-05
    2. 'for' → logprob: -10.250038146972656
    3. ' for' → logprob: -12.875038146972656
    4. '
' → logprob: -16.625038146972656
    5. '    
' → logprob: -17.000038146972656
    6. '	for' → logprob: -18.250038146972656
    7. '       ' → logprob: -18.750038146972656
    8. '```' → logprob: -19.250038146972656
    9. '   ' → logprob: -19.250038146972656
    10. 'def' → logprob: -20.625038146972656

Token 612: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06248776987195015
    2. '   ' → logprob: -2.812487840652466
    3. ' for' → logprob: -7.562487602233887
    4. '	for' → logprob: -15.562487602233887
    5. '
' → logprob: -16.187488555908203
    6. '```' → logprob: -17.187488555908203
    7. '    
' → logprob: -17.312488555908203
    8. ' ' → logprob: -19.312488555908203
    9. 'print' → logprob: -20.062488555908203
    10. '  ' → logprob: -20.062488555908203

Token 613: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02975083328783512
    2. ' i' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.27975082397461
    4. '	i' → logprob: -16.15475082397461
    5. ' ' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.65475082397461
    7. 'ligne' → logprob: -17.90475082397461
    8. '  ' → logprob: -18.52975082397461
    9. '_i' → logprob: -19.40475082397461
    10. 'range' → logprob: -19.52975082397461

Token 614: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033657222986221313
    2. 'in' → logprob: -3.4086573123931885
    3. ' ' → logprob: -13.03365707397461
    4. 'range' → logprob: -13.15865707397461
    5. '   ' → logprob: -13.65865707397461
    6. '+' → logprob: -13.90865707397461
    7. 'import' → logprob: -14.15865707397461
    8. ',' → logprob: -14.28365707397461
    9. '	in' → logprob: -14.40865707397461
    10. ' i' → logprob: -14.53365707397461

Token 615: ' ligne' (ID: 19583)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5747421979904175
    2. 'ligne' → logprob: -0.9497421979904175
    3. 'j' → logprob: -3.699742317199707
    4. 'i' → logprob: -5.074742317199707
    5. 'line' → logprob: -5.199742317199707
    6. ' ligne' → logprob: -5.449742317199707
    7. 'range' → logprob: -5.574742317199707
    8. '_' → logprob: -6.074742317199707
    9. ' row' → logprob: -6.449742317199707
    10. 'l' → logprob: -7.324742317199707

Token 616: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28141722083091736
    2. 'in' → logprob: -1.4064172506332397
    3. 'dans' → logprob: -8.531416893005371
    4. 'de' → logprob: -10.781416893005371
    5. ' dans' → logprob: -12.031416893005371
    6. 'en' → logprob: -12.031416893005371
    7. ',' → logprob: -12.156416893005371
    8. '[' → logprob: -12.281416893005371
    9. ')' → logprob: -12.406416893005371
    10. ' ' → logprob: -12.531416893005371

Token 617: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00018089536752086133
    2. 'range' → logprob: -8.875181198120117
    3. ' enumerate' → logprob: -10.125181198120117
    4. 'en' → logprob: -15.250181198120117
    5. '(en' → logprob: -15.750181198120117
    6. 'enum' → logprob: -15.750181198120117
    7. '
' → logprob: -15.875181198120117
    8. '```' → logprob: -16.125181198120117
    9. '   ' → logprob: -16.750181198120117
    10. 'import' → logprob: -17.375181198120117

Token 618: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0002714681322686374
    2. 'm' → logprob: -8.875271797180176
    3. '(l' → logprob: -10.125271797180176
    4. 'range' → logprob: -10.375271797180176
    5. ')' → logprob: -10.500271797180176
    6. '(' → logprob: -10.750271797180176
    7. 'mat' → logprob: -12.750271797180176
    8. '(range' → logprob: -12.875271797180176
    9. '(
' → logprob: -13.625271797180176
    10. 'l' → logprob: -13.625271797180176

Token 619: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.0002441741817165166
    2. ')' → logprob: -9.875244140625
    3. 'mat' → logprob: -9.875244140625
    4. 'atr' → logprob: -10.250244140625
    5. 'at' → logprob: -10.375244140625
    6. '[i' → logprob: -10.875244140625
    7. 'atrix' → logprob: -11.750244140625
    8. 'tr' → logprob: -11.750244140625
    9. '[' → logprob: -11.875244140625
    10. 'atri' → logprob: -12.250244140625

Token 620: '[:-' (ID: 63556)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0311333816498518
    2. '):' → logprob: -4.03113317489624
    3. '[i' → logprob: -5.03113317489624
    4. '   ' → logprob: -5.15613317489624
    5. '):
' → logprob: -7.90613317489624
    6. '       ' → logprob: -9.031133651733398
    7. '[' → logprob: -9.406133651733398
    8. ')' → logprob: -10.781133651733398
    9. ':' → logprob: -12.156133651733398
    10. ')[' → logprob: -13.156133651733398

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. '])' → logprob: -12.875011444091797
    3. '-' → logprob: -13.000011444091797
    4. '2' → logprob: -13.125011444091797
    5. 'N' → logprob: -13.625011444091797
    6. ' ' → logprob: -13.875011444091797
    7. '   ' → logprob: -15.125011444091797
    8. 'i' → logprob: -15.187511444091797
    9. '
' → logprob: -15.500011444091797
    10. '(' → logprob: -15.625011444091797

Token 622: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6936894655227661
    2. '):' → logprob: -0.6936894655227661
    3. '   ' → logprob: -8.318689346313477
    4. '):
' → logprob: -8.818689346313477
    5. ')' → logprob: -9.943689346313477
    6. ']):' → logprob: -10.068689346313477
    7. ':' → logprob: -10.318689346313477
    8. ']):
' → logprob: -11.443689346313477
    9. '       ' → logprob: -12.568689346313477
    10. ' ):' → logprob: -12.818689346313477

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001438266917830333
    2. '   ' → logprob: -8.875144004821777
    3. ' for' → logprob: -13.125144004821777
    4. '	   ' → logprob: -14.500144004821777
    5. '        
' → logprob: -14.500144004821777
    6. '    ' → logprob: -15.125144004821777
    7. '    
' → logprob: -16.12514305114746
    8. ',' → logprob: -16.25014305114746
    9. '[' → logprob: -16.50014305114746
    10. '	' → logprob: -16.87514305114746

Token 624: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5861703157424927
    2. ' for' → logprob: -0.9611703157424927
    3. 'for' → logprob: -3.086170196533203
    4. '       ' → logprob: -4.336170196533203
    5. ' print' → logprob: -6.711170196533203
    6. 'print' → logprob: -6.836170196533203
    7. ' ' → logprob: -10.711170196533203
    8. '   ' → logprob: -11.711170196533203
    9. '	for' → logprob: -12.086170196533203
    10. '    ' → logprob: -13.086170196533203

Token 625: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028862813487648964
    2. '   ' → logprob: -4.528862953186035
    3. 'print' → logprob: -4.653862953186035
    4. ' for' → logprob: -5.278862953186035
    5. 'ligne' → logprob: -6.403862953186035
    6. 'elements' → logprob: -6.903862953186035
    7. '       ' → logprob: -8.903862953186035
    8. ' ligne' → logprob: -10.028862953186035
    9. 'values' → logprob: -10.153862953186035
    10. 'vals' → logprob: -10.903862953186035

Token 626: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.003784989472478628
    2. 'iche' → logprob: -5.878785133361816
    3. 'ichage' → logprob: -7.753785133361816
    4. '   ' → logprob: -8.378785133361816
    5. 'ich' → logprob: -8.628785133361816
    6. 'cher' → logprob: -9.503785133361816
    7. 'ic' → logprob: -11.003785133361816
    8. '#' → logprob: -11.128785133361816
    9. '       ' → logprob: -11.128785133361816
    10. '    ' → logprob: -12.753785133361816

Token 627: ',' (ID: 11)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3625997304916382
    2. '('' → logprob: -2.1125998497009277
    3. '("' → logprob: -2.3625998497009277
    4. ''' → logprob: -2.6125998497009277
    5. '(' → logprob: -4.612599849700928
    6. ' '' → logprob: -6.362599849700928
    7. ' "' → logprob: -6.612599849700928
    8. '(
' → logprob: -6.737599849700928
    9. '   ' → logprob: -6.862599849700928
    10. '(*' → logprob: -8.61259937286377

Token 628: ' pour' (ID: 1930)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3058422803878784
    2. '"' → logprob: -2.055842399597168
    3. ''' → logprob: -2.555842399597168
    4. ' *' → logprob: -3.930842399597168
    5. '   ' → logprob: -4.055842399597168
    6. '       ' → logprob: -4.555842399597168
    7. ' '' → logprob: -5.180842399597168
    8. 'print' → logprob: -6.430842399597168
    9. ' "' → logprob: -7.305842399597168
    10. '           ' → logprob: -7.805842399597168

Token 629: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005874632857739925
    2. ' j' → logprob: -5.2558746337890625
    3. 'val' → logprob: -7.7558746337890625
    4. 'element' → logprob: -9.880874633789062
    5. 'col' → logprob: -9.880874633789062
    6. '   ' → logprob: -10.505874633789062
    7. 'elem' → logprob: -10.755874633789062
    8. 'i' → logprob: -11.505874633789062
    9. 'indice' → logprob: -11.755874633789062
    10. 'élé' → logprob: -12.255874633789062

Token 630: ' ligne' (ID: 19583)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006961400154978037
    2. 'col' → logprob: -5.256961345672607
    3. ' j' → logprob: -7.256961345672607
    4. 'i' → logprob: -7.631961345672607
    5. 'k' → logprob: -8.881961822509766
    6. 'part' → logprob: -8.881961822509766
    7. 'ligne' → logprob: -9.631961822509766
    8. 'indice' → logprob: -10.006961822509766
    9. 'élé' → logprob: -10.756961822509766
    10. 'val' → logprob: -10.881961822509766

Token 631: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23101229965686798
    2. ' i' → logprob: -1.6060123443603516
    3. '       ' → logprob: -5.731012344360352
    4. '   ' → logprob: -6.481012344360352
    5. '[i' → logprob: -7.981012344360352
    6. '(i' → logprob: -8.356012344360352
    7. ' range' → logprob: -10.231012344360352
    8. 'range' → logprob: -10.356012344360352
    9. '	i' → logprob: -10.481012344360352
    10. '=i' → logprob: -10.856012344360352

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004332676064223051
    2. '       ' → logprob: -5.754332542419434
    3. ' ,' → logprob: -7.754332542419434
    4. '[i' → logprob: -8.254332542419434
    5. '   ' → logprob: -8.629332542419434
    6. '=' → logprob: -9.504332542419434
    7. '[' → logprob: -10.254332542419434
    8. ',i' → logprob: -10.504332542419434
    9. 'i' → logprob: -10.629332542419434
    10. '(i' → logprob: -10.754332542419434

Token 633: ' les' (ID: 1341)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7391707897186279
    2. ''' → logprob: -0.9891707897186279
    3. ' '' → logprob: -2.239170789718628
    4. '*' → logprob: -3.614170789718628
    5. ' "' → logprob: -4.489171028137207
    6. ' *' → logprob: -5.989171028137207
    7. '   ' → logprob: -6.114171028137207
    8. '       ' → logprob: -8.114171028137207
    9. ' ' → logprob: -8.739171028137207
    10. 'ligne' → logprob: -8.739171028137207

Token 634: ' éléments' (ID: 57375)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4987735152244568
    2. ''' → logprob: -1.2487735748291016
    3. ' '' → logprob: -2.9987735748291016
    4. 'ligne' → logprob: -4.123773574829102
    5. ' "' → logprob: -4.498773574829102
    6. 'élé' → logprob: -4.623773574829102
    7. 'val' → logprob: -5.748773574829102
    8. 'elements' → logprob: -5.998773574829102
    9. ' ligne' → logprob: -6.373773574829102
    10. ' elements' → logprob: -6.498773574829102

Token 635: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004050144460052252
    2. 'i' → logprob: -6.379050254821777
    3. '(i' → logprob: -7.129050254821777
    4. ' i' → logprob: -7.504050254821777
    5. '   ' → logprob: -7.879050254821777
    6. '[j' → logprob: -8.254050254821777
    7. '[' → logprob: -8.379050254821777
    8. '       ' → logprob: -10.379050254821777
    9. ' de' → logprob: -10.754050254821777
    10. 'de' → logprob: -11.379050254821777

Token 636: ' la' (ID: 557)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.003668129211291671
    2. ' ligne' → logprob: -6.628668308258057
    3. 'i' → logprob: -6.878668308258057
    4. 'la' → logprob: -7.628668308258057
    5. '[i' → logprob: -7.753668308258057
    6. 'l' → logprob: -9.003667831420898
    7. 'range' → logprob: -9.753667831420898
    8. ' i' → logprob: -10.003667831420898
    9. '(i' → logprob: -10.128667831420898
    10. '   ' → logprob: -10.128667831420898

Token 637: ' colonne' (ID: 148275)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.37837448716163635
    2. 'i' → logprob: -1.753374457359314
    3. 'ligne' → logprob: -2.1283745765686035
    4. '(i' → logprob: -4.5033745765686035
    5. 'range' → logprob: -5.3783745765686035
    6. ' i' → logprob: -6.0033745765686035
    7. ' ligne' → logprob: -6.6283745765686035
    8. 'l' → logprob: -7.0033745765686035
    9. '       ' → logprob: -7.6283745765686035
    10. ' range' → logprob: -7.8783745765686035

Token 638: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001894010347314179
    2. ' i' → logprob: -6.501893997192383
    3. '[i' → logprob: -8.376893997192383
    4. '   ' → logprob: -9.126893997192383
    5. '       ' → logprob: -10.376893997192383
    6. '(i' → logprob: -11.001893997192383
    7. '{i' → logprob: -13.001893997192383
    8. '	i' → logprob: -14.626893997192383
    9. '[' → logprob: -14.626893997192383
    10. '>' → logprob: -14.876893997192383

Token 639: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00351027213037014
    2. ' +' → logprob: -5.753510475158691
    3. '+i' → logprob: -8.503510475158691
    4. '   ' → logprob: -9.378510475158691
    5. 'i' → logprob: -10.253510475158691
    6. '[i' → logprob: -11.878510475158691
    7. '       ' → logprob: -13.003510475158691
    8. ' i' → logprob: -14.503510475158691
    9. ' ' → logprob: -15.503510475158691
    10. '(i' → logprob: -16.628509521484375

Token 640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001530216890387237
    2. '+' → logprob: -6.501530170440674
    3. 'i' → logprob: -11.251530647277832
    4. ' +' → logprob: -11.626530647277832
    5. ' ' → logprob: -12.251530647277832
    6. ' i' → logprob: -14.876530647277832
    7. '+i' → logprob: -15.001530647277832
    8. '   ' → logprob: -15.251530647277832
    9. '
' → logprob: -15.876530647277832
    10. '```' → logprob: -16.626529693603516

Token 641: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.23278555274009705
    2. ':' → logprob: -1.9827855825424194
    3. 'à' → logprob: -3.10778546333313
    4. ':i' → logprob: -4.357785701751709
    5. '+' → logprob: -5.607785701751709
    6. '[i' → logprob: -5.732785701751709
    7. '+i' → logprob: -5.982785701751709
    8. '   ' → logprob: -6.357785701751709
    9. 'À' → logprob: -8.60778522491455
    10. ',' → logprob: -8.73278522491455

Token 642: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012110244482755661
    2. ' N' → logprob: -4.512110233306885
    3. ' la' → logprob: -8.262110710144043
    4. '-' → logprob: -8.262110710144043
    5. 'la' → logprob: -8.512110710144043
    6. 'len' → logprob: -8.887110710144043
    7. '   ' → logprob: -10.012110710144043
    8. 'i' → logprob: -10.137110710144043
    9. ' ' → logprob: -10.262110710144043
    10. '-N' → logprob: -11.012110710144043

Token 643: ' fin' (ID: 2131)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005506486631929874
    2. 'fin' → logprob: -8.000550270080566
    3. 'i' → logprob: -9.125550270080566
    4. 'len' → logprob: -10.000550270080566
    5. 'n' → logprob: -11.500550270080566
    6. '   ' → logprob: -11.500550270080566
    7. 'None' → logprob: -11.625550270080566
    8. '-' → logprob: -12.125550270080566
    9. '```' → logprob: -12.125550270080566
    10. 'dern' → logprob: -12.250550270080566

Token 644: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008192769018933177
    2. ',' → logprob: -7.750819206237793
    3. ':' → logprob: -8.625819206237793
    4. 'print' → logprob: -9.750819206237793
    5. '   ' → logprob: -10.125819206237793
    6. '           ' → logprob: -10.875819206237793
    7. '[' → logprob: -11.125819206237793
    8. ' print' → logprob: -11.250819206237793
    9. '(' → logprob: -11.625819206237793
    10. ' (' → logprob: -11.750819206237793

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013953536108601838
    2. 'print' → logprob: -10.000139236450195
    3. ' print' → logprob: -10.625139236450195
    4. '   ' → logprob: -11.000139236450195
    5. ' for' → logprob: -11.375139236450195
    6. '           ' → logprob: -11.875139236450195
    7. ':' → logprob: -11.875139236450195
    8. '	' → logprob: -12.000139236450195
    9. ',' → logprob: -12.375139236450195
    10. '      ' → logprob: -12.625139236450195

Token 646: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08828651905059814
    2. ' print' → logprob: -2.5882863998413086
    3. '       ' → logprob: -4.713286399841309
    4. '   ' → logprob: -8.088286399841309
    5. 'for' → logprob: -10.213286399841309
    6. 'ligne' → logprob: -11.463286399841309
    7. ' ligne' → logprob: -12.213286399841309
    8. ' for' → logprob: -12.463286399841309
    9. ' lignes' → logprob: -12.713286399841309
    10. ' ' → logprob: -13.463286399841309

Token 647: '(*' (ID: 9000)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7639159560203552
    2. '('' → logprob: -1.263916015625
    3. '(*' → logprob: -2.013916015625
    4. '(' → logprob: -2.138916015625
    5. '(*(' → logprob: -8.638916015625
    6. '(
' → logprob: -8.763916015625
    7. '((' → logprob: -12.138916015625
    8. '"' → logprob: -12.263916015625
    9. ' ("' → logprob: -12.388916015625
    10. '([' → logprob: -12.388916015625

Token 648: 'ligne' (ID: 94660)
  Prédit: 'ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0006022418383508921
    2. '[' → logprob: -7.5006022453308105
    3. '[l' → logprob: -10.750601768493652
    4. '[i' → logprob: -11.500601768493652
    5. ' ligne' → logprob: -12.000601768493652
    6. 'lig' → logprob: -12.250601768493652
    7. '[line' → logprob: -13.250601768493652
    8. 'line' → logprob: -13.875601768493652
    9. '[m' → logprob: -14.250601768493652
    10. 'liste' → logprob: -14.500601768493652

Token 649: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001314295077463612
    2. '[' → logprob: -9.750131607055664
    3. 'i' → logprob: -10.625131607055664
    4. '(i' → logprob: -10.875131607055664
    5. ')[' → logprob: -11.625131607055664
    6. '[(' → logprob: -11.750131607055664
    7. ' [' → logprob: -12.125131607055664
    8. '   ' → logprob: -12.500131607055664
    9. '[I' → logprob: -14.000131607055664
    10. ' i' → logprob: -14.250131607055664

Token 650: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006258221692405641
    2. ' +' → logprob: -7.7506256103515625
    3. '+i' → logprob: -8.625625610351562
    4. '1' → logprob: -11.250625610351562
    5. 'i' → logprob: -14.000625610351562
    6. '[i' → logprob: -14.375625610351562
    7. '   ' → logprob: -15.125625610351562
    8. '[' → logprob: -15.375625610351562
    9. '(i' → logprob: -15.500625610351562
    10. ']+' → logprob: -16.125625610351562

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. '2' → logprob: -10.875021934509277
    3. ' ' → logprob: -13.375021934509277
    4. '   ' → logprob: -14.875021934509277
    5. '```' → logprob: -15.000021934509277
    6. '+' → logprob: -15.625021934509277
    7. '
' → logprob: -17.12502098083496
    8. ':' → logprob: -17.68752098083496
    9. 'i' → logprob: -18.00002098083496
    10. '       ' → logprob: -18.12502098083496

Token 652: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06651816517114639
    2. ':],' → logprob: -2.8165180683135986
    3. '],' → logprob: -6.066518306732178
    4. '])' → logprob: -6.191518306732178
    5. ' :' → logprob: -9.31651782989502
    6. ':])
' → logprob: -10.31651782989502
    7. ':]' → logprob: -10.44151782989502
    8. ' ])' → logprob: -12.69151782989502
    9. ']' → logprob: -12.81651782989502
    10. '::' → logprob: -12.94151782989502

Token 653: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1603049486875534
    2. '],' → logprob: -1.9103049039840698
    3. ']' → logprob: -9.78530502319336
    4. 'N' → logprob: -11.66030502319336
    5. ' ])' → logprob: -11.91030502319336
    6. '])
' → logprob: -12.66030502319336
    7. ' ],' → logprob: -13.53530502319336
    8. ')' → logprob: -14.16030502319336
    9. '],"' → logprob: -14.16030502319336
    10. '],'' → logprob: -14.28530502319336

Token 654: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11889467388391495
    2. 'N' → logprob: -2.868894577026367
    3. 'if' → logprob: -3.368894577026367
    4. 'for' → logprob: -4.368894577026367
    5. 'print' → logprob: -5.868894577026367
    6. '```' → logprob: -6.243894577026367
    7. '
' → logprob: -6.993894577026367
    8. 'n' → logprob: -7.243894577026367
    9. 'def' → logprob: -7.368894577026367
    10. '  
' → logprob: -7.368894577026367

Token 655: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1572445183992386
    2. ' test' → logprob: -2.5322444438934326
    3. ' __' → logprob: -3.9072444438934326
    4. '__' → logprob: -3.9072444438934326
    5. ' run' → logprob: -4.407244682312012
    6. ' tester' → logprob: -5.032244682312012
    7. 'main' → logprob: -5.532244682312012
    8. '_main' → logprob: -7.032244682312012
    9. ' runner' → logprob: -7.907244682312012
    10. ' _' → logprob: -7.907244682312012

Token 656: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002558561391197145
    2. '():
' → logprob: -8.625255584716797
    3. ' ():' → logprob: -9.750255584716797
    4. '()' → logprob: -11.250255584716797
    5. '():
' → logprob: -13.125255584716797
    6. '_' → logprob: -13.250255584716797
    7. '()>' → logprob: -14.750255584716797
    8. '(' → logprob: -14.875255584716797
    9. ' ()' → logprob: -16.500255584716797
    10. '():

' → logprob: -16.625255584716797

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.662937372922897e-05
    2. 'N' → logprob: -10.250096321105957
    3. 'def' → logprob: -11.250096321105957
    4. ' N' → logprob: -11.375096321105957
    5. '    
' → logprob: -11.625096321105957
    6. '```' → logprob: -12.000096321105957
    7. 'import' → logprob: -12.125096321105957
    8. '(N' → logprob: -12.250096321105957
    9. 'n' → logprob: -12.875096321105957
    10. '#' → logprob: -13.375096321105957

Token 658: ' """
' (ID: 7037)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.40388262271881104
    2. 'N' → logprob: -1.278882622718811
    3. '   ' → logprob: -3.5288825035095215
    4. 'n' → logprob: -4.0288825035095215
    5. ' n' → logprob: -5.0288825035095215
    6. '    
' → logprob: -9.27888298034668
    7. ' 
' → logprob: -9.52888298034668
    8. '```' → logprob: -10.90388298034668
    9. 'import' → logprob: -11.65388298034668
    10. '
' → logprob: -11.65388298034668

Token 659: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00878746435046196
    2. '   ' → logprob: -4.758787631988525
    3. 'n' → logprob: -8.883787155151367
    4. ' N' → logprob: -10.383787155151367
    5. 'import' → logprob: -12.883787155151367
    6. '```' → logprob: -15.133787155151367
    7. '    
' → logprob: -15.508787155151367
    8. 'try' → logprob: -15.633787155151367
    9. '#' → logprob: -16.133787155151367
    10. ' ' → logprob: -16.883787155151367

Token 660: ' Fonction' (ID: 189149)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.046248938888311386
    2. '   ' → logprob: -3.2962489128112793
    3. ' N' → logprob: -5.421248912811279
    4. 'n' → logprob: -5.921248912811279
    5. '#' → logprob: -7.421248912811279
    6. 'T' → logprob: -8.921249389648438
    7. 'import' → logprob: -9.671249389648438
    8. 'tail' → logprob: -9.796249389648438
    9. '
' → logprob: -10.046249389648438
    10. '"""
' → logprob: -10.421249389648438

Token 661: ' principale' (ID: 68926)
  Prédit: ' principale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principale' → logprob: -0.21716299653053284
    2. ' main' → logprob: -1.7171629667282104
    3. ' principal' → logprob: -5.0921630859375
    4. ' de' → logprob: -5.3421630859375
    5. 'def' → logprob: -6.7171630859375
    6. ' def' → logprob: -6.8421630859375
    7. 'main' → logprob: -7.3421630859375
    8. ' principales' → logprob: -7.8421630859375
    9. ' test' → logprob: -8.3421630859375
    10. ' ' → logprob: -8.4671630859375

Token 662: ' du' (ID: 1462)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.25629594922065735
    2. '():' → logprob: -1.506295919418335
    3. '   ' → logprob: -6.506296157836914
    4. '()' → logprob: -6.631296157836914
    5. ':' → logprob: -6.881296157836914
    6. ':
' → logprob: -8.506296157836914
    7. '(N' → logprob: -8.881296157836914
    8. 'def' → logprob: -9.506296157836914
    9. '):
' → logprob: -10.631296157836914
    10. '
' → logprob: -11.256296157836914

Token 663: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.012320567853748798
    2. ' programme' → logprob: -4.512320518493652
    3. 'program' → logprob: -6.762320518493652
    4. 'script' → logprob: -9.137320518493652
    5. 'code' → logprob: -13.262320518493652
    6. ' script' → logprob: -13.387320518493652
    7. 'programma' → logprob: -13.512320518493652
    8. 'module' → logprob: -13.887320518493652
    9. 'programm' → logprob: -14.012320518493652
    10. ' program' → logprob: -14.387320518493652

Token 664: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.574757993221283
    2. '():
' → logprob: -1.5747580528259277
    3. '():' → logprob: -2.5747580528259277
    4. ':
' → logprob: -2.6997580528259277
    5. '   ' → logprob: -2.9497580528259277
    6. '):
' → logprob: -4.074758052825928
    7. '):' → logprob: -4.699758052825928
    8. '(N' → logprob: -5.699758052825928
    9. '```' → logprob: -6.449758052825928
    10. 'def' → logprob: -7.199758052825928

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.983476436696947e-05
    2. ' N' → logprob: -10.625089645385742
    3. 'def' → logprob: -11.125089645385742
    4. '    
' → logprob: -11.125089645385742
    5. '    ' → logprob: -11.250089645385742
    6. 'n' → logprob: -11.625089645385742
    7. 'N' → logprob: -12.125089645385742
    8. '  ' → logprob: -12.625089645385742
    9. '```' → logprob: -14.000089645385742
    10. '#' → logprob: -14.000089645385742

Token 666: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10463816672563553
    2. ' N' → logprob: -2.85463809967041
    3. 'N' → logprob: -3.22963809967041
    4. 'n' → logprob: -6.60463809967041
    5. ' n' → logprob: -7.85463809967041
    6. '    
' → logprob: -8.60463809967041
    7. '#' → logprob: -9.85463809967041
    8. '```' → logprob: -9.85463809967041
    9. '
' → logprob: -10.10463809967041
    10. '"""
' → logprob: -10.72963809967041

Token 667: ' R' (ID: 460)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.34554868936538696
    2. ' N' → logprob: -1.5955486297607422
    3. '   ' → logprob: -3.095548629760742
    4. '#' → logprob: -3.595548629760742
    5. 'n' → logprob: -5.220548629760742
    6. ' #' → logprob: -6.220548629760742
    7. ' n' → logprob: -6.470548629760742
    8. 'T' → logprob: -6.970548629760742
    9. 'R' → logprob: -7.095548629760742
    10. 'import' → logprob: -7.220548629760742

Token 668: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.08543187379837036
    2. 'ec' → logprob: -3.3354318141937256
    3. 'é' → logprob: -3.9604318141937256
    4. 'e' → logprob: -4.335432052612305
    5. 'éal' → logprob: -4.835432052612305
    6. '   ' → logprob: -5.335432052612305
    7. 'éf' → logprob: -8.335432052612305
    8. 'ef' → logprob: -8.460432052612305
    9. 'ép' → logprob: -9.085432052612305
    10. '"""
' → logprob: -9.335432052612305

Token 669: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -6.396757089532912e-05
    2. 'uper' → logprob: -10.8750638961792
    3. 'upr' → logprob: -10.8750638961792
    4. 'u' → logprob: -11.7500638961792
    5. 'upt' → logprob: -13.2500638961792
    6. 'é' → logprob: -13.3750638961792
    7. '
' → logprob: -13.5000638961792
    8. 'oit' → logprob: -13.5000638961792
    9. 'upe' → logprob: -13.6250638961792
    10. 'op' → logprob: -13.7500638961792

Token 670: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.00014823723176959902
    2. 'ére' → logprob: -9.875147819519043
    3. '\' → logprob: -10.750147819519043
    4. 'p' → logprob: -11.000147819519043
    5. 'è' → logprob: -11.250147819519043
    6. '[' → logprob: -11.250147819519043
    7. 'ere' → logprob: -11.875147819519043
    8. 'érer' → logprob: -12.500147819519043
    9. '```' → logprob: -12.625147819519043
    10. '
' → logprob: -12.875147819519043

Token 671: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15364651381969452
    2. '   ' → logprob: -2.028646469116211
    3. 'la' → logprob: -5.403646469116211
    4. ' une' → logprob: -6.028646469116211
    5. ' N' → logprob: -6.653646469116211
    6. ' l' → logprob: -7.403646469116211
    7. ' un' → logprob: -7.528646469116211
    8. 'N' → logprob: -7.653646469116211
    9. 'n' → logprob: -8.653646469116211
    10. ' le' → logprob: -8.778646469116211

Token 672: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.3413667380809784
    2. ' taille' → logprob: -1.4663667678833008
    3. '   ' → logprob: -3.466366767883301
    4. 'T' → logprob: -4.466366767883301
    5. ' ' → logprob: -4.841366767883301
    6. 'N' → logprob: -5.466366767883301
    7. 't' → logprob: -6.716366767883301
    8. ' N' → logprob: -7.091366767883301
    9. ' tail' → logprob: -7.841366767883301
    10. 'n' → logprob: -7.966366767883301

Token 673: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31282567977905273
    2. ' N' → logprob: -1.6878256797790527
    3. 'N' → logprob: -2.8128256797790527
    4. '    ' → logprob: -4.937825679779053
    5. ' de' → logprob: -5.062825679779053
    6. ' ' → logprob: -5.812825679779053
    7. 'de' → logprob: -6.437825679779053
    8. ' du' → logprob: -6.812825679779053
    9. '  ' → logprob: -6.937825679779053
    10. 'n' → logprob: -7.687825679779053

Token 674: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38458678126335144
    2. '   ' → logprob: -1.7595868110656738
    3. '=' → logprob: -2.259586811065674
    4. ',' → logprob: -4.134586811065674
    5. ' à' → logprob: -5.384586811065674
    6. ' ' → logprob: -5.634586811065674
    7. ' de' → logprob: -5.634586811065674
    8. ' (' → logprob: -6.259586811065674
    9. ' via' → logprob: -6.509586811065674
    10. ' ,' → logprob: -6.634586811065674

Token 675: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8907808065414429
    2. ' la' → logprob: -1.1407808065414429
    3. ' l' → logprob: -1.6407808065414429
    4. 'la' → logprob: -2.6407809257507324
    5. 'entrée' → logprob: -5.640780925750732
    6. ' input' → logprob: -8.265780448913574
    7. 'une' → logprob: -8.390780448913574
    8. 'input' → logprob: -8.765780448913574
    9. 's' → logprob: -9.515780448913574
    10. ' matr' → logprob: -9.640780448913574

Token 676: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.25217247009277344
    2. ' matr' → logprob: -1.5021724700927734
    3. 'matrix' → logprob: -8.752172470092773
    4. 'import' → logprob: -11.377172470092773
    5. 'part' → logprob: -11.377172470092773
    6. ' grille' → logprob: -11.502172470092773
    7. ' matrix' → logprob: -11.627172470092773
    8. ' part' → logprob: -12.002172470092773
    9. 'gr' → logprob: -12.377172470092773
    10. ' mat' → logprob: -12.377172470092773

Token 677: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.007139555644243956
    2. 'rice' → logprob: -5.507139682769775
    3. 'atrice' → logprob: -6.257139682769775
    4. 'ix' → logprob: -7.132139682769775
    5. '```' → logprob: -9.632139205932617
    6. '   ' → logprob: -9.882139205932617
    7. '"""
' → logprob: -10.257139205932617
    8. '#' → logprob: -10.382139205932617
    9. 'ixe' → logprob: -11.132139205932617
    10. 'ique' → logprob: -11.132139205932617

Token 678: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006899836007505655
    2. ',' → logprob: -6.256899833679199
    3. '
' → logprob: -6.631899833679199
    4. 'from' → logprob: -7.256899833679199
    5. '    
' → logprob: -7.381899833679199
    6. ',
' → logprob: -7.506899833679199
    7. ' (' → logprob: -7.881899833679199
    8. '.' → logprob: -8.0068998336792
    9. ' à' → logprob: -8.0068998336792
    10. 'import' → logprob: -8.6318998336792

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021784115233458579
    2. '    
' → logprob: -8.75021743774414
    3. '
' → logprob: -10.25021743774414
    4. ',' → logprob: -11.25021743774414
    5. ',
' → logprob: -13.00021743774414
    6. 'import' → logprob: -13.12521743774414
    7. 'from' → logprob: -13.25021743774414
    8. 'def' → logprob: -14.25021743774414
    9. '       ' → logprob: -14.62521743774414
    10. '    ' → logprob: -14.75021743774414

Token 680: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019507692195475101
    2. '    
' → logprob: -9.125195503234863
    3. 'import' → logprob: -10.000195503234863
    4. '
' → logprob: -11.375195503234863
    5. 'n' → logprob: -11.875195503234863
    6. '#' → logprob: -12.375195503234863
    7. 'N' → logprob: -12.500195503234863
    8. ',' → logprob: -12.750195503234863
    9. '```' → logprob: -12.750195503234863
    10. '    ' → logprob: -13.500195503234863

Token 681: ' Con' (ID: 1532)
  Prédit: ' construit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' construit' → logprob: -1.0595033168792725
    2. 'try' → logprob: -1.5595033168792725
    3. ' try' → logprob: -2.1845033168792725
    4. 'N' → logprob: -2.6845033168792725
    5. ' constru' → logprob: -3.4345033168792725
    6. 'Cr' → logprob: -3.5595033168792725
    7. 'Constr' → logprob: -3.5595033168792725
    8. 'Constru' → logprob: -3.5595033168792725
    9. ' N' → logprob: -3.6845033168792725
    10. '   ' → logprob: -3.6845033168792725

Token 682: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.010103228501975536
    2. 'st' → logprob: -5.635103225708008
    3. 'stru' → logprob: -5.885103225708008
    4. 'struct' → logprob: -6.135103225708008
    5. 't' → logprob: -7.010103225708008
    6. 'tr' → logprob: -8.135103225708008
    7. 'stit' → logprob: -9.010103225708008
    8. 's' → logprob: -9.135103225708008
    9. 'stro' → logprob: -10.635103225708008
    10. 'stri' → logprob: -11.010103225708008

Token 683: 'uit' (ID: 2136)
  Prédit: 'uit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uit' → logprob: -0.029873361811041832
    2. 'ruit' → logprob: -3.5298733711242676
    3. 'oit' → logprob: -10.02987289428711
    4. 'uire' → logprob: -10.52987289428711
    5. 'u' → logprob: -10.65487289428711
    6. 'ru' → logprob: -11.02987289428711
    7. 'uir' → logprob: -12.52987289428711
    8. '_' → logprob: -13.40487289428711
    9. 'uits' → logprob: -13.90487289428711
    10. '
' → logprob: -13.90487289428711

Token 684: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5743785500526428
    2. 'N' → logprob: -1.199378490447998
    3. ' la' → logprob: -2.449378490447998
    4. ' N' → logprob: -3.574378490447998
    5. 'la' → logprob: -3.949378490447998
    6. '    ' → logprob: -8.199378967285156
    7. ' un' → logprob: -8.324378967285156
    8. ' une' → logprob: -8.699378967285156
    9. '(N' → logprob: -8.699378967285156
    10. '    
' → logprob: -8.824378967285156

Token 685: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.11283817142248154
    2. ' matr' → logprob: -2.2378382682800293
    3. 'mati' → logprob: -12.237837791442871
    4. ' mat' → logprob: -12.862837791442871
    5. '#' → logprob: -13.237837791442871
    6. ' matric' → logprob: -13.612837791442871
    7. ' taille' → logprob: -13.737837791442871
    8. 'tail' → logprob: -13.987837791442871
    9. '   ' → logprob: -14.237837791442871
    10. 'matrix' → logprob: -14.237837791442871

Token 686: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -1.5094070477061905e-05
    2. 'ix' → logprob: -11.250015258789062
    3. 'ixe' → logprob: -14.125015258789062
    4. '```' → logprob: -15.250015258789062
    5. 'rice' → logprob: -15.500015258789062
    6. '   ' → logprob: -15.750015258789062
    7. 'Ice' → logprob: -15.750015258789062
    8. 'atrice' → logprob: -16.000015258789062
    9. 'ique' → logprob: -16.000015258789062
    10. 'ICE' → logprob: -16.750015258789062

Token 687: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008114744909107685
    2. '    
' → logprob: -4.883114814758301
    3. '
' → logprob: -8.1331148147583
    4. '  
' → logprob: -10.0081148147583
    5. '   
' → logprob: -10.1331148147583
    6. 'N' → logprob: -10.3831148147583
    7. 'import' → logprob: -11.1331148147583
    8. ',' → logprob: -11.3831148147583
    9. '  ' → logprob: -11.5081148147583
    10. '    ' → logprob: -11.6331148147583

Token 688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.098748053773306e-05
    2. '    
' → logprob: -10.50006103515625
    3. '
' → logprob: -11.25006103515625
    4. '```' → logprob: -11.25006103515625
    5. 'import' → logprob: -13.25006103515625
    6. '  ' → logprob: -13.50006103515625
    7. ',' → logprob: -13.87506103515625
    8. 'def' → logprob: -14.37506103515625
    9. '    ' → logprob: -14.50006103515625
    10. '<|end|>' → logprob: -14.75006103515625

Token 689: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.147740689106286e-05
    2. '#' → logprob: -9.87507152557373
    3. '    
' → logprob: -11.12507152557373
    4. 'import' → logprob: -13.25007152557373
    5. '
' → logprob: -13.87507152557373
    6. 'def' → logprob: -14.12507152557373
    7. '  ' → logprob: -14.62507152557373
    8. '   
' → logprob: -15.75007152557373
    9. ' #' → logprob: -15.87507152557373
    10. 'N' → logprob: -15.87507152557373

Token 690: ' Aff' (ID: 13741)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.306673139333725
    2. ' affiche' → logprob: -1.4316731691360474
    3. '   ' → logprob: -4.056673049926758
    4. 'Aff' → logprob: -5.681673049926758
    5. ' afficher' → logprob: -6.181673049926758
    6. 'Afficher' → logprob: -7.181673049926758
    7. ' aff' → logprob: -7.431673049926758
    8. ' Aff' → logprob: -8.181673049926758
    9. ''aff' → logprob: -8.931673049926758
    10. ' affich' → logprob: -9.181673049926758

Token 691: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -6.778209353797138e-05
    2. 'che' → logprob: -10.375067710876465
    3. 'ic' → logprob: -10.500067710876465
    4. 'fic' → logprob: -12.500067710876465
    5. '#' → logprob: -14.250067710876465
    6. 'ich' → logprob: -14.500067710876465
    7. 'ichage' → logprob: -14.500067710876465
    8. 'i' → logprob: -14.625067710876465
    9. '```' → logprob: -14.750067710876465
    10. '\' → logprob: -14.750067710876465

Token 692: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7282426357269287
    2. '   ' → logprob: -0.9782426357269287
    3. 'la' → logprob: -2.2282426357269287
    4. '(N' → logprob: -3.7282426357269287
    5. '_la' → logprob: -5.853242874145508
    6. '(m' → logprob: -6.478242874145508
    7. 'La' → logprob: -6.728242874145508
    8. '(' → logprob: -7.103242874145508
    9. 'N' → logprob: -7.478242874145508
    10. '()' → logprob: -7.478242874145508

Token 693: ' portion' (ID: 19137)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.06108662486076355
    2. 'part' → logprob: -3.561086654663086
    3. ' matr' → logprob: -3.561086654663086
    4. ' partie' → logprob: -6.061086654663086
    5. '   ' → logprob: -10.436086654663086
    6. 'partition' → logprob: -11.311086654663086
    7. 'mati' → logprob: -11.436086654663086
    8. 'matrix' → logprob: -11.561086654663086
    9. ' part' → logprob: -11.561086654663086
    10. 's' → logprob: -11.936086654663086

Token 694: ' utile' (ID: 68237)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.6998592019081116
    2. ' supérieure' → logprob: -0.6998592019081116
    3. 'super' → logprob: -5.699859142303467
    4. ' sup' → logprob: -6.449859142303467
    5. '   ' → logprob: -7.699859142303467
    6. ' ' → logprob: -8.074859619140625
    7. '```' → logprob: -8.949859619140625
    8. '  ' → logprob: -9.074859619140625
    9. 'ha' → logprob: -9.199859619140625
    10. 'de' → logprob: -9.199859619140625

Token 695: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6590043902397156
    2. ' de' → logprob: -0.7840043902397156
    3. 'de' → logprob: -3.6590044498443604
    4. '  ' → logprob: -9.409004211425781
    5. ' du' → logprob: -10.284004211425781
    6. '```' → logprob: -10.284004211425781
    7. ' ' → logprob: -10.534004211425781
    8. 'def' → logprob: -10.659004211425781
    9. ' (' → logprob: -10.909004211425781
    10. ' complète' → logprob: -11.534004211425781

Token 696: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.03375692293047905
    2. ' la' → logprob: -3.533756971359253
    3. 'celle' → logprob: -6.283756732940674
    4. ' celle' → logprob: -6.408756732940674
    5. 'mat' → logprob: -7.908756732940674
    6. 'l' → logprob: -9.908757209777832
    7. 'cel' → logprob: -10.658757209777832
    8. 'c' → logprob: -11.033757209777832
    9. 'm' → logprob: -12.158757209777832
    10. 'ma' → logprob: -12.283757209777832

Token 697: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.03366759791970253
    2. ' matr' → logprob: -3.40866756439209
    3. ' ' → logprob: -12.15866756439209
    4. '   ' → logprob: -12.15866756439209
    5. 'mé' → logprob: -12.78366756439209
    6. 'matrix' → logprob: -13.03366756439209
    7. '#' → logprob: -13.53366756439209
    8. 'mati' → logprob: -13.78366756439209
    9. '```' → logprob: -14.15866756439209
    10. ' ' → logprob: -14.28366756439209

Token 698: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -1.5690089639974758e-05
    2. 'rice' → logprob: -12.125015258789062
    3. 'ix' → logprob: -12.375015258789062
    4. '   ' → logprob: -13.625015258789062
    5. '#' → logprob: -14.250015258789062
    6. 'i' → logprob: -14.875015258789062
    7. '
' → logprob: -14.875015258789062
    8. '```' → logprob: -15.125015258789062
    9. 'ce' → logprob: -15.250015258789062
    10. '[' → logprob: -15.500015258789062

Token 699: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007173528429120779
    2. '    
' → logprob: -5.132173538208008
    3. '
' → logprob: -6.882173538208008
    4. 'import' → logprob: -9.132173538208008
    5. '```' → logprob: -9.757173538208008
    6. '  
' → logprob: -10.882173538208008
    7. '   
' → logprob: -12.132173538208008
    8. '<|end|>' → logprob: -12.382173538208008
    9. 'def' → logprob: -12.757173538208008
    10. ' 
' → logprob: -12.882173538208008

Token 700: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021307668066583574
    2. '    
' → logprob: -8.625212669372559
    3. '
' → logprob: -10.750212669372559
    4. '```' → logprob: -11.625212669372559
    5. 'import' → logprob: -13.375212669372559
    6. '   
' → logprob: -15.125212669372559
    7. '  
' → logprob: -15.375212669372559
    8. 'N' → logprob: -15.875212669372559
    9. '       ' → logprob: -15.875212669372559
    10. '#' → logprob: -16.125213623046875

Token 701: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.232493564719334e-05
    2. '    
' → logprob: -9.750082015991211
    3. 'N' → logprob: -11.125082015991211
    4. '```' → logprob: -13.000082015991211
    5. '
' → logprob: -13.250082015991211
    6. '"""' → logprob: -13.500082015991211
    7. 'n' → logprob: -13.500082015991211
    8. '"""
' (adapté à ' """
') → logprob: -14.375082015991211
    9. 'import' → logprob: -14.875082015991211
    10. '#' → logprob: -15.250082015991211

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.286852345103398e-05
    2. 'N' → logprob: -10.750042915344238
    3. '    
' → logprob: -11.250042915344238
    4. 'n' → logprob: -12.375042915344238
    5. '```' → logprob: -13.625042915344238
    6. '  ' → logprob: -14.375042915344238
    7. '	N' → logprob: -14.500042915344238
    8. 'import' → logprob: -14.500042915344238
    9. ' N' → logprob: -15.125042915344238
    10. '
' → logprob: -15.500042915344238

Token 703: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0003576304006855935
    2. ' N' → logprob: -8.250357627868652
    3. '   ' → logprob: -9.250357627868652
    4. 'n' → logprob: -15.625357627868652
    5. 'try' → logprob: -15.875357627868652
    6. '    
' → logprob: -16.87535858154297
    7. 'import' → logprob: -17.62535858154297
    8. '	N' → logprob: -18.12535858154297
    9. '```' → logprob: -18.50035858154297
    10. '
' → logprob: -19.00035858154297

Token 704: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.182190554682165e-05
    2. ' N' → logprob: -10.750061988830566
    3. 'try' → logprob: -11.000061988830566
    4. 'while' → logprob: -11.375061988830566
    5. '   ' → logprob: -12.000061988830566
    6. 'import' → logprob: -12.250061988830566
    7. 'n' → logprob: -13.750061988830566
    8. '#' → logprob: -16.87506103515625
    9. ' while' → logprob: -17.12506103515625
    10. '```' → logprob: -17.25006103515625

Token 705: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6867308616638184
    2. ' N' → logprob: -1.0617308616638184
    3. 'N' → logprob: -1.9367308616638184
    4. '(N' → logprob: -5.811730861663818
    5. 'n' → logprob: -6.561730861663818
    6. '    
' → logprob: -7.311730861663818
    7. '()' → logprob: -7.561730861663818
    8. ' de' → logprob: -8.311731338500977
    9. '    ' → logprob: -8.561731338500977
    10. ' n' → logprob: -8.561731338500977

Token 706: ' l' (ID: 305)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05977337807416916
    2. ' N' → logprob: -3.4347734451293945
    3. 'n' → logprob: -4.1847734451293945
    4. ' la' → logprob: -4.6847734451293945
    5. 'l' → logprob: -7.5597734451293945
    6. ' n' → logprob: -8.309773445129395
    7. ' ' → logprob: -8.684773445129395
    8. 'la' → logprob: -8.809773445129395
    9. ' l' → logprob: -9.309773445129395
    10. '   ' → logprob: -9.809773445129395

Token 707: ''entrée' (ID: 115820)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5540969371795654
    2. 'a' → logprob: -1.3040969371795654
    3. ''entrée' → logprob: -2.6790969371795654
    4. 'e' → logprob: -3.1790969371795654
    5. '   ' → logprob: -4.4290971755981445
    6. ''ent' → logprob: -4.5540971755981445
    7. 'input' → logprob: -5.1790971755981445
    8. ''' → logprob: -5.3040971755981445
    9. ''utilisateur' → logprob: -6.5540971755981445
    10. '=' → logprob: -6.6790971755981445

Token 708: ' utilisateur' (ID: 115595)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5944545269012451
    2. ' N' → logprob: -1.0944545269012451
    3. '   ' → logprob: -2.344454526901245
    4. 'n' → logprob: -4.094454765319824
    5. ' n' → logprob: -7.094454765319824
    6. '    
' → logprob: -11.094454765319824
    7. '	N' → logprob: -13.469454765319824
    8. 'import' → logprob: -13.719454765319824
    9. ',' → logprob: -14.594454765319824
    10. ' ' → logprob: -14.844454765319824

Token 709: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.045438818633556366
    2. '   ' → logprob: -3.795438766479492
    3. ' N' → logprob: -4.045438766479492
    4. 'n' → logprob: -5.420438766479492
    5. '    
' → logprob: -11.670438766479492
    6. ' n' → logprob: -11.670438766479492
    7. '	N' → logprob: -12.920438766479492
    8. '```' → logprob: -15.045438766479492
    9. 'try' → logprob: -15.170438766479492
    10. '
' → logprob: -15.670438766479492

Token 710: 'tail' (ID: 20472)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11529983580112457
    2. ')' → logprob: -2.490299940109253
    3. 'n' → logprob: -3.865299940109253
    4. ' N' → logprob: -5.615299701690674
    5. ' )' → logprob: -7.115299701690674
    6. '   ' → logprob: -7.740299701690674
    7. ')n' → logprob: -9.240300178527832
    8. ' n' → logprob: -10.990300178527832
    9. '`)' → logprob: -11.365300178527832
    10. '
' → logprob: -11.740300178527832

Token 711: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -9.710618905955926e-05
    2. 'e' → logprob: -9.375097274780273
    3. '   ' → logprob: -12.125097274780273
    4. 'lle' → logprob: -12.625097274780273
    5. 'Le' → logprob: -13.375097274780273
    6. 'l' → logprob: -14.750097274780273
    7. '```' → logprob: -15.375097274780273
    8. '#' → logprob: -15.500097274780273
    9. 'LE' → logprob: -15.750097274780273
    10. '  ' → logprob: -16.500097274780273

Token 712: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08485107868909836
    2. ' )' → logprob: -3.084851026535034
    3. '   ' → logprob: -4.084851264953613
    4. 'N' → logprob: -4.709851264953613
    5. ' =' → logprob: -5.584851264953613
    6. ' N' → logprob: -5.584851264953613
    7. '=' → logprob: -7.334851264953613
    8. ',' → logprob: -7.709851264953613
    9. ')
' → logprob: -7.834851264953613
    10. 'n' → logprob: -8.709851264953613

Token 713: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0062842522747814655
    2. 'la' → logprob: -5.881284236907959
    3. ' l' → logprob: -7.006284236907959
    4. ')' → logprob: -7.131284236907959
    5. 'l' → logprob: -7.256284236907959
    6. ' )' → logprob: -7.381284236907959
    7. ' ' → logprob: -8.256284713745117
    8. ' N' → logprob: -9.631284713745117
    9. 'N' → logprob: -10.006284713745117
    10. ' matr' → logprob: -10.631284713745117

Token 714: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0430159755051136
    2. ' matr' → logprob: -3.168015956878662
    3. 'matrix' → logprob: -11.41801643371582
    4. 'mati' → logprob: -13.41801643371582
    5. '   ' → logprob: -13.66801643371582
    6. ' mat' → logprob: -13.79301643371582
    7. ' ' → logprob: -14.66801643371582
    8. 'mé' → logprob: -15.29301643371582
    9. ' matrix' → logprob: -15.41801643371582
    10. 'ma' → logprob: -15.66801643371582

Token 715: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -1.9504606825648807e-05
    2. 'ix' → logprob: -11.125019073486328
    3. 'ce' → logprob: -13.750019073486328
    4. 'rice' → logprob: -14.375019073486328
    5. '   ' → logprob: -14.500019073486328
    6. 'ixe' → logprob: -14.625019073486328
    7. 'ique' → logprob: -14.750019073486328
    8. 'atrice' → logprob: -14.875019073486328
    9. '```' → logprob: -15.000019073486328
    10. '#' → logprob: -15.875019073486328

Token 716: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42504170536994934
    2. ')
' → logprob: -1.425041675567627
    3. '   ' → logprob: -2.300041675567627
    4. 'N' → logprob: -5.300041675567627
    5. ' N' → logprob: -8.300042152404785
    6. ')
' → logprob: -9.425042152404785
    7. ' )' → logprob: -10.300042152404785
    8. ')

' → logprob: -10.550042152404785
    9. ' )
' → logprob: -10.550042152404785
    10. 'n' → logprob: -10.550042152404785

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.156549870967865
    2. ' N' → logprob: -2.4065499305725098
    3. 'N' → logprob: -2.9065499305725098
    4. 'n' → logprob: -9.531549453735352
    5. '    
' → logprob: -10.781549453735352
    6. ' n' → logprob: -10.906549453735352
    7. '	N' → logprob: -12.531549453735352
    8. ' 
' → logprob: -13.281549453735352
    9. ' ' → logprob: -14.031549453735352
    10. '
' → logprob: -14.406549453735352

Token 718: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0005664954078383744
    2. ' N' → logprob: -7.500566482543945
    3. '   ' → logprob: -11.250566482543945
    4. 'n' → logprob: -14.750566482543945
    5. 'try' → logprob: -16.250566482543945
    6. '	N' → logprob: -18.375566482543945
    7. '    
' → logprob: -18.500566482543945
    8. ' ' → logprob: -20.375566482543945
    9. ' try' → logprob: -20.750566482543945
    10. 'import' → logprob: -21.000566482543945

Token 719: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38693735003471375
    2. '=' → logprob: -1.1369373798370361
    3. '=int' → logprob: -9.761937141418457
    4. '=input' → logprob: -11.761937141418457
    5. ' ' → logprob: -14.636937141418457
    6. ',' → logprob: -15.636937141418457
    7. ' =
' → logprob: -15.886937141418457
    8. ' ' → logprob: -17.011938095092773
    9. '=N' → logprob: -17.511938095092773
    10. '=

' → logprob: -17.511938095092773

Token 720: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002613358374219388
    2. ' int' → logprob: -8.250261306762695
    3. '=int' → logprob: -21.750261306762695
    4. '	int' → logprob: -22.500261306762695
    5. '[int' → logprob: -22.500261306762695
    6. '<int' → logprob: -23.375261306762695
    7. '(int' → logprob: -23.750261306762695
    8. ' ' → logprob: -24.750261306762695
    9. '```' → logprob: -25.250261306762695
    10. '   ' → logprob: -26.125261306762695

Token 721: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00017147827020380646
    2. '(' → logprob: -8.750171661376953
    3. 'input' → logprob: -11.250171661376953
    4. ' input' → logprob: -17.750171661376953
    5. '=input' → logprob: -18.375171661376953
    6. '(
' → logprob: -18.375171661376953
    7. ' (' → logprob: -19.625171661376953
    8. ',input' → logprob: -21.000171661376953
    9. '<input' → logprob: -21.125171661376953
    10. '	input' → logprob: -21.250171661376953

Token 722: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03235471993684769
    2. '()' → logprob: -3.5323548316955566
    3. '(' → logprob: -6.032354831695557
    4. '("' → logprob: -9.407354354858398
    5. '().' → logprob: -10.282354354858398
    6. '(">' → logprob: -10.657354354858398
    7. '(""))' → logprob: -11.157354354858398
    8. '()>' → logprob: -11.657354354858398
    9. ' ())' → logprob: -12.032354354858398
    10. '('' → logprob: -12.032354354858398

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00560403848066926
    2. 'mat' → logprob: -5.255604267120361
    3. '    
' → logprob: -8.005603790283203
    4. '
' → logprob: -11.630603790283203
    5. 'm' → logprob: -11.755603790283203
    6. ' matr' → logprob: -12.005603790283203
    7. '  ' → logprob: -12.380603790283203
    8. 'matrix' → logprob: -13.505603790283203
    9. 'mati' → logprob: -13.630603790283203
    10. '   ' → logprob: -13.630603790283203

Token 724: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11435513198375702
    2. 'mat' → logprob: -2.2393550872802734
    3. ' matr' → logprob: -6.989355087280273
    4. '    
' → logprob: -7.489355087280273
    5. '```' → logprob: -11.489355087280273
    6. ' mat' → logprob: -11.614355087280273
    7. '
' → logprob: -11.739355087280273
    8. 'matrix' → logprob: -11.989355087280273
    9. 'mati' → logprob: -11.989355087280273
    10. '  ' → logprob: -13.239355087280273

Token 725: ' Construction' (ID: 31452)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.0005236041033640504
    2. ' matr' → logprob: -7.875523567199707
    3. 'A' → logprob: -9.000523567199707
    4. '   ' → logprob: -11.250523567199707
    5. 'matrix' → logprob: -12.750523567199707
    6. ' A' → logprob: -13.625523567199707
    7. 'mati' → logprob: -13.750523567199707
    8. ' mat' → logprob: -14.000523567199707
    9. 'M' → logprob: -14.500523567199707
    10. 'm' → logprob: -15.875523567199707

Token 726: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14559592306613922
    2. ' de' → logprob: -2.1455960273742676
    3. 'de' → logprob: -4.395596027374268
    4. 'mat' → logprob: -5.270596027374268
    5. ' matr' → logprob: -7.020596027374268
    6. '_m' → logprob: -10.02059555053711
    7. ' mat' → logprob: -10.52059555053711
    8. '    ' → logprob: -11.52059555053711
    9. ' =' → logprob: -11.89559555053711
    10. '_de' → logprob: -12.02059555053711

Token 727: ' la' (ID: 557)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.03871593251824379
    2. ' matr' → logprob: -3.4137158393859863
    3. 'la' → logprob: -5.538715839385986
    4. ' la' → logprob: -7.288715839385986
    5. ' construire' → logprob: -8.538716316223145
    6. 'con' → logprob: -8.663716316223145
    7. '   ' → logprob: -10.163716316223145
    8. ' mat' → logprob: -11.163716316223145
    9. 'ma' → logprob: -12.163716316223145
    10. ' matric' → logprob: -12.663716316223145

Token 728: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.011056780815124512
    2. ' matr' → logprob: -4.511056900024414
    3. '   ' → logprob: -13.136056900024414
    4. ' mat' → logprob: -13.136056900024414
    5. 'mati' → logprob: -13.386056900024414
    6. 'matrix' → logprob: -13.886056900024414
    7. ' ' → logprob: -14.261056900024414
    8. '```' → logprob: -14.761056900024414
    9. 'ma' → logprob: -15.011056900024414
    10. 'M' → logprob: -15.386056900024414

Token 729: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -7.822646693966817e-06
    2. 'rice' → logprob: -11.875007629394531
    3. 'ix' → logprob: -15.375007629394531
    4. 'ixe' → logprob: -15.875007629394531
    5. 'ce' → logprob: -16.00000762939453
    6. 'ise' → logprob: -16.37500762939453
    7. 'Ice' → logprob: -16.37500762939453
    8. 'ICE' → logprob: -17.37500762939453
    9. 'ique' → logprob: -17.37500762939453
    10. 'atrice' → logprob: -17.37500762939453

Token 730: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03297913819551468
    2. 'mat' → logprob: -3.5329792499542236
    3. ' matr' → logprob: -5.7829790115356445
    4. '    
' → logprob: -9.157979011535645
    5. ' mat' → logprob: -11.032979011535645
    6. 'A' → logprob: -12.407979011535645
    7. ' A' → logprob: -12.657979011535645
    8. 'matrix' → logprob: -12.657979011535645
    9. 'mati' → logprob: -12.907979011535645
    10. '  ' → logprob: -13.157979011535645

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012221322394907475
    2. 'mat' → logprob: -6.876222133636475
    3. ' matr' → logprob: -8.626221656799316
    4. '   ' → logprob: -12.626221656799316
    5. 'A' → logprob: -13.126221656799316
    6. ' mat' → logprob: -13.376221656799316
    7. ' A' → logprob: -13.751221656799316
    8. '    
' → logprob: -14.251221656799316
    9. 'mati' → logprob: -14.751221656799316
    10. ' matriz' → logprob: -15.126221656799316

Token 732: ' matr' (ID: 25095)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.00047726318007335067
    2. 'A' → logprob: -8.000476837158203
    3. '   ' → logprob: -9.375476837158203
    4. ' matr' → logprob: -9.875476837158203
    5. 'matrix' → logprob: -13.000476837158203
    6. 'M' → logprob: -13.500476837158203
    7. ' A' → logprob: -13.875476837158203
    8. 'mati' → logprob: -14.375476837158203
    9. ' mat' → logprob: -15.875476837158203
    10. 'ma' → logprob: -16.250476837158203

Token 733: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -9.13388703338569e-06
    2. 'rice' → logprob: -11.750009536743164
    3. 'ixe' → logprob: -14.250009536743164
    4. 'ise' → logprob: -15.500009536743164
    5. 'iche' → logprob: -16.500009536743164
    6. 'ique' → logprob: -16.500009536743164
    7. '   ' → logprob: -17.625009536743164
    8. 'ix' → logprob: -18.250009536743164
    9. 'ICE' → logprob: -18.250009536743164
    10. '_' → logprob: -18.375009536743164

Token 734: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804149478673935
    2. '=' → logprob: -3.288041591644287
    3. '＝' → logprob: -18.663042068481445
    4. ')' → logprob: -19.163042068481445
    5. '	' → logprob: -19.288042068481445
    6. '_' → logprob: -19.663042068481445
    7. ' ' → logprob: -19.663042068481445
    8. ' =
' → logprob: -19.788042068481445
    9. ' ' → logprob: -20.413042068481445
    10. 'con' → logprob: -20.788042068481445

Token 735: ' construire' (ID: 92473)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.00071386230411008
    2. ' construire' → logprob: -7.25071382522583
    3. 'construct' → logprob: -13.250714302062988
    4. '   ' → logprob: -13.375714302062988
    5. 'conce' → logprob: -15.125714302062988
    6. '	con' → logprob: -16.500713348388672
    7. ' constru' → logprob: -16.750713348388672
    8. '(con' → logprob: -16.750713348388672
    9. ' construir' → logprob: -17.000713348388672
    10. '  ' → logprob: -17.375713348388672

Token 736: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.15441757265944e-05
    2. '_' → logprob: -10.375031471252441
    3. ' _' → logprob: -16.250032424926758
    4. '\' → logprob: -16.500032424926758
    5. '_n' → logprob: -17.125032424926758
    6. '```' → logprob: -19.125032424926758
    7. '_mat' → logprob: -19.125032424926758
    8. 'm' → logprob: -19.250032424926758
    9. '"_' → logprob: -19.375032424926758
    10. '_
' → logprob: -19.500032424926758

Token 737: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.002012860029935837
    2. 'mat' → logprob: -6.252012729644775
    3. '_' → logprob: -10.752013206481934
    4. '_m' → logprob: -10.877013206481934
    5. 'atrices' → logprob: -11.002013206481934
    6. 'atr' → logprob: -11.377013206481934
    7. ' matr' → logprob: -12.252013206481934
    8. 'atrix' → logprob: -12.752013206481934
    9. 'atric' → logprob: -13.502013206481934
    10. 'at' → logprob: -13.502013206481934

Token 738: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. ' (' → logprob: -18.25
    4. '(
' → logprob: -18.375
    5. 'm' → logprob: -18.625
    6. 'N' → logprob: -19.125
    7. '(M' → logprob: -19.75
    8. '```' → logprob: -20.5
    9. '(S' → logprob: -21.25
    10. '(n' → logprob: -21.875

Token 739: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043281487887725234
    2. ')
' → logprob: -7.750432968139648
    3. ')
' → logprob: -13.250432968139648
    4. '   ' → logprob: -15.500432968139648
    5. ' )' → logprob: -16.75043296813965
    6. ')

' → logprob: -18.12543296813965
    7. '),' → logprob: -19.00043296813965
    8. ')`
' → logprob: -19.12543296813965
    9. ')`' → logprob: -19.37543296813965
    10. ')\
' → logprob: -19.75043296813965

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.014684110297821e-06
    2. 'aff' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.625008583068848
    4. ' afficher' → logprob: -15.125008583068848
    5. '```' → logprob: -16.250009536743164
    6. 'Afficher' → logprob: -16.750009536743164
    7. '    
' → logprob: -17.000009536743164
    8. '#' → logprob: -18.375009536743164
    9. '       ' → logprob: -18.500009536743164
    10. '  ' → logprob: -18.750009536743164

Token 741: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0067345574498176575
    2. 'aff' → logprob: -5.006734371185303
    3. ' afficher' → logprob: -11.006734848022461
    4. 'Afficher' → logprob: -13.631734848022461
    5. '   ' → logprob: -14.131734848022461
    6. '  ' → logprob: -15.506734848022461
    7. '    
' → logprob: -15.631734848022461
    8. '```' → logprob: -16.38173484802246
    9. '
' → logprob: -17.25673484802246
    10. 'af' → logprob: -17.38173484802246

Token 742: ' Aff' (ID: 13741)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -4.320199877838604e-07
    2. '   ' → logprob: -15.875
    3. ' afficher' → logprob: -16.0
    4. 'Afficher' → logprob: -16.625
    5. 'af' → logprob: -18.5
    6. 'affer' → logprob: -19.0
    7. '_aff' → logprob: -19.375
    8. '  ' → logprob: -19.375
    9. ' ' → logprob: -20.875
    10. ' ' → logprob: -21.0

Token 743: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -7.226628895296017e-06
    2. 'cher' → logprob: -12.000007629394531
    3. 'iche' → logprob: -14.000007629394531
    4. 'ichier' → logprob: -15.875007629394531
    5. 'acher' → logprob: -17.12500762939453
    6. 'icer' → logprob: -17.25000762939453
    7. 'ich' → logprob: -17.37500762939453
    8. 'ichage' → logprob: -17.62500762939453
    9. '
' → logprob: -18.37500762939453
    10. '   ' → logprob: -18.87500762939453

Token 744: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47438186407089233
    2. 'aff' → logprob: -0.9743818640708923
    3. ' afficher' → logprob: -8.349381446838379
    4. 'Afficher' → logprob: -10.099381446838379
    5. '_aff' → logprob: -10.724381446838379
    6. '  ' → logprob: -12.849381446838379
    7. '.aff' → logprob: -13.474381446838379
    8. 'af' → logprob: -15.599381446838379
    9. ' aff' → logprob: -15.724381446838379
    10. '(' → logprob: -15.974381446838379

Token 745: ' résultat' (ID: 62556)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -4.36574100604048e-06
    2. ' afficher' → logprob: -12.500004768371582
    3. '_aff' → logprob: -15.500004768371582
    4. 'Afficher' → logprob: -15.875004768371582
    5. 'af' → logprob: -16.125003814697266
    6. 'mat' → logprob: -16.625003814697266
    7. '```' → logprob: -17.875003814697266
    8. '   ' → logprob: -17.875003814697266
    9. 'affer' → logprob: -18.125003814697266
    10. 'affa' → logprob: -18.750003814697266

Token 746: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015305745182558894
    2. 'aff' → logprob: -6.501530647277832
    3. ' afficher' → logprob: -10.501530647277832
    4. 'Afficher' → logprob: -14.876530647277832
    5. '   ' → logprob: -15.876530647277832
    6. '  ' → logprob: -16.501529693603516
    7. '_aff' → logprob: -17.251529693603516
    8. '    
' → logprob: -17.376529693603516
    9. ' aff' → logprob: -17.376529693603516
    10. '.aff' → logprob: -17.626529693603516

Token 747: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3132973313331604
    2. 'aff' → logprob: -1.3132972717285156
    3. ' afficher' → logprob: -10.438297271728516
    4. 'Afficher' → logprob: -12.563297271728516
    5. '   ' → logprob: -13.438297271728516
    6. '_aff' → logprob: -15.188297271728516
    7. '```' → logprob: -15.188297271728516
    8. '  ' → logprob: -15.313297271728516
    9. 'af' → logprob: -15.688297271728516
    10. '    
' → logprob: -16.188297271728516

Token 748: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -5.512236498361744e-07
    2. 'Afficher' → logprob: -15.500000953674316
    3. ' afficher' → logprob: -15.625000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '_aff' → logprob: -19.125
    6. 'af' → logprob: -19.125
    7. '  ' → logprob: -19.5
    8. 'affer' → logprob: -20.0
    9. '```' → logprob: -20.75
    10. '-aff' → logprob: -20.875

Token 749: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -12.500003814697266
    3. '\' → logprob: -18.125003814697266
    4. 'm' → logprob: -18.250003814697266
    5. ' _' → logprob: -19.250003814697266
    6. '(m' → logprob: -20.000003814697266
    7. '_
' → logprob: -21.375003814697266
    8. '_mat' → logprob: -21.750003814697266
    9. 's' → logprob: -22.375003814697266
    10. '_matrix' → logprob: -22.500003814697266

Token 750: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -0.008780848234891891
    2. 'mat' → logprob: -5.3837809562683105
    3. '_m' → logprob: -5.5087809562683105
    4. 'atrices' → logprob: -10.883780479431152
    5. '_mat' → logprob: -11.008780479431152
    6. 'atrix' → logprob: -11.008780479431152
    7. 'at' → logprob: -11.758780479431152
    8. '_' → logprob: -12.008780479431152
    9. ' matr' → logprob: -12.133780479431152
    10. 'atr' → logprob: -12.383780479431152

Token 751: '_super' (ID: 81649)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0033965865150094032
    2. '_super' → logprob: -5.753396511077881
    3. 'super' → logprob: -8.503396987915039
    4. '_' → logprob: -11.878396987915039
    5. '_sup' → logprob: -12.753396987915039
    6. '(m' → logprob: -12.878396987915039
    7. '(super' → logprob: -13.753396987915039
    8. 'm' → logprob: -13.878396987915039
    9. '\' → logprob: -14.878396987915039
    10. 'uper' → logprob: -14.878396987915039

Token 752: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -5.319370302458992e-06
    2. 'e' → logprob: -13.125005722045898
    3. 'ieur' → logprob: -13.500005722045898
    4. '_ie' → logprob: -14.375005722045898
    5. 'ieuse' → logprob: -15.000005722045898
    6. 'rie' → logprob: -15.250005722045898
    7. ' ie' → logprob: -15.750005722045898
    8. 'i' → logprob: -16.2500057220459
    9. '_' → logprob: -16.2500057220459
    10. 'ieu' → logprob: -16.6250057220459

Token 753: 'ure' (ID: 627)
  Prédit: 'ure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.0006375004886649549
    2. 'rie' → logprob: -7.375637531280518
    3. 'ur' → logprob: -12.25063705444336
    4. 're' → logprob: -13.87563705444336
    5. 'uree' → logprob: -14.00063705444336
    6. 'ie' → logprob: -14.37563705444336
    7. 'urie' → logprob: -14.50063705444336
    8. 'nte' → logprob: -14.62563705444336
    9. 'urre' → logprob: -14.75063705444336
    10. 'e' → logprob: -15.00063705444336

Token 754: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.292907877039397e-06
    2. '(' → logprob: -12.87500286102295
    3. ' (' → logprob: -14.50000286102295
    4. '```' → logprob: -17.500003814697266
    5. '(
' → logprob: -18.500003814697266
    6. '(ma' → logprob: -19.625003814697266
    7. '(n' → logprob: -19.750003814697266
    8. '(mat' → logprob: -20.625003814697266
    9. '_m' → logprob: -20.750003814697266
    10. 'm' → logprob: -21.000003814697266

Token 755: 'atrice' (ID: 48155)
  Prédit: 'atrice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrice' → logprob: -5.200166469876422e-06
    2. 'atr' → logprob: -12.375004768371582
    3. 'atrix' → logprob: -15.250004768371582
    4. 'atrices' → logprob: -15.500004768371582
    5. 'mat' → logprob: -15.875004768371582
    6. 'atri' → logprob: -16.2500057220459
    7. 'atriz' → logprob: -16.5000057220459
    8. 'at' → logprob: -17.3750057220459
    9. 'atric' → logprob: -17.3750057220459
    10. 'tr' → logprob: -18.0000057220459

Token 756: ')

' (ID: 1029)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0646270215511322
    2. ')' → logprob: -2.814626932144165
    3. '(' → logprob: -5.939627170562744
    4. ')m' → logprob: -10.939626693725586
    5. '(
' → logprob: -13.314626693725586
    6. ')(' → logprob: -13.939626693725586
    7. '()' → logprob: -14.314626693725586
    8. '(n' → logprob: -14.689626693725586
    9. '(mat' → logprob: -14.814626693725586
    10. '())' → logprob: -15.439626693725586

Token 757: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.676981345459353e-06
    2. '
' → logprob: -12.875005722045898
    3. '```' → logprob: -13.500005722045898
    4. ' if' → logprob: -13.625005722045898
    5. '\n' → logprob: -16.0000057220459
    6. 'main' → logprob: -16.1250057220459
    7. '#' → logprob: -16.1250057220459
    8. '\' → logprob: -17.6250057220459
    9. '    
' → logprob: -17.7500057220459
    10. '  
' → logprob: -18.5000057220459

Token 758: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11328011006116867
    2. '__' → logprob: -2.2382800579071045
    3. '_name' → logprob: -8.363280296325684
    4. '_' → logprob: -8.863280296325684
    5. 'name' → logprob: -10.113280296325684
    6. '___' → logprob: -10.613280296325684
    7. ' ' → logprob: -11.488280296325684
    8. ' "__' → logprob: -13.238280296325684
    9. ' ___' → logprob: -14.113280296325684
    10. '202' → logprob: -14.113280296325684

Token 759: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.016864344477653503
    2. ' ==' → logprob: -4.89186429977417
    3. '==' → logprob: -5.26686429977417
    4. 'name' → logprob: -5.89186429977417
    5. ' __' → logprob: -7.01686429977417
    6. '.__' → logprob: -8.891864776611328
    7. '__.__' → logprob: -9.266864776611328
    8. '=="' → logprob: -10.516864776611328
    9. '[' → logprob: -10.641864776611328
    10. '.name' → logprob: -10.766864776611328

Token 760: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001049838843755424
    2. '__.__' → logprob: -6.876049995422363
    3. '__.' → logprob: -11.626049995422363
    4. '__["' → logprob: -13.001049995422363
    5. '==' → logprob: -13.376049995422363
    6. '__('' → logprob: -13.376049995422363
    7. '____' → logprob: -14.251049995422363
    8. '__("' → logprob: -14.626049995422363
    9. '___' → logprob: -14.751049995422363
    10. '__
' → logprob: -15.126049995422363

Token 761: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.027872543781995773
    2. '==' → logprob: -3.6528725624084473
    3. '=="' → logprob: -7.277872562408447
    4. ' ==' → logprob: -7.777872562408447
    5. '__.__' → logprob: -7.777872562408447
    6. '__["' → logprob: -11.777872085571289
    7. '=='' → logprob: -11.902872085571289
    8. '===' → logprob: -12.152872085571289
    9. '___' → logprob: -12.277872085571289
    10. '__.' → logprob: -12.652872085571289

Token 762: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006745331920683384
    2. ''' → logprob: -5.006745338439941
    3. ' "__' → logprob: -10.631745338439941
    4. '__' → logprob: -12.131745338439941
    5. '"name' → logprob: -15.756745338439941
    6. ' '__' → logprob: -15.881745338439941
    7. '"user' → logprob: -16.631744384765625
    8. '("__' → logprob: -17.631744384765625
    9. '"class' → logprob: -18.381744384765625
    10. ''"' → logprob: -19.006744384765625

Token 763: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0042130243964493275
    2. '__' → logprob: -5.504212856292725
    3. 'name' → logprob: -9.129213333129883
    4. 'built' → logprob: -11.004213333129883
    5. '__":
' → logprob: -13.504213333129883
    6. '_main' → logprob: -13.629213333129883
    7. ' "__' → logprob: -13.629213333129883
    8. 'python' → logprob: -13.754213333129883
    9. 'py' → logprob: -14.129213333129883
    10. ' main' → logprob: -14.254213333129883

Token 764: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20152989029884338
    2. '__' → logprob: -1.701529860496521
    3. '__':
' → logprob: -9.201529502868652
    4. '__["' → logprob: -11.701529502868652
    5. '__.__' → logprob: -13.076529502868652
    6. '__.' → logprob: -13.326529502868652
    7. '__("' → logprob: -13.826529502868652
    8. '__",' → logprob: -13.826529502868652
    9. '__:' → logprob: -14.076529502868652
    10. '__
' → logprob: -15.326529502868652

Token 765: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.7432603272027336e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -16.000001907348633
    4. '__' → logprob: -16.125001907348633
    5. '_main' → logprob: -18.875001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '(main' → logprob: -21.750001907348633
    8. 'mainwindow' → logprob: -22.500001907348633
    9. 'ma' → logprob: -22.625001907348633
    10. '    
' → logprob: -22.750001907348633

Token 766: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -20.125
    4. '   ' → logprob: -23.125
    5. '_main' → logprob: -24.25
    6. '(main' → logprob: -25.5
    7. '.main' → logprob: -25.875
    8. 'Main' → logprob: -26.5
    9. '    
' → logprob: -27.5
    10. 'mainwindow' → logprob: -28.0

Token 767: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 765
Tokens correctement prédits (1ère position, stricte): 318
Tokens correctement prédits (1ère position, avec adaptation): 333
Tokens correctement prédits (top 10): 573
Précision stricte (1ère position): 41.57%
Précision adaptée (1ère position): 43.53%
Précision (top 10): 74.90%
================================================================================
