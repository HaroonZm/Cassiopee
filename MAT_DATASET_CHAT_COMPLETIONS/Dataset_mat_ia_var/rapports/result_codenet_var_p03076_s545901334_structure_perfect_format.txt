================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def ten_mod(x):
    ans = 10 if (x % 10) == 0 else x % 10
    return ans

x = int(input())
ans = x if (x % 10) == 0 else int(x / 10) * 10 + 10
last = x

for i in range(4):
    x = int(input())
    ans += x if (x % 10) == 0 else int(x / 10) * 10 + 10
    if ten_mod(last) > ten_mod(x):
        last = x

if (last % 10) != 0:
    ans = ans - 10 + (last % 10)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' ten' (ID: 4325)
  → Token d'amorce (pas de prédiction)

Token 2: '_mod' (ID: 15325)
  → Token d'amorce (pas de prédiction)

Token 3: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.034707531332969666
    2. 'ulus' → logprob: -4.409707546234131
    3. 'ule' → logprob: -4.534707546234131
    4. 'ulo' → logprob: -5.034707546234131
    5. '```' → logprob: -6.284707546234131
    6. 'ul' → logprob: -7.534707546234131
    7. '_(' → logprob: -7.659707546234131
    8. 'u' → logprob: -7.909707546234131
    9. '(_' → logprob: -8.534707069396973
    10. '(' → logprob: -8.534707069396973

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28266429901123047
    2. ')' → logprob: -1.4076642990112305
    3. ',' → logprob: -6.7826642990112305
    4. ':' → logprob: -8.78266429901123
    5. '*' → logprob: -9.78266429901123
    6. '=' → logprob: -10.65766429901123
    7. '):
' → logprob: -11.15766429901123
    8. ''):' → logprob: -11.15766429901123
    9. '```' → logprob: -11.28266429901123
    10. '[' → logprob: -11.53266429901123

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5851433277130127
    2. ':' → logprob: -0.8351433277130127
    3. '(' → logprob: -5.710143089294434
    4. '():' → logprob: -6.335143089294434
    5. ':return' → logprob: -6.710143089294434
    6. '```' → logprob: -6.960143089294434
    7. ' return' → logprob: -7.335143089294434
    8. ' ' → logprob: -7.960143089294434
    9. ':
' → logprob: -9.210143089294434
    10. '(:' → logprob: -9.335143089294434

Token 6: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2579494118690491
    2. ' return' → logprob: -1.7579493522644043
    3. ' ' → logprob: -3.7579493522644043
    4. '`' → logprob: -4.632949352264404
    5. '```' → logprob: -4.757949352264404
    6. 'return' → logprob: -5.132949352264404
    7. ''' → logprob: -5.507949352264404
    8. '    ' → logprob: -7.507949352264404
    9. '(' → logprob: -8.007949829101562
    10. ':' → logprob: -8.007949829101562

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5818083882331848
    2. '=' → logprob: -0.8318083882331848
    3. '[' → logprob: -5.706808567047119
    4. '_' → logprob: -6.831808567047119
    5. ' ' → logprob: -7.081808567047119
    6. ',' → logprob: -8.956808090209961
    7. '.' → logprob: -9.706808090209961
    8. '   ' → logprob: -10.081808090209961
    9. ')' → logprob: -10.206808090209961
    10. '```' → logprob: -10.331808090209961

Token 8: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.011619601398706436
    2. 'x' → logprob: -4.636619567871094
    3. ' ' → logprob: -6.511619567871094
    4. '0' → logprob: -8.386619567871094
    5. ' (' → logprob: -9.636619567871094
    6. '10' → logprob: -10.261619567871094
    7. '(x' → logprob: -11.886619567871094
    8. ' []' → logprob: -11.886619567871094
    9. '(' → logprob: -12.261619567871094
    10. '`' → logprob: -12.386619567871094

Token 9: '10' (ID: 702)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13933208584785461
    2. ' x' → logprob: -2.1393320560455322
    3. '0' → logprob: -4.764332294464111
    4. '10' → logprob: -5.764332294464111
    5. ' ' → logprob: -7.639332294464111
    6. '(x' → logprob: -9.264331817626953
    7. '   ' → logprob: -10.514331817626953
    8. ' (' → logprob: -10.889331817626953
    9. '1' → logprob: -11.264331817626953
    10. '(' → logprob: -12.514331817626953

Token 10: ' if' (ID: 538)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1427677571773529
    2. '%' → logprob: -2.0177676677703857
    3. ' ' → logprob: -10.267767906188965
    4. ')' → logprob: -10.392767906188965
    5. '-' → logprob: -11.642767906188965
    6. ' *' → logprob: -12.267767906188965
    7. '*' → logprob: -12.517767906188965
    8. '%x' → logprob: -13.267767906188965
    9. ' %
' → logprob: -13.892767906188965
    10. ' -' → logprob: -14.017767906188965

Token 11: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02912902645766735
    2. 'x' → logprob: -3.6541290283203125
    3. ' ' → logprob: -5.9041290283203125
    4. ' not' → logprob: -9.404129028320312
    5. ' (' → logprob: -12.404129028320312
    6. ' abs' → logprob: -12.779129028320312
    7. '(x' → logprob: -13.154129028320312
    8. '(' → logprob: -13.654129028320312
    9. '  ' → logprob: -13.904129028320312
    10. ' ' → logprob: -14.654129028320312

Token 12: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759851932525635
    2. ' x' → logprob: -0.8259851932525635
    3. '(x' → logprob: -11.200984954833984
    4. ' not' → logprob: -11.700984954833984
    5. ' (' → logprob: -11.950984954833984
    6. ')' → logprob: -12.200984954833984
    7. ')x' → logprob: -12.325984954833984
    8. ' ' → logprob: -12.825984954833984
    9. '10' → logprob: -13.075984954833984
    10. '   ' → logprob: -14.075984954833984

Token 13: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03028864599764347
    2. '%' → logprob: -3.5302886962890625
    3. ' ' → logprob: -7.6552886962890625
    4. ')' → logprob: -11.280288696289062
    5. ' >=' → logprob: -11.280288696289062
    6. ' ==' → logprob: -11.655288696289062
    7. '%x' → logprob: -12.280288696289062
    8. ' %)' → logprob: -12.280288696289062
    9. ' )' → logprob: -12.405288696289062
    10. ' <' → logprob: -12.405288696289062

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14269788563251495
    2. '10' → logprob: -2.017697811126709
    3. ')' → logprob: -11.142698287963867
    4. ' x' → logprob: -12.642698287963867
    5. '1' → logprob: -14.017698287963867
    6. '100' → logprob: -14.017698287963867
    7. ' )' → logprob: -14.392698287963867
    8. '<|end|>' → logprob: -14.517698287963867
    9. '```' → logprob: -14.892698287963867
    10. 'x' → logprob: -14.892698287963867

Token 15: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.007615848444402218
    2. ' ' → logprob: -4.88261604309082
    3. 'x' → logprob: -12.25761604309082
    4. ')' → logprob: -13.13261604309082
    5. ' x' → logprob: -13.75761604309082
    6. '1' → logprob: -14.63261604309082
    7. 'ten' → logprob: -15.00761604309082
    8. '  ' → logprob: -15.25761604309082
    9. '100' → logprob: -15.25761604309082
    10. '0' → logprob: -15.63261604309082

Token 16: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6077197790145874
    2. ' ==' → logprob: -1.2327197790145874
    3. ')' → logprob: -1.8577197790145874
    4. ' !=' → logprob: -5.732719898223877
    5. ')==' → logprob: -5.982719898223877
    6. '!=' → logprob: -6.232719898223877
    7. ' )' → logprob: -9.482719421386719
    8. '=' → logprob: -10.607719421386719
    9. ')!=' → logprob: -10.607719421386719
    10. ' ' → logprob: -11.357719421386719

Token 17: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22907856106758118
    2. ' ==' → logprob: -1.6040785312652588
    3. '!=' → logprob: -6.104078769683838
    4. ' !=' → logprob: -6.604078769683838
    5. ')' → logprob: -10.60407829284668
    6. '=' → logprob: -11.22907829284668
    7. '>' → logprob: -11.85407829284668
    8. 'else' → logprob: -11.85407829284668
    9. ' else' → logprob: -12.35407829284668
    10. ' ' → logprob: -12.35407829284668

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759442448616028
    2. ' ' → logprob: -0.8259442448616028
    3. '  ' → logprob: -13.825943946838379
    4. ')' → logprob: -13.825943946838379
    5. ' x' → logprob: -14.200943946838379
    6. 'x' → logprob: -14.325943946838379
    7. '=' → logprob: -14.575943946838379
    8. '<|end|>' → logprob: -15.200943946838379
    9. '1' → logprob: -15.325943946838379
    10. '10' → logprob: -15.950943946838379

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076065086759626865
    2. ' ' → logprob: -4.882606506347656
    3. 'x' → logprob: -15.132606506347656
    4. '10' → logprob: -16.382606506347656
    5. '  ' → logprob: -17.507606506347656
    6. '=' → logprob: -17.882606506347656
    7. ' x' → logprob: -18.007606506347656
    8. '1' → logprob: -18.632606506347656
    9. ')' → logprob: -18.632606506347656
    10. '   ' → logprob: -18.882606506347656

Token 20: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.029252218082547188
    2. 'else' → logprob: -3.654252290725708
    3. ':' → logprob: -6.029252052307129
    4. '   ' → logprob: -8.279252052307129
    5. '	else' → logprob: -9.529252052307129
    6. ':return' → logprob: -9.654252052307129
    7. ' :' → logprob: -10.154252052307129
    8. '<|end|>' → logprob: -10.654252052307129
    9. ':
' → logprob: -11.029252052307129
    10. '    ' → logprob: -11.154252052307129

Token 21: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.28855952620506287
    2. 'x' → logprob: -2.1635594367980957
    3. ' ' → logprob: -2.5385594367980957
    4. '0' → logprob: -2.9135594367980957
    5. '1' → logprob: -7.163559436798096
    6. '10' → logprob: -7.413559436798096
    7. '(x' → logprob: -7.663559436798096
    8. ' (' → logprob: -8.413559913635254
    9. ' None' → logprob: -8.913559913635254
    10. '(' → logprob: -9.913559913635254

Token 22: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09099229425191879
    2. '
' → logprob: -3.2159922122955322
    3. '<|end|>' → logprob: -4.340992450714111
    4. '   ' → logprob: -4.465992450714111
    5. ' %' → logprob: -5.090992450714111
    6. '```' → logprob: -5.840992450714111
    7. ')' → logprob: -6.090992450714111
    8. '\n' → logprob: -6.465992450714111
    9. ':return' → logprob: -6.590992450714111
    10. '%
' → logprob: -6.590992450714111

Token 23: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0485910028219223
    2. ' ' → logprob: -3.048590898513794
    3. '100' → logprob: -14.048590660095215
    4. '1' → logprob: -14.798590660095215
    5. '```' → logprob: -14.798590660095215
    6. '  ' → logprob: -15.048590660095215
    7. '20' → logprob: -15.048590660095215
    8. ' ' → logprob: -15.298590660095215
    9. '`' → logprob: -15.298590660095215
    10. 'x' → logprob: -15.798590660095215

Token 24: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '100' → logprob: -14.75000286102295
    4. '```' → logprob: -16.125003814697266
    5. 'x' → logprob: -17.125003814697266
    6. '1' → logprob: -17.875003814697266
    7. '`' → logprob: -18.250003814697266
    8. '0' → logprob: -19.125003814697266
    9. '101' → logprob: -19.125003814697266
    10. '20' → logprob: -19.375003814697266

Token 25: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7268670201301575
    2. '   ' → logprob: -1.4768669605255127
    3. '
' → logprob: -1.6018669605255127
    4. ' return' → logprob: -3.4768669605255127
    5. 'return' → logprob: -3.4768669605255127
    6. '\' → logprob: -5.101867198944092
    7. '    
' → logprob: -5.226867198944092
    8. '  
' → logprob: -6.226867198944092
    9. ':return' → logprob: -6.226867198944092
    10. '<|end|>' → logprob: -6.226867198944092

Token 26: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4599493443965912
    2. '   ' → logprob: -1.4599493741989136
    3. '
' → logprob: -2.459949254989624
    4. '\' → logprob: -3.959949254989624
    5. '```' → logprob: -4.834949493408203
    6. ' return' → logprob: -4.959949493408203
    7. '    
' → logprob: -5.334949493408203
    8. 'return' → logprob: -5.584949493408203
    9. '<|end|>' → logprob: -6.334949493408203
    10. '\r' → logprob: -6.959949493408203

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39872777462005615
    2. '\n' → logprob: -2.1487278938293457
    3. 'return' (adapté à ' return') → logprob: -2.5237278938293457
    4. ' return' → logprob: -2.7737278938293457
    5. '
' → logprob: -3.5237278938293457
    6. ':return' → logprob: -4.523727893829346
    7. '<|end|>' → logprob: -4.523727893829346
    8. '```' → logprob: -4.898727893829346
    9. '\' → logprob: -5.773727893829346
    10. ' ' → logprob: -6.273727893829346

Token 28: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0026395104359835386
    2. 'ans' → logprob: -6.002639293670654
    3. '(ans' → logprob: -8.752639770507812
    4. ' ' → logprob: -12.627639770507812
    5. '	ans' → logprob: -13.127639770507812
    6. '_ans' → logprob: -15.002639770507812
    7. ' ' → logprob: -17.502639770507812
    8. 'x' → logprob: -17.627639770507812
    9. 'space' → logprob: -18.252639770507812
    10. 'Ans' → logprob: -18.627639770507812

Token 29: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: 'x' (ID: 87)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5808748006820679
    2. ')' → logprob: -1.8308748006820679
    3. ' %' → logprob: -2.3308749198913574
    4. '%' → logprob: -2.4558749198913574
    5. '<|end|>' → logprob: -3.0808749198913574
    6. '(' → logprob: -3.5808749198913574
    7. ' **' → logprob: -5.455874919891357
    8. ' )' → logprob: -6.080874919891357
    9. '=' → logprob: -6.080874919891357
    10. ' =' → logprob: -6.080874919891357

Token 32: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42769089341163635
    2. ' int' → logprob: -1.927690863609314
    3. 'int' → logprob: -2.1776909828186035
    4. '20' → logprob: -2.8026909828186035
    5. '10' → logprob: -4.5526909828186035
    6. '25' → logprob: -5.1776909828186035
    7. '5' → logprob: -6.1776909828186035
    8. '15' → logprob: -6.4276909828186035
    9. '42' → logprob: -6.5526909828186035
    10. '23' → logprob: -6.6776909828186035

Token 33: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18019817769527435
    2. '(input' → logprob: -1.8051981925964355
    3. 'input' → logprob: -8.055197715759277
    4. ' (' → logprob: -10.305197715759277
    5. '(x' → logprob: -10.430197715759277
    6. '()' → logprob: -10.430197715759277
    7. '('' → logprob: -11.180197715759277
    8. '(
' → logprob: -11.680197715759277
    9. '(open' → logprob: -13.055197715759277
    10. '<|end|>' → logprob: -13.055197715759277

Token 34: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9453749060630798
    2. '())' → logprob: -0.9453749060630798
    3. '(' → logprob: -1.5703749656677246
    4. ')' → logprob: -4.695374965667725
    5. '('' → logprob: -5.695374965667725
    6. '(""))' → logprob: -7.195374965667725
    7. '(()' → logprob: -7.695374965667725
    8. '("("' → logprob: -8.195374488830566
    9. '("' → logprob: -8.445374488830566
    10. '("")' → logprob: -8.695374488830566

Token 35: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018029935017693788
    2. 'ten' → logprob: -9.2501802444458
    3. '```' → logprob: -11.0001802444458
    4. ' print' → logprob: -11.2501802444458
    5. ')' → logprob: -11.3751802444458
    6. '
' → logprob: -11.5001802444458
    7. 'if' → logprob: -12.3751802444458
    8. '  
' → logprob: -12.5001802444458
    9. 'pr' → logprob: -12.6251802444458
    10. '\n' → logprob: -12.7501802444458

Token 36: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5229528546333313
    2. ' =' → logprob: -1.5229527950286865
    3. '=' → logprob: -2.2729527950286865
    4. '<|end|>' → logprob: -3.1479527950286865
    5. '(' → logprob: -3.2729527950286865
    6. '()' → logprob: -6.147953033447266
    7. '<|end|>' → logprob: -7.772953033447266
    8. ' ' → logprob: -8.022953033447266
    9. '[' → logprob: -8.022953033447266
    10. '.' → logprob: -8.022953033447266

Token 37: ' x' (ID: 1215)
  Prédit: ' ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.42876777052879333
    2. 'ten' → logprob: -1.0537678003311157
    3. ' ' → logprob: -10.303768157958984
    4. '10' → logprob: -11.053768157958984
    5. ' ' → logprob: -11.928768157958984
    6. ' te' → logprob: -13.303768157958984
    7. ' tens' → logprob: -13.428768157958984
    8. 'te' → logprob: -14.053768157958984
    9. '   ' → logprob: -14.178768157958984
    10. 'x' → logprob: -14.178768157958984

Token 38: ' if' (ID: 538)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08411499857902527
    2. '%' → logprob: -2.5841150283813477
    3. ' *' → logprob: -6.209115028381348
    4. ' +' → logprob: -6.584115028381348
    5. '+' → logprob: -7.084115028381348
    6. ' ' → logprob: -7.709115028381348
    7. '*' → logprob: -7.959115028381348
    8. '%x' → logprob: -10.459115028381348
    9. '10' → logprob: -10.584115028381348
    10. '```' → logprob: -10.834115028381348

Token 39: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6504713296890259
    2. ' (' → logprob: -0.7754713296890259
    3. 'x' → logprob: -4.400471210479736
    4. ' ' → logprob: -6.275471210479736
    5. '(x' → logprob: -6.275471210479736
    6. ' ten' → logprob: -7.025471210479736
    7. '(' → logprob: -7.400471210479736
    8. ' ' → logprob: -10.025471687316895
    9. 'ten' → logprob: -10.025471687316895
    10. '10' → logprob: -11.150471687316895

Token 40: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07973738759756088
    2. ' x' → logprob: -2.579737424850464
    3. '(x' → logprob: -7.329737186431885
    4. ' (' → logprob: -8.704737663269043
    5. '(' → logprob: -11.079737663269043
    6. ' ' → logprob: -12.204737663269043
    7. '10' → logprob: -13.579737663269043
    8. '   ' → logprob: -13.829737663269043
    9. ')x' → logprob: -14.079737663269043
    10. ')' → logprob: -14.454737663269043

Token 41: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1273462325334549
    2. '%' → logprob: -2.1273462772369385
    3. ' ' → logprob: -8.12734603881836
    4. ')' → logprob: -10.00234603881836
    5. ' %)' → logprob: -11.00234603881836
    6. ' ==' → logprob: -11.25234603881836
    7. ' )' → logprob: -11.50234603881836
    8. '==' → logprob: -12.00234603881836
    9. ' %
' → logprob: -12.00234603881836
    10. '%)' → logprob: -12.25234603881836

Token 42: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004622372332960367
    2. ' ' → logprob: -5.379622459411621
    3. '100' → logprob: -14.379622459411621
    4. '  ' → logprob: -15.254622459411621
    5. ')' → logprob: -15.629622459411621
    6. '20' → logprob: -15.629622459411621
    7. '1' → logprob: -15.629622459411621
    8. '```' → logprob: -15.629622459411621
    9. '   ' → logprob: -15.879622459411621
    10. 'ten' → logprob: -16.254621505737305

Token 43: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.110668618930504e-05
    2. ' ' → logprob: -9.75006103515625
    3. '100' → logprob: -13.00006103515625
    4. '1' → logprob: -15.62506103515625
    5. '  ' → logprob: -16.25006103515625
    6. 'ten' → logprob: -16.87506103515625
    7. '   ' → logprob: -16.87506103515625
    8. ')' → logprob: -17.12506103515625
    9. '```' → logprob: -17.25006103515625
    10. '20' → logprob: -17.31256103515625

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06453929841518402
    2. ')==' → logprob: -2.8145391941070557
    3. '==' → logprob: -6.064539432525635
    4. ' ==' → logprob: -9.064538955688477
    5. ')!=' → logprob: -9.314538955688477
    6. ' )' → logprob: -10.439538955688477
    7. ')=' → logprob: -13.064538955688477
    8. ')>' → logprob: -13.189538955688477
    9. '!=' → logprob: -13.689538955688477
    10. ')>>' → logprob: -14.564538955688477

Token 45: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05537336692214012
    2. ' ==' → logprob: -2.930373430252075
    3. ')' → logprob: -8.430373191833496
    4. '!=' → logprob: -9.180373191833496
    5. '=' → logprob: -9.805373191833496
    6. ')==' → logprob: -10.055373191833496
    7. ' !=' → logprob: -10.555373191833496
    8. '[' → logprob: -11.305373191833496
    9. ' ' → logprob: -11.430373191833496
    10. '==
' → logprob: -12.180373191833496

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024792237672954798
    2. ' ' → logprob: -6.002479076385498
    3. '10' → logprob: -13.252479553222656
    4. '<|end|>' → logprob: -14.627479553222656
    5. '   ' → logprob: -15.002479553222656
    6. '  ' → logprob: -15.377479553222656
    7. '```' → logprob: -15.627479553222656
    8. 'x' → logprob: -16.064979553222656
    9. '1' → logprob: -16.314979553222656
    10. '=' → logprob: -17.064979553222656

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000182921823579818
    2. ' ' → logprob: -8.62518310546875
    3. '10' → logprob: -13.25018310546875
    4. 'x' → logprob: -15.00018310546875
    5. '   ' → logprob: -15.18768310546875
    6. '  ' → logprob: -15.87518310546875
    7. '```' → logprob: -16.18768310546875
    8. '1' → logprob: -16.25018310546875
    9. '<|end|>' → logprob: -17.31268310546875
    10. 'zero' → logprob: -17.43768310546875

Token 48: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.023325489833950996
    2. 'else' → logprob: -3.7733254432678223
    3. '<|end|>' → logprob: -9.89832592010498
    4. ' ' → logprob: -11.52332592010498
    5. ' 
' → logprob: -12.27332592010498
    6. '	else' → logprob: -12.27332592010498
    7. '_else' → logprob: -13.14832592010498
    8. ' ' → logprob: -13.52332592010498
    9. '<|end|>' → logprob: -13.64832592010498
    10. '```' → logprob: -14.39832592010498

Token 49: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11207316815853119
    2. 'x' → logprob: -2.7370731830596924
    3. ' ' → logprob: -3.6120731830596924
    4. '10' → logprob: -4.612072944641113
    5. ' (' → logprob: -5.737072944641113
    6. '(x' → logprob: -7.112072944641113
    7. '(' → logprob: -8.737072944641113
    8. ''' → logprob: -10.237072944641113
    9. ')' → logprob: -11.237072944641113
    10. '"' → logprob: -11.362072944641113

Token 50: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2648055851459503
    2. '(x' → logprob: -1.514805555343628
    3. '(input' → logprob: -4.389805793762207
    4. '((' → logprob: -8.639805793762207
    5. '('' → logprob: -9.264805793762207
    6. '(
' → logprob: -10.264805793762207
    7. ' (' → logprob: -10.764805793762207
    8. '()' → logprob: -10.889805793762207
    9. 'input' → logprob: -11.514805793762207
    10. '(round' → logprob: -12.264805793762207

Token 51: ' /' (ID: 820)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.045569464564323425
    2. '%' → logprob: -3.17056941986084
    3. ')' → logprob: -6.29556941986084
    4. ' ' → logprob: -8.29556941986084
    5. '(x' → logprob: -9.04556941986084
    6. '(' → logprob: -9.54556941986084
    7. ' /' → logprob: -9.92056941986084
    8. ' %)' → logprob: -9.92056941986084
    9. ' )' → logprob: -10.04556941986084
    10. '10' → logprob: -10.17056941986084

Token 52: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -11.375021934509277
    3. '1' → logprob: -11.625021934509277
    4. ')' → logprob: -14.000021934509277
    5. '۱۰' → logprob: -16.50002098083496
    6. '１０' → logprob: -17.50002098083496
    7. '```' → logprob: -17.75002098083496
    8. 'x' → logprob: -18.00002098083496
    9. '१०' → logprob: -18.12502098083496
    10. '  ' → logprob: -18.12502098083496

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.8550976164988242e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -13.625018119812012
    4. '۱۰' → logprob: -15.875018119812012
    5. '  ' → logprob: -16.500019073486328
    6. '１０' → logprob: -16.500019073486328
    7. ')' → logprob: -16.687519073486328
    8. 'x' → logprob: -17.437519073486328
    9. '100' → logprob: -17.500019073486328
    10. '१०' → logprob: -17.562519073486328

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002441741817165166
    2. ' )' → logprob: -9.000244140625
    3. '))' → logprob: -9.875244140625
    4. '+' → logprob: -11.125244140625
    5. ')+' → logprob: -11.375244140625
    6. ')))' → logprob: -12.250244140625
    7. '0' → logprob: -12.375244140625
    8. '*' → logprob: -12.500244140625
    9. '())' → logprob: -12.625244140625
    10. '1' → logprob: -12.750244140625

Token 55: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2534055709838867
    2. '*' → logprob: -1.6284055709838867
    3. '0' → logprob: -4.378405570983887
    4. '10' → logprob: -5.128405570983887
    5. '<|end|>' → logprob: -5.253405570983887
    6. ')' → logprob: -6.628405570983887
    7. ' ' → logprob: -7.003405570983887
    8. '%' → logprob: -7.628405570983887
    9. '```' → logprob: -8.503405570983887
    10. ' %' → logprob: -8.628405570983887

Token 56: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000206401280593127
    2. ' ' → logprob: -8.500205993652344
    3. '1' → logprob: -13.125205993652344
    4. '0' → logprob: -14.375205993652344
    5. '100' → logprob: -16.500205993652344
    6. '  ' → logprob: -16.625205993652344
    7. 'x' → logprob: -16.750205993652344
    8. '   ' → logprob: -17.125205993652344
    9. '```' → logprob: -17.562705993652344
    10. '１０' → logprob: -17.687705993652344

Token 57: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.5094070477061905e-05
    2. '1' → logprob: -11.125015258789062
    3. ' ' → logprob: -15.250015258789062
    4. '0' → logprob: -17.000015258789062
    5. '100' → logprob: -17.750015258789062
    6. '۱۰' → logprob: -18.000015258789062
    7. '１０' → logprob: -18.125015258789062
    8. 'x' → logprob: -19.125015258789062
    9. '१०' → logprob: -19.250015258789062
    10. '```' → logprob: -19.250015258789062

Token 58: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20435066521167755
    2. '
' → logprob: -2.454350709915161
    3. '<|end|>' → logprob: -2.704350709915161
    4. 'print' → logprob: -4.579350471496582
    5. '+
' → logprob: -4.704350471496582
    6. ')' → logprob: -5.079350471496582
    7. '#' → logprob: -6.454350471496582
    8. '\n' → logprob: -6.579350471496582
    9. '%' → logprob: -7.204350471496582
    10. '*' → logprob: -7.829350471496582

Token 59: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.028699491173028946
    2. 'ans' → logprob: -3.7786993980407715
    3. ' ' → logprob: -6.1536993980407715
    4. '1' → logprob: -6.4036993980407715
    5. 'ten' → logprob: -7.1536993980407715
    6. '0' → logprob: -8.40369987487793
    7. ' ans' → logprob: -8.40369987487793
    8. 'x' → logprob: -9.02869987487793
    9. '(ans' → logprob: -9.15369987487793
    10. '5' → logprob: -9.65369987487793

Token 60: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09303423762321472
    2. '0' → logprob: -2.968034267425537
    3. 'ans' → logprob: -3.843034267425537
    4. '1' → logprob: -4.468034267425537
    5. 'ten' → logprob: -6.218034267425537
    6. ' ' → logprob: -7.093034267425537
    7. 'x' → logprob: -7.968034267425537
    8. '(' → logprob: -8.093033790588379
    9. '(ans' → logprob: -8.093033790588379
    10. '(x' → logprob: -8.843033790588379

Token 61: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'last' (ID: 6684)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018141677137464285
    2. '
' → logprob: -7.001814365386963
    3. '<|end|>' → logprob: -8.001813888549805
    4. 'p' → logprob: -8.126813888549805
    5. 'pr' → logprob: -9.626813888549805
    6. '#' → logprob: -9.876813888549805
    7. 'prin' → logprob: -10.626813888549805
    8. '#print' → logprob: -10.626813888549805
    9. '```' → logprob: -10.751813888549805
    10. '\n' → logprob: -10.876813888549805

Token 63: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00012582694762386382
    2. '(' → logprob: -10.375125885009766
    3. ')' → logprob: -10.375125885009766
    4. '_)' → logprob: -11.500125885009766
    5. '_digit' → logprob: -11.500125885009766
    6. 's' → logprob: -12.375125885009766
    7. ')_' → logprob: -12.500125885009766
    8. ' _' → logprob: -12.750125885009766
    9. '5' → logprob: -13.000125885009766
    10. '_
' → logprob: -13.125125885009766

Token 64: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11554986238479614
    2. ' x' → logprob: -2.9905498027801514
    3. 'ans' → logprob: -3.1155498027801514
    4. ' ans' → logprob: -4.3655500411987305
    5. '10' → logprob: -6.9905500411987305
    6. 'int' → logprob: -7.4905500411987305
    7. '(ans' → logprob: -9.11555004119873
    8. ' ' → logprob: -9.49055004119873
    9. ' int' → logprob: -10.36555004119873
    10. '0' → logprob: -10.49055004119873

Token 65: '

' (ID: 279)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6425355076789856
    2. '%' → logprob: -0.7675355076789856
    3. '[' → logprob: -4.89253568649292
    4. '<|end|>' → logprob: -7.39253568649292
    5. ' ' → logprob: -8.017535209655762
    6. ' %
' → logprob: -8.392535209655762
    7. '%
' → logprob: -8.392535209655762
    8. '```' → logprob: -8.767535209655762
    9. '%x' → logprob: -9.142535209655762
    10. '[-' → logprob: -9.142535209655762

Token 66: 'for' (ID: 1938)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09004538506269455
    2. ' %' → logprob: -2.46504545211792
    3. '<|end|>' → logprob: -8.215044975280762
    4. '%
' → logprob: -8.840044975280762
    5. '%x' → logprob: -9.215044975280762
    6. ')' → logprob: -9.215044975280762
    7. '-' → logprob: -9.340044975280762
    8. '+' → logprob: -9.715044975280762
    9. ' ' → logprob: -9.965044975280762
    10. '```' → logprob: -10.215044975280762

Token 67: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3659396171569824
    2. ' i' → logprob: -1.4909396171569824
    3. ' _' → logprob: -2.7409396171569824
    4. '_' → logprob: -4.115939617156982
    5. 'i' → logprob: -8.24094009399414
    6. '  ' → logprob: -9.61594009399414
    7. ' x' → logprob: -9.61594009399414
    8. ' ▁' → logprob: -11.11594009399414
    9. ' ‌' → logprob: -11.49094009399414
    10. ' space' → logprob: -11.49094009399414

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.052176687866449356
    2. 'in' → logprob: -3.0521767139434814
    3. ' ' → logprob: -5.677176475524902
    4. '	in' → logprob: -9.552176475524902
    5. '<|end|>' → logprob: -10.427176475524902
    6. 'n' → logprob: -11.177176475524902
    7. '  ' → logprob: -11.427176475524902
    8. '_' → logprob: -11.927176475524902
    9. ' i' → logprob: -12.552176475524902
    10. '+' → logprob: -12.927176475524902

Token 69: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008258054032921791
    2. 'range' → logprob: -4.883257865905762
    3. ' ' → logprob: -7.633257865905762
    4. ' ran' → logprob: -10.133257865905762
    5. ' xrange' → logprob: -10.133257865905762
    6. '	range' → logprob: -10.508257865905762
    7. '  ' → logprob: -11.258257865905762
    8. ' ' → logprob: -11.883257865905762
    9. '[' → logprob: -12.008257865905762
    10. ' [' → logprob: -12.008257865905762

Token 70: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014916500076651573
    2. ' (' → logprob: -6.751491546630859
    3. '(x' → logprob: -8.62649154663086
    4. '(len' → logprob: -9.25149154663086
    5. '(last' → logprob: -10.50149154663086
    6. '(n' → logprob: -12.37649154663086
    7. '((' → logprob: -12.50149154663086
    8. '(
' → logprob: -12.87649154663086
    9. '(length' → logprob: -13.12649154663086
    10. ' ' → logprob: -13.25149154663086

Token 71: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.768968403339386
    2. '1' → logprob: -0.893968403339386
    3. '5' → logprob: -2.768968343734741
    4. 'ans' → logprob: -3.518968343734741
    5. 'last' → logprob: -4.64396858215332
    6. '100' → logprob: -4.76896858215332
    7. '0' → logprob: -5.76896858215332
    8. '11' → logprob: -6.14396858215332
    9. '3' → logprob: -6.26896858215332
    10. '20' → logprob: -6.51896858215332

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005783142987638712
    2. ' ):' → logprob: -5.6307830810546875
    3. '):
' → logprob: -6.8807830810546875
    4. '+' → logprob: -7.5057830810546875
    5. ':' → logprob: -7.7557830810546875
    6. ',' → logprob: -9.005783081054688
    7. ')' → logprob: -10.130783081054688
    8. ' ):
' → logprob: -13.505783081054688
    9. '-' → logprob: -13.630783081054688
    10. '4' → logprob: -13.755783081054688

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9156801104545593
    2. ':' → logprob: -1.415680170059204
    3. ' ' → logprob: -1.915680170059204
    4. ' last' → logprob: -2.790680170059204
    5. '+' → logprob: -3.040680170059204
    6. ' :
' → logprob: -3.540680170059204
    7. ' :' → logprob: -3.790680170059204
    8. ' +' → logprob: -4.165679931640625
    9. ':
' → logprob: -4.415679931640625
    10. '    ' → logprob: -5.915679931640625

Token 74: ' x' (ID: 1215)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.2964681386947632
    2. '   ' → logprob: -1.7964681386947632
    3. 'last' → logprob: -2.7964682579040527
    4. ' x' → logprob: -3.7964682579040527
    5. 'x' (adapté à ' x') → logprob: -5.421468257904053
    6. ' ans' → logprob: -6.421468257904053
    7. '	last' → logprob: -8.546467781066895
    8. '```' → logprob: -8.921467781066895
    9. ' ' → logprob: -9.046467781066895
    10. ' i' → logprob: -9.296467781066895

Token 75: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5992258787155151
    2. ' =' → logprob: -0.8492258787155151
    3. '=' → logprob: -4.474225997924805
    4. '+=' → logprob: -4.849225997924805
    5. ' *=' → logprob: -6.099225997924805
    6. ' -=' → logprob: -6.599225997924805
    7. ' %=' → logprob: -10.224225997924805
    8. '*=' → logprob: -10.349225997924805
    9. '+' → logprob: -10.599225997924805
    10. ' ' → logprob: -10.724225997924805

Token 76: ' int' (ID: 677)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0019647935405373573
    2. 'ans' → logprob: -6.626964569091797
    3. '(ans' → logprob: -8.001964569091797
    4. ' x' → logprob: -8.876964569091797
    5. ' int' → logprob: -9.876964569091797
    6. ' (' → logprob: -10.251964569091797
    7. '	ans' → logprob: -10.751964569091797
    8. ' ' → logprob: -11.126964569091797
    9. 'x' → logprob: -11.251964569091797
    10. ' ten' → logprob: -11.501964569091797

Token 77: '(input' (ID: 10054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1038675308227539
    2. '(' → logprob: -2.728867530822754
    3. '((' → logprob: -4.103867530822754
    4. '(input' → logprob: -4.603867530822754
    5. '(ans' → logprob: -5.103867530822754
    6. '(last' → logprob: -7.353867530822754
    7. ' (' → logprob: -10.603867530822754
    8. '(i' → logprob: -10.853867530822754
    9. '(int' → logprob: -11.603867530822754
    10. 'x' → logprob: -11.603867530822754

Token 78: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011139428243041039
    2. '()' → logprob: -4.761139392852783
    3. '())
' → logprob: -6.136139392852783
    4. ')' → logprob: -8.011139869689941
    5. '()
' → logprob: -11.511139869689941
    6. '())
' → logprob: -12.011139869689941
    7. ' ())' → logprob: -12.261139869689941
    8. '())

' → logprob: -13.011139869689941
    9. '(' → logprob: -13.386139869689941
    10. '();)' → logprob: -14.386139869689941

Token 79: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28544631600379944
    2. '   ' → logprob: -2.1604464054107666
    3. 'if' → logprob: -2.6604464054107666
    4. '
' → logprob: -3.2854464054107666
    5. ' last' → logprob: -4.9104461669921875
    6. '<|end|>' → logprob: -5.0354461669921875
    7. ' 
' → logprob: -6.0354461669921875
    8. '    
' → logprob: -6.1604461669921875
    9. ')' → logprob: -6.5354461669921875
    10. ' ' → logprob: -6.6604461669921875

Token 80: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.450760155916214
    2. 'if' → logprob: -1.4507601261138916
    3. ' ans' → logprob: -2.8257601261138916
    4. ' if' → logprob: -3.2007601261138916
    5. 'last' → logprob: -3.8257601261138916
    6. ' last' → logprob: -5.950760364532471
    7. 'x' → logprob: -6.450760364532471
    8. '   ' → logprob: -6.825760364532471
    9. '    
' → logprob: -8.450759887695312
    10. ' x' → logprob: -8.450759887695312

Token 81: ' +=' (ID: 2757)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030960271134972572
    2. '=' → logprob: -3.9059603214263916
    3. ' +=' → logprob: -4.6559600830078125
    4. '+=' → logprob: -7.2809600830078125
    5. ' *=' → logprob: -9.530960083007812
    6. ' -=' → logprob: -10.405960083007812
    7. ' ' → logprob: -10.655960083007812
    8. ' |=' → logprob: -12.155960083007812
    9. ' ^=' → logprob: -12.280960083007812
    10. '=max' → logprob: -12.280960083007812

Token 82: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.462539941072464
    2. ' (' → logprob: -1.9625399112701416
    3. ' ' → logprob: -2.9625399112701416
    4. ' last' → logprob: -3.0875399112701416
    5. ' max' → logprob: -3.2125399112701416
    6. ' ten' → logprob: -3.5875399112701416
    7. 'x' → logprob: -4.212540149688721
    8. '10' → logprob: -4.712540149688721
    9. ' abs' → logprob: -4.837540149688721
    10. ' '' → logprob: -4.962540149688721

Token 83: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8306379914283752
    2. '<|end|>' → logprob: -1.0806379318237305
    3. ' if' → logprob: -1.8306379318237305
    4. '%' → logprob: -3.4556379318237305
    5. ' 
' → logprob: -4.4556379318237305
    6. ' ' → logprob: -4.8306379318237305
    7. '<|end|>' → logprob: -5.3306379318237305
    8. 'if' → logprob: -6.3306379318237305
    9. ' %' → logprob: -6.4556379318237305
    10. '
' → logprob: -6.5806379318237305

Token 84: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10420431941747665
    2. '(x' → logprob: -2.3542044162750244
    3. '(' → logprob: -5.604204177856445
    4. ' x' → logprob: -8.854204177856445
    5. 'x' → logprob: -8.854204177856445
    6. ' ' → logprob: -11.104204177856445
    7. '((' → logprob: -13.979204177856445
    8. ' ' → logprob: -14.416704177856445
    9. '   ' → logprob: -14.666704177856445
    10. '(last' → logprob: -14.729204177856445

Token 85: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43652716279029846
    2. ' x' → logprob: -1.061527132987976
    3. '(x' → logprob: -5.436527252197266
    4. ' (' → logprob: -5.686527252197266
    5. '(' → logprob: -10.311527252197266
    6. ' ' → logprob: -11.811527252197266
    7. ')' → logprob: -13.311527252197266
    8. ')x' → logprob: -13.311527252197266
    9. '	x' → logprob: -13.561527252197266
    10. '   ' → logprob: -13.811527252197266

Token 86: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018592584878206253
    2. '%' → logprob: -4.018592357635498
    3. ' ' → logprob: -7.768592357635498
    4. ')' → logprob: -11.393592834472656
    5. ' %)' → logprob: -13.143592834472656
    6. ' )' → logprob: -13.706092834472656
    7. ' ' → logprob: -14.081092834472656
    8. '<|end|>' → logprob: -14.206092834472656
    9. '   ' → logprob: -14.331092834472656
    10. '  ' → logprob: -14.581092834472656

Token 87: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.28120705485343933
    2. ' ' → logprob: -1.4062070846557617
    3. ')' → logprob: -11.156207084655762
    4. '<|end|>' → logprob: -11.468707084655762
    5. '```' → logprob: -12.031207084655762
    6. '   ' → logprob: -12.031207084655762
    7. '  ' → logprob: -13.031207084655762
    8. '100' → logprob: -13.406207084655762
    9. '0' → logprob: -13.781207084655762
    10. '<|end|>' → logprob: -13.906207084655762

Token 88: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001537169300718233
    2. '0' → logprob: -9.250153541564941
    3. ' ' → logprob: -10.000153541564941
    4. ')' → logprob: -12.375153541564941
    5. '1' → logprob: -13.000153541564941
    6. '100' → logprob: -13.687653541564941
    7. '१०' → logprob: -13.937653541564941
    8. '```' → logprob: -14.187653541564941
    9. '=' → logprob: -15.062653541564941
    10. '১০' → logprob: -15.062653541564941

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010155745781958103
    2. ')==' → logprob: -4.88515567779541
    3. '==' → logprob: -6.01015567779541
    4. ' ==' → logprob: -9.38515567779541
    5. ' )' → logprob: -12.76015567779541
    6. '=' → logprob: -13.88515567779541
    7. ')=' → logprob: -14.01015567779541
    8. ')!=' → logprob: -14.26015567779541
    9. '0' → logprob: -14.38515567779541
    10. '')' → logprob: -14.88515567779541

Token 90: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.038342684507369995
    2. ' ==' → logprob: -3.2883427143096924
    3. '!=' → logprob: -8.913342475891113
    4. '<=' → logprob: -10.288342475891113
    5. '>' → logprob: -10.413342475891113
    6. ' !=' → logprob: -11.038342475891113
    7. ')' → logprob: -11.038342475891113
    8. '<' → logprob: -11.288342475891113
    9. '==
' → logprob: -11.413342475891113
    10. ')==' → logprob: -11.663342475891113

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016092203557491302
    2. ' ' → logprob: -4.141092300415039
    3. '<|end|>' → logprob: -10.391092300415039
    4. 'last' → logprob: -11.891092300415039
    5. '10' → logprob: -12.828592300415039
    6. '   ' → logprob: -12.953592300415039
    7. '  ' → logprob: -13.203592300415039
    8. '```' → logprob: -13.578592300415039
    9. '=' → logprob: -14.078592300415039
    10. 's' → logprob: -14.203592300415039

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.40998875699006e-05
    2. ' ' → logprob: -9.62507438659668
    3. '<|end|>' → logprob: -12.75007438659668
    4. 'last' → logprob: -13.62507438659668
    5. ')' → logprob: -15.25007438659668
    6. '  ' → logprob: -15.43757438659668
    7. '...' → logprob: -15.56257438659668
    8. '=' → logprob: -15.62507438659668
    9. 'x' → logprob: -15.81257438659668
    10. '০' → logprob: -15.87507438659668

Token 93: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47409987449645996
    2. 'else' → logprob: -0.97409987449646
    3. '<|end|>' → logprob: -11.349100112915039
    4. '	else' → logprob: -12.099100112915039
    5. ' ' → logprob: -13.099100112915039
    6. ' ' → logprob: -13.974100112915039
    7. 'elif' → logprob: -14.224100112915039
    8. ' or' → logprob: -14.974100112915039
    9. 'elses' → logprob: -14.974100112915039
    10. '<|end|>' → logprob: -15.224100112915039

Token 94: ' int' (ID: 677)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.47666844725608826
    2. '(' → logprob: -2.226668357849121
    3. 'int' → logprob: -2.601668357849121
    4. '((' → logprob: -3.101668357849121
    5. '(x' → logprob: -3.476668357849121
    6. '(int' → logprob: -3.476668357849121
    7. ' ((' → logprob: -3.976668357849121
    8. '10' → logprob: -3.976668357849121
    9. ' x' → logprob: -4.101668357849121
    10. ' int' → logprob: -4.226668357849121

Token 95: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.038046084344387054
    2. '(' → logprob: -3.28804612159729
    3. ' (' → logprob: -13.038045883178711
    4. 'x' → logprob: -13.788045883178711
    5. '((' → logprob: -14.163045883178711
    6. '<|end|>' → logprob: -15.413045883178711
    7. '(int' → logprob: -16.41304588317871
    8. '(i' → logprob: -16.53804588317871
    9. '```' → logprob: -16.53804588317871
    10. '(abs' → logprob: -16.78804588317871

Token 96: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5234578847885132
    2. '/' → logprob: -0.8984578847885132
    3. '<|end|>' → logprob: -8.398457527160645
    4. ')' → logprob: -9.898457527160645
    5. '<|end|>' → logprob: -10.648457527160645
    6. ' ' → logprob: -11.398457527160645
    7. ' ' → logprob: -11.898457527160645
    8. '[' → logprob: -13.148457527160645
    9. 's' → logprob: -13.273457527160645
    10. ')/' → logprob: -13.460957527160645

Token 97: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '<|end|>' → logprob: -16.750261306762695
    4. '۱۰' → logprob: -17.000261306762695
    5. '  ' → logprob: -17.125261306762695
    6. '1' → logprob: -17.125261306762695
    7. '```' → logprob: -17.125261306762695
    8. '１０' → logprob: -17.375261306762695
    9. '१०' → logprob: -18.375261306762695
    10. '   ' → logprob: -18.375261306762695

Token 98: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -15.500003814697266
    4. '```' → logprob: -15.750003814697266
    5. '۱۰' → logprob: -17.875003814697266
    6. ')' → logprob: -18.500003814697266
    7. '१०' → logprob: -18.625003814697266
    8. '<|end|>' → logprob: -18.750003814697266
    9. '  ' → logprob: -19.000003814697266
    10. '１０' → logprob: -19.375003814697266

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041927252896130085
    2. ')*' → logprob: -5.50419282913208
    3. '*' → logprob: -9.254192352294922
    4. ' )' → logprob: -11.754192352294922
    5. '   ' → logprob: -12.379192352294922
    6. '*)' → logprob: -12.504192352294922
    7. ' *' → logprob: -14.254192352294922
    8. '```' → logprob: -15.254192352294922
    9. '+' → logprob: -15.379192352294922
    10. '0' → logprob: -15.504192352294922

Token 100: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.354680597782135
    2. ' *' → logprob: -1.3546805381774902
    3. ')' → logprob: -3.3546805381774902
    4. ')*' → logprob: -5.47968053817749
    5. '10' → logprob: -7.60468053817749
    6. '0' → logprob: -7.85468053817749
    7. ' ' → logprob: -9.354681015014648
    8. '**' → logprob: -9.604681015014648
    9. '```' → logprob: -9.854681015014648
    10. '   ' → logprob: -9.979681015014648

Token 101: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0021933254320174456
    2. ' ' → logprob: -6.127193450927734
    3. '1' → logprob: -12.502193450927734
    4. '```' → logprob: -12.752193450927734
    5. ' ' → logprob: -15.252193450927734
    6. '	' → logprob: -15.377193450927734
    7. '   ' → logprob: -15.377193450927734
    8. '0' → logprob: -15.689693450927734
    9. '100' → logprob: -16.002193450927734
    10. '`' → logprob: -16.002193450927734

Token 102: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '```' → logprob: -16.000001907348633
    5. '۱۰' → logprob: -17.875001907348633
    6. '0' → logprob: -18.125001907348633
    7. '１０' → logprob: -18.125001907348633
    8. '१०' → logprob: -18.750001907348633
    9. '100' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.312501907348633

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2016564905643463
    2. ' +' → logprob: -1.701656460762024
    3. '10' → logprob: -9.076656341552734
    4. ' +
' → logprob: -9.576656341552734
    5. '+
' → logprob: -10.201656341552734
    6. '<|end|>' → logprob: -11.201656341552734
    7. ' +

' → logprob: -13.201656341552734
    8. ')' → logprob: -13.951656341552734
    9. ')+' → logprob: -14.076656341552734
    10. '+

' → logprob: -14.201656341552734

Token 104: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010232820641249418
    2. '1' → logprob: -7.001023292541504
    3. ' ' → logprob: -9.126023292541504
    4. '0' → logprob: -13.126023292541504
    5. '```' → logprob: -15.251023292541504
    6. '   ' → logprob: -16.063522338867188
    7. '9' → logprob: -16.376022338867188
    8. '[' → logprob: -16.626022338867188
    9. '(' → logprob: -16.688522338867188
    10. '１０' → logprob: -16.813522338867188

Token 105: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018374688923358917
    2. '1' → logprob: -4.018374919891357
    3. '0' → logprob: -8.5183744430542
    4. ' ' → logprob: -10.6433744430542
    5. '(' → logprob: -15.7683744430542
    6. '```' → logprob: -15.7683744430542
    7. ''' → logprob: -15.8933744430542
    8. '{' → logprob: -15.8933744430542
    9. '۱۰' → logprob: -16.143375396728516
    10. '-' → logprob: -16.393375396728516

Token 106: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2794271409511566
    2. '\n' → logprob: -1.654427170753479
    3. '<|end|>' → logprob: -3.5294270515441895
    4. '  
' → logprob: -5.6544270515441895
    5. '    
' → logprob: -5.6544270515441895
    6. ' ' → logprob: -6.0294270515441895
    7. '   ' → logprob: -6.1544270515441895
    8. ')' → logprob: -6.2794270515441895
    9. 'newline' → logprob: -6.6544270515441895
    10. '+' → logprob: -6.6544270515441895

Token 107: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' if' (ID: 538)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0445200651884079
    2. 'if' (adapté à ' if') → logprob: -4.044519901275635
    3. ' last' → logprob: -4.419519901275635
    4. '<|end|>' → logprob: -4.669519901275635
    5. ' if' → logprob: -6.544519901275635
    6. '   ' → logprob: -6.669519901275635
    7. 'print' → logprob: -7.919519901275635
    8. '```' → logprob: -8.044520378112793
    9. ' ' → logprob: -8.169520378112793
    10. '[last' → logprob: -8.544520378112793

Token 109: ' ten' (ID: 4325)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8888925909996033
    2. ' (' → logprob: -1.013892650604248
    3. ' last' → logprob: -2.763892650604248
    4. 'x' → logprob: -3.013892650604248
    5. '(' → logprob: -3.013892650604248
    6. ' ten' → logprob: -4.138892650604248
    7. 'last' → logprob: -4.388892650604248
    8. '(x' → logprob: -4.388892650604248
    9. ' abs' → logprob: -5.013892650604248
    10. ' ' → logprob: -5.138892650604248

Token 110: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -9.245724504580721e-05
    2. '_' → logprob: -9.625092506408691
    3. '_m' → logprob: -10.875092506408691
    4. '_mode' → logprob: -12.500092506408691
    5. 'mod' → logprob: -13.000092506408691
    6. '_MOD' → logprob: -15.250092506408691
    7. '_Mod' → logprob: -15.375092506408691
    8. '```' → logprob: -15.875092506408691
    9. '_(' → logprob: -16.000091552734375
    10. 'Mod' → logprob: -16.125091552734375

Token 111: '(last' (ID: 39599)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001730040879920125
    2. '(' → logprob: -6.376729965209961
    3. '(last' → logprob: -10.876729965209961
    4. '(i' → logprob: -12.626729965209961
    5. ' (' → logprob: -13.626729965209961
    6. '(s' → logprob: -14.001729965209961
    7. '(user' → logprob: -14.126729965209961
    8. 'x' → logprob: -14.751729965209961
    9. '(
' → logprob: -15.001729965209961
    10. '<|end|>' → logprob: -15.376729965209961

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003999326843768358
    2. ')==' → logprob: -5.75399923324585
    3. ')!=' → logprob: -7.87899923324585
    4. ' )' → logprob: -8.753999710083008
    5. ')>' → logprob: -9.253999710083008
    6. ')x' → logprob: -9.503999710083008
    7. ')>=' → logprob: -10.253999710083008
    8. '==' → logprob: -10.753999710083008
    9. ')<' → logprob: -11.253999710083008
    10. ',' → logprob: -11.878999710083008

Token 113: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15432806313037872
    2. '<' → logprob: -2.0293281078338623
    3. ' >' → logprob: -5.279327869415283
    4. '==' → logprob: -5.904327869415283
    5. '!=' → logprob: -6.279327869415283
    6. ' <' → logprob: -7.404327869415283
    7. '()>' → logprob: -7.779327869415283
    8. '<=' → logprob: -8.279328346252441
    9. '>=' → logprob: -8.654328346252441
    10. '<int' → logprob: -9.904328346252441

Token 114: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.12700854241847992
    2. ' ten' → logprob: -2.1270084381103516
    3. '10' → logprob: -9.877008438110352
    4. 'x' → logprob: -11.377008438110352
    5. ' ' → logprob: -11.752008438110352
    6. ' x' → logprob: -12.252008438110352
    7. '   ' → logprob: -13.502008438110352
    8. '  ' → logprob: -13.877008438110352
    9. '=' → logprob: -14.627008438110352
    10. ' tenth' → logprob: -15.002008438110352

Token 115: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0008254681597463787
    2. 'mod' → logprob: -7.12582540512085
    3. 'Mod' → logprob: -11.500825881958008
    4. '_' → logprob: -11.875825881958008
    5. '<|end|>' → logprob: -14.250825881958008
    6. '_MOD' → logprob: -14.375825881958008
    7. ' mod' → logprob: -15.125825881958008
    8. ' ' → logprob: -15.125825881958008
    9. '_Mod' → logprob: -15.125825881958008
    10. ' Mod' → logprob: -15.125825881958008

Token 116: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007224413566291332
    2. '(' → logprob: -7.250722408294678
    3. 'x' → logprob: -11.500722885131836
    4. '(i' → logprob: -13.625722885131836
    5. '(
' → logprob: -14.250722885131836
    6. ' (' → logprob: -16.250722885131836
    7. '```' → logprob: -16.250722885131836
    8. '<|end|>' → logprob: -16.375722885131836
    9. '(last' → logprob: -17.000722885131836
    10. '(user' → logprob: -17.625722885131836

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027325977571308613
    2. ')' → logprob: -6.127732753753662
    3. ':' → logprob: -7.627732753753662
    4. '):
' → logprob: -9.877732276916504
    5. ' ):' → logprob: -11.877732276916504
    6. '():' → logprob: -14.877732276916504
    7. '):

' → logprob: -15.627732276916504
    8. '<|end|>' → logprob: -16.00273323059082
    9. ')：' → logprob: -16.00273323059082
    10. ',' → logprob: -16.12773323059082

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047522224485874176
    2. '   ' → logprob: -3.6725223064422607
    3. '    ' → logprob: -4.797522068023682
    4. ' last' → logprob: -5.797522068023682
    5. '<|end|>' → logprob: -5.922522068023682
    6. '        
' → logprob: -6.297522068023682
    7. '        ' → logprob: -7.172522068023682
    8. '     ' → logprob: -7.297522068023682
    9. '    
' → logprob: -7.297522068023682
    10. ' ' → logprob: -7.547522068023682

Token 119: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.22596490383148193
    2. '   ' → logprob: -2.6009650230407715
    3. 'ans' → logprob: -2.7259650230407715
    4. 'break' → logprob: -3.4759650230407715
    5. ' last' → logprob: -4.1009650230407715
    6. ' ans' → logprob: -5.1009650230407715
    7. 'x' → logprob: -5.3509650230407715
    8. ' break' → logprob: -6.1009650230407715
    9. 'answer' → logprob: -7.4759650230407715
    10. '       ' → logprob: -7.6009650230407715

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25227949023246765
    2. '=' → logprob: -1.50227952003479
    3. ' ' → logprob: -8.127279281616211
    4. '<|end|>' → logprob: -10.377279281616211
    5. ',' → logprob: -11.377279281616211
    6. '=x' → logprob: -13.127279281616211
    7. '.' → logprob: -13.377279281616211
    8. ' +=' → logprob: -13.627279281616211
    9. '<|end|>' → logprob: -14.002279281616211
    10. ' =)' → logprob: -14.377279281616211

Token 121: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804241120815277
    2. ' x' → logprob: -3.2880423069000244
    3. '	x' → logprob: -14.288042068481445
    4. 'last' → logprob: -16.288042068481445
    5. ' ' → logprob: -16.538042068481445
    6. '<|end|>' → logprob: -17.038042068481445
    7. '   ' → logprob: -17.538042068481445
    8. '(x' → logprob: -17.538042068481445
    9. ')x' → logprob: -18.038042068481445
    10. ' last' → logprob: -18.038042068481445

Token 122: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18145355582237244
    2. ')' → logprob: -1.9314535856246948
    3. '
' → logprob: -5.056453704833984
    4. '<|end|>' → logprob: -5.431453704833984
    5. '+' → logprob: -6.181453704833984
    6. '#' → logprob: -6.306453704833984
    7. '0' → logprob: -7.556453704833984
    8. ' print' → logprob: -7.556453704833984
    9. '\n' → logprob: -7.556453704833984
    10. ',' → logprob: -7.556453704833984

Token 124: ' (' (ID: 350)
  Prédit: ' ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.3633668124675751
    2. 'ten' → logprob: -1.6133668422698975
    3. ' last' → logprob: -2.7383668422698975
    4. ' ans' → logprob: -4.363366603851318
    5. '(' → logprob: -4.988366603851318
    6. 'last' → logprob: -4.988366603851318
    7. ' (' → logprob: -5.613366603851318
    8. ' len' → logprob: -5.863366603851318
    9. 'len' → logprob: -6.613366603851318
    10. 'ans' → logprob: -6.613366603851318

Token 125: 'last' (ID: 6684)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.2703353762626648
    2. ' ten' → logprob: -2.0203354358673096
    3. 'last' → logprob: -3.2703354358673096
    4. 'ans' → logprob: -3.7703354358673096
    5. ' last' → logprob: -4.6453351974487305
    6. 'x' → logprob: -4.8953351974487305
    7. 'len' → logprob: -4.8953351974487305
    8. ' ans' → logprob: -5.2703351974487305
    9. '(ans' → logprob: -5.6453351974487305
    10. '(' → logprob: -5.7703351974487305

Token 126: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1913493126630783
    2. '%' → logprob: -2.1913492679595947
    3. ' ==' → logprob: -3.6913492679595947
    4. ')' → logprob: -4.066349506378174
    5. '==' → logprob: -4.316349506378174
    6. ' !=' → logprob: -5.566349506378174
    7. '!=' → logprob: -6.691349506378174
    8. ' )' → logprob: -7.066349506378174
    9. ' ' → logprob: -7.566349506378174
    10. ')%' → logprob: -9.066349029541016

Token 127: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16032131016254425
    2. ' ' → logprob: -1.9103213548660278
    3. '100' → logprob: -10.160321235656738
    4. ')' → logprob: -10.285321235656738
    5. '20' → logprob: -12.722821235656738
    6. '<|end|>' → logprob: -13.035321235656738
    7. '>' → logprob: -13.160321235656738
    8. ' ten' → logprob: -13.347821235656738
    9. '```' → logprob: -13.535321235656738
    10. ' x' → logprob: -13.722821235656738

Token 128: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.747814349073451e-05
    2. '100' → logprob: -11.500017166137695
    3. ' ' → logprob: -12.625017166137695
    4. '1' → logprob: -13.750017166137695
    5. 'last' → logprob: -14.625017166137695
    6. ')' → logprob: -14.750017166137695
    7. '```' → logprob: -14.875017166137695
    8. '

' → logprob: -15.000017166137695
    9. '20' → logprob: -15.187517166137695
    10. '
' → logprob: -15.625017166137695

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0063651627860963345
    2. ')==' → logprob: -5.2563652992248535
    3. '==' → logprob: -7.1313652992248535
    4. ')!=' → logprob: -8.256364822387695
    5. '!=' → logprob: -10.131364822387695
    6. ' )' → logprob: -11.506364822387695
    7. ' ==' → logprob: -11.756364822387695
    8. ')>' → logprob: -12.006364822387695
    9. ' !=' → logprob: -13.256364822387695
    10. '()' → logprob: -14.006364822387695

Token 130: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11996958404779434
    2. '!=' → logprob: -2.244969606399536
    3. ' ==' → logprob: -5.869969367980957
    4. '>' → logprob: -5.994969367980957
    5. ' !=' → logprob: -6.619969367980957
    6. ':' → logprob: -8.494969367980957
    7. '<' → logprob: -9.369969367980957
    8. '=' → logprob: -9.494969367980957
    9. '0' → logprob: -10.244969367980957
    10. '==
' → logprob: -11.119969367980957

Token 131: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015071245143190026
    2. ' ' → logprob: -6.50150728225708
    3. 'last' → logprob: -13.439006805419922
    4. '10' → logprob: -14.001506805419922
    5. '   ' → logprob: -15.001506805419922
    6. ' last' → logprob: -15.626506805419922
    7. ' ' → logprob: -15.814006805419922
    8. 'Last' → logprob: -16.001506805419922
    9. '۰' → logprob: -16.064006805419922
    10. '```' → logprob: -16.189006805419922

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.145118848304264e-05
    2. ' ' → logprob: -10.000051498413086
    3. 'last' → logprob: -12.812551498413086
    4. 'zero' → logprob: -14.875051498413086
    5. '```' → logprob: -15.312551498413086
    6. '10' → logprob: -15.437551498413086
    7. '(' → logprob: -15.562551498413086
    8. '(last' → logprob: -15.625051498413086
    9. 'x' → logprob: -15.875051498413086
    10. '۰' → logprob: -16.187551498413086

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016082465648651123
    2. ':
' → logprob: -4.141082286834717
    3. ' and' → logprob: -11.141082763671875
    4. '   ' → logprob: -11.266082763671875
    5. '):' → logprob: -12.016082763671875
    6. ' :' → logprob: -12.641082763671875
    7. ')' → logprob: -12.891082763671875
    8. '):
' → logprob: -13.016082763671875
    9. ':

' → logprob: -13.266082763671875
    10. 'and' → logprob: -13.391082763671875

Token 134: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.025791693478822708
    2. '   ' → logprob: -4.025791645050049
    3. '	ans' → logprob: -5.400791645050049
    4. ' ans' → logprob: -6.525791645050049
    5. 'print' → logprob: -6.650791645050049
    6. 'answer' → logprob: -8.525792121887207
    7. '(ans' → logprob: -9.775792121887207
    8. '<|end|>' → logprob: -10.900792121887207
    9. '
' → logprob: -11.150792121887207
    10. 'last' → logprob: -11.775792121887207

Token 135: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00028851060778833926
    2. ' ans' → logprob: -8.875288963317871
    3. '   ' → logprob: -9.500288963317871
    4. '	ans' → logprob: -10.000288963317871
    5. 'print' → logprob: -11.250288963317871
    6. 'answer' → logprob: -11.875288963317871
    7. '(ans' → logprob: -12.250288963317871
    8. 'last' → logprob: -13.500288963317871
    9. '_ans' → logprob: -14.500288963317871
    10. 'Ans' → logprob: -14.625288963317871

Token 136: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0028589628636837006
    2. '-' → logprob: -6.377859115600586
    3. '=' → logprob: -7.002859115600586
    4. ' -=' → logprob: -8.377859115600586
    5. '+=' → logprob: -11.002859115600586
    6. ' =' → logprob: -16.502859115600586
    7. '   ' → logprob: -16.752859115600586
    8. ' ' → logprob: -17.002859115600586
    9. '*=' → logprob: -17.127859115600586
    10. '```' → logprob: -17.627859115600586

Token 137: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07312396168708801
    2. ' ans' → logprob: -2.6981239318847656
    3. '(ans' → logprob: -5.823123931884766
    4. 'int' → logprob: -8.948123931884766
    5. '	ans' → logprob: -10.948123931884766
    6. '(' → logprob: -11.198123931884766
    7. ' (' → logprob: -11.198123931884766
    8. ' ' → logprob: -11.323123931884766
    9. '((' → logprob: -12.073123931884766
    10. '(int' → logprob: -12.448123931884766

Token 138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741698205471039
    2. ' -' → logprob: -0.9741698503494263
    3. ' ' → logprob: -10.349169731140137
    4. '-last' → logprob: -10.349169731140137
    5. '-(' → logprob: -11.974169731140137
    6. '+' → logprob: -12.099169731140137
    7. '  ' → logprob: -12.974169731140137
    8. '   ' → logprob: -13.224169731140137
    9. '-final' → logprob: -13.224169731140137
    10. ' ans' → logprob: -13.224169731140137

Token 139: ' ' (ID: 220)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.34606489539146423
    2. '10' → logprob: -1.4710649251937866
    3. '(' → logprob: -3.096064805984497
    4. 'last' → logprob: -4.221065044403076
    5. ' ten' → logprob: -6.096065044403076
    6. ' ' → logprob: -8.346064567565918
    7. '(last' → logprob: -8.721064567565918
    8. '   ' → logprob: -9.846064567565918
    9. ' last' → logprob: -9.971064567565918
    10. ' (' → logprob: -9.971064567565918

Token 140: '10' (ID: 702)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.4354414939880371
    2. 'last' → logprob: -1.560441493988037
    3. '10' → logprob: -2.435441493988037
    4. '(' → logprob: -2.935441493988037
    5. '(last' → logprob: -6.560441493988037
    6. ' ten' → logprob: -7.935441493988037
    7. ' last' → logprob: -9.185441970825195
    8. ' (' → logprob: -9.435441970825195
    9. 'ans' → logprob: -9.560441970825195
    10. '((' → logprob: -9.810441970825195

Token 141: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015693542081862688
    2. ' print' → logprob: -8.875157356262207
    3. '+' → logprob: -12.375157356262207
    4. '
' → logprob: -12.375157356262207
    5. '<|end|>' → logprob: -12.625157356262207
    6. ')' → logprob: -13.125157356262207
    7. '(print' → logprob: -14.500157356262207
    8. ',' → logprob: -14.750157356262207
    9. '*' → logprob: -15.000157356262207
    10. '.print' → logprob: -15.000157356262207

Token 142: ' (' (ID: 350)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.2186872661113739
    2. 'last' → logprob: -1.9686872959136963
    3. '(last' → logprob: -3.5936872959136963
    4. '(' → logprob: -3.5936872959136963
    5. ' ten' → logprob: -7.218687057495117
    6. '10' → logprob: -7.718687057495117
    7. ' (' → logprob: -8.468687057495117
    8. ' last' → logprob: -8.593687057495117
    9. '(x' → logprob: -9.468687057495117
    10. '[last' → logprob: -10.343687057495117

Token 143: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06284024566411972
    2. 'ten' → logprob: -2.937840223312378
    3. '(last' → logprob: -5.062840461730957
    4. '(' → logprob: -7.562840461730957
    5. '10' → logprob: -7.937840461730957
    6. ' last' → logprob: -8.062840461730957
    7. 'x' → logprob: -8.562840461730957
    8. ' ten' → logprob: -9.937840461730957
    9. '(x' → logprob: -10.062840461730957
    10. '[last' → logprob: -10.062840461730957

Token 144: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0012026121839880943
    2. ' %' → logprob: -6.751202583312988
    3. ')' → logprob: -10.501202583312988
    4. '%x' → logprob: -13.376202583312988
    5. ')%' → logprob: -13.876202583312988
    6. '//' → logprob: -14.126202583312988
    7. ' ' → logprob: -14.626202583312988
    8. '()%' → logprob: -14.626202583312988
    9. '10' → logprob: -16.251203536987305
    10. '()' → logprob: -16.376203536987305

Token 145: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.50000286102295
    3. ')' → logprob: -14.50000286102295
    4. '1' → logprob: -15.12500286102295
    5. 'last' → logprob: -15.87500286102295
    6. '１０' → logprob: -16.250001907348633
    7. '0' → logprob: -16.375001907348633
    8. '१०' → logprob: -16.625001907348633
    9. '۱۰' → logprob: -16.875001907348633
    10. '100' → logprob: -16.875001907348633

Token 146: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '0' → logprob: -14.750001907348633
    5. ')' → logprob: -14.875001907348633
    6. '100' → logprob: -17.125001907348633
    7. '۱۰' → logprob: -17.250001907348633
    8. 'last' → logprob: -17.375001907348633
    9. '१०' → logprob: -17.500001907348633
    10. '１０' → logprob: -17.500001907348633

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.106736039626412e-05
    2. ')
' → logprob: -10.625031471252441
    3. ' )' → logprob: -12.125031471252441
    4. '0' → logprob: -15.000031471252441
    5. ')

' → logprob: -15.125031471252441
    6. '))' → logprob: -15.125031471252441
    7. ')#' → logprob: -16.000030517578125
    8. ')**' → logprob: -17.250030517578125
    9. ')*' → logprob: -17.375030517578125
    10. ')`' → logprob: -17.500030517578125

Token 148: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003643058007583022
    2. ' print' → logprob: -8.625364303588867
    3. ')' → logprob: -9.000364303588867
    4. '
' → logprob: -10.375364303588867
    5. 'pr' → logprob: -11.750364303588867
    6. '#' → logprob: -12.500364303588867
    7. '<|end|>' → logprob: -12.750364303588867
    8. '```' → logprob: -13.000364303588867
    9. ' 
' → logprob: -13.125364303588867
    10. ',' → logprob: -13.375364303588867

Token 149: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2519368827342987
    2. '(' → logprob: -1.501936912536621
    3. '(answer' → logprob: -12.626936912536621
    4. '('' → logprob: -13.751936912536621
    5. ' (' → logprob: -14.001936912536621
    6. '(x' → logprob: -14.251936912536621
    7. '(
' → logprob: -14.876936912536621
    8. '("("' → logprob: -15.376936912536621
    9. '(a' → logprob: -15.501936912536621
    10. 'ans' → logprob: -15.501936912536621

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. '()' → logprob: -10.875025749206543
    3. ' )' → logprob: -12.375025749206543
    4. '(' → logprob: -13.375025749206543
    5. '())' → logprob: -14.125025749206543
    6. '#' → logprob: -16.50002670288086
    7. ')
' → logprob: -17.00002670288086
    8. '')' → logprob: -17.25002670288086
    9. '))' → logprob: -17.87502670288086
    10. ')`' → logprob: -17.87502670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 127
Précision stricte (1ère position): 37.84%
Précision adaptée (1ère position): 39.86%
Précision (top 10): 85.81%
================================================================================
