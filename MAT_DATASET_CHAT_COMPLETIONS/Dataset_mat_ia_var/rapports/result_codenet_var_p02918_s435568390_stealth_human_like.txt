================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, s = open(0)
n, k = map(int, n.split())
# petit calcul de score, bon... c'est pas super propre mais ça passe
adj = 0
for i in range(len(s)-1):
    if s[i] == s[i+1]:
        adj += 1  # On rajoute si les lettres d'à côté sont égales
res = min((n-1), k*2 + adj) # ok c'est pas hyper lisible, à revoir peut-être
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' s' (ID: 265)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07157843559980392
    2. ' =' → logprob: -2.6965785026550293
    3. ',' → logprob: -6.446578502655029
    4. ' ' → logprob: -11.071578025817871
    5. '_' → logprob: -11.696578025817871
    6. ';' → logprob: -12.196578025817871
    7. ')' → logprob: -12.446578025817871
    8. '=
' → logprob: -12.571578025817871
    9. '=

' → logprob: -12.821578025817871
    10. '.' → logprob: -12.946578025817871

Token 4: ' open' (ID: 2494)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.22224222123622894
    2. 'map' → logprob: -2.0972421169281006
    3. ' input' → logprob: -3.0972421169281006
    4. 'input' → logprob: -3.7222421169281006
    5. ' ' → logprob: -5.59724235534668
    6. '0' → logprob: -5.84724235534668
    7. '5' → logprob: -9.34724235534668
    8. '10' → logprob: -9.34724235534668
    9. ' int' → logprob: -9.72224235534668
    10. '1' → logprob: -9.72224235534668

Token 5: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014449071139097214
    2. '('' → logprob: -4.264449119567871
    3. '("("' → logprob: -9.389449119567871
    4. '("' → logprob: -9.639449119567871
    5. ''' → logprob: -10.014449119567871
    6. '(
' → logprob: -10.139449119567871
    7. '"' → logprob: -10.514449119567871
    8. '```' → logprob: -11.889449119567871
    9. '(

' → logprob: -12.764449119567871
    10. '`' → logprob: -13.014449119567871

Token 6: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5873621106147766
    2. '"' → logprob: -0.8373621106147766
    3. '')' → logprob: -5.962362289428711
    4. '")' → logprob: -6.337362289428711
    5. ''s' → logprob: -6.587362289428711
    6. ''f' → logprob: -6.837362289428711
    7. '0' → logprob: -7.087362289428711
    8. ''r' → logprob: -7.462362289428711
    9. ''ex' → logprob: -8.087362289428711
    10. ''/' → logprob: -8.462362289428711

Token 7: ')
' (ID: 446)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.004097993019968271
    2. ')' → logprob: -5.504097938537598
    3. '()).' → logprob: -11.629097938537598
    4. '),' → logprob: -12.504097938537598
    5. '```' → logprob: -13.129097938537598
    6. '.readline' → logprob: -13.254097938537598
    7. '`).' → logprob: -14.379097938537598
    8. ',' → logprob: -14.754097938537598
    9. ' ).' → logprob: -14.879097938537598
    10. '.read' → logprob: -15.004097938537598

Token 8: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6841315627098083
    2. '.readline' → logprob: -0.9341315627098083
    3. '.read' → logprob: -2.559131622314453
    4. ').' → logprob: -3.934131622314453
    5. '.readlines' → logprob: -6.059131622314453
    6. '.split' → logprob: -6.059131622314453
    7. ')' → logprob: -7.934131622314453
    8. 'read' → logprob: -8.434131622314453
    9. '.strip' → logprob: -8.934131622314453
    10. '.decode' → logprob: -9.434131622314453

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011323908343911171
    2. '.readline' → logprob: -5.261323928833008
    3. '.split' → logprob: -5.636323928833008
    4. '.read' → logprob: -6.386323928833008
    5. ',' → logprob: -8.011323928833008
    6. '.strip' → logprob: -8.886323928833008
    7. ').' → logprob: -9.136323928833008
    8. '.readlines' → logprob: -9.761323928833008
    9. '[' → logprob: -9.886323928833008
    10. ')' → logprob: -10.261323928833008

Token 10: ' k' (ID: 372)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.101405382156372
    2. '.split' → logprob: -1.226405382156372
    3. 'split' → logprob: -1.726405382156372
    4. 's' → logprob: -3.226405382156372
    5. '.strip' → logprob: -3.726405382156372
    6. 'int' → logprob: -3.851405382156372
    7. ' ' → logprob: -3.851405382156372
    8. ',' → logprob: -3.976405382156372
    9. ' n' → logprob: -4.101405143737793
    10. ' s' → logprob: -4.351405143737793

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5576890110969543
    2. '.split' → logprob: -0.9326890110969543
    3. '.strip' → logprob: -4.057689189910889
    4. ')' → logprob: -4.932689189910889
    5. '.readline' → logprob: -5.807689189910889
    6. ').' → logprob: -6.057689189910889
    7. '=' → logprob: -6.432689189910889
    8. ',' → logprob: -6.807689189910889
    9. '().' → logprob: -8.18268871307373
    10. '.rstrip' → logprob: -8.55768871307373

Token 12: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5259779691696167
    2. ' map' → logprob: -0.9009779691696167
    3. 'open' → logprob: -7.400978088378906
    4. ' n' → logprob: -7.650978088378906
    5. 'n' → logprob: -8.025978088378906
    6. ' open' → logprob: -8.025978088378906
    7. ' s' → logprob: -8.150978088378906
    8. 's' → logprob: -8.400978088378906
    9. ' ' → logprob: -8.525978088378906
    10. 'list' → logprob: -9.525978088378906

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06617110222578049
    2. '(str' → logprob: -3.066171169281006
    3. '(' → logprob: -4.191171169281006
    4. '(lambda' → logprob: -7.066171169281006
    5. '(open' → logprob: -7.316171169281006
    6. 'str' → logprob: -7.691171169281006
    7. 'int' → logprob: -9.191170692443848
    8. 'open' → logprob: -9.316170692443848
    9. '()' → logprob: -10.441170692443848
    10. '[int' → logprob: -10.941170692443848

Token 14: ',' (ID: 11)
  Prédit: '(open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(open' → logprob: -0.5854421854019165
    2. ',' → logprob: -1.4604421854019165
    3. '(' → logprob: -2.335442066192627
    4. ')' → logprob: -2.710442066192627
    5. '(n' → logprob: -3.460442066192627
    6. 'open' → logprob: -4.335442066192627
    7. '),' → logprob: -7.085442066192627
    8. '(),' → logprob: -8.085442543029785
    9. '`,' → logprob: -8.210442543029785
    10. '```' → logprob: -8.585442543029785

Token 15: ' n' (ID: 297)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7711178660392761
    2. 'open' → logprob: -1.521117925643921
    3. ' input' → logprob: -1.646117925643921
    4. ' open' → logprob: -2.146117925643921
    5. ')' → logprob: -5.521117687225342
    6. 's' → logprob: -6.271117687225342
    7. 'n' → logprob: -6.646117687225342
    8. '(open' → logprob: -7.146117687225342
    9. ' n' → logprob: -7.396117687225342
    10. ' s' → logprob: -8.1461181640625

Token 16: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.39171603322029114
    2. '.strip' → logprob: -1.1417160034179688
    3. '.' → logprob: -5.641716003417969
    4. '.readline' → logprob: -7.641716003417969
    5. '.rstrip' → logprob: -7.641716003417969
    6. '().' → logprob: -9.391716003417969
    7. ' .' → logprob: -9.391716003417969
    8. ')' → logprob: -9.766716003417969
    9. ').' → logprob: -10.266716003417969
    10. 'split' → logprob: -10.516716003417969

Token 17: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.24474531412124634
    2. '(','' → logprob: -1.7447452545166016
    3. '(',' → logprob: -3.4947452545166016
    4. '(' → logprob: -4.994745254516602
    5. '())' → logprob: -5.994745254516602
    6. '()' → logprob: -6.869745254516602
    7. ')' → logprob: -7.744745254516602
    8. '("("' → logprob: -7.744745254516602
    9. '(",' → logprob: -7.869745254516602
    10. '("' → logprob: -8.369745254516602

Token 18: '#' (ID: 2)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.16477899253368378
    2. ')' → logprob: -2.9147789478302
    3. '\n' → logprob: -3.2897789478302
    4. '.split' → logprob: -4.039779186248779
    5. '.strip' → logprob: -4.289779186248779
    6. '.readlines' → logprob: -5.164779186248779
    7. '```' → logprob: -5.664779186248779
    8. 's' → logprob: -5.789779186248779
    9. 'rstrip' → logprob: -6.039779186248779
    10. '()' → logprob: -6.039779186248779

Token 19: ' petit' (ID: 20577)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5082899332046509
    2. 's' → logprob: -1.0082899332046509
    3. 'for' → logprob: -4.133289813995361
    4. ' for' → logprob: -5.133289813995361
    5. ' ' → logprob: -6.383289813995361
    6. '_' → logprob: -6.383289813995361
    7. ' l' → logprob: -6.758289813995361
    8. 'if' → logprob: -7.008289813995361
    9. 'i' → logprob: -7.633289813995361
    10. ' n' → logprob: -7.633289813995361

Token 20: ' calcul' (ID: 7559)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2291004657745361
    2. 's' → logprob: -1.4791004657745361
    3. '_' → logprob: -1.8541004657745361
    4. '=' → logprob: -2.479100465774536
    5. ' ' → logprob: -2.854100465774536
    6. '_s' → logprob: -3.479100465774536
    7. ' s' → logprob: -3.604100465774536
    8. 'l' → logprob: -4.229100227355957
    9. 'a' → logprob: -4.729100227355957
    10. ' _' → logprob: -4.854100227355957

Token 21: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8626773357391357
    2. 's' → logprob: -1.4876773357391357
    3. ' ' → logprob: -1.8626773357391357
    4. ' =' → logprob: -2.9876773357391357
    5. ',' → logprob: -3.3626773357391357
    6. ' s' → logprob: -3.9876773357391357
    7. '=' → logprob: -4.487677574157715
    8. ' +=' → logprob: -4.737677574157715
    9. '_' → logprob: -4.987677574157715
    10. '*' → logprob: -4.987677574157715

Token 22: ' score' (ID: 8429)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.49457693099975586
    2. 's' → logprob: -1.3695769309997559
    3. ' la' → logprob: -2.369576930999756
    4. ' l' → logprob: -3.994576930999756
    5. ' ' → logprob: -4.869576930999756
    6. 'la' → logprob: -5.619576930999756
    7. 'l' → logprob: -6.369576930999756
    8. 'prob' → logprob: -7.057076930999756
    9. ' probabil' → logprob: -7.369576930999756
    10. 'a' → logprob: -7.619576930999756

Token 23: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5366504788398743
    2. ' ' → logprob: -1.6616504192352295
    3. ')' → logprob: -2.6616504192352295
    4. ' s' → logprob: -3.2866504192352295
    5. ' =' → logprob: -3.6616504192352295
    6. ',' → logprob: -3.7866504192352295
    7. 'score' → logprob: -3.7866504192352295
    8. '=' → logprob: -4.536650657653809
    9. '_' → logprob: -5.161650657653809
    10. '_score' → logprob: -5.286650657653809

Token 24: ' bon' (ID: 4846)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6089342832565308
    2. 'score' → logprob: -1.4839342832565308
    3. ' s' → logprob: -2.4839344024658203
    4. ' ' → logprob: -3.2339344024658203
    5. ' score' → logprob: -3.4839344024658203
    6. 'scores' → logprob: -4.10893440246582
    7. ')' → logprob: -4.73393440246582
    8. 'def' → logprob: -5.23393440246582
    9. ' =' → logprob: -5.35893440246582
    10. ' on' → logprob: -5.60893440246582

Token 25: '...' (ID: 1008)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6683105230331421
    2. ' =' → logprob: -1.418310523033142
    3. '=' → logprob: -2.1683106422424316
    4. 's' → logprob: -2.6683106422424316
    5. ',' → logprob: -4.543310642242432
    6. '\' → logprob: -4.793310642242432
    7. 'n' → logprob: -4.793310642242432
    8. ' s' → logprob: -4.918310642242432
    9. 'e' → logprob: -5.168310642242432
    10. 'jour' → logprob: -5.168310642242432

Token 26: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8445690274238586
    2. 's' → logprob: -1.3445689678192139
    3. ')' → logprob: -1.8445689678192139
    4. ' =' → logprob: -2.969568967819214
    5. ' s' → logprob: -3.594568967819214
    6. ',' → logprob: -3.844568967819214
    7. 'score' → logprob: -4.719569206237793
    8. '=' → logprob: -5.094569206237793
    9. '_' → logprob: -5.219569206237793
    10. ' )' → logprob: -5.344569206237793

Token 27: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.578563928604126
    2. ''' → logprob: -1.453563928604126
    3. 'est' → logprob: -2.453563928604126
    4. 's' → logprob: -3.453563928604126
    5. 'a' → logprob: -4.453563690185547
    6. 'e' → logprob: -4.453563690185547
    7. ''s' → logprob: -4.578563690185547
    8. ' =' → logprob: -5.203563690185547
    9. 'n' → logprob: -5.453563690185547
    10. ''''' → logprob: -5.453563690185547

Token 28: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.7794594764709473
    2. ' un' → logprob: -2.2794594764709473
    3. 's' → logprob: -2.6544594764709473
    4. 'un' → logprob: -2.7794594764709473
    5. 'simple' → logprob: -3.0294594764709473
    6. ' pas' → logprob: -3.2794594764709473
    7. 'n' → logprob: -3.4044594764709473
    8. ' simple' → logprob: -3.4044594764709473
    9. 'just' → logprob: -3.4044594764709473
    10. 'tout' → logprob: -3.4044594764709473

Token 29: ' super' (ID: 2539)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.7052065134048462
    2. ' parfait' → logprob: -1.8302065134048462
    3. 'grave' → logprob: -2.7052063941955566
    4. ' grand' → logprob: -3.0802063941955566
    5. 'grand' → logprob: -3.0802063941955566
    6. ' compliqué' → logprob: -3.0802063941955566
    7. ' très' → logprob: -3.2052063941955566
    8. ' terrible' → logprob: -3.2052063941955566
    9. 'la' → logprob: -3.3302063941955566
    10. 'terr' → logprob: -3.5802063941955566

Token 30: ' propre' (ID: 40682)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4266602098941803
    2. ' simple' → logprob: -2.6766602993011475
    3. ' ,' → logprob: -2.6766602993011475
    4. ' but' → logprob: -3.0516602993011475
    5. ' ' → logprob: -3.1766602993011475
    6. 'simple' → logprob: -3.6766602993011475
    7. ' =' → logprob: -4.551660060882568
    8. 's' → logprob: -4.801660060882568
    9. '.' → logprob: -4.926660060882568
    10. ':' → logprob: -5.051660060882568

Token 31: ' mais' (ID: 2899)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9030224680900574
    2. 'score' → logprob: -1.6530225276947021
    3. ')' → logprob: -2.278022527694702
    4. ' ' → logprob: -2.528022527694702
    5. ' s' → logprob: -3.153022527694702
    6. '
' → logprob: -3.153022527694702
    7. ',' → logprob: -3.153022527694702
    8. ' 
' → logprob: -4.028022289276123
    9. 'def' → logprob: -4.403022289276123
    10. ' score' → logprob: -4.653022289276123

Token 32: ' ça' (ID: 13590)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5386229753494263
    2. ' ' → logprob: -1.2886229753494263
    3. ' score' → logprob: -2.5386228561401367
    4. 's' → logprob: -3.9136228561401367
    5. 'score' → logprob: -4.663622856140137
    6. ' len' → logprob: -5.163622856140137
    7. ' je' → logprob: -5.288622856140137
    8. ' k' → logprob: -5.413622856140137
    9. ' ok' → logprob: -6.038622856140137
    10. ' n' → logprob: -6.413622856140137

Token 33: ' passe' (ID: 22210)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.3483299016952515
    2. ' marche' → logprob: -1.7233299016952515
    3. ' fonctionne' → logprob: -2.473330020904541
    4. ' fait' → logprob: -2.598330020904541
    5. ' suff' → logprob: -2.723330020904541
    6. 'fonction' → logprob: -3.223330020904541
    7. ' devrait' → logprob: -3.348330020904541
    8. ' ira' → logprob: -3.473330020904541
    9. ' suffit' → logprob: -3.473330020904541
    10. ' fera' → logprob: -3.973330020904541

Token 34: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43633005023002625
    2. '
' → logprob: -2.3113300800323486
    3. '()' → logprob: -2.6863300800323486
    4. 'def' → logprob: -3.3113300800323486
    5. 'score' → logprob: -3.5613300800323486
    6. ' =' → logprob: -3.6863300800323486
    7. 'n' → logprob: -4.4363298416137695
    8. '()
' → logprob: -4.8113298416137695
    9. '\n' → logprob: -4.8113298416137695
    10. ',' → logprob: -4.8113298416137695

Token 35: 'adj' (ID: 57001)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6507216095924377
    2. 'score' → logprob: -1.025721549987793
    3. '
' → logprob: -2.775721549987793
    4. ' s' → logprob: -4.025721549987793
    5. ' score' → logprob: -5.275721549987793
    6. 'def' → logprob: -5.900721549987793
    7. 'scores' → logprob: -6.025721549987793
    8. ' 
' → logprob: -6.400721549987793
    9. 'n' → logprob: -6.525721549987793
    10. 'l' → logprob: -6.525721549987793

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27632230520248413
    2. '=' → logprob: -1.901322364807129
    3. 'acency' → logprob: -3.026322364807129
    4. '[' → logprob: -3.776322364807129
    5. 'acent' → logprob: -5.151322364807129
    6. ',' → logprob: -5.901322364807129
    7. '=[]' → logprob: -6.151322364807129
    8. '_' → logprob: -6.276322364807129
    9. 'ac' → logprob: -6.276322364807129
    10. '=[' → logprob: -6.401322364807129

Token 37: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30575254559516907
    2. ' [[]' → logprob: -1.5557525157928467
    3. ' [' → logprob: -3.5557525157928467
    4. '{}' → logprob: -4.430752754211426
    5. '[]' → logprob: -5.180752754211426
    6. '{' → logprob: -6.555752754211426
    7. ' []' → logprob: -6.680752754211426
    8. ' {}' → logprob: -7.430752754211426
    9. ' [{}' → logprob: -7.430752754211426
    10. '[[' → logprob: -7.555752754211426

Token 38: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09000539034605026
    2. '{' → logprob: -3.215005397796631
    3. '{}' → logprob: -3.590005397796631
    4. '[[' → logprob: -4.965005397796631
    5. '[]' → logprob: -5.715005397796631
    6. '[n' → logprob: -6.590005397796631
    7. '[int' → logprob: -6.590005397796631
    8. 'default' → logprob: -6.590005397796631
    9. '[list' → logprob: -6.590005397796631
    10. ' [[]' → logprob: -6.840005397796631

Token 39: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14389702677726746
    2. ' ' → logprob: -3.51889705657959
    3. 'for' → logprob: -3.51889705657959
    4. ' +' → logprob: -4.26889705657959
    5. 's' → logprob: -4.64389705657959
    6. '<|end|>' → logprob: -4.76889705657959
    7. '
' → logprob: -4.89389705657959
    8. ',' → logprob: -5.01889705657959
    9. ' for' → logprob: -5.14389705657959
    10. '+
' → logprob: -5.64389705657959

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5495299696922302
    2. '+' → logprob: -1.299530029296875
    3. 's' → logprob: -2.799530029296875
    4. ' for' → logprob: -3.299530029296875
    5. '
' → logprob: -4.424530029296875
    6. 'score' → logprob: -4.549530029296875
    7. '+
' → logprob: -5.549530029296875
    8. ',' → logprob: -5.674530029296875
    9. ' ' → logprob: -5.674530029296875
    10. 'max' → logprob: -6.174530029296875

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8142039775848389
    2. ' _' → logprob: -0.9392039775848389
    3. '_' → logprob: -2.064203977584839
    4. 'i' → logprob: -4.439204216003418
    5. ' s' → logprob: -4.689204216003418
    6. ' ' → logprob: -5.564204216003418
    7. '_i' → logprob: -5.939204216003418
    8. ' x' → logprob: -6.189204216003418
    9. ' c' → logprob: -6.564204216003418
    10. ' j' → logprob: -7.126704216003418

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03945651650428772
    2. 'in' → logprob: -3.289456605911255
    3. ',' → logprob: -7.039456367492676
    4. ' ' → logprob: -7.789456367492676
    5. ' ,' → logprob: -10.414456367492676
    6. 'range' → logprob: -10.789456367492676
    7. '_' → logprob: -10.914456367492676
    8. '  ' → logprob: -11.414456367492676
    9. 's' → logprob: -11.539456367492676
    10. '+' → logprob: -11.789456367492676

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04464329779148102
    2. 'range' → logprob: -3.1696434020996094
    3. ' s' → logprob: -6.669643402099609
    4. 's' → logprob: -8.04464340209961
    5. ' ' → logprob: -10.91964340209961
    6. ' rang' → logprob: -12.60714340209961
    7. ' xrange' → logprob: -12.66964340209961
    8. '	range' → logprob: -12.85714340209961
    9. ' ran' → logprob: -12.98214340209961
    10. '  ' → logprob: -12.98214340209961

Token 44: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5612176060676575
    2. '(n' → logprob: -1.4362175464630127
    3. '(k' → logprob: -1.6862175464630127
    4. '(s' → logprob: -5.186217784881592
    5. ' (' → logprob: -7.686217784881592
    6. '(len' → logprob: -8.561217308044434
    7. '(int' → logprob: -8.936217308044434
    8. '(i' → logprob: -11.186217308044434
    9. '((' → logprob: -11.561217308044434
    10. '(
' → logprob: -12.061217308044434

Token 45: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0035217944532632828
    2. '(' → logprob: -5.753521919250488
    3. ' (' → logprob: -8.628521919250488
    4. 's' → logprob: -9.128521919250488
    5. '(n' → logprob: -11.128521919250488
    6. ' s' → logprob: -11.253521919250488
    7. ')' → logprob: -11.628521919250488
    8. '(k' → logprob: -12.128521919250488
    9. ' )' → logprob: -12.503521919250488
    10. ' ' → logprob: -13.128521919250488

Token 46: ')-' (ID: 14080)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6540869474411011
    2. ')' → logprob: -0.9040869474411011
    3. ')-' → logprob: -3.6540870666503906
    4. '-' → logprob: -3.9040870666503906
    5. '))' → logprob: -4.154087066650391
    6. ' -' → logprob: -5.279087066650391
    7. '):' → logprob: -5.279087066650391
    8. ' ))' → logprob: -6.529087066650391
    9. ' )' → logprob: -7.529087066650391
    10. ' ):' → logprob: -7.779087066650391

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01955549046397209
    2. ' ' → logprob: -4.019555568695068
    3. '2' → logprob: -6.644555568695068
    4. '3' → logprob: -10.39455509185791
    5. '-' → logprob: -11.01955509185791
    6. ')' → logprob: -11.26955509185791
    7. 'k' → logprob: -11.39455509185791
    8. ' k' → logprob: -11.95705509185791
    9. '   ' → logprob: -12.33205509185791
    10. '4' → logprob: -12.51955509185791

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0033079429995268583
    2. ' ):' → logprob: -6.503307819366455
    3. '):
' → logprob: -6.753307819366455
    4. ')' → logprob: -7.503307819366455
    5. ':' → logprob: -10.003308296203613
    6. '+' → logprob: -11.128308296203613
    7. '):
' → logprob: -11.628308296203613
    8. '-' → logprob: -11.753308296203613
    9. ',' → logprob: -13.378308296203613
    10. ' ):
' → logprob: -13.503308296203613

Token 49: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29176926612854004
    2. '   ' → logprob: -2.41676926612854
    3. '<|end|>' → logprob: -2.41676926612854
    4. ' 
' → logprob: -3.41676926612854
    5. ' if' → logprob: -3.66676926612854
    6. '    ' → logprob: -4.541769027709961
    7. '<|end|>' → logprob: -6.666769027709961
    8. '    
' → logprob: -6.916769027709961
    9. '  ' → logprob: -7.166769027709961
    10. '+' → logprob: -7.666769027709961

Token 50: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.642885148525238
    2. ' if' → logprob: -1.0178852081298828
    3. '   ' → logprob: -2.517885208129883
    4. 'adj' → logprob: -3.767885208129883
    5. ' adj' → logprob: -5.017885208129883
    6. ' ' → logprob: -6.517885208129883
    7. '  ' → logprob: -8.142885208129883
    8. '+' → logprob: -8.392885208129883
    9. '    ' → logprob: -8.892885208129883
    10. '```' → logprob: -9.642885208129883

Token 51: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.25222092866897583
    2. 's' → logprob: -1.502220869064331
    3. ' ' → logprob: -8.75222110748291
    4. 'abs' → logprob: -9.62722110748291
    5. ' abs' → logprob: -10.62722110748291
    6. '(s' → logprob: -11.50222110748291
    7. '  ' → logprob: -11.75222110748291
    8. '   ' → logprob: -12.00222110748291
    9. '    ' → logprob: -12.50222110748291
    10. ' (' → logprob: -13.00222110748291

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.756989700486884e-05
    2. '[' → logprob: -9.37508773803711
    3. '[I' → logprob: -13.62508773803711
    4. ' [' → logprob: -14.62508773803711
    5. ' ' → logprob: -15.75008773803711
    6. 'i' → logprob: -16.00008773803711
    7. '[j' → logprob: -16.25008773803711
    8. '[
' → logprob: -16.37508773803711
    9. '[s' → logprob: -16.75008773803711
    10. '[ii' → logprob: -16.87508773803711

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5154020190238953
    2. '==' → logprob: -1.51540207862854
    3. '!=' → logprob: -2.14040207862854
    4. ']==' → logprob: -3.26540207862854
    5. ']!=' → logprob: -4.515401840209961
    6. ' ==' → logprob: -5.390401840209961
    7. '=' → logprob: -5.515401840209961
    8. ' !=' → logprob: -5.765401840209961
    9. '>' → logprob: -7.140401840209961
    10. ':' → logprob: -7.265401840209961

Token 54: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5439589619636536
    2. '!=' → logprob: -0.9189589619636536
    3. ' ==' → logprob: -4.543959140777588
    4. ' !=' → logprob: -5.168959140777588
    5. '=' → logprob: -6.168959140777588
    6. '>' → logprob: -6.918959140777588
    7. '<' → logprob: -9.23145866394043
    8. 's' → logprob: -9.29395866394043
    9. ' in' → logprob: -9.41895866394043
    10. '+' → logprob: -9.48145866394043

Token 55: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09554778784513474
    2. ''' → logprob: -3.095547676086426
    3. ' s' → logprob: -3.970547676086426
    4. ''s' → logprob: -3.970547676086426
    5. ' '' → logprob: -6.470547676086426
    6. '')' → logprob: -6.720547676086426
    7. ''.' → logprob: -7.283047676086426
    8. ''#' → logprob: -7.533047676086426
    9. ''>' → logprob: -7.783047676086426
    10. ''+' → logprob: -8.033047676086426

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38126257061958313
    2. '+' → logprob: -1.2562625408172607
    3. '[' → logprob: -3.8812625408172607
    4. ']' → logprob: -5.00626277923584
    5. 's' → logprob: -6.38126277923584
    6. 'i' → logprob: -7.25626277923584
    7. '-' → logprob: -7.50626277923584
    8. '(i' → logprob: -7.88126277923584
    9. '```' → logprob: -8.38126277923584
    10. '   ' → logprob: -8.50626277923584

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023474576883018017
    2. '-' → logprob: -6.627347469329834
    3. ' +' → logprob: -7.627347469329834
    4. ']' → logprob: -8.502346992492676
    5. '+i' → logprob: -8.877346992492676
    6. '   ' → logprob: -10.002346992492676
    7. ''+' → logprob: -10.627346992492676
    8. '1' → logprob: -10.627346992492676
    9. '+]' → logprob: -10.627346992492676
    10. ' ' → logprob: -10.877346992492676

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002028251619776711
    2. ' ' → logprob: -9.000203132629395
    3. 'i' → logprob: -10.125203132629395
    4. '0' → logprob: -10.500203132629395
    5. ']' → logprob: -12.875203132629395
    6. 's' → logprob: -13.625203132629395
    7. ' i' → logprob: -13.875203132629395
    8. '```' → logprob: -13.875203132629395
    9. '-' → logprob: -14.125203132629395
    10. '   ' → logprob: -14.125203132629395

Token 59: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.024171121418476105
    2. '):' → logprob: -4.774171352386475
    3. ']' → logprob: -4.899171352386475
    4. ':' → logprob: -5.274171352386475
    5. '']:' → logprob: -6.649171352386475
    6. ']:
' → logprob: -8.274170875549316
    7. '':' → logprob: -8.524170875549316
    8. '+' → logprob: -8.649170875549316
    9. ']==' → logprob: -9.149170875549316
    10. '"]:' → logprob: -9.149170875549316

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1311531811952591
    2. '   ' → logprob: -2.506153106689453
    3. ' adj' → logprob: -4.131153106689453
    4. 'adj' → logprob: -4.131153106689453
    5. ':' → logprob: -5.381153106689453
    6. '+' → logprob: -6.506153106689453
    7. ':
' → logprob: -7.381153106689453
    8. ' ' → logprob: -8.256153106689453
    9. '    ' → logprob: -8.256153106689453
    10. '_adj' → logprob: -8.381153106689453

Token 61: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.03853518143296242
    2. ' adj' → logprob: -3.2885351181030273
    3. '   ' → logprob: -7.788535118103027
    4. '       ' → logprob: -11.038535118103027
    5. '_adj' → logprob: -11.163535118103027
    6. 'ad' → logprob: -11.413535118103027
    7. ' ' → logprob: -11.788535118103027
    8. '  ' → logprob: -12.413535118103027
    9. '
' → logprob: -12.538535118103027
    10. 'k' → logprob: -12.538535118103027

Token 62: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.42972972989082336
    2. '+=' → logprob: -1.054729700088501
    3. '+' → logprob: -6.92972993850708
    4. '++' → logprob: -11.179729461669922
    5. ' +' → logprob: -11.554729461669922
    6. ']+=' → logprob: -11.554729461669922
    7. '=' → logprob: -12.554729461669922
    8. ' ' → logprob: -13.179729461669922
    9. ' ' → logprob: -13.179729461669922
    10. '   ' → logprob: -13.304729461669922

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004963174578733742
    2. ' ' → logprob: -7.7504963874816895
    3. 'k' → logprob: -9.750495910644531
    4. '2' → logprob: -12.250495910644531
    5. '0' → logprob: -13.750495910644531
    6. ' k' → logprob: -14.750495910644531
    7. 'int' → logprob: -15.250495910644531
    8. '-' → logprob: -15.875495910644531
    9. '10' → logprob: -16.12549591064453
    10. 's' → logprob: -16.12549591064453

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.750027656555176
    3. '2' → logprob: -12.750027656555176
    4. 'k' → logprob: -12.875027656555176
    5. '0' → logprob: -14.625027656555176
    6. '-' → logprob: -16.75002670288086
    7. 'int' → logprob: -16.75002670288086
    8. '100' → logprob: -16.87502670288086
    9. 's' → logprob: -17.00002670288086
    10. '10' → logprob: -17.75002670288086

Token 65: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4066181182861328
    2. '<|end|>' → logprob: -1.2816181182861328
    3. 's' → logprob: -4.031618118286133
    4. '+' → logprob: -4.156618118286133
    5. 'print' → logprob: -4.906618118286133
    6. '```' → logprob: -5.406618118286133
    7. '<|end|>' → logprob: -6.281618118286133
    8. '#' → logprob: -6.406618118286133
    9. 'n' → logprob: -6.531618118286133
    10. ' ' → logprob: -6.906618118286133

Token 66: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29573938250541687
    2. 'print' → logprob: -2.0457394123077393
    3. 's' → logprob: -3.5457394123077393
    4. 'n' → logprob: -3.9207394123077393
    5. '<|end|>' → logprob: -4.29573917388916
    6. '+' → logprob: -4.42073917388916
    7. '#' → logprob: -4.54573917388916
    8. ')' → logprob: -4.67073917388916
    9. '\n' → logprob: -5.04573917388916
    10. ' ' → logprob: -5.54573917388916

Token 67: ' On' (ID: 2160)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16130433976650238
    2. '<|end|>' → logprob: -2.661304235458374
    3. ' ' → logprob: -3.161304235458374
    4. '\n' → logprob: -4.911304473876953
    5. ')' → logprob: -5.036304473876953
    6. '
' → logprob: -5.286304473876953
    7. 's' → logprob: -5.536304473876953
    8. '+
' → logprob: -5.911304473876953
    9. '<|end|>' → logprob: -6.036304473876953
    10. ' +' → logprob: -6.661304473876953

Token 68: ' raj' (ID: 46358)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7621748447418213
    2. 'adj' → logprob: -1.7621748447418213
    3. ' ' → logprob: -2.0121748447418213
    4. 's' → logprob: -3.5121748447418213
    5. 'continue' → logprob: -3.5121748447418213
    6. ' adj' → logprob: -3.6371748447418213
    7. ' a' → logprob: -3.8871748447418213
    8. '+' → logprob: -4.387174606323242
    9. ' s' → logprob: -4.637174606323242
    10. 'contin' → logprob: -4.637174606323242

Token 69: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00013846253568772227
    2. 'o' → logprob: -10.250138282775879
    3. '#' → logprob: -11.375138282775879
    4. 'out' → logprob: -11.625138282775879
    5. '\' → logprob: -11.750138282775879
    6. '=' → logprob: -11.875138282775879
    7. '-' → logprob: -12.000138282775879
    8. '+' → logprob: -12.125138282775879
    9. 'outer' → logprob: -12.125138282775879
    10. 'outez' → logprob: -12.250138282775879

Token 70: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5604600310325623
    2. '1' → logprob: -0.9354600310325623
    3. 'adj' → logprob: -4.685460090637207
    4. '<|end|>' → logprob: -4.935460090637207
    5. ' un' → logprob: -5.185460090637207
    6. '+' → logprob: -5.310460090637207
    7. ' +' → logprob: -6.060460090637207
    8. ' one' → logprob: -6.810460090637207
    9. ' plus' → logprob: -7.310460090637207
    10. 's' → logprob: -7.435460090637207

Token 71: ' les' (ID: 1341)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.069108009338379
    2. ' ' → logprob: -1.569108009338379
    3. ' les' → logprob: -2.444108009338379
    4. 'les' → logprob: -2.944108009338379
    5. ' the' → logprob: -3.069108009338379
    6. ' la' → logprob: -3.569108009338379
    7. ' c' → logprob: -3.694108009338379
    8. ' deux' → logprob: -3.694108009338379
    9. ' s' → logprob: -3.944108009338379
    10. ' l' → logprob: -4.069108009338379

Token 72: ' lettres' (ID: 101234)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7313801646232605
    2. ' deux' → logprob: -1.7313802242279053
    3. ' caractères' → logprob: -2.1063802242279053
    4. ' ' → logprob: -2.6063802242279053
    5. 'car' → logprob: -2.8563802242279053
    6. 'adj' → logprob: -4.231379985809326
    7. 's' → logprob: -4.356379985809326
    8. '2' → logprob: -4.856379985809326
    9. 'i' → logprob: -5.106379985809326
    10. ' voisins' → logprob: -5.106379985809326

Token 73: ' d' (ID: 272)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4195624887943268
    2. 's' → logprob: -1.6695624589920044
    3. ' sont' → logprob: -2.169562578201294
    4. ' adj' → logprob: -4.544562339782715
    5. 'contin' → logprob: -4.669562339782715
    6. 'de' → logprob: -5.919562339782715
    7. 'i' → logprob: -6.294562339782715
    8. 'vo' → logprob: -6.419562339782715
    9. 'are' → logprob: -6.419562339782715
    10. ' are' → logprob: -6.544562339782715

Token 74: ''à' (ID: 33688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2614513337612152
    2. 'e' → logprob: -2.261451244354248
    3. ' i' → logprob: -3.261451244354248
    4. 's' → logprob: -4.386451244354248
    5. 'adj' → logprob: -4.386451244354248
    6. 'eux' → logprob: -4.511451244354248
    7. ''' → logprob: -4.761451244354248
    8. ' ' → logprob: -4.886451244354248
    9. ' adjacent' → logprob: -5.011451244354248
    10. ''i' → logprob: -5.136451244354248

Token 75: ' côté' (ID: 33533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03619236499071121
    2. 'cot' → logprob: -4.161192417144775
    3. '-c' → logprob: -4.911192417144775
    4. '```' → logprob: -5.036192417144775
    5. '``' → logprob: -6.786192417144775
    6. ' côté' → logprob: -7.036192417144775
    7. ' ' → logprob: -7.161192417144775
    8. ' ' → logprob: -7.536192417144775
    9. '	c' → logprob: -7.536192417144775
    10. 'ôté' → logprob: -8.286191940307617

Token 76: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.582007110118866
    2. ' sont' → logprob: -0.832007110118866
    3. '<|end|>' → logprob: -6.332006931304932
    4. 'ont' → logprob: -6.832006931304932
    5. ' are' → logprob: -7.207006931304932
    6. 'éta' → logprob: -7.457006931304932
    7. ' ' → logprob: -7.582006931304932
    8. 'son' → logprob: -8.83200740814209
    9. 'contin' → logprob: -9.08200740814209
    10. 'égal' → logprob: -9.20700740814209

Token 77: ' ég' (ID: 33150)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.6159323453903198
    2. 'les' → logprob: -1.2409323453903198
    3. ' ident' → logprob: -1.9909323453903198
    4. ' les' → logprob: -4.365932464599609
    5. 'ég' → logprob: -5.115932464599609
    6. ' ég' → logprob: -5.240932464599609
    7. 'sembl' → logprob: -6.490932464599609
    8. 'égal' → logprob: -6.615932464599609
    9. 'adj' → logprob: -6.740932464599609
    10. 'the' → logprob: -7.365932464599609

Token 78: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.0027942995075136423
    2. 'aux' → logprob: -6.25279426574707
    3. 'les' → logprob: -8.50279426574707
    4. 'a' → logprob: -8.75279426574707
    5. 'ale' → logprob: -8.75279426574707
    6. '```' → logprob: -8.87779426574707
    7. 'al' → logprob: -9.75279426574707
    8. '   ' → logprob: -10.37779426574707
    9. '``' → logprob: -11.00279426574707
    10. 'uales' → logprob: -11.25279426574707

Token 79: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6763692498207092
    2. '
' → logprob: -1.9263691902160645
    3. 's' → logprob: -2.1763691902160645
    4. '<|end|>' → logprob: -2.5513691902160645
    5. '\n' → logprob: -3.1763691902160645
    6. 'n' → logprob: -3.6763691902160645
    7. '#' → logprob: -4.1763691902160645
    8. ')' → logprob: -4.5513691902160645
    9. '```' → logprob: -4.6763691902160645
    10. ' ' → logprob: -5.0513691902160645

Token 80: 'res' (ID: 430)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.3131982684135437
    2. ' =' → logprob: -1.5631983280181885
    3. 'ults' → logprob: -3.9381983280181885
    4. 'u' → logprob: -4.063198089599609
    5. '=' → logprob: -4.688198089599609
    6. 'ultat' → logprob: -4.688198089599609
    7. ' +=' → logprob: -6.313198089599609
    8. 't' → logprob: -6.813198089599609
    9. 'ul' → logprob: -6.938198089599609
    10. ' ' → logprob: -8.93819808959961

Token 82: ' min' (ID: 1349)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.374889999628067
    2. ' adj' → logprob: -1.7498899698257446
    3. 'max' → logprob: -3.249890089035034
    4. ' max' → logprob: -3.624890089035034
    5. 'min' → logprob: -3.874890089035034
    6. 'k' → logprob: -3.999890089035034
    7. ' min' → logprob: -3.999890089035034
    8. ' k' → logprob: -4.499889850616455
    9. ' n' → logprob: -6.499889850616455
    10. 'n' → logprob: -6.874889850616455

Token 83: '((' (ID: 2054)
  Prédit: '(adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(adj' → logprob: -0.08845358341932297
    2. '(k' → logprob: -2.588453531265259
    3. '(ad' → logprob: -5.213453769683838
    4. '(' → logprob: -6.088453769683838
    5. '(n' → logprob: -6.713453769683838
    6. '(res' → logprob: -8.21345329284668
    7. ' (' → logprob: -8.71345329284668
    8. '(s' → logprob: -9.71345329284668
    9. '(len' → logprob: -10.58845329284668
    10. '(ans' → logprob: -10.71345329284668

Token 84: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6865509748458862
    2. ' k' → logprob: -1.3115509748458862
    3. 'adj' → logprob: -1.6865509748458862
    4. ' adj' → logprob: -4.061551094055176
    5. ')' → logprob: -4.686551094055176
    6. ' n' → logprob: -5.311551094055176
    7. 'n' → logprob: -5.436551094055176
    8. '   ' → logprob: -6.186551094055176
    9. ' ' → logprob: -6.936551094055176
    10. 'res' → logprob: -7.749051094055176

Token 85: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3219900131225586
    2. '-' → logprob: -1.5719900131225586
    3. '-k' → logprob: -3.4469900131225586
    4. ',' → logprob: -3.9469900131225586
    5. ' ,' → logprob: -5.071990013122559
    6. ')' → logprob: -5.821990013122559
    7. ',k' → logprob: -5.821990013122559
    8. '),' → logprob: -6.071990013122559
    9. ' ' → logprob: -6.946990013122559
    10. '-ad' → logprob: -8.071990013122559

Token 86: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8542109727859497
    2. ' k' → logprob: -1.1042109727859497
    3. '1' → logprob: -1.4792109727859497
    4. ' ' → logprob: -4.47921085357666
    5. 'adj' → logprob: -6.60421085357666
    6. ')' → logprob: -6.72921085357666
    7. ' adj' → logprob: -7.97921085357666
    8. '),' → logprob: -8.35421085357666
    9. '-' → logprob: -9.22921085357666
    10. ',' → logprob: -10.10421085357666

Token 87: '),' (ID: 936)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.6158051490783691
    2. ',' → logprob: -0.9908051490783691
    3. '),' → logprob: -2.740805149078369
    4. ')' → logprob: -4.365805149078369
    5. ' -' → logprob: -5.240805149078369
    6. ' ),' → logprob: -6.115805149078369
    7. ',k' → logprob: -6.240805149078369
    8. ' ' → logprob: -6.990805149078369
    9. ' )' → logprob: -7.865805149078369
    10. '-' → logprob: -8.240804672241211

Token 88: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5460022687911987
    2. ' adj' → logprob: -1.4210022687911987
    3. 'k' → logprob: -2.4210023880004883
    4. 'adj' → logprob: -2.4210023880004883
    5. ' ' → logprob: -6.796002388000488
    6. ')' → logprob: -9.546002388000488
    7. ' ad' → logprob: -9.546002388000488
    8. '  ' → logprob: -10.171002388000488
    9. ' s' → logprob: -10.296002388000488
    10. ' ' → logprob: -10.296002388000488

Token 89: '*' (ID: 9)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9534996747970581
    2. ',' → logprob: -1.453499674797058
    3. ')' → logprob: -1.703499674797058
    4. '+' → logprob: -2.0784997940063477
    5. '*' → logprob: -3.2034997940063477
    6. ' *' → logprob: -4.453499794006348
    7. ' ,' → logprob: -4.578499794006348
    8. ' ' → logprob: -5.828499794006348
    9. '),' → logprob: -6.453499794006348
    10. ' -' → logprob: -6.578499794006348

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.040995191782712936
    2. ' ' → logprob: -3.2909951210021973
    3. 'adj' → logprob: -6.665995121002197
    4. '1' → logprob: -7.415995121002197
    5. ')' → logprob: -7.790995121002197
    6. ' adj' → logprob: -8.290995597839355
    7. '  ' → logprob: -9.103495597839355
    8. '   ' → logprob: -9.603495597839355
    9. ' )' → logprob: -9.728495597839355
    10. '10' → logprob: -10.978495597839355

Token 91: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007483457215130329
    2. ' )' → logprob: -5.63248348236084
    3. '+' → logprob: -7.00748348236084
    4. ' -' → logprob: -7.13248348236084
    5. ',' → logprob: -7.25748348236084
    6. ' +' → logprob: -7.63248348236084
    7. '))' → logprob: -7.63248348236084
    8. '-' → logprob: -8.00748348236084
    9. '),' → logprob: -10.50748348236084
    10. ')))' → logprob: -10.63248348236084

Token 92: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2520126700401306
    2. ' adj' → logprob: -1.5020127296447754
    3. ' ' → logprob: -10.127012252807617
    4. 'ad' → logprob: -11.752012252807617
    5. ' ad' → logprob: -12.002012252807617
    6. '1' → logprob: -12.127012252807617
    7. '  ' → logprob: -12.252012252807617
    8. ')' → logprob: -12.502012252807617
    9. ' adjacent' → logprob: -12.502012252807617
    10. '(adj' → logprob: -12.502012252807617

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011772842844948173
    2. ' )' → logprob: -9.125117301940918
    3. ')
' → logprob: -12.375117301940918
    4. '))' → logprob: -12.875117301940918
    5. '),' → logprob: -15.250117301940918
    6. ')
' → logprob: -15.250117301940918
    7. ')))' → logprob: -15.625117301940918
    8. ',' → logprob: -15.750117301940918
    9. ')`' → logprob: -15.750117301940918
    10. ')#' → logprob: -15.875117301940918

Token 94: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14953652024269104
    2. '<|end|>' → logprob: -2.149536609649658
    3. ' ' → logprob: -4.524536609649658
    4. '
' → logprob: -4.899536609649658
    5. ')
' → logprob: -7.024536609649658
    6. '<|end|>' → logprob: -7.399536609649658
    7. ' )' → logprob: -7.524536609649658
    8. '#' → logprob: -8.3995361328125
    9. '[' → logprob: -8.5245361328125
    10. ' 
' → logprob: -8.5245361328125

Token 95: ' ok' (ID: 4763)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10214871168136597
    2. ' ' → logprob: -2.8521487712860107
    3. ' )' → logprob: -3.4771487712860107
    4. '<|end|>' → logprob: -4.977148532867432
    5. ')
' → logprob: -7.852148532867432
    6. ' 
' → logprob: -8.10214900970459
    7. '1' → logprob: -8.85214900970459
    8. ' )
' → logprob: -9.47714900970459
    9. '<|end|>' → logprob: -9.60214900970459
    10. '```' → logprob: -9.97714900970459

Token 96: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.775319516658783
    2. '<|end|>' → logprob: -0.775319516658783
    3. '
' → logprob: -3.0253195762634277
    4. ' ' → logprob: -4.275319576263428
    5. ')
' → logprob: -5.025319576263428
    6. '<|end|>' → logprob: -5.775319576263428
    7. '\n' → logprob: -6.150319576263428
    8. ' 
' → logprob: -7.400319576263428
    9. '```' → logprob: -7.400319576263428
    10. '  
' → logprob: -7.650319576263428

Token 97: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23551498353481293
    2. '-' → logprob: -1.6105149984359741
    3. ' -' → logprob: -5.110515117645264
    4. ' )' → logprob: -6.610515117645264
    5. '<|end|>' → logprob: -6.610515117645264
    6. '+' → logprob: -7.985515117645264
    7. '*' → logprob: -8.110514640808105
    8. '-)' → logprob: -8.860514640808105
    9. ' ' → logprob: -9.610514640808105
    10. ',' → logprob: -10.360514640808105

Token 98: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44688981771469116
    2. ' n' → logprob: -2.571889877319336
    3. '<|end|>' → logprob: -2.571889877319336
    4. 'int' → logprob: -2.696889877319336
    5. ' )' → logprob: -3.321889877319336
    6. 'n' → logprob: -3.446889877319336
    7. ' ' → logprob: -3.821889877319336
    8. '(n' → logprob: -3.821889877319336
    9. ')n' → logprob: -5.071889877319336
    10. ' int' → logprob: -5.571889877319336

Token 99: ' hyper' (ID: 22725)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4831228256225586
    2. ' )' → logprob: -1.4831228256225586
    3. '(n' → logprob: -3.1081228256225586
    4. 'int' → logprob: -3.7331228256225586
    5. ')n' → logprob: -4.108122825622559
    6. ',' → logprob: -4.233122825622559
    7. 'n' → logprob: -4.608122825622559
    8. ' ,' → logprob: -4.608122825622559
    9. '<|end|>' → logprob: -4.608122825622559
    10. ' n' → logprob: -5.358122825622559

Token 100: ' lis' (ID: 20784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14261582493782043
    2. ' )' → logprob: -2.892615795135498
    3. 'int' → logprob: -3.892615795135498
    4. '(n' → logprob: -4.142615795135498
    5. ' ' → logprob: -4.517615795135498
    6. ' n' → logprob: -4.892615795135498
    7. ')n' → logprob: -5.142615795135498
    8. ' +' → logprob: -5.642615795135498
    9. '+' → logprob: -6.017615795135498
    10. ' *' → logprob: -6.142615795135498

Token 101: 'ible' (ID: 1430)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.898201584815979
    2. 'er' → logprob: -1.398201584815979
    3. 'it' → logprob: -2.0232014656066895
    4. ')' → logprob: -3.0232014656066895
    5. 'ent' → logprob: -3.1482014656066895
    6. 'ite' → logprob: -3.5232014656066895
    7. 'e' → logprob: -4.0232014656066895
    8. 'te' → logprob: -4.5232014656066895
    9. 'int' → logprob: -4.5232014656066895
    10. 'ible' → logprob: -4.7732014656066895

Token 102: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031177639961242676
    2. '<|end|>' → logprob: -4.281177520751953
    3. '[' → logprob: -5.406177520751953
    4. '
' → logprob: -5.531177520751953
    5. ' ' → logprob: -5.906177520751953
    6. ')
' → logprob: -5.906177520751953
    7. '[n' → logprob: -7.531177520751953
    8. '<|end|>' → logprob: -8.031177520751953
    9. '+' → logprob: -8.406177520751953
    10. '\n' → logprob: -8.531177520751953

Token 103: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8757582306861877
    2. ' n' → logprob: -1.000758171081543
    3. ' ' → logprob: -1.875758171081543
    4. ' )' → logprob: -3.000758171081543
    5. 'n' → logprob: -5.250758171081543
    6. ' 
' → logprob: -6.000758171081543
    7. '(n' → logprob: -6.375758171081543
    8. ')n' → logprob: -7.875758171081543
    9. '  
' → logprob: -8.125758171081543
    10. '<|end|>' → logprob: -8.250758171081543

Token 104: ' revoir' (ID: 136174)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16354379057884216
    2. 'n' → logprob: -2.413543701171875
    3. '<|end|>' → logprob: -4.038543701171875
    4. ' n' → logprob: -4.413543701171875
    5. 'int' → logprob: -4.538543701171875
    6. 'res' → logprob: -5.163543701171875
    7. ' ' → logprob: -6.288543701171875
    8. 'k' → logprob: -6.288543701171875
    9. ' res' → logprob: -6.413543701171875
    10. 'len' → logprob: -6.788543701171875

Token 105: ' peut' (ID: 9216)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3500770330429077
    2. ' ' → logprob: -1.7250770330429077
    3. '[' → logprob: -3.2250771522521973
    4. '[n' → logprob: -3.3500771522521973
    5. '<|end|>' → logprob: -3.8500771522521973
    6. '(n' → logprob: -5.350077152252197
    7. 'n' → logprob: -5.600077152252197
    8. '[
' → logprob: -6.475077152252197
    9. ' )' → logprob: -6.600077152252197
    10. 's' → logprob: -6.725077152252197

Token 106: '-être' (ID: 33599)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021873895078897476
    2. ')\' → logprob: -5.271873950958252
    3. '+' → logprob: -6.146873950958252
    4. '\n' → logprob: -6.271873950958252
    5. '1' → logprob: -6.771873950958252
    6. '*' → logprob: -6.771873950958252
    7. ' ' → logprob: -6.896873950958252
    8. ' )' → logprob: -6.896873950958252
    9. '\' → logprob: -7.021873950958252
    10. '<|end|>' → logprob: -7.146873950958252

Token 107: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05800224840641022
    2. '[' → logprob: -4.058002471923828
    3. ' ' → logprob: -4.308002471923828
    4. '<|end|>' → logprob: -4.683002471923828
    5. '[n' → logprob: -5.433002471923828
    6. '(n' → logprob: -6.183002471923828
    7. '+' → logprob: -6.308002471923828
    8. 'n' → logprob: -6.683002471923828
    9. ')n' → logprob: -6.933002471923828
    10. ',' → logprob: -7.183002471923828

Token 108: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32955628633499146
    2. '[' → logprob: -1.9545562267303467
    3. ' ' → logprob: -2.3295562267303467
    4. '<|end|>' → logprob: -3.8295562267303467
    5. '[n' → logprob: -5.329556465148926
    6. '+' → logprob: -5.704556465148926
    7. 'n' → logprob: -6.079556465148926
    8. ',' → logprob: -6.829556465148926
    9. '(n' → logprob: -6.954556465148926
    10. '<|end|>' → logprob: -7.079556465148926

Token 109: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.1270405501127243
    2. '(' → logprob: -2.1270406246185303
    3. 'res' → logprob: -9.25204086303711
    4. '()' → logprob: -12.75204086303711
    5. '((' → logprob: -13.00204086303711
    6. ' (' → logprob: -13.00204086303711
    7. '('' → logprob: -13.25204086303711
    8. '(
' → logprob: -13.25204086303711
    9. '(len' → logprob: -13.37704086303711
    10. '(max' → logprob: -13.87704086303711

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039492646465077996
    2. ' )' → logprob: -8.375394821166992
    3. '))' → logprob: -9.125394821166992
    4. '-' → logprob: -10.750394821166992
    5. '+' → logprob: -11.375394821166992
    6. ',' → logprob: -12.500394821166992
    7. '[' → logprob: -12.625394821166992
    8. ')))' → logprob: -12.625394821166992
    9. '-)' → logprob: -13.375394821166992
    10. ')`' → logprob: -13.375394821166992


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 26.85%
Précision (top 10): 58.33%
================================================================================
