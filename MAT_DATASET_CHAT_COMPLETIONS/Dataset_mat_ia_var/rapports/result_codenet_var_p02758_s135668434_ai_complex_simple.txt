================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import functools
import operator
import bisect

read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline

n = int(readline())
sz = n+1

ide_ele_max = 0
num_max = 1 << ((sz-1).bit_length())
seg_max = [ide_ele_max] * (2 * num_max)
mod = 998244353

# Segment Tree init (overelaborated)
def init_max(arr):
    list(map(lambda t: seg_max.__setitem__(t[0]+num_max-1, t[1]), enumerate(arr)))
    functools.reduce(lambda _, i: seg_max.__setitem__(i, max(seg_max[2*i+1], seg_max[2*i+2])) or _, range(num_max-2, -1, -1), None)

# Update with self-closing loop
def update_max(k, v):
    k0 = k + num_max - 1
    seg_max[k0] = v
    list(iter(lambda: k0 == 0 or setattr(operator, 'floordiv', lambda x, y: (k0 := (k0-1)//2)), 0))

    while k0:
        k0 = (k0-1)//2
        seg_max[k0] = max(seg_max[k0*2+1], seg_max[k0*2+2])

# Query with heavy bitwise and slicing tricks
def query_max(l, r):
    if r <= l:
        return ide_ele_max
    l += num_max-1
    r += num_max-2
    res = ide_ele_max
    while r-l > 1:
        res = [res, seg_max[l]][l&1 == 0] if l&1 == 0 else res
        res = max(res, [0, seg_max[r]][r&1 == 1]) if r&1 == 1 else res
        if r&1 == 1: r -= 1
        l //= 2
        r = (r-1)//2
    # trivialize the edge cases with sum map max
    return max([res, seg_max[l], seg_max[r]][:2+int(l!=r)])

m = list(map(int, read().split()))
XD = sorted(zip(m, m))
X = [x for x, d in XD]

# Obscure bisect, assign using a lambda inside listcomp
X = type(X)(map(lambda tup: bisect.bisect_right(X, tup[0]+tup[1]-1), XD))

init_max(list(range(sz)))
update_max(n, n)
combs = [1]*(n+1)
t = 0
for x, d in XD[::-1]:
    idx = n-1-t
    t += 1
    p = X[idx]
    p = query_max(idx, p)
    update_max(idx, p)
    combs[idx] = (combs.get(p+1, combs[p+1] if hasattr(combs,'__getitem__') else 1) + combs[idx+1]) % mod if hasattr(combs,'__getitem__') else (combs[p+1] + combs[idx+1]) % mod
print(combs[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014665819704532623
    2. '\' → logprob: -5.139665603637695
    3. 'import' → logprob: -6.139665603637695
    4. '\n' → logprob: -7.014665603637695
    5. 'def' → logprob: -7.014665603637695
    6. '.
' → logprob: -7.139665603637695
    7. '```' → logprob: -7.389665603637695
    8. '
' → logprob: -7.514665603637695
    9. ',' → logprob: -7.639665603637695
    10. '@' → logprob: -8.139665603637695

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04142782464623451
    2. '\' → logprob: -4.2914276123046875
    3. 'def' → logprob: -4.9164276123046875
    4. 'import' → logprob: -5.1664276123046875
    5. ',' → logprob: -5.7914276123046875
    6. '\n' → logprob: -5.7914276123046875
    7. '```' → logprob: -6.6664276123046875
    8. '@' → logprob: -7.0414276123046875
    9. ' as' → logprob: -7.1664276123046875
    10. '[' → logprob: -7.2914276123046875

Token 7: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0315026193857193
    2. ' operator' → logprob: -4.156502723693848
    3. 'os' → logprob: -5.531502723693848
    4. ' math' → logprob: -5.656502723693848
    5. ' threading' → logprob: -6.531502723693848
    6. ' re' → logprob: -6.781502723693848
    7. 'operator' → logprob: -6.781502723693848
    8. ' itertools' → logprob: -6.906502723693848
    9. ' collections' → logprob: -7.031502723693848
    10. ' io' → logprob: -7.531502723693848

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011118564754724503
    2. '\' → logprob: -5.511118412017822
    3. ',' → logprob: -6.011118412017822
    4. '\n' → logprob: -6.136118412017822
    5. '_' → logprob: -7.636118412017822
    6. '<|end|>' → logprob: -7.886118412017822
    7. 'import' → logprob: -8.38611888885498
    8. ' as' → logprob: -8.63611888885498
    9. '```' → logprob: -8.88611888885498
    10. '.
' → logprob: -8.88611888885498

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004252677317708731
    2. ',' → logprob: -6.629252910614014
    3. '\' → logprob: -7.129252910614014
    4. 'def' → logprob: -7.379252910614014
    5. '.
' → logprob: -8.379252433776855
    6. ' as' → logprob: -8.754252433776855
    7. '#' → logprob: -8.754252433776855
    8. 'import' → logprob: -9.004252433776855
    9. '_' → logprob: -9.254252433776855
    10. '=' → logprob: -9.254252433776855

Token 10: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5821828842163086
    2. ' os' → logprob: -1.4571828842163086
    3. ' math' → logprob: -2.0821828842163086
    4. ' collections' → logprob: -2.8321828842163086
    5. 'os' → logprob: -4.832182884216309
    6. 'math' → logprob: -5.332182884216309
    7. 'collections' → logprob: -5.582182884216309
    8. ' re' → logprob: -5.957182884216309
    9. ' pathlib' → logprob: -6.957182884216309
    10. ' ast' → logprob: -6.957182884216309

Token 11: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0002655079588294029
    2. 'e' → logprob: -8.500265121459961
    3. 't' → logprob: -10.750265121459961
    4. 'ected' → logprob: -10.875265121459961
    5. '>' → logprob: -12.250265121459961
    6. '```' → logprob: -12.250265121459961
    7. 'ection' → logprob: -13.250265121459961
    8. 'ectl' → logprob: -13.375265121459961
    9. 'ec' → logprob: -13.500265121459961
    10. '#' → logprob: -13.750265121459961

Token 12: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14936837553977966
    2. '

' → logprob: -3.3993682861328125
    3. 'import' → logprob: -3.6493682861328125
    4. '
' → logprob: -3.7743682861328125
    5. 'def' → logprob: -4.6493682861328125
    6. '\n' → logprob: -4.6493682861328125
    7. '#' → logprob: -5.1493682861328125
    8. ',' → logprob: -5.1493682861328125
    9. '```' → logprob: -5.2743682861328125
    10. '\' → logprob: -5.3993682861328125

Token 13: 'read' (ID: 1293)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37128421664237976
    2. '.' → logprob: -2.246284246444702
    3. '#' → logprob: -2.871284246444702
    4. 'import' → logprob: -3.246284246444702
    5. 'from' → logprob: -3.371284246444702
    6. '\' → logprob: -4.121284008026123
    7. 'class' → logprob: -4.121284008026123
    8. '```' → logprob: -4.121284008026123
    9. ',' → logprob: -5.371284008026123
    10. '`' → logprob: -5.496284008026123

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2964332103729248
    2. '_' → logprob: -1.4214332103729248
    3. ' =' → logprob: -5.421433448791504
    4. ')' → logprob: -5.546433448791504
    5. '()' → logprob: -6.421433448791504
    6. 'er' → logprob: -7.171433448791504
    7. '=' → logprob: -7.296433448791504
    8. ' (' → logprob: -7.421433448791504
    9. 'space' → logprob: -7.546433448791504
    10. '\' → logprob: -7.921433448791504

Token 15: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.021046403795480728
    2. 'sys' → logprob: -4.0210466384887695
    3. ' input' → logprob: -6.1460466384887695
    4. 'input' → logprob: -7.2710466384887695
    5. ' lambda' → logprob: -11.14604663848877
    6. '=sys' → logprob: -11.14604663848877
    7. ' ' → logprob: -11.64604663848877
    8. '	sys' → logprob: -12.02104663848877
    9. '(sys' → logprob: -12.39604663848877
    10. ' open' → logprob: -12.77104663848877

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00118677644059062
    2. '.' → logprob: -7.376186847686768
    3. '.stdout' → logprob: -7.876186847686768
    4. '.argv' → logprob: -9.62618637084961
    5. '.readline' → logprob: -9.87618637084961
    6. '.std' → logprob: -10.62618637084961
    7. '.read' → logprob: -10.87618637084961
    8. ' .' → logprob: -11.25118637084961
    9. '.stderr' → logprob: -13.37618637084961
    10. '.path' → logprob: -13.87618637084961

Token 17: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01116241980344057
    2. '.read' → logprob: -4.511162281036377
    3. '.' → logprob: -9.886162757873535
    4. '.buffer' → logprob: -10.386162757873535
    5. 'read' → logprob: -10.511162757873535
    6. '.readlines' → logprob: -12.386162757873535
    7. 'buffer' → logprob: -13.761162757873535
    8. '.Read' → logprob: -16.26116180419922
    9. ' readline' → logprob: -16.51116180419922
    10. '```' → logprob: -16.63616180419922

Token 18: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03839442878961563
    2. '.read' → logprob: -3.2883944511413574
    3. '.' → logprob: -8.1633939743042
    4. 'read' → logprob: -10.6633939743042
    5. ' readline' → logprob: -10.6633939743042
    6. '.readlines' → logprob: -11.6633939743042
    7. ' .' → logprob: -11.9133939743042
    8. '_read' → logprob: -13.1633939743042
    9. '```' → logprob: -14.0383939743042
    10. '.re' → logprob: -14.0383939743042

Token 19: '
' (ID: 198)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3103969097137451
    2. '(' → logprob: -1.6853969097137451
    3. '1' → logprob: -2.935396909713745
    4. '_line' → logprob: -5.185397148132324
    5. '\' → logprob: -5.435397148132324
    6. 'exact' → logprob: -5.560397148132324
    7. '()' → logprob: -5.685397148132324
    8. 'into' → logprob: -6.060397148132324
    9. '```' → logprob: -6.935397148132324
    10. 'token' → logprob: -7.310397148132324

Token 20: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07453909516334534
    2. '(' → logprob: -3.0745391845703125
    3. 'def' → logprob: -5.4495391845703125
    4. '()\' → logprob: -5.4495391845703125
    5. '().' → logprob: -5.9495391845703125
    6. '()
' → logprob: -6.3245391845703125
    7. 'line' → logprob: -6.5745391845703125
    8. '_' → logprob: -6.9495391845703125
    9. '
' → logprob: -6.9495391845703125
    10. 'split' → logprob: -7.0745391845703125

Token 21: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2525154650211334
    2. '()' → logprob: -1.502515435218811
    3. '(
' → logprob: -8.75251579284668
    4. '().' → logprob: -8.87751579284668
    5. ' ()' → logprob: -10.12751579284668
    6. '('' → logprob: -10.25251579284668
    7. '(

' → logprob: -10.50251579284668
    8. '_line' → logprob: -10.87751579284668
    9. '("("' → logprob: -10.87751579284668
    10. '40' → logprob: -11.00251579284668

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.419467955827713
    2. '()' → logprob: -1.2944679260253906
    3. ' =' → logprob: -2.7944679260253906
    4. '(' → logprob: -5.169467926025391
    5. ')' → logprob: -7.669467926025391
    6. 'line' → logprob: -7.919467926025391
    7. '_line' → logprob: -8.04446792602539
    8. '.' → logprob: -9.41946792602539
    9. ' ()' → logprob: -9.66946792602539
    10. '_' → logprob: -10.04446792602539

Token 23: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019295861711725593
    2. ' sys' → logprob: -6.251929759979248
    3. '=sys' → logprob: -14.75192928314209
    4. '(sys' → logprob: -15.25192928314209
    5. '	sys' → logprob: -15.62692928314209
    6. 'read' → logprob: -16.251930236816406
    7. '/sys' → logprob: -17.751930236816406
    8. '_sys' → logprob: -18.251930236816406
    9. 'stdin' → logprob: -18.626930236816406
    10. 'b' → logprob: -18.876930236816406

Token 24: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.058639414608478546
    2. '.readline' → logprob: -3.4336395263671875
    3. '.stdout' → logprob: -3.8086395263671875
    4. 'stdin' → logprob: -6.4336395263671875
    5. '.' → logprob: -7.5586395263671875
    6. '.stderr' → logprob: -8.308639526367188
    7. '.buffer' → logprob: -10.433639526367188
    8. '.argv' → logprob: -10.683639526367188
    9. 'sys' → logprob: -11.433639526367188
    10. '._' → logprob: -11.558639526367188

Token 25: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.16044925153255463
    2. '.buffer' → logprob: -1.9104492664337158
    3. '.' → logprob: -9.285449028015137
    4. 'buffer' → logprob: -9.785449028015137
    5. '.stdin' → logprob: -10.285449028015137
    6. '.read' → logprob: -10.410449028015137
    7. '.b' → logprob: -12.535449028015137
    8. '.write' → logprob: -13.285449028015137
    9. '.readlines' → logprob: -13.285449028015137
    10. ' .' → logprob: -13.660449028015137

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005629993975162506
    2. 'read' → logprob: -5.880630016326904
    3. ' readline' → logprob: -5.880630016326904
    4. 'line' → logprob: -11.130629539489746
    5. 'getline' → logprob: -12.005629539489746
    6. '.read' → logprob: -12.130629539489746
    7. '_read' → logprob: -13.505629539489746
    8. '.readlines' → logprob: -15.630629539489746
    9. '```' → logprob: -15.880629539489746
    10. '1' → logprob: -16.755630493164062

Token 27: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1306222379207611
    2. '_' → logprob: -3.505622148513794
    3. '()' → logprob: -3.630622148513794
    4. '#' → logprob: -4.005622386932373
    5. '=' → logprob: -4.130622386932373
    6. '
' → logprob: -5.505622386932373
    7. 'data' → logprob: -5.630622386932373
    8. '__' → logprob: -5.630622386932373
    9. 'read' → logprob: -5.755622386932373
    10. '\' → logprob: -7.005622386932373

Token 28: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04609367996454239
    2. 'n' → logprob: -3.796093702316284
    3. 'data' → logprob: -3.921093702316284
    4. 'class' → logprob: -6.421093463897705
    5. 'N' → logprob: -7.421093463897705
    6. 'Q' → logprob: -9.046093940734863
    7. 'input' → logprob: -9.296093940734863
    8. 'from' → logprob: -10.421093940734863
    9. 'd' → logprob: -10.546093940734863
    10. 'a' → logprob: -10.671093940734863

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13490162789821625
    2. ',' → logprob: -2.384901523590088
    3. '=' → logprob: -3.884901523590088
    4. ' ,' → logprob: -4.884901523590088
    5. ' ' → logprob: -5.134901523590088
    6. ' =
' → logprob: -10.884902000427246
    7. '  ' → logprob: -10.884902000427246
    8. ')' → logprob: -11.009902000427246
    9. 'space' → logprob: -11.634902000427246
    10. '_' → logprob: -12.009902000427246

Token 30: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.023741764947772026
    2. 'int' → logprob: -3.7737417221069336
    3. ' read' → logprob: -8.398741722106934
    4. ' ' → logprob: -8.648741722106934
    5. ' len' → logprob: -9.773741722106934
    6. 'read' → logprob: -11.273741722106934
    7. 'len' → logprob: -11.648741722106934
    8. '0' → logprob: -13.023741722106934
    9. '10' → logprob: -13.023741722106934
    10. ' map' → logprob: -13.148741722106934

Token 31: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.07892405241727829
    2. '(' → logprob: -2.5789239406585693
    3. '(input' → logprob: -11.703924179077148
    4. ' (' → logprob: -12.078924179077148
    5. '(
' → logprob: -12.078924179077148
    6. 'read' → logprob: -12.328924179077148
    7. '(sys' → logprob: -12.953924179077148
    8. '(open' → logprob: -13.203924179077148
    9. '('' → logprob: -13.703924179077148
    10. '(line' → logprob: -14.203924179077148

Token 32: 'line' (ID: 1137)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08074899762868881
    2. '()' → logprob: -2.580749034881592
    3. ')' → logprob: -7.455749034881592
    4. '().' → logprob: -7.580749034881592
    5. ' ())' → logprob: -8.080748558044434
    6. '(' → logprob: -8.205748558044434
    7. 'line' → logprob: -9.455748558044434
    8. ' ()' → logprob: -10.080748558044434
    9. '()[' → logprob: -10.330748558044434
    10. '();)' → logprob: -12.080748558044434

Token 33: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.039010290056467056
    2. '()' → logprob: -3.2890102863311768
    3. '().' → logprob: -7.039010524749756
    4. ' ())' → logprob: -10.164010047912598
    5. '())
' → logprob: -10.664010047912598
    6. '(' → logprob: -11.414010047912598
    7. ')' → logprob: -12.164010047912598
    8. '()
' → logprob: -13.164010047912598
    9. '();)' → logprob: -13.164010047912598
    10. '()[' → logprob: -13.539010047912598

Token 34: 'sz' (ID: 13849)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2597532570362091
    2. 'data' → logprob: -2.0097532272338867
    3. ' a' → logprob: -3.1347532272338867
    4. 'arr' → logprob: -3.6347532272338867
    5. 's' → logprob: -4.884753227233887
    6. ' 
' → logprob: -5.509753227233887
    7. ' data' → logprob: -5.509753227233887
    8. ' A' → logprob: -6.259753227233887
    9. ' arr' → logprob: -6.634753227233887
    10. 'array' → logprob: -6.759753227233887

Token 35: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8952031135559082
    2. ' =' → logprob: -1.2702031135559082
    3. 'es' → logprob: -2.270203113555908
    4. '=' → logprob: -2.770203113555908
    5. 'izes' → logprob: -3.020203113555908
    6. 'a' → logprob: -3.520203113555908
    7. 'ize' → logprob: -4.145203113555908
    8. 'e' → logprob: -4.520203113555908
    9. 'eq' → logprob: -4.520203113555908
    10. 'ies' → logprob: -5.270203113555908

Token 36: ' n' (ID: 297)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.039446234703064
    2. '[int' → logprob: -1.539446234703064
    3. ' []' → logprob: -2.2894463539123535
    4. '[' → logprob: -2.5394463539123535
    5. 'list' → logprob: -2.5394463539123535
    6. '[]' → logprob: -3.1644463539123535
    7. '[n' → logprob: -3.1644463539123535
    8. 'n' → logprob: -3.7894463539123535
    9. ' ' → logprob: -4.0394463539123535
    10. ' list' → logprob: -4.2894463539123535

Token 37: '+' (ID: 10)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7977298498153687
    2. '**' → logprob: -1.5477298498153687
    3. '
' → logprob: -1.7977298498153687
    4. '*' → logprob: -3.672729969024658
    5. '//' → logprob: -3.922729969024658
    6. '+' → logprob: -3.922729969024658
    7. '-' → logprob: -4.422729969024658
    8. ' //' → logprob: -4.547729969024658
    9. ' 
' → logprob: -4.797729969024658
    10. ')' → logprob: -4.797729969024658

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0055177342146635056
    2. '2' → logprob: -5.380517959594727
    3. '10' → logprob: -8.130517959594727
    4. '5' → logprob: -8.755517959594727
    5. ' ' → logprob: -9.005517959594727
    6. 'n' → logprob: -9.130517959594727
    7. '3' → logprob: -9.505517959594727
    8. '+' → logprob: -10.380517959594727
    9. '4' → logprob: -10.380517959594727
    10. '100' → logprob: -11.130517959594727

Token 39: '

' (ID: 279)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.1034449338912964
    2. 'arr' → logprob: -1.4784449338912964
    3. '
' → logprob: -1.9784449338912964
    4. 'dp' → logprob: -3.228445053100586
    5. 'a' → logprob: -3.353445053100586
    6. '\n' → logprob: -3.353445053100586
    7. 'array' → logprob: -3.603445053100586
    8. 's' → logprob: -3.728445053100586
    9. '
' → logprob: -3.978445053100586
    10. 'lst' → logprob: -4.603445053100586

Token 40: 'ide' (ID: 617)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9785089492797852
    2. 'arr' → logprob: -1.3535089492797852
    3. 'dp' → logprob: -1.4785089492797852
    4. 'lst' → logprob: -3.228508949279785
    5. 'data' → logprob: -3.853508949279785
    6. 'tree' → logprob: -4.728508949279785
    7. 'pos' → logprob: -4.853508949279785
    8. 'sorted' → logprob: -4.978508949279785
    9. 'd' → logprob: -5.353508949279785
    10. 'p' → logprob: -5.728508949279785

Token 41: '_ele' (ID: 154942)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.46308642625808716
    2. 'nt' → logprob: -1.3380863666534424
    3. 'f' → logprob: -3.0880863666534424
    4. 'x' → logprob: -3.9630863666534424
    5. 'mp' → logprob: -3.9630863666534424
    6. 'a' → logprob: -4.8380866050720215
    7. 'alf' → logprob: -5.2130866050720215
    8. 'int' → logprob: -5.4630866050720215
    9. 'fault' → logprob: -6.4630866050720215
    10. 'al' → logprob: -6.5880866050720215

Token 42: '_max' (ID: 13731)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0033977674320340157
    2. 'm' → logprob: -6.6283979415893555
    3. 'mnt' → logprob: -7.3783979415893555
    4. 'nt' → logprob: -7.5033979415893555
    5. '=' → logprob: -7.8783979415893555
    6. 'mt' → logprob: -8.003397941589355
    7. 'ments' → logprob: -9.503397941589355
    8. 'ms' → logprob: -9.753397941589355
    9. 'mint' → logprob: -11.503397941589355
    10. '```' → logprob: -11.753397941589355

Token 43: ' =' (ID: 314)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.37896087765693665
    2. '=' → logprob: -1.5039608478546143
    3. 'm' → logprob: -2.7539608478546143
    4. ' =' → logprob: -3.8789608478546143
    5. 'mnt' → logprob: -6.003961086273193
    6. 'ent' → logprob: -6.253961086273193
    7. '=int' → logprob: -7.253961086273193
    8. '=''' → logprob: -7.378961086273193
    9. 'mt' → logprob: -7.753961086273193
    10. 'mem' → logprob: -7.878961086273193

Token 44: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34389838576316833
    2. '0' → logprob: -1.5938984155654907
    3. '-f' → logprob: -3.468898296356201
    4. '-(' → logprob: -3.468898296356201
    5. 'float' → logprob: -4.093898296356201
    6. '10' → logprob: -6.093898296356201
    7. '-inf' → logprob: -6.218898296356201
    8. '-s' → logprob: -6.468898296356201
    9. '-int' → logprob: -6.968898296356201
    10. '-n' → logprob: -7.843898296356201

Token 45: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49787357449531555
    2. '-f' → logprob: -1.3728735446929932
    3. '-(' → logprob: -2.497873544692993
    4. '0' → logprob: -3.622873544692993
    5. 'float' → logprob: -4.122873783111572
    6. '-inf' → logprob: -4.622873783111572
    7. '-int' → logprob: -6.497873783111572
    8. '-s' → logprob: -7.247873783111572
    9. '-b' → logprob: -7.747873783111572
    10. '-fl' → logprob: -8.622873306274414

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1062745675444603
    2. '<|end|>' → logprob: -3.1062746047973633
    3. 'xffffffff' → logprob: -4.231274604797363
    4. 'x' → logprob: -4.231274604797363
    5. 'xffff' → logprob: -4.606274604797363
    6. ' 
' → logprob: -5.731274604797363
    7. 'xffffff' → logprob: -6.106274604797363
    8. ' ' → logprob: -6.106274604797363
    9. '

' → logprob: -6.606274604797363
    10. '  
' → logprob: -6.606274604797363

Token 47: 'num' (ID: 4571)
  Prédit: 'xffffffff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xffffffff' → logprob: -0.8687757849693298
    2. 'xffff' → logprob: -1.8687758445739746
    3. 'x' → logprob: -2.1187758445739746
    4. 'ide' → logprob: -2.4937758445739746
    5. 'xffffff' → logprob: -2.9937758445739746
    6. '
' → logprob: -3.7437758445739746
    7. 'max' → logprob: -3.8687758445739746
    8. '+' → logprob: -4.118775844573975
    9. '0' → logprob: -4.243775844573975
    10. '#' → logprob: -4.368775844573975

Token 48: '_max' (ID: 13731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008092674543149769
    2. ' =' → logprob: -8.375809669494629
    3. 'er' → logprob: -9.000809669494629
    4. '=' → logprob: -9.000809669494629
    5. '_elements' → logprob: -9.250809669494629
    6. 'ber' → logprob: -9.375809669494629
    7. '_max' → logprob: -10.250809669494629
    8. '_ops' → logprob: -11.250809669494629
    9. 'max' → logprob: -11.500809669494629
    10. '_' → logprob: -11.500809669494629

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22549045085906982
    2. ' =' → logprob: -1.6004904508590698
    3. 's' → logprob: -10.60049057006836
    4. ' ' → logprob: -10.60049057006836
    5. '=int' → logprob: -12.35049057006836
    6. '  ' → logprob: -12.35049057006836
    7. '_' → logprob: -12.72549057006836
    8. ',' → logprob: -12.85049057006836
    9. '=max' → logprob: -13.22549057006836
    10. 'imum' → logprob: -13.35049057006836

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3783097565174103
    2. '0' → logprob: -1.378309726715088
    3. '10' → logprob: -3.753309726715088
    4. '-' → logprob: -4.128309726715088
    5. ' -' → logprob: -4.628309726715088
    6. '1' → logprob: -5.753309726715088
    7. ' (' → logprob: -6.128309726715088
    8. '2' → logprob: -6.503309726715088
    9. 'float' → logprob: -7.003309726715088
    10. ' float' → logprob: -7.128309726715088

Token 51: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16226531565189362
    2. '-' → logprob: -2.6622653007507324
    3. '10' → logprob: -2.9122653007507324
    4. '100' → logprob: -4.537265300750732
    5. '(' → logprob: -5.162265300750732
    6. '1' → logprob: -6.162265300750732
    7. 'int' → logprob: -6.287265300750732
    8. '-(' → logprob: -6.912265300750732
    9. 'float' → logprob: -7.412265300750732
    10. '2' → logprob: -7.412265300750732

Token 52: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30753013491630554
    2. '<<' → logprob: -2.307530164718628
    3. '
' → logprob: -2.682530164718628
    4. ' ' → logprob: -3.682530164718628
    5. '+' → logprob: -3.807530164718628
    6. ' <<' → logprob: -4.057529926300049
    7. ' 
' → logprob: -4.432529926300049
    8. '2' → logprob: -5.307529926300049
    9. '6' → logprob: -5.432529926300049
    10. '

' → logprob: -6.557529926300049

Token 53: ' ((' (ID: 3536)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -0.6108137965202332
    2. '31' → logprob: -1.360813856124878
    3. '60' → logprob: -1.735813856124878
    4. '20' → logprob: -3.860813856124878
    5. '32' → logprob: -6.735813617706299
    6. '61' → logprob: -7.485813617706299
    7. '62' → logprob: -7.485813617706299
    8. '63' → logprob: -8.610814094543457
    9. '17' → logprob: -8.860814094543457
    10. '40' → logprob: -9.110814094543457

Token 54: 'sz' (ID: 13849)
  Prédit: 'sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.7395163178443909
    2. '31' → logprob: -1.364516258239746
    3. 'n' → logprob: -1.989516258239746
    4. '30' → logprob: -3.114516258239746
    5. '64' → logprob: -3.364516258239746
    6. '32' → logprob: -3.364516258239746
    7. '63' → logprob: -5.489516258239746
    8. ' sz' → logprob: -5.864516258239746
    9. '(sz' → logprob: -6.114516258239746
    10. '60' → logprob: -7.239516258239746

Token 55: '-' (ID: 12)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.02078080363571644
    2. '*' → logprob: -4.27078104019165
    3. ').' → logprob: -5.27078104019165
    4. ' *' → logprob: -7.64578104019165
    5. 'bit' → logprob: -8.520780563354492
    6. '-' → logprob: -8.520780563354492
    7. '<<' → logprob: -8.645780563354492
    8. ' bit' → logprob: -9.145780563354492
    9. ')' → logprob: -9.145780563354492
    10. '.' → logprob: -9.520780563354492

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12460050731897354
    2. '.bit' → logprob: -2.374600410461426
    3. 'bit' → logprob: -4.124600410461426
    4. ').' → logprob: -5.874600410461426
    5. '3' → logprob: -7.374600410461426
    6. '2' → logprob: -7.374600410461426
    7. '6' → logprob: -7.499600410461426
    8. '9' → logprob: -7.624600410461426
    9. ' bit' → logprob: -7.999600410461426
    10. '5' → logprob: -8.124600410461426

Token 57: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18105606734752655
    2. ').' → logprob: -2.306056022644043
    3. '.bit' → logprob: -3.056056022644043
    4. ')*' → logprob: -4.181056022644043
    5. '*' → logprob: -5.806056022644043
    6. 'bit' → logprob: -8.556056022644043
    7. ' )' → logprob: -9.181056022644043
    8. ' bit' → logprob: -9.306056022644043
    9. '))' → logprob: -10.181056022644043
    10. ' ).' → logprob: -10.431056022644043

Token 58: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -7.941850526549388e-06
    2. '```' → logprob: -12.000007629394531
    3. '.bit' → logprob: -14.375007629394531
    4. ' bit' → logprob: -15.000007629394531
    5. '**' → logprob: -15.625007629394531
    6. ' ' → logprob: -15.875007629394531
    7. 'bi' → logprob: -16.00000762939453
    8. '  ' → logprob: -16.37500762939453
    9. '   ' → logprob: -16.50000762939453
    10. 'b' → logprob: -16.62500762939453

Token 59: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00030578780570067465
    2. 'length' → logprob: -8.125306129455566
    3. 'ength' → logprob: -11.875306129455566
    4. '```' → logprob: -14.250306129455566
    5. '_size' → logprob: -14.750306129455566
    6. 'len' → logprob: -14.875306129455566
    7. '_' → logprob: -15.125306129455566
    8. '_LENGTH' → logprob: -15.250306129455566
    9. 'Length' → logprob: -16.12530517578125
    10. ' length' → logprob: -16.12530517578125

Token 60: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08734874427318573
    2. '())' → logprob: -2.712348699569702
    3. '()' → logprob: -4.587348937988281
    4. ' )' → logprob: -5.087348937988281
    5. ')
' → logprob: -7.962348937988281
    6. ' ())' → logprob: -7.962348937988281
    7. '())
' → logprob: -9.962348937988281
    8. '))' → logprob: -10.212348937988281
    9. '*' → logprob: -10.337348937988281
    10. ')*' → logprob: -11.337348937988281

Token 61: 'seg' (ID: 10717)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5273139476776123
    2. 'class' → logprob: -1.7773139476776123
    3. '*' → logprob: -1.9023139476776123
    4. '#' → logprob: -1.9023139476776123
    5. '+' → logprob: -2.7773139476776123
    6. '```' → logprob: -3.0273139476776123
    7. ' 
' → logprob: -3.9023139476776123
    8. ')' → logprob: -3.9023139476776123
    9. ' ' → logprob: -4.027314186096191
    10. ' *' → logprob: -4.027314186096191

Token 62: '_max' (ID: 13731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13198800384998322
    2. '=' → logprob: -2.756988048553467
    3. 'tree' → logprob: -3.131988048553467
    4. '_tree' → logprob: -4.256988048553467
    5. '_' → logprob: -6.256988048553467
    6. ' tree' → logprob: -9.256987571716309
    7. '_max' → logprob: -9.756987571716309
    8. 'ment' → logprob: -9.881987571716309
    9. ' ' → logprob: -10.131987571716309
    10. '   ' → logprob: -10.256987571716309

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38697904348373413
    2. ' =' → logprob: -1.136979103088379
    3. ' ' → logprob: -10.261979103088379
    4. 'tree' → logprob: -10.386979103088379
    5. '   ' → logprob: -11.386979103088379
    6. '  ' → logprob: -12.136979103088379
    7. '_' → logprob: -12.386979103088379
    8. '=[]' → logprob: -12.636979103088379
    9. '=[' → logprob: -12.886979103088379
    10. '=
' → logprob: -13.386979103088379

Token 64: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2859383225440979
    2. ' [' → logprob: -1.5359382629394531
    3. '[num' → logprob: -3.410938262939453
    4. '[int' → logprob: -9.535938262939453
    5. '[-' → logprob: -10.160938262939453
    6. '[(' → logprob: -10.160938262939453
    7. 'num' → logprob: -10.160938262939453
    8. '[max' → logprob: -10.160938262939453
    9. '0' → logprob: -10.410938262939453
    10. '[n' → logprob: -10.535938262939453

Token 65: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.02375887893140316
    2. '0' → logprob: -4.023758888244629
    3. ' ide' → logprob: -6.523758888244629
    4. '-' → logprob: -6.523758888244629
    5. '(' → logprob: -6.773758888244629
    6. ' ' → logprob: -8.273758888244629
    7. '   ' → logprob: -8.523758888244629
    8. '.ide' → logprob: -8.648758888244629
    9. 'ideo' → logprob: -8.773758888244629
    10. ' -' → logprob: -9.148758888244629

Token 66: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.0002844576956704259
    2. 'ele' → logprob: -8.250284194946289
    3. '_e' → logprob: -11.125284194946289
    4. '_' → logprob: -13.750284194946289
    5. '-ele' → logprob: -14.000284194946289
    6. 'Ele' → logprob: -14.000284194946289
    7. ']' → logprob: -14.125284194946289
    8. '_elem' → logprob: -14.375284194946289
    9. '+' → logprob: -14.875284194946289
    10. '   ' → logprob: -15.000284194946289

Token 67: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0006179584306664765
    2. 'max' → logprob: -7.500617980957031
    3. 'x' → logprob: -11.000617980957031
    4. 'm' → logprob: -11.750617980957031
    5. '_x' → logprob: -11.750617980957031
    6. 's' → logprob: -12.125617980957031
    7. 'Max' → logprob: -12.750617980957031
    8. '_MAX' → logprob: -12.750617980957031
    9. '_min' → logprob: -12.875617980957031
    10. '_m' → logprob: -13.000617980957031

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020580694545060396
    2. ']*' → logprob: -6.502058029174805
    3. ']*(' → logprob: -8.502058029174805
    4. ' ]' → logprob: -8.502058029174805
    5. ' for' → logprob: -8.877058029174805
    6. ',' → logprob: -12.752058029174805
    7. 'for' → logprob: -12.877058029174805
    8. ')]' → logprob: -13.752058029174805
    9. ' ' → logprob: -14.252058029174805
    10. ')' → logprob: -14.252058029174805

Token 69: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009210065007209778
    2. ' *' → logprob: -4.759210109710693
    3. '*(' → logprob: -7.509210109710693
    4. ' ' → logprob: -10.634209632873535
    5. '*num' → logprob: -12.634209632873535
    6. ']' → logprob: -12.759209632873535
    7. ')' → logprob: -13.134209632873535
    8. ' ' → logprob: -13.134209632873535
    9. '*n' → logprob: -13.384209632873535
    10. '**' → logprob: -13.634209632873535

Token 70: ' (' (ID: 350)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.4498768746852875
    2. '(' → logprob: -1.0748769044876099
    3. 'num' → logprob: -4.57487678527832
    4. ' (' → logprob: -4.57487678527832
    5. ' num' → logprob: -8.44987678527832
    6. '(seg' → logprob: -9.44987678527832
    7. '(sz' → logprob: -10.82487678527832
    8. ',num' → logprob: -11.82487678527832
    9. ' ' → logprob: -12.69987678527832
    10. '<num' → logprob: -12.82487678527832

Token 71: '2' (ID: 17)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.46584683656692505
    2. '2' → logprob: -1.0908467769622803
    3. ' num' → logprob: -3.3408467769622803
    4. ' ' → logprob: -6.965847015380859
    5. '(num' → logprob: -9.71584701538086
    6. '  ' → logprob: -10.84084701538086
    7. '   ' → logprob: -11.46584701538086
    8. '	num' → logprob: -12.59084701538086
    9. 'n' → logprob: -12.96584701538086
    10. '(' → logprob: -12.96584701538086

Token 72: ' *' (ID: 425)
  Prédit: '*num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*num' → logprob: -0.7639351487159729
    2. '*' → logprob: -1.0139350891113281
    3. ' *' → logprob: -1.7639350891113281
    4. ' ' → logprob: -11.388935089111328
    5. '**' → logprob: -15.388935089111328
    6. '*(' → logprob: -15.513935089111328
    7. '*n' → logprob: -15.513935089111328
    8. '[num' → logprob: -15.763935089111328
    9. '```' → logprob: -15.888935089111328
    10. '<num' → logprob: -16.138935089111328

Token 73: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0003805064770858735
    2. ' num' → logprob: -7.875380516052246
    3. '	num' → logprob: -15.750380516052246
    4. '<num' → logprob: -15.875380516052246
    5. '[num' → logprob: -16.75037956237793
    6. ' ' → logprob: -16.87537956237793
    7. '   ' → logprob: -16.87537956237793
    8. '*num' → logprob: -17.37537956237793
    9. '(num' → logprob: -17.87537956237793
    10. '=num' → logprob: -18.62537956237793

Token 74: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.1756367712223437e-05
    2. 'max' → logprob: -11.375011444091797
    3. '_' → logprob: -15.375011444091797
    4. ')' → logprob: -18.125011444091797
    5. ' max' → logprob: -18.625011444091797
    6. '_num' → logprob: -18.875011444091797
    7. '_ma' → logprob: -18.875011444091797
    8. '-max' → logprob: -18.875011444091797
    9. '[max' → logprob: -19.125011444091797
    10. '_min' → logprob: -19.375011444091797

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002681304467841983
    2. ' )' → logprob: -8.25026798248291
    3. ')
' → logprob: -12.50026798248291
    4. '))' → logprob: -13.87526798248291
    5. ']' → logprob: -14.75026798248291
    6. '),' → logprob: -14.87526798248291
    7. ')]' → logprob: -15.12526798248291
    8. ')

' → logprob: -15.75026798248291
    9. '）' → logprob: -16.000268936157227
    10. '```' → logprob: -16.000268936157227

Token 76: 'mod' (ID: 4847)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2961342930793762
    2. 'for' → logprob: -2.4211342334747314
    3. '  
' → logprob: -2.9211342334747314
    4. ' 
' → logprob: -3.4211342334747314
    5. '
' → logprob: -3.6711342334747314
    6. ')' → logprob: -4.0461344718933105
    7. '#' → logprob: -4.5461344718933105
    8. '```' → logprob: -5.5461344718933105
    9. ' for' → logprob: -5.6711344718933105
    10. ' ' → logprob: -5.7961344718933105

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48488762974739075
    2. ' =' → logprob: -0.9848875999450684
    3. 'ule' → logprob: -4.609887599945068
    4. 'ules' → logprob: -8.609888076782227
    5. 'ulus' → logprob: -8.609888076782227
    6. 'ulo' → logprob: -8.734888076782227
    7. 'er' → logprob: -10.359888076782227
    8. ' ' → logprob: -10.859888076782227
    9. '=int' → logprob: -10.859888076782227
    10. '_' → logprob: -11.109888076782227

Token 78: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13454332947731018
    2. ' ' → logprob: -3.1345434188842773
    3. '998' → logprob: -3.1345434188842773
    4. '100' → logprob: -3.2595434188842773
    5. '1' → logprob: -8.009543418884277
    6. ' (' → logprob: -10.259543418884277
    7. '0' → logprob: -10.759543418884277
    8. '(' → logprob: -11.259543418884277
    9. '2' → logprob: -11.509543418884277
    10. 'int' → logprob: -11.634543418884277

Token 79: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20874108374118805
    2. '998' → logprob: -1.8337410688400269
    3. '100' → logprob: -3.5837411880493164
    4. '(' → logprob: -7.833741188049316
    5. '1' → logprob: -8.208741188049316
    6. ' ' → logprob: -9.458741188049316
    7. '0' → logprob: -11.333741188049316
    8. 'int' → logprob: -11.333741188049316
    9. '2' → logprob: -11.333741188049316
    10. '214' → logprob: -12.583741188049316

Token 80: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -7.226628895296017e-06
    2. '_' → logprob: -13.000007629394531
    3. '247' → logprob: -13.750007629394531
    4. '243' → logprob: -13.875007629394531
    5. '953' → logprob: -13.875007629394531
    6. ''' → logprob: -14.875007629394531
    7. '245' → logprob: -15.000007629394531
    8. '954' → logprob: -15.250007629394531
    9. '944' → logprob: -16.00000762939453
    10. '254' → logprob: -16.12500762939453

Token 81: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.06260557472705841
    2. '853' → logprob: -2.812605619430542
    3. '857' → logprob: -7.437605381011963
    4. '257' → logprob: -11.187605857849121
    5. '953' → logprob: -11.437605857849121
    6. '457' → logprob: -11.562605857849121
    7. '357' → logprob: -11.812605857849121
    8. '53' → logprob: -12.937605857849121
    9. '553' → logprob: -13.062605857849121
    10. '253' → logprob: -14.437605857849121

Token 82: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46618568897247314
    2. ' 
' → logprob: -1.4661856889724731
    3. ' 

' → logprob: -2.9661855697631836
    4. 'def' → logprob: -3.7161855697631836
    5. '<|end|>' → logprob: -4.466185569763184
    6. '\n' → logprob: -4.591185569763184
    7. ' ' → logprob: -4.716185569763184
    8. '#' → logprob: -4.966185569763184
    9. '  
' → logprob: -5.216185569763184
    10. '

' → logprob: -5.466185569763184

Token 83: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059018298983573914
    2. 'for' → logprob: -3.05901837348938
    3. '
' → logprob: -5.809018135070801
    4. '<|end|>' → logprob: -6.559018135070801
    5. ' for' → logprob: -6.684018135070801
    6. '#' → logprob: -6.809018135070801
    7. '```' → logprob: -6.809018135070801
    8. ' 
' → logprob: -7.059018135070801
    9. ')' → logprob: -8.4340181350708
    10. '  
' → logprob: -8.4340181350708

Token 84: ' Segment' (ID: 64922)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033063970040529966
    2. 'for' → logprob: -6.0033063888549805
    3. ' def' → logprob: -7.3783063888549805
    4. ' for' → logprob: -9.12830638885498
    5. 'import' → logprob: -10.25330638885498
    6. '#' → logprob: -11.12830638885498
    7. 'class' → logprob: -11.62830638885498
    8. 'from' → logprob: -12.50330638885498
    9. 'Define' → logprob: -12.62830638885498
    10. 'For' → logprob: -12.87830638885498

Token 85: ' Tree' (ID: 14224)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.8758493065834045
    2. '_tree' → logprob: -1.1258492469787598
    3. 'tree' → logprob: -2.0008492469787598
    4. '_max' → logprob: -2.6258492469787598
    5. '_' → logprob: -4.12584924697876
    6. 'def' → logprob: -4.50084924697876
    7. 'max' → logprob: -5.37584924697876
    8. ' Tree' → logprob: -5.50084924697876
    9. 'Tree' → logprob: -5.87584924697876
    10. '#' → logprob: -6.00084924697876

Token 86: ' init' (ID: 6327)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41194474697113037
    2. ' =' → logprob: -2.28694486618042
    3. 'class' → logprob: -2.66194486618042
    4. '_' → logprob: -3.66194486618042
    5. '_update' → logprob: -3.78694486618042
    6. '#' → logprob: -4.03694486618042
    7. '[' → logprob: -4.41194486618042
    8. '_add' → logprob: -4.41194486618042
    9. '=' → logprob: -4.41194486618042
    10. ' ' → logprob: -4.53694486618042

Token 87: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4031762480735779
    2. 'for' → logprob: -1.1531763076782227
    3. ' for' → logprob: -4.528176307678223
    4. '#' → logprob: -5.528176307678223
    5. ':' → logprob: -7.778176307678223
    6. '=' → logprob: -8.528176307678223
    7. ';' → logprob: -8.903176307678223
    8. ')' → logprob: -8.903176307678223
    9. ' =' → logprob: -9.028176307678223
    10. '```' → logprob: -9.653176307678223

Token 88: 'over' (ID: 2898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11441031843423843
    2. 'def' → logprob: -2.489410400390625
    3. ' )' → logprob: -4.989410400390625
    4. 'sz' → logprob: -5.489410400390625
    5. 'size' → logprob: -6.114410400390625
    6. ' def' → logprob: -6.239410400390625
    7. 'for' → logprob: -6.989410400390625
    8. 'max' → logprob: -7.114410400390625
    9. 'n' → logprob: -7.114410400390625
    10. '#' → logprob: -7.364410400390625

Token 89: 'el' (ID: 296)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5956453084945679
    2. 'range' → logprob: -2.2206454277038574
    3. ')' → logprob: -2.3456454277038574
    4. 'the' → logprob: -2.3456454277038574
    5. 'sum' → logprob: -2.9706454277038574
    6. ' the' → logprob: -3.0956454277038574
    7. 'array' → logprob: -3.4706454277038574
    8. 'a' → logprob: -3.5956454277038574
    9. 'all' → logprob: -3.5956454277038574
    10. ' range' → logprob: -3.7206454277038574

Token 90: 'abor' (ID: 4181)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.03122166357934475
    2. 'ements' → logprob: -4.031221866607666
    3. 'em' → logprob: -5.406221866607666
    4. 'm' → logprob: -5.656221866607666
    5. 'ment' → logprob: -6.781221866607666
    6. 'e' → logprob: -7.156221866607666
    7. '#' → logprob: -7.281221866607666
    8. 'y' → logprob: -8.031221389770508
    9. '[' → logprob: -8.156221389770508
    10. '```' → logprob: -8.406221389770508

Token 91: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.007908493280410767
    2. 'ation' → logprob: -5.632908344268799
    3. 'ated' → logprob: -5.632908344268799
    4. 'ately' → logprob: -8.632908821105957
    5. 'rate' → logprob: -8.882908821105957
    6. 'ed' → logprob: -9.882908821105957
    7. 'e' → logprob: -10.382908821105957
    8. 'a' → logprob: -10.382908821105957
    9. 'er' → logprob: -10.507908821105957
    10. '```' → logprob: -10.757908821105957

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04372985661029816
    2. ' for' → logprob: -3.543729782104492
    3. ' )' → logprob: -4.668729782104492
    4. ' and' → logprob: -6.418729782104492
    5. ' code' → logprob: -7.418729782104492
    6. ',' → logprob: -7.418729782104492
    7. ' but' → logprob: -8.168729782104492
    8. 'for' → logprob: -8.418729782104492
    9. ' with' → logprob: -8.543729782104492
    10. '):' → logprob: -8.543729782104492

Token 93: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6149606108665466
    2. 'def' → logprob: -1.1149606704711914
    3. ' for' → logprob: -2.2399606704711914
    4. ')' → logprob: -3.9899606704711914
    5. '#' → logprob: -5.489960670471191
    6. '<|end|>' → logprob: -7.614960670471191
    7. '
' → logprob: -7.864960670471191
    8. ' def' → logprob: -8.114960670471191
    9. '```' → logprob: -8.489960670471191
    10. ' 
' → logprob: -8.864960670471191

Token 94: ' init' (ID: 6327)
  Prédit: ' seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.11826937645673752
    2. ' build' → logprob: -2.493269443511963
    3. ' update' → logprob: -4.868269443511963
    4. ' segment' → logprob: -5.243269443511963
    5. 'seg' → logprob: -5.493269443511963
    6. ' combine' → logprob: -6.243269443511963
    7. ' init' → logprob: -6.493269443511963
    8. '_seg' → logprob: -6.868269443511963
    9. ' _' → logprob: -6.993269443511963
    10. ' max' → logprob: -7.493269443511963

Token 95: '_max' (ID: 13731)
  Prédit: '(sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.5267888307571411
    2. '(seg' → logprob: -1.5267888307571411
    3. '(size' → logprob: -2.0267887115478516
    4. '():' → logprob: -3.4017887115478516
    5. '(arr' → logprob: -4.526788711547852
    6. '(' → logprob: -5.651788711547852
    7. '(n' → logprob: -5.901788711547852
    8. '(s' → logprob: -6.401788711547852
    9. '(se' → logprob: -6.526788711547852
    10. ' (' → logprob: -6.651788711547852

Token 96: '(arr' (ID: 19646)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2236509919166565
    2. '(sz' → logprob: -2.3486509323120117
    3. '(seg' → logprob: -2.9736509323120117
    4. '(size' → logprob: -3.3486509323120117
    5. '(arr' → logprob: -5.723650932312012
    6. '(' → logprob: -5.723650932312012
    7. '(n' → logprob: -5.848650932312012
    8. '(s' → logprob: -6.223650932312012
    9. '(k' → logprob: -6.473650932312012
    10. ' ():' → logprob: -6.973650932312012

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005055621732026339
    2. ',' → logprob: -5.6300554275512695
    3. '):
' → logprob: -6.8800554275512695
    4. ')' → logprob: -8.00505542755127
    5. '):
' → logprob: -10.50505542755127
    6. ':' → logprob: -10.88005542755127
    7. ' ):' → logprob: -11.00505542755127
    8. ',index' → logprob: -12.75505542755127
    9. '=' → logprob: -12.88005542755127
    10. '   ' → logprob: -13.00505542755127

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009582702768966556
    2. ':' → logprob: -7.625958442687988
    3. 'global' → logprob: -8.625958442687988
    4. '	global' → logprob: -9.375958442687988
    5. ' global' → logprob: -9.750958442687988
    6. ' for' → logprob: -9.875958442687988
    7. ' ' → logprob: -10.375958442687988
    8. '):' → logprob: -10.750958442687988
    9. 'for' → logprob: -11.250958442687988
    10. ',' → logprob: -11.750958442687988

Token 99: ' list' (ID: 1562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17173846065998077
    2. 'for' → logprob: -2.046738386154175
    3. ' for' → logprob: -3.796738386154175
    4. 'def' → logprob: -5.546738624572754
    5. 'global' → logprob: -6.296738624572754
    6. ' global' → logprob: -8.171738624572754
    7. 'n' → logprob: -10.296738624572754
    8. ' def' → logprob: -10.421738624572754
    9. '    
' → logprob: -10.671738624572754
    10. '  ' → logprob: -11.171738624572754

Token 100: '(map' (ID: 16946)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.840198278427124
    2. '_size' → logprob: -1.590198278427124
    3. '[' → logprob: -2.965198278427124
    4. '_' → logprob: -3.590198278427124
    5. 'en' → logprob: -3.715198278427124
    6. '_len' → logprob: -3.715198278427124
    7. '   ' → logprob: -3.840198278427124
    8. '(' → logprob: -3.840198278427124
    9. 'ing' → logprob: -3.965198278427124
    10. 'size' → logprob: -4.215198516845703

Token 101: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.014608018100261688
    2. '(' → logprob: -5.139607906341553
    3. '(f' → logprob: -5.139607906341553
    4. '(operator' → logprob: -6.139607906341553
    5. '(fun' → logprob: -8.014608383178711
    6. '(seg' → logprob: -8.889608383178711
    7. '(
' → logprob: -9.639608383178711
    8. '(func' → logprob: -11.014608383178711
    9. ')' → logprob: -11.139608383178711
    10. ' (' → logprob: -11.639608383178711

Token 102: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4777994453907013
    2. ' lambda' → logprob: -1.227799415588379
    3. '(lambda' → logprob: -2.852799415588379
    4. ':' → logprob: -5.102799415588379
    5. ' operator' → logprob: -5.727799415588379
    6. '=lambda' → logprob: -5.852799415588379
    7. 'operator' → logprob: -5.977799415588379
    8. 'index' → logprob: -6.102799415588379
    9. 'seg' → logprob: -6.227799415588379
    10. '   ' → logprob: -6.727799415588379

Token 103: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017594436183571815
    2. ' :' → logprob: -4.642594337463379
    3. ' lambda' → logprob: -6.392594337463379
    4. 'lambda' → logprob: -6.392594337463379
    5. 'ambda' → logprob: -7.517594337463379
    6. '   ' → logprob: -7.517594337463379
    7. ':index' → logprob: -7.767594337463379
    8. ' index' → logprob: -7.892594337463379
    9. ' ' → logprob: -8.267594337463379
    10. ',' → logprob: -8.267594337463379

Token 104: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.08556506782770157
    2. ' seg' → logprob: -3.2105650901794434
    3. 'operator' → logprob: -3.5855650901794434
    4. 'lambda' → logprob: -4.835565090179443
    5. '(seg' → logprob: -6.085565090179443
    6. ' operator' → logprob: -6.835565090179443
    7. ' lambda' → logprob: -7.085565090179443
    8. ' setattr' → logprob: -7.460565090179443
    9. '   ' → logprob: -7.585565090179443
    10. '(lambda' → logprob: -8.585564613342285

Token 105: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.093505099765025e-05
    2. 'max' → logprob: -10.875020980834961
    3. '[_' → logprob: -14.875020980834961
    4. 's' → logprob: -15.250020980834961
    5. ')_' → logprob: -15.375020980834961
    6. '__' → logprob: -15.625020980834961
    7. '_MAX' → logprob: -15.750020980834961
    8. 't' → logprob: -15.875020980834961
    9. '_' → logprob: -16.00002098083496
    10. 'a' → logprob: -16.37502098083496

Token 106: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.001088543445803225
    2. '__' → logprob: -7.001088619232178
    3. '__.__' → logprob: -8.87608814239502
    4. ':' → logprob: -11.50108814239502
    5. '   ' → logprob: -12.37608814239502
    6. '().__' → logprob: -12.75108814239502
    7. ' ' → logprob: -13.00108814239502
    8. ':=' → logprob: -13.00108814239502
    9. ' setattr' → logprob: -13.00108814239502
    10. ').__' → logprob: -13.12608814239502

Token 107: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.292907877039397e-06
    2. 'sets' → logprob: -12.75000286102295
    3. 'sett' → logprob: -15.87500286102295
    4. 'getitem' → logprob: -16.750003814697266
    5. 'del' → logprob: -17.250003814697266
    6. 'se' → logprob: -17.250003814697266
    7. '
' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.625003814697266
    9. 's' → logprob: -18.000003814697266
    10. ' set' → logprob: -18.125003814697266

Token 108: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -4.320199877838604e-07
    2. 'ite' → logprob: -15.125
    3. 'it' → logprob: -15.875
    4. 'attr' → logprob: -18.625
    5. ' item' → logprob: -18.75
    6. 't' → logprob: -19.75
    7. 'itm' → logprob: -19.875
    8. 'index' → logprob: -20.25
    9. 'ait' → logprob: -20.5
    10. 'getitem' → logprob: -21.0

Token 109: '__(' (ID: 8241)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.008684182539582253
    2. '((' → logprob: -4.883684158325195
    3. '(t' → logprob: -7.258684158325195
    4. '(' → logprob: -8.008684158325195
    5. '(n' → logprob: -10.383684158325195
    6. '(len' → logprob: -12.508684158325195
    7. ' (' → logprob: -13.633684158325195
    8. '(number' → logprob: -14.008684158325195
    9. ',num' → logprob: -14.258684158325195
    10. '(s' → logprob: -14.508684158325195

Token 110: 't' (ID: 83)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0004230475169606507
    2. ' num' → logprob: -8.000423431396484
    3. '   ' → logprob: -10.375423431396484
    4. 't' → logprob: -11.000423431396484
    5. '(num' → logprob: -11.125423431396484
    6. ' ' → logprob: -11.750423431396484
    7. '  ' → logprob: -11.875423431396484
    8. 'n' → logprob: -12.000423431396484
    9. '	num' → logprob: -13.750423431396484
    10. ',num' → logprob: -14.750423431396484

Token 111: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2428035736083984
    2. ',num' → logprob: -1.3678035736083984
    3. '[' → logprob: -1.4928035736083984
    4. '[num' → logprob: -1.6178035736083984
    5. 'num' → logprob: -4.117803573608398
    6. ' ,' → logprob: -4.992803573608398
    7. '[t' → logprob: -5.992803573608398
    8. '(num' → logprob: -6.242803573608398
    9. 't' → logprob: -6.617803573608398
    10. ' num' → logprob: -7.242803573608398

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048603158444166183
    2. '1' → logprob: -3.048603057861328
    3. ' ' → logprob: -12.673603057861328
    4. ':' → logprob: -13.298603057861328
    5. 'index' → logprob: -14.048603057861328
    6. '::-' → logprob: -14.173603057861328
    7. 'i' → logprob: -14.298603057861328
    8. '2' → logprob: -14.548603057861328
    9. 'len' → logprob: -14.798603057861328
    10. '(' → logprob: -14.798603057861328

Token 113: ']+' (ID: 15344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008013994432985783
    2. ',t' → logprob: -4.88301420211792
    3. ' ,' → logprob: -8.633013725280762
    4. 't' → logprob: -9.258013725280762
    5. '-' → logprob: -9.383013725280762
    6. '+' → logprob: -11.508013725280762
    7. '[t' → logprob: -12.133013725280762
    8. '[' → logprob: -12.133013725280762
    9. '   ' → logprob: -12.258013725280762
    10. ' -' → logprob: -12.383013725280762

Token 114: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.9623810658231378e-05
    2. ' num' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.125020027160645
    4. ' ' → logprob: -15.500020027160645
    5. '(num' → logprob: -16.625019073486328
    6. 'n' → logprob: -16.625019073486328
    7. '	num' → logprob: -17.500019073486328
    8. '=num' → logprob: -17.750019073486328
    9. '  ' → logprob: -17.875019073486328
    10. '[num' → logprob: -18.375019073486328

Token 115: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0024774393532425165
    2. 'max' → logprob: -6.002477645874023
    3. 't' → logprob: -14.127477645874023
    4. 'sz' → logprob: -15.002477645874023
    5. 'Max' → logprob: -15.502477645874023
    6. 'n' → logprob: -16.252477645874023
    7. '_MAX' → logprob: -16.377477645874023
    8. '	max' → logprob: -17.002477645874023
    9. 's' → logprob: -17.252477645874023
    10. 'x' → logprob: -17.502477645874023

Token 116: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10516711324453354
    2. ',t' → logprob: -2.3551671504974365
    3. ' ,' → logprob: -5.480166912078857
    4. 't' → logprob: -7.230166912078857
    5. ' t' → logprob: -10.605167388916016
    6. '   ' → logprob: -11.980167388916016
    7. ',
' → logprob: -11.980167388916016
    8. ' ' → logprob: -12.355167388916016
    9. '_,' → logprob: -13.855167388916016
    10. '),' → logprob: -13.855167388916016

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. ' ' → logprob: -10.000051498413086
    3. 'sz' → logprob: -13.125051498413086
    4. '   ' → logprob: -13.125051498413086
    5. 't' → logprob: -14.125051498413086
    6. ',' → logprob: -14.750051498413086
    7. ' sz' → logprob: -14.875051498413086
    8. ' t' → logprob: -15.875051498413086
    9. 's' → logprob: -16.125051498413086
    10. ')' → logprob: -16.875051498413086

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07029296457767487
    2. ',t' → logprob: -2.6952929496765137
    3. ' ,' → logprob: -8.195293426513672
    4. 't' → logprob: -9.570293426513672
    5. ' t' → logprob: -12.445293426513672
    6. '   ' → logprob: -12.570293426513672
    7. ',
' → logprob: -13.820293426513672
    8. '    ' → logprob: -14.820293426513672
    9. '),' → logprob: -15.445293426513672
    10. '	t' → logprob: -15.820293426513672

Token 119: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0028487443923950195
    2. ' t' → logprob: -5.8778486251831055
    3. '   ' → logprob: -10.877848625183105
    4. 'arr' → logprob: -11.127848625183105
    5. '  ' → logprob: -12.502848625183105
    6. ' ' → logprob: -13.252848625183105
    7. 'lambda' → logprob: -13.627848625183105
    8. ' arr' → logprob: -14.127848625183105
    9. '	t' → logprob: -14.377848625183105
    10. 'operator' → logprob: -14.502848625183105

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038837024476379156
    2. '1' → logprob: -7.875388145446777
    3. ')[' → logprob: -12.750388145446777
    4. 't' → logprob: -13.000388145446777
    5. '][' → logprob: -14.125388145446777
    6. '()[' → logprob: -14.375388145446777
    7. ' [' → logprob: -15.000388145446777
    8. '(' → logprob: -15.250388145446777
    9. ')' → logprob: -15.250388145446777
    10. '#' → logprob: -15.500388145446777

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.750004768371582
    3. '0' → logprob: -14.250004768371582
    4. '[' → logprob: -14.375004768371582
    5. ')' → logprob: -15.937504768371582
    6. '```' → logprob: -16.2500057220459
    7. '   ' → logprob: -16.5000057220459
    8. '#' → logprob: -16.6250057220459
    9. '...' → logprob: -17.1875057220459
    10. 't' → logprob: -17.1875057220459

Token 122: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00033713103039190173
    2. ',' → logprob: -8.250337600708008
    3. ')' → logprob: -10.625337600708008
    4. '   ' → logprob: -11.000337600708008
    5. '),
' → logprob: -11.375337600708008
    6. ')),' → logprob: -11.750337600708008
    7. ')))' → logprob: -12.250337600708008
    8. ' ),' → logprob: -12.250337600708008
    9. ',),' → logprob: -14.000337600708008
    10. ')
' → logprob: -14.250337600708008

Token 123: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.04865288361907005
    2. ' enumerate' → logprob: -3.0486528873443604
    3. '   ' → logprob: -9.923652648925781
    4. 'list' → logprob: -11.673652648925781
    5. 'en' → logprob: -13.298652648925781
    6. '(en' → logprob: -13.423652648925781
    7. '
' → logprob: -13.798652648925781
    8. ' list' → logprob: -14.048652648925781
    9. '    ' → logprob: -14.798652648925781
    10. '           ' → logprob: -14.798652648925781

Token 124: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.018185647204518318
    2. 'arr' → logprob: -4.018185615539551
    3. ' arr' → logprob: -10.39318561553955
    4. '	arr' → logprob: -13.01818561553955
    5. '[arr' → logprob: -13.39318561553955
    6. '<arr' → logprob: -14.14318561553955
    7. '_arr' → logprob: -15.89318561553955
    8. '$arr' → logprob: -15.89318561553955
    9. ')' → logprob: -16.643186569213867
    10. '))' → logprob: -16.893186569213867

Token 125: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0069739483296871185
    2. '))' → logprob: -5.381973743438721
    3. ')' → logprob: -6.131973743438721
    4. ')))
' → logprob: -9.006974220275879
    5. ')));' → logprob: -10.756974220275879
    6. '))))' → logprob: -11.006974220275879
    7. ' ' → logprob: -11.631974220275879
    8. '   ' → logprob: -13.131974220275879
    9. '))
' → logprob: -13.631974220275879
    10. ')))

' → logprob: -13.631974220275879

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12709535658359528
    2. ')' → logprob: -2.6270954608917236
    3. '
' → logprob: -4.1270952224731445
    4. '<|end|>' → logprob: -4.3770952224731445
    5. '    
' → logprob: -4.6270952224731445
    6. '  
' → logprob: -5.7520952224731445
    7. ')
' → logprob: -6.6270952224731445
    8. ' 
' → logprob: -7.0020952224731445
    9. 'def' → logprob: -7.2520952224731445
    10. 'for' → logprob: -8.127095222473145

Token 127: ' functools' (ID: 142636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01111230906099081
    2. '   ' → logprob: -5.136112213134766
    3. ' for' → logprob: -5.386112213134766
    4. 'def' → logprob: -7.761112213134766
    5. '
' → logprob: -9.386112213134766
    6. '    
' → logprob: -10.136112213134766
    7. '	for' → logprob: -11.261112213134766
    8. 'i' → logprob: -11.511112213134766
    9. ' ' → logprob: -11.511112213134766
    10. '  
' → logprob: -13.386112213134766

Token 128: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.11463335156440735
    2. '.partial' → logprob: -2.239633321762085
    3. 'reduce' → logprob: -7.239633560180664
    4. '.cache' → logprob: -7.239633560180664
    5. '.acc' → logprob: -9.239633560180664
    6. 'partial' → logprob: -9.239633560180664
    7. '.update' → logprob: -9.614633560180664
    8. ' .' → logprob: -10.489633560180664
    9. '_reduce' → logprob: -11.239633560180664
    10. '.red' → logprob: -11.739633560180664

Token 129: '(lambda' (ID: 43341)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.2028460055589676
    2. '(lambda' → logprob: -1.7028460502624512
    3. '(' → logprob: -6.702846050262451
    4. '(op' → logprob: -9.577845573425293
    5. 'operator' → logprob: -9.952845573425293
    6. '(
' → logprob: -10.077845573425293
    7. ' (' → logprob: -10.952845573425293
    8. 'lambda' → logprob: -11.327845573425293
    9. '(operation' → logprob: -12.452845573425293
    10. '(f' → logprob: -13.077845573425293

Token 130: ' _,' (ID: 18042)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7208258509635925
    2. 'lambda' → logprob: -0.7208258509635925
    3. ' operator' → logprob: -4.345825672149658
    4. 'operator' → logprob: -4.470825672149658
    5. '(lambda' → logprob: -6.095825672149658
    6. ' op' → logprob: -8.345826148986816
    7. ' ' → logprob: -9.095826148986816
    8. '(operator' → logprob: -9.470826148986816
    9. 'op' → logprob: -9.595826148986816
    10. '   ' → logprob: -10.595826148986816

Token 131: ' i' (ID: 575)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.3793647289276123
    2. ' lambda' → logprob: -1.6293647289276123
    3. 'i' → logprob: -1.8793647289276123
    4. '__' → logprob: -2.3793647289276123
    5. ' i' → logprob: -2.7543647289276123
    6. ' t' → logprob: -2.7543647289276123
    7. 'idx' → logprob: -3.0043647289276123
    8. 't' → logprob: -3.1293647289276123
    9. ' idx' → logprob: -3.5043647289276123
    10. ' __' → logprob: -3.6293647289276123

Token 132: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012060654116794467
    2. ' :' → logprob: -6.751205921173096
    3. ':
' → logprob: -10.626206398010254
    4. '   ' → logprob: -12.626206398010254
    5. ':int' → logprob: -13.376206398010254
    6. ':update' → logprob: -13.626206398010254
    7. ':set' → logprob: -13.751206398010254
    8. ' ' → logprob: -14.001206398010254
    9. ':i' → logprob: -14.126206398010254
    10. '  ' → logprob: -14.751206398010254

Token 133: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.2631680965423584
    2. '(seg' → logprob: -1.7631680965423584
    3. 'set' → logprob: -3.5131680965423584
    4. 'operator' → logprob: -4.0131683349609375
    5. '   ' → logprob: -5.1381683349609375
    6. '(set' → logprob: -6.3881683349609375
    7. '(operator' → logprob: -6.7631683349609375
    8. ' seg' → logprob: -6.8881683349609375
    9. '(se' → logprob: -7.1381683349609375
    10. '(' → logprob: -8.013168334960938

Token 134: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00015085970517247915
    2. 'max' → logprob: -9.250150680541992
    3. 'ax' → logprob: -11.500150680541992
    4. 'm' → logprob: -11.500150680541992
    5. 'r' → logprob: -11.750150680541992
    6. '   ' → logprob: -12.750150680541992
    7. 'g' → logprob: -13.000150680541992
    8. 's' → logprob: -13.125150680541992
    9. 'c' → logprob: -13.125150680541992
    10. '_MAX' → logprob: -13.750150680541992

Token 135: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0008266602526418865
    2. '__' → logprob: -7.875826835632324
    3. '[i' → logprob: -9.375826835632324
    4. '.setdefault' → logprob: -9.625826835632324
    5. '.append' → logprob: -10.375826835632324
    6. '.set' → logprob: -10.500826835632324
    7. '[' → logprob: -10.875826835632324
    8. ':' → logprob: -10.875826835632324
    9. ':=' → logprob: -10.875826835632324
    10. '__.__' → logprob: -11.000826835632324

Token 136: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.5570885807392187e-05
    2. '__' → logprob: -11.250015258789062
    3. 'getitem' → logprob: -13.250015258789062
    4. ' set' → logprob: -15.000015258789062
    5. '```' → logprob: -16.125015258789062
    6. '_set' → logprob: -16.125015258789062
    7. 'sets' → logprob: -16.625015258789062
    8. '
' → logprob: -16.750015258789062
    9. '   ' → logprob: -17.000015258789062
    10. '.__' → logprob: -17.500015258789062

Token 137: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.8550976164988242e-05
    2. 'getitem' → logprob: -11.375018119812012
    3. '_item' → logprob: -12.625018119812012
    4. 'set' → logprob: -13.375018119812012
    5. 'max' → logprob: -14.125018119812012
    6. 'items' → logprob: -14.250018119812012
    7. '__' → logprob: -14.750018119812012
    8. '(item' → logprob: -16.125019073486328
    9. '
' → logprob: -16.750019073486328
    10. ' item' → logprob: -17.250019073486328

Token 138: '__(' (ID: 8241)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006050620228052139
    2. '(' → logprob: -5.1310505867004395
    3. '((' → logprob: -9.506051063537598
    4. ' (' → logprob: -10.506051063537598
    5. '   ' → logprob: -12.131051063537598
    6. '(
' → logprob: -12.631051063537598
    7. ',i' → logprob: -12.756051063537598
    8. ' ' → logprob: -13.131051063537598
    9. '(num' → logprob: -13.131051063537598
    10. ',' → logprob: -13.756051063537598

Token 139: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0012170211412012577
    2. ' i' → logprob: -7.376216888427734
    3. '   ' → logprob: -7.876216888427734
    4. ' ' → logprob: -9.626216888427734
    5. ',' → logprob: -10.376216888427734
    6. 'num' → logprob: -10.376216888427734
    7. '  ' → logprob: -10.501216888427734
    8. '2' → logprob: -10.751216888427734
    9. ',i' → logprob: -11.251216888427734
    10. 'operator' → logprob: -12.501216888427734

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001502636878285557
    2. '//' → logprob: -10.000150680541992
    3. ',
' → logprob: -10.375150680541992
    4. 'operator' → logprob: -11.000150680541992
    5. ' ,' → logprob: -11.000150680541992
    6. ' ' → logprob: -11.625150680541992
    7. 'seg' → logprob: -11.875150680541992
    8. '   ' → logprob: -12.375150680541992
    9. ',(' → logprob: -12.625150680541992
    10. '-' → logprob: -12.625150680541992

Token 141: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06246503069996834
    2. 'operator' → logprob: -2.812464952468872
    3. ' max' → logprob: -8.062464714050293
    4. 'op' → logprob: -8.812464714050293
    5. 'lambda' → logprob: -11.562464714050293
    6. 'fun' → logprob: -11.687464714050293
    7. '   ' → logprob: -12.187464714050293
    8. ' operator' → logprob: -12.312464714050293
    9. '	max' → logprob: -13.812464714050293
    10. 'min' → logprob: -14.062464714050293

Token 142: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -9.019237768370658e-05
    2. 'seg' → logprob: -9.625090599060059
    3. '(' → logprob: -10.750090599060059
    4. '   ' → logprob: -13.875090599060059
    5. '(
' → logprob: -14.000090599060059
    6. ')' → logprob: -15.375090599060059
    7. '(se' → logprob: -15.625090599060059
    8. '  ' → logprob: -15.625090599060059
    9. ' seg' → logprob: -16.500089645385742
    10. ' ' → logprob: -16.750089645385742

Token 143: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.1424973713001236e-05
    2. 'max' → logprob: -10.375031471252441
    3. '
' → logprob: -17.375030517578125
    4. '_MAX' → logprob: -17.625030517578125
    5. 'n' → logprob: -18.125030517578125
    6. 'a' → logprob: -18.250030517578125
    7. 'r' → logprob: -18.375030517578125
    8. '[' → logprob: -18.500030517578125
    9. 'Max' → logprob: -18.500030517578125
    10. 'ax' → logprob: -18.625030517578125

Token 144: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38694527745246887
    2. '[' → logprob: -1.1369452476501465
    3. 'i' → logprob: -9.761945724487305
    4. '2' → logprob: -11.136945724487305
    5. '(i' → logprob: -13.511945724487305
    6. '(' → logprob: -14.886945724487305
    7. '   ' → logprob: -15.761945724487305
    8. '[(' → logprob: -15.886945724487305
    9. ' ' → logprob: -16.511945724487305
    10. '  ' → logprob: -18.386945724487305

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08906783163547516
    2. 'i' → logprob: -2.4640679359436035
    3. '[' → logprob: -10.089067459106445
    4. '[i' → logprob: -10.214067459106445
    5. '(i' → logprob: -11.214067459106445
    6. '(' → logprob: -11.339067459106445
    7. ' i' → logprob: -11.589067459106445
    8. '   ' → logprob: -11.839067459106445
    9. ' ' → logprob: -11.964067459106445
    10. '  ' → logprob: -14.089067459106445

Token 146: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.011160303838551044
    2. 'i' → logprob: -4.511160373687744
    3. ' *' → logprob: -9.636159896850586
    4. '*' → logprob: -10.011159896850586
    5. ' i' → logprob: -13.386159896850586
    6. '
' → logprob: -15.011159896850586
    7. '[i' → logprob: -15.386159896850586
    8. '```' → logprob: -16.761159896850586
    9. '	i' → logprob: -17.761159896850586
    10. ' ' → logprob: -17.886159896850586

Token 147: '+' (ID: 10)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -4.990154047845863e-05
    2. ' ],' → logprob: -10.250049591064453
    3. ']' → logprob: -12.000049591064453
    4. '],
' → logprob: -12.500049591064453
    5. '   ' → logprob: -13.250049591064453
    6. ' ' → logprob: -13.375049591064453
    7. ',' → logprob: -14.500049591064453
    8. '+' → logprob: -15.125049591064453
    9. 'i' → logprob: -15.625049591064453
    10. '  ' → logprob: -16.625049591064453

Token 148: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6284555792808533
    2. 'i' → logprob: -1.128455638885498
    3. '1' → logprob: -2.128455638885498
    4. '2' → logprob: -4.253455638885498
    5. ' ' → logprob: -5.253455638885498
    6. '],' → logprob: -6.378455638885498
    7. '   ' → logprob: -6.628455638885498
    8. '  ' → logprob: -7.628455638885498
    9. ']' → logprob: -7.878455638885498
    10. ' i' → logprob: -8.87845516204834

Token 149: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01341914851218462
    2. ',' → logprob: -4.513419151306152
    3. ' ],' → logprob: -6.138419151306152
    4. ' ,' → logprob: -8.763419151306152
    5. ']' → logprob: -10.763419151306152
    6. ' ' → logprob: -11.013419151306152
    7. '],
' → logprob: -12.013419151306152
    8. '),' → logprob: -13.013419151306152
    9. '   ' → logprob: -13.513419151306152
    10. 'i' → logprob: -14.138419151306152

Token 150: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.1129082441329956
    2. ' seg' → logprob: -2.237908363342285
    3. '  ' → logprob: -10.237908363342285
    4. ' ' → logprob: -10.862908363342285
    5. '   ' → logprob: -11.237908363342285
    6. '(seg' → logprob: -11.862908363342285
    7. '    ' → logprob: -12.487908363342285
    8. 'se' → logprob: -13.737908363342285
    9. 'sig' → logprob: -14.362908363342285
    10. '      ' → logprob: -14.362908363342285

Token 151: '_max' (ID: 13731)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.024342399090528488
    2. '[' → logprob: -4.2743425369262695
    3. 'max' → logprob: -5.2743425369262695
    4. '_max' → logprob: -5.3993425369262695
    5. 'i' → logprob: -8.64934253692627
    6. '[i' → logprob: -8.89934253692627
    7. 'seg' → logprob: -10.02434253692627
    8. ' ' → logprob: -10.77434253692627
    9. 's' → logprob: -11.14934253692627
    10. 'x' → logprob: -11.27434253692627

Token 152: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.282850980758667
    2. '[' → logprob: -1.407850980758667
    3. ' ' → logprob: -7.657851219177246
    4. '[i' → logprob: -7.657851219177246
    5. '(' → logprob: -8.157851219177246
    6. 'i' → logprob: -8.407851219177246
    7. '   ' → logprob: -9.032851219177246
    8. ' [' → logprob: -10.282851219177246
    9. '
' → logprob: -10.782851219177246
    10. '  ' → logprob: -10.782851219177246

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012086842907592654
    2. 'i' → logprob: -6.751208782196045
    3. ' ' → logprob: -10.251208305358887
    4. '   ' → logprob: -13.876208305358887
    5. '  ' → logprob: -14.376208305358887
    6. ' i' → logprob: -14.751208305358887
    7. '(i' → logprob: -14.751208305358887
    8. '(' → logprob: -15.126208305358887
    9. '0' → logprob: -15.751208305358887
    10. '```' → logprob: -16.001209259033203

Token 154: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.16036385297775269
    2. 'i' → logprob: -1.9103639125823975
    3. '*' → logprob: -9.410364151000977
    4. '])' → logprob: -9.910364151000977
    5. ' i' → logprob: -12.660364151000977
    6. '_i' → logprob: -13.160364151000977
    7. '[i' → logprob: -13.785364151000977
    8. ' *' → logprob: -14.785364151000977
    9. ']),' → logprob: -15.160364151000977
    10. '(i' → logprob: -15.660364151000977

Token 155: '+' (ID: 10)
  Prédit: ']),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.009039720520377159
    2. '])' → logprob: -5.509039878845215
    3. ' ' → logprob: -6.509039878845215
    4. '])),' → logprob: -6.759039878845215
    5. ']' → logprob: -6.884039878845215
    6. '2' → logprob: -7.884039878845215
    7. '   ' → logprob: -8.009039878845215
    8. ']),
' → logprob: -8.134039878845215
    9. ' ]' → logprob: -9.759039878845215
    10. ']))' → logprob: -10.009039878845215

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6628655195236206
    2. '0' → logprob: -1.5378655195236206
    3. 'i' → logprob: -1.9128655195236206
    4. '])' → logprob: -2.41286563873291
    5. '1' → logprob: -3.66286563873291
    6. ' ' → logprob: -6.16286563873291
    7. ')' → logprob: -6.66286563873291
    8. ')])' → logprob: -7.16286563873291
    9. 'None' → logprob: -7.66286563873291
    10. ']))' → logprob: -7.91286563873291

Token 157: ']))' (ID: 20259)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.08507106453180313
    2. ' ' → logprob: -3.210071086883545
    3. '))' → logprob: -3.335071086883545
    4. ')' → logprob: -5.585071086883545
    5. '))
' → logprob: -7.335071086883545
    6. ')),
' → logprob: -7.710071086883545
    7. '))),' → logprob: -8.585070610046387
    8. ')
' → logprob: -9.335070610046387
    9. ' ))' → logprob: -9.585070610046387
    10. ']),' → logprob: -9.585070610046387

Token 158: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007192696910351515
    2. ' ,' → logprob: -5.007192611694336
    3. '   ' → logprob: -8.757192611694336
    4. ',
' → logprob: -9.257192611694336
    5. ' ' → logprob: -10.132192611694336
    6. '),' → logprob: -10.257192611694336
    7. ' for' → logprob: -10.382192611694336
    8. ')' → logprob: -10.382192611694336
    9. ' range' → logprob: -10.757192611694336
    10. ',i' → logprob: -11.007192611694336

Token 159: ' _,' (ID: 18042)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32067012786865234
    2. ' i' → logprob: -1.4456701278686523
    3. '0' → logprob: -4.070670127868652
    4. ' ' → logprob: -4.820670127868652
    5. 'None' → logprob: -5.070670127868652
    6. ' None' → logprob: -5.195670127868652
    7. '1' → logprob: -6.945670127868652
    8. '(i' → logprob: -8.320670127868652
    9. ' seg' → logprob: -8.695670127868652
    10. 'True' → logprob: -9.320670127868652

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33253344893455505
    2. 're' → logprob: -1.4575334787368774
    3. ' range' → logprob: -3.457533359527588
    4. ' reversed' → logprob: -4.207533359527588
    5. 'reverse' → logprob: -6.332533359527588
    6. '   ' → logprob: -6.957533359527588
    7. '  ' → logprob: -8.207533836364746
    8. '    ' → logprob: -8.582533836364746
    9. ' ' → logprob: -8.707533836364746
    10. 'num' → logprob: -8.957533836364746

Token 161: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -1.2948405128554441e-05
    2. 'num' → logprob: -11.37501335144043
    3. '(' → logprob: -14.00001335144043
    4. ' (' → logprob: -15.25001335144043
    5. ' num' → logprob: -15.87501335144043
    6. '(n' → logprob: -16.25001335144043
    7. '((' → logprob: -17.25001335144043
    8. ',num' → logprob: -18.25001335144043
    9. ' ' → logprob: -18.50001335144043
    10. '	num' → logprob: -18.62501335144043

Token 162: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00019042797794099897
    2. 'max' → logprob: -8.625190734863281
    3. '_num' → logprob: -11.750190734863281
    4. '-' → logprob: -13.625190734863281
    5. ' -' → logprob: -14.750190734863281
    6. '//' → logprob: -15.125190734863281
    7. 's' → logprob: -15.500190734863281
    8. '_MAX' → logprob: -15.750190734863281
    9. '_' → logprob: -16.50019073486328
    10. '-max' → logprob: -16.50019073486328

Token 163: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2017480581998825
    2. ' -' → logprob: -1.701748013496399
    3. '-num' → logprob: -8.20174789428711
    4. ' ' → logprob: -10.32674789428711
    5. 'num' → logprob: -11.32674789428711
    6. '[num' → logprob: -11.70174789428711
    7. '   ' → logprob: -13.32674789428711
    8. '  ' → logprob: -13.57674789428711
    9. ' num' → logprob: -13.57674789428711
    10. '-n' → logprob: -13.82674789428711

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00044008632539771497
    2. '1' → logprob: -7.7504401206970215
    3. ' ' → logprob: -11.750439643859863
    4. '
' → logprob: -14.500439643859863
    5. '3' → logprob: -14.875439643859863
    6. '   ' → logprob: -14.875439643859863
    7. '  ' → logprob: -15.750439643859863
    8. '```' → logprob: -16.62544059753418
    9. '-' → logprob: -17.12544059753418
    10. '

' → logprob: -17.81294059753418

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019626514986157417
    2. ',-' → logprob: -7.001962661743164
    3. ' ,' → logprob: -7.501962661743164
    4. '-' → logprob: -7.751962661743164
    5. ' -' → logprob: -10.501962661743164
    6. '1' → logprob: -10.876962661743164
    7. '   ' → logprob: -11.501962661743164
    8. ' ,-' → logprob: -12.876962661743164
    9. '    ' → logprob: -13.001962661743164
    10. '     ' → logprob: -13.376962661743164

Token 166: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08109432458877563
    2. ' -' → logprob: -2.581094264984131
    3. 'num' → logprob: -6.706094264984131
    4. '-num' → logprob: -7.331094264984131
    5. ' num' → logprob: -8.581094741821289
    6. '   ' → logprob: -9.831094741821289
    7. '  ' → logprob: -10.331094741821289
    8. '    ' → logprob: -10.581094741821289
    9. ' ' → logprob: -11.081094741821289
    10. '     ' → logprob: -12.831094741821289

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.111979357432574e-05
    2. ' ' → logprob: -9.75007152557373
    3. '   ' → logprob: -12.25007152557373
    4. '2' → logprob: -12.50007152557373
    5. '    ' → logprob: -14.00007152557373
    6. '```' → logprob: -14.25007152557373
    7. '  ' → logprob: -14.37507152557373
    8. '
' → logprob: -15.00007152557373
    9. '     ' → logprob: -15.43757152557373
    10. ',' → logprob: -15.62507152557373

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035388940013945103
    2. ',-' → logprob: -6.253539085388184
    3. '-' → logprob: -6.628539085388184
    4. ' ,' → logprob: -8.503539085388184
    5. ' -' → logprob: -10.003539085388184
    6. '   ' → logprob: -10.753539085388184
    7. '1' → logprob: -12.253539085388184
    8. '```' → logprob: -12.503539085388184
    9. '  ' → logprob: -13.003539085388184
    10. ' ,-' → logprob: -13.628539085388184

Token 169: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008615399710834026
    2. ' -' → logprob: -4.758615493774414
    3. ' ' → logprob: -14.758615493774414
    4. '   ' → logprob: -15.883615493774414
    5. '<|end|>' → logprob: -16.383615493774414
    6. ')' → logprob: -16.633615493774414
    7. '-step' → logprob: -16.633615493774414
    8. '  ' → logprob: -16.758615493774414
    9. '1' → logprob: -16.883615493774414
    10. '```' → logprob: -17.383615493774414

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -18.875
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. ')' → logprob: -19.25
    7. '2' → logprob: -19.75
    8. '  ' → logprob: -20.0625
    9. '１' → logprob: -20.375
    10. '۱' → logprob: -20.6875

Token 171: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003100791363976896
    2. ')' → logprob: -8.625309944152832
    3. ',' → logprob: -9.875309944152832
    4. ')):' → logprob: -10.500309944152832
    5. ' ))' → logprob: -10.875309944152832
    6. ')))' → logprob: -11.375309944152832
    7. '),' → logprob: -11.625309944152832
    8. '))
' → logprob: -11.750309944152832
    9. '));' → logprob: -13.125309944152832
    10. '):' → logprob: -14.625309944152832

Token 172: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.14270707964897156
    2. '0' → logprob: -2.517707109451294
    3. ' None' → logprob: -3.142707109451294
    4. '-' → logprob: -4.767706871032715
    5. ' ' → logprob: -7.892706871032715
    6. ' -' → logprob: -8.392706871032715
    7. '   ' → logprob: -10.267706871032715
    8. 'True' → logprob: -10.892706871032715
    9. '1' → logprob: -11.642706871032715
    10. '  ' → logprob: -12.142706871032715

Token 173: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759950876235962
    2. ')' → logprob: -0.8259950876235962
    3. ')
' → logprob: -10.450995445251465
    4. ')))' → logprob: -11.325995445251465
    5. '))
' → logprob: -11.450995445251465
    6. '   ' → logprob: -13.950995445251465
    7. ' ))' → logprob: -14.200995445251465
    8. ' )' → logprob: -14.325995445251465
    9. '));' → logprob: -15.075995445251465
    10. ')>' → logprob: -15.200995445251465

Token 174: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06409529596567154
    2. '<|end|>' → logprob: -3.0640952587127686
    3. ':' → logprob: -4.689095497131348
    4. '
' → logprob: -6.064095497131348
    5. '):' → logprob: -6.314095497131348
    6. 'def' → logprob: -7.814095497131348
    7. '(' → logprob: -8.064095497131348
    8. ',' → logprob: -8.439095497131348
    9. '<|end|>' → logprob: -8.564095497131348
    10. ' ' → logprob: -8.689095497131348

Token 175: ' Update' (ID: 9152)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07117351144552231
    2. ')' → logprob: -3.8211734294891357
    3. 'arr' → logprob: -4.321173667907715
    4. 'max' → logprob: -4.946173667907715
    5. '#' → logprob: -5.071173667907715
    6. 'a' → logprob: -5.446173667907715
    7. 'd' → logprob: -5.946173667907715
    8. 'dp' → logprob: -6.196173667907715
    9. 'data' → logprob: -6.571173667907715
    10. 'seg' → logprob: -6.696173667907715

Token 176: ' with' (ID: 483)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.35820499062538147
    2. 'def' → logprob: -1.233204960823059
    3. 'max' → logprob: -4.9832048416137695
    4. '(' → logprob: -6.8582048416137695
    5. '_seg' → logprob: -7.2332048416137695
    6. '(seg' → logprob: -7.6082048416137695
    7. '(max' → logprob: -8.85820484161377
    8. 'seg' → logprob: -9.60820484161377
    9. '_' → logprob: -9.73320484161377
    10. '(i' → logprob: -9.85820484161377

Token 177: ' self' (ID: 1051)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4802173674106598
    2. 'idx' → logprob: -1.3552173376083374
    3. 'index' → logprob: -2.730217456817627
    4. 'i' → logprob: -4.105217456817627
    5. 'def' → logprob: -4.230217456817627
    6. 'p' → logprob: -4.730217456817627
    7. ' idx' → logprob: -5.355217456817627
    8. 'seg' → logprob: -5.855217456817627
    9. ' index' → logprob: -6.105217456817627
    10. ' i' → logprob: -6.730217456817627

Token 178: '-cl' (ID: 29640)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2404404729604721
    2. '(seg' → logprob: -2.8654403686523438
    3. '(idx' → logprob: -2.8654403686523438
    4. 'max' → logprob: -3.6154403686523438
    5. '(' → logprob: -3.8654403686523438
    6. 'def' → logprob: -4.490440368652344
    7. 'seg' → logprob: -4.490440368652344
    8. '_max' → logprob: -4.615440368652344
    9. '[i' → logprob: -6.115440368652344
    10. '(pos' → logprob: -6.365440368652344

Token 179: 'osing' (ID: 10819)
  Prédit: 'ose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.84990394115448
    2. 'ass' → logprob: -1.09990394115448
    3. 'ear' → logprob: -2.3499040603637695
    4. 'osure' → logprob: -2.4749040603637695
    5. 'osing' → logprob: -3.9749040603637695
    6. 'os' → logprob: -5.2249040603637695
    7. 'assic' → logprob: -5.2249040603637695
    8. 'r' → logprob: -5.3499040603637695
    9. 'osed' → logprob: -5.4749040603637695
    10. '```' → logprob: -5.7249040603637695

Token 180: ' loop' (ID: 11453)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6102360486984253
    2. '(i' → logprob: -2.110236167907715
    3. '_max' → logprob: -2.235236167907715
    4. ' def' → logprob: -2.610236167907715
    5. '(' → logprob: -2.860236167907715
    6. '(node' → logprob: -3.735236167907715
    7. '(t' → logprob: -4.360236167907715
    8. '(seg' → logprob: -4.485236167907715
    9. '_seg' → logprob: -4.735236167907715
    10. ')' → logprob: -4.860236167907715

Token 181: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00046928023220971227
    2. '
' → logprob: -8.875469207763672
    3. '(i' → logprob: -9.000469207763672
    4. ' def' → logprob: -9.375469207763672
    5. '```' → logprob: -10.125469207763672
    6. ':' → logprob: -10.625469207763672
    7. '(t' → logprob: -11.625469207763672
    8. '(n' → logprob: -11.625469207763672
    9. '(' → logprob: -11.625469207763672
    10. ')
' → logprob: -12.250469207763672

Token 182: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005408813012763858
    2. ' def' → logprob: -7.625540733337402
    3. '
' → logprob: -10.375540733337402
    4. '```' → logprob: -11.625540733337402
    5. ' 
' → logprob: -13.125540733337402
    6. 'ndef' → logprob: -13.500540733337402
    7. '  
' → logprob: -13.750540733337402
    8. '(n' → logprob: -13.750540733337402
    9. '(def' → logprob: -14.000540733337402
    10. '(' → logprob: -14.250540733337402

Token 183: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.045467063784599304
    2. ' update' → logprob: -3.6704671382904053
    3. 'upd' → logprob: -4.545466899871826
    4. 'seg' → logprob: -5.420466899871826
    5. ' seg' → logprob: -6.670466899871826
    6. 'set' → logprob: -7.545466899871826
    7. 'max' → logprob: -7.670466899871826
    8. 'modify' → logprob: -7.920466899871826
    9. 'point' → logprob: -8.045467376708984
    10. 'add' → logprob: -8.670467376708984

Token 184: '_max' (ID: 13731)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1107368469238281
    2. '(pos' → logprob: -1.1107368469238281
    3. '(idx' → logprob: -1.1107368469238281
    4. '(index' → logprob: -4.985736846923828
    5. '(seg' → logprob: -6.485736846923828
    6. '(k' → logprob: -6.610736846923828
    7. '_max' → logprob: -6.985736846923828
    8. ' (' → logprob: -7.735736846923828
    9. '(p' → logprob: -7.860736846923828
    10. 'max' → logprob: -8.985736846923828

Token 185: '(k' (ID: 12125)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.7151733636856079
    2. '(i' → logprob: -0.9651733636856079
    3. '(idx' → logprob: -2.4651732444763184
    4. '(p' → logprob: -3.2151732444763184
    5. '(k' → logprob: -5.465173244476318
    6. '(index' → logprob: -7.590173244476318
    7. ' (' → logprob: -10.715173721313477
    8. '(a' → logprob: -10.715173721313477
    9. '(ix' → logprob: -11.215173721313477
    10. '(' → logprob: -11.715173721313477

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005137138650752604
    2. ' ,' → logprob: -7.875513553619385
    3. ',value' → logprob: -9.625514030456543
    4. ',v' → logprob: -10.125514030456543
    5. ',val' → logprob: -10.875514030456543
    6. 'value' → logprob: -13.000514030456543
    7. ',x' → logprob: -13.375514030456543
    8. 'v' → logprob: -13.375514030456543
    9. ' ' → logprob: -13.625514030456543
    10. ',k' → logprob: -14.500514030456543

Token 187: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00190472393296659
    2. 'v' → logprob: -7.001904487609863
    3. ' x' → logprob: -7.626904487609863
    4. 'val' → logprob: -7.751904487609863
    5. 'a' → logprob: -9.876904487609863
    6. 'value' → logprob: -11.251904487609863
    7. ' ' → logprob: -11.876904487609863
    8. '   ' → logprob: -13.251904487609863
    9. ' v' → logprob: -13.876904487609863
    10. ' val' → logprob: -14.251904487609863

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009821967221796513
    2. '):
' → logprob: -4.634821891784668
    3. '):
' → logprob: -10.259821891784668
    4. ' ):' → logprob: -11.134821891784668
    5. ')' → logprob: -11.259821891784668
    6. ',' → logprob: -13.134821891784668
    7. ':' → logprob: -14.634821891784668
    8. '):

' → logprob: -14.759821891784668
    9. '   ' → logprob: -14.884821891784668
    10. ' ' → logprob: -16.259822845458984

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38962334394454956
    2. 'k' → logprob: -1.3896234035491943
    3. ' k' → logprob: -2.6396234035491943
    4. '	k' → logprob: -6.889623165130615
    5. 'seg' → logprob: -7.264623165130615
    6. ' seg' → logprob: -8.014623641967773
    7. '```' → logprob: -10.764623641967773
    8. ' ' → logprob: -10.764623641967773
    9. '  ' → logprob: -11.639623641967773
    10. '   ' → logprob: -12.014623641967773

Token 190: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.00023727134976070374
    2. '   ' → logprob: -8.375237464904785
    3. 'seg' → logprob: -12.125237464904785
    4. ' k' → logprob: -14.500237464904785
    5. '	k' → logprob: -15.125237464904785
    6. 'pos' → logprob: -15.500237464904785
    7. '
' → logprob: -16.12523651123047
    8. '```' → logprob: -17.00023651123047
    9. '    
' → logprob: -17.50023651123047
    10. '  ' → logprob: -17.62523651123047

Token 191: '0' (ID: 15)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0736846774816513
    2. '=' → logprob: -3.0736846923828125
    3. ' +=' → logprob: -3.6986846923828125
    4. ' =' → logprob: -10.698684692382812
    5. '-=' → logprob: -13.323684692382812
    6. '+' → logprob: -13.323684692382812
    7. '+=(' → logprob: -13.823684692382812
    8. '   ' → logprob: -14.323684692382812
    9. '=k' → logprob: -14.823684692382812
    10. ']+=' → logprob: -15.323684692382812

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07170869410037994
    2. ' =' → logprob: -3.6967086791992188
    3. '+=' → logprob: -3.6967086791992188
    4. '=k' → logprob: -4.321708679199219
    5. ' +=' → logprob: -5.071708679199219
    6. '-=' → logprob: -11.571708679199219
    7. '=int' → logprob: -12.196708679199219
    8. '=
' → logprob: -12.196708679199219
    9. 'k' → logprob: -12.321708679199219
    10. '+k' → logprob: -12.696708679199219

Token 193: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9027791495318525e-05
    2. ' k' → logprob: -10.875019073486328
    3. '	k' → logprob: -19.500019073486328
    4. '   ' → logprob: -20.375019073486328
    5. '(k' → logprob: -20.750019073486328
    6. '{k' → logprob: -21.125019073486328
    7. 'kx' → logprob: -21.500019073486328
    8. ' ' → logprob: -21.625019073486328
    9. '[k' → logprob: -22.500019073486328
    10. '_k' → logprob: -22.500019073486328

Token 194: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23963798582553864
    2. ' +' → logprob: -1.6146379709243774
    3. '+k' → logprob: -4.739637851715088
    4. '+=' → logprob: -5.614637851715088
    5. ' +=' → logprob: -7.364637851715088
    6. '   ' → logprob: -7.864637851715088
    7. '+n' → logprob: -7.864637851715088
    8. '+
' → logprob: -9.114638328552246
    9. '=' → logprob: -9.364638328552246
    10. '
' → logprob: -9.614638328552246

Token 195: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00020461321400944144
    2. ' num' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.375205039978027
    4. '(num' → logprob: -14.875205039978027
    5. ' ' → logprob: -17.37520408630371
    6. '	num' → logprob: -17.50020408630371
    7. '[num' → logprob: -17.75020408630371
    8. '
' → logprob: -18.62520408630371
    9. '<num' → logprob: -18.62520408630371
    10. 'n' → logprob: -19.00020408630371

Token 196: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.008615042082965374
    2. 'max' → logprob: -4.758615016937256
    3. '_MAX' → logprob: -16.008615493774414
    4. '0' → logprob: -16.008615493774414
    5. '_num' → logprob: -16.133615493774414
    6. ' max' → logprob: -17.008615493774414
    7. 'Max' → logprob: -17.133615493774414
    8. 'maks' → logprob: -17.508615493774414
    9. 'maxlength' → logprob: -17.883615493774414
    10. '-max' → logprob: -18.133615493774414

Token 197: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004635422490537167
    2. ' -' → logprob: -5.379635334014893
    3. '   ' → logprob: -11.12963581085205
    4. ' ' → logprob: -14.87963581085205
    5. '
' → logprob: -16.504634857177734
    6. '[' → logprob: -17.254634857177734
    7. '  ' → logprob: -17.754634857177734
    8. '1' → logprob: -18.004634857177734
    9. '0' → logprob: -18.129634857177734
    10. '−' → logprob: -19.254634857177734

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -17.500001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '```' → logprob: -18.125001907348633
    6. '
' → logprob: -18.375001907348633
    7. '<|end|>' → logprob: -18.750001907348633
    8. '１' → logprob: -20.750001907348633
    9. '۱' → logprob: -21.062501907348633
    10. '[' → logprob: -21.312501907348633

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. '<|end|>' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. '
' → logprob: -19.75
    8. '۱' → logprob: -20.125
    9. '2' → logprob: -20.5
    10. '0' → logprob: -20.5

Token 200: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7085009813308716
    2. '
' → logprob: -1.2085009813308716
    3. 'seg' → logprob: -1.5835009813308716
    4. ' seg' → logprob: -6.208500862121582
    5. '    
' → logprob: -7.458500862121582
    6. '
' → logprob: -8.333500862121582
    7. ')
' → logprob: -8.583500862121582
    8. '(seg' → logprob: -8.708500862121582
    9. '  
' → logprob: -9.208500862121582
    10. '\n' → logprob: -9.583500862121582

Token 201: '   ' (ID: 271)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.17176255583763123
    2. '   ' → logprob: -1.9217625856399536
    3. ' seg' → logprob: -4.546762466430664
    4. '
' → logprob: -7.796762466430664
    5. '(seg' → logprob: -8.296762466430664
    6. '    
' → logprob: -9.296762466430664
    7. '  
' → logprob: -11.046762466430664
    8. ' 
' → logprob: -11.421762466430664
    9. ',' → logprob: -11.546762466430664
    10. ' ' → logprob: -11.796762466430664

Token 202: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -9.73446003627032e-05
    2. '   ' → logprob: -9.250097274780273
    3. ' seg' → logprob: -14.250097274780273
    4. 'while' → logprob: -15.750097274780273
    5. '(seg' → logprob: -15.750097274780273
    6. '    
' → logprob: -17.125097274780273
    7. '```' → logprob: -17.375097274780273
    8. 'sz' → logprob: -17.875097274780273
    9. 'segment' → logprob: -18.000097274780273
    10. 'sek' → logprob: -18.875097274780273

Token 203: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.2113979209971149e-05
    2. 'max' → logprob: -11.375012397766113
    3. '[max' → logprob: -15.125012397766113
    4. '_MAX' → logprob: -15.500012397766113
    5. '   ' → logprob: -17.500011444091797
    6. '[' → logprob: -17.625011444091797
    7. '	max' → logprob: -17.750011444091797
    8. 'maks' → logprob: -17.750011444091797
    9. ' max' → logprob: -18.500011444091797
    10. 'Max' → logprob: -18.625011444091797

Token 204: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.625003814697266
    3. '[q' → logprob: -15.625003814697266
    4. '[v' → logprob: -16.125003814697266
    5. '[key' → logprob: -16.500003814697266
    6. '[c' → logprob: -16.875003814697266
    7. ' =' → logprob: -17.125003814697266
    8. '=' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.625003814697266
    10. 'k' → logprob: -17.625003814697266

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000365259445970878
    2. 'k' → logprob: -9.125365257263184
    3. ']' → logprob: -9.125365257263184
    4. ' =' → logprob: -10.250365257263184
    5. '=' → logprob: -10.500365257263184
    6. '=k' → logprob: -10.750365257263184
    7. ' ' → logprob: -10.875365257263184
    8. '   ' → logprob: -11.750365257263184
    9. ']=' → logprob: -12.000365257263184
    10. ' k' → logprob: -12.250365257263184

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01847006566822529
    2. ']=' → logprob: -4.643470287322998
    3. '=' → logprob: -4.768470287322998
    4. ' =' → logprob: -8.89346981048584
    5. ' ]' → logprob: -10.14346981048584
    6. ']+=' → logprob: -12.39346981048584
    7. ')' → logprob: -14.01846981048584
    8. ',' → logprob: -15.64346981048584
    9. ']
' → logprob: -15.76846981048584
    10. '   ' → logprob: -15.89346981048584

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012510117143392563
    2. ' =' → logprob: -4.387510299682617
    3. '+=' → logprob: -15.887510299682617
    4. ' ' → logprob: -16.262510299682617
    5. '=v' → logprob: -16.262510299682617
    6. ',' → logprob: -16.887510299682617
    7. '.=' → logprob: -17.512510299682617
    8. ']=' → logprob: -18.637510299682617
    9. '＝' → logprob: -19.012510299682617
    10. '   ' → logprob: -19.137510299682617

Token 208: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00015955790877342224
    2. 'max' → logprob: -9.00015926361084
    3. ' v' → logprob: -10.25015926361084
    4. ' max' → logprob: -14.25015926361084
    5. '   ' → logprob: -17.000160217285156
    6. '	v' → logprob: -18.375160217285156
    7. ' ' → logprob: -19.625160217285156
    8. '  ' → logprob: -20.250160217285156
    9. ' ' → logprob: -20.250160217285156
    10. 'mod' → logprob: -20.375160217285156

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2960977852344513
    2. '
' → logprob: -1.421097755432129
    3. ' while' → logprob: -5.046097755432129
    4. '<|end|>' → logprob: -6.046097755432129
    5. ' k' → logprob: -6.421097755432129
    6. 'while' → logprob: -6.671097755432129
    7. 'k' → logprob: -6.671097755432129
    8. '	while' → logprob: -7.546097755432129
    9. '	k' → logprob: -8.171097755432129
    10. ',k' → logprob: -8.421097755432129

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010553185129538178
    2. 'while' → logprob: -7.5010552406311035
    3. 'k' → logprob: -8.251055717468262
    4. ' while' → logprob: -8.626055717468262
    5. '
' → logprob: -10.501055717468262
    6. ' k' → logprob: -10.876055717468262
    7. '    
' → logprob: -12.001055717468262
    8. '	while' → logprob: -12.751055717468262
    9. '```' → logprob: -13.501055717468262
    10. '  ' → logprob: -13.876055717468262

Token 211: ' list' (ID: 1562)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.41289064288139343
    2. 'while' → logprob: -1.1628906726837158
    3. '   ' → logprob: -3.662890672683716
    4. ' while' → logprob: -10.787890434265137
    5. ' k' → logprob: -13.287890434265137
    6. '
' → logprob: -13.537890434265137
    7. '	while' → logprob: -14.412890434265137
    8. 'While' → logprob: -14.537890434265137
    9. '    
' → logprob: -14.537890434265137
    10. '```' → logprob: -15.412890434265137

Token 212: '(iter' (ID: 61014)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00029041420202702284
    2. '(' → logprob: -9.375290870666504
    3. '(
' → logprob: -10.000290870666504
    4. '(range' → logprob: -10.125290870666504
    5. '(iter' → logprob: -10.250290870666504
    6. '(lambda' → logprob: -10.250290870666504
    7. '(f' → logprob: -10.250290870666504
    8. 'map' → logprob: -12.125290870666504
    9. '(iterator' → logprob: -12.750290870666504
    10. '(operator' → logprob: -12.875290870666504

Token 213: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.05913291126489639
    2. '(f' → logprob: -3.9341328144073486
    3. '(
' → logprob: -4.309133052825928
    4. '(operator' → logprob: -4.309133052825928
    5. '(' → logprob: -4.934133052825928
    6. '(int' → logprob: -6.434133052825928
    7. '(range' → logprob: -7.559133052825928
    8. 'operator' → logprob: -7.934133052825928
    9. '((' → logprob: -8.05913257598877
    10. '(func' → logprob: -8.30913257598877

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01918203942477703
    2. ':update' → logprob: -4.269182205200195
    3. ' :' → logprob: -6.269182205200195
    4. ':
' → logprob: -7.269182205200195
    5. ':set' → logprob: -7.394182205200195
    6. ':void' → logprob: -8.019182205200195
    7. ':k' → logprob: -8.269182205200195
    8. '():' → logprob: -8.519182205200195
    9. '_update' → logprob: -8.894182205200195
    10. ' non' → logprob: -9.269182205200195

Token 215: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6643313765525818
    2. '(update' → logprob: -1.4143314361572266
    3. '(seg' → logprob: -2.9143314361572266
    4. '(set' → logprob: -3.4143314361572266
    5. '[' → logprob: -3.6643314361572266
    6. 'k' → logprob: -3.6643314361572266
    7. '(lambda' → logprob: -3.9143314361572266
    8. '[k' → logprob: -3.9143314361572266
    9. '(operator' → logprob: -4.039331436157227
    10. '(
' → logprob: -4.414331436157227

Token 216: '0' (ID: 15)
  Prédit: ':='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':=' → logprob: -0.5725412368774414
    2. '>>' → logprob: -2.1975412368774414
    3. ' :=' → logprob: -2.1975412368774414
    4. '=' → logprob: -3.0725412368774414
    5. '//=' → logprob: -3.5725412368774414
    6. ' =' → logprob: -3.6975412368774414
    7. '//' → logprob: -4.072541236877441
    8. '
' → logprob: -4.197541236877441
    9. '=k' → logprob: -4.447541236877441
    10. ' //' → logprob: -4.697541236877441

Token 217: ' ==' (ID: 951)
  Prédit: ':='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':=' → logprob: -0.20110072195529938
    2. ' :=' → logprob: -2.3261008262634277
    3. '=' → logprob: -2.9511008262634277
    4. ' =' → logprob: -4.701100826263428
    5. '>>' → logprob: -5.076100826263428
    6. 'and' → logprob: -5.326100826263428
    7. '=k' → logprob: -5.951100826263428
    8. '//' → logprob: -5.951100826263428
    9. '=(' → logprob: -6.076100826263428
    10. '//=' → logprob: -6.576100826263428

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016047507524490356
    2. ' ' → logprob: -4.141047477722168
    3. '   ' → logprob: -11.641047477722168
    4. '  ' → logprob: -13.266047477722168
    5. '
' → logprob: -14.766047477722168
    6. '    ' → logprob: -15.016047477722168
    7. '     ' → logprob: -15.141047477722168
    8. 'k' → logprob: -15.266047477722168
    9. ' ' → logprob: -15.266047477722168
    10. '﻿' → logprob: -16.266048431396484

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001328095211647451
    2. ' ' → logprob: -6.626327991485596
    3. '   ' → logprob: -13.876328468322754
    4. '  ' → logprob: -14.751328468322754
    5. 'k' → logprob: -15.751328468322754
    6. '     ' → logprob: -15.751328468322754
    7. '    ' → logprob: -16.376327514648438
    8. '-' → logprob: -16.376327514648438
    9. '
' → logprob: -16.751327514648438
    10. '(' → logprob: -17.063827514648438

Token 220: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6933749914169312
    2. ' or' → logprob: -0.6933749914169312
    3. ' ' → logprob: -8.943374633789062
    4. '   ' → logprob: -10.443374633789062
    5. '	or' → logprob: -10.443374633789062
    6. 'and' → logprob: -11.443374633789062
    7. '    ' → logprob: -11.693374633789062
    8. '
' → logprob: -12.443374633789062
    9. '       ' → logprob: -12.568374633789062
    10. ';' → logprob: -12.943374633789062

Token 221: ' setattr' (ID: 166554)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.5817241668701172
    2. '(set' → logprob: -1.7067241668701172
    3. '(k' → logprob: -1.8317241668701172
    4. '((' → logprob: -3.706724166870117
    5. '(se' → logprob: -4.081724166870117
    6. '[(' → logprob: -4.581724166870117
    7. '[k' → logprob: -4.831724166870117
    8. 'seg' → logprob: -4.831724166870117
    9. '[' → logprob: -5.206724166870117
    10. '(lambda' → logprob: -5.331724166870117

Token 222: '(operator' (ID: 145734)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.775939404964447
    2. 'globals' → logprob: -1.4009394645690918
    3. 'seg' → logprob: -1.7759394645690918
    4. '(k' → logprob: -2.900939464569092
    5. '(gl' → logprob: -3.900939464569092
    6. 'k' → logprob: -4.150939464569092
    7. '(' → logprob: -4.275939464569092
    8. '(sys' → logprob: -5.025939464569092
    9. '(None' → logprob: -5.775939464569092
    10. 'sys' → logprob: -5.775939464569092

Token 223: ',' (ID: 11)
  Prédit: '.attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.attr' → logprob: -0.10681797564029694
    2. ',' → logprob: -2.9818179607391357
    3. 'attr' → logprob: -4.481818199157715
    4. '.set' → logprob: -4.606818199157715
    5. '   ' → logprob: -5.356818199157715
    6. ' ' → logprob: -5.981818199157715
    7. '
' → logprob: -6.231818199157715
    8. '.im' → logprob: -6.356818199157715
    9. ',
' → logprob: -6.481818199157715
    10. '  ' → logprob: -6.606818199157715

Token 224: ' '' (ID: 461)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.46345359086990356
    2. ''' → logprob: -1.5884535312652588
    3. ''s' → logprob: -2.088453531265259
    4. '"' → logprob: -4.838453769683838
    5. '
' → logprob: -4.838453769683838
    6. 'item' → logprob: -5.338453769683838
    7. ' '' → logprob: -5.713453769683838
    8. 'truth' → logprob: -6.213453769683838
    9. '`' → logprob: -6.338453769683838
    10. '__' → logprob: -6.463453769683838

Token 225: 'flo' (ID: 174761)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6195763349533081
    2. 'item' → logprob: -1.244576334953308
    3. 'attr' → logprob: -2.4945764541625977
    4. 'set' → logprob: -4.369576454162598
    5. 'getitem' → logprob: -4.369576454162598
    6. 'index' → logprob: -4.619576454162598
    7. '__
' → logprob: -4.744576454162598
    8. 'icon' → logprob: -4.994576454162598
    9. 'method' → logprob: -4.994576454162598
    10. '
' → logprob: -5.244576454162598

Token 226: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.31444475054740906
    2. 'or' → logprob: -1.3144447803497314
    3. 'orm' → logprob: -7.939444541931152
    4. 'r' → logprob: -8.439444541931152
    5. 'ork' → logprob: -8.814444541931152
    6. 'ormap' → logprob: -9.689444541931152
    7. 'ors' → logprob: -9.814444541931152
    8. '``' → logprob: -9.939444541931152
    9. 'ok' → logprob: -10.064444541931152
    10. '```' → logprob: -10.189444541931152

Token 227: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -2.15310683415737e-05
    2. 'div' → logprob: -11.875021934509277
    3. 'v' → logprob: -12.000021934509277
    4. 'vide' → logprob: -12.750021934509277
    5. 'vision' → logprob: -13.125021934509277
    6. '_div' → logprob: -14.500021934509277
    7. 'vid' → logprob: -15.000021934509277
    8. 'i' → logprob: -15.000021934509277
    9. 'vis' → logprob: -15.000021934509277
    10. 'ivs' → logprob: -15.000021934509277

Token 228: '',' (ID: 787)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5408812165260315
    2. '=k' → logprob: -1.9158811569213867
    3. '',' → logprob: -2.0408811569213867
    4. 'k' → logprob: -2.7908811569213867
    5. '=' → logprob: -2.7908811569213867
    6. ' k' → logprob: -5.540881156921387
    7. ',k' → logprob: -6.165881156921387
    8. '__' → logprob: -6.290881156921387
    9. '_k' → logprob: -6.415881156921387
    10. '=',' → logprob: -6.540881156921387

Token 229: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5332454442977905
    2. '(lambda' → logprob: -2.03324556350708
    3. 'operator' → logprob: -2.78324556350708
    4. 'set' → logprob: -2.78324556350708
    5. 'k' → logprob: -2.90824556350708
    6. 'seg' → logprob: -3.78324556350708
    7. 'None' → logprob: -3.90824556350708
    8. '(k' → logprob: -4.28324556350708
    9. '(set' → logprob: -4.90824556350708
    10. 'update' → logprob: -5.15824556350708

Token 230: ' x' (ID: 1215)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8171133995056152
    2. 'k' → logprob: -0.9421133995056152
    3. ' setattr' → logprob: -3.1921133995056152
    4. '(k' → logprob: -3.5671133995056152
    5. ' None' → logprob: -3.8171133995056152
    6. ' k' → logprob: -3.8171133995056152
    7. '__' → logprob: -4.567113399505615
    8. ' (' → logprob: -4.692113399505615
    9. 'set' → logprob: -4.817113399505615
    10. '(' → logprob: -4.942113399505615

Token 231: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2576439082622528
    2. ' k' → logprob: -2.257643938064575
    3. ':' → logprob: -2.382643938064575
    4. '(k' → logprob: -4.132643699645996
    5. ' (' → logprob: -5.507643699645996
    6. ',' → logprob: -6.382643699645996
    7. '(' → logprob: -6.632643699645996
    8. ':k' → logprob: -6.882643699645996
    9. ',k' → logprob: -7.007643699645996
    10. ':
' → logprob: -7.382643699645996

Token 232: ' y' (ID: 342)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2934131324291229
    2. '2' → logprob: -1.9184131622314453
    3. '(k' → logprob: -3.5434131622314453
    4. '(' → logprob: -3.9184131622314453
    5. 'lambda' → logprob: -3.9184131622314453
    6. ' k' → logprob: -4.043413162231445
    7. '(lambda' → logprob: -4.918413162231445
    8. ' (' → logprob: -5.918413162231445
    9. 'operator' → logprob: -6.043413162231445
    10. '1' → logprob: -6.418413162231445

Token 233: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8496599197387695
    2. 'k' → logprob: -1.2246599197387695
    3. ' k' → logprob: -2.4746599197387695
    4. '(k' → logprob: -3.3496599197387695
    5. ' (' → logprob: -3.9746599197387695
    6. 'None' → logprob: -4.0996599197387695
    7. ',' → logprob: -4.0996599197387695
    8. ' x' → logprob: -4.3496599197387695
    9. 'x' → logprob: -4.4746599197387695
    10. '(' → logprob: -4.5996599197387695

Token 234: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.19984480738639832
    2. '(k' → logprob: -1.9498448371887207
    3. ' (' → logprob: -4.699844837188721
    4. ' k' → logprob: -4.699844837188721
    5. 'set' → logprob: -5.199844837188721
    6. 'None' → logprob: -5.449844837188721
    7. ' setattr' → logprob: -5.699844837188721
    8. '(' → logprob: -5.824844837188721
    9. '(set' → logprob: -6.824844837188721
    10. '[k' → logprob: -7.699844837188721

Token 235: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06522972881793976
    2. '(k' → logprob: -2.815229654312134
    3. ' k' → logprob: -5.940229892730713
    4. ' (' → logprob: -7.565229892730713
    5. '(' → logprob: -9.940229415893555
    6. ' ' → logprob: -11.315229415893555
    7. '   ' → logprob: -11.440229415893555
    8. '{k' → logprob: -12.190229415893555
    9. '((' → logprob: -12.502729415893555
    10. ')' → logprob: -12.565229415893555

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.763666947837919e-05
    2. 'k' → logprob: -10.50004768371582
    3. ')' → logprob: -12.37504768371582
    4. ' ' → logprob: -12.50004768371582
    5. ' k' → logprob: -13.12504768371582
    6. '1' → logprob: -13.25004768371582
    7. ' (' → logprob: -13.50004768371582
    8. '(k' → logprob: -14.06254768371582
    9. ' >>=' → logprob: -14.12504768371582
    10. '
' → logprob: -14.37504768371582

Token 237: ' :=' (ID: 3405)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2577180862426758
    2. ')' → logprob: -2.257718086242676
    3. '//' → logprob: -2.632718086242676
    4. '>>' → logprob: -3.757718086242676
    5. ' ' → logprob: -4.507718086242676
    6. ' >>' → logprob: -5.132718086242676
    7. ' )' → logprob: -5.507718086242676
    8. ')//' → logprob: -6.507718086242676
    9. '#' → logprob: -6.757718086242676
    10. ' >>=' → logprob: -8.007718086242676

Token 238: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016531286761164665
    2. '(k' → logprob: -4.141531467437744
    3. ' k' → logprob: -7.891531467437744
    4. ' (' → logprob: -9.641530990600586
    5. '(' → logprob: -10.641530990600586
    6. 'operator' → logprob: -11.516530990600586
    7. '(x' → logprob: -12.266530990600586
    8. 'x' → logprob: -12.391530990600586
    9. ' ' → logprob: -13.016530990600586
    10. '(operator' → logprob: -13.016530990600586

Token 239: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.34853431582450867
    2. '(k' → logprob: -1.223534345626831
    3. ' (' → logprob: -10.47353458404541
    4. ' k' → logprob: -10.47353458404541
    5. '(' → logprob: -11.34853458404541
    6. '(x' → logprob: -12.72353458404541
    7. ')' → logprob: -12.84853458404541
    8. '   ' → logprob: -12.84853458404541
    9. ' ' → logprob: -13.09853458404541
    10. '((' → logprob: -13.34853458404541

Token 240: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0675761699676514
    2. '0' → logprob: -1.1925761699676514
    3. '1' → logprob: -1.4425761699676514
    4. ' k' → logprob: -3.6925761699676514
    5. '__' → logprob: -3.8175761699676514
    6. ')' → logprob: -3.8175761699676514
    7. ' ' → logprob: -4.0675764083862305
    8. '(k' → logprob: -4.4425764083862305
    9. '>>' → logprob: -4.8175764083862305
    10. '//' → logprob: -5.9425764083862305

Token 241: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034869298338890076
    2. ')//' → logprob: -4.534869194030762
    3. ' )' → logprob: -4.659869194030762
    4. '>>' → logprob: -5.034869194030762
    5. ' //' → logprob: -5.659869194030762
    6. '-' → logprob: -6.784869194030762
    7. '//' → logprob: -6.784869194030762
    8. ' >>' → logprob: -7.409869194030762
    9. ' -' → logprob: -7.534869194030762
    10. ' ' → logprob: -7.909869194030762

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001875671005109325
    2. '2' → logprob: -8.750187873840332
    3. ' ' → logprob: -10.625187873840332
    4. '0' → logprob: -13.750187873840332
    5. '```' → logprob: -14.250187873840332
    6. 'k' → logprob: -14.375187873840332
    7. '__' → logprob: -14.625187873840332
    8. '(k' → logprob: -14.750187873840332
    9. 'operator' → logprob: -15.125187873840332
    10. '(' → logprob: -15.250187873840332

Token 243: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09025812149047852
    2. ')//' → logprob: -2.4652581214904785
    3. ')>>' → logprob: -6.7152581214904785
    4. '>>' → logprob: -9.59025764465332
    5. ' )' → logprob: -10.71525764465332
    6. '//' → logprob: -12.09025764465332
    7. ')#' → logprob: -12.96525764465332
    8. ')
' → logprob: -12.96525764465332
    9. '   ' → logprob: -14.21525764465332
    10. '0' → logprob: -14.34025764465332

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001246348983841017
    2. ' ' → logprob: -9.00012493133545
    3. '1' → logprob: -14.87512493133545
    4. ')' → logprob: -15.12512493133545
    5. '```' → logprob: -15.25012493133545
    6. '   ' → logprob: -17.312623977661133
    7. ']' → logprob: -17.437623977661133
    8. '3' → logprob: -17.500123977661133
    9. '7' → logprob: -17.937623977661133
    10. '=' → logprob: -18.000123977661133

Token 245: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.7468940615653992
    2. ')' → logprob: -0.8718940615653992
    3. '))),' → logprob: -2.996894121170044
    4. '))' → logprob: -3.496894121170044
    5. '),' → logprob: -3.871894121170044
    6. ')))),' → logprob: -6.371893882751465
    7. ')))' → logprob: -6.371893882751465
    8. ')
' → logprob: -6.996893882751465
    9. ')),
' → logprob: -7.246893882751465
    10. '))),
' → logprob: -7.996893882751465

Token 246: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0251175165176392
    2. 'None' → logprob: -1.9001175165176392
    3. '1' → logprob: -2.1501173973083496
    4. '))' → logprob: -2.2751173973083496
    5. '()' → logprob: -2.5251173973083496
    6. 'True' → logprob: -3.0251173973083496
    7. ' None' → logprob: -3.5251173973083496
    8. ')' → logprob: -3.6501173973083496
    9. '0' → logprob: -4.02511739730835
    10. ' True' → logprob: -4.77511739730835

Token 247: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.39435312151908875
    2. 'False' → logprob: -1.1443531513214111
    3. '1' → logprob: -5.769352912902832
    4. ' True' → logprob: -6.144352912902832
    5. '0' → logprob: -7.019352912902832
    6. 'None' → logprob: -7.269352912902832
    7. ' False' → logprob: -7.769352912902832
    8. '[]' → logprob: -9.519352912902832
    9. ' ' → logprob: -9.769352912902832
    10. ')' → logprob: -11.519352912902832

Token 248: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03444025292992592
    2. ')' → logprob: -3.409440279006958
    3. '))
' → logprob: -7.909440040588379
    4. '),' → logprob: -8.784440040588379
    5. '()))' → logprob: -8.784440040588379
    6. ')))' → logprob: -9.784440040588379
    7. ')
' → logprob: -10.409440040588379
    8. ' ))' → logprob: -12.034440040588379
    9. '));' → logprob: -12.409440040588379
    10. '()' → logprob: -12.659440040588379

Token 249: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4759213924407959
    2. ' ' → logprob: -2.225921392440796
    3. ' k' → logprob: -2.225921392440796
    4. ' 
' → logprob: -3.100921392440796
    5. '<|end|>' → logprob: -3.100921392440796
    6. ' )' → logprob: -3.725921392440796
    7. '
' → logprob: -3.975921392440796
    8. '  
' → logprob: -4.725921630859375
    9. '    ' → logprob: -5.350921630859375
    10. ')
' → logprob: -5.600921630859375

Token 250: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15656138956546783
    2. '<|end|>' → logprob: -2.2815613746643066
    3. ' k' → logprob: -4.406561374664307
    4. ' ' → logprob: -5.281561374664307
    5. ' )' → logprob: -5.281561374664307
    6. '
' → logprob: -5.406561374664307
    7. '\n' → logprob: -5.656561374664307
    8. '    ' → logprob: -5.781561374664307
    9. ' 
' → logprob: -6.031561374664307
    10. '   ' → logprob: -6.281561374664307

Token 251: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1269940435886383
    2. ' k' → logprob: -2.1269941329956055
    3. '(k' → logprob: -10.251994132995605
    4. 'True' → logprob: -11.501994132995605
    5. 'False' → logprob: -12.376994132995605
    6. ' (' → logprob: -12.501994132995605
    7. '	k' → logprob: -13.126994132995605
    8. '(' → logprob: -13.251994132995605
    9. ' True' → logprob: -13.376994132995605
    10. ' ' → logprob: -13.626994132995605

Token 252: '0' (ID: 15)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5060616135597229
    2. '0' → logprob: -1.8810615539550781
    3. '>' → logprob: -2.006061553955078
    4. ' !=' → logprob: -2.631061553955078
    5. '!=' → logprob: -4.256061553955078
    6. ' <' → logprob: -5.006061553955078
    7. ' <=' → logprob: -5.381061553955078
    8. ' >=' → logprob: -5.631061553955078
    9. '=' → logprob: -6.381061553955078
    10. '   ' → logprob: -6.756061553955078

Token 253: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3094130754470825
    2. ' >' → logprob: -1.8094130754470825
    3. '>=' → logprob: -2.934412956237793
    4. '=' → logprob: -3.309412956237793
    5. ' >=' → logprob: -5.059412956237793
    6. ':' → logprob: -5.809412956237793
    7. '!=' → logprob: -6.684412956237793
    8. '   ' → logprob: -7.434412956237793
    9. ' =' → logprob: -8.559412956237793
    10. '+=' → logprob: -8.684412956237793

Token 254: '       ' (ID: 309)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5365118384361267
    2. '       ' → logprob: -1.1615118980407715
    3. 'k' → logprob: -2.2865118980407715
    4. '   ' → logprob: -8.286511421203613
    5. 's' → logprob: -9.911511421203613
    6. '```' → logprob: -9.911511421203613
    7. '(k' → logprob: -10.161511421203613
    8. '{k' → logprob: -10.286511421203613
    9. '	k' → logprob: -10.786511421203613
    10. ',k' → logprob: -11.161511421203613

Token 255: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.2113763839006424
    2. 'seg' → logprob: -1.836376428604126
    3. '       ' → logprob: -3.836376428604126
    4. ' k' → logprob: -5.336376190185547
    5. '   ' → logprob: -6.086376190185547
    6. ' seg' → logprob: -6.336376190185547
    7. 's' → logprob: -8.211376190185547
    8. '           ' → logprob: -9.336376190185547
    9. ' ' → logprob: -10.086376190185547
    10. 'segment' → logprob: -10.148876190185547

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003712315345183015
    2. ' =' → logprob: -6.003712177276611
    3. '=' → logprob: -6.753712177276611
    4. '//=' → logprob: -10.87871265411377
    5. ' >>=' → logprob: -10.87871265411377
    6. '   ' → logprob: -11.75371265411377
    7. ' //' → logprob: -12.62871265411377
    8. ' ' → logprob: -12.62871265411377
    9. ',' → logprob: -13.00371265411377
    10. '-=' → logprob: -13.12871265411377

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08951906114816666
    2. ' =' → logprob: -2.4645190238952637
    3. '-=' → logprob: -8.714519500732422
    4. '//=' → logprob: -8.839519500732422
    5. '   ' → logprob: -8.964519500732422
    6. ':=' → logprob: -9.839519500732422
    7. ' -=' → logprob: -10.464519500732422
    8. ' ' → logprob: -10.464519500732422
    9. ' >>=' → logprob: -11.714519500732422
    10. '+=' → logprob: -11.839519500732422

Token 258: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -4.453737710718997e-05
    2. ' (' → logprob: -10.375044822692871
    3. '(' → logprob: -11.500044822692871
    4. '(seg' → logprob: -13.375044822692871
    5. '   ' → logprob: -15.000044822692871
    6. ' ' → logprob: -15.125044822692871
    7. '
' → logprob: -15.250044822692871
    8. '(K' → logprob: -15.375044822692871
    9. '((' → logprob: -15.750044822692871
    10. 'k' → logprob: -16.500043869018555

Token 259: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001503790495917201
    2. '(k' → logprob: -6.501503944396973
    3. ' k' → logprob: -14.251503944396973
    4. '   ' → logprob: -14.501503944396973
    5. ' (' → logprob: -15.876503944396973
    6. '{k' → logprob: -16.751502990722656
    7. '	k' → logprob: -16.751502990722656
    8. '(' → logprob: -17.126502990722656
    9. '[k' → logprob: -17.376502990722656
    10. ' ' → logprob: -17.501502990722656

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001394165214151144
    2. 'k' → logprob: -6.626394271850586
    3. '-' → logprob: -9.751394271850586
    4. ' k' → logprob: -12.126394271850586
    5. ' ' → logprob: -13.376394271850586
    6. '1' → logprob: -13.626394271850586
    7. ' -' → logprob: -13.751394271850586
    8. '(k' → logprob: -15.501394271850586
    9. '```' → logprob: -15.626394271850586
    10. '   ' → logprob: -15.751394271850586

Token 261: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3133769929409027
    2. ' -' → logprob: -1.313377022743225
    3. 'k' → logprob: -9.438377380371094
    4. '1' → logprob: -10.938377380371094
    5. '0' → logprob: -11.313377380371094
    6. ' k' → logprob: -13.938377380371094
    7. '-k' → logprob: -14.063377380371094
    8. ' ' → logprob: -14.063377380371094
    9. '   ' → logprob: -14.313377380371094
    10. '```' → logprob: -14.438377380371094

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.500008583068848
    4. ')' → logprob: -16.25000762939453
    5. '```' → logprob: -16.50000762939453
    6. '2' → logprob: -17.75000762939453
    7. '     ' → logprob: -18.00000762939453
    8. '       ' → logprob: -18.12500762939453
    9. '    ' → logprob: -18.43750762939453
    10. '-' → logprob: -18.56250762939453

Token 263: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.04872294142842293
    2. ')' → logprob: -3.048722982406616
    3. ')>>' → logprob: -8.923723220825195
    4. ')#' → logprob: -13.923723220825195
    5. '//' → logprob: -14.298723220825195
    6. ' )' → logprob: -14.798723220825195
    7. '   ' → logprob: -15.423723220825195
    8. '       ' → logprob: -16.298723220825195
    9. ')<<' → logprob: -16.923723220825195
    10. '>>' → logprob: -16.923723220825195

Token 264: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '```' → logprob: -18.375001907348633
    5. '۲' → logprob: -19.750001907348633
    6. '
' → logprob: -20.062501907348633
    7. 'k' → logprob: -20.062501907348633
    8. '  ' → logprob: -20.750001907348633
    9. '`' → logprob: -20.750001907348633
    10. '２' → logprob: -20.875001907348633

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002581209992058575
    2. ',' → logprob: -9.250258445739746
    3. '<|end|>' → logprob: -9.625258445739746
    4. '   ' → logprob: -10.500258445739746
    5. ')' → logprob: -10.875258445739746
    6. '
' → logprob: -11.000258445739746
    7. 'seg' → logprob: -12.125258445739746
    8. ',
' → logprob: -12.250258445739746
    9. '```' → logprob: -12.375258445739746
    10. ')
' → logprob: -12.500258445739746

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002456046058796346
    2. ',' → logprob: -9.750246047973633
    3. 'seg' → logprob: -9.750246047973633
    4. '<|end|>' → logprob: -9.750246047973633
    5. '   ' → logprob: -10.625246047973633
    6. '```' → logprob: -11.500246047973633
    7. ',
' → logprob: -11.875246047973633
    8. ')' → logprob: -12.125246047973633
    9. '        
' → logprob: -12.250246047973633
    10. '(seg' → logprob: -12.875246047973633

Token 267: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -0.013280577957630157
    2. '       ' → logprob: -4.388280391693115
    3. '   ' → logprob: -7.263280391693115
    4. ' seg' → logprob: -9.888280868530273
    5. '           ' → logprob: -11.888280868530273
    6. ' ' → logprob: -12.888280868530273
    7. '(seg' → logprob: -13.013280868530273
    8. '  ' → logprob: -13.638280868530273
    9. '     ' → logprob: -13.763280868530273
    10. 'segment' → logprob: -13.888280868530273

Token 268: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.318681188422488e-05
    2. 'max' → logprob: -11.25001335144043
    3. '_MAX' → logprob: -17.12501335144043
    4. '[max' → logprob: -18.12501335144043
    5. 'Max' → logprob: -18.75001335144043
    6. 'maks' → logprob: -18.75001335144043
    7. '	max' → logprob: -18.87501335144043
    8. '   ' → logprob: -19.00001335144043
    9. ',max' → logprob: -19.12501335144043
    10. 'amax' → logprob: -19.50001335144043

Token 269: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -12.25001049041748
    3. 'k' → logprob: -12.25001049041748
    4. '   ' → logprob: -15.12501049041748
    5. '```' → logprob: -15.62501049041748
    6. ' [' → logprob: -16.500009536743164
    7. '[s' → logprob: -17.250009536743164
    8. '[max' → logprob: -18.125009536743164
    9. '[i' → logprob: -18.250009536743164
    10. '\[' → logprob: -18.375009536743164

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.375
    3. '[' → logprob: -17.125
    4. ' ' → logprob: -18.5
    5. '۰' → logprob: -18.5
    6. 'k' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. '   ' → logprob: -19.625
    9. ')' → logprob: -19.75
    10. 'o' → logprob: -19.75

Token 271: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32931214570999146
    2. ' =' → logprob: -1.3293120861053467
    3. ']' → logprob: -4.204312324523926
    4. ']=' → logprob: -7.704312324523926
    5. '=max' → logprob: -7.829312324523926
    6. 'max' → logprob: -9.079312324523926
    7. ')' → logprob: -10.829312324523926
    8. ')=' → logprob: -12.829312324523926
    9. '>' → logprob: -13.454312324523926
    10. ' max' → logprob: -13.704312324523926

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023264696821570396
    2. ' =' → logprob: -3.7732646465301514
    3. '=max' → logprob: -10.89826488494873
    4. 'max' → logprob: -14.27326488494873
    5. '   ' → logprob: -16.398263931274414
    6. '>' → logprob: -17.398263931274414
    7. '```' → logprob: -18.648263931274414
    8. '.=' → logprob: -18.773263931274414
    9. '  ' → logprob: -18.898263931274414
    10. ']=' → logprob: -18.898263931274414

Token 273: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0206720617134124e-05
    2. ' max' → logprob: -11.50001049041748
    3. '	max' → logprob: -18.875009536743164
    4. ' ' → logprob: -19.250009536743164
    5. '   ' → logprob: -19.500009536743164
    6. 'min' → logprob: -21.750009536743164
    7. '(max' → logprob: -21.875009536743164
    8. '  ' → logprob: -22.250009536743164
    9. '[max' → logprob: -22.625009536743164
    10. 'seg' → logprob: -22.875009536743164

Token 274: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -6.630610641877865e-06
    2. 'seg' → logprob: -12.000006675720215
    3. '(' → logprob: -14.875006675720215
    4. '(
' → logprob: -17.8750057220459
    5. '(se' → logprob: -18.8750057220459
    6. '   ' → logprob: -20.2500057220459
    7. '(segment' → logprob: -20.5000057220459
    8. '(sig' → logprob: -20.5000057220459
    9. '(sec' → logprob: -20.7500057220459
    10. '(sess' → logprob: -21.0000057220459

Token 275: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0008143932209350169
    2. 'max' → logprob: -7.250814437866211
    3. '(seg' → logprob: -9.625814437866211
    4. '[' → logprob: -10.500814437866211
    5. '(' → logprob: -12.875814437866211
    6. '(max' → logprob: -13.125814437866211
    7. '_seg' → logprob: -13.375814437866211
    8. 'm' → logprob: -13.750814437866211
    9. 'Max' → logprob: -14.250814437866211
    10. 'x' → logprob: -14.625814437866211

Token 276: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '   ' → logprob: -17.375
    3. '[(' → logprob: -17.625
    4. '2' → logprob: -17.75
    5. '(' → logprob: -18.25
    6. '[k' → logprob: -18.75
    7. '(seg' → logprob: -19.75
    8. ' ' → logprob: -20.125
    9. '	' → logprob: -20.5
    10. 'seg' → logprob: -20.5

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. '2' → logprob: -12.875011444091797
    3. '```' → logprob: -13.125011444091797
    4. '[' → logprob: -13.500011444091797
    5. ' ' → logprob: -13.500011444091797
    6. '   ' → logprob: -14.375011444091797
    7. 'k' → logprob: -14.375011444091797
    8. '1' → logprob: -14.875011444091797
    9. '(' → logprob: -15.000011444091797
    10. ']' → logprob: -15.062511444091797

Token 278: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0004294771933928132
    2. ' *' → logprob: -8.000429153442383
    3. '],' → logprob: -9.500429153442383
    4. '   ' → logprob: -11.500429153442383
    5. '       ' → logprob: -12.500429153442383
    6. '2' → logprob: -13.375429153442383
    7. '1' → logprob: -13.875429153442383
    8. '<<' → logprob: -14.250429153442383
    9. ']' → logprob: -14.875429153442383
    10. '[' → logprob: -15.000429153442383

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.000012397766113
    4. '  ' → logprob: -16.50001335144043
    5. '     ' → logprob: -17.75001335144043
    6. '    ' → logprob: -17.75001335144043
    7. '```' → logprob: -18.50001335144043
    8. '       ' → logprob: -18.87501335144043
    9. '
' → logprob: -19.12501335144043
    10. '           ' → logprob: -19.37501335144043

Token 280: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.286852345103398e-05
    2. ' +' → logprob: -10.625042915344238
    3. '1' → logprob: -11.000042915344238
    4. '   ' → logprob: -13.875042915344238
    5. '2' → logprob: -14.750042915344238
    6. ' ' → logprob: -14.875042915344238
    7. '+k' → logprob: -17.375041961669922
    8. '  ' → logprob: -17.500041961669922
    9. '＋' → logprob: -18.000041961669922
    10. '0' → logprob: -18.000041961669922

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.50000286102295
    4. '+' → logprob: -15.50000286102295
    5. '0' → logprob: -15.87500286102295
    6. '
' → logprob: -15.87500286102295
    7. '    ' → logprob: -16.375001907348633
    8. '  ' → logprob: -17.000001907348633
    9. '     ' → logprob: -17.312501907348633
    10. '2' → logprob: -17.625001907348633

Token 282: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.035738684237003326
    2. ',' → logprob: -3.410738706588745
    3. ' ],' → logprob: -6.660738468170166
    4. ' ,' → logprob: -7.285738468170166
    5. '   ' → logprob: -9.285738945007324
    6. ']' → logprob: -11.785738945007324
    7. '],
' → logprob: -12.410738945007324
    8. '       ' → logprob: -12.535738945007324
    9. ' ' → logprob: -12.535738945007324
    10. '```' → logprob: -13.035738945007324

Token 283: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00019507692195475101
    2. ' seg' → logprob: -8.750195503234863
    3. '   ' → logprob: -10.500195503234863
    4. '       ' → logprob: -12.875195503234863
    5. '  ' → logprob: -13.250195503234863
    6. '           ' → logprob: -13.500195503234863
    7. '    ' → logprob: -14.500195503234863
    8. '      ' → logprob: -14.625195503234863
    9. '(seg' → logprob: -14.625195503234863
    10. '          ' → logprob: -14.750195503234863

Token 284: '_max' (ID: 13731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012550151906907558
    2. 'k' → logprob: -4.387550354003906
    3. ' k' → logprob: -10.512550354003906
    4. '[k' → logprob: -12.262550354003906
    5. '*k' → logprob: -12.762550354003906
    6. '_k' → logprob: -13.637550354003906
    7. '{k' → logprob: -14.137550354003906
    8. ' ' → logprob: -14.262550354003906
    9. '/k' → logprob: -14.387550354003906
    10. '(k' → logprob: -14.512550354003906

Token 285: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.264999121427536
    2. '0' → logprob: -2.0149991512298584
    3. 'k' → logprob: -2.3899991512298584
    4. '[' → logprob: -5.014998912811279
    5. '*k' → logprob: -7.514998912811279
    6. '   ' → logprob: -8.639999389648438
    7. '_k' → logprob: -8.764999389648438
    8. '{k' → logprob: -9.139999389648438
    9. ' k' → logprob: -9.514999389648438
    10. '	k' → logprob: -10.014999389648438

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018089536752086133
    2. '*' → logprob: -8.625181198120117
    3. ' ' → logprob: -14.750181198120117
    4. 'o' → logprob: -15.125181198120117
    5. 'k' → logprob: -15.875181198120117
    6. '   ' → logprob: -16.375181198120117
    7. '*k' → logprob: -16.375181198120117
    8. '
' → logprob: -16.500181198120117
    9. ' *' → logprob: -16.625181198120117
    10. '_' → logprob: -16.750181198120117

Token 287: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.008638797327876091
    2. '2' → logprob: -4.758638858795166
    3. '0' → logprob: -11.133638381958008
    4. 'k' → logprob: -12.008638381958008
    5. '   ' → logprob: -13.633638381958008
    6. '*k' → logprob: -14.133638381958008
    7. ' *' → logprob: -14.508638381958008
    8. '+' → logprob: -14.883638381958008
    9. '[' → logprob: -15.883638381958008
    10. ' ' → logprob: -16.133638381958008

Token 288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0802738870552275e-05
    2. ' ' → logprob: -12.12501049041748
    3. '0' → logprob: -13.37501049041748
    4. '*' → logprob: -13.62501049041748
    5. '
' → logprob: -13.87501049041748
    6. '1' → logprob: -14.50001049041748
    7. '+' → logprob: -15.00001049041748
    8. 'k' → logprob: -15.37501049041748
    9. '   ' → logprob: -15.50001049041748
    10. '  ' → logprob: -16.062511444091797

Token 289: '+' (ID: 10)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4742303192615509
    2. '+' → logprob: -0.9742302894592285
    3. ' +' → logprob: -9.099230766296387
    4. '   ' → logprob: -11.099230766296387
    5. '  ' → logprob: -11.349230766296387
    6. ' ' → logprob: -11.849230766296387
    7. '0' → logprob: -12.724230766296387
    8. '*' → logprob: -13.599230766296387
    9. '```' → logprob: -14.224230766296387
    10. ']' → logprob: -14.411730766296387

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. '0' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '
' → logprob: -14.750004768371582
    5. '   ' → logprob: -16.0625057220459
    6. '1' → logprob: -16.8125057220459
    7. '```' → logprob: -17.2500057220459
    8. '+' → logprob: -17.4375057220459
    9. '  ' → logprob: -17.5000057220459
    10. 'k' → logprob: -17.9375057220459

Token 291: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012880703434348106
    2. ')
' → logprob: -9.000128746032715
    3. ' )' → logprob: -13.000128746032715
    4. '   ' → logprob: -13.375128746032715
    5. '))' → logprob: -13.750128746032715
    6. ')
' → logprob: -15.875128746032715
    7. '])' → logprob: -16.37512969970703
    8. ')}' → logprob: -16.62512969970703
    9. ')#' → logprob: -16.87512969970703
    10. ')

' → logprob: -17.00012969970703

Token 292: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' Query' (ID: 18574)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7581707835197449
    2. '<|end|>' → logprob: -1.7581708431243896
    3. '   ' → logprob: -2.0081708431243896
    4. ')' → logprob: -2.1331708431243896
    5. '    ' → logprob: -3.5081708431243896
    6. ' )' → logprob: -3.6331708431243896
    7. ' k' → logprob: -4.5081706047058105
    8. ' ' → logprob: -5.1331706047058105
    9. '```' → logprob: -5.1331706047058105
    10. ' 
' → logprob: -5.7581706047058105

Token 294: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002695608709473163
    2. '(l' → logprob: -8.625269889831543
    3. ' def' → logprob: -10.500269889831543
    4. '(k' → logprob: -11.125269889831543
    5. 'max' → logprob: -11.250269889831543
    6. '(q' → logprob: -11.500269889831543
    7. '_max' → logprob: -11.625269889831543
    8. '(' → logprob: -12.125269889831543
    9. '(v' → logprob: -13.250269889831543
    10. '#' → logprob: -13.250269889831543

Token 295: ' heavy' (ID: 12914)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8558357357978821
    2. 'def' → logprob: -1.2308356761932373
    3. 'k' → logprob: -1.8558356761932373
    4. 'a' → logprob: -3.1058356761932373
    5. ' l' → logprob: -3.6058356761932373
    6. 'v' → logprob: -4.105835914611816
    7. 'seg' → logprob: -4.355835914611816
    8. ' def' → logprob: -5.230835914611816
    9. '(l' → logprob: -5.605835914611816
    10. 'q' → logprob: -5.730835914611816

Token 296: ' bit' (ID: 3546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09473886340856552
    2. 'l' → logprob: -2.9697389602661133
    3. ' def' → logprob: -3.4697389602661133
    4. 'lifting' → logprob: -6.594738960266113
    5. 'loop' → logprob: -7.094738960266113
    6. ' l' → logprob: -7.344738960266113
    7. 'k' → logprob: -7.344738960266113
    8. ' k' → logprob: -7.469738960266113
    9. '(l' → logprob: -7.594738960266113
    10. 'left' → logprob: -7.719738960266113

Token 297: 'wise' (ID: 7480)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.724618136882782
    2. '   ' → logprob: -2.2246181964874268
    3. ' manipulation' → logprob: -2.4746181964874268
    4. 'm' → logprob: -2.7246181964874268
    5. 's' → logprob: -3.3496181964874268
    6. 'search' → logprob: -3.7246181964874268
    7. '操作' → logprob: -3.7246181964874268
    8. 'wise' → logprob: -3.7246181964874268
    9. '  ' → logprob: -3.7246181964874268
    10. 'operation' → logprob: -3.9746181964874268

Token 298: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06337668001651764
    2. ' def' → logprob: -3.3133766651153564
    3. '(k' → logprob: -4.6883769035339355
    4. '(x' → logprob: -5.9383769035339355
    5. ' (' → logprob: -6.5633769035339355
    6. '(l' → logprob: -6.6883769035339355
    7. 'xor' → logprob: -6.8133769035339355
    8. 'operation' → logprob: -6.9383769035339355
    9. ' ' → logprob: -7.4383769035339355
    10. 'op' → logprob: -7.4383769035339355

Token 299: ' slicing' (ID: 161002)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9124387502670288
    2. 'k' → logprob: -1.0374387502670288
    3. 'def' → logprob: -1.6624387502670288
    4. ' l' → logprob: -3.9124388694763184
    5. ' k' → logprob: -4.162438869476318
    6. ' def' → logprob: -4.662438869476318
    7. 'a' → logprob: -6.162438869476318
    8. 'd' → logprob: -6.287438869476318
    9. 'v' → logprob: -7.037438869476318
    10. '(k' → logprob: -7.287438869476318

Token 300: ' tricks' (ID: 38224)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02543904073536396
    2. '(l' → logprob: -3.7754390239715576
    3. '(k' → logprob: -6.650439262390137
    4. '(q' → logprob: -7.775439262390137
    5. ' def' → logprob: -8.650439262390137
    6. 'l' → logprob: -9.400439262390137
    7. '```' → logprob: -9.650439262390137
    8. '(L' → logprob: -10.525439262390137
    9. '(s' → logprob: -10.650439262390137
    10. '(' → logprob: -10.650439262390137

Token 301: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.8889261304575484e-06
    2. ' def' → logprob: -12.625003814697266
    3. '(' → logprob: -15.250003814697266
    4. '
' → logprob: -16.000003814697266
    5. '(def' → logprob: -16.500003814697266
    6. '(
' → logprob: -17.500003814697266
    7. '```' → logprob: -18.000003814697266
    8. 'd' → logprob: -18.000003814697266
    9. '(k' → logprob: -18.125003814697266
    10. ')' → logprob: -18.875003814697266

Token 302: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.531315314830863e-06
    2. ' def' → logprob: -12.625003814697266
    3. 'd' → logprob: -16.250003814697266
    4. '
' → logprob: -17.000003814697266
    5. 'k' → logprob: -18.500003814697266
    6. '#' → logprob: -18.500003814697266
    7. '```' → logprob: -18.625003814697266
    8. 's' → logprob: -18.750003814697266
    9. '	def' → logprob: -19.000003814697266
    10. 'l' → logprob: -19.250003814697266

Token 303: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.012910902500152588
    2. 'get' → logprob: -5.137910842895508
    3. '_query' → logprob: -5.387910842895508
    4. 'max' → logprob: -6.762910842895508
    5. 'range' → logprob: -7.262910842895508
    6. ' query' → logprob: -9.262910842895508
    7. '_max' → logprob: -9.387910842895508
    8. 'prod' → logprob: -9.512910842895508
    9. 'seg' → logprob: -9.637910842895508
    10. '_get' → logprob: -10.137910842895508

Token 304: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.21249808371067047
    2. '(l' → logprob: -1.8374980688095093
    3. '(k' → logprob: -3.712498188018799
    4. 'max' → logprob: -5.212498188018799
    5. '(a' → logprob: -6.337498188018799
    6. '(' → logprob: -9.08749771118164
    7. '(left' → logprob: -9.33749771118164
    8. '(q' → logprob: -9.96249771118164
    9. '(node' → logprob: -10.08749771118164
    10. '_(' → logprob: -10.21249771118164

Token 305: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.003863735357299447
    2. '(k' → logprob: -5.75386381149292
    3. '(a' → logprob: -8.128863334655762
    4. '(L' → logprob: -8.253863334655762
    5. '(left' → logprob: -9.253863334655762
    6. '(q' → logprob: -11.503863334655762
    7. '(' → logprob: -11.753863334655762
    8. '(s' → logprob: -12.253863334655762
    9. '(p' → logprob: -12.378863334655762
    10. '(i' → logprob: -13.378863334655762

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003532198315951973
    2. ',r' → logprob: -8.00035285949707
    3. ' ,' → logprob: -11.75035285949707
    4. ',k' → logprob: -12.00035285949707
    5. ',
' → logprob: -13.12535285949707
    6. 'r' → logprob: -14.62535285949707
    7. ',int' → logprob: -15.25035285949707
    8. ',l' → logprob: -15.37535285949707
    9. ',n' → logprob: -15.62535285949707
    10. ',b' → logprob: -15.75035285949707

Token 307: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005234121344983578
    2. ' r' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.005233764648438
    4. ',' → logprob: -18.005233764648438
    5. 'k' → logprob: -19.630233764648438
    6. '	r' → logprob: -19.630233764648438
    7. ',r' → logprob: -19.880233764648438
    8. ' ' → logprob: -20.005233764648438
    9. ' ' → logprob: -20.255233764648438
    10. '  ' → logprob: -20.505233764648438

Token 308: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.060505986213684
    2. '):
' → logprob: -1.060505986213684
    3. '):' → logprob: -1.185505986213684
    4. '   ' → logprob: -7.0605058670043945
    5. ')' → logprob: -7.8105058670043945
    6. '):
' → logprob: -8.560505867004395
    7. ':' → logprob: -9.185505867004395
    8. ',k' → logprob: -9.435505867004395
    9. ' ,' → logprob: -10.310505867004395
    10. ',
' → logprob: -10.310505867004395

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0758034959435463
    2. 'l' → logprob: -2.950803518295288
    3. ' res' → logprob: -4.825803279876709
    4. 'res' → logprob: -5.200803279876709
    5. ' l' → logprob: -6.075803279876709
    6. 's' → logprob: -6.450803279876709
    7. 'r' → logprob: -6.700803279876709
    8. 'k' → logprob: -7.575803279876709
    9. 'result' → logprob: -7.575803279876709
    10. ' ' → logprob: -8.700803756713867

Token 310: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3877931237220764
    2. 'res' → logprob: -1.1377930641174316
    3. 's' → logprob: -7.512793064117432
    4. '   ' → logprob: -8.26279354095459
    5. 'r' → logprob: -10.13779354095459
    6. ' res' → logprob: -10.13779354095459
    7. 'ans' → logprob: -10.76279354095459
    8. 'result' → logprob: -11.76279354095459
    9. ' l' → logprob: -13.01279354095459
    10. 'ret' → logprob: -13.13779354095459

Token 311: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11317973583936691
    2. 'r' → logprob: -2.2381796836853027
    3. ' l' → logprob: -8.238180160522461
    4. ' r' → logprob: -9.863180160522461
    5. '   ' → logprob: -10.363180160522461
    6. '	l' → logprob: -12.488180160522461
    7. ' ' → logprob: -12.863180160522461
    8. '(l' → logprob: -14.488180160522461
    9. '	r' → logprob: -14.988180160522461
    10. '  ' → logprob: -14.988180160522461

Token 312: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0186302587389946
    2. ' <=' → logprob: -4.018630027770996
    3. '>' → logprob: -8.518630027770996
    4. ')' → logprob: -9.768630027770996
    5. '=' → logprob: -9.893630027770996
    6. '   ' → logprob: -10.018630027770996
    7. '<' → logprob: -10.018630027770996
    8. '==' → logprob: -10.518630027770996
    9. '>=' → logprob: -10.518630027770996
    10. ' >' → logprob: -12.018630027770996

Token 313: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007619291078299284
    2. ' l' → logprob: -4.882619380950928
    3. '0' → logprob: -11.50761890411377
    4. '   ' → logprob: -14.00761890411377
    5. ' ' → logprob: -14.00761890411377
    6. '1' → logprob: -14.13261890411377
    7. '    ' → logprob: -15.13261890411377
    8. '  ' → logprob: -15.88261890411377
    9. '	l' → logprob: -15.88261890411377
    10. '=' → logprob: -16.757619857788086

Token 314: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3659478425979614
    2. ':' → logprob: -1.2409478425979614
    3. ':return' → logprob: -4.740947723388672
    4. '       ' → logprob: -4.865947723388672
    5. '   ' → logprob: -7.115947723388672
    6. ' or' → logprob: -10.615947723388672
    7. 'return' → logprob: -10.740947723388672
    8. '):
' → logprob: -10.865947723388672
    9. ' :' → logprob: -11.365947723388672
    10. ' :
' → logprob: -11.490947723388672

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021895181853324175
    2. '   ' → logprob: -6.502189636230469
    3. ' return' → logprob: -7.502189636230469
    4. 'return' → logprob: -9.377189636230469
    5. '```' → logprob: -11.127189636230469
    6. ' result' → logprob: -11.252189636230469
    7. ' res' → logprob: -12.002189636230469
    8. '0' → logprob: -12.252189636230469
    9. 'result' → logprob: -12.627189636230469
    10. '	return' → logprob: -13.627189636230469

Token 316: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7460321187973022
    2. '   ' → logprob: -0.8710321187973022
    3. ' return' → logprob: -2.246032238006592
    4. '       ' → logprob: -7.371032238006592
    5. 'ide' → logprob: -7.621032238006592
    6. '0' → logprob: -9.121031761169434
    7. '    ' → logprob: -10.371031761169434
    8. ' ' → logprob: -10.496031761169434
    9. '	return' → logprob: -10.496031761169434
    10. ' ide' → logprob: -10.746031761169434

Token 317: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.00015788905147928745
    2. '0' → logprob: -9.000158309936523
    3. ' ide' → logprob: -10.875158309936523
    4. '   ' → logprob: -11.875158309936523
    5. '-' → logprob: -12.250158309936523
    6. ' ' → logprob: -13.500158309936523
    7. '  ' → logprob: -14.250158309936523
    8. 'ideal' → logprob: -14.375158309936523
    9. 'ideo' → logprob: -15.000158309936523
    10. 'id' → logprob: -16.000158309936523

Token 318: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.00011200665176147595
    2. 'ele' → logprob: -9.12511157989502
    3. 'max' → logprob: -13.25011157989502
    4. '_e' → logprob: -14.62511157989502
    5. '-ele' → logprob: -15.12511157989502
    6. 'Ele' → logprob: -15.50011157989502
    7. '_max' → logprob: -15.87511157989502
    8. '_seg' → logprob: -17.000112533569336
    9. '_elem' → logprob: -17.125112533569336
    10. '0' → logprob: -17.125112533569336

Token 319: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0011705794604495168
    2. 'max' → logprob: -6.751170635223389
    3. '0' → logprob: -15.87617015838623
    4. '_MAX' → logprob: -16.501171112060547
    5. ' max' → logprob: -16.751171112060547
    6. 'Max' → logprob: -17.751171112060547
    7. '_min' → logprob: -17.876171112060547
    8. '_' → logprob: -18.251171112060547
    9. '	max' → logprob: -18.626171112060547
    10. '```' → logprob: -18.876171112060547

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037670666351914406
    2. '
' → logprob: -5.878767013549805
    3. '    
' → logprob: -7.628767013549805
    4. '0' → logprob: -7.753767013549805
    5. '  
' → logprob: -11.753767013549805
    6. '  ' → logprob: -12.253767013549805
    7. 'return' → logprob: -12.753767013549805
    8. '
' → logprob: -12.753767013549805
    9. ',' → logprob: -12.753767013549805
    10. '1' → logprob: -12.878767013549805

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017550040036439896
    2. '    
' → logprob: -4.267549991607666
    3. '
' → logprob: -5.892549991607666
    4. '  
' → logprob: -8.767550468444824
    5. ' l' → logprob: -9.267550468444824
    6. 'l' → logprob: -9.267550468444824
    7. ' 
' → logprob: -9.267550468444824
    8. '<|end|>' → logprob: -10.267550468444824
    9. '   
' → logprob: -10.767550468444824
    10. ',' → logprob: -10.892550468444824

Token 322: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.3143394887447357
    2. 'res' → logprob: -1.314339518547058
    3. 's' → logprob: -7.314339637756348
    4. '   ' → logprob: -8.439339637756348
    5. 'ret' → logprob: -9.689339637756348
    6. 'r' → logprob: -10.064339637756348
    7. 'ans' → logprob: -10.064339637756348
    8. 'result' → logprob: -10.564339637756348
    9. ' res' → logprob: -11.439339637756348
    10. 'sm' → logprob: -13.439339637756348

Token 323: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027371009811758995
    2. ' +=' → logprob: -3.6523709297180176
    3. '=' → logprob: -7.402370929718018
    4. '+' → logprob: -7.777370929718018
    5. ' +' → logprob: -10.902371406555176
    6. '   ' → logprob: -11.902371406555176
    7. ' =' → logprob: -12.402371406555176
    8. ',' → logprob: -12.777371406555176
    9. ']+=' → logprob: -12.777371406555176
    10. '+=(' → logprob: -13.652371406555176

Token 324: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -1.0325924449716695e-05
    2. ' num' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000009536743164
    4. 'k' → logprob: -18.750009536743164
    5. '	num' → logprob: -18.875009536743164
    6. 'n' → logprob: -19.000009536743164
    7. '(num' → logprob: -19.250009536743164
    8. '[num' → logprob: -20.625009536743164
    9. '<num' → logprob: -20.625009536743164
    10. ' ' → logprob: -20.875009536743164

Token 325: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00033939589047804475
    2. 'max' → logprob: -8.00033950805664
    3. '_min' → logprob: -13.25033950805664
    4. '_num' → logprob: -13.50033950805664
    5. '_MAX' → logprob: -15.50033950805664
    6. '-max' → logprob: -16.00033950805664
    7. ' _' → logprob: -16.37533950805664
    8. '0' → logprob: -16.50033950805664
    9. '_' → logprob: -16.50033950805664
    10. 'Max' → logprob: -17.25033950805664

Token 326: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.836499985889532e-05
    2. ' -' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.500059127807617
    4. '0' → logprob: -18.750059127807617
    5. '–' → logprob: -19.125059127807617
    6. '>-' → logprob: -19.375059127807617
    7. '−' → logprob: -19.500059127807617
    8. '1' → logprob: -19.750059127807617
    9. '-=' → logprob: -20.875059127807617
    10. '-l' → logprob: -21.500059127807617

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -17.875
    4. '۱' → logprob: -18.0
    5. '１' → logprob: -18.0
    6. '```' → logprob: -18.0
    7. '
' → logprob: -18.25
    8. '0' → logprob: -18.625
    9. '2' → logprob: -20.25
    10. '১' → logprob: -20.625

Token 328: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08018551021814346
    2. '   ' → logprob: -2.5801854133605957
    3. ';' → logprob: -7.830185413360596
    4. ';r' → logprob: -7.955185413360596
    5. 'while' → logprob: -8.455185890197754
    6. '
' → logprob: -8.705185890197754
    7. '    
' → logprob: -9.455185890197754
    8. ' r' → logprob: -9.580185890197754
    9. ' 
' → logprob: -12.705185890197754
    10. ';
' → logprob: -13.205185890197754

Token 329: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06197485327720642
    2. '   ' → logprob: -2.8119747638702393
    3. ' r' → logprob: -11.93697452545166
    4. '	r' → logprob: -14.56197452545166
    5. '```' → logprob: -16.686975479125977
    6. ' ' → logprob: -17.311975479125977
    7. '       ' → logprob: -17.311975479125977
    8. '  ' → logprob: -17.436975479125977
    9. '
' → logprob: -18.436975479125977
    10. '    ' → logprob: -18.436975479125977

Token 330: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -7.584239938296378e-06
    2. ' r' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '
' → logprob: -16.87500762939453
    5. '0' → logprob: -18.00000762939453
    6. '+' → logprob: -18.12500762939453
    7. '_r' → logprob: -18.25000762939453
    8. 'res' → logprob: -19.50000762939453
    9. '```' → logprob: -19.62500762939453
    10. '    
' → logprob: -19.87500762939453

Token 331: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07900898158550262
    2. ' +=' → logprob: -2.5790090560913086
    3. '+' → logprob: -9.829009056091309
    4. '=' → logprob: -10.329009056091309
    5. '   ' → logprob: -10.829009056091309
    6. '+=(' → logprob: -12.329009056091309
    7. ' +' → logprob: -12.704009056091309
    8. ' ' → logprob: -13.329009056091309
    9. ']+=' → logprob: -13.454009056091309
    10. '    ' → logprob: -14.704009056091309

Token 332: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011049704626202583
    2. ' num' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.511049270629883
    4. '1' → logprob: -15.636049270629883
    5. '(num' → logprob: -16.636049270629883
    6. '	num' → logprob: -16.761049270629883
    7. '  ' → logprob: -17.011049270629883
    8. 'n' → logprob: -17.386049270629883
    9. '   ' → logprob: -17.761049270629883
    10. '<num' → logprob: -18.886049270629883

Token 333: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5762351751327515
    2. 'max' → logprob: -0.8262351751327515
    3. '-' → logprob: -8.201234817504883
    4. '-max' → logprob: -11.826234817504883
    5. 'Max' → logprob: -12.201234817504883
    6. '0' → logprob: -12.576234817504883
    7. '_num' → logprob: -13.326234817504883
    8. 'x' → logprob: -14.326234817504883
    9. 'm' → logprob: -14.451234817504883
    10. '_MAX' → logprob: -14.576234817504883

Token 334: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015598179015796632
    2. ' -' → logprob: -9.12515640258789
    3. '1' → logprob: -10.00015640258789
    4. '   ' → logprob: -13.75015640258789
    5. '0' → logprob: -15.62515640258789
    6. ' ' → logprob: -15.75015640258789
    7. '+' → logprob: -16.37515640258789
    8. '```' → logprob: -17.50015640258789
    9. '
' → logprob: -17.75015640258789
    10. '2' → logprob: -17.87515640258789

Token 335: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. '2' → logprob: -12.375005722045898
    3. ' ' → logprob: -14.000005722045898
    4. '0' → logprob: -14.875005722045898
    5. '-' → logprob: -16.6875057220459
    6. '۱' → logprob: -17.1250057220459
    7. '   ' → logprob: -17.5625057220459
    8. '```' → logprob: -17.6250057220459
    9. '
' → logprob: -17.7500057220459
    10. '11' → logprob: -17.8125057220459

Token 336: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7020590305328369
    2. 'res' → logprob: -0.7020590305328369
    3. 'result' → logprob: -4.952058792114258
    4. ' res' → logprob: -6.952058792114258
    5. 's' → logprob: -7.577058792114258
    6. 'ans' → logprob: -8.827058792114258
    7. '
' → logprob: -10.327058792114258
    8. '```' → logprob: -10.577058792114258
    9. '    
' → logprob: -10.702058792114258
    10. 'max' → logprob: -10.702058792114258

Token 337: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4983903169631958
    2. '   ' → logprob: -0.9983903169631958
    3. 'result' → logprob: -4.498390197753906
    4. ' res' → logprob: -4.873390197753906
    5. 's' → logprob: -5.373390197753906
    6. 'ans' → logprob: -8.623390197753906
    7. 'r' → logprob: -8.623390197753906
    8. ' result' → logprob: -9.498390197753906
    9. '
' → logprob: -10.248390197753906
    10. '    
' → logprob: -10.373390197753906

Token 338: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01659131608903408
    2. 's' → logprob: -4.141591548919678
    3. 'v' → logprob: -8.39159107208252
    4. '   ' → logprob: -8.76659107208252
    5. 'ret' → logprob: -9.64159107208252
    6. 'sm' → logprob: -10.39159107208252
    7. ' res' → logprob: -10.51659107208252
    8. 'result' → logprob: -10.51659107208252
    9. 'ans' → logprob: -11.26659107208252
    10. 'r' → logprob: -12.51659107208252

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519755959510803
    2. '=' → logprob: -1.5019755363464355
    3. ' ' → logprob: -11.251976013183594
    4. 'max' → logprob: -11.626976013183594
    5. ',' → logprob: -12.001976013183594
    6. '   ' → logprob: -12.126976013183594
    7. '_max' → logprob: -12.501976013183594
    8. '=max' → logprob: -12.626976013183594
    9. '0' → logprob: -13.001976013183594
    10. '1' → logprob: -13.501976013183594

Token 340: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.009635313414037228
    2. ' ide' → logprob: -5.1346354484558105
    3. '0' → logprob: -5.6346354484558105
    4. ' ' → logprob: -9.634634971618652
    5. '   ' → logprob: -10.509634971618652
    6. 'ideo' → logprob: -11.634634971618652
    7. '-' → logprob: -12.009634971618652
    8. '  ' → logprob: -12.759634971618652
    9. 'id' → logprob: -13.009634971618652
    10. 'ideal' → logprob: -13.009634971618652

Token 341: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.00407923199236393
    2. 'ele' → logprob: -5.504079341888428
    3. '-ele' → logprob: -15.37907886505127
    4. 'max' → logprob: -15.37907886505127
    5. '_e' → logprob: -15.50407886505127
    6. 'Ele' → logprob: -15.62907886505127
    7. '_max' → logprob: -18.004079818725586
    8. '0' → logprob: -18.129079818725586
    9. 'r' → logprob: -19.004079818725586
    10. '(ele' → logprob: -19.504079818725586

Token 342: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.002477677771821618
    2. 'max' → logprob: -6.002477645874023
    3. '0' → logprob: -14.127477645874023
    4. 'Max' → logprob: -14.377477645874023
    5. ' max' → logprob: -15.627477645874023
    6. '_MAX' → logprob: -15.627477645874023
    7. '_ele' → logprob: -16.377477645874023
    8. '	max' → logprob: -17.252477645874023
    9. 'ele' → logprob: -17.377477645874023
    10. ',max' → logprob: -17.877477645874023

Token 343: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09157126396894455
    2. '
' → logprob: -2.46657133102417
    3. ' while' → logprob: -6.59157133102417
    4. '    
' → logprob: -7.21657133102417
    5. 'while' → logprob: -8.091570854187012
    6. '	while' → logprob: -9.591570854187012
    7. '  
' → logprob: -9.966570854187012
    8. '<|end|>' → logprob: -10.091570854187012
    9. ' 
' → logprob: -10.841570854187012
    10. '```' → logprob: -12.091570854187012

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012302430346608162
    2. '
' → logprob: -4.512302398681641
    3. ' while' → logprob: -7.512302398681641
    4. 'while' → logprob: -8.01230239868164
    5. '	while' → logprob: -8.76230239868164
    6. '    
' → logprob: -8.88730239868164
    7. '<|end|>' → logprob: -10.01230239868164
    8. '```' → logprob: -10.88730239868164
    9. '  
' → logprob: -12.38730239868164
    10. '	
' → logprob: -12.88730239868164

Token 345: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10220929980278015
    2. '   ' → logprob: -2.3522093296051025
    3. ' while' → logprob: -6.352209091186523
    4. 'l' → logprob: -8.477209091186523
    5. '```' → logprob: -10.602209091186523
    6. 'r' → logprob: -11.602209091186523
    7. '	while' → logprob: -11.727209091186523
    8. '
' → logprob: -12.227209091186523
    9. 'While' → logprob: -14.227209091186523
    10. 'res' → logprob: -14.227209091186523

Token 346: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0029609426856040955
    2. ' l' → logprob: -5.877961158752441
    3. 'r' → logprob: -9.752961158752441
    4. '(l' → logprob: -9.877961158752441
    5. '   ' → logprob: -10.627961158752441
    6. 'True' → logprob: -11.252961158752441
    7. ' ' → logprob: -13.252961158752441
    8. ' (' → logprob: -13.627961158752441
    9. '1' → logprob: -13.752961158752441
    10. '	l' → logprob: -13.752961158752441

Token 347: '-l' (ID: 2887)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.09208150953054428
    2. '>' → logprob: -2.4670815467834473
    3. ' >=' → logprob: -6.217081546783447
    4. '&' → logprob: -7.467081546783447
    5. '>>' → logprob: -8.467081069946289
    6. ' >' → logprob: -9.467081069946289
    7. '   ' → logprob: -9.967081069946289
    8. '≥' → logprob: -10.092081069946289
    9. '|' → logprob: -10.342081069946289
    10. '=' → logprob: -10.467081069946289

Token 348: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22985772788524628
    2. ' >' → logprob: -1.9798576831817627
    3. '>=' → logprob: -3.2298576831817627
    4. ' >=' → logprob: -3.6048576831817627
    5. '1' → logprob: -9.104857444763184
    6. ' ' → logprob: -9.604857444763184
    7. '+' → logprob: -9.604857444763184
    8. '   ' → logprob: -10.229857444763184
    9. '<' → logprob: -10.354857444763184
    10. '>
' → logprob: -10.479857444763184

Token 349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010413920972496271
    2. ' ' → logprob: -9.875103950500488
    3. '0' → logprob: -10.375103950500488
    4. '>' → logprob: -11.750103950500488
    5. '-' → logprob: -11.875103950500488
    6. '=' → logprob: -12.750103950500488
    7. '   ' → logprob: -13.375103950500488
    8. '
' → logprob: -14.750103950500488
    9. '2' → logprob: -15.937603950500488
    10. '7' → logprob: -16.000104904174805

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000351670227246359
    2. '0' → logprob: -8.125351905822754
    3. '-' → logprob: -11.000351905822754
    4. '   ' → logprob: -11.625351905822754
    5. ' ' → logprob: -12.000351905822754
    6. '2' → logprob: -12.000351905822754
    7. '9' → logprob: -12.875351905822754
    8. '10' → logprob: -12.875351905822754
    9. '
' → logprob: -13.000351905822754
    10. '3' → logprob: -13.375351905822754

Token 351: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30552247166633606
    2. ':' → logprob: -1.4305224418640137
    3. '       ' → logprob: -3.9305224418640137
    4. ' and' → logprob: -5.555522441864014
    5. '   ' → logprob: -8.055522918701172
    6. 'and' → logprob: -9.430522918701172
    7. ',' → logprob: -9.805522918701172
    8. ' :
' → logprob: -10.305522918701172
    9. '):
' → logprob: -10.555522918701172
    10. ':

' → logprob: -10.805522918701172

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007011185516603291
    2. '   ' → logprob: -8.000700950622559
    3. ' if' → logprob: -8.375700950622559
    4. 'if' → logprob: -10.375700950622559
    5. '```' → logprob: -10.375700950622559
    6. 'res' → logprob: -10.500700950622559
    7. ' res' → logprob: -11.625700950622559
    8. ' l' → logprob: -11.750700950622559
    9. 'r' → logprob: -12.000700950622559
    10. '    ' → logprob: -12.625700950622559

Token 353: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05439953878521919
    2. '       ' → logprob: -3.0543994903564453
    3. '   ' → logprob: -5.179399490356445
    4. ' if' → logprob: -8.804399490356445
    5. '	if' → logprob: -11.679399490356445
    6. ' ' → logprob: -13.679399490356445
    7. '    ' → logprob: -13.804399490356445
    8. '
' → logprob: -14.054399490356445
    9. '```' → logprob: -14.554399490356445
    10. '     ' → logprob: -14.679399490356445

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02372988685965538
    2. ' =' → logprob: -3.7737298011779785
    3. '=max' → logprob: -7.6487298011779785
    4. 'max' → logprob: -12.023730278015137
    5. ',max' → logprob: -14.648730278015137
    6. ' ' → logprob: -15.023730278015137
    7. '   ' → logprob: -15.398730278015137
    8. ',' → logprob: -15.648730278015137
    9. ' ^=' → logprob: -16.02372932434082
    10. ' max' → logprob: -16.64872932434082

Token 355: ' [' (ID: 723)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0020775748416781425
    2. ' max' → logprob: -6.252077579498291
    3. 'res' → logprob: -8.877077102661133
    4. 'seg' → logprob: -12.752077102661133
    5. ' res' → logprob: -13.127077102661133
    6. '   ' → logprob: -13.502077102661133
    7. '(max' → logprob: -14.002077102661133
    8. ' ' → logprob: -14.377077102661133
    9. '  ' → logprob: -15.127077102661133
    10. 'operator' → logprob: -15.502077102661133

Token 356: 'res' (ID: 430)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04989194869995117
    2. 'res' → logprob: -3.049891948699951
    3. 'seg' → logprob: -6.799891948699951
    4. ' max' → logprob: -9.42489242553711
    5. '(max' → logprob: -10.17489242553711
    6. '   ' → logprob: -10.79989242553711
    7. 'lambda' → logprob: -11.92489242553711
    8. '
' → logprob: -11.92489242553711
    9. '(res' → logprob: -12.29989242553711
    10. 'operator' → logprob: -12.29989242553711

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10017787665128708
    2. ',max' → logprob: -2.475177764892578
    3. ',res' → logprob: -4.725177764892578
    4. 'max' → logprob: -6.600177764892578
    5. ' ,' → logprob: -7.475177764892578
    6. ' if' → logprob: -8.725177764892578
    7. 'if' → logprob: -8.975177764892578
    8. 'res' → logprob: -11.225177764892578
    9. '   ' → logprob: -11.350177764892578
    10. ',b' → logprob: -11.600177764892578

Token 358: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.007672518491744995
    2. 'res' → logprob: -4.882672309875488
    3. ' seg' → logprob: -10.507672309875488
    4. 'max' → logprob: -11.382672309875488
    5. '   ' → logprob: -11.632672309875488
    6. '(seg' → logprob: -11.757672309875488
    7. 'query' → logprob: -13.132672309875488
    8. ' ' → logprob: -13.382672309875488
    9. '
' → logprob: -13.632672309875488
    10. '  ' → logprob: -13.882672309875488

Token 359: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -8.64970643306151e-05
    2. 'max' → logprob: -9.375086784362793
    3. 'r' → logprob: -13.750086784362793
    4. '[r' → logprob: -16.000085830688477
    5. '[max' → logprob: -16.625085830688477
    6. '_' → logprob: -16.750085830688477
    7. '[' → logprob: -17.000085830688477
    8. '_[' → logprob: -17.500085830688477
    9. '_min' → logprob: -17.500085830688477
    10. '_MAX' → logprob: -18.000085830688477

Token 360: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.004214809276163578
    2. '[r' → logprob: -5.504214763641357
    3. 'l' → logprob: -9.629215240478516
    4. '[' → logprob: -9.879215240478516
    5. '][' → logprob: -11.879215240478516
    6. 'r' → logprob: -12.754215240478516
    7. '	l' → logprob: -13.504215240478516
    8. ']' → logprob: -13.629215240478516
    9. ',l' → logprob: -13.754215240478516
    10. '[
' → logprob: -14.004215240478516

Token 361: ']][' (ID: 61032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08328065276145935
    2. '],' → logprob: -2.833280563354492
    3. '-' → logprob: -4.333280563354492
    4. ']' → logprob: -5.708280563354492
    5. '[' → logprob: -6.958280563354492
    6. '//' → logprob: -7.333280563354492
    7. ' +' → logprob: -7.333280563354492
    8. '][' → logprob: -7.583280563354492
    9. '*' → logprob: -7.708280563354492
    10. 'if' → logprob: -7.958280563354492

Token 362: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09251848608255386
    2. '(l' → logprob: -3.0925185680389404
    3. 'r' → logprob: -3.5925185680389404
    4. '(r' → logprob: -5.342518329620361
    5. '((' → logprob: -5.717518329620361
    6. '0' → logprob: -6.217518329620361
    7. '(seg' → logprob: -7.092518329620361
    8. 'seg' → logprob: -7.342518329620361
    9. 'res' → logprob: -7.967518329620361
    10. '(' → logprob: -7.967518329620361

Token 363: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0490141324698925
    2. ' &' → logprob: -3.049014091491699
    3. '%' → logprob: -7.799014091491699
    4. '&_' → logprob: -12.1740140914917
    5. ' %' → logprob: -12.2990140914917
    6. '&
' → logprob: -12.7990140914917
    7. '&r' → logprob: -14.0490140914917
    8. '&t' → logprob: -14.1740140914917
    9. ' ' → logprob: -14.4240140914917
    10. '
' → logprob: -14.7990140914917

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '
' → logprob: -14.00000286102295
    3. 'r' → logprob: -14.12500286102295
    4. '-' → logprob: -14.87500286102295
    5. ' ' → logprob: -15.12500286102295
    6. '0' → logprob: -16.125001907348633
    7. 'l' → logprob: -16.375001907348633
    8. '```' → logprob: -16.500001907348633
    9. '
' → logprob: -17.250001907348633
    10. '

' → logprob: -17.625001907348633

Token 365: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07851538062095642
    2. 'if' → logprob: -4.078515529632568
    3. ' if' → logprob: -4.203515529632568
    4. '^' → logprob: -4.578515529632568
    5. '],' → logprob: -4.578515529632568
    6. ' ^' → logprob: -5.203515529632568
    7. ' ]' → logprob: -5.328515529632568
    8. '+' → logprob: -5.828515529632568
    9. ']^' → logprob: -6.078515529632568
    10. ']
' → logprob: -6.328515529632568

Token 366: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002186426194384694
    2. '1' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.25218677520752
    4. '   ' → logprob: -15.12718677520752
    5. 'False' → logprob: -15.62718677520752
    6. '

' → logprob: -16.439685821533203
    7. '
' → logprob: -17.189685821533203
    8. '```' → logprob: -17.377185821533203
    9. '  ' → logprob: -17.502185821533203
    10. '    ' → logprob: -17.627185821533203

Token 367: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993943452835083
    2. '1' → logprob: -2.694939374923706
    3. ' ' → logprob: -14.069939613342285
    4. 'l' → logprob: -14.569939613342285
    5. 'False' → logprob: -14.569939613342285
    6. '

' → logprob: -15.194939613342285
    7. '```' → logprob: -15.694939613342285
    8. '   ' → logprob: -15.757439613342285
    9. '(' → logprob: -15.944939613342285
    10. '-' → logprob: -16.19493865966797

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05104725435376167
    2. ']
' → logprob: -3.1760473251342773
    3. ' ]' → logprob: -5.426047325134277
    4. 'if' → logprob: -7.051047325134277
    5. ' if' → logprob: -7.426047325134277
    6. ' ]
' → logprob: -7.551047325134277
    7. '],' → logprob: -7.801047325134277
    8. '];' → logprob: -7.926047325134277
    9. ']+' → logprob: -8.551047325134277
    10. 'and' → logprob: -8.926047325134277

Token 369: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5669209361076355
    2. 'if' → logprob: -1.5669209957122803
    3. '
' → logprob: -2.0669209957122803
    4. 'res' → logprob: -3.0669209957122803
    5. '   ' → logprob: -3.4419209957122803
    6. 'l' → logprob: -5.191920757293701
    7. ';' → logprob: -5.441920757293701
    8. ' l' → logprob: -6.191920757293701
    9. '       ' → logprob: -6.441920757293701
    10. ' or' → logprob: -7.066920757293701

Token 370: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8311647176742554
    2. 'l' → logprob: -0.9561647176742554
    3. '(l' → logprob: -2.456164836883545
    4. ' (' → logprob: -2.956164836883545
    5. ' not' → logprob: -3.456164836883545
    6. '(r' → logprob: -5.831164836883545
    7. 'not' → logprob: -6.331164836883545
    8. ' True' → logprob: -6.956164836883545
    9. 'True' → logprob: -7.081164836883545
    10. '(not' → logprob: -7.081164836883545

Token 371: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.20198878645896912
    2. ' &' → logprob: -1.7019888162612915
    3. '%' → logprob: -8.07698917388916
    4. ' <=' → logprob: -9.20198917388916
    5. '<=' → logprob: -9.57698917388916
    6. ' %' → logprob: -10.20198917388916
    7. '&
' → logprob: -11.07698917388916
    8. ' ' → logprob: -11.70198917388916
    9. '   ' → logprob: -11.95198917388916
    10. '+' → logprob: -12.45198917388916

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011474833445390686
    2. '0' → logprob: -9.250114440917969
    3. ' ' → logprob: -11.125114440917969
    4. '```' → logprob: -13.750114440917969
    5. '2' → logprob: -14.250114440917969
    6. '   ' → logprob: -15.187614440917969
    7. '
' → logprob: -15.187614440917969
    8. '-' → logprob: -15.250114440917969
    9. '!' → logprob: -15.625114440917969
    10. '...' → logprob: -16.12511444091797

Token 373: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043124906718730927
    2. ' ==' → logprob: -3.1681249141693115
    3. '==
' → logprob: -9.41812515258789
    4. 'else' → logprob: -11.04312515258789
    5. ' else' → logprob: -11.54312515258789
    6. '0' → logprob: -12.29312515258789
    7. ' ' → logprob: -12.41812515258789
    8. ']==' → logprob: -12.54312515258789
    9. ')==' → logprob: -12.91812515258789
    10. '()==' → logprob: -13.54312515258789

Token 374: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8325677703833207e-05
    2. ' ' → logprob: -10.500028610229492
    3. 'False' → logprob: -15.375028610229492
    4. '=' → logprob: -16.250028610229492
    5. '1' → logprob: -16.250028610229492
    6. '==' → logprob: -16.750028610229492
    7. '```' → logprob: -17.125028610229492
    8. '   ' → logprob: -17.312528610229492
    9. '۰' → logprob: -17.937528610229492
    10. '
' → logprob: -18.812528610229492

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013262155698612332
    2. ' ' → logprob: -9.00013256072998
    3. 'False' → logprob: -12.75013256072998
    4. '1' → logprob: -13.12513256072998
    5. '==' → logprob: -14.31263256072998
    6. '   ' → logprob: -14.62513256072998
    7. '```' → logprob: -14.68763256072998
    8. '=' → logprob: -15.06263256072998
    9. '
' → logprob: -15.81263256072998
    10. 'false' → logprob: -15.81263256072998

Token 376: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31661635637283325
    2. 'else' → logprob: -1.3166162967681885
    3. '    ' → logprob: -6.941616535186768
    4. 'res' → logprob: -7.316616535186768
    5. '   ' → logprob: -7.941616535186768
    6. ' and' → logprob: -7.941616535186768
    7. ' ' → logprob: -8.44161605834961
    8. 'and' → logprob: -8.94161605834961
    9. '       ' → logprob: -9.06661605834961
    10. ':' → logprob: -9.19161605834961

Token 377: ' res' (ID: 694)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009449819102883339
    2. ' max' → logprob: -4.7594499588012695
    3. 'res' → logprob: -7.8844499588012695
    4. '   ' → logprob: -9.25944995880127
    5. '[max' → logprob: -9.38444995880127
    6. 'seg' → logprob: -9.50944995880127
    7. '(max' → logprob: -9.50944995880127
    8. '[' → logprob: -10.25944995880127
    9. '  ' → logprob: -11.00944995880127
    10. '       ' → logprob: -11.13444995880127

Token 378: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5551853775978088
    2. '=' → logprob: -0.9301853775978088
    3. 'max' → logprob: -4.305185317993164
    4. '=max' → logprob: -5.055185317993164
    5. ',' → logprob: -5.680185317993164
    6. 'res' → logprob: -6.055185317993164
    7. ' max' → logprob: -6.180185317993164
    8. '
' → logprob: -7.305185317993164
    9. '   ' → logprob: -7.430185317993164
    10. ' or' → logprob: -7.930185317993164

Token 379: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: ' res' (ID: 694)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2852904796600342
    2. ' l' → logprob: -1.4102904796600342
    3. ' if' → logprob: -6.160290718078613
    4. ' res' → logprob: -7.660290718078613
    5. 'if' → logprob: -7.910290718078613
    6. '   ' → logprob: -8.285290718078613
    7. 'res' (adapté à ' res') → logprob: -8.285290718078613
    8. ',' → logprob: -8.910290718078613
    9. '       ' → logprob: -9.410290718078613
    10. ';' → logprob: -9.660290718078613

Token 381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18803316354751587
    2. ' =' → logprob: -1.813033103942871
    3. '=max' → logprob: -5.063033103942871
    4. 'max' → logprob: -6.563033103942871
    5. ',' → logprob: -8.188033103942871
    6. ',max' → logprob: -8.688033103942871
    7. ' max' → logprob: -10.563033103942871
    8. 'if' → logprob: -11.563033103942871
    9. ' ' → logprob: -11.688033103942871
    10. '   ' → logprob: -12.313033103942871

Token 382: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04170205816626549
    2. ' max' → logprob: -3.7917020320892334
    3. '[max' → logprob: -4.1667022705078125
    4. '[' → logprob: -5.9167022705078125
    5. ' [' → logprob: -9.916702270507812
    6. '(max' → logprob: -10.916702270507812
    7. '   ' → logprob: -11.916702270507812
    8. 'res' → logprob: -12.916702270507812
    9. '	max' → logprob: -12.916702270507812
    10. ' ' → logprob: -13.416702270507812

Token 383: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -13.00000286102295
    3. '(seg' → logprob: -14.37500286102295
    4. 'res' → logprob: -15.50000286102295
    5. '([' → logprob: -16.875003814697266
    6. '(
' → logprob: -17.250003814697266
    7. '(max' → logprob: -17.375003814697266
    8. ',res' → logprob: -17.625003814697266
    9. '((' → logprob: -19.125003814697266
    10. ' (' → logprob: -19.625003814697266

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006554797757416964
    2. ',res' → logprob: -5.13155460357666
    3. 'res' → logprob: -7.88155460357666
    4. 'seg' → logprob: -9.13155460357666
    5. '(seg' → logprob: -9.63155460357666
    6. ' ,' → logprob: -10.38155460357666
    7. ',[' → logprob: -11.38155460357666
    8. ',
' → logprob: -11.38155460357666
    9. '(res' → logprob: -11.63155460357666
    10. '[' → logprob: -11.75655460357666

Token 385: ' [' (ID: 723)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00011558275582501665
    2. ' seg' → logprob: -9.375115394592285
    3. '[' → logprob: -10.875115394592285
    4. '   ' → logprob: -12.250115394592285
    5. '(seg' → logprob: -13.000115394592285
    6. ' ' → logprob: -13.875115394592285
    7. '       ' → logprob: -14.375115394592285
    8. '  ' → logprob: -14.375115394592285
    9. '           ' → logprob: -14.500115394592285
    10. '         ' → logprob: -15.250115394592285

Token 386: '0' (ID: 15)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0018020345596596599
    2. 'res' → logprob: -6.37680196762085
    3. '(seg' → logprob: -9.501802444458008
    4. ' seg' → logprob: -11.251802444458008
    5. '0' → logprob: -12.251802444458008
    6. '   ' → logprob: -13.501802444458008
    7. 'segment' → logprob: -13.876802444458008
    8. 'r' → logprob: -14.126802444458008
    9. 'sem' → logprob: -14.251802444458008
    10. '```' → logprob: -14.876802444458008

Token 387: ',' (ID: 11)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5089340209960938
    2. 'r' → logprob: -1.3839340209960938
    3. ',' → logprob: -2.1339340209960938
    4. 'res' → logprob: -3.7589340209960938
    5. ' seg' → logprob: -6.008934020996094
    6. '   ' → logprob: -7.133934020996094
    7. ' ,' → logprob: -7.258934020996094
    8. 'l' → logprob: -7.508934020996094
    9. '(seg' → logprob: -7.633934020996094
    10. ' r' → logprob: -7.883934020996094

Token 388: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0002879145904444158
    2. ' seg' → logprob: -8.875288009643555
    3. 'res' → logprob: -9.125288009643555
    4. '   ' → logprob: -10.875288009643555
    5. '(seg' → logprob: -12.000288009643555
    6. 'r' → logprob: -12.625288009643555
    7. '  ' → logprob: -12.750288009643555
    8. ' ' → logprob: -13.750288009643555
    9. 'segment' → logprob: -13.875288009643555
    10. '           ' → logprob: -13.875288009643555

Token 389: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0003820524725597352
    2. 'max' → logprob: -7.875381946563721
    3. ')' → logprob: -15.375382423400879
    4. 'seg' → logprob: -15.625382423400879
    5. ']' → logprob: -15.875382423400879
    6. '_MAX' → logprob: -16.125381469726562
    7. '   ' → logprob: -16.125381469726562
    8. 's' → logprob: -16.250381469726562
    9. 'amax' → logprob: -16.250381469726562
    10. 'ele' → logprob: -16.375381469726562

Token 390: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0020650913938879967
    2. 'r' → logprob: -6.252065181732178
    3. '   ' → logprob: -9.50206470489502
    4. '	r' → logprob: -11.75206470489502
    5. '[l' → logprob: -11.75206470489502
    6. ' ' → logprob: -11.87706470489502
    7. '[' → logprob: -12.00206470489502
    8. ']' → logprob: -12.50206470489502
    9. ',r' → logprob: -12.50206470489502
    10. '       ' → logprob: -12.62706470489502

Token 391: ']][' (ID: 61032)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6701400279998779
    2. '-' → logprob: -1.045140027999878
    3. '])[' → logprob: -2.420140027999878
    4. '])' → logprob: -4.295140266418457
    5. ']][' → logprob: -4.795140266418457
    6. '[' → logprob: -5.545140266418457
    7. ']' → logprob: -5.545140266418457
    8. '&' → logprob: -5.920140266418457
    9. '[r' → logprob: -5.920140266418457
    10. ')][' → logprob: -5.920140266418457

Token 392: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006837221444584429
    2. '(r' → logprob: -7.375683784484863
    3. ' r' → logprob: -10.500683784484863
    4. 'not' → logprob: -11.250683784484863
    5. '~' → logprob: -12.250683784484863
    6. '   ' → logprob: -12.875683784484863
    7. '1' → logprob: -13.625683784484863
    8. ' (' → logprob: -13.625683784484863
    9. '(not' → logprob: -13.750683784484863
    10. 'bool' → logprob: -14.000683784484863

Token 393: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.0023409235291182995
    2. ' &' → logprob: -6.127340793609619
    3. '%' → logprob: -9.127341270446777
    4. '1' → logprob: -11.002341270446777
    5. '-' → logprob: -11.877341270446777
    6. ' ' → logprob: -12.252341270446777
    7. '[' → logprob: -12.377341270446777
    8. '0' → logprob: -13.127341270446777
    9. '&
' → logprob: -13.252341270446777
    10. '  ' → logprob: -13.377341270446777

Token 394: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034392563975416124
    2. '0' → logprob: -8.250344276428223
    3. ' ' → logprob: -10.687844276428223
    4. '
' → logprob: -11.562844276428223
    5. '-' → logprob: -11.625344276428223
    6. '```' → logprob: -11.687844276428223
    7. '   ' → logprob: -12.250344276428223
    8. '`' → logprob: -12.937844276428223
    9. '``' → logprob: -13.062844276428223
    10. '

' → logprob: -13.312844276428223

Token 395: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28715258836746216
    2. ' ==' → logprob: -1.4121525287628174
    3. '1' → logprob: -5.7871527671813965
    4. ' ' → logprob: -6.6621527671813965
    5. ']==' → logprob: -7.6621527671813965
    6. ']' → logprob: -8.162152290344238
    7. '0' → logprob: -8.162152290344238
    8. ')' → logprob: -8.662152290344238
    9. '!=' → logprob: -8.662152290344238
    10. ' !=' → logprob: -9.287152290344238

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006179290823638439
    2. ' ' → logprob: -5.131179332733154
    3. '0' → logprob: -8.631178855895996
    4. '-' → logprob: -10.381178855895996
    5. '   ' → logprob: -10.631178855895996
    6. '  ' → logprob: -12.506178855895996
    7. '```' → logprob: -12.943678855895996
    8. '
' → logprob: -13.193678855895996
    9. ')' → logprob: -13.943678855895996
    10. ' -' → logprob: -14.193678855895996

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1435355544090271
    2. '0' → logprob: -2.018535614013672
    3. ' ' → logprob: -7.143535614013672
    4. '   ' → logprob: -10.643535614013672
    5. '-' → logprob: -11.018535614013672
    6. '
' → logprob: -11.393535614013672
    7. '  ' → logprob: -12.518535614013672
    8. 'r' → logprob: -12.768535614013672
    9. '```' → logprob: -13.331035614013672
    10. '	' → logprob: -13.706035614013672

Token 398: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25307130813598633
    2. '])
' → logprob: -1.5030713081359863
    3. ' ])' → logprob: -8.003070831298828
    4. ' ])
' → logprob: -8.628070831298828
    5. ')' → logprob: -8.878070831298828
    6. ' if' → logprob: -9.378070831298828
    7. '   ' → logprob: -9.503070831298828
    8. ']' → logprob: -9.503070831298828
    9. 'if' → logprob: -9.503070831298828
    10. '])

' → logprob: -10.128070831298828

Token 399: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2890838384628296
    2. '   ' → logprob: -2.664083957672119
    3. ' if' → logprob: -3.164083957672119
    4. '<|end|>' → logprob: -3.289083957672119
    5. ' r' → logprob: -3.539083957672119
    6. '
' → logprob: -3.664083957672119
    7. ',' → logprob: -4.289083957672119
    8. 'r' → logprob: -5.164083957672119
    9. ',
' → logprob: -5.289083957672119
    10. ',r' → logprob: -5.414083957672119

Token 400: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.044915493577718735
    2. ' r' → logprob: -3.2949154376983643
    3. '(r' → logprob: -5.044915676116943
    4. ' (' → logprob: -7.919915676116943
    5. 'True' → logprob: -11.544915199279785
    6. ' ' → logprob: -12.044915199279785
    7. '   ' → logprob: -12.294915199279785
    8. 'False' → logprob: -12.294915199279785
    9. ' True' → logprob: -12.544915199279785
    10. '(' → logprob: -12.919915199279785

Token 401: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.38710856437683105
    2. ' &' → logprob: -1.137108564376831
    3. '&r' → logprob: -9.63710880279541
    4. ' ' → logprob: -10.38710880279541
    5. ' &=' → logprob: -10.63710880279541
    6. '&
' → logprob: -10.88710880279541
    7. '   ' → logprob: -11.01210880279541
    8. ' >' → logprob: -11.38710880279541
    9. ' &
' → logprob: -11.51210880279541
    10. '>' → logprob: -12.01210880279541

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.873571692267433e-05
    2. 'r' → logprob: -10.375068664550781
    3. ' ' → logprob: -10.375068664550781
    4. '0' → logprob: -12.250068664550781
    5. '```' → logprob: -14.250068664550781
    6. ' r' → logprob: -16.18756866455078
    7. '...' → logprob: -16.68756866455078
    8. '7' → logprob: -16.75006866455078
    9. '`' → logprob: -16.81256866455078
    10. '!' → logprob: -17.06256866455078

Token 403: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.632689356803894
    2. ' ==' → logprob: -0.757689356803894
    3. ' ' → logprob: -10.132689476013184
    4. '1' → logprob: -11.507689476013184
    5. '```' → logprob: -11.882689476013184
    6. ']==' → logprob: -12.257689476013184
    7. '==
' → logprob: -12.257689476013184
    8. ' ==
' → logprob: -12.382689476013184
    9. '[' → logprob: -12.757689476013184
    10. ' !=' → logprob: -12.882689476013184

Token 404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014220154844224453
    2. ' ' → logprob: -4.264220237731934
    3. '0' → logprob: -9.889220237731934
    4. '   ' → logprob: -14.201720237731934
    5. 'True' → logprob: -14.451720237731934
    6. '==' → logprob: -14.514220237731934
    7. '=' → logprob: -14.639220237731934
    8. '  ' → logprob: -14.701720237731934
    9. 'r' → logprob: -14.826720237731934
    10. '...' → logprob: -14.889220237731934

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005611269269138575
    2. ' ' → logprob: -5.255611419677734
    3. '0' → logprob: -8.005611419677734
    4. 'r' → logprob: -10.505611419677734
    5. ' r' → logprob: -12.880611419677734
    6. '   ' → logprob: -13.443111419677734
    7. '  ' → logprob: -13.568111419677734
    8. 'True' → logprob: -13.568111419677734
    9. '==' → logprob: -13.880611419677734
    10. '=' → logprob: -13.943111419677734

Token 406: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.056791577488183975
    2. 'else' → logprob: -2.9317915439605713
    3. '       ' → logprob: -6.43179178237915
    4. ':' → logprob: -9.556791305541992
    5. '   ' → logprob: -10.431791305541992
    6. '+' → logprob: -10.806791305541992
    7. ' ' → logprob: -10.931791305541992
    8. '        ' → logprob: -10.931791305541992
    9. 'res' → logprob: -11.181791305541992
    10. ' :' → logprob: -11.181791305541992

Token 407: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6121996641159058
    2. ' res' → logprob: -0.8621996641159058
    3. 'max' → logprob: -3.8621997833251953
    4. ' max' → logprob: -4.237199783325195
    5. '   ' → logprob: -10.362199783325195
    6. '       ' → logprob: -10.487199783325195
    7. ' ' → logprob: -11.487199783325195
    8. '0' → logprob: -11.862199783325195
    9. 'False' → logprob: -11.862199783325195
    10. '(res' → logprob: -11.862199783325195

Token 408: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6562078595161438
    2. '       ' → logprob: -1.406207799911499
    3. '<|end|>' → logprob: -2.031207799911499
    4. ' l' → logprob: -3.156207799911499
    5. ',' → logprob: -4.656208038330078
    6. '    ' → logprob: -4.906208038330078
    7. 'r' → logprob: -4.906208038330078
    8. ' ' → logprob: -5.281208038330078
    9. ' r' → logprob: -5.531208038330078
    10. '	' → logprob: -5.531208038330078

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19674763083457947
    2. '   ' → logprob: -2.0717475414276123
    3. ' l' → logprob: -3.3217475414276123
    4. 'l' → logprob: -4.821747779846191
    5. ' ' → logprob: -5.821747779846191
    6. '    ' → logprob: -6.946747779846191
    7. '```' → logprob: -7.196747779846191
    8. '<|end|>' → logprob: -7.196747779846191
    9. 'r' → logprob: -7.696747779846191
    10. '        ' → logprob: -8.196747779846191

Token 410: ' if' (ID: 538)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20276491343975067
    2. ' l' → logprob: -1.702764868736267
    3. '   ' → logprob: -7.077764987945557
    4. 'r' → logprob: -7.952764987945557
    5. ' r' → logprob: -9.577764511108398
    6. '	l' → logprob: -10.577764511108398
    7. ' (' → logprob: -10.702764511108398
    8. '(l' → logprob: -11.577764511108398
    9. ' ' → logprob: -11.827764511108398
    10. '    ' → logprob: -12.077764511108398

Token 411: ' r' (ID: 428)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5035099983215332
    2. 'l' → logprob: -1.1285099983215332
    3. '(r' → logprob: -3.503509998321533
    4. ' (' → logprob: -3.878509998321533
    5. '((' → logprob: -4.753509998321533
    6. 'r' → logprob: -4.753509998321533
    7. ' l' → logprob: -6.378509998321533
    8. '   ' → logprob: -7.253509998321533
    9. ' ' → logprob: -8.253509521484375
    10. '(True' → logprob: -8.253509521484375

Token 412: '&' (ID: 5)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9890555143356323
    2. '-=' → logprob: -0.9890555143356323
    3. '>' → logprob: -1.8640555143356323
    4. '>>' → logprob: -2.989055633544922
    5. '&' → logprob: -4.614055633544922
    6. ' ' → logprob: -4.989055633544922
    7. '=' → logprob: -4.989055633544922
    8. '   ' → logprob: -4.989055633544922
    9. '-l' → logprob: -5.114055633544922
    10. ' -=' → logprob: -5.864055633544922

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015620420686900616
    2. ' ' → logprob: -4.265620231628418
    3. '~' → logprob: -7.265620231628418
    4. 'r' → logprob: -8.515620231628418
    5. ' ~' → logprob: -8.640620231628418
    6. '=' → logprob: -8.765620231628418
    7. 'l' → logprob: -9.640620231628418
    8. '>' → logprob: -10.140620231628418
    9. '   ' → logprob: -11.015620231628418
    10. '-' → logprob: -11.015620231628418

Token 414: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8329747915267944
    2. '-=' → logprob: -1.8329747915267944
    3. '>' → logprob: -2.082974910736084
    4. ' -=' → logprob: -2.207974910736084
    5. '   ' → logprob: -2.832974910736084
    6. ' ==' → logprob: -2.957974910736084
    7. '0' → logprob: -4.332974910736084
    8. '=' → logprob: -4.582974910736084
    9. '-' → logprob: -5.207974910736084
    10. ' ' → logprob: -5.207974910736084

Token 415: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06624831259250641
    2. '0' → logprob: -3.4412484169006348
    3. ' ' → logprob: -3.4412484169006348
    4. '   ' → logprob: -10.691247940063477
    5. 'True' → logprob: -11.878747940063477
    6. ' True' → logprob: -12.378747940063477
    7. 'False' → logprob: -12.503747940063477
    8. '=' → logprob: -13.128747940063477
    9. 'r' → logprob: -13.191247940063477
    10. '  ' → logprob: -13.566247940063477

Token 416: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3176663815975189
    2. '1' → logprob: -1.3176664113998413
    3. ' ' → logprob: -5.442666530609131
    4. 'False' → logprob: -10.567666053771973
    5. '   ' → logprob: -11.130166053771973
    6. '=' → logprob: -12.505166053771973
    7. 'True' → logprob: -12.567666053771973
    8. 'r' → logprob: -12.692666053771973
    9. '  ' → logprob: -13.255166053771973
    10. '```' → logprob: -13.317666053771973

Token 417: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.257024884223938
    2. ':
' → logprob: -1.757024884223938
    3. '   ' → logprob: -4.757024765014648
    4. ' -=' → logprob: -4.757024765014648
    5. '>' → logprob: -5.007024765014648
    6. ' r' → logprob: -5.382024765014648
    7. ' :' → logprob: -5.632024765014648
    8. '-' → logprob: -5.632024765014648
    9. ' else' → logprob: -5.632024765014648
    10. '       ' → logprob: -6.007024765014648

Token 418: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0323772206902504
    2. ' r' → logprob: -3.532377243041992
    3. '       ' → logprob: -6.282377243041992
    4. '   ' → logprob: -7.407377243041992
    5. '           ' → logprob: -8.907377243041992
    6. ' ' → logprob: -12.782377243041992
    7. '	r' → logprob: -12.907377243041992
    8. '
' → logprob: -13.157377243041992
    9. '```' → logprob: -13.782377243041992
    10. '     ' → logprob: -13.907377243041992

Token 419: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.005284515209496021
    2. ' -=' → logprob: -5.505284309387207
    3. '=' → logprob: -6.880284309387207
    4. '-' → logprob: -9.005284309387207
    5. '+=' → logprob: -9.880284309387207
    6. '   ' → logprob: -13.380284309387207
    7. '```' → logprob: -14.255284309387207
    8. ' =' → logprob: -14.380284309387207
    9. '  ' → logprob: -16.255285263061523
    10. '//=' → logprob: -16.755285263061523

Token 420: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.125003814697266
    4. '2' → logprob: -18.500003814697266
    5. '
' → logprob: -19.125003814697266
    6. '```' → logprob: -19.250003814697266
    7. '  ' → logprob: -19.375003814697266
    8. '۱' → logprob: -19.750003814697266
    9. '１' → logprob: -20.125003814697266
    10. '१' → logprob: -21.250003814697266

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '
' → logprob: -18.062501907348633
    5. '```' → logprob: -18.125001907348633
    6. '2' → logprob: -18.312501907348633
    7. '  ' → logprob: -18.625001907348633
    8. '۱' → logprob: -19.000001907348633
    9. '１' → logprob: -19.125001907348633
    10. '१' → logprob: -20.062501907348633

Token 422: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36136844754219055
    2. ' l' → logprob: -2.111368417739868
    3. ' ' → logprob: -2.736368417739868
    4. '   ' → logprob: -2.986368417739868
    5. '<|end|>' → logprob: -2.986368417739868
    6. ' ' → logprob: -5.986368656158447
    7. '    ' → logprob: -6.361368656158447
    8. ' r' → logprob: -6.361368656158447
    9. '	' → logprob: -6.486368656158447
    10. '  ' → logprob: -6.486368656158447

Token 423: '       ' (ID: 309)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9160761833190918
    2. '       ' → logprob: -0.9160761833190918
    3. '   ' → logprob: -1.9160761833190918
    4. ' ' → logprob: -3.291076183319092
    5. '    ' → logprob: -5.166076183319092
    6. 'l' → logprob: -5.291076183319092
    7. '  ' → logprob: -7.166076183319092
    8. '<|end|>' → logprob: -7.166076183319092
    9. ' r' → logprob: -7.291076183319092
    10. '        ' → logprob: -7.666076183319092

Token 424: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.5786051154136658
    2. ' l' → logprob: -0.8286051154136658
    3. '   ' → logprob: -6.5786051750183105
    4. '       ' → logprob: -6.7036051750183105
    5. 'r' → logprob: -10.578604698181152
    6. '    ' → logprob: -11.703604698181152
    7. ' r' → logprob: -11.828604698181152
    8. ' ' → logprob: -13.953604698181152
    9. '	l' → logprob: -13.953604698181152
    10. '     ' → logprob: -14.203604698181152

Token 425: ' //' (ID: 602)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.033904433250427246
    2. ' +=' → logprob: -3.408904552459717
    3. '=' → logprob: -8.658904075622559
    4. '   ' → logprob: -10.033904075622559
    5. ' >>=' → logprob: -10.908904075622559
    6. '>>' → logprob: -11.658904075622559
    7. ']+=' → logprob: -12.783904075622559
    8. ' =' → logprob: -13.033904075622559
    9. ' <<=' → logprob: -13.158904075622559
    10. '```' → logprob: -13.283904075622559

Token 426: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.4849443838757e-06
    2. '2' → logprob: -12.750004768371582
    3. '=
' → logprob: -13.875004768371582
    4. '/=' → logprob: -15.000004768371582
    5. '>=' → logprob: -15.875004768371582
    6. '==' → logprob: -16.500003814697266
    7. '+=' → logprob: -17.000003814697266
    8. '=

' → logprob: -17.875003814697266
    9. ']=' → logprob: -18.000003814697266
    10. '=}' → logprob: -18.125003814697266

Token 427: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.750032424926758
    4. '```' → logprob: -15.125032424926758
    5. '=' → logprob: -15.625032424926758
    6. '
' → logprob: -16.750032424926758
    7. '  ' → logprob: -18.000032424926758
    8. '    ' → logprob: -18.500032424926758
    9. '２' → logprob: -18.500032424926758
    10. '>' → logprob: -18.562532424926758

Token 428: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.625003814697266
    5. '
' → logprob: -17.375003814697266
    6. '=' → logprob: -17.625003814697266
    7. '  ' → logprob: -18.375003814697266
    8. '1' → logprob: -18.812503814697266
    9. '２' → logprob: -18.812503814697266
    10. '	' → logprob: -19.500003814697266

Token 429: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021160554140806198
    2. '   ' → logprob: -4.27116060256958
    3. '<|end|>' → logprob: -5.39616060256958
    4. ' ' → logprob: -7.27116060256958
    5. '    ' → logprob: -8.021160125732422
    6. ',' → logprob: -8.396160125732422
    7. '        ' → logprob: -8.521160125732422
    8. '  ' → logprob: -9.021160125732422
    9. '+' → logprob: -9.271160125732422
    10. 'r' → logprob: -9.271160125732422

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06109783798456192
    2. '   ' → logprob: -3.3110978603363037
    3. '<|end|>' → logprob: -3.9360978603363037
    4. ' ' → logprob: -7.311097621917725
    5. '```' → logprob: -7.436097621917725
    6. ' l' → logprob: -7.811097621917725
    7. '        ' → logprob: -8.311098098754883
    8. ',' → logprob: -8.311098098754883
    9. '    ' → logprob: -8.436098098754883
    10. '<|end|>' → logprob: -8.811098098754883

Token 431: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.002252910751849413
    2. ' r' → logprob: -6.12725305557251
    3. '   ' → logprob: -9.627252578735352
    4. '    ' → logprob: -14.002252578735352
    5. '       ' → logprob: -15.127252578735352
    6. ' ' → logprob: -15.252252578735352
    7. '(r' → logprob: -15.377252578735352
    8. '  ' → logprob: -16.00225257873535
    9. '```' → logprob: -16.50225257873535
    10. 'l' → logprob: -17.00225257873535

Token 432: ' =' (ID: 314)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.5788955688476562
    2. ' //' → logprob: -0.8288955688476562
    3. '//' → logprob: -5.828895568847656
    4. '=' → logprob: -11.953895568847656
    5. ' >>=' → logprob: -13.453895568847656
    6. ' ' → logprob: -13.578895568847656
    7. ' =' → logprob: -14.203895568847656
    8. '>>' → logprob: -15.328895568847656
    9. '   ' → logprob: -15.703895568847656
    10. '  ' → logprob: -16.203895568847656

Token 433: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.17298763990402222
    2. ' (' → logprob: -2.422987699508667
    3. 'r' → logprob: -2.672987699508667
    4. ' r' → logprob: -6.797987461090088
    5. '(' → logprob: -11.047987937927246
    6. ' ' → logprob: -11.797987937927246
    7. '   ' → logprob: -12.922987937927246
    8. '  ' → logprob: -13.672987937927246
    9. '((' → logprob: -14.110487937927246
    10. '
' → logprob: -14.235487937927246

Token 434: 'r' (ID: 81)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5770158767700195
    2. 'r' → logprob: -0.8270158767700195
    3. ' (' → logprob: -6.9520158767700195
    4. ' r' → logprob: -9.45201587677002
    5. '   ' → logprob: -11.20201587677002
    6. ' ' → logprob: -11.70201587677002
    7. '(' → logprob: -11.95201587677002
    8. '  ' → logprob: -13.20201587677002
    9. '	r' → logprob: -13.45201587677002
    10. '     ' → logprob: -13.57701587677002

Token 435: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07114841789007187
    2. ' -' → logprob: -2.69614839553833
    3. '1' → logprob: -7.82114839553833
    4. ' ' → logprob: -8.196148872375488
    5. '//' → logprob: -8.571148872375488
    6. '0' → logprob: -8.571148872375488
    7. '>>' → logprob: -9.821148872375488
    8. '2' → logprob: -10.446148872375488
    9. ' //' → logprob: -10.821148872375488
    10. ')' → logprob: -11.196148872375488

Token 436: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '2' → logprob: -12.500006675720215
    3. ' ' → logprob: -12.750006675720215
    4. '   ' → logprob: -17.7500057220459
    5. '0' → logprob: -18.2500057220459
    6. '//' → logprob: -18.3750057220459
    7. '  ' → logprob: -18.8750057220459
    8. '```' → logprob: -19.2500057220459
    9. '(' → logprob: -19.7500057220459
    10. ')' → logprob: -20.0000057220459

Token 437: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2552863359451294
    2. ')' → logprob: -1.8802863359451294
    3. ')//' → logprob: -2.63028621673584
    4. ' //' → logprob: -7.38028621673584
    5. '>>' → logprob: -10.25528621673584
    6. ')>>' → logprob: -10.88028621673584
    7. ' )' → logprob: -12.25528621673584
    8. ']' → logprob: -12.38028621673584
    9. ')/' → logprob: -12.38028621673584
    10. '}//' → logprob: -12.75528621673584

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.375003814697266
    4. '1' → logprob: -18.875003814697266
    5. '   ' → logprob: -19.125003814697266
    6. '<|end|>' → logprob: -19.875003814697266
    7. '  ' → logprob: -20.250003814697266
    8. '۲' → logprob: -20.437503814697266
    9. 'def' → logprob: -20.562503814697266
    10. '２' → logprob: -20.750003814697266

Token 439: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018594805151224136
    2. '   ' → logprob: -4.393594741821289
    3. '<|end|>' → logprob: -5.643594741821289
    4. ' l' → logprob: -6.143594741821289
    5. '    ' → logprob: -9.768594741821289
    6. 'l' → logprob: -9.893594741821289
    7. ' ' → logprob: -10.143594741821289
    8. '<|end|>' → logprob: -10.268594741821289
    9. '  ' → logprob: -10.393594741821289
    10. '      ' → logprob: -10.518594741821289

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7787018418312073
    2. '       ' → logprob: -1.1537017822265625
    3. '<|end|>' → logprob: -1.5287017822265625
    4. '    ' → logprob: -5.7787017822265625
    5. ' ' → logprob: -6.5287017822265625
    6. '<|end|>' → logprob: -7.0287017822265625
    7. ')' → logprob: -7.4037017822265625
    8. '        ' → logprob: -7.4037017822265625
    9. ',' → logprob: -8.278701782226562
    10. '  ' → logprob: -8.278701782226562

Token 441: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1463528722524643
    2. '<|end|>' → logprob: -2.521352767944336
    3. ' ' → logprob: -3.396352767944336
    4. ' l' → logprob: -5.396352767944336
    5. '       ' → logprob: -5.646352767944336
    6. ')' → logprob: -5.771352767944336
    7. '    ' → logprob: -6.271352767944336
    8. '  ' → logprob: -6.521352767944336
    9. '\t' → logprob: -6.771352767944336
    10. 'return' → logprob: -7.146352767944336

Token 442: ' trivial' (ID: 86130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3626614511013031
    2. 'return' → logprob: -1.2376614809036255
    3. ' return' → logprob: -4.737661361694336
    4. '       ' → logprob: -5.862661361694336
    5. 'res' → logprob: -6.862661361694336
    6. '	return' → logprob: -7.737661361694336
    7. ' ' → logprob: -8.112661361694336
    8. '    ' → logprob: -9.362661361694336
    9. 'l' → logprob: -9.487661361694336
    10. ')' → logprob: -9.487661361694336

Token 443: 'ize' (ID: 750)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03032887913286686
    2. ' return' → logprob: -3.6553289890289307
    3. '   ' → logprob: -5.780328750610352
    4. 'res' → logprob: -7.030328750610352
    5. '
' → logprob: -10.530328750610352
    6. 'max' → logprob: -11.780328750610352
    7. ' ' → logprob: -12.280328750610352
    8. ' res' → logprob: -12.405328750610352
    9. 'if' → logprob: -13.905328750610352
    10. 'result' → logprob: -14.155328750610352

Token 444: ' the' (ID: 290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2590109705924988
    2. '   ' → logprob: -1.7590110301971436
    3. ' return' → logprob: -2.8840110301971436
    4. '	return' → logprob: -10.384011268615723
    5. 'res' → logprob: -11.509011268615723
    6. ' ' → logprob: -11.509011268615723
    7. ':return' → logprob: -12.884011268615723
    8. '  ' → logprob: -13.259011268615723
    9. '    ' → logprob: -13.384011268615723
    10. '       ' → logprob: -14.134011268615723

Token 445: ' edge' (ID: 11165)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07928036898374557
    2. 'res' → logprob: -2.829280376434326
    3. ' return' → logprob: -4.329280376434326
    4. 'if' → logprob: -6.704280376434326
    5. 'max' → logprob: -7.454280376434326
    6. ' res' → logprob: -7.454280376434326
    7. 'result' → logprob: -8.204279899597168
    8. 'rest' → logprob: -8.204279899597168
    9. 'while' → logprob: -8.329279899597168
    10. '   ' → logprob: -8.579279899597168

Token 446: ' cases' (ID: 7911)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.44657841324806213
    2. 'res' → logprob: -1.6965783834457397
    3. '   ' → logprob: -2.1965785026550293
    4. 'return' → logprob: -3.8215785026550293
    5. ' if' → logprob: -3.8215785026550293
    6. 'max' → logprob: -4.821578502655029
    7. 'case' → logprob: -5.446578502655029
    8. 's' → logprob: -5.821578502655029
    9. 'values' → logprob: -6.196578502655029
    10. 'cases' → logprob: -6.946578502655029

Token 447: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.288163083605468e-05
    2. 'return' → logprob: -10.500052452087402
    3. ' if' → logprob: -11.625052452087402
    4. 'res' → logprob: -12.250052452087402
    5. ' return' → logprob: -12.375052452087402
    6. '       ' → logprob: -12.750052452087402
    7. ',' → logprob: -14.000052452087402
    8. '<|end|>' → logprob: -14.125052452087402
    9. '
' → logprob: -14.250052452087402
    10. ' res' → logprob: -14.875052452087402

Token 448: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003231067443266511
    2. 'res' → logprob: -6.128231048583984
    3. 'seg' → logprob: -7.253231048583984
    4. ' max' → logprob: -8.128231048583984
    5. 'min' → logprob: -11.128231048583984
    6. '(max' → logprob: -11.503231048583984
    7. '[max' → logprob: -12.003231048583984
    8. '   ' → logprob: -12.753231048583984
    9. '[' → logprob: -13.253231048583984
    10. ' res' → logprob: -13.753231048583984

Token 449: ' map' (ID: 4014)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6147356033325195
    2. 'return' → logprob: -1.4897356033325195
    3. ' return' → logprob: -2.2397356033325195
    4. 'res' → logprob: -2.4897356033325195
    5. ' res' → logprob: -3.6147356033325195
    6. ' if' → logprob: -4.8647356033325195
    7. ' +=' → logprob: -6.2397356033325195
    8. ' =' → logprob: -6.3647356033325195
    9. '
' → logprob: -6.8647356033325195
    10. 'if' → logprob: -6.8647356033325195

Token 450: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007101670489646494
    2. 'return' → logprob: -7.8757100105285645
    3. 'res' → logprob: -9.250710487365723
    4. ' return' → logprob: -9.500710487365723
    5. ' if' → logprob: -9.875710487365723
    6. '+' → logprob: -10.750710487365723
    7. ' res' → logprob: -10.875710487365723
    8. '```' → logprob: -11.000710487365723
    9. '<|end|>' → logprob: -11.375710487365723
    10. ' +' → logprob: -11.875710487365723

Token 451: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014414230827242136
    2. 'return' → logprob: -6.876441478729248
    3. 'res' → logprob: -8.12644100189209
    4. ' return' → logprob: -9.75144100189209
    5. ' res' → logprob: -10.62644100189209
    6. '
' → logprob: -11.87644100189209
    7. '```' → logprob: -11.87644100189209
    8. ' if' → logprob: -12.25144100189209
    9. '       ' → logprob: -12.37644100189209
    10. 'if' → logprob: -13.50144100189209

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.2617008400848135e-05
    2. 'return' → logprob: -11.375032424926758
    3. ' return' → logprob: -11.875032424926758
    4. '
' → logprob: -12.750032424926758
    5. '<|end|>' → logprob: -12.875032424926758
    6. '       ' → logprob: -13.000032424926758
    7. '```' → logprob: -13.375032424926758
    8. 'res' → logprob: -13.750032424926758
    9. '    ' → logprob: -13.875032424926758
    10. ' res' → logprob: -14.000032424926758

Token 453: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6900033950805664
    2. '   ' → logprob: -1.1900033950805664
    3. 'res' → logprob: -1.6900033950805664
    4. ' return' → logprob: -4.940003395080566
    5. ' res' → logprob: -6.190003395080566
    6. 'if' → logprob: -8.315003395080566
    7. 'while' → logprob: -9.940003395080566
    8. 'for' → logprob: -10.690003395080566
    9. '	return' → logprob: -11.065003395080566
    10. 'result' → logprob: -11.065003395080566

Token 454: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18987038731575012
    2. ' max' → logprob: -1.8148703575134277
    3. 'res' → logprob: -4.689870357513428
    4. ' res' → logprob: -7.439870357513428
    5. '   ' → logprob: -8.439870834350586
    6. 'seg' → logprob: -10.064870834350586
    7. '0' → logprob: -11.189870834350586
    8. '(max' → logprob: -12.314870834350586
    9. '	max' → logprob: -12.439870834350586
    10. ' seg' → logprob: -12.564870834350586

Token 455: '([' (ID: 5194)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.005257118493318558
    2. 'res' → logprob: -5.2552571296691895
    3. '(' → logprob: -11.380256652832031
    4. '([' → logprob: -11.630256652832031
    5. '(max' → logprob: -13.755256652832031
    6. '(seg' → logprob: -14.005256652832031
    7. '(
' → logprob: -15.130256652832031
    8. ' res' → logprob: -15.880256652832031
    9. 'max' → logprob: -15.880256652832031
    10. '	res' → logprob: -16.00525665283203

Token 456: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -5.228561349213123e-05
    2. '[' → logprob: -10.750052452087402
    3. ' res' → logprob: -11.625052452087402
    4. '
' → logprob: -12.000052452087402
    5. 'seg' → logprob: -12.250052452087402
    6. '   ' → logprob: -12.750052452087402
    7. 'query' → logprob: -13.375052452087402
    8. 'max' → logprob: -13.750052452087402
    9. 'r' → logprob: -13.875052452087402
    10. '(res' → logprob: -14.000052452087402

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3822154111694545e-05
    2. ' ,' → logprob: -10.250043869018555
    3. 'seg' → logprob: -12.750043869018555
    4. ',
' → logprob: -13.500043869018555
    5. 'query' → logprob: -13.625043869018555
    6. ']' → logprob: -14.375043869018555
    7. '(seg' → logprob: -14.500043869018555
    8. ',res' → logprob: -14.750043869018555
    9. '   ' → logprob: -15.250043869018555
    10. '```' → logprob: -15.375043869018555

Token 458: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.07363628596067429
    2. ' seg' → logprob: -2.698636293411255
    3. '(seg' → logprob: -5.823636054992676
    4. '[' → logprob: -8.448636054992676
    5. '0' → logprob: -8.823636054992676
    6. 'query' → logprob: -8.823636054992676
    7. ' ' → logprob: -10.073636054992676
    8. ' query' → logprob: -10.198636054992676
    9. '   ' → logprob: -10.573636054992676
    10. 'max' → logprob: -10.948636054992676

Token 459: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0024888573680073023
    2. 'max' → logprob: -6.00248908996582
    3. 'r' → logprob: -12.87748908996582
    4. '[r' → logprob: -12.87748908996582
    5. ']' → logprob: -13.00248908996582
    6. '_ele' → logprob: -13.12748908996582
    7. 'ele' → logprob: -13.87748908996582
    8. '[max' → logprob: -14.87748908996582
    9. '[' → logprob: -15.25248908996582
    10. ' max' → logprob: -15.37748908996582

Token 460: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.04994967579841614
    2. '[r' → logprob: -3.0499496459960938
    3. '[(' → logprob: -7.299949645996094
    4. 'l' → logprob: -7.674949645996094
    5. '[' → logprob: -9.424949645996094
    6. 'r' → logprob: -9.799949645996094
    7. ']' → logprob: -10.674949645996094
    8. '[num' → logprob: -11.924949645996094
    9. ')' → logprob: -12.049949645996094
    10. '   ' → logprob: -12.299949645996094

Token 461: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7635194063186646
    2. '+' → logprob: -1.6385194063186646
    3. '],' → logprob: -1.7635194063186646
    4. ',' → logprob: -2.013519287109375
    5. ']])' → logprob: -4.638519287109375
    6. '][' → logprob: -5.013519287109375
    7. ']' → logprob: -5.263519287109375
    8. '])[' → logprob: -5.513519287109375
    9. '])]' → logprob: -6.013519287109375
    10. ' +' → logprob: -6.513519287109375

Token 462: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00029363270732574165
    2. ' seg' → logprob: -8.250293731689453
    3. '   ' → logprob: -11.375293731689453
    4. '(seg' → logprob: -12.000293731689453
    5. '  ' → logprob: -12.375293731689453
    6. 'r' → logprob: -12.875293731689453
    7. ' ' → logprob: -13.875293731689453
    8. '       ' → logprob: -14.000293731689453
    9. '           ' → logprob: -14.000293731689453
    10. '[' → logprob: -14.500293731689453

Token 463: '_max' (ID: 13731)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009976587258279324
    2. '[r' → logprob: -4.634976387023926
    3. '   ' → logprob: -9.759976387023926
    4. ' r' → logprob: -10.134976387023926
    5. ']' → logprob: -10.259976387023926
    6. '[l' → logprob: -10.384976387023926
    7. '
' → logprob: -11.134976387023926
    8. ' ' → logprob: -12.134976387023926
    9. '[' → logprob: -12.384976387023926
    10. '_max' → logprob: -12.509976387023926

Token 464: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.13980019092559814
    2. 'r' → logprob: -2.5148000717163086
    3. '+' → logprob: -3.2648000717163086
    4. '])' → logprob: -5.139800071716309
    5. '[' → logprob: -6.264800071716309
    6. '+r' → logprob: -6.389800071716309
    7. '[l' → logprob: -7.889800071716309
    8. '   ' → logprob: -8.014800071716309
    9. ']' → logprob: -8.264800071716309
    10. '(r' → logprob: -8.514800071716309

Token 465: ']][' (ID: 61032)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003243798855692148
    2. ' ])' → logprob: -8.250324249267578
    3. ']' → logprob: -10.125324249267578
    4. ')' → logprob: -11.750324249267578
    5. '])
' → logprob: -12.375324249267578
    6. ',' → logprob: -13.125324249267578
    7. ')])' → logprob: -13.125324249267578
    8. ']])' → logprob: -13.625324249267578
    9. '],' → logprob: -13.750324249267578
    10. '   ' → logprob: -14.125324249267578

Token 466: ':' (ID: 25)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7493810653686523
    2. 'l' → logprob: -1.6243810653686523
    3. ':' → logprob: -1.8743810653686523
    4. 'r' → logprob: -2.4993810653686523
    5. ':l' → logprob: -3.2493810653686523
    6. '])' → logprob: -3.8743810653686523
    7. '1' → logprob: -5.249381065368652
    8. ')' → logprob: -5.499381065368652
    9. ' :' → logprob: -5.999381065368652
    10. 'key' → logprob: -5.999381065368652

Token 467: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1482136994600296
    2. 'r' → logprob: -2.0232136249542236
    3. '2' → logprob: -5.648213863372803
    4. '(r' → logprob: -7.523213863372803
    5. ' r' → logprob: -7.648213863372803
    6. ' ' → logprob: -8.023213386535645
    7. '(' → logprob: -8.273213386535645
    8. '1' → logprob: -8.398213386535645
    9. '   ' → logprob: -10.148213386535645
    10. ' (' → logprob: -10.523213386535645

Token 468: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.14351892471313477
    2. '+' → logprob: -2.0185189247131348
    3. ')' → logprob: -7.518518924713135
    4. ']' → logprob: -9.268518447875977
    5. ' ])' → logprob: -9.518518447875977
    6. ' +' → logprob: -9.768518447875977
    7. '])
' → logprob: -10.018518447875977
    8. ']+' → logprob: -12.143518447875977
    9. '-' → logprob: -12.768518447875977
    10. ')])' → logprob: -12.893518447875977

Token 469: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04877006262540817
    2. '(r' → logprob: -4.298769950866699
    3. 'r' → logprob: -4.673769950866699
    4. '(l' → logprob: -5.048769950866699
    5. '0' → logprob: -5.173769950866699
    6. '(' → logprob: -6.048769950866699
    7. '2' → logprob: -6.548769950866699
    8. 'l' → logprob: -6.798769950866699
    9. '([' → logprob: -6.798769950866699
    10. ' ' → logprob: -6.923769950866699

Token 470: '(l' (ID: 4179)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.024279918521642685
    2. '(l' → logprob: -3.899279832839966
    3. '(' → logprob: -6.149280071258545
    4. '((' → logprob: -6.899280071258545
    5. '(True' → logprob: -8.649279594421387
    6. '(not' → logprob: -9.024279594421387
    7. 'r' → logprob: -9.524279594421387
    8. '(res' → logprob: -9.774279594421387
    9. '(False' → logprob: -10.149279594421387
    10. '(bool' → logprob: -10.149279594421387

Token 471: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.16468869149684906
    2. '==' → logprob: -2.1646885871887207
    3. ' !=' → logprob: -3.4146885871887207
    4. ' ==' → logprob: -5.789688587188721
    5. '<' → logprob: -7.164688587188721
    6. '<=' → logprob: -9.414689064025879
    7. '<len' → logprob: -10.164689064025879
    8. ')' → logprob: -10.539689064025879
    9. ']!=' → logprob: -10.539689064025879
    10. ' ' → logprob: -10.914689064025879

Token 472: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.3199920178740285e-05
    2. ' r' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.375022888183594
    4. ' ' → logprob: -14.625022888183594
    5. '```' → logprob: -15.625022888183594
    6. '  ' → logprob: -15.750022888183594
    7. '0' → logprob: -15.875022888183594
    8. '    ' → logprob: -16.625022888183594
    9. '     ' → logprob: -16.875022888183594
    10. '
' → logprob: -17.625022888183594

Token 473: ')])

' (ID: 182226)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004008115269243717
    2. ')])' → logprob: -5.6290082931518555
    3. ')' → logprob: -8.629008293151855
    4. ')]' → logprob: -8.879008293151855
    5. '])]' → logprob: -10.004008293151855
    6. ']))' → logprob: -11.254008293151855
    7. ' ])' → logprob: -11.504008293151855
    8. '])
' → logprob: -11.504008293151855
    9. '))' → logprob: -12.629008293151855
    10. ']' → logprob: -13.004008293151855

Token 474: 'm' (ID: 76)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.874373197555542
    2. '<|end|>' → logprob: -1.249373197555542
    3. ')' → logprob: -2.249373197555542
    4. '   ' → logprob: -2.374373197555542
    5. 'def' → logprob: -2.999373197555542
    6. '       ' → logprob: -4.124373435974121
    7. '    ' → logprob: -4.624373435974121
    8. 'k' → logprob: -5.124373435974121
    9. '...' → logprob: -5.624373435974121
    10. '        ' → logprob: -6.249373435974121

Token 475: ' =' (ID: 314)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.16309110820293427
    2. 'od' → logprob: -3.0380911827087402
    3. 'a' → logprob: -3.2880911827087402
    4. 'ain' → logprob: -3.6630911827087402
    5. 'ap' → logprob: -5.16309118270874
    6. 'def' → logprob: -5.28809118270874
    7. 'in' → logprob: -5.41309118270874
    8. 'max' → logprob: -5.41309118270874
    9. ' =' → logprob: -5.66309118270874
    10. 'ath' → logprob: -5.78809118270874

Token 476: ' list' (ID: 1562)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.9771372079849243
    2. '[' → logprob: -1.3521372079849243
    3. '[n' → logprob: -1.8521372079849243
    4. ' [' → logprob: -2.6021370887756348
    5. '[]' → logprob: -3.1021370887756348
    6. 'n' → logprob: -3.6021370887756348
    7. '0' → logprob: -3.9771370887756348
    8. '[max' → logprob: -4.227137088775635
    9. 'int' → logprob: -4.977137088775635
    10. '[m' → logprob: -5.727137088775635

Token 477: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02883143164217472
    2. '(range' → logprob: -4.403831481933594
    3. '(read' → logprob: -4.403831481933594
    4. '()' → logprob: -5.653831481933594
    5. '(' → logprob: -8.403831481933594
    6. '(int' → logprob: -9.778831481933594
    7. '(m' → logprob: -10.278831481933594
    8. 'map' → logprob: -10.653831481933594
    9. '([]' → logprob: -10.778831481933594
    10. '([' → logprob: -10.903831481933594

Token 478: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016740791499614716
    2. 'int' → logprob: -4.141740798950195
    3. ',int' → logprob: -8.016740798950195
    4. '   ' → logprob: -8.141740798950195
    5. ',' → logprob: -10.891740798950195
    6. '```' → logprob: -11.391740798950195
    7. ' int' → logprob: -11.766740798950195
    8. '[int' → logprob: -12.016740798950195
    9. ' (' → logprob: -12.141740798950195
    10. '(lambda' → logprob: -12.141740798950195

Token 479: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.0022191302850842476
    2. 'read' → logprob: -6.127219200134277
    3. '(' → logprob: -10.877219200134277
    4. ',' → logprob: -12.752219200134277
    5. '(sys' → logprob: -12.752219200134277
    6. '(
' → logprob: -13.252219200134277
    7. '(),' → logprob: -13.377219200134277
    8. '()' → logprob: -13.502219200134277
    9. ' (' → logprob: -14.127219200134277
    10. '	read' → logprob: -14.252219200134277

Token 480: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.546478935983032e-05
    2. ' readline' → logprob: -11.125025749206543
    3. '(read' → logprob: -12.750025749206543
    4. ' read' → logprob: -13.125025749206543
    5. 'sys' → logprob: -13.500025749206543
    6. 'input' → logprob: -13.500025749206543
    7. 'lambda' → logprob: -14.500025749206543
    8. '   ' → logprob: -14.625025749206543
    9. 'range' → logprob: -14.875025749206543
    10. 'readonly' → logprob: -14.875025749206543

Token 481: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04556514322757721
    2. '(read' → logprob: -4.045565128326416
    3. 'read' → logprob: -4.420565128326416
    4. '.readline' → logprob: -5.545565128326416
    5. '()' → logprob: -5.670565128326416
    6. '())' → logprob: -5.795565128326416
    7. 'line' → logprob: -5.795565128326416
    8. '(line' → logprob: -7.420565128326416
    9. '()).' → logprob: -7.920565128326416
    10. '()))' → logprob: -9.045565605163574

Token 482: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.055102866142988205
    2. 'read' → logprob: -3.055102825164795
    3. 'strip' → logprob: -5.055102825164795
    4. ')' → logprob: -9.930103302001953
    5. 'rstrip' → logprob: -10.305103302001953
    6. '(split' → logprob: -11.305103302001953
    7. 'decode' → logprob: -11.555103302001953
    8. '(read' → logprob: -12.430103302001953
    9. '().' → logprob: -12.930103302001953
    10. ' split' → logprob: -13.430103302001953

Token 483: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11395855993032455
    2. '))' → logprob: -2.3639585971832275
    3. '()' → logprob: -4.488958358764648
    4. '()))
' → logprob: -6.238958358764648
    5. '(' → logprob: -8.113958358764648
    6. '()));' → logprob: -9.363958358764648
    7. '))
' → logprob: -10.738958358764648
    8. '()))

' → logprob: -10.863958358764648
    9. '())' → logprob: -11.113958358764648
    10. '(),' → logprob: -11.238958358764648

Token 484: 'XD' (ID: 96737)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6876041293144226
    2. '=' → logprob: -1.0626041889190674
    3. '[' → logprob: -2.1876041889190674
    4. 's' → logprob: -5.687603950500488
    5. '#' → logprob: -6.062603950500488
    6. '=[' → logprob: -6.062603950500488
    7. '=[]
' → logprob: -6.062603950500488
    8. '=[]' → logprob: -6.187603950500488
    9. 'x' → logprob: -6.437603950500488
    10. ',' → logprob: -6.437603950500488

Token 486: ' sorted' (ID: 20099)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13243313133716583
    2. ' [' → logprob: -3.3824331760406494
    3. '[n' → logprob: -3.3824331760406494
    4. '[m' → logprob: -3.6324331760406494
    5. '[max' → logprob: -4.63243293762207
    6. '[len' → logprob: -5.00743293762207
    7. '[-' → logprob: -5.75743293762207
    8. '0' → logprob: -6.75743293762207
    9. 'm' → logprob: -6.88243293762207
    10. '[x' → logprob: -7.00743293762207

Token 487: '(zip' (ID: 87520)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.023711493238806725
    2. '(set' → logprob: -3.8987114429473877
    3. '(list' → logprob: -6.023711681365967
    4. '((' → logprob: -8.398711204528809
    5. '([' → logprob: -8.898711204528809
    6. 'm' → logprob: -9.273711204528809
    7. '(X' → logprob: -9.523711204528809
    8. '(range' → logprob: -9.773711204528809
    9. '([(' → logprob: -10.273711204528809
    10. '({' → logprob: -10.398711204528809

Token 488: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1945549100637436
    2. '(m' → logprob: -1.8195549249649048
    3. '(range' → logprob: -4.319554805755615
    4. 'range' → logprob: -6.944554805755615
    5. '[m' → logprob: -9.069555282592773
    6. '([' → logprob: -9.194555282592773
    7. '((' → logprob: -9.694555282592773
    8. '(' → logprob: -10.069555282592773
    9. '[' → logprob: -10.694555282592773
    10. '(zip' → logprob: -11.194555282592773

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5725576281547546
    2. '(range' → logprob: -1.0725576877593994
    3. '(m' → logprob: -3.0725576877593994
    4. 'm' → logprob: -4.07255744934082
    5. ',[' → logprob: -4.69755744934082
    6. ',m' → logprob: -5.19755744934082
    7. 'range' → logprob: -5.32255744934082
    8. '[' → logprob: -5.94755744934082
    9. '([' → logprob: -6.19755744934082
    10. '(n' → logprob: -6.44755744934082

Token 490: ' m' (ID: 284)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003396343090571463
    2. ' range' → logprob: -8.25033950805664
    3. '[' → logprob: -10.00033950805664
    4. '(range' → logprob: -11.00033950805664
    5. 'list' → logprob: -11.37533950805664
    6. 'm' → logprob: -13.75033950805664
    7. 'map' → logprob: -13.75033950805664
    8. 'rang' → logprob: -14.75033950805664
    9. '
' → logprob: -14.87533950805664
    10. 're' → logprob: -15.12533950805664

Token 491: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7686465978622437
    2. '))' → logprob: -1.2686465978622437
    3. ',m' → logprob: -1.5186465978622437
    4. '),' → logprob: -3.893646717071533
    5. ',n' → logprob: -5.643646717071533
    6. ',k' → logprob: -5.768646717071533
    7. '[::-' → logprob: -6.893646717071533
    8. ')))' → logprob: -7.018646717071533
    9. '))
' → logprob: -7.268646717071533
    10. '[:,' → logprob: -7.268646717071533

Token 492: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7663466930389404
    2. ')' → logprob: -1.8913466930389404
    3. 'idx' → logprob: -3.1413466930389404
    4. '<|end|>' → logprob: -3.1413466930389404
    5. '```' → logprob: -3.1413466930389404
    6. 'def' → logprob: -3.2663466930389404
    7. 'n' → logprob: -3.5163466930389404
    8. 'i' → logprob: -3.5163466930389404
    9. 'm' → logprob: -3.7663466930389404
    10. 'dp' → logprob: -3.7663466930389404

Token 493: ' =' (ID: 314)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.17711235582828522
    2. ' =' → logprob: -2.552112340927124
    3. ',' → logprob: -3.177112340927124
    4. '=' → logprob: -4.177112579345703
    5. '_sorted' → logprob: -5.552112579345703
    6. '_values' → logprob: -6.177112579345703
    7. '_vals' → logprob: -6.177112579345703
    8. '.sort' → logprob: -6.302112579345703
    9. 'vals' → logprob: -6.677112579345703
    10. 'd' → logprob: -6.802112579345703

Token 494: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19496433436870575
    2. '[list' → logprob: -2.6949644088745117
    3. '[len' → logprob: -3.4449644088745117
    4. '[m' → logprob: -3.6949644088745117
    5. 'list' → logprob: -4.194964408874512
    6. '[]' → logprob: -4.319964408874512
    7. '[X' → logprob: -4.944964408874512
    8. '[s' → logprob: -5.944964408874512
    9. 'sorted' → logprob: -6.069964408874512
    10. ' [' → logprob: -6.319964408874512

Token 495: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0060843913815915585
    2. 't' → logprob: -5.631084442138672
    3. 'xd' → logprob: -6.881084442138672
    4. 'i' → logprob: -7.631084442138672
    5. 'v' → logprob: -7.756084442138672
    6. 'a' → logprob: -9.006084442138672
    7. 'd' → logprob: -9.256084442138672
    8. 'p' → logprob: -9.381084442138672
    9. 'e' → logprob: -9.756084442138672
    10. 'm' → logprob: -10.631084442138672

Token 496: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6991497278213501
    2. '[' → logprob: -1.07414972782135
    3. ' for' → logprob: -1.82414972782135
    4. '	for' → logprob: -11.074150085449219
    5. '0' → logprob: -11.824150085449219
    6. ' ' → logprob: -11.949150085449219
    7. '
' → logprob: -12.074150085449219
    8. '   ' → logprob: -12.449150085449219
    9. 'x' → logprob: -12.824150085449219
    10. '```' → logprob: -13.074150085449219

Token 497: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006471486412920058
    2. '_,' → logprob: -8.00064754486084
    3. '_' → logprob: -8.37564754486084
    4. '_x' → logprob: -9.62564754486084
    5. ',' → logprob: -12.25064754486084
    6. ' x' → logprob: -12.25064754486084
    7. '(x' → logprob: -12.50064754486084
    8. '
' → logprob: -15.00064754486084
    9. ',_' → logprob: -15.25064754486084
    10. ',x' → logprob: -15.37564754486084

Token 498: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16967961192131042
    2. ',_' → logprob: -1.9196796417236328
    3. ',x' → logprob: -5.294679641723633
    4. '_,' → logprob: -6.294679641723633
    5. 'x' → logprob: -7.169679641723633
    6. ',v' → logprob: -7.419679641723633
    7. ',y' → logprob: -7.544679641723633
    8. '_' → logprob: -7.669679641723633
    9. '_x' → logprob: -10.044679641723633
    10. 'in' → logprob: -10.169679641723633

Token 499: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00030817187507636845
    2. '_x' → logprob: -8.5003080368042
    3. '_y' → logprob: -9.7503080368042
    4. 'y' → logprob: -10.2503080368042
    5. '_v' → logprob: -12.7503080368042
    6. '_=' → logprob: -12.7503080368042
    7. '_d' → logprob: -13.6253080368042
    8. 'v' → logprob: -13.7503080368042
    9. ' _' → logprob: -14.2503080368042
    10. '_,' → logprob: -14.7503080368042

Token 500: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5790060758590698
    2. 'in' → logprob: -0.8290060758590698
    3. ',' → logprob: -5.829006195068359
    4. 'n' → logprob: -10.70400619506836
    5. 'd' → logprob: -10.95400619506836
    6. 'x' → logprob: -11.20400619506836
    7. ' ' → logprob: -11.82900619506836
    8. '_' → logprob: -11.82900619506836
    9. ',_' → logprob: -11.82900619506836
    10. ')' → logprob: -12.07900619506836

Token 501: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.00030709904967807233
    2. ' XD' → logprob: -8.125307083129883
    3. '_' → logprob: -11.750307083129883
    4. 'Xd' → logprob: -13.250307083129883
    5. '_X' → logprob: -14.375307083129883
    6. 'ZD' → logprob: -15.250307083129883
    7. '
' → logprob: -16.250307083129883
    8. 'X' → logprob: -16.250307083129883
    9. '_,' → logprob: -16.750307083129883
    10. 'xd' → logprob: -16.875307083129883

Token 502: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010615098290145397
    2. ']
' → logprob: -7.37606143951416
    3. 'in' → logprob: -9.37606143951416
    4. '],' → logprob: -9.37606143951416
    5. ' ]' → logprob: -9.87606143951416
    6. '()]' → logprob: -10.00106143951416
    7. ' in' → logprob: -10.00106143951416
    8. ')]' → logprob: -10.62606143951416
    9. '[' → logprob: -11.25106143951416
    10. '_]' → logprob: -11.75106143951416

Token 503: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3980015814304352
    2. 'for' → logprob: -2.2730016708374023
    3. 'def' → logprob: -2.6480016708374023
    4. 'd' → logprob: -2.8980016708374023
    5. 'i' → logprob: -3.5230016708374023
    6. '```' → logprob: -3.7730016708374023
    7. 'res' → logprob: -4.898001670837402
    8. 'pos' → logprob: -4.898001670837402
    9. 'idx' → logprob: -5.523001670837402
    10. 'l' → logprob: -5.773001670837402

Token 504: ' Ob' (ID: 3057)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1406729370355606
    2. 'def' → logprob: -3.5156729221343994
    3. 'for' → logprob: -4.0156731605529785
    4. 'd' → logprob: -4.3906731605529785
    5. 'l' → logprob: -4.7656731605529785
    6. 'f' → logprob: -4.8906731605529785
    7. 'from' → logprob: -5.0156731605529785
    8. 'pos' → logprob: -5.2656731605529785
    9. 'idx' → logprob: -5.6406731605529785
    10. '#' → logprob: -5.6406731605529785

Token 505: 'sc' (ID: 2786)
  Prédit: 'serve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'serve' → logprob: -0.9427914023399353
    2. 'served' → logprob: -1.31779146194458
    3. 's' → logprob: -2.31779146194458
    4. 'j' → logprob: -3.06779146194458
    5. 'server' → logprob: -3.56779146194458
    6. 'solete' → logprob: -3.81779146194458
    7. 'servable' → logprob: -3.94279146194458
    8. 'v' → logprob: -4.06779146194458
    9. 'jective' → logprob: -4.06779146194458
    10. 'ject' → logprob: -4.31779146194458

Token 506: 'ure' (ID: 627)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5465375781059265
    2. 'sc' → logprob: -1.2965376377105713
    3. 'fuscated' → logprob: -2.2965376377105713
    4. 'fusc' → logprob: -3.4215376377105713
    5. '```' → logprob: -5.421537399291992
    6. 'def' → logprob: -5.921537399291992
    7. 'usc' → logprob: -6.046537399291992
    8. 'use' → logprob: -6.921537399291992
    9. '#' → logprob: -7.171537399291992
    10. 'fu' → logprob: -8.296537399291992

Token 507: ' bis' (ID: 7204)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2997043132781982
    2. 'dp' → logprob: -1.5497043132781982
    3. 'max' → logprob: -2.6747043132781982
    4. '```' → logprob: -2.7997043132781982
    5. 'd' → logprob: -2.9247043132781982
    6. '_' → logprob: -3.0497043132781982
    7. 'x' → logprob: -3.2997043132781982
    8. 'idx' → logprob: -3.2997043132781982
    9. 'i' → logprob: -3.4247043132781982
    10. 'n' → logprob: -4.049704551696777

Token 508: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.460291767027229e-05
    2. 'ec' → logprob: -10.750094413757324
    3. 't' → logprob: -10.875094413757324
    4. 'e' → logprob: -11.125094413757324
    5. '```' → logprob: -11.750094413757324
    6. 'sect' → logprob: -11.875094413757324
    7. '#' → logprob: -12.000094413757324
    8. 'ct' → logprob: -12.750094413757324
    9. '[' → logprob: -12.875094413757324
    10. 'ort' → logprob: -13.625094413757324

Token 509: ',' (ID: 11)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.4490151107311249
    2. '_right' → logprob: -1.6990151405334473
    3. '_idx' → logprob: -2.5740151405334473
    4. 'idx' → logprob: -3.8240151405334473
    5. '_index' → logprob: -4.199015140533447
    6. 'ins' → logprob: -4.199015140533447
    7. 'X' → logprob: -4.949015140533447
    8. '_x' → logprob: -5.324015140533447
    9. 'left' → logprob: -5.449015140533447
    10. '_pos' → logprob: -5.824015140533447

Token 510: ' assign' (ID: 14975)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.0249128341674805
    2. 'l' → logprob: -1.5249128341674805
    3. 'i' → logprob: -2.1499128341674805
    4. 'pos' → logprob: -2.5249128341674805
    5. 'lo' → logprob: -4.0249128341674805
    6. 'def' → logprob: -4.0249128341674805
    7. 'r' → logprob: -4.1499128341674805
    8. 'k' → logprob: -4.1499128341674805
    9. ' idx' → logprob: -4.1499128341674805
    10. 'x' → logprob: -4.2749128341674805

Token 511: ' using' (ID: 2360)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4484635591506958
    2. 'i' → logprob: -2.0734634399414062
    3. 'pos' → logprob: -2.0734634399414062
    4. 'l' → logprob: -3.1984634399414062
    5. ' idx' → logprob: -4.448463439941406
    6. 'X' → logprob: -4.823463439941406
    7. 'left' → logprob: -4.823463439941406
    8. 'x' → logprob: -5.073463439941406
    9. '_left' → logprob: -5.198463439941406
    10. 'index' → logprob: -5.573463439941406

Token 512: ' a' (ID: 261)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.5715903639793396
    2. 'idx' → logprob: -2.1965904235839844
    3. 'update' → logprob: -2.5715904235839844
    4. 'X' → logprob: -2.9465904235839844
    5. 'b' → logprob: -3.1965904235839844
    6. 'index' → logprob: -3.8215904235839844
    7. 'lambda' → logprob: -4.071590423583984
    8. 'sz' → logprob: -4.071590423583984
    9. 'm' → logprob: -4.321590423583984
    10. 'i' → logprob: -4.696590423583984

Token 513: ' lambda' (ID: 27871)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.4756315052509308
    2. '=' → logprob: -2.6006314754486084
    3. 'pp' → logprob: -2.8506314754486084
    4. 'lambda' → logprob: -3.3506314754486084
    5. 'idx' → logprob: -3.7256314754486084
    6. 'bis' → logprob: -3.7256314754486084
    7. 'max' → logprob: -3.8506314754486084
    8. 'b' → logprob: -3.9756314754486084
    9. '+=' → logprob: -4.3506317138671875
    10. ' =' → logprob: -4.4756317138671875

Token 514: ' inside' (ID: 6772)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.06025230884552
    2. 'pos' → logprob: -1.18525230884552
    3. 'insert' → logprob: -2.4352521896362305
    4. 'ins' → logprob: -3.3102521896362305
    5. 'bis' → logprob: -3.4352521896362305
    6. 'update' → logprob: -3.6852521896362305
    7. 'assign' → logprob: -3.6852521896362305
    8. 'index' → logprob: -3.9352521896362305
    9. 'find' → logprob: -3.9352521896362305
    10. 'i' → logprob: -4.6852521896362305

Token 515: ' list' (ID: 1562)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2327009439468384
    2. 'idx' → logprob: -1.2327009439468384
    3. 'update' → logprob: -1.8577009439468384
    4. 'insert' → logprob: -3.357700824737549
    5. 'm' → logprob: -3.607700824737549
    6. 'assign' → logprob: -3.607700824737549
    7. 'f' → logprob: -3.857700824737549
    8. 'bis' → logprob: -4.107700824737549
    9. '(lambda' → logprob: -4.232700824737549
    10. 'index' → logprob: -4.357700824737549

Token 516: 'comp' (ID: 3697)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.27902302145957947
    2. '[' → logprob: -1.9040230512619019
    3. '[(' → logprob: -3.4040229320526123
    4. 'lambda' → logprob: -4.154023170471191
    5. '[
' → logprob: -4.529023170471191
    6. 'l' → logprob: -5.529023170471191
    7. 'm' → logprob: -6.029023170471191
    8. '(' → logprob: -6.154023170471191
    9. '_' → logprob: -6.154023170471191
    10. '```' → logprob: -6.279023170471191

Token 517: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.090071439743042
    2. 'pos' → logprob: -2.090071439743042
    3. 'i' → logprob: -2.215071439743042
    4. '[' → logprob: -2.215071439743042
    5. 'res' → logprob: -3.465071439743042
    6. 'ix' → logprob: -3.465071439743042
    7. 'ans' → logprob: -3.465071439743042
    8. '[i' → logprob: -3.465071439743042
    9. 'v' → logprob: -3.965071439743042
    10. '[idx' → logprob: -4.215071678161621

Token 518: 'X' (ID: 55)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8926817774772644
    2. 'pos' → logprob: -1.7676818370819092
    3. 'p' → logprob: -2.767681837081909
    4. 'dp' → logprob: -2.767681837081909
    5. 'm' → logprob: -3.267681837081909
    6. 'f' → logprob: -3.392681837081909
    7. 'i' → logprob: -3.517681837081909
    8. 'update' → logprob: -4.01768159866333
    9. 'd' → logprob: -4.14268159866333
    10. 'res' → logprob: -4.89268159866333

Token 519: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09054017812013626
    2. ' =' → logprob: -2.4655401706695557
    3. '=[' → logprob: -7.715540409088135
    4. '[:]' → logprob: -8.215539932250977
    5. '[' → logprob: -8.340539932250977
    6. '=list' → logprob: -8.590539932250977
    7. '[:' → logprob: -9.090539932250977
    8. '=X' → logprob: -9.965539932250977
    9. '_=' → logprob: -10.340539932250977
    10. '_' → logprob: -10.340539932250977

Token 520: ' type' (ID: 1490)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5647844076156616
    2. '[(' → logprob: -1.3147844076156616
    3. '[' → logprob: -2.189784526824951
    4. '[list' → logprob: -3.064784526824951
    5. '(list' → logprob: -6.564784526824951
    6. ' list' → logprob: -7.189784526824951
    7. ' [' → logprob: -7.189784526824951
    8. '[x' → logprob: -8.314784049987793
    9. ' [(' → logprob: -8.439784049987793
    10. 'sorted' → logprob: -8.439784049987793

Token 521: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.19211545586585999
    2. '(' → logprob: -2.817115545272827
    3. '('' → logprob: -3.067115545272827
    4. '(list' → logprob: -3.567115545272827
    5. '(lambda' → logprob: -4.567115306854248
    6. '((' → logprob: -5.067115306854248
    7. '(int' → logprob: -5.317115306854248
    8. '(sorted' → logprob: -5.567115306854248
    9. '([' → logprob: -5.942115306854248
    10. '("' → logprob: -5.942115306854248

Token 522: ')(' (ID: 4898)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.1717592477798462
    2. '('' → logprob: -1.4217592477798462
    3. '(X' → logprob: -1.6717592477798462
    4. '(' → logprob: -3.0467591285705566
    5. '([]' → logprob: -3.1717591285705566
    6. '([' → logprob: -3.4217591285705566
    7. '('',' → logprob: -3.4217591285705566
    8. ')(' → logprob: -3.5467591285705566
    9. '('').' → logprob: -3.6717591285705566
    10. '(()' → logprob: -3.9217591285705566

Token 523: 'map' (ID: 3726)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3744550943374634
    2. '[(' → logprob: -2.499454975128174
    3. 'map' → logprob: -2.749454975128174
    4. '[b' → logprob: -2.749454975128174
    5. 'bis' → logprob: -3.249454975128174
    6. '[i' → logprob: -3.999454975128174
    7. '(map' → logprob: -4.499454975128174
    8. '[x' → logprob: -4.499454975128174
    9. 'b' → logprob: -5.374454975128174
    10. '(b' → logprob: -5.499454975128174

Token 524: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.001113543170504272
    2. 'lambda' → logprob: -7.251113414764404
    3. ' (' → logprob: -8.751113891601562
    4. '(' → logprob: -9.126113891601562
    5. '((' → logprob: -9.751113891601562
    6. '   ' → logprob: -10.251113891601562
    7. '(
' → logprob: -10.876113891601562
    8. '(f' → logprob: -11.376113891601562
    9. '  ' → logprob: -12.501113891601562
    10. ' ' → logprob: -12.626113891601562

Token 525: ' tup' (ID: 84170)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.721321702003479
    2. 'lambda' → logprob: -0.971321702003479
    3. 'i' → logprob: -3.0963215827941895
    4. '(lambda' → logprob: -3.7213215827941895
    5. 'bis' → logprob: -3.8463215827941895
    6. ' x' → logprob: -4.2213215827941895
    7. ' lambda' → logprob: -4.5963215827941895
    8. ' i' → logprob: -5.9713215827941895
    9. 'b' → logprob: -6.0963215827941895
    10. ' bis' → logprob: -6.0963215827941895

Token 526: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012490701861679554
    2. 't' → logprob: -5.762490749359131
    3. 'lambda' → logprob: -6.012490749359131
    4. ' :' → logprob: -6.387490749359131
    5. ',' → logprob: -6.637490749359131
    6. ':t' → logprob: -6.887490749359131
    7. '   ' → logprob: -7.137490749359131
    8. ':
' → logprob: -7.762490749359131
    9. '=lambda' → logprob: -7.762490749359131
    10. '(lambda' → logprob: -8.012490272521973

Token 527: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.053678520023822784
    2. 'XD' → logprob: -3.928678512573242
    3. 't' → logprob: -4.053678512573242
    4. 'b' → logprob: -4.928678512573242
    5. 'X' → logprob: -5.928678512573242
    6. ' bis' → logprob: -6.803678512573242
    7. '(b' → logprob: -7.553678512573242
    8. ' XD' → logprob: -7.553678512573242
    9. 'xd' → logprob: -7.678678512573242
    10. '   ' → logprob: -7.928678512573242

Token 528: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.9504606825648807e-05
    2. 'sect' → logprob: -11.500019073486328
    3. '```' → logprob: -12.875019073486328
    4. '<' → logprob: -13.500019073486328
    5. '[' → logprob: -13.875019073486328
    6. 't' → logprob: -14.625019073486328
    7. '{' → logprob: -14.625019073486328
    8. '#' → logprob: -15.000019073486328
    9. 'e' → logprob: -15.000019073486328
    10. '
' → logprob: -15.000019073486328

Token 529: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0010518652852624655
    2. '_left' → logprob: -7.626051902770996
    3. 'bis' → logprob: -7.751051902770996
    4. '(b' → logprob: -9.626051902770996
    5. '_right' → logprob: -10.376051902770996
    6. ' bis' → logprob: -11.126051902770996
    7. 'b' → logprob: -12.376051902770996
    8. '(' → logprob: -12.626051902770996
    9. '.ins' → logprob: -12.751051902770996
    10. '	b' → logprob: -12.876051902770996

Token 530: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -3.054500666621607e-06
    2. 'ist' → logprob: -14.37500286102295
    3. 'ins' → logprob: -14.75000286102295
    4. '_left' → logprob: -15.12500286102295
    5. 'l' → logprob: -15.37500286102295
    6. 'isk' → logprob: -15.75000286102295
    7. '[' → logprob: -15.75000286102295
    8. 'X' → logprob: -15.87500286102295
    9. 'in' → logprob: -15.87500286102295
    10. 's' → logprob: -16.000003814697266

Token 531: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.20281767845153809
    2. 'ect' → logprob: -1.702817678451538
    3. 't' → logprob: -6.702817916870117
    4. 'st' → logprob: -10.077817916870117
    5. 'e' → logprob: -10.327817916870117
    6. 'pt' → logprob: -10.327817916870117
    7. 'ort' → logprob: -11.202817916870117
    8. 'rt' → logprob: -11.452817916870117
    9. 'n' → logprob: -11.702817916870117
    10. 'sect' → logprob: -11.702817916870117

Token 532: '_right' (ID: 24402)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0006654949975199997
    2. '_left' → logprob: -8.000665664672852
    3. 'left' → logprob: -8.875665664672852
    4. 'X' → logprob: -9.250665664672852
    5. 'right' → logprob: -10.625665664672852
    6. '_right' → logprob: -10.625665664672852
    7. '(' → logprob: -10.625665664672852
    8. 'Left' → logprob: -12.125665664672852
    9. '[X' → logprob: -12.750665664672852
    10. '([' → logprob: -12.875665664672852

Token 533: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -1.9862216504407115e-05
    2. 'X' → logprob: -11.000020027160645
    3. '(' → logprob: -13.000020027160645
    4. '(
' → logprob: -15.250020027160645
    5. ',X' → logprob: -15.875020027160645
    6. ' (' → logprob: -16.000019073486328
    7. '((' → logprob: -16.125019073486328
    8. ',' → logprob: -17.125019073486328
    9. '(T' → logprob: -17.375019073486328
    10. '   ' → logprob: -17.875019073486328

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04379284381866455
    2. ',X' → logprob: -3.168792724609375
    3. '(X' → logprob: -8.043792724609375
    4. 'X' → logprob: -8.293792724609375
    5. ',t' → logprob: -9.168792724609375
    6. ' ,' → logprob: -10.043792724609375
    7. ',
' → logprob: -11.043792724609375
    8. ',x' → logprob: -11.293792724609375
    9. ',T' → logprob: -11.543792724609375
    10. '(' → logprob: -12.168792724609375

Token 535: ' tup' (ID: 84170)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.6100132496794686e-05
    2. ' tup' → logprob: -10.250056266784668
    3. '(t' → logprob: -11.000056266784668
    4. 'T' → logprob: -13.875056266784668
    5. '	t' → logprob: -14.125056266784668
    6. '_t' → logprob: -14.375056266784668
    7. 'x' → logprob: -15.250056266784668
    8. '   ' → logprob: -15.375056266784668
    9. ' ' → logprob: -15.625056266784668
    10. '  ' → logprob: -15.625056266784668

Token 536: '[' (ID: 58)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.5170145630836487
    2. '[' → logprob: -1.017014503479004
    3. 't' → logprob: -3.392014503479004
    4. '(' → logprob: -5.892014503479004
    5. '(x' → logprob: -6.392014503479004
    6. ',' → logprob: -6.392014503479004
    7. ')' → logprob: -7.142014503479004
    8. '),' → logprob: -8.017014503479004
    9. ',t' → logprob: -8.142014503479004
    10. '[t' → logprob: -9.267014503479004

Token 537: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03064940869808197
    2. '1' → logprob: -3.530649423599243
    3. '[' → logprob: -7.280649185180664
    4. '-' → logprob: -9.405649185180664
    5. 'm' → logprob: -10.780649185180664
    6. 'x' → logprob: -10.843149185180664
    7. 't' → logprob: -11.218149185180664
    8. 'X' → logprob: -11.718149185180664
    9. ' ' → logprob: -11.905649185180664
    10. '(' → logprob: -12.093149185180664

Token 538: ']+' (ID: 15344)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.26800981163978577
    2. ',' → logprob: -2.143009901046753
    3. ')' → logprob: -2.893009901046753
    4. ')+' → logprob: -3.518009901046753
    5. ')-' → logprob: -4.518009662628174
    6. ' ),' → logprob: -4.643009662628174
    7. '-' → logprob: -5.143009662628174
    8. ' ,' → logprob: -6.518009662628174
    9. ' -' → logprob: -6.893009662628174
    10. 't' → logprob: -6.893009662628174

Token 539: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26709800958633423
    2. '1' → logprob: -2.3920979499816895
    3. 'm' → logprob: -3.2670979499816895
    4. 'd' → logprob: -3.2670979499816895
    5. '0' → logprob: -3.7670979499816895
    6. '2' → logprob: -4.0170979499816895
    7. 'int' → logprob: -5.7670979499816895
    8. 'k' → logprob: -5.8920979499816895
    9. '5' → logprob: -6.0170979499816895
    10. 'n' → logprob: -6.1420979499816895

Token 540: 'up' (ID: 817)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6624043583869934
    2. 'up' → logprob: -1.6624042987823486
    3. 'd' → logprob: -2.1624042987823486
    4. '1' → logprob: -3.5374042987823486
    5. '999' → logprob: -3.7874042987823486
    6. '[' → logprob: -4.162404537200928
    7. 'uple' → logprob: -4.162404537200928
    8. 'u' → logprob: -5.037404537200928
    9. 'mp' → logprob: -5.162404537200928
    10. '5' → logprob: -5.162404537200928

Token 541: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003222987288609147
    2. '1' → logprob: -6.253222942352295
    3. 't' → logprob: -8.378223419189453
    4. '),' → logprob: -8.878223419189453
    5. '   ' → logprob: -9.128223419189453
    6. ')' → logprob: -9.253223419189453
    7. '#' → logprob: -9.503223419189453
    8. '_max' → logprob: -9.878223419189453
    9. '))' → logprob: -10.190723419189453
    10. ')),' → logprob: -10.253223419189453

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01692037284374237
    2. '0' → logprob: -4.766920566558838
    3. '[' → logprob: -5.141920566558838
    4. '-' → logprob: -7.641920566558838
    5. '2' → logprob: -8.14192008972168
    6. '   ' → logprob: -8.70442008972168
    7. ')' → logprob: -8.82942008972168
    8. '3' → logprob: -8.89192008972168
    9. 'd' → logprob: -9.32942008972168
    10. 'm' → logprob: -9.39192008972168

Token 543: ']-' (ID: 27107)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.003966317046433687
    2. ',' → logprob: -6.378966331481934
    3. ' ),' → logprob: -6.503966331481934
    4. ')' → logprob: -7.503966331481934
    5. '-' → logprob: -9.503966331481934
    6. ')+' → logprob: -10.253966331481934
    7. ')-' → logprob: -11.003966331481934
    8. ' -' → logprob: -11.253966331481934
    9. '),
' → logprob: -11.503966331481934
    10. ' ,' → logprob: -11.753966331481934

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030614540446549654
    2. '0' → logprob: -8.750306129455566
    3. '-' → logprob: -9.875306129455566
    4. ' ' → logprob: -10.125306129455566
    5. 't' → logprob: -10.625306129455566
    6. '2' → logprob: -11.125306129455566
    7. 'm' → logprob: -12.750306129455566
    8. '(-' → logprob: -12.750306129455566
    9. ' -' → logprob: -13.250306129455566
    10. 'X' → logprob: -13.500306129455566

Token 545: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001368453842587769
    2. ',X' → logprob: -7.501368522644043
    3. '),' → logprob: -8.126368522644043
    4. ' ,' → logprob: -8.501368522644043
    5. 't' → logprob: -9.126368522644043
    6. ',t' → logprob: -9.501368522644043
    7. '   ' → logprob: -9.751368522644043
    8. ')),' → logprob: -11.001368522644043
    9. '  ' → logprob: -11.626368522644043
    10. '(X' → logprob: -12.001368522644043

Token 546: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.09013295918703079
    2. ' XD' → logprob: -3.21513295173645
    3. 'enumer' → logprob: -3.46513295173645
    4. 'X' → logprob: -5.590133190155029
    5. '[' → logprob: -6.090133190155029
    6. 'zip' → logprob: -6.215133190155029
    7. ' enumerate' → logprob: -6.215133190155029
    8. '[(' → logprob: -6.590133190155029
    9. '[X' → logprob: -7.715133190155029
    10. 'm' → logprob: -7.715133190155029

Token 547: '))

' (ID: 9746)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12782156467437744
    2. '))' → logprob: -2.127821445465088
    3. ',X' → logprob: -8.127821922302246
    4. '),' → logprob: -8.252821922302246
    5. ')' → logprob: -9.002821922302246
    6. ')))' → logprob: -10.502821922302246
    7. '(X' → logprob: -10.502821922302246
    8. ' ,' → logprob: -10.627821922302246
    9. '   ' → logprob: -10.752821922302246
    10. ',m' → logprob: -11.252821922302246

Token 548: 'init' (ID: 3287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20518487691879272
    2. '[' → logprob: -1.9551849365234375
    3. '<|end|>' → logprob: -3.4551849365234375
    4. ']' → logprob: -4.9551849365234375
    5. '#' → logprob: -6.2051849365234375
    6. 'X' → logprob: -7.7051849365234375
    7. ' ' → logprob: -7.8301849365234375
    8. '
' → logprob: -8.080184936523438
    9. '(' → logprob: -8.205184936523438
    10. '[
' → logprob: -8.330184936523438

Token 549: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.6405310816480778e-05
    2. 'max' → logprob: -11.125016212463379
    3. '_init' → logprob: -13.625016212463379
    4. '_min' → logprob: -16.125017166137695
    5. '```' → logprob: -16.500017166137695
    6. ')_' → logprob: -16.625017166137695
    7. '(max' → logprob: -17.375017166137695
    8. '_' → logprob: -17.750017166137695
    9. '_MAX' → logprob: -18.500017166137695
    10. '#' → logprob: -18.625017166137695

Token 550: '(list' (ID: 13116)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.001208922709338367
    2. '(X' → logprob: -6.876208782196045
    3. 'm' → logprob: -9.126209259033203
    4. '([' → logprob: -10.501209259033203
    5. '(max' → logprob: -10.751209259033203
    6. '(' → logprob: -12.001209259033203
    7. 'X' → logprob: -12.501209259033203
    8. '((' → logprob: -13.251209259033203
    9. '(list' → logprob: -13.251209259033203
    10. '(n' → logprob: -13.626209259033203

Token 551: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.04439247399568558
    2. '(map' → logprob: -3.5443925857543945
    3. '(X' → logprob: -4.5443925857543945
    4. '(' → logprob: -6.0443925857543945
    5. '(m' → logprob: -7.4193925857543945
    6. 'X' → logprob: -7.5443925857543945
    7. 'range' → logprob: -9.044392585754395
    8. '([' → logprob: -9.294392585754395
    9. '[' → logprob: -9.669392585754395
    10. ')' → logprob: -10.169392585754395

Token 552: '(sz' (ID: 80788)
  Prédit: '(sz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sz' → logprob: -0.10263702273368835
    2. '(n' → logprob: -2.8526370525360107
    3. '(' → logprob: -3.2276370525360107
    4. '(num' → logprob: -8.85263729095459
    5. '(len' → logprob: -10.60263729095459
    6. '(m' → logprob: -11.35263729095459
    7. 'n' → logprob: -11.72763729095459
    8. '1' → logprob: -12.22763729095459
    9. 'sz' → logprob: -12.60263729095459
    10. ' sz' → logprob: -12.97763729095459

Token 553: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2528694272041321
    2. ')))' → logprob: -1.5028693675994873
    3. '+' → logprob: -7.502869606018066
    4. ')' → logprob: -9.377869606018066
    5. '))
' → logprob: -9.377869606018066
    6. '()))' → logprob: -9.502869606018066
    7. '))))' → logprob: -10.502869606018066
    8. ' ' → logprob: -10.627869606018066
    9. '-' → logprob: -10.752869606018066
    10. ' ))' → logprob: -11.002869606018066

Token 554: 'update' (ID: 4076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4092980921268463
    2. 'def' → logprob: -2.0342981815338135
    3. '<|end|>' → logprob: -2.2842981815338135
    4. '#' → logprob: -2.9092981815338135
    5. '[' → logprob: -4.034297943115234
    6. ')' → logprob: -4.409297943115234
    7. '0' → logprob: -5.534297943115234
    8. 'while' → logprob: -5.784297943115234
    9. ' for' → logprob: -6.159297943115234
    10. ']' → logprob: -6.409297943115234

Token 555: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00039230400579981506
    2. 'max' → logprob: -8.375391960144043
    3. '(' → logprob: -8.875391960144043
    4. '_min' → logprob: -11.875391960144043
    5. '(max' → logprob: -12.000391960144043
    6. '_' → logprob: -12.875391960144043
    7. '_(' → logprob: -13.375391960144043
    8. '(_' → logprob: -13.625391960144043
    9. 'Max' → logprob: -14.000391960144043
    10. '```' → logprob: -14.250391960144043

Token 556: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01686117984354496
    2. '(n' → logprob: -4.2668609619140625
    3. '<|end|>' → logprob: -7.0168609619140625
    4. '(len' → logprob: -7.5168609619140625
    5. '(sz' → logprob: -7.7668609619140625
    6. '(
' → logprob: -8.516860961914062
    7. '(s' → logprob: -8.641860961914062
    8. ' (' → logprob: -9.141860961914062
    9. '(X' → logprob: -9.266860961914062
    10. '(num' → logprob: -9.516860961914062

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030586346983909607
    2. ',n' → logprob: -6.503058433532715
    3. '(n' → logprob: -7.003058433532715
    4. '-' → logprob: -8.128058433532715
    5. ' ,' → logprob: -8.378058433532715
    6. '(' → logprob: -9.628058433532715
    7. ' -' → logprob: -11.128058433532715
    8. '+' → logprob: -11.378058433532715
    9. ',
' → logprob: -12.003058433532715
    10. ')' → logprob: -12.128058433532715

Token 558: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15759354829788208
    2. 'n' → logprob: -2.7825934886932373
    3. 'sz' → logprob: -3.1575934886932373
    4. '1' → logprob: -3.2825934886932373
    5. '-' → logprob: -7.407593727111816
    6. ' ' → logprob: -7.532593727111816
    7. 'max' → logprob: -7.532593727111816
    8. '2' → logprob: -7.782593727111816
    9. 'm' → logprob: -7.782593727111816
    10. '100' → logprob: -8.032593727111816

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008613395504653454
    2. '))' → logprob: -5.383613586425781
    3. '+' → logprob: -5.883613586425781
    4. '-' → logprob: -6.883613586425781
    5. ')
' → logprob: -9.008613586425781
    6. ')))' → logprob: -11.008613586425781
    7. ' )' → logprob: -11.508613586425781
    8. ' -' → logprob: -11.508613586425781
    9. ' +' → logprob: -12.008613586425781
    10. '+)' → logprob: -13.133613586425781

Token 560: 'com' (ID: 639)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2832697927951813
    2. '#' → logprob: -2.0332698822021484
    3. 'def' → logprob: -3.1582698822021484
    4. 'print' → logprob: -3.2832698822021484
    5. 'i' → logprob: -3.9082698822021484
    6. 'n' → logprob: -6.158269882202148
    7. 'max' → logprob: -6.283269882202148
    8. '<|end|>' → logprob: -6.283269882202148
    9. 'idx' → logprob: -6.408269882202148
    10. 'k' → logprob: -6.408269882202148

Token 561: 'bs' (ID: 6229)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4389851987361908
    2. 'pute' → logprob: -1.5639852285385132
    3. 'b' → logprob: -3.5639851093292236
    4. 'm' → logprob: -3.9389851093292236
    5. 'press' → logprob: -4.063985347747803
    6. 'pleted' → logprob: -4.188985347747803
    7. 'pile' → logprob: -4.188985347747803
    8. 'plete' → logprob: -4.813985347747803
    9. 'bine' → logprob: -5.063985347747803
    10. 'pl' → logprob: -5.063985347747803

Token 562: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43122562766075134
    2. '=' → logprob: -1.0562256574630737
    3. '=[]' → logprob: -7.306225776672363
    4. 'def' → logprob: -7.431225776672363
    5. 'b' → logprob: -8.181225776672363
    6. '_' → logprob: -8.306225776672363
    7. '_max' → logprob: -8.556225776672363
    8. '_count' → logprob: -9.431225776672363
    9. '```' → logprob: -9.806225776672363
    10. '_=' → logprob: -10.431225776672363

Token 563: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.054074447602033615
    2. '1' → logprob: -3.55407452583313
    3. '[n' → logprob: -4.054074287414551
    4. '0' → logprob: -5.304074287414551
    5. '[s' → logprob: -7.929074287414551
    6. '[list' → logprob: -8.67907428741455
    7. ' [' → logprob: -8.80407428741455
    8. '[int' → logprob: -8.80407428741455
    9. '[num' → logprob: -9.30407428741455
    10. 'n' → logprob: -9.42907428741455

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5260539054870605
    2. '0' → logprob: -0.9010539054870605
    3. '[' → logprob: -6.1510539054870605
    4. '[n' → logprob: -8.526054382324219
    5. '(' → logprob: -8.776054382324219
    6. 'n' → logprob: -9.776054382324219
    7. 'ide' → logprob: -9.901054382324219
    8. 'seg' → logprob: -10.276054382324219
    9. '(n' → logprob: -10.276054382324219
    10. ']' → logprob: -10.276054382324219

Token 565: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025454589631408453
    2. ']
' → logprob: -6.377545356750488
    3. ',' → logprob: -7.252545356750488
    4. ']*(' → logprob: -9.877545356750488
    5. ']*' → logprob: -10.127545356750488
    6. ']
' → logprob: -11.377545356750488
    7. ',
' → logprob: -11.502545356750488
    8. ' ]' → logprob: -11.752545356750488
    9. ']+' → logprob: -12.252545356750488
    10. ']

' → logprob: -12.752545356750488

Token 566: 'n' (ID: 77)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.0015092701651155949
    2. 'n' → logprob: -6.876509189605713
    3. '(sz' → logprob: -7.751509189605713
    4. '(n' → logprob: -10.751509666442871
    5. ' sz' → logprob: -11.251509666442871
    6. '(' → logprob: -12.626509666442871
    7. '   ' → logprob: -14.001509666442871
    8. '0' → logprob: -14.001509666442871
    9. 'size' → logprob: -14.376509666442871
    10. 's' → logprob: -14.626509666442871

Token 567: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.6060808522743173e-05
    2. ' +' → logprob: -10.750025749206543
    3. '+
' → logprob: -12.375025749206543
    4. '+n' → logprob: -15.625025749206543
    5. ')' → logprob: -16.50002670288086
    6. '
' → logprob: -16.75002670288086
    7. '```' → logprob: -16.87502670288086
    8. '+)' → logprob: -16.87502670288086
    9. '-' → logprob: -17.50002670288086
    10. '＋' → logprob: -19.37502670288086

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046210684813559055
    2. '2' → logprob: -5.3796210289001465
    3. ' ' → logprob: -14.754621505737305
    4. 'n' → logprob: -15.754621505737305
    5. '```' → logprob: -16.254621505737305
    6. '+' → logprob: -16.504621505737305
    7. '3' → logprob: -16.504621505737305
    8. '(n' → logprob: -17.504621505737305
    9. '   ' → logprob: -18.004621505737305
    10. '(' → logprob: -18.254621505737305

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07895489037036896
    2. ')
' → logprob: -2.5789549350738525
    3. ']' → logprob: -10.578954696655273
    4. '+' → logprob: -11.578954696655273
    5. ')]' → logprob: -11.578954696655273
    6. ')
' → logprob: -11.703954696655273
    7. ')])' → logprob: -13.328954696655273
    8. ')n' → logprob: -13.578954696655273
    9. '#' → logprob: -13.828954696655273
    10. '*' → logprob: -13.828954696655273

Token 570: 't' (ID: 83)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.32523515378125e-05
    2. ' for' → logprob: -10.000062942504883
    3. 'def' → logprob: -11.625062942504883
    4. 'pow' → logprob: -12.125062942504883
    5. 'i' → logprob: -13.000062942504883
    6. '```' → logprob: -15.375062942504883
    7. 'p' → logprob: -15.500062942504883
    8. '#' → logprob: -15.750062942504883
    9. 'import' → logprob: -15.750062942504883
    10. 'from' → logprob: -16.125062942504883

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4262415170669556
    2. 'ab' → logprob: -1.5512415170669556
    3. 'for' → logprob: -1.6762415170669556
    4. 'abs' → logprob: -2.676241397857666
    5. ' =' → logprob: -2.801241397857666
    6. 'mp' → logprob: -2.926241397857666
    7. 'otal' → logprob: -3.426241397857666
    8. 'i' → logprob: -4.301241397857666
    9. 'o' → logprob: -4.551241397857666
    10. '0' → logprob: -4.676241397857666

Token 572: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12757626175880432
    2. '0' → logprob: -2.3775763511657715
    3. 'n' → logprob: -3.8775763511657715
    4. '[' → logprob: -5.8775763511657715
    5. '[n' → logprob: -6.0025763511657715
    6. ' ' → logprob: -8.127575874328613
    7. '2' → logprob: -8.877575874328613
    8. 'pow' → logprob: -9.002575874328613
    9. 'sz' → logprob: -9.127575874328613
    10. '(n' → logprob: -9.252575874328613

Token 573: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38324546813964844
    2. '0' → logprob: -1.2582454681396484
    3. 'n' → logprob: -3.8832454681396484
    4. '[' → logprob: -4.758245468139648
    5. '[n' → logprob: -5.383245468139648
    6. 'sz' → logprob: -9.133245468139648
    7. '2' → logprob: -9.633245468139648
    8. '(n' → logprob: -9.883245468139648
    9. '[int' → logprob: -10.508245468139648
    10. 'pow' → logprob: -11.133245468139648

Token 574: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0625711977481842
    2. ' for' → logprob: -3.3125712871551514
    3. '<|end|>' → logprob: -3.8125712871551514
    4. '
' → logprob: -6.812571048736572
    5. 'i' → logprob: -7.687571048736572
    6. 'while' → logprob: -8.93757152557373
    7. '+' → logprob: -9.31257152557373
    8. ')' → logprob: -9.68757152557373
    9. 'x' → logprob: -9.81257152557373
    10. '<|end|>' → logprob: -9.81257152557373

Token 575: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.56102097814437e-05
    2. 'while' → logprob: -10.625045776367188
    3. ' for' → logprob: -11.500045776367188
    4. 'i' → logprob: -12.250045776367188
    5. '_' → logprob: -13.125045776367188
    6. 'def' → logprob: -13.250045776367188
    7. '```' → logprob: -14.000045776367188
    8. 'from' → logprob: -14.625045776367188
    9. 't' → logprob: -14.875045776367188
    10. 'import' → logprob: -15.625045776367188

Token 576: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03489784896373749
    2. ' i' → logprob: -3.409897804260254
    3. '_' → logprob: -7.534897804260254
    4. 't' → logprob: -8.159897804260254
    5. '_i' → logprob: -8.659897804260254
    6. 'k' → logprob: -9.159897804260254
    7. ' t' → logprob: -10.159897804260254
    8. 'x' → logprob: -10.534897804260254
    9. 'v' → logprob: -11.409897804260254
    10. 'j' → logprob: -11.534897804260254

Token 577: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1808076649904251
    2. 'in' → logprob: -1.8058077096939087
    3. ',' → logprob: -7.055807590484619
    4. ' ' → logprob: -10.555808067321777
    5. 'i' → logprob: -10.930808067321777
    6. '_' → logprob: -10.930808067321777
    7. 'n' → logprob: -10.930808067321777
    8. '	in' → logprob: -11.055808067321777
    9. '_in' → logprob: -11.430808067321777
    10. ')' → logprob: -11.430808067321777

Token 578: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005610681138932705
    2. 'y' → logprob: -6.630610466003418
    3. 'v' → logprob: -7.130610466003418
    4. '_' → logprob: -7.255610466003418
    5. ' d' → logprob: -7.380610466003418
    6. 'c' → logprob: -7.505610466003418
    7. '_d' → logprob: -8.755610466003418
    8. 'k' → logprob: -8.880610466003418
    9. 'm' → logprob: -9.005610466003418
    10. 'w' → logprob: -9.005610466003418

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47634121775627136
    2. 'in' → logprob: -0.9763412475585938
    3. ',' → logprob: -6.101341247558594
    4. ',in' → logprob: -12.351341247558594
    5. '	in' → logprob: -12.726341247558594
    6. ' ' → logprob: -13.101341247558594
    7. 'n' → logprob: -13.351341247558594
    8. ' ,' → logprob: -13.351341247558594
    9. '_in' → logprob: -13.601341247558594
    10. ' ' → logprob: -14.226341247558594

Token 580: ' XD' (ID: 85251)
  Prédit: 'XD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XD' → logprob: -0.3484654724597931
    2. 'zip' → logprob: -1.3484654426574707
    3. ' zip' → logprob: -4.223465442657471
    4. ' XD' → logprob: -4.473465442657471
    5. 'm' → logprob: -5.848465442657471
    6. 'X' → logprob: -6.098465442657471
    7. 'range' → logprob: -7.098465442657471
    8. '(zip' → logprob: -7.973465442657471
    9. 'XZ' → logprob: -7.973465442657471
    10. 'enumer' → logprob: -8.223465919494629

Token 581: '[::-' (ID: 159890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04983445256948471
    2. ':
' → logprob: -3.0498344898223877
    3. ',' → logprob: -7.424834251403809
    4. '   ' → logprob: -7.674834251403809
    5. ' in' → logprob: -10.174834251403809
    6. '[' → logprob: -10.174834251403809
    7. '<|end|>' → logprob: -10.299834251403809
    8. '```' → logprob: -10.549834251403809
    9. '=' → logprob: -11.674834251403809
    10. '):
' → logprob: -12.174834251403809

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8537822961807251
    2. 'range' → logprob: -1.103782296180725
    3. 'enumer' → logprob: -1.728782296180725
    4. 'x' → logprob: -3.1037821769714355
    5. 'ange' → logprob: -4.7287821769714355
    6. 'ex' → logprob: -6.4787821769714355
    7. '```' → logprob: -6.8537821769714355
    8. 'zip' → logprob: -6.8537821769714355
    9. ')' → logprob: -7.2287821769714355
    10. '(range' → logprob: -7.2287821769714355

Token 583: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11985961347818375
    2. '):' → logprob: -2.3698596954345703
    3. '):
' → logprob: -4.49485969543457
    4. ':
' → logprob: -4.86985969543457
    5. ']:' → logprob: -7.99485969543457
    6. ',' → logprob: -8.74485969543457
    7. '   ' → logprob: -9.86985969543457
    8. '}:' → logprob: -11.11985969543457
    9. '>:' → logprob: -11.11985969543457
    10. ']:
' → logprob: -11.86985969543457

Token 584: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08399389684200287
    2. '```' → logprob: -3.333993911743164
    3. ' t' → logprob: -3.583993911743164
    4. 't' → logprob: -4.833993911743164
    5. ' k' → logprob: -5.833993911743164
    6. '       ' → logprob: -5.958993911743164
    7. ' for' → logprob: -6.583993911743164
    8. ' s' → logprob: -8.083993911743164
    9. 'k' → logprob: -8.208993911743164
    10. ',' → logprob: -8.583993911743164

Token 585: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4852023124694824
    2. 'k' → logprob: -1.3602023124694824
    3. 'j' → logprob: -3.1102023124694824
    4. 'l' → logprob: -3.8602023124694824
    5. 'idx' (adapté à ' idx') → logprob: -4.235202312469482
    6. 'p' → logprob: -4.360202312469482
    7. 'r' → logprob: -4.860202312469482
    8. ' i' → logprob: -5.110202312469482
    9. 'pos' → logprob: -5.610202312469482
    10. '   ' → logprob: -5.860202312469482

Token 586: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47412553429603577
    2. '=' → logprob: -0.9741255044937134
    3. ',' → logprob: -10.849125862121582
    4. ' ' → logprob: -12.349125862121582
    5. ')' → logprob: -12.599125862121582
    6. ':' → logprob: -12.724125862121582
    7. '=int' → logprob: -13.224125862121582
    8. '=len' → logprob: -13.474125862121582
    9. '```' → logprob: -13.474125862121582
    10. '+=' → logprob: -13.599125862121582

Token 587: ' n' (ID: 297)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.09141787141561508
    2. 'X' → logprob: -2.4664177894592285
    3. 'update' → logprob: -7.0914177894592285
    4. ' query' → logprob: -7.4664177894592285
    5. 'max' → logprob: -7.5914177894592285
    6. 'x' → logprob: -8.591418266296387
    7. 'min' → logprob: -9.216418266296387
    8. 'bis' → logprob: -9.966418266296387
    9. '(query' → logprob: -10.091418266296387
    10. 'n' → logprob: -10.091418266296387

Token 588: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1271239072084427
    2. ' -' → logprob: -2.2521238327026367
    3. '=' → logprob: -4.627123832702637
    4. ' =' → logprob: -7.002123832702637
    5. 'idx' → logprob: -7.002123832702637
    6. '-x' → logprob: -7.377123832702637
    7. 'x' → logprob: -7.627123832702637
    8. '-=' → logprob: -7.627123832702637
    9. '-
' → logprob: -8.252123832702637
    10. '+' → logprob: -9.002123832702637

Token 589: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8980922102928162
    2. 'X' → logprob: -1.023092269897461
    3. 't' → logprob: -1.773092269897461
    4. 'idx' → logprob: -4.023092269897461
    5. 'bis' → logprob: -4.648092269897461
    6. 'd' → logprob: -4.898092269897461
    7. '(t' → logprob: -5.148092269897461
    8. 'update' → logprob: -5.273092269897461
    9. '(com' → logprob: -5.773092269897461
    10. '1' → logprob: -6.023092269897461

Token 590: '-t' (ID: 2378)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7478326559066772
    2. ' =' → logprob: -1.2478326559066772
    3. '-' → logprob: -2.247832775115967
    4. '=' → logprob: -3.122832775115967
    5. '<|end|>' → logprob: -3.122832775115967
    6. '+' → logprob: -4.747832775115967
    7. '   ' → logprob: -4.997832775115967
    8. '[idx' → logprob: -5.372832775115967
    9. ' +' → logprob: -5.747832775115967
    10. 'idx' → logprob: -5.747832775115967

Token 591: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8490440845489502
    2. '<|end|>' → logprob: -1.7240440845489502
    3. ' +' → logprob: -1.8490440845489502
    4. '   ' → logprob: -2.09904408454895
    5. '
' → logprob: -3.22404408454895
    6. ' =' → logprob: -3.59904408454895
    7. '-' → logprob: -4.099043846130371
    8. '<|end|>' → logprob: -4.974043846130371
    9. '=' → logprob: -5.849043846130371
    10. ')' → logprob: -5.974043846130371

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07141450047492981
    2. 'v' → logprob: -4.571414470672607
    3. '
' → logprob: -4.696414470672607
    4. 't' → logprob: -5.196414470672607
    5. ' =' → logprob: -5.196414470672607
    6. '+' → logprob: -5.446414470672607
    7. ' t' → logprob: -5.696414470672607
    8. ' if' → logprob: -5.946414470672607
    9. ' res' → logprob: -6.071414470672607
    10. '    
' → logprob: -6.071414470672607

Token 593: ' t' (ID: 260)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.7172799110412598
    2. 'val' → logprob: -2.0922799110412598
    3. 'v' → logprob: -2.2172799110412598
    4. 'mx' → logprob: -2.2172799110412598
    5. 'cur' → logprob: -2.3422799110412598
    6. 'res' → logprob: -2.4672799110412598
    7. 'max' → logprob: -2.4672799110412598
    8. 'l' → logprob: -3.4672799110412598
    9. 'r' → logprob: -3.8422799110412598
    10. 't' (adapté à ' t') → logprob: -3.9672799110412598

Token 594: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08207998424768448
    2. ' +=' → logprob: -2.5820798873901367
    3. '=' → logprob: -5.832079887390137
    4. ' =' → logprob: -8.457079887390137
    5. '+' → logprob: -11.332079887390137
    6. ']+=' → logprob: -11.832079887390137
    7. ',' → logprob: -12.332079887390137
    8. '   ' → logprob: -12.332079887390137
    9. '```' → logprob: -12.457079887390137
    10. ')' → logprob: -12.582079887390137

Token 595: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.982165698194876e-05
    2. ' ' → logprob: -9.500080108642578
    3. 'd' → logprob: -12.875080108642578
    4. 'com' → logprob: -14.625080108642578
    5. 'x' → logprob: -15.062580108642578
    6. '   ' → logprob: -15.125080108642578
    7. '0' → logprob: -15.437580108642578
    8. 'update' → logprob: -15.937580108642578
    9. '+' → logprob: -16.250080108642578
    10. '```' → logprob: -16.312580108642578

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. 'd' → logprob: -11.250028610229492
    3. ' ' → logprob: -12.000028610229492
    4. 'x' → logprob: -13.000028610229492
    5. 'update' → logprob: -13.125028610229492
    6. 'com' → logprob: -13.500028610229492
    7. 'X' → logprob: -13.500028610229492
    8. '2' → logprob: -14.375028610229492
    9. 'idx' → logprob: -15.125028610229492
    10. '0' → logprob: -15.250028610229492

Token 597: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3971464931964874
    2. 'v' → logprob: -1.772146463394165
    3. 'dp' → logprob: -3.147146463394165
    4. 'res' → logprob: -3.647146463394165
    5. 'val' → logprob: -4.397146701812744
    6. 'max' → logprob: -4.647146701812744
    7. 'idx' → logprob: -4.772146701812744
    8. 'cur' → logprob: -5.147146701812744
    9. ' res' → logprob: -5.147146701812744
    10. ' val' → logprob: -5.647146701812744

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14328798651695251
    2. 'v' → logprob: -3.3932878971099854
    3. 'dp' → logprob: -3.6432878971099854
    4. 'l' → logprob: -4.5182881355285645
    5. 'val' → logprob: -4.5182881355285645
    6. 'res' → logprob: -4.8932881355285645
    7. 'max' → logprob: -5.2682881355285645
    8. 'idx' → logprob: -5.2682881355285645
    9. 'k' → logprob: -5.2682881355285645
    10. '
' → logprob: -5.7682881355285645

Token 599: ' p' (ID: 275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.8042200803756714
    2. 'v' → logprob: -2.054220199584961
    3. 'val' → logprob: -2.054220199584961
    4. 'mx' → logprob: -2.304220199584961
    5. 'cur' → logprob: -2.429220199584961
    6. 'max' → logprob: -2.554220199584961
    7. 'res' → logprob: -2.929220199584961
    8. 'l' → logprob: -2.929220199584961
    9. 'left' → logprob: -3.554220199584961
    10. 'pos' → logprob: -3.679220199584961

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1432074010372162
    2. 'os' → logprob: -2.768207311630249
    3. '=' → logprob: -2.893207311630249
    4. 'rev' → logprob: -4.643207550048828
    5. 'max' → logprob: -6.268207550048828
    6. 'idx' → logprob: -6.768207550048828
    7. '=max' → logprob: -7.643207550048828
    8. 'r' → logprob: -7.768207550048828
    9. 'l' → logprob: -8.893207550048828
    10. '   ' → logprob: -9.018207550048828

Token 601: ' X' (ID: 2127)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.00213146791793406
    2. ' query' → logprob: -6.877131462097168
    3. 'max' → logprob: -7.252131462097168
    4. 'update' → logprob: -8.377131462097168
    5. 'idx' → logprob: -9.127131462097168
    6. '(query' → logprob: -11.752131462097168
    7. '0' → logprob: -11.877131462097168
    8. 'n' → logprob: -12.002131462097168
    9. 'X' → logprob: -12.127131462097168
    10. 'x' → logprob: -12.252131462097168

Token 602: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002810007717926055
    2. 'idx' → logprob: -9.12528133392334
    3. '[' → logprob: -10.25028133392334
    4. 'r' → logprob: -10.50028133392334
    5. '[p' → logprob: -10.75028133392334
    6. '[max' → logprob: -11.37528133392334
    7. '(idx' → logprob: -12.00028133392334
    8. 'lus' → logprob: -12.00028133392334
    9. '[r' → logprob: -12.12528133392334
    10. '[id' → logprob: -12.25028133392334

Token 603: ']
' (ID: 1592)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.005990177858620882
    2. ']' → logprob: -5.505990028381348
    3. 'idx' → logprob: -6.630990028381348
    4. ')' → logprob: -8.630990028381348
    5. '])' → logprob: -9.005990028381348
    6. ']+' → logprob: -9.505990028381348
    7. ']-' → logprob: -10.005990028381348
    8. '[' → logprob: -10.255990028381348
    9. '-' → logprob: -10.630990028381348
    10. '][' → logprob: -10.755990028381348

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09276242554187775
    2. '
' → logprob: -3.7177624702453613
    3. 'v' → logprob: -4.342762470245361
    4. 'p' → logprob: -4.467762470245361
    5. ' if' → logprob: -4.467762470245361
    6. 'if' → logprob: -4.842762470245361
    7. '```' → logprob: -5.217762470245361
    8. '<|end|>' → logprob: -5.967762470245361
    9. 'res' → logprob: -6.092762470245361
    10. ')' → logprob: -6.217762470245361

Token 605: ' p' (ID: 275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9212245941162109
    2. 'val' → logprob: -1.296224594116211
    3. 'v' → logprob: -2.421224594116211
    4. 'com' → logprob: -2.671224594116211
    5. 'res' → logprob: -2.671224594116211
    6. 'cur' → logprob: -3.171224594116211
    7. 'comb' → logprob: -3.796224594116211
    8. 'if' → logprob: -4.171224594116211
    9. 'c' → logprob: -5.171224594116211
    10. 'tmp' → logprob: -5.796224594116211

Token 606: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051443878561258316
    2. ' =' → logprob: -3.0514438152313232
    3. '=max' → logprob: -6.676444053649902
    4. '+=' → logprob: -8.051444053649902
    5. 'max' → logprob: -8.301444053649902
    6. 'if' → logprob: -8.301444053649902
    7. '+' → logprob: -8.551444053649902
    8. '-=' → logprob: -8.551444053649902
    9. '-' → logprob: -9.176444053649902
    10. '>=' → logprob: -9.801444053649902

Token 607: ' query' (ID: 5703)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16318204998970032
    2. 'query' → logprob: -1.913182020187378
    3. 'p' → logprob: -6.538182258605957
    4. ' max' → logprob: -7.288182258605957
    5. 'update' → logprob: -7.913182258605957
    6. ' query' → logprob: -8.288182258605957
    7. 'min' → logprob: -9.163182258605957
    8. '0' → logprob: -10.538182258605957
    9. '(max' → logprob: -11.038182258605957
    10. 'n' → logprob: -11.163182258605957

Token 608: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.002615847857668996
    2. 'max' → logprob: -6.002615928649902
    3. '(p' → logprob: -9.252615928649902
    4. 'p' → logprob: -11.252615928649902
    5. '_min' → logprob: -11.502615928649902
    6. '```' → logprob: -12.627615928649902
    7. '_(' → logprob: -12.877615928649902
    8. '(' → logprob: -12.877615928649902
    9. '(max' → logprob: -13.002615928649902
    10. 'query' → logprob: -13.252615928649902

Token 609: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.2873656451702118
    2. '(p' → logprob: -1.4123656749725342
    3. '(' → logprob: -5.537365436553955
    4. '(x' → logprob: -6.287365436553955
    5. 'p' → logprob: -8.787365913391113
    6. 'idx' → logprob: -9.287365913391113
    7. '(n' → logprob: -10.162365913391113
    8. '(index' → logprob: -10.287365913391113
    9. '(max' → logprob: -10.662365913391113
    10. '(t' → logprob: -11.287365913391113

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25103041529655457
    2. '(p' → logprob: -1.876030445098877
    3. ',p' → logprob: -3.001030445098877
    4. 'p' → logprob: -4.626030445098877
    5. '(' → logprob: -5.626030445098877
    6. '+' → logprob: -6.126030445098877
    7. '(),' → logprob: -6.876030445098877
    8. ' ,' → logprob: -6.876030445098877
    9. ',+' → logprob: -8.251029968261719
    10. ')' → logprob: -8.626029968261719

Token 611: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.8087270038668066e-05
    2. ' p' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.000027656555176
    4. 'n' → logprob: -16.625028610229492
    5. '
' → logprob: -17.750028610229492
    6. ')' → logprob: -18.000028610229492
    7. '  ' → logprob: -18.000028610229492
    8. ' ' → logprob: -18.125028610229492
    9. '(p' → logprob: -18.250028610229492
    10. '```' → logprob: -19.000028610229492

Token 612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07110290974378586
    2. ')+' → logprob: -3.3211028575897217
    3. '+' → logprob: -3.4461028575897217
    4. ')
' → logprob: -8.4461030960083
    5. ' +' → logprob: -8.9461030960083
    6. ' )' → logprob: -9.4461030960083
    7. '())' → logprob: -9.6961030960083
    8. '()+' → logprob: -10.5711030960083
    9. '))' → logprob: -10.6961030960083
    10. '()' → logprob: -10.8211030960083

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007616679649800062
    2. 'com' → logprob: -5.0076165199279785
    3. 'v' → logprob: -8.507616996765137
    4. 'if' → logprob: -8.757616996765137
    5. 'p' → logprob: -8.757616996765137
    6. '```' → logprob: -8.882616996765137
    7. ' comb' → logprob: -9.632616996765137
    8. ' if' → logprob: -9.757616996765137
    9. 'res' → logprob: -10.507616996765137
    10. 'comb' → logprob: -10.507616996765137

Token 614: ' update' (ID: 4027)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.07160782814025879
    2. ')' → logprob: -2.946607828140259
    3. 'v' → logprob: -5.44660758972168
    4. 'p' → logprob: -5.94660758972168
    5. '   ' → logprob: -6.19660758972168
    6. 'comb' → logprob: -6.69660758972168
    7. ')
' → logprob: -7.07160758972168
    8. 'res' → logprob: -7.32160758972168
    9. 'if' → logprob: -7.44660758972168
    10. ']' → logprob: -7.57160758972168

Token 615: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.664371848164592e-05
    2. 'max' → logprob: -11.125016212463379
    3. '(p' → logprob: -13.625016212463379
    4. '(max' → logprob: -14.500016212463379
    5. '(' → logprob: -17.125017166137695
    6. '_MAX' → logprob: -17.625017166137695
    7. 'Max' → logprob: -17.625017166137695
    8. '_min' → logprob: -17.750017166137695
    9. '```' → logprob: -18.375017166137695
    10. '(_' → logprob: -18.875017166137695

Token 616: '(idx' (ID: 42793)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12695583701133728
    2. '(idx' → logprob: -2.12695574760437
    3. 'p' → logprob: -11.37695598602295
    4. '(' → logprob: -11.62695598602295
    5. '(index' → logprob: -12.87695598602295
    6. 'idx' → logprob: -13.12695598602295
    7. '(x' → logprob: -13.75195598602295
    8. '(k' → logprob: -14.37695598602295
    9. '(
' → logprob: -15.50195598602295
    10. '(n' → logprob: -16.376955032348633

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00564528675749898
    2. ',p' → logprob: -5.255645275115967
    3. ' ,' → logprob: -8.880645751953125
    4. 'p' → logprob: -8.880645751953125
    5. '(p' → logprob: -9.130645751953125
    6. ',
' → logprob: -11.255645751953125
    7. ' p' → logprob: -12.630645751953125
    8. '   ' → logprob: -13.005645751953125
    9. '+' → logprob: -13.005645751953125
    10. '+,' → logprob: -13.505645751953125

Token 618: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005259881727397442
    2. ' p' → logprob: -7.625525951385498
    3. 'max' → logprob: -10.500526428222656
    4. 'x' → logprob: -12.625526428222656
    5. 'idx' → logprob: -12.875526428222656
    6. '   ' → logprob: -13.000526428222656
    7. ' max' → logprob: -13.750526428222656
    8. '(p' → logprob: -15.250526428222656
    9. 'n' → logprob: -15.500526428222656
    10. '  ' → logprob: -16.250526428222656

Token 619: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14741307497024536
    2. '+' → logprob: -2.0224130153656006
    3. '-' → logprob: -6.14741325378418
    4. ' +' → logprob: -6.27241325378418
    5. ' -' → logprob: -8.64741325378418
    6. ')
' → logprob: -8.77241325378418
    7. '))' → logprob: -9.27241325378418
    8. ' )' → logprob: -9.52241325378418
    9. '+)' → logprob: -10.27241325378418
    10. ')+' → logprob: -10.27241325378418

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07641208171844482
    2. 'com' → logprob: -3.3264122009277344
    3. 'print' → logprob: -3.5764122009277344
    4. '<|end|>' → logprob: -4.951412200927734
    5. ')' → logprob: -7.201412200927734
    6. 'for' → logprob: -7.701412200927734
    7. 'p' → logprob: -8.451412200927734
    8. '```' → logprob: -8.826412200927734
    9. ' comb' → logprob: -9.076412200927734
    10. 'comb' → logprob: -9.076412200927734

Token 621: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.000563042180147022
    2. '   ' → logprob: -8.25056266784668
    3. 'c' → logprob: -9.50056266784668
    4. 'if' → logprob: -9.75056266784668
    5. 'p' → logprob: -10.25056266784668
    6. 'v' → logprob: -10.25056266784668
    7. 'for' → logprob: -10.50056266784668
    8. 'comb' (adapté à ' comb') → logprob: -10.87556266784668
    9. 'val' → logprob: -11.87556266784668
    10. 't' → logprob: -12.25056266784668

Token 622: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.246537173457909e-06
    2. '=' → logprob: -14.125003814697266
    3. '[' → logprob: -14.125003814697266
    4. '[s' → logprob: -14.500003814697266
    5. '```' → logprob: -14.625003814697266
    6. ' s' → logprob: -14.750003814697266
    7. ' =' → logprob: -14.750003814697266
    8. '[
' → logprob: -16.125003814697266
    9. '`s' → logprob: -16.250003814697266
    10. '``' → logprob: -16.625003814697266

Token 623: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00045783669338561594
    2. '[p' → logprob: -8.125457763671875
    3. '=' → logprob: -10.125457763671875
    4. ' =' → logprob: -10.125457763671875
    5. '```' → logprob: -10.875457763671875
    6. '[' → logprob: -11.000457763671875
    7. 'idx' → logprob: -11.625457763671875
    8. '=[' → logprob: -11.625457763671875
    9. '\[' → logprob: -12.500457763671875
    10. '[len' → logprob: -12.875457763671875

Token 624: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0303232129663229
    2. '=' → logprob: -3.6553232669830322
    3. ']=' → logprob: -6.280323028564453
    4. '*=' → logprob: -6.780323028564453
    5. ')' → logprob: -8.030323028564453
    6. '   ' → logprob: -8.280323028564453
    7. ' =' → logprob: -9.030323028564453
    8. ' *=' → logprob: -9.780323028564453
    9. ' ]' → logprob: -9.780323028564453
    10. ']*' → logprob: -9.905323028564453

Token 625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12957799434661865
    2. '*=' → logprob: -2.129578113555908
    3. ' =' → logprob: -6.379578113555908
    4. '%=' → logprob: -7.629578113555908
    5. '+=' → logprob: -8.12957763671875
    6. ' *=' → logprob: -9.12957763671875
    7. '```' → logprob: -10.12957763671875
    8. '*' → logprob: -11.62957763671875
    9. '//=' → logprob: -13.25457763671875
    10. '-=' → logprob: -13.75457763671875

Token 626: ' (' (ID: 350)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.13293160498142242
    2. 'com' → logprob: -2.132931709289551
    3. '(' → logprob: -6.257931709289551
    4. '((' → logprob: -6.507931709289551
    5. 'comb' → logprob: -6.757931709289551
    6. '(p' → logprob: -7.257931709289551
    7. 'sum' → logprob: -8.75793170928955
    8. '(sum' → logprob: -8.88293170928955
    9. ' (' → logprob: -9.38293170928955
    10. 'pow' → logprob: -9.50793170928955

Token 627: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08603136241436005
    2. '(com' → logprob: -2.836031436920166
    3. '1' → logprob: -4.961031436920166
    4. 'p' → logprob: -5.086031436920166
    5. '(' → logprob: -5.086031436920166
    6. 'comb' → logprob: -6.086031436920166
    7. '(p' → logprob: -6.461031436920166
    8. '2' → logprob: -8.336030960083008
    9. '   ' → logprob: -9.836030960083008
    10. ' comb' → logprob: -10.336030960083008

Token 628: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.00043817906407639384
    2. 'com' → logprob: -8.00043773651123
    3. 'b' → logprob: -9.62543773651123
    4. 'cs' → logprob: -11.25043773651123
    5. '_com' → logprob: -11.62543773651123
    6. 's' → logprob: -11.62543773651123
    7. '   ' → logprob: -13.25043773651123
    8. '```' → logprob: -13.37543773651123
    9. 'ps' → logprob: -14.50043773651123
    10. '(com' → logprob: -15.12543773651123

Token 629: '.get' (ID: 775)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.6554247140884399
    2. '[p' → logprob: -0.7804247140884399
    3. 'p' → logprob: -4.15542459487915
    4. 'idx' → logprob: -5.03042459487915
    5. '```' → logprob: -9.280425071716309
    6. 'com' → logprob: -9.780425071716309
    7. '[' → logprob: -10.030425071716309
    8. '[-' → logprob: -10.655425071716309
    9. ' idx' → logprob: -11.030425071716309
    10. '(idx' → logprob: -11.155425071716309

Token 630: '(p' (ID: 2407)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.07669685781002045
    2. 'idx' → logprob: -2.9516968727111816
    3. 'p' → logprob: -4.076696872711182
    4. '[idx' → logprob: -5.576696872711182
    5. ' idx' → logprob: -8.576696395874023
    6. '(p' → logprob: -8.701696395874023
    7. 't' → logprob: -9.201696395874023
    8. 'max' → logprob: -9.826696395874023
    9. ')' → logprob: -10.076696395874023
    10. '(' → logprob: -10.201696395874023

Token 631: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7580618858337402
    2. '[idx' → logprob: -1.1330618858337402
    3. '(idx' → logprob: -1.7580618858337402
    4. ']' → logprob: -3.8830618858337402
    5. 'idx' → logprob: -4.75806188583374
    6. 'if' → logprob: -6.13306188583374
    7. 'p' → logprob: -6.50806188583374
    8. '(p' → logprob: -7.13306188583374
    9. '[p' → logprob: -7.13306188583374
    10. '-' → logprob: -7.38306188583374

Token 632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10682826489210129
    2. '0' → logprob: -3.231828212738037
    3. 'idx' → logprob: -3.356828212738037
    4. ',' → logprob: -3.856828212738037
    5. 'p' → logprob: -6.356828212738037
    6. ']' → logprob: -6.856828212738037
    7. '(idx' → logprob: -6.856828212738037
    8. ')' → logprob: -7.606828212738037
    9. '```' → logprob: -8.106828689575195
    10. ' ' → logprob: -8.856828689575195

Token 633: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1357392072677612
    2. ',' → logprob: -1.3857392072677612
    3. 'if' → logprob: -1.3857392072677612
    4. ' if' → logprob: -1.8857392072677612
    5. ']*' → logprob: -4.135739326477051
    6. '*' → logprob: -5.510739326477051
    7. '```' → logprob: -6.635739326477051
    8. '()' → logprob: -7.010739326477051
    9. '   ' → logprob: -7.135739326477051
    10. ')' → logprob: -7.385739326477051

Token 634: ' comb' (ID: 4134)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0288032293319702
    2. 'com' → logprob: -1.1538032293319702
    3. '0' → logprob: -1.4038032293319702
    4. 'lambda' → logprob: -2.7788033485412598
    5. ' lambda' → logprob: -4.90380334854126
    6. '(com' → logprob: -5.27880334854126
    7. ' ' → logprob: -5.90380334854126
    8. 'comb' → logprob: -6.40380334854126
    9. ' comb' → logprob: -7.40380334854126
    10. '(lambda' → logprob: -7.90380334854126

Token 635: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2669592797756195
    2. ')' → logprob: -2.2669591903686523
    3. '-' → logprob: -3.2669591903686523
    4. ']' → logprob: -3.7669591903686523
    5. '1' → logprob: -4.641959190368652
    6. 'and' → logprob: -4.641959190368652
    7. 'x' → logprob: -4.891959190368652
    8. 'ans' → logprob: -5.391959190368652
    9. '[' → logprob: -5.641959190368652
    10. 'if' → logprob: -5.766959190368652

Token 636: '[p' (ID: 23234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2796270549297333
    2. ' if' → logprob: -1.9046270847320557
    3. '*' → logprob: -2.5296270847320557
    4. ']' → logprob: -5.154626846313477
    5. ']*' → logprob: -5.654626846313477
    6. '+' → logprob: -6.904626846313477
    7. ')*' → logprob: -7.154626846313477
    8. '[]' → logprob: -7.154626846313477
    9. 'p' → logprob: -7.154626846313477
    10. ' *' → logprob: -7.279626846313477

Token 637: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006761906202882528
    2. ']*' → logprob: -5.5067620277404785
    3. 'if' → logprob: -7.0067620277404785
    4. '])' → logprob: -7.5067620277404785
    5. ':]' → logprob: -7.5067620277404785
    6. ']+' → logprob: -8.25676155090332
    7. ':' → logprob: -9.13176155090332
    8. '+' → logprob: -9.13176155090332
    9. ' if' → logprob: -9.88176155090332
    10. ']%' → logprob: -10.25676155090332

Token 638: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04074228182435036
    2. ']' → logprob: -3.4157423973083496
    3. ']+' → logprob: -5.29074239730835
    4. '0' → logprob: -7.66574239730835
    5. 'None' → logprob: -8.040741920471191
    6. '])' → logprob: -8.165741920471191
    7. ')' → logprob: -8.415741920471191
    8. ' ' → logprob: -8.540741920471191
    9. ']*' → logprob: -8.540741920471191
    10. 'p' → logprob: -9.040741920471191

Token 639: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029779190197587013
    2. ']*' → logprob: -3.5297791957855225
    3. 'if' → logprob: -11.404779434204102
    4. ' if' → logprob: -12.529779434204102
    5. ']*(' → logprob: -12.904779434204102
    6. ']+' → logprob: -13.029779434204102
    7. '])' → logprob: -13.029779434204102
    8. ']%' → logprob: -13.404779434204102
    9. '],' → logprob: -14.029779434204102
    10. ']*)' → logprob: -14.279779434204102

Token 640: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5430135130882263
    2. ' if' → logprob: -1.418013572692871
    3. '*' → logprob: -1.793013572692871
    4. ' *' → logprob: -5.293013572692871
    5. ')' → logprob: -6.668013572692871
    6. '   ' → logprob: -7.043013572692871
    7. ')*' → logprob: -7.168013572692871
    8. '0' → logprob: -7.668013572692871
    9. ']' → logprob: -8.043013572692871
    10. ' ' → logprob: -8.168013572692871

Token 641: ' hasattr' (ID: 75562)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013349276967346668
    2. 'is' → logprob: -4.8883490562438965
    3. ' p' → logprob: -6.2633490562438965
    4. 'True' → logprob: -6.2633490562438965
    5. ' isinstance' → logprob: -6.8883490562438965
    6. 'False' → logprob: -8.138349533081055
    7. 'has' → logprob: -8.888349533081055
    8. 'type' → logprob: -9.263349533081055
    9. ' hasattr' → logprob: -9.263349533081055
    10. '0' → logprob: -9.388349533081055

Token 642: '(com' (ID: 27868)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25660765171051025
    2. 'dict' → logprob: -1.6316076517105103
    3. 'com' → logprob: -3.8816075325012207
    4. '__' → logprob: -5.131607532501221
    5. 'p' → logprob: -6.256607532501221
    6. 'type' → logprob: -7.256607532501221
    7. 'd' → logprob: -7.256607532501221
    8. 'len' → logprob: -8.381608009338379
    9. '```' → logprob: -8.756608009338379
    10. '(com' → logprob: -8.881608009338379

Token 643: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.1831282675266266
    2. 's' → logprob: -1.8081282377243042
    3. 'ps' → logprob: -6.308128356933594
    4. 'ds' → logprob: -7.183128356933594
    5. 'com' → logprob: -7.933128356933594
    6. 'cs' → logprob: -9.933128356933594
    7. 'b' → logprob: -10.058128356933594
    8. '```' → logprob: -10.183128356933594
    9. 'ods' → logprob: -10.183128356933594
    10. '   ' → logprob: -10.308128356933594

Token 644: ','' (ID: 6620)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.810081422328949
    2. '[idx' → logprob: -1.3100814819335938
    3. '[p' → logprob: -2.5600814819335938
    4. 'if' → logprob: -2.5600814819335938
    5. ',' → logprob: -3.3100814819335938
    6. 'else' → logprob: -3.9350814819335938
    7. ' else' → logprob: -3.9350814819335938
    8. ']' → logprob: -4.060081481933594
    9. ')' → logprob: -4.310081481933594
    10. '-' → logprob: -5.560081481933594

Token 645: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.690834273584187e-05
    2. '___' → logprob: -11.25003719329834
    3. ' __' → logprob: -11.75003719329834
    4. 'len' → logprob: -12.25003719329834
    5. 'getitem' → logprob: -12.37503719329834
    6. '.__' → logprob: -12.62503719329834
    7. '```' → logprob: -13.87503719329834
    8. 'index' → logprob: -14.00003719329834
    9. '#__' → logprob: -14.87503719329834
    10. '  ' → logprob: -15.12503719329834

Token 646: 'getitem' (ID: 147767)
  Prédit: 'getitem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -0.018717197701334953
    2. 'len' → logprob: -4.018717288970947
    3. 'contains' → logprob: -7.518717288970947
    4. 'set' → logprob: -11.268716812133789
    5. 'iter' → logprob: -12.018716812133789
    6. 'class' → logprob: -13.143716812133789
    7. 'item' → logprob: -13.643716812133789
    8. 'call' → logprob: -13.768716812133789
    9. '```' → logprob: -15.143716812133789
    10. 'index' → logprob: -16.01871681213379

Token 647: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6507241129875183
    2. 'else' → logprob: -1.150724172592163
    3. ' else' → logprob: -2.400724172592163
    4. ')' → logprob: -3.275724172592163
    5. ']' → logprob: -4.150723934173584
    6. '(p' → logprob: -5.900723934173584
    7. ',' → logprob: -5.900723934173584
    8. '[]' → logprob: -6.275723934173584
    9. ' ' → logprob: -6.525723934173584
    10. '(' → logprob: -6.525723934173584

Token 648: '')' (ID: 1542)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22888675332069397
    2. ' else' → logprob: -1.7288867235183716
    3. ')' → logprob: -4.103886604309082
    4. ',' → logprob: -4.728886604309082
    5. ']' → logprob: -7.478886604309082
    6. '),' → logprob: -8.353886604309082
    7. ' ' → logprob: -8.353886604309082
    8. '[]' → logprob: -8.978886604309082
    9. 'if' → logprob: -8.978886604309082
    10. '))' → logprob: -9.478886604309082

Token 649: ' else' (ID: 1203)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3849300146102905
    2. ']' → logprob: -1.8849300146102905
    3. ' if' → logprob: -2.00993013381958
    4. ')' → logprob: -2.13493013381958
    5. 'if' → logprob: -2.25993013381958
    6. '```' → logprob: -2.50993013381958
    7. 'else' → logprob: -2.63493013381958
    8. '+' → logprob: -3.50993013381958
    9. ' else' → logprob: -3.63493013381958
    10. '-' → logprob: -4.63493013381958

Token 650: ' ' (ID: 220)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.15116441249847412
    2. '(com' → logprob: -2.4011645317077637
    3. '1' → logprob: -3.4011645317077637
    4. '0' → logprob: -4.901164531707764
    5. ' comb' → logprob: -5.651164531707764
    6. 'comb' → logprob: -6.151164531707764
    7. '(' → logprob: -6.276164531707764
    8. ' ' → logprob: -7.901164531707764
    9. ' (' → logprob: -8.026164054870605
    10. 'mod' → logprob: -8.401164054870605

Token 651: '1' (ID: 16)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.11752744764089584
    2. '1' → logprob: -2.617527484893799
    3. '0' → logprob: -3.617527484893799
    4. '(com' → logprob: -4.617527484893799
    5. 'comb' → logprob: -7.617527484893799
    6. '(' → logprob: -8.36752700805664
    7. 'mod' → logprob: -8.74252700805664
    8. ' ' → logprob: -9.61752700805664
    9. 'len' → logprob: -9.86752700805664
    10. 'lambda' → logprob: -10.61752700805664

Token 652: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.36867639422416687
    2. ' *' → logprob: -1.8686764240264893
    3. ')' → logprob: -2.3686764240264893
    4. ')*' → logprob: -3.3686764240264893
    5. '   ' → logprob: -5.36867618560791
    6. '*(' → logprob: -5.36867618560791
    7. '*p' → logprob: -5.61867618560791
    8. '[p' → logprob: -5.74367618560791
    9. ')*(' → logprob: -5.99367618560791
    10. 'if' → logprob: -6.61867618560791

Token 653: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5918039083480835
    2. '*' → logprob: -0.8418039083480835
    3. '+' → logprob: -4.591804027557373
    4. ' +' → logprob: -5.466804027557373
    5. ')' → logprob: -7.716804027557373
    6. '*(' → logprob: -7.966804027557373
    7. '   ' → logprob: -8.466803550720215
    8. '```' → logprob: -9.216803550720215
    9. '%' → logprob: -9.966803550720215
    10. '**' → logprob: -10.091803550720215

Token 654: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0040227146819233894
    2. '(com' → logprob: -5.629022598266602
    3. '1' → logprob: -8.504022598266602
    4. '(' → logprob: -9.754022598266602
    5. ' comb' → logprob: -10.004022598266602
    6. 'comb' → logprob: -10.254022598266602
    7. '0' → logprob: -10.379022598266602
    8. '   ' → logprob: -11.004022598266602
    9. ' com' → logprob: -12.379022598266602
    10. '
' → logprob: -12.504022598266602

Token 655: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.455048449221067e-05
    2. '+' → logprob: -10.625054359436035
    3. '[' → logprob: -12.250054359436035
    4. '%' → logprob: -12.375054359436035
    5. 'cs' → logprob: -12.375054359436035
    6. ')' → logprob: -12.750054359436035
    7. 'com' → logprob: -13.000054359436035
    8. '_max' → logprob: -13.125054359436035
    9. 'os' → logprob: -13.625054359436035
    10. '[max' → logprob: -13.875054359436035

Token 656: '[idx' (ID: 25582)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0032889400608837605
    2. '[idx' → logprob: -5.753288745880127
    3. '[' → logprob: -9.628289222717285
    4. 'p' → logprob: -11.753289222717285
    5. '```' → logprob: -11.878289222717285
    6. '[
' → logprob: -12.253289222717285
    7. '[(' → logprob: -12.378289222717285
    8. 'idx' → logprob: -12.753289222717285
    9. '[q' → logprob: -12.878289222717285
    10. '(p' → logprob: -13.003289222717285

Token 657: '+' (ID: 10)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.10666529834270477
    2. ']' → logprob: -2.9816653728485107
    3. '])' → logprob: -3.2316653728485107
    4. ')' → logprob: -4.731665134429932
    5. '   ' → logprob: -7.856665134429932
    6. 'p' → logprob: -7.856665134429932
    7. '(p' → logprob: -7.981665134429932
    8. '[' → logprob: -8.48166561126709
    9. '][' → logprob: -8.48166561126709
    10. ']*' → logprob: -8.73166561126709

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.625007629394531
    3. ' ' → logprob: -13.250007629394531
    4. ']' → logprob: -13.750007629394531
    5. '`' → logprob: -15.250007629394531
    6. '+' → logprob: -15.375007629394531
    7. '   ' → logprob: -15.500007629394531
    8. ')' → logprob: -15.750007629394531
    9. '0' → logprob: -15.875007629394531
    10. '``' → logprob: -16.75000762939453

Token 659: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030027121305465698
    2. ')%' → logprob: -3.530027151107788
    3. '])' → logprob: -8.780027389526367
    4. ' )' → logprob: -9.780027389526367
    5. '   ' → logprob: -11.280027389526367
    6. '%' → logprob: -11.280027389526367
    7. ']%' → logprob: -12.155027389526367
    8. '```' → logprob: -12.155027389526367
    9. ']' → logprob: -12.280027389526367
    10. '*' → logprob: -12.530027389526367

Token 660: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05033165588974953
    2. ' %' → logprob: -3.0503315925598145
    3. '[idx' → logprob: -6.8003315925598145
    4. ')' → logprob: -8.675332069396973
    5. '   ' → logprob: -8.925332069396973
    6. ')%' → logprob: -9.300332069396973
    7. '[' → logprob: -9.550332069396973
    8. ']' → logprob: -10.050332069396973
    9. '```' → logprob: -10.300332069396973
    10. ']%' → logprob: -10.925332069396973

Token 661: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0012684474932029843
    2. '998' → logprob: -7.25126838684082
    3. ' mod' → logprob: -7.50126838684082
    4. '(mod' → logprob: -12.12626838684082
    5. ' ' → logprob: -14.87626838684082
    6. '	mod' → logprob: -15.87626838684082
    7. 'MOD' → logprob: -17.50126838684082
    8. '999' → logprob: -17.62626838684082
    9. '```' → logprob: -17.75126838684082
    10. '`' → logprob: -18.87626838684082

Token 662: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6557865738868713
    2. ')' → logprob: -1.5307865142822266
    3. '[' → logprob: -1.9057865142822266
    4. '<|end|>' → logprob: -2.4057865142822266
    5. '```' → logprob: -4.780786514282227
    6. '[
' → logprob: -5.030786514282227
    7. '
' → logprob: -5.530786514282227
    8. '[]' → logprob: -6.405786514282227
    9. ')]' → logprob: -6.905786514282227
    10. '[index' → logprob: -7.405786514282227

Token 663: ' hasattr' (ID: 75562)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6531272530555725
    2. 'idx' → logprob: -0.7781272530555725
    3. ' idx' → logprob: -4.903127193450928
    4. 'has' → logprob: -5.278127193450928
    5. ' p' → logprob: -5.403127193450928
    6. 'x' → logprob: -7.528127193450928
    7. '(idx' → logprob: -7.528127193450928
    8. '0' → logprob: -8.028127670288086
    9. '(p' → logprob: -8.278127670288086
    10. 'True' → logprob: -8.403127670288086

Token 664: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -2.935296834039036e-06
    2. 'com' → logprob: -12.87500286102295
    3. '(' → logprob: -15.25000286102295
    4. '(con' → logprob: -16.625003814697266
    5. '(has' → logprob: -18.125003814697266
    6. '(c' → logprob: -18.250003814697266
    7. ' (' → logprob: -18.500003814697266
    8. '=com' → logprob: -18.625003814697266
    9. '__(' → logprob: -18.750003814697266
    10. '<com' → logprob: -18.875003814697266

Token 665: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.0037992498837411404
    2. 's' → logprob: -5.6287994384765625
    3. '_bs' → logprob: -9.628799438476562
    4. 'ps' → logprob: -9.878799438476562
    5. 'b' → logprob: -10.378799438476562
    6. '_com' → logprob: -10.503799438476562
    7. '_s' → logprob: -11.628799438476562
    8. 'com' → logprob: -11.753799438476562
    9. '```' → logprob: -13.128799438476562
    10. '_' → logprob: -13.753799438476562

Token 666: ','' (ID: 6620)
  Prédit: '('__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('__' → logprob: -0.8254131078720093
    2. '('' → logprob: -2.075413227081299
    3. ')' → logprob: -2.200413227081299
    4. ''' → logprob: -2.200413227081299
    5. '(' → logprob: -3.200413227081299
    6. '==' → logprob: -3.450413227081299
    7. ',' → logprob: -3.450413227081299
    8. '=' → logprob: -3.825413227081299
    9. '__' → logprob: -4.200413227081299
    10. '('_' → logprob: -4.450413227081299

Token 667: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.033812016248703
    2. ''' → logprob: -3.5338120460510254
    3. '`' → logprob: -5.908812046051025
    4. 'get' → logprob: -7.408812046051025
    5. ' __' → logprob: -8.283811569213867
    6. '('__' → logprob: -8.908811569213867
    7. '```' → logprob: -9.283811569213867
    8. 'getitem' → logprob: -9.533811569213867
    9. ' '__' → logprob: -9.658811569213867
    10. 'len' → logprob: -9.908811569213867

Token 668: 'getitem' (ID: 147767)
  Prédit: 'getitem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -0.003559804055839777
    2. 'contains' → logprob: -6.128559589385986
    3. 'get' → logprob: -6.878559589385986
    4. 'call' → logprob: -8.753560066223145
    5. 'len' → logprob: -8.878560066223145
    6. 'gets' → logprob: -11.253560066223145
    7. 'built' → logprob: -11.878560066223145
    8. 'set' → logprob: -12.128560066223145
    9. 'next' → logprob: -12.128560066223145
    10. 'iter' → logprob: -12.378560066223145

Token 669: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0007983117830008268
    2. '__)' → logprob: -7.250798225402832
    3. '__('' → logprob: -10.875798225402832
    4. '__
' → logprob: -11.250798225402832
    5. '__(' → logprob: -11.250798225402832
    6. '__[' → logprob: -11.250798225402832
    7. ']' → logprob: -11.625798225402832
    8. '']' → logprob: -11.750798225402832
    9. '__((' → logprob: -12.375798225402832
    10. '__,' → logprob: -13.000798225402832

Token 670: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2895547151565552
    2. 'else' → logprob: -2.0395545959472656
    3. ' else' → logprob: -2.1645545959472656
    4. '')' → logprob: -6.039554595947266
    5. ']' → logprob: -6.789554595947266
    6. ''' → logprob: -6.914554595947266
    7. ' ' → logprob: -8.039554595947266
    8. ',' → logprob: -8.289554595947266
    9. '('' → logprob: -8.289554595947266
    10. ' )' → logprob: -8.664554595947266

Token 671: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09256814420223236
    2. ' else' → logprob: -2.4675681591033936
    3. '[' → logprob: -6.8425679206848145
    4. ']' → logprob: -7.2175679206848145
    5. '[]' → logprob: -7.7175679206848145
    6. '[
' → logprob: -7.7175679206848145
    7. ':' → logprob: -8.092568397521973
    8. ')' → logprob: -8.217568397521973
    9. '```' → logprob: -9.092568397521973
    10. '<|end|>' → logprob: -9.467568397521973

Token 672: ' (' (ID: 350)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.4423244595527649
    2. ' (' → logprob: -1.8173243999481201
    3. '1' → logprob: -2.31732439994812
    4. '(' → logprob: -2.44232439994812
    5. ' ' → logprob: -4.942324638366699
    6. '0' → logprob: -6.442324638366699
    7. '(lambda' → logprob: -8.0673246383667
    8. 'com' → logprob: -8.1923246383667
    9. '((' → logprob: -10.0673246383667
    10. '(comm' → logprob: -11.0673246383667

Token 673: 'com' (ID: 639)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.496139794588089
    2. 'com' → logprob: -1.1211397647857666
    3. '1' → logprob: -2.9961397647857666
    4. '(' → logprob: -4.621140003204346
    5. 'comb' → logprob: -5.621140003204346
    6. ' (' → logprob: -6.996140003204346
    7. '0' → logprob: -7.746140003204346
    8. ' comb' → logprob: -8.746139526367188
    9. ' ' → logprob: -8.871139526367188
    10. ' com' → logprob: -10.746139526367188

Token 674: 'bs' (ID: 6229)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13362041115760803
    2. 'bs' → logprob: -2.133620500564575
    3. '_bs' → logprob: -5.883620262145996
    4. ']' → logprob: -6.383620262145996
    5. '```' → logprob: -7.633620262145996
    6. ')s' → logprob: -7.633620262145996
    7. '_s' → logprob: -8.008620262145996
    8. 'b' → logprob: -8.133620262145996
    9. ')' → logprob: -8.758620262145996
    10. ')]' → logprob: -9.508620262145996

Token 675: '[p' (ID: 23234)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.23633168637752533
    2. '[' → logprob: -1.8613317012786865
    3. '[p' → logprob: -3.1113317012786865
    4. ')' → logprob: -5.361331462860107
    5. '+' → logprob: -5.736331462860107
    6. ')[' → logprob: -6.986331462860107
    7. '[
' → logprob: -7.986331462860107
    8. ' +' → logprob: -8.736331939697266
    9. '+[' → logprob: -8.736331939697266
    10. '[len' → logprob: -9.361331939697266

Token 676: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016492825001478195
    2. '[idx' → logprob: -4.14149284362793
    3. '[' → logprob: -8.76649284362793
    4. 'idx' → logprob: -8.89149284362793
    5. ' +' → logprob: -9.89149284362793
    6. '[p' → logprob: -10.14149284362793
    7. '+[' → logprob: -11.26649284362793
    8. '   ' → logprob: -11.76649284362793
    9. ']' → logprob: -11.76649284362793
    10. '][' → logprob: -12.14149284362793

Token 677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.2987729102605954e-05
    2. ' ' → logprob: -10.125042915344238
    3. '+' → logprob: -14.000042915344238
    4. 'idx' → logprob: -14.625042915344238
    5. '0' → logprob: -14.750042915344238
    6. '   ' → logprob: -15.125042915344238
    7. '2' → logprob: -15.125042915344238
    8. '```' → logprob: -16.062543869018555
    9. '[' → logprob: -16.687543869018555
    10. '  ' → logprob: -17.000043869018555

Token 678: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09009036421775818
    2. ')' → logprob: -2.840090274810791
    3. ']' → logprob: -4.215090274810791
    4. ' +' → logprob: -5.590090274810791
    5. ']+' → logprob: -5.715090274810791
    6. ')+' → logprob: -6.090090274810791
    7. '+)' → logprob: -6.590090274810791
    8. '[' → logprob: -7.965090274810791
    9. '[p' → logprob: -7.965090274810791
    10. '])' → logprob: -7.965090274810791

Token 679: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.021292777732014656
    2. ')' → logprob: -4.396292686462402
    3. ' +' → logprob: -4.896292686462402
    4. ')+' → logprob: -8.021292686462402
    5. '+)' → logprob: -8.521292686462402
    6. ']' → logprob: -8.521292686462402
    7. '%' → logprob: -9.021292686462402
    8. '[' → logprob: -9.146292686462402
    9. ')%' → logprob: -9.271292686462402
    10. ']+' → logprob: -10.146292686462402

Token 680: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00377833959646523
    2. ' comb' → logprob: -6.378778457641602
    3. '1' → logprob: -6.503778457641602
    4. '(com' → logprob: -8.128778457641602
    5. ' com' → logprob: -8.753778457641602
    6. 'comb' → logprob: -9.753778457641602
    7. '```' → logprob: -10.878778457641602
    8. '0' → logprob: -11.378778457641602
    9. ' combin' → logprob: -11.628778457641602
    10. ' ' → logprob: -12.128778457641602

Token 681: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0023084578569978476
    2. '_max' → logprob: -7.002308368682861
    3. ']' → logprob: -7.127308368682861
    4. '+' → logprob: -8.37730884552002
    5. ')' → logprob: -8.87730884552002
    6. '1' → logprob: -10.00230884552002
    7. '[' → logprob: -10.62730884552002
    8. '_' → logprob: -10.87730884552002
    9. '_mod' → logprob: -10.87730884552002
    10. '_idx' → logprob: -10.87730884552002

Token 682: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.01942373439669609
    2. '[p' → logprob: -4.269423961639404
    3. 'idx' → logprob: -5.894423961639404
    4. '1' → logprob: -6.769423961639404
    5. '[' → logprob: -7.019423961639404
    6. '+' → logprob: -8.519423484802246
    7. 'p' → logprob: -9.394423484802246
    8. '[(' → logprob: -10.144423484802246
    9. '(idx' → logprob: -10.644423484802246
    10. '   ' → logprob: -11.019423484802246

Token 683: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00334941316395998
    2. '1' → logprob: -5.753349304199219
    3. '])' → logprob: -9.003349304199219
    4. ' +' → logprob: -11.503349304199219
    5. '   ' → logprob: -11.628349304199219
    6. '```' → logprob: -11.878349304199219
    7. '[' → logprob: -12.003349304199219
    8. ']' → logprob: -12.128349304199219
    9. ']+' → logprob: -12.878349304199219
    10. '[idx' → logprob: -13.378349304199219

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003912311512976885
    2. '2' → logprob: -7.875391006469727
    3. ' ' → logprob: -12.625391006469727
    4. '0' → logprob: -13.000391006469727
    5. '```' → logprob: -13.250391006469727
    6. '   ' → logprob: -13.812891006469727
    7. '3' → logprob: -14.875391006469727
    8. '
' → logprob: -15.062891006469727
    9. '``' → logprob: -15.187891006469727
    10. '-' → logprob: -15.312891006469727

Token 685: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006221459712833166
    2. ')%' → logprob: -5.381221294403076
    3. ')])' → logprob: -7.131221294403076
    4. '])' → logprob: -7.756221294403076
    5. ')+' → logprob: -9.131221771240234
    6. '   ' → logprob: -9.631221771240234
    7. ')]' → logprob: -10.006221771240234
    8. '+' → logprob: -10.131221771240234
    9. ']' → logprob: -10.631221771240234
    10. ')#' → logprob: -10.756221771240234

Token 686: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6204067468643188
    2. ')' → logprob: -0.8704067468643188
    3. '<|end|>' → logprob: -3.8704066276550293
    4. ']' → logprob: -4.745406627655029
    5. ' %' → logprob: -4.995406627655029
    6. ')%' → logprob: -5.495406627655029
    7. '+' → logprob: -7.620406627655029
    8. '%)' → logprob: -7.745406627655029
    9. '<|end|>' → logprob: -7.745406627655029
    10. '   ' → logprob: -7.995406627655029

Token 687: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.38694149255752563
    2. ' mod' → logprob: -1.1369414329528809
    3. '(mod' → logprob: -9.886941909790039
    4. ' ' → logprob: -12.136941909790039
    5. '998' → logprob: -12.261941909790039
    6. ' ' → logprob: -12.386941909790039
    7. '```' → logprob: -13.011941909790039
    8. '	mod' → logprob: -13.386941909790039
    9. '`' → logprob: -14.761941909790039
    10. '``' → logprob: -15.511941909790039

Token 688: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 690: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0015012944350019097
    2. 'com' → logprob: -6.626501083374023
    3. '(len' → logprob: -9.126501083374023
    4. '(' → logprob: -9.876501083374023
    5. '(max' → logprob: -11.876501083374023
    6. '(sum' → logprob: -13.251501083374023
    7. 'len' → logprob: -13.376501083374023
    8. 'max' → logprob: -13.501501083374023
    9. '('' → logprob: -14.251501083374023
    10. '()' → logprob: -14.376501083374023

Token 691: 'bs' (ID: 6229)
  Prédit: 'bs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.0008859686204232275
    2. 'b' → logprob: -7.125885963439941
    3. 'ps' → logprob: -9.625885963439941
    4. 's' → logprob: -11.875885963439941
    5. '_bs' → logprob: -11.875885963439941
    6. '```' → logprob: -14.500885963439941
    7. 'pls' → logprob: -15.500885963439941
    8. 'cs' → logprob: -15.625885963439941
    9. 'bps' → logprob: -15.750885963439941
    10. 'vs' → logprob: -16.125886917114258

Token 692: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.012051350437104702
    2. '[' → logprob: -4.762051582336426
    3. ')' → logprob: -5.887051582336426
    4. '[-' → logprob: -7.887051582336426
    5. '[len' → logprob: -8.512051582336426
    6. ']' → logprob: -11.012051582336426
    7. '[idx' → logprob: -11.387051582336426
    8. '[p' → logprob: -11.637051582336426
    9. '[N' → logprob: -11.637051582336426
    10. ')n' → logprob: -11.887051582336426

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.37500286102295
    3. 'n' → logprob: -14.87500286102295
    4. '1' → logprob: -15.00000286102295
    5. '   ' → logprob: -15.37500286102295
    6. '```' → logprob: -15.50000286102295
    7. '[' → logprob: -15.75000286102295
    8. '
' → logprob: -16.937503814697266
    9. '  ' → logprob: -18.187503814697266
    10. '`' → logprob: -18.187503814697266

Token 694: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034142236108891666
    2. '])' → logprob: -8.125341415405273
    3. '})' → logprob: -10.875341415405273
    4. '))' → logprob: -11.000341415405273
    5. ')
' → logprob: -12.750341415405273
    6. '`)' → logprob: -13.000341415405273
    7. ' )' → logprob: -14.375341415405273
    8. '())' → logprob: -14.500341415405273
    9. '>)' → logprob: -14.625341415405273
    10. ')`' → logprob: -14.625341415405273


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 692
Tokens correctement prédits (1ère position, stricte): 257
Tokens correctement prédits (1ère position, avec adaptation): 269
Tokens correctement prédits (top 10): 531
Précision stricte (1ère position): 37.14%
Précision adaptée (1ère position): 38.87%
Précision (top 10): 76.73%
================================================================================
