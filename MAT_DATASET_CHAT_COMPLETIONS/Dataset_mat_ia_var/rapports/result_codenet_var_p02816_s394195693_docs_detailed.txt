================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Main function to find and print all positions where the rolling hash of the difference array
    of list 'a', when taken from a cyclic shift, matches the rolling hash of the difference array
    of list 'b'. For all matches found, prints the starting index and the XOR needed for the match.
    """

    # Define the modulus for the rolling hash computations (a large prime)
    mod = 2 ** 61 - 1
    
    # Precompute powers of 3 modulo 'mod' up to 400,000 for the rolling hash base
    pow3 = [1] * 400001
    # Precompute modular inverses of powers of 3 modulo 'mod' up to 200,000
    pow3i = [1] * 200001
    p = 1  # Will hold successive powers of 3 modulo mod
    
    # Compute the modular inverse of 3 modulo 'mod' using Fermat's Little Theorem
    i3 = pow(3, mod - 2, mod)
    
    # Precompute pow3[i] = 3^i % mod for i from 1 to 400,000
    for i in range(1, 400001):
        pow3[i] = p = p * 3 % mod

    # Reset p for computing inverse powers
    p = 1
    # Precompute pow3i[i] = (3^i)^-1 % mod for i from 1 to 200,000
    for i in range(1, 200001):
        pow3i[i] = p = p * i3 % mod

    class rolling_hash:
        """
        Rolling hash class for efficiently computing hash values of subarrays.
        Assumes input is a sequence of integers.
        """

        def __init__(self, seq, char_list=None):
            """
            Initializes the rolling hash structure for a given integer sequence.

            Args:
                seq (list of int): The input sequence to preprocess for hashing
                char_list: Ignored, for compatibility.
            """
            seq_size = self.seq_size = len(seq)  # Length of the input sequence
            mod = self.mod = 2 ** 61 - 1  # Use same modulus as above
            # Hash[i] stores the hash value from start up to index (i-1)
            Hash = self.Hash = [0] * (seq_size + 1)
            # Build prefix hashes: Hash[i+1] = hash of first (i+1) elements
            for i in range(seq_size):
                # To distinguish zero elements, use (seq[i] + 1)
                Hash[i + 1] = (Hash[i] + (seq[i] + 1) * pow3[i]) % mod

        def calc_hash(self, l, r):
            """
            Computes the hash value of the subarray seq[l:r].

            Args:
                l (int): Start index of the subarray (inclusive, 0-based)
                r (int): End index of the subarray (exclusive)

            Returns:
                int: Hash value of seq[l:r]
            """
            # Compute raw difference and normalize by multiplying with the inverse power
            return ((self.Hash[r] - self.Hash[l]) * pow3i[l] % self.mod)

    # Read input: n is the length of input arrays a and b
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))
    memo = []  # To store all valid starting positions

    # Compute the difference array for cyclic shifts of 'a':
    # a_xor = [a[i-1] ^ a[i] for i in range(n)] concatenated with itself for easy rotation
    a_xor = [a[i - 1] ^ a[i] for i in range(n)] + [a[i - 1] ^ a[i] for i in range(n)]
    # Build the rolling hash for double-length a_xor for cyclical comparisons
    a1 = rolling_hash(a_xor)

    # Compute the difference array for 'b' only (no double-length needed)
    b_xor = [b[i - 1] ^ b[i] for i in range(n)]
    b_hash = rolling_hash(b_xor).calc_hash(0, n)

    # Check all possible cyclic shifts by comparing the hashes
    for i in range(n):
        if a1.calc_hash(i, i + n) == b_hash:
            memo.append(i)

    # The first element from b for later XOR correction
    b0 = b[0]

    # For all matching positions, compute the XOR shift x and output (index, x)
    for i in memo:
        x = b0 ^ a[i]
        print(i, x)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.14868979156017303
    2. '\n' → logprob: -2.7736897468566895
    3. '(' → logprob: -3.6486897468566895
    4. ' ' → logprob: -4.6486897468566895
    5. '   ' → logprob: -4.6486897468566895
    6. ' 
' → logprob: -4.6486897468566895
    7. '    ' → logprob: -5.3986897468566895
    8. '    
' → logprob: -5.5236897468566895
    9. ''' → logprob: -5.8986897468566895
    10. '```' → logprob: -6.2736897468566895

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5938587188720703
    2. '   ' → logprob: -2.0938587188720703
    3. 'return' → logprob: -2.4688587188720703
    4. 'pass' → logprob: -2.8438587188720703
    5. '\' → logprob: -2.9688587188720703
    6. '    ' → logprob: -3.2188587188720703
    7. '\n' → logprob: -3.7188587188720703
    8. ' ' → logprob: -4.46885871887207
    9. ' pass' → logprob: -4.46885871887207
    10. '#' → logprob: -5.09385871887207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9128408432006836
    2. 'Calculate' → logprob: -2.1628408432006836
    3. 'Initialize' → logprob: -2.4128408432006836
    4. 'This' → logprob: -2.4128408432006836
    5. 'Run' → logprob: -3.7878408432006836
    6. 'T' → logprob: -3.7878408432006836
    7. '   ' → logprob: -4.037840843200684
    8. 'Initial' → logprob: -4.037840843200684
    9. 'Runs' → logprob: -4.037840843200684
    10. 'Main' → logprob: -4.162840843200684

Token 6: ' Main' (ID: 7956)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.3347530364990234
    2. 'This' → logprob: -1.5847530364990234
    3. 'Initialize' → logprob: -1.9597530364990234
    4. 'Calculate' → logprob: -1.9597530364990234
    5. 'Print' → logprob: -2.8347530364990234
    6. 'Main' (adapté à ' Main') → logprob: -3.7097530364990234
    7. 'Start' → logprob: -3.9597530364990234
    8. 'Process' → logprob: -4.084753036499023
    9. 'Runs' → logprob: -4.459753036499023
    10. 'Initial' → logprob: -4.584753036499023

Token 7: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08990276604890823
    2. '   ' → logprob: -2.964902877807617
    3. ' ' → logprob: -3.964902877807617
    4. ')' → logprob: -5.214902877807617
    5. '```' → logprob: -5.464902877807617
    6. ' function' → logprob: -6.214902877807617
    7. '()' → logprob: -6.964902877807617
    8. ' code' → logprob: -7.339902877807617
    9. '    ' → logprob: -8.589902877807617
    10. '\' → logprob: -8.714902877807617

Token 8: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6090649962425232
    2. '```' → logprob: -0.9840649962425232
    3. '"""' → logprob: -3.109065055847168
    4. ' to' → logprob: -4.234065055847168
    5. 'def' → logprob: -5.234065055847168
    6. '.' → logprob: -5.359065055847168
    7. ')' → logprob: -5.984065055847168
    8. '()' → logprob: -6.609065055847168
    9. '"""
' → logprob: -6.609065055847168
    10. '``' → logprob: -6.734065055847168

Token 9: ' find' (ID: 1646)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.08747697621583939
    2. ' execute' → logprob: -3.337476968765259
    3. 'run' → logprob: -4.212477207183838
    4. ' process' → logprob: -4.837477207183838
    5. ' start' → logprob: -4.962477207183838
    6. ' initialize' → logprob: -5.337477207183838
    7. 'execute' → logprob: -5.837477207183838
    8. '   ' → logprob: -5.837477207183838
    9. ' perform' → logprob: -6.837477207183838
    10. ' provide' → logprob: -6.962477207183838

Token 10: ' and' (ID: 326)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.01847146824002266
    2. 'the' → logprob: -4.6434712409973145
    3. ' a' → logprob: -5.0184712409973145
    4. ' an' → logprob: -8.143471717834473
    5. ' and' → logprob: -8.393471717834473
    6. ' next' → logprob: -8.643471717834473
    7. 's' → logprob: -8.768471717834473
    8. ' missing' → logprob: -8.768471717834473
    9. ' out' → logprob: -9.268471717834473
    10. 'a' → logprob: -9.268471717834473

Token 11: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5803495645523071
    2. ' return' → logprob: -2.3303494453430176
    3. ' process' → logprob: -2.9553494453430176
    4. ' run' → logprob: -3.3303494453430176
    5. ' display' → logprob: -3.4553494453430176
    6. 'print' → logprob: -3.5803494453430176
    7. '   ' → logprob: -3.5803494453430176
    8. ' create' → logprob: -4.205349445343018
    9. ' test' → logprob: -4.330349445343018
    10. ' analyze' → logprob: -4.330349445343018

Token 12: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.041896987706422806
    2. 'the' → logprob: -3.6668970584869385
    3. ' a' → logprob: -5.041896820068359
    4. ' all' → logprob: -6.166896820068359
    5. ' missing' → logprob: -6.791896820068359
    6. ' best' → logprob: -7.166896820068359
    7. ' matching' → logprob: -7.416896820068359
    8. ' available' → logprob: -8.16689682006836
    9. '```' → logprob: -8.16689682006836
    10. ' valid' → logprob: -8.29189682006836

Token 13: ' positions' (ID: 15897)
  Prédit: ' prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.7912517786026001
    2. ' the' → logprob: -2.1662516593933105
    3. ' pal' → logprob: -2.6662516593933105
    4. ' palindrome' → logprob: -3.0412516593933105
    5. ' primes' → logprob: -3.2912516593933105
    6. ' numbers' → logprob: -3.2912516593933105
    7. ' perfect' → logprob: -3.5412516593933105
    8. ' words' → logprob: -3.5412516593933105
    9. ' an' → logprob: -4.1662516593933105
    10. '   ' → logprob: -4.1662516593933105

Token 14: ' where' (ID: 1919)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1191658154129982
    2. ' in' → logprob: -2.9941658973693848
    3. '   ' → logprob: -3.2441658973693848
    4. '    ' → logprob: -4.994165897369385
    5. ' ' → logprob: -5.119165897369385
    6. '```' → logprob: -5.744165897369385
    7. 'of' → logprob: -6.994165897369385
    8. ' where' → logprob: -7.119165897369385
    9. '  ' → logprob: -7.494165897369385
    10. '(' → logprob: -7.619165897369385

Token 15: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7002865672111511
    2. ' the' → logprob: -1.325286626815796
    3. 'the' → logprob: -2.700286626815796
    4. 'a' → logprob: -2.825286626815796
    5. ''' → logprob: -3.200286626815796
    6. '"' → logprob: -3.450286626815796
    7. '   ' → logprob: -4.575286388397217
    8. ''a' → logprob: -5.450286388397217
    9. ' '' → logprob: -5.700286388397217
    10. 'substring' → logprob: -5.887786388397217

Token 16: ' rolling' (ID: 30530)
  Prédit: 'substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'substring' → logprob: -1.4717644453048706
    2. ' substring' → logprob: -1.8467644453048706
    3. 'needle' → logprob: -2.22176456451416
    4. ' target' → logprob: -2.47176456451416
    5. ' pattern' → logprob: -2.72176456451416
    6. ' word' → logprob: -2.84676456451416
    7. 'pattern' → logprob: -2.97176456451416
    8. 'target' → logprob: -3.34676456451416
    9. ' input' → logprob: -3.59676456451416
    10. 'word' → logprob: -3.72176456451416

Token 17: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.8467593789100647
    2. ' window' → logprob: -1.84675931930542
    3. 'hash' → logprob: -2.09675931930542
    4. '_hash' → logprob: -2.34675931930542
    5. ' sum' → logprob: -3.34675931930542
    6. '_window' → logprob: -3.34675931930542
    7. ' ' → logprob: -3.84675931930542
    8. 'window' → logprob: -3.97175931930542
    9. 'sum' → logprob: -4.34675931930542
    10. ' average' → logprob: -4.84675931930542

Token 18: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08033721894025803
    2. '_' → logprob: -2.9553372859954834
    3. ' is' → logprob: -4.955337047576904
    4. ' _' → logprob: -6.080337047576904
    5. ' matches' → logprob: -6.080337047576904
    6. '    ' → logprob: -6.205337047576904
    7. '(' → logprob: -6.455337047576904
    8. ' (' → logprob: -6.580337047576904
    9. ' s' → logprob: -6.705337047576904
    10. '   ' → logprob: -6.705337047576904

Token 19: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5017277598381042
    2. ' a' → logprob: -1.001727819442749
    3. ' s' → logprob: -4.62672758102417
    4. 'the' → logprob: -5.25172758102417
    5. ' t' → logprob: -5.75172758102417
    6. ' text' → logprob: -6.00172758102417
    7. 's' → logprob: -6.50172758102417
    8. 'a' → logprob: -6.87672758102417
    9. ' substring' → logprob: -6.87672758102417
    10. ' code' → logprob: -7.25172758102417

Token 20: ' difference' (ID: 9809)
  Prédit: ' substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' substring' → logprob: -1.2926019430160522
    2. ' input' → logprob: -1.6676019430160522
    3. ' pattern' → logprob: -1.7926019430160522
    4. ' text' → logprob: -2.292602062225342
    5. ' given' → logprob: -2.917602062225342
    6. ' next' → logprob: -3.292602062225342
    7. ' string' → logprob: -3.292602062225342
    8. 'pattern' → logprob: -3.667602062225342
    9. 'substring' → logprob: -3.917602062225342
    10. ' current' → logprob: -4.292602062225342

Token 21: ' array' (ID: 2644)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2577468454837799
    2. ' ' → logprob: -2.007746934890747
    3. ' s' → logprob: -2.507746934890747
    4. ' between' → logprob: -4.882746696472168
    5. '  ' → logprob: -6.757746696472168
    6. '_' → logprob: -7.007746696472168
    7. ' of' → logprob: -7.507746696472168
    8. ' in' → logprob: -8.007746696472168
    9. '<|end|>' → logprob: -8.257746696472168
    10. '```' → logprob: -9.007746696472168

Token 22: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3515005111694336
    2. ' is' → logprob: -2.6015005111694336
    3. ' matches' → logprob: -2.8515005111694336
    4. '_' → logprob: -3.1015005111694336
    5. 's' → logprob: -3.3515005111694336
    6. ' s' → logprob: -3.6015005111694336
    7. ''' → logprob: -4.476500511169434
    8. '[' → logprob: -5.101500511169434
    9. '```' → logprob: -5.101500511169434
    10. ' _' → logprob: -5.101500511169434

Token 23: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10113464295864105
    2. '_' → logprob: -2.4761345386505127
    3. ' is' → logprob: -6.351134777069092
    4. '[' → logprob: -6.601134777069092
    5. 's' → logprob: -6.601134777069092
    6. '(' → logprob: -6.726134777069092
    7. '```' → logprob: -6.726134777069092
    8. ''' → logprob: -6.976134777069092
    9. ' _' → logprob: -7.351134777069092
    10. '`' → logprob: -7.726134777069092

Token 24: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19551527500152588
    2. '_' → logprob: -2.3205151557922363
    3. ' is' → logprob: -3.5705151557922363
    4. ' matches' → logprob: -4.195515155792236
    5. ''' → logprob: -4.695515155792236
    6. 's' → logprob: -5.320515155792236
    7. '(' → logprob: -5.695515155792236
    8. '```' → logprob: -6.070515155792236
    9. '[' → logprob: -6.320515155792236
    10. '"' → logprob: -6.445515155792236

Token 25: ' list' (ID: 1562)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06984338909387589
    2. 'the' → logprob: -3.819843292236328
    3. ' consecutive' → logprob: -4.069843292236328
    4. ' two' → logprob: -4.319843292236328
    5. ' a' → logprob: -5.069843292236328
    6. ' adjacent' → logprob: -5.319843292236328
    7. 'con' → logprob: -6.944843292236328
    8. 's' → logprob: -7.444843292236328
    9. 'two' → logprob: -7.694843292236328
    10. 'a' → logprob: -8.069843292236328

Token 26: ' '' (ID: 461)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5706014633178711
    2. 's' → logprob: -1.320601463317871
    3. ' of' → logprob: -3.195601463317871
    4. ' a' → logprob: -3.445601463317871
    5. ' elements' → logprob: -3.570601463317871
    6. ' integers' → logprob: -4.195601463317871
    7. ' values' → logprob: -4.445601463317871
    8. 'a' → logprob: -4.695601463317871
    9. '[int' → logprob: -4.945601463317871
    10. '<int' → logprob: -5.570601463317871

Token 27: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3510146141052246
    2. 'arr' → logprob: -1.4760146141052246
    3. ' arr' → logprob: -1.8510146141052246
    4. ' a' → logprob: -2.3510146141052246
    5. 's' → logprob: -2.7260146141052246
    6. 'lst' → logprob: -3.2260146141052246
    7. ' lst' → logprob: -3.2260146141052246
    8. 'nums' → logprob: -3.6010146141052246
    9. ' numbers' → logprob: -4.226014614105225
    10. ' nums' → logprob: -4.226014614105225

Token 28: '',' (ID: 787)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3931412994861603
    2. ''' → logprob: -1.143141269683838
    3. '['' → logprob: -5.893141269683838
    4. ''s' → logprob: -6.643141269683838
    5. ')'' → logprob: -7.393141269683838
    6. 's' → logprob: -7.518141269683838
    7. '   ' → logprob: -8.643141746520996
    8. '```' → logprob: -8.643141746520996
    9. '_'' → logprob: -8.643141746520996
    10. ']'' → logprob: -9.518141746520996

Token 29: ' when' (ID: 1261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3900150060653687
    2. ' matches' → logprob: -1.6400150060653687
    3. ' with' → logprob: -2.140015125274658
    4. ' starting' → logprob: -2.640015125274658
    5. ' which' → logprob: -2.765015125274658
    6. ' is' → logprob: -3.265015125274658
    7. ' the' → logprob: -3.390015125274658
    8. ' and' → logprob: -3.515015125274658
    9. '```' → logprob: -3.515015125274658
    10. '    ' → logprob: -3.515015125274658

Token 30: ' taken' (ID: 6697)
  Prédit: ' compared'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compared' → logprob: -1.157329797744751
    2. ' computed' → logprob: -1.157329797744751
    3. ' applied' → logprob: -1.782329797744751
    4. ' calculated' → logprob: -2.532329797744751
    5. ' equal' → logprob: -3.282329797744751
    6. ' a' → logprob: -3.657329797744751
    7. ' matched' → logprob: -4.282329559326172
    8. ' checked' → logprob: -4.907329559326172
    9. 'computed' → logprob: -5.157329559326172
    10. ' the' → logprob: -5.657329559326172

Token 31: ' from' (ID: 591)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.17760655283927917
    2. ' as' → logprob: -2.1776065826416016
    3. ' from' → logprob: -3.8026065826416016
    4. ' modulo' → logprob: -4.802606582641602
    5. ' ' → logprob: -4.927606582641602
    6. 'as' → logprob: -5.677606582641602
    7. 'over' → logprob: -5.677606582641602
    8. 'from' → logprob: -6.177606582641602
    9. ' with' → logprob: -6.552606582641602
    10. ' in' → logprob: -7.927606582641602

Token 32: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3150732219219208
    2. ' one' → logprob: -2.565073251724243
    3. 'a' → logprob: -2.815073251724243
    4. ' the' → logprob: -3.065073251724243
    5. ' an' → logprob: -3.690073251724243
    6. ' consecutive' → logprob: -4.315073013305664
    7. ' length' → logprob: -4.565073013305664
    8. ' ' → logprob: -4.815073013305664
    9. ' i' → logprob: -4.940073013305664
    10. ' any' → logprob: -5.565073013305664

Token 33: ' cyclic' (ID: 139817)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.21289320290088654
    2. 'n' → logprob: -3.33789324760437
    3. ' certain' → logprob: -3.33789324760437
    4. ' position' → logprob: -3.46289324760437
    5. ' starting' → logprob: -3.83789324760437
    6. ' previous' → logprob: -4.087893009185791
    7. ' single' → logprob: -5.337893009185791
    8. ' list' → logprob: -5.337893009185791
    9. ' a' → logprob: -5.712893009185791
    10. ' start' → logprob: -5.837893009185791

Token 34: ' shift' (ID: 12847)
  Prédit: ' substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.9512141346931458
    2. ' shift' → logprob: -2.326214075088501
    3. ' slice' → logprob: -2.326214075088501
    4. ' difference' → logprob: -2.576214075088501
    5. ' array' → logprob: -2.701214075088501
    6. ' sequence' → logprob: -2.701214075088501
    7. ' segment' → logprob: -3.451214075088501
    8. ' sub' → logprob: -3.576214075088501
    9. ' a' → logprob: -3.701214075088501
    10. 'a' → logprob: -3.701214075088501

Token 35: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6754156947135925
    2. ')' → logprob: -1.3004157543182373
    3. ' ' → logprob: -1.9254157543182373
    4. ',' → logprob: -3.4254157543182373
    5. ' ,' → logprob: -4.425415515899658
    6. ' )' → logprob: -4.550415515899658
    7. ' _' → logprob: -5.050415515899658
    8. '),' → logprob: -6.300415515899658
    9. '[' → logprob: -6.550415515899658
    10. 's' → logprob: -6.675415515899658

Token 36: ' matches' (ID: 15248)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3548645079135895
    2. ' matches' → logprob: -1.354864478111267
    3. ' is' → logprob: -4.604864597320557
    4. ' corresponds' → logprob: -4.854864597320557
    5. ' ,' → logprob: -5.104864597320557
    6. ' contains' → logprob: -5.229864597320557
    7. ' i' → logprob: -6.354864597320557
    8. ' a' → logprob: -6.604864597320557
    9. ' has' → logprob: -6.729864597320557
    10. ' does' → logprob: -6.854864597320557

Token 37: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5919970870018005
    2. ' the' → logprob: -0.8419970870018005
    3. ' ' → logprob: -5.216997146606445
    4. '<|end|>' → logprob: -5.966997146606445
    5. 'the' → logprob: -6.341997146606445
    6. '    ' → logprob: -6.466997146606445
    7. 'a' → logprob: -7.341997146606445
    8. ' an' → logprob: -7.341997146606445
    9. '_' → logprob: -7.841997146606445
    10. '   ' → logprob: -7.966997146606445

Token 38: ' rolling' (ID: 30530)
  Prédit: ' rolling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rolling' → logprob: -1.1469612121582031
    2. ' corresponding' → logprob: -1.3969612121582031
    3. ' hash' → logprob: -1.7719612121582031
    4. ' given' → logprob: -2.271961212158203
    5. ' difference' → logprob: -3.021961212158203
    6. ' previous' → logprob: -3.396961212158203
    7. ' ' → logprob: -3.896961212158203
    8. ' pattern' → logprob: -4.896961212158203
    9. ' space' → logprob: -5.021961212158203
    10. ' initial' → logprob: -5.271961212158203

Token 39: ' hash' (ID: 10691)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010568203404545784
    2. ' _' → logprob: -4.635568141937256
    3. ' ' → logprob: -7.260568141937256
    4. '_hash' → logprob: -10.260568618774414
    5. ' space' → logprob: -10.635568618774414
    6. '_space' → logprob: -10.885568618774414
    7. ' hash' → logprob: -11.385568618774414
    8. ' ▁' → logprob: -12.135568618774414
    9. ')' → logprob: -12.635568618774414
    10. '<|end|>' → logprob: -13.135568618774414

Token 40: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9537920951843262
    2. ' ' → logprob: -0.9537920951843262
    3. '(' → logprob: -1.9537920951843262
    4. ':' → logprob: -4.078792095184326
    5. '   ' → logprob: -4.078792095184326
    6. ')' → logprob: -4.703792095184326
    7. ''' → logprob: -4.953792095184326
    8. '.' → logprob: -5.078792095184326
    9. '    ' → logprob: -5.203792095184326
    10. '```' → logprob: -5.203792095184326

Token 41: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.02320878580212593
    2. ' a' → logprob: -4.1482086181640625
    3. 'the' → logprob: -5.2732086181640625
    4. ' list' → logprob: -7.0232086181640625
    5. ' b' → logprob: -8.648208618164062
    6. ' previous' → logprob: -8.898208618164062
    7. 'a' → logprob: -8.898208618164062
    8. ' another' → logprob: -9.273208618164062
    9. ' difference' → logprob: -9.273208618164062
    10. ' an' → logprob: -9.398208618164062

Token 42: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -1.0235475301742554
    2. ' corresponding' → logprob: -1.5235475301742554
    3. ' given' → logprob: -1.6485475301742554
    4. ' original' → logprob: -3.273547649383545
    5. 'difference' → logprob: -3.273547649383545
    6. ' input' → logprob: -3.398547649383545
    7. ' pattern' → logprob: -3.773547649383545
    8. ' first' → logprob: -4.273547649383545
    9. ' next' → logprob: -4.523547649383545
    10. ' initial' → logprob: -4.648547649383545

Token 43: ' array' (ID: 2644)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7896292805671692
    2. ' ' → logprob: -1.4146292209625244
    3. 's' → logprob: -1.5396292209625244
    4. ' s' → logprob: -3.2896292209625244
    5. ' array' → logprob: -3.5396292209625244
    6. ' _' → logprob: -5.2896294593811035
    7. '<|end|>' → logprob: -5.4146294593811035
    8. '_s' → logprob: -5.5396294593811035
    9. '_array' → logprob: -5.7896294593811035
    10. 'array' → logprob: -6.1646294593811035

Token 44: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7618149518966675
    2. ' of' → logprob: -0.7618149518966675
    3. '_' → logprob: -4.136815071105957
    4. '<|end|>' → logprob: -4.261815071105957
    5. '(' → logprob: -4.636815071105957
    6. ''' → logprob: -5.261815071105957
    7. '```' → logprob: -5.511815071105957
    8. ')' → logprob: -5.761815071105957
    9. ',' → logprob: -5.886815071105957
    10. ' (' → logprob: -6.261815071105957

Token 45: '   ' (ID: 271)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.006159504875540733
    2. '```' → logprob: -6.88115930557251
    3. '   ' → logprob: -7.13115930557251
    4. '    ' → logprob: -7.25615930557251
    5. 's' → logprob: -7.38115930557251
    6. ' ' → logprob: -7.50615930557251
    7. '`' → logprob: -7.88115930557251
    8. ''' → logprob: -8.256159782409668
    9. '[' → logprob: -8.506159782409668
    10. 'a' → logprob: -8.631159782409668

Token 46: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04128943383693695
    2. ' ' → logprob: -4.041289329528809
    3. 'a' → logprob: -5.291289329528809
    4. ' `' → logprob: -5.916289329528809
    5. 'of' (adapté à ' of') → logprob: -6.041289329528809
    6. ' a' → logprob: -6.041289329528809
    7. ''' → logprob: -6.541289329528809
    8. ')' → logprob: -6.666289329528809
    9. ' )' → logprob: -6.791289329528809
    10. '`' → logprob: -7.041289329528809

Token 47: ' list' (ID: 1562)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.884429395198822
    2. ' a' → logprob: -1.1344294548034668
    3. ' list' → logprob: -2.009429454803467
    4. ' b' → logprob: -2.134429454803467
    5. 'a' → logprob: -5.009429454803467
    6. 'b' → logprob: -6.384429454803467
    7. ' '' → logprob: -7.259429454803467
    8. ' `' → logprob: -7.384429454803467
    9. 'the' → logprob: -7.509429454803467
    10. ' an' → logprob: -7.759429454803467

Token 48: ' '' (ID: 461)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.3423196077346802
    2. ' b' → logprob: -1.3423196077346802
    3. ' '' → logprob: -1.8423196077346802
    4. ''' → logprob: -2.2173194885253906
    5. ' `' → logprob: -2.4673194885253906
    6. '```' → logprob: -2.9673194885253906
    7. 'b' → logprob: -4.092319488525391
    8. ' a' → logprob: -4.217319488525391
    9. 'a' → logprob: -4.717319488525391
    10. '_' → logprob: -5.092319488525391

Token 49: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02990877255797386
    2. ' b' → logprob: -3.6549086570739746
    3. 'a' → logprob: -5.779908657073975
    4. 's' → logprob: -8.904909133911133
    5. ' a' → logprob: -8.904909133911133
    6. '   ' → logprob: -9.654909133911133
    7. '```' → logprob: -9.904909133911133
    8. '`' → logprob: -10.529909133911133
    9. ' ' → logprob: -10.904909133911133
    10. 't' → logprob: -11.404909133911133

Token 50: ''.' (ID: 6120)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.175265833735466
    2. ''' → logprob: -2.9252657890319824
    3. '"""' → logprob: -2.9252657890319824
    4. '```' → logprob: -3.9252657890319824
    5. '   ' → logprob: -4.050265789031982
    6. ''''' → logprob: -5.175265789031982
    7. '"""
' → logprob: -5.675265789031982
    8. ''"' → logprob: -5.675265789031982
    9. 'def' → logprob: -7.050265789031982
    10. '".' → logprob: -7.300265789031982

Token 51: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29259034991264343
    2. '
' → logprob: -2.292590379714966
    3. '\' → logprob: -2.667590379714966
    4. '```' → logprob: -3.542590379714966
    5. '    
' → logprob: -4.042590141296387
    6. '\n' → logprob: -4.792590141296387
    7. '    ' → logprob: -5.167590141296387
    8. ' 
' → logprob: -5.167590141296387
    9. '_' → logprob: -5.417590141296387
    10. ' ' → logprob: -6.042590141296387

Token 52: ' all' (ID: 722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7046545147895813
    2. ' i' → logprob: -0.9546545147895813
    3. ' a' → logprob: -2.4546544551849365
    4. ' the' → logprob: -4.329654693603516
    5. ' b' → logprob: -4.704654693603516
    6. '  ' → logprob: -6.454654693603516
    7. ' given' → logprob: -6.829654693603516
    8. ' each' → logprob: -6.829654693603516
    9. ' detecting' → logprob: -6.829654693603516
    10. ' example' → logprob: -6.954654693603516

Token 53: ' matches' (ID: 15248)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14487776160240173
    2. ' positions' → logprob: -2.2698776721954346
    3. 'i' → logprob: -4.269877910614014
    4. ' valid' → logprob: -5.519877910614014
    5. ' shifts' → logprob: -5.519877910614014
    6. ' possible' → logprob: -5.894877910614014
    7. ' indices' → logprob: -6.269877910614014
    8. 'positions' → logprob: -6.644877910614014
    9. ' shift' → logprob: -6.894877910614014
    10. ' cyclic' → logprob: -7.394877910614014

Token 54: ' found' (ID: 2491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14030583202838898
    2. ' ,' → logprob: -2.265305757522583
    3. ':' → logprob: -4.015305995941162
    4. ' :' → logprob: -5.515305995941162
    5. ' ' → logprob: -5.765305995941162
    6. ' in' → logprob: -6.890305995941162
    7. ',
' → logprob: -7.515305995941162
    8. ',:' → logprob: -10.015305519104004
    9. '   ' → logprob: -10.265305519104004
    10. ' of' → logprob: -10.265305519104004

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029283825308084488
    2. ':' → logprob: -3.9042837619781494
    3. ' ,' → logprob: -5.5292840003967285
    4. '   ' → logprob: -5.9042840003967285
    5. ',
' → logprob: -6.9042840003967285
    6. ' :' → logprob: -7.6542840003967285
    7. ':
' → logprob: -8.90428352355957
    8. '```' → logprob: -8.90428352355957
    9. '    ' → logprob: -9.40428352355957
    10. '.' → logprob: -10.15428352355957

Token 56: ' prints' (ID: 33767)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.1167762503027916
    2. ' print' → logprob: -2.24177622795105
    3. '   ' → logprob: -6.616776466369629
    4. 'print' → logprob: -6.741776466369629
    5. ' the' → logprob: -7.741776466369629
    6. ' a' → logprob: -8.366776466369629
    7. ' you' → logprob: -8.866776466369629
    8. ' ' → logprob: -8.866776466369629
    9. ' ' → logprob: -8.991776466369629
    10. '       ' → logprob: -9.741776466369629

Token 57: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1229717805981636
    2. ' their' → logprob: -2.247971773147583
    3. 'the' → logprob: -5.247972011566162
    4. ' all' → logprob: -6.622972011566162
    5. ' a' → logprob: -6.747972011566162
    6. ' ' → logprob: -7.622972011566162
    7. '```' → logprob: -7.747972011566162
    8. '<|end|>' → logprob: -7.872972011566162
    9. 'their' → logprob: -8.247971534729004
    10. '  ' → logprob: -9.497971534729004

Token 58: ' starting' (ID: 8601)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.538428544998169
    2. ' position' → logprob: -1.913428544998169
    3. ' positions' → logprob: -2.413428544998169
    4. ' corresponding' → logprob: -2.538428544998169
    5. ' indices' → logprob: -3.538428544998169
    6. ' starting' → logprob: -3.538428544998169
    7. 'index' → logprob: -4.03842830657959
    8. ' next' → logprob: -5.28842830657959
    9. 'positions' → logprob: -6.03842830657959
    10. 'position' → logprob: -6.16342830657959

Token 59: ' index' (ID: 3472)
  Prédit: ' positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.5516879558563232
    2. ' position' → logprob: -1.5516879558563232
    3. ' index' → logprob: -1.8016879558563232
    4. ' indices' → logprob: -3.1766879558563232
    5. ' points' → logprob: -6.301688194274902
    6. 'positions' → logprob: -6.426688194274902
    7. 'index' → logprob: -7.801688194274902
    8. 'position' → logprob: -8.301688194274902
    9. 'indices' → logprob: -8.426688194274902
    10. ' point' → logprob: -8.551688194274902

Token 60: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3318993151187897
    2. ')' → logprob: -2.081899404525757
    3. '):' → logprob: -2.706899404525757
    4. '```' → logprob: -3.331899404525757
    5. ':' → logprob: -3.581899404525757
    6. ' ' → logprob: -4.831899166107178
    7. '\n' → logprob: -5.706899166107178
    8. ')
' → logprob: -5.831899166107178
    9. '    ' → logprob: -6.456899166107178
    10. '\' → logprob: -6.581899166107178

Token 61: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7377790808677673
    2. ' length' → logprob: -0.7377790808677673
    3. ' a' → logprob: -3.987779140472412
    4. ' corresponding' → logprob: -5.112779140472412
    5. ' matching' → logprob: -5.487779140472412
    6. 'the' → logprob: -6.487779140472412
    7. ' substring' → logprob: -6.487779140472412
    8. ' continues' → logprob: -6.987779140472412
    9. ' def' → logprob: -6.987779140472412
    10. ' ' → logprob: -6.987779140472412

Token 62: ' XOR' (ID: 147209)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.476910799741745
    2. ' matched' → logprob: -1.9769108295440674
    3. ' corresponding' → logprob: -2.1019108295440674
    4. ' matching' → logprob: -2.9769108295440674
    5. ' number' → logprob: -3.6019108295440674
    6. ' substring' → logprob: -4.351910591125488
    7. ' value' → logprob: -5.476910591125488
    8. ' count' → logprob: -5.601910591125488
    9. 'length' → logprob: -5.726910591125488
    10. ' difference' → logprob: -5.726910591125488

Token 63: ' needed' (ID: 6118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08830518275499344
    2. '_' → logprob: -2.9633052349090576
    3. '(' → logprob: -4.9633049964904785
    4. '\' → logprob: -5.5883049964904785
    5. ' of' → logprob: -5.7133049964904785
    6. ')' → logprob: -5.9633049964904785
    7. ' (' → logprob: -6.0883049964904785
    8. ' )' → logprob: -6.0883049964904785
    9. '<|end|>' → logprob: -6.0883049964904785
    10. ' _' → logprob: -6.2133049964904785

Token 64: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5878480672836304
    2. '\' → logprob: -1.5878480672836304
    3. ' ' → logprob: -1.7128480672836304
    4. '   ' → logprob: -2.08784818649292
    5. '\n' → logprob: -2.46284818649292
    6. '_' → logprob: -2.71284818649292
    7. ':' → logprob: -3.71284818649292
    8. '```' → logprob: -3.83784818649292
    9. '.' → logprob: -3.96284818649292
    10. '<|end|>' → logprob: -4.08784818649292

Token 65: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5699237585067749
    2. ' matching' → logprob: -1.819923758506775
    3. ' a' → logprob: -1.944923758506775
    4. ' b' → logprob: -3.5699238777160645
    5. ' alignment' → logprob: -4.0699238777160645
    6. ' space' → logprob: -4.3199238777160645
    7. ' shifting' → logprob: -4.5699238777160645
    8. ' ' → logprob: -4.8199238777160645
    9. 'a' → logprob: -5.5699238777160645
    10. ' encryption' → logprob: -5.5699238777160645

Token 66: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.820271909236908
    2. ' matching' → logprob: -1.6952719688415527
    3. ' shift' → logprob: -2.6952719688415527
    4. ' ' → logprob: -2.8202719688415527
    5. ' next' → logprob: -3.3202719688415527
    6. ' space' → logprob: -3.4452719688415527
    7. ' b' → logprob: -3.5702719688415527
    8. ' difference' → logprob: -3.9452719688415527
    9. 'a' → logprob: -4.070271968841553
    10. ' a' → logprob: -4.320271968841553

Token 67: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028206024318933487
    2. '```' → logprob: -4.778205871582031
    3. '\n' → logprob: -5.528205871582031
    4. '    
' → logprob: -5.778205871582031
    5. '
' → logprob: -6.028205871582031
    6. '"""' → logprob: -6.153205871582031
    7. '\' → logprob: -6.778205871582031
    8. '<|end|>' → logprob: -6.903205871582031
    9. ' ' → logprob: -7.028205871582031
    10. ' 
' → logprob: -7.028205871582031

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21925747394561768
    2. '"""' → logprob: -2.469257354736328
    3. '"' → logprob: -2.969257354736328
    4. '```' → logprob: -3.469257354736328
    5. '"""
' → logprob: -4.469257354736328
    6. ' """' → logprob: -5.219257354736328
    7. ' """
' → logprob: -5.719257354736328
    8. '`' → logprob: -5.844257354736328
    9. ' ' → logprob: -6.469257354736328
    10. '    ' → logprob: -6.719257354736328

Token 69: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08632554858922958
    2. '"""' → logprob: -2.5863256454467773
    3. '```' → logprob: -5.461325645446777
    4. '"' → logprob: -6.711325645446777
    5. '"""
' → logprob: -6.711325645446777
    6. ' """' → logprob: -8.086325645446777
    7. '\n' → logprob: -9.211325645446777
    8. '    
' → logprob: -9.461325645446777
    9. '""' → logprob: -9.711325645446777
    10. '
' → logprob: -9.961325645446777

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3004859387874603
    2. '
' → logprob: -2.050485849380493
    3. ' 
' → logprob: -3.050485849380493
    4. '    
' → logprob: -3.550485849380493
    5. '```' → logprob: -3.925485849380493
    6. '    ' → logprob: -5.050486087799072
    7. '\' → logprob: -5.300486087799072
    8. ' ' → logprob: -5.300486087799072
    9. 'n' → logprob: -5.425486087799072
    10. 'a' → logprob: -5.925486087799072

Token 71: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.606494128704071
    2. 'n' → logprob: -1.4814941883087158
    3. 'a' → logprob: -2.231494188308716
    4. '#' (adapté à ' #') → logprob: -2.856494188308716
    5. ' #' → logprob: -4.481493949890137
    6. ' n' → logprob: -4.606493949890137
    7. 'import' → logprob: -4.606493949890137
    8. ' a' → logprob: -5.481493949890137
    9. '```' → logprob: -5.731493949890137
    10. 'r' → logprob: -5.856493949890137

Token 72: ' Define' (ID: 38966)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1160573959350586
    2. ' a' → logprob: -1.2410573959350586
    3. 'a' → logprob: -2.1160573959350586
    4. ' #' → logprob: -2.6160573959350586
    5. '#' → logprob: -2.9910573959350586
    6. '   ' → logprob: -3.3660573959350586
    7. 'n' → logprob: -3.6160573959350586
    8. ' diff' → logprob: -4.116057395935059
    9. ' hash' → logprob: -4.241057395935059
    10. ' length' → logprob: -5.116057395935059

Token 73: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.41409456729888916
    2. ' n' → logprob: -2.2890944480895996
    3. ' hash' → logprob: -2.5390944480895996
    4. 'a' → logprob: -2.7890944480895996
    5. ' base' → logprob: -4.0390944480896
    6. 'n' → logprob: -4.0390944480896
    7. ' rolling' → logprob: -4.4140944480896
    8. '   ' → logprob: -4.4140944480896
    9. ' window' → logprob: -5.6640944480896
    10. ' the' → logprob: -5.7890944480896

Token 74: ' modulus' (ID: 149464)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.34065940976142883
    2. ' rolling' → logprob: -1.8406593799591064
    3. ' hash' → logprob: -2.8406593799591064
    4. ' bases' → logprob: -4.2156596183776855
    5. ' rest' → logprob: -4.4656596183776855
    6. ' initial' → logprob: -5.0906596183776855
    7. ' difference' → logprob: -5.4656596183776855
    8. ' remainder' → logprob: -5.8406596183776855
    9. ' length' → logprob: -5.9656596183776855
    10. ' code' → logprob: -6.0906596183776855

Token 75: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002619297243654728
    2. '=' → logprob: -6.37761926651001
    3. '_' → logprob: -7.62761926651001
    4. ',' → logprob: -8.502619743347168
    5. ':' → logprob: -9.252619743347168
    6. ' ' → logprob: -9.752619743347168
    7. 's' → logprob: -10.002619743347168
    8. '<|end|>' → logprob: -12.627619743347168
    9. ' _' → logprob: -12.752619743347168
    10. ' ,' → logprob: -12.752619743347168

Token 76: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2293972373008728
    2. ' ' → logprob: -1.8543972969055176
    3. ' hashing' → logprob: -4.604397296905518
    4. ' hash' → logprob: -4.729397296905518
    5. 'the' → logprob: -4.979397296905518
    6. ' rolling' → logprob: -5.229397296905518
    7. ' a' → logprob: -5.354397296905518
    8. ' (' → logprob: -5.979397296905518
    9. '_' → logprob: -6.479397296905518
    10. ' _' → logprob: -6.979397296905518

Token 77: ' rolling' (ID: 30530)
  Prédit: ' rolling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rolling' → logprob: -0.8729338049888611
    2. ' hash' → logprob: -1.8729338645935059
    3. ' MOD' → logprob: -2.122933864593506
    4. ' mod' → logprob: -2.372933864593506
    5. '_' → logprob: -3.497933864593506
    6. ' ' → logprob: -3.747933864593506
    7. 'mod' → logprob: -3.872933864593506
    8. ' _' → logprob: -3.872933864593506
    9. ' base' → logprob: -4.372933864593506
    10. 'MOD' → logprob: -4.372933864593506

Token 78: ' hash' (ID: 10691)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2099504917860031
    2. ' ' → logprob: -2.2099504470825195
    3. ' _' → logprob: -3.2099504470825195
    4. '_hash' → logprob: -3.3349504470825195
    5. ' hash' → logprob: -6.8349504470825195
    6. '  ' → logprob: -7.0849504470825195
    7. ')' → logprob: -8.08495044708252
    8. '<|end|>' → logprob: -8.33495044708252
    9. ' )' → logprob: -8.45995044708252
    10. ' ```' → logprob: -9.08495044708252

Token 79: ' computations' (ID: 192859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0942782461643219
    2. '=' → logprob: -2.969278335571289
    3. '_' → logprob: -3.469278335571289
    4. ':' → logprob: -5.969278335571289
    5. ' ' → logprob: -6.094278335571289
    6. ' _' → logprob: -6.719278335571289
    7. '   ' → logprob: -7.594278335571289
    8. ',' → logprob: -7.844278335571289
    9. 'mod' → logprob: -9.594278335571289
    10. '```' → logprob: -9.594278335571289

Token 80: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16321495175361633
    2. '_' → logprob: -2.663214921951294
    3. '=' → logprob: -3.038214921951294
    4. ':' → logprob: -4.538215160369873
    5. ' ' → logprob: -4.663215160369873
    6. ' _' → logprob: -5.413215160369873
    7. '   ' → logprob: -5.913215160369873
    8. ',' → logprob: -6.788215160369873
    9. 'mod' → logprob: -6.913215160369873
    10. 'm' → logprob: -7.288215160369873

Token 81: 'a' (ID: 64)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2280038297176361
    2. '10' → logprob: -2.228003740310669
    3. '1' → logprob: -3.228003740310669
    4. ' )' → logprob: -4.103003978729248
    5. '2' → logprob: -4.853003978729248
    6. '   ' → logprob: -4.853003978729248
    7. ')' → logprob: -4.853003978729248
    8. ' M' → logprob: -5.228003978729248
    9. ' (' → logprob: -5.603003978729248
    10. '    ' → logprob: -6.853003978729248

Token 82: ' large' (ID: 4410)
  Prédit: ' large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.012992561794817448
    2. ' ' → logprob: -5.3879923820495605
    3. ' very' → logprob: -5.6379923820495605
    4. 'large' → logprob: -6.0129923820495605
    5. ' =' → logprob: -7.5129923820495605
    6. ')' → logprob: -7.8879923820495605
    7. '=' → logprob: -8.137992858886719
    8. ' big' → logprob: -8.137992858886719
    9. ' prime' → logprob: -8.387992858886719
    10. ' )' → logprob: -9.137992858886719

Token 83: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.11297447234392166
    2. ' ' → logprob: -2.7379744052886963
    3. 'prime' → logprob: -3.3629744052886963
    4. '_prime' → logprob: -5.612974643707275
    5. ' number' → logprob: -6.737974643707275
    6. ' )' → logprob: -7.862974643707275
    7. ' integer' → logprob: -7.987974643707275
    8. '```' → logprob: -8.237974166870117
    9. ' ```' → logprob: -8.487974166870117
    10. ' modulus' → logprob: -8.737974166870117

Token 84: ')
' (ID: 446)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.4020040035247803
    2. ')' → logprob: -1.1520040035247803
    3. ' ' → logprob: -4.527004241943359
    4. ' number' → logprob: -5.902004241943359
    5. '   ' → logprob: -8.52700424194336
    6. '=' → logprob: -8.65200424194336
    7. '_' → logprob: -8.77700424194336
    8. ',' → logprob: -8.90200424194336
    9. ' =' → logprob: -8.90200424194336
    10. 'number' → logprob: -8.90200424194336

Token 85: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6088109016418457
    2. '_' → logprob: -1.6088109016418457
    3. ' ' → logprob: -1.9838109016418457
    4. '=' → logprob: -3.2338109016418457
    5. ':' → logprob: -4.108810901641846
    6. ',' → logprob: -4.608810901641846
    7. 'mod' → logprob: -4.733810901641846
    8. ' _' → logprob: -4.858810901641846
    9. '_mod' → logprob: -4.983810901641846
    10. 'MOD' → logprob: -4.983810901641846

Token 86: ' mod' (ID: 1812)
  Prédit: ' MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.9699475169181824
    2. ' M' → logprob: -1.4699475765228271
    3. 'MOD' → logprob: -1.4699475765228271
    4. 'M' → logprob: -3.469947576522827
    5. ' ' → logprob: -3.969947576522827
    6. ' mod' → logprob: -3.969947576522827
    7. '   ' → logprob: -4.094947338104248
    8. 'mod' (adapté à ' mod') → logprob: -4.219947338104248
    9. '_' → logprob: -4.344947338104248
    10. ' _' → logprob: -4.344947338104248

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032273868564516306
    2. '=' → logprob: -5.753227233886719
    3. 'ulus' → logprob: -10.878227233886719
    4. ' ' → logprob: -11.128227233886719
    5. ',' → logprob: -11.878227233886719
    6. 'ular' → logprob: -12.628227233886719
    7. '   ' → logprob: -13.753227233886719
    8. '1' → logprob: -13.878227233886719
    9. '  ' → logprob: -14.378227233886719
    10. '_' → logprob: -14.503227233886719

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011096985079348087
    2. '10' → logprob: -4.636096954345703
    3. '100' → logprob: -6.636096954345703
    4. '1' → logprob: -11.886096954345703
    5. '109' → logprob: -11.886096954345703
    6. '998' → logprob: -12.636096954345703
    7. ' (' → logprob: -12.761096954345703
    8. '(' → logprob: -13.386096954345703
    9. ' ' → logprob: -13.511096954345703
    10. '2' → logprob: -13.761096954345703

Token 89: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.38936543464660645
    2. '100' → logprob: -1.1393654346466064
    3. ' ' → logprob: -6.264365196228027
    4. '998' → logprob: -8.139365196228027
    5. '(' → logprob: -9.139365196228027
    6. '1' → logprob: -9.139365196228027
    7. '101' → logprob: -10.889365196228027
    8. '109' → logprob: -11.514365196228027
    9. '2' → logprob: -11.764365196228027
    10. '107' → logprob: -12.139365196228027

Token 90: ' **' (ID: 6240)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.9884206652641296
    2. '618' → logprob: -2.9884207248687744
    3. '611' → logprob: -3.4884207248687744
    4. '**' → logprob: -3.6134207248687744
    5. '61' → logprob: -3.6134207248687744
    6. '147' → logprob: -3.7384207248687744
    7. '7' → logprob: -4.238420486450195
    8. '613' → logprob: -4.238420486450195
    9. '610' → logprob: -4.488420486450195
    10. '1' → logprob: -4.488420486450195

Token 91: ' ' (ID: 220)
  Prédit: '61'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -0.0002153378736693412
    2. '63' → logprob: -9.250215530395508
    3. '31' → logprob: -10.250215530395508
    4. '64' → logprob: -10.625215530395508
    5. '62' → logprob: -10.750215530395508
    6. '59' → logprob: -11.875215530395508
    7. '613' → logprob: -11.875215530395508
    8. '127' → logprob: -12.000215530395508
    9. ' ' → logprob: -12.000215530395508
    10. '89' → logprob: -13.500215530395508

Token 92: '61' (ID: 8954)
  Prédit: '61'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -0.0002407282590866089
    2. '64' → logprob: -9.375240325927734
    3. '31' → logprob: -9.750240325927734
    4. '63' → logprob: -9.875240325927734
    5. '59' → logprob: -10.625240325927734
    6. '127' → logprob: -11.250240325927734
    7. '89' → logprob: -13.125240325927734
    8. '62' → logprob: -13.500240325927734
    9. '53' → logprob: -13.500240325927734
    10. '60' → logprob: -14.125240325927734

Token 93: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05488927662372589
    2. '-' → logprob: -2.92988920211792
    3. ')' → logprob: -13.054889678955078
    4. ' ' → logprob: -13.304889678955078
    5. ' ' → logprob: -13.804889678955078
    6. '+' → logprob: -15.179889678955078
    7. '```' → logprob: -15.179889678955078
    8. '<|end|>' → logprob: -15.179889678955078
    9. '–' → logprob: -15.679889678955078
    10. '1' → logprob: -15.929889678955078

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '235' → logprob: -13.875004768371582
    3. '```' → logprob: -13.875004768371582
    4. '35' → logprob: -14.375004768371582
    5. '127' → logprob: -15.750004768371582
    6. '
' → logprob: -16.000003814697266
    7. '25' → logprob: -16.250003814697266
    8. '135' → logprob: -16.312503814697266
    9. '"""' → logprob: -16.312503814697266
    10. '61' → logprob: -16.312503814697266

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '
' → logprob: -16.625
    3. '```' → logprob: -16.875
    4. '

' → logprob: -17.375
    5. '235' → logprob: -17.625
    6. '１' → logprob: -18.375
    7. ' ' → logprob: -18.8125
    8. '25' → logprob: -18.875
    9. '35' → logprob: -18.9375
    10. '   ' → logprob: -19.0

Token 96: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5344647169113159
    2. '' → logprob: -2.2844648361206055
    3. '<|end|>' → logprob: -2.4094648361206055
    4. '\n' → logprob: -3.0344648361206055
    5. ',' → logprob: -3.1594648361206055
    6. '\' → logprob: -3.4094648361206055
    7. ' ' → logprob: -4.0344648361206055
    8. '   ' → logprob: -4.1594648361206055
    9. ')' → logprob: -4.1594648361206055
    10. ' 
' → logprob: -4.7844648361206055

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7091861367225647
    2. ' p' → logprob: -1.45918607711792
    3. ' base' → logprob: -2.20918607711792
    4. 'p' → logprob: -3.20918607711792
    5. '
' → logprob: -3.33418607711792
    6. ' 
' → logprob: -3.70918607711792
    7. '    
' → logprob: -3.83418607711792
    8. '    ' → logprob: -4.83418607711792
    9. ' B' → logprob: -4.83418607711792
    10. ' b' → logprob: -5.33418607711792

Token 98: ' #' (ID: 1069)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.04545784369111061
    2. ' p' → logprob: -3.6704578399658203
    3. 'base' → logprob: -4.67045783996582
    4. 'p' → logprob: -6.04545783996582
    5. ' B' → logprob: -6.04545783996582
    6. '   ' → logprob: -6.42045783996582
    7. ' P' → logprob: -7.29545783996582
    8. ' BASE' → logprob: -7.42045783996582
    9. 'B' → logprob: -8.29545783996582
    10. ' bases' → logprob: -8.29545783996582

Token 99: ' Pre' (ID: 4659)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.5237268209457397
    2. 'base' → logprob: -1.5237268209457397
    3. ' p' → logprob: -2.5237269401550293
    4. 'p' → logprob: -2.6487269401550293
    5. '   ' → logprob: -4.648726940155029
    6. ' import' → logprob: -4.773726940155029
    7. 'import' → logprob: -4.773726940155029
    8. '#' → logprob: -6.523726940155029
    9. ' B' → logprob: -6.773726940155029
    10. ' bases' → logprob: -6.773726940155029

Token 100: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.455489158630371
    2. 'pare' → logprob: -1.705489158630371
    3. 'fix' → logprob: -2.080489158630371
    4. 'v' → logprob: -2.205489158630371
    5. 'vious' → logprob: -2.205489158630371
    6. '   ' → logprob: -2.830489158630371
    7. 'sent' → logprob: -3.205489158630371
    8. 'sum' → logprob: -3.955489158630371
    9. 'process' → logprob: -4.580489158630371
    10. 'computed' → logprob: -4.580489158630371

Token 101: ' powers' (ID: 27742)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06952028721570969
    2. ' pow' → logprob: -3.6945202350616455
    3. ' base' → logprob: -4.194520473480225
    4. '    ' → logprob: -4.819520473480225
    5. 'pow' → logprob: -5.069520473480225
    6. ' p' → logprob: -5.694520473480225
    7. ' a' → logprob: -6.694520473480225
    8. '   ' → logprob: -6.819520473480225
    9. ' bases' → logprob: -6.944520473480225
    10. '  ' → logprob: -7.069520473480225

Token 102: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1658716201782227
    2. '    ' → logprob: -1.4158716201782227
    3. ' of' → logprob: -1.5408716201782227
    4. ' ' → logprob: -2.5408716201782227
    5. '   ' → logprob: -2.7908716201782227
    6. '[' → logprob: -3.0408716201782227
    7. ' (' → logprob: -4.290871620178223
    8. ' =' → logprob: -4.790871620178223
    9. '_' → logprob: -5.415871620178223
    10. '=' → logprob: -5.790871620178223

Token 103: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.61814945936203
    2. ' ' → logprob: -1.8681495189666748
    3. '257' → logprob: -2.743149518966675
    4. '131' → logprob: -2.993149518966675
    5. '911' → logprob: -3.618149518966675
    6. '10' → logprob: -3.618149518966675
    7. '137' → logprob: -3.868149518966675
    8. 'base' → logprob: -4.118149280548096
    9. '3' → logprob: -4.618149280548096
    10. '256' → logprob: -4.993149280548096

Token 104: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0063103437423706
    2. '131' → logprob: -1.6313103437423706
    3. 'base' → logprob: -2.25631046295166
    4. '10' → logprob: -2.75631046295166
    5. '257' → logprob: -2.88131046295166
    6. '911' → logprob: -3.13131046295166
    7. 'p' → logprob: -3.75631046295166
    8. '137' → logprob: -3.75631046295166
    9. 'x' → logprob: -4.50631046295166
    10. '3' → logprob: -4.75631046295166

Token 105: ' modulo' (ID: 112372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3170521855354309
    2. ' for' → logprob: -2.692052125930786
    3. ',' → logprob: -2.817052125930786
    4. ':' → logprob: -3.442052125930786
    5. 'p' → logprob: -4.067052364349365
    6. '=' → logprob: -4.442052364349365
    7. ' ,' → logprob: -4.442052364349365
    8. ' =' → logprob: -4.567052364349365
    9. '    ' → logprob: -4.817052364349365
    10. '3' → logprob: -5.067052364349365

Token 106: ' '' (ID: 461)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07904213666915894
    2. 'mod' → logprob: -2.5790421962738037
    3. ' ' → logprob: -8.829042434692383
    4. '(mod' → logprob: -13.704042434692383
    5. ' ' → logprob: -13.954042434692383
    6. '10' → logprob: -14.204042434692383
    7. '	mod' → logprob: -14.204042434692383
    8. '3' → logprob: -14.454042434692383
    9. '```' → logprob: -15.204042434692383
    10. '1' → logprob: -15.329042434692383

Token 107: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10020678490400314
    2. ' mod' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.72520637512207
    4. '(mod' → logprob: -17.60020637512207
    5. '	mod' → logprob: -17.72520637512207
    6. 'm' → logprob: -18.10020637512207
    7. ' ' → logprob: -18.60020637512207
    8. '_mod' → logprob: -19.22520637512207
    9. '   ' → logprob: -19.35020637512207
    10. '```' → logprob: -19.47520637512207

Token 108: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04683322831988335
    2. ' for' → logprob: -3.9218332767486572
    3. ')' → logprob: -5.046833038330078
    4. ',' → logprob: -5.546833038330078
    5. 'for' → logprob: -5.921833038330078
    6. 'powers' → logprob: -6.046833038330078
    7. ':' → logprob: -6.421833038330078
    8. 'pow' → logprob: -6.421833038330078
    9. ' ' → logprob: -6.546833038330078
    10. '```' → logprob: -6.796833038330078

Token 109: ' up' (ID: 869)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.256718397140503
    2. 'powers' → logprob: -1.381718397140503
    3. 'p' → logprob: -1.631718397140503
    4. '   ' → logprob: -1.756718397140503
    5. 'pow' → logprob: -3.381718397140503
    6. ' powers' → logprob: -3.506718397140503
    7. ' ' → logprob: -4.756718635559082
    8. 'power' → logprob: -4.881718635559082
    9. ' p' → logprob: -5.256718635559082
    10. ',' → logprob: -6.006718635559082

Token 110: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.010939698666334152
    2. ' to' → logprob: -5.635939598083496
    3. '=' → logprob: -6.635939598083496
    4. '   ' → logprob: -6.635939598083496
    5. '(' → logprob: -6.760939598083496
    6. 'def' → logprob: -7.385939598083496
    7. '_to' → logprob: -7.385939598083496
    8. '1' → logprob: -8.385939598083496
    9. '()' → logprob: -8.510939598083496
    10. '(to' → logprob: -8.510939598083496

Token 111: ' ' (ID: 220)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.09590527415275574
    2. ' max' → logprob: -3.095905303955078
    3. 'len' → logprob: -3.095905303955078
    4. ' n' → logprob: -7.970905303955078
    5. 'max' → logprob: -8.095905303955078
    6. ' ' → logprob: -9.595905303955078
    7. '(len' → logprob: -9.720905303955078
    8. 'n' → logprob: -9.845905303955078
    9. ' the' → logprob: -10.220905303955078
    10. '[len' → logprob: -10.470905303955078

Token 112: '400' (ID: 4812)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0687154531478882
    2. 'max' → logprob: -1.3187154531478882
    3. 'len' → logprob: -1.5687154531478882
    4. ' len' → logprob: -2.8187155723571777
    5. '100' → logprob: -2.8187155723571777
    6. ' ' → logprob: -3.3187155723571777
    7. '10' → logprob: -4.443715572357178
    8. '200' → logprob: -5.193715572357178
    9. '500' → logprob: -5.943715572357178
    10. '400' → logprob: -6.568715572357178

Token 113: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3393721878528595
    2. '**' → logprob: -2.714372158050537
    3. '0' → logprob: -2.839372158050537
    4. '```' → logprob: -2.964372158050537
    5. '+' → logprob: -3.339372158050537
    6. ' ' → logprob: -3.714372158050537
    7. '000' → logprob: -4.214372158050537
    8. '    ' → logprob: -4.464372158050537
    9. ',' → logprob: -5.839372158050537
    10. '  ' → logprob: -5.839372158050537

Token 114: '000' (ID: 1302)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026796691119670868
    2. '000' → logprob: -4.526796817779541
    3. '    ' → logprob: -5.276796817779541
    4. '400' → logprob: -6.276796817779541
    5. ' for' → logprob: -6.401796817779541
    6. '  ' → logprob: -6.901796817779541
    7. ' as' → logprob: -6.901796817779541
    8. ' to' → logprob: -7.026796817779541
    9. '   ' → logprob: -7.526796817779541
    10. '0' → logprob: -7.651796817779541

Token 115: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.436927855014801
    2. 'p' → logprob: -1.5619277954101562
    3. '   ' → logprob: -2.9369277954101562
    4. ' p' → logprob: -3.4369277954101562
    5. 'powers' → logprob: -3.5619277954101562
    6. 'pow' → logprob: -4.561927795410156
    7. 'power' → logprob: -5.061927795410156
    8. ' powers' → logprob: -5.811927795410156
    9. '
' → logprob: -6.186927795410156
    10. ' ' → logprob: -6.186927795410156

Token 116: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7024973630905151
    2. ' ' → logprob: -1.4524973630905151
    3. ' i' → logprob: -2.8274974822998047
    4. ' indexing' → logprob: -2.8274974822998047
    5. ' fast' → logprob: -3.0774974822998047
    6. ' n' → logprob: -3.9524974822998047
    7. ' rolling' → logprob: -4.077497482299805
    8. ' all' → logprob: -4.702497482299805
    9. '400' → logprob: -4.952497482299805
    10. ' range' → logprob: -5.077497482299805

Token 117: ' rolling' (ID: 30530)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.861609160900116
    2. ' maximum' → logprob: -1.2366092205047607
    3. ' next' → logprob: -2.3616092205047607
    4. ' length' → logprob: -2.3616092205047607
    5. 'max' → logprob: -2.6116092205047607
    6. ' ' → logprob: -4.986608982086182
    7. ' range' → logprob: -5.486608982086182
    8. '400' → logprob: -6.111608982086182
    9. ' code' → logprob: -6.736608982086182
    10. ' powers' → logprob: -6.736608982086182

Token 118: ' hash' (ID: 10691)
  Prédit: ' hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -1.0747532844543457
    2. ' base' → logprob: -1.5747532844543457
    3. 'hash' → logprob: -2.6997532844543457
    4. '_hash' → logprob: -2.6997532844543457
    5. 'pow' → logprob: -2.9497532844543457
    6. ' bases' → logprob: -3.1997532844543457
    7. ' ' → logprob: -3.4497532844543457
    8. '_' → logprob: -3.8247532844543457
    9. ' exponent' → logprob: -3.8247532844543457
    10. ' power' → logprob: -3.9497532844543457

Token 119: ' base' (ID: 3611)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.409759521484375
    2. 'pow' → logprob: -2.034759521484375
    3. '   ' → logprob: -3.284759521484375
    4. 'power' → logprob: -3.284759521484375
    5. '3' → logprob: -3.409759521484375
    6. '.' → logprob: -3.909759521484375
    7. 'powers' → logprob: -4.034759521484375
    8. 'p' → logprob: -4.534759521484375
    9. 's' → logprob: -4.659759521484375
    10. 'base' → logprob: -4.909759521484375

Token 120: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9637342095375061
    2. '   ' → logprob: -1.5887341499328613
    3. 'p' → logprob: -2.0887341499328613
    4. 'pow' → logprob: -2.8387341499328613
    5. ' ' → logprob: -2.9637341499328613
    6. 'powers' → logprob: -2.9637341499328613
    7. '3' → logprob: -3.5887341499328613
    8. '
' → logprob: -3.5887341499328613
    9. ' p' → logprob: -3.8387341499328613
    10. 'power' → logprob: -3.9637341499328613

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5489967465400696
    2. ' ' → logprob: -2.173996686935425
    3. 'p' → logprob: -2.423996686935425
    4. ':' → logprob: -2.798996686935425
    5. 'powers' → logprob: -3.048996686935425
    6. '3' → logprob: -3.548996686935425
    7. 'pow' → logprob: -4.548996925354004
    8. 'base' → logprob: -4.548996925354004
    9. '    ' → logprob: -4.673996925354004
    10. '  ' → logprob: -4.798996925354004

Token 122: ' pow' (ID: 9779)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8511695861816406
    2. 'pow' (adapté à ' pow') → logprob: -1.4761695861816406
    3. 'p' → logprob: -1.7261695861816406
    4. ' base' → logprob: -2.8511695861816406
    5. ' pow' → logprob: -2.8511695861816406
    6. '   ' → logprob: -4.101169586181641
    7. ' powers' → logprob: -4.726169586181641
    8. 'powers' → logprob: -4.726169586181641
    9. ' power' → logprob: -5.351169586181641
    10. 'power' → logprob: -5.601169586181641

Token 123: '3' (ID: 18)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013481833972036839
    2. '_' → logprob: -4.763481616973877
    3. '(' → logprob: -6.388481616973877
    4. '_s' → logprob: -6.763481616973877
    5. '_pow' → logprob: -6.763481616973877
    6. 'er' → logprob: -8.513482093811035
    7. '3' → logprob: -8.513482093811035
    8. 'pow' → logprob: -8.763482093811035
    9. ' =' → logprob: -10.013482093811035
    10. '[' → logprob: -10.263482093811035

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20379184186458588
    2. '=' → logprob: -1.703791856765747
    3. ' ' → logprob: -6.953791618347168
    4. '_' → logprob: -7.578791618347168
    5. '   ' → logprob: -7.828791618347168
    6. '[' → logprob: -8.453791618347168
    7. ' =[' → logprob: -8.953791618347168
    8. '=[' → logprob: -9.453791618347168
    9. '  ' → logprob: -10.203791618347168
    10. '    ' → logprob: -11.453791618347168

Token 125: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00861456897109747
    2. ' [' → logprob: -4.758614540100098
    3. '1' → logprob: -18.008615493774414
    4. 'pow' → logprob: -18.258615493774414
    5. ' ' → logprob: -18.758615493774414
    6. '[p' → logprob: -19.008615493774414
    7. '{' → logprob: -19.508615493774414
    8. '(' → logprob: -20.633615493774414
    9. '([' → logprob: -21.133615493774414
    10. '[a' → logprob: -21.133615493774414

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.500012397766113
    4. 'pow' → logprob: -15.750012397766113
    5. '0' → logprob: -16.750011444091797
    6. ']' → logprob: -17.625011444091797
    7. '```' → logprob: -17.875011444091797
    8. '  ' → logprob: -18.000011444091797
    9. '
' → logprob: -18.125011444091797
    10. '(' → logprob: -18.437511444091797

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00048536903341300786
    2. ']
' → logprob: -8.25048542022705
    3. ',' → logprob: -8.50048542022705
    4. ']*' → logprob: -11.62548542022705
    5. ']

' → logprob: -12.12548542022705
    6. ' ]' → logprob: -12.62548542022705
    7. ']
' → logprob: -14.12548542022705
    8. ']+' → logprob: -14.50048542022705
    9. ')' → logprob: -14.87548542022705
    10. ']*(' → logprob: -15.25048542022705

Token 128: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022192837670445442
    2. ']
' → logprob: -4.27219295501709
    3. ']*' → logprob: -5.27219295501709
    4. ',' → logprob: -6.52219295501709
    5. '*' → logprob: -8.14719295501709
    6. ' for' → logprob: -8.14719295501709
    7. ']*(' → logprob: -8.14719295501709
    8. 'for' → logprob: -8.52219295501709
    9. ']+' → logprob: -8.77219295501709
    10. '```' → logprob: -10.52219295501709

Token 129: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.00030852947384119034
    2. '(' → logprob: -8.125308990478516
    3. '4' → logprob: -12.000308990478516
    4. ' ' → logprob: -12.250308990478516
    5. '[' → logprob: -14.625308990478516
    6. '40' → logprob: -15.750308990478516
    7. '100' → logprob: -15.875308990478516
    8. '   ' → logprob: -16.125308990478516
    9. '```' → logprob: -16.375308990478516
    10. '200' → logprob: -16.625308990478516

Token 130: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -8.149051427608356e-05
    2. '(' → logprob: -9.500081062316895
    3. '4' → logprob: -12.125081062316895
    4. ' ' → logprob: -14.125081062316895
    5. '[' → logprob: -16.87508201599121
    6. '200' → logprob: -16.87508201599121
    7. '   ' → logprob: -17.00008201599121
    8. '40' → logprob: -17.00008201599121
    9. '```' → logprob: -17.00008201599121
    10. '  ' → logprob: -17.12508201599121

Token 131: '001' (ID: 7659)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.025327695533633232
    2. '_' → logprob: -4.025327682495117
    3. '001' → logprob: -5.400327682495117
    4. ',' → logprob: -6.275327682495117
    5. '400' → logprob: -8.025327682495117
    6. '005' → logprob: -8.900327682495117
    7. '006' → logprob: -10.150327682495117
    8. '007' → logprob: -10.275327682495117
    9. '00' → logprob: -10.400327682495117
    10. '003' → logprob: -10.400327682495117

Token 132: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017214404419064522
    2. '   ' → logprob: -4.517214298248291
    3. '    
' → logprob: -6.392214298248291
    4. '<|end|>' → logprob: -6.392214298248291
    5. ' 
' → logprob: -6.642214298248291
    6. 'for' → logprob: -7.892214298248291
    7. ' for' → logprob: -8.01721477508545
    8. ' ' → logprob: -9.01721477508545
    9. '  
' → logprob: -9.01721477508545
    10. '\n' → logprob: -9.89221477508545

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12555114924907684
    2. ' for' → logprob: -2.750551223754883
    3. '
' → logprob: -3.125551223754883
    4. 'for' → logprob: -4.625551223754883
    5. '    
' → logprob: -8.250551223754883
    6. '	for' → logprob: -9.500551223754883
    7. '\n' → logprob: -11.250551223754883
    8. ' ' → logprob: -11.750551223754883
    9. ' 
' → logprob: -12.125551223754883
    10. '    ' → logprob: -12.500551223754883

Token 134: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3978343904018402
    2. ' for' → logprob: -1.1478344202041626
    3. '   ' → logprob: -4.522834300994873
    4. '	for' → logprob: -10.147834777832031
    5. ' ' → logprob: -12.272834777832031
    6. '
' → logprob: -14.147834777832031
    7. '  ' → logprob: -15.022834777832031
    8. '    
' → logprob: -16.02283477783203
    9. '```' → logprob: -16.64783477783203
    10. '    ' → logprob: -16.77283477783203

Token 135: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02630564197897911
    2. ' for' → logprob: -3.651305675506592
    3. '   ' → logprob: -12.401305198669434
    4. 'from' → logprob: -15.151305198669434
    5. 'import' → logprob: -15.651305198669434
    6. 'def' → logprob: -15.776305198669434
    7. '```' → logprob: -15.776305198669434
    8. 'pow' → logprob: -15.901305198669434
    9. '
' → logprob: -16.15130615234375
    10. '	for' → logprob: -16.40130615234375

Token 136: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3395559787750244
    2. '   ' → logprob: -1.8395559787750244
    3. 'for' → logprob: -2.2145559787750244
    4. 'def' → logprob: -5.089555740356445
    5. 'calc' → logprob: -5.589555740356445
    6. '    ' → logprob: -5.964555740356445
    7. ' for' → logprob: -6.214555740356445
    8. '[' → logprob: -6.589555740356445
    9. 'pow' → logprob: -6.964555740356445
    10. ' ' → logprob: -7.339555740356445

Token 137: ' modular' (ID: 61198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25199154019355774
    2. ' for' → logprob: -1.5019915103912354
    3. '   ' → logprob: -10.501991271972656
    4. '	for' → logprob: -11.001991271972656
    5. 'range' → logprob: -11.751991271972656
    6. ' range' → logprob: -12.251991271972656
    7. ' ' → logprob: -13.376991271972656
    8. 'def' → logprob: -13.501991271972656
    9. '
' → logprob: -14.126991271972656
    10. '    ' → logprob: -14.501991271972656

Token 138: ' invers' (ID: 38721)
  Prédit: ' exponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exponent' → logprob: -0.17590871453285217
    2. 'pow' → logprob: -2.9259088039398193
    3. 'ex' → logprob: -3.8009088039398193
    4. ' powers' → logprob: -3.9259088039398193
    5. ' ex' → logprob: -4.17590856552124
    6. '_pow' → logprob: -4.55090856552124
    7. '<|end|>' → logprob: -4.67590856552124
    8. 'powers' → logprob: -5.17590856552124
    9. ' multip' → logprob: -5.30090856552124
    10. ' multiplication' → logprob: -5.42590856552124

Token 139: 'es' (ID: 268)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.03585979714989662
    2. 'v' → logprob: -3.4108598232269287
    3. '
' → logprob: -7.53585958480835
    4. 'version' → logprob: -7.91085958480835
    5. '```' → logprob: -8.160860061645508
    6. '[' → logprob: -8.410860061645508
    7. 'erse' → logprob: -8.535860061645508
    8. '   ' → logprob: -9.285860061645508
    9. ' verse' → logprob: -9.285860061645508
    10. '#' → logprob: -10.035860061645508

Token 140: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12481022626161575
    2. ' =' → logprob: -3.124810218811035
    3. '   ' → logprob: -4.499810218811035
    4. ' for' → logprob: -4.499810218811035
    5. 'pow' → logprob: -4.874810218811035
    6. '<|end|>' → logprob: -4.999810218811035
    7. 'def' → logprob: -5.249810218811035
    8. '[' → logprob: -5.374810218811035
    9. 'of' → logprob: -5.374810218811035
    10. '_' → logprob: -5.499810218811035

Token 141: ' powers' (ID: 27742)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1454322636127472
    2. ' ' → logprob: -2.145432233810425
    3. 'pow' → logprob: -4.395432472229004
    4. ' pow' → logprob: -5.145432472229004
    5. ' three' → logprob: -10.707932472229004
    6. 'range' → logprob: -10.770432472229004
    7. '```' → logprob: -11.082932472229004
    8. '(pow' → logprob: -11.332932472229004
    9. '[' → logprob: -11.457932472229004
    10. ' range' → logprob: -11.457932472229004

Token 142: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3122375011444092
    2. '   ' → logprob: -2.312237501144409
    3. 'of' → logprob: -2.562237501144409
    4. '_of' → logprob: -3.187237501144409
    5. '[' → logprob: -3.687237501144409
    6. '    ' → logprob: -5.437237739562988
    7. '<|end|>' → logprob: -5.687237739562988
    8. '(' → logprob: -6.062237739562988
    9. '3' → logprob: -6.187237739562988
    10. '_' → logprob: -6.437237739562988

Token 143: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02328554540872574
    2. ' ' → logprob: -3.7732856273651123
    3. ' three' → logprob: -10.523285865783691
    4. 'three' → logprob: -11.773285865783691
    5. '```' → logprob: -13.523285865783691
    6. 'pow' → logprob: -13.898285865783691
    7. ' ' → logprob: -13.960785865783691
    8. '  ' → logprob: -14.960785865783691
    9. '`' → logprob: -15.335785865783691
    10. ' Three' → logprob: -15.835785865783691

Token 144: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006289214943535626
    2. ' ' → logprob: -7.37562894821167
    3. '```' → logprob: -14.000628471374512
    4. ' three' → logprob: -14.375628471374512
    5. 'pow' → logprob: -15.125628471374512
    6. 'three' → logprob: -15.250628471374512
    7. '`' → logprob: -16.250629425048828
    8. ' ' → logprob: -17.000629425048828
    9. '  ' → logprob: -17.188129425048828
    10. '   ' → logprob: -17.438129425048828

Token 145: ' modulo' (ID: 112372)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7674267292022705
    2. ' for' → logprob: -1.7674267292022705
    3. '   ' → logprob: -2.0174267292022705
    4. 'for' → logprob: -2.3924267292022705
    5. 'def' → logprob: -3.2674267292022705
    6. '[' → logprob: -3.3924267292022705
    7. '```' → logprob: -4.767426490783691
    8. '    
' → logprob: -4.892426490783691
    9. ' ' → logprob: -5.017426490783691
    10. ' =' → logprob: -5.142426490783691

Token 146: ' '' (ID: 461)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.10986672341823578
    2. 'mod' → logprob: -2.3598666191101074
    3. '400' → logprob: -5.234866619110107
    4. ' ' → logprob: -5.484866619110107
    5. '	mod' → logprob: -10.109867095947266
    6. '(mod' → logprob: -10.484867095947266
    7. ' ' → logprob: -10.984867095947266
    8. '```' → logprob: -10.984867095947266
    9. '  ' → logprob: -11.859867095947266
    10. '   ' → logprob: -12.234867095947266

Token 147: 'mod' (ID: 4847)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.47410595417022705
    2. 'mod' → logprob: -0.974105954170227
    3. ' ' → logprob: -10.724105834960938
    4. '	mod' → logprob: -13.599105834960938
    5. '(mod' → logprob: -13.599105834960938
    6. '
' → logprob: -13.724105834960938
    7. '  ' → logprob: -14.474105834960938
    8. '2' → logprob: -14.974105834960938
    9. '   ' → logprob: -14.974105834960938
    10. '400' → logprob: -15.099105834960938

Token 148: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36922314763069153
    2. '
' → logprob: -2.619223117828369
    3. '   ' → logprob: -2.619223117828369
    4. 'def' → logprob: -2.619223117828369
    5. ' for' → logprob: -3.244223117828369
    6. ',' → logprob: -3.994223117828369
    7. 'for' → logprob: -4.744223117828369
    8. ' ]' → logprob: -4.744223117828369
    9. ' def' → logprob: -5.494223117828369
    10. ')' → logprob: -5.869223117828369

Token 149: ' up' (ID: 869)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6313192844390869
    2. '   ' → logprob: -1.256319284439087
    3. ' for' → logprob: -2.131319284439087
    4. 'for' → logprob: -3.006319284439087
    5. 'def' → logprob: -5.006319046020508
    6. '    
' → logprob: -5.881319046020508
    7. ':' → logprob: -6.881319046020508
    8. ',' → logprob: -7.131319046020508
    9. '\n' → logprob: -7.506319046020508
    10. '[' → logprob: -7.756319046020508

Token 150: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1379794478416443
    2. '=' → logprob: -2.512979507446289
    3. '[' → logprob: -3.762979507446289
    4. 'p' → logprob: -5.137979507446289
    5. 'ntil' → logprob: -5.637979507446289
    6. 'def' → logprob: -5.762979507446289
    7. 'pto' → logprob: -6.137979507446289
    8. ' to' → logprob: -6.262979507446289
    9. '_to' → logprob: -6.512979507446289
    10. '[to' → logprob: -7.012979507446289

Token 151: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.16027845442295074
    2. ' ' → logprob: -1.9102784395217896
    3. ' the' → logprob: -11.4102783203125
    4. ' ' → logprob: -12.1602783203125
    5. '```' → logprob: -12.3477783203125
    6. '`' → logprob: -12.6602783203125
    7. '<|end|>' → logprob: -12.6602783203125
    8. 'the' → logprob: -12.8477783203125
    9. '  ' → logprob: -13.0352783203125
    10. '...' → logprob: -13.0352783203125

Token 152: '200' (ID: 1179)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '400' → logprob: -0.00248849974013865
    2. ' ' → logprob: -6.002488613128662
    3. '   ' → logprob: -12.002488136291504
    4. '  ' → logprob: -12.502488136291504
    5. '4' → logprob: -14.189988136291504
    6. '```' → logprob: -14.627488136291504
    7. '    ' → logprob: -15.189988136291504
    8. '(' → logprob: -15.939988136291504
    9. '[' → logprob: -16.12748908996582
    10. '{' → logprob: -16.18998908996582

Token 153: ',' (ID: 11)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3144647777080536
    2. '001' → logprob: -1.314464807510376
    3. '002' → logprob: -7.064464569091797
    4. '003' → logprob: -9.689464569091797
    5. '_' → logprob: -9.814464569091797
    6. '00' → logprob: -9.939464569091797
    7. '0' → logprob: -10.064464569091797
    8. ',' → logprob: -10.314464569091797
    9. '400' → logprob: -10.689464569091797
    10. ' ' → logprob: -11.064464569091797

Token 154: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00201595202088356
    2. '001' → logprob: -6.377016067504883
    3. '400' → logprob: -8.877016067504883
    4. ' ' → logprob: -9.377016067504883
    5. '0' → logprob: -11.252016067504883
    6. '```' → logprob: -11.252016067504883
    7. '002' → logprob: -11.377016067504883
    8. '003' → logprob: -11.502016067504883
    9. '00' → logprob: -11.814516067504883
    10. '004' → logprob: -12.002016067504883

Token 155: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9526302814483643
    2. '
' → logprob: -1.4526302814483643
    3. ' for' → logprob: -1.4526302814483643
    4. '   ' → logprob: -1.9526302814483643
    5. 'def' → logprob: -6.452630043029785
    6. '    
' → logprob: -7.077630043029785
    7. '```' → logprob: -7.952630043029785
    8. ':' → logprob: -8.202630043029785
    9. ' ' → logprob: -8.202630043029785
    10. ',' → logprob: -8.327630043029785

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1482597440481186
    2. 'for' → logprob: -2.8982596397399902
    3. ' for' → logprob: -2.8982596397399902
    4. '
' → logprob: -3.8982596397399902
    5. 'def' → logprob: -5.39825963973999
    6. '    
' → logprob: -6.39825963973999
    7. ' ' → logprob: -8.398260116577148
    8. ':' → logprob: -8.523260116577148
    9. ',' → logprob: -9.148260116577148
    10. '[' → logprob: -10.023260116577148

Token 157: ' pow' (ID: 9779)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6304905414581299
    2. ' for' → logprob: -1.1304905414581299
    3. '   ' → logprob: -2.00549054145813
    4. '
' → logprob: -5.380490303039551
    5. 'def' → logprob: -6.255490303039551
    6. 'inv' → logprob: -6.380490303039551
    7. ' inv' → logprob: -8.00549030303955
    8. 'pow' (adapté à ' pow') → logprob: -8.00549030303955
    9. '    
' → logprob: -8.50549030303955
    10. 'mod' → logprob: -8.88049030303955

Token 158: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.006039242725819349
    2. '_inv' → logprob: -6.131039142608643
    3. '_' → logprob: -6.381039142608643
    4. '_inverse' → logprob: -6.631039142608643
    5. 'inv' → logprob: -8.3810396194458
    6. '_in' → logprob: -9.0060396194458
    7. 'inverse' → logprob: -9.6310396194458
    8. 'pow' → logprob: -10.1310396194458
    9. 'Inverse' → logprob: -10.3810396194458
    10. 's' → logprob: -10.5060396194458

Token 159: 'i' (ID: 72)
  Prédit: '_inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.0872800275683403
    2. ' =' → logprob: -3.462280035018921
    3. '=' → logprob: -3.587280035018921
    4. 'inv' → logprob: -4.087279796600342
    5. '_' → logprob: -5.837279796600342
    6. '_inverse' → logprob: -5.837279796600342
    7. '[' → logprob: -7.712279796600342
    8. 'i' → logprob: -8.8372802734375
    9. '_INV' → logprob: -8.8372802734375
    10. 'Inv' → logprob: -8.9622802734375

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2258405089378357
    2. '=' → logprob: -1.6008405685424805
    3. 's' → logprob: -9.35084056854248
    4. ' ' → logprob: -9.35084056854248
    5. '[' → logprob: -9.60084056854248
    6. '_' → logprob: -9.72584056854248
    7. 'n' → logprob: -10.97584056854248
    8. '3' → logprob: -11.35084056854248
    9. 'a' → logprob: -11.35084056854248
    10. '   ' → logprob: -11.60084056854248

Token 161: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03804768621921539
    2. ' [' → logprob: -3.2880477905273438
    3. ' ' → logprob: -13.163047790527344
    4. 'pow' → logprob: -13.413047790527344
    5. '1' → logprob: -14.288047790527344
    6. '   ' → logprob: -14.913047790527344
    7. '[-' → logprob: -15.163047790527344
    8. '400' → logprob: -15.288047790527344
    9. '[]' → logprob: -15.413047790527344
    10. '{' → logprob: -15.413047790527344

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.481510692741722e-05
    2. '400' → logprob: -9.62507438659668
    3. ' ' → logprob: -13.00007438659668
    4. '200' → logprob: -13.12507438659668
    5. '0' → logprob: -13.62507438659668
    6. '[' → logprob: -14.37507438659668
    7. ']' → logprob: -14.37507438659668
    8. 'None' → logprob: -14.75007438659668
    9. '2' → logprob: -15.12507438659668
    10. '(' → logprob: -15.25007438659668

Token 163: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003407071635592729
    2. ' ]' → logprob: -8.625340461730957
    3. ' *' → logprob: -9.625340461730957
    4. '   ' → logprob: -10.125340461730957
    5. '*' → logprob: -10.375340461730957
    6. 'def' → logprob: -11.625340461730957
    7. ']*' → logprob: -11.750340461730957
    8. ' ' → logprob: -13.250340461730957
    9. ' for' → logprob: -13.500340461730957
    10. ')' → logprob: -14.500340461730957

Token 164: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07158320397138596
    2. '*' → logprob: -3.5715832710266113
    3. '   ' → logprob: -4.071583271026611
    4. '[' → logprob: -4.571583271026611
    5. ' ' → logprob: -4.946583271026611
    6. 'def' → logprob: -5.821583271026611
    7. ' [' → logprob: -6.821583271026611
    8. ']' → logprob: -7.696583271026611
    9. ')' → logprob: -7.946583271026611
    10. 'import' → logprob: -8.321582794189453

Token 165: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0015456913970410824
    2. '400' → logprob: -6.5015459060668945
    3. ' ' → logprob: -10.876545906066895
    4. '(' → logprob: -11.001545906066895
    5. '2' → logprob: -13.001545906066895
    6. '300' → logprob: -13.126545906066895
    7. '```' → logprob: -14.689045906066895
    8. '   ' → logprob: -14.751545906066895
    9. '[' → logprob: -14.751545906066895
    10. '250' → logprob: -15.001545906066895

Token 166: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0011953481007367373
    2. '400' → logprob: -6.751195430755615
    3. '(' → logprob: -11.751194953918457
    4. ' ' → logprob: -12.376194953918457
    5. '2' → logprob: -12.376194953918457
    6. '300' → logprob: -13.376194953918457
    7. '```' → logprob: -13.626194953918457
    8. '250' → logprob: -13.813694953918457
    9. '   ' → logprob: -13.938694953918457
    10. '  ' → logprob: -14.188694953918457

Token 167: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.3499223291873932
    2. '000' → logprob: -1.2249222993850708
    3. '002' → logprob: -6.599922180175781
    4. '003' → logprob: -10.349922180175781
    5. ',' → logprob: -10.599922180175781
    6. '005' → logprob: -10.724922180175781
    7. '1' → logprob: -11.474922180175781
    8. '00' → logprob: -12.099922180175781
    9. '0' → logprob: -12.224922180175781
    10. '_' → logprob: -12.599922180175781

Token 168: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6495040059089661
    2. '   ' → logprob: -0.7745040059089661
    3. '    
' → logprob: -4.3995041847229
    4. ' for' → logprob: -6.0245041847229
    5. 'for' → logprob: -6.2745041847229
    6. '```' → logprob: -10.399503707885742
    7. 'def' → logprob: -10.649503707885742
    8. '
' → logprob: -10.899503707885742
    9. ' 
' → logprob: -11.399503707885742
    10. '   
' → logprob: -11.399503707885742

Token 169: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4877980947494507
    2. '   ' → logprob: -1.1127980947494507
    3. '    
' → logprob: -2.9877982139587402
    4. 'for' → logprob: -5.61279821395874
    5. ' for' → logprob: -6.11279821395874
    6. '
' → logprob: -8.362797737121582
    7. '\n' → logprob: -9.112797737121582
    8. ' 
' → logprob: -9.112797737121582
    9. 'def' → logprob: -9.362797737121582
    10. '   
' → logprob: -9.612797737121582

Token 170: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3564244508743286
    2. '
' → logprob: -1.4814244508743286
    3. '    
' → logprob: -3.356424331665039
    4. 'for' → logprob: -3.731424331665039
    5. ' for' → logprob: -4.481424331665039
    6. ' 
' → logprob: -7.231424331665039
    7. '
' → logprob: -8.106424331665039
    8. 'def' → logprob: -8.481424331665039
    9. '   
' → logprob: -8.481424331665039
    10. '  
' → logprob: -8.981424331665039

Token 171: ' =' (ID: 314)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.03444647416472435
    2. '=' → logprob: -4.0344462394714355
    3. 'r' → logprob: -4.7844462394714355
    4. ' =' → logprob: -5.7844462394714355
    5. 'w' → logprob: -6.1594462394714355
    6. 'o' → logprob: -6.6594462394714355
    7. 'ower' → logprob: -7.9094462394714355
    8. ')' → logprob: -9.284446716308594
    9. '   ' → logprob: -9.659446716308594
    10. 'for' → logprob: -9.909446716308594

Token 172: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03365526720881462
    2. ' ' → logprob: -3.4086551666259766
    3. 'pow' → logprob: -12.533655166625977
    4. '1' → logprob: -13.971155166625977
    5. '  ' → logprob: -14.283655166625977
    6. '```' → logprob: -14.721155166625977
    7. '2' → logprob: -14.783655166625977
    8. '   ' → logprob: -14.846155166625977
    9. ' ' → logprob: -15.033655166625977
    10. ' pow' → logprob: -15.096155166625977

Token 173: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. 'pow' → logprob: -15.125036239624023
    4. '2' → logprob: -17.187536239624023
    5. '```' → logprob: -17.625036239624023
    6. '  ' → logprob: -18.312536239624023
    7. '1' → logprob: -18.437536239624023
    8. '397' → logprob: -18.625036239624023
    9. '۳' → logprob: -18.625036239624023
    10. '396' → logprob: -18.750036239624023

Token 174: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9801760911941528
    2. 'for' → logprob: -1.2301760911941528
    3. ' for' → logprob: -1.3551760911941528
    4. '    
' → logprob: -3.8551759719848633
    5. '
' → logprob: -4.230175971984863
    6. '<|end|>' → logprob: -4.480175971984863
    7. ' ' → logprob: -5.105175971984863
    8. ' 
' → logprob: -5.480175971984863
    9. '	for' → logprob: -5.855175971984863
    10. '  
' → logprob: -5.855175971984863

Token 175: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8986253142356873
    2. '<|end|>' → logprob: -1.273625373840332
    3. ' for' → logprob: -1.773625373840332
    4. '   ' → logprob: -2.023625373840332
    5. ' ' → logprob: -5.773625373840332
    6. '	for' → logprob: -6.398625373840332
    7. '
' → logprob: -6.523625373840332
    8. ')' → logprob: -6.648625373840332
    9. '<|end|>' → logprob: -6.648625373840332
    10. '  ' → logprob: -7.398625373840332

Token 176: ' Will' (ID: 6835)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.636935293674469
    2. ' for' → logprob: -0.761935293674469
    3. '   ' → logprob: -6.386935234069824
    4. 'pow' → logprob: -6.886935234069824
    5. '3' → logprob: -7.261935234069824
    6. ' ' → logprob: -8.511935234069824
    7. '    ' → logprob: -8.511935234069824
    8. '
' → logprob: -9.136935234069824
    9. '0' → logprob: -9.761935234069824
    10. '#' → logprob: -10.136935234069824

Token 177: ' hold' (ID: 5060)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.046068403869867325
    2. 'for' → logprob: -4.04606819152832
    3. ' =' → logprob: -4.17106819152832
    4. '*=' → logprob: -5.79606819152832
    5. ' for' → logprob: -6.54606819152832
    6. 'continue' → logprob: -6.54606819152832
    7. '**' → logprob: -6.92106819152832
    8. 'in' → logprob: -7.42106819152832
    9. ' in' → logprob: -7.54606819152832
    10. '+=' → logprob: -7.54606819152832

Token 178: ' successive' (ID: 97595)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7415294647216797
    2. '3' → logprob: -1.7415294647216797
    3. 'the' → logprob: -1.8665294647216797
    4. ' the' → logprob: -2.7415294647216797
    5. '1' → logprob: -2.9915294647216797
    6. ' ' → logprob: -3.2415294647216797
    7. '<|end|>' → logprob: -5.11652946472168
    8. ' pow' → logprob: -5.24152946472168
    9. '...' → logprob: -5.36652946472168
    10. 'p' → logprob: -5.99152946472168

Token 179: ' powers' (ID: 27742)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1912127435207367
    2. '3' → logprob: -2.0662126541137695
    3. ' pow' → logprob: -3.5662126541137695
    4. '*' → logprob: -5.6912126541137695
    5. 'p' → logprob: -6.3162126541137695
    6. ' ' → logprob: -6.3162126541137695
    7. 'powers' → logprob: -6.6912126541137695
    8. 'power' → logprob: -6.8162126541137695
    9. 'for' → logprob: -6.9412126541137695
    10. 'i' → logprob: -7.0662126541137695

Token 180: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4158250689506531
    2. '   ' → logprob: -2.040825128555298
    3. 'of' → logprob: -2.290825128555298
    4. 'for' → logprob: -3.540825128555298
    5. '=' → logprob: -4.415824890136719
    6. '*' → logprob: -4.540824890136719
    7. '3' → logprob: -4.540824890136719
    8. ' for' → logprob: -4.665824890136719
    9. ' ' → logprob: -4.790824890136719
    10. '    ' → logprob: -4.790824890136719

Token 181: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00013440960901789367
    2. ' ' → logprob: -9.000134468078613
    3. '   ' → logprob: -12.375134468078613
    4. 'three' → logprob: -13.250134468078613
    5. '```' → logprob: -13.875134468078613
    6. ' three' → logprob: -14.125134468078613
    7. 'the' → logprob: -14.500134468078613
    8. 'pow' → logprob: -14.562634468078613
    9. 'base' → logprob: -14.687634468078613
    10. '    ' → logprob: -15.250134468078613

Token 182: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'three' → logprob: -14.87500286102295
    4. 'pow' → logprob: -15.50000286102295
    5. '```' → logprob: -15.75000286102295
    6. 'p' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.625003814697266
    8. '
' → logprob: -17.125003814697266
    9. '2' → logprob: -17.125003814697266
    10. '`' → logprob: -17.750003814697266

Token 183: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11646254360675812
    2. ' for' → logprob: -2.491462469100952
    3. 'for' → logprob: -4.241462707519531
    4. '
' → logprob: -4.866462707519531
    5. '    
' → logprob: -5.616462707519531
    6. ' ' → logprob: -8.241462707519531
    7. '    ' → logprob: -8.491462707519531
    8. ',' → logprob: -8.866462707519531
    9. '  ' → logprob: -8.991462707519531
    10. 'def' → logprob: -8.991462707519531

Token 184: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.020660417154431343
    2. ' mod' → logprob: -3.895660400390625
    3. '3' → logprob: -9.145660400390625
    4. '   ' → logprob: -12.395660400390625
    5. '(mod' → logprob: -12.520660400390625
    6. '```' → logprob: -13.770660400390625
    7. '	mod' → logprob: -13.770660400390625
    8. ' ' → logprob: -14.520660400390625
    9. '`' → logprob: -15.145660400390625
    10. 'pow' → logprob: -15.270660400390625

Token 185: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.58524090051651
    2. '
' → logprob: -1.8352408409118652
    3. ' for' → logprob: -1.8352408409118652
    4. 'for' → logprob: -2.4602408409118652
    5. '    
' → logprob: -3.5852408409118652
    6. 'def' → logprob: -5.835240840911865
    7. ' 
' → logprob: -6.585240840911865
    8. ' ' → logprob: -7.210240840911865
    9. '3' → logprob: -7.335240840911865
    10. '   
' → logprob: -7.460240840911865

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039781805127859116
    2. ' for' → logprob: -3.9147818088531494
    3. 'for' → logprob: -4.53978157043457
    4. '
' → logprob: -5.41478157043457
    5. '    
' → logprob: -5.66478157043457
    6. ' 
' → logprob: -9.16478157043457
    7. '	for' → logprob: -9.41478157043457
    8. '    ' → logprob: -9.78978157043457
    9. ' ' → logprob: -10.16478157043457
    10. '   
' → logprob: -10.16478157043457

Token 187: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23297300934791565
    2. ' for' → logprob: -1.7329729795455933
    3. '   ' → logprob: -3.482973098754883
    4. '
' → logprob: -8.732973098754883
    5. '    
' → logprob: -9.482973098754883
    6. ' ' → logprob: -10.857973098754883
    7. ' 
' → logprob: -10.982973098754883
    8. 'p' → logprob: -11.232973098754883
    9. '	for' → logprob: -11.357973098754883
    10. '```' → logprob: -11.482973098754883

Token 188: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02987266704440117
    2. ' for' → logprob: -3.5298726558685303
    3. '   ' → logprob: -9.77987289428711
    4. 'p' → logprob: -10.65487289428711
    5. 'i' → logprob: -11.15487289428711
    6. 'def' → logprob: -12.27987289428711
    7. 'base' → logprob: -12.40487289428711
    8. ' i' → logprob: -12.52987289428711
    9. 'pow' → logprob: -12.65487289428711
    10. '#' → logprob: -12.90487289428711

Token 189: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3490596115589142
    2. ' for' → logprob: -1.2240595817565918
    3. '   ' → logprob: -7.599059581756592
    4. 'range' → logprob: -9.84906005859375
    5. ' range' → logprob: -10.59906005859375
    6. 'pow' → logprob: -10.97406005859375
    7. '    ' → logprob: -12.47406005859375
    8. '1' → logprob: -12.47406005859375
    9. 'p' → logprob: -12.72406005859375
    10. ' p' → logprob: -13.59906005859375

Token 190: ' modular' (ID: 61198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2564447522163391
    2. ' for' → logprob: -1.7564446926116943
    3. 'pow' → logprob: -3.5064446926116943
    4. 'p' → logprob: -4.881444931030273
    5. '   ' → logprob: -5.256444931030273
    6. '3' → logprob: -5.631444931030273
    7. '1' → logprob: -6.631444931030273
    8. 'range' → logprob: -6.631444931030273
    9. ' ' → logprob: -6.881444931030273
    10. ' p' → logprob: -7.256444931030273

Token 191: ' inverse' (ID: 53743)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.3439569473266602
    2. ' for' → logprob: -1.4689569473266602
    3. 'for' → logprob: -1.7189569473266602
    4. ' base' → logprob: -1.9689569473266602
    5. 'base' → logprob: -2.59395694732666
    6. 'powers' → logprob: -4.21895694732666
    7. ' p' → logprob: -4.46895694732666
    8. ' bases' → logprob: -4.46895694732666
    9. ' powers' → logprob: -4.59395694732666
    10. '3' → logprob: -4.59395694732666

Token 192: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.18564575910568237
    2. 'def' → logprob: -3.685645818710327
    3. ':' → logprob: -3.935645818710327
    4. 'of' → logprob: -4.185645580291748
    5. ' for' → logprob: -4.435645580291748
    6. '(' → logprob: -4.435645580291748
    7. 'p' → logprob: -4.560645580291748
    8. '   ' → logprob: -4.560645580291748
    9. ' ' → logprob: -4.685645580291748
    10. 'pow' → logprob: -4.685645580291748

Token 193: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00024192029377445579
    2. ' ' → logprob: -8.500242233276367
    3. 'pow' → logprob: -10.875242233276367
    4. 'p' → logprob: -11.375242233276367
    5. 'mod' → logprob: -12.375242233276367
    6. 'def' → logprob: -14.250242233276367
    7. '```' → logprob: -14.250242233276367
    8. 'a' → logprob: -15.062742233276367
    9. '   ' → logprob: -15.125242233276367
    10. '
' → logprob: -15.250242233276367

Token 194: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.452426608419046e-05
    2. 'mod' → logprob: -10.50003433227539
    3. 'p' → logprob: -12.37503433227539
    4. 'pow' → logprob: -13.75003433227539
    5. 'def' → logprob: -14.62503433227539
    6. '(' → logprob: -14.62503433227539
    7. '```' → logprob: -15.87503433227539
    8. ' ' → logprob: -16.00003433227539
    9. 'three' → logprob: -16.75003433227539
    10. '`' → logprob: -16.87503433227539

Token 195: ' modulo' (ID: 112372)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.3929545879364014
    2. ' =' → logprob: -1.5179545879364014
    3. '3' → logprob: -2.1429545879364014
    4. 'mod' → logprob: -2.6429545879364014
    5. ' inv' → logprob: -2.7679545879364014
    6. ':' → logprob: -3.1429545879364014
    7. ',' → logprob: -3.2679545879364014
    8. '=' → logprob: -3.2679545879364014
    9. 'def' → logprob: -3.7679545879364014
    10. 'p' → logprob: -3.8929545879364014

Token 196: ' '' (ID: 461)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02324839122593403
    2. ' mod' → logprob: -3.7732484340667725
    3. '(mod' → logprob: -13.023248672485352
    4. '   ' → logprob: -15.523248672485352
    5. '	mod' → logprob: -16.02324867248535
    6. '`' → logprob: -16.27324867248535
    7. ' ' → logprob: -16.39824867248535
    8. '```' → logprob: -16.77324867248535
    9. '_mod' → logprob: -16.89824867248535
    10. ' мод' → logprob: -17.89824867248535

Token 197: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.639096970204264e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '(mod' → logprob: -16.250097274780273
    4. '   ' → logprob: -17.500097274780273
    5. '```' → logprob: -18.000097274780273
    6. ' ' → logprob: -18.750097274780273
    7. '	mod' → logprob: -18.750097274780273
    8. '
' → logprob: -18.875097274780273
    9. ' мод' → logprob: -19.500097274780273
    10. '2' → logprob: -19.625097274780273

Token 198: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35768693685531616
    2. ')' → logprob: -1.857686996459961
    3. '
' → logprob: -2.357686996459961
    4. '3' → logprob: -3.607686996459961
    5. ',' → logprob: -4.482686996459961
    6. ')
' → logprob: -6.232686996459961
    7. 'def' → logprob: -6.357686996459961
    8. 'p' → logprob: -6.607686996459961
    9. '#' → logprob: -6.857686996459961
    10. '.' → logprob: -7.107686996459961

Token 199: ' using' (ID: 2360)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06794072687625885
    2. '   ' → logprob: -3.0679407119750977
    3. '3' → logprob: -4.817940711975098
    4. 'mod' → logprob: -6.317940711975098
    5. '#' → logprob: -6.692940711975098
    6. 'p' → logprob: -6.817940711975098
    7. 'def' → logprob: -6.942940711975098
    8. '    
' → logprob: -6.942940711975098
    9. '  
' → logprob: -7.317940711975098
    10. ' ' → logprob: -7.442940711975098

Token 200: ' Ferm' (ID: 156422)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.004316299222409725
    2. 'def' → logprob: -5.879316329956055
    3. 'mod' → logprob: -6.504316329956055
    4. '```' → logprob: -12.379316329956055
    5. ' pow' → logprob: -13.004316329956055
    6. '(pow' → logprob: -14.004316329956055
    7. '   ' → logprob: -14.129316329956055
    8. 'p' → logprob: -14.379316329956055
    9. '
' → logprob: -14.504316329956055
    10. '3' → logprob: -14.629316329956055

Token 201: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00019460011390037835
    2. 't' → logprob: -9.375194549560547
    3. 'a' → logprob: -10.250194549560547
    4. 'ат' → logprob: -10.375194549560547
    5. 'ât' → logprob: -12.000194549560547
    6. ' at' → logprob: -12.500194549560547
    7. 'def' → logprob: -13.000194549560547
    8. '```' → logprob: -13.375194549560547
    9. 'mat' → logprob: -13.500194549560547
    10. '...' → logprob: -13.500194549560547

Token 202: ''s' (ID: 885)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8370518088340759
    2. '   ' → logprob: -1.4620518684387207
    3. ''s' → logprob: -1.7120518684387207
    4. '_pow' → logprob: -3.3370518684387207
    5. '^' → logprob: -3.9620518684387207
    6. 'pow' → logprob: -4.837051868438721
    7. '^(' → logprob: -4.837051868438721
    8. '()' → logprob: -4.837051868438721
    9. 'mod' → logprob: -4.962051868438721
    10. '`' → logprob: -4.962051868438721

Token 203: ' Little' (ID: 20899)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.0161241292953491
    2. 'mod' → logprob: -1.0161241292953491
    3. 'def' → logprob: -1.8911241292953491
    4. 'pow' → logprob: -2.6411242485046387
    5. '<|end|>' → logprob: -3.3911242485046387
    6. '(mod' → logprob: -5.391124248504639
    7. ' def' → logprob: -5.891124248504639
    8. '   ' → logprob: -6.016124248504639
    9. ' pow' → logprob: -6.141124248504639
    10. '(pow' → logprob: -7.141124248504639

Token 204: ' The' (ID: 623)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.305659294128418
    2. '   ' → logprob: -1.680659294128418
    3. 'def' → logprob: -1.680659294128418
    4. '#' → logprob: -1.930659294128418
    5. '```' → logprob: -2.555659294128418
    6. 'prime' → logprob: -3.430659294128418
    7. ')' → logprob: -4.180659294128418
    8. ''s' → logprob: -4.305659294128418
    9. 'princip' → logprob: -4.430659294128418
    10. '    ' → logprob: -4.930659294128418

Token 205: 'orem' (ID: 21468)
  Prédit: 'orem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orem' → logprob: -0.000543261703569442
    2. 'ory' → logprob: -8.250543594360352
    3. 'orm' → logprob: -8.500543594360352
    4. 'o' → logprob: -10.375543594360352
    5. 'or' → logprob: -10.875543594360352
    6. 'ore' → logprob: -11.375543594360352
    7. 'orum' → logprob: -12.500543594360352
    8. '```' → logprob: -12.625543594360352
    9. 'Little' → logprob: -14.000543594360352
    10. '-' → logprob: -14.125543594360352

Token 206: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18954892456531525
    2. '
' → logprob: -2.064548969268799
    3. '3' → logprob: -3.689548969268799
    4. '    
' → logprob: -4.314548969268799
    5. ',' → logprob: -6.439548969268799
    6. '  
' → logprob: -6.814548969268799
    7. ' ' → logprob: -7.439548969268799
    8. '   
' → logprob: -7.689548969268799
    9. '[' → logprob: -7.814548969268799
    10. 'p' → logprob: -7.814548969268799

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012923780595883727
    2. 'def' → logprob: -8.12629222869873
    3. '
' → logprob: -8.37629222869873
    4. '  ' → logprob: -8.62629222869873
    5. '    
' → logprob: -8.62629222869873
    6. ' ' → logprob: -9.00129222869873
    7. '[' → logprob: -10.00129222869873
    8. '    ' → logprob: -10.00129222869873
    9. '3' → logprob: -10.50129222869873
    10. 'pow' → logprob: -10.50129222869873

Token 208: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2114153653383255
    2. 'pow' → logprob: -1.836415410041809
    3. 'inv' → logprob: -4.8364152908325195
    4. '3' → logprob: -5.0864152908325195
    5. 'mod' → logprob: -5.2114152908325195
    6. 'p' → logprob: -5.3364152908325195
    7. 'def' → logprob: -6.2114152908325195
    8. ' inv' → logprob: -6.5864152908325195
    9. ' pow' → logprob: -7.0864152908325195
    10. ' ' → logprob: -7.2114152908325195

Token 209: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.281175822019577
    2. '3' → logprob: -2.1561758518218994
    3. 'nv' → logprob: -2.5311758518218994
    4. 'pow' → logprob: -4.15617561340332
    5. ' =' → logprob: -4.40617561340332
    6. 'v' → logprob: -5.15617561340332
    7. '_' → logprob: -5.40617561340332
    8. '=' → logprob: -6.03117561340332
    9. 'nt' → logprob: -6.15617561340332
    10. '_pow' → logprob: -6.65617561340332

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021055489778519
    2. '=' → logprob: -2.350210666656494
    3. ' ' → logprob: -12.975210189819336
    4. 'def' → logprob: -14.850210189819336
    5. 'pow' → logprob: -14.850210189819336
    6. '   ' → logprob: -15.350210189819336
    7. '  ' → logprob: -16.100210189819336
    8. ')' → logprob: -16.225210189819336
    9. '=int' → logprob: -16.600210189819336
    10. 's' → logprob: -16.850210189819336

Token 211: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.003667294979095459
    2. ' pow' → logprob: -5.75366735458374
    3. '3' → logprob: -7.87866735458374
    4. '(pow' → logprob: -9.378666877746582
    5. ' ' → logprob: -12.003666877746582
    6. '   ' → logprob: -12.128666877746582
    7. '(' → logprob: -12.253666877746582
    8. 'mod' → logprob: -13.253666877746582
    9. '576' → logprob: -14.753666877746582
    10. '4' → logprob: -14.753666877746582

Token 212: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002671768015716225
    2. '3' → logprob: -8.250267028808594
    3. '(
' → logprob: -12.125267028808594
    4. '<|end|>' → logprob: -15.375267028808594
    5. '```' → logprob: -16.500267028808594
    6. 'def' → logprob: -17.125267028808594
    7. ' (' → logprob: -17.375267028808594
    8. '
' → logprob: -18.125267028808594
    9. '(pow' → logprob: -18.375267028808594
    10. '(

' → logprob: -18.500267028808594

Token 213: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.935296834039036e-06
    2. ')' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.75000286102295
    4. '(' → logprob: -16.375003814697266
    5. '```' → logprob: -17.000003814697266
    6. '   ' → logprob: -18.250003814697266
    7. '
' → logprob: -19.000003814697266
    8. '۳' → logprob: -19.125003814697266
    9. '33' → logprob: -19.187503814697266
    10. '`' → logprob: -19.562503814697266

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039492646465077996
    2. ' ,' → logprob: -8.750394821166992
    3. ',
' → logprob: -8.875394821166992
    4. ',-' → logprob: -9.750394821166992
    5. ')' → logprob: -11.500394821166992
    6. 'mod' → logprob: -11.625394821166992
    7. ',int' → logprob: -12.875394821166992
    8. ',module' → logprob: -12.875394821166992
    9. ',m' → logprob: -13.000394821166992
    10. ' ' → logprob: -13.750394821166992

Token 215: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.102680633077398e-05
    2. ' mod' → logprob: -9.500090599060059
    3. '(mod' → logprob: -11.375090599060059
    4. '-' → logprob: -12.625090599060059
    5. '-mod' → logprob: -14.000090599060059
    6. '	mod' → logprob: -15.625090599060059
    7. '_mod' → logprob: -16.375091552734375
    8. '.mod' → logprob: -16.625091552734375
    9. ' -' → logprob: -17.250091552734375
    10. ' ' → logprob: -17.375091552734375

Token 216: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036004253197461367
    2. ' -' → logprob: -5.628600597381592
    3. ')' → logprob: -16.00360107421875
    4. ' ' → logprob: -16.50360107421875
    5. ')-' → logprob: -17.62860107421875
    6. '   ' → logprob: -18.12860107421875
    7. '```' → logprob: -18.62860107421875
    8. '6' → logprob: -19.12860107421875
    9. '2' → logprob: -19.25360107421875
    10. '−' → logprob: -19.31610107421875

Token 217: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '3' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '```' → logprob: -16.125001907348633
    5. '-' → logprob: -16.375001907348633
    6. '
' → logprob: -17.375001907348633
    7. '4' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.625001907348633
    9. '

' → logprob: -17.750001907348633
    10. '２' → logprob: -17.875001907348633

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '3' → logprob: -15.875000953674316
    4. '1' → logprob: -17.25
    5. '```' → logprob: -17.375
    6. '２' → logprob: -17.6875
    7. '۲' → logprob: -17.75
    8. '
' → logprob: -17.8125
    9. '4' → logprob: -18.1875
    10. '62' → logprob: -18.25

Token 219: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20164351165294647
    2. ',' → logprob: -1.701643466949463
    3. ' )' → logprob: -9.201643943786621
    4. ' ,' → logprob: -10.076643943786621
    5. ',
' → logprob: -10.701643943786621
    6. ')
' → logprob: -10.701643943786621
    7. '   ' → logprob: -10.951643943786621
    8. '```' → logprob: -12.201643943786621
    9. ')

' → logprob: -12.326643943786621
    10. '}' → logprob: -12.701643943786621

Token 220: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00023107275774236768
    2. ' mod' → logprob: -8.37523078918457
    3. ')' → logprob: -15.00023078918457
    4. '   ' → logprob: -16.87523078918457
    5. ' ' → logprob: -18.12523078918457
    6. '(mod' → logprob: -18.75023078918457
    7. '	mod' → logprob: -19.00023078918457
    8. '```' → logprob: -19.75023078918457
    9. '  ' → logprob: -21.00023078918457
    10. 'int' → logprob: -21.12523078918457

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.125003814697266
    4. ')

' → logprob: -14.500003814697266
    5. '   ' → logprob: -16.625003814697266
    6. ')`' → logprob: -17.375003814697266
    7. '))' → logprob: -17.750003814697266
    8. ')#' → logprob: -18.125003814697266
    9. ')
' → logprob: -18.375003814697266
    10. '),' → logprob: -18.500003814697266

Token 222: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3151348829269409
    2. '
' → logprob: -2.4401350021362305
    3. '    
' → logprob: -2.5651350021362305
    4. 'for' → logprob: -2.6901350021362305
    5. ' for' → logprob: -3.3151350021362305
    6. '  
' → logprob: -7.8151350021362305
    7. '	for' → logprob: -8.06513500213623
    8. '   
' → logprob: -8.44013500213623
    9. '```' → logprob: -8.56513500213623
    10. '\n' → logprob: -8.69013500213623

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037742603570222855
    2. 'for' → logprob: -3.4127426147460938
    3. ' for' → logprob: -6.037742614746094
    4. '    
' → logprob: -6.662742614746094
    5. '
' → logprob: -7.787742614746094
    6. '	for' → logprob: -13.412742614746094
    7. '   
' → logprob: -13.537742614746094
    8. '  
' → logprob: -13.787742614746094
    9. '    ' → logprob: -14.037742614746094
    10. '```' → logprob: -14.162742614746094

Token 224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16350148618221283
    2. 'for' → logprob: -2.038501501083374
    3. ' for' → logprob: -3.913501501083374
    4. '
' → logprob: -8.038501739501953
    5. '    
' → logprob: -8.163501739501953
    6. '	for' → logprob: -10.788501739501953
    7. '    ' → logprob: -12.913501739501953
    8. ' 
' → logprob: -13.663501739501953
    9. 'def' → logprob: -13.788501739501953
    10. ' ' → logprob: -14.163501739501953

Token 225: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010104171000421047
    2. ' for' → logprob: -4.635104179382324
    3. '   ' → logprob: -8.010104179382324
    4. '
' → logprob: -11.760104179382324
    5. 'def' → logprob: -12.635104179382324
    6. '#' → logprob: -13.260104179382324
    7. ' ' → logprob: -14.385104179382324
    8. '```' → logprob: -14.385104179382324
    9. '    
' → logprob: -15.135104179382324
    10. 'p' → logprob: -15.260104179382324

Token 226: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.00024215869780164212
    2. 'pare' → logprob: -9.000242233276367
    3. ' compute' → logprob: -10.250242233276367
    4. 'computed' → logprob: -10.250242233276367
    5. 'comput' → logprob: -11.750242233276367
    6. 'for' → logprob: -12.125242233276367
    7. 'c' → logprob: -12.375242233276367
    8. 'process' → logprob: -12.500242233276367
    9. '_compute' → logprob: -12.625242233276367
    10. 'p' → logprob: -12.625242233276367

Token 227: ' pow' (ID: 9779)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11301322281360626
    2. ' for' → logprob: -2.23801326751709
    3. 'range' → logprob: -9.23801326751709
    4. ' range' → logprob: -9.73801326751709
    5. '   ' → logprob: -10.61301326751709
    6. 'pow' → logprob: -12.86301326751709
    7. '
' → logprob: -13.11301326751709
    8. '    ' → logprob: -13.11301326751709
    9. '#' → logprob: -14.86301326751709
    10. '	for' → logprob: -14.98801326751709

Token 228: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.875017166137695
    3. '(' → logprob: -12.625017166137695
    4. 'pow' → logprob: -13.625017166137695
    5. ' ' → logprob: -13.750017166137695
    6. '```' → logprob: -13.875017166137695
    7. '_' → logprob: -14.125017166137695
    8. '   ' → logprob: -14.812517166137695
    9. 'for' → logprob: -14.875017166137695
    10. '
' → logprob: -14.937517166137695

Token 229: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009320501238107681
    2. 'for' → logprob: -5.1343207359313965
    3. '
' → logprob: -7.0093207359313965
    4. '[i' → logprob: -7.0093207359313965
    5. ' =' → logprob: -7.7593207359313965
    6. ' for' → logprob: -8.509320259094238
    7. ':' → logprob: -8.634320259094238
    8. '=' → logprob: -8.759320259094238
    9. 'def' → logprob: -9.009320259094238
    10. '[:]' → logprob: -9.134320259094238

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27471697330474854
    2. '+' → logprob: -2.149716854095459
    3. ' =' → logprob: -3.274716854095459
    4. '=' → logprob: -3.399716854095459
    5. ' ]' → logprob: -4.774716854095459
    6. ']=' → logprob: -4.774716854095459
    7. '[' → logprob: -4.899716854095459
    8. ' +' → logprob: -5.399716854095459
    9. 'for' → logprob: -5.774716854095459
    10. ']+=' → logprob: -5.774716854095459

Token 231: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17854972183704376
    2. ' for' → logprob: -1.9285497665405273
    3. '[' → logprob: -4.178549766540527
    4. '=' → logprob: -6.928549766540527
    5. '[i' → logprob: -7.553549766540527
    6. ' =' → logprob: -7.678549766540527
    7. '
' → logprob: -8.053549766540527
    8. ' in' → logprob: -8.928549766540527
    9. 'in' → logprob: -9.053549766540527
    10. ']' → logprob: -9.803549766540527

Token 232: ' ' (ID: 220)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.23701831698417664
    2. ' (' → logprob: -1.987018346786499
    3. 'pow' → logprob: -3.612018346786499
    4. '(p' → logprob: -3.612018346786499
    5. '(' → logprob: -4.11201810836792
    6. '3' → logprob: -6.11201810836792
    7. ' pow' → logprob: -6.98701810836792
    8. ' ' → logprob: -8.362018585205078
    9. '   ' → logprob: -9.987018585205078
    10. 'p' → logprob: -9.987018585205078

Token 233: '3' (ID: 18)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.22916558384895325
    2. '(p' → logprob: -2.229165554046631
    3. 'pow' → logprob: -2.479165554046631
    4. '(' → logprob: -5.104165554046631
    5. '3' → logprob: -5.479165554046631
    6. ' (' → logprob: -5.979165554046631
    7. 'p' → logprob: -8.229166030883789
    8. ' pow' → logprob: -8.354166030883789
    9. '(power' → logprob: -10.604166030883789
    10. ' ' → logprob: -10.854166030883789

Token 234: '^' (ID: 61)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2352972775697708
    2. '**' → logprob: -2.235297203063965
    3. ' **' → logprob: -3.360297203063965
    4. '*i' → logprob: -3.485297203063965
    5. '*' → logprob: -3.610297203063965
    6. ' ' → logprob: -5.735297203063965
    7. 'pow' → logprob: -5.860297203063965
    8. '[i' → logprob: -6.485297203063965
    9. '*p' → logprob: -6.985297203063965
    10. ' pow' → logprob: -7.985297203063965

Token 235: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03814959153532982
    2. ' i' → logprob: -3.28814959526062
    3. '[i' → logprob: -9.2881498336792
    4. '(i' → logprob: -12.5381498336792
    5. 'pow' → logprob: -12.7881498336792
    6. ' ' → logprob: -13.2881498336792
    7. '   ' → logprob: -13.4131498336792
    8. '```' → logprob: -13.6631498336792
    9. '	i' → logprob: -13.9131498336792
    10. '3' → logprob: -14.0381498336792

Token 236: ' %' (ID: 1851)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42172345519065857
    2. ' for' → logprob: -1.171723484992981
    3. '
' → logprob: -3.5467233657836914
    4. '   ' → logprob: -5.671723365783691
    5. '[' → logprob: -6.796723365783691
    6. '    
' → logprob: -9.046723365783691
    7. '[i' → logprob: -9.171723365783691
    8. ' ' → logprob: -9.421723365783691
    9. 'p' → logprob: -9.546723365783691
    10. 'def' → logprob: -9.546723365783691

Token 237: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.02975071594119072
    2. ' mod' → logprob: -3.5297508239746094
    3. '(mod' → logprob: -15.52975082397461
    4. '	mod' → logprob: -16.40475082397461
    5. ' ' → logprob: -16.90475082397461
    6. '   ' → logprob: -18.77975082397461
    7. '```' → logprob: -18.90475082397461
    8. '`' → logprob: -19.52975082397461
    9. ' ' → logprob: -20.15475082397461
    10. '_mod' → logprob: -20.27975082397461

Token 238: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2826036214828491
    2. 'for' → logprob: -1.7826036214828491
    3. ' for' → logprob: -2.6576037406921387
    4. '
' → logprob: -5.032603740692139
    5. '    
' → logprob: -6.907603740692139
    6. ',' → logprob: -9.53260326385498
    7. '	for' → logprob: -9.78260326385498
    8. ':' → logprob: -10.40760326385498
    9. '\n' → logprob: -10.40760326385498
    10. ' ' → logprob: -10.78260326385498

Token 239: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07964359223842621
    2. 'i' → logprob: -2.579643487930298
    3. ' range' → logprob: -7.204643726348877
    4. 'range' → logprob: -11.954643249511719
    5. ' ' → logprob: -13.579643249511719
    6. ' _' → logprob: -13.829643249511719
    7. '   ' → logprob: -14.454643249511719
    8. '	i' → logprob: -14.579643249511719
    9. '```' → logprob: -15.579643249511719
    10. '  ' → logprob: -15.704643249511719

Token 240: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3135632872581482
    2. 'in' → logprob: -1.313563346862793
    3. '1' → logprob: -9.438563346862793
    4. 'range' → logprob: -10.063563346862793
    5. '=' → logprob: -10.188563346862793
    6. 'for' → logprob: -10.313563346862793
    7. 'from' → logprob: -11.063563346862793
    8. '[' → logprob: -11.188563346862793
    9. 'i' → logprob: -11.313563346862793
    10. ' ' → logprob: -11.563563346862793

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006060567684471607
    2. ' ' → logprob: -5.131060600280762
    3. '0' → logprob: -9.006060600280762
    4. '   ' → logprob: -12.256060600280762
    5. 'range' → logprob: -13.381060600280762
    6. ' range' → logprob: -13.631060600280762
    7. '    ' → logprob: -14.506060600280762
    8. '  ' → logprob: -15.006060600280762
    9. '```' → logprob: -15.881060600280762
    10. '(' → logprob: -15.943560600280762

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025549851125106215
    2. ' ' → logprob: -8.750255584716797
    3. '0' → logprob: -9.250255584716797
    4. 'range' → logprob: -14.375255584716797
    5. '   ' → logprob: -15.875255584716797
    6. ' range' → logprob: -16.375255584716797
    7. '(' → logprob: -17.500255584716797
    8. '  ' → logprob: -17.812755584716797
    9. '```' → logprob: -17.812755584716797
    10. '[' → logprob: -18.375255584716797

Token 243: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39644214510917664
    2. ' for' → logprob: -2.021442174911499
    3. ':' → logprob: -2.896442174911499
    4. 'range' → logprob: -3.146442174911499
    5. ' to' → logprob: -3.896442174911499
    6. ',' → logprob: -4.39644193649292
    7. '   ' → logprob: -4.52144193649292
    8. ':
' → logprob: -4.52144193649292
    9. ' range' → logprob: -4.64644193649292
    10. '1' → logprob: -4.64644193649292

Token 244: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -16.000627517700195
    4. '  ' → logprob: -16.750627517700195
    5. '4' → logprob: -17.125627517700195
    6. '200' → logprob: -17.375627517700195
    7. '```' → logprob: -18.625627517700195
    8. '399' → logprob: -19.125627517700195
    9. ' ' → logprob: -19.750627517700195
    10. '`' → logprob: -20.000627517700195

Token 245: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '4' → logprob: -18.000001907348633
    4. '200' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '  ' → logprob: -19.500001907348633
    7. '```' → logprob: -20.250001907348633
    8. '399' → logprob: -20.625001907348633
    9. '300' → logprob: -21.250001907348633
    10. '000' → logprob: -21.750001907348633

Token 246: ',' (ID: 11)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.4410299062728882
    2. '000' → logprob: -1.0660299062728882
    3. ',' → logprob: -4.441030025482178
    4. '_' → logprob: -9.69102954864502
    5. '1' → logprob: -9.69102954864502
    6. '401' → logprob: -9.94102954864502
    7. '002' → logprob: -10.06602954864502
    8. ',
' → logprob: -10.31602954864502
    9. ' ' → logprob: -10.31602954864502
    10. '0' → logprob: -10.31602954864502

Token 247: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.01254662312567234
    2. '400' → logprob: -4.387546539306641
    3. ' ' → logprob: -10.63754653930664
    4. '001' → logprob: -12.26254653930664
    5. '```' → logprob: -12.51254653930664
    6. '0' → logprob: -12.88754653930664
    7. '   ' → logprob: -13.76254653930664
    8. '`' → logprob: -14.76254653930664
    9. '  ' → logprob: -15.88754653930664
    10. '00' → logprob: -16.51254653930664

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11657681316137314
    2. ' for' → logprob: -2.866576910018921
    3. 'for' → logprob: -3.116576910018921
    4. '
' → logprob: -4.866576671600342
    5. '    
' → logprob: -6.991576671600342
    6. '```' → logprob: -9.6165771484375
    7. '	for' → logprob: -9.7415771484375
    8. ',' → logprob: -10.8665771484375
    9. '\n' → logprob: -11.2415771484375
    10. ':' → logprob: -11.3665771484375

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17363479733467102
    2. ' for' → logprob: -2.1736347675323486
    3. 'for' → logprob: -3.2986347675323486
    4. '
' → logprob: -4.923635005950928
    5. '    
' → logprob: -6.923635005950928
    6. '```' → logprob: -8.17363452911377
    7. '	for' → logprob: -9.67363452911377
    8. '\n' → logprob: -10.29863452911377
    9. ' 
' → logprob: -11.04863452911377
    10. '  
' → logprob: -11.54863452911377

Token 250: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7925719022750854
    2. ' for' → logprob: -0.9175719022750854
    3. 'for' (adapté à ' for') → logprob: -1.9175719022750854
    4. '
' → logprob: -7.667572021484375
    5. '```' → logprob: -8.667572021484375
    6. '    
' → logprob: -8.917572021484375
    7. '	for' → logprob: -9.792572021484375
    8. ' 
' → logprob: -11.417572021484375
    9. '\n' → logprob: -12.042572021484375
    10. '       ' → logprob: -12.917572021484375

Token 251: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04861018806695938
    2. 'i' → logprob: -3.048610210418701
    3. ' _' → logprob: -11.298609733581543
    4. '_' → logprob: -12.423609733581543
    5. ' ' → logprob: -12.923609733581543
    6. '_i' → logprob: -13.298609733581543
    7. '1' → logprob: -14.548609733581543
    8. '   ' → logprob: -14.673609733581543
    9. '	i' → logprob: -15.173609733581543
    10. '`' → logprob: -15.548609733581543

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005986154545098543
    2. 'in' → logprob: -5.130986213684082
    3. ' ' → logprob: -10.130986213684082
    4. '1' → logprob: -11.380986213684082
    5. '	in' → logprob: -13.630986213684082
    6. ' i' → logprob: -13.880986213684082
    7. 'import' → logprob: -14.255986213684082
    8. '(' → logprob: -14.380986213684082
    9. '[' → logprob: -14.755986213684082
    10. '   ' → logprob: -14.880986213684082

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759469866752625
    2. ' range' → logprob: -0.8259469866752625
    3. ' ' → logprob: -13.075946807861328
    4. '1' → logprob: -13.200946807861328
    5. '   ' → logprob: -13.700946807861328
    6. '(range' → logprob: -13.700946807861328
    7. '	range' → logprob: -14.825946807861328
    8. '(' → logprob: -15.075946807861328
    9. '  ' → logprob: -15.325946807861328
    10. '[' → logprob: -15.700946807861328

Token 254: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.368984107510187e-05
    2. '1' → logprob: -10.375033378601074
    3. ' (' → logprob: -13.125033378601074
    4. ' ' → logprob: -14.875033378601074
    5. '   ' → logprob: -17.50003433227539
    6. '(
' → logprob: -18.00003433227539
    7. '[' → logprob: -19.37503433227539
    8. '2' → logprob: -21.25003433227539
    9. '10' → logprob: -21.50003433227539
    10. '(len' → logprob: -21.56253433227539

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.432518421206623e-05
    2. '400' → logprob: -9.8750638961792
    3. ' ' → logprob: -11.3750638961792
    4. '   ' → logprob: -13.7500638961792
    5. '(' → logprob: -16.250064849853516
    6. '  ' → logprob: -17.125064849853516
    7. '4' → logprob: -18.437564849853516
    8. '```' → logprob: -18.437564849853516
    9. '    ' → logprob: -18.500064849853516
    10. '１' → logprob: -18.687564849853516

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011106656864285469
    2. ' ,' → logprob: -4.511106491088867
    3. '400' → logprob: -10.386106491088867
    4. ' ' → logprob: -10.761106491088867
    5. '(' → logprob: -12.636106491088867
    6. ',
' → logprob: -13.886106491088867
    7. '   ' → logprob: -14.136106491088867
    8. '```' → logprob: -15.261106491088867
    9. ')' → logprob: -15.386106491088867
    10. '):' → logprob: -15.511106491088867

Token 257: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.125015258789062
    4. '4' → logprob: -19.375015258789062
    5. '  ' → logprob: -20.250015258789062
    6. 'len' → logprob: -20.625015258789062
    7. '200' → logprob: -21.750015258789062
    8. '```' → logprob: -22.000015258789062
    9. '    ' → logprob: -22.125015258789062
    10. '{' → logprob: -22.375015258789062

Token 258: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -20.5
    4. '4' → logprob: -20.625
    5. 'len' → logprob: -20.875
    6. '  ' → logprob: -22.25
    7. '{' → logprob: -22.875
    8. '```' → logprob: -22.875
    9. '200' → logprob: -23.75
    10. '000' → logprob: -23.875

Token 259: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.0006926587666384876
    2. '000' → logprob: -7.500692844390869
    3. '401' → logprob: -9.250692367553711
    4. '002' → logprob: -11.125692367553711
    5. ',' → logprob: -11.500692367553711
    6. ')' → logprob: -12.375692367553711
    7. ' ' → logprob: -12.375692367553711
    8. '{' → logprob: -13.000692367553711
    9. '003' → logprob: -13.000692367553711
    10. '+' → logprob: -13.375692367553711

Token 260: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02339327335357666
    2. '):' → logprob: -3.773393154144287
    3. '):
' → logprob: -9.523393630981445
    4. ' ):
' → logprob: -9.898393630981445
    5. ':' → logprob: -11.398393630981445
    6. ':
' → logprob: -11.898393630981445
    7. ')' → logprob: -12.523393630981445
    8. ' ):' → logprob: -13.773393630981445
    9. '   ' → logprob: -14.148393630981445
    10. '):

' → logprob: -14.773393630981445

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48851415514945984
    2. '       ' → logprob: -0.9885141849517822
    3. ' p' → logprob: -4.863513946533203
    4. 'pow' → logprob: -6.113513946533203
    5. 'p' → logprob: -6.238513946533203
    6. ' pow' → logprob: -6.613513946533203
    7. '	p' → logprob: -7.488513946533203
    8. '    
' → logprob: -9.113513946533203
    9. '    ' → logprob: -9.238513946533203
    10. '
' → logprob: -9.613513946533203

Token 262: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.4895190894603729
    2. 'p' → logprob: -0.9895191192626953
    3. '   ' → logprob: -4.739519119262695
    4. ' p' → logprob: -5.364519119262695
    5. ' pow' → logprob: -6.864519119262695
    6. '       ' → logprob: -7.114519119262695
    7. '	p' → logprob: -10.489519119262695
    8. '(pow' → logprob: -12.114519119262695
    9. '    ' → logprob: -12.614519119262695
    10. '(p' → logprob: -13.239519119262695

Token 263: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '[i' → logprob: -19.125
    3. ' ' → logprob: -19.5
    4. '[' → logprob: -19.75
    5. '```' → logprob: -19.75
    6. '³' → logprob: -20.75
    7. '۳' → logprob: -21.0
    8. '   ' → logprob: -21.0
    9. '٣' → logprob: -21.25
    10. '৩' → logprob: -21.5

Token 264: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.500005722045898
    3. '=' → logprob: -13.875005722045898
    4. '   ' → logprob: -14.125005722045898
    5. ' [' → logprob: -15.875005722045898
    6. 'i' → logprob: -16.3750057220459
    7. '[(' → logprob: -16.5000057220459
    8. '\[' → logprob: -16.5000057220459
    9. '[I' → logprob: -16.7500057220459
    10. ' =' → logprob: -16.8750057220459

Token 265: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051348987966775894
    2. ']' → logprob: -3.051348924636841
    3. ' =' → logprob: -6.17634916305542
    4. ']=' → logprob: -7.30134916305542
    5. ')' → logprob: -13.301348686218262
    6. '(' → logprob: -14.301348686218262
    7. ',' → logprob: -14.676348686218262
    8. '*=' → logprob: -14.801348686218262
    9. '   ' → logprob: -15.051348686218262
    10. '=p' → logprob: -15.176348686218262

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '=p' → logprob: -17.250553131103516
    4. '=(' → logprob: -17.500553131103516
    5. '=

' → logprob: -17.500553131103516
    6. '*=' → logprob: -17.625553131103516
    7. '=
' → logprob: -17.750553131103516
    8. ']=' → logprob: -18.625553131103516
    9. ']' → logprob: -19.125553131103516
    10. ',' → logprob: -19.500553131103516

Token 267: ' p' (ID: 275)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.17748089134693146
    2. '(pow' → logprob: -1.927480936050415
    3. '(p' → logprob: -4.802480697631836
    4. 'pow' → logprob: -5.052480697631836
    5. '(' → logprob: -6.552480697631836
    6. ' pow' → logprob: -6.927480697631836
    7. '   ' → logprob: -10.302480697631836
    8. '3' → logprob: -10.927480697631836
    9. ' ' → logprob: -11.677480697631836
    10. 'p' → logprob: -11.677480697631836

Token 268: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20142464339733124
    2. '*' → logprob: -1.7014245986938477
    3. ' =' → logprob: -12.826424598693848
    4. ' ' → logprob: -13.076424598693848
    5. '3' → logprob: -13.326424598693848
    6. '(' → logprob: -13.326424598693848
    7. '=' → logprob: -13.451424598693848
    8. '*p' → logprob: -14.326424598693848
    9. ' ' → logprob: -14.701424598693848
    10. '   ' → logprob: -15.326424598693848

Token 269: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.16149088740348816
    2. 'p' → logprob: -1.9114909172058105
    3. ' p' → logprob: -7.2864909172058105
    4. ' (' → logprob: -7.6614909172058105
    5. '(' → logprob: -9.411490440368652
    6. '3' → logprob: -11.161490440368652
    7. '   ' → logprob: -11.911490440368652
    8. 'pow' → logprob: -12.536490440368652
    9. '	p' → logprob: -13.286490440368652
    10. '(pow' → logprob: -14.161490440368652

Token 270: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04858953505754471
    2. ' *' → logprob: -3.0485894680023193
    3. ' ' → logprob: -13.923589706420898
    4. '*p' → logprob: -14.173589706420898
    5. '   ' → logprob: -15.798589706420898
    6. '*(' → logprob: -16.0485897064209
    7. '3' → logprob: -16.1735897064209
    8. '  ' → logprob: -16.6735897064209
    9. '=' → logprob: -16.9235897064209
    10. ' ' → logprob: -17.0485897064209

Token 271: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '   ' → logprob: -17.250625610351562
    4. '۳' → logprob: -18.000625610351562
    5. '```' → logprob: -18.875625610351562
    6. '  ' → logprob: -19.250625610351562
    7. '    ' → logprob: -19.563125610351562
    8. '
' → logprob: -20.125625610351562
    9. '৩' → logprob: -20.188125610351562
    10. ' three' → logprob: -20.250625610351562

Token 272: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.125019073486328
    4. '۳' → logprob: -19.125019073486328
    5. '```' → logprob: -19.500019073486328
    6. '  ' → logprob: -20.250019073486328
    7. '٣' → logprob: -20.875019073486328
    8. '    ' → logprob: -21.000019073486328
    9. '৩' → logprob: -21.062519073486328
    10. 'three' → logprob: -21.062519073486328

Token 273: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.029750484973192215
    2. '%' → logprob: -3.5297505855560303
    3. '%n' → logprob: -18.40475082397461
    4. '%c' → logprob: -18.52975082397461
    5. '%i' → logprob: -18.77975082397461
    6. '%d' → logprob: -19.15475082397461
    7. ' %
' → logprob: -19.27975082397461
    8. ' ' → logprob: -20.02975082397461
    9. ' %=' → logprob: -20.02975082397461
    10. '%s' → logprob: -20.27975082397461

Token 274: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001584850688232109
    2. ' mod' → logprob: -8.750158309936523
    3. '(mod' → logprob: -18.625158309936523
    4. '	mod' → logprob: -21.875158309936523
    5. ' ' → logprob: -23.125158309936523
    6. '_mod' → logprob: -24.125158309936523
    7. '```' → logprob: -24.500158309936523
    8. ' мод' → logprob: -25.000158309936523
    9. 'modal' → logprob: -25.000158309936523
    10. 'moder' → logprob: -25.125158309936523

Token 275: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018008287996053696
    2. '
' → logprob: -5.143008232116699
    3. 'for' → logprob: -5.143008232116699
    4. '    
' → logprob: -5.643008232116699
    5. ' for' → logprob: -6.018008232116699
    6. '#' (adapté à ' #') → logprob: -9.3930082321167
    7. '```' → logprob: -10.0180082321167
    8. ' 
' → logprob: -11.3930082321167
    9. '  
' → logprob: -11.8930082321167
    10. '   
' → logprob: -12.2680082321167

Token 278: ' Reset' (ID: 31369)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5649400949478149
    2. 'p' → logprob: -1.314940094947815
    3. ' for' → logprob: -2.9399399757385254
    4. 'pi' → logprob: -3.1899399757385254
    5. ' p' → logprob: -3.5649399757385254
    6. 'pow' → logprob: -4.064939975738525
    7. 'inv' → logprob: -4.564939975738525
    8. ' pi' → logprob: -5.439939975738525
    9. ' inv' → logprob: -5.689939975738525
    10. 'i' → logprob: -6.189939975738525

Token 279: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13726432621479034
    2. ' p' → logprob: -2.1372642517089844
    3. 'pow' → logprob: -4.637264251708984
    4. 'i' → logprob: -8.262264251708984
    5. ' pow' → logprob: -8.512264251708984
    6. ' i' → logprob: -9.637264251708984
    7. '   ' → logprob: -9.887264251708984
    8. ' ' → logprob: -12.637264251708984
    9. '```' → logprob: -12.762264251708984
    10. '	p' → logprob: -12.887264251708984

Token 280: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575944185256958
    2. '=' → logprob: -0.825944185256958
    3. 'p' → logprob: -13.075943946838379
    4. '   ' → logprob: -14.450943946838379
    5. '=p' → logprob: -14.700943946838379
    6. '<|end|>' → logprob: -14.825943946838379
    7. ',' → logprob: -14.950943946838379
    8. '=
' → logprob: -15.200943946838379
    9. ' ' → logprob: -15.700943946838379
    10. '```' → logprob: -15.825943946838379

Token 281: ' computing' (ID: 34349)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.14689500629901886
    2. 'i' → logprob: -2.146894931793213
    3. 'p' → logprob: -4.396894931793213
    4. ' pow' → logprob: -5.646894931793213
    5. ' i' → logprob: -6.896894931793213
    6. '1' → logprob: -7.146894931793213
    7. 'inverse' → logprob: -7.521894931793213
    8. ' p' → logprob: -7.646894931793213
    9. ' ' → logprob: -8.771895408630371
    10. '   ' → logprob: -8.771895408630371

Token 282: ' inverse' (ID: 53743)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.08692503720521927
    2. 'i' → logprob: -3.4619250297546387
    3. 'p' → logprob: -4.086925029754639
    4. 'inverse' → logprob: -4.461925029754639
    5. ' pow' → logprob: -5.211925029754639
    6. ' modular' → logprob: -5.461925029754639
    7. 'the' → logprob: -5.586925029754639
    8. ' the' → logprob: -5.711925029754639
    9. 'mod' → logprob: -5.961925029754639
    10. ' i' → logprob: -6.836925029754639

Token 283: ' powers' (ID: 27742)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.168723002076149
    2. 'pow' → logprob: -2.4187231063842773
    3. ' p' → logprob: -3.0437231063842773
    4. '   ' → logprob: -4.793723106384277
    5. ' =' → logprob: -5.918723106384277
    6. 'i' → logprob: -6.168723106384277
    7. ' pow' → logprob: -6.418723106384277
    8. '=' → logprob: -7.043723106384277
    9. 'inverse' → logprob: -7.293723106384277
    10. ' for' → logprob: -8.168723106384277

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04474680498242378
    2. '    
' → logprob: -3.9197468757629395
    3. '
' → logprob: -4.2947468757629395
    4. 'p' → logprob: -4.9197468757629395
    5. ' p' → logprob: -6.1697468757629395
    6. '\n' → logprob: -7.2947468757629395
    7. '  
' → logprob: -9.794746398925781
    8. '   
' → logprob: -9.919746398925781
    9. ' 
' → logprob: -10.919746398925781
    10. '```' → logprob: -11.419746398925781

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1076502650976181
    2. '    
' → logprob: -2.7326502799987793
    3. '
' → logprob: -3.9826502799987793
    4. 'p' → logprob: -4.107650279998779
    5. '\n' → logprob: -7.232650279998779
    6. ' p' → logprob: -7.607650279998779
    7. '  
' → logprob: -8.357649803161621
    8. '   
' → logprob: -8.732649803161621
    9. '```' → logprob: -9.107649803161621
    10. '    ' → logprob: -9.982649803161621

Token 286: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.04311440885066986
    2. ' p' → logprob: -3.293114423751831
    3. '   ' → logprob: -5.293114185333252
    4. '```' → logprob: -10.66811466217041
    5. '	p' → logprob: -12.41811466217041
    6. '
' → logprob: -12.54311466217041
    7. '    
' → logprob: -13.91811466217041
    8. '\n' → logprob: -14.16811466217041
    9. '``' → logprob: -14.79311466217041
    10. ' ' → logprob: -15.04311466217041

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. '   ' → logprob: -14.751928329467773
    4. ' ' → logprob: -17.751928329467773
    5. '=
' → logprob: -17.751928329467773
    6. ',' → logprob: -17.876928329467773
    7. '=}' → logprob: -17.876928329467773
    8. '=

' → logprob: -18.376928329467773
    9. '  ' → logprob: -18.501928329467773
    10. '＝' → logprob: -18.501928329467773

Token 288: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011117222311440855
    2. ' ' → logprob: -9.12511157989502
    3. 'pow' → logprob: -13.12511157989502
    4. '   ' → logprob: -16.750110626220703
    5. '0' → logprob: -17.750110626220703
    6. ' pow' → logprob: -17.875110626220703
    7. '```' → logprob: -18.437610626220703
    8. '۱' → logprob: -18.875110626220703
    9. '=' → logprob: -18.937610626220703
    10. '...' → logprob: -19.000110626220703

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. 'pow' → logprob: -11.62501049041748
    3. ' ' → logprob: -13.37501049041748
    4. 'p' → logprob: -17.250011444091797
    5. 'i' → logprob: -17.500011444091797
    6. '   ' → logprob: -17.562511444091797
    7. 'mod' → logprob: -17.812511444091797
    8. '0' → logprob: -17.875011444091797
    9. '```' → logprob: -18.062511444091797
    10. '(pow' → logprob: -18.437511444091797

Token 290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1084514856338501
    2. '<|end|>' → logprob: -2.3584513664245605
    3. ' for' → logprob: -5.7334513664245605
    4. '    
' → logprob: -5.8584513664245605
    5. 'for' → logprob: -6.7334513664245605
    6. '
' → logprob: -7.6084513664245605
    7. '<|end|>' → logprob: -8.108451843261719
    8. '	for' → logprob: -9.858451843261719
    9. '    ' → logprob: -10.983451843261719
    10. ')' → logprob: -11.108451843261719

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015767687931656837
    2. ' for' → logprob: -4.765767574310303
    3. 'for' → logprob: -5.015767574310303
    4. '<|end|>' → logprob: -7.890767574310303
    5. '    
' → logprob: -9.515768051147461
    6. '	for' → logprob: -10.640768051147461
    7. '```' → logprob: -11.765768051147461
    8. '
' → logprob: -11.890768051147461
    9. '<|end|>' → logprob: -12.140768051147461
    10. '       ' → logprob: -14.265768051147461

Token 292: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10048528760671616
    2. '   ' → logprob: -2.350485324859619
    3. ' for' → logprob: -8.225484848022461
    4. '```' → logprob: -11.600484848022461
    5. '	for' → logprob: -13.600484848022461
    6. '<|end|>' → logprob: -15.725484848022461
    7. '    
' → logprob: -16.10048484802246
    8. 'For' → logprob: -16.85048484802246
    9. '#' (adapté à ' #') → logprob: -17.47548484802246
    10. '
' → logprob: -17.85048484802246

Token 293: ' Pre' (ID: 4659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.1318875446449965e-05
    2. ' for' → logprob: -10.125041007995605
    3. '   ' → logprob: -13.875041007995605
    4. '```' → logprob: -15.625041007995605
    5. 'For' → logprob: -17.000041961669922
    6. '	for' → logprob: -17.250041961669922
    7. 'from' → logprob: -18.000041961669922
    8. '#' → logprob: -18.375041961669922
    9. '
' → logprob: -18.375041961669922
    10. '``' → logprob: -19.625041961669922

Token 294: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.005962691269814968
    2. 'for' → logprob: -5.13096284866333
    3. ' for' → logprob: -11.755962371826172
    4. ' compute' → logprob: -11.880962371826172
    5. 'computed' → logprob: -12.005962371826172
    6. 'com' → logprob: -12.630962371826172
    7. 'range' → logprob: -13.255962371826172
    8. 'pre' → logprob: -13.505962371826172
    9. 'comput' → logprob: -13.755962371826172
    10. '   ' → logprob: -13.880962371826172

Token 295: ' pow' (ID: 9779)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006787723861634731
    2. ' for' → logprob: -5.0067877769470215
    3. 'pow' → logprob: -9.631787300109863
    4. '   ' → logprob: -13.881787300109863
    5. '
' → logprob: -13.881787300109863
    6. '<|end|>' → logprob: -13.881787300109863
    7. 'For' → logprob: -14.006787300109863
    8. '```' → logprob: -14.256787300109863
    9. '(pow' → logprob: -14.631787300109863
    10. 'range' → logprob: -14.881787300109863

Token 296: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. 'pow' → logprob: -15.125
    3. '[' → logprob: -16.375
    4. '```' → logprob: -17.375
    5. ' ' → logprob: -17.625
    6. '   ' → logprob: -19.5
    7. '³' → logprob: -20.0
    8. 'i' → logprob: -20.125
    9. '(pow' → logprob: -20.125
    10. ' pow' → logprob: -20.25

Token 297: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.249780638725497e-05
    2. '[' → logprob: -11.000032424926758
    3. '[i' → logprob: -11.125032424926758
    4. ' i' → logprob: -14.875032424926758
    5. '```' → logprob: -15.375032424926758
    6. '	i' → logprob: -16.125032424926758
    7. '\[' → logprob: -16.937532424926758
    8. 'p' → logprob: -17.062532424926758
    9. '   ' → logprob: -17.187532424926758
    10. '
' → logprob: -17.250032424926758

Token 298: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2496921569108963
    2. 'for' → logprob: -1.7496922016143799
    3. ' for' → logprob: -3.24969220161438
    4. '   ' → logprob: -5.249691963195801
    5. '[i' → logprob: -6.374691963195801
    6. '	for' → logprob: -7.999691963195801
    7. ' =' → logprob: -7.999691963195801
    8. '
' → logprob: -8.4996919631958
    9. '=' → logprob: -8.7496919631958
    10. '    
' → logprob: -9.4996919631958

Token 299: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6158722639083862
    2. ' =' → logprob: -0.9908722639083862
    3. ']' → logprob: -2.490872383117676
    4. ']=' → logprob: -5.865872383117676
    5. '   ' → logprob: -6.865872383117676
    6. 'for' → logprob: -7.240872383117676
    7. ')' → logprob: -7.365872383117676
    8. ' for' → logprob: -8.865872383117676
    9. '[' → logprob: -9.615872383117676
    10. 'def' → logprob: -9.865872383117676

Token 300: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05750560015439987
    2. 'for' → logprob: -3.6825056076049805
    3. ' =' → logprob: -3.8075056076049805
    4. ' for' → logprob: -4.8075056076049805
    5. '   ' → logprob: -8.18250560760498
    6. '	for' → logprob: -11.05750560760498
    7. '=
' → logprob: -11.55750560760498
    8. 'in' → logprob: -11.80750560760498
    9. ' ' → logprob: -11.93250560760498
    10. '*=' → logprob: -12.18250560760498

Token 301: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20441196858882904
    2. ' p' → logprob: -1.8294119834899902
    3. 'pow' → logprob: -4.07941198348999
    4. 'i' → logprob: -5.57941198348999
    5. ' i' → logprob: -6.82941198348999
    6. ' pow' → logprob: -6.82941198348999
    7. '(p' → logprob: -7.32941198348999
    8. ' (' → logprob: -7.82941198348999
    9. '(pow' → logprob: -8.954411506652832
    10. '(i' → logprob: -9.079411506652832

Token 302: '3' (ID: 18)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15862514078617096
    2. 'i' → logprob: -2.2836251258850098
    3. 'pow' → logprob: -3.2836251258850098
    4. ' p' → logprob: -5.53362512588501
    5. ' i' → logprob: -6.65862512588501
    6. '(p' → logprob: -7.40862512588501
    7. ' pow' → logprob: -7.90862512588501
    8. '(i' → logprob: -7.90862512588501
    9. '(pow' → logprob: -8.158625602722168
    10. ' (' → logprob: -8.908625602722168

Token 303: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.9305240511894226
    2. '^{-' → logprob: -1.4305241107940674
    3. '**' → logprob: -1.5555241107940674
    4. 'i' → logprob: -3.3055241107940674
    5. '*i' → logprob: -3.3055241107940674
    6. ')' → logprob: -3.5555241107940674
    7. '-i' → logprob: -4.680523872375488
    8. '^-' → logprob: -4.805523872375488
    9. '_inverse' → logprob: -5.305523872375488
    10. '_inv' → logprob: -5.430523872375488

Token 304: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6226441860198975
    2. '-i' → logprob: -1.1226441860198975
    3. '-' → logprob: -2.2476441860198975
    4. '(-' → logprob: -3.4976441860198975
    5. ' -' → logprob: -7.122644424438477
    6. '(' → logprob: -7.622644424438477
    7. '-mod' → logprob: -8.247644424438477
    8. '(i' → logprob: -9.247644424438477
    9. '{-' → logprob: -9.747644424438477
    10. ' ' → logprob: -9.872644424438477

Token 305: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3069344162940979
    2. ' *' → logprob: -1.4319343566894531
    3. '*' → logprob: -4.431934356689453
    4. ' )' → logprob: -5.056934356689453
    5. 'i' → logprob: -6.306934356689453
    6. 'p' → logprob: -6.931934356689453
    7. 'inv' → logprob: -7.056934356689453
    8. ' ' → logprob: -7.181934356689453
    9. ' p' → logprob: -7.681934356689453
    10. '   ' → logprob: -8.056934356689453

Token 306: '-' (ID: 12)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6198740601539612
    2. '-' → logprob: -1.6198740005493164
    3. '(mod' → logprob: -1.7448740005493164
    4. ' mod' → logprob: -3.4948740005493164
    5. '(-' → logprob: -3.7448740005493164
    6. '(' → logprob: -3.9948740005493164
    7. '%' → logprob: -5.119874000549316
    8. ' (' → logprob: -5.744874000549316
    9. '```' → logprob: -5.994874000549316
    10. ' -' → logprob: -6.494874000549316

Token 307: '1' (ID: 16)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9886491894721985
    2. ' mod' → logprob: -1.1136491298675537
    3. '%' → logprob: -1.7386491298675537
    4. ' %' → logprob: -2.2386491298675537
    5. ' modulo' → logprob: -5.488649368286133
    6. '```' → logprob: -5.613649368286133
    7. '1' → logprob: -5.738649368286133
    8. '%i' → logprob: -6.113649368286133
    9. 'i' → logprob: -6.738649368286133
    10. ' ' → logprob: -6.988649368286133

Token 308: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01845964603126049
    2. '%' → logprob: -4.018459796905518
    3. '   ' → logprob: -8.26845932006836
    4. ' ' → logprob: -10.14345932006836
    5. '%i' → logprob: -12.76845932006836
    6. ' ' → logprob: -13.39345932006836
    7. ' %=' → logprob: -13.39345932006836
    8. '    ' → logprob: -13.64345932006836
    9. ' *' → logprob: -13.89345932006836
    10. '  ' → logprob: -14.01845932006836

Token 309: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.22550243139266968
    2. 'mod' → logprob: -1.6005024909973145
    3. '   ' → logprob: -9.725502014160156
    4. ' ' → logprob: -10.975502014160156
    5. '	mod' → logprob: -12.225502014160156
    6. '  ' → logprob: -12.975502014160156
    7. '```' → logprob: -13.475502014160156
    8. '(mod' → logprob: -13.600502014160156
    9. ' ' → logprob: -13.975502014160156
    10. '`' → logprob: -14.225502014160156

Token 310: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19970014691352844
    2. ' for' → logprob: -2.199700117111206
    3. 'for' → logprob: -2.699700117111206
    4. '
' → logprob: -6.074700355529785
    5. '    
' → logprob: -7.949700355529785
    6. '	for' → logprob: -8.824700355529785
    7. '\n' → logprob: -9.449700355529785
    8. '<|end|>' → logprob: -10.449700355529785
    9. '  ' → logprob: -11.449700355529785
    10. ' ' → logprob: -11.574700355529785

Token 311: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20224756002426147
    2. ' i' → logprob: -1.7022476196289062
    3. ' range' → logprob: -7.327247619628906
    4. 'range' → logprob: -8.827247619628906
    5. '1' → logprob: -11.327247619628906
    6. ' ' → logprob: -11.452247619628906
    7. '   ' → logprob: -12.327247619628906
    8. '	i' → logprob: -14.702247619628906
    9. '  ' → logprob: -14.952247619628906
    10. '```' → logprob: -15.452247619628906

Token 312: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015092372894287
    2. 'in' → logprob: -1.7015092372894287
    3. '   ' → logprob: -9.951509475708008
    4. 'range' → logprob: -10.701509475708008
    5. ' range' → logprob: -11.576509475708008
    6. 'from' → logprob: -12.326509475708008
    7. ' ' → logprob: -12.576509475708008
    8. ',' → logprob: -12.701509475708008
    9. '	in' → logprob: -13.076509475708008
    10. 'for' → logprob: -14.451509475708008

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001980570232262835
    2. '0' → logprob: -9.125198364257812
    3. ' ' → logprob: -9.375198364257812
    4. 'range' → logprob: -13.250198364257812
    5. '(' → logprob: -13.375198364257812
    6. '   ' → logprob: -15.562698364257812
    7. ' range' → logprob: -15.875198364257812
    8. '```' → logprob: -16.125198364257812
    9. '
' → logprob: -16.437698364257812
    10. 'from' → logprob: -16.812698364257812

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003595376620069146
    2. '0' → logprob: -8.250359535217285
    3. 'range' → logprob: -9.625359535217285
    4. ' ' → logprob: -11.250359535217285
    5. '(' → logprob: -11.625359535217285
    6. '200' → logprob: -13.000359535217285
    7. '
' → logprob: -13.000359535217285
    8. '   ' → logprob: -13.437859535217285
    9. ' range' → logprob: -13.687859535217285
    10. '```' → logprob: -14.875359535217285

Token 315: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.056983012706041336
    2. ',' → logprob: -3.05698299407959
    3. ' to' → logprob: -4.80698299407959
    4. '1' → logprob: -8.80698299407959
    5. '   ' → logprob: -11.68198299407959
    6. 'To' → logprob: -12.30698299407959
    7. '100' → logprob: -12.68198299407959
    8. 'import' → logprob: -12.68198299407959
    9. '2' → logprob: -12.80698299407959
    10. '```' → logprob: -12.93198299407959

Token 316: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -6.76628842484206e-05
    2. ' ' → logprob: -9.750067710876465
    3. '400' → logprob: -12.500067710876465
    4. '   ' → logprob: -12.875067710876465
    5. '1' → logprob: -13.750067710876465
    6. '  ' → logprob: -14.875067710876465
    7. '199' → logprob: -15.250067710876465
    8. '100' → logprob: -15.312567710876465
    9. '
' → logprob: -16.12506675720215
    10. 'len' → logprob: -16.18756675720215

Token 317: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -3.650518920039758e-06
    2. '400' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.750003814697266
    4. '199' → logprob: -15.875003814697266
    5. '100' → logprob: -16.000003814697266
    6. '2' → logprob: -16.000003814697266
    7. '20' → logprob: -16.312503814697266
    8. '1' → logprob: -16.437503814697266
    9. '```' → logprob: -16.437503814697266
    10. '   ' → logprob: -16.437503814697266

Token 318: ',' (ID: 11)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.029917098581790924
    2. '000' → logprob: -3.529917001724243
    3. ',' → logprob: -9.029916763305664
    4. '002' → logprob: -10.154916763305664
    5. '```' → logprob: -12.779916763305664
    6. '1' → logprob: -13.654916763305664
    7. '   ' → logprob: -13.779916763305664
    8. ' ' → logprob: -14.154916763305664
    9. '_' → logprob: -14.404916763305664
    10. '003' → logprob: -15.529916763305664

Token 319: '000' (ID: 1302)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.24439696967601776
    2. '000' → logprob: -1.6193969249725342
    3. '200' → logprob: -4.744397163391113
    4. '1' → logprob: -5.119397163391113
    5. '201' → logprob: -5.744397163391113
    6. ' ' → logprob: -8.119397163391113
    7. '   ' → logprob: -8.494397163391113
    8. '```' → logprob: -8.869397163391113
    9. '6' → logprob: -9.244397163391113
    10. '0' → logprob: -9.869397163391113

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003820741316303611
    2. 'for' → logprob: -5.753820896148682
    3. ' for' → logprob: -7.378820896148682
    4. '```' → logprob: -11.503820419311523
    5. '<|end|>' → logprob: -12.628820419311523
    6. '
' → logprob: -13.128820419311523
    7. '	for' → logprob: -13.378820419311523
    8. '    
' → logprob: -14.003820419311523
    9. ',' → logprob: -14.878820419311523
    10. '       ' → logprob: -16.378820419311523

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016409041127189994
    2. 'for' → logprob: -6.501640796661377
    3. ' for' → logprob: -9.126641273498535
    4. '```' → logprob: -10.501641273498535
    5. '
' → logprob: -13.376641273498535
    6. '	for' → logprob: -15.251641273498535
    7. '<|end|>' → logprob: -15.251641273498535
    8. '    
' → logprob: -15.501641273498535
    9. '       ' → logprob: -17.12664031982422
    10. ',' → logprob: -17.75164031982422

Token 322: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011765359668061137
    2. ' for' → logprob: -6.751176357269287
    3. '   ' → logprob: -12.001176834106445
    4. '	for' → logprob: -16.001176834106445
    5. '```' → logprob: -19.501176834106445
    6. '    
' → logprob: -20.376176834106445
    7. '
' → logprob: -20.626176834106445
    8. ' ' → logprob: -21.001176834106445
    9. 'For' → logprob: -21.876176834106445
    10. ' 
' → logprob: -22.126176834106445

Token 323: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048588622361421585
    2. ' i' → logprob: -3.048588514328003
    3. '_i' → logprob: -14.048588752746582
    4. '_' → logprob: -15.298588752746582
    5. ' ' → logprob: -16.673587799072266
    6. '	i' → logprob: -16.798587799072266
    7. 'range' → logprob: -16.923587799072266
    8. '   ' → logprob: -17.173587799072266
    9. 'j' → logprob: -17.173587799072266
    10. '1' → logprob: -17.673587799072266

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01417032815515995
    2. 'in' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.13917064666748
    4. '1' → logprob: -14.38917064666748
    5. '(' → logprob: -15.88917064666748
    6. 'import' → logprob: -16.139169692993164
    7. '   ' → logprob: -16.139169692993164
    8. '=' → logprob: -16.514169692993164
    9. '    ' → logprob: -16.764169692993164
    10. 'In' → logprob: -16.889169692993164

Token 325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000432695698691532
    2. ' range' → logprob: -7.75043249130249
    3. '(range' → logprob: -13.500432968139648
    4. '1' → logprob: -14.625432968139648
    5. '(' → logprob: -16.12543296813965
    6. 'in' → logprob: -17.62543296813965
    7. '	range' → logprob: -17.75043296813965
    8. ' ' → logprob: -18.25043296813965
    9. '[' → logprob: -18.50043296813965
    10. '   ' → logprob: -19.87543296813965

Token 326: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -13.875001907348633
    3. 'range' → logprob: -14.250001907348633
    4. '(range' → logprob: -16.500001907348633
    5. 'in' → logprob: -17.125001907348633
    6. ' (' → logprob: -17.250001907348633
    7. ' range' → logprob: -17.875001907348633
    8. '(
' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.625001907348633
    10. ' ' → logprob: -19.875001907348633

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.29340603761375e-05
    2. ' ' → logprob: -9.375092506408691
    3. '   ' → logprob: -12.500092506408691
    4. '(' → logprob: -13.500092506408691
    5. 'range' → logprob: -13.750092506408691
    6. '200' → logprob: -14.000092506408691
    7. '0' → logprob: -15.750092506408691
    8. '
' → logprob: -15.750092506408691
    9. '2' → logprob: -16.125093460083008
    10. '  ' → logprob: -16.687593460083008

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001182052365038544
    2. '(' → logprob: -9.625118255615234
    3. '200' → logprob: -10.125118255615234
    4. ' ,' → logprob: -11.875118255615234
    5. '   ' → logprob: -13.000118255615234
    6. 'in' → logprob: -14.125118255615234
    7. 'to' → logprob: -14.500118255615234
    8. '1' → logprob: -14.625118255615234
    9. '2' → logprob: -15.000118255615234
    10. ' ' → logprob: -15.750118255615234

Token 329: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.37501335144043
    4. '  ' → logprob: -18.00001335144043
    5. '    ' → logprob: -19.25001335144043
    6. '2' → logprob: -19.87501335144043
    7. '２００' → logprob: -20.00001335144043
    8. 'len' → logprob: -20.12501335144043
    9. '```' → logprob: -21.00001335144043
    10. '201' → logprob: -21.37501335144043

Token 330: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'len' → logprob: -16.125
    4. '2' → logprob: -17.25
    5. '   ' → logprob: -17.5
    6. '  ' → logprob: -19.375
    7. '２００' → logprob: -19.625
    8. '100' → logprob: -20.125
    9. '```' → logprob: -20.25
    10. '000' → logprob: -20.5

Token 331: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -1.1398757123970427e-05
    2. '000' → logprob: -11.625011444091797
    3. '002' → logprob: -13.250011444091797
    4. '201' → logprob: -14.875011444091797
    5. ',' → logprob: -15.625011444091797
    6. '_' → logprob: -16.625011444091797
    7. '{' → logprob: -17.625011444091797
    8. '```' → logprob: -18.000011444091797
    9. '1' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.500011444091797

Token 332: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006024076137691736
    2. '):' → logprob: -5.13102388381958
    3. '   ' → logprob: -10.631024360656738
    4. ' ):
' → logprob: -10.631024360656738
    5. ':' → logprob: -11.381024360656738
    6. '():
' → logprob: -11.381024360656738
    7. '):
' → logprob: -11.506024360656738
    8. ':
' → logprob: -11.631024360656738
    9. ')' → logprob: -12.881024360656738
    10. '):

' → logprob: -13.756024360656738

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006084367632865906
    2. '   ' → logprob: -7.625608444213867
    3. 'pow' → logprob: -10.125608444213867
    4. ' pow' → logprob: -10.375608444213867
    5. '(pow' → logprob: -11.000608444213867
    6. '	   ' → logprob: -11.375608444213867
    7. '	p' → logprob: -11.750608444213867
    8. '```' → logprob: -12.375608444213867
    9. '    ' → logprob: -13.375608444213867
    10. '[' → logprob: -13.375608444213867

Token 334: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.08047845214605331
    2. ' pow' → logprob: -2.5804784297943115
    3. '   ' → logprob: -6.705478668212891
    4. '       ' → logprob: -8.08047866821289
    5. 'p' → logprob: -10.20547866821289
    6. ' p' → logprob: -11.70547866821289
    7. '    ' → logprob: -12.45547866821289
    8. '(pow' → logprob: -13.58047866821289
    9. '           ' → logprob: -14.20547866821289
    10. '	p' → logprob: -14.20547866821289

Token 335: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. 'pow' → logprob: -16.375
    3. '³' → logprob: -19.625
    4. '```' → logprob: -20.625
    5. '[' → logprob: -21.0625
    6. '(pow' → logprob: -21.5625
    7. '۳' → logprob: -21.75
    8. '٣' → logprob: -21.75
    9. '_' → logprob: -22.3125
    10. '[i' → logprob: -22.3125

Token 336: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.096126576769166e-05
    2. '[i' → logprob: -10.125041007995605
    3. '[' → logprob: -14.125041007995605
    4. '```' → logprob: -17.00004005432129
    5. '_i' → logprob: -18.37504005432129
    6. 'p' → logprob: -18.37504005432129
    7. 'a' → logprob: -18.62504005432129
    8. '	i' → logprob: -18.75004005432129
    9. 'и' → logprob: -19.12504005432129
    10. 'I' → logprob: -19.25004005432129

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.250009536743164
    4. '```' → logprob: -15.375009536743164
    5. '\[' → logprob: -15.625009536743164
    6. '=' → logprob: -16.500009536743164
    7. ' [' → logprob: -16.875009536743164
    8. '[I' → logprob: -18.125009536743164
    9. '.append' → logprob: -18.500009536743164
    10. 'i' → logprob: -18.750009536743164

Token 338: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15039853751659393
    2. ']' → logprob: -2.1503984928131104
    3. ' =' → logprob: -3.7753984928131104
    4. ']=' → logprob: -8.275398254394531
    5. ')' → logprob: -11.650398254394531
    6. '   ' → logprob: -12.900398254394531
    7. ' ]' → logprob: -14.275398254394531
    8. '[' → logprob: -14.275398254394531
    9. '=p' → logprob: -14.275398254394531
    10. ',' → logprob: -15.150398254394531

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00029625516617670655
    2. ' =' → logprob: -8.125296592712402
    3. '.=' → logprob: -16.875295639038086
    4. '=p' → logprob: -17.375295639038086
    5. '   ' → logprob: -17.625295639038086
    6. '*=' → logprob: -17.750295639038086
    7. ']=' → logprob: -18.375295639038086
    8. '＝' → logprob: -18.375295639038086
    9. ',' → logprob: -18.500295639038086
    10. ')' → logprob: -19.000295639038086

Token 340: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007499480270780623
    2. ' p' → logprob: -7.2507500648498535
    3. '(p' → logprob: -10.250749588012695
    4. '   ' → logprob: -13.375749588012695
    5. 'q' → logprob: -13.625749588012695
    6. ' (' → logprob: -14.375749588012695
    7. '(' → logprob: -15.000749588012695
    8. 'pow' → logprob: -15.125749588012695
    9. ' ' → logprob: -15.500749588012695
    10. '_p' → logprob: -16.000749588012695

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18948233127593994
    2. '=' → logprob: -1.93948233127594
    3. ' *' → logprob: -3.5644822120666504
    4. '*' → logprob: -7.56448221206665
    5. ' ' → logprob: -13.564482688903809
    6. '*p' → logprob: -14.064482688903809
    7. 'p' → logprob: -14.439482688903809
    8. '   ' → logprob: -14.939482688903809
    9. ' *=' → logprob: -15.189482688903809
    10. '*=' → logprob: -15.564482688903809

Token 342: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006160693243145943
    2. ' p' → logprob: -5.131160736083984
    3. '(p' → logprob: -8.381160736083984
    4. ' (' → logprob: -13.506160736083984
    5. 'pow' → logprob: -14.256160736083984
    6. '   ' → logprob: -15.006160736083984
    7. '(' → logprob: -15.131160736083984
    8. '_p' → logprob: -16.006160736083984
    9. '	p' → logprob: -16.131160736083984
    10. ' ' → logprob: -18.131160736083984

Token 343: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4740966260433197
    2. '*' → logprob: -0.9740966558456421
    3. '*i' → logprob: -10.974096298217773
    4. ' ' → logprob: -13.599096298217773
    5. '*p' → logprob: -14.599096298217773
    6. '   ' → logprob: -14.849096298217773
    7. 'i' → logprob: -15.474096298217773
    8. 'pow' → logprob: -16.474096298217773
    9. 'p' → logprob: -16.724096298217773
    10. '```' → logprob: -17.099096298217773

Token 344: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017958412354346365
    2. ' i' → logprob: -8.625179290771484
    3. ' ' → logprob: -18.250179290771484
    4. '   ' → logprob: -18.500179290771484
    5. '	i' → logprob: -19.250179290771484
    6. '(i' → logprob: -19.875179290771484
    7. '3' → logprob: -19.875179290771484
    8. '%i' → logprob: -20.000179290771484
    9. '```' → logprob: -20.250179290771484
    10. '  ' → logprob: -20.250179290771484

Token 345: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.36283233761787415
    2. ' ' → logprob: -1.8628323078155518
    3. ' i' → logprob: -2.3628323078155518
    4. 'i' → logprob: -2.9878323078155518
    5. 'pow' → logprob: -6.362832546234131
    6. '   ' → logprob: -6.862832546234131
    7. ' pow' → logprob: -7.237832546234131
    8. ' *' → logprob: -7.987832546234131
    9. '```' → logprob: -8.612832069396973
    10. '*i' → logprob: -8.737832069396973

Token 346: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31349122524261475
    2. '%' → logprob: -1.3134912252426147
    3. '   ' → logprob: -8.813490867614746
    4. ' 
' → logprob: -10.813490867614746
    5. '%
' → logprob: -11.063490867614746
    6. ' %
' → logprob: -11.188490867614746
    7. ' ' → logprob: -11.938490867614746
    8. '    
' → logprob: -12.188490867614746
    9. '
' → logprob: -12.563490867614746
    10. '<|end|>' → logprob: -12.688490867614746

Token 347: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00020354038861114532
    2. ' mod' → logprob: -8.500203132629395
    3. '3' → logprob: -20.12520408630371
    4. '(mod' → logprob: -20.37520408630371
    5. ' ' → logprob: -20.50020408630371
    6. '```' → logprob: -20.75020408630371
    7. '	mod' → logprob: -21.12520408630371
    8. '   ' → logprob: -21.37520408630371
    9. '`' → logprob: -22.62520408630371
    10. '  ' → logprob: -23.62520408630371

Token 348: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011767695657908916
    2. '<|end|>' → logprob: -5.011767864227295
    3. '#' → logprob: -6.511767864227295
    4. 'a' → logprob: -6.886767864227295
    5. 'def' → logprob: -7.011767864227295
    6. '
' → logprob: -7.511767864227295
    7. '```' → logprob: -7.761767864227295
    8. '    
' → logprob: -8.136767387390137
    9. 'x' → logprob: -9.761767387390137
    10. 'for' → logprob: -10.136767387390137

Token 351: ' rolling' (ID: 30530)
  Prédit: ' Rolling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rolling' → logprob: -0.05612335726618767
    2. 'Rolling' → logprob: -2.9311232566833496
    3. ' Hash' → logprob: -8.306123733520508
    4. 'Hasher' → logprob: -8.431123733520508
    5. ' rolling' → logprob: -8.681123733520508
    6. ' RH' → logprob: -9.181123733520508
    7. ' Polynomial' → logprob: -9.306123733520508
    8. ' Node' → logprob: -9.806123733520508
    9. 'Hash' → logprob: -10.556123733520508
    10. 'R' → logprob: -10.556123733520508

Token 352: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.006157012190669775
    2. 'hash' → logprob: -5.131156921386719
    3. 'Hash' → logprob: -9.131156921386719
    4. ' hash' → logprob: -9.131156921386719
    5. '_' → logprob: -12.256156921386719
    6. '_h' → logprob: -12.756156921386719
    7. '(hash' → logprob: -13.631156921386719
    8. '_HASH' → logprob: -14.006156921386719
    9. '__' → logprob: -14.256156921386719
    10. '_H' → logprob: -14.881156921386719

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015943869948387146
    2. ':
' → logprob: -9.25015926361084
    3. '():' → logprob: -10.37515926361084
    4. '(object' → logprob: -11.00015926361084
    5. '(' → logprob: -11.87515926361084
    6. '{' → logprob: -12.75015926361084
    7. '):' → logprob: -13.12515926361084
    8. '>:' → logprob: -13.87515926361084
    9. ' :' → logprob: -14.87515926361084
    10. ':**' → logprob: -14.87515926361084

Token 354: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015098140574991703
    2. ':
' → logprob: -4.2650980949401855
    3. '(object' → logprob: -7.6400980949401855
    4. '   ' → logprob: -8.640098571777344
    5. '(' → logprob: -9.015098571777344
    6. '```' → logprob: -9.890098571777344
    7. '():' → logprob: -10.140098571777344
    8. '<|end|>' → logprob: -10.890098571777344
    9. '       ' → logprob: -11.640098571777344
    10. ':def' → logprob: -11.765098571777344

Token 355: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7664391994476318
    2. ' def' → logprob: -1.0164391994476318
    3. '   ' → logprob: -1.7664391994476318
    4. '       ' → logprob: -7.016439437866211
    5. '	def' → logprob: -7.391439437866211
    6. ':' → logprob: -8.391439437866211
    7. ' (' → logprob: -8.391439437866211
    8. '    
' → logprob: -9.016439437866211
    9. ':def' → logprob: -9.391439437866211
    10. '    ' → logprob: -9.391439437866211

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3533981740474701
    2. ' def' → logprob: -1.9783982038497925
    3. 'def' → logprob: -2.978398084640503
    4. '   ' → logprob: -3.728398084640503
    5. '        
' → logprob: -4.103398323059082
    6. '    ' → logprob: -4.478398323059082
    7. 'class' → logprob: -4.728398323059082
    8. '        ' → logprob: -4.978398323059082
    9. ' ' → logprob: -5.228398323059082
    10. '(
' → logprob: -5.353398323059082

Token 357: ' Rolling' (ID: 72538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12939128279685974
    2. ' def' → logprob: -2.1293911933898926
    3. '   ' → logprob: -6.504391193389893
    4. '       ' → logprob: -7.504391193389893
    5. 'class' → logprob: -8.00439167022705
    6. '    ' → logprob: -10.62939167022705
    7. ' ' → logprob: -11.00439167022705
    8. '__' → logprob: -11.62939167022705
    9. '#' → logprob: -12.62939167022705
    10. ' class' → logprob: -12.62939167022705

Token 358: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -1.3782830137643032e-05
    2. ' _' → logprob: -12.00001335144043
    3. '_' → logprob: -12.12501335144043
    4. 'Hash' → logprob: -13.25001335144043
    5. 'hash' → logprob: -15.00001335144043
    6. ' hash' → logprob: -17.12501335144043
    7. '_HASH' → logprob: -18.25001335144043
    8. '_h' → logprob: -18.37501335144043
    9. '_
' → logprob: -18.62501335144043
    10. '   ' → logprob: -18.75001335144043

Token 359: ' class' (ID: 744)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44684186577796936
    2. ':
' → logprob: -1.571841835975647
    3. ' class' → logprob: -3.0718419551849365
    4. ' implementation' → logprob: -3.0718419551849365
    5. '():
' → logprob: -3.9468419551849365
    6. '(object' → logprob: -4.446841716766357
    7. '<|end|>' → logprob: -5.196841716766357
    8. 'class' → logprob: -5.446841716766357
    9. ' object' → logprob: -5.571841716766357
    10. '():' → logprob: -5.696841716766357

Token 360: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46113479137420654
    2. ':
' → logprob: -1.8361347913742065
    3. '       ' → logprob: -2.586134910583496
    4. '<|end|>' → logprob: -2.586134910583496
    5. '   ' → logprob: -3.586134910583496
    6. ' for' → logprob: -4.961134910583496
    7. '<|end|>' → logprob: -5.086134910583496
    8. ' with' → logprob: -5.711134910583496
    9. '{' → logprob: -6.336134910583496
    10. '(' → logprob: -6.711134910583496

Token 361: ' efficiently' (ID: 34229)
  Prédit: ' calculating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculating' → logprob: -0.7737451791763306
    2. ' computing' → logprob: -1.2737451791763306
    3. 'string' → logprob: -2.398745059967041
    4. ' string' → logprob: -2.773745059967041
    5. 'calcul' → logprob: -3.523745059967041
    6. 'comput' → logprob: -3.773745059967041
    7. ' a' → logprob: -5.148745059967041
    8. ' strings' → logprob: -5.148745059967041
    9. ' hashing' → logprob: -5.148745059967041
    10. ' sequences' → logprob: -5.648745059967041

Token 362: ' computing' (ID: 34349)
  Prédit: ' computing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' computing' → logprob: -0.38857725262641907
    2. 'comput' → logprob: -1.3885772228240967
    3. 'calcul' → logprob: -3.1385772228240967
    4. ' calculating' → logprob: -3.6385772228240967
    5. ' hashing' → logprob: -6.638577461242676
    6. ' substring' → logprob: -7.763577461242676
    7. ' maintaining' → logprob: -8.513577461242676
    8. 'substring' → logprob: -8.763577461242676
    9. 'maint' → logprob: -8.763577461242676
    10. 'string' → logprob: -8.888577461242676

Token 363: ' hash' (ID: 10691)
  Prédit: ' substring'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.3171214461326599
    2. ' the' → logprob: -2.4421215057373047
    3. 'substring' → logprob: -2.9421215057373047
    4. ' hash' → logprob: -3.5671215057373047
    5. ' hashes' → logprob: -3.5671215057373047
    6. 'sub' → logprob: -4.317121505737305
    7. ' prefix' → logprob: -4.692121505737305
    8. ' and' → logprob: -4.692121505737305
    9. 'hash' → logprob: -4.942121505737305
    10. ' rolling' → logprob: -5.192121505737305

Token 364: ' values' (ID: 4824)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.25368496775627136
    2. ' values' → logprob: -1.5036849975585938
    3. 's' → logprob: -7.128684997558594
    4. 'values' → logprob: -8.378684997558594
    5. '_values' → logprob: -8.753684997558594
    6. '   ' → logprob: -8.878684997558594
    7. ' of' → logprob: -9.378684997558594
    8. 'ing' → logprob: -9.753684997558594
    9. ' updates' → logprob: -9.878684997558594
    10. ' sequences' → logprob: -9.878684997558594

Token 365: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.09096388518810272
    2. '   ' → logprob: -3.340963840484619
    3. ' for' → logprob: -3.840963840484619
    4. '       ' → logprob: -4.340963840484619
    5. '<|end|>' → logprob: -5.340963840484619
    6. ' with' → logprob: -5.840963840484619
    7. 's' → logprob: -6.090963840484619
    8. 'of' → logprob: -6.840963840484619
    9. ' on' → logprob: -6.965963840484619
    10. ' and' → logprob: -7.090963840484619

Token 366: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.3051609396934509
    2. ' sequences' → logprob: -1.8051609992980957
    3. ' substr' → logprob: -3.3051609992980957
    4. 'se' → logprob: -3.5551609992980957
    5. ' sub' → logprob: -4.680160999298096
    6. 'a' → logprob: -4.930160999298096
    7. ' subse' → logprob: -5.430160999298096
    8. 'substring' → logprob: -6.305160999298096
    9. 'arrays' → logprob: -6.305160999298096
    10. ' a' → logprob: -6.430160999298096

Token 367: 'arrays' (ID: 158630)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.1187359020113945
    2. 'arrays' → logprob: -2.4937357902526855
    3. 'se' → logprob: -3.9937357902526855
    4. 'string' → logprob: -4.6187357902526855
    5. '   ' → logprob: -7.8687357902526855
    6. 'array' → logprob: -8.993736267089844
    7. 'str' → logprob: -9.118736267089844
    8. 'tring' → logprob: -9.243736267089844
    9. 'segments' → logprob: -9.618736267089844
    10. 's' → logprob: -9.743736267089844

Token 368: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5340073108673096
    2. '   ' → logprob: -2.1590073108673096
    3. ':' → logprob: -2.2840073108673096
    4. '.' → logprob: -2.6590073108673096
    5. ':
' → logprob: -3.4090073108673096
    6. '
' → logprob: -3.7840073108673096
    7. ' and' → logprob: -4.2840070724487305
    8. ' of' → logprob: -4.5340070724487305
    9. ' in' → logprob: -4.9090070724487305
    10. ',' → logprob: -5.1590070724487305

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20234611630439758
    2. '<|end|>' → logprob: -2.702346086502075
    3. '        
' → logprob: -2.952346086502075
    4. '
' → logprob: -3.077346086502075
    5. '```' → logprob: -5.077346324920654
    6. '<|end|>' → logprob: -5.577346324920654
    7. '   ' → logprob: -5.702346324920654
    8. '    
' → logprob: -6.077346324920654
    9. '[' → logprob: -7.452346324920654
    10. ' 
' → logprob: -8.452345848083496

Token 370: ' Ass' (ID: 4744)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6259678602218628
    2. '
' → logprob: -0.8759678602218628
    3. '        
' → logprob: -3.7509679794311523
    4. '   ' → logprob: -4.750967979431152
    5. '    
' → logprob: -5.125967979431152
    6. ' 
' → logprob: -5.625967979431152
    7. 'def' → logprob: -5.750967979431152
    8. '```' → logprob: -6.125967979431152
    9. '  
' → logprob: -7.750967979431152
    10. '           ' → logprob: -8.250967979431152

Token 371: 'umes' (ID: 12948)
  Prédit: 'emb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emb' → logprob: -0.6035177707672119
    2. 'erts' → logprob: -1.103517770767212
    3. 'ert' → logprob: -2.853517770767212
    4. 'umes' → logprob: -3.603517770767212
    5. 'umed' → logprob: -4.728517532348633
    6. '   ' → logprob: -4.978517532348633
    7. 'uming' → logprob: -5.103517532348633
    8. 'ists' → logprob: -5.103517532348633
    9. 'em' → logprob: -5.728517532348633
    10. 'ures' → logprob: -7.103517532348633

Token 372: ' input' (ID: 3422)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.49083411693573
    2. 'self' → logprob: -1.49083411693573
    3. ' self' → logprob: -1.86583411693573
    4. ' that' → logprob: -2.3658342361450195
    5. ' sequences' → logprob: -2.3658342361450195
    6. 'a' → logprob: -2.9908342361450195
    7. ' arrays' → logprob: -3.3658342361450195
    8. 'the' → logprob: -3.4908342361450195
    9. ' a' → logprob: -3.6158342361450195
    10. '   ' → logprob: -4.2408342361450195

Token 373: ' is' (ID: 382)
  Prédit: ' arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arrays' → logprob: -0.7276546955108643
    2. ' array' → logprob: -1.9776546955108643
    3. ' lists' → logprob: -1.9776546955108643
    4. ' sequences' → logprob: -1.9776546955108643
    5. ' sequence' → logprob: -3.6026546955108643
    6. ' list' → logprob: -4.352654457092285
    7. ' data' → logprob: -4.977654457092285
    8. ' =' → logprob: -5.102654457092285
    9. '):
' → logprob: -5.102654457092285
    10. '_list' → logprob: -5.102654457092285

Token 374: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3800538182258606
    2. 'a' → logprob: -1.8800537586212158
    3. ' given' → logprob: -3.005053758621216
    4. ' an' → logprob: -3.255053758621216
    5. ' iterable' → logprob: -4.130053997039795
    6. ' list' → logprob: -4.630053997039795
    7. '   ' → logprob: -5.005053997039795
    8. ' integers' → logprob: -5.130053997039795
    9. 'an' → logprob: -5.255053997039795
    10. '[' → logprob: -5.380053997039795

Token 375: ' sequence' (ID: 16281)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4761839509010315
    2. ' list' → logprob: -1.1011838912963867
    3. 'sequence' → logprob: -3.6011838912963867
    4. ' sequence' → logprob: -3.9761838912963867
    5. '   ' → logprob: -9.476183891296387
    6. 'def' → logprob: -10.476183891296387
    7. 'single' → logprob: -10.976183891296387
    8. 'List' → logprob: -10.976183891296387
    9. 'mutable' → logprob: -11.101183891296387
    10. 'se' → logprob: -11.101183891296387

Token 376: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10770218074321747
    2. '<|end|>' → logprob: -2.6077022552490234
    3. '   ' → logprob: -4.482702255249023
    4. '[' → logprob: -5.607702255249023
    5. '[int' → logprob: -5.732702255249023
    6. '):
' → logprob: -5.982702255249023
    7. 'of' → logprob: -6.482702255249023
    8. '<|end|>' → logprob: -6.732702255249023
    9. ')' → logprob: -6.857702255249023
    10. '       ' → logprob: -6.982702255249023

Token 377: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.2498401701450348
    2. 'ints' → logprob: -1.9998401403427124
    3. 'int' → logprob: -3.124840259552002
    4. ' integers' → logprob: -3.624840259552002
    5. 'numbers' → logprob: -4.249840259552002
    6. 'integer' → logprob: -7.999840259552002
    7. 'values' → logprob: -8.124839782714844
    8. ' numbers' → logprob: -9.624839782714844
    9. 'nums' → logprob: -10.749839782714844
    10. 'elements' → logprob: -11.124839782714844

Token 378: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6827134490013123
    2. '.' → logprob: -1.057713508605957
    3. '   ' → logprob: -2.932713508605957
    4. ',' → logprob: -3.057713508605957
    5. '<|end|>' → logprob: -4.307713508605957
    6. ' with' → logprob: -5.182713508605957
    7. ' that' → logprob: -5.182713508605957
    8. ' and' → logprob: -5.307713508605957
    9. ' (' → logprob: -5.682713508605957
    10. ':' → logprob: -6.557713508605957

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052139800041913986
    2. '
' → logprob: -3.5521397590637207
    3. '   ' → logprob: -4.677139759063721
    4. '        
' → logprob: -4.802139759063721
    5. '    
' → logprob: -6.302139759063721
    6. '```' → logprob: -6.427139759063721
    7. '<|end|>' → logprob: -7.302139759063721
    8. ' 
' → logprob: -9.302140235900879
    9. 'def' → logprob: -9.427140235900879
    10. 'newline' → logprob: -9.802140235900879

Token 380: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09746424108743668
    2. '       ' → logprob: -2.5974643230438232
    3. '   ' → logprob: -4.722464084625244
    4. '    
' → logprob: -5.347464084625244
    5. '        
' → logprob: -5.472464084625244
    6. ' 
' → logprob: -8.847464561462402
    7. '```' → logprob: -9.097464561462402
    8. 'def' → logprob: -9.722464561462402
    9. '"""
' → logprob: -10.472464561462402
    10. '
' → logprob: -10.472464561462402

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076085166074335575
    2. '
' → logprob: -5.882608413696289
    3. '   ' → logprob: -5.882608413696289
    4. '        
' → logprob: -7.132608413696289
    5. 'def' → logprob: -7.882608413696289
    6. ' def' → logprob: -8.132608413696289
    7. '```' → logprob: -8.507608413696289
    8. '    
' → logprob: -8.757608413696289
    9. '           ' → logprob: -9.882608413696289
    10. '    ' → logprob: -9.882608413696289

Token 382: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12741424143314362
    2. ' def' → logprob: -2.1274142265319824
    3. '   ' → logprob: -7.877414226531982
    4. '__' → logprob: -9.25241470336914
    5. ' __' → logprob: -11.50241470336914
    6. '	def' → logprob: -15.12741470336914
    7. 'import' → logprob: -15.50241470336914
    8. 'indent' → logprob: -16.00241470336914
    9. ' ' → logprob: -16.12741470336914
    10. '    ' → logprob: -16.25241470336914

Token 383: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05063110217452049
    2. ' __' → logprob: -3.050631046295166
    3. 'init' → logprob: -6.300631046295166
    4. '_init' → logprob: -8.550631523132324
    5. ' init' → logprob: -11.300631523132324
    6. '___' → logprob: -14.800631523132324
    7. ' ' → logprob: -16.425630569458008
    8. ' ' → logprob: -16.675630569458008
    9. '**' → logprob: -16.800630569458008
    10. '   ' → logprob: -17.175630569458008

Token 384: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.125
    3. 'inite' → logprob: -19.375
    4. 'ini' → logprob: -19.625
    5. 'int' → logprob: -19.75
    6. '_init' → logprob: -19.875
    7. 'innit' → logprob: -20.5
    8. 'in' → logprob: -21.0
    9. 'inti' → logprob: -21.25
    10. 'next' → logprob: -21.25

Token 385: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07893892377614975
    2. '__(' → logprob: -2.5789389610290527
    3. '(' → logprob: -10.328938484191895
    4. ' (' → logprob: -12.203938484191895
    5. '__' → logprob: -12.703938484191895
    6. '(this' → logprob: -12.953938484191895
    7. 'self' → logprob: -13.203938484191895
    8. '__(
' → logprob: -13.453938484191895
    9. '_(' → logprob: -13.703938484191895
    10. ')(' → logprob: -14.703938484191895

Token 386: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.8087270038668066e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -15.375027656555176
    4. '       ' → logprob: -16.125028610229492
    5. 's' → logprob: -16.625028610229492
    6. '
' → logprob: -17.500028610229492
    7. '   ' → logprob: -18.500028610229492
    8. '	self' → logprob: -18.750028610229492
    9. ',self' → logprob: -18.750028610229492
    10. '0' → logprob: -18.875028610229492

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09809514880180359
    2. '(self' → logprob: -2.473095178604126
    3. '__(' → logprob: -5.473094940185547
    4. 'self' → logprob: -5.598094940185547
    5. '(' → logprob: -7.723094940185547
    6. ' ,' → logprob: -8.598094940185547
    7. ')(' → logprob: -8.723094940185547
    8. ' (' → logprob: -8.848094940185547
    9. ',self' → logprob: -8.848094940185547
    10. '__,' → logprob: -9.723094940185547

Token 388: ' seq' (ID: 26775)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.743497371673584
    2. 'arr' → logprob: -1.618497371673584
    3. 's' → logprob: -1.993497371673584
    4. 'self' → logprob: -2.118497371673584
    5. 'data' → logprob: -4.243497371673584
    6. 'lst' → logprob: -4.368497371673584
    7. 'seq' → logprob: -4.743497371673584
    8. ' a' → logprob: -5.118497371673584
    9. ' s' → logprob: -5.243497371673584
    10. 'v' → logprob: -5.368497371673584

Token 389: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16191689670085907
    2. '):' → logprob: -1.9119168519973755
    3. ',' → logprob: -6.911916732788086
    4. '       ' → logprob: -7.536916732788086
    5. '):
' → logprob: -9.161916732788086
    6. ':' → logprob: -10.786916732788086
    7. '   ' → logprob: -11.286916732788086
    8. ' ):
' → logprob: -12.161916732788086
    9. ' ):' → logprob: -12.286916732788086
    10. 'self' → logprob: -12.786916732788086

Token 390: ' char' (ID: 1826)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.11106246709823608
    2. ' mod' → logprob: -2.361062526702881
    3. ' base' → logprob: -5.611062526702881
    4. 'base' → logprob: -5.611062526702881
    5. 'n' → logprob: -7.111062526702881
    6. '       ' → logprob: -7.611062526702881
    7. 'length' → logprob: -7.736062526702881
    8. ' n' → logprob: -7.861062526702881
    9. '   ' → logprob: -8.611062049865723
    10. ')' → logprob: -8.736062049865723

Token 391: '_list' (ID: 4162)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.3871809244155884
    2. '):
' → logprob: -1.3871809244155884
    3. 's' → logprob: -1.5121809244155884
    4. '=None' → logprob: -1.7621809244155884
    5. '=' → logprob: -3.387180805206299
    6. '_cnt' → logprob: -4.512180805206299
    7. '):' → logprob: -4.637180805206299
    8. '   ' → logprob: -5.262180805206299
    9. 'hash' → logprob: -5.387180805206299
    10. '_set' → logprob: -5.887180805206299

Token 392: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.05241890996694565
    2. '):
' → logprob: -3.4274189472198486
    3. '=[]' → logprob: -4.1774187088012695
    4. '=False' → logprob: -6.5524187088012695
    5. '=' → logprob: -7.0524187088012695
    6. '=True' → logprob: -7.8024187088012695
    7. '):' → logprob: -7.9274187088012695
    8. 'None' → logprob: -9.67741870880127
    9. ' =' → logprob: -10.17741870880127
    10. '   ' → logprob: -10.80241870880127

Token 393: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4743063747882843
    2. '):' → logprob: -0.9743063449859619
    3. '       ' → logprob: -8.849306106567383
    4. '):
' → logprob: -9.724306106567383
    5. ',' → logprob: -11.599306106567383
    6. ')' → logprob: -11.974306106567383
    7. '   ' → logprob: -12.349306106567383
    8. '):

' → logprob: -12.724306106567383
    9. '=None' → logprob: -13.974306106567383
    10. '           ' → logprob: -14.849306106567383

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023573411628603935
    2. '       ' → logprob: -3.773573398590088
    3. 'self' → logprob: -9.148573875427246
    4. '               ' → logprob: -9.648573875427246
    5. '	       ' → logprob: -9.648573875427246
    6. '[' → logprob: -10.648573875427246
    7. '```' → logprob: -11.148573875427246
    8. ' self' → logprob: -11.648573875427246
    9. '<|end|>' → logprob: -12.023573875427246
    10. ',' → logprob: -12.148573875427246

Token 395: ' """
' (ID: 7037)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5293210744857788
    2. ' self' → logprob: -1.0293210744857788
    3. '           ' → logprob: -3.1543211936950684
    4. 'n' → logprob: -5.279321193695068
    5. ' n' → logprob: -5.279321193695068
    6. '       ' → logprob: -7.404321193695068
    7. '   ' → logprob: -9.77932071685791
    8. 's' → logprob: -10.15432071685791
    9. 'hash' → logprob: -10.27932071685791
    10. '               ' → logprob: -10.52932071685791

Token 396: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4647672772407532
    2. '           ' → logprob: -1.4647672176361084
    3. ' self' → logprob: -1.9647672176361084
    4. '       ' → logprob: -8.089767456054688
    5. '   ' → logprob: -9.964767456054688
    6. '               ' → logprob: -10.964767456054688
    7. ' ' → logprob: -11.214767456054688
    8. '         ' → logprob: -13.089767456054688
    9. '```' → logprob: -13.089767456054688
    10. '
' → logprob: -13.589767456054688

Token 397: ' Initializes' (ID: 73569)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.450888454914093
    2. ' self' → logprob: -1.0758883953094482
    3. '           ' → logprob: -4.325888633728027
    4. '       ' → logprob: -4.825888633728027
    5. ' if' → logprob: -8.825888633728027
    6. 'n' → logprob: -9.575888633728027
    7. '   ' → logprob: -9.575888633728027
    8. 'if' → logprob: -9.950888633728027
    9. ' n' → logprob: -10.075888633728027
    10. ' super' → logprob: -10.450888633728027

Token 398: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47622689604759216
    2. 'self' → logprob: -0.9762269258499146
    3. ' the' → logprob: -6.601226806640625
    4. '(self' → logprob: -7.226226806640625
    5. '       ' → logprob: -10.351226806640625
    6. 'the' → logprob: -11.101226806640625
    7. '           ' → logprob: -11.726226806640625
    8. '	self' → logprob: -12.851226806640625
    9. '[self' → logprob: -14.101226806640625
    10. '   ' → logprob: -14.601226806640625

Token 399: ' rolling' (ID: 30530)
  Prédit: ' hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hash' → logprob: -0.5113821625709534
    2. 'hash' → logprob: -1.0113821029663086
    3. 'seq' → logprob: -4.761382102966309
    4. ' seq' → logprob: -5.136382102966309
    5. ' sequence' → logprob: -5.386382102966309
    6. ' rolling' → logprob: -5.511382102966309
    7. 'self' → logprob: -5.636382102966309
    8. ' base' → logprob: -6.386382102966309
    9. '_hash' → logprob: -6.386382102966309
    10. 'sequence' → logprob: -6.386382102966309

Token 400: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.0017992928624153137
    2. ' hash' → logprob: -7.2517991065979
    3. ' _' → logprob: -7.7517991065979
    4. '_' → logprob: -7.8767991065979
    5. 'hash' → logprob: -8.376799583435059
    6. '       ' → logprob: -10.251799583435059
    7. '_h' → logprob: -12.251799583435059
    8. '   ' → logprob: -12.501799583435059
    9. ' ' → logprob: -13.501799583435059
    10. '           ' → logprob: -14.501799583435059

Token 401: ' structure' (ID: 8866)
  Prédit: ' object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' object' → logprob: -0.497062623500824
    2. ' with' → logprob: -1.3720626831054688
    3. ' class' → logprob: -3.7470626831054688
    4. ' array' → logprob: -3.7470626831054688
    5. '       ' → logprob: -3.8720626831054688
    6. 'object' → logprob: -4.122062683105469
    7. ' for' → logprob: -4.372062683105469
    8. '   ' → logprob: -4.747062683105469
    9. 'class' → logprob: -4.872062683105469
    10. 'array' → logprob: -5.122062683105469

Token 402: ' for' (ID: 395)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.5295804738998413
    2. ' for' → logprob: -1.1545804738998413
    3. '           ' → logprob: -3.529580593109131
    4. '(self' → logprob: -3.529580593109131
    5. ',' → logprob: -4.029580593109131
    6. '       ' → logprob: -5.029580593109131
    7. ' self' → logprob: -5.654580593109131
    8. ':' → logprob: -6.279580593109131
    9. ' by' → logprob: -6.279580593109131
    10. 'self' → logprob: -6.279580593109131

Token 403: ' a' (ID: 261)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.07077820599079132
    2. 'seq' → logprob: -2.8207781314849854
    3. ' self' → logprob: -5.4457783699035645
    4. 'self' → logprob: -5.5707783699035645
    5. ' the' → logprob: -7.4457783699035645
    6. 'the' → logprob: -10.195777893066406
    7. ' sequence' → logprob: -11.695777893066406
    8. ')' → logprob: -12.570777893066406
    9. '(seq' → logprob: -12.570777893066406
    10. 'sequence' → logprob: -12.820777893066406

Token 404: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.6158363223075867
    2. ' sequence' → logprob: -1.4908363819122314
    3. 'sequence' → logprob: -1.7408363819122314
    4. ' list' → logprob: -3.1158363819122314
    5. 'given' → logprob: -4.490836143493652
    6. 'list' → logprob: -6.240836143493652
    7. 'seq' → logprob: -7.115836143493652
    8. 'sub' → logprob: -8.240836143493652
    9. ' seq' → logprob: -8.865836143493652
    10. '   ' → logprob: -9.490836143493652

Token 405: ' integer' (ID: 16336)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.28558555245399475
    2. ' sequence' → logprob: -1.4105855226516724
    3. 'seq' → logprob: -5.535585403442383
    4. ' list' → logprob: -8.285585403442383
    5. ' seq' → logprob: -9.035585403442383
    6. 'list' → logprob: -9.410585403442383
    7. 'token' → logprob: -11.535585403442383
    8. 'array' → logprob: -12.160585403442383
    9. ' array' → logprob: -12.660585403442383
    10. '   ' → logprob: -13.660585403442383

Token 406: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.11345679312944412
    2. 'sequence' → logprob: -2.3634567260742188
    3. ' array' → logprob: -5.113456726074219
    4. ' list' → logprob: -5.363456726074219
    5. 'array' → logprob: -6.363456726074219
    6. 'seq' → logprob: -8.363456726074219
    7. 'list' → logprob: -8.488456726074219
    8. '       ' → logprob: -8.738456726074219
    9. '   ' → logprob: -10.113456726074219
    10. '[]' → logprob: -10.488456726074219

Token 407: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8195632696151733
    2. '.' → logprob: -2.194563388824463
    3. '.
' → logprob: -2.194563388824463
    4. ':
' → logprob: -2.319563388824463
    5. '):
' → logprob: -2.319563388824463
    6. '           ' → logprob: -2.444563388824463
    7. ':' → logprob: -4.069563388824463
    8. ',' → logprob: -4.569563388824463
    9. '
' → logprob: -5.444563388824463
    10. ' and' → logprob: -5.569563388824463

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012599836103618145
    2. '       ' → logprob: -4.387599945068359
    3. 'self' → logprob: -9.76259994506836
    4. '   ' → logprob: -11.38759994506836
    5. '
' → logprob: -12.01259994506836
    6. '               ' → logprob: -12.38759994506836
    7. ' self' → logprob: -12.38759994506836
    8. '        
' → logprob: -13.38759994506836
    9. '         ' → logprob: -13.76259994506836
    10. '	       ' → logprob: -13.88759994506836

Token 409: ' Args' (ID: 39185)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16254359483718872
    2. 'self' → logprob: -2.287543535232544
    3. ' self' → logprob: -3.162543535232544
    4. '       ' → logprob: -5.912543773651123
    5. ' super' → logprob: -6.912543773651123
    6. '
' → logprob: -7.162543773651123
    7. '               ' → logprob: -7.537543773651123
    8. 'super' → logprob: -7.787543773651123
    9. 'def' → logprob: -8.037543296813965
    10. '```' → logprob: -9.412543296813965

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4900085926055908
    2. ',' → logprob: -1.4900085926055908
    3. '):
' → logprob: -2.365008592605591
    4. '):' → logprob: -3.740008592605591
    5. '<|end|>' → logprob: -3.740008592605591
    6. '=None' → logprob: -5.365008354187012
    7. '=' → logprob: -5.740008354187012
    8. '       ' → logprob: -5.990008354187012
    9. ' (' → logprob: -6.115008354187012
    10. '<|end|>' → logprob: -6.615008354187012

Token 411: '               ' (ID: 506)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2497454583644867
    2. 'self' → logprob: -1.749745488166809
    3. '               ' → logprob: -3.3747453689575195
    4. ' seq' → logprob: -4.9997453689575195
    5. '           ' → logprob: -6.3747453689575195
    6. 'seq' → logprob: -6.3747453689575195
    7. ' sequence' → logprob: -7.2497453689575195
    8. '            ' → logprob: -7.3747453689575195
    9. '```' → logprob: -8.62474536895752
    10. ' ' → logprob: -8.74974536895752

Token 412: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.4624718725681305
    2. 'seq' (adapté à ' seq') → logprob: -1.087471842765808
    3. 'self' → logprob: -3.8374719619750977
    4. ' self' → logprob: -4.462471961975098
    5. '           ' → logprob: -10.087471961975098
    6. '               ' → logprob: -10.337471961975098
    7. ' sequence' → logprob: -10.587471961975098
    8. 'sequence' → logprob: -12.212471961975098
    9. '_seq' → logprob: -12.712471961975098
    10. ' sequ' → logprob: -12.837471961975098

Token 413: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16909421980381012
    2. ':' → logprob: -2.0440943241119385
    3. '):' → logprob: -3.7940943241119385
    4. '=None' → logprob: -7.294094085693359
    5. ':
' → logprob: -7.419094085693359
    6. ',' → logprob: -7.794094085693359
    7. ' :' → logprob: -7.919094085693359
    8. '           ' → logprob: -8.16909408569336
    9. '<|end|>' → logprob: -8.16909408569336
    10. '=[]' → logprob: -8.41909408569336

Token 414: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01455397717654705
    2. 'List' → logprob: -4.264554023742676
    3. ' list' → logprob: -8.514554023742676
    4. ')' → logprob: -9.014554023742676
    5. '[list' → logprob: -10.639554023742676
    6. '):' → logprob: -11.264554023742676
    7. '):
' → logprob: -11.514554023742676
    8. 'Sequence' → logprob: -12.139554023742676
    9. '[List' → logprob: -12.264554023742676
    10. 'sequence' → logprob: -12.639554023742676

Token 415: ' of' (ID: 328)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1080009862780571
    2. '):' → logprob: -2.8580009937286377
    3. '[int' → logprob: -3.1080009937286377
    4. '(int' → logprob: -9.233000755310059
    5. '   ' → logprob: -9.733000755310059
    6. '):
' → logprob: -9.983000755310059
    7. '<int' → logprob: -10.108000755310059
    8. '):

' → logprob: -11.358000755310059
    9. '[' → logprob: -11.358000755310059
    10. '       ' → logprob: -11.858000755310059

Token 416: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3425219549390022e-05
    2. ' int' → logprob: -11.37501335144043
    3. '[int' → logprob: -13.37501335144043
    4. '   ' → logprob: -15.75001335144043
    5. ')' → logprob: -16.62501335144043
    6. 'ints' → logprob: -17.00001335144043
    7. '	int' → logprob: -17.75001335144043
    8. ':int' → logprob: -17.87501335144043
    9. '(int' → logprob: -18.25001335144043
    10. '<int' → logprob: -18.37501335144043

Token 417: '):' (ID: 3127)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.8350687026977539
    2. '):
' → logprob: -0.9600687026977539
    3. '):' → logprob: -2.585068702697754
    4. ' integers' → logprob: -2.835068702697754
    5. ']):
' → logprob: -3.835068702697754
    6. ')' → logprob: -4.710068702697754
    7. ']):' → logprob: -5.085068702697754
    8. '<int' → logprob: -5.335068702697754
    9. '   ' → logprob: -6.710068702697754
    10. '       ' → logprob: -6.835068702697754

Token 418: ' The' (ID: 623)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -1.121584177017212
    2. ')' → logprob: -1.371584177017212
    3. ' The' → logprob: -1.621584177017212
    4. ' list' → logprob: -1.871584177017212
    5. '[int' → logprob: -4.246583938598633
    6. '):
' → logprob: -4.371583938598633
    7. '               ' → logprob: -4.621583938598633
    8. 'list' → logprob: -5.121583938598633
    9. ' sequences' → logprob: -5.996583938598633
    10. '<|end|>' → logprob: -5.996583938598633

Token 419: ' input' (ID: 3422)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.30743101239204407
    2. ' integers' → logprob: -2.1824309825897217
    3. 'sequence' → logprob: -2.1824309825897217
    4. ' seq' → logprob: -4.057431221008301
    5. 'seq' → logprob: -4.682431221008301
    6. 'inte' → logprob: -5.307431221008301
    7. ' values' → logprob: -6.432431221008301
    8. 'int' → logprob: -7.057431221008301
    9. ' list' → logprob: -7.307431221008301
    10. ' int' → logprob: -7.682431221008301

Token 420: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.49190759658813477
    2. ' integers' → logprob: -1.7419075965881348
    3. '):
' → logprob: -2.6169075965881348
    4. '):' → logprob: -3.2419075965881348
    5. ' ):
' → logprob: -3.8669075965881348
    6. ' tokens' → logprob: -4.241907596588135
    7. ')' → logprob: -4.491907596588135
    8. '       ' → logprob: -4.616907596588135
    9. '   ' → logprob: -4.741907596588135
    10. ' ):' → logprob: -4.741907596588135

Token 421: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9600435495376587
    2. '):
' → logprob: -1.5850435495376587
    3. '           ' → logprob: -1.5850435495376587
    4. '):' → logprob: -2.335043430328369
    5. '       ' → logprob: -2.835043430328369
    6. '<|end|>' → logprob: -3.960043430328369
    7. ' of' → logprob: -4.585043430328369
    8. '<|end|>' → logprob: -5.335043430328369
    9. '   ' → logprob: -5.585043430328369
    10. '               ' → logprob: -5.710043430328369

Token 422: ' preprocess' (ID: 122926)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.058681003749370575
    2. ' hash' → logprob: -2.933681011199951
    3. ' be' → logprob: -5.808681011199951
    4. 'be' → logprob: -7.308681011199951
    5. '   ' → logprob: -9.683680534362793
    6. 'compute' → logprob: -11.183680534362793
    7. 'initialize' → logprob: -11.558680534362793
    8. '_hash' → logprob: -11.808680534362793
    9. ' process' → logprob: -12.183680534362793
    10. '       ' → logprob: -12.433680534362793

Token 423: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3298932909965515
    2. ')' → logprob: -2.4548933506011963
    3. ' for' → logprob: -2.4548933506011963
    4. '):
' → logprob: -2.8298933506011963
    5. '<|end|>' → logprob: -3.9548933506011963
    6. '       ' → logprob: -4.204893112182617
    7. '):' → logprob: -4.954893112182617
    8. '.' → logprob: -5.579893112182617
    9. '<|end|>' → logprob: -7.079893112182617
    10. 'for' → logprob: -7.329893112182617

Token 424: ' hashing' (ID: 185245)
  Prédit: 'rolling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rolling' → logprob: -1.1045459508895874
    2. ' hashing' → logprob: -1.1045459508895874
    3. 'hash' → logprob: -1.4795459508895874
    4. ' rolling' → logprob: -2.354546070098877
    5. ' hash' → logprob: -4.229546070098877
    6. ' computing' → logprob: -12.104545593261719
    7. '   ' → logprob: -12.104545593261719
    8. 'roll' → logprob: -12.229545593261719
    9. '       ' → logprob: -12.229545593261719
    10. ' the' → logprob: -12.854545593261719

Token 425: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48966795206069946
    2. '):
' → logprob: -1.6146678924560547
    3. '           ' → logprob: -1.7396678924560547
    4. '):' → logprob: -5.364667892456055
    5. ')
' → logprob: -5.489667892456055
    6. '       ' → logprob: -6.614667892456055
    7. '.' → logprob: -7.239667892456055
    8. ').' → logprob: -7.364667892456055
    9. '               ' → logprob: -8.239667892456055
    10. '<|end|>' → logprob: -8.239667892456055

Token 426: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7132644057273865
    2. ')' → logprob: -1.5882644653320312
    3. '):' → logprob: -2.2132644653320312
    4. '):
' → logprob: -2.3382644653320312
    5. '       ' → logprob: -3.2132644653320312
    6. '               ' → logprob: -3.2132644653320312
    7. '```' → logprob: -4.838264465332031
    8. '   ' → logprob: -6.088264465332031
    9. '<|end|>' → logprob: -6.088264465332031
    10. '[' → logprob: -6.463264465332031

Token 427: ' char' (ID: 1826)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.0019731521606445
    2. '           ' → logprob: -1.1269731521606445
    3. ')' → logprob: -1.6269731521606445
    4. '):' → logprob: -2.7519731521606445
    5. '       ' → logprob: -3.1269731521606445
    6. '   ' → logprob: -7.1269731521606445
    7. '"""' → logprob: -7.1269731521606445
    8. '               ' → logprob: -7.6269731521606445
    9. '```' → logprob: -7.6269731521606445
    10. '"""
' → logprob: -7.7519731521606445

Token 428: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.3168559670448303
    2. 's' → logprob: -1.3168559074401855
    3. ')_' → logprob: -6.5668559074401855
    4. ' _' → logprob: -7.4418559074401855
    5. ')' → logprob: -7.9418559074401855
    6. '_sequence' → logprob: -8.316856384277344
    7. '_seq' → logprob: -8.691856384277344
    8. '):
' → logprob: -8.691856384277344
    9. '_s' → logprob: -9.441856384277344
    10. '   ' → logprob: -9.441856384277344

Token 429: ':' (ID: 25)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.012567573226988316
    2. '=' → logprob: -4.387567520141602
    3. '):' → logprob: -10.762567520141602
    4. ':' → logprob: -11.137567520141602
    5. ')' → logprob: -11.512567520141602
    6. '):
' → logprob: -12.512567520141602
    7. '<|end|>' → logprob: -12.512567520141602
    8. '=[]' → logprob: -13.262567520141602
    9. ' =' → logprob: -13.637567520141602
    10. ' None' → logprob: -14.887567520141602

Token 430: ' Ign' (ID: 50047)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5759561657905579
    2. ' None' → logprob: -0.8259561657905579
    3. '=None' → logprob: -12.450956344604492
    4. '(None' → logprob: -12.450956344604492
    5. '   ' → logprob: -12.700956344604492
    6. '           ' → logprob: -13.950956344604492
    7. '[' → logprob: -13.950956344604492
    8. '               ' → logprob: -14.450956344604492
    9. '_None' → logprob: -14.450956344604492
    10. 'Optional' → logprob: -14.575956344604492

Token 431: 'ored' (ID: 4142)
  Prédit: 'ored'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ored' → logprob: -0.002125280210748315
    2. 'oring' → logprob: -6.877125263214111
    3. 'None' → logprob: -7.377125263214111
    4. 'ore' → logprob: -8.87712574005127
    5. 'ores' → logprob: -8.87712574005127
    6. '=None' → logprob: -9.62712574005127
    7. 'or' → logprob: -9.75212574005127
    8. '```' → logprob: -10.00212574005127
    9. 'orable' → logprob: -12.12712574005127
    10. '       ' → logprob: -12.87712574005127

Token 432: ',' (ID: 11)
  Prédit: '=None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.2502194941043854
    2. '):
' → logprob: -1.625219464302063
    3. '):' → logprob: -4.125219345092773
    4. ')' → logprob: -5.625219345092773
    5. ',' → logprob: -7.125219345092773
    6. ':' → logprob: -7.125219345092773
    7. '=' → logprob: -7.125219345092773
    8. '<|end|>' → logprob: -7.375219345092773
    9. ' =' → logprob: -8.000219345092773
    10. 'None' → logprob: -8.125219345092773

Token 433: ' for' (ID: 395)
  Prédit: ' default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' default' → logprob: -0.809928834438324
    2. ' None' → logprob: -1.0599288940429688
    3. 'None' → logprob: -2.4349288940429688
    4. ' unused' → logprob: -3.1849288940429688
    5. '=None' → logprob: -4.059928894042969
    6. 'default' → logprob: -4.309928894042969
    7. ' not' → logprob: -4.684928894042969
    8. ')' → logprob: -5.434928894042969
    9. 'unused' → logprob: -5.434928894042969
    10. ' ignored' → logprob: -5.559928894042969

Token 434: ' compatibility' (ID: 42024)
  Prédit: 'compat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compat' → logprob: -0.028922220692038536
    2. 'back' → logprob: -4.278922080993652
    3. ' compatibility' → logprob: -4.278922080993652
    4. 'None' → logprob: -7.778922080993652
    5. ' None' → logprob: -8.653922080993652
    6. ' backward' → logprob: -9.528922080993652
    7. 'signature' → logprob: -9.903922080993652
    8. 'future' → logprob: -11.028922080993652
    9. ' backwards' → logprob: -11.403922080993652
    10. 'interface' → logprob: -12.028922080993652

Token 435: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.991055428981781
    2. ')' → logprob: -1.3660554885864258
    3. '=None' → logprob: -1.3660554885864258
    4. ' with' → logprob: -2.491055488586426
    5. '=False' → logprob: -4.616055488586426
    6. 'with' → logprob: -4.991055488586426
    7. '.' → logprob: -5.116055488586426
    8. '):
' → logprob: -5.616055488586426
    9. '=True' → logprob: -6.116055488586426
    10. ' purposes' → logprob: -6.241055488586426

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7635523080825806
    2. '
' → logprob: -0.8885523080825806
    3. ')' → logprob: -3.638552188873291
    4. '<|end|>' → logprob: -3.638552188873291
    5. '            
' → logprob: -3.763552188873291
    6. '):
' → logprob: -4.013552188873291
    7. '        
' → logprob: -4.638552188873291
    8. ')
' → logprob: -5.513552188873291
    9. '       ' → logprob: -5.638552188873291
    10. '```' → logprob: -5.888552188873291

Token 437: ' """
' (ID: 7037)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038814328610897064
    2. '
' → logprob: -3.6638143062591553
    3. '       ' → logprob: -5.413814544677734
    4. ')' → logprob: -6.163814544677734
    5. '            
' → logprob: -6.163814544677734
    6. '<|end|>' → logprob: -6.163814544677734
    7. '):
' → logprob: -7.913814544677734
    8. '        
' → logprob: -7.913814544677734
    9. ')
' → logprob: -8.538814544677734
    10. '<|end|>' → logprob: -8.788814544677734

Token 438: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2900337278842926
    2. '
' → logprob: -1.5400336980819702
    3. '       ' → logprob: -3.4150338172912598
    4. '        
' → logprob: -6.29003381729126
    5. '    
' → logprob: -6.91503381729126
    6. '            
' → logprob: -7.16503381729126
    7. ' 
' → logprob: -8.040033340454102
    8. '<|end|>' → logprob: -8.665033340454102
    9. '  
' → logprob: -9.290033340454102
    10. '
' → logprob: -9.415033340454102

Token 439: ' seq' (ID: 26775)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02897861786186695
    2. 'n' → logprob: -3.7789785861968994
    3. '       ' → logprob: -6.1539788246154785
    4. '           ' → logprob: -6.1539788246154785
    5. ' self' → logprob: -6.6539788246154785
    6. 'mod' → logprob: -9.27897834777832
    7. ' n' → logprob: -9.90397834777832
    8. 's' → logprob: -11.65397834777832
    9. 'from' → logprob: -11.65397834777832
    10. 'length' → logprob: -12.90397834777832

Token 440: '_size' (ID: 5044)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7150689959526062
    2. ' =' → logprob: -0.7150689959526062
    3. '_len' → logprob: -4.215068817138672
    4. 'len' → logprob: -6.215068817138672
    5. '[' → logprob: -6.465068817138672
    6. '.append' → logprob: -7.965068817138672
    7. 'self' → logprob: -7.965068817138672
    8. '_length' → logprob: -8.215068817138672
    9. '=[]' → logprob: -8.215068817138672
    10. '=self' → logprob: -8.340068817138672

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49131232500076294
    2. '=' → logprob: -0.9913123250007629
    3. '=len' → logprob: -4.116312503814697
    4. '       ' → logprob: -7.366312503814697
    5. '   ' → logprob: -9.616312026977539
    6. '=self' → logprob: -10.491312026977539
    7. 'len' → logprob: -11.366312026977539
    8. '           ' → logprob: -11.491312026977539
    9. '=size' → logprob: -11.991312026977539
    10. ')' → logprob: -11.991312026977539

Token 442: ' self' (ID: 1051)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519318461418152
    2. ' len' → logprob: -1.50193190574646
    3. '(len' → logprob: -13.626932144165039
    4. '           ' → logprob: -13.876932144165039
    5. '[len' → logprob: -15.001932144165039
    6. '	len' → logprob: -15.751932144165039
    7. '   ' → logprob: -16.25193214416504
    8. '=len' → logprob: -17.37693214416504
    9. '       ' → logprob: -17.62693214416504
    10. '0' → logprob: -17.62693214416504

Token 443: '.seq' (ID: 97786)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2708548903465271
    2. ' =' → logprob: -3.395854949951172
    3. '.seq' → logprob: -3.645854949951172
    4. '.size' → logprob: -3.770854949951172
    5. 'seq' → logprob: -3.895854949951172
    6. ' len' → logprob: -3.895854949951172
    7. '       ' → logprob: -4.145854949951172
    8. '=len' → logprob: -4.270854949951172
    9. '           ' → logprob: -4.395854949951172
    10. 'size' → logprob: -4.645854949951172

Token 444: '_size' (ID: 5044)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.0639736652374268
    2. 'size' → logprob: -1.1889736652374268
    3. '_size' → logprob: -1.9389736652374268
    4. ' =' → logprob: -2.1889736652374268
    5. '.__' → logprob: -4.063973426818848
    6. '           ' → logprob: -4.063973426818848
    7. '=' → logprob: -4.438973426818848
    8. '   ' → logprob: -4.438973426818848
    9. 'len' → logprob: -5.063973426818848
    10. '.length' → logprob: -5.063973426818848

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2756615877151489
    2. '=' → logprob: -1.525661587715149
    3. '=len' → logprob: -3.7756614685058594
    4. '<|end|>' → logprob: -8.02566146850586
    5. 'len' → logprob: -10.02566146850586
    6. '   ' → logprob: -10.15066146850586
    7. '       ' → logprob: -10.40066146850586
    8. '[len' → logprob: -11.02566146850586
    9. '<|end|>' → logprob: -11.27566146850586
    10. '        ' → logprob: -11.77566146850586

Token 446: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2014150768518448
    2. ' len' → logprob: -1.7014150619506836
    3. '           ' → logprob: -13.576415061950684
    4. '(len' → logprob: -15.326415061950684
    5. '[len' → logprob: -16.076416015625
    6. '	len' → logprob: -16.576416015625
    7. '   ' → logprob: -17.076416015625
    8. '=len' → logprob: -17.576416015625
    9. '    ' → logprob: -17.951416015625
    10. '        ' → logprob: -18.326416015625

Token 447: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -1.5048530030981055e-06
    2. 'seq' → logprob: -13.875001907348633
    3. '(' → logprob: -14.750001907348633
    4. '(
' → logprob: -17.000001907348633
    5. '(sequence' → logprob: -18.750001907348633
    6. ' (' → logprob: -19.250001907348633
    7. '(se' → logprob: -21.000001907348633
    8. ' seq' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.750001907348633
    10. '((' → logprob: -22.750001907348633

Token 448: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08962967246770859
    2. ')
' → logprob: -2.464629650115967
    3. '       ' → logprob: -7.839629650115967
    4. '+' → logprob: -8.839630126953125
    5. '   ' → logprob: -10.214630126953125
    6. '           ' → logprob: -10.214630126953125
    7. ' +' → logprob: -10.589630126953125
    8. ' )' → logprob: -11.339630126953125
    9. '<|end|>' → logprob: -11.464630126953125
    10. '
' → logprob: -11.714630126953125

Token 449: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0058312686160206795
    2. '
' → logprob: -5.380831241607666
    3. '       ' → logprob: -6.880831241607666
    4. 'self' → logprob: -9.505831718444824
    5. '            
' → logprob: -10.130831718444824
    6. '   ' → logprob: -10.880831718444824
    7. '        
' → logprob: -11.130831718444824
    8. '    
' → logprob: -11.255831718444824
    9. ',' → logprob: -12.005831718444824
    10. '```' → logprob: -13.005831718444824

Token 450: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39310556650161743
    2. '           ' → logprob: -1.1431055068969727
    3. '       ' → logprob: -5.643105506896973
    4. 'self' → logprob: -6.643105506896973
    5. '+' → logprob: -7.518105506896973
    6. '```' → logprob: -8.643105506896973
    7. '            
' → logprob: -8.643105506896973
    8. '   ' → logprob: -8.893105506896973
    9. '
' → logprob: -9.768105506896973
    10. 'hash' → logprob: -9.893105506896973

Token 451: ' Length' (ID: 32926)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8213055729866028
    2. '           ' → logprob: -1.321305513381958
    3. 'self' → logprob: -1.446305513381958
    4. 'h' → logprob: -4.071305751800537
    5. ' h' → logprob: -4.446305751800537
    6. ' hash' → logprob: -4.821305751800537
    7. 'hash' → logprob: -5.196305751800537
    8. '       ' → logprob: -5.321305751800537
    9. ' s' → logprob: -6.071305751800537
    10. 's' → logprob: -6.321305751800537

Token 452: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6192313432693481
    2. '           ' → logprob: -1.4942313432693481
    3. '=' → logprob: -2.2442312240600586
    4. ' =' → logprob: -2.7442312240600586
    5. '(seq' → logprob: -2.9942312240600586
    6. ' of' → logprob: -4.744231224060059
    7. '   ' → logprob: -6.369231224060059
    8. '	       ' → logprob: -6.869231224060059
    9. '        ' → logprob: -6.994231224060059
    10. '
' → logprob: -7.494231224060059

Token 453: ' the' (ID: 290)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.6351402401924133
    2. ' seq' → logprob: -0.7601402401924133
    3. ' the' → logprob: -6.260140419006348
    4. 'the' → logprob: -8.135140419006348
    5. ' sequence' → logprob: -8.635140419006348
    6. 'sequence' → logprob: -9.260140419006348
    7. '   ' → logprob: -10.510140419006348
    8. '(seq' → logprob: -11.760140419006348
    9. ' ' → logprob: -12.135140419006348
    10. '       ' → logprob: -12.135140419006348

Token 454: ' input' (ID: 3422)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.7642584443092346
    2. 'sequence' → logprob: -0.7642584443092346
    3. ' sequence' → logprob: -2.88925838470459
    4. ' seq' → logprob: -4.38925838470459
    5. 'input' → logprob: -8.13925838470459
    6. ' input' → logprob: -8.76425838470459
    7. '   ' → logprob: -9.63925838470459
    8. ' ' → logprob: -11.01425838470459
    9. '```' → logprob: -11.13925838470459
    10. 's' → logprob: -11.63925838470459

Token 455: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.30728083848953247
    2. 'sequence' → logprob: -1.5572807788848877
    3. 'seq' → logprob: -3.1822807788848877
    4. ' seq' → logprob: -5.057281017303467
    5. '       ' → logprob: -6.182281017303467
    6. '
' → logprob: -6.432281017303467
    7. '   ' → logprob: -7.307281017303467
    8. ' array' → logprob: -7.557281017303467
    9. '_seq' → logprob: -8.307280540466309
    10. 'array' → logprob: -8.432280540466309

Token 456: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00409775460138917
    2. '
' → logprob: -5.879097938537598
    3. 'self' → logprob: -7.129097938537598
    4. '            
' → logprob: -8.754097938537598
    5. '       ' → logprob: -8.879097938537598
    6. ',' → logprob: -9.754097938537598
    7. '<|end|>' → logprob: -10.379097938537598
    8. ' self' → logprob: -10.504097938537598
    9. '```' → logprob: -11.254097938537598
    10. '        
' → logprob: -11.379097938537598

Token 457: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02468392811715603
    2. '
' → logprob: -3.899683952331543
    3. 'self' → logprob: -6.274683952331543
    4. '       ' → logprob: -7.274683952331543
    5. '            
' → logprob: -7.649683952331543
    6. ' self' → logprob: -8.399683952331543
    7. '        
' → logprob: -8.524683952331543
    8. '```' → logprob: -8.524683952331543
    9. 'hash' → logprob: -8.774683952331543
    10. '    
' → logprob: -9.274683952331543

Token 458: ' mod' (ID: 1812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4181463122367859
    2. 'self' → logprob: -1.1681463718414307
    3. ' self' → logprob: -3.5431463718414307
    4. '       ' → logprob: -6.543146133422852
    5. '   ' → logprob: -8.918146133422852
    6. 'from' → logprob: -9.668146133422852
    7. '
' → logprob: -10.293146133422852
    8. 'hash' → logprob: -10.543146133422852
    9. 'assert' → logprob: -11.043146133422852
    10. 's' → logprob: -11.043146133422852

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012663391418755054
    2. '=' → logprob: -4.3876633644104
    3. '       ' → logprob: -9.887663841247559
    4. '=self' → logprob: -10.262663841247559
    5. '   ' → logprob: -10.887663841247559
    6. '    ' → logprob: -11.262663841247559
    7. '        ' → logprob: -11.387663841247559
    8. ' ' → logprob: -11.887663841247559
    9. ',' → logprob: -12.137663841247559
    10. 'self' → logprob: -12.387663841247559

Token 460: ' self' (ID: 1051)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.38343125581741333
    2. '2' → logprob: -1.3834311962127686
    3. 'self' → logprob: -3.5084311962127686
    4. ' mod' → logprob: -4.758431434631348
    5. '       ' → logprob: -5.133431434631348
    6. '   ' → logprob: -5.133431434631348
    7. '           ' → logprob: -5.133431434631348
    8. ' ' → logprob: -5.258431434631348
    9. ' self' → logprob: -6.383431434631348
    10. 'pow' → logprob: -7.008431434631348

Token 461: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0007566197891719639
    2. '.' → logprob: -7.375756740570068
    3. ' .' → logprob: -9.50075626373291
    4. 'mod' → logprob: -10.12575626373291
    5. ' mod' → logprob: -11.25075626373291
    6. '.module' → logprob: -14.12575626373291
    7. '	mod' → logprob: -14.37575626373291
    8. '   ' → logprob: -14.87575626373291
    9. ' ' → logprob: -16.250757217407227
    10. '       ' → logprob: -16.250757217407227

Token 462: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42252036929130554
    2. '=' → logprob: -1.672520399093628
    3. '
' → logprob: -2.547520399093628
    4. '       ' → logprob: -2.672520399093628
    5. '   ' → logprob: -6.422520160675049
    6. 'self' → logprob: -6.547520160675049
    7. '=self' → logprob: -6.797520160675049
    8. '        
' → logprob: -6.922520160675049
    9. '<|end|>' → logprob: -6.922520160675049
    10. '           ' → logprob: -7.172520160675049

Token 463: ' ' (ID: 220)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.21036745607852936
    2. '2' → logprob: -1.7103674411773682
    3. ' mod' → logprob: -5.710367679595947
    4. '(' → logprob: -5.710367679595947
    5. ' ' → logprob: -6.460367679595947
    6. '10' → logprob: -8.335367202758789
    7. '   ' → logprob: -8.710367202758789
    8. ' (' → logprob: -9.585367202758789
    9. '(mod' → logprob: -9.710367202758789
    10. 'pow' → logprob: -10.085367202758789

Token 464: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08519969880580902
    2. '(' → logprob: -3.2101995944976807
    3. 'mod' → logprob: -3.2101995944976807
    4. '10' → logprob: -7.83519983291626
    5. 'pow' → logprob: -8.960199356079102
    6. '922' → logprob: -9.085199356079102
    7. '100' → logprob: -9.585199356079102
    8. ' ' → logprob: -10.585199356079102
    9. '1' → logprob: -10.710199356079102
    10. '(mod' → logprob: -10.835199356079102

Token 465: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6931511759757996
    2. ' **' → logprob: -0.6931511759757996
    3. '*' → logprob: -12.693151473999023
    4. '61' → logprob: -14.443151473999023
    5. ' *' → logprob: -15.568151473999023
    6. ' ' → logprob: -16.943151473999023
    7. '^' → logprob: -17.318151473999023
    8. '```' → logprob: -17.443151473999023
    9. '
' → logprob: -17.693151473999023
    10. ' ' → logprob: -18.068151473999023

Token 466: ' ' (ID: 220)
  Prédit: '61'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '63' → logprob: -16.0
    4. '64' → logprob: -16.25
    5. '```' → logprob: -17.25
    6. '   ' → logprob: -18.375
    7. '62' → logprob: -18.5
    8. '#' → logprob: -19.0
    9. '6' → logprob: -19.0
    10. '061' → logprob: -19.0

Token 467: '61' (ID: 8954)
  Prédit: '61'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '61' → logprob: -4.320199877838604e-07
    2. '63' → logprob: -15.75
    3. '64' → logprob: -16.625
    4. '```' → logprob: -17.0
    5. ' ' → logprob: -17.375
    6. '62' → logprob: -17.5
    7. '6' → logprob: -18.0
    8. '061' → logprob: -18.875
    9. '
' → logprob: -19.25
    10. '' → logprob: -19.5

Token 468: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016045277938246727
    2. ' -' → logprob: -4.141045093536377
    3. '           ' → logprob: -12.391045570373535
    4. '   ' → logprob: -13.016045570373535
    5. ' ' → logprob: -13.141045570373535
    6. '       ' → logprob: -13.266045570373535
    7. '```' → logprob: -15.766045570373535
    8. '1' → logprob: -16.26604461669922
    9. '         ' → logprob: -16.26604461669922
    10. '               ' → logprob: -16.39104461669922

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '7' → logprob: -14.750022888183594
    4. '
' → logprob: -15.250022888183594
    5. '```' → logprob: -15.875022888183594
    6. '   ' → logprob: -16.375022888183594
    7. '

' → logprob: -17.125022888183594
    8. '2' → logprob: -17.750022888183594
    9. '}' → logprob: -18.062522888183594
    10. '`' → logprob: -18.187522888183594

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.875001907348633
    3. '7' → logprob: -15.500001907348633
    4. '
' → logprob: -16.125001907348633
    5. '```' → logprob: -16.125001907348633
    6. '   ' → logprob: -18.312501907348633
    7. '127' → logprob: -18.625001907348633
    8. '`' → logprob: -18.812501907348633
    9. '{' → logprob: -19.062501907348633
    10. '

' → logprob: -19.125001907348633

Token 471: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5374452471733093
    2. '           ' → logprob: -0.9124452471733093
    3. '            
' → logprob: -4.412445068359375
    4. '    
' → logprob: -6.537445068359375
    5. '        
' → logprob: -8.537445068359375
    6. ' 
' → logprob: -8.912445068359375
    7. '  
' → logprob: -9.537445068359375
    8. '<|end|>' → logprob: -9.787445068359375
    9. '           
' → logprob: -10.537445068359375
    10. '       ' → logprob: -10.662445068359375

Token 472: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7014173269271851
    2. '
' → logprob: -0.8264173269271851
    3. '            
' → logprob: -2.8264174461364746
    4. '    
' → logprob: -5.201417446136475
    5. '        
' → logprob: -7.076417446136475
    6. ' 
' → logprob: -8.701416969299316
    7. ',
' → logprob: -9.076416969299316
    8. '           
' → logprob: -9.076416969299316
    9. '  
' → logprob: -9.326416969299316
    10. '

' → logprob: -9.701416969299316

Token 473: ' Use' (ID: 7649)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.079289510846138
    2. ' self' → logprob: -2.829289436340332
    3. 'self' → logprob: -4.329289436340332
    4. '       ' → logprob: -6.954289436340332
    5. '            ' → logprob: -8.204289436340332
    6. '   ' → logprob: -8.204289436340332
    7. '#' → logprob: -8.329289436340332
    8. '
' → logprob: -8.329289436340332
    9. '            
' → logprob: -8.329289436340332
    10. ' ' → logprob: -8.454289436340332

Token 474: ' same' (ID: 2684)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.034996043890714645
    2. '(' → logprob: -4.034996032714844
    3. '   ' → logprob: -4.909996032714844
    4. ' mod' → logprob: -5.909996032714844
    5. '(mod' → logprob: -6.284996032714844
    6. ' (' → logprob: -6.659996032714844
    7. '           ' → logprob: -7.409996032714844
    8. '       ' → logprob: -7.534996032714844
    9. '1' → logprob: -7.659996032714844
    10. '3' → logprob: -7.784996032714844

Token 475: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.35991427302360535
    2. ' mod' → logprob: -1.9849143028259277
    3. '   ' → logprob: -2.2349143028259277
    4. '<|end|>' → logprob: -3.9849143028259277
    5. '    
' → logprob: -4.234914302825928
    6. '
' → logprob: -4.484914302825928
    7. '       ' → logprob: -5.859914302825928
    8. '_mod' → logprob: -6.359914302825928
    9. ' ' → logprob: -6.484914302825928
    10. ' 
' → logprob: -6.609914302825928

Token 476: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11551141738891602
    2. '
' → logprob: -2.240511417388916
    3. '            
' → logprob: -6.490511417388916
    4. '   ' → logprob: -8.615510940551758
    5. '       ' → logprob: -8.740510940551758
    6. ' as' → logprob: -9.115510940551758
    7. '    
' → logprob: -9.365510940551758
    8. ',' → logprob: -9.365510940551758
    9. '<|end|>' → logprob: -9.615510940551758
    10. ' 
' → logprob: -9.740510940551758

Token 477: ' above' (ID: 5151)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.09411711990833282
    2. 'main' → logprob: -2.8441171646118164
    3. 'self' → logprob: -4.219117164611816
    4. 'pow' → logprob: -4.844117164611816
    5. '       ' → logprob: -6.344117164611816
    6. '           ' → logprob: -6.469117164611816
    7. ' mod' → logprob: -6.469117164611816
    8. ' main' → logprob: -6.969117164611816
    9. '   ' → logprob: -6.969117164611816
    10. '400' → logprob: -7.094117164611816

Token 478: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4796905219554901
    2. '           ' → logprob: -0.9796905517578125
    3. '            
' → logprob: -5.3546905517578125
    4. '    
' → logprob: -8.604690551757812
    5. '

' → logprob: -9.104690551757812
    6. '<|end|>' → logprob: -9.104690551757812
    7. ' 
' → logprob: -9.604690551757812
    8. '```' → logprob: -9.729690551757812
    9. '
' → logprob: -10.104690551757812
    10. ',
' → logprob: -10.104690551757812

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3150709271430969
    2. '
' → logprob: -1.3150708675384521
    3. '            
' → logprob: -7.190071105957031
    4. '<|end|>' → logprob: -7.690071105957031
    5. '```' → logprob: -8.190071105957031
    6. '    
' → logprob: -9.315071105957031
    7. '        
' → logprob: -9.815071105957031
    8. '       ' → logprob: -9.940071105957031
    9. ' 
' → logprob: -10.940071105957031
    10. '[' → logprob: -11.315071105957031

Token 480: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16797006130218506
    2. 'self' → logprob: -1.917970061302185
    3. ' self' → logprob: -5.917970180511475
    4. 'base' → logprob: -5.917970180511475
    5. 'hash' → logprob: -7.542970180511475
    6. 'p' → logprob: -7.792970180511475
    7. '       ' → logprob: -7.917970180511475
    8. '
' → logprob: -8.917969703674316
    9. 'pow' → logprob: -9.042969703674316
    10. ' base' → logprob: -9.167969703674316

Token 481: ' Hash' (ID: 10242)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27439674735069275
    2. 'hash' → logprob: -2.3993966579437256
    3. 'h' → logprob: -3.2743966579437256
    4. ' self' → logprob: -3.3993966579437256
    5. '           ' → logprob: -3.7743966579437256
    6. 'base' → logprob: -3.8993966579437256
    7. 'prefix' → logprob: -4.399396896362305
    8. 'p' → logprob: -5.649396896362305
    9. ' hash' → logprob: -5.899396896362305
    10. 'pow' → logprob: -6.024396896362305

Token 482: '[i' (ID: 1768)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.1944485902786255
    2. ' =' → logprob: -1.3194485902786255
    3. 's' → logprob: -2.069448471069336
    4. '_values' → logprob: -2.444448471069336
    5. 'val' → logprob: -2.944448471069336
    6. '_val' → logprob: -3.194448471069336
    7. '_list' → logprob: -3.319448471069336
    8. '_' → logprob: -4.444448471069336
    9. 'vals' → logprob: -4.569448471069336
    10. '_array' → logprob: -4.819448471069336

Token 483: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2290792167186737
    2. ' =' → logprob: -1.854079246520996
    3. 's' → logprob: -3.354079246520996
    4. '=' → logprob: -5.229079246520996
    5. ' ]' → logprob: -5.229079246520996
    6. ']=' → logprob: -7.479079246520996
    7. 'es' → logprob: -7.729079246520996
    8. '   ' → logprob: -8.604079246520996
    9. ' ' → logprob: -8.604079246520996
    10. 'def' → logprob: -9.229079246520996

Token 484: ' stores' (ID: 14604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03777371346950531
    2. '=' → logprob: -3.412773609161377
    3. 's' → logprob: -5.787773609161377
    4. 'es' → logprob: -8.662774085998535
    5. 'def' → logprob: -8.787774085998535
    6. '<|end|>' → logprob: -9.162774085998535
    7. 'import' → logprob: -9.537774085998535
    8. ' ' → logprob: -9.787774085998535
    9. '   ' → logprob: -9.787774085998535
    10. ' def' → logprob: -9.912774085998535

Token 485: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0991029366850853
    2. 'the' → logprob: -2.8491029739379883
    3. ' (' → logprob: -3.9741029739379883
    4. 'hash' → logprob: -5.849102973937988
    5. 'prefix' → logprob: -6.099102973937988
    6. ' hash' → logprob: -6.099102973937988
    7. ' cumulative' → logprob: -6.099102973937988
    8. ' prefix' → logprob: -6.224102973937988
    9. '(hash' → logprob: -6.974102973937988
    10. '(prefix' → logprob: -7.224102973937988

Token 486: ' hash' (ID: 10691)
  Prédit: '(hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hash' → logprob: -1.1935302019119263
    2. ' (' → logprob: -1.5685302019119263
    3. 'hash' → logprob: -1.6935302019119263
    4. ' hash' → logprob: -2.4435300827026367
    5. '(prefix' → logprob: -2.6935300827026367
    6. '(' → logprob: -3.3185300827026367
    7. '(seq' → logprob: -3.4435300827026367
    8. '(i' → logprob: -4.318530082702637
    9. 'prefix' → logprob: -4.318530082702637
    10. '(h' → logprob: -4.568530082702637

Token 487: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6847554445266724
    2. ' of' → logprob: -1.5597554445266724
    3. 'value' → logprob: -2.184755325317383
    4. ' =' → logprob: -2.434755325317383
    5. '_value' → logprob: -3.559755325317383
    6. '   ' → logprob: -4.184755325317383
    7. ' values' → logprob: -4.934755325317383
    8. '=' → logprob: -4.934755325317383
    9. '       ' → logprob: -5.059755325317383
    10. '    ' → logprob: -6.184755325317383

Token 488: ' from' (ID: 591)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04950617626309395
    2. '       ' → logprob: -3.799506187438965
    3. ' for' → logprob: -4.924506187438965
    4. ' up' → logprob: -4.924506187438965
    5. ' =' → logprob: -5.549506187438965
    6. 's' → logprob: -6.049506187438965
    7. 'of' → logprob: -6.049506187438965
    8. '   ' → logprob: -6.924506187438965
    9. '=' → logprob: -7.174506187438965
    10. 'for' → logprob: -8.674506187438965

Token 489: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9829440712928772
    2. '0' → logprob: -1.1079440116882324
    3. 'seq' → logprob: -2.2329440116882324
    4. 'the' → logprob: -2.7329440116882324
    5. ' seq' → logprob: -2.8579440116882324
    6. '[' → logprob: -4.357944011688232
    7. ' ' → logprob: -4.732944011688232
    8. ' sequence' → logprob: -5.107944011688232
    9. 'hash' → logprob: -5.232944011688232
    10. 'i' → logprob: -5.482944011688232

Token 490: ' up' (ID: 869)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1627694368362427
    2. ' of' → logprob: -1.6627694368362427
    3. '   ' → logprob: -2.162769317626953
    4. '=' → logprob: -2.412769317626953
    5. ' =' → logprob: -2.537769317626953
    6. '           ' → logprob: -3.287769317626953
    7. '       ' → logprob: -3.537769317626953
    8. ' up' → logprob: -3.662769317626953
    9. '[i' → logprob: -3.912769317626953
    10. 'ing' → logprob: -4.287769317626953

Token 491: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4837629795074463
    2. 'p' → logprob: -1.7337629795074463
    3. 'pto' → logprob: -2.3587629795074463
    4. 'ntil' → logprob: -2.8587629795074463
    5. 'o' → logprob: -2.9837629795074463
    6. 'i' → logprob: -6.608762741088867
    7. '0' → logprob: -7.233762741088867
    8. '1' → logprob: -7.358762741088867
    9. 'nt' → logprob: -7.483762741088867
    10. 'pt' → logprob: -7.858762741088867

Token 492: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18582220375537872
    2. ' i' → logprob: -2.0608222484588623
    3. 'index' → logprob: -3.4358222484588623
    4. ' index' → logprob: -4.685822010040283
    5. 'seq' → logprob: -8.810822486877441
    6. '   ' → logprob: -9.060822486877441
    7. ' the' → logprob: -9.185822486877441
    8. ' ' → logprob: -9.310822486877441
    9. '[i' → logprob: -9.560822486877441
    10. 'sequence' → logprob: -10.060822486877441

Token 493: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2595611810684204
    2. 'i' → logprob: -1.5095611810684204
    3. ' ' → logprob: -6.384561061859131
    4. '0' → logprob: -6.634561061859131
    5. '_' → logprob: -6.634561061859131
    6. '   ' → logprob: -7.134561061859131
    7. ' _' → logprob: -7.259561061859131
    8. '[i' → logprob: -7.384561061859131
    9. '_i' → logprob: -8.384561538696289
    10. ' =' → logprob: -8.759561538696289

Token 494: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31749242544174194
    2. ' i' → logprob: -1.3174924850463867
    3. '   ' → logprob: -6.067492485046387
    4. '=i' → logprob: -7.192492485046387
    5. '	i' → logprob: -7.192492485046387
    6. '           ' → logprob: -9.442492485046387
    7. ')i' → logprob: -9.567492485046387
    8. '=' → logprob: -9.817492485046387
    9. ')' → logprob: -10.192492485046387
    10. '    ' → logprob: -10.317492485046387

Token 495: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.525076150894165
    2. ')' → logprob: -1.650076150894165
    3. ' +' → logprob: -2.275076150894165
    4. ']' → logprob: -3.150076150894165
    5. '=' → logprob: -3.775076150894165
    6. '   ' → logprob: -4.525075912475586
    7. '       ' → logprob: -4.650075912475586
    8. '0' → logprob: -4.775075912475586
    9. 'i' → logprob: -6.275075912475586
    10. ' =' → logprob: -6.525075912475586

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014621175825595856
    2. ')' → logprob: -5.264621257781982
    3. 'i' → logprob: -5.389621257781982
    4. ' ' → logprob: -5.889621257781982
    5. ' i' → logprob: -7.264621257781982
    6. '   ' → logprob: -7.764621257781982
    7. ']' → logprob: -8.139620780944824
    8. 'token' → logprob: -9.014620780944824
    9. '0' → logprob: -9.139620780944824
    10. '```' → logprob: -9.514620780944824

Token 497: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4305458664894104
    2. ']' → logprob: -1.3055458068847656
    3. ')' → logprob: -3.4305458068847656
    4. ' +' → logprob: -3.8055458068847656
    5. ']
' → logprob: -4.930545806884766
    6. '   ' → logprob: -5.680545806884766
    7. ' of' → logprob: -5.930545806884766
    8. ')
' → logprob: -6.055545806884766
    9. '):
' → logprob: -6.305545806884766
    10. '       ' → logprob: -6.555545806884766

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007853295537643135
    2. '
' → logprob: -8.250784873962402
    3. '       ' → logprob: -8.375784873962402
    4. 'self' → logprob: -8.875784873962402
    5. ' self' → logprob: -9.250784873962402
    6. '   ' → logprob: -10.875784873962402
    7. '[' → logprob: -12.250784873962402
    8. ',' → logprob: -12.250784873962402
    9. '            
' → logprob: -12.500784873962402
    10. ' =' → logprob: -12.625784873962402

Token 499: ' Hash' (ID: 10242)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7895038723945618
    2. ' self' → logprob: -1.039503812789917
    3. 'self' → logprob: -1.664503812789917
    4. 'hash' → logprob: -7.039504051208496
    5. ' hash' → logprob: -7.539504051208496
    6. '       ' → logprob: -8.289504051208496
    7. 'class' → logprob: -8.664504051208496
    8. ' ' → logprob: -8.914504051208496
    9. 'import' → logprob: -9.164504051208496
    10. '   ' → logprob: -9.164504051208496

Token 500: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12696926295757294
    2. ' =' → logprob: -2.126969337463379
    3. '=[]' → logprob: -10.876969337463379
    4. '[' → logprob: -11.626969337463379
    5. '   ' → logprob: -12.501969337463379
    6. '=[' → logprob: -12.626969337463379
    7. '  ' → logprob: -13.501969337463379
    8. ']' → logprob: -14.001969337463379
    9. ' =[' → logprob: -14.001969337463379
    10. ')' → logprob: -14.376969337463379

Token 501: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008709636749699712
    2. ' [' → logprob: -7.250871181488037
    3. '[self' → logprob: -9.250870704650879
    4. 'self' → logprob: -9.875870704650879
    5. '   ' → logprob: -12.500870704650879
    6. '[a' → logprob: -13.250870704650879
    7. '[p' → logprob: -13.625870704650879
    8. '0' → logprob: -13.625870704650879
    9. '       ' → logprob: -13.750870704650879
    10. '[val' → logprob: -14.625870704650879

Token 502: '.Hash' (ID: 23095)
  Prédit: '.Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Hash' → logprob: -0.3754846453666687
    2. '_hash' → logprob: -2.7504847049713135
    3. 'Hash' → logprob: -2.7504847049713135
    4. '.hash' → logprob: -3.1254847049713135
    5. '._' → logprob: -3.7504847049713135
    6. ' =' → logprob: -3.8754847049713135
    7. '=[]' → logprob: -4.125484466552734
    8. '[' → logprob: -4.375484466552734
    9. '[]' → logprob: -4.500484466552734
    10. '.' → logprob: -4.750484466552734

Token 503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22645986080169678
    2. ' =' → logprob: -1.6014598608016968
    3. '[' → logprob: -7.351459980010986
    4. '=[' → logprob: -8.726459503173828
    5. '   ' → logprob: -8.976459503173828
    6. '       ' → logprob: -9.601459503173828
    7. '=[]' → logprob: -10.851459503173828
    8. ' =[' → logprob: -11.476459503173828
    9. '=[]
' → logprob: -12.851459503173828
    10. '    ' → logprob: -12.976459503173828

Token 504: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.297462171758525e-05
    2. ' [' → logprob: -10.375033378601074
    3. '[p' → logprob: -14.625033378601074
    4. '   ' → logprob: -14.875033378601074
    5. '[a' → logprob: -15.000033378601074
    6. '[int' → logprob: -16.750032424926758
    7. '0' → logprob: -16.750032424926758
    8. '[len' → logprob: -16.875032424926758
    9. '[pos' → logprob: -16.875032424926758
    10. '[self' → logprob: -17.000032424926758

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -17.0
    4. '1' → logprob: -17.25
    5. '           ' → logprob: -17.375
    6. '       ' → logprob: -17.875
    7. '۰' → logprob: -18.75
    8. '               ' → logprob: -19.625
    9. '                   ' → logprob: -20.125
    10. '         ' → logprob: -20.3125

Token 506: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024542496539652348
    2. ']*(' → logprob: -6.1274542808532715
    3. ']
' → logprob: -8.502453804016113
    4. '   ' → logprob: -10.752453804016113
    5. ']*' → logprob: -11.377453804016113
    6. ' ]' → logprob: -11.502453804016113
    7. ',' → logprob: -11.627453804016113
    8. ' *' → logprob: -12.127453804016113
    9. ']+' → logprob: -13.127453804016113
    10. ']
' → logprob: -13.377453804016113

Token 507: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4681912064552307
    2. ' +' → logprob: -1.593191146850586
    3. '*' → logprob: -3.593191146850586
    4. '[' → logprob: -3.843191146850586
    5. '[:]' → logprob: -3.843191146850586
    6. '<|end|>' → logprob: -4.093191146850586
    7. '
' → logprob: -4.218191146850586
    8. '+' → logprob: -4.218191146850586
    9. '+[' → logprob: -4.343191146850586
    10. '(' → logprob: -4.718191146850586

Token 508: ' (' (ID: 350)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -9.627176768844947e-05
    2. ' (' → logprob: -9.375096321105957
    3. '   ' → logprob: -12.000096321105957
    4. '(' → logprob: -14.000096321105957
    5. '(se' → logprob: -14.000096321105957
    6. '       ' → logprob: -14.250096321105957
    7. '(seg' → logprob: -14.250096321105957
    8. 'seq' → logprob: -14.375096321105957
    9. '(sequence' → logprob: -14.750096321105957
    10. '((' → logprob: -15.125096321105957

Token 509: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.00047773998812772334
    2. '(seq' → logprob: -7.7504777908325195
    3. ' seq' → logprob: -10.25047779083252
    4. '   ' → logprob: -11.50047779083252
    5. '  ' → logprob: -14.62547779083252
    6. '       ' → logprob: -15.12547779083252
    7. ' ' → logprob: -15.50047779083252
    8. '(' → logprob: -16.000476837158203
    9. '    ' → logprob: -16.000476837158203
    10. '     ' → logprob: -16.000476837158203

Token 510: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -8.77627644513268e-06
    2. '   ' → logprob: -12.625008583068848
    3. '_length' → logprob: -13.125008583068848
    4. 'size' → logprob: -13.875008583068848
    5. '_' → logprob: -14.250008583068848
    6. '_sizes' → logprob: -14.750008583068848
    7. '+' → logprob: -15.250008583068848
    8. '_s' → logprob: -15.250008583068848
    9. '_len' → logprob: -15.375008583068848
    10. '_SIZE' → logprob: -15.875008583068848

Token 511: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889044284820557
    2. ' +' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.578890800476074
    4. '+
' → logprob: -15.828890800476074
    5. ' +
' → logprob: -16.453889846801758
    6. '[' → logprob: -16.703889846801758
    7. '+[' → logprob: -16.953889846801758
    8. '+++' → logprob: -17.328889846801758
    9. ')' → logprob: -17.453889846801758
    10. '<|end|>' → logprob: -17.453889846801758

Token 512: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7159857786027715e-05
    2. ' ' → logprob: -10.000046730041504
    3. '   ' → logprob: -13.750046730041504
    4. '2' → logprob: -15.625046730041504
    5. '```' → logprob: -16.37504768371582
    6. '  ' → logprob: -16.81254768371582
    7. '
' → logprob: -17.50004768371582
    8. '{' → logprob: -17.87504768371582
    9. '400' → logprob: -18.12504768371582
    10. '100' → logprob: -18.18754768371582

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.500005722045898
    3. '2' → logprob: -14.375005722045898
    4. '400' → logprob: -14.625005722045898
    5. '   ' → logprob: -14.625005722045898
    6. '```' → logprob: -16.6875057220459
    7. '4' → logprob: -17.0000057220459
    8. '
' → logprob: -17.0000057220459
    9. '10' → logprob: -17.2500057220459
    10. '１' → logprob: -17.4375057220459

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026586547028273344
    2. ')
' → logprob: -6.002658843994141
    3. '       ' → logprob: -8.75265884399414
    4. '<|end|>' → logprob: -11.37765884399414
    5. '   ' → logprob: -11.87765884399414
    6. '           ' → logprob: -13.00265884399414
    7. ']' → logprob: -13.25265884399414
    8. ' )' → logprob: -14.25265884399414
    9. ')]' → logprob: -14.75265884399414
    10. ')
' → logprob: -15.25265884399414

Token 515: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029796024318784475
    2. '       ' → logprob: -6.502979755401611
    3. ' for' → logprob: -7.252979755401611
    4. '	       ' → logprob: -8.252979278564453
    5. '<|end|>' → logprob: -8.502979278564453
    6. 'for' → logprob: -9.127979278564453
    7. '   ' → logprob: -10.127979278564453
    8. '		' → logprob: -10.752979278564453
    9. '	   ' → logprob: -10.752979278564453
    10. '
' → logprob: -10.877979278564453

Token 516: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.260009229183197
    2. 'for' → logprob: -1.7600092887878418
    3. ' for' → logprob: -2.885009288787842
    4. '       ' → logprob: -8.135008811950684
    5. 'hash' → logprob: -8.135008811950684
    6. 'p' → logprob: -8.760008811950684
    7. '   ' → logprob: -9.385008811950684
    8. 'h' → logprob: -10.760008811950684
    9. 'i' → logprob: -11.010008811950684
    10. '               ' → logprob: -11.260008811950684

Token 517: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3163571357727051
    2. 'h' → logprob: -2.316357135772705
    3. 'p' → logprob: -3.191357135772705
    4. 'hash' → logprob: -3.441357135772705
    5. ' for' → logprob: -3.691357135772705
    6. 'base' → logprob: -3.941357135772705
    7. '       ' → logprob: -3.941357135772705
    8. 'current' → logprob: -5.441357135772705
    9. 'pow' → logprob: -5.441357135772705
    10. '           ' → logprob: -5.691357135772705

Token 518: ' prefix' (ID: 18633)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.084159016609192
    2. 'h' → logprob: -1.459159016609192
    3. 'for' → logprob: -1.584159016609192
    4. '   ' → logprob: -2.8341588973999023
    5. 'hash' → logprob: -2.8341588973999023
    6. ' h' → logprob: -2.9591588973999023
    7. '           ' → logprob: -3.8341588973999023
    8. ' hash' → logprob: -4.584158897399902
    9. '       ' → logprob: -5.084158897399902
    10. 'cur' → logprob: -5.709158897399902

Token 519: ' hashes' (ID: 131101)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.6948550343513489
    2. '_hash' → logprob: -1.319854974746704
    3. ' hashes' → logprob: -1.819854974746704
    4. ' hash' → logprob: -2.944854974746704
    5. 's' → logprob: -5.069855213165283
    6. '   ' → logprob: -5.319855213165283
    7. ' sums' → logprob: -6.069855213165283
    8. '       ' → logprob: -6.569855213165283
    9. 'sum' → logprob: -7.319855213165283
    10. 'Hashes' → logprob: -7.569855213165283

Token 520: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0546458475291729
    2. ' for' → logprob: -3.4296457767486572
    3. '<|end|>' → logprob: -4.429646015167236
    4. 'for' → logprob: -5.304646015167236
    5. '       ' → logprob: -5.929646015167236
    6. '<|end|>' → logprob: -7.304646015167236
    7. '   ' → logprob: -9.054645538330078
    8. '[' → logprob: -9.179645538330078
    9. ',' → logprob: -9.429645538330078
    10. '	       ' → logprob: -10.179645538330078

Token 521: ' Hash' (ID: 10242)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37927138805389404
    2. ' for' → logprob: -1.254271388053894
    3. 'for' → logprob: -3.5042715072631836
    4. '       ' → logprob: -8.629271507263184
    5. '   ' → logprob: -9.879271507263184
    6. '```' → logprob: -10.754271507263184
    7. '
' → logprob: -11.504271507263184
    8. '	       ' → logprob: -12.879271507263184
    9. '               ' → logprob: -13.129271507263184
    10. '<|end|>' → logprob: -13.129271507263184

Token 522: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02465636469423771
    2. '[i' → logprob: -4.399656295776367
    3. ' =' → logprob: -4.899656295776367
    4. '=' → logprob: -6.149656295776367
    5. '<|end|>' → logprob: -7.274656295776367
    6. 'def' → logprob: -8.024656295776367
    7. 'for' → logprob: -8.524656295776367
    8. ' for' → logprob: -8.649656295776367
    9. '<|end|>' → logprob: -9.274656295776367
    10. '
' → logprob: -9.399656295776367

Token 523: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029282666742801666
    2. ']=' → logprob: -4.154282569885254
    3. ' =' → logprob: -5.779282569885254
    4. '=' → logprob: -5.779282569885254
    5. '[i' → logprob: -6.029282569885254
    6. '[' → logprob: -6.154282569885254
    7. ' ]' → logprob: -6.529282569885254
    8. ')' → logprob: -8.279282569885254
    9. '+' → logprob: -8.654282569885254
    10. '   ' → logprob: -8.779282569885254

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004933410091325641
    2. ' ' → logprob: -8.250493049621582
    3. ']' → logprob: -8.625493049621582
    4. '
' → logprob: -10.750493049621582
    5. '   ' → logprob: -11.375493049621582
    6. '```' → logprob: -12.312993049621582
    7. ']=' → logprob: -13.000493049621582
    8. '=' → logprob: -13.125493049621582
    9. ' =' → logprob: -13.687993049621582
    10. ')' → logprob: -13.875493049621582

Token 525: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027600566390901804
    2. ']=' → logprob: -6.37775993347168
    3. ']+=' → logprob: -7.75275993347168
    4. ' ]' → logprob: -8.37775993347168
    5. '=' → logprob: -8.50275993347168
    6. ' =' → logprob: -8.75275993347168
    7. '   ' → logprob: -11.75275993347168
    8. ' +=' → logprob: -11.87775993347168
    9. ']=(' → logprob: -11.87775993347168
    10. '
' → logprob: -12.87775993347168

Token 526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34856709837913513
    2. '=' → logprob: -1.2235671281814575
    3. ' +=' → logprob: -10.723567008972168
    4. '[' → logprob: -10.723567008972168
    5. '=(' → logprob: -10.973567008972168
    6. '   ' → logprob: -11.098567008972168
    7. ']' → logprob: -11.848567008972168
    8. ' =(' → logprob: -11.973567008972168
    9. '[i' → logprob: -12.348567008972168
    10. ' ' → logprob: -12.348567008972168

Token 527: ' hash' (ID: 10691)
  Prédit: '(Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Hash' → logprob: -0.03310208395123482
    2. '(' → logprob: -3.908102035522461
    3. ' (' → logprob: -5.158102035522461
    4. '(seq' → logprob: -5.408102035522461
    5. '(hash' → logprob: -7.158102035522461
    6. '((' → logprob: -7.408102035522461
    7. 'Hash' → logprob: -7.908102035522461
    8. '(pow' → logprob: -8.908102035522461
    9. '3' → logprob: -9.783102035522461
    10. '   ' → logprob: -10.408102035522461

Token 528: ' of' (ID: 328)
  Prédit: '(Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Hash' → logprob: -1.3286809921264648
    2. '*' → logprob: -2.453680992126465
    3. '[i' → logprob: -2.453680992126465
    4. ' =' → logprob: -2.578680992126465
    5. ' *' → logprob: -2.703680992126465
    6. '   ' → logprob: -2.703680992126465
    7. '=' → logprob: -2.953680992126465
    8. 'Hash' → logprob: -3.078680992126465
    9. ' of' → logprob: -3.453680992126465
    10. 'of' → logprob: -3.453680992126465

Token 529: ' first' (ID: 1577)
  Prédit: '(Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Hash' → logprob: -1.4061795473098755
    2. ' (' → logprob: -1.5311795473098755
    3. 'Hash' → logprob: -2.031179428100586
    4. 'seq' → logprob: -2.031179428100586
    5. '(seq' → logprob: -2.031179428100586
    6. '(' → logprob: -2.531179428100586
    7. '   ' → logprob: -3.781179428100586
    8. ' Hash' → logprob: -3.906179428100586
    9. ' seq' → logprob: -5.281179428100586
    10. '((' → logprob: -5.781179428100586

Token 530: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20000430941581726
    2. ' i' → logprob: -1.8250043392181396
    3. '[i' → logprob: -4.3250041007995605
    4. '   ' → logprob: -5.2000041007995605
    5. ' (' → logprob: -7.9500041007995605
    6. 'seq' → logprob: -8.200004577636719
    7. '(i' → logprob: -8.200004577636719
    8. ' seq' → logprob: -8.700004577636719
    9. '```' → logprob: -10.200004577636719
    10. ' sequences' → logprob: -10.325004577636719

Token 531: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01512984186410904
    2. ' i' → logprob: -4.265130043029785
    3. '   ' → logprob: -7.140130043029785
    4. '[i' → logprob: -9.390130043029785
    5. 'seq' → logprob: -10.015130043029785
    6. ')' → logprob: -10.515130043029785
    7. ' seq' → logprob: -12.015130043029785
    8. '	i' → logprob: -13.390130043029785
    9. ' ' → logprob: -13.765130043029785
    10. ']' → logprob: -13.765130043029785

Token 532: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07372023165225983
    2. ' +' → logprob: -2.6987202167510986
    3. ']' → logprob: -6.698720455169678
    4. 'tokens' → logprob: -7.198720455169678
    5. ' tokens' → logprob: -7.573720455169678
    6. '[i' → logprob: -8.07371997833252
    7. ')' → logprob: -8.19871997833252
    8. '   ' → logprob: -8.32371997833252
    9. ']+' → logprob: -9.32371997833252
    10. '+i' → logprob: -9.69871997833252

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.721228368813172e-05
    2. ' ' → logprob: -10.250086784362793
    3. 'i' → logprob: -10.750086784362793
    4. '+' → logprob: -11.125086784362793
    5. ')' → logprob: -11.875086784362793
    6. 'tokens' → logprob: -12.750086784362793
    7. '   ' → logprob: -13.125086784362793
    8. '
' → logprob: -13.375086784362793
    9. '```' → logprob: -14.250086784362793
    10. ' i' → logprob: -14.500086784362793

Token 534: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.293056607246399
    2. ']' → logprob: -1.293056607246399
    3. ' elements' → logprob: -1.793056607246399
    4. '+' → logprob: -1.918056607246399
    5. ' tokens' → logprob: -2.9180564880371094
    6. 'tokens' → logprob: -3.6680564880371094
    7. 'elements' → logprob: -4.168056488037109
    8. ' +' → logprob: -4.793056488037109
    9. '_tokens' → logprob: -4.793056488037109
    10. '[i' → logprob: -5.043056488037109

Token 535: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.1274375319480896
    2. ' tokens' → logprob: -3.0024375915527344
    3. 'elements' → logprob: -3.2524375915527344
    4. 'tokens' → logprob: -4.502437591552734
    5. '   ' → logprob: -5.752437591552734
    6. ' seq' → logprob: -5.752437591552734
    7. ' characters' → logprob: -6.002437591552734
    8. ' items' → logprob: -6.377437591552734
    9. 'seq' → logprob: -6.377437591552734
    10. ' elems' → logprob: -6.377437591552734

Token 536: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007180741056799889
    2. '
' → logprob: -5.632180690765381
    3. ' +' → logprob: -7.007180690765381
    4. ',' → logprob: -7.382180690765381
    5. ' with' → logprob: -7.632180690765381
    6. '       ' → logprob: -7.882180690765381
    7. '[' → logprob: -8.632181167602539
    8. ' for' → logprob: -9.132181167602539
    9. '   ' → logprob: -9.507181167602539
    10. ' =' → logprob: -9.757181167602539

Token 537: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001621622359380126
    2. ' for' → logprob: -7.501621723175049
    3. '<|end|>' → logprob: -8.00162124633789
    4. '
' → logprob: -8.87662124633789
    5. ',' → logprob: -9.00162124633789
    6. '       ' → logprob: -9.12662124633789
    7. ' with' → logprob: -9.12662124633789
    8. '            
' → logprob: -9.62662124633789
    9. '<|end|>' → logprob: -10.12662124633789
    10. '   ' → logprob: -10.87662124633789

Token 538: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7603780627250671
    2. 'for' (adapté à ' for') → logprob: -0.8853780627250671
    3. '           ' → logprob: -2.135378122329712
    4. '       ' → logprob: -6.510377883911133
    5. '   ' → logprob: -9.010377883911133
    6. 'p' → logprob: -10.385377883911133
    7. '```' → logprob: -10.635377883911133
    8. ' p' → logprob: -10.760377883911133
    9. '
' → logprob: -11.635377883911133
    10. 'hash' → logprob: -12.010377883911133

Token 539: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14269623160362244
    2. ' i' → logprob: -2.0176961421966553
    3. '   ' → logprob: -11.267696380615234
    4. '	i' → logprob: -12.517696380615234
    5. ' ' → logprob: -13.517696380615234
    6. '_i' → logprob: -14.767696380615234
    7. 'I' → logprob: -14.892696380615234
    8. 'index' → logprob: -15.017696380615234
    9. 'idx' → logprob: -15.017696380615234
    10. '(i' → logprob: -15.267696380615234

Token 540: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008677561767399311
    2. 'in' → logprob: -4.7586774826049805
    3. '<|end|>' → logprob: -10.50867748260498
    4. ' ' → logprob: -11.38367748260498
    5. '	in' → logprob: -11.63367748260498
    6. '<|end|>' → logprob: -12.75867748260498
    7. 'In' → logprob: -13.13367748260498
    8. '+' → logprob: -13.63367748260498
    9. '_in' → logprob: -13.75867748260498
    10. ')' → logprob: -13.88367748260498

Token 541: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.474100261926651
    2. ' range' → logprob: -0.9741002321243286
    3. '   ' → logprob: -11.349100112915039
    4. ' ' → logprob: -12.099100112915039
    5. '	range' → logprob: -13.099100112915039
    6. '(range' → logprob: -13.224100112915039
    7. '  ' → logprob: -14.349100112915039
    8. ' xrange' → logprob: -15.099100112915039
    9. '0' → logprob: -15.724100112915039
    10. '    ' → logprob: -15.724100112915039

Token 542: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0009879115968942642
    2. '(' → logprob: -7.250988006591797
    3. 'seq' → logprob: -9.000988006591797
    4. ' seq' → logprob: -9.625988006591797
    5. ' (' → logprob: -10.375988006591797
    6. '   ' → logprob: -10.625988006591797
    7. '1' → logprob: -11.375988006591797
    8. '           ' → logprob: -11.875988006591797
    9. '(len' → logprob: -12.375988006591797
    10. '       ' → logprob: -12.750988006591797

Token 543: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.002091496018692851
    2. '+' → logprob: -7.502091407775879
    3. '_SIZE' → logprob: -7.752091407775879
    4. '   ' → logprob: -7.877091407775879
    5. 'size' → logprob: -8.377091407775879
    6. '[' → logprob: -9.002091407775879
    7. '1' → logprob: -9.502091407775879
    8. ')' → logprob: -9.877091407775879
    9. ' ' → logprob: -9.877091407775879
    10. '):
' → logprob: -10.252091407775879

Token 544: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.047367386519908905
    2. '):' → logprob: -3.1723673343658447
    3. '+' → logprob: -5.797367572784424
    4. '   ' → logprob: -7.672367572784424
    5. '       ' → logprob: -7.797367572784424
    6. ' +' → logprob: -8.672367095947266
    7. '):
' → logprob: -9.547367095947266
    8. '           ' → logprob: -9.797367095947266
    9. ':' → logprob: -10.297367095947266
    10. ' ):
' → logprob: -10.547367095947266

Token 545: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.742448022123426e-05
    2. '           ' → logprob: -10.125067710876465
    3. '       ' → logprob: -11.375067710876465
    4. ',' → logprob: -12.750067710876465
    5. '   ' → logprob: -13.000067710876465
    6. '```' → logprob: -13.125067710876465
    7. ' self' → logprob: -13.500067710876465
    8. '	           ' → logprob: -13.625067710876465
    9. 'self' → logprob: -13.875067710876465
    10. '                   ' → logprob: -14.125067710876465

Token 546: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0696377158164978
    2. ' Hash' → logprob: -3.3196377754211426
    3. 'Hash' → logprob: -3.6946377754211426
    4. '   ' → logprob: -5.694637775421143
    5. '           ' → logprob: -6.194637775421143
    6. '                   ' → logprob: -7.444637775421143
    7. ' ' → logprob: -9.944637298583984
    8. '       ' → logprob: -10.319637298583984
    9. ' self' → logprob: -10.444637298583984
    10. 'self' → logprob: -10.569637298583984

Token 547: ' To' (ID: 2514)
  Prédit: 'Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -0.041183389723300934
    2. ' Hash' → logprob: -3.2911834716796875
    3. '               ' → logprob: -6.5411834716796875
    4. '           ' → logprob: -8.041183471679688
    5. 'hash' → logprob: -8.041183471679688
    6. 'val' → logprob: -8.541183471679688
    7. '   ' → logprob: -8.666183471679688
    8. 'h' → logprob: -8.791183471679688
    9. 'v' → logprob: -9.166183471679688
    10. 'self' → logprob: -9.291183471679688

Token 548: ' distinguish' (ID: 59938)
  Prédit: 'Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -0.7425851225852966
    2. '           ' → logprob: -1.3675851821899414
    3. ' Hash' → logprob: -2.7425851821899414
    4. '   ' → logprob: -2.9925851821899414
    5. '       ' → logprob: -3.3675851821899414
    6. '
' → logprob: -3.6175851821899414
    7. '               ' → logprob: -4.367585182189941
    8. '_hash' → logprob: -4.367585182189941
    9. 'hash' → logprob: -4.742585182189941
    10. ' (' → logprob: -4.867585182189941

Token 549: ' zero' (ID: 12421)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3799848556518555
    2. ' the' → logprob: -1.7549848556518555
    3. ' self' → logprob: -1.8799848556518555
    4. ' Hash' → logprob: -2.2549848556518555
    5. 'Hash' → logprob: -2.3799848556518555
    6. 'self' → logprob: -3.1299848556518555
    7. '           ' → logprob: -3.6299848556518555
    8. ' between' → logprob: -3.8799848556518555
    9. '   ' → logprob: -4.0049848556518555
    10. ' sequences' → logprob: -4.2549848556518555

Token 550: ' elements' (ID: 8632)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9531641602516174
    2. 'hash' → logprob: -2.8281641006469727
    3. 'from' → logprob: -3.0781641006469727
    4. 'values' → logprob: -3.0781641006469727
    5. 'and' → logprob: -3.3281641006469727
    6. ' elements' → logprob: -3.3281641006469727
    7. 'tokens' → logprob: -3.3281641006469727
    8. ' if' → logprob: -3.4531641006469727
    9. ' or' → logprob: -3.5781641006469727
    10. '_hash' → logprob: -3.7031641006469727

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30726075172424316
    2. ' and' → logprob: -1.9322607517242432
    3. '               ' → logprob: -2.682260751724243
    4. ':' → logprob: -4.057260513305664
    5. '           ' → logprob: -4.807260513305664
    6. ' ,' → logprob: -5.057260513305664
    7. '                   ' → logprob: -5.932260513305664
    8. 'and' → logprob: -6.057260513305664
    9. '<|end|>' → logprob: -6.182260513305664
    10. ' in' → logprob: -6.307260513305664

Token 552: ' use' (ID: 1199)
  Prédit: ' Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Hash' → logprob: -0.18363456428050995
    2. 'Hash' → logprob: -2.4336345195770264
    3. '                   ' → logprob: -2.6836345195770264
    4. '               ' → logprob: -5.0586347579956055
    5. ' self' → logprob: -5.9336347579956055
    6. '	Hash' → logprob: -6.8086347579956055
    7. '   ' → logprob: -7.5586347579956055
    8. 'self' → logprob: -8.433634757995605
    9. '<Hash' → logprob: -8.683634757995605
    10. ' ' → logprob: -9.058634757995605

Token 553: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.722153902053833
    2. '(seq' → logprob: -1.097153902053833
    3. 'seq' → logprob: -2.972153902053833
    4. '(ord' → logprob: -3.597153902053833
    5. ' seq' → logprob: -3.972153902053833
    6. 'Hash' → logprob: -3.972153902053833
    7. '(Hash' → logprob: -4.347153663635254
    8. ' Hash' → logprob: -4.472153663635254
    9. '((' → logprob: -4.597153663635254
    10. '(pow' → logprob: -5.347153663635254

Token 554: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.1334604173898697
    2. '(seq' → logprob: -2.133460521697998
    3. ' seq' → logprob: -6.508460521697998
    4. 'pow' → logprob: -7.008460521697998
    5. '(ord' → logprob: -7.133460521697998
    6. '((' → logprob: -7.383460521697998
    7. '(' → logprob: -7.633460521697998
    8. '   ' → logprob: -8.13346004486084
    9. 'hash' → logprob: -8.25846004486084
    10. 'Hash' → logprob: -8.25846004486084

Token 555: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.875006675720215
    3. ')[' → logprob: -13.875006675720215
    4. '   ' → logprob: -14.125006675720215
    5. '[
' → logprob: -14.250006675720215
    6. ')' → logprob: -14.375006675720215
    7. 'i' → logprob: -14.875006675720215
    8. '```' → logprob: -15.750006675720215
    9. ' [' → logprob: -16.00000762939453
    10. '       ' → logprob: -16.37500762939453

Token 556: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000645360560156405
    2. ']' → logprob: -7.500645160675049
    3. ']+' → logprob: -9.875645637512207
    4. 'i' → logprob: -10.750645637512207
    5. '[' → logprob: -11.875645637512207
    6. ' [' → logprob: -12.500645637512207
    7. '[
' → logprob: -12.625645637512207
    8. '][' → logprob: -13.750645637512207
    9. '   ' → logprob: -14.250645637512207
    10. '(i' → logprob: -14.375645637512207

Token 557: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5594395995140076
    2. '+' → logprob: -1.0594396591186523
    3. '[i' → logprob: -2.5594396591186523
    4. '[' → logprob: -5.934439659118652
    5. ')' → logprob: -7.684439659118652
    6. '   ' → logprob: -8.309439659118652
    7. ' ' → logprob: -8.559439659118652
    8. '+i' → logprob: -8.684439659118652
    9. '()+' → logprob: -9.434439659118652
    10. ']' → logprob: -9.434439659118652

Token 558: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5361964106559753
    2. '101' → logprob: -2.16119647026062
    3. '100' → logprob: -2.16119647026062
    4. '10' → logprob: -2.41119647026062
    5. '2' → logprob: -4.536196231842041
    6. '129' → logprob: -4.661196231842041
    7. '201' → logprob: -4.911196231842041
    8. '127' → logprob: -4.911196231842041
    9. '123' → logprob: -4.911196231842041
    10. '3' → logprob: -5.286196231842041

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8858764171600342
    2. '10' → logprob: -1.8858764171600342
    3. '101' → logprob: -1.8858764171600342
    4. '100' → logprob: -2.385876417160034
    5. '129' → logprob: -3.260876417160034
    6. '123' → logprob: -3.760876417160034
    7. '127' → logprob: -4.385876655578613
    8. '11' → logprob: -4.635876655578613
    9. '201' → logprob: -4.760876655578613
    10. '5' → logprob: -4.885876655578613

Token 560: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026884564431384206
    2. '))' → logprob: -9.375268936157227
    3. ' )' → logprob: -10.125268936157227
    4. ')*' → logprob: -10.625268936157227
    5. '           ' → logprob: -11.000268936157227
    6. '   ' → logprob: -11.000268936157227
    7. '       ' → logprob: -11.125268936157227
    8. ')
' → logprob: -11.375268936157227
    9. '               ' → logprob: -11.375268936157227
    10. '```' → logprob: -11.375268936157227

Token 561: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004705068655312061
    2. '           ' → logprob: -5.87970495223999
    3. ',' → logprob: -7.75470495223999
    4. ' *' → logprob: -7.87970495223999
    5. ')' → logprob: -8.004705429077148
    6. '       ' → logprob: -9.129705429077148
    7. '
' → logprob: -9.254705429077148
    8. ' and' → logprob: -9.629705429077148
    9. '```' → logprob: -9.629705429077148
    10. '*' → logprob: -10.129705429077148

Token 562: ' Hash' (ID: 10242)
  Prédit: 'Hash'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' (adapté à ' Hash') → logprob: -0.9682987928390503
    2. '               ' → logprob: -1.0932987928390503
    3. ' Hash' → logprob: -1.4682987928390503
    4. 'self' → logprob: -3.59329891204834
    5. ' self' → logprob: -4.09329891204834
    6. '                   ' → logprob: -5.46829891204834
    7. '           ' → logprob: -5.71829891204834
    8. '   ' → logprob: -6.09329891204834
    9. '	Hash' → logprob: -8.46829891204834
    10. '(Hash' → logprob: -8.96829891204834

Token 563: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.198043699143454e-05
    2. '[' → logprob: -9.375091552734375
    3. ' [' → logprob: -13.250091552734375
    4. '   ' → logprob: -13.625091552734375
    5. '\[' → logprob: -13.625091552734375
    6. '[(' → logprob: -13.875091552734375
    7. '=' → logprob: -15.000091552734375
    8. '[self' → logprob: -15.000091552734375
    9. ' =' → logprob: -15.500091552734375
    10. '
' → logprob: -15.500091552734375

Token 564: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014215569011867046
    2. ' +' → logprob: -4.514215469360352
    3. ']' → logprob: -5.764215469360352
    4. '1' → logprob: -11.764215469360352
    5. ']+' → logprob: -12.264215469360352
    6. '[' → logprob: -12.389215469360352
    7. '+]' → logprob: -13.014215469360352
    8. '+i' → logprob: -13.389215469360352
    9. '[i' → logprob: -14.014215469360352
    10. '   ' → logprob: -14.514215469360352

Token 565: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.812509536743164
    4. '
' → logprob: -16.062509536743164
    5. '```' → logprob: -16.375009536743164
    6. 'def' → logprob: -17.250009536743164
    7. '  ' → logprob: -18.250009536743164
    8. '`' → logprob: -18.312509536743164
    9. '[' → logprob: -18.437509536743164
    10. '    ' → logprob: -18.687509536743164

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.500014305114746
    3. '
' → logprob: -13.250014305114746
    4. '   ' → logprob: -13.687514305114746
    5. '```' → logprob: -14.562514305114746
    6. 'def' → logprob: -14.625014305114746
    7. '[' → logprob: -16.562515258789062
    8. '  ' → logprob: -16.625015258789062
    9. '2' → logprob: -17.000015258789062
    10. '     ' → logprob: -17.000015258789062

Token 567: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06565091013908386
    2. '=' → logprob: -3.3156509399414062
    3. ' =' → logprob: -3.9406509399414062
    4. ']=' → logprob: -5.065650939941406
    5. ']=(' → logprob: -7.190650939941406
    6. ' ]' → logprob: -7.940650939941406
    7. ')' → logprob: -8.440650939941406
    8. '=(' → logprob: -9.565650939941406
    9. '   ' → logprob: -10.690650939941406
    10. ']+=' → logprob: -10.940650939941406

Token 568: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012554865330457687
    2. ' =' → logprob: -4.38755464553833
    3. '=(' → logprob: -10.137555122375488
    4. '+=' → logprob: -13.762555122375488
    5. ' ^=' → logprob: -14.012555122375488
    6. ']' → logprob: -14.262555122375488
    7. ']=' → logprob: -14.262555122375488
    8. '^' → logprob: -14.387555122375488
    9. '   ' → logprob: -14.887555122375488
    10. ' =(' → logprob: -15.012555122375488

Token 569: ' (' (ID: 350)
  Prédit: '(Hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Hash' → logprob: -0.010818242095410824
    2. '(' → logprob: -5.010818004608154
    3. ' (' → logprob: -5.760818004608154
    4. '((' → logprob: -7.385818004608154
    5. '(seq' → logprob: -9.135818481445312
    6. '(hash' → logprob: -9.510818481445312
    7. '   ' → logprob: -10.135818481445312
    8. 'Hash' → logprob: -10.760818481445312
    9. '(H' → logprob: -10.885818481445312
    10. '(Mod' → logprob: -12.260818481445312

Token 570: 'Hash' (ID: 8579)
  Prédit: 'Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -0.030262503772974014
    2. '(Hash' → logprob: -3.5302624702453613
    3. ' Hash' → logprob: -8.03026294708252
    4. ' (' → logprob: -9.78026294708252
    5. '((' → logprob: -10.53026294708252
    6. '	Hash' → logprob: -10.65526294708252
    7. '(' → logprob: -10.78026294708252
    8. '(H' → logprob: -11.65526294708252
    9. '_hash' → logprob: -12.28026294708252
    10. 'Hasher' → logprob: -12.28026294708252

Token 571: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9504606825648807e-05
    2. 'i' → logprob: -11.125019073486328
    3. '[' → logprob: -13.125019073486328
    4. '   ' → logprob: -14.000019073486328
    5. ' [' → logprob: -14.625019073486328
    6. '[I' → logprob: -15.250019073486328
    7. ' i' → logprob: -15.500019073486328
    8. ' ' → logprob: -15.625019073486328
    9. '```' → logprob: -15.875019073486328
    10. '
' → logprob: -16.250019073486328

Token 572: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06285502016544342
    2. ' +' → logprob: -3.3128550052642822
    3. '*' → logprob: -3.8128550052642822
    4. '+' → logprob: -6.562855243682861
    5. ' ' → logprob: -7.062855243682861
    6. '   ' → logprob: -9.437854766845703
    7. ')' → logprob: -11.437854766845703
    8. ' ' → logprob: -11.437854766845703
    9. ' <<' → logprob: -11.687854766845703
    10. '<<' → logprob: -12.062854766845703

Token 573: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11615670472383499
    2. '*' → logprob: -2.491156816482544
    3. ' +' → logprob: -3.741156816482544
    4. '+' → logprob: -5.866156578063965
    5. ' ' → logprob: -8.241156578063965
    6. ' ' → logprob: -11.366156578063965
    7. '   ' → logprob: -11.866156578063965
    8. '```' → logprob: -13.741156578063965
    9. '<<' → logprob: -14.366156578063965
    10. '*p' → logprob: -14.366156578063965

Token 574: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5411071181297302
    2. ' (' → logprob: -2.041107177734375
    3. '(seq' → logprob: -2.166107177734375
    4. '(pow' → logprob: -2.166107177734375
    5. 'seq' → logprob: -3.541107177734375
    6. ' pow' → logprob: -3.666107177734375
    7. '((' → logprob: -6.791107177734375
    8. '   ' → logprob: -7.166107177734375
    9. ' seq' → logprob: -7.291107177734375
    10. '(p' → logprob: -7.791107177734375

Token 575: 'seq' (ID: 27794)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.12094131857156754
    2. 'seq' → logprob: -2.870941400527954
    3. 'pow' → logprob: -3.495941400527954
    4. '(pow' → logprob: -4.120941162109375
    5. ' (' → logprob: -4.745941162109375
    6. '   ' → logprob: -6.995941162109375
    7. '       ' → logprob: -8.120941162109375
    8. '((' → logprob: -8.495941162109375
    9. '(se' → logprob: -9.120941162109375
    10. ' seq' → logprob: -9.245941162109375

Token 576: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -16.125003814697266
    4. '   ' → logprob: -16.125003814697266
    5. 'i' → logprob: -16.375003814697266
    6. '[
' → logprob: -16.375003814697266
    7. '[I' → logprob: -16.750003814697266
    8. '```' → logprob: -16.875003814697266
    9. ')[' → logprob: -17.500003814697266
    10. '       ' → logprob: -18.375003814697266

Token 577: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14397309720516205
    2. ']+' → logprob: -2.0189731121063232
    3. '[i' → logprob: -7.643972873687744
    4. '+' → logprob: -7.893972873687744
    5. ' +' → logprob: -8.643973350524902
    6. '[' → logprob: -9.268973350524902
    7. ' ]' → logprob: -9.768973350524902
    8. 'import' → logprob: -10.268973350524902
    9. 's' → logprob: -11.018973350524902
    10. ')' → logprob: -11.268973350524902

Token 578: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519857883453369
    2. '+' → logprob: -1.501985788345337
    3. '[' → logprob: -10.876985549926758
    4. '[i' → logprob: -11.001985549926758
    5. '   ' → logprob: -12.126985549926758
    6. 'import' → logprob: -12.626985549926758
    7. ' ' → logprob: -12.626985549926758
    8. ']' → logprob: -13.001985549926758
    9. '
' → logprob: -13.501985549926758
    10. ')' → logprob: -14.001985549926758

Token 579: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.453737710718997e-05
    2. ' ' → logprob: -10.125044822692871
    3. '   ' → logprob: -13.125044822692871
    4. '
' → logprob: -14.125044822692871
    5. '```' → logprob: -15.625044822692871
    6. '  ' → logprob: -16.062543869018555
    7. '       ' → logprob: -16.125043869018555
    8. '    ' → logprob: -16.187543869018555
    9. '2' → logprob: -16.312543869018555
    10. '           ' → logprob: -16.312543869018555

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014803402591496706
    2. '2' → logprob: -7.5014801025390625
    3. '100' → logprob: -7.6264801025390625
    4. '3' → logprob: -10.001480102539062
    5. '10' → logprob: -10.001480102539062
    6. '7' → logprob: -10.126480102539062
    7. '5' → logprob: -10.626480102539062
    8. '101' → logprob: -10.626480102539062
    9. 'mod' → logprob: -11.001480102539062
    10. '123' → logprob: -11.001480102539062

Token 581: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010156603530049324
    2. ')*' → logprob: -7.001015663146973
    3. '*' → logprob: -10.126015663146973
    4. ' )' → logprob: -10.251015663146973
    5. '*)' → logprob: -11.626015663146973
    6. '   ' → logprob: -11.751015663146973
    7. ' *' → logprob: -12.001015663146973
    8. ')
' → logprob: -13.001015663146973
    9. '```' → logprob: -14.126015663146973
    10. '       ' → logprob: -14.876015663146973

Token 582: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03970196098089218
    2. '*' → logprob: -3.2897019386291504
    3. ')' → logprob: -6.41470193862915
    4. ' ' → logprob: -12.289702415466309
    5. ')*' → logprob: -12.414702415466309
    6. '   ' → logprob: -12.664702415466309
    7. 'pow' → logprob: -13.039702415466309
    8. ' )' → logprob: -13.664702415466309
    9. '       ' → logprob: -14.039702415466309
    10. '    ' → logprob: -14.164702415466309

Token 583: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -7.743758760625497e-05
    2. ' pow' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.875077247619629
    4. 'p' → logprob: -14.500077247619629
    5. '       ' → logprob: -14.875077247619629
    6. '           ' → logprob: -15.500077247619629
    7. '(pow' → logprob: -16.000078201293945
    8. '    ' → logprob: -16.625078201293945
    9. '
' → logprob: -16.750078201293945
    10. ' ' → logprob: -16.750078201293945

Token 584: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.953082341467962e-05
    2. '[' → logprob: -10.500039100646973
    3. '```' → logprob: -12.125039100646973
    4. '(' → logprob: -12.500039100646973
    5. ' ' → logprob: -13.250039100646973
    6. 'pow' → logprob: -14.875039100646973
    7. '   ' → logprob: -15.125039100646973
    8. '(pow' → logprob: -15.625039100646973
    9. '[
' → logprob: -17.25004005432129
    10. '       ' → logprob: -17.37504005432129

Token 585: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.625009536743164
    3. 'i' → logprob: -15.500009536743164
    4. ' [' → logprob: -15.625009536743164
    5. '   ' → logprob: -16.500009536743164
    6. '[
' → logprob: -16.625009536743164
    7. '(i' → logprob: -16.875009536743164
    8. '[(' → logprob: -17.000009536743164
    9. '
' → logprob: -18.500009536743164
    10. '[I' → logprob: -18.500009536743164

Token 586: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4579077959060669
    2. '])' → logprob: -1.082907795906067
    3. ')' → logprob: -3.7079076766967773
    4. ']' → logprob: -5.832907676696777
    5. '   ' → logprob: -8.082907676696777
    6. '%' → logprob: -8.332907676696777
    7. ')%' → logprob: -8.457907676696777
    8. ']%' → logprob: -8.707907676696777
    9. '[' → logprob: -9.207907676696777
    10. '       ' → logprob: -9.707907676696777

Token 587: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06313216686248779
    2. '%' → logprob: -2.8131322860717773
    3. ')' → logprob: -6.813132286071777
    4. ')%' → logprob: -9.688132286071777
    5. '%i' → logprob: -13.938132286071777
    6. '       ' → logprob: -15.063132286071777
    7. '   ' → logprob: -15.563132286071777
    8. '%x' → logprob: -15.688132286071777
    9. ' ' → logprob: -15.813132286071777
    10. '%n' → logprob: -16.06313133239746

Token 588: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2664456789934775e-06
    2. ' mod' → logprob: -13.625000953674316
    3. '(mod' → logprob: -18.875001907348633
    4. '           ' → logprob: -19.250001907348633
    5. 'self' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '       ' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.375001907348633
    9. '	mod' → logprob: -21.875001907348633
    10. '```' → logprob: -23.000001907348633

Token 589: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18472830951213837
    2. '       ' → logprob: -2.0597283840179443
    3. 'def' (adapté à ' def') → logprob: -3.9347283840179443
    4. '        
' → logprob: -3.9347283840179443
    5. '   ' → logprob: -7.434728145599365
    6. '<|end|>' → logprob: -7.559728145599365
    7. '    
' → logprob: -8.309728622436523
    8. '

' → logprob: -9.184728622436523
    9. '            
' → logprob: -9.184728622436523
    10. ' def' → logprob: -9.309728622436523

Token 592: ' calc' (ID: 25691)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.05205526947975159
    2. ' get' → logprob: -3.5520553588867188
    3. '__' → logprob: -4.552055358886719
    4. 'hash' → logprob: -5.427055358886719
    5. 'query' → logprob: -6.052055358886719
    6. 'calc' → logprob: -6.552055358886719
    7. ' __' → logprob: -7.677055358886719
    8. 'sub' → logprob: -7.802055358886719
    9. 'pow' → logprob: -8.177055358886719
    10. 'at' → logprob: -8.177055358886719

Token 593: '_hash' (ID: 20844)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28203025460243225
    2. '(self' → logprob: -1.9070302248001099
    3. '_' → logprob: -3.0320303440093994
    4. '_hash' → logprob: -4.15703010559082
    5. '<|end|>' → logprob: -4.65703010559082
    6. '(
' → logprob: -5.28203010559082
    7. '```' → logprob: -6.15703010559082
    8. ' (' → logprob: -6.53203010559082
    9. 'hash' → logprob: -6.53203010559082
    10. '(x' → logprob: -7.03203010559082

Token 594: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.375015258789062
    4. '(s' → logprob: -15.625015258789062
    5. 'self' → logprob: -16.000015258789062
    6. '   ' → logprob: -17.000015258789062
    7. '       ' → logprob: -17.375015258789062
    8. '(
' → logprob: -17.375015258789062
    9. '(start' → logprob: -18.500015258789062
    10. ' ' → logprob: -19.500015258789062

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008188001229427755
    2. ',start' → logprob: -7.625818729400635
    3. ' ,' → logprob: -8.625819206237793
    4. 'self' → logprob: -9.875819206237793
    5. '(start' → logprob: -10.250819206237793
    6. ',i' → logprob: -11.375819206237793
    7. '[start' → logprob: -11.500819206237793
    8. '       ' → logprob: -11.875819206237793
    9. ',s' → logprob: -12.250819206237793
    10. 'start' → logprob: -12.500819206237793

Token 596: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0873044952750206
    2. 'start' → logprob: -3.4623045921325684
    3. 'left' → logprob: -3.5873045921325684
    4. 'self' → logprob: -4.087304592132568
    5. ' l' → logprob: -5.087304592132568
    6. ' left' → logprob: -7.587304592132568
    7. 'L' → logprob: -8.08730411529541
    8. ' start' → logprob: -8.21230411529541
    9. 's' → logprob: -9.08730411529541
    10. ' self' → logprob: -9.21230411529541

Token 597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001684981834841892
    2. ' ,' → logprob: -8.750168800354004
    3. ',l' → logprob: -13.375168800354004
    4. '       ' → logprob: -13.500168800354004
    5. ',int' → logprob: -13.750168800354004
    6. ',r' → logprob: -14.125168800354004
    7. ',f' → logprob: -14.125168800354004
    8. '   ' → logprob: -14.125168800354004
    9. ',n' → logprob: -14.750168800354004
    10. 'ex' → logprob: -14.875168800354004

Token 598: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.588793960167095e-05
    2. ' r' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.500076293945312
    4. 'length' → logprob: -14.875076293945312
    5. '	r' → logprob: -17.375076293945312
    6. '```' → logprob: -17.750076293945312
    7. 'len' → logprob: -18.250076293945312
    8. ' ' → logprob: -19.000076293945312
    9. '       ' → logprob: -19.125076293945312
    10. 'l' → logprob: -19.500076293945312

Token 599: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2523323595523834
    2. '):' → logprob: -1.502332329750061
    3. '):
' → logprob: -8.50233268737793
    4. ',' → logprob: -9.12733268737793
    5. '       ' → logprob: -9.87733268737793
    6. '   ' → logprob: -11.00233268737793
    7. ')' → logprob: -11.37733268737793
    8. '):

' → logprob: -12.50233268737793
    9. '```' → logprob: -13.12733268737793
    10. ':' → logprob: -13.50233268737793

Token 600: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2027004957199097
    2. '       ' → logprob: -1.3277004957199097
    3. '(' → logprob: -1.4527004957199097
    4. '           ' → logprob: -2.452700614929199
    5. ' (' → logprob: -2.577700614929199
    6. '(self' → logprob: -4.202700614929199
    7. ':
' → logprob: -5.202700614929199
    8. '[' → logprob: -5.577700614929199
    9. ':return' → logprob: -5.827700614929199
    10. '               ' → logprob: -6.077700614929199

Token 601: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5155825614929199
    2. 'return' → logprob: -1.51558256149292
    3. '           ' → logprob: -1.76558256149292
    4. '               ' → logprob: -5.14058256149292
    5. '       ' → logprob: -5.51558256149292
    6. '   ' → logprob: -8.015583038330078
    7. '	return' → logprob: -8.015583038330078
    8. '	       ' → logprob: -8.015583038330078
    9. '<|end|>' → logprob: -8.390583038330078
    10. ' ' → logprob: -8.515583038330078

Token 602: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28897392749786377
    2. 'return' → logprob: -1.7889739274978638
    3. ' return' → logprob: -3.163973808288574
    4. '               ' → logprob: -3.538973808288574
    5. ' (' → logprob: -5.913973808288574
    6. '(' → logprob: -6.163973808288574
    7. '(self' → logprob: -6.413973808288574
    8. 'Hash' → logprob: -6.538973808288574
    9. '       ' → logprob: -6.913973808288574
    10. 'self' → logprob: -6.913973808288574

Token 603: ' Computes' (ID: 165922)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.56195068359375
    2. ' return' → logprob: -1.06195068359375
    3. 'return' → logprob: -3.31195068359375
    4. '               ' → logprob: -3.56195068359375
    5. '       ' → logprob: -5.43695068359375
    6. ' Calculates' → logprob: -5.68695068359375
    7. '#' → logprob: -5.81195068359375
    8. '	       ' → logprob: -6.31195068359375
    9. ' ' → logprob: -6.68695068359375
    10. ' #' → logprob: -6.93695068359375

Token 604: ' the' (ID: 290)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16739335656166077
    2. ' the' → logprob: -2.792393445968628
    3. '(self' → logprob: -2.917393445968628
    4. ' self' → logprob: -4.542393207550049
    5. '(' → logprob: -4.917393207550049
    6. '(Hash' → logprob: -5.417393207550049
    7. 'self' → logprob: -5.542393207550049
    8. 'the' → logprob: -5.792393207550049
    9. ' hash' → logprob: -5.792393207550049
    10. 'Hash' → logprob: -6.292393207550049

Token 605: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.02647794783115387
    2. ' hash' → logprob: -3.6514780521392822
    3. 'rolling' → logprob: -9.526477813720703
    4. ' rolling' → logprob: -10.401477813720703
    5. 'substring' → logprob: -11.276477813720703
    6. 'sub' → logprob: -11.526477813720703
    7. 'roll' → logprob: -11.651477813720703
    8. '(hash' → logprob: -11.776477813720703
    9. '	hash' → logprob: -12.026477813720703
    10. 'h' → logprob: -12.401477813720703

Token 606: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.03050718829035759
    2. ' of' → logprob: -3.9055070877075195
    3. 'value' → logprob: -5.0305070877075195
    4. '_value' → logprob: -7.0305070877075195
    5. ' ' → logprob: -7.2805070877075195
    6. ' (' → logprob: -7.5305070877075195
    7. '(l' → logprob: -7.9055070877075195
    8. '(' → logprob: -8.03050708770752
    9. '[' → logprob: -8.53050708770752
    10. '       ' → logprob: -9.03050708770752

Token 607: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.26603272557258606
    2. ' for' → logprob: -1.5160326957702637
    3. '[' → logprob: -5.641032695770264
    4. '(' → logprob: -5.641032695770264
    5. '(l' → logprob: -6.141032695770264
    6. ' (' → logprob: -6.266032695770264
    7. '       ' → logprob: -6.641032695770264
    8. ')' → logprob: -8.391033172607422
    9. ' from' → logprob: -8.391033172607422
    10. '   ' → logprob: -8.516033172607422

Token 608: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4255273938179016
    2. 'the' → logprob: -2.050527334213257
    3. 'sub' → logprob: -2.300527334213257
    4. ' a' → logprob: -2.550527334213257
    5. ' sub' → logprob: -4.050527572631836
    6. ' subse' → logprob: -5.050527572631836
    7. 'a' → logprob: -5.675527572631836
    8. ' l' → logprob: -5.800527572631836
    9. ' [' → logprob: -6.550527572631836
    10. 'substring' → logprob: -6.675527572631836

Token 609: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.021083403378725052
    2. ' sub' → logprob: -4.021083354949951
    3. 'substring' → logprob: -6.771083354949951
    4. ' subse' → logprob: -7.021083354949951
    5. ' substring' → logprob: -7.146083354949951
    6. 'sequence' → logprob: -10.14608383178711
    7. 'segment' → logprob: -10.27108383178711
    8. ' segment' → logprob: -11.39608383178711
    9. ' sequence' → logprob: -11.89608383178711
    10. '[sub' → logprob: -12.89608383178711

Token 610: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.03858942911028862
    2. 'sequence' → logprob: -3.2885894775390625
    3. 'string' → logprob: -8.538589477539062
    4. 'list' → logprob: -8.788589477539062
    5. '_array' → logprob: -9.663589477539062
    6. ' sequence' → logprob: -10.663589477539062
    7. 'rray' → logprob: -10.788589477539062
    8. '[' → logprob: -10.788589477539062
    9. '       ' → logprob: -11.413589477539062
    10. '[array' → logprob: -11.663589477539062

Token 611: ' seq' (ID: 26775)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0022119891364127398
    2. ' [' → logprob: -6.627212047576904
    3. ' from' → logprob: -7.627212047576904
    4. 'from' → logprob: -8.877211570739746
    5. ' l' → logprob: -9.627211570739746
    6. '[' → logprob: -9.752211570739746
    7. '(l' → logprob: -10.502211570739746
    8. '```' → logprob: -10.502211570739746
    9. '[from' → logprob: -10.627211570739746
    10. 'l' → logprob: -10.627211570739746

Token 612: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00011975488450843841
    2. '[' → logprob: -9.125120162963867
    3. '[
' → logprob: -12.125120162963867
    4. '   ' → logprob: -12.750120162963867
    5. ' [' → logprob: -14.750120162963867
    6. '[i' → logprob: -15.375120162963867
    7. '```' → logprob: -15.375120162963867
    8. '	l' → logprob: -15.500120162963867
    9. 'l' → logprob: -15.625120162963867
    10. '       ' → logprob: -15.750120162963867

Token 613: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.2129773199558258
    2. ':' → logprob: -1.7129772901535034
    3. ' :' → logprob: -4.712977409362793
    4. '[r' → logprob: -6.962977409362793
    5. ' r' → logprob: -7.712977409362793
    6. ']' → logprob: -7.962977409362793
    7. ',' → logprob: -8.212977409362793
    8. 'r' → logprob: -8.587977409362793
    9. '   ' → logprob: -8.837977409362793
    10. '+' → logprob: -10.337977409362793

Token 614: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17963366210460663
    2. '])' → logprob: -2.304633617401123
    3. '+' → logprob: -2.804633617401123
    4. ')' → logprob: -5.804633617401123
    5. ']
' → logprob: -8.054634094238281
    6. ' +' → logprob: -8.304634094238281
    7. '],' → logprob: -8.554634094238281
    8. '   ' → logprob: -9.304634094238281
    9. '].' → logprob: -9.679634094238281
    10. '])
' → logprob: -10.554634094238281

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006702934857457876
    2. '"""
' → logprob: -6.381702899932861
    3. '       ' → logprob: -6.881702899932861
    4. 'return' → logprob: -7.256702899932861
    5. '               ' → logprob: -7.631702899932861
    6. '<|end|>' → logprob: -7.756702899932861
    7. '
' → logprob: -8.13170337677002
    8. ' (' → logprob: -8.13170337677002
    9. ' return' → logprob: -8.25670337677002
    10. '  
' → logprob: -8.38170337677002

Token 616: ' Args' (ID: 39185)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0050039291381836
    2. ' 
' → logprob: -1.2550039291381836
    3. '       ' → logprob: -1.8800039291381836
    4. ' return' → logprob: -2.6300039291381836
    5. '  
' → logprob: -3.7550039291381836
    6. 'return' → logprob: -3.8800039291381836
    7. '```' → logprob: -4.005003929138184
    8. '<|end|>' → logprob: -4.130003929138184
    9. '\n' → logprob: -5.005003929138184
    10. ' (' → logprob: -5.255003929138184

Token 617: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15876062214374542
    2. ' (' → logprob: -2.6587605476379395
    3. '       ' → logprob: -3.9087605476379395
    4. '):
' → logprob: -4.1587605476379395
    5. '<|end|>' → logprob: -4.1587605476379395
    6. ':' → logprob: -4.7837605476379395
    7. '   ' → logprob: -6.0337605476379395
    8. '               ' → logprob: -6.1587605476379395
    9. '```' → logprob: -6.5337605476379395
    10. '[' → logprob: -6.6587605476379395

Token 618: '               ' (ID: 506)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10725744068622589
    2. ' l' → logprob: -2.60725736618042
    3. '           ' → logprob: -4.35725736618042
    4. '(l' → logprob: -5.48225736618042
    5. '            ' → logprob: -6.48225736618042
    6. 'l' → logprob: -6.60725736618042
    7. ',' → logprob: -6.85725736618042
    8. ' self' → logprob: -7.10725736618042
    9. ' ' → logprob: -7.10725736618042
    10. '       ' → logprob: -7.23225736618042

Token 619: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0485946387052536
    2. 'l' (adapté à ' l') → logprob: -3.0485947132110596
    3. '       ' → logprob: -13.17359447479248
    4. '           ' → logprob: -13.42359447479248
    5. '   ' → logprob: -13.54859447479248
    6. '	l' → logprob: -13.92359447479248
    7. ' self' → logprob: -14.42359447479248
    8. 'self' → logprob: -14.67359447479248
    9. ' ' → logprob: -15.29859447479248
    10. ' ' → logprob: -15.42359447479248

Token 620: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03243723511695862
    2. '<|end|>' → logprob: -4.157437324523926
    3. ' ,' → logprob: -4.282437324523926
    4. ':' → logprob: -6.532437324523926
    5. '<|end|>' → logprob: -8.032437324523926
    6. ',
' → logprob: -8.282437324523926
    7. '   ' → logprob: -9.282437324523926
    8. ')' → logprob: -9.282437324523926
    9. '):
' → logprob: -9.782437324523926
    10. '):' → logprob: -10.407437324523926

Token 621: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002222516923211515
    2. ')' → logprob: -8.625222206115723
    3. ':int' → logprob: -10.625222206115723
    4. ' int' → logprob: -11.375222206115723
    5. '[int' → logprob: -12.500222206115723
    6. ']int' → logprob: -14.000222206115723
    7. '):' → logprob: -14.750222206115723
    8. ',int' → logprob: -14.875222206115723
    9. '):
' → logprob: -15.125222206115723
    10. ',' → logprob: -15.125222206115723

Token 622: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005911595653742552
    2. ' ,' → logprob: -8.500591278076172
    3. ')' → logprob: -8.625591278076172
    4. '<|end|>' → logprob: -9.250591278076172
    5. ',
' → logprob: -10.125591278076172
    6. ',r' → logprob: -10.500591278076172
    7. '   ' → logprob: -10.750591278076172
    8. '):' → logprob: -12.250591278076172
    9. '):
' → logprob: -12.875591278076172
    10. ':' → logprob: -13.125591278076172

Token 623: ' Start' (ID: 7972)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4054906368255615
    2. 'l' → logprob: -1.1554906368255615
    3. ')' → logprob: -5.030490875244141
    4. '               ' → logprob: -5.155490875244141
    5. '           ' → logprob: -5.155490875244141
    6. '            ' → logprob: -9.53049087524414
    7. '```' → logprob: -10.03049087524414
    8. '                   ' → logprob: -10.40549087524414
    9. ' start' → logprob: -10.53049087524414
    10. 'start' → logprob: -10.65549087524414

Token 624: ' index' (ID: 3472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38040176033973694
    2. ')' → logprob: -1.7554017305374146
    3. '           ' → logprob: -2.380401849746704
    4. ',' → logprob: -3.630401849746704
    5. '```' → logprob: -5.005401611328125
    6. 'index' → logprob: -5.255401611328125
    7. '=' → logprob: -6.005401611328125
    8. ' ,' → logprob: -6.755401611328125
    9. '            ' → logprob: -7.005401611328125
    10. '       ' → logprob: -7.005401611328125

Token 625: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3368392586708069
    2. '           ' → logprob: -1.836839199066162
    3. '               ' → logprob: -2.836839199066162
    4. '<|end|>' → logprob: -2.836839199066162
    5. '<|end|>' → logprob: -6.336839199066162
    6. '```' → logprob: -6.711839199066162
    7. '[' → logprob: -6.836839199066162
    8. ' (' → logprob: -6.961839199066162
    9. '):
' → logprob: -7.086839199066162
    10. '       ' → logprob: -7.211839199066162

Token 626: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6005756258964539
    2. 'the' → logprob: -1.7255756855010986
    3. 'sub' → logprob: -1.8505756855010986
    4. ' sub' → logprob: -2.2255756855010986
    5. 'l' → logprob: -5.3505754470825195
    6. ' l' → logprob: -5.8505754470825195
    7. 'substring' → logprob: -8.22557544708252
    8. ')' → logprob: -8.97557544708252
    9. ' substring' → logprob: -9.35057544708252
    10. ' subse' → logprob: -9.85057544708252

Token 627: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.20188270509243011
    2. ' sub' → logprob: -1.7018827199935913
    3. 'substring' → logprob: -8.701882362365723
    4. ' segment' → logprob: -9.826882362365723
    5. ' substring' → logprob: -9.826882362365723
    6. ' subse' → logprob: -9.951882362365723
    7. ')' → logprob: -10.201882362365723
    8. 'segment' → logprob: -10.451882362365723
    9. 'sequence' → logprob: -10.701882362365723
    10. 'slice' → logprob: -10.951882362365723

Token 628: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.015154024586081505
    2. 'rray' → logprob: -5.140153884887695
    3. '[' → logprob: -6.015153884887695
    4. ')' → logprob: -6.765153884887695
    5. 'r' → logprob: -6.890153884887695
    6. ' array' → logprob: -7.015153884887695
    7. '   ' → logprob: -7.265153884887695
    8. '```' → logprob: -7.515153884887695
    9. ']' → logprob: -7.640153884887695
    10. 'token' → logprob: -8.140153884887695

Token 629: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2761041820049286
    2. '           ' → logprob: -2.151104211807251
    3. '               ' → logprob: -3.026104211807251
    4. '```' → logprob: -3.651104211807251
    5. ' (' → logprob: -4.026103973388672
    6. '<|end|>' → logprob: -4.151103973388672
    7. ',' → logprob: -5.151103973388672
    8. '[' → logprob: -5.901103973388672
    9. ')
' → logprob: -6.401103973388672
    10. '),' → logprob: -6.776103973388672

Token 630: 'inclusive' (ID: 186093)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036133781541138887
    2. '<|end|>' → logprob: -6.378613471984863
    3. '):
' → logprob: -7.503613471984863
    4. 'inclusive' → logprob: -8.253613471984863
    5. ')
' → logprob: -8.378613471984863
    6. 'l' → logprob: -9.003613471984863
    7. ' inclusive' → logprob: -9.128613471984863
    8. '```' → logprob: -9.253613471984863
    9. '           ' → logprob: -9.628613471984863
    10. ' )' → logprob: -9.753613471984863

Token 631: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3893303871154785
    2. ')
' → logprob: -1.1393303871154785
    3. '           ' → logprob: -6.3893303871154785
    4. '):
' → logprob: -7.7643303871154785
    5. '               ' → logprob: -8.63932991027832
    6. '```' → logprob: -9.76432991027832
    7. ',' → logprob: -10.26432991027832
    8. '),' → logprob: -11.13932991027832
    9. ')
' → logprob: -11.51432991027832
    10. '       ' → logprob: -11.51432991027832

Token 632: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9286354780197144
    2. '               ' → logprob: -1.1786354780197144
    3. 'r' → logprob: -1.4286354780197144
    4. ' r' → logprob: -3.678635597229004
    5. ')
' → logprob: -3.928635597229004
    6. '           ' → logprob: -4.803635597229004
    7. '0' → logprob: -6.428635597229004
    8. ' )' → logprob: -7.178635597229004
    9. 'def' → logprob: -7.553635597229004
    10. '),' → logprob: -8.053635597229004

Token 633: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16325870156288147
    2. ')' → logprob: -2.1632587909698486
    3. 'inclusive' → logprob: -4.2882585525512695
    4. '           ' → logprob: -4.6632585525512695
    5. '       ' → logprob: -6.0382585525512695
    6. ',' → logprob: -6.4132585525512695
    7. 'def' → logprob: -6.4132585525512695
    8. 'exclusive' → logprob: -6.6632585525512695
    9. '):
' → logprob: -7.1632585525512695
    10. '               ' → logprob: -7.2882585525512695

Token 634: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1470358967781067
    2. '):
' → logprob: -2.397035837173462
    3. '<=' → logprob: -3.897035837173462
    4. '           ' → logprob: -4.897036075592041
    5. ')
' → logprob: -5.522036075592041
    6. '       ' → logprob: -5.897036075592041
    7. ' <=' → logprob: -6.022036075592041
    8. '   ' → logprob: -6.022036075592041
    9. '):' → logprob: -6.522036075592041
    10. ',' → logprob: -7.022036075592041

Token 635: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.504753589630127
    2. ')
' → logprob: -1.129753589630127
    3. '):
' → logprob: -2.629753589630127
    4. '):' → logprob: -8.004753112792969
    5. '```' → logprob: -8.379753112792969
    6. ').' → logprob: -9.254753112792969
    7. '):

' → logprob: -9.504753112792969
    8. ').
' → logprob: -9.754753112792969
    9. '<|end|>' → logprob: -9.754753112792969
    10. '"""
' → logprob: -9.754753112792969

Token 636: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3257230520248413
    2. '               ' → logprob: -1.7007230520248413
    3. '```' → logprob: -2.450723171234131
    4. ',' → logprob: -6.075723171234131
    5. 'r' → logprob: -6.200723171234131
    6. '       ' → logprob: -6.700723171234131
    7. '``' → logprob: -7.075723171234131
    8. '
' → logprob: -7.575723171234131
    9. ')' → logprob: -7.950723171234131
    10. '"""
' → logprob: -7.950723171234131

Token 637: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.3135548233985901
    2. ' r' → logprob: -1.3135547637939453
    3. '       ' → logprob: -8.688554763793945
    4. '           ' → logprob: -9.938554763793945
    5. '               ' → logprob: -9.938554763793945
    6. '   ' → logprob: -10.563554763793945
    7. ' ' → logprob: -13.688554763793945
    8. ' ' → logprob: -14.813554763793945
    9. '    ' → logprob: -16.063554763793945
    10. '     ' → logprob: -16.063554763793945

Token 638: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6624024510383606
    2. ' +' → logprob: -0.7874024510383606
    3. '<|end|>' → logprob: -3.912402391433716
    4. ':' → logprob: -5.662402629852295
    5. '):' → logprob: -6.162402629852295
    6. ')' → logprob: -6.287402629852295
    7. ',' → logprob: -7.287402629852295
    8. '<|end|>' → logprob: -7.412402629852295
    9. '[' → logprob: -9.287402153015137
    10. ' (' → logprob: -9.537402153015137

Token 639: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.627176768844947e-05
    2. ' int' → logprob: -9.250096321105957
    3. ':int' → logprob: -17.37509536743164
    4. ')' → logprob: -17.75009536743164
    5. '=int' → logprob: -18.00009536743164
    6. '[int' → logprob: -18.62509536743164
    7. '<int' → logprob: -19.37509536743164
    8. '(int' → logprob: -20.00009536743164
    9. '           ' → logprob: -21.12509536743164
    10. '   ' → logprob: -21.75009536743164

Token 640: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29084786772727966
    2. '):
' → logprob: -2.0408477783203125
    3. ':' → logprob: -2.2908477783203125
    4. '+' → logprob: -4.1658477783203125
    5. ' +' → logprob: -6.0408477783203125
    6. ')' → logprob: -6.5408477783203125
    7. ':int' → logprob: -6.7908477783203125
    8. ':
' → logprob: -8.540847778320312
    9. ']:' → logprob: -8.790847778320312
    10. '```' → logprob: -9.165847778320312

Token 641: ' End' (ID: 6437)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3494342267513275
    2. 'r' → logprob: -1.22443425655365
    3. 'int' → logprob: -7.5994343757629395
    4. ' int' → logprob: -7.7244343757629395
    5. ')' → logprob: -10.849433898925781
    6. '(r' → logprob: -11.974433898925781
    7. ' (' → logprob: -12.099433898925781
    8. '```' → logprob: -13.474433898925781
    9. '   ' → logprob: -13.849433898925781
    10. 'l' → logprob: -13.974433898925781

Token 642: ' index' (ID: 3472)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8427651524543762
    2. '+' → logprob: -1.4677650928497314
    3. ' +' → logprob: -1.5927650928497314
    4. 'index' → logprob: -2.9677650928497314
    5. ')' → logprob: -4.4677653312683105
    6. '(r' → logprob: -4.5927653312683105
    7. '   ' → logprob: -4.7177653312683105
    8. ' index' → logprob: -4.7177653312683105
    9. '(' → logprob: -4.8427653312683105
    10. '       ' → logprob: -5.3427653312683105

Token 643: ' of' (ID: 328)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7941882610321045
    2. ' (' → logprob: -1.2941882610321045
    3. ' +' → logprob: -1.5441882610321045
    4. ' of' → logprob: -2.9191882610321045
    5. ')' → logprob: -5.919188499450684
    6. 'of' → logprob: -6.169188499450684
    7. '(l' → logprob: -8.544188499450684
    8. '           ' → logprob: -8.794188499450684
    9. '(' → logprob: -9.044188499450684
    10. '<|end|>' → logprob: -9.169188499450684

Token 644: ' the' (ID: 290)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.872438907623291
    2. 'the' → logprob: -1.122438907623291
    3. ' the' → logprob: -1.372438907623291
    4. ' r' → logprob: -5.997438907623291
    5. 'self' → logprob: -7.747438907623291
    6. ')' → logprob: -9.872438430786133
    7. ' self' → logprob: -10.372438430786133
    8. '   ' → logprob: -10.872438430786133
    9. 'int' → logprob: -11.747438430786133
    10. 'l' → logprob: -11.997438430786133

Token 645: ' sub' (ID: 1543)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01470975298434496
    2. ' r' → logprob: -4.264709949493408
    3. ' sub' → logprob: -8.38970947265625
    4. ')' → logprob: -8.88970947265625
    5. 'sub' → logprob: -9.76470947265625
    6. '   ' → logprob: -10.63970947265625
    7. ' sequence' → logprob: -10.88970947265625
    8. 'right' → logprob: -11.63970947265625
    9. '+' → logprob: -11.76470947265625
    10. 'sequence' → logprob: -11.76470947265625

Token 646: 'array' (ID: 3361)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38662517070770264
    2. ')' → logprob: -1.2616251707077026
    3. 'r' → logprob: -4.511625289916992
    4. '```' → logprob: -4.761625289916992
    5. ']' → logprob: -5.136625289916992
    6. ',
' → logprob: -6.136625289916992
    7. ')
' → logprob: -6.386625289916992
    8. '``' → logprob: -6.761625289916992
    9. '       ' → logprob: -6.761625289916992
    10. 'array' → logprob: -7.011625289916992

Token 647: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.056344985961914
    2. ')' → logprob: -1.181344985961914
    3. ' +' → logprob: -1.556344985961914
    4. '):' → logprob: -2.681344985961914
    5. ' (' → logprob: -3.556344985961914
    6. '):
' → logprob: -3.556344985961914
    7. '           ' → logprob: -5.931344985961914
    8. '```' → logprob: -6.431344985961914
    9. '   ' → logprob: -6.931344985961914
    10. ')+' → logprob: -6.931344985961914

Token 648: 'exclusive' (ID: 196957)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7092494368553162
    2. 'exclusive' → logprob: -1.209249496459961
    3. 'int' → logprob: -2.209249496459961
    4. ')' → logprob: -2.834249496459961
    5. ' exclusive' → logprob: -4.459249496459961
    6. ' r' → logprob: -4.709249496459961
    7. ',' → logprob: -4.834249496459961
    8. 'excluded' → logprob: -5.209249496459961
    9. '),' → logprob: -6.459249496459961
    10. ' int' → logprob: -6.709249496459961

Token 649: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03087405301630497
    2. '):' → logprob: -3.655874013900757
    3. '):
' → logprob: -5.405874252319336
    4. ')
' → logprob: -11.155874252319336
    5. '):

' → logprob: -11.155874252319336
    6. '   ' → logprob: -11.655874252319336
    7. '<|end|>' → logprob: -11.780874252319336
    8. ')`' → logprob: -12.655874252319336
    9. ')>' → logprob: -12.655874252319336
    10. '       ' → logprob: -12.655874252319336

Token 650: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07622972875833511
    2. ':' → logprob: -3.9512298107147217
    3. ')' → logprob: -4.076229572296143
    4. '           ' → logprob: -4.451229572296143
    5. '):
' → logprob: -4.701229572296143
    6. '):' → logprob: -5.201229572296143
    7. ':
' → logprob: -5.451229572296143
    8. '   ' → logprob: -5.576229572296143
    9. '```' → logprob: -7.326229572296143
    10. '[' → logprob: -7.451229572296143

Token 651: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45852288603782654
    2. '):
' → logprob: -1.208522915840149
    3. '           ' → logprob: -3.8335227966308594
    4. ':
' → logprob: -4.458522796630859
    5. ')' → logprob: -4.583522796630859
    6. '):' → logprob: -4.583522796630859
    7. '```' → logprob: -4.958522796630859
    8. '   ' → logprob: -5.583522796630859
    9. ':' → logprob: -5.708522796630859
    10. '               ' → logprob: -8.20852279663086

Token 652: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0018085796618834138
    2. ' self' → logprob: -6.6268086433410645
    3. '(self' → logprob: -8.001808166503906
    4. '           ' → logprob: -9.751808166503906
    5. ' return' → logprob: -10.876808166503906
    6. ' ' → logprob: -11.001808166503906
    7. 'self' → logprob: -11.376808166503906
    8. '   ' → logprob: -11.751808166503906
    9. ' ((' → logprob: -12.251808166503906
    10. ' pow' → logprob: -12.376808166503906

Token 653: '               ' (ID: 506)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10423354059457779
    2. ' self' → logprob: -2.354233503341675
    3. ' Hash' → logprob: -6.479233741760254
    4. '(self' → logprob: -6.854233741760254
    5. 'self' → logprob: -7.479233741760254
    6. '           ' → logprob: -8.104233741760254
    7. ' return' → logprob: -8.479233741760254
    8. ' pow' → logprob: -8.729233741760254
    9. '(Hash' → logprob: -9.979233741760254
    10. ' hash' → logprob: -10.479233741760254

Token 654: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.07906373590230942
    2. ' int' → logprob: -2.579063653945923
    3. '(int' → logprob: -8.704063415527344
    4. ' (' → logprob: -11.829063415527344
    5. '[int' → logprob: -15.079063415527344
    6. '       ' → logprob: -15.454063415527344
    7. 'self' → logprob: -15.704063415527344
    8. '(' → logprob: -16.204063415527344
    9. '((' → logprob: -17.079063415527344
    10. '(self' → logprob: -17.079063415527344

Token 655: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49011513590812683
    2. ' =' → logprob: -1.3651151657104492
    3. '           ' → logprob: -3.365115165710449
    4. '=' → logprob: -3.490115165710449
    5. ')' → logprob: -3.990115165710449
    6. '       ' → logprob: -3.990115165710449
    7. ':
' → logprob: -4.740115165710449
    8. '<|end|>' → logprob: -5.115115165710449
    9. ' ' → logprob: -5.865115165710449
    10. ' (' → logprob: -5.990115165710449

Token 656: ' Hash' (ID: 10242)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.001114616054110229
    2. '(Hash' → logprob: -7.001114845275879
    3. '(self' → logprob: -9.126114845275879
    4. ' Hash' → logprob: -10.376114845275879
    5. '(H' → logprob: -11.126114845275879
    6. '(' → logprob: -11.251114845275879
    7. ' ((' → logprob: -11.751114845275879
    8. '(hash' → logprob: -11.876114845275879
    9. '           ' → logprob: -12.001114845275879
    10. ' self' → logprob: -12.376114845275879

Token 657: ' value' (ID: 1432)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0875701904296875
    2. '_value' → logprob: -1.3375701904296875
    3. '       ' → logprob: -1.5875701904296875
    4. '(' → logprob: -2.4625701904296875
    5. '(self' → logprob: -2.7125701904296875
    6. '(
' → logprob: -3.7125701904296875
    7. ')' → logprob: -5.5875701904296875
    8. '   ' → logprob: -5.7125701904296875
    9. 'Value' → logprob: -5.7125701904296875
    10. '           ' → logprob: -6.0875701904296875

Token 658: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34848901629447937
    2. '           ' → logprob: -1.7234890460968018
    3. ' =' → logprob: -2.9734890460968018
    4. ' of' → logprob: -3.8484890460968018
    5. '   ' → logprob: -4.348488807678223
    6. '=' → logprob: -4.473488807678223
    7. '%' → logprob: -5.723488807678223
    8. '               ' → logprob: -5.848488807678223
    9. '(self' → logprob: -5.848488807678223
    10. ' %' → logprob: -6.348488807678223

Token 659: ' seq' (ID: 26775)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6212983727455139
    2. '(Hash' → logprob: -1.4962983131408691
    3. ' Hash' → logprob: -2.746298313140869
    4. 'self' → logprob: -3.121298313140869
    5. ' self' → logprob: -3.246298313140869
    6. '(self' → logprob: -3.371298313140869
    7. 'Hash' → logprob: -3.371298313140869
    8. ' the' → logprob: -4.121298313140869
    9. 'the' → logprob: -6.371298313140869
    10. 'seq' → logprob: -6.496298313140869

Token 660: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.026545509696006775
    2. '[r' → logprob: -3.651545524597168
    3. '[' → logprob: -8.526545524597168
    4. ' [' → logprob: -11.276545524597168
    5. '```' → logprob: -11.901545524597168
    6. '   ' → logprob: -12.026545524597168
    7. '(l' → logprob: -12.151545524597168
    8. '[
' → logprob: -12.526545524597168
    9. ')' → logprob: -12.901545524597168
    10. '       ' → logprob: -13.151545524597168

Token 661: ':r' (ID: 118417)
  Prédit: ':r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':r' → logprob: -0.01805160567164421
    2. ':' → logprob: -4.143051624298096
    3. 'r' → logprob: -6.768051624298096
    4. ']' → logprob: -7.893051624298096
    5. ' r' → logprob: -8.518051147460938
    6. '[r' → logprob: -8.518051147460938
    7. '(r' → logprob: -10.268051147460938
    8. '   ' → logprob: -10.893051147460938
    9. '	r' → logprob: -11.518051147460938
    10. ',r' → logprob: -11.768051147460938

Token 662: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0702572911977768
    2. '])' → logprob: -2.6952571868896484
    3. ')' → logprob: -8.445257186889648
    4. '[' → logprob: -10.320257186889648
    5. ']
' → logprob: -10.570257186889648
    6. '])]' → logprob: -11.320257186889648
    7. '   ' → logprob: -11.445257186889648
    8. '       ' → logprob: -12.195257186889648
    9. ']))' → logprob: -12.570257186889648
    10. '],' → logprob: -12.695257186889648

Token 663: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06759338080883026
    2. '           ' → logprob: -3.6925933361053467
    3. '   ' → logprob: -4.567593574523926
    4. '<|end|>' → logprob: -4.817593574523926
    5. '[' → logprob: -5.442593574523926
    6. '(' → logprob: -5.567593574523926
    7. '```' → logprob: -5.692593574523926
    8. ':' → logprob: -6.067593574523926
    9. '        ' → logprob: -6.942593574523926
    10. ')' → logprob: -7.317593574523926

Token 664: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1430993527173996
    2. '           ' → logprob: -2.393099308013916
    3. '
' → logprob: -4.018099308013916
    4. '```' → logprob: -5.393099308013916
    5. '        
' → logprob: -5.393099308013916
    6. ' =' → logprob: -6.143099308013916
    7. '<|end|>' → logprob: -6.518099308013916
    8. ':
' → logprob: -6.768099308013916
    9. ':' → logprob: -6.893099308013916
    10. ')' → logprob: -6.893099308013916

Token 665: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14890572428703308
    2. '           ' → logprob: -2.1489057540893555
    3. 'return' → logprob: -4.3989057540893555
    4. ' return' → logprob: -4.7739057540893555
    5. '```' → logprob: -7.7739057540893555
    6. '               ' → logprob: -8.148905754089355
    7. '   ' → logprob: -9.148905754089355
    8. '	       ' → logprob: -9.398905754089355
    9. '	return' → logprob: -10.273905754089355
    10. '{return' → logprob: -11.023905754089355

Token 666: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8037554025650024
    2. 'res' → logprob: -0.9287554025650024
    3. 'h' → logprob: -2.428755283355713
    4. 'val' → logprob: -2.928755283355713
    5. 'ret' → logprob: -5.053755283355713
    6. 'result' → logprob: -6.303755283355713
    7. 'hash' → logprob: -6.303755283355713
    8. '       ' → logprob: -6.428755283355713
    9. 'tmp' → logprob: -7.428755283355713
    10. 'v' → logprob: -7.553755283355713

Token 667: ' Compute' (ID: 45438)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.16850022971630096
    2. 'return' → logprob: -2.4185001850128174
    3. 'val' → logprob: -3.7935001850128174
    4. 'h' → logprob: -4.0435004234313965
    5. 'ret' → logprob: -4.4185004234313965
    6. 'result' → logprob: -5.0435004234313965
    7. 'ans' → logprob: -6.4185004234313965
    8. '(h' → logprob: -6.7935004234313965
    9. 'v' → logprob: -7.0435004234313965
    10. 'x' → logprob: -7.0435004234313965

Token 668: ' raw' (ID: 11428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8097901344299316
    2. 'val' → logprob: -1.6847901344299316
    3. '(h' → logprob: -2.3097901344299316
    4. 'result' → logprob: -3.0597901344299316
    5. 'h' → logprob: -3.1847901344299316
    6. '(H' → logprob: -3.4347901344299316
    7. 'ret' → logprob: -3.6847901344299316
    8. 'tmp' → logprob: -3.8097901344299316
    9. '((' → logprob: -4.184790134429932
    10. 'ans' → logprob: -4.434790134429932

Token 669: ' difference' (ID: 9809)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.42891472578048706
    2. '_val' → logprob: -1.6789147853851318
    3. 'value' → logprob: -2.303914785385132
    4. '=' → logprob: -4.553914546966553
    5. 'v' → logprob: -4.553914546966553
    6. '_value' → logprob: -4.678914546966553
    7. 'hash' → logprob: -4.803914546966553
    8. 'return' → logprob: -5.178914546966553
    9. '_hash' → logprob: -5.303914546966553
    10. ' =' → logprob: -5.428914546966553

Token 670: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741784930229187
    2. '=' → logprob: -0.9741784930229187
    3. '       ' → logprob: -9.974178314208984
    4. '   ' → logprob: -10.724178314208984
    5. '           ' → logprob: -11.224178314208984
    6. 's' → logprob: -12.349178314208984
    7. 'value' → logprob: -12.724178314208984
    8. '=self' → logprob: -12.849178314208984
    9. '_hash' → logprob: -13.099178314208984
    10. '=
' → logprob: -13.474178314208984

Token 671: ' normalize' (ID: 44464)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38214096426963806
    2. ' return' → logprob: -2.257140874862671
    3. 'res' → logprob: -3.632140874862671
    4. 'mod' → logprob: -3.632140874862671
    5. 'pow' → logprob: -3.632140874862671
    6. 'normalize' → logprob: -3.632140874862671
    7. 'result' → logprob: -4.13214111328125
    8. ' res' → logprob: -4.25714111328125
    9. 'adjust' → logprob: -4.38214111328125
    10. '((' → logprob: -4.63214111328125

Token 672: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6981048583984375
    2. '=' → logprob: -1.1981048583984375
    3. 'return' → logprob: -2.3231048583984375
    4. '           ' → logprob: -2.5731048583984375
    5. ' return' → logprob: -4.4481048583984375
    6. 'result' → logprob: -5.8231048583984375
    7. ' (' → logprob: -6.4481048583984375
    8. '```' → logprob: -6.6981048583984375
    9. 'value' → logprob: -6.8231048583984375
    10. 'res' → logprob: -7.0731048583984375

Token 673: ' multiplying' (ID: 181682)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.050486937165260315
    2. ' pow' → logprob: -3.0504870414733887
    3. '(pow' → logprob: -6.425487041473389
    4. '   ' → logprob: -8.67548656463623
    5. ' (' → logprob: -9.55048656463623
    6. '(' → logprob: -11.30048656463623
    7. '       ' → logprob: -12.55048656463623
    8. '    ' → logprob: -12.55048656463623
    9. '```' → logprob: -12.67548656463623
    10. ' ' → logprob: -12.80048656463623

Token 674: ' with' (ID: 483)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.7436375021934509
    2. '(pow' → logprob: -1.2436375617980957
    3. 'pow' → logprob: -2.1186375617980957
    4. 'by' → logprob: -2.2436375617980957
    5. ' with' → logprob: -5.618637561798096
    6. 'with' → logprob: -5.993637561798096
    7. ' pow' → logprob: -6.118637561798096
    8. '   ' → logprob: -7.243637561798096
    9. ' (' → logprob: -7.618637561798096
    10. '((' → logprob: -8.743637084960938

Token 675: ' the' (ID: 290)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0086322957649827
    2. ' pow' → logprob: -4.758632183074951
    3. '(pow' → logprob: -11.13363265991211
    4. '   ' → logprob: -13.63363265991211
    5. '```' → logprob: -13.63363265991211
    6. '
' → logprob: -15.75863265991211
    7. '_pow' → logprob: -15.88363265991211
    8. '    ' → logprob: -16.00863265991211
    9. '       ' → logprob: -16.50863265991211
    10. '``' → logprob: -16.63363265991211

Token 676: ' inverse' (ID: 53743)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.000918604782782495
    2. ' pow' → logprob: -7.000918388366699
    3. '(pow' → logprob: -12.2509183883667
    4. '```' → logprob: -13.7509183883667
    5. '
' → logprob: -14.5009183883667
    6. '   ' → logprob: -15.1259183883667
    7. '_pow' → logprob: -16.250919342041016
    8. '`' → logprob: -16.625919342041016
    9. '``' → logprob: -16.625919342041016
    10. ' ' → logprob: -17.250919342041016

Token 677: ' power' (ID: 3470)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.14056044816970825
    2. ' of' → logprob: -2.6405603885650635
    3. '(pow' → logprob: -3.1405603885650635
    4. ' pow' → logprob: -4.640560626983643
    5. 'of' → logprob: -5.015560626983643
    6. '   ' → logprob: -8.765560150146484
    7. '```' → logprob: -10.265560150146484
    8. ' (' → logprob: -11.140560150146484
    9. '(' → logprob: -11.390560150146484
    10. '    ' → logprob: -11.515560150146484

Token 678: '
' (ID: 198)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.8234661221504211
    2. ' of' → logprob: -0.9484661221504211
    3. '(' → logprob: -2.6984660625457764
    4. 'pow' → logprob: -2.8234660625457764
    5. '[' → logprob: -4.4484663009643555
    6. 'of' → logprob: -4.5734663009643555
    7. ' pow' → logprob: -5.0734663009643555
    8. ' (' → logprob: -5.3234663009643555
    9. '       ' → logprob: -5.5734663009643555
    10. '           ' → logprob: -5.5734663009643555

Token 679: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8846816420555115
    2. '(pow' → logprob: -1.1346817016601562
    3. ' (' → logprob: -2.6346817016601562
    4. 'pow' → logprob: -2.7596817016601562
    5. 'return' → logprob: -3.1346817016601562
    6. '       ' → logprob: -3.5096817016601562
    7. '```' → logprob: -4.009681701660156
    8. '(self' → logprob: -5.009681701660156
    9. '   ' → logprob: -5.009681701660156
    10. ' return' → logprob: -5.009681701660156

Token 680: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017002176493406296
    2. ' return' → logprob: -4.392002105712891
    3. '           ' → logprob: -6.017002105712891
    4. '((' → logprob: -7.017002105712891
    5. '       ' → logprob: -7.392002105712891
    6. '(return' → logprob: -8.39200210571289
    7. '   ' → logprob: -8.64200210571289
    8. '```' → logprob: -10.14200210571289
    9. 'result' → logprob: -10.89200210571289
    10. '               ' → logprob: -11.01700210571289

Token 681: ' ((' (ID: 3536)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1683744192123413
    2. '(self' → logprob: -2.043374538421631
    3. '((' → logprob: -3.793374538421631
    4. ' ((' → logprob: -5.918374538421631
    5. '   ' → logprob: -9.793374061584473
    6. '(H' → logprob: -10.293374061584473
    7. ' ' → logprob: -10.543374061584473
    8. '(' → logprob: -11.043374061584473
    9. '(
' → logprob: -11.918374061584473
    10. '(abs' → logprob: -12.293374061584473

Token 682: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00036049127811565995
    2. '(self' → logprob: -8.000360488891602
    3. ' self' → logprob: -10.625360488891602
    4. '   ' → logprob: -15.250360488891602
    5. '[self' → logprob: -15.875360488891602
    6. '(' → logprob: -16.5003604888916
    7. '           ' → logprob: -16.8753604888916
    8. '	self' → logprob: -16.8753604888916
    9. '       ' → logprob: -17.0003604888916
    10. '
' → logprob: -17.2503604888916

Token 683: '.Hash' (ID: 23095)
  Prédit: '.Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Hash' → logprob: -1.5048530030981055e-06
    2. 'Hash' → logprob: -13.500001907348633
    3. '	Hash' → logprob: -16.750001907348633
    4. '<Hash' → logprob: -17.125001907348633
    5. '.' → logprob: -17.875001907348633
    6. '.H' → logprob: -18.125001907348633
    7. '.hash' → logprob: -18.625001907348633
    8. ' Hash' → logprob: -18.750001907348633
    9. '.Mod' → logprob: -19.500001907348633
    10. ' .' → logprob: -19.875001907348633

Token 684: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00031949623371474445
    2. '[' → logprob: -8.750319480895996
    3. 'r' → logprob: -8.750319480895996
    4. '[
' → logprob: -14.250319480895996
    5. '   ' → logprob: -14.500319480895996
    6. '	r' → logprob: -15.250319480895996
    7. '[self' → logprob: -15.750319480895996
    8. ' [' → logprob: -15.875319480895996
    9. '```' → logprob: -15.875319480895996
    10. '[right' → logprob: -16.000320434570312

Token 685: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005610156804323196
    2. ']-' → logprob: -7.750561237335205
    3. '[' → logprob: -9.500560760498047
    4. ' ]' → logprob: -10.750560760498047
    5. ' -' → logprob: -11.375560760498047
    6. '-' → logprob: -11.375560760498047
    7. '[self' → logprob: -12.375560760498047
    8. '   ' → logprob: -13.250560760498047
    9. '[l' → logprob: -13.750560760498047
    10. '[i' → logprob: -14.375560760498047

Token 686: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009760456159710884
    2. '-' → logprob: -4.63476037979126
    3. ' ' → logprob: -13.009760856628418
    4. ' ' → logprob: -13.884760856628418
    5. '   ' → logprob: -14.759760856628418
    6. ' -
' → logprob: -15.134760856628418
    7. '-self' → logprob: -15.634760856628418
    8. '  ' → logprob: -16.6347599029541
    9. ')' → logprob: -16.7597599029541
    10. ',' → logprob: -16.8847599029541

Token 687: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.251936137676239
    2. ' self' → logprob: -1.5019361972808838
    3. '           ' → logprob: -12.501935958862305
    4. '(self' → logprob: -13.126935958862305
    5. '[self' → logprob: -15.126935958862305
    6. '       ' → logprob: -15.376935958862305
    7. '	self' → logprob: -15.501935958862305
    8. '               ' → logprob: -15.626935958862305
    9. '   ' → logprob: -15.751935958862305
    10. '=self' → logprob: -16.751935958862305

Token 688: '.Hash' (ID: 23095)
  Prédit: '.Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Hash' → logprob: -2.0339031834737398e-05
    2. 'Hash' → logprob: -11.375020027160645
    3. '	Hash' → logprob: -12.250020027160645
    4. '<Hash' → logprob: -12.625020027160645
    5. '_hash' → logprob: -16.37502098083496
    6. '.' → logprob: -16.50002098083496
    7. '.Hidden' → logprob: -16.75002098083496
    8. ' Hash' → logprob: -16.87502098083496
    9. '.Char' → logprob: -16.87502098083496
    10. '.hash' → logprob: -16.87502098083496

Token 689: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.0001490716531407088
    2. 'l' → logprob: -8.87514877319336
    3. '[' → logprob: -12.00014877319336
    4. '[
' → logprob: -13.87514877319336
    5. ' [' → logprob: -14.75014877319336
    6. '	l' → logprob: -14.75014877319336
    7. ' l' → logprob: -14.87514877319336
    8. '[r' → logprob: -14.87514877319336
    9. '   ' → logprob: -15.62514877319336
    10. '(l' → logprob: -15.87514877319336

Token 690: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02203541435301304
    2. '])' → logprob: -3.8970353603363037
    3. ')' → logprob: -7.147035598754883
    4. ']%' → logprob: -7.647035598754883
    5. ']*' → logprob: -9.147035598754883
    6. ']+' → logprob: -10.147035598754883
    7. ' ]' → logprob: -10.522035598754883
    8. '[' → logprob: -11.647035598754883
    9. ']
' → logprob: -11.897035598754883
    10. ')]' → logprob: -12.147035598754883

Token 691: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0019407729851081967
    2. '*' → logprob: -6.251940727233887
    3. ')' → logprob: -11.376940727233887
    4. '   ' → logprob: -15.126940727233887
    5. ' ' → logprob: -15.501940727233887
    6. ')*' → logprob: -16.501941680908203
    7. ' ' → logprob: -17.001941680908203
    8. '*)' → logprob: -17.501941680908203
    9. ' )' → logprob: -17.626941680908203
    10. '       ' → logprob: -17.626941680908203

Token 692: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.03804344683885574
    2. ' pow' → logprob: -3.28804349899292
    3. '       ' → logprob: -14.038043022155762
    4. '           ' → logprob: -14.788043022155762
    5. '   ' → logprob: -15.038043022155762
    6. '        ' → logprob: -15.913043022155762
    7. '(pow' → logprob: -16.038043975830078
    8. '_pow' → logprob: -16.538043975830078
    9. '    ' → logprob: -17.038043975830078
    10. ' ' → logprob: -17.038043975830078

Token 693: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.8889261304575484e-06
    2. 'pow' → logprob: -12.500003814697266
    3. '(pow' → logprob: -17.000003814697266
    4. '```' → logprob: -17.125003814697266
    5. '[' → logprob: -17.625003814697266
    6. ' ' → logprob: -17.750003814697266
    7. ' pow' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '(' → logprob: -19.375003814697266
    10. '³' → logprob: -19.500003814697266

Token 694: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.735893965815194e-05
    2. '[' → logprob: -11.125017166137695
    3. '[self' → logprob: -13.125017166137695
    4. '[len' → logprob: -15.750017166137695
    5. '[r' → logprob: -16.000017166137695
    6. '[-' → logprob: -16.875017166137695
    7. '```' → logprob: -17.000017166137695
    8. '[i' → logprob: -17.000017166137695
    9. '[max' → logprob: -17.125017166137695
    10. 'r' → logprob: -17.375017166137695

Token 695: '[l' (ID: 38286)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.009168371558189392
    2. '[l' → logprob: -4.7591681480407715
    3. '[' → logprob: -7.5091681480407715
    4. '[(' → logprob: -12.50916862487793
    5. ' [' → logprob: -13.63416862487793
    6. '[-' → logprob: -15.50916862487793
    7. 'r' → logprob: -16.00916862487793
    8. '[
' → logprob: -16.25916862487793
    9. '[self' → logprob: -17.00916862487793
    10. '[[' → logprob: -17.00916862487793

Token 696: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1620696783065796
    2. '[r' → logprob: -2.537069797515869
    3. ']' → logprob: -3.037069797515869
    4. '])' → logprob: -4.287069797515869
    5. '[l' → logprob: -5.412069797515869
    6. ')%' → logprob: -5.912069797515869
    7. '%' → logprob: -7.287069797515869
    8. '[' → logprob: -7.662069797515869
    9. ']%' → logprob: -8.287069320678711
    10. '   ' → logprob: -9.662069320678711

Token 697: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013386212289333344
    2. '%' → logprob: -4.763386249542236
    3. ')%' → logprob: -5.388386249542236
    4. ' %' → logprob: -9.013385772705078
    5. ' )' → logprob: -11.013385772705078
    6. '       ' → logprob: -11.138385772705078
    7. '   ' → logprob: -11.638385772705078
    8. '[r' → logprob: -11.763385772705078
    9. ']' → logprob: -12.138385772705078
    10. '```' → logprob: -12.513385772705078

Token 698: ' self' (ID: 1051)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00018518301658332348
    2. 'self' → logprob: -9.000185012817383
    3. ' mod' → logprob: -9.875185012817383
    4. '   ' → logprob: -12.250185012817383
    5. '       ' → logprob: -13.875185012817383
    6. '(mod' → logprob: -14.000185012817383
    7. '           ' → logprob: -14.250185012817383
    8. ' ' → logprob: -14.750185012817383
    9. ')' → logprob: -15.250185012817383
    10. '	mod' → logprob: -15.250185012817383

Token 699: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.00218583014793694
    2. 'mod' → logprob: -6.127185821533203
    3. '```' → logprob: -15.752185821533203
    4. '	mod' → logprob: -15.752185821533203
    5. '.' → logprob: -16.127185821533203
    6. '[' → logprob: -16.752185821533203
    7. ' mod' → logprob: -17.002185821533203
    8. '           ' → logprob: -17.502185821533203
    9. ']' → logprob: -17.627185821533203
    10. '   ' → logprob: -17.752185821533203

Token 700: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002647927321959287
    2. '       ' → logprob: -8.625265121459961
    3. '   ' → logprob: -10.750265121459961
    4. ' )' → logprob: -10.875265121459961
    5. ')%' → logprob: -11.250265121459961
    6. '           ' → logprob: -11.500265121459961
    7. ')
' → logprob: -11.750265121459961
    8. '<|end|>' → logprob: -13.250265121459961
    9. ')#' → logprob: -13.250265121459961
    10. ')>>' → logprob: -13.500265121459961

Token 701: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 702: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014271625317633152
    2. 'a' → logprob: -4.5142717361450195
    3. '
' → logprob: -6.2642717361450195
    4. 'import' → logprob: -8.01427173614502
    5. '    
' → logprob: -8.01427173614502
    6. '```' → logprob: -8.13927173614502
    7. 'def' → logprob: -8.51427173614502
    8. ' a' → logprob: -10.13927173614502
    9. 'n' → logprob: -10.76427173614502
    10. '#' (adapté à ' #') → logprob: -11.01427173614502

Token 703: ' Read' (ID: 5405)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23839034140110016
    2. '#' → logprob: -2.7383904457092285
    3. '   ' → logprob: -2.7383904457092285
    4. 'import' → logprob: -2.9883904457092285
    5. 'n' → logprob: -4.6133904457092285
    6. 'from' → logprob: -4.9883904457092285
    7. 'def' → logprob: -5.4883904457092285
    8. 'b' → logprob: -5.7383904457092285
    9. 'return' → logprob: -6.1133904457092285
    10. 'input' → logprob: -6.3633904457092285

Token 704: ' input' (ID: 3422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06533291935920715
    2. '   ' → logprob: -3.4403328895568848
    3. 'a' → logprob: -4.565332889556885
    4. '()' → logprob: -4.940332889556885
    5. '```' → logprob: -5.690332889556885
    6. 'input' → logprob: -5.815332889556885
    7. ' a' → logprob: -6.190332889556885
    8. 'n' → logprob: -7.440332889556885
    9. '()
' → logprob: -7.440332889556885
    10. ' import' → logprob: -7.690332889556885

Token 705: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2733432948589325
    2. 'a' → logprob: -1.8983433246612549
    3. '
' → logprob: -2.648343324661255
    4. 'import' → logprob: -4.773343086242676
    5. '    
' → logprob: -5.398343086242676
    6. 'n' → logprob: -5.773343086242676
    7. '```' → logprob: -6.898343086242676
    8. ' a' → logprob: -7.773343086242676
    9. 'input' → logprob: -7.773343086242676
    10. ' =' → logprob: -9.523343086242676

Token 706: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10621786117553711
    2. 'n' → logprob: -2.856217861175537
    3. '   ' → logprob: -3.481217861175537
    4. ' a' → logprob: -4.731217861175537
    5. 'a' → logprob: -6.106217861175537
    6. 'import' → logprob: -6.856217861175537
    7. ' import' → logprob: -7.981217861175537
    8. '```' → logprob: -10.106218338012695
    9. '	n' → logprob: -11.106218338012695
    10. '
' → logprob: -12.106218338012695

Token 707: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004846734460443258
    2. '=' → logprob: -5.629846572875977
    3. 'n' → logprob: -7.254846572875977
    4. '   ' → logprob: -7.629846572875977
    5. ',' → logprob: -10.754846572875977
    6. '=n' → logprob: -11.004846572875977
    7. ' n' → logprob: -11.379846572875977
    8. ',n' → logprob: -13.504846572875977
    9. '=int' → logprob: -13.504846572875977
    10. ' =
' → logprob: -14.879846572875977

Token 708: ' the' (ID: 290)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16023042798042297
    2. 'int' → logprob: -1.9102303981781006
    3. '=int' → logprob: -12.78523063659668
    4. '   ' → logprob: -13.78523063659668
    5. '[int' → logprob: -13.91023063659668
    6. ' n' → logprob: -14.16023063659668
    7. 'n' → logprob: -15.53523063659668
    8. '(int' → logprob: -15.66023063659668
    9. '```' → logprob: -15.91023063659668
    10. ' ' → logprob: -16.03523063659668

Token 709: ' length' (ID: 5517)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006733845453709364
    2. ' int' → logprob: -5.0067338943481445
    3. '=int' → logprob: -11.881733894348145
    4. '[int' → logprob: -12.131733894348145
    5. '   ' → logprob: -13.256733894348145
    6. '<int' → logprob: -13.381733894348145
    7. 'n' → logprob: -13.506733894348145
    8. '  ' → logprob: -14.881733894348145
    9. '```' → logprob: -15.131733894348145
    10. 'next' → logprob: -15.506733894348145

Token 710: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11841509491205215
    2. '   ' → logprob: -2.618415117263794
    3. '=' → logprob: -3.493415117263794
    4. 'n' → logprob: -5.493414878845215
    5. ',' → logprob: -5.743414878845215
    6. '=n' → logprob: -7.868414878845215
    7. '```' → logprob: -8.368414878845215
    8. '(n' → logprob: -9.243414878845215
    9. ' of' → logprob: -9.493414878845215
    10. 'of' → logprob: -10.118414878845215

Token 711: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20812807977199554
    2. 'a' → logprob: -1.8331280946731567
    3. 'int' → logprob: -3.958127975463867
    4. ' input' → logprob: -5.208127975463867
    5. 'list' → logprob: -6.208127975463867
    6. 'n' → logprob: -7.958127975463867
    7. 'range' → logprob: -8.208127975463867
    8. 'b' → logprob: -8.833127975463867
    9. '```' → logprob: -8.833127975463867
    10. ' a' → logprob: -9.083127975463867

Token 712: ' arrays' (ID: 38774)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1594483107328415
    2. '=' → logprob: -2.0344483852386475
    3. 'n' → logprob: -4.659448146820068
    4. '   ' → logprob: -5.659448146820068
    5. '()' → logprob: -5.784448146820068
    6. ',' → logprob: -8.909448623657227
    7. '=n' → logprob: -9.284448623657227
    8. 'a' → logprob: -9.534448623657227
    9. '()
' → logprob: -9.909448623657227
    10. '
' → logprob: -10.034448623657227

Token 713: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08652093261480331
    2. '   ' → logprob: -2.8365209102630615
    3. '
' → logprob: -4.086521148681641
    4. ' n' → logprob: -5.086521148681641
    5. ',' → logprob: -7.586521148681641
    6. ',n' → logprob: -8.46152114868164
    7. ' =' → logprob: -8.83652114868164
    8. '\n' → logprob: -9.33652114868164
    9. '```' → logprob: -9.33652114868164
    10. 'import' → logprob: -9.96152114868164

Token 714: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6474863290786743
    2. '
' → logprob: -1.1474863290786743
    3. 'n' → logprob: -2.2724862098693848
    4. ' =' → logprob: -3.5224862098693848
    5. ',' → logprob: -3.7724862098693848
    6. '    
' → logprob: -6.522486209869385
    7. ' n' → logprob: -7.397486209869385
    8. ',n' → logprob: -7.647486209869385
    9. ',
' → logprob: -8.022486686706543
    10. '```' → logprob: -8.397486686706543

Token 715: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015028368216007948
    2. ' b' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.376502990722656
    4. 'a' → logprob: -16.001502990722656
    5. '   ' → logprob: -16.251502990722656
    6. 'n' → logprob: -17.251502990722656
    7. '	b' → logprob: -17.751502990722656
    8. ' ' → logprob: -17.751502990722656
    9. '```' → logprob: -18.001502990722656
    10. '
' → logprob: -18.251502990722656

Token 716: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4131239652633667
    2. 'n' → logprob: -1.1631239652633667
    3. '
' → logprob: -3.7881240844726562
    4. ' n' → logprob: -5.913124084472656
    5. '```' → logprob: -8.163124084472656
    6. '    
' → logprob: -8.663124084472656
    7. '\n' → logprob: -10.288124084472656
    8. 'import' → logprob: -10.788124084472656
    9. ',' → logprob: -10.913124084472656
    10. '	n' → logprob: -11.163124084472656

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1093519926071167
    2. 'n' → logprob: -2.3593521118164062
    3. '```' → logprob: -5.859352111816406
    4. '
' → logprob: -5.984352111816406
    5. '    
' → logprob: -6.484352111816406
    6. ' n' → logprob: -6.484352111816406
    7. '\n' → logprob: -8.859352111816406
    8. ',' → logprob: -9.359352111816406
    9. ',n' → logprob: -9.609352111816406
    10. '[n' → logprob: -9.609352111816406

Token 718: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3080819249153137
    2. ' n' → logprob: -1.808081865310669
    3. '   ' → logprob: -2.308081865310669
    4. '```' → logprob: -6.433082103729248
    5. 'import' → logprob: -9.18308162689209
    6. '	n' → logprob: -12.05808162689209
    7. '
' → logprob: -12.68308162689209
    8. ' import' → logprob: -13.30808162689209
    9. '``' → logprob: -13.43308162689209
    10. '\n' → logprob: -13.93308162689209

Token 719: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5773404836654663
    2. '=' → logprob: -0.8273404836654663
    3. ',' → logprob: -6.827340602874756
    4. '=int' → logprob: -8.702340126037598
    5. '   ' → logprob: -8.827340126037598
    6. '=input' → logprob: -13.077340126037598
    7. 'import' → logprob: -15.452340126037598
    8. ' ,' → logprob: -15.827340126037598
    9. ' =
' → logprob: -15.952340126037598
    10. ' ' → logprob: -16.077341079711914

Token 720: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25192946195602417
    2. ' int' → logprob: -1.501929521560669
    3. '[int' → logprob: -15.62692928314209
    4. 'len' → logprob: -16.626930236816406
    5. '(int' → logprob: -17.126930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '=int' → logprob: -17.251930236816406
    8. '0' → logprob: -17.751930236816406
    9. '	int' → logprob: -18.876930236816406
    10. ' len' → logprob: -19.251930236816406

Token 721: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0013572560856118798
    2. '()' → logprob: -7.001357078552246
    3. 'input' → logprob: -7.751357078552246
    4. '(' → logprob: -11.126357078552246
    5. '=input' → logprob: -14.626357078552246
    6. ' input' → logprob: -16.001358032226562
    7. '()
' → logprob: -16.501358032226562
    8. '(
' → logprob: -17.376358032226562
    9. '().' → logprob: -17.626358032226562
    10. '(...)' → logprob: -18.001358032226562

Token 722: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019678890239447355
    2. '()' → logprob: -6.251967906951904
    3. '().' → logprob: -10.876967430114746
    4. '())
' → logprob: -11.251967430114746
    5. ')' → logprob: -12.126967430114746
    6. '(' → logprob: -14.251967430114746
    7. ' ())' → logprob: -14.501967430114746
    8. '();)' → logprob: -15.626967430114746
    9. '())

' → logprob: -16.001968383789062
    10. '()
' → logprob: -16.001968383789062

Token 723: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761425495147705
    2. '   ' → logprob: -0.8261425495147705
    3. ' a' → logprob: -9.326142311096191
    4. '```' → logprob: -9.576142311096191
    5. '<|end|>' → logprob: -10.951142311096191
    6. '    
' → logprob: -11.076142311096191
    7. '	a' → logprob: -12.701142311096191
    8. '#a' → logprob: -13.326142311096191
    9. ',a' → logprob: -13.951142311096191
    10. '  ' → logprob: -13.951142311096191

Token 724: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01127711869776249
    2. '   ' → logprob: -4.511277198791504
    3. ' a' → logprob: -8.511277198791504
    4. '```' → logprob: -10.761277198791504
    5. '	a' → logprob: -13.136277198791504
    6. '    
' → logprob: -13.386277198791504
    7. '
' → logprob: -13.761277198791504
    8. '<|end|>' → logprob: -14.261277198791504
    9. '#a' → logprob: -14.761277198791504
    10. '#' → logprob: -15.761277198791504

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932300329208374
    2. ' =' → logprob: -0.6932300329208374
    3. ',' → logprob: -9.943229675292969
    4. '   ' → logprob: -11.568229675292969
    5. '[' → logprob: -12.318229675292969
    6. '[]' → logprob: -12.318229675292969
    7. '=[]' → logprob: -12.318229675292969
    8. '_' → logprob: -12.693229675292969
    9. '[:]' → logprob: -13.193229675292969
    10. 'a' → logprob: -13.818229675292969

Token 726: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001502717612311244
    2. ' list' → logprob: -6.501502513885498
    3. '[list' → logprob: -14.751502990722656
    4. '[' → logprob: -16.751502990722656
    5. '=list' → logprob: -20.251502990722656
    6. '	list' → logprob: -21.001502990722656
    7. '(list' → logprob: -21.001502990722656
    8. 'List' → logprob: -21.251502990722656
    9. 'lis' → logprob: -21.501502990722656
    10. ':list' → logprob: -21.751502990722656

Token 727: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.259079363080673e-05
    2. '(' → logprob: -12.125012397766113
    3. '()' → logprob: -12.250012397766113
    4. 'map' → logprob: -13.375012397766113
    5. '(int' → logprob: -14.875012397766113
    6. '.map' → logprob: -16.12501335144043
    7. '(range' → logprob: -16.12501335144043
    8. ' map' → logprob: -16.75001335144043
    9. '(input' → logprob: -16.75001335144043
    10. '(...)' → logprob: -17.62501335144043

Token 728: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01819712109863758
    2. 'int' → logprob: -4.018197059631348
    3. '[int' → logprob: -11.518197059631348
    4. '<int' → logprob: -11.768197059631348
    5. '(' → logprob: -12.018197059631348
    6. 'str' → logprob: -12.268197059631348
    7. '=int' → logprob: -12.268197059631348
    8. ',int' → logprob: -12.393197059631348
    9. 'input' → logprob: -12.643197059631348
    10. ' int' → logprob: -12.893197059631348

Token 729: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.09397714585065842
    2. ',' → logprob: -2.468977212905884
    3. '(input' → logprob: -5.843976974487305
    4. 'input' → logprob: -6.218976974487305
    5. '   ' → logprob: -9.843976974487305
    6. ' ,' → logprob: -10.093976974487305
    7. '(' → logprob: -11.218976974487305
    8. '(),' → logprob: -11.468976974487305
    9. '=input' → logprob: -12.468976974487305
    10. ' input' → logprob: -12.468976974487305

Token 730: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -20.500335693359375
    4. ',input' → logprob: -20.875335693359375
    5. '<input' → logprob: -21.125335693359375
    6. '=input' → logprob: -21.500335693359375
    7. '_input' → logprob: -21.750335693359375
    8. ' ' → logprob: -21.750335693359375
    9. '   ' → logprob: -21.875335693359375
    10. 'stdin' → logprob: -22.375335693359375

Token 731: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.625
    3. '   ' → logprob: -17.0
    4. '.split' → logprob: -17.5
    5. 'split' → logprob: -18.5
    6. ' ().' → logprob: -18.75
    7. ' .' → logprob: -19.375
    8. '(' → logprob: -19.625
    9. '.' → logprob: -19.625
    10. '()
' → logprob: -20.0

Token 732: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.318681188422488e-05
    2. 'strip' → logprob: -11.25001335144043
    3. 'rstrip' → logprob: -16.87501335144043
    4. ' split' → logprob: -17.75001335144043
    5. '(split' → logprob: -18.12501335144043
    6. 'spl' → logprob: -19.25001335144043
    7. '.split' → logprob: -22.12501335144043
    8. 's' → logprob: -22.50001335144043
    9. '_split' → logprob: -23.12501335144043
    10. 'read' → logprob: -24.50001335144043

Token 733: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004596387501806021
    2. '()))
' → logprob: -5.50459623336792
    3. '()' → logprob: -7.62959623336792
    4. '))' → logprob: -10.754596710205078
    5. '())' → logprob: -12.754596710205078
    6. '(' → logprob: -12.879596710205078
    7. '()));' → logprob: -13.129596710205078
    8. '()))

' → logprob: -13.254596710205078
    9. '()))
' → logprob: -13.879596710205078
    10. '(),' → logprob: -15.629596710205078

Token 734: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.030539214611053467
    2. '   ' → logprob: -3.5305392742156982
    3. ' b' → logprob: -7.155539035797119
    4. '```' → logprob: -12.155539512634277
    5. '	b' → logprob: -14.405539512634277
    6. ' ' → logprob: -14.405539512634277
    7. '
' → logprob: -15.030539512634277
    8. '    
' → logprob: -15.030539512634277
    9. '``' → logprob: -15.280539512634277
    10. '#' → logprob: -15.655539512634277

Token 735: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -4.4418171455617994e-05
    2. ' b' → logprob: -10.125044822692871
    3. '   ' → logprob: -12.375044822692871
    4. '```' → logprob: -16.375043869018555
    5. '	b' → logprob: -19.125043869018555
    6. '#' → logprob: -19.250043869018555
    7. '    
' → logprob: -19.875043869018555
    8. '
' → logprob: -20.250043869018555
    9. ' ' → logprob: -20.375043869018555
    10. '``' → logprob: -20.875043869018555

Token 736: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759437084197998
    2. ' =' → logprob: -0.8259437084197998
    3. '(' → logprob: -12.950943946838379
    4. '   ' → logprob: -14.950943946838379
    5. '()' → logprob: -15.075943946838379
    6. '=list' → logprob: -15.075943946838379
    7. '_' → logprob: -15.450943946838379
    8. ')' → logprob: -15.450943946838379
    9. '=input' → logprob: -16.325942993164062
    10. '=[]' → logprob: -16.325942993164062

Token 737: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0001584850688232109
    2. ' list' → logprob: -8.750158309936523
    3. 'a' → logprob: -18.125158309936523
    4. '=list' → logprob: -19.000158309936523
    5. '(list' → logprob: -20.500158309936523
    6. 'b' → logprob: -21.375158309936523
    7. '[' → logprob: -21.875158309936523
    8. '[list' → logprob: -21.875158309936523
    9. '	list' → logprob: -22.875158309936523
    10. ':list' → logprob: -22.875158309936523

Token 738: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000241085872403346
    2. '(int' → logprob: -9.00024127960205
    3. 'map' → logprob: -9.12524127960205
    4. '(' → logprob: -12.75024127960205
    5. '(list' → logprob: -13.00024127960205
    6. '.map' → logprob: -13.75024127960205
    7. ' (' → logprob: -14.12524127960205
    8. ' map' → logprob: -14.37524127960205
    9. ',map' → logprob: -15.37524127960205
    10. '()' → logprob: -15.50024127960205

Token 739: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003049570368602872
    2. 'int' → logprob: -8.12530517578125
    3. '[int' → logprob: -12.12530517578125
    4. '=int' → logprob: -13.00030517578125
    5. '<int' → logprob: -14.37530517578125
    6. ',int' → logprob: -15.37530517578125
    7. ' int' → logprob: -16.25030517578125
    8. ']int' → logprob: -16.25030517578125
    9. '```' → logprob: -16.75030517578125
    10. ':int' → logprob: -17.75030517578125

Token 740: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1037580817937851
    2. 'int' → logprob: -2.3537580966949463
    3. ',int' → logprob: -6.103757858276367
    4. '[int' → logprob: -7.603757858276367
    5. ',' → logprob: -7.728757858276367
    6. '   ' → logprob: -8.478757858276367
    7. '=int' → logprob: -9.478757858276367
    8. '<int' → logprob: -10.353757858276367
    9. ']int' → logprob: -10.853757858276367
    10. ' int' → logprob: -11.103757858276367

Token 741: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2113979209971149e-05
    2. ' int' → logprob: -11.625012397766113
    3. '(int' → logprob: -13.000012397766113
    4. 'input' → logprob: -14.000012397766113
    5. '[int' → logprob: -16.750011444091797
    6. '   ' → logprob: -17.875011444091797
    7. ' ' → logprob: -19.750011444091797
    8. '=int' → logprob: -20.000011444091797
    9. '<int' → logprob: -20.375011444091797
    10. ',int' → logprob: -20.875011444091797

Token 742: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.6895233531831764e-05
    2. '(int' → logprob: -10.87502670288086
    3. '()' → logprob: -13.12502670288086
    4. 'int' → logprob: -13.25002670288086
    5. '()[' → logprob: -13.62502670288086
    6. '```' → logprob: -14.12502670288086
    7. '[int' → logprob: -14.50002670288086
    8. '   ' → logprob: -15.00002670288086
    9. '().__' → logprob: -15.00002670288086
    10. '=int' → logprob: -15.00002670288086

Token 743: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.610702363715973e-06
    2. 'int' → logprob: -11.625009536743164
    3. ' split' → logprob: -15.375009536743164
    4. 'strip' → logprob: -15.750009536743164
    5. 'skip' → logprob: -16.125009536743164
    6. 'input' → logprob: -16.750009536743164
    7. 'read' → logprob: -17.125009536743164
    8. 'spl' → logprob: -18.375009536743164
    9. 'map' → logprob: -18.750009536743164
    10. '(split' → logprob: -19.375009536743164

Token 744: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04970571771264076
    2. '))' → logprob: -3.049705743789673
    3. '())' → logprob: -6.924705505371094
    4. '()' → logprob: -9.549705505371094
    5. '()))
' → logprob: -10.174705505371094
    6. ')' → logprob: -11.549705505371094
    7. '()));' → logprob: -11.924705505371094
    8. '   ' → logprob: -12.549705505371094
    9. '(' → logprob: -13.424705505371094
    10. '()))

' → logprob: -13.549705505371094

Token 745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04297075793147087
    2. 'diff' → logprob: -3.542970657348633
    3. '    
' → logprob: -5.542970657348633
    4. 'd' → logprob: -5.792970657348633
    5. '#' → logprob: -6.042970657348633
    6. '
' → logprob: -6.167970657348633
    7. '```' → logprob: -7.667970657348633
    8. 'a' → logprob: -7.792970657348633
    9. 'da' → logprob: -7.917970657348633
    10. 'dif' → logprob: -8.792970657348633

Token 746: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4175146818161011
    2. '#' → logprob: -1.917514681816101
    3. 'diff' → logprob: -2.0425148010253906
    4. 'da' → logprob: -3.9175148010253906
    5. 'd' → logprob: -4.042514801025391
    6. 'a' → logprob: -4.292514801025391
    7. '    
' → logprob: -5.042514801025391
    8. '
' → logprob: -5.667514801025391
    9. '```' → logprob: -6.792514801025391
    10. 'dif' → logprob: -7.292514801025391

Token 747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0062251402996480465
    2. '=' → logprob: -5.756225109100342
    3. 'a' → logprob: -6.256225109100342
    4. '_a' → logprob: -7.506225109100342
    5. 's' → logprob: -8.3812255859375
    6. '_' → logprob: -9.5062255859375
    7. 'diff' → logprob: -10.0062255859375
    8. '_diff' → logprob: -10.2562255859375
    9. 'd' → logprob: -10.3812255859375
    10. '_hash' → logprob: -10.7562255859375

Token 748: ' []' (ID: 6126)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.07989972829818726
    2. '[' → logprob: -3.329899787902832
    3. '{' → logprob: -3.454899787902832
    4. 'set' → logprob: -4.954899787902832
    5. 'dict' → logprob: -6.579899787902832
    6. '[]' → logprob: -8.329899787902832
    7. '[-' → logprob: -8.579899787902832
    8. '{}
' → logprob: -8.954899787902832
    9. '0' → logprob: -9.079899787902832
    10. '[n' → logprob: -9.579899787902832

Token 749: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07834432274103165
    2. 'diff' → logprob: -3.4533443450927734
    3. 'for' → logprob: -4.078344345092773
    4. 'a' → logprob: -4.953344345092773
    5. '#' → logprob: -5.453344345092773
    6. ' for' → logprob: -5.703344345092773
    7. '[' → logprob: -6.203344345092773
    8. 'dp' → logprob: -6.203344345092773
    9. 'dif' → logprob: -6.203344345092773
    10. '    
' → logprob: -6.578344345092773

Token 750: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5655525326728821
    2. '   ' → logprob: -1.0655524730682373
    3. '
' → logprob: -3.0655524730682373
    4. 'diff' → logprob: -4.440552711486816
    5. ' for' → logprob: -4.565552711486816
    6. '#' → logprob: -5.440552711486816
    7. '[' → logprob: -5.815552711486816
    8. 'a' → logprob: -5.940552711486816
    9. 'd' → logprob: -6.315552711486816
    10. '    
' → logprob: -6.690552711486816

Token 751: ' To' (ID: 2514)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3047806024551392
    2. '[' → logprob: -1.4297806024551392
    3. 'a' → logprob: -2.0547804832458496
    4. '[a' → logprob: -2.6797804832458496
    5. 'memo' → logprob: -3.0547804832458496
    6. ' [' → logprob: -3.1797804832458496
    7. 'for' → logprob: -3.1797804832458496
    8. '#' → logprob: -3.6797804832458496
    9. '[(' → logprob: -4.17978048324585
    10. '[n' → logprob: -4.17978048324585

Token 752: ' store' (ID: 4897)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5424180626869202
    2. '[]
' → logprob: -1.7924180030822754
    3. 'append' → logprob: -2.0424180030822754
    4. '.append' → logprob: -3.1674180030822754
    5. '=[]' → logprob: -3.4174180030822754
    6. 'import' → logprob: -5.417418003082275
    7. 'for' → logprob: -5.542418003082275
    8. '[' → logprob: -5.542418003082275
    9. '   ' → logprob: -5.542418003082275
    10. '=[]
' → logprob: -5.792418003082275

Token 753: ' all' (ID: 722)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18862809240818024
    2. 'diff' → logprob: -3.0636281967163086
    3. '#' → logprob: -3.3136281967163086
    4. 'the' → logprob: -3.6886281967163086
    5. 'for' → logprob: -4.313628196716309
    6. '(a' → logprob: -4.688628196716309
    7. '[a' → logprob: -4.813628196716309
    8. 'b' → logprob: -5.188628196716309
    9. 'n' → logprob: -5.188628196716309
    10. 'dif' → logprob: -5.313628196716309

Token 754: ' valid' (ID: 4529)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1679585874080658
    2. '(' → logprob: -2.7929584980010986
    3. 'matches' → logprob: -3.0429584980010986
    4. ' positions' → logprob: -3.9179584980010986
    5. 'a' → logprob: -5.292958736419678
    6. '((' → logprob: -5.667958736419678
    7. 'match' → logprob: -6.042958736419678
    8. 'for' → logprob: -6.417958736419678
    9. 'results' → logprob: -6.542958736419678
    10. 'hash' → logprob: -6.667958736419678

Token 755: ' starting' (ID: 8601)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.32602062821388245
    2. ' positions' → logprob: -2.0760207176208496
    3. 'matches' → logprob: -2.4510207176208496
    4. ' matches' → logprob: -4.20102071762085
    5. 'indices' → logprob: -4.20102071762085
    6. ' (' → logprob: -4.57602071762085
    7. 'match' → logprob: -4.95102071762085
    8. ' match' → logprob: -5.57602071762085
    9. '(' → logprob: -5.95102071762085
    10. ' indices' → logprob: -6.32602071762085

Token 756: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4888494610786438
    2. 'indices' → logprob: -1.488849401473999
    3. ' positions' → logprob: -2.988849401473999
    4. '_positions' → logprob: -3.238849401473999
    5. 'points' → logprob: -3.738849401473999
    6. ' indices' → logprob: -4.113849639892578
    7. '_indices' → logprob: -4.363849639892578
    8. 'indexes' → logprob: -4.488849639892578
    9. ' points' → logprob: -5.238849639892578
    10. '_points' → logprob: -7.238849639892578

Token 757: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1644236445426941
    2. 'diff' → logprob: -2.414423704147339
    3. 'for' → logprob: -3.789423704147339
    4. '    
' → logprob: -4.41442346572876
    5. ' for' → logprob: -4.78942346572876
    6. 'a' → logprob: -5.16442346572876
    7. '
' → logprob: -5.66442346572876
    8. '#' → logprob: -6.16442346572876
    9. 'dp' → logprob: -6.28942346572876
    10. 'd' → logprob: -6.78942346572876

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43048951029777527
    2. 'diff' → logprob: -1.1804895401000977
    3. '#' → logprob: -4.055489540100098
    4. 'd' → logprob: -4.930489540100098
    5. 'a' → logprob: -5.180489540100098
    6. 'dif' → logprob: -5.305489540100098
    7. 'da' → logprob: -5.805489540100098
    8. '    
' → logprob: -6.430489540100098
    9. ' diff' → logprob: -7.430489540100098
    10. 'def' → logprob: -7.555489540100098

Token 759: ' #' (ID: 1069)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.27395734190940857
    2. '#' (adapté à ' #') → logprob: -2.6489572525024414
    3. 'd' → logprob: -2.6489572525024414
    4. 'da' → logprob: -3.1489572525024414
    5. 'for' → logprob: -3.8989572525024414
    6. '   ' → logprob: -4.648957252502441
    7. 'dif' → logprob: -4.648957252502441
    8. 'a' → logprob: -5.273957252502441
    9. 'def' → logprob: -5.398957252502441
    10. 'c' → logprob: -6.523957252502441

Token 760: ' Compute' (ID: 45438)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.772341251373291
    2. 'diff' → logprob: -1.397341251373291
    3. 'def' → logprob: -2.147341251373291
    4. 'da' → logprob: -2.272341251373291
    5. 'a' → logprob: -3.897341251373291
    6. 'd' → logprob: -3.897341251373291
    7. 'A' → logprob: -5.022341251373291
    8. 'if' → logprob: -5.022341251373291
    9. 'dif' → logprob: -5.647341251373291
    10. 'for' → logprob: -6.022341251373291

Token 761: ' the' (ID: 290)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.18708732724189758
    2. 'diff' → logprob: -2.187087297439575
    3. 'a' → logprob: -3.937087297439575
    4. 'ad' → logprob: -4.187087535858154
    5. 'd' → logprob: -4.437087535858154
    6. 'A' → logprob: -5.687087535858154
    7. 'dif' → logprob: -5.937087535858154
    8. '#' → logprob: -7.187087535858154
    9. 'aa' → logprob: -7.187087535858154
    10. 'def' → logprob: -7.187087535858154

Token 762: ' difference' (ID: 9809)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.4779934287071228
    2. 'diff' → logprob: -1.1029934883117676
    3. 'dif' → logprob: -4.227993488311768
    4. 'd' → logprob: -4.227993488311768
    5. 'a' → logprob: -5.352993488311768
    6. 'A' → logprob: -5.352993488311768
    7. '#' → logprob: -6.102993488311768
    8. 'difference' → logprob: -6.227993488311768
    9. 'ad' → logprob: -6.852993488311768
    10. 'delta' → logprob: -6.977993488311768

Token 763: ' array' (ID: 2644)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45161768794059753
    2. 'array' → logprob: -1.07661771774292
    3. 'arr' → logprob: -3.95161771774292
    4. '   ' → logprob: -6.70161771774292
    5. ' array' → logprob: -6.82661771774292
    6. 'd' → logprob: -8.201617240905762
    7. 'arrays' → logprob: -8.576617240905762
    8. '_array' → logprob: -8.701617240905762
    9. ' arrays' → logprob: -9.076617240905762
    10. 'arra' → logprob: -9.326617240905762

Token 764: ' for' (ID: 395)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.8361053466796875
    2. 'a' → logprob: -0.9611053466796875
    3. 'diff' → logprob: -2.7111053466796875
    4. 'for' → logprob: -2.9611053466796875
    5. 'd' → logprob: -3.7111053466796875
    6. ' for' → logprob: -4.4611053466796875
    7. '   ' → logprob: -4.5861053466796875
    8. ' da' → logprob: -4.8361053466796875
    9. 'A' → logprob: -5.7111053466796875
    10. ' a' → logprob: -6.2111053466796875

Token 765: ' cyclic' (ID: 139817)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00024132427643053234
    2. ' a' → logprob: -8.50024127960205
    3. 'def' → logprob: -10.50024127960205
    4. '```' → logprob: -13.00024127960205
    5. 'both' → logprob: -13.37524127960205
    6. '#' → logprob: -13.62524127960205
    7. 'i' → logprob: -14.00024127960205
    8. 'n' → logprob: -14.00024127960205
    9. 'b' → logprob: -14.12524127960205
    10. '[' → logprob: -14.87524127960205

Token 766: ' shifts' (ID: 50424)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028566967695951462
    2. ' a' → logprob: -3.77856707572937
    3. '   ' → logprob: -7.153566837310791
    4. 'dif' → logprob: -7.153566837310791
    5. ' shifts' → logprob: -7.403566837310791
    6. ' arrays' → logprob: -7.778566837310791
    7. 'shift' → logprob: -7.778566837310791
    8. '#' → logprob: -7.778566837310791
    9. 'array' → logprob: -8.02856731414795
    10. 'diff' → logprob: -8.02856731414795

Token 767: ' of' (ID: 328)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.12603583931922913
    2. 'a' → logprob: -2.8760359287261963
    3. 'diff' → logprob: -3.8760359287261963
    4. '   ' → logprob: -4.001035690307617
    5. ' da' → logprob: -5.001035690307617
    6. 'A' → logprob: -5.251035690307617
    7. 'for' → logprob: -5.501035690307617
    8. 'd' → logprob: -5.626035690307617
    9. 'aa' → logprob: -7.376035690307617
    10. ' for' → logprob: -7.876035690307617

Token 768: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006960927043110132
    2. ' a' → logprob: -5.006960868835449
    3. '```' → logprob: -9.13196086883545
    4. 'b' → logprob: -10.00696086883545
    5. '`' → logprob: -10.25696086883545
    6. 'def' → logprob: -11.25696086883545
    7. 'the' → logprob: -11.63196086883545
    8. '   ' → logprob: -11.75696086883545
    9. ' the' → logprob: -12.50696086883545
    10. 'both' → logprob: -13.13196086883545

Token 769: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023607931507285684
    2. ' a' → logprob: -8.375236511230469
    3. '```' → logprob: -13.000236511230469
    4. 'b' → logprob: -13.625236511230469
    5. '   ' → logprob: -14.375236511230469
    6. '`' → logprob: -14.750236511230469
    7. '[a' → logprob: -15.250236511230469
    8. 'def' → logprob: -15.750236511230469
    9. '
' → logprob: -15.875236511230469
    10. '(a' → logprob: -16.12523651123047

Token 770: '':
' (ID: 7669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4097764492034912
    2. 'diff' → logprob: -1.9097764492034912
    3. 'd' → logprob: -3.034776449203491
    4. 'a' → logprob: -3.784776449203491
    5. 'da' → logprob: -4.03477668762207
    6. 'for' → logprob: -4.15977668762207
    7. ',' → logprob: -4.28477668762207
    8. ' =' → logprob: -4.28477668762207
    9. '
' → logprob: -4.53477668762207
    10. '#' → logprob: -4.65977668762207

Token 771: '   ' (ID: 271)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.762453019618988
    2. '   ' → logprob: -1.6374530792236328
    3. 'diff' → logprob: -2.012453079223633
    4. ' da' → logprob: -2.512453079223633
    5. 'd' → logprob: -2.762453079223633
    6. 'a' → logprob: -4.012453079223633
    7. ' diff' → logprob: -4.012453079223633
    8. 'for' → logprob: -5.137453079223633
    9. ' d' → logprob: -5.137453079223633
    10. ' for' → logprob: -6.137453079223633

Token 772: ' #' (ID: 1069)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.45296379923820496
    2. 'diff' → logprob: -1.9529638290405273
    3. 'd' → logprob: -2.0779638290405273
    4. 'a' → logprob: -3.4529638290405273
    5. 'for' → logprob: -3.9529638290405273
    6. ' da' → logprob: -4.202963829040527
    7. 'dif' → logprob: -5.327963829040527
    8. ' diff' → logprob: -5.452963829040527
    9. 'ad' → logprob: -5.577963829040527
    10. '   ' → logprob: -5.702963829040527

Token 773: ' a' (ID: 261)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.29941028356552124
    2. 'diff' → logprob: -2.174410343170166
    3. 'd' → logprob: -2.549410343170166
    4. 'a' → logprob: -4.049410343170166
    5. ' da' → logprob: -4.299410343170166
    6. 'for' → logprob: -4.799410343170166
    7. 'dif' → logprob: -5.299410343170166
    8. 'ad' → logprob: -5.674410343170166
    9. ' diff' → logprob: -5.799410343170166
    10. 'A' → logprob: -6.049410343170166

Token 774: '_x' (ID: 7054)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.2745543122291565
    2. 'diff' → logprob: -2.1495542526245117
    3. 'd' → logprob: -2.3995542526245117
    4. '_d' → logprob: -4.024554252624512
    5. 'dif' → logprob: -5.399554252624512
    6. ' =' → logprob: -5.524554252624512
    7. '2' → logprob: -6.274554252624512
    8. 'a' → logprob: -6.649554252624512
    9. 'n' → logprob: -7.149554252624512
    10. '_len' → logprob: -7.774554252624512

Token 775: 'or' (ID: 267)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3352203369140625
    2. 'or' → logprob: -1.4602203369140625
    3. 'd' → logprob: -3.8352203369140625
    4. '_diff' → logprob: -4.4602203369140625
    5. 'diff' → logprob: -5.3352203369140625
    6. '=' → logprob: -5.3352203369140625
    7. '=[' → logprob: -6.2102203369140625
    8. 'x' → logprob: -6.4602203369140625
    9. 'ors' → logprob: -6.9602203369140625
    10. 'dif' → logprob: -7.0852203369140625

Token 776: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6353430151939392
    2. '=' → logprob: -0.7603430151939392
    3. 'or' → logprob: -6.135343074798584
    4. '=[]' → logprob: -8.760342597961426
    5. '=[' → logprob: -9.010342597961426
    6. 'a' → logprob: -9.260342597961426
    7. 's' → logprob: -10.010342597961426
    8. 'xor' → logprob: -10.135342597961426
    9. '=[]
' → logprob: -11.135342597961426
    10. 'x' → logprob: -11.510342597961426

Token 777: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.17455896735191345
    2. '[(' → logprob: -1.9245589971542358
    3. '[' → logprob: -4.549559116363525
    4. '[n' → logprob: -6.424559116363525
    5. 'a' → logprob: -7.174559116363525
    6. ' [' → logprob: -7.674559116363525
    7. '[((' → logprob: -8.424558639526367
    8. '[i' → logprob: -8.549558639526367
    9. ' [(' → logprob: -9.049558639526367
    10. '[]' → logprob: -9.549558639526367

Token 778: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19373877346515656
    2. '(a' → logprob: -1.8187388181686401
    3. '((' → logprob: -4.44373893737793
    4. '0' → logprob: -6.94373893737793
    5. ' a' → logprob: -8.69373893737793
    6. '(i' → logprob: -8.69373893737793
    7. '[a' → logprob: -8.81873893737793
    8. ' (' → logprob: -8.81873893737793
    9. '   ' → logprob: -9.44373893737793
    10. '(' → logprob: -9.69373893737793

Token 779: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34161674976348877
    2. '[' → logprob: -1.3416167497634888
    3. '[(' → logprob: -3.591616630554199
    4. '[x' → logprob: -9.7166166305542
    5. ']' → logprob: -9.8416166305542
    6. '[-' → logprob: -10.0916166305542
    7. 'x' → logprob: -10.2166166305542
    8. '(i' → logprob: -10.4666166305542
    9. 'i' → logprob: -10.4666166305542
    10. '[j' → logprob: -10.7166166305542

Token 780: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013050108216702938
    2. '[i' → logprob: -4.888050079345703
    3. ']^' → logprob: -5.513050079345703
    4. '[' → logprob: -6.888050079345703
    5. '+' → logprob: -8.638050079345703
    6. '^' → logprob: -9.888050079345703
    7. '   ' → logprob: -10.138050079345703
    8. 'i' → logprob: -10.513050079345703
    9. '(i' → logprob: -10.888050079345703
    10. '-' → logprob: -11.138050079345703

Token 781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016017591580748558
    2. ']' → logprob: -4.266017436981201
    3. '0' → logprob: -6.766017436981201
    4. '(' → logprob: -7.891017436981201
    5. 'i' → logprob: -9.14101791381836
    6. '(i' → logprob: -9.51601791381836
    7. '   ' → logprob: -10.64101791381836
    8. ' ' → logprob: -10.76601791381836
    9. 'x' → logprob: -11.01601791381836
    10. '(x' → logprob: -11.39101791381836

Token 782: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026176320388913155
    2. ']^' → logprob: -6.002617835998535
    3. '[i' → logprob: -9.752617835998535
    4. '^' → logprob: -10.252617835998535
    5. '[' → logprob: -11.752617835998535
    6. ' ^' → logprob: -11.877617835998535
    7. ' ]' → logprob: -12.127617835998535
    8. 'n' → logprob: -12.252617835998535
    9. ']-' → logprob: -12.377617835998535
    10. '[n' → logprob: -12.502617835998535

Token 783: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.2739165425300598
    2. ' ^' → logprob: -2.023916482925415
    3. ']' → logprob: -2.273916482925415
    4. ']^' → logprob: -6.023916721343994
    5. 'for' → logprob: -7.523916721343994
    6. 'a' → logprob: -7.648916721343994
    7. '[i' → logprob: -7.648916721343994
    8. '-' → logprob: -8.773916244506836
    9. '[' → logprob: -8.898916244506836
    10. ' for' → logprob: -10.023916244506836

Token 784: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01156444102525711
    2. ' a' → logprob: -4.511564254760742
    3. 'i' → logprob: -7.761564254760742
    4. ' i' → logprob: -10.136564254760742
    5. '   ' → logprob: -10.261564254760742
    6. ' ' → logprob: -12.136564254760742
    7. '  ' → logprob: -13.636564254760742
    8. '```' → logprob: -13.636564254760742
    9. '    ' → logprob: -14.011564254760742
    10. ']' → logprob: -14.136564254760742

Token 785: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016679229447618127
    2. '[(' → logprob: -6.6266679763793945
    3. 'i' → logprob: -8.251667976379395
    4. '(i' → logprob: -9.876667976379395
    5. '[' → logprob: -11.251667976379395
    6. '   ' → logprob: -12.126667976379395
    7. ']' → logprob: -12.376667976379395
    8. '[
' → logprob: -13.001667976379395
    9. '
' → logprob: -14.376667976379395
    10. 'a' → logprob: -14.376667976379395

Token 786: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0051218001171946526
    2. 'for' → logprob: -5.88012170791626
    3. '[i' → logprob: -7.25512170791626
    4. '   ' → logprob: -7.50512170791626
    5. '^' → logprob: -7.88012170791626
    6. ' for' → logprob: -8.755122184753418
    7. '```' → logprob: -8.755122184753418
    8. ' ^' → logprob: -9.005122184753418
    9. '[' → logprob: -9.630122184753418
    10. ']^' → logprob: -10.380122184753418

Token 787: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3151068687438965
    2. 'for' → logprob: -1.3151068687438965
    3. '   ' → logprob: -6.6901068687438965
    4. ' if' → logprob: -8.315107345581055
    5. ' ^' → logprob: -8.690107345581055
    6. 'if' → logprob: -9.690107345581055
    7. ']' → logprob: -9.815107345581055
    8. '       ' → logprob: -10.815107345581055
    9. '^' → logprob: -11.065107345581055
    10. ' ' → logprob: -11.815107345581055

Token 788: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02975141443312168
    2. ' i' → logprob: -3.5297513008117676
    3. '	i' → logprob: -14.654751777648926
    4. ' ' → logprob: -16.15475082397461
    5. '`' → logprob: -16.27975082397461
    6. '<|end|>' → logprob: -16.77975082397461
    7. '(i' → logprob: -16.90475082397461
    8. '   ' → logprob: -17.02975082397461
    9. ')i' → logprob: -17.15475082397461
    10. '
' → logprob: -17.52975082397461

Token 789: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07922497391700745
    2. 'in' → logprob: -2.5792250633239746
    3. 'i' → logprob: -8.204224586486816
    4. ' i' → logprob: -10.329224586486816
    5. 'range' → logprob: -11.704224586486816
    6. ']' → logprob: -12.454224586486816
    7. ' range' → logprob: -12.954224586486816
    8. ')' → logprob: -13.079224586486816
    9. ' ' → logprob: -13.204224586486816
    10. '   ' → logprob: -13.329224586486816

Token 790: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150296062231064
    2. ' range' → logprob: -4.018150329589844
    3. '(range' → logprob: -15.518150329589844
    4. '	range' → logprob: -16.393150329589844
    5. '   ' → logprob: -18.018150329589844
    6. ' ' → logprob: -18.268150329589844
    7. 'in' → logprob: -19.018150329589844
    8. '  ' → logprob: -19.768150329589844
    9. '[' → logprob: -19.893150329589844
    10. 'i' → logprob: -20.018150329589844

Token 791: '(n' (ID: 2406)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6979441046714783
    2. 'n' → logprob: -0.9479441046714783
    3. '(' → logprob: -2.447944164276123
    4. '(n' → logprob: -3.572944164276123
    5. '   ' → logprob: -8.947943687438965
    6. ' n' → logprob: -9.572943687438965
    7. '0' → logprob: -10.322943687438965
    8. '2' → logprob: -10.447943687438965
    9. ' ' → logprob: -10.822943687438965
    10. 'len' → logprob: -11.822943687438965

Token 792: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.016797883436083794
    2. ']' → logprob: -4.76679801940918
    3. ')]
' → logprob: -5.14179801940918
    4. ')' → logprob: -6.51679801940918
    5. '   ' → logprob: -8.39179801940918
    6. '])' → logprob: -9.14179801940918
    7. ']
' → logprob: -9.26679801940918
    8. 'a' → logprob: -9.51679801940918
    9. '])]' → logprob: -9.89179801940918
    10. ',' → logprob: -10.26679801940918

Token 793: ' concaten' (ID: 121942)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.649187445640564
    2. 'a' → logprob: -1.524187445640564
    3. '   ' → logprob: -1.649187445640564
    4. ' =' → logprob: -3.2741875648498535
    5. 'x' → logprob: -5.2741875648498535
    6. ' for' → logprob: -5.3991875648498535
    7. ']' → logprob: -5.3991875648498535
    8. 'for' → logprob: -5.7741875648498535
    9. ']
' → logprob: -5.8991875648498535
    10. '[' → logprob: -6.3991875648498535

Token 794: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.07265394926071167
    2. 'ated' → logprob: -2.6976540088653564
    3. 'a' → logprob: -6.322653770446777
    4. 'ating' → logprob: -7.447653770446777
    5. 'ates' → logprob: -9.697653770446777
    6. '+' → logprob: -9.697653770446777
    7. '(a' → logprob: -9.697653770446777
    8. '=' → logprob: -10.322653770446777
    9. 'e' → logprob: -10.822653770446777
    10. '   ' → logprob: -10.947653770446777

Token 795: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.3718318939208984
    2. '[a' → logprob: -1.3718318939208984
    3. 'a' → logprob: -1.8718318939208984
    4. ' with' → logprob: -1.9968318939208984
    5. '(a' → logprob: -2.1218318939208984
    6. '+a' → logprob: -3.9968318939208984
    7. '+' → logprob: -4.121831893920898
    8. '[' → logprob: -4.496831893920898
    9. ' +' → logprob: -4.746831893920898
    10. '   ' → logprob: -4.746831893920898

Token 796: ' itself' (ID: 8807)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.09002718329429626
    2. 'a' → logprob: -2.590027093887329
    3. ' [' → logprob: -4.715027332305908
    4. '[(' → logprob: -6.965027332305908
    5. '(a' → logprob: -7.590027332305908
    6. ' a' → logprob: -7.590027332305908
    7. '([' → logprob: -10.09002685546875
    8. ' (' → logprob: -10.21502685546875
    9. '[' → logprob: -10.34002685546875
    10. ' [(' → logprob: -11.21502685546875

Token 797: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07366141676902771
    2. 'a' → logprob: -2.8236613273620605
    3. '
' → logprob: -6.0736613273620605
    4. ' +' → logprob: -6.1986613273620605
    5. ' a' → logprob: -6.1986613273620605
    6. ' (' → logprob: -6.4486613273620605
    7. '(a' → logprob: -7.1986613273620605
    8. ' =' → logprob: -7.4486613273620605
    9. ' for' → logprob: -7.5736613273620605
    10. '[' → logprob: -8.323661804199219

Token 798: ' easy' (ID: 4224)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2169291973114014
    2. 'a' → logprob: -1.3419291973114014
    3. 'i' → logprob: -1.5919291973114014
    4. ' i' → logprob: -2.5919291973114014
    5. ' a' → logprob: -2.7169291973114014
    6. ' doubling' → logprob: -4.0919294357299805
    7. ' ' → logprob: -4.2169294357299805
    8. 'dou' → logprob: -4.3419294357299805
    9. ' seamless' → logprob: -4.7169294357299805
    10. 'n' → logprob: -4.9669294357299805

Token 799: ' rotation' (ID: 23769)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9687525629997253
    2. ' indexing' → logprob: -0.9687525629997253
    3. 'cy' → logprob: -1.8437526226043701
    4. ' cyclic' → logprob: -4.093752384185791
    5. 'wr' → logprob: -4.218752384185791
    6. 'handling' → logprob: -5.218752384185791
    7. 'comparison' → logprob: -5.468752384185791
    8. 'cycling' → logprob: -5.468752384185791
    9. 'rolling' → logprob: -5.468752384185791
    10. 'rotation' → logprob: -5.468752384185791

Token 800: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20339757204055786
    2. 'a' → logprob: -1.953397512435913
    3. '
' → logprob: -3.578397512435913
    4. ' =' → logprob: -4.578397750854492
    5. ' a' → logprob: -6.328397750854492
    6. '=' → logprob: -7.578397750854492
    7. ',' → logprob: -8.203397750854492
    8. '[' → logprob: -8.328397750854492
    9. '    
' → logprob: -9.203397750854492
    10. ' ' → logprob: -9.328397750854492

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1306014209985733
    2. 'a' → logprob: -2.130601406097412
    3. ' a' → logprob: -6.380601406097412
    4. '
' → logprob: -6.630601406097412
    5. '```' → logprob: -8.00560188293457
    6. '    
' → logprob: -9.13060188293457
    7. '``' → logprob: -10.38060188293457
    8. '`' → logprob: -10.63060188293457
    9. ',' → logprob: -10.88060188293457
    10. '[' → logprob: -11.13060188293457

Token 802: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.01697498932480812
    2. '   ' → logprob: -4.516974925994873
    3. ' a' → logprob: -5.141974925994873
    4. '#' → logprob: -11.141975402832031
    5. '[' → logprob: -11.516975402832031
    6. '
' → logprob: -11.516975402832031
    7. '[a' → logprob: -11.891975402832031
    8. '```' → logprob: -12.391975402832031
    9. ' ' → logprob: -12.516975402832031
    10. '[
' → logprob: -13.016975402832031

Token 803: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.553032628493384e-05
    2. '_a' → logprob: -9.875075340270996
    3. 'a' → logprob: -11.750075340270996
    4. 'xor' → logprob: -12.000075340270996
    5. '_diff' → logprob: -12.375075340270996
    6. '_' → logprob: -12.875075340270996
    7. '\' → logprob: -15.125075340270996
    8. ' =' → logprob: -15.125075340270996
    9. '_d' → logprob: -15.625075340270996
    10. '_
' → logprob: -15.625075340270996

Token 804: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.32089075446128845
    2. 'xor' → logprob: -1.6958907842636108
    3. '_or' → logprob: -2.9458906650543213
    4. '_x' → logprob: -3.3208906650543213
    5. '=' → logprob: -7.3208909034729
    6. '_' → logprob: -7.8208909034729
    7. ' =' → logprob: -8.195890426635742
    8. 'orb' → logprob: -8.695890426635742
    9. 'orc' → logprob: -9.320890426635742
    10. 'ors' → logprob: -9.320890426635742

Token 805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868909478187561
    2. ' =' → logprob: -1.1368908882141113
    3. '=[' → logprob: -11.01189136505127
    4. 'a' → logprob: -13.38689136505127
    5. ' =[' → logprob: -14.26189136505127
    6. '   ' → logprob: -14.76189136505127
    7. '[' → logprob: -15.63689136505127
    8. ' ' → logprob: -15.76189136505127
    9. '=a' → logprob: -15.76189136505127
    10. '=[]' → logprob: -15.88689136505127

Token 806: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.25904399156570435
    2. '[(' → logprob: -1.5090439319610596
    3. 'a' → logprob: -5.634044170379639
    4. '[' → logprob: -6.134044170379639
    5. ' [' → logprob: -7.634044170379639
    6. '[((' → logprob: -8.00904369354248
    7. '([' → logprob: -8.13404369354248
    8. ' [(' → logprob: -9.00904369354248
    9. '([(' → logprob: -9.88404369354248
    10. '[n' → logprob: -10.63404369354248

Token 807: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012111874530091882
    2. '(a' → logprob: -6.751211166381836
    3. '0' → logprob: -10.251211166381836
    4. ' a' → logprob: -12.626211166381836
    5. '(' → logprob: -14.126211166381836
    6. '[a' → logprob: -14.626211166381836
    7. '((' → logprob: -14.751211166381836
    8. ' (' → logprob: -14.751211166381836
    9. '(i' → logprob: -16.501211166381836
    10. ''a' → logprob: -16.501211166381836

Token 808: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03539435565471649
    2. '[(' → logprob: -3.6603944301605225
    3. '[' → logprob: -5.035394191741943
    4. '[-' → logprob: -6.035394191741943
    5. 'i' → logprob: -9.285394668579102
    6. '[n' → logprob: -10.410394668579102
    7. '(i' → logprob: -10.785394668579102
    8. '0' → logprob: -11.910394668579102
    9. '[j' → logprob: -12.535394668579102
    10. '((' → logprob: -14.160394668579102

Token 809: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03883829340338707
    2. ']' → logprob: -3.5388383865356445
    3. ' -' → logprob: -5.0388383865356445
    4. ']^' → logprob: -6.4138383865356445
    5. '^' → logprob: -7.1638383865356445
    6. '   ' → logprob: -9.788838386535645
    7. '1' → logprob: -10.288838386535645
    8. ' ^' → logprob: -10.788838386535645
    9. ']-' → logprob: -11.288838386535645
    10. ' ' → logprob: -11.663838386535645

Token 810: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'n' → logprob: -16.0000057220459
    4. '0' → logprob: -16.6250057220459
    5. ']' → logprob: -16.7500057220459
    6. 'i' → logprob: -17.3750057220459
    7. '   ' → logprob: -17.5000057220459
    8. '(' → logprob: -18.2500057220459
    9. '  ' → logprob: -18.8125057220459
    10. '2' → logprob: -19.0000057220459

Token 811: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -13.000005722045898
    3. 'n' → logprob: -13.812505722045898
    4. '0' → logprob: -14.375005722045898
    5. ']' → logprob: -14.937505722045898
    6. 'a' → logprob: -15.562505722045898
    7. 'i' → logprob: -15.937505722045898
    8. '(' → logprob: -16.5000057220459
    9. '   ' → logprob: -16.5000057220459
    10. '
' → logprob: -16.6875057220459

Token 812: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16739526391029358
    2. '^' → logprob: -2.0423953533172607
    3. ' ^' → logprob: -4.292395114898682
    4. ']^' → logprob: -4.542395114898682
    5. '[i' → logprob: -10.54239559173584
    6. '[' → logprob: -10.66739559173584
    7. '   ' → logprob: -11.16739559173584
    8. ' ' → logprob: -12.16739559173584
    9. '1' → logprob: -12.29239559173584
    10. ' ]' → logprob: -12.54239559173584

Token 813: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.012683515436947346
    2. ' ^' → logprob: -4.387683391571045
    3. ']' → logprob: -8.887683868408203
    4. ']^' → logprob: -10.887683868408203
    5. 'for' → logprob: -12.262683868408203
    6. '   ' → logprob: -13.637683868408203
    7. ')' → logprob: -13.637683868408203
    8. ' ' → logprob: -14.012683868408203
    9. '^)' → logprob: -14.012683868408203
    10. '^(' → logprob: -14.137683868408203

Token 814: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00028410006780177355
    2. ' a' → logprob: -8.375284194946289
    3. 'i' → logprob: -10.000284194946289
    4. '   ' → logprob: -11.875284194946289
    5. ' i' → logprob: -14.625284194946289
    6. ' ' → logprob: -15.000284194946289
    7. '  ' → logprob: -16.75028419494629
    8. '
' → logprob: -16.87528419494629
    9. '```' → logprob: -17.00028419494629
    10. '[i' → logprob: -17.12528419494629

Token 815: '[i' (ID: 1768)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5771987438201904
    2. 'i' → logprob: -0.8271987438201904
    3. ' i' → logprob: -7.4521989822387695
    4. ' a' → logprob: -8.70219898223877
    5. '   ' → logprob: -8.70219898223877
    6. '[i' → logprob: -8.95219898223877
    7. '1' → logprob: -9.07719898223877
    8. '(i' → logprob: -10.07719898223877
    9. 'n' → logprob: -10.45219898223877
    10. ' ' → logprob: -11.82719898223877

Token 816: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9796683192253113
    2. ']' → logprob: -1.104668378829956
    3. 'for' → logprob: -1.229668378829956
    4. '   ' → logprob: -7.729668140411377
    5. ' if' → logprob: -8.604668617248535
    6. 'if' → logprob: -8.979668617248535
    7. ' ' → logprob: -9.854668617248535
    8. ')' → logprob: -11.229668617248535
    9. ' ]' → logprob: -11.604668617248535
    10. '```' → logprob: -11.979668617248535

Token 817: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4741552472114563
    2. ' for' → logprob: -0.9741552472114563
    3. '   ' → logprob: -9.59915542602539
    4. ' ' → logprob: -12.47415542602539
    5. 'if' → logprob: -12.47415542602539
    6. ' if' → logprob: -13.09915542602539
    7. ']' → logprob: -15.34915542602539
    8. '
' → logprob: -15.97415542602539
    9. '	for' → logprob: -16.22415542602539
    10. '       ' → logprob: -16.59915542602539

Token 818: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014169503934681416
    2. ' i' → logprob: -4.264169692993164
    3. ' in' → logprob: -12.514169692993164
    4. 'in' → logprob: -13.639169692993164
    5. 'range' → logprob: -15.264169692993164
    6. ' ' → logprob: -15.389169692993164
    7. '`' → logprob: -15.639169692993164
    8. '	i' → logprob: -15.764169692993164
    9. '(i' → logprob: -16.639169692993164
    10. '   ' → logprob: -16.889169692993164

Token 819: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6332195401191711
    2. 'in' → logprob: -0.7582195401191711
    3. 'range' → logprob: -7.7582197189331055
    4. 'i' → logprob: -8.883219718933105
    5. ' range' → logprob: -10.133219718933105
    6. ' ' → logprob: -12.508219718933105
    7. ' i' → logprob: -12.633219718933105
    8. 'n' → logprob: -13.133219718933105
    9. '   ' → logprob: -13.633219718933105
    10. '  ' → logprob: -14.383219718933105

Token 820: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002319071936653927
    2. ' range' → logprob: -8.375231742858887
    3. '(range' → logprob: -14.000231742858887
    4. '   ' → logprob: -15.750231742858887
    5. '
' → logprob: -16.125232696533203
    6. '	range' → logprob: -17.625232696533203
    7. 'in' → logprob: -17.875232696533203
    8. ' ' → logprob: -17.875232696533203
    9. '`' → logprob: -18.000232696533203
    10. 'list' → logprob: -18.625232696533203

Token 821: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10453487187623978
    2. 'range' → logprob: -2.354534864425659
    3. '(n' → logprob: -5.604535102844238
    4. '1' → logprob: -8.479535102844238
    5. '(' → logprob: -8.604535102844238
    6. ' range' → logprob: -8.729535102844238
    7. '   ' → logprob: -9.979535102844238
    8. ' n' → logprob: -10.979535102844238
    9. '(range' → logprob: -11.729535102844238
    10. 'len' → logprob: -12.479535102844238

Token 822: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020835913717746735
    2. ')]' → logprob: -3.8958358764648438
    3. ')' → logprob: -8.895835876464844
    4. ' ]' → logprob: -9.520835876464844
    5. ']+' → logprob: -9.645835876464844
    6. '   ' → logprob: -11.770835876464844
    7. ']
' → logprob: -12.645835876464844
    8. ']]' → logprob: -12.895835876464844
    9. '])' → logprob: -13.145835876464844
    10. '}]' → logprob: -13.895835876464844

Token 823: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6871248483657837
    2. '+' → logprob: -0.9371248483657837
    3. '+a' → logprob: -2.812124729156494
    4. 'a' → logprob: -3.437124729156494
    5. '   ' → logprob: -4.562124729156494
    6. '*' → logprob: -7.437124729156494
    7. ' *' → logprob: -7.562124729156494
    8. ' a' → logprob: -8.062125205993652
    9. '*a' → logprob: -8.437125205993652
    10. ')' → logprob: -8.437125205993652

Token 824: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.957014556974173e-05
    2. ' [' → logprob: -9.750069618225098
    3. 'a' → logprob: -11.500069618225098
    4. '   ' → logprob: -14.875069618225098
    5. ' a' → logprob: -15.000069618225098
    6. '([' → logprob: -15.625069618225098
    7. '[' → logprob: -16.12506866455078
    8. '(a' → logprob: -17.00006866455078
    9. '[i' → logprob: -17.25006866455078
    10. '
' → logprob: -18.12506866455078

Token 825: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.061054359131958e-06
    2. '(a' → logprob: -12.375007629394531
    3. ' a' → logprob: -13.125007629394531
    4. '[a' → logprob: -13.750007629394531
    5. '   ' → logprob: -14.500007629394531
    6. ' (' → logprob: -17.00000762939453
    7. 'i' → logprob: -17.37500762939453
    8. ']' → logprob: -18.12500762939453
    9. '(i' → logprob: -18.12500762939453
    10. '
' → logprob: -18.25000762939453

Token 826: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021712594025302678
    2. 'i' → logprob: -8.62521743774414
    3. '[(' → logprob: -10.87521743774414
    4. '(i' → logprob: -11.25021743774414
    5. '[n' → logprob: -12.87521743774414
    6. '   ' → logprob: -14.12521743774414
    7. '[' → logprob: -14.37521743774414
    8. '[j' → logprob: -15.12521743774414
    9. ' i' → logprob: -15.37521743774414
    10. 'a' → logprob: -15.50021743774414

Token 827: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42502307891845703
    2. ' -' → logprob: -1.300023078918457
    3. '   ' → logprob: -3.050023078918457
    4. ']' → logprob: -4.800023078918457
    5. 'for' → logprob: -5.050023078918457
    6. 'i' → logprob: -5.550023078918457
    7. ' for' → logprob: -5.675023078918457
    8. ' ' → logprob: -6.675023078918457
    9. 'n' → logprob: -6.925023078918457
    10. ' i' → logprob: -7.550023078918457

Token 828: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022475497098639607
    2. ' ' → logprob: -8.625225067138672
    3. '0' → logprob: -10.250225067138672
    4. 'n' → logprob: -11.750225067138672
    5. '   ' → logprob: -14.125225067138672
    6. '
' → logprob: -14.625225067138672
    7. ' n' → logprob: -15.125225067138672
    8. '```' → logprob: -15.875225067138672
    9. '(n' → logprob: -16.250225067138672
    10. '(' → logprob: -16.937725067138672

Token 829: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002825561910867691
    2. 'n' → logprob: -6.502825736999512
    3. '0' → logprob: -7.002825736999512
    4. ' ' → logprob: -8.002825736999512
    5. ' n' → logprob: -10.502825736999512
    6. 'i' → logprob: -10.502825736999512
    7. '   ' → logprob: -11.502825736999512
    8. '(n' → logprob: -12.252825736999512
    9. '
' → logprob: -13.127825736999512
    10. '(' → logprob: -13.877825736999512

Token 830: ']' (ID: 60)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.4498949944972992
    2. ']' → logprob: -1.4498950242996216
    3. ' ^' → logprob: -2.074894905090332
    4. ']^' → logprob: -6.199894905090332
    5. '^^' → logprob: -10.824894905090332
    6. '   ' → logprob: -10.949894905090332
    7. 'for' → logprob: -11.074894905090332
    8. ')' → logprob: -11.699894905090332
    9. ' ' → logprob: -11.949894905090332
    10. ' ]' → logprob: -12.074894905090332

Token 831: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.0028083212673664093
    2. ' ^' → logprob: -5.877808094024658
    3. ']^' → logprob: -13.877808570861816
    4. '^^' → logprob: -14.627808570861816
    5. '_^' → logprob: -14.627808570861816
    6. ']' → logprob: -14.877808570861816
    7. '[' → logprob: -15.252808570861816
    8. 'for' → logprob: -15.377808570861816
    9. '^[' → logprob: -15.377808570861816
    10. ' ^=' → logprob: -15.877808570861816

Token 832: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.1424973713001236e-05
    2. ' a' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.875031471252441
    4. '```' → logprob: -18.625030517578125
    5. ' ' → logprob: -19.000030517578125
    6. 'i' → logprob: -19.000030517578125
    7. '  ' → logprob: -20.125030517578125
    8. '	a' → logprob: -20.125030517578125
    9. ']' → logprob: -20.375030517578125
    10. '[a' → logprob: -20.500030517578125

Token 833: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05684012174606323
    2. '[i' → logprob: -2.931840181350708
    3. 'a' → logprob: -6.306839942932129
    4. ' i' → logprob: -9.931839942932129
    5. '   ' → logprob: -10.556839942932129
    6. '(i' → logprob: -10.931839942932129
    7. '[n' → logprob: -11.181839942932129
    8. 'n' → logprob: -11.431839942932129
    9. '{i' → logprob: -12.181839942932129
    10. '```' → logprob: -12.431839942932129

Token 834: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06339781731367111
    2. 'for' → logprob: -2.8133978843688965
    3. 'i' → logprob: -7.6883978843688965
    4. ' for' → logprob: -7.6883978843688965
    5. ')' → logprob: -7.9383978843688965
    6. '   ' → logprob: -9.063397407531738
    7. 'n' → logprob: -10.438397407531738
    8. ' ' → logprob: -13.563397407531738
    9. ' i' → logprob: -13.563397407531738
    10. '}' → logprob: -13.813397407531738

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16023002564907074
    2. ' for' → logprob: -1.910230040550232
    3. '   ' → logprob: -12.285229682922363
    4. '	for' → logprob: -14.660229682922363
    5. ']' → logprob: -15.535229682922363
    6. ' ' → logprob: -15.660229682922363
    7. '```' → logprob: -15.910229682922363
    8. 'i' → logprob: -16.28523063659668
    9. '
' → logprob: -16.53523063659668
    10. '       ' → logprob: -16.53523063659668

Token 836: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011955865193158388
    2. ' i' → logprob: -6.751195430755615
    3. 'in' → logprob: -11.501195907592773
    4. 'range' → logprob: -11.626195907592773
    5. ' in' → logprob: -13.501195907592773
    6. ' range' → logprob: -14.126195907592773
    7. ' ' → logprob: -14.126195907592773
    8. '
' → logprob: -14.251195907592773
    9. '   ' → logprob: -14.251195907592773
    10. '```' → logprob: -14.376195907592773

Token 837: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.021065659821033478
    2. ' in' → logprob: -3.8960657119750977
    3. 'i' → logprob: -7.771065711975098
    4. 'range' → logprob: -9.896065711975098
    5. '(i' → logprob: -10.021065711975098
    6. '(n' → logprob: -13.146065711975098
    7. '(' → logprob: -13.646065711975098
    8. ' i' → logprob: -13.896065711975098
    9. 'n' → logprob: -14.021065711975098
    10. ' range' → logprob: -14.521065711975098

Token 838: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020950057660229504
    2. ' range' → logprob: -8.62520980834961
    3. 'n' → logprob: -10.50020980834961
    4. '(range' → logprob: -13.00020980834961
    5. '(n' → logprob: -16.62520980834961
    6. '
' → logprob: -18.00020980834961
    7. '   ' → logprob: -18.00020980834961
    8. 'list' → logprob: -19.00020980834961
    9. '	range' → logprob: -19.37520980834961
    10. '`' → logprob: -19.75020980834961

Token 839: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001937558175995946
    2. 'n' → logprob: -6.251937389373779
    3. '(' → logprob: -11.626937866210938
    4. ' n' → logprob: -17.376937866210938
    5. '(
' → logprob: -18.376937866210938
    6. '   ' → logprob: -18.501937866210938
    7. ' (' → logprob: -18.626937866210938
    8. 'a' → logprob: -18.876937866210938
    9. '[n' → logprob: -18.876937866210938
    10. '	n' → logprob: -19.001937866210938

Token 840: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.051972419023513794
    2. ']' → logprob: -3.1769723892211914
    3. '])' → logprob: -5.051972389221191
    4. '])]' → logprob: -6.051972389221191
    5. ']]' → logprob: -9.301972389221191
    6. ')])' → logprob: -10.676972389221191
    7. ']}' → logprob: -11.176972389221191
    8. ')]
' → logprob: -11.676972389221191
    9. ')' → logprob: -11.676972389221191
    10. '>]' → logprob: -12.051972389221191

Token 841: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6390871405601501
    2. '   ' → logprob: -0.7640871405601501
    3. '#' → logprob: -6.139087200164795
    4. '
' → logprob: -6.389087200164795
    5. '    
' → logprob: -6.764087200164795
    6. ' b' → logprob: -8.014086723327637
    7. 'hash' → logprob: -8.514086723327637
    8. 'rb' → logprob: -8.639086723327637
    9. 'diff' → logprob: -8.639086723327637
    10. 'a' → logprob: -8.764086723327637

Token 842: ' #' (ID: 1069)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.24453343451023102
    2. 'b' → logprob: -2.4945335388183594
    3. '   ' → logprob: -2.8695335388183594
    4. 'a' → logprob: -3.7445335388183594
    5. 'r' → logprob: -4.244533538818359
    6. 'h' → logprob: -4.369533538818359
    7. 'hr' → logprob: -4.494533538818359
    8. 'ra' → logprob: -5.869533538818359
    9. 'ha' → logprob: -5.994533538818359
    10. 'A' → logprob: -6.119533538818359

Token 843: ' Build' (ID: 10885)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002419891534373164
    2. 'diff' → logprob: -6.627419948577881
    3. 'a' → logprob: -7.752419948577881
    4. '#' → logprob: -8.127419471740723
    5. '   ' → logprob: -9.127419471740723
    6. 'd' → logprob: -9.502419471740723
    7. 'dif' → logprob: -10.627419471740723
    8. 'bx' → logprob: -11.002419471740723
    9. ' b' → logprob: -11.377419471740723
    10. 'ab' → logprob: -11.502419471740723

Token 844: ' the' (ID: 290)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.15739190578460693
    2. 'h' → logprob: -3.5323920249938965
    3. 'hash' → logprob: -3.6573920249938965
    4. 'a' → logprob: -3.7823920249938965
    5. 'hr' → logprob: -3.9073920249938965
    6. 'ha' → logprob: -3.9073920249938965
    7. 'r' → logprob: -4.7823920249938965
    8. 'ra' → logprob: -4.9073920249938965
    9. 'rolling' → logprob: -5.0323920249938965
    10. 'ah' → logprob: -6.9073920249938965

Token 845: ' rolling' (ID: 30530)
  Prédit: 'rolling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rolling' → logprob: -0.5468522906303406
    2. 'rh' → logprob: -0.9218522906303406
    3. 'ra' → logprob: -4.546852111816406
    4. 'r' → logprob: -5.171852111816406
    5. 'a' → logprob: -6.421852111816406
    6. 'hash' → logprob: -6.546852111816406
    7. 'h' → logprob: -6.671852111816406
    8. 'ha' → logprob: -7.171852111816406
    9. 'hr' → logprob: -7.546852111816406
    10. 'roll' → logprob: -7.921852111816406

Token 846: ' hash' (ID: 10691)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.06220855563879013
    2. 'hash' → logprob: -2.812208652496338
    3. 'Hash' → logprob: -9.06220817565918
    4. '_a' → logprob: -10.06220817565918
    5. 'a' → logprob: -10.31220817565918
    6. ' =' → logprob: -11.18720817565918
    7. '_h' → logprob: -11.31220817565918
    8. ' hash' → logprob: -11.43720817565918
    9. 'h' → logprob: -12.18720817565918
    10. '=' → logprob: -12.68720817565918

Token 847: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8741430044174194
    2. '_a' → logprob: -1.4991430044174194
    3. 'for' → logprob: -2.249143123626709
    4. 'A' → logprob: -2.749143123626709
    5. 'ah' → logprob: -2.999143123626709
    6. 'ra' → logprob: -3.249143123626709
    7. ' =' → logprob: -3.999143123626709
    8. 'ha' → logprob: -4.124143123626709
    9. 'obj' → logprob: -4.249143123626709
    10. '_ra' → logprob: -4.624143123626709

Token 848: ' double' (ID: 3503)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022322366014122963
    2. ' a' → logprob: -3.897322416305542
    3. 'rolling' → logprob: -6.522322177886963
    4. '   ' → logprob: -8.397322654724121
    5. ' rolling' → logprob: -10.147322654724121
    6. ' the' → logprob: -11.022322654724121
    7. 'the' → logprob: -11.522322654724121
    8. '       ' → logprob: -12.772322654724121
    9. '[a' → logprob: -12.897322654724121
    10. ' ' → logprob: -13.272322654724121

Token 849: '-length' (ID: 53970)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00992548931390047
    2. ' a' → logprob: -4.634925365447998
    3. '   ' → logprob: -9.259925842285156
    4. '_a' → logprob: -10.384925842285156
    5. 'length' → logprob: -10.884925842285156
    6. '(a' → logprob: -12.009925842285156
    7. ' length' → logprob: -12.509925842285156
    8. 'array' → logprob: -12.884925842285156
    9. '_length' → logprob: -13.134925842285156
    10. ' ' → logprob: -13.509925842285156

Token 850: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019268518080934882
    2. ' a' → logprob: -6.626926898956299
    3. '(a' → logprob: -7.751926898956299
    4. 'rolling' → logprob: -9.62692642211914
    5. 'array' → logprob: -9.87692642211914
    6. '   ' → logprob: -10.87692642211914
    7. 'sequence' → logprob: -11.75192642211914
    8. 'diff' → logprob: -12.00192642211914
    9. ' ' → logprob: -12.62692642211914
    10. '_a' → logprob: -12.87692642211914

Token 851: '_x' (ID: 7054)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.686767041683197
    2. 'a' → logprob: -0.936767041683197
    3. ' =' → logprob: -3.186767101287842
    4. '_r' → logprob: -4.561767101287842
    5. '_x' → logprob: -4.561767101287842
    6. '   ' → logprob: -4.686767101287842
    7. 'rh' → logprob: -5.061767101287842
    8. 'diff' → logprob: -5.186767101287842
    9. '=' → logprob: -5.561767101287842
    10. 'r' → logprob: -5.686767101287842

Token 852: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.004916597157716751
    2. '_x' → logprob: -5.629916667938232
    3. 'xor' → logprob: -7.504916667938232
    4. '_or' → logprob: -8.504916191101074
    5. 'a' → logprob: -8.879916191101074
    6. 'x' → logprob: -9.754916191101074
    7. 'ox' → logprob: -9.754916191101074
    8. '_a' → logprob: -10.504916191101074
    9. '`' → logprob: -10.504916191101074
    10. '_' → logprob: -10.629916191101074

Token 853: ' for' (ID: 395)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.5662774443626404
    2. '   ' → logprob: -1.0662775039672852
    3. 'a' → logprob: -3.316277503967285
    4. ' rh' → logprob: -3.441277503967285
    5. 'r' → logprob: -4.691277503967285
    6. ' a' → logprob: -5.691277503967285
    7. 'ra' → logprob: -6.191277503967285
    8. ' =' → logprob: -7.191277503967285
    9. 'rhs' → logprob: -7.691277503967285
    10. 'hash' → logprob: -7.941277503967285

Token 854: ' cyc' (ID: 195530)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012315616942942142
    2. ' a' → logprob: -4.63731575012207
    3. 'rolling' → logprob: -6.38731575012207
    4. 'the' → logprob: -7.76231575012207
    5. ' the' → logprob: -9.01231575012207
    6. 'efficient' → logprob: -9.51231575012207
    7. 'fast' → logprob: -10.01231575012207
    8. 'range' → logprob: -10.51231575012207
    9. ' ' → logprob: -10.63731575012207
    10. 'search' → logprob: -11.26231575012207

Token 855: 'lical' (ID: 45820)
  Prédit: 'clic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clic' → logprob: -0.4508989751338959
    2. 'lic' → logprob: -1.0758990049362183
    3. 'cle' → logprob: -4.575899124145508
    4. '#' → logprob: -5.825899124145508
    5. 'le' → logprob: -6.575899124145508
    6. '[' → logprob: -6.825899124145508
    7. '   ' → logprob: -6.825899124145508
    8. 'l' → logprob: -7.700899124145508
    9. 'c' → logprob: -7.950899124145508
    10. 'lick' → logprob: -7.950899124145508

Token 856: ' comparisons' (ID: 68481)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -1.1220651865005493
    2. 'hash' → logprob: -1.3720651865005493
    3. 'a' → logprob: -1.7470651865005493
    4. 'rolling' → logprob: -2.2470650672912598
    5. 'shift' → logprob: -2.8720650672912598
    6. ' shifts' → logprob: -4.24706506729126
    7. 'conc' → logprob: -4.62206506729126
    8. 'substring' → logprob: -4.99706506729126
    9. 'dif' → logprob: -5.37206506729126
    10. 'comparison' → logprob: -5.49706506729126

Token 857: '
' (ID: 198)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.12240733206272125
    2. '   ' → logprob: -2.6224074363708496
    3. ' rh' → logprob: -3.7474074363708496
    4. 'r' → logprob: -4.99740743637085
    5. 'a' → logprob: -5.24740743637085
    6. 'hash' → logprob: -6.62240743637085
    7. 'h' → logprob: -6.74740743637085
    8. 'ra' → logprob: -6.87240743637085
    9. 'rhs' → logprob: -6.99740743637085
    10. ' a' → logprob: -7.62240743637085

Token 858: '   ' (ID: 271)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.03118492104113102
    2. 'r' → logprob: -4.156185150146484
    3. '   ' → logprob: -5.781185150146484
    4. 'h' → logprob: -5.781185150146484
    5. 'ha' → logprob: -6.406185150146484
    6. 'ra' → logprob: -6.531185150146484
    7. 'hash' → logprob: -6.781185150146484
    8. 'a' → logprob: -6.781185150146484
    9. ' rh' → logprob: -6.781185150146484
    10. 'rhs' → logprob: -7.406185150146484

Token 859: ' a' (ID: 261)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.14672259986400604
    2. 'ra' → logprob: -3.3967225551605225
    3. 'r' → logprob: -3.5217225551605225
    4. 'h' → logprob: -3.8967225551605225
    5. 'ha' → logprob: -4.521722793579102
    6. 'a' (adapté à ' a') → logprob: -4.896722793579102
    7. 'hash' → logprob: -5.146722793579102
    8. 'A' → logprob: -5.146722793579102
    9. 'RH' → logprob: -5.521722793579102
    10. 'rah' → logprob: -5.646722793579102

Token 860: '1' (ID: 16)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.3963194191455841
    2. '_r' → logprob: -1.1463193893432617
    3. 'rh' → logprob: -5.521319389343262
    4. 'hash' → logprob: -6.021319389343262
    5. '_' → logprob: -7.146319389343262
    6. 'r' → logprob: -7.396319389343262
    7. '_has' → logprob: -7.771319389343262
    8. '_h' → logprob: -8.271319389343262
    9. 'a' → logprob: -8.771319389343262
    10. '_roll' → logprob: -8.896319389343262

Token 861: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24113132059574127
    2. '_hash' → logprob: -2.24113130569458
    3. '_r' → logprob: -2.49113130569458
    4. 'sh' → logprob: -4.74113130569458
    5. '=' → logprob: -5.11613130569458
    6. '_x' → logprob: -5.24113130569458
    7. '_' → logprob: -6.74113130569458
    8. 'r' → logprob: -7.24113130569458
    9. '_h' → logprob: -7.36613130569458
    10. '_sh' → logprob: -7.36613130569458

Token 862: ' rolling' (ID: 30530)
  Prédit: 'rolling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rolling' → logprob: -5.157039049663581e-05
    2. ' rolling' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.875051498413086
    4. 'rolled' → logprob: -18.125051498413086
    5. 'roll' → logprob: -18.250051498413086
    6. 'roller' → logprob: -18.500051498413086
    7. ' ' → logprob: -19.250051498413086
    8. 'rol' → logprob: -19.375051498413086
    9. 'Rolling' → logprob: -19.750051498413086
    10. '  ' → logprob: -20.500051498413086

Token 863: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.625
    3. 'hash' → logprob: -16.625
    4. '_HASH' → logprob: -19.25
    5. '_h' → logprob: -19.5
    6. '__' → logprob: -20.0
    7. ' _' → logprob: -20.125
    8. '_x' → logprob: -20.25
    9. '_hat' → logprob: -20.375
    10. 'a' → logprob: -20.75

Token 864: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.432518421206623e-05
    2. 'a' → logprob: -9.7500638961792
    3. '([' → logprob: -12.3750638961792
    4. '(' → logprob: -14.2500638961792
    5. '(list' → logprob: -14.6250638961792
    6. '[a' → logprob: -16.000064849853516
    7. ' (' → logprob: -16.125064849853516
    8. '((' → logprob: -16.375064849853516
    9. '(
' → logprob: -16.750064849853516
    10. '   ' → logprob: -17.750064849853516

Token 865: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.514650183613412e-05
    2. 'xor' → logprob: -9.875055313110352
    3. 'x' → logprob: -13.750055313110352
    4. 'a' → logprob: -14.000055313110352
    5. '_a' → logprob: -14.125055313110352
    6. '   ' → logprob: -15.000055313110352
    7. '[' → logprob: -15.500055313110352
    8. '_' → logprob: -15.750055313110352
    9. ',' → logprob: -16.37505531311035
    10. ')' → logprob: -17.00005531311035

Token 866: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.008143838495016098
    2. 'xor' → logprob: -4.883143901824951
    3. 'x' → logprob: -8.508143424987793
    4. '_x' → logprob: -9.008143424987793
    5. 'ox' → logprob: -10.508143424987793
    6. '   ' → logprob: -10.758143424987793
    7. 'ор' → logprob: -10.883143424987793
    8. '_' → logprob: -11.383143424987793
    9. 'ar' → logprob: -11.383143424987793
    10. ')' → logprob: -11.508143424987793

Token 867: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18060865998268127
    2. ',' → logprob: -1.8056086301803589
    3. ')
' → logprob: -8.680608749389648
    4. 'a' → logprob: -8.930608749389648
    5. '[' → logprob: -9.180608749389648
    6. ',a' → logprob: -9.305608749389648
    7. ',)' → logprob: -9.305608749389648
    8. ' ,' → logprob: -9.555608749389648
    9. ' )' → logprob: -10.305608749389648
    10. ',n' → logprob: -10.555608749389648

Token 868: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.055528778582811356
    2. '   ' → logprob: -2.9305288791656494
    3. ' b' → logprob: -7.55552864074707
    4. '```' → logprob: -9.18052864074707
    5. '#' → logprob: -12.05552864074707
    6. 'a' → logprob: -12.43052864074707
    7. ' ' → logprob: -12.55552864074707
    8. '
' → logprob: -12.80552864074707
    9. '	b' → logprob: -13.55552864074707
    10. '    
' → logprob: -13.93052864074707

Token 869: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22355204820632935
    2. '   ' → logprob: -1.7235519886016846
    3. '#' (adapté à ' #') → logprob: -3.8485519886016846
    4. 'diff' → logprob: -8.723551750183105
    5. 'def' → logprob: -9.348551750183105
    6. ' b' → logprob: -9.473551750183105
    7. '```' → logprob: -9.598551750183105
    8. 'a' → logprob: -9.973551750183105
    9. ' ' → logprob: -10.598551750183105
    10. '    
' → logprob: -10.848551750183105

Token 870: ' Compute' (ID: 45438)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03880159556865692
    2. '#' → logprob: -3.288801670074463
    3. 'diff' → logprob: -7.913801670074463
    4. '   ' → logprob: -8.788801193237305
    5. 'a' → logprob: -10.038801193237305
    6. 'def' → logprob: -10.163801193237305
    7. 'd' → logprob: -10.788801193237305
    8. ' b' → logprob: -11.038801193237305
    9. 'bx' → logprob: -11.038801193237305
    10. 'dif' → logprob: -11.538801193237305

Token 871: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19069470465183258
    2. 'the' → logprob: -1.9406946897506714
    3. ' the' → logprob: -4.690694808959961
    4. 'diff' → logprob: -4.815694808959961
    5. '#' → logprob: -5.190694808959961
    6. ' b' → logprob: -5.315694808959961
    7. 'difference' → logprob: -6.315694808959961
    8. '   ' → logprob: -8.940694808959961
    9. 'dif' → logprob: -9.690694808959961
    10. ' diff' → logprob: -10.315694808959961

Token 872: ' difference' (ID: 9809)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19163446128368378
    2. 'diff' → logprob: -2.0666344165802
    3. 'difference' → logprob: -3.1916344165802
    4. 'xor' → logprob: -5.191634654998779
    5. '#' → logprob: -7.441634654998779
    6. 'dif' → logprob: -8.441634178161621
    7. 'd' → logprob: -9.566634178161621
    8. 'x' → logprob: -9.691634178161621
    9. 'delta' → logprob: -10.191634178161621
    10. 'bx' → logprob: -10.566634178161621

Token 873: ' array' (ID: 2644)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3574839234352112
    2. 'array' → logprob: -1.2324838638305664
    3. ' array' → logprob: -4.982483863830566
    4. '_array' → logprob: -6.857483863830566
    5. '_b' → logprob: -7.357483863830566
    6. ' b' → logprob: -8.982483863830566
    7. 'for' → logprob: -9.732483863830566
    8. 'a' → logprob: -9.732483863830566
    9. 'x' → logprob: -9.982483863830566
    10. '#' → logprob: -10.232483863830566

Token 874: ' for' (ID: 395)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09496578574180603
    2. 'for' → logprob: -2.594965696334839
    3. ' for' → logprob: -4.344965934753418
    4. '   ' → logprob: -6.719965934753418
    5. ' b' → logprob: -6.844965934753418
    6. ' of' → logprob: -7.844965934753418
    7. '#' → logprob: -8.719965934753418
    8. 'of' → logprob: -8.969965934753418
    9. '_b' → logprob: -11.594965934753418
    10. ' ' → logprob: -12.594965934753418

Token 875: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005258183926343918
    2. ' b' → logprob: -5.255258083343506
    3. '[b' → logprob: -11.755258560180664
    4. '```' → logprob: -11.880258560180664
    5. '[' → logprob: -12.505258560180664
    6. '   ' → logprob: -12.880258560180664
    7. 'the' → logprob: -14.630258560180664
    8. ' the' → logprob: -14.880258560180664
    9. 'def' → logprob: -15.130258560180664
    10. '(b' → logprob: -15.130258560180664

Token 876: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00015991552209015936
    2. ' b' → logprob: -8.750160217285156
    3. '   ' → logprob: -14.875160217285156
    4. '[b' → logprob: -15.375160217285156
    5. '
' → logprob: -15.500160217285156
    6. '```' → logprob: -15.750160217285156
    7. ' ' → logprob: -16.000160217285156
    8. '[' → logprob: -16.125160217285156
    9. 'def' → logprob: -16.625160217285156
    10. '[
' → logprob: -16.875160217285156

Token 877: ''' (ID: 6)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1937917172908783
    2. ' =' → logprob: -1.8187917470932007
    3. '=' → logprob: -4.94379186630249
    4. ':' → logprob: -5.44379186630249
    5. '_x' → logprob: -7.19379186630249
    6. '_b' → logprob: -8.068791389465332
    7. 'x' → logprob: -8.193791389465332
    8. '=[' → logprob: -8.693791389465332
    9. '_' → logprob: -8.943791389465332
    10. '#' → logprob: -8.943791389465332

Token 878: ' only' (ID: 1606)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0023805228993296623
    2. ' =' → logprob: -7.00238037109375
    3. ' b' → logprob: -7.12738037109375
    4. '   ' → logprob: -7.87738037109375
    5. '=' → logprob: -9.00238037109375
    6. '_b' → logprob: -10.00238037109375
    7. ':' → logprob: -10.62738037109375
    8. '=b' → logprob: -10.87738037109375
    9. '
' → logprob: -11.12738037109375
    10. ',' → logprob: -11.12738037109375

Token 879: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001017551330733113
    2. '   ' → logprob: -10.500102043151855
    3. '[b' → logprob: -10.750102043151855
    4. ' b' → logprob: -11.250102043151855
    5. 'a' → logprob: -11.500102043151855
    6. '#' → logprob: -11.875102043151855
    7. '_b' → logprob: -12.375102043151855
    8. ' =' → logprob: -12.750102043151855
    9. '[' → logprob: -12.750102043151855
    10. '
' → logprob: -13.250102043151855

Token 880: 'no' (ID: 1750)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009192822501063347
    2. '[b' → logprob: -4.884192943572998
    3. ' b' → logprob: -7.884192943572998
    4. ')' → logprob: -8.00919246673584
    5. ')[' → logprob: -8.25919246673584
    6. '
' → logprob: -8.75919246673584
    7. ')b' → logprob: -8.88419246673584
    8. '[' → logprob: -9.50919246673584
    9. '[i' → logprob: -9.63419246673584
    10. ')
' → logprob: -9.75919246673584

Token 881: ' double' (ID: 3503)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3117718696594238
    2. ' cyclic' → logprob: -1.3117718696594238
    3. 'cy' → logprob: -1.9367718696594238
    4. ' b' → logprob: -2.811771869659424
    5. ' concaten' → logprob: -2.811771869659424
    6. 'conc' → logprob: -3.686771869659424
    7. 'rolling' → logprob: -3.936771869659424
    8. ' rotation' → logprob: -3.936771869659424
    9. 'xor' → logprob: -4.061771869659424
    10. 'rotation' → logprob: -4.186771869659424

Token 882: '-length' (ID: 53970)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4807899296283722
    2. 'length' → logprob: -1.8557898998260498
    3. ')' → logprob: -2.35578989982605
    4. '=b' → logprob: -2.98078989982605
    5. '-length' → logprob: -3.98078989982605
    6. '=' → logprob: -4.105790138244629
    7. '[b' → logprob: -4.480790138244629
    8. 'x' → logprob: -4.980790138244629
    9. '[' → logprob: -5.105790138244629
    10. ' length' → logprob: -5.355790138244629

Token 883: ' needed' (ID: 6118)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5249713063240051
    2. ')
' → logprob: -1.7749712467193604
    3. ')' → logprob: -1.8999712467193604
    4. '):
' → logprob: -2.8999712467193604
    5. '):' → logprob: -3.8999712467193604
    6. ')b' → logprob: -5.0249714851379395
    7. ' b' → logprob: -6.3999714851379395
    8. 'x' → logprob: -6.8999714851379395
    9. '):

' → logprob: -7.1499714851379395
    10. 'diff' → logprob: -7.2749714851379395

Token 884: ')
' (ID: 446)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0561811700463295
    2. '   ' → logprob: -3.8061811923980713
    3. ')
' → logprob: -4.806180953979492
    4. '):
' → logprob: -4.931180953979492
    5. ')' → logprob: -5.056180953979492
    6. '):' → logprob: -5.306180953979492
    7. ' b' → logprob: -6.181180953979492
    8. ',' → logprob: -7.181180953979492
    9. '[b' → logprob: -7.556180953979492
    10. ':' → logprob: -7.806180953979492

Token 885: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003920655872207135
    2. '   ' → logprob: -8.250391960144043
    3. ' b' → logprob: -9.000391960144043
    4. '```' → logprob: -12.250391960144043
    5. '
' → logprob: -13.500391960144043
    6. '	b' → logprob: -14.625391960144043
    7. ' ' → logprob: -15.250391960144043
    8. '[b' → logprob: -15.875391960144043
    9. '``' → logprob: -16.25039291381836
    10. '#' → logprob: -16.25039291381836

Token 886: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -12.500008583068848
    3. ' b' → logprob: -13.125008583068848
    4. '```' → logprob: -13.250008583068848
    5. '
' → logprob: -14.375008583068848
    6. 'diff' → logprob: -15.625008583068848
    7. '[b' → logprob: -15.875008583068848
    8. 'a' → logprob: -16.000009536743164
    9. '	b' → logprob: -16.250009536743164
    10. '#' → logprob: -16.625009536743164

Token 887: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.040457421680912e-05
    2. 'xor' → logprob: -9.625070571899414
    3. '_diff' → logprob: -13.125070571899414
    4. ' =' → logprob: -14.125070571899414
    5. '_' → logprob: -15.000070571899414
    6. '=' → logprob: -15.125070571899414
    7. '_b' → logprob: -15.625070571899414
    8. 'a' → logprob: -15.750070571899414
    9. '_a' → logprob: -15.750070571899414
    10. 'x' → logprob: -16.000070571899414

Token 888: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.004613707307726145
    2. '_x' → logprob: -6.129613876342773
    3. 'xor' → logprob: -6.254613876342773
    4. '_or' → logprob: -8.254613876342773
    5. '=' → logprob: -9.129613876342773
    6. 'b' → logprob: -10.504613876342773
    7. '[' → logprob: -10.629613876342773
    8. ' =' → logprob: -10.754613876342773
    9. 'orb' → logprob: -11.254613876342773
    10. '_' → logprob: -11.754613876342773

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022706031799316
    2. ' =' → logprob: -1.9102270603179932
    3. '=[' → logprob: -12.910226821899414
    4. '=b' → logprob: -15.910226821899414
    5. ' =[' → logprob: -16.160226821899414
    6. '[' → logprob: -16.660226821899414
    7. 'b' → logprob: -16.785226821899414
    8. ' ' → logprob: -17.410226821899414
    9. 'a' → logprob: -18.160226821899414
    10. '＝' → logprob: -18.410226821899414

Token 890: ' [' (ID: 723)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.002754472428932786
    2. '[a' → logprob: -6.0027546882629395
    3. ' [' → logprob: -8.502754211425781
    4. '[i' → logprob: -9.752754211425781
    5. '[' → logprob: -11.252754211425781
    6. '[(' → logprob: -12.627754211425781
    7. '[u' → logprob: -14.377754211425781
    8. '[int' → logprob: -15.127754211425781
    9. '[v' → logprob: -16.00275421142578
    10. '[j' → logprob: -16.00275421142578

Token 891: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.180258191714529e-06
    2. '(b' → logprob: -11.750008583068848
    3. ' b' → logprob: -15.250008583068848
    4. 'a' → logprob: -18.25000762939453
    5. '[b' → logprob: -18.75000762939453
    6. '   ' → logprob: -19.50000762939453
    7. ' (' → logprob: -20.00000762939453
    8. '_b' → logprob: -20.12500762939453
    9. ')b' → logprob: -20.25000762939453
    10. '	b' → logprob: -20.37500762939453

Token 892: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003047186473850161
    2. 'i' → logprob: -8.87530517578125
    3. '(i' → logprob: -9.00030517578125
    4. '[(' → logprob: -10.12530517578125
    5. '[j' → logprob: -13.87530517578125
    6. '
' → logprob: -16.25030517578125
    7. '1' → logprob: -16.25030517578125
    8. '[' → logprob: -16.62530517578125
    9. '```' → logprob: -16.87530517578125
    10. '[
' → logprob: -17.25030517578125

Token 893: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06669683009386063
    2. ' -' → logprob: -3.316696882247925
    3. '   ' → logprob: -4.566696643829346
    4. '[i' → logprob: -4.941696643829346
    5. 'i' → logprob: -5.691696643829346
    6. '1' → logprob: -6.566696643829346
    7. ' i' → logprob: -6.566696643829346
    8. ']' → logprob: -6.691696643829346
    9. ' ^' → logprob: -6.816696643829346
    10. '(i' → logprob: -7.066696643829346

Token 894: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004634826444089413
    2. ' ' → logprob: -5.379634857177734
    3. ' i' → logprob: -11.754634857177734
    4. 'i' → logprob: -12.504634857177734
    5. '   ' → logprob: -13.504634857177734
    6. '  ' → logprob: -14.379634857177734
    7. ']' → logprob: -15.129634857177734
    8. '
' → logprob: -15.504634857177734
    9. '0' → logprob: -15.629634857177734
    10. '-' → logprob: -16.317134857177734

Token 895: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014537633978761733
    2. ' ' → logprob: -8.875144958496094
    3. '   ' → logprob: -13.500144958496094
    4. 'i' → logprob: -13.875144958496094
    5. ']' → logprob: -14.187644958496094
    6. '  ' → logprob: -14.375144958496094
    7. '0' → logprob: -14.687644958496094
    8. 'n' → logprob: -15.625144958496094
    9. ' i' → logprob: -15.750144958496094
    10. 'a' → logprob: -16.125144958496094

Token 896: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.374396950006485
    2. ' ^' → logprob: -1.4993969202041626
    3. '^' → logprob: -2.624397039413452
    4. ']^' → logprob: -4.124396800994873
    5. ' ' → logprob: -9.374397277832031
    6. ')' → logprob: -9.499397277832031
    7. '[i' → logprob: -10.124397277832031
    8. ' ^
' → logprob: -10.374397277832031
    9. ' ]' → logprob: -10.999397277832031
    10. '[' → logprob: -11.249397277832031

Token 897: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.01815567910671234
    2. ' ^' → logprob: -4.018155574798584
    3. ']' → logprob: -12.768156051635742
    4. ']^' → logprob: -14.018156051635742
    5. 'b' → logprob: -14.893156051635742
    6. ' ^
' → logprob: -15.143156051635742
    7. ' ' → logprob: -15.268156051635742
    8. '^

' → logprob: -15.393156051635742
    9. ' ^=' → logprob: -15.518156051635742
    10. ')' → logprob: -15.893156051635742

Token 898: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001238004770129919
    2. ' b' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.750123977661133
    4. 'i' → logprob: -15.875123977661133
    5. ')b' → logprob: -17.500123977661133
    6. '```' → logprob: -18.125123977661133
    7. ' ' → logprob: -19.500123977661133
    8. '	b' → logprob: -19.500123977661133
    9. '0' → logprob: -19.625123977661133
    10. '       ' → logprob: -20.250123977661133

Token 899: '[i' (ID: 1768)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04480095952749252
    2. 'i' → logprob: -3.1698009967803955
    3. ' b' → logprob: -7.169800758361816
    4. '[i' → logprob: -7.169800758361816
    5. ' i' → logprob: -8.419800758361816
    6. '   ' → logprob: -10.419800758361816
    7. '(i' → logprob: -12.419800758361816
    8. ']' → logprob: -13.044800758361816
    9. '```' → logprob: -13.794800758361816
    10. '  ' → logprob: -14.044800758361816

Token 900: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06365220993757248
    2. 'for' → logprob: -3.313652276992798
    3. ' for' → logprob: -3.688652276992798
    4. ' ]' → logprob: -9.688652038574219
    5. '   ' → logprob: -9.813652038574219
    6. 'i' → logprob: -9.813652038574219
    7. ')' → logprob: -10.438652038574219
    8. '[i' → logprob: -10.438652038574219
    9. ' ' → logprob: -10.938652038574219
    10. ' i' → logprob: -11.313652038574219

Token 901: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16022473573684692
    2. 'for' → logprob: -1.9102246761322021
    3. '   ' → logprob: -15.285224914550781
    4. ' ' → logprob: -15.785224914550781
    5. ' in' → logprob: -16.41022491455078
    6. '	for' → logprob: -16.78522491455078
    7. ']' → logprob: -17.91022491455078
    8. ')' → logprob: -18.28522491455078
    9. '[' → logprob: -19.03522491455078
    10. '  ' → logprob: -19.16022491455078

Token 902: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004699954588431865
    2. ' i' → logprob: -7.875470161437988
    3. 'range' → logprob: -9.500470161437988
    4. 'in' → logprob: -12.000470161437988
    5. ' range' → logprob: -12.375470161437988
    6. 'b' → logprob: -13.625470161437988
    7. '
' → logprob: -13.875470161437988
    8. ' ' → logprob: -14.375470161437988
    9. ' in' → logprob: -15.000470161437988
    10. '```' → logprob: -15.125470161437988

Token 903: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.532490611076355
    2. 'i' → logprob: -1.032490611076355
    3. ' range' → logprob: -3.5324907302856445
    4. 'in' → logprob: -3.6574907302856445
    5. ' in' → logprob: -6.7824907302856445
    6. ' i' → logprob: -7.5324907302856445
    7. ' ' → logprob: -11.407490730285645
    8. '   ' → logprob: -11.782490730285645
    9. '  ' → logprob: -12.032490730285645
    10. '
' → logprob: -12.407490730285645

Token 904: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -19.50002670288086
    4. '   ' → logprob: -20.37502670288086
    5. '```' → logprob: -20.37502670288086
    6. '	range' → logprob: -20.75002670288086
    7. '`' → logprob: -21.00002670288086
    8. '[' → logprob: -21.25002670288086
    9. 'in' → logprob: -21.87502670288086
    10. '
' → logprob: -22.12502670288086

Token 905: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003221150254830718
    2. ' range' → logprob: -8.375322341918945
    3. '(range' → logprob: -9.750322341918945
    4. 'n' → logprob: -10.375322341918945
    5. '(n' → logprob: -13.250322341918945
    6. '(' → logprob: -16.500322341918945
    7. '	range' → logprob: -17.000322341918945
    8. '[n' → logprob: -17.125322341918945
    9. '   ' → logprob: -17.250322341918945
    10. '
' → logprob: -18.000322341918945

Token 906: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13624164462089539
    2. ')]' → logprob: -2.1362416744232178
    3. ']
' → logprob: -4.886241436004639
    4. ')]
' → logprob: -6.886241436004639
    5. ')' → logprob: -8.011241912841797
    6. '])' → logprob: -8.136241912841797
    7. ' ]' → logprob: -10.886241912841797
    8. '()]' → logprob: -11.761241912841797
    9. '])
' → logprob: -12.136241912841797
    10. ']

' → logprob: -12.136241912841797

Token 907: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11391909420490265
    2. '   ' → logprob: -2.2389190196990967
    3. ' b' → logprob: -6.863919258117676
    4. '
' → logprob: -11.613919258117676
    5. '```' → logprob: -11.613919258117676
    6. '	b' → logprob: -11.988919258117676
    7. ')' → logprob: -12.363919258117676
    8. '#' → logprob: -12.488919258117676
    9. '    
' → logprob: -12.613919258117676
    10. 'a' → logprob: -12.738919258117676

Token 908: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00011391390580683947
    2. '   ' → logprob: -9.500113487243652
    3. ' b' → logprob: -10.250113487243652
    4. 'a' → logprob: -13.625113487243652
    5. '```' → logprob: -13.625113487243652
    6. '#' → logprob: -15.125113487243652
    7. 'rolling' → logprob: -15.750113487243652
    8. 'bh' → logprob: -16.12511444091797
    9. 'rb' → logprob: -16.25011444091797
    10. '
' → logprob: -16.37511444091797

Token 909: '_hash' (ID: 20844)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06296370923519135
    2. '_' → logprob: -3.4379637241363525
    3. '_hash' → logprob: -4.812963485717773
    4. ' =' → logprob: -4.937963485717773
    5. '_a' → logprob: -5.062963485717773
    6. 'a' → logprob: -5.312963485717773
    7. 'b' → logprob: -7.312963485717773
    8. '_b' → logprob: -7.437963485717773
    9. '=' → logprob: -7.812963485717773
    10. '_x' → logprob: -8.312963485717773

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. ',' → logprob: -17.72520637512207
    4. ' ' → logprob: -18.35020637512207
    5. 'b' → logprob: -18.97520637512207
    6. '=b' → logprob: -19.35020637512207
    7. '＝' → logprob: -19.47520637512207
    8. 'a' → logprob: -19.85020637512207
    9. ' ' → logprob: -19.85020637512207
    10. 's' → logprob: -20.22520637512207

Token 911: ' rolling' (ID: 30530)
  Prédit: 'rolling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rolling' → logprob: -0.0015023599844425917
    2. ' rolling' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.001502990722656
    4. 'roll' → logprob: -17.251502990722656
    5. ' ' → logprob: -18.251502990722656
    6. 'roller' → logprob: -18.376502990722656
    7. 'rolled' → logprob: -18.626502990722656
    8. 'Rolling' → logprob: -18.751502990722656
    9. '(' → logprob: -19.251502990722656
    10. '0' → logprob: -19.251502990722656

Token 912: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -2.629921436891891e-05
    2. 'hash' → logprob: -10.62502670288086
    3. ' =' → logprob: -14.25002670288086
    4. 'a' → logprob: -15.00002670288086
    5. 'b' → logprob: -15.00002670288086
    6. '=' → logprob: -15.25002670288086
    7. '_b' → logprob: -15.87502670288086
    8. '_' → logprob: -16.12502670288086
    9. 'Hash' → logprob: -16.37502670288086
    10. '   ' → logprob: -17.00002670288086

Token 913: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.875000953674316
    3. '(' → logprob: -16.5
    4. '=b' → logprob: -16.625
    5. ' (' → logprob: -17.0
    6. '[b' → logprob: -17.375
    7. '(
' → logprob: -18.5
    8. '((' → logprob: -18.625
    9. '```' → logprob: -19.0
    10. '	b' → logprob: -19.125

Token 914: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002558188047260046
    2. 'b' → logprob: -6.62755823135376
    3. '_b' → logprob: -6.87755823135376
    4. '(b' → logprob: -9.252557754516602
    5. '_hash' → logprob: -10.377557754516602
    6. 'xor' → logprob: -10.877557754516602
    7. ')' → logprob: -11.002557754516602
    8. 'x' → logprob: -11.502557754516602
    9. '[b' → logprob: -11.627557754516602
    10. '[' → logprob: -12.252557754516602

Token 915: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.07187057286500931
    2. 'xor' → logprob: -3.3218705654144287
    3. '_x' → logprob: -3.5718705654144287
    4. 'x' → logprob: -5.696870803833008
    5. 'ox' → logprob: -7.321870803833008
    6. '_or' → logprob: -8.196870803833008
    7. '   ' → logprob: -8.571870803833008
    8. '[' → logprob: -8.946870803833008
    9. '_' → logprob: -8.946870803833008
    10. 'b' → logprob: -9.571870803833008

Token 916: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011140200076624751
    2. ')b' → logprob: -7.3761138916015625
    3. ')
' → logprob: -7.7511138916015625
    4. '(b' → logprob: -10.876113891601562
    5. 'b' → logprob: -11.251113891601562
    6. '   ' → logprob: -12.001113891601562
    7. ')(' → logprob: -12.501113891601562
    8. ')

' → logprob: -13.251113891601562
    9. '(' → logprob: -13.376113891601562
    10. ',b' → logprob: -13.501113891601562

Token 917: 'calc' (ID: 49633)
  Prédit: 'calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.0022452964913100004
    2. 'Hash' → logprob: -6.1272454261779785
    3. 'Calc' → logprob: -10.12724494934082
    4. ' calc' → logprob: -12.00224494934082
    5. '.calc' → logprob: -12.75224494934082
    6. '_calc' → logprob: -12.87724494934082
    7. '__' → logprob: -13.50224494934082
    8. 'hash' → logprob: -13.62724494934082
    9. '```' → logprob: -13.62724494934082
    10. 'def' → logprob: -13.75224494934082

Token 918: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -4.320199877838604e-07
    2. 'hash' → logprob: -15.125
    3. '```' → logprob: -16.75
    4. '_calc' → logprob: -17.5
    5. ' _' → logprob: -17.75
    6. '_code' → logprob: -17.75
    7. '__' → logprob: -18.5
    8. '_cal' → logprob: -19.0
    9. '\' → logprob: -19.0
    10. '_HASH' → logprob: -19.125

Token 919: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -14.250000953674316
    3. '0' → logprob: -15.500000953674316
    4. 'def' → logprob: -15.625000953674316
    5. '(
' → logprob: -16.125001907348633
    6. 's' → logprob: -17.250001907348633
    7. '```' → logprob: -17.250001907348633
    8. ',' → logprob: -17.875001907348633
    9. '((' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.875001907348633

Token 920: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. ' ' → logprob: -18.000009536743164
    4. '1' → logprob: -19.500009536743164
    5. ')' → logprob: -19.875009536743164
    6. '00' → logprob: -20.250009536743164
    7. '```' → logprob: -20.500009536743164
    8. ',' → logprob: -21.250009536743164
    9. '01' → logprob: -21.500009536743164
    10. '10' → logprob: -21.625009536743164

Token 921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037051814142614603
    2. ',n' → logprob: -5.628705024719238
    3. ',len' → logprob: -9.503705024719238
    4. ' ,' → logprob: -11.503705024719238
    5. '```' → logprob: -11.753705024719238
    6. 'n' → logprob: -13.128705024719238
    7. ',length' → logprob: -13.128705024719238
    8. ')' → logprob: -13.628705024719238
    9. ',
' → logprob: -13.878705024719238
    10. ',b' → logprob: -14.003705024719238

Token 922: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.253090865968261e-06
    2. ' n' → logprob: -11.875009536743164
    3. 'len' → logprob: -13.125009536743164
    4. '   ' → logprob: -15.250009536743164
    5. '	n' → logprob: -19.625009536743164
    6. '(n' → logprob: -20.125009536743164
    7. ')n' → logprob: -20.250009536743164
    8. '_n' → logprob: -21.250009536743164
    9. '  ' → logprob: -21.375009536743164
    10. ' ' → logprob: -21.625009536743164

Token 923: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012749579036608338
    2. ')
' → logprob: -9.750127792358398
    3. '   ' → logprob: -10.125127792358398
    4. ' )' → logprob: -11.250127792358398
    5. '())' → logprob: -12.000127792358398
    6. '+' → logprob: -12.625127792358398
    7. '()' → logprob: -12.750127792358398
    8. ')`' → logprob: -14.375127792358398
    9. '))' → logprob: -14.625127792358398
    10. '```' → logprob: -15.125127792358398

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025036735460162163
    2. 'for' → logprob: -3.7750368118286133
    3. ' for' → logprob: -6.650036811828613
    4. '```' → logprob: -7.650036811828613
    5. '
' → logprob: -11.525036811828613
    6. '    
' → logprob: -12.150036811828613
    7. '``' → logprob: -13.400036811828613
    8. '#' → logprob: -14.150036811828613
    9. '	for' → logprob: -14.775036811828613
    10. 'def' → logprob: -14.775036811828613

Token 925: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2023746371269226
    2. 'for' → logprob: -1.7023746967315674
    3. ' for' → logprob: -7.077374458312988
    4. '```' → logprob: -9.202374458312988
    5. '    
' → logprob: -12.202374458312988
    6. '
' → logprob: -12.702374458312988
    7. 'result' → logprob: -13.202374458312988
    8. 'def' → logprob: -13.452374458312988
    9. '``' → logprob: -14.327374458312988
    10. '	for' → logprob: -14.327374458312988

Token 926: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.97024549683556e-05
    2. 'result' → logprob: -10.875080108642578
    3. 'memo' → logprob: -11.375080108642578
    4. 'res' → logprob: -11.875080108642578
    5. 'xor' → logprob: -11.875080108642578
    6. 'ans' → logprob: -12.000080108642578
    7. 'results' → logprob: -12.000080108642578
    8. 'def' → logprob: -12.125080108642578
    9. 'answer' → logprob: -12.625080108642578
    10. 'pow' → logprob: -13.125080108642578

Token 927: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03288374841213226
    2. ' for' → logprob: -3.532883644104004
    3. '   ' → logprob: -5.782883644104004
    4. 'range' → logprob: -10.657883644104004
    5. '(' → logprob: -11.782883644104004
    6. '
' → logprob: -12.532883644104004
    7. 'i' → logprob: -12.907883644104004
    8. ' range' → logprob: -13.157883644104004
    9. 'def' → logprob: -13.282883644104004
    10. '(i' → logprob: -13.407883644104004

Token 928: ' possible' (ID: 4149)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013727018609642982
    2. 'positions' → logprob: -4.638727188110352
    3. 'start' → logprob: -5.763727188110352
    4. 'shift' → logprob: -8.513727188110352
    5. ' i' → logprob: -8.888727188110352
    6. ' positions' → logprob: -9.263727188110352
    7. 'starting' → logprob: -9.263727188110352
    8. '```' → logprob: -9.388727188110352
    9. 'offset' → logprob: -9.888727188110352
    10. 'for' → logprob: -10.513727188110352

Token 929: ' cyclic' (ID: 139817)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05397256836295128
    2. 'positions' → logprob: -3.6789724826812744
    3. 'starting' → logprob: -4.8039727210998535
    4. ' i' → logprob: -5.1789727210998535
    5. 'start' → logprob: -5.4289727210998535
    6. ' starting' → logprob: -5.6789727210998535
    7. ' positions' → logprob: -5.9289727210998535
    8. 'sh' → logprob: -6.6789727210998535
    9. '```' → logprob: -6.8039727210998535
    10. 'shift' → logprob: -8.553972244262695

Token 930: ' shifts' (ID: 50424)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.3958588242530823
    2. ' shifts' → logprob: -1.1458587646484375
    3. 'i' → logprob: -5.8958587646484375
    4. 'positions' → logprob: -6.0208587646484375
    5. 'shift' → logprob: -7.1458587646484375
    6. ' i' → logprob: -7.1458587646484375
    7. ' positions' → logprob: -7.3958587646484375
    8. '   ' → logprob: -7.7708587646484375
    9. ' rotations' → logprob: -7.7708587646484375
    10. 'rot' → logprob: -9.145858764648438

Token 931: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37173232436180115
    2. ' for' → logprob: -1.7467323541641235
    3. '   ' → logprob: -1.9967323541641235
    4. '```' → logprob: -9.746732711791992
    5. 'range' → logprob: -9.871732711791992
    6. '(' → logprob: -10.121732711791992
    7. ':' → logprob: -10.246732711791992
    8. '
' → logprob: -10.496732711791992
    9. 'i' → logprob: -10.746732711791992
    10. ' range' → logprob: -10.871732711791992

Token 932: ' comparing' (ID: 42171)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3535819947719574
    2. 'range' → logprob: -1.2285820245742798
    3. 'for' → logprob: -6.10358190536499
    4. ' i' → logprob: -6.97858190536499
    5. ' range' → logprob: -7.22858190536499
    6. 'checking' → logprob: -8.353582382202148
    7. 'shift' → logprob: -8.603582382202148
    8. 'enumer' → logprob: -8.603582382202148
    9. '```' → logprob: -8.603582382202148
    10. '`' → logprob: -9.603582382202148

Token 933: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04430569335818291
    2. ' for' → logprob: -4.044305801391602
    3. '   ' → logprob: -4.419305801391602
    4. 'i' → logprob: -4.794305801391602
    5. 'a' → logprob: -6.669305801391602
    6. 'n' → logprob: -6.669305801391602
    7. 'range' → logprob: -7.169305801391602
    8. '_' → logprob: -7.669305801391602
    9. '```' → logprob: -7.669305801391602
    10. 'hash' → logprob: -8.544305801391602

Token 934: ' hashes' (ID: 131101)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8470179438591003
    2. 'a' → logprob: -1.5970180034637451
    3. 'hash' → logprob: -2.097018003463745
    4. ' for' → logprob: -2.722018003463745
    5. 'rolling' → logprob: -2.972018003463745
    6. 'next' → logprob: -2.972018003463745
    7. 'b' → logprob: -3.347018003463745
    8. ' next' → logprob: -3.972018003463745
    9. ' hash' → logprob: -5.097017765045166
    10. ' rolling' → logprob: -5.722017765045166

Token 935: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6393424868583679
    2. 'for' → logprob: -1.1393425464630127
    3. '   ' → logprob: -1.8893425464630127
    4. '
' → logprob: -6.889342308044434
    5. '```' → logprob: -10.139342308044434
    6. ':' → logprob: -10.639342308044434
    7. ',' → logprob: -11.264342308044434
    8. '    
' → logprob: -11.264342308044434
    9. '	for' → logprob: -11.639342308044434
    10. ':
' → logprob: -11.639342308044434

Token 936: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13092409074306488
    2. ' for' → logprob: -2.1309239864349365
    3. '   ' → logprob: -5.880924224853516
    4. '```' → logprob: -6.755924224853516
    5. '
' → logprob: -11.130924224853516
    6. '(range' → logprob: -12.005924224853516
    7. 'range' → logprob: -12.755924224853516
    8. '``' → logprob: -12.755924224853516
    9. ' range' → logprob: -13.380924224853516
    10. '`' → logprob: -14.505924224853516

Token 937: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00038837024476379156
    2. ' for' → logprob: -8.250388145446777
    3. '   ' → logprob: -9.000388145446777
    4. '```' → logprob: -12.500388145446777
    5. '	for' → logprob: -17.375389099121094
    6. '``' → logprob: -17.750389099121094
    7. '
' → logprob: -18.375389099121094
    8. '    
' → logprob: -18.875389099121094
    9. '[' → logprob: -20.000389099121094
    10. 'i' → logprob: -20.250389099121094

Token 938: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016919903457164764
    2. ' i' → logprob: -4.14192008972168
    3. 'start' → logprob: -8.26692008972168
    4. 'shift' → logprob: -8.26692008972168
    5. 'x' → logprob: -8.76692008972168
    6. 's' → logprob: -9.39192008972168
    7. 'k' → logprob: -10.51692008972168
    8. 'pos' → logprob: -10.64192008972168
    9. 'offset' → logprob: -11.26692008972168
    10. ' start' → logprob: -11.64192008972168

Token 939: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040865931659936905
    2. 'in' → logprob: -5.504086494445801
    3. ' ' → logprob: -12.8790864944458
    4. '(' → logprob: -14.2540864944458
    5. ')' → logprob: -14.3790864944458
    6. '	in' → logprob: -14.3790864944458
    7. ',' → logprob: -14.5040864944458
    8. 'In' → logprob: -14.5040864944458
    9. '<|end|>' → logprob: -14.7540864944458
    10. '   ' → logprob: -14.7540864944458

Token 940: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '0' → logprob: -17.255233764648438
    4. '(range' → logprob: -18.005233764648438
    5. '   ' → logprob: -18.255233764648438
    6. '	range' → logprob: -18.255233764648438
    7. '```' → logprob: -18.380233764648438
    8. ' ' → logprob: -18.380233764648438
    9. '`' → logprob: -20.505233764648438
    10. 'in' → logprob: -20.630233764648438

Token 941: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011846343986690044
    2. '(' → logprob: -7.126184463500977
    3. 'n' → logprob: -7.876184463500977
    4. '   ' → logprob: -15.126184463500977
    5. ' n' → logprob: -16.376184463500977
    6. '(
' → logprob: -17.126184463500977
    7. '(len' → logprob: -17.501184463500977
    8. '1' → logprob: -17.626184463500977
    9. '	n' → logprob: -18.001184463500977
    10. ' (' → logprob: -18.376184463500977

Token 942: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47684982419013977
    2. '):
' → logprob: -0.9768497943878174
    3. '   ' → logprob: -6.2268500328063965
    4. ',' → logprob: -7.6018500328063965
    5. ':' → logprob: -8.476849555969238
    6. '):
' → logprob: -9.851849555969238
    7. '       ' → logprob: -11.851849555969238
    8. '+' → logprob: -12.726849555969238
    9. ':
' → logprob: -12.726849555969238
    10. '```' → logprob: -12.851849555969238

Token 943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019193733111023903
    2. ' if' → logprob: -4.019193649291992
    3. 'if' → logprob: -7.644193649291992
    4. '```' → logprob: -8.269193649291992
    5. '<|end|>' → logprob: -8.644193649291992
    6. ':' → logprob: -10.394193649291992
    7. '   ' → logprob: -10.394193649291992
    8. ',' → logprob: -10.769193649291992
    9. '#' → logprob: -12.269193649291992
    10. '<|end|>' → logprob: -12.269193649291992

Token 944: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17035222053527832
    2. '       ' → logprob: -2.1703522205352783
    3. ' if' → logprob: -3.1703522205352783
    4. '           ' → logprob: -8.2953519821167
    5. '   ' → logprob: -9.0453519821167
    6. '	if' → logprob: -10.4203519821167
    7. 'hash' → logprob: -10.4203519821167
    8. '```' → logprob: -11.2953519821167
    9. 'v' → logprob: -11.5453519821167
    10. 'h' → logprob: -11.9203519821167

Token 945: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07903299480676651
    2. ' a' → logprob: -2.5790328979492188
    3. '   ' → logprob: -9.329032897949219
    4. 'b' → logprob: -10.454032897949219
    5. ' b' → logprob: -11.079032897949219
    6. '(a' → logprob: -11.954032897949219
    7. '	a' → logprob: -13.704032897949219
    8. ' ' → logprob: -13.954032897949219
    9. '    ' → logprob: -14.329032897949219
    10. '       ' → logprob: -15.454032897949219

Token 946: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009165416471660137
    2. '_x' → logprob: -4.759165287017822
    3. '_hash' → logprob: -7.884165287017822
    4. 'a' → logprob: -9.50916576385498
    5. '._' → logprob: -10.13416576385498
    6. 'x' → logprob: -11.00916576385498
    7. '_' → logprob: -11.88416576385498
    8. '_a' → logprob: -12.00916576385498
    9. '.' → logprob: -12.13416576385498
    10. '```' → logprob: -12.13416576385498

Token 947: '.calc' (ID: 83158)
  Prédit: '.calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calc' → logprob: -1.1279553291387856e-05
    2. ' .' → logprob: -12.375011444091797
    3. ').' → logprob: -13.250011444091797
    4. '.' → logprob: -13.375011444091797
    5. '.calculate' → logprob: -14.125011444091797
    6. '.hash' → logprob: -14.375011444091797
    7. '   ' → logprob: -14.750011444091797
    8. '.cal' → logprob: -14.750011444091797
    9. '{}.' → logprob: -14.750011444091797
    10. 'calc' → logprob: -15.000011444091797

Token 948: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.0008366696420125663
    2. '(i' → logprob: -7.2508368492126465
    3. 'hash' → logprob: -9.000836372375488
    4. 'i' → logprob: -14.000836372375488
    5. '[i' → logprob: -14.125836372375488
    6. '(hash' → logprob: -14.500836372375488
    7. 'a' → logprob: -14.750836372375488
    8. '```' → logprob: -16.000837326049805
    9. '_HASH' → logprob: -16.125837326049805
    10. '(' → logprob: -16.250837326049805

Token 949: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.125036239624023
    4. '((' → logprob: -16.125036239624023
    5. '(
' → logprob: -16.250036239624023
    6. '[i' → logprob: -16.500036239624023
    7. '(I' → logprob: -16.625036239624023
    8. '```' → logprob: -17.375036239624023
    9. 'i' → logprob: -17.500036239624023
    10. '(int' → logprob: -17.875036239624023

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48232847452163696
    2. ',i' → logprob: -0.982328474521637
    3. 'i' → logprob: -4.982328414916992
    4. ' ,' → logprob: -7.107328414916992
    5. '   ' → logprob: -8.732328414916992
    6. '```' → logprob: -9.357328414916992
    7. '[i' → logprob: -9.482328414916992
    8. '       ' → logprob: -9.857328414916992
    9. ',n' → logprob: -9.982328414916992
    10. '(i' → logprob: -10.482328414916992

Token 951: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1160349458805285e-05
    2. 'n' → logprob: -12.625011444091797
    3. '   ' → logprob: -12.625011444091797
    4. ' i' → logprob: -13.125011444091797
    5. '{i' → logprob: -13.750011444091797
    6. '[i' → logprob: -14.250011444091797
    7. '(i' → logprob: -14.875011444091797
    8. '```' → logprob: -15.125011444091797
    9. ' ' → logprob: -16.125011444091797
    10. '`' → logprob: -16.250011444091797

Token 952: ' +' (ID: 659)
  Prédit: '+n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.16123007237911224
    2. '+' → logprob: -1.9112300872802734
    3. ' +' → logprob: -6.911230087280273
    4. 'n' → logprob: -11.786230087280273
    5. '   ' → logprob: -14.536230087280273
    6. '+
' → logprob: -15.286230087280273
    7. '+i' → logprob: -16.036230087280273
    8. '＋' → logprob: -16.536230087280273
    9. '       ' → logprob: -16.661230087280273
    10. '+c' → logprob: -16.661230087280273

Token 953: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.537868779967539e-06
    2. ' n' → logprob: -11.750008583068848
    3. ')n' → logprob: -15.375008583068848
    4. '(n' → logprob: -16.75000762939453
    5. '$n' → logprob: -16.75000762939453
    6. '<|end|>' → logprob: -17.00000762939453
    7. '	n' → logprob: -17.25000762939453
    8. '[n' → logprob: -17.37500762939453
    9. '+n' → logprob: -17.50000762939453
    10. '```' → logprob: -17.75000762939453

Token 954: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010092071170220152
    2. ')==' → logprob: -9.500101089477539
    3. '==' → logprob: -11.000101089477539
    4. ' )' → logprob: -12.000101089477539
    5. ' ==' → logprob: -13.750101089477539
    6. '   ' → logprob: -14.250101089477539
    7. '```' → logprob: -15.250101089477539
    8. '[' → logprob: -15.625101089477539
    9. '`)' → logprob: -15.750101089477539
    10. '    ' → logprob: -15.875101089477539

Token 955: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10021228343248367
    2. '==' → logprob: -2.350212335586548
    3. '    ' → logprob: -13.725212097167969
    4. ')' → logprob: -13.975212097167969
    5. ')==' → logprob: -14.350212097167969
    6. '=' → logprob: -14.475212097167969
    7. ' ' → logprob: -14.600212097167969
    8. ' =' → logprob: -14.600212097167969
    9. '   ' → logprob: -14.975212097167969
    10. '```' → logprob: -14.975212097167969

Token 956: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0206720617134124e-05
    2. ' b' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.875009536743164
    4. ')b' → logprob: -19.375009536743164
    5. '(b' → logprob: -19.500009536743164
    6. '	b' → logprob: -19.500009536743164
    7. '           ' → logprob: -19.875009536743164
    8. '```' → logprob: -20.000009536743164
    9. '       ' → logprob: -20.375009536743164
    10. ' ' → logprob: -21.000009536743164

Token 957: '_hash' (ID: 20844)
  Prédit: '_hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -3.173704271830502e-06
    2. 'hash' → logprob: -12.75000286102295
    3. '```' → logprob: -16.000003814697266
    4. '_HASH' → logprob: -16.625003814697266
    5. '_' → logprob: -18.000003814697266
    6. 'b' → logprob: -18.125003814697266
    7. 'a' → logprob: -18.375003814697266
    8. ')_' → logprob: -18.375003814697266
    9. 'Hash' → logprob: -18.375003814697266
    10. ''_' → logprob: -18.625003814697266

Token 958: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20047354698181152
    2. ':' → logprob: -2.4504735469818115
    3. ' and' → logprob: -2.7004735469818115
    4. '       ' → logprob: -3.8254735469818115
    5. '           ' → logprob: -5.575473785400391
    6. 'and' → logprob: -6.700473785400391
    7. '):
' → logprob: -6.825473785400391
    8. ' =' → logprob: -9.57547378540039
    9. ':
' → logprob: -10.20047378540039
    10. '=' → logprob: -10.32547378540039

Token 959: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014249986270442605
    2. '       ' → logprob: -6.751424789428711
    3. '```' → logprob: -9.126424789428711
    4. '   ' → logprob: -9.751424789428711
    5. ' memo' → logprob: -10.126424789428711
    6. 'memo' → logprob: -11.001424789428711
    7. ' print' → logprob: -12.376424789428711
    8. '#' → logprob: -12.376424789428711
    9. '               ' → logprob: -12.751424789428711
    10. 'print' → logprob: -12.751424789428711

Token 960: ' memo' (ID: 46393)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3385302722454071
    2. 'memo' (adapté à ' memo') → logprob: -2.3385303020477295
    3. 'xor' → logprob: -2.5885303020477295
    4. 'print' → logprob: -2.7135303020477295
    5. '   ' → logprob: -3.9635303020477295
    6. 'k' → logprob: -4.58853006362915
    7. '           ' → logprob: -5.08853006362915
    8. 'val' → logprob: -6.21353006362915
    9. 'ans' → logprob: -6.46353006362915
    10. 'res' → logprob: -6.46353006362915

Token 961: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1080467781284824e-05
    2. '.' → logprob: -10.250041007995605
    3. '.app' → logprob: -12.875041007995605
    4. '.Append' → logprob: -14.000041007995605
    5. '.add' → logprob: -14.375041007995605
    6. '.extend' → logprob: -14.625041007995605
    7. '.setdefault' → logprob: -14.750041007995605
    8. '.push' → logprob: -15.875041007995605
    9. '<|end|>' → logprob: -15.875041007995605
    10. '.ap' → logprob: -16.000041961669922

Token 962: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.003193993354216218
    2. '((' → logprob: -5.7531938552856445
    3. '(str' → logprob: -11.628193855285645
    4. '(' → logprob: -12.628193855285645
    5. 'i' → logprob: -12.628193855285645
    6. '(a' → logprob: -14.753193855285645
    7. '(((' → logprob: -15.753193855285645
    8. '(f' → logprob: -17.37819480895996
    9. '(int' → logprob: -17.62819480895996
    10. ' i' → logprob: -17.75319480895996

Token 963: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07458843290805817
    2. ',' → logprob: -2.6995885372161865
    3. ')
' → logprob: -5.824588298797607
    4. '   ' → logprob: -7.824588298797607
    5. ' )' → logprob: -7.824588298797607
    6. '       ' → logprob: -8.449588775634766
    7. '           ' → logprob: -8.449588775634766
    8. ' ,' → logprob: -9.699588775634766
    9. ',b' → logprob: -9.824588775634766
    10. '+' → logprob: -10.574588775634766

Token 964: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19530650973320007
    2. '
' → logprob: -1.9453065395355225
    3. '    
' → logprob: -4.445306301116943
    4. 'if' → logprob: -5.070306301116943
    5. 'for' → logprob: -5.195306301116943
    6. 'xor' → logprob: -5.820306301116943
    7. '```' → logprob: -6.445306301116943
    8. '#' → logprob: -6.570306301116943
    9. 'print' → logprob: -6.695306301116943
    10. 'x' → logprob: -7.195306301116943

Token 965: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030283667147159576
    2. '   ' → logprob: -3.6552836894989014
    3. 'print' → logprob: -6.030283451080322
    4. '```' → logprob: -7.530283451080322
    5. 'if' → logprob: -7.905283451080322
    6. 'xor' → logprob: -8.28028392791748
    7. '#' (adapté à ' #') → logprob: -8.40528392791748
    8. ' for' → logprob: -9.28028392791748
    9. 'x' → logprob: -10.40528392791748
    10. '
' → logprob: -10.40528392791748

Token 966: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30085307359695435
    2. 'if' → logprob: -1.9258530139923096
    3. 'xor' → logprob: -2.6758530139923096
    4. 'x' → logprob: -4.050853252410889
    5. 'print' → logprob: -4.175853252410889
    6. 'pow' → logprob: -6.300853252410889
    7. 'res' → logprob: -6.425853252410889
    8. '#' → logprob: -6.550853252410889
    9. 'ans' → logprob: -6.550853252410889
    10. '   ' → logprob: -6.550853252410889

Token 967: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21304860711097717
    2. 'for' → logprob: -1.9630485773086548
    3. 'xor' → logprob: -4.213048458099365
    4. ' if' → logprob: -4.588048458099365
    5. 'memo' → logprob: -4.838048458099365
    6. ' for' → logprob: -5.213048458099365
    7. '#' → logprob: -5.588048458099365
    8. 'x' → logprob: -5.963048458099365
    9. '   ' → logprob: -6.338048458099365
    10. 'print' → logprob: -7.088048458099365

Token 968: ' element' (ID: 3577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3685776889324188
    2. ' if' → logprob: -1.7435777187347412
    3. '   ' → logprob: -2.993577718734741
    4. 'memo' → logprob: -3.243577718734741
    5. 'for' → logprob: -3.993577718734741
    6. 'print' → logprob: -4.993577480316162
    7. ' for' → logprob: -4.993577480316162
    8. 'token' → logprob: -6.118577480316162
    9. ' memo' → logprob: -6.243577480316162
    10. 'm' → logprob: -6.368577480316162

Token 969: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26191994547843933
    2. '=' → logprob: -2.8869199752807617
    3. 'a' → logprob: -3.0119199752807617
    4. 'x' → logprob: -3.3869199752807617
    5. ' of' → logprob: -4.011919975280762
    6. '   ' → logprob: -4.011919975280762
    7. 'xor' → logprob: -4.136919975280762
    8. 's' → logprob: -4.386919975280762
    9. 'of' → logprob: -5.886919975280762
    10. ' is' → logprob: -6.011919975280762

Token 970: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7108199000358582
    2. 'a' → logprob: -0.9608199000358582
    3. 'memo' → logprob: -2.085819959640503
    4. ' a' → logprob: -8.085820198059082
    5. ' memo' → logprob: -8.210820198059082
    6. 'm' → logprob: -8.335820198059082
    7. ' b' → logprob: -8.335820198059082
    8. '   ' → logprob: -8.460820198059082
    9. 'sorted' → logprob: -8.960820198059082
    10. '[a' → logprob: -9.335820198059082

Token 971: ' for' (ID: 395)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9147641658782959
    2. '_' → logprob: -1.164764165878296
    3. '_x' → logprob: -1.539764165878296
    4. '_val' → logprob: -3.414764165878296
    5. '[' → logprob: -4.039764404296875
    6. ' =' → logprob: -5.039764404296875
    7. 'xor' → logprob: -5.289764404296875
    8. '_value' → logprob: -5.414764404296875
    9. '_first' → logprob: -6.039764404296875
    10. 'x' → logprob: -7.164764404296875

Token 972: ' later' (ID: 4849)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0044914484024048
    2. 'i' → logprob: -1.5044914484024048
    3. '_' → logprob: -2.1294913291931152
    4. 'xor' → logprob: -2.5044913291931152
    5. '_x' → logprob: -3.0044913291931152
    6. 'b' → logprob: -3.2544913291931152
    7. 'comparison' → logprob: -3.6294913291931152
    8. 'output' → logprob: -4.254491329193115
    9. 'reference' → logprob: -4.879491329193115
    10. 'a' → logprob: -5.004491329193115

Token 973: ' XOR' (ID: 147209)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.526454746723175
    2. 'xor' → logprob: -1.1514546871185303
    3. '   ' → logprob: -3.7764546871185303
    4. 'use' → logprob: -4.276454925537109
    5. 'reference' → logprob: -4.776454925537109
    6. 'a' → logprob: -5.276454925537109
    7. 'b' → logprob: -5.276454925537109
    8. 'X' → logprob: -5.651454925537109
    9. '_x' → logprob: -5.901454925537109
    10. '```' → logprob: -5.901454925537109

Token 974: ' correction' (ID: 43745)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.46569615602493286
    2. 'b' → logprob: -1.465696096420288
    3. '   ' → logprob: -3.590696096420288
    4. 'first' → logprob: -3.590696096420288
    5. 'k' → logprob: -3.965696096420288
    6. 'a' → logprob: -4.715696334838867
    7. 'c' → logprob: -4.715696334838867
    8. 'val' → logprob: -4.965696334838867
    9. 'v' → logprob: -5.090696334838867
    10. ' x' → logprob: -5.465696334838867

Token 975: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8132899403572083
    2. 'b' → logprob: -1.0632898807525635
    3. '   ' → logprob: -2.4382898807525635
    4. 'first' → logprob: -3.0632898807525635
    5. 'c' → logprob: -4.188290119171143
    6. 'bx' → logprob: -4.563290119171143
    7. 's' → logprob: -4.938290119171143
    8. 'ans' → logprob: -5.313290119171143
    9. 'a' → logprob: -5.813290119171143
    10. 'k' → logprob: -5.813290119171143

Token 976: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4837265610694885
    2. 'x' → logprob: -1.6087265014648438
    3. 'first' → logprob: -2.3587265014648438
    4. '   ' → logprob: -3.3587265014648438
    5. 'c' → logprob: -4.733726501464844
    6. 's' → logprob: -4.858726501464844
    7. 'k' → logprob: -4.983726501464844
    8. 'a' → logprob: -5.108726501464844
    9. 'start' → logprob: -5.483726501464844
    10. 'f' → logprob: -5.983726501464844

Token 977: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.7133655548095703
    2. 'x' → logprob: -1.8383655548095703
    3. 'first' → logprob: -1.8383655548095703
    4. 'c' → logprob: -3.4633655548095703
    5. 'start' → logprob: -3.8383655548095703
    6. 'f' → logprob: -4.33836555480957
    7. 's' → logprob: -4.46336555480957
    8. 'bb' → logprob: -4.46336555480957
    9. 'base' → logprob: -4.83836555480957
    10. 'v' → logprob: -4.83836555480957

Token 978: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6016196608543396
    2. '_' → logprob: -0.9766196608543396
    3. '_first' → logprob: -3.2266197204589844
    4. 'first' → logprob: -4.101619720458984
    5. 'f' → logprob: -5.351619720458984
    6. 'v' → logprob: -5.726619720458984
    7. '_f' → logprob: -5.851619720458984
    8. 'x' → logprob: -6.101619720458984
    9. '_val' → logprob: -6.351619720458984
    10. '_x' → logprob: -6.351619720458984

Token 979: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1605932116508484
    2. ' =' → logprob: -1.9105932712554932
    3. '=b' → logprob: -7.910593032836914
    4. 'b' → logprob: -14.035593032836914
    5. ' ' → logprob: -15.035593032836914
    6. '   ' → logprob: -15.160593032836914
    7. ',b' → logprob: -15.660593032836914
    8. ',' → logprob: -15.785593032836914
    9. '```' → logprob: -16.535593032836914
    10. '_' → logprob: -16.660593032836914

Token 980: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.500045776367188
    4. ' ' → logprob: -19.000045776367188
    5. 'a' → logprob: -19.125045776367188
    6. 'int' → logprob: -19.250045776367188
    7. '	b' → logprob: -19.375045776367188
    8. '=b' → logprob: -19.500045776367188
    9. ')b' → logprob: -19.500045776367188
    10. '(b' → logprob: -19.750045776367188

Token 981: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3266858160495758
    2. '0' → logprob: -1.4516857862472534
    3. '_' → logprob: -3.201685905456543
    4. '=' → logprob: -6.326685905456543
    5. ' =' → logprob: -6.326685905456543
    6. 'b' → logprob: -8.701685905456543
    7. '```' → logprob: -11.326685905456543
    8. '
' → logprob: -11.576685905456543
    9. ' ' → logprob: -12.326685905456543
    10. '   ' → logprob: -12.326685905456543

Token 982: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.500004768371582
    3. '-' → logprob: -14.500004768371582
    4. '[' → logprob: -14.562504768371582
    5. '   ' → logprob: -14.625004768371582
    6. '۰' → logprob: -15.000004768371582
    7. '#' → logprob: -16.187503814697266
    8. 'n' → logprob: -16.312503814697266
    9. '1' → logprob: -16.562503814697266
    10. '０' → logprob: -16.625003814697266

Token 983: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.043450940400362015
    2. ']
' → logprob: -3.1684508323669434
    3. ']^' → logprob: -8.168451309204102
    4. ']
' → logprob: -9.543451309204102
    5. ']

' → logprob: -9.918451309204102
    6. ' ]' → logprob: -10.543451309204102
    7. ')' → logprob: -12.418451309204102
    8. '   ' → logprob: -12.418451309204102
    9. '^' → logprob: -12.668451309204102
    10. '0' → logprob: -13.293451309204102

Token 984: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.059255264699459076
    2. '   ' → logprob: -2.934255361557007
    3. '
' → logprob: -6.559255123138428
    4. 'x' → logprob: -6.934255123138428
    5. '```' → logprob: -7.309255123138428
    6. ' for' → logprob: -7.684255123138428
    7. 'xor' → logprob: -8.434255599975586
    8. '    
' → logprob: -8.934255599975586
    9. '``' → logprob: -9.184255599975586
    10. '#' → logprob: -9.309255599975586

Token 985: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012248923303559422
    2. 'print' → logprob: -9.6251220703125
    3. '   ' → logprob: -10.6251220703125
    4. '#' (adapté à ' #') → logprob: -10.7501220703125
    5. 'a' → logprob: -12.2501220703125
    6. ' for' → logprob: -13.1251220703125
    7. '```' → logprob: -13.3751220703125
    8. 'if' → logprob: -14.1251220703125
    9. 'import' → logprob: -15.5001220703125
    10. '``' → logprob: -15.6251220703125

Token 986: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005265804938971996
    2. 'print' → logprob: -8.000526428222656
    3. '#' → logprob: -9.250526428222656
    4. 'if' → logprob: -9.375526428222656
    5. 'import' → logprob: -12.375526428222656
    6. 'a' → logprob: -13.375526428222656
    7. 'from' → logprob: -13.875526428222656
    8. 'b' → logprob: -14.250526428222656
    9. ' for' → logprob: -14.250526428222656
    10. '   ' → logprob: -14.250526428222656

Token 987: ' all' (ID: 722)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22585543990135193
    2. 'pos' → logprob: -1.8508554697036743
    3. 'x' → logprob: -3.8508553504943848
    4. 'idx' → logprob: -4.350855350494385
    5. 'start' → logprob: -5.100855350494385
    6. 'shift' → logprob: -6.600855350494385
    7. 'p' → logprob: -6.850855350494385
    8. 'j' → logprob: -7.475855350494385
    9. 's' → logprob: -7.975855350494385
    10. 'offset' → logprob: -7.975855350494385

Token 988: ' matching' (ID: 20238)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22345003485679626
    2. 'pos' → logprob: -2.223449945449829
    3. 'x' → logprob: -3.098449945449829
    4. 'idx' → logprob: -3.223449945449829
    5. ' i' → logprob: -6.348450183868408
    6. 'm' → logprob: -6.598450183868408
    7. 'v' → logprob: -6.848450183868408
    8. 'index' → logprob: -7.473450183868408
    9. 'res' → logprob: -7.973450183868408
    10. ' idx' → logprob: -8.09844970703125

Token 989: ' positions' (ID: 15897)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07151483744382858
    2. 'pos' → logprob: -3.071514844894409
    3. 'idx' → logprob: -4.82151460647583
    4. 'positions' → logprob: -4.82151460647583
    5. 'x' → logprob: -5.32151460647583
    6. ' i' → logprob: -7.44651460647583
    7. 'index' → logprob: -8.071515083312988
    8. ' positions' → logprob: -8.571515083312988
    9. 'indices' → logprob: -8.821515083312988
    10. 'start' → logprob: -8.946515083312988

Token 990: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2033790796995163
    2. 'in' → logprob: -1.8283790349960327
    3. 'i' → logprob: -4.328379154205322
    4. ' i' → logprob: -4.828379154205322
    5. '   ' → logprob: -6.828379154205322
    6. 'pos' → logprob: -7.953379154205322
    7. ',' → logprob: -8.203378677368164
    8. ':' → logprob: -8.828378677368164
    9. '       ' → logprob: -8.953378677368164
    10. ' for' → logprob: -10.328378677368164

Token 991: ' compute' (ID: 23864)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10127705335617065
    2. ' for' → logprob: -2.3512771129608154
    3. '   ' → logprob: -6.851276874542236
    4. '```' → logprob: -11.851277351379395
    5. '       ' → logprob: -12.851277351379395
    6. 'print' → logprob: -13.976277351379395
    7. '	for' → logprob: -13.976277351379395
    8. '``' → logprob: -16.351276397705078
    9. '
' → logprob: -16.726276397705078
    10. ' ' → logprob: -16.851276397705078

Token 992: ' the' (ID: 290)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1566898226737976
    2. 'for' → logprob: -2.1566898822784424
    3. ' and' → logprob: -4.156689643859863
    4. '   ' → logprob: -4.531689643859863
    5. 'res' → logprob: -7.531689643859863
    6. 'print' → logprob: -7.531689643859863
    7. ' for' → logprob: -7.656689643859863
    8. '```' → logprob: -7.781689643859863
    9. 'x' → logprob: -8.656689643859863
    10. 'xor' → logprob: -8.906689643859863

Token 993: ' XOR' (ID: 147209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.608901858329773
    2. 'x' → logprob: -1.233901858329773
    3. 'print' → logprob: -2.6089019775390625
    4. 'xor' → logprob: -3.4839019775390625
    5. 'c' → logprob: -4.3589019775390625
    6. 'k' → logprob: -4.6089019775390625
    7. 'b' → logprob: -4.7339019775390625
    8. 'res' → logprob: -4.8589019775390625
    9. 'val' → logprob: -5.9839019775390625
    10. 'ans' → logprob: -6.2339019775390625

Token 994: ' shift' (ID: 12847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7751510143280029
    2. '   ' → logprob: -0.9001510143280029
    3. 'with' → logprob: -2.900151014328003
    4. ' for' → logprob: -3.400151014328003
    5. ' with' → logprob: -4.650151252746582
    6. 'and' → logprob: -4.775151252746582
    7. 'of' → logprob: -5.025151252746582
    8. ' and' → logprob: -5.150151252746582
    9. ' of' → logprob: -5.275151252746582
    10. 'result' → logprob: -5.900151252746582

Token 995: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5527489185333252
    2. 'for' → logprob: -1.1777489185333252
    3. ' for' → logprob: -2.177748918533325
    4. ' and' → logprob: -6.177748680114746
    5. '       ' → logprob: -7.677748680114746
    6. 'and' → logprob: -8.177748680114746
    7. 'with' → logprob: -8.927748680114746
    8. ' with' → logprob: -9.427748680114746
    9. ' of' → logprob: -9.802748680114746
    10. 'print' → logprob: -9.927748680114746

Token 996: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0399672985076904
    2. 'or' → logprob: -1.1649672985076904
    3. '=' → logprob: -1.2899672985076904
    4. 'for' → logprob: -3.0399672985076904
    5. '   ' → logprob: -5.9149675369262695
    6. '=
' → logprob: -6.5399675369262695
    7. '
' → logprob: -6.6649675369262695
    8. '_x' → logprob: -6.9149675369262695
    9. '_' → logprob: -7.0399675369262695
    10. 'ors' → logprob: -7.5399675369262695

Token 997: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00048143533058464527
    2. 'for' → logprob: -8.250481605529785
    3. ' print' → logprob: -8.625481605529785
    4. '   ' → logprob: -10.750481605529785
    5. '#' → logprob: -11.625481605529785
    6. '
' → logprob: -12.125481605529785
    7. 'x' → logprob: -13.375481605529785
    8. ' for' → logprob: -14.125481605529785
    9. 'output' → logprob: -14.375481605529785
    10. '#print' → logprob: -14.875481605529785

Token 998: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3571547567844391
    2. '   ' → logprob: -1.3571547269821167
    3. ' for' → logprob: -3.3571548461914062
    4. '(i' → logprob: -5.107154846191406
    5. '       ' → logprob: -7.107154846191406
    6. '```' → logprob: -7.482154846191406
    7. '
' → logprob: -7.857154846191406
    8. '(' → logprob: -9.357154846191406
    9. 'i' → logprob: -10.107154846191406
    10. '	for' → logprob: -10.482154846191406

Token 999: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.058488424867391586
    2. 'f' → logprob: -3.933488368988037
    3. 'x' → logprob: -4.933488368988037
    4. '_' → logprob: -5.058488368988037
    5. '_,' → logprob: -5.308488368988037
    6. 'for' → logprob: -5.558488368988037
    7. 'print' → logprob: -5.808488368988037
    8. 'len' → logprob: -5.808488368988037
    9. '(i' → logprob: -6.433488368988037
    10. 'memo' → logprob: -6.433488368988037

Token 1000: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001315712695941329
    2. ',x' → logprob: -8.00131607055664
    3. '+' → logprob: -8.12631607055664
    4. ' ,' → logprob: -8.12631607055664
    5. '   ' → logprob: -8.25131607055664
    6. ' +' → logprob: -9.75131607055664
    7. '```' → logprob: -11.12631607055664
    8. ')' → logprob: -11.87631607055664
    9. 'x' → logprob: -12.00131607055664
    10. ',b' → logprob: -12.37631607055664

Token 1001: ' x' (ID: 1215)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.442388653755188
    2. ' b' → logprob: -1.442388653755188
    3. 'a' → logprob: -2.6923885345458984
    4. 'x' → logprob: -4.192388534545898
    5. ' a' → logprob: -4.192388534545898
    6. ' (' → logprob: -4.942388534545898
    7. '(a' → logprob: -4.942388534545898
    8. ' x' → logprob: -5.192388534545898
    9. '(b' → logprob: -7.192388534545898
    10. '(' → logprob: -7.692388534545898

Token 1002: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5835488438606262
    2. ')' → logprob: -0.8335488438606262
    3. '   ' → logprob: -5.5835490226745605
    4. '):
' → logprob: -5.8335490226745605
    5. '):' → logprob: -7.7085490226745605
    6. 'for' → logprob: -8.208548545837402
    7. '       ' → logprob: -9.958548545837402
    8. ')
' → logprob: -10.083548545837402
    9. ')

' → logprob: -10.583548545837402
    10. '```' → logprob: -11.208548545837402

Token 1003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06227049604058266
    2. 'for' → logprob: -2.812270402908325
    3. ' for' → logprob: -8.562270164489746
    4. '```' → logprob: -9.187270164489746
    5. '
' → logprob: -12.062270164489746
    6. '    
' → logprob: -13.687270164489746
    7. '``' → logprob: -13.812270164489746
    8. '	for' → logprob: -13.812270164489746
    9. '       ' → logprob: -16.187271118164062
    10. '<|end|>' → logprob: -16.937271118164062

Token 1004: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00030709904967807233
    2. '   ' → logprob: -8.250307083129883
    3. ' for' → logprob: -10.000307083129883
    4. '```' → logprob: -14.625307083129883
    5. '	for' → logprob: -17.125307083129883
    6. '
' → logprob: -18.000307083129883
    7. '``' → logprob: -18.500307083129883
    8. '    
' → logprob: -19.125307083129883
    9. '       ' → logprob: -21.000307083129883
    10. 'from' → logprob: -21.500307083129883

Token 1005: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9095088839530945
    2. 'pos' → logprob: -1.0345089435577393
    3. 'idx' → logprob: -2.0345089435577393
    4. 'x' → logprob: -2.4095089435577393
    5. 'ans' → logprob: -5.40950870513916
    6. 'start' → logprob: -5.90950870513916
    7. 'index' → logprob: -6.03450870513916
    8. 'm' → logprob: -6.15950870513916
    9. 'p' → logprob: -6.28450870513916
    10. 'k' → logprob: -6.40950870513916

Token 1006: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5231426358222961
    2. 'in' → logprob: -0.8981426358222961
    3. '	in' → logprob: -11.89814281463623
    4. '   ' → logprob: -12.52314281463623
    5. ',' → logprob: -12.64814281463623
    6. '_in' → logprob: -13.39814281463623
    7. '```' → logprob: -14.02314281463623
    8. ' ' → logprob: -14.27314281463623
    9. ')' → logprob: -14.77314281463623
    10. 'In' → logprob: -15.14814281463623

Token 1007: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.1274559050798416
    2. 'range' → logprob: -2.127455949783325
    3. ' memo' → logprob: -7.877455711364746
    4. ' range' → logprob: -9.377455711364746
    5. 'm' → logprob: -10.377455711364746
    6. 'memory' → logprob: -12.127455711364746
    7. 'in' → logprob: -12.377455711364746
    8. 'enumer' → logprob: -12.502455711364746
    9. 'mem' → logprob: -12.627455711364746
    10. '   ' → logprob: -12.877455711364746

Token 1008: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03392057120800018
    2. ':' → logprob: -3.5339205265045166
    3. ':
' → logprob: -6.158920764923096
    4. '   ' → logprob: -7.283920764923096
    5. ' in' → logprob: -8.158920288085938
    6. '       ' → logprob: -8.283920288085938
    7. 'in' → logprob: -8.658920288085938
    8. ',n' → logprob: -9.158920288085938
    9. ',x' → logprob: -9.658920288085938
    10. ',in' → logprob: -9.658920288085938

Token 1009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004491716157644987
    2. ' x' → logprob: -6.379491806030273
    3. '```' → logprob: -6.504491806030273
    4. 'x' → logprob: -7.129491806030273
    5. '   ' → logprob: -7.879491806030273
    6. 'print' → logprob: -10.004491806030273
    7. '``' → logprob: -11.254491806030273
    8. ',' → logprob: -11.379491806030273
    9. '
' → logprob: -11.504491806030273
    10. ' print' → logprob: -11.754491806030273

Token 1010: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.20285028219223022
    2. 'print' → logprob: -1.702850341796875
    3. '       ' → logprob: -6.702850341796875
    4. '   ' → logprob: -8.577850341796875
    5. '```' → logprob: -11.577850341796875
    6. ' x' → logprob: -12.077850341796875
    7. ' print' → logprob: -12.827850341796875
    8. '``' → logprob: -14.327850341796875
    9. '	x' → logprob: -14.827850341796875
    10. '
' → logprob: -14.827850341796875

Token 1011: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692999839782715
    2. ' =' → logprob: -2.126929998397827
    3. '   ' → logprob: -14.001930236816406
    4. 'x' → logprob: -14.751930236816406
    5. '=x' → logprob: -15.501930236816406
    6. '=
' → logprob: -16.251930236816406
    7. '=i' → logprob: -16.251930236816406
    8. '       ' → logprob: -16.501930236816406
    9. '```' → logprob: -16.626930236816406
    10. '＝' → logprob: -16.626930236816406

Token 1012: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03371082618832588
    2. 'b' → logprob: -3.4087107181549072
    3. '(a' → logprob: -9.908710479736328
    4. ' a' → logprob: -11.658710479736328
    5. '   ' → logprob: -12.533710479736328
    6. '(b' → logprob: -13.283710479736328
    7. ' b' → logprob: -14.158710479736328
    8. '	a' → logprob: -15.783710479736328
    9. '    ' → logprob: -16.658710479736328
    10. '(' → logprob: -16.783710479736328

Token 1013: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.537206768989563
    2. '[' → logprob: -1.162206768989563
    3. '[i' → logprob: -2.2872066497802734
    4. 'i' → logprob: -6.912206649780273
    5. 'x' → logprob: -8.787206649780273
    6. '^' → logprob: -9.912206649780273
    7. '[x' → logprob: -10.412206649780273
    8. '   ' → logprob: -11.162206649780273
    9. '
' → logprob: -11.787206649780273
    10. '[
' → logprob: -11.787206649780273

Token 1014: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.3135654628276825
    2. ' ^' → logprob: -1.3135654926300049
    3. ' ^=' → logprob: -8.188565254211426
    4. '^{' → logprob: -11.438565254211426
    5. '^(' → logprob: -12.188565254211426
    6. '^^' → logprob: -13.063565254211426
    7. '   ' → logprob: -13.938565254211426
    8. '^[' → logprob: -14.063565254211426
    9. '       ' → logprob: -14.188565254211426
    10. '_^' → logprob: -14.188565254211426

Token 1015: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.4849443838757e-06
    2. ' a' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '       ' → logprob: -18.375003814697266
    5. '           ' → logprob: -19.250003814697266
    6. '(a' → logprob: -19.375003814697266
    7. '    ' → logprob: -19.500003814697266
    8. ' ' → logprob: -20.125003814697266
    9. '     ' → logprob: -20.125003814697266
    10. '
' → logprob: -20.500003814697266

Token 1016: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03716662526130676
    2. '[(' → logprob: -3.9121665954589844
    3. 'i' → logprob: -4.287166595458984
    4. 'a' → logprob: -6.162166595458984
    5. '(i' → logprob: -7.787166595458984
    6. '[' → logprob: -9.037166595458984
    7. '[
' → logprob: -10.037166595458984
    8. '[a' → logprob: -10.287166595458984
    9. '   ' → logprob: -11.912166595458984
    10. '((' → logprob: -12.037166595458984

Token 1017: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.29951977729797363
    2. ']' → logprob: -1.5495197772979736
    3. '-' → logprob: -3.4245197772979736
    4. '^' → logprob: -5.0495195388793945
    5. 'i' → logprob: -5.9245195388793945
    6. ']^' → logprob: -6.1745195388793945
    7. '[' → logprob: -6.2995195388793945
    8. '(i' → logprob: -7.7995195388793945
    9. ' ^' → logprob: -9.549519538879395
    10. ')' → logprob: -10.049519538879395

Token 1018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04345962405204773
    2. 'print' → logprob: -3.16845965385437
    3. ' print' → logprob: -7.918459415435791
    4. '```' → logprob: -9.54345989227295
    5. '<|end|>' → logprob: -11.54345989227295
    6. '   ' → logprob: -11.79345989227295
    7. '
' → logprob: -13.04345989227295
    8. ',' → logprob: -13.29345989227295
    9. '	print' → logprob: -14.29345989227295
    10. '           ' → logprob: -14.41845989227295

Token 1019: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.4021237802808173e-05
    2. '       ' → logprob: -11.250014305114746
    3. ' print' → logprob: -14.000014305114746
    4. '```' → logprob: -16.37501335144043
    5. '   ' → logprob: -19.25001335144043
    6. '	print' → logprob: -19.50001335144043
    7. '
' → logprob: -20.50001335144043
    8. '``' → logprob: -21.75001335144043
    9. '           ' → logprob: -22.75001335144043
    10. 'for' → logprob: -22.87501335144043

Token 1020: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.5597102396423e-05
    2. '(f' → logprob: -10.250035285949707
    3. 'i' → logprob: -15.875035285949707
    4. 'f' → logprob: -21.000036239624023
    5. '(' → logprob: -21.375036239624023
    6. '((' → logprob: -22.250036239624023
    7. '{i' → logprob: -22.625036239624023
    8. '(a' → logprob: -23.000036239624023
    9. '(x' → logprob: -23.125036239624023
    10. ' i' → logprob: -23.125036239624023

Token 1021: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016635251813568175
    2. ',x' → logprob: -8.875165939331055
    3. ' ,' → logprob: -10.625165939331055
    4. ',end' → logprob: -13.625165939331055
    5. ',
' → logprob: -15.500165939331055
    6. '   ' → logprob: -15.625165939331055
    7. ')' → logprob: -15.875165939331055
    8. ',y' → logprob: -16.125165939331055
    9. ',p' → logprob: -16.500165939331055
    10. ',b' → logprob: -16.750165939331055

Token 1022: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5048530030981055e-06
    2. ' x' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '       ' → logprob: -21.500001907348633
    5. '     ' → logprob: -22.375001907348633
    6. '    ' → logprob: -22.375001907348633
    7. ' ' → logprob: -22.750001907348633
    8. '(x' → logprob: -22.875001907348633
    9. '	x' → logprob: -23.250001907348633
    10. '```' → logprob: -23.500001907348633

Token 1023: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')
' → logprob: -14.875000953674316
    4. ')}' → logprob: -18.25
    5. '')' → logprob: -18.5
    6. '())' → logprob: -18.625
    7. ')#' → logprob: -18.75
    8. '),' → logprob: -18.875
    9. '))' → logprob: -19.125
    10. '")' → logprob: -19.25

Token 1024: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1025: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1023
Tokens correctement prédits (1ère position, stricte): 333
Tokens correctement prédits (1ère position, avec adaptation): 354
Tokens correctement prédits (top 10): 713
Précision stricte (1ère position): 32.55%
Précision adaptée (1ère position): 34.60%
Précision (top 10): 69.70%
================================================================================
