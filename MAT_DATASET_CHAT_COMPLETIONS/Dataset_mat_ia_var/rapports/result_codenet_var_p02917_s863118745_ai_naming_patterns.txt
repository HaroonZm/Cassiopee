================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num_elements = int(input())
input_sequence = list(map(int, input().split()))
output_sequence = [0] * num_elements

output_sequence[0] = input_sequence[0]
output_sequence[num_elements - 1] = input_sequence[num_elements - 2]

for index in range(num_elements - 2):
    output_sequence[index + 1] = min(input_sequence[index], input_sequence[index + 1])

print(sum(output_sequence))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: '_elements' (ID: 53344)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005659997928887606
    2. '10' → logprob: -5.880660057067871
    3. '0' → logprob: -6.255660057067871
    4. ' len' → logprob: -7.630660057067871
    5. '32' → logprob: -8.130660057067871
    6. ' n' → logprob: -10.255660057067871
    7. ' []' → logprob: -10.630660057067871
    8. ' int' → logprob: -11.505660057067871
    9. '1' → logprob: -11.505660057067871
    10. '5' → logprob: -11.755660057067871

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011692718835547566
    2. '(num' → logprob: -7.251169204711914
    3. '('' → logprob: -8.876169204711914
    4. '```' → logprob: -9.251169204711914
    5. ' (' → logprob: -9.876169204711914
    6. '()' → logprob: -9.876169204711914
    7. '(input' → logprob: -10.751169204711914
    8. '`' → logprob: -11.001169204711914
    9. '(user' → logprob: -11.501169204711914
    10. '(`' → logprob: -11.501169204711914

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012105880305171013
    2. ')' → logprob: -4.637105941772461
    3. '()' → logprob: -6.637105941772461
    4. '('' → logprob: -8.512105941772461
    5. '("("' → logprob: -8.637105941772461
    6. '(
' → logprob: -8.887105941772461
    7. '())' → logprob: -9.012105941772461
    8. '```' → logprob: -9.262105941772461
    9. '(()' → logprob: -9.762105941772461
    10. '(

' → logprob: -10.512105941772461

Token 6: 'input' (ID: 2586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40486153960227966
    2. '[' → logprob: -2.2798614501953125
    3. ' ' → logprob: -2.7798614501953125
    4. ' for' → logprob: -3.0298614501953125
    5. ')' → logprob: -3.5298614501953125
    6. '+' → logprob: -4.1548614501953125
    7. '*' → logprob: -4.1548614501953125
    8. '=' → logprob: -4.7798614501953125
    9. '#' → logprob: -4.9048614501953125
    10. ''' → logprob: -5.0298614501953125

Token 7: '_sequence' (ID: 55606)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2302965223789215
    2. '()' → logprob: -1.6052964925765991
    3. '('' → logprob: -6.105296611785889
    4. '_data' → logprob: -7.605296611785889
    5. '("("' → logprob: -7.730296611785889
    6. '().' → logprob: -8.35529613494873
    7. '(
' → logprob: -8.48029613494873
    8. '[' → logprob: -8.98029613494873
    9. ''' → logprob: -8.98029613494873
    10. '_' → logprob: -9.23029613494873

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.031314436346292496
    2. '[:]' → logprob: -4.781314373016357
    3. ' =' → logprob: -4.906314373016357
    4. '.' → logprob: -5.406314373016357
    5. '[]' → logprob: -5.531314373016357
    6. '=' → logprob: -5.906314373016357
    7. '.append' → logprob: -7.781314373016357
    8. '```' → logprob: -7.781314373016357
    9. ''' → logprob: -7.906314373016357
    10. '[token' → logprob: -8.406314849853516

Token 9: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.39412593841552734
    2. 'input' → logprob: -1.6441259384155273
    3. ' list' → logprob: -2.3941259384155273
    4. ' []' → logprob: -3.5191259384155273
    5. 'list' → logprob: -4.769125938415527
    6. '[]' → logprob: -6.019125938415527
    7. ' ' → logprob: -7.769125938415527
    8. '[input' → logprob: -8.519125938415527
    9. ' [' → logprob: -10.144125938415527
    10. '(input' → logprob: -10.894125938415527

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027933495584875345
    2. '_' → logprob: -6.752793312072754
    3. '(range' → logprob: -7.252793312072754
    4. '[' → logprob: -8.502793312072754
    5. '(input' → logprob: -8.752793312072754
    6. '```' → logprob: -9.252793312072754
    7. '<|end|>' → logprob: -9.502793312072754
    8. ' (' → logprob: -9.752793312072754
    9. ')' → logprob: -9.877793312072754
    10. '(
' → logprob: -10.002793312072754

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03416978940367699
    2. '(' → logprob: -3.5341696739196777
    3. '(lambda' → logprob: -5.909169673919678
    4. '(input' → logprob: -7.159169673919678
    5. 'int' → logprob: -7.784169673919678
    6. ')' → logprob: -8.909170150756836
    7. '(str' → logprob: -9.534170150756836
    8. '<int' → logprob: -9.784170150756836
    9. '```' → logprob: -9.909170150756836
    10. '[int' → logprob: -10.034170150756836

Token 12: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05227658525109291
    2. '))' → logprob: -3.552276611328125
    3. '(' → logprob: -4.302276611328125
    4. ')' → logprob: -5.677276611328125
    5. '<|end|>' → logprob: -6.677276611328125
    6. 'input' → logprob: -6.802276611328125
    7. ',input' → logprob: -7.802276611328125
    8. '(token' → logprob: -8.177276611328125
    9. '()))' → logprob: -8.302276611328125
    10. '(user' → logprob: -8.427276611328125

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3133077025413513
    2. ' input' → logprob: -1.313307762145996
    3. '(input' → logprob: -10.188307762145996
    4. ')' → logprob: -12.813307762145996
    5. ',input' → logprob: -13.188307762145996
    6. ' ' → logprob: -13.438307762145996
    7. '	input' → logprob: -14.563307762145996
    8. 'range' → logprob: -14.813307762145996
    9. '=input' → logprob: -15.313307762145996
    10. '))' → logprob: -15.438307762145996

Token 14: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7212724089622498
    2. '()))' → logprob: -0.9712724089622498
    3. '())' → logprob: -2.4712724685668945
    4. '().' → logprob: -3.0962724685668945
    5. '()));' → logprob: -6.2212724685668945
    6. '(' → logprob: -6.3462724685668945
    7. '())))' → logprob: -7.0962724685668945
    8. ')' → logprob: -8.096272468566895
    9. '))' → logprob: -8.596272468566895
    10. '()>' → logprob: -8.971272468566895

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007171963807195425
    2. 'strip' → logprob: -7.2507171630859375
    3. ' split' → logprob: -12.500717163085938
    4. 'rstrip' → logprob: -12.750717163085938
    5. '(split' → logprob: -14.375717163085938
    6. 'spl' → logprob: -16.625717163085938
    7. ')' → logprob: -16.750717163085938
    8. ' strip' → logprob: -18.000717163085938
    9. 'read' → logprob: -18.250717163085938
    10. '_split' → logprob: -19.250717163085938

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4893374443054199
    2. '))' → logprob: -0.9893374443054199
    3. '()' → logprob: -5.36433744430542
    4. ')' → logprob: -5.61433744430542
    5. '(' → logprob: -5.61433744430542
    6. '())' → logprob: -5.86433744430542
    7. ')))' → logprob: -8.989337921142578
    8. ''))' → logprob: -9.989337921142578
    9. '())))' → logprob: -10.239337921142578
    10. '()))
' → logprob: -10.614337921142578

Token 17: 'output' (ID: 6130)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2524830102920532
    2. 'c' → logprob: -1.7524830102920532
    3. 'sum' → logprob: -2.2524828910827637
    4. 'for' → logprob: -2.6274828910827637
    5. 'count' → logprob: -2.7524828910827637
    6. 'i' → logprob: -3.1274828910827637
    7. 'result' → logprob: -3.1274828910827637
    8. 'total' → logprob: -3.3774828910827637
    9. 'max' → logprob: -3.6274828910827637
    10. '[' → logprob: -3.7524828910827637

Token 18: '_sequence' (ID: 55606)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09210065007209778
    2. '=' → logprob: -3.2171006202697754
    3. ' =' → logprob: -3.4671006202697754
    4. '[' → logprob: -5.342100620269775
    5. '.' → logprob: -5.467100620269775
    6. '(' → logprob: -5.967100620269775
    7. '[:]' → logprob: -6.342100620269775
    8. '_sequence' → logprob: -7.717100620269775
    9. 's' → logprob: -7.967100620269775
    10. ')' → logprob: -8.092101097106934

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17651313543319702
    2. '=' → logprob: -2.676513195037842
    3. ' =' → logprob: -3.301513195037842
    4. '.' → logprob: -3.551513195037842
    5. '.append' → logprob: -4.301513195037842
    6. '[:]' → logprob: -4.801513195037842
    7. ')' → logprob: -7.051513195037842
    8. '_' → logprob: -7.301513195037842
    9. '```' → logprob: -7.301513195037842
    10. '[]' → logprob: -7.426513195037842

Token 20: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9030854105949402
    2. 'input' → logprob: -1.278085470199585
    3. '[]' → logprob: -1.528085470199585
    4. ' input' → logprob: -2.528085470199585
    5. '[' → logprob: -4.653085231781006
    6. '[input' → logprob: -5.028085231781006
    7. ' [' → logprob: -6.153085231781006
    8. 'list' → logprob: -7.528085231781006
    9. ' list' → logprob: -8.403085708618164
    10. ' ' → logprob: -8.778085708618164

Token 21: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3397316634654999
    2. '0' → logprob: -1.4647316932678223
    3. 'num' → logprob: -3.5897316932678223
    4. 'x' → logprob: -4.089731693267822
    5. ' input' → logprob: -4.589731693267822
    6. ' num' → logprob: -7.464731693267822
    7. ' x' → logprob: -7.714731693267822
    8. 'elem' → logprob: -7.964731693267822
    9. 'i' → logprob: -8.339731216430664
    10. ']' → logprob: -8.464731216430664

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012834525667130947
    2. ',' → logprob: -5.137834548950195
    3. ')]' → logprob: -5.387834548950195
    4. ' ]' → logprob: -6.387834548950195
    5. ')' → logprob: -7.637834548950195
    6. ' for' → logprob: -9.512834548950195
    7. ']*' → logprob: -10.512834548950195
    8. '])' → logprob: -11.512834548950195
    9. 'for' → logprob: -11.887834548950195
    10. ']]' → logprob: -12.262834548950195

Token 23: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19539742171764374
    2. '[' → logprob: -2.19539737701416
    3. ' for' → logprob: -3.44539737701416
    4. '_' → logprob: -4.07039737701416
    5. 'for' → logprob: -5.44539737701416
    6. ')' → logprob: -5.69539737701416
    7. ' ]' → logprob: -6.19539737701416
    8. '*' → logprob: -6.82039737701416
    9. '[:]' → logprob: -6.94539737701416
    10. '+' → logprob: -7.07039737701416

Token 24: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.009794102981686592
    2. ' num' → logprob: -4.634794235229492
    3. '(num' → logprob: -10.509794235229492
    4. 'len' → logprob: -11.634794235229492
    5. '(' → logprob: -14.259794235229492
    6. '	num' → logprob: -15.259794235229492
    7. ' len' → logprob: -15.509794235229492
    8. ' ' → logprob: -15.634794235229492
    9. '<num' → logprob: -15.634794235229492
    10. '$num' → logprob: -15.759794235229492

Token 25: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0008621498709544539
    2. '_' → logprob: -7.125862121582031
    3. '_e' → logprob: -10.000862121582031
    4. ' _' → logprob: -11.875862121582031
    5. '_el' → logprob: -13.875862121582031
    6. '_ELEMENTS' → logprob: -14.250862121582031
    7. '```' → logprob: -14.500862121582031
    8. '_ele' → logprob: -14.500862121582031
    9. 'el' → logprob: -14.625862121582031
    10. '_tokens' → logprob: -14.875862121582031

Token 26: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048603273928165436
    2. ' for' → logprob: -3.6736032962799072
    3. '
' → logprob: -4.548603057861328
    4. 'i' → logprob: -5.423603057861328
    5. '[' → logprob: -6.048603057861328
    6. 'f' → logprob: -7.048603057861328
    7. '\n' → logprob: -7.173603057861328
    8. '(' → logprob: -7.923603057861328
    9. '```' → logprob: -8.048603057861328
    10. ')' → logprob: -8.173603057861328

Token 27: 'output' (ID: 6130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005740015767514706
    2. 'i' → logprob: -8.125574111938477
    3. ' for' → logprob: -9.000574111938477
    4. 'current' → logprob: -9.625574111938477
    5. 'max' → logprob: -11.125574111938477
    6. '```' → logprob: -11.125574111938477
    7. 'index' → logprob: -11.500574111938477
    8. '(' → logprob: -11.500574111938477
    9. ')' → logprob: -12.000574111938477
    10. '
' → logprob: -12.125574111938477

Token 28: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.5768137574195862
    2. '_' → logprob: -0.8268137574195862
    3. '_sequences' → logprob: -7.826813697814941
    4. '```' → logprob: -9.201813697814941
    5. '_s' → logprob: -9.576813697814941
    6. '[' → logprob: -9.701813697814941
    7. 'Sequence' → logprob: -9.951813697814941
    8. '[_' → logprob: -10.201813697814941
    9. '_seq' → logprob: -10.451813697814941
    10. '_sn' → logprob: -10.951813697814941

Token 29: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008256400004029274
    2. ' ' → logprob: -5.383256435394287
    3. '-' → logprob: -5.883256435394287
    4. 'i' → logprob: -8.133255958557129
    5. ']' → logprob: -8.758255958557129
    6. '1' → logprob: -8.883255958557129
    7. 'num' → logprob: -8.883255958557129
    8. ' -' → logprob: -9.633255958557129
    9. ')' → logprob: -10.758255958557129
    10. ' i' → logprob: -12.133255958557129

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03391284868121147
    2. ' ]' → logprob: -3.4089128971099854
    3. ']=' → logprob: -8.408912658691406
    4. '+' → logprob: -11.033912658691406
    5. '=' → logprob: -11.158912658691406
    6. ' =' → logprob: -12.658912658691406
    7. ')]' → logprob: -12.908912658691406
    8. ' +' → logprob: -13.408912658691406
    9. ')' → logprob: -13.533912658691406
    10. '[' → logprob: -14.408912658691406

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5558115839958191
    2. ' =' → logprob: -0.9308115839958191
    3. '+' → logprob: -3.930811643600464
    4. ' ' → logprob: -4.805811405181885
    5. ' +' → logprob: -6.430811405181885
    6. ' +=' → logprob: -6.555811405181885
    7. ',' → logprob: -7.805811405181885
    8. '<|end|>' → logprob: -8.180811882019043
    9. '+=' → logprob: -8.555811882019043
    10. ']' → logprob: -9.805811882019043

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0018969867378473282
    2. ' input' → logprob: -6.376896858215332
    3. '1' → logprob: -9.126896858215332
    4. 'num' → logprob: -10.251896858215332
    5. '0' → logprob: -10.376896858215332
    6. 'output' → logprob: -11.251896858215332
    7. 'int' → logprob: -13.626896858215332
    8. ' ' → logprob: -14.251896858215332
    9. '2' → logprob: -14.626896858215332
    10. '(input' → logprob: -14.876896858215332

Token 34: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0008195152622647583
    2. '_' → logprob: -7.125819683074951
    3. '_sequences' → logprob: -12.750819206237793
    4. ' _' → logprob: -12.750819206237793
    5. '```' → logprob: -13.250819206237793
    6. 'Sequence' → logprob: -13.500819206237793
    7. 'sequence' → logprob: -13.500819206237793
    8. '_s' → logprob: -14.000819206237793
    9. '_elements' → logprob: -14.125819206237793
    10. '_seq' → logprob: -14.500819206237793

Token 35: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1424973713001236e-05
    2. '```' → logprob: -11.125031471252441
    3. '\[' → logprob: -12.500031471252441
    4. '[-' → logprob: -12.750031471252441
    5. ' [' → logprob: -13.000031471252441
    6. '0' → logprob: -13.625031471252441
    7. ' ' → logprob: -13.750031471252441
    8. '[
' → logprob: -13.875031471252441
    9. '[num' → logprob: -14.125031471252441
    10. '[i' → logprob: -15.250031471252441

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001931696751853451
    2. ' ' → logprob: -8.62519359588623
    3. '1' → logprob: -11.87519359588623
    4. '-' → logprob: -12.25019359588623
    5. ']' → logprob: -14.00019359588623
    6. '   ' → logprob: -15.56269359588623
    7. ' -' → logprob: -16.062692642211914
    8. '2' → logprob: -16.312692642211914
    9. '[' → logprob: -17.000192642211914
    10. '9' → logprob: -17.062692642211914

Token 37: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6492339372634888
    2. ')' → logprob: -0.8992339372634888
    3. '+' → logprob: -3.274233818054199
    4. ' ]' → logprob: -4.149233818054199
    5. ' )' → logprob: -4.274233818054199
    6. ' +' → logprob: -6.024233818054199
    7. '*' → logprob: -8.3992338180542
    8. '])' → logprob: -8.5242338180542
    9. ' ])' → logprob: -9.7742338180542
    10. ')]' → logprob: -10.2742338180542

Token 38: 'output' (ID: 6130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29978737235069275
    2. ' for' → logprob: -1.6747874021530151
    3. '+' → logprob: -3.5497872829437256
    4. '
' → logprob: -4.174787521362305
    5. '\n' → logprob: -4.924787521362305
    6. '<|end|>' → logprob: -5.174787521362305
    7. '+
' → logprob: -5.299787521362305
    8. ' ' → logprob: -5.549787521362305
    9. ' 
' → logprob: -6.049787521362305
    10. '\' → logprob: -7.299787521362305

Token 39: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -8.983476436696947e-05
    2. '_' → logprob: -9.750089645385742
    3. '_sequences' → logprob: -10.875089645385742
    4. '_seq' → logprob: -12.625089645385742
    5. 'Sequence' → logprob: -13.000089645385742
    6. '_s' → logprob: -13.500089645385742
    7. 'sequence' → logprob: -13.875089645385742
    8. '```' → logprob: -14.000089645385742
    9. '[' → logprob: -14.375089645385742
    10. '_SEQUENCE' → logprob: -14.750089645385742

Token 40: '[num' (ID: 51359)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07738908380270004
    2. '[' → logprob: -3.3273890018463135
    3. '<|end|>' → logprob: -3.3273890018463135
    4. ' +' → logprob: -6.452389240264893
    5. ' ' → logprob: -8.077388763427734
    6. '*' → logprob: -8.327388763427734
    7. '0' → logprob: -9.077388763427734
    8. '<|end|>' → logprob: -9.452388763427734
    9. '=' → logprob: -9.702388763427734
    10. '```' → logprob: -9.702388763427734

Token 41: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -4.286852345103398e-05
    2. '_' → logprob: -10.250042915344238
    3. '_ELEMENTS' → logprob: -13.125042915344238
    4. '_e' → logprob: -13.500042915344238
    5. ' _' → logprob: -13.500042915344238
    6. '-_' → logprob: -14.250042915344238
    7. '-' → logprob: -14.875042915344238
    8. ')_' → logprob: -15.375042915344238
    9. '```' → logprob: -15.625042915344238
    10. 'elements' → logprob: -15.750042915344238

Token 42: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14273664355278015
    2. ' -' → logprob: -2.0177366733551025
    3. ' ' → logprob: -10.767736434936523
    4. ']' → logprob: -11.017736434936523
    5. '//' → logprob: -11.392736434936523
    6. ' //' → logprob: -12.142736434936523
    7. '1' → logprob: -12.142736434936523
    8. '[' → logprob: -15.017736434936523
    9. '```' → logprob: -15.142736434936523
    10. '2' → logprob: -15.642736434936523

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006728161126375198
    2. ' ' → logprob: -5.006728172302246
    3. '2' → logprob: -11.756728172302246
    4. ']' → logprob: -13.756728172302246
    5. ')' → logprob: -14.069228172302246
    6. ' ' → logprob: -14.194228172302246
    7. '-' → logprob: -14.444228172302246
    8. '>' → logprob: -15.006728172302246
    9. '```' → logprob: -15.319228172302246
    10. '0' → logprob: -15.444228172302246

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002531310310587287
    2. ' ' → logprob: -6.0025315284729
    3. '2' → logprob: -10.502531051635742
    4. ']' → logprob: -11.502531051635742
    5. '   ' → logprob: -12.752531051635742
    6. ')' → logprob: -12.815031051635742
    7. '  ' → logprob: -12.940031051635742
    8. '```' → logprob: -13.627531051635742
    9. ' ' → logprob: -13.690031051635742
    10. '-' → logprob: -14.377531051635742

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03700396791100502
    2. ' ]' → logprob: -3.537003993988037
    3. '=' → logprob: -5.537003993988037
    4. ' =' → logprob: -5.787003993988037
    5. ']=' → logprob: -8.537003517150879
    6. ' ' → logprob: -11.412003517150879
    7. ')' → logprob: -12.287003517150879
    8. '-' → logprob: -12.787003517150879
    9. '[' → logprob: -13.162003517150879
    10. '']' → logprob: -13.787003517150879

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47417792677879333
    2. '=' → logprob: -0.9741779565811157
    3. ' +=' → logprob: -9.724178314208984
    4. ' ' → logprob: -10.599178314208984
    5. '+=' → logprob: -11.724178314208984
    6. ' |=' → logprob: -13.599178314208984
    7. ',' → logprob: -14.099178314208984
    8. ' *=' → logprob: -14.349178314208984
    9. ' ^=' → logprob: -14.599178314208984
    10. '<|end|>' → logprob: -14.599178314208984

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2817279100418091
    2. ' input' → logprob: -1.406727910041809
    3. '0' → logprob: -8.03172779083252
    4. 'output' → logprob: -8.65672779083252
    5. ' output' → logprob: -10.28172779083252
    6. '1' → logprob: -10.90672779083252
    7. ' ' → logprob: -11.15672779083252
    8. 'int' → logprob: -13.03172779083252
    9. '(input' → logprob: -13.53172779083252
    10. '	input' → logprob: -13.96922779083252

Token 48: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -4.370294846012257e-05
    2. '_elements' → logprob: -11.625043869018555
    3. '_sequences' → logprob: -11.875043869018555
    4. ' _' → logprob: -12.125043869018555
    5. 'Sequence' → logprob: -12.125043869018555
    6. '_' → logprob: -12.250043869018555
    7. '```' → logprob: -12.625043869018555
    8. 'put' → logprob: -13.000043869018555
    9. '_s' → logprob: -13.625043869018555
    10. '_put' → logprob: -14.000043869018555

Token 49: '[num' (ID: 51359)
  Prédit: '[num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.1395690143108368
    2. '[-' → logprob: -2.264569044113159
    3. '[' → logprob: -3.639569044113159
    4. '```' → logprob: -10.264569282531738
    5. '1' → logprob: -10.889569282531738
    6. '[len' → logprob: -11.139569282531738
    7. ' [' → logprob: -11.264569282531738
    8. '-' → logprob: -11.389569282531738
    9. 'num' → logprob: -11.764569282531738
    10. '[
' → logprob: -12.639569282531738

Token 50: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -5.3596853831550106e-05
    2. 'elements' → logprob: -9.875053405761719
    3. '_' → logprob: -14.000053405761719
    4. '-' → logprob: -14.625053405761719
    5. '_ELEMENTS' → logprob: -15.000053405761719
    6. 'Elements' → logprob: -15.250053405761719
    7. '-elements' → logprob: -16.62505340576172
    8. 'lements' → logprob: -16.62505340576172
    9. 'el' → logprob: -17.62505340576172
    10. ' elements' → logprob: -17.62505340576172

Token 51: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02725059911608696
    2. ' -' → logprob: -3.6522505283355713
    3. '1' → logprob: -7.02725076675415
    4. ' ' → logprob: -10.027250289916992
    5. '2' → logprob: -11.527250289916992
    6. ')' → logprob: -12.902250289916992
    7. ']' → logprob: -13.027250289916992
    8. '0' → logprob: -14.402250289916992
    9. '`' → logprob: -14.402250289916992
    10. '4' → logprob: -14.527250289916992

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012519778683781624
    2. ' ' → logprob: -4.387519836425781
    3. '2' → logprob: -12.387519836425781
    4. '```' → logprob: -12.762519836425781
    5. ' ' → logprob: -13.512519836425781
    6. '   ' → logprob: -14.637519836425781
    7. '`' → logprob: -15.387519836425781
    8. '  ' → logprob: -15.950019836425781
    9. '<|end|>' → logprob: -16.01251983642578
    10. '-' → logprob: -16.07501983642578

Token 53: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.250015258789062
    3. '```' → logprob: -13.625015258789062
    4. '2' → logprob: -13.875015258789062
    5. '   ' → logprob: -16.250015258789062
    6. '`' → logprob: -16.562515258789062
    7. '<|end|>' → logprob: -17.000015258789062
    8. ')' → logprob: -17.125015258789062
    9. '  ' → logprob: -17.875015258789062
    10. '0' → logprob: -18.000015258789062

Token 54: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3680258095264435
    2. ']' → logprob: -1.243025779724121
    3. '+' → logprob: -3.993025779724121
    4. '<|end|>' → logprob: -8.618025779724121
    5. '```' → logprob: -8.993025779724121
    6. ' ]' → logprob: -9.118025779724121
    7. ' +' → logprob: -9.368025779724121
    8. ' )' → logprob: -9.368025779724121
    9. ')
' → logprob: -9.368025779724121
    10. '']' → logprob: -9.993025779724121

Token 55: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22971364855766296
    2. ' for' → logprob: -2.4797136783599854
    3. '
' → logprob: -2.8547136783599854
    4. '<|end|>' → logprob: -2.8547136783599854
    5. '\n' → logprob: -5.604713439941406
    6. '```' → logprob: -6.479713439941406
    7. ' 
' → logprob: -7.729713439941406
    8. '<|end|>' → logprob: -8.479713439941406
    9. ')' → logprob: -8.604713439941406
    10. 'n' → logprob: -9.854713439941406

Token 56: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0045839231461286545
    2. ' ' → logprob: -5.504583835601807
    3. 'i' → logprob: -8.004584312438965
    4. ' _' → logprob: -9.129584312438965
    5. '_' → logprob: -10.004584312438965
    6. ' ' → logprob: -11.254584312438965
    7. ' index' → logprob: -13.629584312438965
    8. ' idx' → logprob: -13.879584312438965
    9. ' space' → logprob: -14.254584312438965
    10. ' I' → logprob: -14.754584312438965

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014305822551250458
    2. 'in' → logprob: -4.264305591583252
    3. ' ' → logprob: -9.13930606842041
    4. '	in' → logprob: -10.76430606842041
    5. '1' → logprob: -12.76430606842041
    6. '  ' → logprob: -12.88930606842041
    7. ' i' → logprob: -14.01430606842041
    8. 's' → logprob: -14.26430606842041
    9. 'range' → logprob: -14.45180606842041
    10. '```' → logprob: -14.51430606842041

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00045426786527968943
    2. 'range' → logprob: -7.750454425811768
    3. ' ' → logprob: -11.25045394897461
    4. '	range' → logprob: -11.50045394897461
    5. ' xrange' → logprob: -15.37545394897461
    6. '(range' → logprob: -17.00045394897461
    7. '  ' → logprob: -17.12545394897461
    8. '_range' → logprob: -17.25045394897461
    9. ' ' → logprob: -17.62545394897461
    10. '1' → logprob: -18.12545394897461

Token 59: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. ' (' → logprob: -13.875000953674316
    3. '1' → logprob: -15.375000953674316
    4. '(
' → logprob: -16.875001907348633
    5. '(num' → logprob: -19.125001907348633
    6. '[' → logprob: -19.875001907348633
    7. '(

' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.250001907348633
    9. ')' → logprob: -21.750001907348633
    10. '(len' → logprob: -21.875001907348633

Token 60: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00022833107504993677
    2. 'lements' → logprob: -8.750227928161621
    3. '_' → logprob: -9.750227928161621
    4. '_ELEMENTS' → logprob: -11.875227928161621
    5. '-' → logprob: -13.750227928161621
    6. ' ' → logprob: -14.125227928161621
    7. 'elements' → logprob: -14.125227928161621
    8. ' _' → logprob: -14.750227928161621
    9. '```' → logprob: -15.500227928161621
    10. 'ber' → logprob: -15.500227928161621

Token 61: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14451880753040314
    2. ')' → logprob: -3.0195188522338867
    3. ' ):' → logprob: -3.2695188522338867
    4. ' -' → logprob: -3.7695188522338867
    5. '[' → logprob: -4.894518852233887
    6. ' ' → logprob: -5.269518852233887
    7. '-' → logprob: -5.769518852233887
    8. ' )' → logprob: -5.894518852233887
    9. '1' → logprob: -6.394518852233887
    10. ' >' → logprob: -6.769518852233887

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.35070741176605225
    2. ' ' → logprob: -1.8507074117660522
    3. '2' → logprob: -1.9757074117660522
    4. ')' → logprob: -12.725707054138184
    5. ' ' → logprob: -12.850707054138184
    6. '	' → logprob: -13.100707054138184
    7. '  ' → logprob: -13.100707054138184
    8. '3' → logprob: -13.225707054138184
    9. '<|end|>' → logprob: -13.600707054138184
    10. '-' → logprob: -13.663207054138184

Token 63: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04301072657108307
    2. '2' → logprob: -3.168010711669922
    3. ' ' → logprob: -11.668010711669922
    4. '3' → logprob: -13.668010711669922
    5. '   ' → logprob: -14.668010711669922
    6. '```' → logprob: -14.855510711669922
    7. '１' → logprob: -15.043010711669922
    8. '۱' → logprob: -15.668010711669922
    9. '१' → logprob: -16.480510711669922
    10. '১' → logprob: -16.855510711669922

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029743758495897055
    2. ' ):' → logprob: -6.127974510192871
    3. '):
' → logprob: -7.252974510192871
    4. ')' → logprob: -10.127974510192871
    5. ':' → logprob: -11.127974510192871
    6. '+' → logprob: -11.377974510192871
    7. ' ):
' → logprob: -12.877974510192871
    8. '):
' → logprob: -12.877974510192871
    9. ' +' → logprob: -13.002974510192871
    10. ',' → logprob: -13.127974510192871

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00988310668617487
    2. ' output' → logprob: -5.134882926940918
    3. '	output' → logprob: -6.759882926940918
    4. 'output' → logprob: -7.134882926940918
    5. '    
' → logprob: -7.259882926940918
    6. '<|end|>' → logprob: -7.384882926940918
    7. '
' → logprob: -8.884882926940918
    8. ' ' → logprob: -9.509882926940918
    9. '<|end|>' → logprob: -9.884882926940918
    10. '_output' → logprob: -10.009882926940918

Token 66: ' output' (ID: 4733)
  Prédit: ' output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.39434853196144104
    2. '   ' → logprob: -1.2693485021591187
    3. 'output' (adapté à ' output') → logprob: -3.144348621368408
    4. '	output' → logprob: -6.894348621368408
    5. ' ' → logprob: -8.14434814453125
    6. ' if' → logprob: -9.51934814453125
    7. '  ' → logprob: -9.89434814453125
    8. '       ' → logprob: -10.26934814453125
    9. '_output' → logprob: -10.26934814453125
    10. '    
' → logprob: -10.26934814453125

Token 67: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.3856492842023727e-06
    2. '_sequences' → logprob: -14.750000953674316
    3. 'sequence' → logprob: -14.875000953674316
    4. '_' → logprob: -15.375000953674316
    5. '[' → logprob: -16.125001907348633
    6. '_seq' → logprob: -16.250001907348633
    7. 'Sequence' → logprob: -16.375001907348633
    8. '_SEQUENCE' → logprob: -16.750001907348633
    9. '[_' → logprob: -17.875001907348633
    10. '_output' → logprob: -18.000001907348633

Token 68: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.020564895123243332
    2. '[' → logprob: -3.8955647945404053
    3. '[Index' → logprob: -12.020565032958984
    4. 'index' → logprob: -12.395565032958984
    5. ' [' → logprob: -12.395565032958984
    6. '[i' → logprob: -13.520565032958984
    7. '[
' → logprob: -14.145565032958984
    8. '[int' → logprob: -14.145565032958984
    9. '\[' → logprob: -14.270565032958984
    10. '   ' → logprob: -14.270565032958984

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28178244829177856
    2. ' +' → logprob: -1.4067823886871338
    3. ']' → logprob: -7.406782627105713
    4. '+]' → logprob: -12.031782150268555
    5. ' ]' → logprob: -12.531782150268555
    6. ' ' → logprob: -12.656782150268555
    7. '   ' → logprob: -12.656782150268555
    8. ' +
' → logprob: -13.156782150268555
    9. '1' → logprob: -13.406782150268555
    10. ' +=' → logprob: -13.906782150268555

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009882163256406784
    2. '2' → logprob: -5.009881973266602
    3. ' ' → logprob: -5.759881973266602
    4. '   ' → logprob: -11.759881973266602
    5. '  ' → logprob: -14.634881973266602
    6. '```' → logprob: -14.634881973266602
    7. '0' → logprob: -14.822381973266602
    8. ')' → logprob: -15.134881973266602
    9. '3' → logprob: -15.572381973266602
    10. ']' → logprob: -15.884881973266602

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012512121349573135
    2. '2' → logprob: -4.38751220703125
    3. ' ' → logprob: -13.26251220703125
    4. '3' → logprob: -15.51251220703125
    5. '0' → logprob: -16.07501220703125
    6. '   ' → logprob: -16.20001220703125
    7. '１' → logprob: -16.51251220703125
    8. '```' → logprob: -16.70001220703125
    9. '۱' → logprob: -17.20001220703125
    10. '`' → logprob: -17.26251220703125

Token 72: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003907657694071531
    2. ']=' → logprob: -5.878907680511475
    3. ' ]' → logprob: -7.253907680511475
    4. '=' → logprob: -8.378907203674316
    5. ')' → logprob: -9.128907203674316
    6. ' =' → logprob: -10.003907203674316
    7. ']+=' → logprob: -13.003907203674316
    8. '   ' → logprob: -13.128907203674316
    9. '+' → logprob: -13.503907203674316
    10. ')]' → logprob: -13.628907203674316

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07021129876375198
    2. ' =' → logprob: -2.695211410522461
    3. '+=' → logprob: -8.445211410522461
    4. ' +=' → logprob: -9.820211410522461
    5. '=int' → logprob: -13.570211410522461
    6. '+' → logprob: -14.070211410522461
    7. '   ' → logprob: -14.570211410522461
    8. ' ' → logprob: -14.695211410522461
    9. ')' → logprob: -14.945211410522461
    10. ' ^=' → logprob: -15.320211410522461

Token 74: ' min' (ID: 1349)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5817165374755859
    2. 'input' → logprob: -0.8317165374755859
    3. ' max' → logprob: -6.706716537475586
    4. '(input' → logprob: -6.831716537475586
    5. ' (' → logprob: -6.956716537475586
    6. 'max' → logprob: -7.206716537475586
    7. 'output' → logprob: -7.456716537475586
    8. ' output' → logprob: -7.456716537475586
    9. '(' → logprob: -8.831716537475586
    10. '   ' → logprob: -8.956716537475586

Token 75: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1603456735610962
    2. '(' → logprob: -1.9103456735610962
    3. '(output' → logprob: -9.410346031188965
    4. '(
' → logprob: -10.285346031188965
    5. '(

' → logprob: -13.285346031188965
    6. ' (' → logprob: -13.660346031188965
    7. 'input' → logprob: -13.910346031188965
    8. '((' → logprob: -14.535346031188965
    9. '(in' → logprob: -14.660346031188965
    10. '(
' → logprob: -15.660346031188965

Token 76: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -9.088346359931165e-07
    2. 'sequence' → logprob: -14.250000953674316
    3. 'Sequence' → logprob: -16.75
    4. '_SEQUENCE' → logprob: -16.875
    5. '_sequences' → logprob: -17.25
    6. '(sequence' → logprob: -18.375
    7. '_elements' → logprob: -19.125
    8. '_' → logprob: -19.25
    9. ' sequence' → logprob: -19.375
    10. '_seq' → logprob: -19.375

Token 77: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.0206720617134124e-05
    2. '[' → logprob: -12.00001049041748
    3. '(index' → logprob: -13.87501049041748
    4. '[in' → logprob: -14.12501049041748
    5. 'index' → logprob: -14.37501049041748
    6. ' [' → logprob: -14.75001049041748
    7. '[ind' → logprob: -14.75001049041748
    8. '[input' → logprob: -15.00001049041748
    9. ')' → logprob: -16.250009536743164
    10. '[idx' → logprob: -16.375009536743164

Token 78: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.007406431250274181
    2. '+' → logprob: -5.882406234741211
    3. ']' → logprob: -6.382406234741211
    4. ' +' → logprob: -6.507406234741211
    5. ' ],' → logprob: -7.382406234741211
    6. '   ' → logprob: -7.882406234741211
    7. ',' → logprob: -9.257406234741211
    8. '),' → logprob: -9.882406234741211
    9. '],
' → logprob: -9.882406234741211
    10. ' ' → logprob: -10.257406234741211

Token 79: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5231884717941284
    2. ' input' → logprob: -0.8981884717941284
    3. '   ' → logprob: -10.148188591003418
    4. ' ' → logprob: -11.648188591003418
    5. '	input' → logprob: -12.273188591003418
    6. '  ' → logprob: -12.648188591003418
    7. '    ' → logprob: -12.773188591003418
    8. '(input' → logprob: -13.023188591003418
    9. 'output' → logprob: -13.898188591003418
    10. 'index' → logprob: -14.398188591003418

Token 80: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -5.1928003813372925e-05
    2. '_elements' → logprob: -10.250051498413086
    3. 'sequence' → logprob: -11.375051498413086
    4. 'Sequence' → logprob: -13.000051498413086
    5. '_sequences' → logprob: -13.500051498413086
    6. '_SEQUENCE' → logprob: -14.500051498413086
    7. ' sequence' → logprob: -15.750051498413086
    8. '_array' → logprob: -16.375051498413086
    9. '_index' → logprob: -16.625051498413086
    10. '+' → logprob: -16.750051498413086

Token 81: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.052812837064266205
    2. '+' → logprob: -3.5528128147125244
    3. 'index' → logprob: -3.9278128147125244
    4. '[' → logprob: -7.0528130531311035
    5. ' index' → logprob: -7.0528130531311035
    6. '   ' → logprob: -7.1778130531311035
    7. ' +' → logprob: -7.5528130531311035
    8. '	index' → logprob: -10.802812576293945
    9. '[idx' → logprob: -11.302812576293945
    10. ' ' → logprob: -11.427812576293945

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09035712480545044
    2. ' +' → logprob: -2.4653570652008057
    3. ' ' → logprob: -7.090357303619385
    4. '   ' → logprob: -7.840357303619385
    5. ']' → logprob: -9.340356826782227
    6. '    ' → logprob: -10.590356826782227
    7. ']+' → logprob: -10.965356826782227
    8. '  ' → logprob: -11.090356826782227
    9. ' plus' → logprob: -11.590356826782227
    10. '2' → logprob: -12.215356826782227

Token 83: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030126014724373817
    2. '1' → logprob: -3.5301260948181152
    3. ' ' → logprob: -7.905126094818115
    4. '   ' → logprob: -13.030125617980957
    5. '```' → logprob: -13.280125617980957
    6. '  ' → logprob: -14.155125617980957
    7. '3' → logprob: -14.405125617980957
    8. '`' → logprob: -15.217625617980957
    9. '0' → logprob: -15.280125617980957
    10. '２' → logprob: -15.842625617980957

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07008703798055649
    2. '2' → logprob: -2.69508695602417
    3. '3' → logprob: -9.570087432861328
    4. ' ' → logprob: -9.570087432861328
    5. '0' → logprob: -12.070087432861328
    6. '   ' → logprob: -13.320087432861328
    7. '```' → logprob: -13.882587432861328
    8. '  ' → logprob: -14.445087432861328
    9. '`' → logprob: -14.695087432861328
    10. '１' → logprob: -15.507587432861328

Token 85: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4518807530403137
    2. ')' → logprob: -1.076880693435669
    3. '))' → logprob: -4.076880931854248
    4. '),' → logprob: -5.826880931854248
    5. ' )' → logprob: -7.576880931854248
    6. '+' → logprob: -7.701880931854248
    7. '})' → logprob: -7.951880931854248
    8. ')])' → logprob: -8.07688045501709
    9. ',' → logprob: -8.20188045501709
    10. ' ])' → logprob: -8.57688045501709

Token 86: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0066444408148527145
    2. '(output' → logprob: -5.256644248962402
    3. '("("' → logprob: -6.756644248962402
    4. '('' → logprob: -8.506644248962402
    5. '((' → logprob: -11.256644248962402
    6. '()' → logprob: -11.256644248962402
    7. '(input' → logprob: -13.006644248962402
    8. '(`' → logprob: -13.131644248962402
    9. '(len' → logprob: -13.381644248962402
    10. '(()' → logprob: -13.506644248962402

Token 88: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.00523612555116415
    2. '(' → logprob: -5.2552361488342285
    3. 'output' → logprob: -14.25523567199707
    4. '()' → logprob: -14.38023567199707
    5. ')' → logprob: -14.38023567199707
    6. '(
' → logprob: -16.13023567199707
    7. '(outputs' → logprob: -16.13023567199707
    8. '(open' → logprob: -16.25523567199707
    9. ' (' → logprob: -16.25523567199707
    10. '(input' → logprob: -17.00523567199707

Token 89: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -5.512236498361744e-07
    2. 'sequence' → logprob: -15.000000953674316
    3. '_sequences' → logprob: -16.5
    4. '_seq' → logprob: -17.25
    5. '(sequence' → logprob: -17.375
    6. '_' → logprob: -18.125
    7. '_output' → logprob: -18.25
    8. ')' → logprob: -18.625
    9. '_SEQUENCE' → logprob: -19.0
    10. ' sequence' → logprob: -19.125

Token 90: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021648555994034
    2. ')' → logprob: -2.3502163887023926
    3. ')))' → logprob: -12.35021686553955
    4. '))
' → logprob: -13.35021686553955
    5. ' ))' → logprob: -13.72521686553955
    6. ' )' → logprob: -13.85021686553955
    7. ')
' → logprob: -14.10021686553955
    8. '])' → logprob: -14.72521686553955
    9. '),' → logprob: -15.85021686553955
    10. '()))' → logprob: -16.475215911865234


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 43.18%
Précision adaptée (1ère position): 43.18%
Précision (top 10): 79.55%
================================================================================
