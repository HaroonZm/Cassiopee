================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Mélange de styles : procédural, fonctionnel, POO minimaliste, compact, impératif

class RotCmp:
    def __init__(self, src, trg):
        self.s, self.t = src, trg

    def chk(self):
        for k in map(lambda x: self.s[-x:] + self.s[:-x], range(len(self.s))):
            if k == self.t:
                return True
        return False

def rntry():
    s = input()
    t = input()
    rc = RotCmp(s, t)
    if rc.chk():
        print('Yes')
        return
    print('No')

if __name__ != '__main__': rntry()
else:
    for b in range(1):
        s; t = input(), input()
        p = False
        for j in range(len(s)):
            zz = ''.join([s[-j:], s[:-j]])
            if zz == t:
                print('Yes')
                p = True
                break
        if not p:
            print('No')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Mél' (ID: 194741)
  → Token d'amorce (pas de prédiction)

Token 2: 'ange' (ID: 1052)
  → Token d'amorce (pas de prédiction)

Token 3: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6694493293762207
    2. ' =' → logprob: -1.5444493293762207
    3. '#' → logprob: -2.5444493293762207
    4. '=' → logprob: -3.0444493293762207
    5. ':' → logprob: -3.1694493293762207
    6. ' :' → logprob: -3.6694493293762207
    7. 's' → logprob: -3.9194493293762207
    8. '_' → logprob: -4.044449329376221
    9. ' #' → logprob: -4.044449329376221
    10. ' de' → logprob: -5.544449329376221

Token 4: ' styles' (ID: 12849)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2716821432113647
    2. 'l' → logprob: -2.0216822624206543
    3. ' mots' → logprob: -2.6466822624206543
    4. ' code' → logprob: -2.8966822624206543
    5. 'de' → logprob: -3.0216822624206543
    6. ' #' → logprob: -3.1466822624206543
    7. 's' → logprob: -3.2716822624206543
    8. 'm' → logprob: -3.2716822624206543
    9. ' deux' → logprob: -3.2716822624206543
    10. 'd' → logprob: -3.6466822624206543

Token 5: ' :' (ID: 712)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.29711440205574036
    2. ' ' → logprob: -3.172114372253418
    3. ':' → logprob: -3.547114372253418
    4. '#' → logprob: -3.547114372253418
    5. '.css' → logprob: -3.797114372253418
    6. '.' → logprob: -4.047114372253418
    7. ' :' → logprob: -4.297114372253418
    8. 's' → logprob: -4.422114372253418
    9. ' ```' → logprob: -4.422114372253418
    10. ' =' → logprob: -4.422114372253418

Token 6: ' procéd' (ID: 68020)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2536486089229584
    2. '```' → logprob: -2.128648519515991
    3. ' ```' → logprob: -2.628648519515991
    4. '  
' → logprob: -4.62864875793457
    5. ' 
' → logprob: -5.75364875793457
    6. '.css' → logprob: -5.87864875793457
    7. ' .' → logprob: -6.25364875793457
    8. ' #' → logprob: -6.25364875793457
    9. '<style' → logprob: -6.50364875793457
    10. '  ' → logprob: -6.75364875793457

Token 7: 'ural' (ID: 4900)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -1.2741384506225586
    2. 'és' → logprob: -1.2741384506225586
    3. 'ural' → logprob: -1.6491384506225586
    4. 'é' → logprob: -1.7741384506225586
    5. 'ur' → logprob: -3.1491384506225586
    6. '```' → logprob: -4.399138450622559
    7. 'ures' → logprob: -4.899138450622559
    8. 'es' → logprob: -5.274138450622559
    9. 'e' → logprob: -5.274138450622559
    10. 'u' → logprob: -6.774138450622559

Token 8: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1240333318710327
    2. '\' → logprob: -1.2490333318710327
    3. '\n' → logprob: -1.6240333318710327
    4. '_' → logprob: -3.4990334510803223
    5. '#' → logprob: -3.4990334510803223
    6. ' 
' → logprob: -3.7490334510803223
    7. '``' → logprob: -3.8740334510803223
    8. '`' → logprob: -3.9990334510803223
    9. '  
' → logprob: -4.499033451080322
    10. '
' → logprob: -4.874033451080322

Token 9: ' fonction' (ID: 17610)
  Prédit: ' orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orient' → logprob: -0.7438662052154541
    2. ' objet' → logprob: -1.243866205215454
    3. 'orient' → logprob: -2.618866205215454
    4. 'objet' → logprob: -2.743866205215454
    5. '#' → logprob: -3.368866205215454
    6. ' fonction' → logprob: -3.743866205215454
    7. ' #' → logprob: -4.618865966796875
    8. ' objets' → logprob: -4.993865966796875
    9. 'obj' → logprob: -5.243865966796875
    10. '```' → logprob: -5.368865966796875

Token 10: 'nel' (ID: 10085)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0721758604049683
    2. 'a' → logprob: -1.4471758604049683
    3. 'n' → logprob: -1.6971758604049683
    4. 's' → logprob: -2.197175979614258
    5. ',' → logprob: -3.322175979614258
    6. '```' → logprob: -3.322175979614258
    7. '#' → logprob: -4.822175979614258
    8. '(' → logprob: -4.947175979614258
    9. 'nelle' → logprob: -5.072175979614258
    10. ')' → logprob: -5.072175979614258

Token 11: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.5298453569412231
    2. '\n' → logprob: -1.6548453569412231
    3. '```' → logprob: -2.9048452377319336
    4. 'd' → logprob: -2.9048452377319336
    5. '_' → logprob: -3.7798452377319336
    6. 'def' → logprob: -4.029845237731934
    7. 'import' → logprob: -4.154845237731934
    8. '#' → logprob: -4.154845237731934
    9. '`' → logprob: -4.779845237731934
    10. '' → logprob: -5.154845237731934

Token 12: ' P' (ID: 398)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.8757135272026062
    2. ' objet' → logprob: -1.125713586807251
    3. ' orient' → logprob: -2.125713586807251
    4. 'objet' → logprob: -3.500713586807251
    5. ',' → logprob: -3.750713586807251
    6. 'orient' → logprob: -3.875713586807251
    7. 'et' → logprob: -4.000713348388672
    8. ' objets' → logprob: -4.625713348388672
    9. ' class' → logprob: -5.125713348388672
    10. ' ' → logprob: -5.375713348388672

Token 13: 'OO' (ID: 21450)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.8469869494438171
    2. 'ython' → logprob: -0.9719869494438171
    3. 'OO' → logprob: -2.096987009048462
    4. 'ro' → logprob: -4.221986770629883
    5. 'r' → logprob: -4.221986770629883
    6. 'R' → logprob: -4.971986770629883
    7. '```' → logprob: -4.971986770629883
    8. 'oop' → logprob: -5.346986770629883
    9. 'rogram' → logprob: -5.346986770629883
    10. 'y' → logprob: -5.721986770629883

Token 14: ' minimal' (ID: 19957)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8083847165107727
    2. '```' → logprob: -1.183384656906128
    3. '\' → logprob: -2.183384656906128
    4. '
' → logprob: -3.058384656906128
    5. ' 
' → logprob: -3.183384656906128
    6. '#' → logprob: -4.183384895324707
    7. 'import' → logprob: -5.308384895324707
    8. '  
' → logprob: -5.433384895324707
    9. '`' → logprob: -5.558384895324707
    10. ' 

' → logprob: -5.808384895324707

Token 15: 'iste' (ID: 4872)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.4276487827301025
    2. '
' → logprob: -1.6776487827301025
    3. '```' → logprob: -1.6776487827301025
    4. 'import' → logprob: -1.9276487827301025
    5. '\' → logprob: -2.1776487827301025
    6. '#' → logprob: -2.9276487827301025
    7. ' 
' → logprob: -3.6776487827301025
    8. '' → logprob: -4.552648544311523
    9. '  
' → logprob: -5.177648544311523
    10. 'i' → logprob: -5.802648544311523

Token 16: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49273401498794556
    2. '\n' → logprob: -1.4927339553833008
    3. '```' → logprob: -2.117733955383301
    4. ' 
' → logprob: -4.367733955383301
    5. '#' → logprob: -4.992733955383301
    6. 'import' → logprob: -5.242733955383301
    7. '\' → logprob: -5.367733955383301
    8. '' → logprob: -5.742733955383301
    9. '

' → logprob: -5.867733955383301
    10. ' 

' → logprob: -5.867733955383301

Token 17: ' compact' (ID: 21126)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9301790595054626
    2. 'import' → logprob: -1.8051791191101074
    3. ' 
' → logprob: -2.5551791191101074
    4. ' ,' → logprob: -2.6801791191101074
    5. '```' → logprob: -3.0551791191101074
    6. ' import' → logprob: -3.1801791191101074
    7. ',' → logprob: -3.4301791191101074
    8. ' et' → logprob: -3.5551791191101074
    9. ' #' → logprob: -4.055179119110107
    10. '#' → logprob: -4.055179119110107

Token 18: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7616241574287415
    2. '\n' → logprob: -1.2616240978240967
    3. '\' → logprob: -2.1366240978240967
    4. '
' → logprob: -3.1366240978240967
    5. 'import' → logprob: -3.5116240978240967
    6. '#' → logprob: -3.7616240978240967
    7. 'd' → logprob: -5.011624336242676
    8. '`' → logprob: -5.511624336242676
    9. ' 
' → logprob: -5.636624336242676
    10. 'i' → logprob: -5.886624336242676

Token 19: ' impér' (ID: 148162)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9373655915260315
    2. 'import' → logprob: -2.1873655319213867
    3. ' def' → logprob: -2.6873655319213867
    4. ' ' → logprob: -2.8123655319213867
    5. '```' → logprob: -2.9373655319213867
    6. '#' → logprob: -3.1873655319213867
    7. ' 
' → logprob: -3.1873655319213867
    8. ',' → logprob: -3.4373655319213867
    9. ' ,' → logprob: -3.6873655319213867
    10. ' ```' → logprob: -3.9373655319213867

Token 20: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.23643869161605835
    2. 't' → logprob: -3.111438751220703
    3. '```' → logprob: -3.486438751220703
    4. 'ative' → logprob: -3.611438751220703
    5. 'at' → logprob: -3.736438751220703
    6. 'ativement' → logprob: -3.986438751220703
    7. 'e' → logprob: -4.486438751220703
    8. 'a' → logprob: -4.486438751220703
    9. 'ex' → logprob: -4.986438751220703
    10. 'é' → logprob: -5.111438751220703

Token 21: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3207781314849854
    2. '\' → logprob: -1.9457781314849854
    3. '```' → logprob: -1.9457781314849854
    4. 'd' → logprob: -1.9457781314849854
    5. '#' → logprob: -2.3207781314849854
    6. 'def' → logprob: -2.4457781314849854
    7. 'import' → logprob: -2.9457781314849854
    8. '
' → logprob: -3.9457781314849854
    9. 'n' → logprob: -5.195777893066406
    10. ' 
' → logprob: -5.195777893066406

Token 22: 'class' (ID: 1444)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9866141080856323
    2. '
' → logprob: -1.4866141080856323
    3. '\n' → logprob: -2.486614227294922
    4. 'def' → logprob: -2.611614227294922
    5. 'import' → logprob: -2.736614227294922
    6. '#' → logprob: -2.736614227294922
    7. '\' → logprob: -2.861614227294922
    8. 'd' → logprob: -3.736614227294922
    9. ' 
' → logprob: -4.736614227294922
    10. '``' → logprob: -5.236614227294922

Token 23: ' Rot' (ID: 20416)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048527978360652924
    2. ' My' → logprob: -4.04852819442749
    3. ' M' → logprob: -4.54852819442749
    4. ' Mon' → logprob: -5.54852819442749
    5. ' Space' → logprob: -5.67352819442749
    6. ' S' → logprob: -6.29852819442749
    7. ' Mix' → logprob: -6.54852819442749
    8. ' Ma' → logprob: -6.67352819442749
    9. '  ' → logprob: -7.29852819442749
    10. '_' → logprob: -7.79852819442749

Token 24: 'Cmp' (ID: 82950)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.3531063795089722
    2. 'ate' → logprob: -1.8531063795089722
    3. 'ator' → logprob: -1.9781063795089722
    4. 'a' → logprob: -1.9781063795089722
    5. 'ateur' → logprob: -2.1031064987182617
    6. 'ation' → logprob: -3.1031064987182617
    7. 'e' → logprob: -3.2281064987182617
    8. 'or' → logprob: -3.2281064987182617
    9. '```' → logprob: -4.353106498718262
    10. 'er' → logprob: -4.353106498718262

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012523733312264085
    2. '(' → logprob: -7.126252174377441
    3. ' :' → logprob: -8.376252174377441
    4. '():' → logprob: -9.376252174377441
    5. '(object' → logprob: -9.501252174377441
    6. ':
' → logprob: -10.376252174377441
    7. '):' → logprob: -12.126252174377441
    8. ':def' → logprob: -12.501252174377441
    9. ' (' → logprob: -13.126252174377441
    10. '(R' → logprob: -13.376252174377441

Token 26: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08462107181549072
    2. '(' → logprob: -3.209620952606201
    3. ' :' → logprob: -4.334620952606201
    4. '(object' → logprob: -4.459620952606201
    5. '   ' → logprob: -4.709620952606201
    6. '():' → logprob: -5.959620952606201
    7. ' (' → logprob: -6.709620952606201
    8. ' ' → logprob: -6.959620952606201
    9. ':
' → logprob: -7.709620952606201
    10. '```' → logprob: -7.834620952606201

Token 27: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2981027066707611
    2. 'def' (adapté à ' def') → logprob: -1.5481027364730835
    3. '   ' → logprob: -3.173102617263794
    4. ' __' → logprob: -6.923102855682373
    5. '```' → logprob: -7.298102855682373
    6. '__' → logprob: -7.673102855682373
    7. '    ' → logprob: -8.048102378845215
    8. ' ' → logprob: -8.423102378845215
    9. 'class' → logprob: -9.048102378845215
    10. ' """' → logprob: -9.673102378845215

Token 28: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.2802433669567108
    2. '__' → logprob: -2.280243396759033
    3. 'er' → logprob: -3.155243396759033
    4. 'ate' → logprob: -3.405243396759033
    5. 't' → logprob: -4.155243396759033
    6. 'init' → logprob: -4.655243396759033
    7. 'e' → logprob: -4.780243396759033
    8. '_' → logprob: -5.030243396759033
    9. 'def' → logprob: -5.405243396759033
    10. 'ef' → logprob: -5.905243396759033

Token 29: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -14.750000953674316
    3. ' init' → logprob: -15.625000953674316
    4. 'int' → logprob: -18.75
    5. 'in' → logprob: -19.0
    6. 'i' → logprob: -20.25
    7. '_init' → logprob: -20.5
    8. '```' → logprob: -20.5
    9. '	init' → logprob: -20.625
    10. 'eq' → logprob: -20.75

Token 30: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05272926762700081
    2. '(self' → logprob: -4.05272912979126
    3. '__' → logprob: -4.17772912979126
    4. '(' → logprob: -4.42772912979126
    5. '__(
' → logprob: -5.80272912979126
    6. '__((' → logprob: -7.05272912979126
    7. '<|end|>' → logprob: -7.30272912979126
    8. ' (' → logprob: -7.42772912979126
    9. '__(*' → logprob: -7.80272912979126
    10. '```' → logprob: -7.92772912979126

Token 31: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10030964761972427
    2. ' self' → logprob: -2.3503096103668213
    3. ' ' → logprob: -10.225309371948242
    4. ')' → logprob: -10.850309371948242
    5. 's' → logprob: -10.975309371948242
    6. '	self' → logprob: -11.725309371948242
    7. 'a' → logprob: -12.475309371948242
    8. '   ' → logprob: -12.975309371948242
    9. '(self' → logprob: -13.662809371948242
    10. ',' → logprob: -13.725309371948242

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10465791821479797
    2. ' ,' → logprob: -2.4796578884124756
    3. 'self' → logprob: -4.354658126831055
    4. ' self' → logprob: -6.104658126831055
    5. ',self' → logprob: -7.979658126831055
    6. '_self' → logprob: -10.229658126831055
    7. '_,' → logprob: -10.604658126831055
    8. ' ' → logprob: -10.604658126831055
    9. ' )' → logprob: -10.979658126831055
    10. ')' → logprob: -11.104658126831055

Token 33: ' src' (ID: 4537)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0121822357177734
    2. ' s' → logprob: -1.5121822357177734
    3. 'self' → logprob: -2.0121822357177734
    4. 's' → logprob: -2.3871822357177734
    5. ' a' → logprob: -2.7621822357177734
    6. 'a' → logprob: -2.8871822357177734
    7. ' key' → logprob: -4.262182235717773
    8. 'lst' → logprob: -4.887182235717773
    9. ' text' → logprob: -5.012182235717773
    10. ' lst' → logprob: -5.512182235717773

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7233056426048279
    2. '):' → logprob: -0.9733056426048279
    3. ':' → logprob: -2.0983057022094727
    4. ')' → logprob: -5.473305702209473
    5. ' ):' → logprob: -5.723305702209473
    6. ':str' → logprob: -5.973305702209473
    7. ' ,' → logprob: -6.473305702209473
    8. ' :' → logprob: -6.848305702209473
    9. '=' → logprob: -7.098305702209473
    10. '):
' → logprob: -8.973305702209473

Token 35: ' trg' (ID: 160239)
  Prédit: ' tgt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tgt' → logprob: -1.1179389953613281
    2. ' dst' → logprob: -1.2429389953613281
    3. ' trg' → logprob: -2.367938995361328
    4. ' key' → logprob: -2.867938995361328
    5. ' dest' → logprob: -2.992938995361328
    6. 'dst' → logprob: -3.617938995361328
    7. ' ' → logprob: -3.867938995361328
    8. ' rot' → logprob: -4.242938995361328
    9. ' sep' → logprob: -4.242938995361328
    10. ' target' → logprob: -4.367938995361328

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014416282996535301
    2. ',' → logprob: -4.264416217803955
    3. ')' → logprob: -8.764416694641113
    4. ':' → logprob: -10.264416694641113
    5. '   ' → logprob: -11.014416694641113
    6. ' ):' → logprob: -11.014416694641113
    7. '):
' → logprob: -11.514416694641113
    8. '=' → logprob: -12.764416694641113
    9. ' ,' → logprob: -12.889416694641113
    10. '=None' → logprob: -13.139416694641113

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06845571845769882
    2. ':' → logprob: -3.318455696105957
    3. '):' → logprob: -3.818455696105957
    4. ')' → logprob: -5.193455696105957
    5. ',' → logprob: -7.693455696105957
    6. ' :' → logprob: -8.068455696105957
    7. '   ' → logprob: -8.318455696105957
    8. ' ' → logprob: -8.568455696105957
    9. '      ' → logprob: -8.693455696105957
    10. '<|end|>' → logprob: -8.818455696105957

Token 38: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.26958295702934265
    2. 'self' (adapté à ' self') → logprob: -1.644582986831665
    3. '       ' → logprob: -3.144582986831665
    4. ' ' → logprob: -9.894582748413086
    5. '   ' → logprob: -10.644582748413086
    6. '	self' → logprob: -10.894582748413086
    7. '        ' → logprob: -11.644582748413086
    8. ' for' → logprob: -12.269582748413086
    9. 'import' → logprob: -12.894582748413086
    10. '    ' → logprob: -12.894582748413086

Token 39: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011626665480434895
    2. '.src' → logprob: -4.511626720428467
    3. ' .' → logprob: -8.011626243591309
    4. '._' → logprob: -8.636626243591309
    5. '.=' → logprob: -11.511626243591309
    6. '.source' → logprob: -11.636626243591309
    7. '.s' → logprob: -12.261626243591309
    8. '.user' → logprob: -12.261626243591309
    9. ' ' → logprob: -12.511626243591309
    10. 'src' → logprob: -12.886626243591309

Token 40: ',' (ID: 11)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.006720347795635462
    2. 'elf' → logprob: -5.006720542907715
    3. 'r' → logprob: -13.381720542907715
    4. 'el' → logprob: -13.756720542907715
    5. 'src' → logprob: -13.756720542907715
    6. '   ' → logprob: -14.631720542907715
    7. 'ource' → logprob: -15.256720542907715
    8. 'rf' → logprob: -16.1317195892334
    9. 'lf' → logprob: -16.1317195892334
    10. 'tr' → logprob: -16.3817195892334

Token 41: ' self' (ID: 1051)
  Prédit: ' trg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trg' → logprob: -0.2675243318080902
    2. ' t' → logprob: -2.267524242401123
    3. ' self' → logprob: -2.517524242401123
    4. 't' → logprob: -3.517524242401123
    5. 'self' → logprob: -4.267524242401123
    6. ' =' → logprob: -5.892524242401123
    7. ' tgt' → logprob: -6.892524242401123
    8. 'tr' → logprob: -6.892524242401123
    9. 'src' → logprob: -7.142524242401123
    10. '=' → logprob: -8.017524719238281

Token 42: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5115845203399658
    2. '._' → logprob: -2.011584520339966
    3. '.src' → logprob: -2.011584520339966
    4. '.s' → logprob: -3.511584520339966
    5. 'src' → logprob: -4.011584281921387
    6. '_src' → logprob: -4.261584281921387
    7. '.=' → logprob: -4.261584281921387
    8. '=' → logprob: -4.636584281921387
    9. '.t' → logprob: -4.761584281921387
    10. '_' → logprob: -5.136584281921387

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06994165480136871
    2. ' =' → logprob: -2.694941759109497
    3. ',' → logprob: -12.819941520690918
    4. ' ' → logprob: -13.819941520690918
    5. '  ' → logprob: -14.444941520690918
    6. '=int' → logprob: -15.944941520690918
    7. '=

' → logprob: -16.069942474365234
    8. '<|end|>' → logprob: -16.194942474365234
    9. '=s' → logprob: -16.319942474365234
    10. ')' → logprob: -16.319942474365234

Token 44: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.35256633162498474
    2. ' src' → logprob: -1.2275663614273071
    3. ' list' → logprob: -6.977566242218018
    4. '(src' → logprob: -6.977566242218018
    5. 'list' → logprob: -7.227566242218018
    6. '[src' → logprob: -7.852566242218018
    7. 'len' → logprob: -8.352566719055176
    8. ' str' → logprob: -8.602566719055176
    9. 'str' → logprob: -8.727566719055176
    10. ' ' → logprob: -9.102566719055176

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014936201274394989
    2. ' ,' → logprob: -5.3899359703063965
    3. '[' → logprob: -5.7649359703063965
    4. ' ' → logprob: -6.1399359703063965
    5. '.' → logprob: -6.8899359703063965
    6. '[:]' → logprob: -7.1399359703063965
    7. '.split' → logprob: -7.2649359703063965
    8. '[:' → logprob: -7.3899359703063965
    9. '       ' → logprob: -8.264936447143555
    10. '.strip' → logprob: -8.514936447143555

Token 46: ' trg' (ID: 160239)
  Prédit: ' trg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trg' → logprob: -0.31335633993148804
    2. 'tr' → logprob: -1.3133563995361328
    3. '(trg' → logprob: -9.813356399536133
    4. ' ' → logprob: -10.813356399536133
    5. ' tr' → logprob: -11.438356399536133
    6. 't' → logprob: -12.938356399536133
    7. ' ' → logprob: -13.063356399536133
    8. '  ' → logprob: -14.063356399536133
    9. '<tr' → logprob: -14.063356399536133
    10. ' trig' → logprob: -14.688356399536133

Token 47: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05809931829571724
    2. '<|end|>' → logprob: -3.6830992698669434
    3. '   ' → logprob: -4.558099269866943
    4. 'def' → logprob: -4.933099269866943
    5. '    
' → logprob: -5.558099269866943
    6. ' ' → logprob: -5.933099269866943
    7. ' 
' → logprob: -6.683099269866943
    8. ' def' → logprob: -6.808099269866943
    9. '<|end|>' → logprob: -6.808099269866943
    10. '	def' → logprob: -7.433099269866943

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43537408113479614
    2. 'def' → logprob: -1.8103740215301514
    3. '
' → logprob: -1.9353740215301514
    4. ' def' → logprob: -3.3103740215301514
    5. '    
' → logprob: -5.3103742599487305
    6. '	def' → logprob: -6.5603742599487305
    7. '<|end|>' → logprob: -7.5603742599487305
    8. ' ' → logprob: -7.5603742599487305
    9. ' 
' → logprob: -8.31037425994873
    10. '        
' → logprob: -8.81037425994873

Token 49: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020659716799855232
    2. ' def' → logprob: -3.8956596851348877
    3. '   ' → logprob: -9.270659446716309
    4. ' ' → logprob: -12.270659446716309
    5. '@property' → logprob: -12.770659446716309
    6. '@' → logprob: -12.895659446716309
    7. '	def' → logprob: -13.020659446716309
    8. '```' → logprob: -13.145659446716309
    9. '    
' → logprob: -13.645659446716309
    10. '#' → logprob: -14.020659446716309

Token 50: ' chk' (ID: 63648)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6983970403671265
    2. ' __' → logprob: -1.0733970403671265
    3. 'ot' → logprob: -3.823397159576416
    4. ' def' → logprob: -3.948397159576416
    5. '__' → logprob: -4.198397159576416
    6. 'eq' → logprob: -4.323397159576416
    7. ' ' → logprob: -4.573397159576416
    8. ' q' → logprob: -4.698397159576416
    9. 'rot' → logprob: -5.073397159576416
    10. ' eq' → logprob: -5.198397159576416

Token 51: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.44835394620895386
    2. '()' → logprob: -2.4483540058135986
    3. '_rot' → logprob: -3.1983540058135986
    4. '_' → logprob: -3.3233540058135986
    5. 'eq' → logprob: -3.5733540058135986
    6. 's' → logprob: -4.5733537673950195
    7. 'e' → logprob: -4.5733537673950195
    8. 'rot' → logprob: -4.6983537673950195
    9. 'ec' → logprob: -4.9483537673950195
    10. 'char' → logprob: -4.9483537673950195

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24935555458068848
    2. ',' → logprob: -1.6243555545806885
    3. ' ,' → logprob: -5.124355316162109
    4. 'self' → logprob: -5.124355316162109
    5. ' ):' → logprob: -5.749355316162109
    6. ',s' → logprob: -6.124355316162109
    7. ')' → logprob: -6.999355316162109
    8. '_rot' → logprob: -7.749355316162109
    9. ',e' → logprob: -7.874355316162109
    10. ',a' → logprob: -7.874355316162109

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20687776803970337
    2. ' return' → logprob: -2.7068777084350586
    3. ' for' → logprob: -2.8318777084350586
    4. ' if' → logprob: -3.7068777084350586
    5. 'return' → logprob: -4.331877708435059
    6. ' s' → logprob: -5.456877708435059
    7. ' n' → logprob: -5.456877708435059
    8. 'for' → logprob: -5.706877708435059
    9. '   ' → logprob: -6.331877708435059
    10. '        ' → logprob: -6.581877708435059

Token 54: ' for' (ID: 395)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.856357216835022
    2. 'if' → logprob: -1.231357216835022
    3. 'for' (adapté à ' for') → logprob: -1.856357216835022
    4. 's' → logprob: -2.8563570976257324
    5. ' return' → logprob: -4.231357097625732
    6. 'len' → logprob: -4.356357097625732
    7. 'r' → logprob: -5.231357097625732
    8. 'n' → logprob: -5.231357097625732
    9. 'l' → logprob: -5.731357097625732
    10. ' for' → logprob: -5.856357097625732

Token 55: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0040464638732373714
    2. 'i' → logprob: -5.879046440124512
    3. ' s' → logprob: -7.879046440124512
    4. ' _' → logprob: -8.129046440124512
    5. ' k' → logprob: -9.254046440124512
    6. ' self' → logprob: -9.254046440124512
    7. ' c' → logprob: -9.879046440124512
    8. ' ' → logprob: -9.879046440124512
    9. ' r' → logprob: -10.004046440124512
    10. ' x' → logprob: -10.129046440124512

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015077588148415089
    2. 'in' → logprob: -4.515077590942383
    3. ',' → logprob: -5.640077590942383
    4. ' ' → logprob: -8.515077590942383
    5. ' ,' → logprob: -9.890077590942383
    6. '  ' → logprob: -10.015077590942383
    7. '   ' → logprob: -10.140077590942383
    8. 'range' → logprob: -10.515077590942383
    9. ',v' → logprob: -11.015077590942383
    10. 'ine' → logprob: -11.765077590942383

Token 57: ' map' (ID: 4014)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03902095556259155
    2. 'range' → logprob: -3.2890210151672363
    3. ' self' → logprob: -7.789021015167236
    4. 'self' → logprob: -8.414020538330078
    5. ' ' → logprob: -9.164020538330078
    6. '"' → logprob: -9.789020538330078
    7. ' xrange' → logprob: -9.789020538330078
    8. '[' → logprob: -10.914020538330078
    9. '(range' → logprob: -11.039020538330078
    10. ''' → logprob: -11.414020538330078

Token 58: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.3332737386226654
    2. '(str' → logprob: -1.7082737684249878
    3. '(' → logprob: -2.5832736492156982
    4. '(len' → logprob: -3.7082736492156982
    5. '(chr' → logprob: -7.083273887634277
    6. '(ord' → logprob: -7.708273887634277
    7. '(list' → logprob: -8.208273887634277
    8. '(range' → logprob: -8.958273887634277
    9. '(s' → logprob: -9.333273887634277
    10. '(tuple' → logprob: -9.833273887634277

Token 59: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.12180835753679276
    2. 'lambda' → logprob: -2.9968082904815674
    3. ' s' → logprob: -3.8718082904815674
    4. ' str' → logprob: -4.2468085289001465
    5. '(lambda' → logprob: -4.3718085289001465
    6. ' list' → logprob: -5.8718085289001465
    7. ' len' → logprob: -5.9968085289001465
    8. ' self' → logprob: -6.1218085289001465
    9. ' x' → logprob: -6.3718085289001465
    10. 's' → logprob: -6.4968085289001465

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013501237146556377
    2. ' :' → logprob: -5.263501167297363
    3. ':self' → logprob: -5.763501167297363
    4. ':(' → logprob: -6.013501167297363
    5. ',' → logprob: -7.013501167297363
    6. ':list' → logprob: -7.263501167297363
    7. ':[' → logprob: -8.638501167297363
    8. ':int' → logprob: -9.013501167297363
    9. '   ' → logprob: -9.138501167297363
    10. 'lambda' → logprob: -9.388501167297363

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7145984172821045
    2. '(x' → logprob: -1.7145984172821045
    3. 'len' → logprob: -1.9645984172821045
    4. ' (' → logprob: -2.3395984172821045
    5. ' self' → logprob: -2.5895984172821045
    6. 'x' → logprob: -2.8395984172821045
    7. 'chr' → logprob: -2.8395984172821045
    8. '(self' → logprob: -3.4645984172821045
    9. '(len' → logprob: -3.4645984172821045
    10. '(' → logprob: -3.5895984172821045

Token 62: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.12898385524749756
    2. '.t' → logprob: -2.128983974456787
    3. '.' → logprob: -6.753983974456787
    4. 't' → logprob: -8.753983497619629
    5. ' .' → logprob: -8.753983497619629
    6. 's' → logprob: -8.878983497619629
    7. '.x' → logprob: -9.878983497619629
    8. '.k' → logprob: -9.878983497619629
    9. '..' → logprob: -10.191483497619629
    10. '.rotate' → logprob: -10.378983497619629

Token 63: '[-' (ID: 17503)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.32706665992736816
    2. '==' → logprob: -3.327066659927368
    3. '[self' → logprob: -3.452066659927368
    4. '[' → logprob: -3.452066659927368
    5. '[i' → logprob: -3.827066659927368
    6. '+k' → logprob: -3.827066659927368
    7. ' +' → logprob: -4.077066421508789
    8. '+' → logprob: -4.077066421508789
    9. ' in' → logprob: -4.452066421508789
    10. '.find' → logprob: -4.702066421508789

Token 64: 'x' (ID: 87)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10077138245105743
    2. 'len' → logprob: -2.725771427154541
    3. 'x' → logprob: -4.100771427154541
    4. '1' → logprob: -4.475771427154541
    5. '(' → logprob: -7.600771427154541
    6. '+k' → logprob: -7.600771427154541
    7. 'i' → logprob: -7.975771427154541
    8. '(len' → logprob: -8.350770950317383
    9. '+' → logprob: -9.100770950317383
    10. '-k' → logprob: -9.225770950317383

Token 65: ':]' (ID: 67377)
  Prédit: ':],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.006251441780477762
    2. '],' → logprob: -5.506251335144043
    3. '-' → logprob: -6.881251335144043
    4. ':' → logprob: -7.256251335144043
    5. '1' → logprob: -8.506251335144043
    6. ':]' → logprob: -9.631251335144043
    7. '::-' → logprob: -10.006251335144043
    8. '::' → logprob: -11.006251335144043
    9. '2' → logprob: -11.006251335144043
    10. ':].' → logprob: -11.131251335144043

Token 66: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.053354024887085
    2. ' +' → logprob: -1.303354024887085
    3. '+' → logprob: -1.553354024887085
    4. ' ,' → logprob: -2.428354024887085
    5. '+k' → logprob: -3.428354024887085
    6. '==' → logprob: -3.803354024887085
    7. ' ==' → logprob: -4.428354263305664
    8. '[::-' → logprob: -5.553354263305664
    9. '   ' → logprob: -5.928354263305664
    10. '+,' → logprob: -6.803354263305664

Token 67: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022705048322678
    2. ' self' → logprob: -2.350227117538452
    3. ' ' → logprob: -11.475227355957031
    4. '  ' → logprob: -12.225227355957031
    5. '
' → logprob: -14.100227355957031
    6. 's' → logprob: -14.100227355957031
    7. '(self' → logprob: -14.100227355957031
    8. '-self' → logprob: -14.350227355957031
    9. '	self' → logprob: -14.725227355957031
    10. '   ' → logprob: -15.350227355957031

Token 68: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.028268376365303993
    2. 's' → logprob: -3.778268337249756
    3. '.t' → logprob: -5.403268337249756
    4. 't' → logprob: -7.778268337249756
    5. '_s' → logprob: -9.653268814086914
    6. '.' → logprob: -11.653268814086914
    7. '_t' → logprob: -12.028268814086914
    8. '-s' → logprob: -12.778268814086914
    9. ''s' → logprob: -13.028268814086914
    10. ' t' → logprob: -14.028268814086914

Token 69: '[:-' (ID: 63556)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.2172566652297974
    2. '[:-' → logprob: -1.2172566652297974
    3. '[-' → logprob: -1.9672566652297974
    4. '[x' → logprob: -2.217256546020508
    5. '[k' → logprob: -2.217256546020508
    6. ')' → logprob: -4.842256546020508
    7. '           ' → logprob: -4.842256546020508
    8. '       ' → logprob: -5.217256546020508
    9. '[len' → logprob: -5.217256546020508
    10. '   ' → logprob: -5.467256546020508

Token 70: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16030943393707275
    2. 'k' → logprob: -1.9103094339370728
    3. '-k' → logprob: -10.035309791564941
    4. 'len' → logprob: -10.285309791564941
    5. ' x' → logprob: -12.660309791564941
    6. '1' → logprob: -13.535309791564941
    7. ' k' → logprob: -13.535309791564941
    8. '-x' → logprob: -14.785309791564941
    9. ' ' → logprob: -15.035309791564941
    10. '-' → logprob: -15.410309791564941

Token 71: '],' (ID: 2155)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5076939463615417
    2. '],' → logprob: -1.0076940059661865
    3. ']),' → logprob: -4.257693767547607
    4. ')' → logprob: -4.882693767547607
    5. ']' → logprob: -5.007693767547607
    6. ',' → logprob: -6.382693767547607
    7. '1' → logprob: -7.132693767547607
    8. '   ' → logprob: -7.257693767547607
    9. '       ' → logprob: -8.257694244384766
    10. '])' → logprob: -8.257694244384766

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03813972324132919
    2. ' range' → logprob: -3.288139820098877
    3. '   ' → logprob: -10.163139343261719
    4. '[' → logprob: -10.288139343261719
    5. ' ' → logprob: -11.163139343261719
    6. '  ' → logprob: -12.163139343261719
    7. '(range' → logprob: -13.038139343261719
    8. '    ' → logprob: -13.788139343261719
    9. '       ' → logprob: -13.788139343261719
    10. '	range' → logprob: -14.413139343261719

Token 73: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0788925439119339
    2. '(' → logprob: -2.578892469406128
    3. '1' → logprob: -13.703892707824707
    4. 'len' → logprob: -14.203892707824707
    5. ' len' → logprob: -14.453892707824707
    6. '	len' → logprob: -15.828892707824707
    7. '<len' → logprob: -16.70389175415039
    8. '(length' → logprob: -16.70389175415039
    9. '(-' → logprob: -17.07889175415039
    10. ' ' → logprob: -17.07889175415039

Token 74: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002264328533783555
    2. '(' → logprob: -6.127264499664307
    3. '(s' → logprob: -9.502264022827148
    4. 'self' → logprob: -12.752264022827148
    5. '(
' → logprob: -14.752264022827148
    6. '(sel' → logprob: -14.877264022827148
    7. '(this' → logprob: -15.252264022827148
    8. ' (' → logprob: -15.752264022827148
    9. ' self' → logprob: -15.877264022827148
    10. 's' → logprob: -16.25226402282715

Token 75: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0006333283381536603
    2. 's' → logprob: -8.125633239746094
    3. ')' → logprob: -9.250633239746094
    4. '(s' → logprob: -9.375633239746094
    5. '.t' → logprob: -9.375633239746094
    6. '.' → logprob: -10.500633239746094
    7. '(' → logprob: -11.000633239746094
    8. ')s' → logprob: -12.125633239746094
    9. '))' → logprob: -12.250633239746094
    10. ' .' → logprob: -12.625633239746094

Token 76: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023025672882795334
    2. ')):' → logprob: -4.0230255126953125
    3. ')' → logprob: -6.0230255126953125
    4. ' ))' → logprob: -6.5230255126953125
    5. ')))' → logprob: -8.398025512695312
    6. '):' → logprob: -8.648025512695312
    7. '))))' → logprob: -9.023025512695312
    8. '()))' → logprob: -9.523025512695312
    9. ')));' → logprob: -9.523025512695312
    10. '       ' → logprob: -9.648025512695312

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008640571613796055
    2. '):
' → logprob: -7.750864028930664
    3. '       ' → logprob: -8.500864028930664
    4. ':' → logprob: -9.125864028930664
    5. ')' → logprob: -9.750864028930664
    6. ' ):' → logprob: -10.625864028930664
    7. '           ' → logprob: -11.125864028930664
    8. '):
' → logprob: -11.750864028930664
    9. ')):' → logprob: -12.000864028930664
    10. '   ' → logprob: -12.750864028930664

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03316988795995712
    2. ':' → logprob: -4.533169746398926
    3. '<|end|>' → logprob: -4.658169746398926
    4. '       ' → logprob: -5.033169746398926
    5. '               ' → logprob: -6.908169746398926
    6. ' if' → logprob: -7.033169746398926
    7. ' ' → logprob: -7.158169746398926
    8. ',' → logprob: -7.408169746398926
    9. '            ' → logprob: -7.783169746398926
    10. '        ' → logprob: -7.908169746398926

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4423931837081909
    2. 'if' (adapté à ' if') → logprob: -1.067393183708191
    3. '               ' → logprob: -4.6923933029174805
    4. '           ' → logprob: -5.4423933029174805
    5. 'return' → logprob: -10.69239330291748
    6. ' ' → logprob: -11.06739330291748
    7. ' return' → logprob: -11.19239330291748
    8. '   ' → logprob: -11.31739330291748
    9. '            ' → logprob: -11.44239330291748
    10. 'yield' → logprob: -11.94239330291748

Token 80: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06303534656763077
    2. 'k' → logprob: -2.813035249710083
    3. ' self' → logprob: -7.063035488128662
    4. 'self' → logprob: -8.688035011291504
    5. '            ' → logprob: -11.188035011291504
    6. '           ' → logprob: -11.313035011291504
    7. ' ' → logprob: -12.188035011291504
    8. '   ' → logprob: -12.563035011291504
    9. '	k' → logprob: -13.188035011291504
    10. '    ' → logprob: -13.438035011291504

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10033746063709259
    2. '==' → logprob: -2.350337505340576
    3. ' in' → logprob: -9.725337028503418
    4. '=' → logprob: -10.975337028503418
    5. ' =' → logprob: -11.600337028503418
    6. ' ' → logprob: -11.725337028503418
    7. '===' → logprob: -12.100337028503418
    8. ')==' → logprob: -12.225337028503418
    9. '  ' → logprob: -12.475337028503418
    10. ')' → logprob: -12.600337028503418

Token 82: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10022026300430298
    2. 'self' → logprob: -2.350220203399658
    3. ' ' → logprob: -11.975220680236816
    4. ' ' → logprob: -13.100220680236816
    5. '	self' → logprob: -13.100220680236816
    6. '    ' → logprob: -14.475220680236816
    7. '(self' → logprob: -14.475220680236816
    8. ' the' → logprob: -15.225220680236816
    9. '       ' → logprob: -15.475220680236816
    10. '           ' → logprob: -15.850220680236816

Token 83: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.00010437761375214905
    2. '.' → logprob: -9.250103950500488
    3. ' .' → logprob: -12.875103950500488
    4. 't' → logprob: -12.875103950500488
    5. ').' → logprob: -14.375103950500488
    6. '`.' → logprob: -14.875103950500488
    7. ''.' → logprob: -15.125103950500488
    8. '	t' → logprob: -15.375103950500488
    9. '```' → logprob: -15.375103950500488
    10. '".' → logprob: -15.875103950500488

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015424765879288316
    2. ':
' → logprob: -7.126542568206787
    3. ':return' → logprob: -7.376542568206787
    4. ' :' → logprob: -9.876542091369629
    5. '               ' → logprob: -9.876542091369629
    6. '           ' → logprob: -12.376542091369629
    7. '):' → logprob: -13.501542091369629
    8. ':
' → logprob: -14.751542091369629
    9. '<|end|>' → logprob: -14.751542091369629
    10. '.' → logprob: -14.751542091369629

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001189041300676763
    2. ' return' → logprob: -7.376189231872559
    3. ':return' → logprob: -8.501189231872559
    4. 'return' → logprob: -9.001189231872559
    5. ':' → logprob: -9.626189231872559
    6. '           ' → logprob: -10.001189231872559
    7. '
' → logprob: -10.001189231872559
    8. '<|end|>' → logprob: -11.376189231872559
    9. '              ' → logprob: -11.501189231872559
    10. ':
' → logprob: -11.501189231872559

Token 86: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17354609072208405
    2. ' return' → logprob: -2.423546075820923
    3. '               ' → logprob: -2.673546075820923
    4. '	return' → logprob: -7.048546314239502
    5. '                   ' → logprob: -7.798546314239502
    6. '           ' → logprob: -8.673545837402344
    7. ':return' → logprob: -8.798545837402344
    8. 'True' → logprob: -10.923545837402344
    9. '	           ' → logprob: -11.298545837402344
    10. ' ' → logprob: -11.423545837402344

Token 87: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.47416114807128906
    2. 'True' → logprob: -0.9741611480712891
    3. '1' → logprob: -9.599161148071289
    4. '0' → logprob: -12.474161148071289
    5. ' ' → logprob: -12.599161148071289
    6. '(True' → logprob: -12.599161148071289
    7. 'False' → logprob: -13.474161148071289
    8. 'Tr' → logprob: -13.599161148071289
    9. ' Tru' → logprob: -14.099161148071289
    10. ' False' → logprob: -15.099161148071289

Token 88: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002465548226609826
    2. 'False' → logprob: -7.127465724945068
    3. '
' → logprob: -7.502465724945068
    4. 'None' → logprob: -8.00246524810791
    5. '   ' → logprob: -8.75246524810791
    6. 'return' → logprob: -8.87746524810791
    7. 'True' → logprob: -9.62746524810791
    8. '<|end|>' → logprob: -9.87746524810791
    9. '      ' → logprob: -10.12746524810791
    10. '' → logprob: -10.12746524810791

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000995890935882926
    2. 'False' → logprob: -7.125996112823486
    3. '   ' → logprob: -9.750995635986328
    4. ' False' → logprob: -10.375995635986328
    5. 'None' → logprob: -11.125995635986328
    6. 'return' → logprob: -11.375995635986328
    7. '      ' → logprob: -11.375995635986328
    8. ' ' → logprob: -11.875995635986328
    9. '<|end|>' → logprob: -11.875995635986328
    10. '	' → logprob: -12.000995635986328

Token 90: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.016562826931476593
    2. 'return' (adapté à ' return') → logprob: -4.5165629386901855
    3. '       ' → logprob: -5.3915629386901855
    4. '   ' → logprob: -8.016562461853027
    5. ' False' → logprob: -8.016562461853027
    6. 'None' → logprob: -9.516562461853027
    7. '```' → logprob: -9.891562461853027
    8. 'F' → logprob: -10.141562461853027
    9. 'false' → logprob: -10.266562461853027
    10. ' return' → logprob: -10.766562461853027

Token 91: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16022412478923798
    2. ' False' → logprob: -1.9102240800857544
    3. '(False' → logprob: -18.03522491455078
    4. 'F' → logprob: -20.53522491455078
    5. '=False' → logprob: -20.53522491455078
    6. 'True' → logprob: -22.03522491455078
    7. '.False' → logprob: -22.16022491455078
    8. 'Falsy' → logprob: -22.66022491455078
    9. 'None' → logprob: -22.78522491455078
    10. ' True' → logprob: -22.91022491455078

Token 92: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.618527889251709
    2. '#' → logprob: -1.243527889251709
    3. '<|end|>' → logprob: -2.868527889251709
    4. 'r' → logprob: -2.993527889251709
    5. ' 
' → logprob: -4.118527889251709
    6. 'n' → logprob: -4.493527889251709
    7. '.' → logprob: -5.243527889251709
    8. ')' → logprob: -5.368527889251709
    9. '
' → logprob: -5.368527889251709
    10. '\n' → logprob: -5.993527889251709

Token 93: 'def' (ID: 1314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4548039138317108
    2. '#' → logprob: -1.0798039436340332
    3. ' ' → logprob: -4.579803943634033
    4. ')' → logprob: -5.454803943634033
    5. '.' → logprob: -6.079803943634033
    6. 'n' → logprob: -6.329803943634033
    7. 'a' → logprob: -6.704803943634033
    8. 'R' → logprob: -6.954803943634033
    9. '<|end|>' → logprob: -7.454803943634033
    10. '```' → logprob: -7.704803943634033

Token 94: ' rn' (ID: 111778)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1910088211297989
    2. ' is' → logprob: -2.3160088062286377
    3. ' ' → logprob: -4.191009044647217
    4. ' rot' → logprob: -4.316009044647217
    5. ' rotate' → logprob: -4.441009044647217
    6. ' check' → logprob: -5.066009044647217
    7. ' ro' → logprob: -5.066009044647217
    8. 'r' → logprob: -5.066009044647217
    9. ' main' → logprob: -6.066009044647217
    10. ' roto' → logprob: -6.628509044647217

Token 95: 'try' (ID: 1806)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3598858714103699
    2. 'g' → logprob: -1.2348859310150146
    3. 'ge' → logprob: -4.7348856925964355
    4. 'a' → logprob: -7.1098856925964355
    5. '```' → logprob: -7.2348856925964355
    6. 'dom' → logprob: -7.7348856925964355
    7. 'gs' → logprob: -10.109886169433594
    8. 'e' → logprob: -10.109886169433594
    9. 'dm' → logprob: -10.109886169433594
    10. 'gg' → logprob: -10.359886169433594

Token 96: '():
' (ID: 8595)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7532126903533936
    2. 'pt' → logprob: -1.5032126903533936
    3. '():' → logprob: -1.8782126903533936
    4. '(p' → logprob: -2.1282126903533936
    5. 'ption' → logprob: -4.628212928771973
    6. '(' → logprob: -5.128212928771973
    7. '()' → logprob: -5.253212928771973
    8. '_p' → logprob: -5.878212928771973
    9. '(pt' → logprob: -6.253212928771973
    10. '(s' → logprob: -7.003212928771973

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019021015614271164
    2. 'n' → logprob: -7.751902103424072
    3. 'r' → logprob: -7.876902103424072
    4. '    ' → logprob: -8.501901626586914
    5. 'a' → logprob: -9.126901626586914
    6. ' pass' → logprob: -9.376901626586914
    7. ' s' → logprob: -9.376901626586914
    8. ' ' → logprob: -9.501901626586914
    9. 's' → logprob: -9.751901626586914
    10. ' return' → logprob: -9.876901626586914

Token 98: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.32517972588539124
    2. 'r' → logprob: -2.2001798152923584
    3. '   ' → logprob: -2.8251798152923584
    4. 'n' → logprob: -3.5751798152923584
    5. 'try' → logprob: -3.9501798152923584
    6. 'a' → logprob: -4.075179576873779
    7. ' s' → logprob: -4.575179576873779
    8. 'i' → logprob: -4.950179576873779
    9. 'src' → logprob: -5.325179576873779
    10. 'p' → logprob: -5.700179576873779

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30954134464263916
    2. ' =' → logprob: -1.6845413446426392
    3. '=input' → logprob: -2.6845412254333496
    4. ',' → logprob: -4.43454122543335
    5. '1' → logprob: -8.309541702270508
    6. 's' → logprob: -9.309541702270508
    7. '=str' → logprob: -9.559541702270508
    8. 'tr' → logprob: -10.434541702270508
    9. '=int' → logprob: -10.684541702270508
    10. ',input' → logprob: -11.559541702270508

Token 100: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016453199088573456
    2. ' input' → logprob: -4.141453266143799
    3. '"' → logprob: -9.01645278930664
    4. 'str' → logprob: -9.64145278930664
    5. '(input' → logprob: -9.76645278930664
    6. '=input' → logprob: -10.01645278930664
    7. '""' → logprob: -11.01645278930664
    8. '<input' → logprob: -11.26645278930664
    9. '	input' → logprob: -11.39145278930664
    10. '"""' → logprob: -11.39145278930664

Token 101: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0070749251171946526
    2. '(' → logprob: -5.00707483291626
    3. '()>' → logprob: -9.132075309753418
    4. '("")' → logprob: -9.632075309753418
    5. '("' → logprob: -10.132075309753418
    6. '('' → logprob: -10.382075309753418
    7. '().' → logprob: -10.507075309753418
    8. '("("' → logprob: -11.382075309753418
    9. ' ()' → logprob: -11.507075309753418
    10. '())' → logprob: -11.507075309753418

Token 102: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39719635248184204
    2. '   ' → logprob: -1.3971962928771973
    3. ' t' → logprob: -3.1471962928771973
    4. 'tr' → logprob: -4.397196292877197
    5. 'r' → logprob: -4.522196292877197
    6. 'n' → logprob: -5.522196292877197
    7. ' trg' → logprob: -6.397196292877197
    8. 'a' → logprob: -6.522196292877197
    9. '<|end|>' → logprob: -6.772196292877197
    10. 'return' → logprob: -7.522196292877197

Token 103: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.002919353311881423
    2. 'r' → logprob: -6.5029191970825195
    3. ' t' → logprob: -7.8779191970825195
    4. 'p' → logprob: -8.25291919708252
    5. 'print' → logprob: -8.37791919708252
    6. 'a' → logprob: -9.00291919708252
    7. 'try' → logprob: -9.50291919708252
    8. 'l' → logprob: -9.50291919708252
    9. 'k' → logprob: -9.87791919708252
    10. 'n' → logprob: -10.25291919708252

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026303669437766075
    2. '=' → logprob: -3.651303768157959
    3. ' ' → logprob: -13.9013032913208
    4. '=input' → logprob: -13.9013032913208
    5. ',' → logprob: -14.6513032913208
    6. '.' → logprob: -15.1513032913208
    7. '  ' → logprob: -15.4013032913208
    8. 's' → logprob: -15.5263032913208
    9. '_' → logprob: -15.6513032913208
    10. ' =)' → logprob: -16.401304244995117

Token 105: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04859565943479538
    2. 'input' → logprob: -3.048595666885376
    3. ' s' → logprob: -12.548595428466797
    4. ' ' → logprob: -12.923595428466797
    5. 's' → logprob: -13.923595428466797
    6. '=input' → logprob: -13.923595428466797
    7. '(input' → logprob: -16.173595428466797
    8. '	input' → logprob: -16.298595428466797
    9. '    ' → logprob: -16.673595428466797
    10. ' ' → logprob: -16.798595428466797

Token 106: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.500046730041504
    3. '()
' → logprob: -12.000046730041504
    4. '()>' → logprob: -13.125046730041504
    5. '()?>' → logprob: -13.500046730041504
    6. '()]' → logprob: -13.500046730041504
    7. '()

' → logprob: -13.500046730041504
    8. '().' → logprob: -13.750046730041504
    9. '()`' → logprob: -14.000046730041504
    10. '();' → logprob: -14.250046730041504

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3837722837924957
    2. '<|end|>' → logprob: -2.008772373199463
    3. 'if' → logprob: -2.133772373199463
    4. 'return' → logprob: -3.383772373199463
    5. ' if' → logprob: -4.133772373199463
    6. 'print' → logprob: -5.383772373199463
    7. 'r' → logprob: -6.258772373199463
    8. ' return' → logprob: -6.383772373199463
    9. ' ' → logprob: -6.508772373199463
    10. 'n' → logprob: -6.758772373199463

Token 108: ' rc' (ID: 23309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2623401880264282
    2. 'r' → logprob: -2.0123400688171387
    3. 'rc' (adapté à ' rc') → logprob: -2.7623400688171387
    4. 'p' → logprob: -4.262340068817139
    5. 'if' → logprob: -5.137340068817139
    6. 'return' → logprob: -5.512340068817139
    7. 'c' → logprob: -5.512340068817139
    8. 'pr' → logprob: -5.512340068817139
    9. ' print' → logprob: -7.512340068817139
    10. 'a' → logprob: -7.887340068817139

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193750858306885
    2. '=' → logprob: -1.5019375085830688
    3. ' ' → logprob: -12.626937866210938
    4. 'p' → logprob: -13.001937866210938
    5. 'm' → logprob: -14.501937866210938
    6. 'mp' → logprob: -14.501937866210938
    7. 'v' → logprob: -15.251937866210938
    8. '.' → logprob: -15.251937866210938
    9. '  ' → logprob: -15.251937866210938
    10. 'c' → logprob: -15.626937866210938

Token 110: ' Rot' (ID: 20416)
  Prédit: ' Rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rot' → logprob: -0.03804194927215576
    2. 'Rot' → logprob: -3.2880420684814453
    3. ' rot' → logprob: -14.663042068481445
    4. '_rot' → logprob: -17.163042068481445
    5. 'rot' → logprob: -17.538042068481445
    6. ' Ro' → logprob: -17.913042068481445
    7. ' ' → logprob: -18.163042068481445
    8. 'Rotation' → logprob: -18.288042068481445
    9. ' Ros' → logprob: -18.538042068481445
    10. 'Ro' → logprob: -18.913042068481445

Token 111: 'Cmp' (ID: 82950)
  Prédit: 'Cmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cmp' → logprob: -5.200166469876422e-06
    2. 'Cm' → logprob: -12.875004768371582
    3. 'C' → logprob: -13.500004768371582
    4. 'cmp' → logprob: -14.500004768371582
    5. 'mp' → logprob: -16.0000057220459
    6. 'Cpp' → logprob: -16.5000057220459
    7. 'Comp' → logprob: -16.5000057220459
    8. 'omp' → logprob: -16.5000057220459
    9. '_cmp' → logprob: -16.7500057220459
    10. '   ' → logprob: -17.0000057220459

Token 112: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013441620394587517
    2. '(' → logprob: -6.626344203948975
    3. ' (' → logprob: -11.501343727111816
    4. '(
' → logprob: -11.876343727111816
    5. '((' → logprob: -15.126343727111816
    6. '   ' → logprob: -15.501343727111816
    7. ' ' → logprob: -15.501343727111816
    8. '(t' → logprob: -15.501343727111816
    9. 's' → logprob: -16.626344680786133
    10. ')' → logprob: -16.876344680786133

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009351630578748882
    2. ',t' → logprob: -7.000935077667236
    3. ' ,' → logprob: -11.125935554504395
    4. ',
' → logprob: -12.375935554504395
    5. ')' → logprob: -12.625935554504395
    6. 't' → logprob: -15.000935554504395
    7. '),' → logprob: -15.375935554504395
    8. '',' → logprob: -16.250934600830078
    9. ',s' → logprob: -16.250934600830078
    10. 's' → logprob: -16.250934600830078

Token 114: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.38689693808555603
    2. 't' → logprob: -1.1368969678878784
    3. ')' → logprob: -11.136897087097168
    4. ')t' → logprob: -11.886897087097168
    5. ' ' → logprob: -13.261897087097168
    6. '<|end|>' → logprob: -13.636897087097168
    7. '	t' → logprob: -14.136897087097168
    8. ' ' → logprob: -15.761897087097168
    9. ' 
' → logprob: -15.886897087097168
    10. '`t' → logprob: -16.13689613342285

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02335681952536106
    2. ')
' → logprob: -3.7733569145202637
    3. ')
' → logprob: -9.148356437683105
    4. ' )' → logprob: -13.773356437683105
    5. ')

' → logprob: -13.773356437683105
    6. ').' → logprob: -14.023356437683105
    7. '   ' → logprob: -14.523356437683105
    8. '()' → logprob: -14.898356437683105
    9. '())' → logprob: -15.523356437683105
    10. ' )
' → logprob: -15.523356437683105

Token 116: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08059240132570267
    2. '   ' → logprob: -2.580592393875122
    3. 'if' → logprob: -7.330592632293701
    4. ' print' → logprob: -7.455592632293701
    5. '	print' → logprob: -8.080592155456543
    6. 'return' → logprob: -9.205592155456543
    7. ' if' → logprob: -11.205592155456543
    8. '
' → logprob: -11.705592155456543
    9. '<|end|>' → logprob: -12.205592155456543
    10. '```' → logprob: -12.205592155456543

Token 117: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004205309320241213
    2. 'if' (adapté à ' if') → logprob: -5.504205226898193
    3. 'return' → logprob: -9.629205703735352
    4. 'pr' → logprob: -10.379205703735352
    5. ' print' → logprob: -11.379205703735352
    6. 'p' → logprob: -11.629205703735352
    7. '   ' → logprob: -12.004205703735352
    8. 'r' → logprob: -13.879205703735352
    9. ' if' → logprob: -13.879205703735352
    10. 'result' → logprob: -15.379205703735352

Token 118: ' rc' (ID: 23309)
  Prédit: ' rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rc' → logprob: -8.602024900028482e-05
    2. 'rc' → logprob: -9.375085830688477
    3. '(rc' → logprob: -13.875085830688477
    4. '	rc' → logprob: -16.875085830688477
    5. ' not' → logprob: -17.000085830688477
    6. ' ' → logprob: -17.750085830688477
    7. ' ' → logprob: -17.875085830688477
    8. ' rn' → logprob: -18.125085830688477
    9. '_rc' → logprob: -19.000085830688477
    10. ' Rc' → logprob: -19.750085830688477

Token 119: '.chk' (ID: 77821)
  Prédit: '.chk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.chk' → logprob: -8.745069499127567e-05
    2. '.' → logprob: -9.50008773803711
    3. '.check' → logprob: -11.75008773803711
    4. '.ck' → logprob: -12.75008773803711
    5. ' .' → logprob: -13.87508773803711
    6. '.ch' → logprob: -14.75008773803711
    7. ').' → logprob: -16.87508773803711
    8. '.che' → logprob: -16.87508773803711
    9. 'chk' → logprob: -17.00008773803711
    10. '.cmb' → logprob: -17.00008773803711

Token 120: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000407316314522177
    2. '()' → logprob: -7.8754072189331055
    3. ' ():' → logprob: -11.000407218933105
    4. '():
' → logprob: -11.875407218933105
    5. '()==' → logprob: -13.000407218933105
    6. '()>' → logprob: -13.875407218933105
    7. ' ()' → logprob: -16.250408172607422
    8. '(' → logprob: -16.500408172607422
    9. '().' → logprob: -16.875408172607422
    10. '()">' → logprob: -16.875408172607422

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008656412363052368
    2. 'print' → logprob: -5.0086565017700195
    3. ' print' → logprob: -6.2586565017700195
    4. ' return' → logprob: -11.75865650177002
    5. '
' → logprob: -12.38365650177002
    6. 'return' → logprob: -12.75865650177002
    7. '   ' → logprob: -13.00865650177002
    8. '	print' → logprob: -13.00865650177002
    9. '           ' → logprob: -13.63365650177002
    10. '        
' → logprob: -13.75865650177002

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06274161487817764
    2. ' print' → logprob: -2.81274151802063
    3. '       ' → logprob: -7.687741756439209
    4. '   ' → logprob: -8.18774127960205
    5. '	print' → logprob: -10.31274127960205
    6. '
' → logprob: -13.43774127960205
    7. '    ' → logprob: -14.06274127960205
    8. '           ' → logprob: -14.43774127960205
    9. 'return' → logprob: -15.43774127960205
    10. ' ' → logprob: -15.56274127960205

Token 123: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06327898800373077
    2. '(' → logprob: -2.813278913497925
    3. '('' → logprob: -6.688279151916504
    4. '(True' → logprob: -10.188279151916504
    5. ' ("' → logprob: -10.938279151916504
    6. '(
' → logprob: -12.438279151916504
    7. '("("' → logprob: -13.188279151916504
    8. ' (' → logprob: -13.313279151916504
    9. '"' → logprob: -14.313279151916504
    10. '()' → logprob: -15.188279151916504

Token 124: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.22461360692977905
    2. 'YES' → logprob: -2.099613666534424
    3. 'yes' → logprob: -2.974613666534424
    4. 'True' → logprob: -3.974613666534424
    5. 'Oui' → logprob: -6.099613666534424
    6. '1' → logprob: -6.349613666534424
    7. 'OK' → logprob: -7.349613666534424
    8. 'Yeah' → logprob: -7.474613666534424
    9. 'Yep' → logprob: -7.599613666534424
    10. ' Yes' → logprob: -7.724613666534424

Token 125: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.10057973116636276
    2. '')' → logprob: -2.3505797386169434
    3. '')
' → logprob: -8.475579261779785
    4. '!')
' → logprob: -9.225579261779785
    5. ')
' → logprob: -10.475579261779785
    6. '!' → logprob: -10.975579261779785
    7. '")
' → logprob: -11.975579261779785
    8. ')' → logprob: -12.100579261779785
    9. '')

' → logprob: -12.600579261779785
    10. ''' → logprob: -13.100579261779785

Token 126: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4564199447631836
    2. '   ' → logprob: -1.2064199447631836
    3. ' else' → logprob: -2.7064199447631836
    4. '	else' → logprob: -8.206419944763184
    5. '<|end|>' → logprob: -9.206419944763184
    6. 'e' → logprob: -12.206419944763184
    7. '  ' → logprob: -12.331419944763184
    8. 'elif' → logprob: -12.331419944763184
    9. '
' → logprob: -12.456419944763184
    10. ' ' → logprob: -12.581419944763184

Token 127: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04386129602789879
    2. 'return' (adapté à ' return') → logprob: -3.5438613891601562
    3. 'else' → logprob: -4.293861389160156
    4. ' return' → logprob: -8.543861389160156
    5. '       ' → logprob: -9.418861389160156
    6. ' else' → logprob: -9.543861389160156
    7. 'exit' → logprob: -12.168861389160156
    8. ' ' → logprob: -13.043861389160156
    9. '	return' → logprob: -13.293861389160156
    10. '
' → logprob: -14.043861389160156

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003588310442864895
    2. '
' → logprob: -5.7535881996154785
    3. 'No' → logprob: -9.128588676452637
    4. 'None' → logprob: -9.378588676452637
    5. '    
' → logprob: -9.503588676452637
    6. 'False' → logprob: -10.253588676452637
    7. '0' → logprob: -10.753588676452637
    8. 'print' → logprob: -10.878588676452637
    9. '1' → logprob: -11.128588676452637
    10. '  
' → logprob: -11.253588676452637

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47419387102127075
    2. 'print' → logprob: -0.9741938710212708
    3. ' print' → logprob: -9.724193572998047
    4. '
' → logprob: -10.099193572998047
    5. '    
' → logprob: -12.224193572998047
    6. 'else' → logprob: -12.599193572998047
    7. '	print' → logprob: -12.599193572998047
    8. 'None' → logprob: -13.474193572998047
    9. '  ' → logprob: -13.974193572998047
    10. '       ' → logprob: -14.349193572998047

Token 130: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001052934443578124
    2. '   ' → logprob: -6.8760528564453125
    3. ' print' → logprob: -11.126052856445312
    4. '
' → logprob: -12.501052856445312
    5. '	print' → logprob: -14.001052856445312
    6. '    
' → logprob: -15.001052856445312
    7. 'else' → logprob: -16.001052856445312
    8. 'None' → logprob: -16.251052856445312
    9. 'prit' → logprob: -16.501052856445312
    10. '  ' → logprob: -17.126052856445312

Token 131: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.023248974233865738
    2. '(' → logprob: -3.7732489109039307
    3. '("' → logprob: -13.148248672485352
    4. ''' → logprob: -14.523248672485352
    5. ' ('' → logprob: -14.898248672485352
    6. '(
' → logprob: -15.023248672485352
    7. '()' → logprob: -16.52324867248535
    8. '('(' → logprob: -16.89824867248535
    9. ' (' → logprob: -17.02324867248535
    10. '(

' → logprob: -17.14824867248535

Token 132: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0009119403548538685
    2. ''' → logprob: -7.000911712646484
    3. '"No' → logprob: -15.250911712646484
    4. ' No' → logprob: -15.625911712646484
    5. 'NO' → logprob: -16.875911712646484
    6. 'Non' → logprob: -18.375911712646484
    7. '')' → logprob: -19.375911712646484
    8. '
' → logprob: -19.500911712646484
    9. '   ' → logprob: -19.750911712646484
    10. 'no' → logprob: -19.750911712646484

Token 133: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0040835049003362656
    2. ')' → logprob: -5.504083633422852
    3. '')
' → logprob: -12.379083633422852
    4. '")' → logprob: -14.379083633422852
    5. ')'' → logprob: -16.25408363342285
    6. ''' → logprob: -16.50408363342285
    7. '')

' → logprob: -17.50408363342285
    8. '')"' → logprob: -17.75408363342285
    9. '}')' → logprob: -17.75408363342285
    10. '```' → logprob: -18.00408363342285

Token 134: 'if' (ID: 366)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1459326446056366
    2. 'rn' → logprob: -3.020932674407959
    3. 'if' → logprob: -3.395932674407959
    4. '\n' → logprob: -3.520932674407959
    5. 'i' → logprob: -4.645932674407959
    6. '
' → logprob: -5.145932674407959
    7. 'n' → logprob: -5.770932674407959
    8. '#' → logprob: -5.895932674407959
    9. '\' → logprob: -6.770932674407959
    10. '```' → logprob: -7.145932674407959

Token 135: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004698188044130802
    2. '__' → logprob: -5.379698276519775
    3. '_' → logprob: -10.254697799682617
    4. ' ' → logprob: -10.379697799682617
    5. ' _' → logprob: -12.004697799682617
    6. ' ' → logprob: -13.129697799682617
    7. '_name' → logprob: -13.254697799682617
    8. '___' → logprob: -14.129697799682617
    9. ' ___' → logprob: -14.379697799682617
    10. '  ' → logprob: -15.754697799682617

Token 136: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17970997095108032
    2. '__' → logprob: -2.1797099113464355
    3. ' __' → logprob: -3.6797099113464355
    4. 'name' → logprob: -3.9297099113464355
    5. '==' → logprob: -5.5547099113464355
    6. ' =="' → logprob: -7.3047099113464355
    7. '=="' → logprob: -7.8047099113464355
    8. ' ' → logprob: -8.054710388183594
    9. '_name' → logprob: -8.679710388183594
    10. '_' → logprob: -8.804710388183594

Token 137: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003672748862300068
    2. '==' → logprob: -8.125367164611816
    3. ' ==' → logprob: -9.750367164611816
    4. '=="' → logprob: -12.000367164611816
    5. '__.__' → logprob: -12.750367164611816
    6. '_' → logprob: -12.875367164611816
    7. '__":
' → logprob: -15.000367164611816
    8. ' __' → logprob: -15.000367164611816
    9. '=='' → logprob: -15.625367164611816
    10. ' ' → logprob: -15.750367164611816

Token 138: ' !=' (ID: 1666)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3481000065803528
    2. '==' → logprob: -1.598099946975708
    3. ' ==' → logprob: -2.473099946975708
    4. '=="' → logprob: -4.973100185394287
    5. '_' → logprob: -8.473099708557129
    6. '=='' → logprob: -8.973099708557129
    7. '"' → logprob: -9.848099708557129
    8. '___' → logprob: -11.098099708557129
    9. '===' → logprob: -11.848099708557129
    10. '=' → logprob: -11.848099708557129

Token 139: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3215557038784027
    2. '"' → logprob: -1.321555733680725
    3. ' "__' → logprob: -5.4465556144714355
    4. ' '__' → logprob: -5.5715556144714355
    5. ' '' → logprob: -9.821556091308594
    6. ' "' → logprob: -10.196556091308594
    7. '__' → logprob: -10.446556091308594
    8. ''s' → logprob: -11.946556091308594
    9. ''name' → logprob: -12.821556091308594
    10. ''_' → logprob: -12.946556091308594

Token 140: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -16.25
    3. 'name' → logprob: -17.0
    4. 'ma' → logprob: -17.5
    5. 'mai' → logprob: -17.625
    6. '_main' → logprob: -17.75
    7. 'm' → logprob: -17.75
    8. '	main' → logprob: -17.875
    9. '-main' → logprob: -19.5
    10. '__' → logprob: -19.75

Token 141: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20145602524280548
    2. '__':
' → logprob: -1.701456069946289
    3. '_' → logprob: -10.076456069946289
    4. '__":
' → logprob: -14.701456069946289
    5. '___' → logprob: -15.951456069946289
    6. '__:' → logprob: -17.82645606994629
    7. '__.' → logprob: -18.07645606994629
    8. '____' → logprob: -18.32645606994629
    9. '_'' → logprob: -18.32645606994629
    10. '__
' → logprob: -18.32645606994629

Token 142: '':' (ID: 2337)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16091154515743256
    2. '__':
' → logprob: -1.9109115600585938
    3. '_' → logprob: -7.410911560058594
    4. '__:' → logprob: -10.035911560058594
    5. '':' → logprob: -11.160911560058594
    6. ''' → logprob: -11.285911560058594
    7. '__":
' → logprob: -11.910911560058594
    8. '___' → logprob: -12.785911560058594
    9. '__
' → logprob: -13.535911560058594
    10. ':' → logprob: -15.410911560058594

Token 143: ' rn' (ID: 111778)
  Prédit: ' rn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rn' → logprob: -0.10741667449474335
    2. 'rn' → logprob: -2.7324166297912598
    3. '   ' → logprob: -3.3574166297912598
    4. ' 
' → logprob: -7.73241662979126
    5. '    
' → logprob: -7.73241662979126
    6. '
' → logprob: -7.98241662979126
    7. 'n' → logprob: -8.607417106628418
    8. '    ' → logprob: -9.107417106628418
    9. '<|end|>' → logprob: -9.232417106628418
    10. 'r' → logprob: -9.232417106628418

Token 144: 'try' (ID: 1806)
  Prédit: 'try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -6.2729995988775045e-06
    2. 'entry' → logprob: -12.500006675720215
    3. 'etry' → logprob: -14.250006675720215
    4. 'tr' → logprob: -14.375006675720215
    5. 'ter' → logprob: -14.625006675720215
    6. 'tre' → logprob: -15.375006675720215
    7. 'e' → logprob: -15.625006675720215
    8. 't' → logprob: -16.0000057220459
    9. 'tery' → logprob: -16.0000057220459
    10. 'retry' → logprob: -16.6250057220459

Token 145: '()
' (ID: 1234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19067834317684174
    2. '<|end|>' → logprob: -2.565678358078003
    3. ':' → logprob: -3.190678358078003
    4. ')' → logprob: -3.315678358078003
    5. '()' → logprob: -5.065678119659424
    6. '(' → logprob: -5.565678119659424
    7. '```' → logprob: -5.940678119659424
    8. '#' → logprob: -6.315678119659424
    9. ' ' → logprob: -6.940678119659424
    10. '__' → logprob: -7.065678119659424

Token 146: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012915473198518157
    2. ':
' → logprob: -6.876291751861572
    3. ' :' → logprob: -8.501291275024414
    4. '():' → logprob: -9.876291275024414
    5. ' :
' → logprob: -13.876291275024414
    6. '   ' → logprob: -14.126291275024414
    7. '():
' → logprob: -14.376291275024414
    8. '()' → logprob: -14.751291275024414
    9. ':void' → logprob: -15.376291275024414
    10. ':

' → logprob: -15.376291275024414

Token 148: '   ' (ID: 271)
  Prédit: ' rn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rn' → logprob: -0.426334947347641
    2. '   ' → logprob: -1.8013349771499634
    3. 'rn' → logprob: -1.9263349771499634
    4. ' pass' → logprob: -3.551334857940674
    5. 'pass' → logprob: -5.926334857940674
    6. '    ' → logprob: -6.426334857940674
    7. '<|end|>' → logprob: -7.301334857940674
    8. '    
' → logprob: -7.426334857940674
    9. ' None' → logprob: -8.051335334777832
    10. 'n' → logprob: -8.176335334777832

Token 149: ' for' (ID: 395)
  Prédit: 'rn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rn' → logprob: -0.5620971322059631
    2. 'pass' → logprob: -1.8120970726013184
    3. 'exit' → logprob: -1.9370970726013184
    4. 'import' → logprob: -2.9370970726013184
    5. ' pass' → logprob: -4.062097072601318
    6. '...' → logprob: -4.062097072601318
    7. 'print' → logprob: -4.187097072601318
    8. ' rn' → logprob: -5.062097072601318
    9. 'while' → logprob: -5.437097072601318
    10. ' exit' → logprob: -6.312097072601318

Token 150: ' b' (ID: 287)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.019350187852978706
    2. '_' → logprob: -4.019350051879883
    3. ' i' → logprob: -6.894350051879883
    4. ' ' → logprob: -8.769350051879883
    5. '_i' → logprob: -11.144350051879883
    6. 'i' → logprob: -11.394350051879883
    7. ' __' → logprob: -13.519350051879883
    8. ' _
' → logprob: -13.894350051879883
    9. '__' → logprob: -14.769350051879883
    10. '_=' → logprob: -15.269350051879883

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067941173911094666
    2. 'in' → logprob: -5.131793975830078
    3. '	in' → logprob: -9.256793975830078
    4. 'atch' → logprob: -9.381793975830078
    5. '_' → logprob: -9.381793975830078
    6. 'y' → logprob: -9.631793975830078
    7. 'uf' → logprob: -9.756793975830078
    8. 'o' → logprob: -10.131793975830078
    9. 'range' → logprob: -10.256793975830078
    10. 'lock' → logprob: -10.506793975830078

Token 152: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07898253947496414
    2. 'range' → logprob: -2.5789825916290283
    3. '[' → logprob: -9.70398235321045
    4. ' __' → logprob: -12.20398235321045
    5. ' iter' → logprob: -12.32898235321045
    6. '__' → logprob: -12.32898235321045
    7. ' map' → logprob: -12.82898235321045
    8. 'iter' → logprob: -13.20398235321045
    9. 'rang' → logprob: -13.20398235321045
    10. '['' → logprob: -13.32898235321045

Token 153: '(' (ID: 7)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5764200091362
    2. '(' → logprob: -0.8264200091362
    3. '1' → logprob: -8.576419830322266
    4. 'int' → logprob: -9.326419830322266
    5. '10' → logprob: -9.576419830322266
    6. '3' → logprob: -10.576419830322266
    7. '2' → logprob: -10.826419830322266
    8. '(ord' → logprob: -10.826419830322266
    9. '(eval' → logprob: -11.576419830322266
    10. '((' → logprob: -11.576419830322266

Token 154: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0755518451333046
    2. '1' → logprob: -2.700551748275757
    3. ' int' → logprob: -6.200551986694336
    4. '10' → logprob: -6.325551986694336
    5. '3' → logprob: -7.325551986694336
    6. '5' → logprob: -8.575551986694336
    7. '(int' → logprob: -8.575551986694336
    8. '0' → logprob: -8.700551986694336
    9. '100' → logprob: -8.950551986694336
    10. '2' → logprob: -8.950551986694336

Token 155: '):
' (ID: 1883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3460303246974945
    2. ',' → logprob: -1.596030354499817
    3. '1' → logprob: -2.9710302352905273
    4. ' ,' → logprob: -3.7210302352905273
    5. ' ' → logprob: -4.596030235290527
    6. '000' → logprob: -7.221030235290527
    7. ',int' → logprob: -7.221030235290527
    8. ' int' → logprob: -7.846030235290527
    9. '   ' → logprob: -8.096030235290527
    10. '    ' → logprob: -8.221030235290527

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019603416323661804
    2. '   ' → logprob: -4.394603252410889
    3. '<|end|>' → logprob: -5.894603252410889
    4. ' ' → logprob: -6.769603252410889
    5. '        
' → logprob: -7.019603252410889
    6. '    ' → logprob: -8.269603729248047
    7. ':' → logprob: -8.269603729248047
    8. '	   ' → logprob: -8.769603729248047
    9. '<|end|>' → logprob: -8.769603729248047
    10. 'rn' → logprob: -8.769603729248047

Token 157: ' s' (ID: 265)
  Prédit: 'rn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rn' → logprob: -0.22844932973384857
    2. ' rn' → logprob: -1.6034493446350098
    3. '   ' → logprob: -5.97844934463501
    4. '
' → logprob: -8.228448867797852
    5. 'n' → logprob: -9.603448867797852
    6. ' ' → logprob: -10.228448867797852
    7. '  ' → logprob: -11.103448867797852
    8. 'r' → logprob: -11.103448867797852
    9. '    
' → logprob: -11.103448867797852
    10. ' 
' → logprob: -11.353448867797852

Token 158: ';' (ID: 26)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016246207058429718
    2. '=' → logprob: -4.266246318817139
    3. ',' → logprob: -6.766246318817139
    4. '=input' → logprob: -7.516246318817139
    5. ' ' → logprob: -8.39124584197998
    6. ' ,' → logprob: -9.26624584197998
    7. '  ' → logprob: -11.01624584197998
    8. ' =
' → logprob: -11.26624584197998
    9. ',input' → logprob: -11.89124584197998
    10. ')' → logprob: -12.26624584197998

Token 159: ' t' (ID: 260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23386171460151672
    2. ' rn' → logprob: -2.7338616847991943
    3. 'rn' → logprob: -3.2338616847991943
    4. ' t' → logprob: -3.6088616847991943
    5. ' s' → logprob: -4.108861923217773
    6. 'n' → logprob: -4.733861923217773
    7. 'input' → logprob: -4.733861923217773
    8. '_' → logprob: -4.733861923217773
    9. 't' → logprob: -4.858861923217773
    10. '        ' → logprob: -5.608861923217773

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5836500525474548
    2. ' =' → logprob: -0.9586500525474548
    3. ',' → logprob: -3.4586501121520996
    4. ' ' → logprob: -4.4586501121521
    5. '<|end|>' → logprob: -4.7086501121521
    6. ';' → logprob: -5.3336501121521
    7. ' ,' → logprob: -7.9586501121521
    8. ')' → logprob: -8.208649635314941
    9. '  ' → logprob: -8.333649635314941
    10. '[' → logprob: -8.958649635314941

Token 161: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2550894021987915
    2. 'input' → logprob: -1.5050894021987915
    3. ' map' → logprob: -6.505089282989502
    4. ' ' → logprob: -7.755089282989502
    5. 'map' → logprob: -8.13008975982666
    6. ' '' → logprob: -8.38008975982666
    7. ' [' → logprob: -9.13008975982666
    8. '[input' → logprob: -9.25508975982666
    9. '"' → logprob: -9.50508975982666
    10. '(input' → logprob: -9.75508975982666

Token 162: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.04183091223239899
    2. '()' → logprob: -3.2918310165405273
    3. '().' → logprob: -5.666831016540527
    4. '()
' → logprob: -9.416831016540527
    5. ' (),' → logprob: -9.416831016540527
    6. '();' → logprob: -9.666831016540527
    7. '()),' → logprob: -10.291831016540527
    8. '(' → logprob: -10.416831016540527
    9. ',' → logprob: -12.291831016540527
    10. '(),
' → logprob: -12.541831016540527

Token 163: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132747709751129
    2. 'input' → logprob: -1.3132747411727905
    3. ' ' → logprob: -12.688274383544922
    4. '=input' → logprob: -12.813274383544922
    5. '<input' → logprob: -13.438274383544922
    6. '(input' → logprob: -13.563274383544922
    7. '	input' → logprob: -13.688274383544922
    8. ' ' → logprob: -14.063274383544922
    9. '<|end|>' → logprob: -14.438274383544922
    10. '_input' → logprob: -14.563274383544922

Token 164: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3782830137643032e-05
    2. '()
' → logprob: -11.37501335144043
    3. '()]' → logprob: -13.87501335144043
    4. '()

' → logprob: -15.00001335144043
    5. '()`' → logprob: -15.25001335144043
    6. '();' → logprob: -15.62501335144043
    7. ' ()' → logprob: -16.37501335144043
    8. '()</' → logprob: -16.37501335144043
    9. '()<' → logprob: -16.62501335144043
    10. '())' → logprob: -16.75001335144043

Token 165: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19365814328193665
    2. '<|end|>' → logprob: -1.9436581134796143
    3. '       ' → logprob: -3.9436581134796143
    4. ' ' → logprob: -5.443658351898193
    5. ';' → logprob: -5.943658351898193
    6. ' 
' → logprob: -6.693658351898193
    7. ',' → logprob: -6.693658351898193
    8. '<|end|>' → logprob: -6.943658351898193
    9. ')' → logprob: -7.568658351898193
    10. '        
' → logprob: -7.818658351898193

Token 166: ' p' (ID: 275)
  Prédit: 'rc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rc' → logprob: -0.10688482224941254
    2. 'print' → logprob: -2.981884717941284
    3. 'if' → logprob: -3.106884717941284
    4. ' rc' → logprob: -5.481884956359863
    5. ' if' → logprob: -6.981884956359863
    6. 'for' → logprob: -8.606884956359863
    7. ' print' → logprob: -8.606884956359863
    8. 'r' → logprob: -9.106884956359863
    9. '
' → logprob: -9.606884956359863
    10. '       ' → logprob: -10.106884956359863

Token 167: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020950057660229504
    2. '=' → logprob: -8.75020980834961
    3. ' =' → logprob: -10.25020980834961
    4. '=r' → logprob: -12.12520980834961
    5. ' r' → logprob: -13.00020980834961
    6. '
' → logprob: -13.37520980834961
    7. ' ' → logprob: -13.87520980834961
    8. 'rn' → logprob: -14.00020980834961
    9. ';r' → logprob: -14.62520980834961
    10. '   ' → logprob: -14.87520980834961

Token 168: ' False' (ID: 7983)
  Prédit: 'Rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rot' → logprob: -0.010729319415986538
    2. ' Rot' → logprob: -5.1357293128967285
    3. ''' → logprob: -6.7607293128967285
    4. 't' → logprob: -7.2607293128967285
    5. ''s' → logprob: -7.2607293128967285
    6. 's' → logprob: -7.3857293128967285
    7. '"' → logprob: -8.260729789733887
    8. 'len' → logprob: -8.510729789733887
    9. 'any' → logprob: -8.635729789733887
    10. 'lambda' → logprob: -8.885729789733887

Token 169: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010428297333419323
    2. ' for' → logprob: -4.635428428649902
    3. 'if' → logprob: -7.635428428649902
    4. '
' → logprob: -9.010428428649902
    5. 'n' → logprob: -11.010428428649902
    6. 'l' → logprob: -11.135428428649902
    7. '       ' → logprob: -11.510428428649902
    8. 'i' → logprob: -12.260428428649902
    9. 's' → logprob: -12.635428428649902
    10. ' if' → logprob: -12.635428428649902

Token 172: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7467872500419617
    2. ' x' → logprob: -1.3717873096466064
    3. ' k' → logprob: -2.2467873096466064
    4. 'i' → logprob: -2.9967873096466064
    5. 'x' → logprob: -3.1217873096466064
    6. 'k' → logprob: -3.8717873096466064
    7. ' r' → logprob: -3.8717873096466064
    8. ' d' → logprob: -5.121787071228027
    9. 'r' → logprob: -5.121787071228027
    10. '_' → logprob: -5.871787071228027

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015434302622452378
    2. 'in' → logprob: -6.5015435218811035
    3. ' ' → logprob: -10.376543045043945
    4. 'range' → logprob: -12.751543045043945
    5. ',' → logprob: -13.376543045043945
    6. ' range' → logprob: -13.501543045043945
    7. 's' → logprob: -14.626543045043945
    8. '  ' → logprob: -15.126543045043945
    9. ' j' → logprob: -15.126543045043945
    10. 'j' → logprob: -15.189043045043945

Token 174: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.054947733879089355
    2. 'range' → logprob: -2.929947853088379
    3. ' ' → logprob: -10.679947853088379
    4. '(range' → logprob: -11.554947853088379
    5. '[' → logprob: -11.679947853088379
    6. ' map' → logprob: -12.554947853088379
    7. '  ' → logprob: -12.929947853088379
    8. '   ' → logprob: -12.929947853088379
    9. ' xrange' → logprob: -13.117447853088379
    10. ' s' → logprob: -13.179947853088379

Token 175: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.004743280354887247
    2. '(' → logprob: -5.3797430992126465
    3. '(min' → logprob: -9.879743576049805
    4. ' (' → logprob: -10.504743576049805
    5. '(max' → logprob: -10.629743576049805
    6. ' len' → logprob: -12.004743576049805
    7. 'len' → logprob: -12.504743576049805
    8. '((' → logprob: -13.004743576049805
    9. '(l' → logprob: -13.254743576049805
    10. '(abs' → logprob: -13.629743576049805

Token 176: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01867331564426422
    2. '(t' → logprob: -4.018673419952393
    3. 's' → logprob: -7.893673419952393
    4. '(' → logprob: -9.143672943115234
    5. 't' → logprob: -11.018672943115234
    6. ' (' → logprob: -11.893672943115234
    7. ' s' → logprob: -12.143672943115234
    8. '(b' → logprob: -12.518672943115234
    9. '(a' → logprob: -13.268672943115234
    10. '(p' → logprob: -13.393672943115234

Token 177: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.6252714991569519
    2. '):' → logprob: -0.8752714991569519
    3. ')):
' → logprob: -3.8752715587615967
    4. '+' → logprob: -4.000271320343018
    5. '):
' → logprob: -5.000271320343018
    6. '))' → logprob: -7.125271320343018
    7. '-' → logprob: -7.625271320343018
    8. ')' → logprob: -7.875271320343018
    9. ' +' → logprob: -8.500271797180176
    10. ' ):' → logprob: -8.750271797180176

Token 178: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19466380774974823
    2. '           ' → logprob: -2.3196637630462646
    3. ' :' → logprob: -3.3196637630462646
    4. ':
' → logprob: -4.069664001464844
    5. '<|end|>' → logprob: -4.069664001464844
    6. ' :
' → logprob: -5.569664001464844
    7. '<|end|>' → logprob: -6.444664001464844
    8. ' if' → logprob: -7.569664001464844
    9. '):' → logprob: -7.819664001464844
    10. '):
' → logprob: -8.194664001464844

Token 179: ' zz' (ID: 41240)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17698314785957336
    2. '           ' → logprob: -3.051983118057251
    3. 'if' → logprob: -3.051983118057251
    4. ' k' → logprob: -3.926983118057251
    5. ' rotated' → logprob: -4.55198335647583
    6. 'k' → logprob: -4.92698335647583
    7. ' s' → logprob: -5.42698335647583
    8. ' for' → logprob: -5.80198335647583
    9. ' x' → logprob: -5.92698335647583
    10. ' r' → logprob: -5.92698335647583

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16492395102977753
    2. '=' → logprob: -1.914923906326294
    3. ')' → logprob: -6.664924144744873
    4. ':' → logprob: -6.914924144744873
    5. '=s' → logprob: -7.664924144744873
    6. '           ' → logprob: -8.539923667907715
    7. 's' → logprob: -8.539923667907715
    8. ',' → logprob: -8.664923667907715
    9. '+' → logprob: -8.789923667907715
    10. '=len' → logprob: -9.289923667907715

Token 181: ' ''.' (ID: 105941)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47519728541374207
    2. 's' → logprob: -0.9751973152160645
    3. '(s' → logprob: -7.1001973152160645
    4. ' (' → logprob: -9.475196838378906
    5. ' ' → logprob: -9.850196838378906
    6. 't' → logprob: -10.225196838378906
    7. ' t' → logprob: -10.350196838378906
    8. '   ' → logprob: -10.600196838378906
    9. '    ' → logprob: -10.850196838378906
    10. '(' → logprob: -11.850196838378906

Token 182: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.003571445820853114
    2. 's' → logprob: -5.753571510314941
    3. ' join' → logprob: -9.128571510314941
    4. 'concat' → logprob: -9.378571510314941
    5. '(s' → logprob: -10.003571510314941
    6. 'strip' → logprob: -10.628571510314941
    7. 'r' → logprob: -10.878571510314941
    8. 'find' → logprob: -11.128571510314941
    9. 'startswith' → logprob: -11.128571510314941
    10. 'rstrip' → logprob: -11.253571510314941

Token 183: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.05150151252746582
    2. '(s' → logprob: -3.426501512527466
    3. '((' → logprob: -4.926501274108887
    4. '[s' → logprob: -5.551501274108887
    5. '(sorted' → logprob: -6.426501274108887
    6. '(re' → logprob: -6.676501274108887
    7. '(t' → logprob: -6.676501274108887
    8. '[' → logprob: -7.801501274108887
    9. '[t' → logprob: -7.801501274108887
    10. 's' → logprob: -7.926501274108887

Token 184: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.039730023592710495
    2. 't' → logprob: -3.2897300720214844
    3. ' s' → logprob: -6.539730072021484
    4. ' t' → logprob: -8.789730072021484
    5. '(s' → logprob: -10.789730072021484
    6. '   ' → logprob: -11.164730072021484
    7. '[s' → logprob: -11.289730072021484
    8. '(t' → logprob: -11.914730072021484
    9. '[t' → logprob: -12.164730072021484
    10. 'chr' → logprob: -12.164730072021484

Token 185: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.08169390261173248
    2. '[(' → logprob: -2.8316938877105713
    3. '[j' → logprob: -3.9566938877105713
    4. '[len' → logprob: -8.456693649291992
    5. '[' → logprob: -9.206693649291992
    6. '[i' → logprob: -10.206693649291992
    7. '[k' → logprob: -10.706693649291992
    8. '[t' → logprob: -12.081693649291992
    9. '(j' → logprob: -12.456693649291992
    10. '[n' → logprob: -12.581693649291992

Token 186: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0012099954765290022
    2. '(j' → logprob: -7.1262102127075195
    3. 'i' → logprob: -8.62621021270752
    4. '((' → logprob: -10.12621021270752
    5. 'k' → logprob: -10.25121021270752
    6. '(' → logprob: -10.37621021270752
    7. '1' → logprob: -10.75121021270752
    8. 'z' → logprob: -11.00121021270752
    9. 'x' → logprob: -11.00121021270752
    10. '(i' → logprob: -11.12621021270752

Token 187: ':],' (ID: 117284)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.000634639582131058
    2. '+i' → logprob: -8.25063419342041
    3. ':' → logprob: -9.00063419342041
    4. '+k' → logprob: -9.50063419342041
    5. '+x' → logprob: -9.87563419342041
    6. ':],' → logprob: -10.12563419342041
    7. ']' → logprob: -10.62563419342041
    8. ' :]' → logprob: -11.12563419342041
    9. '+' → logprob: -11.37563419342041
    10. 'x' → logprob: -11.75063419342041

Token 188: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08897905796766281
    2. ' s' → logprob: -2.4639790058135986
    3. ' ' → logprob: -11.21397876739502
    4. '       ' → logprob: -12.08897876739502
    5. '   ' → logprob: -12.21397876739502
    6. '  ' → logprob: -12.83897876739502
    7. '           ' → logprob: -12.96397876739502
    8. '    ' → logprob: -13.08897876739502
    9. '     ' → logprob: -13.71397876739502
    10. '      ' → logprob: -13.96397876739502

Token 189: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0778309777379036
    2. 's' → logprob: -2.7028310298919678
    3. '[:' → logprob: -5.452830791473389
    4. '-s' → logprob: -6.452830791473389
    5. ':-' → logprob: -6.577830791473389
    6. ' s' → logprob: -8.577831268310547
    7. '[' → logprob: -8.702831268310547
    8. '[-' → logprob: -9.077831268310547
    9. ':' → logprob: -10.702831268310547
    10. ':s' → logprob: -10.702831268310547

Token 190: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.988221684878226e-06
    2. ' j' → logprob: -12.375006675720215
    3. ']' → logprob: -13.875006675720215
    4. 's' → logprob: -14.500006675720215
    5. '<|end|>' → logprob: -14.625006675720215
    6. '])' → logprob: -14.875006675720215
    7. '   ' → logprob: -16.00000762939453
    8. ' ' → logprob: -16.50000762939453
    9. 't' → logprob: -16.62500762939453
    10. ')' → logprob: -17.00000762939453

Token 191: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006044100970029831
    2. '])
' → logprob: -5.631043910980225
    3. ']])' → logprob: -6.256043910980225
    4. ')])' → logprob: -8.631044387817383
    5. ']' → logprob: -8.756044387817383
    6. '])]' → logprob: -9.006044387817383
    7. ']])
' → logprob: -10.506044387817383
    8. '])

' → logprob: -11.506044387817383
    9. ']))' → logprob: -11.506044387817383
    10. ')' → logprob: -12.631044387817383

Token 192: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11863555014133453
    2. '])' → logprob: -3.243635654449463
    3. '       ' → logprob: -3.368635654449463
    4. ']' → logprob: -4.618635654449463
    5. '           ' → logprob: -4.618635654449463
    6. ')
' → logprob: -4.743635654449463
    7. '<|end|>' → logprob: -5.743635654449463
    8. '[' → logprob: -6.368635654449463
    9. ')]' → logprob: -6.493635654449463
    10. '])
' → logprob: -7.493635654449463

Token 193: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4452178180217743
    2. 'if' (adapté à ' if') → logprob: -1.5702178478240967
    3. '           ' → logprob: -2.1952178478240967
    4. ' ' → logprob: -3.5702178478240967
    5. '<|end|>' → logprob: -5.320217609405518
    6. '               ' → logprob: -5.945217609405518
    7. '       ' → logprob: -6.820217609405518
    8. '
' → logprob: -6.945217609405518
    9. ' 
' → logprob: -7.945217609405518
    10. '            ' → logprob: -8.195218086242676

Token 194: ' zz' (ID: 41240)
  Prédit: ' zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zz' → logprob: -0.020575640723109245
    2. 'zz' → logprob: -3.895575523376465
    3. ' z' → logprob: -10.645575523376465
    4. 'z' → logprob: -12.645575523376465
    5. ' t' → logprob: -13.145575523376465
    6. 'zzz' → logprob: -13.645575523376465
    7. ' ' → logprob: -14.270575523376465
    8. '.zz' → logprob: -14.895575523376465
    9. ' jj' → logprob: -14.895575523376465
    10. ' ' → logprob: -15.020575523376465

Token 195: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931667923927307
    2. ' ==' → logprob: -0.6931667923927307
    3. '=' → logprob: -12.568166732788086
    4. ')==' → logprob: -12.568166732788086
    5. ']==' → logprob: -12.818166732788086
    6. ' ' → logprob: -13.068166732788086
    7. '===' → logprob: -13.068166732788086
    8. '==
' → logprob: -13.068166732788086
    9. ')' → logprob: -13.193166732788086
    10. ' =' → logprob: -14.568166732788086

Token 196: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5759581923484802
    2. 't' → logprob: -0.8259581923484802
    3. ' ' → logprob: -12.325958251953125
    4. '`t' → logprob: -12.825958251953125
    5. ' ' → logprob: -12.950958251953125
    6. '   ' → logprob: -13.450958251953125
    7. '	t' → logprob: -13.700958251953125
    8. 's' → logprob: -13.825958251953125
    9. ''t' → logprob: -13.950958251953125
    10. ')t' → logprob: -14.575958251953125

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03011688031256199
    2. ':
' → logprob: -3.5301167964935303
    3. ' :' → logprob: -8.78011703491211
    4. ':return' → logprob: -9.65511703491211
    5. '):' → logprob: -9.78011703491211
    6. '):
' → logprob: -10.40511703491211
    7. '           ' → logprob: -10.90511703491211
    8. ' :
' → logprob: -11.15511703491211
    9. '<|end|>' → logprob: -11.78011703491211
    10. '               ' → logprob: -12.15511703491211

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2812207043170929
    2. '           ' → logprob: -1.6562206745147705
    3. ':' → logprob: -3.7812206745147705
    4. '
' → logprob: -4.03122091293335
    5. ' ' → logprob: -5.53122091293335
    6. ':
' → logprob: -5.65622091293335
    7. ' p' → logprob: -6.78122091293335
    8. '            ' → logprob: -6.78122091293335
    9. '<|end|>' → logprob: -6.90622091293335
    10. '                ' → logprob: -7.03122091293335

Token 199: ' print' (ID: 2123)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.032390959560871124
    2. 'p' → logprob: -3.53239107131958
    3. '               ' → logprob: -6.40739107131958
    4. '
' → logprob: -7.90739107131958
    5. ' 
' → logprob: -8.782390594482422
    6. '           ' → logprob: -8.782390594482422
    7. ' ' → logprob: -9.282390594482422
    8. '                ' → logprob: -9.282390594482422
    9. '                   ' → logprob: -9.282390594482422
    10. '   ' → logprob: -11.407390594482422

Token 200: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005559112876653671
    2. ''' → logprob: -5.880558967590332
    3. '("' → logprob: -6.255558967590332
    4. '(' → logprob: -7.255558967590332
    5. 'Yes' → logprob: -9.755558967590332
    6. ' ('' → logprob: -10.380558967590332
    7. '(
' → logprob: -11.380558967590332
    8. '"' → logprob: -11.505558967590332
    9. ' '' → logprob: -12.505558967590332
    10. ' Yes' → logprob: -12.630558967590332

Token 201: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5793802738189697
    2. ''' → logprob: -0.8293802738189697
    3. '"' → logprob: -5.829380035400391
    4. '('' → logprob: -7.829380035400391
    5. ' Yes' → logprob: -10.32938003540039
    6. '   ' → logprob: -11.07938003540039
    7. 'YES' → logprob: -11.70438003540039
    8. ' '' → logprob: -11.82938003540039
    9. 's' → logprob: -12.32938003540039
    10. 'No' → logprob: -12.57938003540039

Token 202: '')
' (ID: 2515)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06312432885169983
    2. '')
' → logprob: -4.188124179840088
    3. ')
' → logprob: -4.313124179840088
    4. ')' → logprob: -4.438124179840088
    5. '           ' → logprob: -4.438124179840088
    6. '')' → logprob: -4.938124179840088
    7. '       ' → logprob: -6.938124179840088
    8. '                   ' → logprob: -7.438124179840088
    9. '")
' → logprob: -9.438124656677246
    10. '")' → logprob: -10.188124656677246

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009936298010870814
    2. '           ' → logprob: -7.250993728637695
    3. '
' → logprob: -8.875993728637695
    4. '<|end|>' → logprob: -9.875993728637695
    5. '                
' → logprob: -10.500993728637695
    6. '```' → logprob: -11.000993728637695
    7. '                   ' → logprob: -11.375993728637695
    8. '       ' → logprob: -11.625993728637695
    9. '              ' → logprob: -11.875993728637695
    10. '                ' → logprob: -12.625993728637695

Token 204: ' p' (ID: 275)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2151632457971573
    2. ' p' → logprob: -2.090163230895996
    3. 'p' (adapté à ' p') → logprob: -3.090163230895996
    4. '
' → logprob: -4.715163230895996
    5. 'break' → logprob: -4.715163230895996
    6. ' break' → logprob: -5.340163230895996
    7. '```' → logprob: -8.215163230895996
    8. ' 
' → logprob: -8.215163230895996
    9. 'b' → logprob: -8.465163230895996
    10. '       ' → logprob: -8.590163230895996

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2959853708744049
    2. ' =' → logprob: -1.5459853410720825
    3. '=True' → logprob: -3.295985460281372
    4. '<|end|>' → logprob: -5.920985221862793
    5. '               ' → logprob: -6.545985221862793
    6. '
' → logprob: -7.545985221862793
    7. '=False' → logprob: -7.545985221862793
    8. '           ' → logprob: -8.045985221862793
    9. '                   ' → logprob: -8.295985221862793
    10. ' ' → logprob: -9.920985221862793

Token 206: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01814994215965271
    2. ' True' → logprob: -4.0181498527526855
    3. '=True' → logprob: -17.143150329589844
    4. '(True' → logprob: -17.393150329589844
    5. '   ' → logprob: -18.643150329589844
    6. '1' → logprob: -19.643150329589844
    7. '           ' → logprob: -20.768150329589844
    8. 'Tr' → logprob: -20.768150329589844
    9. '       ' → logprob: -20.768150329589844
    10. 'False' → logprob: -21.018150329589844

Token 207: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009875539690256119
    2. '<|end|>' → logprob: -7.500987529754639
    3. '           ' → logprob: -8.125988006591797
    4. '                
' → logprob: -10.500988006591797
    5. '                   ' → logprob: -10.500988006591797
    6. '              ' → logprob: -10.875988006591797
    7. '                ' → logprob: -11.000988006591797
    8. '       ' → logprob: -11.625988006591797
    9. '			' → logprob: -12.125988006591797
    10. '		       ' → logprob: -12.375988006591797

Token 208: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004589094896800816
    2. '<|end|>' → logprob: -7.875458717346191
    3. '           ' → logprob: -10.125458717346191
    4. '       ' → logprob: -10.750458717346191
    5. '		       ' → logprob: -12.875458717346191
    6. '              ' → logprob: -13.000458717346191
    7. '                ' → logprob: -13.250458717346191
    8. '                   ' → logprob: -13.375458717346191
    9. '			' → logprob: -13.375458717346191
    10. ',' → logprob: -13.375458717346191

Token 209: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.08111444860696793
    2. ' break' → logprob: -2.5811145305633545
    3. '               ' → logprob: -6.331114292144775
    4. '           ' → logprob: -8.206114768981934
    5. '       ' → logprob: -9.206114768981934
    6. '	break' → logprob: -9.706114768981934
    7. 'b' → logprob: -12.956114768981934
    8. '   ' → logprob: -13.331114768981934
    9. '                   ' → logprob: -13.706114768981934
    10. '_break' → logprob: -14.081114768981934

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000333320174831897
    2. '
' → logprob: -9.250333786010742
    3. '<|end|>' → logprob: -9.625333786010742
    4. '   ' → logprob: -9.875333786010742
    5. 'if' → logprob: -10.125333786010742
    6. '           ' → logprob: -10.250333786010742
    7. 'else' → logprob: -11.375333786010742
    8. ')' → logprob: -12.375333786010742
    9. '        
' → logprob: -12.375333786010742
    10. ',' → logprob: -12.750333786010742

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02157142013311386
    2. '   ' → logprob: -5.396571636199951
    3. ' 
' → logprob: -5.521571636199951
    4. ' ' → logprob: -5.646571636199951
    5. ' if' → logprob: -6.271571636199951
    6. ' else' → logprob: -6.396571636199951
    7. 'else' → logprob: -6.521571636199951
    8. 'if' → logprob: -6.896571636199951
    9. '<|end|>' → logprob: -7.271571636199951
    10. '        ' → logprob: -7.271571636199951

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.43426039814949036
    2. '   ' → logprob: -1.434260368347168
    3. ' if' → logprob: -2.559260368347168
    4. '       ' → logprob: -3.309260368347168
    5. ' ' → logprob: -10.684260368347168
    6. 'else' → logprob: -10.934260368347168
    7. '
' → logprob: -12.059260368347168
    8. 'print' → logprob: -12.684260368347168
    9. '    ' → logprob: -12.934260368347168
    10. '  ' → logprob: -13.184260368347168

Token 213: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5233609676361084
    2. 'not' → logprob: -0.8983609676361084
    3. 'p' → logprob: -8.898361206054688
    4. ' p' → logprob: -9.398361206054688
    5. '(not' → logprob: -12.023361206054688
    6. 'n' → logprob: -12.398361206054688
    7. '!' → logprob: -13.398361206054688
    8. ' no' → logprob: -13.398361206054688
    9. ' ' → logprob: -13.398361206054688
    10. '
' → logprob: -13.898361206054688

Token 214: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6931503415107727
    2. ' p' → logprob: -0.6931503415107727
    3. ' ' → logprob: -13.818150520324707
    4. ' ' → logprob: -14.318150520324707
    5. '(p' → logprob: -14.318150520324707
    6. '<p' → logprob: -15.443150520324707
    7. '  ' → logprob: -15.443150520324707
    8. '   ' → logprob: -15.568150520324707
    9. '	p' → logprob: -15.693150520324707
    10. ')p' → logprob: -17.56814956665039

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07898066937923431
    2. ':
' → logprob: -2.5789806842803955
    3. 'print' → logprob: -10.203980445861816
    4. ' :' → logprob: -10.703980445861816
    5. ' print' → logprob: -11.578980445861816
    6. ' :
' → logprob: -12.203980445861816
    7. '   ' → logprob: -12.453980445861816
    8. ':

' → logprob: -12.703980445861816
    9. '       ' → logprob: -12.828980445861816
    10. '           ' → logprob: -13.203980445861816

Token 216: '           ' (ID: 352)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07536271214485168
    2. 'print' → logprob: -2.8253626823425293
    3. '           ' → logprob: -4.325362682342529
    4. '   ' → logprob: -9.950363159179688
    5. '       ' → logprob: -11.200363159179688
    6. '	print' → logprob: -11.575363159179688
    7. ' ' → logprob: -13.325363159179688
    8. '               ' → logprob: -14.325363159179688
    9. '.print' → logprob: -14.325363159179688
    10. '	       ' → logprob: -14.325363159179688

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2519630193710327
    2. ' print' → logprob: -1.5019630193710327
    3. '           ' → logprob: -10.626962661743164
    4. '               ' → logprob: -12.376962661743164
    5. '	print' → logprob: -12.751962661743164
    6. '       ' → logprob: -13.751962661743164
    7. '   ' → logprob: -14.001962661743164
    8. ' ' → logprob: -15.251962661743164
    9. '.print' → logprob: -15.751962661743164
    10. '```' → logprob: -16.876962661743164

Token 218: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015140273608267307
    2. '(' → logprob: -6.501513957977295
    3. '("' → logprob: -11.376514434814453
    4. ' ('' → logprob: -15.501514434814453
    5. '('(' → logprob: -17.751514434814453
    6. '(
' → logprob: -17.876514434814453
    7. '(('' → logprob: -18.001514434814453
    8. ''' → logprob: -18.751514434814453
    9. '(False' → logprob: -18.751514434814453
    10. '(`' → logprob: -19.376514434814453

Token 219: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0009132515988312662
    2. ''' → logprob: -7.000913143157959
    3. '"No' → logprob: -13.875913619995117
    4. ' No' → logprob: -14.500913619995117
    5. '('' → logprob: -16.875913619995117
    6. '   ' → logprob: -17.125913619995117
    7. '
' → logprob: -17.375913619995117
    8. 'NO' → logprob: -17.875913619995117
    9. 'Yes' → logprob: -17.875913619995117
    10. '`' → logprob: -18.000913619995117

Token 220: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004670153430197388
    2. ')' → logprob: -7.750466823577881
    3. '')
' → logprob: -10.250467300415039
    4. '")' → logprob: -14.125467300415039
    5. '```' → logprob: -16.00046730041504
    6. ''' → logprob: -17.25046730041504
    7. '')

' → logprob: -17.75046730041504
    8. '')
' → logprob: -18.00046730041504
    9. '`)' → logprob: -18.12546730041504
    10. ')
' → logprob: -18.25046730041504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 170
Précision stricte (1ère position): 40.37%
Précision adaptée (1ère position): 44.95%
Précision (top 10): 77.98%
================================================================================
