================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_length = int(input())
user_input_string = input()
half_of_input_length = int(user_input_length // 2)

for current_iteration in range(half_of_input_length):

    last_character = user_input_string[user_input_length - 1]
    symmetric_character = user_input_string[user_input_length - 1 - half_of_input_length]

    if last_character == symmetric_character:
        user_input_length -= 1

if user_input_length == half_of_input_length:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_length' (ID: 11514)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.048579078167676926
    2. '```' → logprob: -4.298579216003418
    3. ')' → logprob: -4.548579216003418
    4. '=' → logprob: -4.798579216003418
    5. '>' → logprob: -5.298579216003418
    6. '.' → logprob: -6.048579216003418
    7. '[' → logprob: -6.173579216003418
    8. '+' → logprob: -6.423579216003418
    9. '*' → logprob: -7.173579216003418
    10. ':' → logprob: -7.423579216003418

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12894897162914276
    2. '0' → logprob: -2.878948926925659
    3. ' len' → logprob: -2.878948926925659
    4. ' int' → logprob: -5.628949165344238
    5. 'len' → logprob: -5.878949165344238
    6. '10' → logprob: -7.503949165344238
    7. 'int' → logprob: -7.753949165344238
    8. '20' → logprob: -8.128949165344238
    9. '32' → logprob: -8.128949165344238
    10. ' input' → logprob: -8.753949165344238

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016172900795936584
    2. '(user' → logprob: -4.391172885894775
    3. 'user' → logprob: -6.891172885894775
    4. '()' → logprob: -7.016172885894775
    5. '```' → logprob: -7.766172885894775
    6. '32' → logprob: -8.141173362731934
    7. '('' → logprob: -8.641173362731934
    8. ' ' → logprob: -9.016173362731934
    9. ')' → logprob: -9.141173362731934
    10. '(input' → logprob: -9.641173362731934

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030422434210777283
    2. ')' → logprob: -6.628042221069336
    3. '()' → logprob: -6.628042221069336
    4. '(
' → logprob: -9.878042221069336
    5. '('' → logprob: -10.003042221069336
    6. '())' → logprob: -10.003042221069336
    7. '("("' → logprob: -10.128042221069336
    8. '<|end|>' → logprob: -10.253042221069336
    9. '(()' → logprob: -10.378042221069336
    10. '(user' → logprob: -10.378042221069336

Token 7: 'user' (ID: 1428)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9397619366645813
    2. 'if' → logprob: -1.1897618770599365
    3. '+' → logprob: -1.8147618770599365
    4. '*' → logprob: -3.3147618770599365
    5. ' if' → logprob: -3.6897618770599365
    6. '>' → logprob: -3.8147618770599365
    7. ')' → logprob: -4.064762115478516
    8. ' ' → logprob: -4.564762115478516
    9. '_' → logprob: -4.939762115478516
    10. '#' → logprob: -4.939762115478516

Token 8: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04983898997306824
    2. '_input' → logprob: -3.1748390197753906
    3. '_put' → logprob: -6.174839019775391
    4. '.' → logprob: -6.549839019775391
    5. '._' → logprob: -7.049839019775391
    6. '_p' → logprob: -7.174839019775391
    7. '_.' → logprob: -7.799839019775391
    8. '_output' → logprob: -8.29983901977539
    9. ' _' → logprob: -8.54983901977539
    10. '_s' → logprob: -8.92483901977539

Token 9: '_string' (ID: 8609)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.07493919879198074
    2. '[' → logprob: -3.574939250946045
    3. '_' → logprob: -4.074939250946045
    4. ')' → logprob: -5.074939250946045
    5. '.' → logprob: -5.324939250946045
    6. '()' → logprob: -5.449939250946045
    7. '_lengths' → logprob: -5.949939250946045
    8. '(' → logprob: -6.324939250946045
    9. '_len' → logprob: -6.449939250946045
    10. '```' → logprob: -6.699939250946045

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030585117638111115
    2. '_' → logprob: -5.155585289001465
    3. '.' → logprob: -5.530585289001465
    4. '[]' → logprob: -5.530585289001465
    5. '[:]' → logprob: -5.530585289001465
    6. '=' → logprob: -6.030585289001465
    7. '[user' → logprob: -6.030585289001465
    8. '_length' → logprob: -6.530585289001465
    9. ' =' → logprob: -7.405585289001465
    10. '[len' → logprob: -7.405585289001465

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12731274962425232
    2. 'input' → logprob: -2.127312660217285
    3. ' ' → logprob: -8.752312660217285
    4. ' str' → logprob: -9.752312660217285
    5. ' ""' → logprob: -10.002312660217285
    6. '""' → logprob: -10.377312660217285
    7. ' ''' → logprob: -10.877312660217285
    8. 'str' → logprob: -11.377312660217285
    9. ' "' → logprob: -11.377312660217285
    10. '"' → logprob: -11.752312660217285

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16053900122642517
    2. '()' → logprob: -1.9105390310287476
    3. ' (' → logprob: -8.910538673400879
    4. '```' → logprob: -10.410538673400879
    5. ')' → logprob: -10.535538673400879
    6. '('' → logprob: -11.160538673400879
    7. '(

' → logprob: -11.285538673400879
    8. ' ()' → logprob: -11.410538673400879
    9. '())' → logprob: -11.535538673400879
    10. '()(' → logprob: -11.535538673400879

Token 13: 'half' (ID: 52836)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07347225397825241
    2. 'i' → logprob: -3.323472261428833
    3. 'for' → logprob: -3.823472261428833
    4. ' if' → logprob: -5.573472023010254
    5. '#' → logprob: -6.448472023010254
    6. '[' → logprob: -6.448472023010254
    7. 'result' → logprob: -6.823472023010254
    8. 'count' → logprob: -7.073472023010254
    9. 'print' → logprob: -7.323472023010254
    10. ')' → logprob: -7.948472023010254

Token 14: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0755620226264
    2. '_length' → logprob: -2.825562000274658
    3. '_len' → logprob: -4.575562000274658
    4. '_index' → logprob: -6.325562000274658
    5. '_s' → logprob: -7.575562000274658
    6. '_size' → logprob: -9.075562477111816
    7. ' _' → logprob: -9.200562477111816
    8. '_user' → logprob: -9.325562477111816
    9. ' =' → logprob: -9.450562477111816
    10. '_idx' → logprob: -9.575562477111816

Token 15: '_input' (ID: 12507)
  Prédit: '_user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_user' → logprob: -0.02039285935461521
    2. '_input' → logprob: -4.395392894744873
    3. '_string' → logprob: -5.645392894744873
    4. 'user' → logprob: -6.270392894744873
    5. '_' → logprob: -6.395392894744873
    6. ' user' → logprob: -7.895392894744873
    7. '_length' → logprob: -8.895392417907715
    8. '_text' → logprob: -10.020392417907715
    9. '_the' → logprob: -10.395392417907715
    10. '_name' → logprob: -10.520392417907715

Token 16: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.013788753189146519
    2. '_' → logprob: -4.38878870010376
    3. '_len' → logprob: -6.76378870010376
    4. '_l' → logprob: -10.138789176940918
    5. '_string' → logprob: -10.763789176940918
    6. '_s' → logprob: -11.513789176940918
    7. ' =' → logprob: -11.513789176940918
    8. '_size' → logprob: -11.638789176940918
    9. 's' → logprob: -12.388789176940918
    10. '_le' → logprob: -12.513789176940918

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28811269998550415
    2. ' =' → logprob: -1.9131126403808594
    3. ' ' → logprob: -2.4131126403808594
    4. '=' → logprob: -5.038112640380859
    5. ' _' → logprob: -5.538112640380859
    6. ' //' → logprob: -6.913112640380859
    7. ')' → logprob: -7.413112640380859
    8. ' *' → logprob: -8.66311264038086
    9. 's' → logprob: -8.78811264038086
    10. ' )' → logprob: -8.91311264038086

Token 18: ' int' (ID: 677)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.16030363738536835
    2. 'user' → logprob: -1.9103035926818848
    3. ' len' → logprob: -9.660304069519043
    4. 'len' → logprob: -11.535304069519043
    5. '(user' → logprob: -13.410304069519043
    6. 'int' → logprob: -13.410304069519043
    7. ' ' → logprob: -13.910304069519043
    8. ' int' → logprob: -14.035304069519043
    9. ' (' → logprob: -15.285304069519043
    10. '"user' → logprob: -15.535304069519043

Token 19: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.012851596809923649
    2. '(len' → logprob: -4.887851715087891
    3. '(' → logprob: -5.387851715087891
    4. 'user' → logprob: -7.387851715087891
    5. '((' → logprob: -11.26285171508789
    6. ' (' → logprob: -11.38785171508789
    7. '(input' → logprob: -11.76285171508789
    8. 'len' → logprob: -12.63785171508789
    9. ' user' → logprob: -13.51285171508789
    10. ' ' → logprob: -14.01285171508789

Token 20: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.79811754100956e-05
    2. '_user' → logprob: -11.500038146972656
    3. '_output' → logprob: -11.500038146972656
    4. 'input' → logprob: -12.750038146972656
    5. '_inputs' → logprob: -13.000038146972656
    6. '_' → logprob: -13.375038146972656
    7. 'Input' → logprob: -13.375038146972656
    8. ')_' → logprob: -13.750038146972656
    9. ' _' → logprob: -13.875038146972656
    10. '_INPUT' → logprob: -14.000038146972656

Token 21: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.003662548493593931
    2. '_string' → logprob: -5.628662586212158
    3. ')_' → logprob: -10.628662109375
    4. '_strlen' → logprob: -11.128662109375
    5. '_l' → logprob: -11.628662109375
    6. '_lengths' → logprob: -12.128662109375
    7. '_' → logprob: -12.878662109375
    8. '_len' → logprob: -13.128662109375
    9. ')' → logprob: -13.253662109375
    10. '_input' → logprob: -14.628662109375

Token 22: ' //' (ID: 602)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.05675429105758667
    2. ' /' → logprob: -2.9317543506622314
    3. ')' → logprob: -6.306754112243652
    4. ' //' → logprob: -10.931754112243652
    5. ' )' → logprob: -11.181754112243652
    6. '//' → logprob: -12.306754112243652
    7. ' ' → logprob: -13.431754112243652
    8. ' ' → logprob: -13.431754112243652
    9. '()' → logprob: -13.681754112243652
    10. ')/' → logprob: -13.806754112243652

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0067156096920371056
    2. ' ' → logprob: -5.006715774536133
    3. '3' → logprob: -16.506715774536133
    4. '```' → logprob: -17.381715774536133
    5. ')' → logprob: -17.631715774536133
    6. ' ' → logprob: -18.131715774536133
    7. '۲' → logprob: -18.131715774536133
    8. '   ' → logprob: -18.194215774536133
    9. '２' → logprob: -18.319215774536133
    10. '  ' → logprob: -18.881715774536133

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.37523078918457
    4. '```' → logprob: -16.62523078918457
    5. '3' → logprob: -16.75023078918457
    6. ')' → logprob: -17.00023078918457
    7. '۲' → logprob: -18.12523078918457
    8. '２' → logprob: -18.31273078918457
    9. '=' → logprob: -18.31273078918457
    10. '  ' → logprob: -18.43773078918457

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. '))' → logprob: -12.37501049041748
    3. ' )' → logprob: -12.62501049041748
    4. ')
' → logprob: -14.00001049041748
    5. '')' → logprob: -14.37501049041748
    6. '`)' → logprob: -14.50001049041748
    7. '()' → logprob: -15.50001049041748
    8. '*' → logprob: -15.62501049041748
    9. '())' → logprob: -16.125011444091797
    10. '```' → logprob: -16.125011444091797

Token 26: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35490909218788147
    2. 'result' → logprob: -2.1049091815948486
    3. 'print' → logprob: -2.6049091815948486
    4. 'for' → logprob: -3.7299091815948486
    5. 's' → logprob: -4.1049089431762695
    6. '_' → logprob: -4.7299089431762695
    7. '
' → logprob: -4.8549089431762695
    8. '#' → logprob: -5.1049089431762695
    9. 'i' → logprob: -5.3549089431762695
    10. '[' → logprob: -5.4799089431762695

Token 27: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20126128196716309
    2. ' ' → logprob: -2.201261281967163
    3. ' _' → logprob: -2.701261281967163
    4. '_' → logprob: -5.451261520385742
    5. 'i' → logprob: -8.576261520385742
    6. '  ' → logprob: -11.951261520385742
    7. ' user' → logprob: -12.201261520385742
    8. '_i' → logprob: -12.201261520385742
    9. ' variable' → logprob: -12.701261520385742
    10. ' index' → logprob: -12.701261520385742

Token 28: '_iteration' (ID: 161656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019338393583893776
    2. ' in' → logprob: -4.769338607788086
    3. ' _' → logprob: -5.144338607788086
    4. '_in' → logprob: -6.144338607788086
    5. '_token' → logprob: -7.394338607788086
    6. '_character' → logprob: -7.394338607788086
    7. '_i' → logprob: -7.769338607788086
    8. '_index' → logprob: -8.269338607788086
    9. ' i' → logprob: -8.519338607788086
    10. '_char' → logprob: -8.644338607788086

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03131651505827904
    2. 'in' → logprob: -3.5313165187835693
    3. '_' → logprob: -7.03131628036499
    4. ' ' → logprob: -7.78131628036499
    5. ' :' → logprob: -9.406316757202148
    6. ':' → logprob: -9.656316757202148
    7. '_in' → logprob: -10.406316757202148
    8. ',' → logprob: -11.031316757202148
    9. '(' → logprob: -11.531316757202148
    10. ' _' → logprob: -11.781316757202148

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38688522577285767
    2. 'range' → logprob: -1.136885166168213
    3. '(range' → logprob: -12.011885643005371
    4. '	range' → logprob: -12.511885643005371
    5. ' ' → logprob: -13.136885643005371
    6. '```' → logprob: -14.636885643005371
    7. ' ' → logprob: -14.761885643005371
    8. '_range' → logprob: -15.449385643005371
    9. 'rang' → logprob: -15.636885643005371
    10. '   ' → logprob: -15.761885643005371

Token 31: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5769012570381165
    2. '(user' → logprob: -0.8269012570381165
    3. '(current' → logprob: -7.076901435852051
    4. ' (' → logprob: -9.32690143585205
    5. '(len' → logprob: -11.57690143585205
    6. 'user' → logprob: -12.45190143585205
    7. '(s' → logprob: -13.20190143585205
    8. '(
' → logprob: -13.45190143585205
    9. '(`' → logprob: -13.57690143585205
    10. '(n' → logprob: -13.95190143585205

Token 32: 'half' (ID: 52836)
  Prédit: 'half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.37860605120658875
    2. 'user' → logprob: -1.2536060810089111
    3. ' user' → logprob: -4.253605842590332
    4. ' half' → logprob: -4.253605842590332
    5. '1' → logprob: -7.628605842590332
    6. '0' → logprob: -8.003605842590332
    7. ' ' → logprob: -9.003605842590332
    8. 'current' → logprob: -9.753605842590332
    9. '(user' → logprob: -9.753605842590332
    10. '   ' → logprob: -9.878605842590332

Token 33: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.7530574849806726e-05
    2. ')_' → logprob: -10.875057220458984
    3. ')' → logprob: -11.125057220458984
    4. '_' → logprob: -11.625057220458984
    5. '_)' → logprob: -12.250057220458984
    6. '_for' → logprob: -13.250057220458984
    7. '(_' → logprob: -13.375057220458984
    8. '_user' → logprob: -13.875057220458984
    9. '_length' → logprob: -14.125057220458984
    10. '(' → logprob: -14.250057220458984

Token 34: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0008959780680015683
    2. 'input' → logprob: -7.125895977020264
    3. '_user' → logprob: -9.500896453857422
    4. 'user' → logprob: -11.500896453857422
    5. '_' → logprob: -12.625896453857422
    6. 'Input' → logprob: -13.625896453857422
    7. '_inputs' → logprob: -15.250896453857422
    8. '-input' → logprob: -15.500896453857422
    9. ' input' → logprob: -15.625896453857422
    10. ')' → logprob: -15.750896453857422

Token 35: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0001863750658230856
    2. 'length' → logprob: -8.8751859664917
    3. '_l' → logprob: -10.2501859664917
    4. 'ength' → logprob: -11.7501859664917
    5. '_len' → logprob: -13.3751859664917
    6. '_' → logprob: -14.1251859664917
    7. ')' → logprob: -15.6251859664917
    8. 'leng' → logprob: -15.7501859664917
    9. '_le' → logprob: -15.7501859664917
    10. '_lengths' → logprob: -16.250186920166016

Token 36: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003942213952541351
    2. '+' → logprob: -6.128942012786865
    3. ')' → logprob: -6.878942012786865
    4. ' ):' → logprob: -7.378942012786865
    5. '):
' → logprob: -10.378942489624023
    6. ' +' → logprob: -10.378942489624023
    7. ':' → logprob: -10.628942489624023
    8. ' ' → logprob: -12.628942489624023
    9. ' )' → logprob: -13.003942489624023
    10. '+:' → logprob: -13.128942489624023

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027705350890755653
    2. '    
' → logprob: -4.527705192565918
    3. ' print' → logprob: -5.402705192565918
    4. '    ' → logprob: -5.902705192565918
    5. ' 
' → logprob: -6.152705192565918
    6. '     
' → logprob: -6.152705192565918
    7. '```' → logprob: -6.652705192565918
    8. ' current' → logprob: -6.777705192565918
    9. '
' → logprob: -7.527705192565918
    10. ' user' → logprob: -7.902705192565918

Token 38: ' last' (ID: 2174)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.839950442314148
    2. ' print' → logprob: -0.964950442314148
    3. '   ' → logprob: -2.4649505615234375
    4. ' if' → logprob: -2.5899505615234375
    5. 'if' → logprob: -4.3399505615234375
    6. ' current' → logprob: -5.4649505615234375
    7. 'current' → logprob: -6.0899505615234375
    8. ' user' → logprob: -6.7149505615234375
    9. ' for' → logprob: -6.9649505615234375
    10. 'user' → logprob: -7.2149505615234375

Token 39: '_character' (ID: 99888)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.9898869395256042
    2. '_character' → logprob: -0.9898869395256042
    3. '_index' → logprob: -1.864886999130249
    4. '_' → logprob: -2.364886999130249
    5. '_letter' → logprob: -6.48988676071167
    6. '_space' → logprob: -6.61488676071167
    7. '_string' → logprob: -6.98988676071167
    8. '_chars' → logprob: -7.23988676071167
    9. '_two' → logprob: -7.98988676071167
    10. '_half' → logprob: -7.98988676071167

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31970417499542236
    2. '=' → logprob: -1.4447041749954224
    3. '_index' → logprob: -3.819704055786133
    4. '_' → logprob: -4.194704055786133
    5. 's' → logprob: -7.319704055786133
    6. ' ' → logprob: -10.694704055786133
    7. '_idx' → logprob: -10.944704055786133
    8. '=_' → logprob: -10.944704055786133
    9. '_=' → logprob: -11.194704055786133
    10. '_position' → logprob: -11.569704055786133

Token 41: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.043048977851867676
    2. 'user' → logprob: -3.168048858642578
    3. ' current' → logprob: -10.543048858642578
    4. ' ' → logprob: -11.043048858642578
    5. 'current' → logprob: -14.043048858642578
    6. '(user' → logprob: -14.043048858642578
    7. '"user' → logprob: -14.168048858642578
    8. ''user' → logprob: -14.293048858642578
    9. '_user' → logprob: -14.418048858642578
    10. ' input' → logprob: -14.668048858642578

Token 42: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.93448489275761e-05
    2. '_user' → logprob: -10.250079154968262
    3. '_output' → logprob: -10.875079154968262
    4. '_' → logprob: -11.125079154968262
    5. '_string' → logprob: -12.625079154968262
    6. '_put' → logprob: -14.000079154968262
    7. 'Input' → logprob: -14.125079154968262
    8. 'input' → logprob: -14.375079154968262
    9. '_character' → logprob: -14.375079154968262
    10. '```' → logprob: -14.750079154968262

Token 43: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.0206720617134124e-05
    2. 'string' → logprob: -12.00001049041748
    3. 'String' → logprob: -13.50001049041748
    4. '_length' → logprob: -13.87501049041748
    5. '_' → logprob: -14.00001049041748
    6. '_str' → logprob: -15.37501049041748
    7. '_s' → logprob: -15.50001049041748
    8. '_character' → logprob: -15.62501049041748
    9. '_String' → logprob: -16.125009536743164
    10. '_char' → logprob: -16.500009536743164

Token 44: '[user' (ID: 106794)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.006490122992545366
    2. '[' → logprob: -5.631490230560303
    3. '[len' → logprob: -6.256490230560303
    4. '[current' → logprob: -7.256490230560303
    5. '[user' → logprob: -8.631489753723145
    6. ' [-' → logprob: -11.131489753723145
    7. '[last' → logprob: -11.256489753723145
    8. '[:-' → logprob: -11.381489753723145
    9. '[::-' → logprob: -11.506489753723145
    10. '[
' → logprob: -12.006489753723145

Token 45: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.003078840672969818
    2. 'ser' → logprob: -6.003078937530518
    3. '_user' → logprob: -8.25307846069336
    4. 'input' → logprob: -9.25307846069336
    5. '_length' → logprob: -9.50307846069336
    6. 'n' → logprob: -10.62807846069336
    7. '-' → logprob: -11.00307846069336
    8. 'r' → logprob: -11.37807846069336
    9. 'se' → logprob: -11.62807846069336
    10. 'nt' → logprob: -11.75307846069336

Token 46: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0008821651572361588
    2. 'length' → logprob: -7.250882148742676
    3. '-' → logprob: -9.875882148742676
    4. 'ength' → logprob: -10.125882148742676
    5. '_l' → logprob: -11.125882148742676
    6. '_string' → logprob: -11.375882148742676
    7. 'ng' → logprob: -11.500882148742676
    8. ' -' → logprob: -12.250882148742676
    9. 'Length' → logprob: -12.250882148742676
    10. '-length' → logprob: -12.625882148742676

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4740961492061615
    2. ' -' → logprob: -0.9740961790084839
    3. ' ' → logprob: -11.099096298217773
    4. '1' → logprob: -13.474096298217773
    5. '   ' → logprob: -14.224096298217773
    6. '  ' → logprob: -15.349096298217773
    7. '-i' → logprob: -15.599096298217773
    8. '-(' → logprob: -15.661596298217773
    9. ' ' → logprob: -15.786596298217773
    10. ')' → logprob: -16.036596298217773

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5209914445877075
    2. ' current' → logprob: -1.6459914445877075
    3. 'current' → logprob: -1.7709914445877075
    4. ' ' → logprob: -3.145991325378418
    5. '(current' → logprob: -10.395991325378418
    6. '   ' → logprob: -11.395991325378418
    7. ' (' → logprob: -12.395991325378418
    8. '	current' → logprob: -12.895991325378418
    9. '(' → logprob: -13.270991325378418
    10. '  ' → logprob: -13.583491325378418

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07051117718219757
    2. 'current' → logprob: -2.6955111026763916
    3. ' current' → logprob: -8.070510864257812
    4. ' ' → logprob: -8.320510864257812
    5. '(current' → logprob: -11.320510864257812
    6. '(' → logprob: -12.820510864257812
    7. '   ' → logprob: -12.945510864257812
    8. 'urrent' → logprob: -15.570510864257812
    9. '	current' → logprob: -15.570510864257812
    10. '  ' → logprob: -15.820510864257812

Token 50: ']
' (ID: 1592)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3136521577835083
    2. '-' → logprob: -1.3136521577835083
    3. ']' → logprob: -8.063652038574219
    4. ' ' → logprob: -10.438652038574219
    5. '-current' → logprob: -10.563652038574219
    6. 'current' → logprob: -11.688652038574219
    7. '```' → logprob: -13.063652038574219
    8. '   ' → logprob: -13.188652038574219
    9. ' ]' → logprob: -13.313652038574219
    10. '-(' → logprob: -13.813652038574219

Token 51: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' symmetric' (ID: 123676)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0805710554122925
    2. '    ' → logprob: -1.7055710554122925
    3. ' ' → logprob: -1.8305710554122925
    4. '    
' → logprob: -1.9555710554122925
    5. ' 
' → logprob: -3.330571174621582
    6. 'current' → logprob: -3.455571174621582
    7. '<|end|>' → logprob: -3.455571174621582
    8. '  
' → logprob: -4.455571174621582
    9. '     
' → logprob: -4.705571174621582
    10. '   
' → logprob: -4.705571174621582

Token 53: '_character' (ID: 99888)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5412051677703857
    2. '_character' → logprob: -0.9162051677703857
    3. '_char' → logprob: -4.791205406188965
    4. '_' → logprob: -5.166205406188965
    5. '_position' → logprob: -5.791205406188965
    6. '_last' → logprob: -9.041205406188965
    7. '_current' → logprob: -9.166205406188965
    8. '_string' → logprob: -9.791205406188965
    9. '_s' → logprob: -9.916205406188965
    10. '_idx' → logprob: -9.916205406188965

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04509544000029564
    2. '_index' → logprob: -3.670095443725586
    3. '=' → logprob: -4.045095443725586
    4. ' ' → logprob: -7.170095443725586
    5. '_' → logprob: -8.670095443725586
    6. '_idx' → logprob: -10.170095443725586
    7. 's' → logprob: -10.170095443725586
    8. '_position' → logprob: -10.420095443725586
    9. '  ' → logprob: -11.045095443725586
    10. '_pos' → logprob: -11.795095443725586

Token 55: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.007791397627443075
    2. 'user' → logprob: -4.882791519165039
    3. ' ' → logprob: -9.507791519165039
    4. ' current' → logprob: -9.632791519165039
    5. '=user' → logprob: -12.007791519165039
    6. '[user' → logprob: -12.007791519165039
    7. ' ' → logprob: -12.132791519165039
    8. '_user' → logprob: -12.757791519165039
    9. ' last' → logprob: -12.882791519165039
    10. '"user' → logprob: -13.132791519165039

Token 56: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0008727516396902502
    2. 'put' → logprob: -7.125872611999512
    3. 'input' → logprob: -11.125872611999512
    4. '_output' → logprob: -11.250872611999512
    5. '_user' → logprob: -11.375872611999512
    6. 't' → logprob: -11.875872611999512
    7. '_put' → logprob: -12.125872611999512
    8. '```' → logprob: -12.500872611999512
    9. 'Input' → logprob: -12.625872611999512
    10. 'e' → logprob: -13.125872611999512

Token 57: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -6.110668618930504e-05
    2. 'string' → logprob: -10.12506103515625
    3. 'String' → logprob: -11.50006103515625
    4. '_length' → logprob: -11.62506103515625
    5. '_' → logprob: -14.75006103515625
    6. '_s' → logprob: -15.37506103515625
    7. '_STRING' → logprob: -15.50006103515625
    8. '```' → logprob: -15.50006103515625
    9. '_str' → logprob: -15.62506103515625
    10. '_String' → logprob: -15.87506103515625

Token 58: '[user' (ID: 106794)
  Prédit: '[user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[user' → logprob: -0.1890641450881958
    2. '[current' → logprob: -1.9390641450881958
    3. '[' → logprob: -3.5640640258789062
    4. '[
' → logprob: -9.939064025878906
    5. '[(' → logprob: -11.439064025878906
    6. '[last' → logprob: -11.439064025878906
    7. '```' → logprob: -12.064064025878906
    8. '[-' → logprob: -12.564064025878906
    9. '[first' → logprob: -12.689064025878906
    10. 'current' → logprob: -13.189064025878906

Token 59: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01156986691057682
    2. 'user' → logprob: -4.886569976806641
    3. '_user' → logprob: -5.636569976806641
    4. 'input' → logprob: -8.13656997680664
    5. '_length' → logprob: -10.13656997680664
    6. '[user' → logprob: -11.63656997680664
    7. '-input' → logprob: -11.76156997680664
    8. '_output' → logprob: -11.88656997680664
    9. '_INPUT' → logprob: -12.38656997680664
    10. '=user' → logprob: -12.88656997680664

Token 60: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.006390745751559734
    2. '_string' → logprob: -5.506390571594238
    3. '-' → logprob: -6.756390571594238
    4. 'length' → logprob: -7.506390571594238
    5. '[user' → logprob: -8.506390571594238
    6. 'string' → logprob: -9.131390571594238
    7. '-length' → logprob: -9.381390571594238
    8. ' -' → logprob: -9.631390571594238
    9. '_LENGTH' → logprob: -10.006390571594238
    10. 'Length' → logprob: -10.131390571594238

Token 61: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0892033576965332
    2. '-' → logprob: -2.464203357696533
    3. ' ' → logprob: -8.339202880859375
    4. '`' → logprob: -12.589202880859375
    5. '   ' → logprob: -12.589202880859375
    6. ' ' → logprob: -12.714202880859375
    7. ''' → logprob: -12.839202880859375
    8. '  ' → logprob: -13.276702880859375
    9. '"' → logprob: -13.339202880859375
    10. 'current' → logprob: -13.776702880859375

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3757736682891846
    2. '2' → logprob: -1.3757736682891846
    3. ' ' → logprob: -1.3757736682891846
    4. ' current' → logprob: -2.0007736682891846
    5. 'current' → logprob: -2.5007736682891846
    6. ' (' → logprob: -4.3757734298706055
    7. '(' → logprob: -5.0007734298706055
    8. '(current' → logprob: -5.3757734298706055
    9. '-' → logprob: -8.625773429870605
    10. '   ' → logprob: -8.875773429870605

Token 63: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1908913105726242
    2. '1' → logprob: -2.1908912658691406
    3. 'current' → logprob: -2.8158912658691406
    4. ' ' → logprob: -7.440891265869141
    5. '(current' → logprob: -7.440891265869141
    6. '(' → logprob: -7.565891265869141
    7. ' current' → logprob: -8.06589126586914
    8. 'iteration' → logprob: -10.31589126586914
    9. '-' → logprob: -10.81589126586914
    10. '   ' → logprob: -11.56589126586914

Token 64: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3133218288421631
    2. '-' → logprob: -1.313321828842163
    3. ' ' → logprob: -10.563322067260742
    4. '-current' → logprob: -10.563322067260742
    5. ' ' → logprob: -13.188322067260742
    6. 'current' → logprob: -13.438322067260742
    7. ' current' → logprob: -13.688322067260742
    8. ')' → logprob: -13.938322067260742
    9. '-(' → logprob: -14.813322067260742
    10. '   ' → logprob: -14.938322067260742

Token 65: ' half' (ID: 6375)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.16051016747951508
    2. 'current' → logprob: -1.9105101823806763
    3. ' ' → logprob: -9.160510063171387
    4. ' (' → logprob: -9.660510063171387
    5. '2' → logprob: -9.660510063171387
    6. '(current' → logprob: -10.035510063171387
    7. '1' → logprob: -12.660510063171387
    8. '	current' → logprob: -12.910510063171387
    9. '_current' → logprob: -13.660510063171387
    10. '(' → logprob: -14.535510063171387

Token 66: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. 'Of' → logprob: -17.75
    3. '_OF' → logprob: -17.75
    4. 'of' → logprob: -18.0
    5. '_' → logprob: -18.125
    6. '_o' → logprob: -18.25
    7. '_current' → logprob: -18.5
    8. '_character' → logprob: -18.75
    9. ' of' → logprob: -19.0
    10. '__' → logprob: -19.5

Token 67: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00029947367147542536
    2. 'input' → logprob: -8.250299453735352
    3. '_user' → logprob: -11.125299453735352
    4. '_current' → logprob: -11.750299453735352
    5. 'Input' → logprob: -12.250299453735352
    6. '_length' → logprob: -12.375299453735352
    7. 'current' → logprob: -12.750299453735352
    8. 'length' → logprob: -13.750299453735352
    9. 'user' → logprob: -14.000299453735352
    10. '_' → logprob: -14.250299453735352

Token 68: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.5094070477061905e-05
    2. 'length' → logprob: -11.125015258789062
    3. '-length' → logprob: -16.625015258789062
    4. 'Length' → logprob: -16.875015258789062
    5. '_lengths' → logprob: -17.125015258789062
    6. '_LENGTH' → logprob: -17.500015258789062
    7. '_l' → logprob: -18.625015258789062
    8. '_input' → logprob: -18.625015258789062
    9. 'ength' → logprob: -18.750015258789062
    10. ' length' → logprob: -19.125015258789062

Token 69: ']

' (ID: 3144)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.24605703353881836
    2. '-' → logprob: -1.8710570335388184
    3. ']' → logprob: -2.8710570335388184
    4. ' +' → logprob: -6.371057033538818
    5. ' ]' → logprob: -6.621057033538818
    6. '-current' → logprob: -6.746057033538818
    7. '+' → logprob: -6.871057033538818
    8. ' ' → logprob: -7.246057033538818
    9. '   ' → logprob: -7.621057033538818
    10. 'current' → logprob: -7.621057033538818

Token 70: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' if' (ID: 538)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5063638091087341
    2. '   ' → logprob: -1.006363868713379
    3. ' user' → logprob: -4.006363868713379
    4. 'last' → logprob: -5.506363868713379
    5. 'current' → logprob: -5.881363868713379
    6. '<|end|>' → logprob: -6.506363868713379
    7. 'if' (adapté à ' if') → logprob: -6.881363868713379
    8. ' if' → logprob: -6.881363868713379
    9. 'print' → logprob: -7.381363868713379
    10. ' last' → logprob: -7.381363868713379

Token 72: ' last' (ID: 2174)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.1405281275510788
    2. 'user' → logprob: -2.1405282020568848
    3. ' last' → logprob: -4.765528202056885
    4. ' current' → logprob: -6.015528202056885
    5. 'last' → logprob: -6.765528202056885
    6. ' ' → logprob: -7.515528202056885
    7. ' symmetric' → logprob: -7.890528202056885
    8. 'current' → logprob: -8.390527725219727
    9. 's' → logprob: -9.390527725219727
    10. ' ' → logprob: -10.390527725219727

Token 73: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -0.0010426939697936177
    2. '_' → logprob: -6.87604284286499
    3. 'character' → logprob: -12.376042366027832
    4. '_char' → logprob: -13.376042366027832
    5. '_user' → logprob: -13.626042366027832
    6. '_CHARACTER' → logprob: -13.626042366027832
    7. 'Character' → logprob: -14.626042366027832
    8. '<Character' → logprob: -15.376042366027832
    9. ' _' → logprob: -15.626042366027832
    10. '...' → logprob: -16.50104331970215

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07175130397081375
    2. '==' → logprob: -3.071751356124878
    3. ' !=' → logprob: -3.821751356124878
    4. '!=' → logprob: -6.946751117706299
    5. ' ' → logprob: -10.321751594543457
    6. '.' → logprob: -12.321751594543457
    7. ' ' → logprob: -13.196751594543457
    8. '=' → logprob: -13.446751594543457
    9. ' not' → logprob: -13.821751594543457
    10. '  ' → logprob: -14.321751594543457

Token 75: ' symmetric' (ID: 123676)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.40113919973373413
    2. ' symmetric' → logprob: -1.151139259338379
    3. 'sym' → logprob: -4.901139259338379
    4. 'user' → logprob: -5.651139259338379
    5. ' user' → logprob: -6.026139259338379
    6. ' ' → logprob: -7.901139259338379
    7. ' sym' → logprob: -8.526139259338379
    8. '   ' → logprob: -9.276139259338379
    9. ' symmetrical' → logprob: -10.026139259338379
    10. ' ' → logprob: -10.776139259338379

Token 76: '_character' (ID: 99888)
  Prédit: '_character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_character' → logprob: -1.0087516784551553e-05
    2. 'character' → logprob: -12.25001049041748
    3. '_' → logprob: -12.50001049041748
    4. '_char' → logprob: -14.00001049041748
    5. ' _' → logprob: -14.87501049041748
    6. '_CHARACTER' → logprob: -16.250009536743164
    7. 'Character' → logprob: -16.750009536743164
    8. '__' → logprob: -16.875009536743164
    9. '<Character' → logprob: -17.000009536743164
    10. '```' → logprob: -18.375009536743164

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.123899558791891e-05
    2. ':
' → logprob: -10.00007152557373
    3. ' and' → logprob: -11.50007152557373
    4. ':return' → logprob: -12.50007152557373
    5. ' :' → logprob: -12.62507152557373
    6. '):' → logprob: -13.25007152557373
    7. '<|end|>' → logprob: -13.50007152557373
    8. '   ' → logprob: -13.62507152557373
    9. '       ' → logprob: -13.62507152557373
    10. 'and' → logprob: -14.00007152557373

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006024661008268595
    2. '   ' → logprob: -6.0060248374938965
    3. '\n' → logprob: -6.8810248374938965
    4. ':' → logprob: -7.2560248374938965
    5. '<|end|>' → logprob: -7.8810248374938965
    6. ':
' → logprob: -8.006024360656738
    7. '        
' → logprob: -8.256024360656738
    8. '    ' → logprob: -8.756024360656738
    9. '\' → logprob: -9.131024360656738
    10. ' continue' → logprob: -9.881024360656738

Token 79: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.6610126495361328
    2. '   ' → logprob: -1.0360126495361328
    3. 'user' (adapté à ' user') → logprob: -2.286012649536133
    4. '       ' → logprob: -4.536012649536133
    5. '    ' → logprob: -5.536012649536133
    6. ' break' → logprob: -5.536012649536133
    7. 'print' → logprob: -6.286012649536133
    8. ' print' → logprob: -6.661012649536133
    9. 'pass' → logprob: -7.161012649536133
    10. ' continue' → logprob: -7.161012649536133

Token 80: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9504606825648807e-05
    2. '_' → logprob: -12.000019073486328
    3. '_string' → logprob: -12.375019073486328
    4. 'Input' → logprob: -12.625019073486328
    5. '_output' → logprob: -12.750019073486328
    6. 'input' → logprob: -13.250019073486328
    7. '_user' → logprob: -14.250019073486328
    8. '_inputs' → logprob: -16.750019073486328
    9. '_answer' → logprob: -17.000019073486328
    10. '_s' → logprob: -17.125019073486328

Token 81: '_length' (ID: 11514)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0010428131790831685
    2. '_length' → logprob: -6.87604284286499
    3. 'string' → logprob: -12.251042366027832
    4. 'String' → logprob: -12.751042366027832
    5. '_' → logprob: -14.001042366027832
    6. '_s' → logprob: -14.626042366027832
    7. '_String' → logprob: -15.126042366027832
    8. '_str' → logprob: -15.376042366027832
    9. 's' → logprob: -16.25104331970215
    10. '_STRING' → logprob: -16.62604331970215

Token 82: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.14711862802505493
    2. '-=' → logprob: -2.64711856842041
    3. '-' → logprob: -2.77211856842041
    4. '   ' → logprob: -6.89711856842041
    5. '=' → logprob: -7.02211856842041
    6. ' -' → logprob: -7.14711856842041
    7. ' =' → logprob: -8.14711856842041
    8. ' ' → logprob: -8.77211856842041
    9. '```' → logprob: -9.39711856842041
    10. '    ' → logprob: -9.89711856842041

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013762809976469725
    2. '2' → logprob: -9.375137329101562
    3. ' ' → logprob: -9.875137329101562
    4. '   ' → logprob: -13.750137329101562
    5. '  ' → logprob: -17.437637329101562
    6. '```' → logprob: -17.812637329101562
    7. '0' → logprob: -17.875137329101562
    8. '    ' → logprob: -18.500137329101562
    9. '１' → logprob: -18.500137329101562
    10. '3' → logprob: -18.812637329101562

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.269565634895116e-05
    2. '2' → logprob: -9.500092506408691
    3. ' ' → logprob: -11.000092506408691
    4. '   ' → logprob: -14.500092506408691
    5. '  ' → logprob: -16.750093460083008
    6. '0' → logprob: -16.875093460083008
    7. '```' → logprob: -17.125093460083008
    8. '3' → logprob: -17.312593460083008
    9. '１' → logprob: -17.312593460083008
    10. '11' → logprob: -17.875093460083008

Token 85: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: 'if' (ID: 366)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3105770945549011
    2. ' else' → logprob: -2.310577154159546
    3. '       ' → logprob: -2.685577154159546
    4. 'else' → logprob: -3.060577154159546
    5. '<|end|>' → logprob: -3.060577154159546
    6. 'user' → logprob: -6.935576915740967
    7. '    ' → logprob: -7.185576915740967
    8. ' ' → logprob: -7.310576915740967
    9. '<|end|>' → logprob: -7.685576915740967
    10. ')' → logprob: -7.810576915740967

Token 87: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.008583370596170425
    2. 'user' → logprob: -5.0085835456848145
    3. ' len' → logprob: -6.8835835456848145
    4. ' ' → logprob: -8.258583068847656
    5. ' __' → logprob: -8.758583068847656
    6. ' not' → logprob: -9.508583068847656
    7. ' last' → logprob: -9.633583068847656
    8. ' True' → logprob: -9.633583068847656
    9. '_' → logprob: -9.758583068847656
    10. ' _' → logprob: -10.133583068847656

Token 88: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0008436953066848218
    2. '_put' → logprob: -8.12584400177002
    3. '_' → logprob: -8.37584400177002
    4. '_length' → logprob: -9.25084400177002
    5. 'put' → logprob: -9.37584400177002
    6. '_output' → logprob: -10.12584400177002
    7. ' _' → logprob: -10.50084400177002
    8. '```' → logprob: -11.00084400177002
    9. '_string' → logprob: -11.12584400177002
    10. '_code' → logprob: -12.00084400177002

Token 89: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.01610018126666546
    2. '_string' → logprob: -4.1411004066467285
    3. 'string' → logprob: -10.51609992980957
    4. 'length' → logprob: -10.76609992980957
    5. '_' → logprob: -11.89109992980957
    6. '```' → logprob: -12.89109992980957
    7. '_input' → logprob: -13.39109992980957
    8. ''_' → logprob: -13.89109992980957
    9. 'Length' → logprob: -14.14109992980957
    10. '_l' → logprob: -14.26609992980957

Token 90: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0977049395442009
    2. ' >' → logprob: -2.8477048873901367
    3. '==' → logprob: -4.097704887390137
    4. ' <=' → logprob: -4.972704887390137
    5. ' !=' → logprob: -5.597704887390137
    6. ' <' → logprob: -5.847704887390137
    7. ' %' → logprob: -5.972704887390137
    8. '>' → logprob: -7.222704887390137
    9. ' >=' → logprob: -7.347704887390137
    10. ' ' → logprob: -7.347704887390137

Token 91: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.5705167651176453
    2. 'half' → logprob: -1.07051682472229
    3. ' ' → logprob: -2.82051682472229
    4. '0' → logprob: -3.57051682472229
    5. ' len' → logprob: -6.070516586303711
    6. 'len' → logprob: -7.070516586303711
    7. '1' → logprob: -8.195516586303711
    8. ' user' → logprob: -8.195516586303711
    9. ' int' → logprob: -9.070516586303711
    10. 'user' → logprob: -9.195516586303711

Token 92: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -7.3458322731312364e-06
    2. '_user' → logprob: -12.250007629394531
    3. '_' → logprob: -13.750007629394531
    4. 'user' → logprob: -15.375007629394531
    5. '_input' → logprob: -15.625007629394531
    6. ' of' → logprob: -15.750007629394531
    7. 'of' → logprob: -16.00000762939453
    8. '_o' → logprob: -16.12500762939453
    9. '_or' → logprob: -16.37500762939453
    10. '\' → logprob: -16.62500762939453

Token 93: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.055698372423648834
    2. 'input' → logprob: -3.4306983947753906
    3. 'user' → logprob: -4.055698394775391
    4. '_user' → logprob: -5.430698394775391
    5. 'the' → logprob: -10.93069839477539
    6. '_length' → logprob: -11.05569839477539
    7. 'half' → logprob: -11.05569839477539
    8. 'Input' → logprob: -11.30569839477539
    9. 'length' → logprob: -11.68069839477539
    10. '_' → logprob: -11.68069839477539

Token 94: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0004911953583359718
    2. 'length' → logprob: -7.625491142272949
    3. '_l' → logprob: -13.37549114227295
    4. '_of' → logprob: -14.25049114227295
    5. '_input' → logprob: -15.12549114227295
    6. 'ength' → logprob: -15.37549114227295
    7. '_' → logprob: -15.87549114227295
    8. 'of' → logprob: -16.500492095947266
    9. 'l' → logprob: -17.125492095947266
    10. 'leng' → logprob: -17.250492095947266

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01104935072362423
    2. ':
' → logprob: -4.511049270629883
    3. ':
' → logprob: -14.761049270629883
    4. ':

' → logprob: -14.761049270629883
    5. ':return' → logprob: -15.136049270629883
    6. 'print' → logprob: -15.636049270629883
    7. '   ' → logprob: -16.136049270629883
    8. ' :' → logprob: -16.386049270629883
    9. ' and' → logprob: -17.511049270629883
    10. '.' → logprob: -17.886049270629883

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006122887134552002
    2. ' print' → logprob: -5.506123065948486
    3. 'print' → logprob: -6.256123065948486
    4. '    
' → logprob: -10.006122589111328
    5. '       ' → logprob: -10.131122589111328
    6. '	print' → logprob: -11.256122589111328
    7. '   ' → logprob: -11.631122589111328
    8. '
' → logprob: -11.631122589111328
    9. '    ' → logprob: -13.631122589111328
    10. '```' → logprob: -14.131122589111328

Token 97: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14115513861179352
    2. '   ' → logprob: -2.141155242919922
    3. 'print' (adapté à ' print') → logprob: -4.266155242919922
    4. '	print' → logprob: -9.891155242919922
    5. '    ' → logprob: -11.141155242919922
    6. '       ' → logprob: -11.516155242919922
    7. '
' → logprob: -11.766155242919922
    8. ' ' → logprob: -13.766155242919922
    9. '```' → logprob: -13.766155242919922
    10. '   ' → logprob: -13.828655242919922

Token 98: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4946817457675934
    2. '("' → logprob: -0.994681715965271
    3. '('' → logprob: -4.4946818351745605
    4. '(True' → logprob: -4.9946818351745605
    5. '("("' → logprob: -6.7446818351745605
    6. '()' → logprob: -7.6196818351745605
    7. '(user' → logprob: -7.7446818351745605
    8. '("")' → logprob: -9.619681358337402
    9. '(true' → logprob: -9.869681358337402
    10. '(
' → logprob: -10.369681358337402

Token 99: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.810164213180542
    2. 'YES' → logprob: -0.810164213180542
    3. 'True' → logprob: -3.060164213180542
    4. 'Palindrome' → logprob: -3.435164213180542
    5. 'yes' → logprob: -4.185164451599121
    6. '"' → logprob: -5.810164451599121
    7. 'true' → logprob: -6.560164451599121
    8. 'Good' → logprob: -6.685164451599121
    9. 'Possible' → logprob: -7.310164451599121
    10. 'Funny' → logprob: -7.310164451599121

Token 100: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04072579741477966
    2. '!")' → logprob: -3.6657257080078125
    3. '")
' → logprob: -4.2907257080078125
    4. '!")
' → logprob: -8.040725708007812
    5. 'else' → logprob: -9.040725708007812
    6. '!' → logprob: -9.290725708007812
    7. ')")' → logprob: -10.540725708007812
    8. ')' → logprob: -10.665725708007812
    9. ',' → logprob: -11.790725708007812
    10. ' ")' → logprob: -12.040725708007812

Token 101: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003611708991229534
    2. ' else' → logprob: -5.6286115646362305
    3. 'elif' → logprob: -12.25361156463623
    4. '<|end|>' → logprob: -13.50361156463623
    5. 'Else' → logprob: -13.75361156463623
    6. '	else' → logprob: -14.00361156463623
    7. '   ' → logprob: -14.25361156463623
    8. ' ' → logprob: -14.50361156463623
    9. 'elser' → logprob: -14.87861156463623
    10. ')' → logprob: -15.00361156463623

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013949995627626777
    2. ':
' → logprob: -6.626395225524902
    3. '   ' → logprob: -9.751395225524902
    4. ' :' → logprob: -12.001395225524902
    5. '():' → logprob: -13.251395225524902
    6. ' :
' → logprob: -14.501395225524902
    7. '    ' → logprob: -14.751395225524902
    8. '():
' → logprob: -15.251395225524902
    9. '):' → logprob: -15.251395225524902
    10. '(' → logprob: -15.751395225524902

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01078734453767538
    2. 'print' → logprob: -5.010787487030029
    3. ' print' → logprob: -5.510787487030029
    4. '       ' → logprob: -11.510787010192871
    5. '	print' → logprob: -12.135787010192871
    6. '    ' → logprob: -12.885787010192871
    7. '```' → logprob: -13.385787010192871
    8. '   ' → logprob: -14.635787010192871
    9. ' ' → logprob: -15.510787010192871
    10. '(print' → logprob: -15.510787010192871

Token 104: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.38706332445144653
    2. ' print' → logprob: -1.1370632648468018
    3. '   ' → logprob: -8.637063026428223
    4. '	print' → logprob: -11.637063026428223
    5. '"' → logprob: -13.137063026428223
    6. '.print' → logprob: -13.387063026428223
    7. '    ' → logprob: -14.012063026428223
    8. '(print' → logprob: -14.262063026428223
    9. '```' → logprob: -15.137063026428223
    10. ' ' → logprob: -15.387063026428223

Token 105: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576026439666748
    2. '("' → logprob: -0.826026439666748
    3. '("")' → logprob: -10.326026916503906
    4. '()' → logprob: -10.951026916503906
    5. '("("' → logprob: -11.076026916503906
    6. '('' → logprob: -11.201026916503906
    7. '(
' → logprob: -13.076026916503906
    8. '(False' → logprob: -13.451026916503906
    9. '("""' → logprob: -13.576026916503906
    10. '(""' → logprob: -14.326026916503906

Token 106: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.12695498764514923
    2. '"No' → logprob: -2.126955032348633
    3. '"' → logprob: -10.876955032348633
    4. ' No' → logprob: -11.876955032348633
    5. 'NO' → logprob: -15.126955032348633
    6. 'no' → logprob: -15.376955032348633
    7. '")' → logprob: -15.626955032348633
    8. '"N' → logprob: -15.751955032348633
    9. '“No' → logprob: -16.001955032348633
    10. '>No' → logprob: -17.376955032348633

Token 107: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04899926111102104
    2. ')' → logprob: -3.048999309539795
    3. ')")' → logprob: -7.798999309539795
    4. '')' → logprob: -14.548998832702637
    5. '}")' → logprob: -14.548998832702637
    6. '")
' → logprob: -15.423998832702637
    7. '`)' → logprob: -15.923998832702637
    8. '```' → logprob: -16.048999786376953
    9. '!")' → logprob: -17.048999786376953
    10. ' )' → logprob: -17.423999786376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 53.33%
Précision adaptée (1ère position): 54.29%
Précision (top 10): 80.95%
================================================================================
