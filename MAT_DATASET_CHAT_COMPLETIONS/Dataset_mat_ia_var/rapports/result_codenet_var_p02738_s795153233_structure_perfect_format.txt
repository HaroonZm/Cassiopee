================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import *
n, M = map(int, input().split())
l = n * 3 + 1
d = zeros((l, n * 5), int64)
d[0][0] = 1
for i in range(1, l):
    j, k = i - 1, i - 2
    d[i] = (d[i - 3] * k * j + roll(d[k], -1) * j + roll(d[j], 1)) % M
print(sum(d[-1][:l]) % M)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.18979160487651825
    2. ' array' → logprob: -1.8147915601730347
    3. 'random' → logprob: -4.814791679382324
    4. ' random' → logprob: -6.439791679382324
    5. ' as' → logprob: -8.939791679382324
    6. '*' → logprob: -10.064791679382324
    7. 'as' → logprob: -10.564791679382324
    8. 'empty' → logprob: -11.064791679382324
    9. 'zeros' → logprob: -11.314791679382324
    10. ' ndarray' → logprob: -11.314791679382324

Token 4: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40188801288604736
    2. '.' → logprob: -1.7768880128860474
    3. '(' → logprob: -2.901887893676758
    4. 'array' → logprob: -3.526887893676758
    5. 'random' → logprob: -3.776887893676758
    6. 'import' → logprob: -4.401887893676758
    7. 'as' → logprob: -4.901887893676758
    8. 'ar' → logprob: -5.151887893676758
    9. 'l' → logprob: -5.526887893676758
    10. '`' → logprob: -5.651887893676758

Token 5: ',' (ID: 11)
  Prédit: 'umpy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'umpy' → logprob: -0.5493516325950623
    2. 'p' → logprob: -1.924351692199707
    3. 'u' → logprob: -2.174351692199707
    4. 'ump' → logprob: -2.674351692199707
    5. 'um' → logprob: -2.799351692199707
    6. 'a' → logprob: -4.174351692199707
    7. 'e' → logprob: -5.174351692199707
    8. 'ew' → logprob: -5.924351692199707
    9. 'par' → logprob: -6.424351692199707
    10. 'd' → logprob: -6.799351692199707

Token 6: ' M' (ID: 391)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.35977816581726074
    2. 'm' → logprob: -1.4847781658172607
    3. ' p' → logprob: -2.9847781658172607
    4. ' k' → logprob: -4.73477840423584
    5. 'p' → logprob: -4.85977840423584
    6. 'k' → logprob: -5.23477840423584
    7. '=' → logprob: -7.48477840423584
    8. 'array' → logprob: -7.60977840423584
    9. ' array' → logprob: -8.35977840423584
    10. ' n' → logprob: -8.35977840423584

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47542405128479004
    2. ' =' → logprob: -0.97542405128479
    3. ',' → logprob: -6.725423812866211
    4. ' ' → logprob: -9.600423812866211
    5. ')' → logprob: -10.475423812866211
    6. ' ,' → logprob: -10.725423812866211
    7. '.' → logprob: -12.225423812866211
    8. '[' → logprob: -12.475423812866211
    9. '  ' → logprob: -12.600423812866211
    10. '=

' → logprob: -12.975423812866211

Token 8: ' map' (ID: 4014)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5316728353500366
    2. ' ' → logprob: -2.031672954559326
    3. '100' → logprob: -2.156672954559326
    4. '5' → logprob: -2.531672954559326
    5. '50' → logprob: -4.031672954559326
    6. '20' → logprob: -4.156672954559326
    7. 'array' → logprob: -4.281672954559326
    8. 'int' → logprob: -4.406672954559326
    9. ' int' → logprob: -5.656672954559326
    10. '3' → logprob: -6.156672954559326

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22788502275943756
    2. '(' → logprob: -1.6028850078582764
    3. '(str' → logprob: -6.6028852462768555
    4. '(input' → logprob: -7.7278852462768555
    5. '(lambda' → logprob: -7.8528852462768555
    6. 'int' → logprob: -8.727885246276855
    7. '<int' → logprob: -10.352885246276855
    8. '[int' → logprob: -10.727885246276855
    9. '(eval' → logprob: -11.102885246276855
    10. '(
' → logprob: -11.727885246276855

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.30673128366470337
    2. 'input' → logprob: -1.9317312240600586
    3. ')' → logprob: -2.3067312240600586
    4. ',input' → logprob: -4.431731224060059
    5. ',' → logprob: -5.556731224060059
    6. '(' → logprob: -6.306731224060059
    7. ' input' → logprob: -6.931731224060059
    8. '(raw' → logprob: -8.431731224060059
    9. '=input' → logprob: -8.556731224060059
    10. '```' → logprob: -8.931731224060059

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01613243669271469
    2. ' input' → logprob: -4.141132354736328
    3. '(input' → logprob: -9.641132354736328
    4. 'raw' → logprob: -10.766132354736328
    5. ')' → logprob: -12.391132354736328
    6. '=input' → logprob: -12.891132354736328
    7. ' ' → logprob: -13.266132354736328
    8. ',input' → logprob: -13.891132354736328
    9. '	input' → logprob: -14.391132354736328
    10. ' raw' → logprob: -14.766132354736328

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4014536440372467
    2. '().' → logprob: -1.6514536142349243
    3. '()' → logprob: -2.026453733444214
    4. '());' → logprob: -6.151453495025635
    5. '('' → logprob: -6.276453495025635
    6. ')' → logprob: -7.276453495025635
    7. '()))' → logprob: -7.526453495025635
    8. '(' → logprob: -7.776453495025635
    9. '("' → logprob: -8.026453971862793
    10. '();)' → logprob: -8.276453971862793

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007199380779638886
    2. 'strip' → logprob: -7.250720024108887
    3. ' split' → logprob: -12.000720024108887
    4. 'rstrip' → logprob: -12.750720024108887
    5. 'read' → logprob: -14.500720024108887
    6. ')' → logprob: -15.250720024108887
    7. '(split' → logprob: -15.375720024108887
    8. 'spl' → logprob: -17.50071907043457
    9. ' strip' → logprob: -18.25071907043457
    10. ' ' → logprob: -18.62571907043457

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28530794382095337
    2. '))' → logprob: -1.4103078842163086
    3. '())' → logprob: -5.660307884216309
    4. '()))' → logprob: -8.410307884216309
    5. '()' → logprob: -9.035307884216309
    6. ''))' → logprob: -9.410307884216309
    7. '')' → logprob: -9.410307884216309
    8. '('' → logprob: -9.785307884216309
    9. '),' → logprob: -10.660307884216309
    10. '(' → logprob: -10.910307884216309

Token 15: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08423280715942383
    2. 'arr' → logprob: -3.959232807159424
    3. 'x' → logprob: -4.084232807159424
    4. 'array' → logprob: -4.084232807159424
    5. 'A' → logprob: -4.959232807159424
    6. 'data' → logprob: -5.709232807159424
    7. '
' → logprob: -6.084232807159424
    8. '[' → logprob: -6.209232807159424
    9. 'matrix' → logprob: -6.334232807159424
    10. 's' → logprob: -6.709232807159424

Token 16: ' =' (ID: 314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8376520276069641
    2. 'ist' → logprob: -0.9626520276069641
    3. ' =' → logprob: -2.5876519680023193
    4. '=' → logprob: -3.8376519680023193
    5. 'e' → logprob: -3.9626519680023193
    6. 'is' → logprob: -4.087652206420898
    7. 'ine' → logprob: -4.337652206420898
    8. 's' → logprob: -4.587652206420898
    9. 'en' → logprob: -5.212652206420898
    10. 'ines' → logprob: -5.337652206420898

Token 17: ' n' (ID: 297)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9198558330535889
    2. '[' → logprob: -1.0448558330535889
    3. '[]' → logprob: -1.7948558330535889
    4. '[list' → logprob: -3.419855833053589
    5. '[int' → logprob: -4.044856071472168
    6. 'range' → logprob: -5.169856071472168
    7. ' [' → logprob: -5.169856071472168
    8. '[input' → logprob: -5.294856071472168
    9. ' list' → logprob: -5.419856071472168
    10. 'ist' → logprob: -5.794856071472168

Token 18: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.246962547302246
    2. '-' → logprob: -1.496962547302246
    3. '>' → logprob: -2.371962547302246
    4. '+' → logprob: -2.371962547302246
    5. ')' → logprob: -2.496962547302246
    6. '<|end|>' → logprob: -2.996962547302246
    7. '*' → logprob: -3.371962547302246
    8. ',' → logprob: -3.746962547302246
    9. '**' → logprob: -3.746962547302246
    10. '[' → logprob: -4.121962547302246

Token 19: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.643405020236969
    2. ' M' → logprob: -1.6434049606323242
    3. 'ones' → logprob: -2.518404960632324
    4. 'ar' → logprob: -3.393404960632324
    5. 'n' → logprob: -3.393404960632324
    6. ' ones' → logprob: -3.768404960632324
    7. '[' → logprob: -3.893404960632324
    8. ' ar' → logprob: -4.018404960632324
    9. 'array' → logprob: -4.893404960632324
    10. '2' → logprob: -5.143404960632324

Token 20: '3' (ID: 18)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.40042561292648315
    2. 'ones' → logprob: -1.900425672531128
    3. 'array' → logprob: -3.150425672531128
    4. 'ar' → logprob: -3.275425672531128
    5. 'n' → logprob: -3.775425672531128
    6. 'log' → logprob: -4.150425434112549
    7. 'eye' → logprob: -4.400425434112549
    8. 'identity' → logprob: -4.525425434112549
    9. 'random' → logprob: -5.275425434112549
    10. '[' → logprob: -5.400425434112549

Token 21: ' +' (ID: 659)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.7446625232696533
    2. '
' → logprob: -1.9946625232696533
    3. '+' → logprob: -2.1196625232696533
    4. '<|end|>' → logprob: -2.1196625232696533
    5. '*' → logprob: -2.4946625232696533
    6. ')' → logprob: -2.4946625232696533
    7. '```' → logprob: -2.6196625232696533
    8. ' ' → logprob: -3.2446625232696533
    9. ',' → logprob: -3.3696625232696533
    10. '[' → logprob: -3.8696625232696533

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6153862476348877
    2. ' ' → logprob: -1.6153862476348877
    3. '2' → logprob: -1.8653862476348877
    4. '4' → logprob: -3.3653862476348877
    5. '3' → logprob: -3.6153862476348877
    6. '7' → logprob: -4.490386009216309
    7. '5' → logprob: -4.615386009216309
    8. '6' → logprob: -4.865386009216309
    9. ' M' → logprob: -5.615386009216309
    10. '10' → logprob: -5.990386009216309

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36428430676460266
    2. '2' → logprob: -2.1142842769622803
    3. 'M' → logprob: -2.2392842769622803
    4. '3' → logprob: -3.1142842769622803
    5. '4' → logprob: -4.614284515380859
    6. '6' → logprob: -4.614284515380859
    7. '5' → logprob: -5.489284515380859
    8. '7' → logprob: -5.864284515380859
    9. '9' → logprob: -6.489284515380859
    10. ' M' → logprob: -6.614284515380859

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7822902202606201
    2. ' ' → logprob: -2.03229022026062
    3. '`' → logprob: -2.65729022026062
    4. ')' → logprob: -2.65729022026062
    5. '*' → logprob: -3.40729022026062
    6. '[' → logprob: -3.53229022026062
    7. '\' → logprob: -3.53229022026062
    8. ',' → logprob: -3.65729022026062
    9. ' 
' → logprob: -3.90729022026062
    10. '
' → logprob: -3.90729022026062

Token 25: 'd' (ID: 67)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3243212699890137
    2. 'a' → logprob: -1.8243212699890137
    3. '\n' → logprob: -1.9493212699890137
    4. 'x' → logprob: -2.3243212699890137
    5. 's' → logprob: -3.3243212699890137
    6. '\' → logprob: -3.3243212699890137
    7. '[' → logprob: -3.5743212699890137
    8. 'd' → logprob: -4.074321269989014
    9. 'print' → logprob: -4.074321269989014
    10. ')' → logprob: -4.074321269989014

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24081458151340485
    2. '=' → logprob: -2.240814685821533
    3. 'ef' → logprob: -3.490814685821533
    4. 'array' → logprob: -3.990814685821533
    5. 'e' → logprob: -5.115814685821533
    6. ' ' → logprob: -5.240814685821533
    7. '.' → logprob: -5.615814685821533
    8. 'd' → logprob: -5.615814685821533
    9. 'ot' → logprob: -5.740814685821533
    10. '[' → logprob: -5.865814685821533

Token 27: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.5223416090011597
    2. ' array' → logprob: -1.6473416090011597
    3. ' empty' → logprob: -2.522341728210449
    4. 'array' → logprob: -2.897341728210449
    5. 'empty' → logprob: -3.147341728210449
    6. 'zeros' → logprob: -4.272341728210449
    7. ' ones' → logprob: -5.397341728210449
    8. ' random' → logprob: -5.897341728210449
    9. ' diag' → logprob: -5.897341728210449
    10. ' randint' → logprob: -6.397341728210449

Token 28: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.1565248966217041
    2. '(l' → logprob: -2.406524896621704
    3. '(' → logprob: -2.906524896621704
    4. '([' → logprob: -10.406524658203125
    5. '(shape' → logprob: -10.656524658203125
    6. '(d' → logprob: -10.906524658203125
    7. '(n' → logprob: -12.031524658203125
    8. '(int' → logprob: -12.156524658203125
    9. ' (' → logprob: -12.781524658203125
    10. '(s' → logprob: -13.281524658203125

Token 29: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.010603712871670723
    2. 'n' → logprob: -5.760603904724121
    3. 'M' → logprob: -5.885603904724121
    4. ' l' → logprob: -6.260603904724121
    5. ',' → logprob: -6.885603904724121
    6. '(l' → logprob: -7.885603904724121
    7. '(' → logprob: -8.385603904724121
    8. ')' → logprob: -8.635603904724121
    9. '3' → logprob: -8.760603904724121
    10. '2' → logprob: -8.760603904724121

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024728013668209314
    2. '))' → logprob: -6.377472877502441
    3. ')' → logprob: -8.252472877502441
    4. ',l' → logprob: -8.377472877502441
    5. '),' → logprob: -9.377472877502441
    6. ' ,' → logprob: -9.627472877502441
    7. ',d' → logprob: -9.752472877502441
    8. ',)' → logprob: -10.002472877502441
    9. ',),' → logprob: -11.502472877502441
    10. ',
' → logprob: -12.627472877502441

Token 31: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31232354044914246
    2. ' l' → logprob: -1.8123235702514648
    3. ' M' → logprob: -3.687323570251465
    4. 'M' → logprob: -3.687323570251465
    5. '3' → logprob: -3.812323570251465
    6. ' ' → logprob: -4.437323570251465
    7. 'n' → logprob: -5.437323570251465
    8. ' n' → logprob: -5.562323570251465
    9. '2' → logprob: -6.062323570251465
    10. '4' → logprob: -6.312323570251465

Token 32: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06991853564977646
    2. '),' → logprob: -3.069918632507324
    3. ',' → logprob: -3.944918632507324
    4. ')' → logprob: -7.569918632507324
    5. ' ))' → logprob: -7.819918632507324
    6. '+' → logprob: -8.444918632507324
    7. ' ,' → logprob: -8.694918632507324
    8. '*' → logprob: -8.944918632507324
    9. ' +' → logprob: -9.569918632507324
    10. '))
' → logprob: -9.694918632507324

Token 33: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0732484981417656
    2. '2' → logprob: -4.073248386383057
    3. ' ' → logprob: -4.073248386383057
    4. '4' → logprob: -4.323248386383057
    5. '))' → logprob: -4.823248386383057
    6. '6' → logprob: -5.073248386383057
    7. 'l' → logprob: -5.823248386383057
    8. ',' → logprob: -6.448248386383057
    9. '*' → logprob: -6.948248386383057
    10. ' l' → logprob: -7.698248386383057

Token 34: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.038451094180345535
    2. '4' → logprob: -4.288451194763184
    3. '2' → logprob: -4.413451194763184
    4. '6' → logprob: -4.663451194763184
    5. '5' → logprob: -7.413451194763184
    6. '1' → logprob: -7.788451194763184
    7. '9' → logprob: -7.913451194763184
    8. 'l' → logprob: -8.288451194763184
    9. 'M' → logprob: -8.788451194763184
    10. ' ' → logprob: -8.788451194763184

Token 35: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05431857705116272
    2. '),' → logprob: -3.05431866645813
    3. ')' → logprob: -5.929318428039551
    4. '+' → logprob: -6.179318428039551
    5. ' ))' → logprob: -8.05431842803955
    6. ',' → logprob: -8.55431842803955
    7. ' +' → logprob: -8.67931842803955
    8. ')))' → logprob: -9.55431842803955
    9. ')),' → logprob: -9.67931842803955
    10. ' ),' → logprob: -10.42931842803955

Token 36: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.673421323299408
    2. ' float' → logprob: -1.4234213829040527
    3. 'int' → logprob: -2.4234213829040527
    4. 'dtype' → logprob: -2.4234213829040527
    5. ' dtype' → logprob: -3.2984213829040527
    6. ' int' → logprob: -3.6734213829040527
    7. ')' → logprob: -5.298421382904053
    8. 'bool' → logprob: -6.048421382904053
    9. ' bool' → logprob: -7.423421382904053
    10. ' ' → logprob: -8.048420906066895

Token 37: '64' (ID: 2220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043686782009899616
    2. '))' → logprob: -7.750436782836914
    3. '),' → logprob: -12.875436782836914
    4. ' )' → logprob: -13.250436782836914
    5. ')
' → logprob: -15.000436782836914
    6. '`)' → logprob: -15.000436782836914
    7. ')`' → logprob: -15.125436782836914
    8. ')))' → logprob: -15.125436782836914
    9. '')' → logprob: -15.875436782836914
    10. '()' → logprob: -16.250436782836914

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029793426394462585
    2. '))' → logprob: -3.5297935009002686
    3. '),' → logprob: -10.404793739318848
    4. ')))' → logprob: -12.779793739318848
    5. ' )' → logprob: -12.779793739318848
    6. ')
' → logprob: -13.279793739318848
    7. '`)' → logprob: -13.404793739318848
    8. ')`' → logprob: -14.404793739318848
    9. '')' → logprob: -15.029793739318848
    10. ',' → logprob: -15.154793739318848

Token 39: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2730485200881958
    2. ')' → logprob: -1.7730485200881958
    3. '[' → logprob: -3.1480484008789062
    4. ' for' → logprob: -4.148048400878906
    5. 'd' → logprob: -5.773048400878906
    6. '[
' → logprob: -6.398048400878906
    7. '
' → logprob: -6.898048400878906
    8. '#' → logprob: -7.148048400878906
    9. ' ' → logprob: -7.523048400878906
    10. ']' → logprob: -7.523048400878906

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009800361469388008
    2. '.' → logprob: -5.009800434112549
    3. ')' → logprob: -6.634800434112549
    4. '<|end|>' → logprob: -7.134800434112549
    5. '[]' → logprob: -8.50979995727539
    6. 'd' → logprob: -8.88479995727539
    7. '[d' → logprob: -9.25979995727539
    8. '[
' → logprob: -9.38479995727539
    9. '[:]' → logprob: -9.63479995727539
    10. ']' → logprob: -10.00979995727539

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08034249395132065
    2. ',' → logprob: -2.9553425312042236
    3. ' ' → logprob: -3.9553425312042236
    4. '[' → logprob: -5.7053422927856445
    5. ' ,' → logprob: -6.4553422927856445
    6. '1' → logprob: -7.4553422927856445
    7. '-' → logprob: -9.330342292785645
    8. ']' → logprob: -9.955342292785645
    9. ' [' → logprob: -10.205342292785645
    10. ',l' → logprob: -10.392842292785645

Token 42: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021311216056346893
    2. '][' → logprob: -4.021311283111572
    3. ']' → logprob: -6.021311283111572
    4. ' ,' → logprob: -7.896311283111572
    5. '[' → logprob: -8.396310806274414
    6. ' ' → logprob: -10.396310806274414
    7. '])' → logprob: -10.646310806274414
    8. ',[' → logprob: -10.896310806274414
    9. ' ][' → logprob: -11.271310806274414
    10. '0' → logprob: -11.521310806274414

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01320717390626669
    2. ':' → logprob: -4.763206958770752
    3. '-' → logprob: -6.888206958770752
    4. ' ' → logprob: -6.888206958770752
    5. ' :' → logprob: -7.138206958770752
    6. 'n' → logprob: -7.513206958770752
    7. ':]' → logprob: -8.76320743560791
    8. 'M' → logprob: -8.88820743560791
    9. 'l' → logprob: -8.88820743560791
    10. '1' → logprob: -8.88820743560791

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005021105520427227
    2. ' ]' → logprob: -6.005021095275879
    3. ']=' → logprob: -6.130021095275879
    4. ',' → logprob: -9.130021095275879
    5. ')' → logprob: -9.505021095275879
    6. ']+=' → logprob: -9.755021095275879
    7. '=' → logprob: -10.755021095275879
    8. ')]' → logprob: -10.880021095275879
    9. '])' → logprob: -11.130021095275879
    10. '+' → logprob: -11.255021095275879

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0341205969452858
    2. ' =' → logprob: -3.409120559692383
    3. ' ' → logprob: -8.659120559692383
    4. '+' → logprob: -9.409120559692383
    5. '0' → logprob: -9.784120559692383
    6. '+=' → logprob: -9.909120559692383
    7. ' +=' → logprob: -10.159120559692383
    8. '<|end|>' → logprob: -10.284120559692383
    9. ')' → logprob: -11.909120559692383
    10. ',' → logprob: -12.284120559692383

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018703327514231205
    2. '0' → logprob: -6.376870155334473
    3. ' ' → logprob: -9.751870155334473
    4. '-' → logprob: -10.126870155334473
    5. '100' → logprob: -10.751870155334473
    6. 'int' → logprob: -11.626870155334473
    7. '10' → logprob: -11.751870155334473
    8. 'd' → logprob: -11.751870155334473
    9. '2' → logprob: -12.251870155334473
    10. '3' → logprob: -12.939370155334473

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023097654338926077
    2. '0' → logprob: -6.252309799194336
    3. '-' → logprob: -8.627309799194336
    4. ' ' → logprob: -10.127309799194336
    5. 'd' → logprob: -10.377309799194336
    6. '100' → logprob: -10.377309799194336
    7. 'int' → logprob: -10.877309799194336
    8. '10' → logprob: -11.002309799194336
    9. '2' → logprob: -11.127309799194336
    10. 'M' → logprob: -12.064809799194336

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7643786072731018
    2. '+' → logprob: -1.764378547668457
    3. ' ' → logprob: -2.889378547668457
    4. '.' → logprob: -3.014378547668457
    5. '#' → logprob: -3.139378547668457
    6. '<|end|>' → logprob: -3.264378547668457
    7. 'd' → logprob: -3.389378547668457
    8. 'for' → logprob: -3.889378547668457
    9. '[' → logprob: -4.014378547668457
    10. ' 
' → logprob: -4.139378547668457

Token 49: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34774044156074524
    2. ' for' → logprob: -1.9727404117584229
    3. 'd' → logprob: -3.472740411758423
    4. '.' → logprob: -3.597740411758423
    5. '+' → logprob: -3.847740411758423
    6. '\n' → logprob: -4.097740650177002
    7. ' ' → logprob: -5.222740650177002
    8. '' → logprob: -5.222740650177002
    9. ',' → logprob: -5.347740650177002
    10. '[' → logprob: -5.472740650177002

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1626773327589035
    2. ' ' → logprob: -1.91267728805542
    3. 'i' → logprob: -6.16267728805542
    4. '_' → logprob: -8.912677764892578
    5. ' _' → logprob: -9.037677764892578
    6. '  ' → logprob: -10.787677764892578
    7. ' d' → logprob: -11.287677764892578
    8. ' j' → logprob: -11.662677764892578
    9. ' ' → logprob: -12.037677764892578
    10. ' range' → logprob: -12.162677764892578

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05916302278637886
    2. 'in' → logprob: -3.4341630935668945
    3. ' ' → logprob: -3.6841630935668945
    4. '  ' → logprob: -10.684163093566895
    5. ' i' → logprob: -11.059163093566895
    6. '+' → logprob: -11.809163093566895
    7. ',' → logprob: -12.309163093566895
    8. '	in' → logprob: -12.559163093566895
    9. 'range' → logprob: -12.809163093566895
    10. ' ,' → logprob: -13.184163093566895

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38697806000709534
    2. 'range' → logprob: -1.136978030204773
    3. ' ' → logprob: -9.636978149414062
    4. ' in' → logprob: -10.886978149414062
    5. ' xrange' → logprob: -11.761978149414062
    6. '	range' → logprob: -12.386978149414062
    7. 'in' → logprob: -13.261978149414062
    8. '  ' → logprob: -13.386978149414062
    9. ')' → logprob: -13.386978149414062
    10. '(range' → logprob: -13.511978149414062

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018218660727143288
    2. '(n' → logprob: -4.018218517303467
    3. ' (' → logprob: -10.143218994140625
    4. '(l' → logprob: -10.518218994140625
    5. '(i' → logprob: -14.018218994140625
    6. '(
' → logprob: -14.768218994140625
    7. '1' → logprob: -14.893218994140625
    8. '(s' → logprob: -15.518218994140625
    9. ' ' → logprob: -15.768218994140625
    10. '(len' → logprob: -15.768218994140625

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10416951775550842
    2. 'n' → logprob: -2.4791696071624756
    3. 'l' → logprob: -4.8541693687438965
    4. '0' → logprob: -5.4791693687438965
    5. ' n' → logprob: -6.7291693687438965
    6. ' ' → logprob: -6.8541693687438965
    7. '3' → logprob: -8.479169845581055
    8. ')' → logprob: -8.604169845581055
    9. '2' → logprob: -8.729169845581055
    10. 'd' → logprob: -9.104169845581055

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05376235395669937
    2. ' ,' → logprob: -3.053762435913086
    3. ',n' → logprob: -5.303762435913086
    4. ',l' → logprob: -8.803762435913086
    5. 'n' → logprob: -11.053762435913086
    6. '(n' → logprob: -11.928762435913086
    7. ' n' → logprob: -12.553762435913086
    8. ')' → logprob: -12.803762435913086
    9. ' )' → logprob: -13.303762435913086
    10. 'l' → logprob: -13.428762435913086

Token 56: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.13774754106998444
    2. ' l' → logprob: -2.1377475261688232
    3. 'n' → logprob: -4.887747764587402
    4. ' n' → logprob: -5.762747764587402
    5. 'M' → logprob: -11.387747764587402
    6. ' ' → logprob: -11.387747764587402
    7. '3' → logprob: -11.512747764587402
    8. ' M' → logprob: -11.512747764587402
    9. '	l' → logprob: -11.887747764587402
    10. '1' → logprob: -12.012747764587402

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010089923162013292
    2. '):
' → logprob: -7.001008987426758
    3. ':' → logprob: -9.501008987426758
    4. '+' → logprob: -11.501008987426758
    5. ' ):' → logprob: -12.001008987426758
    6. ')' → logprob: -12.626008987426758
    7. ',' → logprob: -13.751008987426758
    8. '):
' → logprob: -14.126008987426758
    9. '}:' → logprob: -15.126008987426758
    10. ']:' → logprob: -15.751008987426758

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19899560511112213
    2. ' d' → logprob: -3.198995590209961
    3. '<|end|>' → logprob: -3.198995590209961
    4. ' for' → logprob: -3.323995590209961
    5. '    ' → logprob: -3.573995590209961
    6. 'd' → logprob: -3.948995590209961
    7. '   ' → logprob: -5.073995590209961
    8. '	for' → logprob: -6.198995590209961
    9. '	d' → logprob: -6.698995590209961
    10. '	' → logprob: -6.698995590209961

Token 59: ' j' (ID: 441)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15242899954319
    2. 'for' → logprob: -2.7774291038513184
    3. ' d' → logprob: -2.9024291038513184
    4. 'd' → logprob: -3.9024291038513184
    5. ' ' → logprob: -6.402429103851318
    6. '   ' → logprob: -7.277429103851318
    7. '	for' → logprob: -7.777429103851318
    8. ' if' → logprob: -8.15242862701416
    9. ' j' → logprob: -8.65242862701416
    10. ' dp' → logprob: -8.65242862701416

Token 60: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37756866216659546
    2. '=' → logprob: -1.3775687217712402
    3. ' in' → logprob: -3.3775687217712402
    4. 'n' → logprob: -4.62756872177124
    5. 'nt' → logprob: -5.12756872177124
    6. 'in' → logprob: -5.87756872177124
    7. 'for' → logprob: -6.00256872177124
    8. ' for' → logprob: -6.37756872177124
    9. 'range' → logprob: -6.75256872177124
    10. ' ' → logprob: -7.00256872177124

Token 61: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.051330193877220154
    2. ' k' → logprob: -3.301330089569092
    3. '_' → logprob: -5.801330089569092
    4. ' =' → logprob: -6.301330089569092
    5. '=' → logprob: -6.426330089569092
    6. '0' → logprob: -6.551330089569092
    7. 'd' → logprob: -7.176330089569092
    8. 'for' → logprob: -7.426330089569092
    9. '_=' → logprob: -7.676330089569092
    10. 'i' → logprob: -7.926330089569092

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16549339890480042
    2. '=' → logprob: -1.915493369102478
    3. ',' → logprob: -5.290493488311768
    4. '   ' → logprob: -9.41549301147461
    5. ' ' → logprob: -10.04049301147461
    6. '    ' → logprob: -10.16549301147461
    7. ' ,' → logprob: -11.41549301147461
    8. '  ' → logprob: -12.04049301147461
    9. '```' → logprob: -12.29049301147461
    10. '=int' → logprob: -12.60299301147461

Token 63: ' i' (ID: 575)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0741129145026207
    2. 'map' → logprob: -3.449112892150879
    3. '0' → logprob: -4.324112892150879
    4. ' ' → logprob: -4.449112892150879
    5. ' i' → logprob: -5.574112892150879
    6. ' div' → logprob: -6.074112892150879
    7. ' d' → logprob: -6.199112892150879
    8. 'div' → logprob: -6.324112892150879
    9. ' input' → logprob: -6.449112892150879
    10. ' j' → logprob: -7.074112892150879

Token 64: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7636120915412903
    2. ',' → logprob: -1.3886120319366455
    3. ' -' → logprob: -1.8886120319366455
    4. ' *' → logprob: -2.8886120319366455
    5. '*' → logprob: -3.8886120319366455
    6. ' ' → logprob: -4.013612270355225
    7. ' //' → logprob: -4.513612270355225
    8. '//' → logprob: -4.638612270355225
    9. ' ,' → logprob: -5.388612270355225
    10. '%' → logprob: -5.888612270355225

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013691288768313825
    2. ' ' → logprob: -9.250137329101562
    3. '2' → logprob: -10.375137329101562
    4. '3' → logprob: -12.375137329101562
    5. '-' → logprob: -13.687637329101562
    6. '   ' → logprob: -13.687637329101562
    7. 'l' → logprob: -14.750137329101562
    8. 'j' → logprob: -14.875137329101562
    9. '```' → logprob: -14.875137329101562
    10. 'k' → logprob: -15.312637329101562

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015085970517247915
    2. '2' → logprob: -9.750150680541992
    3. ' ' → logprob: -9.875150680541992
    4. '3' → logprob: -10.375150680541992
    5. '   ' → logprob: -12.750150680541992
    6. '4' → logprob: -14.062650680541992
    7. 'l' → logprob: -14.062650680541992
    8. 'k' → logprob: -14.187650680541992
    9. 'j' → logprob: -14.375150680541992
    10. '(' → logprob: -14.500150680541992

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6163531541824341
    2. ']' → logprob: -1.616353154182434
    3. '+' → logprob: -2.6163530349731445
    4. '[' → logprob: -3.1163530349731445
    5. '   ' → logprob: -3.2413530349731445
    6. '][' → logprob: -3.9913530349731445
    7. ')' → logprob: -4.1163530349731445
    8. ' ' → logprob: -4.2413530349731445
    9. ' +' → logprob: -4.4913530349731445
    10. 'd' → logprob: -4.8663530349731445

Token 68: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.616686999797821
    2. 'i' → logprob: -1.3666870594024658
    3. ' i' → logprob: -2.616687059402466
    4. ' ' → logprob: -2.866687059402466
    5. 'j' → logprob: -3.366687059402466
    6. ' j' → logprob: -4.866686820983887
    7. 'k' → logprob: -5.366686820983887
    8. 'M' → logprob: -5.616686820983887
    9. '   ' → logprob: -5.741686820983887
    10. ' M' → logprob: -5.866686820983887

Token 69: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025283413007855415
    2. '2' → logprob: -4.025283336639404
    3. '3' → logprob: -5.650283336639404
    4. ' ' → logprob: -5.650283336639404
    5. '0' → logprob: -10.400283813476562
    6. 'j' → logprob: -11.525283813476562
    7. '4' → logprob: -11.775283813476562
    8. 'k' → logprob: -11.775283813476562
    9. '   ' → logprob: -12.775283813476562
    10. '    ' → logprob: -12.900283813476562

Token 71: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027953920885920525
    2. '3' → logprob: -4.0279541015625
    3. '2' → logprob: -4.6529541015625
    4. ' ' → logprob: -9.6529541015625
    5. '4' → logprob: -9.7779541015625
    6. '0' → logprob: -9.9029541015625
    7. '5' → logprob: -10.9029541015625
    8. '6' → logprob: -11.6529541015625
    9. 'k' → logprob: -11.9029541015625
    10. '   ' → logprob: -12.9029541015625

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.214282751083374
    2. '   ' → logprob: -1.589282751083374
    3. ' 
' → logprob: -2.214282751083374
    4. '<|end|>' → logprob: -2.589282751083374
    5. '```' → logprob: -2.839282751083374
    6. '    ' → logprob: -3.214282751083374
    7. ' if' → logprob: -3.339282751083374
    8. ')' → logprob: -3.339282751083374
    9. ':' → logprob: -4.089282989501953
    10. '    
' → logprob: -4.089282989501953

Token 74: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.611956775188446
    2. '   ' → logprob: -1.7369568347930908
    3. '+' → logprob: -1.8619568347930908
    4. ' if' → logprob: -3.611956834793091
    5. '    ' → logprob: -3.861956834793091
    6. ']' → logprob: -4.111956596374512
    7. ' 
' → logprob: -4.736956596374512
    8. ',' → logprob: -4.861956596374512
    9. 'if' → logprob: -5.486956596374512
    10. '[' → logprob: -5.611956596374512

Token 75: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18553707003593445
    2. '[j' → logprob: -2.060537099838257
    3. '[i' → logprob: -3.185537099838257
    4. '[:,' → logprob: -9.060537338256836
    5. ' [' → logprob: -9.935537338256836
    6. '[d' → logprob: -10.560537338256836
    7. '[n' → logprob: -10.685537338256836
    8. '[I' → logprob: -10.810537338256836
    9. '[...]' → logprob: -10.810537338256836
    10. '[:]' → logprob: -10.935537338256836

Token 76: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3159956634044647
    2. ']' → logprob: -1.440995693206787
    3. '-' → logprob: -3.940995693206787
    4. '][:' → logprob: -4.690995693206787
    5. '][]' → logprob: -6.690995693206787
    6. ']=' → logprob: -6.815995693206787
    7. ']+=' → logprob: -6.815995693206787
    8. '[' → logprob: -7.565995693206787
    9. '][-' → logprob: -7.940995693206787
    10. ' ][' → logprob: -7.940995693206787

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9312809109687805
    2. '[' → logprob: -1.6812808513641357
    3. '+=' → logprob: -1.9312808513641357
    4. '[:]' → logprob: -1.9312808513641357
    5. '|' → logprob: -2.6812808513641357
    6. '^' → logprob: -3.6812808513641357
    7. ' =' → logprob: -4.556281089782715
    8. ' +=' → logprob: -4.806281089782715
    9. ' ^=' → logprob: -5.681281089782715
    10. ' |=' → logprob: -6.181281089782715

Token 78: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3498086929321289
    2. 'd' → logprob: -1.224808692932129
    3. ' (' → logprob: -7.474808692932129
    4. '(d' → logprob: -8.224808692932129
    5. '(' → logprob: -8.349808692932129
    6. ' ' → logprob: -8.974808692932129
    7. '   ' → logprob: -11.287308692932129
    8. '2' → logprob: -11.537308692932129
    9. ' zeros' → logprob: -11.599808692932129
    10. ' add' → logprob: -11.724808692932129

Token 79: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5248110294342041
    2. ' d' → logprob: -0.8998110294342041
    3. ' ' → logprob: -7.899810791015625
    4. '2' → logprob: -8.524810791015625
    5. ')' → logprob: -8.899810791015625
    6. '(d' → logprob: -8.899810791015625
    7. '4' → logprob: -9.024810791015625
    8. ' (' → logprob: -9.024810791015625
    9. '+d' → logprob: -9.024810791015625
    10. '3' → logprob: -9.274810791015625

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3144814074039459
    2. '[j' → logprob: -1.3144813776016235
    3. '[' → logprob: -6.814481258392334
    4. ')[' → logprob: -10.189481735229492
    5. '-' → logprob: -11.189481735229492
    6. ')' → logprob: -11.189481735229492
    7. ' [' → logprob: -11.189481735229492
    8. '[-' → logprob: -12.064481735229492
    9. '[k' → logprob: -12.314481735229492
    10. 'i' → logprob: -12.439481735229492

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18443423509597778
    2. ']' → logprob: -1.934434175491333
    3. ' -' → logprob: -4.434434413909912
    4. ']+' → logprob: -4.684434413909912
    5. '[j' → logprob: -6.684434413909912
    6. ']*' → logprob: -7.809434413909912
    7. ']-' → logprob: -8.184433937072754
    8. ' ]' → logprob: -8.559433937072754
    9. '[' → logprob: -8.934433937072754
    10. '][' → logprob: -9.059433937072754

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031312520150095224
    2. ' ' → logprob: -6.12813138961792
    3. '2' → logprob: -7.62813138961792
    4. ']' → logprob: -8.878130912780762
    5. '-' → logprob: -9.628130912780762
    6. '3' → logprob: -9.815630912780762
    7. '   ' → logprob: -9.878130912780762
    8. '```' → logprob: -10.190630912780762
    9. ')' → logprob: -10.878130912780762
    10. '])' → logprob: -10.940630912780762

Token 83: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004428694024682045
    2. '2' → logprob: -5.504428863525391
    3. '3' → logprob: -8.37942886352539
    4. ' ' → logprob: -9.37942886352539
    5. '4' → logprob: -11.37942886352539
    6. '5' → logprob: -11.62942886352539
    7. 'j' → logprob: -12.50442886352539
    8. '0' → logprob: -13.50442886352539
    9. '-' → logprob: -13.69192886352539
    10. '```' → logprob: -13.75442886352539

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03801072761416435
    2. ']+' → logprob: -3.663010835647583
    3. '+' → logprob: -5.413010597229004
    4. ' ]' → logprob: -6.038010597229004
    5. ']*' → logprob: -6.663010597229004
    6. ' +' → logprob: -6.788010597229004
    7. '])' → logprob: -7.163010597229004
    8. ')' → logprob: -7.788010597229004
    9. '-' → logprob: -8.538010597229004
    10. '*' → logprob: -8.663010597229004

Token 85: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5777544975280762
    2. ' +' → logprob: -0.8277544975280762
    3. ' *' → logprob: -7.577754497528076
    4. '*' → logprob: -7.577754497528076
    5. ')' → logprob: -8.327754974365234
    6. '-' → logprob: -9.452754974365234
    7. ' +
' → logprob: -9.452754974365234
    8. ' -' → logprob: -9.452754974365234
    9. '+d' → logprob: -9.827754974365234
    10. ' ' → logprob: -10.077754974365234

Token 86: ' k' (ID: 372)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8917958736419678
    2. '2' → logprob: -1.1417958736419678
    3. 'M' → logprob: -2.0167958736419678
    4. ' ' → logprob: -3.0167958736419678
    5. '4' → logprob: -4.016796112060547
    6. ' M' → logprob: -4.266796112060547
    7. '6' → logprob: -4.641796112060547
    8. 'j' → logprob: -4.766796112060547
    9. '5' → logprob: -5.141796112060547
    10. 'k' → logprob: -5.391796112060547

Token 87: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4816935658454895
    2. ' +' → logprob: -0.9816935658454895
    3. ')' → logprob: -5.856693744659424
    4. ' -' → logprob: -6.231693744659424
    5. '+d' → logprob: -7.106693744659424
    6. '-' → logprob: -7.356693744659424
    7. '+j' → logprob: -8.231693267822266
    8. ' +
' → logprob: -8.356693267822266
    9. '+k' → logprob: -8.606693267822266
    10. '+
' → logprob: -8.981693267822266

Token 88: ' j' (ID: 441)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.4035629034042358
    2. 'k' → logprob: -2.1535630226135254
    3. ' +' → logprob: -2.1535630226135254
    4. '+' → logprob: -2.2785630226135254
    5. ' M' → logprob: -2.5285630226135254
    6. 'd' → logprob: -3.0285630226135254
    7. ' (' → logprob: -3.1535630226135254
    8. '(M' → logprob: -3.5285630226135254
    9. '(' → logprob: -3.6535630226135254
    10. ' k' → logprob: -3.7785630226135254

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5537400245666504
    2. ' +' → logprob: -1.3037400245666504
    3. ' -' → logprob: -2.3037400245666504
    4. '-' → logprob: -3.4287400245666504
    5. ')' → logprob: -4.05374002456665
    6. '+d' → logprob: -6.67874002456665
    7. '+k' → logprob: -7.30374002456665
    8. '+j' → logprob: -8.178739547729492
    9. ' +
' → logprob: -8.553739547729492
    10. '+
' → logprob: -8.678739547729492

Token 90: ' roll' (ID: 8465)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1156310960650444
    2. 'd' → logprob: -2.240631103515625
    3. ' M' → logprob: -6.865631103515625
    4. ' ' → logprob: -7.865631103515625
    5. 'M' → logprob: -7.990631103515625
    6. ' (' → logprob: -8.115631103515625
    7. '(' → logprob: -8.740631103515625
    8. '(d' → logprob: -8.865631103515625
    9. ' ' → logprob: -9.240631103515625
    10. '    ' → logprob: -10.240631103515625

Token 91: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0125452084466815
    2. '(' → logprob: -4.387545108795166
    3. '(
' → logprob: -11.262545585632324
    4. 'd' → logprob: -12.262545585632324
    5. ')' → logprob: -12.262545585632324
    6. ' (' → logprob: -12.387545585632324
    7. '(

' → logprob: -13.137545585632324
    8. 's' → logprob: -13.387545585632324
    9. '((' → logprob: -14.137545585632324
    10. '(s' → logprob: -14.137545585632324

Token 92: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004213786742184311
    2. '[' → logprob: -8.250421524047852
    3. ',i' → logprob: -9.250421524047852
    4. ',' → logprob: -10.375421524047852
    5. ')' → logprob: -12.125421524047852
    6. '[
' → logprob: -12.375421524047852
    7. '[(' → logprob: -12.750421524047852
    8. '[n' → logprob: -12.875421524047852
    9. '[I' → logprob: -12.875421524047852
    10. ',[' → logprob: -13.000421524047852

Token 93: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01834413781762123
    2. ',' → logprob: -4.893343925476074
    3. ']' → logprob: -4.893343925476074
    4. ' ],' → logprob: -7.018343925476074
    5. '],[' → logprob: -7.393343925476074
    6. ' ,' → logprob: -7.893343925476074
    7. '-' → logprob: -8.018343925476074
    8. ',-' → logprob: -8.143343925476074
    9. ' -' → logprob: -8.768343925476074
    10. ',j' → logprob: -8.893343925476074

Token 94: ' -' (ID: 533)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.572417140007019
    2. 'j' → logprob: -1.947417140007019
    3. ' ' → logprob: -2.0724172592163086
    4. '1' → logprob: -2.0724172592163086
    5. ' -' → logprob: -4.072417259216309
    6. ' i' → logprob: -5.197417259216309
    7. '-' → logprob: -5.447417259216309
    8. ' (' → logprob: -5.447417259216309
    9. '-j' → logprob: -6.197417259216309
    10. '(' → logprob: -6.447417259216309

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006841826252639294
    2. '2' → logprob: -5.756841659545898
    3. ' ' → logprob: -6.881841659545898
    4. 'j' → logprob: -7.006841659545898
    5. '3' → logprob: -7.506841659545898
    6. '5' → logprob: -8.006841659545898
    7. 'n' → logprob: -8.256841659545898
    8. 'k' → logprob: -8.506841659545898
    9. '4' → logprob: -9.506841659545898
    10. '(' → logprob: -10.131841659545898

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07994330674409866
    2. '))' → logprob: -2.9549434185028076
    3. ',' → logprob: -4.3299431800842285
    4. ')*' → logprob: -5.3299431800842285
    5. ' )' → logprob: -5.4549431800842285
    6. ' ,' → logprob: -7.3299431800842285
    7. '))*' → logprob: -7.9549431800842285
    8. ' ' → logprob: -8.079943656921387
    9. ' ))' → logprob: -8.204943656921387
    10. ')))' → logprob: -8.704943656921387

Token 97: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6630113124847412
    2. '*' → logprob: -1.1630113124847412
    3. ')' → logprob: -2.038011312484741
    4. ' )' → logprob: -4.41301155090332
    5. '*d' → logprob: -4.78801155090332
    6. ' -' → logprob: -5.28801155090332
    7. ' +' → logprob: -5.41301155090332
    8. '+' → logprob: -5.78801155090332
    9. ')*' → logprob: -6.41301155090332
    10. ' ' → logprob: -6.53801155090332

Token 98: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2209283113479614
    2. ' j' → logprob: -1.8459283113479614
    3. 'k' → logprob: -1.9709283113479614
    4. '(k' → logprob: -2.720928192138672
    5. 'i' → logprob: -2.845928192138672
    6. ' k' → logprob: -2.970928192138672
    7. 'M' → logprob: -3.095928192138672
    8. ' M' → logprob: -3.220928192138672
    9. '(j' → logprob: -3.220928192138672
    10. ' i' → logprob: -3.345928192138672

Token 99: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0307711362838745
    2. '-' → logprob: -1.2807711362838745
    3. '+' → logprob: -1.5307711362838745
    4. ' +' → logprob: -2.530771255493164
    5. ')' → logprob: -2.780771255493164
    6. '*' → logprob: -5.530771255493164
    7. ' )' → logprob: -6.655771255493164
    8. ' *' → logprob: -7.030771255493164
    9. ' ' → logprob: -8.405771255493164
    10. ')-' → logprob: -8.530771255493164

Token 100: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.6969042420387268
    2. ' roll' → logprob: -1.196904182434082
    3. ' d' → logprob: -2.196904182434082
    4. 'd' → logprob: -2.446904182434082
    5. ' ' → logprob: -7.321904182434082
    6. '(d' → logprob: -8.821904182434082
    7. 'k' → logprob: -9.009404182434082
    8. '(' → logprob: -9.071904182434082
    9. ' (' → logprob: -9.071904182434082
    10. '   ' → logprob: -9.071904182434082

Token 101: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.9040898880339228e-05
    2. '(' → logprob: -10.500028610229492
    3. 'd' → logprob: -14.125028610229492
    4. ' (' → logprob: -15.250028610229492
    5. '((' → logprob: -15.875028610229492
    6. '(
' → logprob: -16.375028610229492
    7. '(l' → logprob: -16.500028610229492
    8. '```' → logprob: -17.375028610229492
    9. ')' → logprob: -17.750028610229492
    10. '(D' → logprob: -17.750028610229492

Token 102: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.014709988608956337
    2. '[k' → logprob: -4.264709949493408
    3. '[i' → logprob: -7.639709949493408
    4. '[' → logprob: -10.014710426330566
    5. 'j' → logprob: -11.889710426330566
    6. '```' → logprob: -13.139710426330566
    7. '   ' → logprob: -13.389710426330566
    8. '[
' → logprob: -13.639710426330566
    9. '[n' → logprob: -13.889710426330566
    10. '

' → logprob: -13.889710426330566

Token 103: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00741862878203392
    2. ' ,' → logprob: -5.757418632507324
    3. '-' → logprob: -6.007418632507324
    4. ',-' → logprob: -7.007418632507324
    5. ',k' → logprob: -8.257418632507324
    6. ',j' → logprob: -8.882418632507324
    7. ' -' → logprob: -9.382418632507324
    8. '+' → logprob: -9.507418632507324
    9. '),' → logprob: -9.632418632507324
    10. '],' → logprob: -9.882418632507324

Token 104: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06055516377091408
    2. '1' → logprob: -3.4355552196502686
    3. ' -' → logprob: -3.9355552196502686
    4. ' ' → logprob: -5.3105549812316895
    5. '-k' → logprob: -7.0605549812316895
    6. 'k' → logprob: -8.185555458068848
    7. '0' → logprob: -8.435555458068848
    8. '2' → logprob: -8.435555458068848
    9. ' k' → logprob: -8.685555458068848
    10. '(' → logprob: -10.185555458068848

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29556170105934143
    2. '-' → logprob: -1.420561671257019
    3. '2' → logprob: -4.920561790466309
    4. ' ' → logprob: -5.170561790466309
    5. ' -' → logprob: -7.545561790466309
    6. '0' → logprob: -7.795561790466309
    7. '3' → logprob: -9.045561790466309
    8. '+' → logprob: -9.670561790466309
    9. ')' → logprob: -10.045561790466309
    10. 'k' → logprob: -10.170561790466309

Token 106: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009211484342813492
    2. '))' → logprob: -4.884211540222168
    3. ')*' → logprob: -7.009211540222168
    4. '-' → logprob: -8.384211540222168
    5. ' )' → logprob: -8.634211540222168
    6. '   ' → logprob: -10.134211540222168
    7. ' ' → logprob: -10.634211540222168
    8. '*' → logprob: -10.634211540222168
    9. ' -' → logprob: -10.884211540222168
    10. '+' → logprob: -11.134211540222168

Token 107: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.553080677986145
    2. ' %' → logprob: -1.553080677986145
    3. '<|end|>' → logprob: -2.4280805587768555
    4. ')' → logprob: -3.0530805587768555
    5. ' ' → logprob: -3.6780805587768555
    6. ' *' → logprob: -4.6780805587768555
    7. '*' → logprob: -4.8030805587768555
    8. ' /' → logprob: -5.1780805587768555
    9. '[' → logprob: -5.3030805587768555
    10. ' //' → logprob: -5.6780805587768555

Token 108: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.000764479860663414
    2. ' M' → logprob: -7.2507643699646
    3. '100' → logprob: -10.375764846801758
    4. '998' → logprob: -12.125764846801758
    5. ' ' → logprob: -12.250764846801758
    6. 'm' → logprob: -12.500764846801758
    7. '10' → logprob: -13.625764846801758
    8. '   ' → logprob: -13.875764846801758
    9. '(M' → logprob: -14.250764846801758
    10. '123' → logprob: -14.375764846801758

Token 109: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7414700984954834
    2. '<|end|>' → logprob: -0.9914700984954834
    3. '
' → logprob: -1.9914700984954834
    4. ')' → logprob: -4.9914703369140625
    5. '```' → logprob: -5.6164703369140625
    6. ' ' → logprob: -7.1164703369140625
    7. '[' → logprob: -7.2414703369140625
    8. ' 
' → logprob: -7.7414703369140625
    9. '#' → logprob: -7.7414703369140625
    10. '*' → logprob: -7.9914703369140625

Token 110: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7300730347633362
    2. '<|end|>' → logprob: -0.8550730347633362
    3. '
' → logprob: -2.6050729751586914
    4. ')' → logprob: -5.105072975158691
    5. '```' → logprob: -5.105072975158691
    6. ' ' → logprob: -6.355072975158691
    7. '[' → logprob: -6.980072975158691
    8. '#' → logprob: -7.355072975158691
    9. '+' → logprob: -7.605072975158691
    10. '\' → logprob: -7.605072975158691

Token 111: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6959707736968994
    2. '(d' → logprob: -0.6959707736968994
    3. '(*' → logprob: -6.19597053527832
    4. '(len' → logprob: -8.44597053527832
    5. '(sum' → logprob: -8.57097053527832
    6. '(
' → logprob: -9.07097053527832
    7. '()' → logprob: -9.57097053527832
    8. '(max' → logprob: -10.19597053527832
    9. '(np' → logprob: -10.32097053527832
    10. '('' → logprob: -10.69597053527832

Token 112: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0010660359403118491
    2. '(' → logprob: -6.876066207885742
    3. ')' → logprob: -10.751066207885742
    4. ' (' → logprob: -12.126066207885742
    5. 'd' → logprob: -13.001066207885742
    6. '()' → logprob: -13.126066207885742
    7. '((' → logprob: -14.626066207885742
    8. '(
' → logprob: -14.751066207885742
    9. '(`' → logprob: -15.751066207885742
    10. '(D' → logprob: -15.751066207885742

Token 113: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0009600582998245955
    2. '[l' → logprob: -8.375960350036621
    3. '[:,' → logprob: -8.375960350036621
    4. ')' → logprob: -8.500960350036621
    5. '[' → logprob: -9.375960350036621
    6. ' [-' → logprob: -9.750960350036621
    7. '[:' → logprob: -10.125960350036621
    8. '[n' → logprob: -10.250960350036621
    9. ',' → logprob: -11.000960350036621
    10. '[i' → logprob: -11.375960350036621

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9186317482963204e-05
    2. ' ' → logprob: -10.750049591064453
    3. '2' → logprob: -11.250049591064453
    4. '-' → logprob: -12.125049591064453
    5. '3' → logprob: -12.875049591064453
    6. '])' → logprob: -13.875049591064453
    7. '5' → logprob: -14.312549591064453
    8. '100' → logprob: -14.375049591064453
    9. '   ' → logprob: -14.437549591064453
    10. '[' → logprob: -14.500049591064453

Token 115: '][:' (ID: 63357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1736745536327362
    2. '])' → logprob: -1.9236745834350586
    3. ')%' → logprob: -5.048674583435059
    4. '))' → logprob: -5.798674583435059
    5. ']' → logprob: -6.548674583435059
    6. ']))' → logprob: -7.423674583435059
    7. '%)' → logprob: -8.048674583435059
    8. ']%' → logprob: -8.048674583435059
    9. '%' → logprob: -8.423674583435059
    10. '`)' → logprob: -8.548674583435059

Token 116: 'l' (ID: 75)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007979696616530418
    2. 'l' → logprob: -6.007979869842529
    3. '])' → logprob: -6.257979869842529
    4. '3' → logprob: -6.382979869842529
    5. ':n' → logprob: -7.757979869842529
    6. ':' → logprob: -8.007979393005371
    7. '5' → logprob: -8.507979393005371
    8. '-n' → logprob: -8.632979393005371
    9. '2' → logprob: -9.007979393005371
    10. ' n' → logprob: -9.007979393005371

Token 117: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03043469414114952
    2. '])' → logprob: -4.155434608459473
    3. ')%' → logprob: -4.530434608459473
    4. '))' → logprob: -5.905434608459473
    5. '%' → logprob: -8.780434608459473
    6. ']))' → logprob: -9.030434608459473
    7. ' )' → logprob: -9.030434608459473
    8. ')])' → logprob: -9.155434608459473
    9. '%)' → logprob: -9.405434608459473
    10. '})' → logprob: -9.905434608459473

Token 118: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.64839569455944e-05
    2. '%' → logprob: -10.250076293945312
    3. '))' → logprob: -11.500076293945312
    4. ')%' → logprob: -11.875076293945312
    5. ' )' → logprob: -12.125076293945312
    6. ')
' → logprob: -12.250076293945312
    7. ')`' → logprob: -12.250076293945312
    8. '%)' → logprob: -12.875076293945312
    9. '`)' → logprob: -13.125076293945312
    10. '+' → logprob: -13.375076293945312

Token 119: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0007099286303855479
    2. ' M' → logprob: -7.2507100105285645
    3. ' ' → logprob: -18.125709533691406
    4. '	M' → logprob: -20.250709533691406
    5. ')' → logprob: -20.500709533691406
    6. ' ' → logprob: -21.000709533691406
    7. '   ' → logprob: -21.125709533691406
    8. '(' → logprob: -21.125709533691406
    9. '(M' → logprob: -21.125709533691406
    10. '  ' → logprob: -21.250709533691406

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '))' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.625001907348633
    4. ' )' → logprob: -15.250001907348633
    5. ')`' → logprob: -15.250001907348633
    6. '`)' → logprob: -15.750001907348633
    7. '```' → logprob: -16.125001907348633
    8. '')' → logprob: -17.375001907348633
    9. '),' → logprob: -17.625001907348633
    10. '）' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 118
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 33.05%
Précision adaptée (1ère position): 33.05%
Précision (top 10): 77.97%
================================================================================
