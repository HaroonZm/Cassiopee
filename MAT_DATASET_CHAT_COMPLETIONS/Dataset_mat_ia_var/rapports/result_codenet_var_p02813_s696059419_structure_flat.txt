================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
N = int(input())
p = [int(x) for x in input().split()]
q = [int(x) for x in input().split()]
P = 0
Q = 0
i = 0
while i < N-1:
    cnt_p = 0
    cnt_q = 0
    j = i + 1
    while j < N:
        if p[i] > p[j]:
            cnt_p += 1
        if q[i] > q[j]:
            cnt_q += 1
        j += 1
    P += cnt_p * math.factorial(N-1-i)
    Q += cnt_q * math.factorial(N-1-i)
    i += 1
print(abs(P - Q))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004870378761552274
    2. '```' → logprob: -9.000487327575684
    3. '\n' → logprob: -9.250487327575684
    4. '<|end|>' → logprob: -9.625487327575684
    5. '\' → logprob: -9.875487327575684
    6. 'import' → logprob: -10.500487327575684
    7. '.pi' → logprob: -10.625487327575684
    8. '.e' → logprob: -11.000487327575684
    9. '<|end|>' → logprob: -11.750487327575684
    10. '.

' → logprob: -11.750487327575684

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.655153751373291
    2. '=' → logprob: -1.405153751373291
    3. ',' → logprob: -2.405153751373291
    4. '.' → logprob: -2.780153751373291
    5. ' =' → logprob: -3.780153751373291
    6. ')' → logprob: -4.030153751373291
    7. ' ' → logprob: -4.780153751373291
    8. 'umber' → logprob: -5.155153751373291
    9. 'u' → logprob: -5.405153751373291
    10. 'um' → logprob: -5.655153751373291

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08124569058418274
    2. ' int' → logprob: -3.2062456607818604
    3. '10' → logprob: -3.5812456607818604
    4. 'int' → logprob: -4.9562458992004395
    5. '5' → logprob: -7.0812458992004395
    6. '0' → logprob: -7.4562458992004395
    7. '100' → logprob: -7.7062458992004395
    8. '1' → logprob: -8.331245422363281
    9. ' math' → logprob: -8.581245422363281
    10. '20' → logprob: -9.081245422363281

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007713899831287563
    2. '('' → logprob: -7.625771522521973
    3. '()' → logprob: -8.750771522521973
    4. ''' → logprob: -10.500771522521973
    5. '```' → logprob: -10.625771522521973
    6. '(
' → logprob: -11.500771522521973
    7. ')' → logprob: -11.625771522521973
    8. ' (' → logprob: -11.750771522521973
    9. '(math' → logprob: -11.750771522521973
    10. '("("' → logprob: -11.750771522521973

Token 7: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2857722342014313
    2. '(' → logprob: -1.4107722043991089
    3. '()' → logprob: -6.410772323608398
    4. '())' → logprob: -6.410772323608398
    5. '))' → logprob: -7.785772323608398
    6. '(
' → logprob: -8.160772323608398
    7. '")' → logprob: -8.910772323608398
    8. '`)' → logprob: -8.910772323608398
    9. '')' → logprob: -9.410772323608398
    10. '('' → logprob: -9.410772323608398

Token 8: 'p' (ID: 79)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.0845375061035156
    2. 'for' → logprob: -1.4595375061035156
    3. 'result' → logprob: -1.5845375061035156
    4. 's' → logprob: -2.5845375061035156
    5. 'f' → logprob: -2.9595375061035156
    6. 'fact' → logprob: -3.5845375061035156
    7. ''' → logprob: -4.084537506103516
    8. 'x' → logprob: -4.459537506103516
    9. '_' → logprob: -5.334537506103516
    10. 'a' → logprob: -5.459537506103516

Token 9: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14959083497524261
    2. 'i' → logprob: -2.2745907306671143
    3. 'ow' → logprob: -5.024590969085693
    4. 'er' → logprob: -5.149590969085693
    5. ' =' → logprob: -5.149590969085693
    6. 'ro' → logprob: -5.524590969085693
    7. '=' → logprob: -6.274590969085693
    8. 'e' → logprob: -6.274590969085693
    9. 'rob' → logprob: -6.274590969085693
    10. 'ie' → logprob: -6.774590969085693

Token 10: ' [' (ID: 723)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4631696343421936
    2. 'math' → logprob: -1.9631695747375488
    3. ' ' → logprob: -2.213169574737549
    4. ' []' → logprob: -3.338169574737549
    5. ' [' → logprob: -3.713169574737549
    6. '0' → logprob: -4.088169574737549
    7. ' float' → logprob: -4.963169574737549
    8. '[]' → logprob: -5.213169574737549
    9. '[' → logprob: -5.213169574737549
    10. '1' → logprob: -5.463169574737549

Token 11: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2948106825351715
    2. 'int' → logprob: -2.1698107719421387
    3. 'math' → logprob: -2.4198107719421387
    4. '0' → logprob: -3.1698107719421387
    5. '1' → logprob: -5.419810771942139
    6. ']' → logprob: -5.919810771942139
    7. '(float' → logprob: -7.419810771942139
    8. ' float' → logprob: -7.669810771942139
    9. '(int' → logprob: -7.794810771942139
    10. 'i' → logprob: -8.04481029510498

Token 12: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2849442958831787
    2. '(' → logprob: -1.4099442958831787
    3. '(i' → logprob: -5.784944534301758
    4. '(input' → logprob: -7.784944534301758
    5. '()' → logprob: -9.784944534301758
    6. '(a' → logprob: -10.034944534301758
    7. ']' → logprob: -10.034944534301758
    8. '(p' → logprob: -10.409944534301758
    9. '(s' → logprob: -10.409944534301758
    10. '()]' → logprob: -10.659944534301758

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000593543634749949
    2. '())' → logprob: -7.750593662261963
    3. '()' → logprob: -10.250593185424805
    4. 'for' → logprob: -10.375593185424805
    5. '(' → logprob: -10.625593185424805
    6. '(input' → logprob: -10.875593185424805
    7. ' )' → logprob: -11.125593185424805
    8. ')]' → logprob: -11.375593185424805
    9. '(x' → logprob: -11.375593185424805
    10. 'input' → logprob: -12.500593185424805

Token 14: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3689086437225342
    2. ')' → logprob: -1.4939086437225342
    3. ' for' → logprob: -2.493908643722534
    4. '(' → logprob: -7.743908882141113
    5. '(x' → logprob: -8.118908882141113
    6. '(input' → logprob: -8.118908882141113
    7. ')]' → logprob: -8.868908882141113
    8. ']' → logprob: -9.368908882141113
    9. 'input' → logprob: -9.868908882141113
    10. 'in' → logprob: -10.368908882141113

Token 15: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.029972057789564133
    2. ' ' → logprob: -4.029972076416016
    3. ' x' → logprob: -5.404972076416016
    4. 'input' → logprob: -5.654972076416016
    5. ' range' → logprob: -5.654972076416016
    6. ' in' → logprob: -9.654972076416016
    7. ' ' → logprob: -10.154972076416016
    8. 'x' → logprob: -10.279972076416016
    9. 'range' → logprob: -10.529972076416016
    10. '  ' → logprob: -11.279972076416016

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326923981308937
    2. 'in' → logprob: -3.7732691764831543
    3. ' ' → logprob: -12.023269653320312
    4. 'import' → logprob: -12.023269653320312
    5. 'input' → logprob: -12.148269653320312
    6. '	in' → logprob: -14.023269653320312
    7. 'inx' → logprob: -14.148269653320312
    8. 'n' → logprob: -14.273269653320312
    9. 'inp' → logprob: -14.273269653320312
    10. ')' → logprob: -14.898269653320312

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07932209968566895
    2. ' input' → logprob: -2.579322099685669
    3. 'range' → logprob: -7.82932186126709
    4. ' range' → logprob: -10.32932186126709
    5. '(input' → logprob: -14.32932186126709
    6. 'math' → logprob: -15.32932186126709
    7. ' ' → logprob: -15.45432186126709
    8. 'raw' → logprob: -15.70432186126709
    9. '=input' → logprob: -15.95432186126709
    10. '<input' → logprob: -17.204322814941406

Token 18: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.7439932823181152
    2. '().' → logprob: -0.9939932823181152
    3. '()' → logprob: -1.9939932823181152
    4. '())' → logprob: -3.9939932823181152
    5. '()].' → logprob: -9.868993759155273
    6. '(' → logprob: -10.243993759155273
    7. ')]' → logprob: -11.368993759155273
    8. '()][' → logprob: -12.493993759155273
    9. '()`' → logprob: -13.368993759155273
    10. '(),' → logprob: -13.368993759155273

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00013285996101330966
    2. 'strip' → logprob: -9.00013256072998
    3. 'rstrip' → logprob: -11.62513256072998
    4. ' split' → logprob: -14.75013256072998
    5. 'spl' → logprob: -17.250133514404297
    6. '(split' → logprob: -17.625133514404297
    7. 's' → logprob: -19.125133514404297
    8. 'replace' → logprob: -19.875133514404297
    9. '.split' → logprob: -19.875133514404297
    10. ')' → logprob: -20.000133514404297

Token 20: '()]
' (ID: 67155)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7220791578292847
    2. '()]' → logprob: -0.7220791578292847
    3. '()' → logprob: -4.347079277038574
    4. '(' → logprob: -4.347079277038574
    5. ')]' → logprob: -6.222079277038574
    6. '('' → logprob: -7.597079277038574
    7. ']' → logprob: -9.972079277038574
    8. ')' → logprob: -10.472079277038574
    9. '("' → logprob: -11.347079277038574
    10. '')]' → logprob: -11.472079277038574

Token 21: 'q' (ID: 80)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2374206781387329
    2. 'c' → logprob: -2.8624205589294434
    3. 'm' → logprob: -2.9874205589294434
    4. 'd' → logprob: -3.3624205589294434
    5. 'p' → logprob: -4.362420558929443
    6. 'result' → logprob: -4.862420558929443
    7. 'dp' → logprob: -4.862420558929443
    8. 'a' → logprob: -5.237420558929443
    9. 'count' → logprob: -5.612420558929443
    10. 'max' → logprob: -5.737420558929443

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03012150712311268
    2. '=' → logprob: -3.6551215648651123
    3. '.' → logprob: -6.530121326446533
    4. 'u' → logprob: -6.905121326446533
    5. '[' → logprob: -7.655121326446533
    6. '_' → logprob: -7.780121326446533
    7. ' ' → logprob: -8.405121803283691
    8. '=[]' → logprob: -10.030121803283691
    9. ' =[' → logprob: -10.780121803283691
    10. '[:]' → logprob: -10.780121803283691

Token 23: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5132560729980469
    2. '[p' → logprob: -1.1382560729980469
    3. 'sorted' → logprob: -3.638256072998047
    4. '[len' → logprob: -4.138256072998047
    5. 'math' → logprob: -4.263256072998047
    6. ' [' → logprob: -4.888256072998047
    7. 'p' → logprob: -5.263256072998047
    8. '[int' → logprob: -5.888256072998047
    9. '[]' → logprob: -6.138256072998047
    10. '[min' → logprob: -6.263256072998047

Token 24: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0010501964716240764
    2. '(int' → logprob: -8.251049995422363
    3. '0' → logprob: -8.376049995422363
    4. ' int' → logprob: -8.376049995422363
    5. 'abs' → logprob: -9.001049995422363
    6. 'math' → logprob: -9.251049995422363
    7. '1' → logprob: -10.501049995422363
    8. 'float' → logprob: -10.751049995422363
    9. 'i' → logprob: -11.376049995422363
    10. 'pow' → logprob: -12.001049995422363

Token 25: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00020509003661572933
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -14.125205039978027
    4. '(y' → logprob: -14.250205039978027
    5. '(q' → logprob: -17.000205993652344
    6. '(s' → logprob: -17.750205993652344
    7. 'x' → logprob: -17.875205993652344
    8. '(i' → logprob: -18.000205993652344
    9. ']' → logprob: -18.250205993652344
    10. ')' → logprob: -18.625205993652344

Token 26: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.65568608045578
    2. ')' → logprob: -0.78068608045578
    3. 'for' → logprob: -4.155685901641846
    4. ' for' → logprob: -5.405685901641846
    5. '(' → logprob: -6.405685901641846
    6. '()' → logprob: -8.155686378479004
    7. ' in' → logprob: -8.655686378479004
    8. ' )' → logprob: -8.905686378479004
    9. ')]' → logprob: -9.405686378479004
    10. '(p' → logprob: -10.030686378479004

Token 27: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36389192938804626
    2. ' for' → logprob: -1.2388919591903687
    3. ')' → logprob: -4.238892078399658
    4. '(x' → logprob: -7.488892078399658
    5. ']' → logprob: -9.2388916015625
    6. '(' → logprob: -9.4888916015625
    7. ' ' → logprob: -10.4888916015625
    8. '()' → logprob: -10.7388916015625
    9. ' )' → logprob: -10.9888916015625
    10. '(input' → logprob: -10.9888916015625

Token 28: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.17866280674934387
    2. ' x' → logprob: -2.0536627769470215
    3. '(x' → logprob: -3.6786627769470215
    4. 'input' → logprob: -5.3036627769470215
    5. '(input' → logprob: -5.4286627769470215
    6. 'x' → logprob: -7.4286627769470215
    7. ' range' → logprob: -9.67866325378418
    8. '=input' → logprob: -10.67866325378418
    9. ' ' → logprob: -11.30366325378418
    10. '(' → logprob: -11.80366325378418

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02216240018606186
    2. 'in' → logprob: -3.897162437438965
    3. '(x' → logprob: -7.897162437438965
    4. '(' → logprob: -8.022162437438965
    5. '(input' → logprob: -8.022162437438965
    6. 'n' → logprob: -9.272162437438965
    7. ' ' → logprob: -9.397162437438965
    8. 'import' → logprob: -9.397162437438965
    9. 's' → logprob: -9.772162437438965
    10. '	in' → logprob: -9.897162437438965

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08902235329151154
    2. ' input' → logprob: -2.464022397994995
    3. 'p' → logprob: -9.714022636413574
    4. '(input' → logprob: -11.464022636413574
    5. ' p' → logprob: -11.714022636413574
    6. '[input' → logprob: -14.089022636413574
    7. 'range' → logprob: -14.714022636413574
    8. '=input' → logprob: -14.714022636413574
    9. ' ' → logprob: -14.964022636413574
    10. 'output' → logprob: -15.089022636413574

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0029712803661823273
    2. '()' → logprob: -5.877971172332764
    3. '(' → logprob: -9.127971649169922
    4. '()]' → logprob: -10.002971649169922
    5. '()].' → logprob: -11.627971649169922
    6. '())' → logprob: -13.752971649169922
    7. '.' → logprob: -14.627971649169922
    8. '().'' → logprob: -14.877971649169922
    9. ' ().' → logprob: -15.002971649169922
    10. '()>' → logprob: -15.752971649169922

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -15.000000953674316
    3. 'strip' → logprob: -16.0
    4. ')' → logprob: -17.125
    5. '(split' → logprob: -17.25
    6. 'rstrip' → logprob: -17.75
    7. 'spl' → logprob: -17.75
    8. '.split' → logprob: -18.625
    9. 'plit' → logprob: -19.5
    10. 'read' → logprob: -20.25

Token 33: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.07736426591873169
    2. ']' → logprob: -3.327364206314087
    3. ')]' → logprob: -3.327364206314087
    4. '()' → logprob: -6.077364444732666
    5. '())' → logprob: -8.952363967895508
    6. '(' → logprob: -9.452363967895508
    7. ')' → logprob: -9.452363967895508
    8. '`]' → logprob: -9.952363967895508
    9. ']()' → logprob: -11.452363967895508
    10. '']' → logprob: -11.702363967895508

Token 34: 'P' (ID: 47)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6595800518989563
    2. 'd' → logprob: -1.9095799922943115
    3. 's' → logprob: -2.4095799922943115
    4. 'result' → logprob: -3.0345799922943115
    5. '#' → logprob: -3.4095799922943115
    6. 'c' → logprob: -3.4095799922943115
    7. 'r' → logprob: -3.5345799922943115
    8. 'a' → logprob: -4.034580230712891
    9. 'm' → logprob: -4.534580230712891
    10. 'def' → logprob: -4.784580230712891

Token 35: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1615574061870575
    2. '.' → logprob: -2.03655743598938
    3. '[:]' → logprob: -4.786557197570801
    4. '_' → logprob: -6.036557197570801
    5. '[]' → logprob: -6.411557197570801
    6. '[i' → logprob: -6.911557197570801
    7. '(' → logprob: -7.036557197570801
    8. 'r' → logprob: -7.036557197570801
    9. '[p' → logprob: -7.661557197570801
    10. '\[' → logprob: -7.786557197570801

Token 36: ' ' (ID: 220)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3014344871044159
    2. '[' → logprob: -2.0514345169067383
    3. '[p' → logprob: -2.4264345169067383
    4. ' math' → logprob: -4.051434516906738
    5. '[len' → logprob: -5.176434516906738
    6. 'list' → logprob: -5.301434516906738
    7. '[list' → logprob: -5.426434516906738
    8. ' [' → logprob: -5.551434516906738
    9. 'p' → logprob: -5.551434516906738
    10. ' p' → logprob: -7.301434516906738

Token 37: '0' (ID: 15)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.017414165660738945
    2. 'list' → logprob: -4.517414093017578
    3. '[' → logprob: -5.392414093017578
    4. '[list' → logprob: -6.892414093017578
    5. '1' → logprob: -7.642414093017578
    6. '[p' → logprob: -8.892414093017578
    7. '(math' → logprob: -10.142414093017578
    8. '[len' → logprob: -11.017414093017578
    9. '0' → logprob: -11.142414093017578
    10. '[]' → logprob: -11.142414093017578

Token 38: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01411790307611227
    2. ' for' → logprob: -4.76411771774292
    3. '<|end|>' → logprob: -7.01411771774292
    4. ')' → logprob: -7.38911771774292
    5. '
' → logprob: -7.51411771774292
    6. '*' → logprob: -7.63911771774292
    7. '.' → logprob: -7.63911771774292
    8. '(' → logprob: -7.63911771774292
    9. 'f' → logprob: -7.76411771774292
    10. '+' → logprob: -8.264118194580078

Token 39: 'Q' (ID: 48)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008980892598628998
    2. 'f' → logprob: -5.508980751037598
    3. 'import' → logprob: -5.758980751037598
    4. 'from' → logprob: -8.008980751037598
    5. 'i' → logprob: -8.383980751037598
    6. 'factor' → logprob: -8.508980751037598
    7. 'math' → logprob: -8.758980751037598
    8. ' for' → logprob: -8.758980751037598
    9. ')' → logprob: -9.133980751037598
    10. '*' → logprob: -9.383980751037598

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3140622675418854
    2. ' =' → logprob: -1.314062237739563
    3. ' ' → logprob: -7.814062118530273
    4. ')' → logprob: -9.189062118530273
    5. '_' → logprob: -9.439062118530273
    6. '<|end|>' → logprob: -9.564062118530273
    7. ' +=' → logprob: -10.064062118530273
    8. '[' → logprob: -10.439062118530273
    9. '+' → logprob: -10.939062118530273
    10. '.' → logprob: -11.564062118530273

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020607052370905876
    2. ' ' → logprob: -3.8956069946289062
    3. '1' → logprob: -11.145606994628906
    4. 'math' → logprob: -11.145606994628906
    5. '[' → logprob: -12.020606994628906
    6. ' math' → logprob: -12.270606994628906
    7. 'sum' → logprob: -12.333106994628906
    8. 'len' → logprob: -13.145606994628906
    9. '100' → logprob: -13.333106994628906
    10. 'p' → logprob: -13.333106994628906

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022606621496379375
    2. ' ' → logprob: -8.500226020812988
    3. '1' → logprob: -11.875226020812988
    4. 'math' → logprob: -12.500226020812988
    5. 'int' → logprob: -13.375226020812988
    6. '100' → logprob: -13.375226020812988
    7. '[' → logprob: -13.750226020812988
    8. 'len' → logprob: -13.875226020812988
    9. 'N' → logprob: -13.875226020812988
    10. '-' → logprob: -14.125226020812988

Token 43: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10971419513225555
    2. '
' → logprob: -2.9847142696380615
    3. ' for' → logprob: -3.6097142696380615
    4. '<|end|>' → logprob: -3.8597142696380615
    5. '\n' → logprob: -6.109714031219482
    6. 'n' → logprob: -7.484714031219482
    7. ' ' → logprob: -7.609714031219482
    8. ')' → logprob: -7.859714031219482
    9. '+' → logprob: -7.984714031219482
    10. 'i' → logprob: -8.85971450805664

Token 44: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010664107277989388
    2. '+' → logprob: -5.760663986206055
    3. 'f' → logprob: -6.260663986206055
    4. 'i' → logprob: -6.510663986206055
    5. ' for' → logprob: -6.635663986206055
    6. ')' → logprob: -8.010663986206055
    7. 'import' → logprob: -8.010663986206055
    8. '*' → logprob: -8.385663986206055
    9. '(' → logprob: -8.510663986206055
    10. 'd' → logprob: -8.635663986206055

Token 45: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0939003229141235
    2. '=' → logprob: -1.4689003229141235
    3. 'n' → logprob: -1.7189003229141235
    4. ' ' → logprob: -1.8439003229141235
    5. ' =' → logprob: -2.718900203704834
    6. ' n' → logprob: -4.593900203704834
    7. ' +=' → logprob: -4.968900203704834
    8. '<|end|>' → logprob: -5.718900203704834
    9. ' +' → logprob: -5.843900203704834
    10. ' in' → logprob: -5.843900203704834

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04867059737443924
    2. ' ' → logprob: -3.048670530319214
    3. '1' → logprob: -9.423670768737793
    4. '2' → logprob: -13.798670768737793
    5. ' N' → logprob: -15.298670768737793
    6. 'N' → logprob: -15.361170768737793
    7. ' i' → logprob: -15.423670768737793
    8. '+' → logprob: -15.611170768737793
    9. 'i' → logprob: -16.361169815063477
    10. '3' → logprob: -16.798669815063477

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047082986566238105
    2. ' ' → logprob: -8.000471115112305
    3. '1' → logprob: -9.000471115112305
    4. '2' → logprob: -12.125471115112305
    5. 'N' → logprob: -12.250471115112305
    6. '-' → logprob: -15.000471115112305
    7. '+' → logprob: -15.500471115112305
    8. '  ' → logprob: -15.687971115112305
    9. 'i' → logprob: -15.937971115112305
    10. '3' → logprob: -16.187971115112305

Token 48: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14510586857795715
    2. ' while' → logprob: -3.3951058387756348
    3. '+' → logprob: -3.7701058387756348
    4. ':' → logprob: -3.8951058387756348
    5. 'for' → logprob: -4.270105838775635
    6. ' ' → logprob: -4.770105838775635
    7. ',' → logprob: -5.020105838775635
    8. 'n' → logprob: -5.395105838775635
    9. 'w' → logprob: -5.395105838775635
    10. '.' → logprob: -5.770105838775635

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020597247406840324
    2. 'i' → logprob: -3.895597219467163
    3. ' ' → logprob: -10.145597457885742
    4. ' N' → logprob: -11.895597457885742
    5. '	i' → logprob: -12.770597457885742
    6. ' ' → logprob: -13.145597457885742
    7. 'N' → logprob: -13.520597457885742
    8. '(i' → logprob: -14.145597457885742
    9. ' P' → logprob: -14.645597457885742
    10. ' p' → logprob: -14.770597457885742

Token 51: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11297032237052917
    2. '<' → logprob: -2.2379703521728516
    3. ' ' → logprob: -9.112970352172852
    4. ' <=' → logprob: -10.862970352172852
    5. '<len' → logprob: -11.237970352172852
    6. '<=' → logprob: -13.737970352172852
    7. '<N' → logprob: -13.862970352172852
    8. '<n' → logprob: -13.987970352172852
    9. '<size' → logprob: -14.237970352172852
    10. '<num' → logprob: -15.612970352172852

Token 52: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004303595516830683
    2. ' N' → logprob: -5.504303455352783
    3. 'len' → logprob: -8.754303932189941
    4. ' ' → logprob: -10.379303932189941
    5. 'n' → logprob: -10.879303932189941
    6. ' len' → logprob: -11.504303932189941
    7. '10' → logprob: -14.129303932189941
    8. '100' → logprob: -14.441803932189941
    9. '  ' → logprob: -14.504303932189941
    10. '   ' → logprob: -14.629303932189941

Token 53: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012347568990662694
    2. ' and' → logprob: -7.126234531402588
    3. ' :' → logprob: -8.251235008239746
    4. ':
' → logprob: -9.251235008239746
    5. 'and' → logprob: -9.751235008239746
    6. '   ' → logprob: -12.376235008239746
    7. '+' → logprob: -13.126235008239746
    8. ' ' → logprob: -13.501235008239746
    9. '+:' → logprob: -13.751235008239746
    10. ':**' → logprob: -13.876235008239746

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002142650482710451
    2. ' ' → logprob: -8.500214576721191
    3. '2' → logprob: -11.500214576721191
    4. '3' → logprob: -15.250214576721191
    5. '-' → logprob: -15.750214576721191
    6. '  ' → logprob: -16.812713623046875
    7. '4' → logprob: -17.125213623046875
    8. '```' → logprob: -17.500213623046875
    9. '   ' → logprob: -17.562713623046875
    10. '

' → logprob: -17.625213623046875

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002757448935881257
    2. ' :' → logprob: -6.002757549285889
    3. ':
' → logprob: -9.00275707244873
    4. ' and' → logprob: -9.00275707244873
    5. 'and' → logprob: -11.25275707244873
    6. '+' → logprob: -12.12775707244873
    7. ' :
' → logprob: -12.87775707244873
    8. ' ' → logprob: -13.00275707244873
    9. '+:' → logprob: -13.25275707244873
    10. ':**' → logprob: -13.25275707244873

Token 56: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5399290919303894
    2. '   ' → logprob: -1.7899291515350342
    3. ' P' → logprob: -2.664929151535034
    4. '<|end|>' → logprob: -3.164929151535034
    5. '+' → logprob: -3.789929151535034
    6. ':' → logprob: -3.789929151535034
    7. 'P' → logprob: -3.914929151535034
    8. ' if' → logprob: -4.039928913116455
    9. '    ' → logprob: -4.289928913116455
    10. ' i' → logprob: -4.789928913116455

Token 57: ' cnt' (ID: 27340)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.09039588272571564
    2. ' P' → logprob: -3.715395927429199
    3. ' ' → logprob: -3.965395927429199
    4. 'i' → logprob: -4.340395927429199
    5. ' math' → logprob: -4.715395927429199
    6. 'p' → logprob: -5.090395927429199
    7. 'math' → logprob: -5.715395927429199
    8. '   ' → logprob: -6.090395927429199
    9. 'if' → logprob: -6.090395927429199
    10. '+' → logprob: -6.090395927429199

Token 58: '_p' (ID: 1359)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7262595891952515
    2. ' =' → logprob: -0.8512595891952515
    3. '=' → logprob: -3.101259708404541
    4. '+=' → logprob: -3.351259708404541
    5. '+' → logprob: -5.476259708404541
    6. ' ' → logprob: -6.351259708404541
    7. '[' → logprob: -7.101259708404541
    8. ',' → logprob: -7.726259708404541
    9. ' +' → logprob: -7.726259708404541
    10. '1' → logprob: -8.101259231567383

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2163219153881073
    2. ' +=' → logprob: -2.2163219451904297
    3. '=' → logprob: -2.7163219451904297
    4. '+=' → logprob: -4.46632194519043
    5. '+' → logprob: -5.34132194519043
    6. ' ' → logprob: -6.96632194519043
    7. ',' → logprob: -7.21632194519043
    8. ' +' → logprob: -7.21632194519043
    9. '_' → logprob: -9.34132194519043
    10. '++' → logprob: -9.34132194519043

Token 60: ' ' (ID: 220)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7373913526535034
    2. 'p' → logprob: -1.2373913526535034
    3. '0' → logprob: -2.737391471862793
    4. ' abs' → logprob: -2.737391471862793
    5. ' ' → logprob: -3.237391471862793
    6. 'abs' → logprob: -3.362391471862793
    7. ' math' → logprob: -4.237391471862793
    8. '1' → logprob: -5.987391471862793
    9. ' (' → logprob: -6.362391471862793
    10. 'math' → logprob: -6.487391471862793

Token 61: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19635480642318726
    2. '0' → logprob: -2.571354866027832
    3. 'abs' → logprob: -2.696354866027832
    4. '1' → logprob: -3.946354866027832
    5. 'i' → logprob: -5.446354866027832
    6. 'math' → logprob: -5.446354866027832
    7. 'cnt' → logprob: -6.946354866027832
    8. 'max' → logprob: -6.946354866027832
    9. 'P' → logprob: -7.071354866027832
    10. 'min' → logprob: -7.321354866027832

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' cnt' (ID: 27340)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0761797428131104
    2. 'while' → logprob: -1.2011797428131104
    3. 'for' → logprob: -2.2011797428131104
    4. 'if' → logprob: -2.3261797428131104
    5. ' while' → logprob: -2.7011797428131104
    6. ' for' → logprob: -4.201179504394531
    7. '   ' → logprob: -4.326179504394531
    8. 'i' → logprob: -4.326179504394531
    9. 'p' → logprob: -4.326179504394531
    10. 'cnt' (adapté à ' cnt') → logprob: -4.326179504394531

Token 65: '_q' (ID: 19384)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04927562177181244
    2. '_p' → logprob: -3.0492756366729736
    3. '_q' → logprob: -7.9242753982543945
    4. ' ' → logprob: -9.549275398254395
    5. '<|end|>' → logprob: -9.549275398254395
    6. ' _' → logprob: -10.424275398254395
    7. 'p' → logprob: -10.674275398254395
    8. '+' → logprob: -10.924275398254395
    9. '_=' → logprob: -11.174275398254395
    10. ' =' → logprob: -11.299275398254395

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48741984367370605
    2. '=' → logprob: -0.987419843673706
    3. ' +=' → logprob: -4.487420082092285
    4. '+=' → logprob: -6.362420082092285
    5. ' ' → logprob: -8.737420082092285
    6. '+' → logprob: -9.737420082092285
    7. ' +' → logprob: -11.112420082092285
    8. ' ==' → logprob: -11.237420082092285
    9. '  ' → logprob: -12.112420082092285
    10. '   ' → logprob: -12.237420082092285

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47429966926574707
    2. '0' → logprob: -0.9742996692657471
    3. '1' → logprob: -8.849299430847168
    4. ' p' → logprob: -10.224299430847168
    5. 'p' → logprob: -11.099299430847168
    6. '  ' → logprob: -12.349299430847168
    7. 'cnt' → logprob: -12.474299430847168
    8. '   ' → logprob: -12.724299430847168
    9. ' math' → logprob: -13.286799430847168
    10. ' ' → logprob: -13.286799430847168

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020616286201402545
    2. ' ' → logprob: -8.625205993652344
    3. '1' → logprob: -10.625205993652344
    4. '-' → logprob: -13.875205993652344
    5. 'p' → logprob: -15.125205993652344
    6. ')' → logprob: -16.375205993652344
    7. '  ' → logprob: -16.500205993652344
    8. 'cnt' → logprob: -16.500205993652344
    9. '2' → logprob: -16.625205993652344
    10. '```' → logprob: -16.812705993652344

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18305371701717377
    2. '<|end|>' → logprob: -2.558053731918335
    3. ' 
' → logprob: -3.683053731918335
    4. '    
' → logprob: -3.683053731918335
    5. ' ' → logprob: -4.183053493499756
    6. '  
' → logprob: -5.058053493499756
    7. '
' → logprob: -5.433053493499756
    8. '   
' → logprob: -5.683053493499756
    9. '<|end|>' → logprob: -6.308053493499756
    10. '  ' → logprob: -6.433053493499756

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030867924913764
    2. ' ' → logprob: -4.655868053436279
    3. 'i' → logprob: -5.030868053436279
    4. ' if' → logprob: -5.405868053436279
    5. '    ' → logprob: -6.030868053436279
    6. 'if' → logprob: -6.030868053436279
    7. '<|end|>' → logprob: -6.030868053436279
    8. ' i' → logprob: -6.905868053436279
    9. '  ' → logprob: -7.905868053436279
    10. ' 
' → logprob: -8.155867576599121

Token 71: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2707157135009766
    2. ' if' → logprob: -1.3957157135009766
    3. 'if' → logprob: -1.5207157135009766
    4. ' ' → logprob: -1.8957157135009766
    5. '    ' → logprob: -2.8957157135009766
    6. '<|end|>' → logprob: -4.270715713500977
    7. 'i' → logprob: -4.645715713500977
    8. ' while' → logprob: -4.895715713500977
    9. ' 
' → logprob: -5.395715713500977
    10. 'while' → logprob: -6.145715713500977

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002570316195488
    2. '=' → logprob: -2.35025691986084
    3. ' ' → logprob: -10.47525691986084
    4. ' +=' → logprob: -10.97525691986084
    5. '+=' → logprob: -12.85025691986084
    6. '=i' → logprob: -13.47525691986084
    7. '<|end|>' → logprob: -15.60025691986084
    8. '    ' → logprob: -16.350257873535156
    9. '   ' → logprob: -16.475257873535156
    10. '+' → logprob: -16.600257873535156

Token 73: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19378554821014404
    2. ' i' → logprob: -1.943785548210144
    3. '0' → logprob: -3.4437856674194336
    4. ' ' → logprob: -7.318785667419434
    5. '1' → logprob: -8.193785667419434
    6. '	i' → logprob: -9.818785667419434
    7. '<|end|>' → logprob: -10.193785667419434
    8. 'j' → logprob: -12.193785667419434
    9. '   ' → logprob: -12.318785667419434
    10. 'N' → logprob: -12.443785667419434

Token 74: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018052493687719107
    2. ' +' → logprob: -6.501805305480957
    3. '<|end|>' → logprob: -8.251805305480957
    4. '<|end|>' → logprob: -10.376805305480957
    5. '+
' → logprob: -12.251805305480957
    6. ' ' → logprob: -13.376805305480957
    7. '+j' → logprob: -13.751805305480957
    8. 'while' → logprob: -14.501805305480957
    9. '1' → logprob: -14.751805305480957
    10. '+n' → logprob: -15.251805305480957

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004908377304673195
    2. ' ' → logprob: -7.625490665435791
    3. '2' → logprob: -13.12549114227295
    4. '<|end|>' → logprob: -14.75049114227295
    5. '   ' → logprob: -15.87549114227295
    6. '0' → logprob: -16.625490188598633
    7. '```' → logprob: -16.625490188598633
    8. '  ' → logprob: -17.250490188598633
    9. '<|end|>' → logprob: -18.187990188598633
    10. ' ' → logprob: -18.750490188598633

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -14.250014305114746
    4. '0' → logprob: -16.43751335144043
    5. '<|end|>' → logprob: -17.50001335144043
    6. '```' → logprob: -17.87501335144043
    7. '１' → logprob: -18.00001335144043
    8. '   ' → logprob: -18.18751335144043
    9. '१' → logprob: -18.31251335144043
    10. '  ' → logprob: -18.37501335144043

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.25194430351257324
    2. ' j' → logprob: -1.5019443035125732
    3. 'p' → logprob: -12.126944541931152
    4. ' ' → logprob: -12.251944541931152
    5. '	j' → logprob: -13.251944541931152
    6. 'q' → logprob: -14.126944541931152
    7. ' p' → logprob: -14.251944541931152
    8. '   ' → logprob: -15.251944541931152
    9. 'N' → logprob: -15.376944541931152
    10. '(j' → logprob: -15.376944541931152

Token 81: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3139043152332306
    2. '<' → logprob: -1.3139042854309082
    3. ' <=' → logprob: -7.938904285430908
    4. '<N' → logprob: -8.438904762268066
    5. '<=' → logprob: -9.813904762268066
    6. ' ' → logprob: -11.313904762268066
    7. '<n' → logprob: -13.688904762268066
    8. '<len' → logprob: -14.813904762268066
    9. 'N' → logprob: -15.313904762268066
    10. '<|end|>' → logprob: -15.563904762268066

Token 82: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00014120421838015318
    2. ' N' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.625141143798828
    4. ' ' → logprob: -14.625141143798828
    5. '	N' → logprob: -16.125141143798828
    6. 'n' → logprob: -16.375141143798828
    7. '<N' → logprob: -17.250141143798828
    8. '>N' → logprob: -17.500141143798828
    9. '  ' → logprob: -17.625141143798828
    10. 'i' → logprob: -17.750141143798828

Token 83: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5763164162635803
    2. 'and' → logprob: -0.8263164162635803
    3. ':' → logprob: -8.076316833496094
    4. ':
' → logprob: -10.326316833496094
    5. '   ' → logprob: -10.826316833496094
    6. ' ' → logprob: -11.826316833496094
    7. '	and' → logprob: -12.701316833496094
    8. '<|end|>' → logprob: -14.326316833496094
    9. ')' → logprob: -14.951316833496094
    10. '-' → logprob: -15.076316833496094

Token 84: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3025665283203125
    2. '<|end|>' → logprob: -2.0525665283203125
    3. 'and' → logprob: -3.1775665283203125
    4. '       ' → logprob: -3.3025665283203125
    5. '   ' → logprob: -3.5525665283203125
    6. ':' → logprob: -4.1775665283203125
    7. '<|end|>' → logprob: -6.1775665283203125
    8. ' if' → logprob: -6.1775665283203125
    9. ' ' → logprob: -6.5525665283203125
    10. '
' → logprob: -6.8025665283203125

Token 85: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9661950469017029
    2. '       ' → logprob: -1.2161951065063477
    3. 'if' (adapté à ' if') → logprob: -1.8411951065063477
    4. '<|end|>' → logprob: -2.4661951065063477
    5. ' ' → logprob: -2.9661951065063477
    6. ' and' → logprob: -3.9661951065063477
    7. '        ' → logprob: -5.841195106506348
    8. 'and' → logprob: -6.466195106506348
    9. '<|end|>' → logprob: -7.216195106506348
    10. '
' → logprob: -7.216195106506348

Token 86: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.011123628355562687
    2. 'p' → logprob: -4.5111236572265625
    3. ' ' → logprob: -10.136123657226562
    4. ' math' → logprob: -11.261123657226562
    5. ' (' → logprob: -11.386123657226562
    6. ' P' → logprob: -13.011123657226562
    7. ' ' → logprob: -13.136123657226562
    8. '(p' → logprob: -13.386123657226562
    9. '   ' → logprob: -13.511123657226562
    10. '    ' → logprob: -13.948623657226562

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2284354716539383
    2. '[j' → logprob: -1.6034355163574219
    3. '[' → logprob: -5.853435516357422
    4. '[p' → logprob: -9.353435516357422
    5. 'j' → logprob: -11.478435516357422
    6. 'i' → logprob: -11.853435516357422
    7. '==' → logprob: -12.103435516357422
    8. ' [' → logprob: -12.353435516357422
    9. ']' → logprob: -12.603435516357422
    10. '```' → logprob: -12.728435516357422

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15620945394039154
    2. '>' → logprob: -2.5312094688415527
    3. ' >' → logprob: -3.0312094688415527
    4. ' ]' → logprob: -5.406209468841553
    5. ' <' → logprob: -5.656209468841553
    6. ']>' → logprob: -5.656209468841553
    7. ']==' → logprob: -6.281209468841553
    8. ' ==' → logprob: -6.656209468841553
    9. '<' → logprob: -7.156209468841553
    10. '==' → logprob: -7.281209468841553

Token 89: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.305015504360199
    2. ' >' → logprob: -1.4300155639648438
    3. '==' → logprob: -4.805015563964844
    4. '<' → logprob: -5.055015563964844
    5. ' ==' → logprob: -5.180015563964844
    6. ' <' → logprob: -5.805015563964844
    7. '>=' → logprob: -9.180015563964844
    8. ' ' → logprob: -9.680015563964844
    9. ' >=' → logprob: -10.305015563964844
    10. '!=' → logprob: -10.680015563964844

Token 90: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043022483587265015
    2. ' p' → logprob: -3.168022394180298
    3. ' ' → logprob: -11.918022155761719
    4. '0' → logprob: -11.918022155761719
    5. 'q' → logprob: -12.293022155761719
    6. '	p' → logprob: -13.793022155761719
    7. '=' → logprob: -14.168022155761719
    8. '<|end|>' → logprob: -14.418022155761719
    9. 'P' → logprob: -14.668022155761719
    10. '<p' → logprob: -15.605522155761719

Token 91: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00011832444579340518
    2. 'j' → logprob: -9.375118255615234
    3. '[i' → logprob: -11.000118255615234
    4. '[' → logprob: -11.125118255615234
    5. ']' → logprob: -14.125118255615234
    6. ' [' → logprob: -15.375118255615234
    7. '

' → logprob: -15.375118255615234
    8. ' ' → logprob: -15.750118255615234
    9. '	j' → logprob: -16.000118255615234
    10. '[p' → logprob: -16.000118255615234

Token 92: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.029836108908057213
    2. ':' → logprob: -4.404836177825928
    3. '):' → logprob: -4.779836177825928
    4. ']' → logprob: -5.529836177825928
    5. ' and' → logprob: -5.654836177825928
    6. 'and' → logprob: -7.529836177825928
    7. '>:' → logprob: -8.15483570098877
    8. '}:' → logprob: -9.27983570098877
    9. ']:
' → logprob: -9.52983570098877
    10. '<|end|>' → logprob: -9.77983570098877

Token 93: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9426519870758057
    2. ' ' → logprob: -1.4426519870758057
    3. '       ' → logprob: -1.8176519870758057
    4. '<|end|>' → logprob: -2.3176519870758057
    5. ':' → logprob: -2.6926519870758057
    6. ' and' → logprob: -4.317651748657227
    7. '<|end|>' → logprob: -4.817651748657227
    8. '        ' → logprob: -5.817651748657227
    9. '               ' → logprob: -5.942651748657227
    10. ' :' → logprob: -6.317651748657227

Token 94: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.12967297434806824
    2. ' cnt' → logprob: -2.1296730041503906
    3. '	cnt' → logprob: -6.254673004150391
    4. '           ' → logprob: -8.50467300415039
    5. '1' → logprob: -8.62967300415039
    6. '<|end|>' → logprob: -9.25467300415039
    7. '(cnt' → logprob: -9.50467300415039
    8. ' ' → logprob: -9.75467300415039
    9. '       ' → logprob: -9.87967300415039
    10. '[cnt' → logprob: -10.00467300415039

Token 95: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0003389190824236721
    2. '_' → logprob: -8.000338554382324
    3. '+' → logprob: -13.750338554382324
    4. '_q' → logprob: -14.750338554382324
    5. '_a' → logprob: -15.375338554382324
    6. ' _' → logprob: -15.625338554382324
    7. '_pi' → logprob: -15.875338554382324
    8. '_i' → logprob: -16.12533950805664
    9. ')' → logprob: -16.25033950805664
    10. ' ' → logprob: -16.25033950805664

Token 96: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759915113449097
    2. ' +=' → logprob: -0.8259915113449097
    3. '+' → logprob: -10.2009916305542
    4. ']+=' → logprob: -11.7009916305542
    5. '=' → logprob: -12.4509916305542
    6. '<|end|>' → logprob: -13.7009916305542
    7. '+='' → logprob: -15.0759916305542
    8. ' =' → logprob: -15.0759916305542
    9. '+=(' → logprob: -15.3259916305542
    10. ')' → logprob: -15.4509916305542

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001502598519437015
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.376502990722656
    4. 'p' → logprob: -16.626502990722656
    5. '0' → logprob: -17.376502990722656
    6. '  ' → logprob: -17.689002990722656
    7. ' p' → logprob: -17.689002990722656
    8. ' ' → logprob: -17.814002990722656
    9. '+' → logprob: -18.001502990722656
    10. '100' → logprob: -18.126502990722656

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -18.062511444091797
    4. '   ' → logprob: -18.062511444091797
    5. '```' → logprob: -18.875011444091797
    6. '2' → logprob: -19.125011444091797
    7. '+' → logprob: -19.375011444091797
    8. 'p' → logprob: -19.437511444091797
    9. '  ' → logprob: -19.687511444091797
    10. '１' → logprob: -19.812511444091797

Token 99: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04493612423539162
    2. '<|end|>' → logprob: -3.294936180114746
    3. '
' → logprob: -5.169936180114746
    4. '        
' → logprob: -7.919936180114746
    5. '<|end|>' → logprob: -8.044936180114746
    6. 'j' → logprob: -8.294936180114746
    7. '```' → logprob: -8.919936180114746
    8. '\
' → logprob: -10.544936180114746
    9. '  
' → logprob: -11.669936180114746
    10. '   ' → logprob: -11.794936180114746

Token 101: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6460492610931396
    2. 'if' (adapté à ' if') → logprob: -1.1460492610931396
    3. ' if' → logprob: -1.8960492610931396
    4. '
' → logprob: -5.771049499511719
    5. '   ' → logprob: -5.896049499511719
    6. '<|end|>' → logprob: -7.521049499511719
    7. '```' → logprob: -7.521049499511719
    8. '        
' → logprob: -7.896049499511719
    9. '           ' → logprob: -9.396049499511719
    10. '    ' → logprob: -9.646049499511719

Token 102: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.011055010370910168
    2. 'q' → logprob: -4.511054992675781
    3. ' ' → logprob: -12.636054992675781
    4. ' ' → logprob: -13.636054992675781
    5. '    ' → logprob: -14.261054992675781
    6. ' Q' → logprob: -14.386054992675781
    7. '	q' → logprob: -14.386054992675781
    8. '   ' → logprob: -15.511054992675781
    9. '        ' → logprob: -16.19855499267578
    10. 'Q' → logprob: -16.32355499267578

Token 103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.704065213445574e-05
    2. '[' → logprob: -10.000046730041504
    3. '[j' → logprob: -14.375046730041504
    4. ' [' → logprob: -14.875046730041504
    5. '[I' → logprob: -15.250046730041504
    6. '[q' → logprob: -16.00004768371582
    7. ' ' → logprob: -16.37504768371582
    8. 'i' → logprob: -17.25004768371582
    9. '[int' → logprob: -17.75004768371582
    10. '```' → logprob: -18.00004768371582

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036799011286348104
    2. ']>' → logprob: -8.375368118286133
    3. '>' → logprob: -9.375368118286133
    4. ' ]' → logprob: -10.500368118286133
    5. '[j' → logprob: -11.500368118286133
    6. '[' → logprob: -11.625368118286133
    7. ' >' → logprob: -12.500368118286133
    8. '[i' → logprob: -14.125368118286133
    9. ' ' → logprob: -14.750368118286133
    10. '[q' → logprob: -15.125368118286133

Token 105: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0032996281515806913
    2. '>' → logprob: -5.753299713134766
    3. ' ' → logprob: -9.253299713134766
    4. '[' → logprob: -11.503299713134766
    5. '[j' → logprob: -12.128299713134766
    6. '<|end|>' → logprob: -12.128299713134766
    7. '<|end|>' → logprob: -13.753299713134766
    8. ' ' → logprob: -13.878299713134766
    9. '[i' → logprob: -14.753299713134766
    10. ']' → logprob: -15.128299713134766

Token 106: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.04858975484967232
    2. 'q' → logprob: -3.0485897064208984
    3. '	q' → logprob: -14.173589706420898
    4. ' ' → logprob: -14.923589706420898
    5. ' ' → logprob: -15.673589706420898
    6. '<|end|>' → logprob: -15.673589706420898
    7. '[q' → logprob: -15.923589706420898
    8. '?q' → logprob: -15.923589706420898
    9. '```' → logprob: -16.1735897064209
    10. '   ' → logprob: -16.7985897064209

Token 107: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.710618905955926e-05
    2. '[q' → logprob: -9.250097274780273
    3. '[' → logprob: -14.000097274780273
    4. 'j' → logprob: -17.250097274780273
    5. 'q' → logprob: -17.250097274780273
    6. '[i' → logprob: -18.750097274780273
    7. ' [' → logprob: -19.250097274780273
    8. ' j' → logprob: -20.375097274780273
    9. '[js' → logprob: -20.750097274780273
    10. '```' → logprob: -21.250097274780273

Token 108: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.07003769278526306
    2. '):' → logprob: -2.820037603378296
    3. ':' → logprob: -5.070037841796875
    4. '       ' → logprob: -7.695037841796875
    5. ']:
' → logprob: -7.820037841796875
    6. ']' → logprob: -8.195037841796875
    7. '}:' → logprob: -9.195037841796875
    8. '<|end|>' → logprob: -9.195037841796875
    9. '):
' → logprob: -9.445037841796875
    10. '>:' → logprob: -9.570037841796875

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023982475977391005
    2. '       ' → logprob: -7.2523980140686035
    3. 'cnt' → logprob: -7.2523980140686035
    4. ' cnt' → logprob: -7.5023980140686035
    5. '<|end|>' → logprob: -8.502398490905762
    6. '               ' → logprob: -9.377398490905762
    7. '(cnt' → logprob: -10.252398490905762
    8. ' ' → logprob: -11.002398490905762
    9. '```' → logprob: -11.002398490905762
    10. '[cnt' → logprob: -11.127398490905762

Token 110: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6961371898651123
    2. 'cnt' (adapté à ' cnt') → logprob: -0.6961371898651123
    3. '1' → logprob: -6.196137428283691
    4. '           ' → logprob: -7.196137428283691
    5. '       ' → logprob: -9.321137428283691
    6. ' ' → logprob: -9.946137428283691
    7. '	cnt' → logprob: -10.696137428283691
    8. '(cnt' → logprob: -11.196137428283691
    9. '[cnt' → logprob: -11.821137428283691
    10. '               ' → logprob: -12.196137428283691

Token 111: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.006077164318412542
    2. '_p' → logprob: -5.131077289581299
    3. 'q' → logprob: -9.13107681274414
    4. '   ' → logprob: -12.00607681274414
    5. '           ' → logprob: -12.00607681274414
    6. '	q' → logprob: -12.50607681274414
    7. '_' → logprob: -12.75607681274414
    8. ' ' → logprob: -13.25607681274414
    9. '       ' → logprob: -13.50607681274414
    10. '               ' → logprob: -13.50607681274414

Token 112: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869079351425171
    2. '+=' → logprob: -1.136907935142517
    3. '           ' → logprob: -10.886907577514648
    4. '        ' → logprob: -12.011907577514648
    5. ']+=' → logprob: -12.511907577514648
    6. '       ' → logprob: -13.386907577514648
    7. '            ' → logprob: -13.511907577514648
    8. '          ' → logprob: -13.636907577514648
    9. '    ' → logprob: -13.886907577514648
    10. '+' → logprob: -14.011907577514648

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12693272531032562
    2. ' ' → logprob: -2.1269326210021973
    3. '   ' → logprob: -13.251933097839355
    4. '           ' → logprob: -13.751933097839355
    5. '0' → logprob: -14.251933097839355
    6. '       ' → logprob: -14.251933097839355
    7. '2' → logprob: -15.751933097839355
    8. '```' → logprob: -15.876933097839355
    9. '  ' → logprob: -16.50193214416504
    10. ' ' → logprob: -16.93943214416504

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004317420825827867
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.625432014465332
    4. '           ' → logprob: -14.625432014465332
    5. '       ' → logprob: -16.000431060791016
    6. '```' → logprob: -16.625431060791016
    7. '<|end|>' → logprob: -18.125431060791016
    8. '0' → logprob: -18.125431060791016
    9. '               ' → logprob: -18.375431060791016
    10. '  ' → logprob: -18.375431060791016

Token 115: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015725912526249886
    2. '
' → logprob: -7.376572608947754
    3. 'j' → logprob: -7.876572608947754
    4. '<|end|>' → logprob: -7.876572608947754
    5. '```' → logprob: -9.126572608947754
    6. '<|end|>' → logprob: -10.376572608947754
    7. ' j' → logprob: -11.126572608947754
    8. '	j' → logprob: -11.751572608947754
    9. '   ' → logprob: -12.126572608947754
    10. ',j' → logprob: -12.626572608947754

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013276183744892478
    2. 'j' → logprob: -7.0013275146484375
    3. '
' → logprob: -8.251327514648438
    4. '```' → logprob: -9.376327514648438
    5. '<|end|>' → logprob: -10.876327514648438
    6. ' j' → logprob: -11.251327514648438
    7. '	j' → logprob: -11.501327514648438
    8. '   ' → logprob: -11.876327514648438
    9. '<|end|>' → logprob: -12.126327514648438
    10. '	' → logprob: -12.126327514648438

Token 117: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2632998526096344
    2. 'j' (adapté à ' j') → logprob: -1.513299822807312
    3. ' j' → logprob: -4.638299942016602
    4. '   ' → logprob: -6.513299942016602
    5. '
' → logprob: -9.513299942016602
    6. '```' → logprob: -10.138299942016602
    7. '	j' → logprob: -10.638299942016602
    8. ' ' → logprob: -12.388299942016602
    9. '           ' → logprob: -13.388299942016602
    10. '        
' → logprob: -13.513299942016602

Token 118: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.23225750029087067
    2. '+=' → logprob: -1.6072574853897095
    3. '+' → logprob: -5.23225736618042
    4. ' ' → logprob: -6.73225736618042
    5. '=' → logprob: -8.732257843017578
    6. ' +' → logprob: -9.732257843017578
    7. '<|end|>' → logprob: -10.982257843017578
    8. '```' → logprob: -11.357257843017578
    9. '++' → logprob: -11.857257843017578
    10. '    ' → logprob: -11.857257843017578

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. '   ' → logprob: -18.139163970947266
    4. '```' → logprob: -19.389163970947266
    5. ' ' → logprob: -19.639163970947266
    6. '  ' → logprob: -20.764163970947266
    7. '１' → logprob: -20.889163970947266
    8. '    ' → logprob: -21.139163970947266
    9. '+' → logprob: -21.264163970947266
    10. '0' → logprob: -21.514163970947266

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -18.6250057220459
    4. '   ' → logprob: -18.7500057220459
    5. '  ' → logprob: -20.5000057220459
    6. '１' → logprob: -20.6250057220459
    7. '0' → logprob: -21.1250057220459
    8. '2' → logprob: -21.6875057220459
    9. '3' → logprob: -21.8750057220459
    10. '۱' → logprob: -21.8750057220459

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2522423267364502
    2. '
' → logprob: -1.5022423267364502
    3. '    
' → logprob: -9.377242088317871
    4. '<|end|>' → logprob: -9.752242088317871
    5. 'if' → logprob: -10.002242088317871
    6. 'i' → logprob: -10.127242088317871
    7. '
' → logprob: -10.502242088317871
    8. '  
' → logprob: -10.627242088317871
    9. '```' → logprob: -11.377242088317871
    10. ' 
' → logprob: -12.252242088317871

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01933722384274006
    2. '
' → logprob: -4.019337177276611
    3. 'i' → logprob: -7.019337177276611
    4. ' i' → logprob: -8.89433765411377
    5. 'if' → logprob: -9.14433765411377
    6. '    
' → logprob: -11.14433765411377
    7. ' if' → logprob: -11.51933765411377
    8. '
' → logprob: -11.76933765411377
    9. '```' → logprob: -12.26933765411377
    10. ' ' → logprob: -12.51933765411377

Token 123: ' P' (ID: 398)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4361008405685425
    2. 'if' → logprob: -1.1861008405685425
    3. '   ' → logprob: -3.686100959777832
    4. 'P' (adapté à ' P') → logprob: -3.936100959777832
    5. ' if' → logprob: -6.311100959777832
    6. ' i' → logprob: -6.561100959777832
    7. ' ' → logprob: -9.311100959777832
    8. ' P' → logprob: -9.436100959777832
    9. '
' → logprob: -11.186100959777832
    10. '```' → logprob: -11.561100959777832

Token 124: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3869308829307556
    2. '+=' → logprob: -1.1369309425354004
    3. '=' → logprob: -10.136930465698242
    4. '+=(' → logprob: -11.261930465698242
    5. ']+=' → logprob: -12.511930465698242
    6. '+' → logprob: -13.511930465698242
    7. ' =' → logprob: -13.886930465698242
    8. ' ' → logprob: -14.761930465698242
    9. ' ' → logprob: -15.511930465698242
    10. '   ' → logprob: -15.761930465698242

Token 125: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.57595294713974
    2. ' cnt' → logprob: -0.82595294713974
    3. ' ' → logprob: -12.325952529907227
    4. '	cnt' → logprob: -12.450952529907227
    5. '(cnt' → logprob: -12.575952529907227
    6. '   ' → logprob: -14.825952529907227
    7. '[cnt' → logprob: -15.200952529907227
    8. 'count' → logprob: -15.575952529907227
    9. 'cn' → logprob: -15.575952529907227
    10. 'abs' → logprob: -15.950952529907227

Token 126: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -8.64970643306151e-05
    2. '_' → logprob: -9.375086784362793
    3. '_q' → logprob: -13.750086784362793
    4. ' _' → logprob: -14.750086784362793
    5. 'p' → logprob: -16.875085830688477
    6. '_i' → logprob: -18.375085830688477
    7. '<|end|>' → logprob: -18.625085830688477
    8. '}_' → logprob: -18.750085830688477
    9. '_
' → logprob: -18.750085830688477
    10. '_user' → logprob: -18.875085830688477

Token 127: ' *' (ID: 425)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.41399285197257996
    2. '   ' → logprob: -1.5389928817749023
    3. '
' → logprob: -2.7889928817749023
    4. '+' → logprob: -3.9139928817749023
    5. ' ' → logprob: -4.038992881774902
    6. ' Q' → logprob: -4.663992881774902
    7. '    
' → logprob: -5.663992881774902
    8. '<|end|>' → logprob: -5.788992881774902
    9. ' 
' → logprob: -6.038992881774902
    10. '	Q' → logprob: -6.288992881774902

Token 128: ' math' (ID: 13324)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.008856589905917645
    2. ' cnt' → logprob: -4.883856773376465
    3. 'q' → logprob: -8.008856773376465
    4. 'Q' → logprob: -8.633856773376465
    5. '(cnt' → logprob: -8.633856773376465
    6. '	cnt' → logprob: -8.758856773376465
    7. 'count' → logprob: -9.508856773376465
    8. ' ' → logprob: -9.633856773376465
    9. '2' → logprob: -10.008856773376465
    10. '  ' → logprob: -10.258856773376465

Token 129: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.38820168375968933
    2. '.sqrt' → logprob: -1.1382017135620117
    3. '.' → logprob: -7.638201713562012
    4. '.pow' → logprob: -8.513201713562012
    5. '.prod' → logprob: -8.513201713562012
    6. '.ceil' → logprob: -9.013201713562012
    7. '.log' → logprob: -9.263201713562012
    8. '.com' → logprob: -9.263201713562012
    9. '.pi' → logprob: -10.138201713562012
    10. '.c' → logprob: -10.138201713562012

Token 130: 'ial' (ID: 563)
  Prédit: 'orial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orial' → logprob: -0.9325821995735168
    2. 'math' → logprob: -1.182582139968872
    3. 'ial' → logprob: -1.432582139968872
    4. 'al' → logprob: -2.932582139968872
    5. 'rial' → logprob: -5.432582378387451
    6. 't' → logprob: -7.182582378387451
    7. 'tor' → logprob: -7.182582378387451
    8. 'or' → logprob: -7.432582378387451
    9. '(math' → logprob: -8.557581901550293
    10. 'l' → logprob: -8.682581901550293

Token 131: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003287155646830797
    2. '(' → logprob: -5.753287315368652
    3. 'N' → logprob: -9.253287315368652
    4. '(n' → logprob: -11.628287315368652
    5. '<|end|>' → logprob: -12.628287315368652
    6. ' (' → logprob: -15.253287315368652
    7. '(len' → logprob: -15.378287315368652
    8. '((' → logprob: -15.628287315368652
    9. '\(' → logprob: -16.128286361694336
    10. '(
' → logprob: -16.128286361694336

Token 132: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10139403492212296
    2. ' -' → logprob: -2.726393938064575
    3. '-i' → logprob: -3.476393938064575
    4. ' ' → logprob: -10.601393699645996
    5. '   ' → logprob: -11.226393699645996
    6. ')' → logprob: -12.226393699645996
    7. '1' → logprob: -12.976393699645996
    8. '-j' → logprob: -13.851393699645996
    9. '  ' → logprob: -13.976393699645996
    10. 'i' → logprob: -14.726393699645996

Token 133: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2911960184574127
    2. '1' → logprob: -1.5411959886550903
    3. '(i' → logprob: -3.79119610786438
    4. '2' → logprob: -4.416195869445801
    5. '(' → logprob: -5.791195869445801
    6. ' i' → logprob: -7.666195869445801
    7. ' (' → logprob: -8.9161958694458
    8. '   ' → logprob: -9.2911958694458
    9. ' ' → logprob: -9.4161958694458
    10. '-i' → logprob: -11.6661958694458

Token 134: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6943942904472351
    2. ' -' → logprob: -0.6943942904472351
    3. '-i' → logprob: -6.694394111633301
    4. ' ' → logprob: -12.0693941116333
    5. '   ' → logprob: -13.1943941116333
    6. ')' → logprob: -14.4443941116333
    7. '  ' → logprob: -15.3193941116333
    8. 'i' → logprob: -17.819395065307617
    9. ' minus' → logprob: -17.819395065307617
    10. '−' → logprob: -17.944395065307617

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015181333583313972
    2. ' )' → logprob: -9.250151634216309
    3. ')
' → logprob: -10.125151634216309
    4. '   ' → logprob: -11.500151634216309
    5. '))' → logprob: -13.625151634216309
    6. '')' → logprob: -14.375151634216309
    7. '<|end|>' → logprob: -14.625151634216309
    8. ')*' → logprob: -14.750151634216309
    9. '),' → logprob: -15.250151634216309
    10. '")' → logprob: -15.375151634216309

Token 136: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.10025616735219955
    2. '   ' → logprob: -2.3502562046051025
    3. '	Q' → logprob: -10.975255966186523
    4. ' Q' → logprob: -11.725255966186523
    5. 'i' → logprob: -12.100255966186523
    6. '    
' → logprob: -12.350255966186523
    7. '  ' → logprob: -12.475255966186523
    8. ' ' → logprob: -12.600255966186523
    9. '       ' → logprob: -12.725255966186523
    10. '    ' → logprob: -13.725255966186523

Token 137: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -6.074907287256792e-05
    2. '   ' → logprob: -9.75006103515625
    3. 'i' → logprob: -13.25006103515625
    4. ' Q' → logprob: -14.62506103515625
    5. '	Q' → logprob: -16.37506103515625
    6. ' ' → logprob: -17.75006103515625
    7. '    
' → logprob: -17.75006103515625
    8. '       ' → logprob: -18.00006103515625
    9. '  ' → logprob: -18.12506103515625
    10. '+' → logprob: -18.25006103515625

Token 138: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09024298191070557
    2. '+=' → logprob: -2.465242862701416
    3. '+' → logprob: -6.715242862701416
    4. ' +' → logprob: -9.590243339538574
    5. ' ' → logprob: -11.590243339538574
    6. '=' → logprob: -12.090243339538574
    7. '<|end|>' → logprob: -13.215243339538574
    8. ' =' → logprob: -13.715243339538574
    9. '+='' → logprob: -13.715243339538574
    10. ' -=' → logprob: -14.340243339538574

Token 139: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.16027003526687622
    2. ' cnt' → logprob: -1.9102699756622314
    3. '   ' → logprob: -10.910269737243652
    4. ' ' → logprob: -11.535269737243652
    5. '	cnt' → logprob: -12.035269737243652
    6. '(cnt' → logprob: -12.660269737243652
    7. '  ' → logprob: -13.035269737243652
    8. '    ' → logprob: -13.410269737243652
    9. '       ' → logprob: -13.410269737243652
    10. '[cnt' → logprob: -13.660269737243652

Token 140: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -3.941161776310764e-05
    2. '_cnt' → logprob: -10.875039100646973
    3. 'q' → logprob: -11.250039100646973
    4. '_' → logprob: -12.375039100646973
    5. 'cnt' → logprob: -12.875039100646973
    6. '[cnt' → logprob: -15.250039100646973
    7. '_j' → logprob: -15.500039100646973
    8. ' _' → logprob: -17.00004005432129
    9. '	cnt' → logprob: -17.37504005432129
    10. '(cnt' → logprob: -17.62504005432129

Token 141: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.42890313267707825
    2. '*' → logprob: -1.0539031028747559
    3. '   ' → logprob: -9.178903579711914
    4. ' ' → logprob: -9.803903579711914
    5. '    ' → logprob: -10.928903579711914
    6. '	' → logprob: -11.678903579711914
    7. '  ' → logprob: -12.553903579711914
    8. '       ' → logprob: -12.803903579711914
    9. '`' → logprob: -12.928903579711914
    10. ' ' → logprob: -12.928903579711914

Token 142: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.31326475739479065
    2. ' math' → logprob: -1.3132647275924683
    3. '(math' → logprob: -12.938264846801758
    4. ' factorial' → logprob: -15.563264846801758
    5. 'factor' → logprob: -15.813264846801758
    6. '.math' → logprob: -16.688264846801758
    7. ' ' → logprob: -16.813264846801758
    8. '/math' → logprob: -16.813264846801758
    9. '   ' → logprob: -17.063264846801758
    10. 'm' → logprob: -18.188264846801758

Token 143: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0006874137907288969
    2. 'factor' → logprob: -7.375687599182129
    3. '.' → logprob: -9.750687599182129
    4. ' factorial' → logprob: -13.750687599182129
    5. ' .' → logprob: -14.625687599182129
    6. '_factor' → logprob: -15.375687599182129
    7. '.floor' → logprob: -15.500687599182129
    8. '.fac' → logprob: -15.500687599182129
    9. '.fact' → logprob: -16.375686645507812
    10. '-factor' → logprob: -16.500686645507812

Token 144: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.026094753295183182
    2. 'al' → logprob: -4.276094913482666
    3. 'cial' → logprob: -4.651094913482666
    4. 'actor' → logprob: -7.401094913482666
    5. 'orial' → logprob: -7.651094913482666
    6. 'atorial' → logprob: -8.651094436645508
    7. 'ical' → logprob: -9.026094436645508
    8. 'o' → logprob: -9.151094436645508
    9. 'omial' → logprob: -9.151094436645508
    10. 'rial' → logprob: -9.276094436645508

Token 145: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005625653429888189
    2. '(' → logprob: -7.50056266784668
    3. 'N' → logprob: -12.12556266784668
    4. '<|end|>' → logprob: -12.75056266784668
    5. '(n' → logprob: -15.00056266784668
    6. '```' → logprob: -15.50056266784668
    7. ' (' → logprob: -15.75056266784668
    8. '(
' → logprob: -16.12556266784668
    9. '(S' → logprob: -16.87556266784668
    10. '((' → logprob: -17.12556266784668

Token 146: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010741343721747398
    2. ' -' → logprob: -7.501074314117432
    3. '1' → logprob: -7.626074314117432
    4. '-i' → logprob: -10.501073837280273
    5. ' ' → logprob: -13.126073837280273
    6. '	' → logprob: -13.251073837280273
    7. '   ' → logprob: -13.376073837280273
    8. '2' → logprob: -16.251073837280273
    9. '−' → logprob: -16.251073837280273
    10. ')' → logprob: -16.376073837280273

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006805036100558937
    2. 'i' → logprob: -7.375680446624756
    3. ' ' → logprob: -10.625680923461914
    4. '-' → logprob: -11.000680923461914
    5. ' i' → logprob: -12.625680923461914
    6. '2' → logprob: -12.875680923461914
    7. '-i' → logprob: -12.875680923461914
    8. '```' → logprob: -13.500680923461914
    9. '   ' → logprob: -13.625680923461914
    10. 'j' → logprob: -14.750680923461914

Token 148: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.03208646550774574
    2. ' -' → logprob: -4.032086372375488
    3. '-' → logprob: -4.282086372375488
    4. '<|end|>' → logprob: -12.407086372375488
    5. '-ai' → logprob: -12.407086372375488
    6. 'i' → logprob: -12.657086372375488
    7. '-imi' → logprob: -12.782086372375488
    8. ' ' → logprob: -13.282086372375488
    9. '<|end|>' → logprob: -13.532086372375488
    10. '[' → logprob: -14.032086372375488

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001007442711852491
    2. ')
' → logprob: -7.001007556915283
    3. '   ' → logprob: -9.376007080078125
    4. ' )' → logprob: -11.751007080078125
    5. ')

' → logprob: -14.001007080078125
    6. '))' → logprob: -14.126007080078125
    7. ')
' → logprob: -14.251007080078125
    8. '       ' → logprob: -15.751007080078125
    9. ' ' → logprob: -16.376007080078125
    10. '#' → logprob: -16.626007080078125

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02332013100385666
    2. 'i' → logprob: -3.773320198059082
    3. ' i' → logprob: -9.523320198059082
    4. '	i' → logprob: -14.023320198059082
    5. '       ' → logprob: -15.523320198059082
    6. '```' → logprob: -15.523320198059082
    7. '  ' → logprob: -16.148319244384766
    8. ' ' → logprob: -16.773319244384766
    9. '    
' → logprob: -16.773319244384766
    10. '_i' → logprob: -17.898319244384766

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0052428836934268475
    2. '   ' → logprob: -5.255242824554443
    3. ' i' → logprob: -11.630243301391602
    4. '	i' → logprob: -15.630243301391602
    5. '```' → logprob: -17.7552433013916
    6. ' ' → logprob: -18.8802433013916
    7. '  ' → logprob: -19.3802433013916
    8. '    
' → logprob: -19.8802433013916
    9. '_i' → logprob: -20.3802433013916
    10. '
' → logprob: -20.8802433013916

Token 152: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8701159358024597
    2. '+' → logprob: -1.1201159954071045
    3. ' +=' → logprob: -1.3701159954071045
    4. '=' → logprob: -7.370115756988525
    5. ' +' → logprob: -9.745116233825684
    6. '++' → logprob: -10.495116233825684
    7. '<|end|>' → logprob: -10.620116233825684
    8. ' ' → logprob: -11.245116233825684
    9. '+='' → logprob: -11.620116233825684
    10. '+="' → logprob: -12.495116233825684

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.00001335144043
    4. '１' → logprob: -20.75001335144043
    5. '```' → logprob: -21.37501335144043
    6. '  ' → logprob: -21.37501335144043
    7. '2' → logprob: -21.93751335144043
    8. '+' → logprob: -22.50001335144043
    9. '۱' → logprob: -22.56251335144043
    10. ' ' → logprob: -22.75001335144043

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.875
    4. '１' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. '2' → logprob: -20.625
    7. '۱' → logprob: -21.125
    8. '0' → logprob: -21.625
    9. '  ' → logprob: -21.6875
    10. '१' → logprob: -22.125

Token 155: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007548770401626825
    2. 'diff' → logprob: -6.007548809051514
    3. 'print' → logprob: -6.382548809051514
    4. '
' → logprob: -6.382548809051514
    5. ' if' → logprob: -7.757548809051514
    6. 'result' → logprob: -8.007548332214355
    7. 'd' → logprob: -8.507548332214355
    8. 'ans' → logprob: -9.132548332214355
    9. 'rank' → logprob: -9.132548332214355
    10. 'difference' → logprob: -9.132548332214355

Token 156: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2278686910867691
    2. 'print' → logprob: -1.602868676185608
    3. 'result' → logprob: -7.352868556976318
    4. ' if' → logprob: -7.477868556976318
    5. 'answer' → logprob: -7.477868556976318
    6. 'ans' → logprob: -8.852869033813477
    7. 'res' → logprob: -8.852869033813477
    8. 'diff' → logprob: -9.352869033813477
    9. 'rank' → logprob: -9.602869033813477
    10. '
' → logprob: -9.852869033813477

Token 157: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.69581139087677
    2. '(P' → logprob: -0.94581139087677
    3. '(' → logprob: -2.1958112716674805
    4. '((' → logprob: -6.9458112716674805
    5. 'abs' → logprob: -8.07081127166748
    6. '("' → logprob: -8.82081127166748
    7. '()' → logprob: -9.07081127166748
    8. '('' → logprob: -9.32081127166748
    9. '(math' → logprob: -10.82081127166748
    10. '(pow' → logprob: -11.82081127166748

Token 158: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0009174126898869872
    2. '(' → logprob: -7.000917434692383
    3. '(Q' → logprob: -12.250917434692383
    4. ')' → logprob: -14.625917434692383
    5. 'P' → logprob: -14.875917434692383
    6. '(
' → logprob: -16.250917434692383
    7. ' (' → logprob: -16.750917434692383
    8. '((' → logprob: -17.500917434692383
    9. ')(' → logprob: -18.000917434692383
    10. '(C' → logprob: -18.000917434692383

Token 159: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.581437885761261
    2. ' -' → logprob: -0.831437885761261
    3. '-Q' → logprob: -5.206438064575195
    4. 'Q' → logprob: -13.956438064575195
    5. ' ' → logprob: -14.081438064575195
    6. ' Q' → logprob: -15.706438064575195
    7. ',' → logprob: -16.331438064575195
    8. '-P' → logprob: -16.706438064575195
    9. '-
' → logprob: -17.081438064575195
    10. ')' → logprob: -17.206438064575195

Token 160: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0001234428636962548
    2. ' Q' → logprob: -9.000123023986816
    3. '	Q' → logprob: -18.500123977661133
    4. ' ' → logprob: -19.875123977661133
    5. 'abs' → logprob: -20.250123977661133
    6. '(Q' → logprob: -20.625123977661133
    7. '   ' → logprob: -21.250123977661133
    8. ',Q' → logprob: -21.250123977661133
    9. '  ' → logprob: -21.625123977661133
    10. '<Q' → logprob: -22.125123977661133

Token 161: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1602276712656021
    2. ')' → logprob: -1.910227656364441
    3. ')))' → logprob: -13.03522777557373
    4. '))
' → logprob: -14.78522777557373
    5. ')
' → logprob: -15.78522777557373
    6. ')}' → logprob: -16.285226821899414
    7. ')**' → logprob: -16.410226821899414
    8. ' ))' → logprob: -16.660226821899414
    9. ')`' → logprob: -16.785226821899414
    10. '),' → logprob: -16.785226821899414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 159
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 42.14%
Précision adaptée (1ère position): 44.03%
Précision (top 10): 84.91%
================================================================================
