================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

n = int(input())

is_prime = True
if n == 1:
    is_prime = False
else:
    for k in range(2, int(math.sqrt(n)) + 1):
        if n % k == 0:
            is_prime = False
            break

if is_prime:
    print(n - 1)
    exit()

ans = n
for k in range(2, int(math.sqrt(n)) + 1):
    if n % k == 0:
        temp_1 = n / k
        temp_2 = k
        if temp_1 + temp_2 < ans:
            ans = temp_1 + temp_2

print(int(ans - 2))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.289473822107539e-05
    2. 'import' → logprob: -11.625062942504883
    3. '```' → logprob: -11.625062942504883
    4. '\' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -12.375062942504883
    6. '.\' → logprob: -12.500062942504883
    7. '.pi' → logprob: -12.625062942504883
    8. '.e' → logprob: -12.625062942504883
    9. '\n' → logprob: -12.875062942504883
    10. 'def' → logprob: -13.250062942504883

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5846646428108215
    2. '_' → logprob: -2.2096645832061768
    3. ' ' → logprob: -2.2096645832061768
    4. 'u' → logprob: -2.7096645832061768
    5. '=' → logprob: -3.0846645832061768
    6. ')' → logprob: -3.3346645832061768
    7. 'a' → logprob: -3.5846645832061768
    8. ',' → logprob: -4.584664821624756
    9. ' =' → logprob: -4.834664821624756
    10. '[' → logprob: -5.209664821624756

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0071626389399170876
    2. '10' → logprob: -5.382162570953369
    3. ' int' → logprob: -6.382162570953369
    4. '5' → logprob: -8.382163047790527
    5. '1' → logprob: -8.507163047790527
    6. '0' → logprob: -8.632163047790527
    7. 'int' → logprob: -9.007163047790527
    8. '20' → logprob: -10.507163047790527
    9. ' math' → logprob: -10.632163047790527
    10. '32' → logprob: -11.132163047790527

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018268341955263168
    2. '('' → logprob: -9.50018310546875
    3. ''' → logprob: -10.62518310546875
    4. '()' → logprob: -11.00018310546875
    5. ')' → logprob: -11.12518310546875
    6. '```' → logprob: -11.25018310546875
    7. ' (' → logprob: -11.37518310546875
    8. '(n' → logprob: -12.25018310546875
    9. '("("' → logprob: -12.50018310546875
    10. '(
' → logprob: -12.62518310546875

Token 7: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2831183075904846
    2. ')' → logprob: -1.4081182479858398
    3. '()' → logprob: -6.65811824798584
    4. '())' → logprob: -8.53311824798584
    5. '(
' → logprob: -8.65811824798584
    6. '")' → logprob: -10.03311824798584
    7. '('' → logprob: -10.03311824798584
    8. '(

' → logprob: -10.28311824798584
    9. '))' → logprob: -10.40811824798584
    10. '```' → logprob: -10.53311824798584

Token 8: 'is' (ID: 276)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7948575615882874
    2. 'result' → logprob: -0.9198575615882874
    3. 'if' → logprob: -2.7948575019836426
    4. 'fact' → logprob: -3.1698575019836426
    5. 'for' → logprob: -3.5448575019836426
    6. 's' → logprob: -4.544857501983643
    7. '```' → logprob: -6.419857501983643
    8. 'f' → logprob: -6.544857501983643
    9. 'x' → logprob: -6.669857501983643
    10. 'res' → logprob: -7.169857501983643

Token 9: '_prime' (ID: 98616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6531606316566467
    2. '_prime' → logprob: -0.7781606316566467
    3. '_even' → logprob: -4.778160572052002
    4. ' ' → logprob: -5.528160572052002
    5. ' _' → logprob: -6.403160572052002
    6. 'prime' → logprob: -6.403160572052002
    7. '_n' → logprob: -6.778160572052002
    8. '_pal' → logprob: -7.278160572052002
    9. '_valid' → logprob: -7.528160572052002
    10. 'n' → logprob: -7.903160572052002

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029365792870521545
    2. '_' → logprob: -6.002936363220215
    3. '(_)' → logprob: -8.627936363220215
    4. '("("' → logprob: -9.377936363220215
    5. '(n' → logprob: -9.502936363220215
    6. '_(' → logprob: -10.377936363220215
    7. ' (' → logprob: -11.502936363220215
    8. '_s' → logprob: -11.502936363220215
    9. '((' → logprob: -12.002936363220215
    10. '('' → logprob: -12.002936363220215

Token 11: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9492610692977905
    2. '[' → logprob: -1.1992610692977905
    3. ' [' → logprob: -1.4492610692977905
    4. 'True' → logprob: -2.57426118850708
    5. '[n' → logprob: -7.57426118850708
    6. ' ' → logprob: -10.699260711669922
    7. '(True' → logprob: -10.699260711669922
    8. '[]' → logprob: -11.449260711669922
    9. ' all' → logprob: -12.199260711669922
    10. ' []' → logprob: -12.574260711669922

Token 12: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4512383043766022
    2. ' for' → logprob: -1.0762382745742798
    3. ' 
' → logprob: -5.07623815536499
    4. ' ' → logprob: -5.57623815536499
    5. '
' → logprob: -6.07623815536499
    6. '```' → logprob: -6.20123815536499
    7. '  
' → logprob: -6.32623815536499
    8. '' → logprob: -6.32623815536499
    9. '<|end|>' → logprob: -6.45123815536499
    10. '\n' → logprob: -7.07623815536499

Token 13: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1858464479446411
    2. ' for' → logprob: -1.8108464479446411
    3. '
' → logprob: -5.435846328735352
    4. '\n' → logprob: -7.310846328735352
    5. ' 
' → logprob: -7.560846328735352
    6. 'if' → logprob: -8.685846328735352
    7. '```' → logprob: -8.685846328735352
    8. '  
' → logprob: -9.435846328735352
    9. '<|end|>' → logprob: -10.310846328735352
    10. '' → logprob: -10.935846328735352

Token 14: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0038047111593186855
    2. 'n' → logprob: -5.628804683685303
    3. ' ' → logprob: -8.503805160522461
    4. ' (' → logprob: -14.128805160522461
    5. '	n' → logprob: -14.503805160522461
    6. ' ' → logprob: -14.878805160522461
    7. '(n' → logprob: -16.00380516052246
    8. ' not' → logprob: -16.62880516052246
    9. '   ' → logprob: -17.50380516052246
    10. '```' → logprob: -17.62880516052246

Token 15: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5196346640586853
    2. ' <' → logprob: -1.26963472366333
    3. ' >' → logprob: -2.76963472366333
    4. ' ' → logprob: -3.39463472366333
    5. ' %' → logprob: -3.89463472366333
    6. '>' → logprob: -5.89463472366333
    7. '<=' → logprob: -6.01963472366333
    8. '%' → logprob: -6.64463472366333
    9. '<' → logprob: -6.89463472366333
    10. ' ==' → logprob: -8.644634246826172

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01440699864178896
    2. '1' → logprob: -5.014407157897949
    3. '2' → logprob: -5.014407157897949
    4. '0' → logprob: -6.889407157897949
    5. '<' → logprob: -13.88940715789795
    6. '```' → logprob: -14.38940715789795
    7. '	' → logprob: -15.63940715789795
    8. '   ' → logprob: -16.264406204223633
    9. '  ' → logprob: -16.639406204223633
    10. '3' → logprob: -16.639406204223633

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34693604707717896
    2. '0' → logprob: -1.9719359874725342
    3. '2' → logprob: -2.096935987472534
    4. ' ' → logprob: -3.471935987472534
    5. '<' → logprob: -9.846936225891113
    6. '```' → logprob: -11.471936225891113
    7. '"' → logprob: -13.221936225891113
    8. '3' → logprob: -13.721936225891113
    9. 'import' → logprob: -13.971936225891113
    10. '   ' → logprob: -14.096936225891113

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036537862615659833
    2. ' :' → logprob: -8.125365257263184
    3. ' or' → logprob: -9.625365257263184
    4. 'or' → logprob: -14.000365257263184
    5. ':
' → logprob: -14.000365257263184
    6. ':**' → logprob: -14.000365257263184
    7. ':return' → logprob: -15.125365257263184
    8. '):' → logprob: -15.375365257263184
    9. '：' → logprob: -16.8753662109375
    10. '```' → logprob: -17.6253662109375

Token 19: '   ' (ID: 271)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5124698281288147
    2. ' ' → logprob: -1.63746976852417
    3. ' 
' → logprob: -2.01246976852417
    4. '    
' → logprob: -4.26246976852417
    5. '\' → logprob: -4.38746976852417
    6. '    ' → logprob: -4.63746976852417
    7. ' \' → logprob: -4.76246976852417
    8. ' False' → logprob: -4.88746976852417
    9. '\n' → logprob: -5.13746976852417
    10. '     
' → logprob: -5.26246976852417

Token 20: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07382131367921829
    2. ' ' → logprob: -3.0738213062286377
    3. ' \' → logprob: -4.573821544647217
    4. ' 
' → logprob: -5.448821544647217
    5. 'is' (adapté à ' is') → logprob: -5.573821544647217
    6. '\n' → logprob: -5.698821544647217
    7. '\' → logprob: -6.448821544647217
    8. 'n' → logprob: -8.198821067810059
    9. ' False' → logprob: -8.448821067810059
    10. ' ' → logprob: -8.698821067810059

Token 21: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.1608361303806305
    2. '_' → logprob: -1.910836100578308
    3. ' _' → logprob: -7.535836219787598
    4. '_p' → logprob: -10.160836219787598
    5. '_pr' → logprob: -11.285836219787598
    6. ' ' → logprob: -11.410836219787598
    7. '_\' → logprob: -12.535836219787598
    8. '_false' → logprob: -12.535836219787598
    9. '__' → logprob: -13.660836219787598
    10. 'prime' → logprob: -13.785836219787598

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008631468750536442
    2. '=' → logprob: -4.758631706237793
    3. '=False' → logprob: -11.258631706237793
    4. ' ' → logprob: -12.508631706237793
    5. ' ' → logprob: -16.258630752563477
    6. ' =
' → logprob: -16.758630752563477
    7. 'False' → logprob: -17.008630752563477
    8. 'space' → logprob: -17.383630752563477
    9. ' False' → logprob: -17.633630752563477
    10. ' |=' → logprob: -18.008630752563477

Token 23: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.25192907452583313
    2. 'False' → logprob: -1.5019290447235107
    3. '=False' → logprob: -19.376928329467773
    4. ' false' → logprob: -19.876928329467773
    5. ' True' → logprob: -19.876928329467773
    6. '_false' → logprob: -20.251928329467773
    7. '(False' → logprob: -20.751928329467773
    8. 'false' → logprob: -21.626928329467773
    9. 'True' → logprob: -21.876928329467773
    10. ' F' → logprob: -22.376928329467773

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19585196673870087
    2. 'elif' → logprob: -1.8208519220352173
    3. '```' → logprob: -4.695851802825928
    4. '\n' → logprob: -6.320851802825928
    5. 'else' → logprob: -6.945851802825928
    6. '<|end|>' → logprob: -6.945851802825928
    7. ' 
' → logprob: -7.070851802825928
    8. '    
' → logprob: -7.445851802825928
    9. '  
' → logprob: -7.445851802825928
    10. 'for' → logprob: -7.820851802825928

Token 25: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.16964992880821228
    2. 'else' → logprob: -1.9196499586105347
    3. '
' → logprob: -5.419650077819824
    4. '```' → logprob: -5.669650077819824
    5. 'for' → logprob: -6.919650077819824
    6. '\n' → logprob: -9.044650077819824
    7. ' elif' → logprob: -9.169650077819824
    8. '    
' → logprob: -9.794650077819824
    9. ' else' → logprob: -9.919650077819824
    10. ' 
' → logprob: -10.169650077819824

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013145409524440765
    2. ':
' → logprob: -5.013145446777344
    3. ' if' → logprob: -5.138145446777344
    4. '   ' → logprob: -8.263145446777344
    5. 'if' → logprob: -8.638145446777344
    6. ' :' → logprob: -9.513145446777344
    7. ' :
' → logprob: -11.013145446777344
    8. '    ' → logprob: -12.013145446777344
    9. ',' → logprob: -12.513145446777344
    10. ':
' → logprob: -14.013145446777344

Token 27: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12944237887859344
    2. '   ' → logprob: -2.1294424533843994
    3. ' if' → logprob: -6.37944221496582
    4. 'for' → logprob: -7.75444221496582
    5. '    ' → logprob: -8.75444221496582
    6. ':' → logprob: -10.00444221496582
    7. ' ' → logprob: -10.25444221496582
    8. ' import' → logprob: -10.50444221496582
    9. ' i' → logprob: -10.62944221496582
    10. '	for' → logprob: -10.62944221496582

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005376525688916445
    2. 'for' (adapté à ' for') → logprob: -5.25537633895874
    3. '   ' → logprob: -9.505376815795898
    4. '    ' → logprob: -9.880376815795898
    5. '       ' → logprob: -11.880376815795898
    6. ' if' → logprob: -12.505376815795898
    7. ' i' → logprob: -13.130376815795898
    8. '	for' → logprob: -13.505376815795898
    9. ' ' → logprob: -14.255376815795898
    10. ' math' → logprob: -14.255376815795898

Token 29: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008571469807066023
    2. 'i' → logprob: -7.125857353210449
    3. ' ' → logprob: -9.87585735321045
    4. '	i' → logprob: -14.00085735321045
    5. ' num' → logprob: -15.50085735321045
    6. ' _' → logprob: -16.375856399536133
    7. '  ' → logprob: -16.875856399536133
    8. ' x' → logprob: -17.125856399536133
    9. ' d' → logprob: -17.250856399536133
    10. ' p' → logprob: -17.625856399536133

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013804715126752853
    2. 'in' → logprob: -6.626380443572998
    3. ' ' → logprob: -9.876380920410156
    4. 'k' → logprob: -14.751380920410156
    5. 'import' → logprob: -14.876380920410156
    6. '	in' → logprob: -15.251380920410156
    7. 'space' → logprob: -15.251380920410156
    8. ' k' → logprob: -15.376380920410156
    9. '  ' → logprob: -15.376380920410156
    10. '2' → logprob: -15.376380920410156

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001728372066281736
    2. 'range' → logprob: -6.376728534698486
    3. ' ' → logprob: -10.751728057861328
    4. '	range' → logprob: -12.876728057861328
    5. ' math' → logprob: -14.126728057861328
    6. '2' → logprob: -14.501728057861328
    7. ' xrange' → logprob: -15.501728057861328
    8. '  ' → logprob: -15.501728057861328
    9. '(range' → logprob: -15.626728057861328
    10. '   ' → logprob: -15.876728057861328

Token 32: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0802738870552275e-05
    2. ' (' → logprob: -11.87501049041748
    3. '2' → logprob: -12.50001049041748
    4. ' ' → logprob: -16.625011444091797
    5. ')' → logprob: -19.125011444091797
    6. '```' → logprob: -19.250011444091797
    7. '   ' → logprob: -20.375011444091797
    8. '(
' → logprob: -21.625011444091797
    9. 's' → logprob: -21.625011444091797
    10. '1' → logprob: -21.875011444091797

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012868782505393028
    2. ' ' → logprob: -9.500128746032715
    3. '(' → logprob: -9.875128746032715
    4. ')' → logprob: -13.875128746032715
    5. '   ' → logprob: -13.875128746032715
    6. '```' → logprob: -15.000128746032715
    7. '	' → logprob: -17.0001277923584
    8. '  ' → logprob: -17.5001277923584
    9. ' (' → logprob: -17.5001277923584
    10. '۲' → logprob: -17.6251277923584

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016247143503278494
    2. ',int' → logprob: -7.001624584197998
    3. ' ,' → logprob: -7.251624584197998
    4. ',k' → logprob: -13.126625061035156
    5. ',n' → logprob: -13.251625061035156
    6. ',(' → logprob: -16.251625061035156
    7. ',num' → logprob: -17.001625061035156
    8. 'int' → logprob: -17.876625061035156
    9. ',
' → logprob: -18.251625061035156
    10. ',m' → logprob: -18.501625061035156

Token 35: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47921085357666016
    2. 'int' → logprob: -0.9792108535766602
    3. ' math' → logprob: -5.47921085357666
    4. 'math' → logprob: -6.97921085357666
    5. '   ' → logprob: -12.47921085357666
    6. '	int' → logprob: -12.47921085357666
    7. '(int' → logprob: -12.47921085357666
    8. ' ' → logprob: -13.22921085357666
    9. ' n' → logprob: -13.60421085357666
    10. 'n' → logprob: -13.85421085357666

Token 36: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3142949342727661
    2. '(math' → logprob: -1.3142949342727661
    3. '(n' → logprob: -7.314294815063477
    4. '(s' → logprob: -8.439294815063477
    5. '(k' → logprob: -8.939294815063477
    6. ' (' → logprob: -11.439294815063477
    7. '(Math' → logprob: -12.939294815063477
    8. 'math' → logprob: -13.689294815063477
    9. '(
' → logprob: -14.064294815063477
    10. ')' → logprob: -14.189294815063477

Token 37: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2531994879245758
    2. '.sqrt' → logprob: -1.5031994581222534
    3. '(math' → logprob: -8.128199577331543
    4. '(' → logprob: -8.503199577331543
    5. '.s' → logprob: -8.628199577331543
    6. '(n' → logprob: -8.878199577331543
    7. '.math' → logprob: -9.128199577331543
    8. '(s' → logprob: -9.503199577331543
    9. '.Sqrt' → logprob: -10.128199577331543
    10. '.n' → logprob: -10.378199577331543

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019374389667063951
    2. '(' → logprob: -6.251937389373779
    3. '(k' → logprob: -11.876937866210938
    4. 'n' → logprob: -13.751937866210938
    5. ' (' → logprob: -15.126937866210938
    6. '(
' → logprob: -15.501937866210938
    7. ')' → logprob: -15.751937866210938
    8. ')n' → logprob: -16.251937866210938
    9. 'k' → logprob: -17.501937866210938
    10. ' ' → logprob: -17.751937866210938

Token 39: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031973200384527445
    2. ')+' → logprob: -5.878197193145752
    3. '(n' → logprob: -8.37819766998291
    4. '))' → logprob: -9.75319766998291
    5. '(' → logprob: -10.12819766998291
    6. ' )' → logprob: -10.37819766998291
    7. '))+' → logprob: -10.62819766998291
    8. '())' → logprob: -12.75319766998291
    9. '(k' → logprob: -13.25319766998291
    10. ')n' → logprob: -13.75319766998291

Token 40: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133234977722168
    2. ' +' → logprob: -1.3133234977722168
    3. ')+' → logprob: -9.938323974609375
    4. ')' → logprob: -11.813323974609375
    5. '+k' → logprob: -12.813323974609375
    6. '()+' → logprob: -13.313323974609375
    7. '   ' → logprob: -14.688323974609375
    8. '```' → logprob: -15.313323974609375
    9. ' ' → logprob: -15.438323974609375
    10. '+n' → logprob: -15.438323974609375

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756323881447315
    2. ' ' → logprob: -4.634756088256836
    3. '2' → logprob: -16.009756088256836
    4. ' ' → logprob: -16.134756088256836
    5. '```' → logprob: -16.759756088256836
    6. '(' → logprob: -17.009756088256836
    7. '   ' → logprob: -17.134756088256836
    8. '  ' → logprob: -17.384756088256836
    9. ')' → logprob: -18.509756088256836
    10. '۱' → logprob: -19.322256088256836

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.2500057220459
    4. '۱' → logprob: -18.8750057220459
    5. '   ' → logprob: -19.1250057220459
    6. '2' → logprob: -19.2500057220459
    7. ')' → logprob: -19.3750057220459
    8. '１' → logprob: -19.5000057220459
    9. '  ' → logprob: -20.2500057220459
    10. '(' → logprob: -20.3750057220459

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31335344910621643
    2. ':' → logprob: -1.313353419303894
    3. ')' → logprob: -9.688353538513184
    4. ' ):' → logprob: -11.688353538513184
    5. ':)' → logprob: -12.063353538513184
    6. '):
' → logprob: -12.563353538513184
    7. '   ' → logprob: -12.688353538513184
    8. ' :' → logprob: -12.938353538513184
    9. ':**' → logprob: -13.063353538513184
    10. '():' → logprob: -13.313353538513184

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3479502499103546
    2. ':' → logprob: -1.3479502201080322
    3. '   ' → logprob: -3.8479502201080322
    4. '<|end|>' → logprob: -5.347950458526611
    5. '    ' → logprob: -5.972950458526611
    6. ' :' → logprob: -6.472950458526611
    7. ':
' → logprob: -6.472950458526611
    8. ' ' → logprob: -6.722950458526611
    9. ' if' → logprob: -8.222949981689453
    10. 'if' → logprob: -8.847949981689453

Token 45: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6318824291229248
    2. '       ' → logprob: -1.3818824291229248
    3. ' ' → logprob: -2.631882429122925
    4. '   ' → logprob: -3.006882429122925
    5. 'if' (adapté à ' if') → logprob: -3.381882429122925
    6. '    ' → logprob: -4.006882667541504
    7. ' if' → logprob: -4.006882667541504
    8. '<|end|>' → logprob: -4.756882667541504
    9. '           ' → logprob: -5.131882667541504
    10. ' :' → logprob: -5.506882667541504

Token 46: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0004936986370012164
    2. 'n' → logprob: -7.62549352645874
    3. ' ' → logprob: -12.750494003295898
    4. ' ' → logprob: -13.250494003295898
    5. '	n' → logprob: -14.000494003295898
    6. ' (' → logprob: -15.750494003295898
    7. ' ‌' → logprob: -17.7504940032959
    8. '(n' → logprob: -18.6254940032959
    9. ' н' → logprob: -18.8754940032959
    10. '<|end|>' → logprob: -19.0004940032959

Token 47: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01605689339339733
    2. '%' → logprob: -4.141057014465332
    3. ' ' → logprob: -11.141057014465332
    4. ' ' → logprob: -11.766057014465332
    5. '%i' → logprob: -16.141056060791016
    6. '	' → logprob: -17.766056060791016
    7. '```' → logprob: -17.891056060791016
    8. ' %)' → logprob: -18.266056060791016
    9. ' %=' → logprob: -18.266056060791016
    10. ')' → logprob: -18.391056060791016

Token 48: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16022635996341705
    2. ' k' → logprob: -1.9102263450622559
    3. '	k' → logprob: -13.785226821899414
    4. ' ' → logprob: -14.035226821899414
    5. '<|end|>' → logprob: -15.285226821899414
    6. '2' → logprob: -16.160226821899414
    7. ' к' → logprob: -17.160226821899414
    8. ' ' → logprob: -17.785226821899414
    9. '<|end|>' → logprob: -18.660226821899414
    10. '_k' → logprob: -18.660226821899414

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760138034820557
    2. '==' → logprob: -0.8260138034820557
    3. '=' → logprob: -10.451013565063477
    4. ')==' → logprob: -10.951013565063477
    5. ' ' → logprob: -11.576013565063477
    6. ')' → logprob: -11.951013565063477
    7. ' ' → logprob: -12.576013565063477
    8. '0' → logprob: -12.951013565063477
    9. ']==' → logprob: -13.201013565063477
    10. '===' → logprob: -13.326013565063477

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12692853808403015
    2. ' ' → logprob: -2.1269285678863525
    3. ' ' → logprob: -14.751928329467773
    4. '<|end|>' → logprob: -17.501928329467773
    5. '۰' → logprob: -17.751928329467773
    6. '  ' → logprob: -18.876928329467773
    7. '=' → logprob: -18.876928329467773
    8. ' ' → logprob: -19.126928329467773
    9. '```' → logprob: -19.251928329467773
    10. '	' → logprob: -19.626928329467773

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -18.50000762939453
    4. '०' → logprob: -19.87500762939453
    5. '٠' → logprob: -20.00000762939453
    6. '```' → logprob: -20.18750762939453
    7. '０' → logprob: -20.62500762939453
    8. '  ' → logprob: -20.62500762939453
    9. ' ' → logprob: -20.81250762939453
    10. '০' → logprob: -20.81250762939453

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003469057264737785
    2. ':
' → logprob: -8.000347137451172
    3. '):' → logprob: -11.875347137451172
    4. '<|end|>' → logprob: -12.875347137451172
    5. ' :' → logprob: -14.375347137451172
    6. ':return' → logprob: -14.875347137451172
    7. '<|end|>' → logprob: -15.375347137451172
    8. ':

' → logprob: -15.500347137451172
    9. ':**' → logprob: -15.625347137451172
    10. '       ' → logprob: -16.000347137451172

Token 53: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012309459270909429
    2. '            
' → logprob: -7.626230716705322
    3. '<|end|>' → logprob: -7.626230716705322
    4. '\n' → logprob: -9.37623119354248
    5. '
' → logprob: -9.75123119354248
    6. '       ' → logprob: -11.12623119354248
    7. ' 
' → logprob: -11.12623119354248
    8. '<|end|>' → logprob: -11.37623119354248
    9. '               ' → logprob: -11.50123119354248
    10. 'n' → logprob: -11.50123119354248

Token 54: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29257112741470337
    2. '               ' → logprob: -1.6675710678100586
    3. ' is' → logprob: -2.9175710678100586
    4. 'is' (adapté à ' is') → logprob: -4.542571067810059
    5. '       ' → logprob: -9.917571067810059
    6. '```' → logprob: -10.042571067810059
    7. '   ' → logprob: -10.167571067810059
    8. ' ' → logprob: -10.667571067810059
    9. '            
' → logprob: -10.917571067810059
    10. '                
' → logprob: -11.667571067810059

Token 55: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.012580055743455887
    2. '_' → logprob: -4.387579917907715
    3. ' _' → logprob: -10.387579917907715
    4. '_p' → logprob: -10.887579917907715
    5. '_pr' → logprob: -11.762579917907715
    6. '_false' → logprob: -12.887579917907715
    7. '._' → logprob: -13.637579917907715
    8. '_primary' → logprob: -13.637579917907715
    9. '_prior' → logprob: -13.887579917907715
    10. '_pi' → logprob: -14.137579917907715

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007611243985593319
    2. '=' → logprob: -4.882611274719238
    3. '=False' → logprob: -12.882611274719238
    4. ' ' → logprob: -13.007611274719238
    5. '=True' → logprob: -16.382610321044922
    6. '_' → logprob: -16.757610321044922
    7. ' =
' → logprob: -17.007610321044922
    8. ' ' → logprob: -17.257610321044922
    9. '<|end|>' → logprob: -17.507610321044922
    10. ')' → logprob: -18.132610321044922

Token 57: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868710398674011
    2. ' False' → logprob: -1.136871099472046
    3. 'True' → logprob: -20.386871337890625
    4. '(False' → logprob: -20.386871337890625
    5. ' True' → logprob: -20.511871337890625
    6. '=False' → logprob: -20.886871337890625
    7. '_false' → logprob: -22.261871337890625
    8. 'F' → logprob: -22.761871337890625
    9. '.False' → logprob: -22.886871337890625
    10. ' false' → logprob: -22.886871337890625

Token 58: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.023293538717553e-05
    2. '            
' → logprob: -11.250030517578125
    3. '		' → logprob: -11.500030517578125
    4. '               ' → logprob: -12.750030517578125
    5. '          ' → logprob: -13.500030517578125
    6. '       ' → logprob: -14.000030517578125
    7. '            ' → logprob: -14.250030517578125
    8. '<|end|>' → logprob: -15.125030517578125
    9. '```' → logprob: -15.125030517578125
    10. '	       ' → logprob: -15.625030517578125

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.3451433409936726e-05
    2. '            
' → logprob: -11.000033378601074
    3. '		' → logprob: -11.750033378601074
    4. '       ' → logprob: -13.000033378601074
    5. 'break' → logprob: -13.250033378601074
    6. '          ' → logprob: -14.125033378601074
    7. '
' → logprob: -14.125033378601074
    8. '               ' → logprob: -14.375033378601074
    9. '```' → logprob: -14.375033378601074
    10. '<|end|>' → logprob: -14.625033378601074

Token 60: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2047761082649231
    2. 'break' (adapté à ' break') → logprob: -1.7047760486602783
    3. ' break' → logprob: -5.704776287078857
    4. '       ' → logprob: -11.3297758102417
    5. '```' → logprob: -12.2047758102417
    6. '	break' → logprob: -12.5797758102417
    7. '   ' → logprob: -13.0797758102417
    8. '               ' → logprob: -13.3297758102417
    9. '		' → logprob: -13.5797758102417
    10. '          ' → logprob: -14.2047758102417

Token 61: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19659222662448883
    2. '\n' → logprob: -2.821592330932617
    3. '
' → logprob: -2.946592330932617
    4. 'if' → logprob: -3.821592330932617
    5. '```' → logprob: -3.946592330932617
    6. '<|end|>' → logprob: -4.321592330932617
    7. 'n' → logprob: -5.196592330932617
    8. '\' → logprob: -6.696592330932617
    9. 'newline' → logprob: -7.071592330932617
    10. '#' → logprob: -7.196592330932617

Token 62: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030984194949269295
    2. 'if' → logprob: -3.6559841632843018
    3. '
' → logprob: -5.405984401702881
    4. '```' → logprob: -9.405983924865723
    5. '

' → logprob: -11.030983924865723
    6. '    
' → logprob: -11.155983924865723
    7. '<|end|>' → logprob: -11.280983924865723
    8. '#' → logprob: -11.280983924865723
    9. ' 
' → logprob: -11.905983924865723
    10. '  
' → logprob: -12.030983924865723

Token 63: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01944594830274582
    2. ' ' → logprob: -4.019445896148682
    3. ' not' → logprob: -7.144445896148682
    4. ' ' → logprob: -7.644445896148682
    5. ' n' → logprob: -11.26944637298584
    6. 'is' → logprob: -11.89444637298584
    7. '_' → logprob: -12.51944637298584
    8. '  ' → logprob: -13.26944637298584
    9. 'not' → logprob: -14.64444637298584
    10. ' space' → logprob: -15.01944637298584

Token 64: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.023457668721675873
    2. '_' → logprob: -3.7734577655792236
    3. '_pr' → logprob: -8.898457527160645
    4. '_p' → logprob: -9.898457527160645
    5. '_pi' → logprob: -12.523457527160645
    6. ' _' → logprob: -12.523457527160645
    7. '_pal' → logprob: -12.648457527160645
    8. '__' → logprob: -13.148457527160645
    9. '_Pr' → logprob: -13.398457527160645
    10. '_print' → logprob: -13.773457527160645

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.372294698550832e-06
    2. ':
' → logprob: -11.625009536743164
    3. ':**' → logprob: -15.625009536743164
    4. ' :' → logprob: -16.125009536743164
    5. ':

' → logprob: -18.250009536743164
    6. '):' → logprob: -18.375009536743164
    7. '():' → logprob: -19.125009536743164
    8. ':`' → logprob: -19.375009536743164
    9. ':
' → logprob: -19.500009536743164
    10. ':def' → logprob: -19.625009536743164

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041999638080596924
    2. ' print' → logprob: -3.666999578475952
    3. 'print' → logprob: -4.166999816894531
    4. '	print' → logprob: -10.041999816894531
    5. ':' → logprob: -11.041999816894531
    6. ':
' → logprob: -11.666999816894531
    7. '```' → logprob: -12.916999816894531
    8. '    
' → logprob: -13.041999816894531
    9. '   ' → logprob: -13.541999816894531
    10. '
' → logprob: -13.916999816894531

Token 67: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7318691611289978
    2. 'print' (adapté à ' print') → logprob: -1.2318692207336426
    3. ' print' → logprob: -1.4818692207336426
    4. '	print' → logprob: -10.606868743896484
    5. '```' → logprob: -12.606868743896484
    6. '
' → logprob: -13.356868743896484
    7. '       ' → logprob: -14.731868743896484
    8. '   ' → logprob: -14.856868743896484
    9. '    
' → logprob: -15.231868743896484
    10. '\' → logprob: -15.356868743896484

Token 68: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8139204978942871
    2. '("' → logprob: -0.8139204978942871
    3. '("("' → logprob: -2.188920497894287
    4. '('' → logprob: -6.563920497894287
    5. '(True' → logprob: -8.813920974731445
    6. '("(' → logprob: -9.813920974731445
    7. '(n' → logprob: -10.188920974731445
    8. '()' → logprob: -10.688920974731445
    9. '("")' → logprob: -10.938920974731445
    10. '("="' → logprob: -11.813920974731445

Token 69: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.000001907348633
    3. '))' → logprob: -14.500001907348633
    4. ')
' → logprob: -14.875001907348633
    5. ')`' → logprob: -16.125001907348633
    6. '*' → logprob: -17.250001907348633
    7. '**' → logprob: -17.375001907348633
    8. '())' → logprob: -17.500001907348633
    9. '()' → logprob: -17.500001907348633
    10. ')**' → logprob: -17.625001907348633

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013501476496458054
    2. '2' → logprob: -4.5135016441345215
    3. ' ' → logprob: -6.0135016441345215
    4. '0' → logprob: -13.263501167297363
    5. '3' → logprob: -13.388501167297363
    6. '   ' → logprob: -14.013501167297363
    7. ')' → logprob: -14.763501167297363
    8. '  ' → logprob: -15.138501167297363
    9. '
' → logprob: -16.20100212097168
    10. '-' → logprob: -16.63850212097168

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0629870858974755e-05
    2. '2' → logprob: -9.75006103515625
    3. ' ' → logprob: -13.12506103515625
    4. '0' → logprob: -15.50006103515625
    5. '3' → logprob: -16.87506103515625
    6. ')' → logprob: -18.06256103515625
    7. '１' → logprob: -18.75006103515625
    8. '<|end|>' → logprob: -18.75006103515625
    9. '-' → logprob: -19.06256103515625
    10. '```' → logprob: -19.25006103515625

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.013994814362377e-05
    2. ')
' → logprob: -10.00005054473877
    3. ' )' → logprob: -12.87505054473877
    4. 'else' → logprob: -14.25005054473877
    5. '))' → logprob: -14.87505054473877
    6. '*' → logprob: -15.12505054473877
    7. ')
' → logprob: -15.50005054473877
    8. ')

' → logprob: -16.000049591064453
    9. ' else' → logprob: -16.125049591064453
    10. ')`' → logprob: -16.375049591064453

Token 73: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.961759259458631e-06
    2. ' else' → logprob: -12.500004768371582
    3. '```' → logprob: -14.000004768371582
    4. 'elif' → logprob: -16.3750057220459
    5. '<|end|>' → logprob: -16.6250057220459
    6. '   ' → logprob: -16.6250057220459
    7. '	else' → logprob: -17.5000057220459
    8. '}else' → logprob: -18.1250057220459
    9. '_else' → logprob: -18.1250057220459
    10. 'elses' → logprob: -18.6250057220459

Token 74: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.36574100604048e-06
    2. ' else' → logprob: -12.875004768371582
    3. 'elif' → logprob: -13.375004768371582
    4. ')' → logprob: -16.250003814697266
    5. '```' → logprob: -16.625003814697266
    6. '<|end|>' → logprob: -18.250003814697266
    7. '
' → logprob: -19.000003814697266
    8. 'e' → logprob: -19.125003814697266
    9. 'elses' → logprob: -19.125003814697266
    10. 'endif' → logprob: -19.250003814697266

Token 75: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014196529053151608
    2. '(' → logprob: -4.264196395874023
    3. '()
' → logprob: -10.889196395874023
    4. '()

' → logprob: -12.639196395874023
    5. '()`' → logprob: -12.889196395874023
    6. '(
' → logprob: -13.264196395874023
    7. ' ()' → logprob: -13.514196395874023
    8. '`()' → logprob: -13.889196395874023
    9. '```' → logprob: -14.264196395874023
    10. '();' → logprob: -14.514196395874023

Token 76: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6417862772941589
    2. 'count' → logprob: -1.8917863368988037
    3. 'else' → logprob: -1.8917863368988037
    4. 'div' → logprob: -3.2667863368988037
    5. 'print' → logprob: -4.016786098480225
    6. 'cnt' → logprob: -4.266786098480225
    7. 'result' → logprob: -4.641786098480225
    8. 'i' → logprob: -4.766786098480225
    9. 'answer' → logprob: -4.766786098480225
    10. 'p' → logprob: -5.016786098480225

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006080360617488623
    2. '=' → logprob: -5.131080150604248
    3. '_' → logprob: -8.881080627441406
    4. 's' → logprob: -11.631080627441406
    5. '1' → logprob: -14.006080627441406
    6. ',' → logprob: -14.381080627441406
    7. ' ' → logprob: -14.631080627441406
    8. '0' → logprob: -15.006080627441406
    9. '_space' → logprob: -15.256080627441406
    10. 'space' → logprob: -15.756080627441406

Token 78: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31601929664611816
    2. '0' → logprob: -1.9410192966461182
    3. '1' → logprob: -2.191019296646118
    4. ' n' → logprob: -4.816019058227539
    5. ' ' → logprob: -5.941019058227539
    6. '[n' → logprob: -5.941019058227539
    7. '(n' → logprob: -7.066019058227539
    8. '[' → logprob: -7.816019058227539
    9. '[]' → logprob: -7.816019058227539
    10. '2' → logprob: -9.066019058227539

Token 79: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04246760532259941
    2. ' -' → logprob: -4.1674675941467285
    3. 'for' → logprob: -4.6674675941467285
    4. ' ' → logprob: -4.9174675941467285
    5. ' for' → logprob: -5.4174675941467285
    6. '+' → logprob: -6.1674675941467285
    7. '<|end|>' → logprob: -6.9174675941467285
    8. '
' → logprob: -7.2924675941467285
    9. ' 
' → logprob: -8.042468070983887
    10. '=' → logprob: -8.042468070983887

Token 80: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002166491176467389
    2. ' for' → logprob: -8.625216484069824
    3. '-' → logprob: -10.625216484069824
    4. 'i' → logprob: -12.125216484069824
    5. '2' → logprob: -13.000216484069824
    6. '1' → logprob: -13.500216484069824
    7. '```' → logprob: -13.875216484069824
    8. 'div' → logprob: -13.875216484069824
    9. '+' → logprob: -14.500216484069824
    10. 'while' → logprob: -14.875216484069824

Token 81: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6726900935173035
    2. 'i' → logprob: -0.9226900935173035
    3. ' d' → logprob: -3.6726901531219482
    4. 'k' → logprob: -3.7976901531219482
    5. 'd' → logprob: -3.9226901531219482
    6. ' k' → logprob: -4.547689914703369
    7. ' p' → logprob: -5.172689914703369
    8. 'p' → logprob: -5.672689914703369
    9. 'x' → logprob: -6.297689914703369
    10. 'a' → logprob: -6.672689914703369

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009965846315026283
    2. 'in' → logprob: -4.634965896606445
    3. ' ' → logprob: -8.509965896606445
    4. ',' → logprob: -12.884965896606445
    5. '	in' → logprob: -13.509965896606445
    6. '2' → logprob: -14.509965896606445
    7. '  ' → logprob: -14.634965896606445
    8. '   ' → logprob: -14.884965896606445
    9. 'range' → logprob: -14.884965896606445
    10. '1' → logprob: -15.009965896606445

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007612066809087992
    2. 'range' → logprob: -4.882612228393555
    3. '	range' → logprob: -12.507612228393555
    4. ' ' → logprob: -14.007612228393555
    5. '(range' → logprob: -14.257612228393555
    6. '   ' → logprob: -15.507612228393555
    7. '[' → logprob: -16.007612228393555
    8. '  ' → logprob: -16.132612228393555
    9. ' ' → logprob: -16.382612228393555
    10. '2' → logprob: -16.882612228393555

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.4272752852994017e-05
    2. '(n' → logprob: -11.00002384185791
    3. '2' → logprob: -12.00002384185791
    4. ' (' → logprob: -14.00002384185791
    5. ' ' → logprob: -15.75002384185791
    6. '(int' → logprob: -16.000024795532227
    7. '(k' → logprob: -16.125024795532227
    8. 'n' → logprob: -16.500024795532227
    9. '1' → logprob: -17.250024795532227
    10. '(
' → logprob: -17.500024795532227

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002675418509170413
    2. '1' → logprob: -6.002675533294678
    3. 'n' → logprob: -9.37767505645752
    4. ' ' → logprob: -9.75267505645752
    5. '(' → logprob: -10.12767505645752
    6. ')' → logprob: -12.25267505645752
    7. '   ' → logprob: -13.00267505645752
    8. 'int' → logprob: -13.37767505645752
    9. '```' → logprob: -13.75267505645752
    10. '

' → logprob: -13.94017505645752

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031015423592180014
    2. ' ,' → logprob: -5.878101348876953
    3. ',n' → logprob: -8.128101348876953
    4. 'n' → logprob: -14.753101348876953
    5. ' ' → logprob: -15.378101348876953
    6. ',int' → logprob: -15.378101348876953
    7. '1' → logprob: -15.503101348876953
    8. ',k' → logprob: -15.753101348876953
    9. '   ' → logprob: -16.753101348876953
    10. '2' → logprob: -16.878101348876953

Token 87: ' int' (ID: 677)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37019258737564087
    2. 'int' → logprob: -1.245192527770996
    3. ' n' → logprob: -4.245192527770996
    4. ' int' → logprob: -4.995192527770996
    5. 'ans' → logprob: -8.620192527770996
    6. '   ' → logprob: -9.745192527770996
    7. '(int' → logprob: -10.120192527770996
    8. '(n' → logprob: -10.245192527770996
    9. '(' → logprob: -10.495192527770996
    10. ' ' → logprob: -11.120192527770996

Token 88: '(math' (ID: 86464)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3853149116039276
    2. '(math' → logprob: -1.38531494140625
    3. '(' → logprob: -2.76031494140625
    4. '((' → logprob: -5.13531494140625
    5. '(s' → logprob: -8.88531494140625
    6. ' (' → logprob: -9.01031494140625
    7. '(k' → logprob: -11.01031494140625
    8. '(ans' → logprob: -11.51031494140625
    9. '(m' → logprob: -11.63531494140625
    10. '(
' → logprob: -11.76031494140625

Token 89: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.07884461432695389
    2. '.' → logprob: -3.3288445472717285
    3. '(n' → logprob: -4.3288445472717285
    4. '.math' → logprob: -4.5788445472717285
    5. '(math' → logprob: -5.0788445472717285
    6. 's' → logprob: -5.5788445472717285
    7. 'sqrt' → logprob: -6.8288445472717285
    8. '```' → logprob: -6.8288445472717285
    9. ' .' → logprob: -7.2038445472717285
    10. '(s' → logprob: -7.2038445472717285

Token 90: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02085389383137226
    2. '(' → logprob: -3.8958539962768555
    3. 'n' → logprob: -8.520853996276855
    4. ' (' → logprob: -9.895853996276855
    5. '(k' → logprob: -10.020853996276855
    6. '(
' → logprob: -11.645853996276855
    7. '(ans' → logprob: -12.770853996276855
    8. '((' → logprob: -13.145853996276855
    9. ' n' → logprob: -13.645853996276855
    10. ')' → logprob: -14.395853996276855

Token 91: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07793287932872772
    2. '(n' → logprob: -3.077932834625244
    3. '(' → logprob: -3.952932834625244
    4. ')+' → logprob: -4.702932834625244
    5. '+' → logprob: -8.452933311462402
    6. 'n' → logprob: -8.577933311462402
    7. ' )' → logprob: -9.202933311462402
    8. '(k' → logprob: -10.327933311462402
    9. '))' → logprob: -10.702933311462402
    10. ' +' → logprob: -10.952933311462402

Token 92: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25164511799812317
    2. '+' → logprob: -1.6266450881958008
    3. '(' → logprob: -4.251645088195801
    4. '(n' → logprob: -4.751645088195801
    5. ')' → logprob: -6.751645088195801
    6. ')+' → logprob: -6.876645088195801
    7. ' +
' → logprob: -8.6266450881958
    8. ' ' → logprob: -9.0016450881958
    9. '()+' → logprob: -9.0016450881958
    10. ' (' → logprob: -9.2516450881958

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1929754614830017
    2. ' ' → logprob: -2.0679755210876465
    3. '(n' → logprob: -3.6929755210876465
    4. '+' → logprob: -5.3179755210876465
    5. '(' → logprob: -5.4429755210876465
    6. ')' → logprob: -5.5679755210876465
    7. ' k' → logprob: -5.9429755210876465
    8. ' (' → logprob: -6.0679755210876465
    9. ' +' → logprob: -6.3179755210876465
    10. ' n' → logprob: -6.5679755210876465

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0265523549169302
    2. '(' → logprob: -4.151552200317383
    3. '(n' → logprob: -5.151552200317383
    4. '2' → logprob: -5.651552200317383
    5. '+' → logprob: -8.026552200317383
    6. '(k' → logprob: -8.151552200317383
    7. ')' → logprob: -8.526552200317383
    8. ' ' → logprob: -9.026552200317383
    9. ' (' → logprob: -10.151552200317383
    10. '0' → logprob: -10.401552200317383

Token 95: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5933840274810791
    2. '):' → logprob: -0.8433840274810791
    3. '+' → logprob: -4.2183837890625
    4. '+:' → logprob: -6.5933837890625
    5. '):
' → logprob: -7.8433837890625
    6. ')' → logprob: -8.5933837890625
    7. ' :' → logprob: -8.8433837890625
    8. ' +' → logprob: -9.0933837890625
    9. ',' → logprob: -9.5933837890625
    10. '   ' → logprob: -10.0933837890625

Token 96: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04013024643063545
    2. '   ' → logprob: -3.540130138397217
    3. ' ' → logprob: -5.540130138397217
    4. ':
' → logprob: -5.665130138397217
    5. '<|end|>' → logprob: -6.165130138397217
    6. ' if' → logprob: -8.540130615234375
    7. '<|end|>' → logprob: -8.915130615234375
    8. '  ' → logprob: -9.040130615234375
    9. '       ' → logprob: -9.290130615234375
    10. ' :' → logprob: -9.290130615234375

Token 97: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11232773959636688
    2. ':' → logprob: -2.987327814102173
    3. ' if' → logprob: -3.487327814102173
    4. '   ' → logprob: -4.487327575683594
    5. 'if' (adapté à ' if') → logprob: -5.362327575683594
    6. '    ' → logprob: -5.737327575683594
    7. '<|end|>' → logprob: -6.112327575683594
    8. ' :' → logprob: -6.487327575683594
    9. '  ' → logprob: -6.737327575683594
    10. '       ' → logprob: -7.487327575683594

Token 98: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07891082763671875
    2. 'n' → logprob: -2.5789108276367188
    3. '	n' → logprob: -11.203910827636719
    4. '   ' → logprob: -13.328910827636719
    5. '(n' → logprob: -13.453910827636719
    6. ' ' → logprob: -13.453910827636719
    7. ' (' → logprob: -14.453910827636719
    8. '_n' → logprob: -14.828910827636719
    9. ' is' → logprob: -14.953910827636719
    10. '[n' → logprob: -14.953910827636719

Token 99: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.033664602786302567
    2. '%' → logprob: -3.4086647033691406
    3. ' ' → logprob: -11.03366470336914
    4. ' ' → logprob: -13.78366470336914
    5. 'k' → logprob: -15.28366470336914
    6. ' %
' → logprob: -15.40866470336914
    7. '%n' → logprob: -15.53366470336914
    8. '```' → logprob: -15.53366470336914
    9. '%x' → logprob: -16.15866470336914
    10. ' k' → logprob: -16.15866470336914

Token 100: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010332842357456684
    2. ' k' → logprob: -6.876033306121826
    3. '	k' → logprob: -14.751032829284668
    4. ' ' → logprob: -17.126033782958984
    5. '{k' → logprob: -17.126033782958984
    6. '<|end|>' → logprob: -18.001033782958984
    7. '*k' → logprob: -18.501033782958984
    8. 'kx' → logprob: -18.626033782958984
    9. '(k' → logprob: -18.751033782958984
    10. ' к' → logprob: -18.876033782958984

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08901101350784302
    2. '==' → logprob: -2.4640109539031982
    3. '0' → logprob: -10.089011192321777
    4. ' ' → logprob: -11.339011192321777
    5. '=' → logprob: -11.589011192321777
    6. ' =' → logprob: -12.839011192321777
    7. ')==' → logprob: -12.839011192321777
    8. ')' → logprob: -13.839011192321777
    9. ' ' → logprob: -13.839011192321777
    10. '```' → logprob: -14.339011192321777

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756323881447315
    2. ' ' → logprob: -4.634756088256836
    3. 'k' → logprob: -15.509756088256836
    4. ' ' → logprob: -17.634756088256836
    5. '<|end|>' → logprob: -18.384756088256836
    6. '  ' → logprob: -18.509756088256836
    7. '```' → logprob: -18.509756088256836
    8. '۰' → logprob: -18.634756088256836
    9. '   ' → logprob: -18.634756088256836
    10. ' ' → logprob: -18.759756088256836

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۰' → logprob: -18.000009536743164
    4. 'k' → logprob: -19.625009536743164
    5. '00' → logprob: -20.250009536743164
    6. '```' → logprob: -20.250009536743164
    7. '０' → logprob: -20.375009536743164
    8. ' ' → logprob: -20.625009536743164
    9. '٠' → logprob: -20.750009536743164
    10. '=' → logprob: -21.000009536743164

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005678365007042885
    2. ':
' → logprob: -5.380678176879883
    3. ' and' → logprob: -7.005678176879883
    4. '):' → logprob: -10.255678176879883
    5. 'and' → logprob: -10.380678176879883
    6. '<|end|>' → logprob: -11.005678176879883
    7. '):
' → logprob: -11.380678176879883
    8. ' :' → logprob: -11.505678176879883
    9. '<|end|>' → logprob: -11.505678176879883
    10. ',' → logprob: -11.630678176879883

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.083612821996212
    2. '
' → logprob: -3.0836129188537598
    3. ' 
' → logprob: -3.8336129188537598
    4. ' ' → logprob: -5.45861291885376
    5. '        
' → logprob: -5.83361291885376
    6. '   ' → logprob: -6.33361291885376
    7. '<|end|>' → logprob: -6.70861291885376
    8. '    
' → logprob: -6.83361291885376
    9. ' if' → logprob: -8.583612442016602
    10. ':' → logprob: -8.583612442016602

Token 106: ' temp' (ID: 5484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09878839552402496
    2. '
' → logprob: -3.0987884998321533
    3. ' ans' → logprob: -3.5987884998321533
    4. ' 
' → logprob: -4.723788261413574
    5. 'if' → logprob: -4.848788261413574
    6. ' if' → logprob: -5.598788261413574
    7. '	ans' → logprob: -8.348788261413574
    8. 'n' → logprob: -8.473788261413574
    9. '(ans' → logprob: -8.848788261413574
    10. '   ' → logprob: -8.848788261413574

Token 107: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889661937952042
    2. '=' → logprob: -2.5788965225219727
    3. '_ans' → logprob: -12.953896522521973
    4. '_' → logprob: -13.703896522521973
    5. ',' → logprob: -14.078896522521973
    6. 'ans' → logprob: -14.328896522521973
    7. ' ' → logprob: -14.578896522521973
    8. 'k' → logprob: -15.078896522521973
    9. '=k' → logprob: -15.328896522521973
    10. '_val' → logprob: -15.953896522521973

Token 108: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7539087533950806
    2. 'ans' → logprob: -0.8789087533950806
    3. '=' → logprob: -2.253908634185791
    4. '_ans' → logprob: -4.753908634185791
    5. 'n' → logprob: -8.00390911102295
    6. 'a' → logprob: -9.62890911102295
    7. '	ans' → logprob: -9.87890911102295
    8. '1' → logprob: -10.00390911102295
    9. 'k' → logprob: -10.62890911102295
    10. 'answer' → logprob: -11.25390911102295

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693576514720917
    2. '=' → logprob: -2.1269357204437256
    3. ',' → logprob: -11.876935958862305
    4. ' ' → logprob: -15.501935958862305
    5. '=n' → logprob: -15.876935958862305
    6. '=k' → logprob: -16.251935958862305
    7. '=int' → logprob: -17.001935958862305
    8. ' =
' → logprob: -17.126935958862305
    9. '＝' → logprob: -17.251935958862305
    10. '_' → logprob: -17.251935958862305

Token 110: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03162424638867378
    2. ' k' → logprob: -4.0316243171691895
    3. 'n' → logprob: -4.4066243171691895
    4. ' n' → logprob: -6.9066243171691895
    5. 'ans' → logprob: -8.906623840332031
    6. ' ans' → logprob: -10.531623840332031
    7. 'int' → logprob: -12.156623840332031
    8. '(k' → logprob: -12.406623840332031
    9. '(n' → logprob: -13.281623840332031
    10. '(ans' → logprob: -13.406623840332031

Token 111: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.12728063762187958
    2. '//' → logprob: -2.3772807121276855
    3. ' -' → logprob: -4.3772807121276855
    4. '-' → logprob: -5.0022807121276855
    5. 'k' → logprob: -6.0022807121276855
    6. ' k' → logprob: -6.5022807121276855
    7. ' ' → logprob: -6.7522807121276855
    8. '-k' → logprob: -7.2522807121276855
    9. ' /' → logprob: -7.8772807121276855
    10. '/k' → logprob: -8.002280235290527

Token 112: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014176554046571255
    2. ' k' → logprob: -4.264176368713379
    3. '*k' → logprob: -11.389176368713379
    4. '	k' → logprob: -13.639176368713379
    5. '/k' → logprob: -15.514176368713379
    6. '2' → logprob: -16.514177322387695
    7. ' ' → logprob: -16.639177322387695
    8. '_k' → logprob: -16.764177322387695
    9. ',k' → logprob: -17.389177322387695
    10. '*' → logprob: -18.139177322387695

Token 113: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8463488817214966
    2. '<|end|>' → logprob: -1.0963488817214966
    3. ')' → logprob: -2.846348762512207
    4. '<|end|>' → logprob: -3.096348762512207
    5. '//' → logprob: -3.721348762512207
    6. '       ' → logprob: -4.096348762512207
    7. '**' → logprob: -4.221348762512207
    8. '0' → logprob: -4.971348762512207
    9. '#' → logprob: -5.096348762512207
    10. '```' → logprob: -5.221348762512207

Token 114: '       ' (ID: 309)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.0649899244308472
    2. '<|end|>' → logprob: -1.4399899244308472
    3. 'int' → logprob: -2.1899900436401367
    4. ')' → logprob: -2.6899900436401367
    5. '=' → logprob: -2.9399900436401367
    6. '<|end|>' → logprob: -3.3149900436401367
    7. '       ' → logprob: -3.4399900436401367
    8. 'temp' → logprob: -3.8149900436401367
    9. 'print' → logprob: -4.689990043640137
    10. '+' → logprob: -4.939990043640137

Token 115: ' temp' (ID: 5484)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12202458828687668
    2. '//' → logprob: -2.9970245361328125
    3. 'temp' (adapté à ' temp') → logprob: -4.2470245361328125
    4. '=' → logprob: -4.4970245361328125
    5. '+' → logprob: -5.1220245361328125
    6. '-' → logprob: -5.2470245361328125
    7. ')' → logprob: -5.2470245361328125
    8. 'if' → logprob: -5.4970245361328125
    9. '*' → logprob: -5.6220245361328125
    10. ' //' → logprob: -5.7470245361328125

Token 116: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.64970643306151e-05
    2. ' _' → logprob: -9.875086784362793
    3. '_
' → logprob: -12.000086784362793
    4. '_=' → logprob: -12.250086784362793
    5. '1' → logprob: -12.500086784362793
    6. 's' → logprob: -12.500086784362793
    7. '_

' → logprob: -13.125086784362793
    8. '<|end|>' → logprob: -13.125086784362793
    9. '=' → logprob: -13.250086784362793
    10. '_)' → logprob: -13.500086784362793

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5730642676353455
    2. 'k' → logprob: -0.9480642676353455
    3. '1' → logprob: -3.1980643272399902
    4. 'int' → logprob: -4.94806432723999
    5. ' k' → logprob: -9.198063850402832
    6. '/' → logprob: -9.323063850402832
    7. '<|end|>' → logprob: -9.573063850402832
    8. ' ' → logprob: -9.948063850402832
    9. '`' → logprob: -9.948063850402832
    10. '_' → logprob: -9.948063850402832

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858827963471413
    2. '=' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.173588752746582
    4. ',' → logprob: -16.548587799072266
    5. ' =
' → logprob: -16.923587799072266
    6. '＝' → logprob: -17.798587799072266
    7. 's' → logprob: -18.048587799072266
    8. ' =)' → logprob: -18.298587799072266
    9. ')' → logprob: -18.548587799072266
    10. ' =
' → logprob: -18.923587799072266

Token 119: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5323446393013
    2. 'k' → logprob: -1.0323445796966553
    3. ' n' → logprob: -3.1573445796966553
    4. 'n' → logprob: -4.282344818115234
    5. 'int' → logprob: -8.907344818115234
    6. ' ' → logprob: -10.282344818115234
    7. ' int' → logprob: -11.219844818115234
    8. ' ' → logprob: -11.407344818115234
    9. ' math' → logprob: -11.782344818115234
    10. '	k' → logprob: -12.282344818115234

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.492896556854248
    2. 'if' → logprob: -1.492896556854248
    3. ' if' → logprob: -1.742896556854248
    4. '+' → logprob: -1.992896556854248
    5. '<|end|>' → logprob: -2.492896556854248
    6. '       ' → logprob: -2.742896556854248
    7. ' ' → logprob: -3.992896556854248
    8. ' 
' → logprob: -4.367896556854248
    9. '*' → logprob: -4.617896556854248
    10. '           ' → logprob: -4.867896556854248

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.832313597202301
    2. '
' → logprob: -1.4573135375976562
    3. ' if' → logprob: -1.7073135375976562
    4. 'if' → logprob: -2.2073135375976562
    5. '<|end|>' → logprob: -4.082313537597656
    6. '   ' → logprob: -5.332313537597656
    7. '        
' → logprob: -5.332313537597656
    8. ' ' → logprob: -5.457313537597656
    9. ' 
' → logprob: -5.707313537597656
    10. '+' → logprob: -6.707313537597656

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6066896319389343
    2. ' if' → logprob: -1.106689691543579
    3. '
' → logprob: -2.356689691543579
    4. 'ans' → logprob: -4.106689453125
    5. '       ' → logprob: -5.606689453125
    6. ' 
' → logprob: -6.356689453125
    7. ' ans' → logprob: -6.481689453125
    8. '   ' → logprob: -6.481689453125
    9. '        
' → logprob: -6.981689453125
    10. 'for' → logprob: -7.231689453125

Token 123: ' temp' (ID: 5484)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7010546922683716
    2. ' n' → logprob: -1.3260546922683716
    3. ' temp' → logprob: -2.076054573059082
    4. 'ans' → logprob: -3.576054573059082
    5. 'temp' → logprob: -3.826054573059082
    6. ' int' → logprob: -3.826054573059082
    7. 'n' → logprob: -3.951054573059082
    8. ' (' → logprob: -4.451054573059082
    9. '(ans' → logprob: -5.201054573059082
    10. 'int' → logprob: -5.951054573059082

Token 124: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001772757968865335
    2. ' _' → logprob: -6.376772880554199
    3. '<|end|>' → logprob: -10.5017728805542
    4. 's' → logprob: -11.7517728805542
    5. '_
' → logprob: -11.7517728805542
    6. '._' → logprob: -12.0017728805542
    7. '_)' → logprob: -13.5017728805542
    8. '_n' → logprob: -13.5017728805542
    9. '```' → logprob: -13.6267728805542
    10. '_-' → logprob: -13.7517728805542

Token 125: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018936781212687492
    2. '1' → logprob: -4.018936634063721
    3. ' ' → logprob: -7.893936634063721
    4. ' _' → logprob: -8.018937110900879
    5. '2' → logprob: -10.268937110900879
    6. '-' → logprob: -10.518937110900879
    7. '<|end|>' → logprob: -11.768937110900879
    8. 's' → logprob: -12.893937110900879
    9. '_n' → logprob: -13.018937110900879
    10. '_)' → logprob: -13.518937110900879

Token 126: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.26915442943573
    2. '%' → logprob: -1.51915442943573
    3. ' <' → logprob: -4.5191545486450195
    4. ' ==' → logprob: -5.6441545486450195
    5. ' <=' → logprob: -7.2691545486450195
    6. '==' → logprob: -7.7691545486450195
    7. '<' → logprob: -8.01915454864502
    8. ' *' → logprob: -8.14415454864502
    9. '*' → logprob: -8.51915454864502
    10. '<int' → logprob: -8.51915454864502

Token 127: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.08937137573957443
    2. 'temp' → logprob: -2.4643714427948
    3. ' ' → logprob: -7.964371204376221
    4. '1' → logprob: -10.089371681213379
    5. '	temp' → logprob: -11.589371681213379
    6. 'int' → logprob: -11.714371681213379
    7. '(temp' → logprob: -12.089371681213379
    8. '_temp' → logprob: -12.089371681213379
    9. ' int' → logprob: -12.714371681213379
    10. '0' → logprob: -13.464371681213379

Token 128: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005264613428153098
    2. '1' → logprob: -7.875526428222656
    3. '<|end|>' → logprob: -9.500526428222656
    4. '2' → logprob: -10.125526428222656
    5. '_
' → logprob: -11.625526428222656
    6. '-' → logprob: -12.500526428222656
    7. '.' → logprob: -12.500526428222656
    8. '<|end|>' → logprob: -12.750526428222656
    9. ' _' → logprob: -13.250526428222656
    10. '_^(' → logprob: -13.250526428222656

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026304826140403748
    2. '1' → logprob: -3.6513047218322754
    3. '_' → logprob: -13.026305198669434
    4. '-' → logprob: -14.526305198669434
    5. '```' → logprob: -14.526305198669434
    6. 'k' → logprob: -15.276305198669434
    7. ' ' → logprob: -15.276305198669434
    8. '<|end|>' → logprob: -15.776305198669434
    9. '0' → logprob: -16.526304244995117
    10. '`' → logprob: -16.588804244995117

Token 130: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0710253044962883
    2. '<' → logprob: -2.6960253715515137
    3. ' ' → logprob: -7.446025371551514
    4. ' >' → logprob: -8.696024894714355
    5. ' <=' → logprob: -8.821024894714355
    6. '>' → logprob: -9.821024894714355
    7. '-' → logprob: -10.821024894714355
    8. '<=' → logprob: -10.946024894714355
    9. ' <
' → logprob: -11.071024894714355
    10. '<n' → logprob: -11.321024894714355

Token 131: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3868902921676636
    2. 'ans' → logprob: -1.1368902921676636
    3. '(ans' → logprob: -11.386890411376953
    4. '	ans' → logprob: -11.886890411376953
    5. '_ans' → logprob: -14.886890411376953
    6. 'n' → logprob: -15.386890411376953
    7. 'answer' → logprob: -15.636890411376953
    8. 'int' → logprob: -16.386890411376953
    9. '=' → logprob: -16.886890411376953
    10. ' ' → logprob: -17.011890411376953

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026909864973276854
    2. ':
' → logprob: -6.12769079208374
    3. ' :' → logprob: -7.75269079208374
    4. '):' → logprob: -10.002691268920898
    5. ' and' → logprob: -11.877691268920898
    6. ' :
' → logprob: -12.002691268920898
    7. '   ' → logprob: -12.752691268920898
    8. ':
' → logprob: -13.127691268920898
    9. '       ' → logprob: -13.252691268920898
    10. '=' → logprob: -13.502691268920898

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2368556708097458
    2. '       ' → logprob: -1.6118556261062622
    3. '               ' → logprob: -4.986855506896973
    4. '   ' → logprob: -6.486855506896973
    5. '	       ' → logprob: -7.111855506896973
    6. '        ' → logprob: -7.736855506896973
    7. ' ans' → logprob: -8.236855506896973
    8. '          ' → logprob: -8.736855506896973
    9. '        
' → logprob: -8.986855506896973
    10. '            ' → logprob: -9.361855506896973

Token 134: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.029896395280957222
    2. 'ans' (adapté à ' ans') → logprob: -3.5298964977264404
    3. '	ans' → logprob: -9.77989673614502
    4. ' 
' → logprob: -10.40489673614502
    5. '(ans' → logprob: -10.40489673614502
    6. '_ans' → logprob: -11.77989673614502
    7. 'Ans' → logprob: -11.90489673614502
    8. 'answer' → logprob: -12.15489673614502
    9. ' ' → logprob: -12.52989673614502
    10. '
' → logprob: -13.40489673614502

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153687939047813
    2. '=' → logprob: -4.018153667449951
    3. ' ' → logprob: -13.01815414428711
    4. ' =
' → logprob: -13.76815414428711
    5. '<|end|>' → logprob: -15.76815414428711
    6. ' =)' → logprob: -16.26815414428711
    7. ',' → logprob: -16.39315414428711
    8. '＝' → logprob: -16.89315414428711
    9. ')' → logprob: -17.39315414428711
    10. ' =
' → logprob: -17.51815414428711

Token 136: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.009312468580901623
    2. 'int' → logprob: -4.884312629699707
    3. ' temp' → logprob: -6.384312629699707
    4. ' int' → logprob: -12.134312629699707
    5. 'tmp' → logprob: -12.634312629699707
    6. '(temp' → logprob: -12.759312629699707
    7. '	temp' → logprob: -12.759312629699707
    8. '[temp' → logprob: -14.884312629699707
    9. 'n' → logprob: -15.009312629699707
    10. 'tem' → logprob: -15.009312629699707

Token 137: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.897412822581828e-05
    2. '_
' → logprob: -10.625068664550781
    3. '1' → logprob: -11.625068664550781
    4. ' _' → logprob: -12.125068664550781
    5. '_

' → logprob: -12.125068664550781
    6. '_k' → logprob: -12.500068664550781
    7. '2' → logprob: -12.875068664550781
    8. '._' → logprob: -13.250068664550781
    9. '​' → logprob: -13.375068664550781
    10. 'ans' → logprob: -13.375068664550781

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02983715571463108
    2. '_' → logprob: -3.529837131500244
    3. '2' → logprob: -9.529837608337402
    4. 'k' → logprob: -12.092337608337402
    5. ' ' → logprob: -13.654837608337402
    6. '۱' → logprob: -13.967337608337402
    7. '１' → logprob: -14.029837608337402
    8. 'i' → logprob: -14.342337608337402
    9. '' → logprob: -14.529837608337402
    10. '```' → logprob: -15.154837608337402

Token 139: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.12696287035942078
    2. 'temp' → logprob: -2.126962900161743
    3. ' k' → logprob: -10.876962661743164
    4. 'k' → logprob: -11.251962661743164
    5. '(temp' → logprob: -13.376962661743164
    6. '	temp' → logprob: -15.376962661743164
    7. 'tmp' → logprob: -15.501962661743164
    8. ' tmp' → logprob: -15.626962661743164
    9. ' ' → logprob: -15.751962661743164
    10. '[temp' → logprob: -15.876962661743164

Token 141: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.931863051955588e-05
    2. '2' → logprob: -9.750059127807617
    3. '<|end|>' → logprob: -14.875059127807617
    4. '₂' → logprob: -15.625059127807617
    5. '-' → logprob: -16.500059127807617
    6. ' _' → logprob: -16.750059127807617
    7. '_k' → logprob: -17.000059127807617
    8. '_
' → logprob: -17.125059127807617
    9. '1' → logprob: -17.500059127807617
    10. ' ' → logprob: -18.250059127807617

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.233804303221405e-05
    2. 'k' → logprob: -9.625092506408691
    3. '_' → logprob: -11.125092506408691
    4. '<|end|>' → logprob: -11.750092506408691
    5. '1' → logprob: -13.500092506408691
    6. '₂' → logprob: -14.250092506408691
    7. '_k' → logprob: -14.750092506408691
    8. '۲' → logprob: -15.000092506408691
    9. ' ' → logprob: -15.625092506408691
    10. ' k' → logprob: -15.750092506408691

Token 143: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005632805987261236
    2. '
' → logprob: -7.750563144683838
    3. ' print' → logprob: -9.500563621520996
    4. ')' → logprob: -10.125563621520996
    5. '```' → logprob: -12.250563621520996
    6. ')
' → logprob: -12.625563621520996
    7. '

' → logprob: -12.875563621520996
    8. '    
' → logprob: -13.750563621520996
    9. '  
' → logprob: -14.125563621520996
    10. '
' → logprob: -14.250563621520996

Token 145: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2020803540945053
    2. '(' → logprob: -1.9520803689956665
    3. '(ans' → logprob: -3.202080249786377
    4. 'int' → logprob: -8.827080726623535
    5. '(math' → logprob: -9.452080726623535
    6. '(round' → logprob: -9.827080726623535
    7. 'ans' → logprob: -11.827080726623535
    8. '('' → logprob: -12.077080726623535
    9. ' (' → logprob: -12.202080726623535
    10. '()' → logprob: -12.452080726623535

Token 146: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0001817297888919711
    2. '(' → logprob: -8.625182151794434
    3. ' (' → logprob: -14.000182151794434
    4. 'ans' → logprob: -14.500182151794434
    5. ')' → logprob: -15.375182151794434
    6. '(abs' → logprob: -15.625182151794434
    7. '(answer' → logprob: -15.750182151794434
    8. '(
' → logprob: -16.000181198120117
    9. '(round' → logprob: -16.625181198120117
    10. '	ans' → logprob: -17.000181198120117

Token 147: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. '))' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.375019073486328
    4. ')`' → logprob: -14.625019073486328
    5. '+' → logprob: -14.875019073486328
    6. ')
' → logprob: -16.250019073486328
    7. ')))' → logprob: -16.500019073486328
    8. ')}' → logprob: -16.875019073486328
    9. '())' → logprob: -17.750019073486328
    10. ')#' → logprob: -17.875019073486328

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03806525096297264
    2. ' ' → logprob: -3.288065195083618
    3. '2' → logprob: -10.788064956665039
    4. ')' → logprob: -13.163064956665039
    5. ' )' → logprob: -14.788064956665039
    6. ' ' → logprob: -16.03806495666504
    7. '   ' → logprob: -16.16306495666504
    8. '3' → logprob: -16.41306495666504
    9. '0' → logprob: -16.66306495666504
    10. ' k' → logprob: -17.28806495666504

Token 149: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001719923340715468
    2. '2' → logprob: -6.376719951629639
    3. ' ' → logprob: -11.00171947479248
    4. ')' → logprob: -15.12671947479248
    5. '0' → logprob: -15.37671947479248
    6. 'n' → logprob: -16.064220428466797
    7. '  ' → logprob: -16.564220428466797
    8. 'k' → logprob: -16.626720428466797
    9. '   ' → logprob: -16.626720428466797
    10. '3' → logprob: -16.689220428466797

Token 150: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.464347173576243e-05
    2. '))' → logprob: -10.37503433227539
    3. ' )' → logprob: -12.75003433227539
    4. ')`' → logprob: -15.75003433227539
    5. '+' → logprob: -15.87503433227539
    6. ')
' → logprob: -16.25003433227539
    7. ')))' → logprob: -16.37503433227539
    8. ')}' → logprob: -17.75003433227539
    9. '*' → logprob: -18.37503433227539
    10. '}' → logprob: -18.37503433227539


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 148
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 48.65%
Précision adaptée (1ère position): 49.32%
Précision (top 10): 88.51%
================================================================================
