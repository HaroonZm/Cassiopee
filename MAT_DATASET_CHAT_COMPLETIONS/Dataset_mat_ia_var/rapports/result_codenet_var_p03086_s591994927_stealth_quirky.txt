================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
chars = {'A', 'C', 'G', 'T'}

longest = 0
spot = 0
while spot < len(S):
    if S[spot] not in chars:
        spot += 1
        continue
    p = spot
    while p < len(S) and S[p] in chars:
        p += 1
    if (p - spot) > longest:
        longest = p - spot
    spot = p + 1 if p == spot else p

print(longest)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030806250870227814
    2. '('' → logprob: -6.50308084487915
    3. ''' → logprob: -7.25308084487915
    4. '()' → logprob: -8.003080368041992
    5. '"' → logprob: -8.378080368041992
    6. '(
' → logprob: -9.003080368041992
    7. '("("' → logprob: -9.628080368041992
    8. '`' → logprob: -10.003080368041992
    9. '(`' → logprob: -11.378080368041992
    10. '```' → logprob: -11.628080368041992

Token 4: 'chars' (ID: 46043)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013521935790777206
    2. '[' → logprob: -5.263522148132324
    3. '+' → logprob: -5.888522148132324
    4. '[::-' → logprob: -6.013522148132324
    5. '.strip' → logprob: -6.388522148132324
    6. '.split' → logprob: -8.138522148132324
    7. '.lower' → logprob: -8.263522148132324
    8. 'print' → logprob: -9.263522148132324
    9. '.upper' → logprob: -9.263522148132324
    10. '.count' → logprob: -9.388522148132324

Token 5: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34690865874290466
    2. '.' → logprob: -1.721908688545227
    3. '=' → logprob: -2.8469085693359375
    4. ''' → logprob: -4.0969085693359375
    5. 's' → logprob: -4.0969085693359375
    6. '(' → logprob: -4.8469085693359375
    7. '_' → logprob: -4.8469085693359375
    8. ' =' → logprob: -6.3469085693359375
    9. 'S' → logprob: -7.0969085693359375
    10. '[:]' → logprob: -7.0969085693359375

Token 6: ' {'' (ID: 11881)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6752544641494751
    2. ' set' → logprob: -1.300254464149475
    3. ' []' → logprob: -1.925254464149475
    4. 'list' → logprob: -3.6752543449401855
    5. ' {}' → logprob: -4.1752543449401855
    6. ' ' → logprob: -4.4252543449401855
    7. 'set' → logprob: -4.4252543449401855
    8. '[]' → logprob: -5.8002543449401855
    9. '{}' → logprob: -6.4252543449401855
    10. ' [' → logprob: -6.8002543449401855

Token 7: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8279048800468445
    2. ''' → logprob: -1.0779049396514893
    3. '}' → logprob: -2.3279049396514893
    4. 'A' → logprob: -3.4529049396514893
    5. 'S' → logprob: -4.32790470123291
    6. ''}' → logprob: -4.45290470123291
    7. '"' → logprob: -4.82790470123291
    8. ''A' → logprob: -5.32790470123291
    9. 's' → logprob: -5.57790470123291
    10. '_' → logprob: -5.57790470123291

Token 8: '',' (ID: 787)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.309780478477478
    2. '',' → logprob: -1.434780478477478
    3. ''}' → logprob: -3.9347805976867676
    4. ''' → logprob: -5.059780597686768
    5. '','' → logprob: -6.809780597686768
    6. '}' → logprob: -8.05978012084961
    7. 'B' → logprob: -8.80978012084961
    8. '':'' → logprob: -9.05978012084961
    9. ','' → logprob: -9.30978012084961
    10. '')' → logprob: -9.43478012084961

Token 9: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006029533687978983
    2. ' '' → logprob: -7.500602722167969
    3. ''S' → logprob: -10.750602722167969
    4. ''A' → logprob: -11.875602722167969
    5. ' ' → logprob: -12.125602722167969
    6. '"' → logprob: -12.500602722167969
    7. ''C' → logprob: -12.625602722167969
    8. ''a' → logprob: -13.000602722167969
    9. ''T' → logprob: -14.125602722167969
    10. '',' → logprob: -14.250602722167969

Token 10: 'C' (ID: 34)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7115030884742737
    2. 'C' → logprob: -1.461503028869629
    3. ''' → logprob: -2.336503028869629
    4. 'G' → logprob: -2.461503028869629
    5. 'Z' → logprob: -3.086503028869629
    6. 'T' → logprob: -3.211503028869629
    7. 'a' → logprob: -5.836503028869629
    8. ''C' → logprob: -6.086503028869629
    9. ''}' → logprob: -7.336503028869629
    10. ''T' → logprob: -7.711503028869629

Token 11: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.22841782867908478
    2. ',' → logprob: -1.6034178733825684
    3. ','' → logprob: -6.603417873382568
    4. ''' → logprob: -7.478417873382568
    5. '','' → logprob: -8.22841739654541
    6. ''T' → logprob: -8.35341739654541
    7. 'T' → logprob: -8.47841739654541
    8. 'G' → logprob: -9.10341739654541
    9. ' ,' → logprob: -9.10341739654541
    10. ',G' → logprob: -9.72841739654541

Token 12: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023890875279903412
    2. ' '' → logprob: -3.773890972137451
    3. ''GC' → logprob: -8.273890495300293
    4. ' G' → logprob: -8.898890495300293
    5. ''g' → logprob: -9.648890495300293
    6. 'G' → logprob: -10.023890495300293
    7. ''T' → logprob: -10.898890495300293
    8. ' ' → logprob: -11.398890495300293
    9. ' ,' → logprob: -11.398890495300293
    10. ''D' → logprob: -11.523890495300293

Token 13: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.010629544034600258
    2. ''' → logprob: -5.135629653930664
    3. 'T' → logprob: -5.385629653930664
    4. ''T' → logprob: -10.635629653930664
    5. '}' → logprob: -10.885629653930664
    6. '''' → logprob: -11.260629653930664
    7. ''}' → logprob: -11.510629653930664
    8. 'C' → logprob: -11.635629653930664
    9. 'A' → logprob: -12.260629653930664
    10. '')' → logprob: -13.135629653930664

Token 14: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.022129403427243233
    2. ''}' → logprob: -3.8971292972564697
    3. '}' → logprob: -6.897129535675049
    4. ''' → logprob: -8.14712905883789
    5. ',' → logprob: -9.14712905883789
    6. '','' → logprob: -9.52212905883789
    7. 'T' → logprob: -9.89712905883789
    8. ''T' → logprob: -10.52212905883789
    9. ','' → logprob: -11.14712905883789
    10. '')' → logprob: -12.02212905883789

Token 15: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.014626235701143742
    2. ' '' → logprob: -4.5146260261535645
    3. ''' → logprob: -5.6396260261535645
    4. ' ' → logprob: -12.014626502990723
    5. ' T' → logprob: -12.889626502990723
    6. 'T' → logprob: -13.014626502990723
    7. '',' → logprob: -13.014626502990723
    8. ''t' → logprob: -13.264626502990723
    9. ''U' → logprob: -13.764626502990723
    10. '’T' → logprob: -14.639626502990723

Token 16: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0051802704110741615
    2. ''T' → logprob: -5.380180358886719
    3. ''' → logprob: -7.505180358886719
    4. ''}' → logprob: -12.130180358886719
    5. ''t' → logprob: -13.380180358886719
    6. '}' → logprob: -14.380180358886719
    7. ' T' → logprob: -14.505180358886719
    8. '',' → logprob: -15.130180358886719
    9. '"T' → logprob: -15.380180358886719
    10. '''' → logprob: -15.630180358886719

Token 17: ''}

' (ID: 177722)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.31327852606773376
    2. '}' → logprob: -1.3132785558700562
    3. ''' → logprob: -11.813278198242188
    4. '}'' → logprob: -12.313278198242188
    5. '`}' → logprob: -13.688278198242188
    6. '"}' → logprob: -13.813278198242188
    7. '',' → logprob: -14.188278198242188
    8. '']' → logprob: -14.313278198242188
    9. ' '}' → logprob: -14.938278198242188
    10. ' }' → logprob: -15.313278198242188

Token 18: 'long' (ID: 8431)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7803378105163574
    2. ':' → logprob: -1.7803378105163574
    3. 'for' → logprob: -1.7803378105163574
    4. '.' → logprob: -3.1553378105163574
    5. 'i' → logprob: -3.4053378105163574
    6. '```' → logprob: -3.5303378105163574
    7. 'if' → logprob: -4.030337810516357
    8. ''' → logprob: -4.405337810516357
    9. '[i' → logprob: -4.655337810516357
    10. '_' → logprob: -4.780337810516357

Token 19: 'est' (ID: 376)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24444979429244995
    2. 'est' → logprob: -1.6194498538970947
    3. '_' → logprob: -4.244449615478516
    4. 'es' → logprob: -5.619449615478516
    5. '_e' → logprob: -8.619449615478516
    6. '=' → logprob: -8.619449615478516
    7. ' =' → logprob: -9.119449615478516
    8. 's' → logprob: -9.744449615478516
    9. '_
' → logprob: -9.869449615478516
    10. 'a' → logprob: -10.119449615478516

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.024604277219623e-05
    2. '_length' → logprob: -10.500040054321289
    3. '_len' → logprob: -11.750040054321289
    4. '_=' → logprob: -13.500040054321289
    5. '_count' → logprob: -13.625040054321289
    6. ' _' → logprob: -13.750040054321289
    7. '=' → logprob: -14.625040054321289
    8. ' =' → logprob: -16.25004005432129
    9. '_i' → logprob: -16.37504005432129
    10. '_l' → logprob: -17.00004005432129

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740808606147766
    2. ' ' → logprob: -0.9740808606147766
    3. '1' → logprob: -12.849081039428711
    4. ' ' → logprob: -14.349081039428711
    5. '000' → logprob: -16.09908103942871
    6. '_' → logprob: -16.34908103942871
    7. '  ' → logprob: -16.47408103942871
    8. '   ' → logprob: -17.03658103942871
    9. '100' → logprob: -17.09908103942871
    10. '"' → logprob: -17.22408103942871

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.8750581741333
    3. '''' → logprob: -12.5000581741333
    4. '1' → logprob: -13.8750581741333
    5. '""' → logprob: -14.0000581741333
    6. '"' → logprob: -15.0000581741333
    7. '-' → logprob: -15.3750581741333
    8. '[' → logprob: -15.5000581741333
    9. '[]' → logprob: -16.000059127807617
    10. ''' → logprob: -16.125059127807617

Token 23: '
' (ID: 198)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5039088726043701
    2. 'current' → logprob: -1.0039088726043701
    3. '_current' → logprob: -4.003909111022949
    4. '_' → logprob: -6.253909111022949
    5. 'count' → logprob: -6.253909111022949
    6. ',' → logprob: -6.378909111022949
    7. 'max' → logprob: -6.628909111022949
    8. ' max' → logprob: -7.003909111022949
    9. ' ' → logprob: -7.128909111022949
    10. 'curr' → logprob: -7.253909111022949

Token 24: 'spot' (ID: 22607)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.05249141901731491
    2. 'count' → logprob: -3.4274914264678955
    3. ' current' → logprob: -4.302491188049316
    4. 'max' → logprob: -5.927491188049316
    5. 'curr' → logprob: -6.552491188049316
    6. 'cur' → logprob: -8.052491188049316
    7. 'length' → logprob: -8.677491188049316
    8. 'cnt' → logprob: -8.802491188049316
    9. '_current' → logprob: -9.177491188049316
    10. 'start' → logprob: -9.552491188049316

Token 25: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27513834834098816
    2. '=' → logprob: -1.9001383781433105
    3. ' =' → logprob: -2.4001383781433105
    4. '_length' → logprob: -9.275137901306152
    5. 's' → logprob: -9.900137901306152
    6. ' ' → logprob: -10.775137901306152
    7. '_len' → logprob: -10.900137901306152
    8. '_i' → logprob: -11.150137901306152
    9. '_idx' → logprob: -11.275137901306152
    10. '_=' → logprob: -11.275137901306152

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5242519974708557
    2. ' ' → logprob: -0.8992519974708557
    3. ' -' → logprob: -6.899251937866211
    4. '-' → logprob: -9.149251937866211
    5. ' len' → logprob: -12.024251937866211
    6. 'len' → logprob: -12.649251937866211
    7. '1' → logprob: -13.274251937866211
    8. ' ' → logprob: -14.649251937866211
    9. ' None' → logprob: -14.649251937866211
    10. 's' → logprob: -15.649251937866211

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006734080612659454
    2. '-' → logprob: -5.0067338943481445
    3. ' ' → logprob: -11.131733894348145
    4. 'len' → logprob: -13.006733894348145
    5. ' -' → logprob: -13.506733894348145
    6. 'None' → logprob: -15.506733894348145
    7. '-length' → logprob: -15.881733894348145
    8. '""' → logprob: -17.38173484802246
    9. '-S' → logprob: -17.38173484802246
    10. '1' → logprob: -17.63173484802246

Token 28: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7843742370605469
    2. 'current' → logprob: -0.7843742370605469
    3. 'i' → logprob: -3.534374237060547
    4. ' for' → logprob: -3.784374237060547
    5. ' current' → logprob: -4.909374237060547
    6. 'max' → logprob: -5.159374237060547
    7. 'length' → logprob: -5.409374237060547
    8. '
' → logprob: -5.784374237060547
    9. '0' → logprob: -5.909374237060547
    10. ',' → logprob: -6.159374237060547

Token 29: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0174195766448975
    2. 'current' → logprob: -1.1424195766448975
    3. 'i' → logprob: -1.3924195766448975
    4. ' for' → logprob: -3.2674195766448975
    5. ' current' → logprob: -5.267419815063477
    6. 'curr' → logprob: -5.267419815063477
    7. 'n' → logprob: -5.517419815063477
    8. ' i' → logprob: -5.517419815063477
    9. 'max' → logprob: -5.642419815063477
    10. 'length' → logprob: -6.017419815063477

Token 30: ' spot' (ID: 10021)
  Prédit: ' spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spot' → logprob: -0.005973946303129196
    2. 'spot' → logprob: -5.380973815917969
    3. ' len' → logprob: -7.630973815917969
    4. ' i' → logprob: -7.630973815917969
    5. ' ' → logprob: -8.255973815917969
    6. 'i' → logprob: -10.380973815917969
    7. ' not' → logprob: -10.880973815917969
    8. 'Spot' → logprob: -11.505973815917969
    9. ' True' → logprob: -11.630973815917969
    10. 'len' → logprob: -11.755973815917969

Token 31: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00867484975606203
    2. '<' → logprob: -4.758674621582031
    3. '<len' → logprob: -10.258674621582031
    4. ' ' → logprob: -10.883674621582031
    5. '<n' → logprob: -12.383674621582031
    6. '<size' → logprob: -14.133674621582031
    7. '+' → logprob: -14.883674621582031
    8. ' <=' → logprob: -15.508674621582031
    9. ' <
' → logprob: -15.758674621582031
    10. '<int' → logprob: -16.38367462158203

Token 32: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.038043100386857986
    2. ' len' → logprob: -3.2880430221557617
    3. '(len' → logprob: -13.663043022155762
    4. '=len' → logprob: -15.413043022155762
    5. '<len' → logprob: -16.413043975830078
    6. '	len' → logprob: -17.163043975830078
    7. '[len' → logprob: -17.163043975830078
    8. 'n' → logprob: -17.913043975830078
    9. ',len' → logprob: -18.038043975830078
    10. '100' → logprob: -18.163043975830078

Token 33: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.014168561436235905
    2. '(' → logprob: -4.264168739318848
    3. '(s' → logprob: -13.014168739318848
    4. 'S' → logprob: -13.014168739318848
    5. ' (' → logprob: -14.764168739318848
    6. '(
' → logprob: -16.13916778564453
    7. 's' → logprob: -17.13916778564453
    8. '('' → logprob: -18.01416778564453
    9. '()' → logprob: -18.13916778564453
    10. ')' → logprob: -18.26416778564453

Token 34: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011523677036166191
    2. ')' → logprob: -5.011523723602295
    3. 'and' → logprob: -5.386523723602295
    4. '):
' → logprob: -9.136523246765137
    5. '):' → logprob: -9.636523246765137
    6. ' )' → logprob: -10.761523246765137
    7. ' ' → logprob: -11.011523246765137
    8. ':' → logprob: -12.511523246765137
    9. '   ' → logprob: -13.511523246765137
    10. ':
' → logprob: -14.136523246765137

Token 35: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4480823278427124
    2. '   ' → logprob: -1.5730823278427124
    3. ' ' → logprob: -2.198082447052002
    4. 'if' → logprob: -4.448082447052002
    5. '    ' → logprob: -5.073082447052002
    6. ' 
' → logprob: -5.073082447052002
    7. '    
' → logprob: -5.823082447052002
    8. ' i' → logprob: -5.823082447052002
    9. ' c' → logprob: -6.198082447052002
    10. 'i' → logprob: -6.323082447052002

Token 36: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23628000915050507
    2. 'if' (adapté à ' if') → logprob: -1.7362799644470215
    3. '   ' → logprob: -3.7362799644470215
    4. 'i' → logprob: -6.1112799644470215
    5. ' current' → logprob: -6.4862799644470215
    6. ' i' → logprob: -6.7362799644470215
    7. 'count' → logprob: -6.9862799644470215
    8. '```' → logprob: -7.1112799644470215
    9. 'current' → logprob: -7.2362799644470215
    10. '    ' → logprob: -7.2362799644470215

Token 37: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3868771195411682
    2. 'S' → logprob: -1.1368770599365234
    3. ' ' → logprob: -12.636877059936523
    4. ' ' → logprob: -13.261877059936523
    5. 's' → logprob: -14.511877059936523
    6. ')' → logprob: -16.136877059936523
    7. '(S' → logprob: -16.261877059936523
    8. ' not' → logprob: -16.386877059936523
    9. 'not' → logprob: -17.011877059936523
    10. '	S' → logprob: -17.011877059936523

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012892624363303185
    2. ' ' → logprob: -9.750128746032715
    3. ' in' → logprob: -9.875128746032715
    4. 'in' → logprob: -11.500128746032715
    5. ' [' → logprob: -12.875128746032715
    6. '```' → logprob: -12.875128746032715
    7. ' not' → logprob: -13.500128746032715
    8. ')' → logprob: -14.250128746032715
    9. '[
' → logprob: -14.750128746032715
    10. '[in' → logprob: -15.000128746032715

Token 39: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -7.107425062713446e-06
    2. ' spot' → logprob: -12.000006675720215
    3. '[' → logprob: -14.125006675720215
    4. 'spo' → logprob: -16.37500762939453
    5. 'Spot' → logprob: -17.12500762939453
    6. 'sp' → logprob: -17.87500762939453
    7. ' ' → logprob: -18.00000762939453
    8. '```' → logprob: -18.12500762939453
    9. 's' → logprob: -18.62500762939453
    10. ')' → logprob: -19.12500762939453

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41894933581352234
    2. ' not' → logprob: -1.7939493656158447
    3. ' in' → logprob: -1.9189493656158447
    4. '}' → logprob: -4.543949127197266
    5. ' ]' → logprob: -5.418949127197266
    6. ')' → logprob: -5.543949127197266
    7. 'in' → logprob: -5.543949127197266
    8. ' ' → logprob: -5.918949127197266
    9. 'not' → logprob: -6.168949127197266
    10. '']' → logprob: -6.793949127197266

Token 41: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4546188712120056
    2. ' in' → logprob: -1.0796189308166504
    3. 'in' → logprob: -3.8296189308166504
    4. ' ' → logprob: -6.20461893081665
    5. 'not' → logprob: -6.32961893081665
    6. ')' → logprob: -10.454618453979492
    7. ' i' → logprob: -11.329618453979492
    8. ' ' → logprob: -11.829618453979492
    9. ' no' → logprob: -12.579618453979492
    10. ' n' → logprob: -12.704618453979492

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14308488368988037
    2. ' ' → logprob: -3.01808500289917
    3. 'in' → logprob: -3.14308500289917
    4. '<|end|>' → logprob: -3.26808500289917
    5. '<|end|>' → logprob: -6.26808500289917
    6. ')' → logprob: -8.018084526062012
    7. ' to' → logprob: -8.393084526062012
    8. ' a' → logprob: -9.143084526062012
    9. 'to' → logprob: -9.830584526062012
    10. ' not' → logprob: -9.955584526062012

Token 43: ' chars' (ID: 47991)
  Prédit: ' chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.07902087271213531
    2. 'chars' → logprob: -2.5790209770202637
    3. '(chars' → logprob: -9.204020500183105
    4. '_chars' → logprob: -10.704020500183105
    5. ''' → logprob: -12.579020500183105
    6. ' ' → logprob: -13.829020500183105
    7. ' {'' → logprob: -13.954020500183105
    8. ' '' → logprob: -14.329020500183105
    9. ' characters' → logprob: -14.579020500183105
    10. 'Chars' → logprob: -14.954020500183105

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.159660890465602e-05
    2. ' :' → logprob: -10.50007152557373
    3. ':
' → logprob: -10.87507152557373
    4. '):' → logprob: -11.00007152557373
    5. '   ' → logprob: -13.12507152557373
    6. '       ' → logprob: -13.12507152557373
    7. ':return' → logprob: -13.62507152557373
    8. ')' → logprob: -14.00007152557373
    9. ':**' → logprob: -14.25007152557373
    10. '    ' → logprob: -14.50007152557373

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06602649390697479
    2. '   ' → logprob: -2.816026449203491
    3. '    ' → logprob: -5.81602668762207
    4. '        
' → logprob: -8.31602668762207
    5. '    
' → logprob: -8.31602668762207
    6. '```' → logprob: -8.94102668762207
    7. '     ' → logprob: -9.19102668762207
    8. ' spot' → logprob: -9.94102668762207
    9. '      ' → logprob: -10.19102668762207
    10. '+' → logprob: -10.19102668762207

Token 46: ' spot' (ID: 10021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9282950162887573
    2. ' spot' → logprob: -1.1782950162887573
    3. 'spot' (adapté à ' spot') → logprob: -1.4282950162887573
    4. '   ' → logprob: -2.928295135498047
    5. '           ' → logprob: -6.303295135498047
    6. '```' → logprob: -7.303295135498047
    7. '
' → logprob: -7.803295135498047
    8. '        
' → logprob: -8.678295135498047
    9. ' long' → logprob: -9.053295135498047
    10. 'long' → logprob: -9.053295135498047

Token 47: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.038152918219566345
    2. '+=' → logprob: -3.2881529331207275
    3. '+' → logprob: -9.788152694702148
    4. ' =' → logprob: -10.538152694702148
    5. '=' → logprob: -10.663152694702148
    6. ' +' → logprob: -13.038152694702148
    7. ' ' → logprob: -13.538152694702148
    8. ']+=' → logprob: -13.663152694702148
    9. '+='' → logprob: -15.163152694702148
    10. '1' → logprob: -15.913152694702148

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '```' → logprob: -18.500003814697266
    5. '１' → logprob: -19.500003814697266
    6. '+' → logprob: -19.750003814697266
    7. '  ' → logprob: -20.000003814697266
    8. '    ' → logprob: -20.500003814697266
    9. '﻿' → logprob: -21.250003814697266
    10. '१' → logprob: -21.500003814697266

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '146' → logprob: -16.5
    3. ' ' → logprob: -16.625
    4. '116' → logprob: -18.25
    5. '```' → logprob: -19.125
    6. '14' → logprob: -19.25
    7. '186' → logprob: -19.375
    8. '11' → logprob: -19.5
    9. '149' → logprob: -19.875
    10. '147' → logprob: -19.875

Token 50: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12387383729219437
    2. 'continue' → logprob: -2.6238739490509033
    3. '   ' → logprob: -3.4988739490509033
    4. 'else' → logprob: -4.873873710632324
    5. ' continue' → logprob: -5.873873710632324
    6. '```' → logprob: -6.498873710632324
    7. '
' → logprob: -7.498873710632324
    8. '	continue' → logprob: -7.498873710632324
    9. ' ' → logprob: -8.873873710632324
    10. ' else' → logprob: -8.998873710632324

Token 51: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23375867307186127
    2. '       ' → logprob: -2.3587586879730225
    3. '   ' → logprob: -2.4837586879730225
    4. ' else' → logprob: -3.6087586879730225
    5. '```' → logprob: -5.858758449554443
    6. 'continue' → logprob: -8.483758926391602
    7. '	else' → logprob: -9.358758926391602
    8. '``' → logprob: -10.108758926391602
    9. ' ' → logprob: -10.483758926391602
    10. '
' → logprob: -10.483758926391602

Token 52: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.04311292618513107
    2. '       ' → logprob: -3.2931129932403564
    3. ' continue' → logprob: -5.418112754821777
    4. 'contin' → logprob: -8.043112754821777
    5. '   ' → logprob: -8.793112754821777
    6. 'continu' → logprob: -9.793112754821777
    7. '	continue' → logprob: -10.168112754821777
    8. 'cont' → logprob: -10.418112754821777
    9. '```' → logprob: -11.918112754821777
    10. '_continue' → logprob: -11.918112754821777

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18633130192756653
    2. '
' → logprob: -2.686331272125244
    3. 'count' → logprob: -3.436331272125244
    4. '    
' → logprob: -3.811331272125244
    5. 'current' → logprob: -4.436331272125244
    6. 'length' → logprob: -4.811331272125244
    7. 'long' → logprob: -5.561331272125244
    8. 'start' → logprob: -5.686331272125244
    9. 'temp' → logprob: -5.811331272125244
    10. '```' → logprob: -6.061331272125244

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5659721493721008
    2. 'count' → logprob: -1.440972089767456
    3. 'current' → logprob: -2.940972089767456
    4. '```' → logprob: -3.065972089767456
    5. 'length' → logprob: -3.565972089767456
    6. 'long' → logprob: -4.440972328186035
    7. 'spot' → logprob: -4.440972328186035
    8. 'start' → logprob: -4.690972328186035
    9. '``' → logprob: -5.315972328186035
    10. 'end' → logprob: -5.565972328186035

Token 55: ' p' (ID: 275)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6866925358772278
    2. 'end' → logprob: -1.686692476272583
    3. '   ' → logprob: -2.186692476272583
    4. 'length' → logprob: -2.436692476272583
    5. 'current' → logprob: -2.811692476272583
    6. 'start' → logprob: -3.561692476272583
    7. 'temp' → logprob: -4.936692714691162
    8. 'curr' → logprob: -5.686692714691162
    9. 'run' → logprob: -6.186692714691162
    10. 'next' → logprob: -6.436692714691162

Token 56: ' =' (ID: 314)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.5816294550895691
    2. 'rev' → logprob: -1.7066295146942139
    3. 'oint' → logprob: -1.7066295146942139
    4. 'r' → logprob: -4.081629276275635
    5. 't' → logprob: -4.581629276275635
    6. 'osition' → logprob: -4.831629276275635
    7. 'ot' → logprob: -4.956629276275635
    8. 'lace' → logprob: -5.081629276275635
    9. 'otential' → logprob: -5.831629276275635
    10. 'l' → logprob: -5.956629276275635

Token 57: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.06995332986116409
    2. ' spot' → logprob: -2.694953441619873
    3. ' ' → logprob: -11.944952964782715
    4. 'pot' → logprob: -12.069952964782715
    5. '1' → logprob: -13.569952964782715
    6. 'Spot' → logprob: -14.194952964782715
    7. '0' → logprob: -14.319952964782715
    8. 'point' → logprob: -15.319952964782715
    9. 'span' → logprob: -15.757452964782715
    10. '```' → logprob: -15.819952964782715

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.339500367641449
    2. 'while' → logprob: -1.3395004272460938
    3. ' while' → logprob: -3.9645004272460938
    4. '+' → logprob: -5.089500427246094
    5. '```' → logprob: -7.839500427246094
    6. 'p' → logprob: -9.464500427246094
    7. '	while' → logprob: -10.464500427246094
    8. ' +' → logprob: -10.464500427246094
    9. '    
' → logprob: -10.464500427246094
    10. 's' → logprob: -10.589500427246094

Token 60: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.034081071615219116
    2. ' while' → logprob: -3.784080982208252
    3. '   ' → logprob: -4.534080982208252
    4. '+' → logprob: -11.40908145904541
    5. '	while' → logprob: -11.65908145904541
    6. 'p' → logprob: -12.28408145904541
    7. 'count' → logprob: -12.40908145904541
    8. '```' → logprob: -13.03408145904541
    9. 'While' → logprob: -13.15908145904541
    10. '  ' → logprob: -13.40908145904541

Token 61: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20142677426338196
    2. ' p' → logprob: -1.7014267444610596
    3. ' ' → logprob: -12.32642650604248
    4. 'S' → logprob: -13.20142650604248
    5. '   ' → logprob: -13.32642650604248
    6. '(p' → logprob: -13.57642650604248
    7. '<p' → logprob: -13.70142650604248
    8. ' S' → logprob: -14.07642650604248
    9. ' spot' → logprob: -14.82642650604248
    10. ' ' → logprob: -14.82642650604248

Token 62: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3413902819156647
    2. '<' → logprob: -1.4663902521133423
    3. '<len' → logprob: -2.841390371322632
    4. '<p' → logprob: -9.466390609741211
    5. '+' → logprob: -10.716390609741211
    6. ' ' → logprob: -12.216390609741211
    7. '<n' → logprob: -12.716390609741211
    8. 'p' → logprob: -12.716390609741211
    9. 'len' → logprob: -13.091390609741211
    10. '<size' → logprob: -13.591390609741211

Token 63: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03804171830415726
    2. ' len' → logprob: -3.288041830062866
    3. '<len' → logprob: -16.288042068481445
    4. '(len' → logprob: -16.413042068481445
    5. '	len' → logprob: -16.663042068481445
    6. '=len' → logprob: -16.913042068481445
    7. '[len' → logprob: -18.163042068481445
    8. '   ' → logprob: -18.413042068481445
    9. ',len' → logprob: -18.538042068481445
    10. 'length' → logprob: -19.163042068481445

Token 64: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -1.8908587662735954e-05
    2. '(' → logprob: -11.125019073486328
    3. 'S' → logprob: -12.500019073486328
    4. ')' → logprob: -15.625019073486328
    5. '(s' → logprob: -16.625019073486328
    6. 's' → logprob: -16.750019073486328
    7. 'p' → logprob: -17.750019073486328
    8. '(
' → logprob: -17.750019073486328
    9. ' (' → logprob: -19.500019073486328
    10. '```' → logprob: -19.875019073486328

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00829446129500866
    2. ' and' → logprob: -5.008294582366943
    3. 'and' → logprob: -6.883294582366943
    4. ' )' → logprob: -7.508294582366943
    5. '   ' → logprob: -13.008294105529785
    6. ' ' → logprob: -14.508294105529785
    7. '')' → logprob: -14.633294105529785
    8. '）' → logprob: -14.883294105529785
    9. '`)' → logprob: -15.008294105529785
    10. '")' → logprob: -16.2582950592041

Token 66: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25192946195602417
    2. 'and' → logprob: -1.501929521560669
    3. ' ' → logprob: -15.00192928314209
    4. '   ' → logprob: -17.376930236816406
    5. 'p' → logprob: -17.751930236816406
    6. 'a' → logprob: -18.251930236816406
    7. ' и' → logprob: -18.501930236816406
    8. '	and' → logprob: -18.626930236816406
    9. ' ' → logprob: -18.626930236816406
    10. ')' → logprob: -19.001930236816406

Token 67: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.061970602720975876
    2. 'S' → logprob: -2.8119707107543945
    3. ' ' → logprob: -12.811970710754395
    4. ' ' → logprob: -16.436969757080078
    5. ' (' → logprob: -16.936969757080078
    6. '   ' → logprob: -17.061969757080078
    7. '	S' → logprob: -17.686969757080078
    8. '(S' → logprob: -17.686969757080078
    9. '  ' → logprob: -19.061969757080078
    10. '<|end|>' → logprob: -19.311969757080078

Token 68: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.0087516784551553e-05
    2. '[' → logprob: -11.62501049041748
    3. '[S' → logprob: -14.12501049041748
    4. '[P' → logprob: -15.25001049041748
    5. 'p' → logprob: -15.62501049041748
    6. '[
' → logprob: -17.500009536743164
    7. ' [' → logprob: -17.875009536743164
    8. '[q' → logprob: -18.500009536743164
    9. '```' → logprob: -18.625009536743164
    10. '<p' → logprob: -19.375009536743164

Token 69: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03433139994740486
    2. 'in' → logprob: -3.6593313217163086
    3. ']' → logprob: -5.034331321716309
    4. ')' → logprob: -6.784331321716309
    5. ' ' → logprob: -8.159331321716309
    6. '}' → logprob: -10.284331321716309
    7. ' ]' → logprob: -11.409331321716309
    8. '']' → logprob: -12.284331321716309
    9. '   ' → logprob: -12.659331321716309
    10. '```' → logprob: -12.784331321716309

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891997694969177
    2. 'in' → logprob: -2.5789198875427246
    3. ' ' → logprob: -10.578920364379883
    4. ')' → logprob: -13.828920364379883
    5. '   ' → logprob: -13.953920364379883
    6. ' i' → logprob: -14.578920364379883
    7. ' ' → logprob: -14.828920364379883
    8. '	in' → logprob: -14.828920364379883
    9. ' not' → logprob: -14.953920364379883
    10. ' p' → logprob: -15.328920364379883

Token 71: ' chars' (ID: 47991)
  Prédit: ' chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chars' → logprob: -0.0041028582490980625
    2. 'chars' → logprob: -5.50410270690918
    3. '(chars' → logprob: -10.75410270690918
    4. '_chars' → logprob: -13.00410270690918
    5. ' ' → logprob: -14.62910270690918
    6. 'Chars' → logprob: -15.12910270690918
    7. '<char' → logprob: -16.62910270690918
    8. ' characters' → logprob: -17.62910270690918
    9. ' char' → logprob: -17.75410270690918
    10. 'char' → logprob: -18.75410270690918

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008039417676627636
    2. ':
' → logprob: -4.883039474487305
    3. '):' → logprob: -8.633039474487305
    4. '   ' → logprob: -9.258039474487305
    5. ':p' → logprob: -9.633039474487305
    6. '):
' → logprob: -10.258039474487305
    7. '       ' → logprob: -10.508039474487305
    8. ' p' → logprob: -11.758039474487305
    9. 'p' → logprob: -12.133039474487305
    10. '[p' → logprob: -12.508039474487305

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04123922064900398
    2. ':' → logprob: -4.291239261627197
    3. '   ' → logprob: -4.541239261627197
    4. 'p' → logprob: -4.541239261627197
    5. ' p' → logprob: -5.791239261627197
    6. ':
' → logprob: -6.416239261627197
    7. '
' → logprob: -7.791239261627197
    8. '        
' → logprob: -9.916238784790039
    9. '           ' → logprob: -10.041238784790039
    10. ':p' → logprob: -10.291238784790039

Token 74: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.03746935725212097
    2. ' p' → logprob: -3.7874693870544434
    3. '       ' → logprob: -4.287469387054443
    4. '   ' → logprob: -8.037468910217285
    5. '           ' → logprob: -10.037468910217285
    6. ' ' → logprob: -11.787468910217285
    7. '	p' → logprob: -12.912468910217285
    8. '
' → logprob: -13.662468910217285
    9. '        
' → logprob: -14.162468910217285
    10. '<p' → logprob: -14.162468910217285

Token 75: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6211501955986023
    2. '+=' → logprob: -0.8711501955986023
    3. '+' → logprob: -3.121150255203247
    4. ' +' → logprob: -9.621150016784668
    5. '++' → logprob: -11.996150016784668
    6. '<|end|>' → logprob: -11.996150016784668
    7. '   ' → logprob: -12.246150016784668
    8. '+='' → logprob: -12.746150016784668
    9. '=' → logprob: -13.121150016784668
    10. ']+=' → logprob: -13.246150016784668

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.625431060791016
    4. '```' → logprob: -16.875431060791016
    5. '  ' → logprob: -18.500431060791016
    6. '<|end|>' → logprob: -18.625431060791016
    7. '+' → logprob: -18.875431060791016
    8. '       ' → logprob: -20.375431060791016
    9. '１' → logprob: -20.437931060791016
    10. '۱' → logprob: -20.500431060791016

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.750001907348633
    4. '<|end|>' → logprob: -20.562501907348633
    5. '１' → logprob: -21.062501907348633
    6. '۱' → logprob: -21.562501907348633
    7. '   ' → logprob: -21.687501907348633
    8. '`' → logprob: -21.812501907348633
    9. '+' → logprob: -22.000001907348633
    10. '१' → logprob: -22.250001907348633

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10229896008968353
    2. '   ' → logprob: -2.3522989749908447
    3. '    
' → logprob: -7.227298736572266
    4. '  
' → logprob: -7.227298736572266
    5. ' 
' → logprob: -8.352298736572266
    6. '
' → logprob: -8.852298736572266
    7. '   
' → logprob: -9.352298736572266
    8. '\n' → logprob: -9.352298736572266
    9. '```' → logprob: -10.727298736572266
    10. '<|end|>' → logprob: -11.352298736572266

Token 79: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09311233460903168
    2. ' 
' → logprob: -2.9681122303009033
    3. '   ' → logprob: -3.5931122303009033
    4. '  
' → logprob: -4.968112468719482
    5. '    
' → logprob: -6.343112468719482
    6. '   
' → logprob: -7.468112468719482
    7. 'long' → logprob: -7.718112468719482
    8. 'n' → logprob: -9.718111991882324
    9. ' ' → logprob: -10.218111991882324
    10. '```' → logprob: -10.718111991882324

Token 80: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7495203018188477
    2. 'long' → logprob: -0.9995203018188477
    3. '   ' → logprob: -1.9995203018188477
    4. '    
' → logprob: -4.624520301818848
    5. 'l' → logprob: -5.374520301818848
    6. ' 
' → logprob: -5.749520301818848
    7. 'length' → logprob: -6.124520301818848
    8. '  
' → logprob: -6.499520301818848
    9. '   
' → logprob: -7.624520301818848
    10. ' long' → logprob: -7.624520301818848

Token 81: ' (' (ID: 350)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0004941754741594195
    2. 'p' → logprob: -8.000494003295898
    3. ' (' → logprob: -9.500494003295898
    4. ' ' → logprob: -9.750494003295898
    5. '(p' → logprob: -10.750494003295898
    6. '   ' → logprob: -14.125494003295898
    7. '    ' → logprob: -14.250494003295898
    8. ' max' → logprob: -14.250494003295898
    9. ' ' → logprob: -14.375494003295898
    10. '(' → logprob: -14.750494003295898

Token 82: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5759656429290771
    2. ' p' → logprob: -0.8259656429290771
    3. '   ' → logprob: -11.325965881347656
    4. '(p' → logprob: -11.450965881347656
    5. ' (' → logprob: -13.200965881347656
    6. ' ' → logprob: -14.450965881347656
    7. '	p' → logprob: -14.700965881347656
    8. ')' → logprob: -15.200965881347656
    9. '    ' → logprob: -16.075965881347656
    10. ')p' → logprob: -16.075965881347656

Token 83: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25194066762924194
    2. '-' → logprob: -1.5019407272338867
    3. ' ' → logprob: -12.501940727233887
    4. ')' → logprob: -13.376940727233887
    5. ' -
' → logprob: -13.626940727233887
    6. '-token' → logprob: -13.626940727233887
    7. '<|end|>' → logprob: -13.751940727233887
    8. '-
' → logprob: -14.751940727233887
    9. '-stop' → logprob: -15.001940727233887
    10. '   ' → logprob: -15.251940727233887

Token 84: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.5759739279747009
    2. ' spot' → logprob: -0.8259739279747009
    3. ' ' → logprob: -11.575973510742188
    4. ' spotlight' → logprob: -12.325973510742188
    5. 'Spot' → logprob: -12.575973510742188
    6. '<|end|>' → logprob: -12.575973510742188
    7. '   ' → logprob: -12.700973510742188
    8. '    ' → logprob: -13.325973510742188
    9. ')' → logprob: -13.325973510742188
    10. '  ' → logprob: -14.075973510742188

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06129777431488037
    2. ' >' → logprob: -3.18629789352417
    3. '>' → logprob: -4.06129789352417
    4. ' )' → logprob: -7.56129789352417
    5. ')>' → logprob: -7.93629789352417
    6. ' ' → logprob: -10.561297416687012
    7. ' >
' → logprob: -14.936297416687012
    8. '   ' → logprob: -15.311297416687012
    9. '">' → logprob: -15.561297416687012
    10. '）' → logprob: -15.686297416687012

Token 86: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005984846968203783
    2. '>' → logprob: -5.130984783172607
    3. ' ' → logprob: -9.880985260009766
    4. ' >
' → logprob: -12.630985260009766
    5. ')' → logprob: -13.880985260009766
    6. ' >

' → logprob: -14.880985260009766
    7. ' >
' → logprob: -15.380985260009766
    8. ' ' → logprob: -17.255985260009766
    9. ')>' → logprob: -17.505985260009766
    10. '  ' → logprob: -17.505985260009766

Token 87: ' longest' (ID: 37511)
  Prédit: ' longest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longest' → logprob: -0.2014625519514084
    2. 'long' → logprob: -1.7014625072479248
    3. ' ' → logprob: -10.076462745666504
    4. 'Longest' → logprob: -12.576462745666504
    5. ' long' → logprob: -12.951462745666504
    6. '最长' → logprob: -14.076462745666504
    7. 'length' → logprob: -15.576462745666504
    8. '<long' → logprob: -16.326461791992188
    9. '(long' → logprob: -16.326461791992188
    10. '```' → logprob: -16.451461791992188

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.47757811343763e-05
    2. ':
' → logprob: -10.250044822692871
    3. ' :' → logprob: -12.250044822692871
    4. '=' → logprob: -13.125044822692871
    5. '):' → logprob: -14.000044822692871
    6. '<|end|>' → logprob: -15.250044822692871
    7. ':**' → logprob: -15.375044822692871
    8. '：' → logprob: -15.625044822692871
    9. '>' → logprob: -15.875044822692871
    10. ' =' → logprob: -15.875044822692871

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16260002553462982
    2. '<|end|>' → logprob: -2.287600040435791
    3. ' ' → logprob: -3.787600040435791
    4. ' longest' → logprob: -4.787600040435791
    5. 'long' → logprob: -5.287600040435791
    6. '        
' → logprob: -6.162600040435791
    7. ' 
' → logprob: -6.287600040435791
    8. '   ' → logprob: -6.412600040435791
    9. '<|end|>' → logprob: -6.662600040435791
    10. '1' → logprob: -6.912600040435791

Token 90: ' longest' (ID: 37511)
  Prédit: ' longest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longest' → logprob: -0.04429849982261658
    2. 'long' → logprob: -3.1692984104156494
    3. ' long' → logprob: -7.2942986488342285
    4. 'Longest' → logprob: -8.04429817199707
    5. '       ' → logprob: -8.91929817199707
    6. ' 
' → logprob: -9.66929817199707
    7. '_long' → logprob: -9.91929817199707
    8. '```' → logprob: -11.79429817199707
    9. '<long' → logprob: -11.91929817199707
    10. '
' → logprob: -12.04429817199707

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00035488870344124734
    2. '=' → logprob: -8.125354766845703
    3. ' ' → logprob: -9.750354766845703
    4. '<|end|>' → logprob: -16.125354766845703
    5. ' =
' → logprob: -16.750354766845703
    6. ',' → logprob: -16.750354766845703
    7. '_' → logprob: -16.875354766845703
    8. 's' → logprob: -17.000354766845703
    9. ' =)' → logprob: -17.000354766845703
    10. ' ="' → logprob: -17.375354766845703

Token 92: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.14508575201034546
    2. 'p' → logprob: -2.0200858116149902
    3. ' (' → logprob: -6.27008581161499
    4. '(p' → logprob: -7.64508581161499
    5. '(' → logprob: -10.395085334777832
    6. ' ' → logprob: -12.145085334777832
    7. ' ' → logprob: -14.645085334777832
    8. '	p' → logprob: -15.020085334777832
    9. '<p' → logprob: -16.02008628845215
    10. '   ' → logprob: -16.64508628845215

Token 93: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16026434302330017
    2. ' -' → logprob: -1.9102643728256226
    3. '<|end|>' → logprob: -11.035264015197754
    4. ' ' → logprob: -11.535264015197754
    5. '-stop' → logprob: -12.285264015197754
    6. '-span' → logprob: -12.910264015197754
    7. '-
' → logprob: -13.535264015197754
    8. ' -
' → logprob: -13.660264015197754
    9. '-step' → logprob: -14.285264015197754
    10. '-token' → logprob: -14.785264015197754

Token 94: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.10021518170833588
    2. ' spot' → logprob: -2.350215196609497
    3. '<|end|>' → logprob: -12.225214958190918
    4. ' ' → logprob: -13.475214958190918
    5. ' spotlight' → logprob: -14.725214958190918
    6. 'Spot' → logprob: -15.225214958190918
    7. 'sp' → logprob: -15.225214958190918
    8. 'stop' → logprob: -15.600214958190918
    9. '   ' → logprob: -15.725214958190918
    10. 'slot' → logprob: -15.975214958190918

Token 95: '
' (ID: 198)
  Prédit: ' spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spot' → logprob: -0.3518083691596985
    2. 'spot' → logprob: -2.1018083095550537
    3. '
' → logprob: -2.3518083095550537
    4. '   ' → logprob: -3.4768083095550537
    5. '       ' → logprob: -4.101808547973633
    6. ' 
' → logprob: -4.476808547973633
    7. ' ' → logprob: -4.601808547973633
    8. '    ' → logprob: -6.101808547973633
    9. '' → logprob: -6.476808547973633
    10. '        ' → logprob: -6.726808547973633

Token 96: '   ' (ID: 271)
  Prédit: ' spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spot' → logprob: -0.19952009618282318
    2. 'spot' → logprob: -2.6995201110839844
    3. '       ' → logprob: -2.8245201110839844
    4. '   ' → logprob: -2.9495201110839844
    5. '
' → logprob: -6.824520111083984
    6. '        ' → logprob: -8.574520111083984
    7. '    ' → logprob: -8.574520111083984
    8. ' 
' → logprob: -9.449520111083984
    9. 'Spot' → logprob: -9.449520111083984
    10. ' ' → logprob: -9.574520111083984

Token 97: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' (adapté à ' spot') → logprob: -0.00922873429954052
    2. ' spot' → logprob: -5.009228706359863
    3. '   ' → logprob: -6.009228706359863
    4. '```' → logprob: -10.884228706359863
    5. '       ' → logprob: -11.134228706359863
    6. 'Spot' → logprob: -12.509228706359863
    7. '    
' → logprob: -12.884228706359863
    8. '    ' → logprob: -12.884228706359863
    9. ' ' → logprob: -13.009228706359863
    10. '
' → logprob: -13.259228706359863

Token 98: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5800288319587708
    2. '+=' → logprob: -1.205028772354126
    3. ' +=' → logprob: -2.080028772354126
    4. '=' → logprob: -4.205029010772705
    5. ' =' → logprob: -8.080028533935547
    6. ' +' → logprob: -8.455028533935547
    7. '++' → logprob: -10.205028533935547
    8. '+='' → logprob: -11.455028533935547
    9. ' ' → logprob: -12.205028533935547
    10. '+="' → logprob: -12.580028533935547

Token 99: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024756586644798517
    2. ' p' → logprob: -6.002475738525391
    3. ''p' → logprob: -18.87747573852539
    4. '<p' → logprob: -20.25247573852539
    5. '_p' → logprob: -20.50247573852539
    6. '	p' → logprob: -20.87747573852539
    7. '$p' → logprob: -21.12747573852539
    8. ' ' → logprob: -21.37747573852539
    9. '```' → logprob: -22.00247573852539
    10. '+p' → logprob: -22.50247573852539

Token 100: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023480605334043503
    2. '
' → logprob: -3.7734806537628174
    3. ' print' → logprob: -8.773480415344238
    4. ' 
' → logprob: -10.148480415344238
    5. '  
' → logprob: -11.523480415344238
    6. '\n' → logprob: -11.773480415344238
    7. '
' → logprob: -12.148480415344238
    8. '<|end|>' → logprob: -12.398480415344238
    9. '```' → logprob: -12.898480415344238
    10. '#print' → logprob: -12.898480415344238

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023259920999407768
    2. '1' → logprob: -3.7732598781585693
    3. ' ' → logprob: -11.148260116577148
    4. '<|end|>' → logprob: -17.77326011657715
    5. '-' → logprob: -18.27326011657715
    6. '
' → logprob: -18.64826011657715
    7. '```' → logprob: -19.77326011657715
    8. '۰' → logprob: -20.14826011657715
    9. '  ' → logprob: -20.52326011657715
    10. '   ' → logprob: -20.52326011657715

Token 102: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324605919420719
    2. '1' → logprob: -3.7732460498809814
    3. ' ' → logprob: -14.773245811462402
    4. '-' → logprob: -16.52324676513672
    5. '<|end|>' → logprob: -16.52324676513672
    6. '۰' → logprob: -18.64824676513672
    7. '```' → logprob: -19.27324676513672
    8. '  ' → logprob: -19.77324676513672
    9. '
' → logprob: -19.89824676513672

Token 103: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6155796647071838
    2. 'S' → logprob: -0.9905796647071838
    3. ' p' → logprob: -3.115579605102539
    4. ' S' → logprob: -3.490579605102539
    5. 'spot' → logprob: -5.490579605102539
    6. '(p' → logprob: -5.615579605102539
    7. ' spot' → logprob: -6.240579605102539
    8. '(S' → logprob: -6.865579605102539
    9. 'False' → logprob: -7.240579605102539
    10. ' (' → logprob: -7.365579605102539

Token 105: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38946953415870667
    2. ' ==' → logprob: -2.014469623565674
    3. ' <' → logprob: -2.514469623565674
    4. '<' → logprob: -3.014469623565674
    5. '!=' → logprob: -3.639469623565674
    6. '<|end|>' → logprob: -4.014469623565674
    7. '<=' → logprob: -5.014469623565674
    8. ' !=' → logprob: -5.514469623565674
    9. ' <=' → logprob: -6.264469623565674
    10. ' ' → logprob: -7.514469623565674

Token 106: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.1603841632604599
    2. 'len' → logprob: -1.910384178161621
    3. ' spot' → logprob: -9.035384178161621
    4. ' len' → logprob: -11.910384178161621
    5. 'span' → logprob: -12.285384178161621
    6. 'slot' → logprob: -12.410384178161621
    7. 'Spot' → logprob: -12.910384178161621
    8. '0' → logprob: -13.035384178161621
    9. '```' → logprob: -13.035384178161621
    10. 'lot' → logprob: -13.160384178161621

Token 107: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10027966648340225
    2. ' else' → logprob: -2.3502795696258545
    3. '+' → logprob: -9.600279808044434
    4. '0' → logprob: -13.475279808044434
    5. '	else' → logprob: -13.600279808044434
    6. ' ' → logprob: -13.850279808044434
    7. '-' → logprob: -14.725279808044434
    8. '<|end|>' → logprob: -14.975279808044434
    9. '   ' → logprob: -15.225279808044434
    10. 'and' → logprob: -16.100278854370117

Token 108: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033546582562848926
    2. ' p' → logprob: -8.000335693359375
    3. '<p' → logprob: -19.500335693359375
    4. '<|end|>' → logprob: -20.500335693359375
    5. '	p' → logprob: -20.875335693359375
    6. ' ' → logprob: -21.000335693359375
    7. '.p' → logprob: -21.375335693359375
    8. '_p' → logprob: -21.500335693359375
    9. 'spot' → logprob: -21.750335693359375
    10. '   ' → logprob: -21.750335693359375

Token 109: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004651437979191542
    2. '
' → logprob: -5.3796515464782715
    3. ' print' → logprob: -10.879651069641113
    4. ' 
' → logprob: -12.379651069641113
    5. '  
' → logprob: -12.879651069641113
    6. 'pr' → logprob: -13.879651069641113
    7. '

' → logprob: -14.004651069641113
    8. '```' → logprob: -14.129651069641113
    9. '    
' → logprob: -14.504651069641113
    10. '
' → logprob: -14.504651069641113

Token 110: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5570885807392187e-05
    2. '
' → logprob: -12.500015258789062
    3. ' print' → logprob: -12.750015258789062
    4. 'pr' → logprob: -12.875015258789062
    5. ')' → logprob: -13.500015258789062
    6. '#' → logprob: -13.750015258789062
    7. '```' → logprob: -14.000015258789062
    8. 'prin' → logprob: -14.125015258789062
    9. 'pri' → logprob: -14.500015258789062
    10. '#print' → logprob: -14.625015258789062

Token 111: '(long' (ID: 22019)
  Prédit: '(long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(long' → logprob: -0.023271339014172554
    2. '(' → logprob: -3.773271322250366
    3. '(len' → logprob: -11.148271560668945
    4. '(Long' → logprob: -11.898271560668945
    5. '(max' → logprob: -13.148271560668945
    6. '(length' → logprob: -13.773271560668945
    7. '(l' → logprob: -15.398271560668945
    8. '()' → logprob: -15.398271560668945
    9. '('' → logprob: -15.648271560668945
    10. '((' → logprob: -15.898271560668945

Token 112: 'est' (ID: 376)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.16022992134094238
    2. 'est' → logprob: -1.9102299213409424
    3. 't' → logprob: -12.285229682922363
    4. 's' → logprob: -14.660229682922363
    5. 'thest' → logprob: -15.785229682922363
    6. 'sst' → logprob: -15.910229682922363
    7. ')' → logprob: -16.28523063659668
    8. 'nest' → logprob: -17.03523063659668
    9. 'gest' → logprob: -17.41023063659668
    10. 'rest' → logprob: -17.53523063659668

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -16.625
    4. ')`' → logprob: -17.75
    5. '')' → logprob: -19.75
    6. '）' → logprob: -20.25
    7. ')#' → logprob: -20.25
    8. '`)' → logprob: -20.375
    9. '))' → logprob: -20.375
    10. ')**' → logprob: -20.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 46
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 97
Précision stricte (1ère position): 41.44%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 87.39%
================================================================================
