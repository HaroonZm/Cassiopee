================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import partial

input = sys.stdin.readline

n, m = map(int, input().split())
p = list(map(lambda x: int(x) - 1, input().split()))

parent = list(range(n))
rank = [0] * n

def find(x):
    while x != parent[x]:
        parent[x] = parent[parent[x]]
        x = parent[x]
    return x

def unite(x, y):
    rx, ry = find(x), find(y)
    if rx == ry:
        return
    if rank[rx] < rank[ry]:
        parent[rx] = ry
    else:
        parent[ry] = rx
        if rank[rx] == rank[ry]:
            rank[rx] += 1

for _ in range(m):
    x, y = map(lambda v: int(v) - 1, input().split())
    unite(x, y)

print(sum(find(i) == find(p[i]) for i in range(n)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00688101164996624
    2. 'os' → logprob: -5.756881237030029
    3. ' math' → logprob: -6.881881237030029
    4. ' collections' → logprob: -7.256881237030029
    5. ' pathlib' → logprob: -7.756881237030029
    6. ' ' → logprob: -8.131880760192871
    7. ' typing' → logprob: -8.131880760192871
    8. ' datetime' → logprob: -9.006880760192871
    9. 'collections' → logprob: -9.256880760192871
    10. ' Py' → logprob: -9.256880760192871

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2277756780385971
    2. 'import' → logprob: -1.6027756929397583
    3. '.' → logprob: -6.727775573730469
    4. ' ' → logprob: -7.352775573730469
    5. '_import' → logprob: -7.977775573730469
    6. '_' → logprob: -9.477775573730469
    7. '	import' → logprob: -10.102775573730469
    8. '.import' → logprob: -11.102775573730469
    9. ' .' → logprob: -11.477775573730469
    10. '```' → logprob: -11.602775573730469

Token 6: ' partial' (ID: 13664)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6477278470993042
    2. ' wraps' → logprob: -1.0227278470993042
    3. 'partial' → logprob: -2.6477279663085938
    4. 'l' → logprob: -4.272727966308594
    5. ' l' → logprob: -4.272727966308594
    6. ' partial' → logprob: -4.647727966308594
    7. 'reduce' → logprob: -4.897727966308594
    8. 'cmp' → logprob: -7.772727966308594
    9. ' reduce' → logprob: -7.897727966308594
    10. 'cache' → logprob: -8.647727966308594

Token 7: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8982756733894348
    2. '.' → logprob: -1.27327561378479
    3. '(' → logprob: -2.14827561378479
    4. '\' → logprob: -2.52327561378479
    5. ' ' → logprob: -3.02327561378479
    6. ',' → logprob: -3.77327561378479
    7. '' → logprob: -4.148275852203369
    8. '\n' → logprob: -5.023275852203369
    9. '```' → logprob: -5.648275852203369
    10. '[' → logprob: -6.273275852203369

Token 8: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4208328425884247
    2. 'import' → logprob: -1.420832872390747
    3. '(' → logprob: -3.795832872390747
    4. '\' → logprob: -3.920832872390747
    5. '`' → logprob: -4.545832633972168
    6. 'd' → logprob: -4.795832633972168
    7. ',' → logprob: -4.920832633972168
    8. 'i' → logprob: -4.920832633972168
    9. '```' → logprob: -5.045832633972168
    10. '.' → logprob: -5.045832633972168

Token 9: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004056474717799574
    2. '()' → logprob: -8.500405311584473
    3. '=' → logprob: -10.000405311584473
    4. '```' → logprob: -10.125405311584473
    5. '.' → logprob: -10.500405311584473
    6. '(
' → logprob: -11.000405311584473
    7. '(

' → logprob: -11.750405311584473
    8. ')' → logprob: -11.750405311584473
    9. '(`' → logprob: -11.750405311584473
    10. '<|end|>' → logprob: -12.000405311584473

Token 10: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.573862612247467
    2. ' sys' → logprob: -1.3238625526428223
    3. 'input' → logprob: -1.9488625526428223
    4. ' input' → logprob: -4.198862552642822
    5. 'partial' → logprob: -4.823862552642822
    6. ' partial' → logprob: -5.448862552642822
    7. 'lambda' → logprob: -7.698862552642822
    8. ' lambda' → logprob: -8.44886302947998
    9. '=sys' → logprob: -11.19886302947998
    10. 'raw' → logprob: -11.32386302947998

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021447893232107162
    2. ' .' → logprob: -7.002144813537598
    3. '.stdin' → logprob: -7.377144813537598
    4. '.import' → logprob: -8.627144813537598
    5. '.input' → logprob: -8.877144813537598
    6. '.readline' → logprob: -9.002144813537598
    7. '.argv' → logprob: -10.377144813537598
    8. '.exit' → logprob: -10.502144813537598
    9. '.stdout' → logprob: -11.002144813537598
    10. '.get' → logprob: -11.377144813537598

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5241459608078003
    2. '.' → logprob: -1.1491459608078003
    3. '.read' → logprob: -2.39914608001709
    4. 'read' → logprob: -9.02414608001709
    5. '.readlines' → logprob: -10.39914608001709
    6. '.Read' → logprob: -10.39914608001709
    7. '```' → logprob: -11.02414608001709
    8. ' .' → logprob: -11.52414608001709
    9. '.write' → logprob: -11.77414608001709
    10. '.READ' → logprob: -12.89914608001709

Token 13: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41753682494163513
    2. '()' → logprob: -1.5425368547439575
    3. '(
' → logprob: -2.917536735534668
    4. '
' → logprob: -2.917536735534668
    5. '(

' → logprob: -4.667536735534668
    6. ')' → logprob: -5.667536735534668
    7. '

' → logprob: -6.042536735534668
    8. '()
' → logprob: -6.792536735534668
    9. '()

' → logprob: -7.292536735534668
    10. 'def' → logprob: -7.542536735534668

Token 14: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.273623526096344
    2. 'def' → logprob: -1.5236234664916992
    3. '()' → logprob: -4.398623466491699
    4. 'n' → logprob: -6.273623466491699
    5. '(
' → logprob: -6.523623466491699
    6. ')' → logprob: -6.898623466491699
    7. 'data' → logprob: -7.273623466491699
    8. 'print' → logprob: -7.398623466491699
    9. '(n' → logprob: -7.773623466491699
    10. 'if' → logprob: -8.0236234664917

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5350788831710815
    2. '=' → logprob: -1.0350788831710815
    3. ' ' → logprob: -3.285079002380371
    4. ',' → logprob: -4.160079002380371
    5. ')' → logprob: -5.660079002380371
    6. '.' → logprob: -7.160079002380371
    7. ' ,' → logprob: -7.910079002380371
    8. 's' → logprob: -8.285079002380371
    9. '=int' → logprob: -8.285079002380371
    10. '<|end|>' → logprob: -8.785079002380371

Token 16: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.49108946323394775
    2. 'm' → logprob: -0.9910894632339478
    3. ' ' → logprob: -4.616089344024658
    4. ' =' → logprob: -6.116089344024658
    5. ' input' → logprob: -6.241089344024658
    6. '=' → logprob: -6.616089344024658
    7. 'input' → logprob: -7.116089344024658
    8. ' k' → logprob: -8.116089820861816
    9. 'k' → logprob: -9.491089820861816
    10. 'space' → logprob: -9.491089820861816

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01479655783623457
    2. '=' → logprob: -4.264796733856201
    3. ',' → logprob: -7.514796733856201
    4. ' ' → logprob: -10.139796257019043
    5. ' ,' → logprob: -10.139796257019043
    6. '=input' → logprob: -12.514796257019043
    7. ')' → logprob: -13.139796257019043
    8. ' =
' → logprob: -14.014796257019043
    9. '<|end|>' → logprob: -14.389796257019043
    10. ' =",' → logprob: -15.014796257019043

Token 18: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023439502343535423
    2. 'map' → logprob: -3.773439407348633
    3. ' input' → logprob: -8.648439407348633
    4. 'input' → logprob: -11.023439407348633
    5. ' ' → logprob: -13.523439407348633
    6. ' list' → logprob: -15.023439407348633
    7. ' [' → logprob: -15.523439407348633
    8. '	map' → logprob: -16.398439407348633
    9. ' ' → logprob: -16.648439407348633
    10. '(map' → logprob: -16.648439407348633

Token 19: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05709945037961006
    2. '(int' → logprob: -3.0570993423461914
    3. '(lambda' → logprob: -5.307099342346191
    4. '(input' → logprob: -6.057099342346191
    5. '(str' → logprob: -6.807099342346191
    6. '(
' → logprob: -10.932099342346191
    7. '(list' → logprob: -11.182099342346191
    8. 'int' → logprob: -11.807099342346191
    9. '(tuple' → logprob: -11.932099342346191
    10. '(eval' → logprob: -12.182099342346191

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1675473153591156
    2. '(input' → logprob: -2.4175472259521484
    3. '(' → logprob: -3.5425472259521484
    4. ',input' → logprob: -4.042547225952148
    5. ')' → logprob: -4.292547225952148
    6. 'input' → logprob: -5.542547225952148
    7. ' ,' → logprob: -8.667547225952148
    8. '=input' → logprob: -8.917547225952148
    9. '),' → logprob: -9.167547225952148
    10. '(int' → logprob: -9.167547225952148

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759665966033936
    2. 'input' → logprob: -0.8259665966033936
    3. ')' → logprob: -10.825966835021973
    4. ' ' → logprob: -12.825966835021973
    5. ' )' → logprob: -13.825966835021973
    6. '(input' → logprob: -13.825966835021973
    7. ' sys' → logprob: -13.950966835021973
    8. '=input' → logprob: -14.450966835021973
    9. ',input' → logprob: -14.950966835021973
    10. '	input' → logprob: -15.950966835021973

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015202185604721308
    2. '())' → logprob: -7.001520156860352
    3. '()' → logprob: -7.501520156860352
    4. ')' → logprob: -10.251520156860352
    5. '()))' → logprob: -11.626520156860352
    6. '(' → logprob: -12.001520156860352
    7. '('' → logprob: -13.501520156860352
    8. '()
' → logprob: -13.626520156860352
    9. ' ().' → logprob: -14.251520156860352
    10. '()[' → logprob: -14.501520156860352

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10245530307292938
    2. 'strip' → logprob: -2.3524553775787354
    3. 'rstrip' → logprob: -6.102455139160156
    4. ')' → logprob: -12.227455139160156
    5. ' split' → logprob: -12.977455139160156
    6. 'read' → logprob: -14.602455139160156
    7. '(split' → logprob: -14.852455139160156
    8. '```' → logprob: -15.102455139160156
    9. ' strip' → logprob: -15.352455139160156
    10. '())' → logprob: -16.602455139160156

Token 24: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008632649667561054
    2. '))' → logprob: -4.758632659912109
    3. '())' → logprob: -11.50863265991211
    4. '()' → logprob: -12.25863265991211
    5. '`)' → logprob: -14.00863265991211
    6. '')' → logprob: -14.50863265991211
    7. '),' → logprob: -14.63363265991211
    8. ')))' → logprob: -14.75863265991211
    9. ' )' → logprob: -15.13363265991211
    10. ')`' → logprob: -15.25863265991211

Token 25: 'p' (ID: 79)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1380647420883179
    2. 'data' → logprob: -1.3880647420883179
    3. 'a' → logprob: -1.7630647420883179
    4. 'arr' → logprob: -2.2630648612976074
    5. 'array' → logprob: -3.1380648612976074
    6. 'numbers' → logprob: -3.6380648612976074
    7. ')' → logprob: -4.013064861297607
    8. 'result' → logprob: -4.763064861297607
    9. 'nums' → logprob: -5.263064861297607
    10. ' graph' → logprob: -5.388064861297607

Token 26: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2384567260742188
    2. 'ar' → logprob: -1.7384567260742188
    3. ' =' → logprob: -1.9884567260742188
    4. 'layers' → logprob: -1.9884567260742188
    5. '=' → logprob: -3.1134567260742188
    6. 'layer' → logprob: -3.2384567260742188
    7. 'os' → logprob: -3.6134567260742188
    8. 'ermut' → logprob: -4.238456726074219
    9. 'oints' → logprob: -4.738456726074219
    10. 'refix' → logprob: -4.738456726074219

Token 27: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.09428529441356659
    2. '[list' → logprob: -3.594285249710083
    3. '[' → logprob: -3.969285249710083
    4. '[]' → logprob: -4.094285488128662
    5. ' list' → logprob: -4.219285488128662
    6. '[int' → logprob: -5.219285488128662
    7. ' [' → logprob: -5.969285488128662
    8. '[p' → logprob: -6.469285488128662
    9. '[n' → logprob: -7.594285488128662
    10. ' []' → logprob: -7.719285488128662

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.1151609942317009
    2. '(' → logprob: -2.2401609420776367
    3. '(int' → logprob: -6.240160942077637
    4. '(input' → logprob: -8.990160942077637
    5. '()' → logprob: -9.240160942077637
    6. '(range' → logprob: -9.365160942077637
    7. '(p' → logprob: -10.490160942077637
    8. '(data' → logprob: -12.240160942077637
    9. '(
' → logprob: -12.365160942077637
    10. '(

' → logprob: -12.490160942077637

Token 29: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002273774443892762
    2. '(' → logprob: -8.500226974487305
    3. 'int' → logprob: -10.875226974487305
    4. '<int' → logprob: -13.125226974487305
    5. '=int' → logprob: -13.500226974487305
    6. '[int' → logprob: -14.750226974487305
    7. '```' → logprob: -15.250226974487305
    8. ',int' → logprob: -15.750226974487305
    9. '(str' → logprob: -15.750226974487305
    10. ')' → logprob: -16.250226974487305

Token 30: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0791386216878891
    2. ' x' → logprob: -2.5791385173797607
    3. 'int' → logprob: -8.45413875579834
    4. ' int' → logprob: -10.95413875579834
    5. 'a' → logprob: -12.07913875579834
    6. '(x' → logprob: -12.82913875579834
    7. 'lambda' → logprob: -12.95413875579834
    8. ' ' → logprob: -13.45413875579834
    9. '<int' → logprob: -13.70413875579834
    10. ' a' → logprob: -13.95413875579834

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0494721494615078
    2. ':int' → logprob: -3.0494720935821533
    3. ' :' → logprob: -7.174472332000732
    4. ':x' → logprob: -9.799471855163574
    5. 'int' → logprob: -10.799471855163574
    6. ',' → logprob: -11.299471855163574
    7. ',int' → logprob: -12.049471855163574
    8. '=int' → logprob: -12.299471855163574
    9. ':void' → logprob: -12.924471855163574
    10. ':
' → logprob: -13.049471855163574

Token 32: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6697090864181519
    2. ' int' → logprob: -1.0447090864181519
    3. ' x' → logprob: -2.5447092056274414
    4. 'x' → logprob: -2.9197092056274414
    5. ' p' → logprob: -6.544709205627441
    6. '(int' → logprob: -7.294709205627441
    7. 'p' → logprob: -7.669709205627441
    8. ' ' → logprob: -7.794709205627441
    9. ' (' → logprob: -9.232209205627441
    10. '[int' → logprob: -9.232209205627441

Token 33: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00034845535992644727
    2. '(' → logprob: -8.250348091125488
    3. 'x' → logprob: -9.500348091125488
    4. ',' → logprob: -12.000348091125488
    5. ')' → logprob: -12.750348091125488
    6. ' (' → logprob: -13.000348091125488
    7. ')x' → logprob: -15.250348091125488
    8. ' x' → logprob: -15.500348091125488
    9. '<|end|>' → logprob: -16.000349044799805
    10. ',x' → logprob: -16.125349044799805

Token 34: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.22334468364715576
    2. ',' → logprob: -2.3483448028564453
    3. '(x' → logprob: -2.8483448028564453
    4. '*' → logprob: -4.348344802856445
    5. ')' → logprob: -4.348344802856445
    6. '.strip' → logprob: -5.098344802856445
    7. ' ),' → logprob: -5.723344802856445
    8. ':' → logprob: -5.723344802856445
    9. 'input' → logprob: -6.723344802856445
    10. '+' → logprob: -7.098344802856445

Token 35: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06791633367538452
    2. ',input' → logprob: -3.6929163932800293
    3. 'input' → logprob: -3.9429163932800293
    4. '(x' → logprob: -4.817916393280029
    5. ',x' → logprob: -5.442916393280029
    6. ' ,' → logprob: -5.942916393280029
    7. '(input' → logprob: -6.567916393280029
    8. 'x' → logprob: -6.567916393280029
    9. ' input' → logprob: -6.942916393280029
    10. ',p' → logprob: -6.942916393280029

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364673629403114
    2. ' ' → logprob: -3.408646821975708
    3. '   ' → logprob: -15.533646583557129
    4. '2' → logprob: -15.658646583557129
    5. '  ' → logprob: -16.346147537231445
    6. ' ' → logprob: -16.596147537231445
    7. '0' → logprob: -16.783647537231445
    8. 'x' → logprob: -16.783647537231445
    9. '3' → logprob: -17.471147537231445
    10. '100' → logprob: -17.971147537231445

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '2' → logprob: -16.875553131103516
    4. '   ' → logprob: -17.750553131103516
    5. '0' → logprob: -17.938053131103516
    6. '100' → logprob: -18.125553131103516
    7. '3' → logprob: -18.438053131103516
    8. '  ' → logprob: -18.938053131103516
    9. '１' → logprob: -18.938053131103516
    10. '4' → logprob: -19.313053131103516

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010226861340925097
    2. ',input' → logprob: -7.001022815704346
    3. ',p' → logprob: -9.626022338867188
    4. 'input' → logprob: -10.751022338867188
    5. ' ,' → logprob: -11.501022338867188
    6. ')' → logprob: -12.251022338867188
    7. '))' → logprob: -13.376022338867188
    8. ',n' → logprob: -14.126022338867188
    9. ',x' → logprob: -14.126022338867188
    10. '),' → logprob: -14.376022338867188

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003178071230649948
    2. ' input' → logprob: -5.753178119659424
    3. 'range' → logprob: -15.753177642822266
    4. ' ' → logprob: -17.128177642822266
    5. '(input' → logprob: -17.253177642822266
    6. '<input' → logprob: -17.378177642822266
    7. '	input' → logprob: -17.503177642822266
    8. '[input' → logprob: -17.878177642822266
    9. 'list' → logprob: -18.003177642822266
    10. 'output' → logprob: -18.253177642822266

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.204720582696609e-05
    2. '()' → logprob: -9.875052452087402
    3. '()))' → logprob: -15.375052452087402
    4. '())' → logprob: -16.125051498413086
    5. ' ().' → logprob: -16.750051498413086
    6. '()));' → logprob: -17.125051498413086
    7. '())))' → logprob: -17.375051498413086
    8. '.split' → logprob: -17.750051498413086
    9. ')' → logprob: -17.875051498413086
    10. '(' → logprob: -18.250051498413086

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005647073267027736
    2. 'strip' → logprob: -7.5005645751953125
    3. 'rstrip' → logprob: -11.500564575195312
    4. ' split' → logprob: -13.875564575195312
    5. 'read' → logprob: -15.125564575195312
    6. '(split' → logprob: -15.375564575195312
    7. 'spl' → logprob: -16.875564575195312
    8. '().' → logprob: -17.250564575195312
    9. '.split' → logprob: -19.375564575195312
    10. ' strip' → logprob: -19.625564575195312

Token 42: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25548043847084045
    2. '()))' → logprob: -1.505480408668518
    3. ')' → logprob: -6.5054802894592285
    4. '()' → logprob: -6.7554802894592285
    5. '())' → logprob: -7.1304802894592285
    6. '(' → logprob: -9.755480766296387
    7. '()))
' → logprob: -11.880480766296387
    8. ')))' → logprob: -12.255480766296387
    9. ' ))' → logprob: -12.505480766296387
    10. '()));' → logprob: -12.880480766296387

Token 43: 'parent' (ID: 4903)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9961506724357605
    2. 'dp' → logprob: -1.6211507320404053
    3. 'a' → logprob: -2.1211507320404053
    4. 'graph' → logprob: -2.4961507320404053
    5. 'edges' → logprob: -3.2461507320404053
    6. 'd' → logprob: -3.4961507320404053
    7. 'c' → logprob: -3.6211507320404053
    8. 'g' → logprob: -4.371150493621826
    9. 'b' → logprob: -4.496150493621826
    10. 'positions' → logprob: -4.621150493621826

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026852747425436974
    2. '=' → logprob: -3.65185284614563
    3. '[' → logprob: -7.651852607727051
    4. ' =[' → logprob: -10.40185260772705
    5. 's' → logprob: -10.52685260772705
    6. '=[' → logprob: -11.52685260772705
    7. ' ' → logprob: -12.52685260772705
    8. '[]' → logprob: -13.02685260772705
    9. '[:]' → logprob: -14.02685260772705
    10. ',' → logprob: -14.27685260772705

Token 45: ' list' (ID: 1562)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.43157199025154114
    2. 'list' → logprob: -1.1815719604492188
    3. '[list' → logprob: -3.1815719604492188
    4. '[' → logprob: -6.181571960449219
    5. ' list' → logprob: -9.556571960449219
    6. ' [-' → logprob: -10.806571960449219
    7. '[n' → logprob: -11.556571960449219
    8. '[p' → logprob: -12.056571960449219
    9. '[i' → logprob: -12.056571960449219
    10. ' [' → logprob: -12.181571960449219

Token 46: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. 'range' → logprob: -15.00001049041748
    4. '(map' → logprob: -16.625011444091797
    5. '=' → logprob: -18.625011444091797
    6. '	range' → logprob: -18.625011444091797
    7. '([' → logprob: -19.500011444091797
    8. ' range' → logprob: -19.875011444091797
    9. '```' → logprob: -20.000011444091797
    10. ')' → logprob: -20.125011444091797

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000633566698525101
    2. 'n' → logprob: -7.500633716583252
    3. '(' → logprob: -9.875633239746094
    4. '(m' → logprob: -10.500633239746094
    5. '	n' → logprob: -14.625633239746094
    6. ')n' → logprob: -14.750633239746094
    7. 'm' → logprob: -15.250633239746094
    8. ' n' → logprob: -15.375633239746094
    9. '(
' → logprob: -15.875633239746094
    10. ' (' → logprob: -16.625633239746094

Token 48: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.543733904138207e-05
    2. ')' → logprob: -10.00009536743164
    3. '))
' → logprob: -10.00009536743164
    4. '))

' → logprob: -13.12509536743164
    5. ' ))' → logprob: -13.62509536743164
    6. ')))' → logprob: -14.37509536743164
    7. '))
' → logprob: -15.75009536743164
    8. ' ' → logprob: -16.00009536743164
    9. '1' → logprob: -16.25009536743164
    10. '0' → logprob: -16.50009536743164

Token 49: 'rank' (ID: 30162)
  Prédit: 'rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.6993388533592224
    2. 'size' → logprob: -1.3243389129638672
    3. 'def' → logprob: -1.4493389129638672
    4. 'depth' → logprob: -6.574338912963867
    5. '```' → logprob: -8.449338912963867
    6. 'r' → logprob: -8.574338912963867
    7. 'sz' → logprob: -8.949338912963867
    8. 'parent' → logprob: -9.199338912963867
    9. 'sizes' → logprob: -9.449338912963867
    10. ' 
' → logprob: -10.199338912963867

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009645807440392673
    2. 's' → logprob: -7.250964641571045
    3. '=' → logprob: -8.500964164733887
    4. ' ' → logprob: -10.125964164733887
    5. '[' → logprob: -12.375964164733887
    6. '(' → logprob: -12.750964164733887
    7. ')' → logprob: -13.500964164733887
    8. ' =[' → logprob: -13.875964164733887
    9. '[:]' → logprob: -14.125964164733887
    10. '  ' → logprob: -15.375964164733887

Token 51: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2983502447605133
    2. '[n' → logprob: -2.0483503341674805
    3. ' [' → logprob: -2.0483503341674805
    4. '([' → logprob: -11.04835033416748
    5. '(n' → logprob: -11.04835033416748
    6. 'n' → logprob: -11.29835033416748
    7. '[m' → logprob: -11.42335033416748
    8. ' n' → logprob: -11.92335033416748
    9. '0' → logprob: -14.04835033416748
    10. '(' → logprob: -14.42335033416748

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. '1' → logprob: -10.625036239624023
    3. ' ' → logprob: -11.375036239624023
    4. '۰' → logprob: -20.000036239624023
    5. '   ' → logprob: -20.125036239624023
    6. '０' → logprob: -20.375036239624023
    7. '(' → logprob: -20.750036239624023
    8. ')' → logprob: -21.062536239624023
    9. '-' → logprob: -21.125036239624023
    10. '```' → logprob: -21.312536239624023

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005790081340819597
    2. ']*' → logprob: -8.000578880310059
    3. ' ]' → logprob: -9.000578880310059
    4. ')' → logprob: -9.250578880310059
    5. ' for' → logprob: -11.500578880310059
    6. ']*(' → logprob: -11.875578880310059
    7. ')]' → logprob: -12.375578880310059
    8. ',' → logprob: -13.875578880310059
    9. ' ' → logprob: -14.250578880310059
    10. '])' → logprob: -15.000578880310059

Token 54: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3200285732746124
    2. ' *' → logprob: -1.69502854347229
    3. '*n' → logprob: -2.44502854347229
    4. ' for' → logprob: -5.945028781890869
    5. ' ' → logprob: -8.070028305053711
    6. '*(' → logprob: -8.570028305053711
    7. 'n' → logprob: -9.320028305053711
    8. '[n' → logprob: -9.945028305053711
    9. '(n' → logprob: -9.945028305053711
    10. ' n' → logprob: -10.195028305053711

Token 55: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.939851037808694e-05
    2. ' n' → logprob: -10.500029563903809
    3. '(n' → logprob: -13.250029563903809
    4. '	n' → logprob: -17.250028610229492
    5. '(' → logprob: -17.875028610229492
    6. ' (' → logprob: -19.875028610229492
    7. ')n' → logprob: -20.500028610229492
    8. '   ' → logprob: -21.250028610229492
    9. '_n' → logprob: -21.875028610229492
    10. ' ' → logprob: -22.125028610229492

Token 56: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2319168597459793
    2. '
' → logprob: -1.606916904449463
    3. '

' → logprob: -5.981916904449463
    4. '<|end|>' → logprob: -6.481916904449463
    5. '
' → logprob: -7.231916904449463
    6. 'parent' → logprob: -7.731916904449463
    7. '```' → logprob: -7.856916904449463
    8. ' 
' → logprob: -8.231916427612305
    9. '  
' → logprob: -8.481916427612305
    10. '' → logprob: -9.481916427612305

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005020392127335072
    2. '
' → logprob: -7.625502109527588
    3. '

' → logprob: -11.75050163269043
    4. '
' → logprob: -13.50050163269043
    5. ' def' → logprob: -13.75050163269043
    6. '```' → logprob: -13.75050163269043
    7. '\' → logprob: -14.12550163269043
    8. '  
' → logprob: -14.62550163269043
    9. '<|end|>' → logprob: -15.12550163269043
    10. 'for' → logprob: -15.75050163269043

Token 58: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.016049854457378387
    2. 'find' → logprob: -4.141049861907959
    3. ' union' → logprob: -11.5160493850708
    4. '	find' → logprob: -13.3910493850708
    5. ' fin' → logprob: -13.7660493850708
    6. ' def' → logprob: -13.8910493850708
    7. ' ' → logprob: -14.8910493850708
    8. '_find' → logprob: -15.0160493850708
    9. 'fin' → logprob: -15.0160493850708
    10. 'union' → logprob: -15.2660493850708

Token 59: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07473280280828476
    2. '(x' → logprob: -2.949732780456543
    3. '(parent' → logprob: -4.324732780456543
    4. '_parent' → logprob: -5.949732780456543
    5. '(a' → logprob: -6.324732780456543
    6. '(u' → logprob: -7.199732780456543
    7. '(node' → logprob: -7.449732780456543
    8. '(p' → logprob: -8.074732780456543
    9. '(i' → logprob: -9.074732780456543
    10. ' (' → logprob: -9.324732780456543

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003025729674845934
    2. '):
' → logprob: -8.7503023147583
    3. ')' → logprob: -8.8753023147583
    4. ':' → logprob: -13.0003023147583
    5. ' ):' → logprob: -13.3753023147583
    6. '):
' → logprob: -15.3753023147583
    7. '():' → logprob: -15.8753023147583
    8. '):

' → logprob: -17.125303268432617
    9. ']:' → logprob: -18.000303268432617
    10. '}:' → logprob: -18.000303268432617

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0158856101334095
    2. ' if' → logprob: -5.265885829925537
    3. ':' → logprob: -5.640885829925537
    4. 'if' → logprob: -6.140885829925537
    5. ' while' → logprob: -6.515885829925537
    6. ':
' → logprob: -6.890885829925537
    7. ' ' → logprob: -7.390885829925537
    8. 'while' → logprob: -7.640885829925537
    9. '	if' → logprob: -8.140885353088379
    10. '	while' → logprob: -8.265885353088379

Token 62: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12946216762065887
    2. ' if' → logprob: -2.129462242126465
    3. ' while' → logprob: -6.629462242126465
    4. 'while' (adapté à ' while') → logprob: -6.754462242126465
    5. '   ' → logprob: -10.379462242126465
    6. 'parent' → logprob: -11.379462242126465
    7. ' parent' → logprob: -14.254462242126465
    8. '	if' → logprob: -14.629462242126465
    9. '
' → logprob: -15.504462242126465
    10. '0' → logprob: -15.504462242126465

Token 63: ' x' (ID: 1215)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.001765501219779253
    2. ' parent' → logprob: -6.501765727996826
    3. 'x' → logprob: -8.251765251159668
    4. ' x' → logprob: -13.876765251159668
    5. 'paren' → logprob: -14.626765251159668
    6. '	parent' → logprob: -14.876765251159668
    7. '(parent' → logprob: -15.001765251159668
    8. 'par' → logprob: -15.501765251159668
    9. 'Parent' → logprob: -17.876766204833984
    10. 'p' → logprob: -17.876766204833984

Token 64: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.006008548196405172
    2. ' !=' → logprob: -5.131008625030518
    3. 'parent' → logprob: -10.00600814819336
    4. ']!=' → logprob: -11.63100814819336
    5. ')!=' → logprob: -11.88100814819336
    6. '_parent' → logprob: -12.00600814819336
    7. '()!=' → logprob: -12.50600814819336
    8. '!=(' → logprob: -12.88100814819336
    9. '!==' → logprob: -13.13100814819336
    10. '[parent' → logprob: -14.00600814819336

Token 65: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00012356207298580557
    2. ' parent' → logprob: -9.000123977661133
    3. '	parent' → logprob: -16.750123977661133
    4. '(parent' → logprob: -18.000123977661133
    5. '[parent' → logprob: -18.625123977661133
    6. '.parent' → logprob: -18.750123977661133
    7. ',parent' → logprob: -19.750123977661133
    8. ' ' → logprob: -19.750123977661133
    9. 'paren' → logprob: -19.875123977661133
    10. '_parent' → logprob: -20.000123977661133

Token 66: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. 'x' → logprob: -14.625000953674316
    4. '```' → logprob: -17.750001907348633
    5. '[parent' → logprob: -19.000001907348633
    6. '[
' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.375001907348633
    8. '(x' → logprob: -19.625001907348633
    9. '{x' → logprob: -20.500001907348633
    10. '\[' → logprob: -20.500001907348633

Token 67: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43365344405174255
    2. '):' → logprob: -1.433653473854065
    3. ']:' → logprob: -2.4336533546447754
    4. ']:
' → logprob: -3.6836533546447754
    5. ':' → logprob: -8.183653831481934
    6. ':
' → logprob: -9.433653831481934
    7. ' ):
' → logprob: -9.933653831481934
    8. ']' → logprob: -10.183653831481934
    9. ' ):' → logprob: -10.558653831481934
    10. ']):
' → logprob: -10.808653831481934

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1330142617225647
    2. ' x' → logprob: -3.25801420211792
    3. '   ' → logprob: -3.50801420211792
    4. 'x' → logprob: -3.63301420211792
    5. ':
' → logprob: -4.00801420211792
    6. '
' → logprob: -5.00801420211792
    7. ':' → logprob: -6.00801420211792
    8. '	x' → logprob: -7.13301420211792
    9. '```' → logprob: -7.63301420211792
    10. '):
' → logprob: -8.008014678955078

Token 69: ' parent' (ID: 5980)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6337307095527649
    2. 'parent' (adapté à ' parent') → logprob: -1.1337306499481201
    3. ' x' → logprob: -2.63373064994812
    4. ' parent' → logprob: -2.63373064994812
    5. '   ' → logprob: -6.258730888366699
    6. '       ' → logprob: -6.258730888366699
    7. '	parent' → logprob: -9.2587308883667
    8. '.parent' → logprob: -12.0087308883667
    9. '_parent' → logprob: -13.0087308883667
    10. '	x' → logprob: -13.3837308883667

Token 70: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.897412822581828e-05
    2. '[' → logprob: -9.750068664550781
    3. 'x' → logprob: -12.000068664550781
    4. ' =' → logprob: -12.750068664550781
    5. '=' → logprob: -14.250068664550781
    6. '[parent' → logprob: -14.250068664550781
    7. ']' → logprob: -16.87506866455078
    8. ' ' → logprob: -16.87506866455078
    9. '```' → logprob: -16.87506866455078
    10. ' [' → logprob: -17.00006866455078

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011971325147897005
    2. '=' → logprob: -7.001197338104248
    3. ' =' → logprob: -8.75119686126709
    4. ']=' → logprob: -9.00119686126709
    5. ' ]' → logprob: -12.50119686126709
    6. ')' → logprob: -15.62619686126709
    7. '[' → logprob: -16.376197814941406
    8. ' ' → logprob: -17.876197814941406
    9. '],' → logprob: -18.001197814941406
    10. ']]' → logprob: -18.126197814941406

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -16.701414108276367
    4. ' ' → logprob: -17.326414108276367
    5. ']' → logprob: -17.326414108276367
    6. 'parent' → logprob: -17.451414108276367
    7. '=

' → logprob: -18.076414108276367
    8. '[parent' → logprob: -18.326414108276367
    9. '=
' → logprob: -18.576414108276367
    10. ')' → logprob: -19.201414108276367

Token 73: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.003177952254191041
    2. ' parent' → logprob: -5.753178119659424
    3. '	parent' → logprob: -16.003177642822266
    4. '(parent' → logprob: -16.378177642822266
    5. '[parent' → logprob: -17.628177642822266
    6. '.parent' → logprob: -20.503177642822266
    7. ',parent' → logprob: -20.628177642822266
    8. 'paren' → logprob: -20.878177642822266
    9. ' ' → logprob: -21.378177642822266
    10. '   ' → logprob: -21.753177642822266

Token 74: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -1.2664456789934775e-06
    2. 'parent' → logprob: -14.125000953674316
    3. '[' → logprob: -14.750000953674316
    4. '(parent' → logprob: -17.625001907348633
    5. '	parent' → logprob: -18.875001907348633
    6. '[player' → logprob: -18.875001907348633
    7. '[
' → logprob: -19.000001907348633
    8. ' [' → logprob: -20.125001907348633
    9. 'paren' → logprob: -20.125001907348633
    10. ',parent' → logprob: -20.250001907348633

Token 75: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0031859094742685556
    2. 'x' → logprob: -5.753185749053955
    3. '[parent' → logprob: -11.878186225891113
    4. ' x' → logprob: -15.003186225891113
    5. '(x' → logprob: -15.128186225891113
    6. '[' → logprob: -15.378186225891113
    7. '{x' → logprob: -15.503186225891113
    8. '	x' → logprob: -16.253185272216797
    9. '[
' → logprob: -16.628185272216797
    10. 'parent' → logprob: -16.753185272216797

Token 76: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3880305886268616
    2. ']' → logprob: -1.1380305290222168
    3. '[x' → logprob: -7.388030529022217
    4. 'x' → logprob: -8.263031005859375
    5. ']
' → logprob: -9.263031005859375
    6. ']]
' → logprob: -9.388031005859375
    7. ']]]' → logprob: -9.763031005859375
    8. ')]' → logprob: -10.638031005859375
    9. ']}' → logprob: -12.763031005859375
    10. ']]

' → logprob: -12.888031005859375

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023114332929253578
    2. 'x' → logprob: -3.8981144428253174
    3. ' x' → logprob: -6.273114204406738
    4. '   ' → logprob: -7.398114204406738
    5. '	x' → logprob: -10.648114204406738
    6. ',' → logprob: -11.648114204406738
    7. '
' → logprob: -11.898114204406738
    8. '(x' → logprob: -12.148114204406738
    9. ' ' → logprob: -12.773114204406738
    10. '<|end|>' → logprob: -12.773114204406738

Token 78: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.001502598519437015
    2. ' x' → logprob: -6.501502513885498
    3. '       ' → logprob: -15.751502990722656
    4. '   ' → logprob: -16.501502990722656
    5. '	x' → logprob: -17.876502990722656
    6. '=' → logprob: -21.126502990722656
    7. ' =' → logprob: -21.126502990722656
    8. '```' → logprob: -21.251502990722656
    9. 'parent' → logprob: -21.376502990722656
    10. ' ' → logprob: -21.501502990722656

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.188261032104492
    4. '＝' → logprob: -17.563261032104492
    5. '=

' → logprob: -18.688261032104492
    6. '.=' → logprob: -18.938261032104492
    7. ',' → logprob: -19.063261032104492
    8. '=}' → logprob: -19.188261032104492
    9. ' =)' → logprob: -20.313261032104492
    10. '<|end|>' → logprob: -20.313261032104492

Token 80: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.16022838652133942
    2. ' parent' → logprob: -1.9102283716201782
    3. '(parent' → logprob: -13.035228729248047
    4. '	parent' → logprob: -13.535228729248047
    5. '[parent' → logprob: -14.785228729248047
    6. ' ' → logprob: -16.035228729248047
    7. '.parent' → logprob: -16.285228729248047
    8. '   ' → logprob: -16.410228729248047
    9. '_parent' → logprob: -17.160228729248047
    10. ',parent' → logprob: -17.285228729248047

Token 81: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.368984107510187e-05
    2. 'x' → logprob: -10.375033378601074
    3. '[' → logprob: -13.625033378601074
    4. '[parent' → logprob: -13.875033378601074
    5. '```' → logprob: -15.875033378601074
    6. '(x' → logprob: -16.87503433227539
    7. '[
' → logprob: -17.50003433227539
    8. ' x' → logprob: -17.62503433227539
    9. '{x' → logprob: -18.12503433227539
    10. ' ' → logprob: -18.62503433227539

Token 82: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11972341686487198
    2. ')' → logprob: -2.244723320007324
    3. '])' → logprob: -5.494723320007324
    4. ')]' → logprob: -5.994723320007324
    5. 'parent' → logprob: -8.994723320007324
    6. '[parent' → logprob: -9.119723320007324
    7. '[' → logprob: -11.494723320007324
    8. '[x' → logprob: -11.619723320007324
    9. ']
' → logprob: -11.994723320007324
    10. '.parent' → logprob: -12.994723320007324

Token 83: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03108646720647812
    2. '   ' → logprob: -3.6560864448547363
    3. ' return' → logprob: -5.406086444854736
    4. '
' → logprob: -8.281086921691895
    5. ' ' → logprob: -11.406086921691895
    6. '	return' → logprob: -11.656086921691895
    7. ':return' → logprob: -12.906086921691895
    8. 'def' → logprob: -13.031086921691895
    9. '```' → logprob: -13.406086921691895
    10. 'eturn' → logprob: -14.031086921691895

Token 84: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.043530941009521484
    2. ' return' → logprob: -3.5435309410095215
    3. '   ' → logprob: -4.2935309410095215
    4. '	return' → logprob: -10.91853141784668
    5. ' ' → logprob: -11.79353141784668
    6. ':return' → logprob: -13.79353141784668
    7. 'eturn' → logprob: -13.91853141784668
    8. '  ' → logprob: -14.04353141784668
    9. '
' → logprob: -14.79353141784668
    10. '    
' → logprob: -16.29353141784668

Token 85: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07889111340045929
    2. ' x' → logprob: -2.5788910388946533
    3. '(x' → logprob: -13.578890800476074
    4. 'parent' → logprob: -17.32889175415039
    5. ' parent' → logprob: -18.57889175415039
    6. '	x' → logprob: -19.45389175415039
    7. ')x' → logprob: -20.95389175415039
    8. ' ' → logprob: -20.95389175415039
    9. '[x' → logprob: -21.95389175415039
    10. '"x' → logprob: -22.32889175415039

Token 86: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013134514447301626
    2. '<|end|>' → logprob: -7.25131368637085
    3. '
' → logprob: -7.87631368637085
    4. ' def' → logprob: -9.251313209533691
    5. '

' → logprob: -9.376313209533691
    6. '```' → logprob: -10.751313209533691
    7. '<|end|>' → logprob: -11.626313209533691
    8. '  
' → logprob: -12.626313209533691
    9. ' 
' → logprob: -13.501313209533691
    10. ')' → logprob: -13.626313209533691

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.6537622034084052e-05
    2. '

' → logprob: -11.12502670288086
    3. '
' → logprob: -12.25002670288086
    4. ' def' → logprob: -12.87502670288086
    5. '```' → logprob: -13.00002670288086
    6. '<|end|>' → logprob: -13.50002670288086
    7. '  
' → logprob: -15.25002670288086
    8. ' 

' → logprob: -15.87502670288086
    9. ' 
' → logprob: -16.87502670288086
    10. '    
' → logprob: -17.00002670288086

Token 88: ' unite' (ID: 96146)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.4741959869861603
    2. ' union' → logprob: -0.9741959571838379
    3. ' unite' → logprob: -9.599196434020996
    4. '_union' → logprob: -10.099196434020996
    5. 'un' → logprob: -11.849196434020996
    6. 'def' → logprob: -14.349196434020996
    7. 'merge' → logprob: -14.599196434020996
    8. '	union' → logprob: -14.599196434020996
    9. '.union' → logprob: -15.099196434020996
    10. 'Union' → logprob: -15.099196434020996

Token 89: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5784314274787903
    2. '(x' → logprob: -0.8284314274787903
    3. '(u' → logprob: -6.578431606292725
    4. '(' → logprob: -6.828431606292725
    5. ' (' → logprob: -11.578431129455566
    6. 'a' → logprob: -12.953431129455566
    7. '(
' → logprob: -13.703431129455566
    8. 'def' → logprob: -14.078431129455566
    9. '(p' → logprob: -14.953431129455566
    10. '(s' → logprob: -14.953431129455566

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.464347173576243e-05
    2. ' ,' → logprob: -10.50003433227539
    3. ',y' → logprob: -11.87503433227539
    4. '‌,' → logprob: -16.87503433227539
    5. '_,' → logprob: -17.00003433227539
    6. ',
' → logprob: -17.37503433227539
    7. ',x' → logprob: -17.50003433227539
    8. 'y' → logprob: -18.00003433227539
    9. '   ' → logprob: -18.12503433227539
    10. ' ' → logprob: -18.12503433227539

Token 91: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.048587486147880554
    2. ' y' → logprob: -3.0485875606536865
    3. '	y' → logprob: -16.548587799072266
    4. '   ' → logprob: -18.173587799072266
    5. ''y' → logprob: -18.298587799072266
    6. ' ' → logprob: -18.423587799072266
    7. ',y' → logprob: -18.673587799072266
    8. 'x' → logprob: -19.173587799072266
    9. '    ' → logprob: -19.298587799072266
    10. 'Y' → logprob: -19.298587799072266

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003013809327967465
    2. '):
' → logprob: -8.125301361083984
    3. ')' → logprob: -12.375301361083984
    4. ' ):' → logprob: -14.750301361083984
    5. '):
' → logprob: -14.875301361083984
    6. ':' → logprob: -15.125301361083984
    7. '):

' → logprob: -17.625301361083984
    8. ')：' → logprob: -17.625301361083984
    9. '）：' → logprob: -17.750301361083984
    10. '}:' → logprob: -18.375301361083984

Token 93: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.42677953839302063
    2. '   ' → logprob: -1.1767795085906982
    3. ' x' → logprob: -3.3017795085906982
    4. 'px' → logprob: -7.801779747009277
    5. 'root' → logprob: -7.926779747009277
    6. '	x' → logprob: -8.176779747009277
    7. ' ' → logprob: -8.176779747009277
    8. ':' → logprob: -8.301779747009277
    9. 'rx' → logprob: -8.926779747009277
    10. ' root' → logprob: -8.926779747009277

Token 94: ' rx' (ID: 37623)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00024287392443511635
    2. 'def' → logprob: -9.125243186950684
    3. ' x' → logprob: -9.125243186950684
    4. 'root' → logprob: -11.500243186950684
    5. '   ' → logprob: -11.875243186950684
    6. 'px' → logprob: -12.500243186950684
    7. '	x' → logprob: -13.250243186950684
    8. 'a' → logprob: -14.250243186950684
    9. 'rx' (adapté à ' rx') → logprob: -14.625243186950684
    10. '(x' → logprob: -15.750243186950684

Token 95: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5293477773666382
    2. '=' → logprob: -0.9043477773666382
    3. ',' → logprob: -5.154347896575928
    4. ')' → logprob: -7.904347896575928
    5. '=find' → logprob: -11.15434741973877
    6. ' ' → logprob: -11.52934741973877
    7. 'x' → logprob: -12.02934741973877
    8. ' =
' → logprob: -12.27934741973877
    9. ']' → logprob: -12.27934741973877
    10. '   ' → logprob: -12.65434741973877

Token 96: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.014191479422152042
    2. ' ry' → logprob: -4.264191627502441
    3. ' =' → logprob: -11.639191627502441
    4. '=' → logprob: -12.389191627502441
    5. ' ' → logprob: -12.764191627502441
    6. '  ' → logprob: -12.889191627502441
    7. '   ' → logprob: -12.889191627502441
    8. 'rz' → logprob: -13.014191627502441
    9. 'ryl' → logprob: -13.764191627502441
    10. 'ryw' → logprob: -14.014191627502441

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. '=find' → logprob: -15.575940132141113
    4. ')' → logprob: -15.825940132141113
    5. ',' → logprob: -16.200939178466797
    6. ' ' → logprob: -16.450939178466797
    7. '=

' → logprob: -17.200939178466797
    8. ' =)' → logprob: -17.325939178466797
    9. '＝' → logprob: -17.575939178466797
    10. ' =
' → logprob: -17.575939178466797

Token 98: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2015300840139389
    2. ' find' → logprob: -1.7015300989151
    3. '(find' → logprob: -9.076530456542969
    4. '=find' → logprob: -13.701530456542969
    5. '	find' → logprob: -13.951530456542969
    6. ')find' → logprob: -16.07653045654297
    7. '.find' → logprob: -16.07653045654297
    8. ' ' → logprob: -16.20153045654297
    9. '
' → logprob: -16.57653045654297
    10. ' (' → logprob: -16.82653045654297

Token 99: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -11.875007629394531
    3. 'x' → logprob: -15.000007629394531
    4. ' (' → logprob: -17.12500762939453
    5. ')' → logprob: -19.25000762939453
    6. '(y' → logprob: -19.75000762939453
    7. '(
' → logprob: -19.75000762939453
    8. '((' → logprob: -20.50000762939453
    9. ' ' → logprob: -20.87500762939453
    10. ',x' → logprob: -20.87500762939453

Token 100: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.650518920039758e-06
    2. ' ),' → logprob: -12.750003814697266
    3. ')' → logprob: -14.500003814697266
    4. ',' → logprob: -15.750003814697266
    5. ' ' → logprob: -17.625003814697266
    6. '   ' → logprob: -18.500003814697266
    7. ')),' → logprob: -19.375003814697266
    8. ')，' → logprob: -20.000003814697266
    9. '],' → logprob: -20.125003814697266
    10. '},' → logprob: -20.250003814697266

Token 101: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.12699194252490997
    2. 'find' → logprob: -2.1269919872283936
    3. '(find' → logprob: -9.876992225646973
    4. 'y' → logprob: -12.001992225646973
    5. ' y' → logprob: -12.876992225646973
    6. '=find' → logprob: -13.501992225646973
    7. '	find' → logprob: -13.626992225646973
    8. '.find' → logprob: -15.126992225646973
    9. ' ' → logprob: -15.251992225646973
    10. ')find' → logprob: -15.626992225646973

Token 102: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0001537169300718233
    2. '(' → logprob: -8.875153541564941
    3. 'y' → logprob: -11.500153541564941
    4. ')' → logprob: -13.125153541564941
    5. ' (' → logprob: -14.250153541564941
    6. '(x' → logprob: -15.375153541564941
    7. ')(' → logprob: -15.500153541564941
    8. '```' → logprob: -16.125154495239258
    9. ')y' → logprob: -16.750154495239258
    10. ' y' → logprob: -17.000154495239258

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019324433524161577
    2. ')
' → logprob: -6.251932621002197
    3. ')

' → logprob: -13.501932144165039
    4. ' )' → logprob: -13.626932144165039
    5. ')
' → logprob: -14.376932144165039
    6. '<|end|>' → logprob: -15.126932144165039
    7. 'def' → logprob: -15.376932144165039
    8. '))' → logprob: -17.25193214416504
    9. '   ' → logprob: -17.62693214416504
    10. '<|end|>' → logprob: -17.75193214416504

Token 104: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30643367767333984
    2. ' if' → logprob: -1.8064336776733398
    3. 'if' (adapté à ' if') → logprob: -2.30643367767334
    4. '	if' → logprob: -10.05643367767334
    5. '
' → logprob: -11.43143367767334
    6. ' ' → logprob: -11.43143367767334
    7. '    
' → logprob: -11.55643367767334
    8. '    ' → logprob: -13.93143367767334
    9. '<|end|>' → logprob: -14.18143367767334
    10. '  ' → logprob: -14.30643367767334

Token 106: ' rx' (ID: 37623)
  Prédit: ' rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rx' → logprob: -0.005263049155473709
    2. 'rx' → logprob: -5.255262851715088
    3. '(rx' → logprob: -10.505263328552246
    4. ' ' → logprob: -14.130263328552246
    5. '_rx' → logprob: -14.755263328552246
    6. ' ry' → logprob: -14.880263328552246
    7. '.rx' → logprob: -15.755263328552246
    8. 'rank' → logprob: -16.50526237487793
    9. '   ' → logprob: -16.63026237487793
    10. '  ' → logprob: -17.75526237487793

Token 107: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09364480525255203
    2. '!=' → logprob: -2.593644857406616
    3. ' ==' → logprob: -4.343644618988037
    4. ' !=' → logprob: -6.468644618988037
    5. '=' → logprob: -9.218645095825195
    6. '==
' → logprob: -12.468645095825195
    7. ']==' → logprob: -13.718645095825195
    8. '==-' → logprob: -14.468645095825195
    9. '===' → logprob: -15.093645095825195
    10. '```' → logprob: -15.468645095825195

Token 108: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.020547958090901375
    2. ' ry' → logprob: -3.895547866821289
    3. ' ' → logprob: -13.645547866821289
    4. 'ryl' → logprob: -14.020547866821289
    5. 'ryd' → logprob: -14.395547866821289
    6. 'rying' → logprob: -14.520547866821289
    7. '   ' → logprob: -14.770547866821289
    8. 'rey' → logprob: -15.020547866821289
    9. 'ryw' → logprob: -15.270547866821289
    10. '  ' → logprob: -15.645547866821289

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03037063218653202
    2. ':return' → logprob: -3.6553707122802734
    3. ':
' → logprob: -5.655370712280273
    4. '   ' → logprob: -8.155370712280273
    5. ' :' → logprob: -8.530370712280273
    6. '       ' → logprob: -10.280370712280273
    7. 'return' → logprob: -10.780370712280273
    8. '    ' → logprob: -11.405370712280273
    9. ' return' → logprob: -12.530370712280273
    10. '=' → logprob: -13.405370712280273

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019442440941929817
    2. '   ' → logprob: -4.644442558288574
    3. ':' → logprob: -5.769442558288574
    4. ' return' → logprob: -5.894442558288574
    5. ':return' → logprob: -5.894442558288574
    6. ':
' → logprob: -7.269442558288574
    7. 'return' → logprob: -8.894442558288574
    8. '
' → logprob: -9.644442558288574
    9. '	return' → logprob: -9.894442558288574
    10. '     ' → logprob: -11.269442558288574

Token 111: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2586965262889862
    2. ' return' → logprob: -1.5086965560913086
    3. '   ' → logprob: -5.008696556091309
    4. '       ' → logprob: -10.008696556091309
    5. '	return' → logprob: -11.133696556091309
    6. '
' → logprob: -12.758696556091309
    7. ':return' → logprob: -14.383696556091309
    8. '  ' → logprob: -14.883696556091309
    9. '    
' → logprob: -15.008696556091309
    10. '    ' → logprob: -15.008696556091309

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22732049226760864
    2. '   ' → logprob: -1.7273204326629639
    3. 'if' → logprob: -4.727320671081543
    4. ' True' → logprob: -5.352320671081543
    5. '    
' → logprob: -5.852320671081543
    6. 'True' → logprob: -5.977320671081543
    7. ' if' → logprob: -5.977320671081543
    8. 'False' → logprob: -6.352320671081543
    9. ' False' → logprob: -6.977320671081543
    10. ' 
' → logprob: -7.477320671081543

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05091800540685654
    2. 'if' → logprob: -3.3009181022644043
    3. ' if' → logprob: -4.550918102264404
    4. '    
' → logprob: -6.675918102264404
    5. '
' → logprob: -7.300918102264404
    6. '```' → logprob: -9.050917625427246
    7. '  ' → logprob: -10.050917625427246
    8. 'rank' → logprob: -10.175917625427246
    9. '  
' → logprob: -10.300917625427246
    10. '   
' → logprob: -10.550917625427246

Token 114: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03044024296104908
    2. ' if' → logprob: -3.530440330505371
    3. '   ' → logprob: -7.280440330505371
    4. '	if' → logprob: -15.030440330505371
    5. ' ' → logprob: -15.405440330505371
    6. '```' → logprob: -16.655439376831055
    7. '  ' → logprob: -17.405439376831055
    8. '    
' → logprob: -17.655439376831055
    9. 'If' → logprob: -17.780439376831055
    10. '
' → logprob: -17.905439376831055

Token 115: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.38694268465042114
    2. ' rank' → logprob: -1.1369426250457764
    3. '(rank' → logprob: -9.761942863464355
    4. 'ank' → logprob: -11.261942863464355
    5. '.rank' → logprob: -14.761942863464355
    6. '_rank' → logprob: -14.761942863464355
    7. 'Rank' → logprob: -15.761942863464355
    8. ' ' → logprob: -16.38694190979004
    9. '   ' → logprob: -16.63694190979004
    10. 'r' → logprob: -16.76194190979004

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. 'rx' → logprob: -15.125000953674316
    3. ' [' → logprob: -16.5
    4. '(rx' → logprob: -16.875
    5. '[r' → logprob: -18.0
    6. ' rx' → logprob: -18.0
    7. '[root' → logprob: -18.875
    8. '   ' → logprob: -19.75
    9. 'x' → logprob: -20.0
    10. 's' → logprob: -20.125

Token 117: 'rx' (ID: 26910)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3132808804512024
    2. 'rx' → logprob: -1.3132808208465576
    3. '(rx' → logprob: -11.188281059265137
    4. ' rx' → logprob: -12.688281059265137
    5. 'x' → logprob: -13.938281059265137
    6. 'ry' → logprob: -14.688281059265137
    7. '_rx' → logprob: -15.063281059265137
    8. '

' → logprob: -16.06328010559082
    9. 'Rx' → logprob: -16.18828010559082
    10. '[parent' → logprob: -16.31328010559082

Token 118: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759565830230713
    2. '<' → logprob: -0.8259565830230713
    3. '[' → logprob: -12.575956344604492
    4. ' ' → logprob: -12.700956344604492
    5. '>' → logprob: -13.075956344604492
    6. ']<' → logprob: -13.075956344604492
    7. ')<' → logprob: -13.450956344604492
    8. ']' → logprob: -13.450956344604492
    9. ')' → logprob: -13.825956344604492
    10. '<class' → logprob: -14.825956344604492

Token 119: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.386884480714798
    2. '<' → logprob: -1.1368844509124756
    3. '[' → logprob: -12.136884689331055
    4. ' ' → logprob: -12.386884689331055
    5. '<int' → logprob: -14.511884689331055
    6. '<class' → logprob: -14.511884689331055
    7. '<size' → logprob: -14.761884689331055
    8. '>' → logprob: -15.136884689331055
    9. '   ' → logprob: -15.261884689331055
    10. '<n' → logprob: -15.636884689331055

Token 120: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.17976871132850647
    2. ' rank' → logprob: -1.804768681526184
    3. '(rank' → logprob: -11.054768562316895
    4. '   ' → logprob: -12.054768562316895
    5. ' ' → logprob: -13.679768562316895
    6. '.rank' → logprob: -14.429768562316895
    7. '  ' → logprob: -15.054768562316895
    8. '
' → logprob: -16.05476951599121
    9. '    ' → logprob: -16.30476951599121
    10. '_rank' → logprob: -16.55476951599121

Token 121: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '(rx' → logprob: -15.5
    3. 'rx' → logprob: -17.0
    4. ' [' → logprob: -17.375
    5. '[r' → logprob: -18.25
    6. '```' → logprob: -18.5
    7. '   ' → logprob: -18.875
    8. ' ry' → logprob: -19.5
    9. '[root' → logprob: -19.625
    10. '[
' → logprob: -19.875

Token 122: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -1.1637164789135568e-05
    2. ' ry' → logprob: -11.375011444091797
    3. '[' → logprob: -17.375011444091797
    4. 'rying' → logprob: -17.750011444091797
    5. ']' → logprob: -17.875011444091797
    6. ' ' → logprob: -18.375011444091797
    7. 'ryl' → logprob: -18.375011444091797
    8. 'ryd' → logprob: -18.750011444091797
    9. '
' → logprob: -18.750011444091797
    10. '```' → logprob: -19.000011444091797

Token 123: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6684303879737854
    2. ':' → logprob: -0.9184303879737854
    3. '):
' → logprob: -3.2934303283691406
    4. ']:
' → logprob: -3.6684303283691406
    5. ']:' → logprob: -3.9184303283691406
    6. '):' → logprob: -5.293430328369141
    7. '   ' → logprob: -7.793430328369141
    8. ' :
' → logprob: -9.66843032836914
    9. '[' → logprob: -9.79343032836914
    10. ' :' → logprob: -9.91843032836914

Token 124: '       ' (ID: 309)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.3877062201499939
    2. 'parent' → logprob: -1.2627062797546387
    3. '       ' → logprob: -3.6377062797546387
    4. '   ' → logprob: -5.512706279754639
    5. '	parent' → logprob: -6.012706279754639
    6. ',parent' → logprob: -6.012706279754639
    7. '[parent' → logprob: -6.762706279754639
    8. '.parent' → logprob: -7.137706279754639
    9. ':
' → logprob: -7.512706279754639
    10. '(parent' → logprob: -7.762706279754639

Token 125: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.023274829611182213
    2. ' parent' → logprob: -3.7732748985290527
    3. 'rx' → logprob: -11.898274421691895
    4. ',parent' → logprob: -11.898274421691895
    5. '[parent' → logprob: -12.273274421691895
    6. '(parent' → logprob: -12.648274421691895
    7. '	parent' → logprob: -12.773274421691895
    8. ' rx' → logprob: -13.398274421691895
    9. '.parent' → logprob: -13.773274421691895
    10. '   ' → logprob: -14.023274421691895

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.750000953674316
    3. ' [' → logprob: -15.125000953674316
    4. '[r' → logprob: -15.750000953674316
    5. '][' → logprob: -17.000001907348633
    6. ')[' → logprob: -17.875001907348633
    7. '(rx' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '[root' → logprob: -18.250001907348633
    10. '[
' → logprob: -18.625001907348633

Token 127: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.00012582694762386382
    2. '[' → logprob: -9.250125885009766
    3. 'ry' → logprob: -10.625125885009766
    4. ' rx' → logprob: -12.375125885009766
    5. '(rx' → logprob: -14.750125885009766
    6. '_rx' → logprob: -15.000125885009766
    7. 'Rx' → logprob: -16.000125885009766
    8. 'tx' → logprob: -16.750125885009766
    9. '.rx' → logprob: -17.000125885009766
    10. '   ' → logprob: -17.125125885009766

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002703953068703413
    2. ' =' → logprob: -8.75027084350586
    3. ']=' → logprob: -10.00027084350586
    4. '[' → logprob: -10.25027084350586
    5. '=' → logprob: -10.87527084350586
    6. ' ]' → logprob: -11.37527084350586
    7. 's' → logprob: -15.12527084350586
    8. '[parent' → logprob: -15.50027084350586
    9. '[r' → logprob: -16.75027084350586
    10. ')' → logprob: -16.87527084350586

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692999839782715
    2. ' =' → logprob: -2.126929998397827
    3. '=y' → logprob: -14.251930236816406
    4. '[' → logprob: -15.126930236816406
    5. '=
' → logprob: -15.751930236816406
    6. '=x' → logprob: -15.876930236816406
    7. '=r' → logprob: -16.001930236816406
    8. '=s' → logprob: -16.251930236816406
    9. '＝' → logprob: -16.501930236816406
    10. ']=' → logprob: -17.126930236816406

Token 130: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0024756586644798517
    2. ' ry' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.62747573852539
    4. '
' → logprob: -19.12747573852539
    5. 'ryd' → logprob: -19.12747573852539
    6. 'rx' → logprob: -19.12747573852539
    7. 'ray' → logprob: -19.62747573852539
    8. 'ryl' → logprob: -19.75247573852539
    9. ' ' → logprob: -19.87747573852539
    10. 'Ry' → logprob: -20.00247573852539

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014877952635288239
    2. '       ' → logprob: -5.014877796173096
    3. 'else' → logprob: -5.139877796173096
    4. '
' → logprob: -6.264877796173096
    5. ' else' → logprob: -8.389878273010254
    6. '<|end|>' → logprob: -9.889878273010254
    7. '    
' → logprob: -10.514878273010254
    8. '        
' → logprob: -11.264878273010254
    9. '  
' → logprob: -11.264878273010254
    10. ',' → logprob: -12.139878273010254

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12031273543834686
    2. 'else' → logprob: -2.2453126907348633
    3. '       ' → logprob: -5.495312690734863
    4. ' else' → logprob: -5.870312690734863
    5. '
' → logprob: -8.620312690734863
    6. '<|end|>' → logprob: -9.120312690734863
    7. ',' → logprob: -9.620312690734863
    8. 'elif' → logprob: -10.120312690734863
    9. '```' → logprob: -10.620312690734863
    10. '	else' → logprob: -10.620312690734863

Token 133: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05912470817565918
    2. '   ' → logprob: -3.059124708175659
    3. ' else' → logprob: -4.559124946594238
    4. 'elif' → logprob: -11.809124946594238
    5. '	else' → logprob: -13.809124946594238
    6. '
' → logprob: -14.434124946594238
    7. '    
' → logprob: -14.684124946594238
    8. '  ' → logprob: -14.934124946594238
    9. ',' → logprob: -15.434124946594238
    10. '_else' → logprob: -15.434124946594238

Token 134: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18786975741386414
    2. '       ' → logprob: -1.9378697872161865
    3. ':' → logprob: -3.6878697872161865
    4. '{
' → logprob: -6.687869548797607
    5. '   ' → logprob: -7.937869548797607
    6. '[parent' → logprob: -8.937870025634766
    7. 'parent' → logprob: -9.312870025634766
    8. '[' → logprob: -9.312870025634766
    9. '{' → logprob: -9.562870025634766
    10. ' :
' → logprob: -10.062870025634766

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007345127407461405
    2. 'parent' → logprob: -6.007345199584961
    3. ' parent' → logprob: -6.507345199584961
    4. '{
' → logprob: -6.882345199584961
    5. ':
' → logprob: -7.007345199584961
    6. '[parent' → logprob: -7.132345199584961
    7. '(parent' → logprob: -8.882345199584961
    8. ':' → logprob: -9.007345199584961
    9. '{' → logprob: -9.132345199584961
    10. '	parent' → logprob: -9.382345199584961

Token 136: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.005618265364319086
    2. ' parent' → logprob: -5.505618095397949
    3. '       ' → logprob: -6.630618095397949
    4. '[parent' → logprob: -9.00561809539795
    5. '(parent' → logprob: -10.50561809539795
    6. '	parent' → logprob: -10.88061809539795
    7. '{
' → logprob: -11.25561809539795
    8. ',parent' → logprob: -11.63061809539795
    9. '.parent' → logprob: -11.75561809539795
    10. '           ' → logprob: -12.25561809539795

Token 137: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '[r' → logprob: -12.375004768371582
    3. '[x' → logprob: -15.750004768371582
    4. '(rx' → logprob: -16.000003814697266
    5. '[root' → logprob: -16.250003814697266
    6. '   ' → logprob: -17.125003814697266
    7. ' [' → logprob: -17.875003814697266
    8. '[parent' → logprob: -17.875003814697266
    9. '       ' → logprob: -18.250003814697266
    10. '```' → logprob: -18.375003814697266

Token 138: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -2.4987974029500037e-05
    2. ' ry' → logprob: -11.000024795532227
    3. 'rx' → logprob: -12.125024795532227
    4. '   ' → logprob: -13.250024795532227
    5. '[' → logprob: -14.125024795532227
    6. '```' → logprob: -16.750024795532227
    7. ' ' → logprob: -16.875024795532227
    8. '  ' → logprob: -17.500024795532227
    9. '    ' → logprob: -17.750024795532227
    10. 'py' → logprob: -17.875024795532227

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21008819341659546
    2. '=' → logprob: -1.7100882530212402
    3. ' =' → logprob: -5.33508825302124
    4. ']=' → logprob: -5.58508825302124
    5. ')' → logprob: -10.085087776184082
    6. ' ]' → logprob: -11.085087776184082
    7. '[' → logprob: -12.335087776184082
    8. '   ' → logprob: -14.210087776184082
    9. ')=' → logprob: -14.210087776184082
    10. '[parent' → logprob: -14.460087776184082

Token 140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052342405542731285
    2. ' =' → logprob: -5.255234241485596
    3. '[' → logprob: -16.630233764648438
    4. ')' → logprob: -16.630233764648438
    5. '=root' → logprob: -17.005233764648438
    6. '=r' → logprob: -17.130233764648438
    7. '=x' → logprob: -17.380233764648438
    8. ']=' → logprob: -17.380233764648438
    9. '[parent' → logprob: -17.380233764648438
    10. ']' → logprob: -17.380233764648438

Token 141: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0002036595979006961
    2. ' rx' → logprob: -8.500204086303711
    3. '(rx' → logprob: -15.750204086303711
    4. 'rv' → logprob: -18.37520408630371
    5. '_rx' → logprob: -18.37520408630371
    6. '.rx' → logprob: -18.87520408630371
    7. 'tx' → logprob: -19.25020408630371
    8. 'ry' → logprob: -19.37520408630371
    9. 'rxjs' → logprob: -19.62520408630371
    10. 'rc' → logprob: -20.12520408630371

Token 142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051802195608615875
    2. 'if' → logprob: -3.051802158355713
    3. '       ' → logprob: -5.926802158355713
    4. ' if' → logprob: -7.551802158355713
    5. '```' → logprob: -11.676802635192871
    6. '    
' → logprob: -13.301802635192871
    7. '    ' → logprob: -13.676802635192871
    8. '	if' → logprob: -13.676802635192871
    9. '        
' → logprob: -13.801802635192871
    10. ',' → logprob: -13.926802635192871

Token 143: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6160901784896851
    2. 'if' → logprob: -0.8660901784896851
    3. '       ' → logprob: -3.3660902976989746
    4. ' if' → logprob: -5.366090297698975
    5. '```' → logprob: -8.866089820861816
    6. ',' → logprob: -12.741089820861816
    7. '        
' → logprob: -12.866089820861816
    8. '	if' → logprob: -12.991089820861816
    9. '           ' → logprob: -13.366089820861816
    10. '    ' → logprob: -13.366089820861816

Token 144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.656383680412546e-05
    2. '       ' → logprob: -10.375046730041504
    3. '   ' → logprob: -11.875046730041504
    4. ' if' → logprob: -11.875046730041504
    5. '        
' → logprob: -14.125046730041504
    6. '           ' → logprob: -14.625046730041504
    7. '            
' → logprob: -16.750045776367188
    8. '
' → logprob: -16.875045776367188
    9. '    
' → logprob: -17.000045776367188
    10. '	if' → logprob: -17.500045776367188

Token 145: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.00033546582562848926
    2. ' rank' → logprob: -8.000335693359375
    3. '(rank' → logprob: -17.125335693359375
    4. '
' → logprob: -19.875335693359375
    5. '.rank' → logprob: -21.500335693359375
    6. '_rank' → logprob: -21.625335693359375
    7. 'rk' → logprob: -22.000335693359375
    8. 'Rank' → logprob: -22.750335693359375
    9. '   ' → logprob: -22.875335693359375
    10. 'r' → logprob: -23.000335693359375

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.75
    3. '[root' → logprob: -19.5
    4. '[parent' → logprob: -19.5
    5. 'rx' → logprob: -19.625
    6. '(rx' → logprob: -19.875
    7. '   ' → logprob: -20.625
    8. '[
' → logprob: -20.875
    9. '```' → logprob: -21.125
    10. '

' → logprob: -21.375

Token 147: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.02327471412718296
    2. '[' → logprob: -3.7732746601104736
    3. ' rx' → logprob: -10.523274421691895
    4. '(rx' → logprob: -13.148274421691895
    5. '_rx' → logprob: -15.898274421691895
    6. 'x' → logprob: -17.27327537536621
    7. 'ry' → logprob: -17.27327537536621
    8. 'Rx' → logprob: -17.52327537536621
    9. 'rv' → logprob: -17.77327537536621
    10. '.rx' → logprob: -17.89827537536621

Token 148: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12844344973564148
    2. '==' → logprob: -2.128443479537964
    3. ']==' → logprob: -7.378443241119385
    4. ' ==' → logprob: -7.628443241119385
    5. '[x' → logprob: -8.878443717956543
    6. 'rx' → logprob: -9.128443717956543
    7. ']' → logprob: -9.628443717956543
    8. '==
' → logprob: -10.628443717956543
    9. '[r' → logprob: -10.878443717956543
    10. '(rx' → logprob: -11.003443717956543

Token 149: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -9.519893501419574e-05
    2. ' ==' → logprob: -10.62509536743164
    3. '=' → logprob: -10.75009536743164
    4. '==
' → logprob: -10.87509536743164
    5. '[' → logprob: -11.37509536743164
    6. ']==' → logprob: -11.37509536743164
    7. '===' → logprob: -11.87509536743164
    8. '()==' → logprob: -16.12509536743164
    9. '====' → logprob: -16.50009536743164
    10. '[]' → logprob: -16.87509536743164

Token 150: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -2.7968066206085496e-05
    2. ' rank' → logprob: -10.500027656555176
    3. '(rank' → logprob: -15.000027656555176
    4. '.rank' → logprob: -20.750028610229492
    5. '
' → logprob: -21.875028610229492
    6. '   ' → logprob: -21.875028610229492
    7. '[' → logprob: -23.125028610229492
    8. '_rank' → logprob: -23.375028610229492
    9. 'race' → logprob: -24.000028610229492
    10. ' ' → logprob: -24.000028610229492

Token 151: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'rx' → logprob: -15.75
    3. '(rx' → logprob: -17.375
    4. '```' → logprob: -21.375
    5. '[
' → logprob: -21.5
    6. 'x' → logprob: -21.75
    7. '_rx' → logprob: -21.875
    8. ' rx' → logprob: -22.125
    9. ' [' → logprob: -22.125
    10. '   ' → logprob: -22.375

Token 152: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -1.9981420336989686e-05
    2. ' ry' → logprob: -11.250020027160645
    3. 'rx' → logprob: -12.250020027160645
    4. '[' → logprob: -13.125020027160645
    5. 'Ry' → logprob: -17.375019073486328
    6. 'ru' → logprob: -18.000019073486328
    7. '   ' → logprob: -18.125019073486328
    8. 'py' → logprob: -18.875019073486328
    9. '```' → logprob: -19.125019073486328
    10. 'ri' → logprob: -19.500019073486328

Token 153: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4876684844493866
    2. ']:
' → logprob: -1.362668514251709
    3. ':' → logprob: -2.362668514251709
    4. ']:' → logprob: -3.612668514251709
    5. ']+=' → logprob: -5.237668514251709
    6. ']' → logprob: -6.237668514251709
    7. '():
' → logprob: -7.987668514251709
    8. '):
' → logprob: -8.11266803741455
    9. ']+' → logprob: -8.48766803741455
    10. '[' → logprob: -8.86266803741455

Token 154: '           ' (ID: 352)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.6109957098960876
    2. ' rank' → logprob: -1.3609957695007324
    3. '           ' → logprob: -1.6109957695007324
    4. '(rank' → logprob: -7.235995769500732
    5. '   ' → logprob: -8.735995292663574
    6. '       ' → logprob: -9.235995292663574
    7. '.rank' → logprob: -9.860995292663574
    8. '_rank' → logprob: -9.860995292663574
    9. '               ' → logprob: -11.860995292663574
    10. '```' → logprob: -13.610995292663574

Token 155: ' rank' (ID: 10302)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' (adapté à ' rank') → logprob: -0.0011706985533237457
    2. ' rank' → logprob: -6.751170635223389
    3. '   ' → logprob: -14.751171112060547
    4. '           ' → logprob: -16.501171112060547
    5. '(rank' → logprob: -17.251171112060547
    6. '       ' → logprob: -19.626171112060547
    7. '_rank' → logprob: -19.751171112060547
    8. '.rank' → logprob: -19.876171112060547
    9. '
' → logprob: -20.876171112060547
    10. '               ' → logprob: -21.376171112060547

Token 156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '(rx' → logprob: -20.875
    3. '```' → logprob: -21.25
    4. 'rx' → logprob: -21.25
    5. '   ' → logprob: -22.5
    6. ' [' → logprob: -22.75
    7. '[r' → logprob: -23.0
    8. '_rx' → logprob: -23.375
    9. ' rx' → logprob: -23.5
    10. '[ix' → logprob: -24.625

Token 157: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.16023924946784973
    2. '[' → logprob: -1.9102392196655273
    3. '(rx' → logprob: -12.160239219665527
    4. ' rx' → logprob: -12.285239219665527
    5. '_rx' → logprob: -12.660239219665527
    6. 'Rx' → logprob: -14.160239219665527
    7. 'x' → logprob: -14.785239219665527
    8. '.rx' → logprob: -15.035239219665527
    9. '   ' → logprob: -16.285240173339844
    10. 'qx' → logprob: -16.410240173339844

Token 158: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2706679403781891
    2. ']+=' → logprob: -1.5206679105758667
    3. ' +=' → logprob: -4.270668029785156
    4. ']' → logprob: -5.395668029785156
    5. '[' → logprob: -9.895668029785156
    6. '   ' → logprob: -13.145668029785156
    7. ' ]' → logprob: -13.645668029785156
    8. '+' → logprob: -14.020668029785156
    9. '[i' → logprob: -14.645668029785156
    10. '    ' → logprob: -15.895668029785156

Token 159: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0016111508011817932
    2. ' +=' → logprob: -6.501611232757568
    3. ']+=' → logprob: -9.12661075592041
    4. '+' → logprob: -17.376611709594727
    5. '[' → logprob: -17.626611709594727
    6. '   ' → logprob: -18.751611709594727
    7. '=' → logprob: -19.001611709594727
    8. '+='' → logprob: -19.251611709594727
    9. '+="' → logprob: -19.876611709594727
    10. ']' → logprob: -20.501611709594727

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.250003814697266
    4. '
' → logprob: -21.375003814697266
    5. '  ' → logprob: -21.500003814697266
    6. '```' → logprob: -21.625003814697266
    7. '[' → logprob: -22.250003814697266
    8. '       ' → logprob: -22.625003814697266
    9. '１' → logprob: -23.375003814697266
    10. '3' → logprob: -23.500003814697266

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.375001907348633
    4. '
' → logprob: -19.750001907348633
    5. '```' → logprob: -21.125001907348633
    6. '１' → logprob: -21.750001907348633
    7. '[' → logprob: -21.750001907348633
    8. '

' → logprob: -22.250001907348633
    9. '-' → logprob: -22.375001907348633
    10. '  ' → logprob: -22.812501907348633

Token 162: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0385950542986393
    2. 'def' → logprob: -4.538595199584961
    3. '
' → logprob: -4.913595199584961
    4. ' for' → logprob: -5.038595199584961
    5. 'n' → logprob: -5.663595199584961
    6. 'm' → logprob: -5.663595199584961
    7. '    
' → logprob: -6.163595199584961
    8. '  
' → logprob: -6.663595199584961
    9. '

' → logprob: -7.788595199584961
    10. '<|end|>' → logprob: -7.788595199584961

Token 163: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022850260138511658
    2. 'edges' → logprob: -6.752285003662109
    3. 'result' → logprob: -8.62728500366211
    4. 'q' → logprob: -8.62728500366211
    5. 'count' → logprob: -8.62728500366211
    6. 'pairs' → logprob: -8.62728500366211
    7. 'results' → logprob: -9.25228500366211
    8. 'res' → logprob: -9.87728500366211
    9. 'ans' → logprob: -9.87728500366211
    10. ' for' → logprob: -10.00228500366211

Token 164: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04871238395571709
    2. '_' → logprob: -3.0487124919891357
    3. ' i' → logprob: -9.298712730407715
    4. ' range' → logprob: -10.923712730407715
    5. '_i' → logprob: -11.673712730407715
    6. 'i' → logprob: -13.048712730407715
    7. 'range' → logprob: -13.298712730407715
    8. ' ' → logprob: -13.423712730407715
    9. '_range' → logprob: -14.173712730407715
    10. ' ' → logprob: -15.048712730407715

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38750511407852173
    2. 'in' → logprob: -1.137505054473877
    3. '_' → logprob: -8.262505531311035
    4. ' ' → logprob: -8.637505531311035
    5. ' _' → logprob: -9.012505531311035
    6. 'i' → logprob: -10.637505531311035
    7. ' i' → logprob: -11.012505531311035
    8. 'range' → logprob: -11.012505531311035
    9. 'm' → logprob: -12.637505531311035
    10. 'n' → logprob: -12.762505531311035

Token 166: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014370749704539776
    2. ' range' → logprob: -9.625144004821777
    3. 'p' → logprob: -10.250144004821777
    4. 'm' → logprob: -10.375144004821777
    5. 'input' → logprob: -12.250144004821777
    6. '(range' → logprob: -12.375144004821777
    7. 'in' → logprob: -14.500144004821777
    8. 'r' → logprob: -14.625144004821777
    9. '	range' → logprob: -15.625144004821777
    10. 'map' → logprob: -15.625144004821777

Token 167: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.03521392197581e-05
    2. '(' → logprob: -11.125030517578125
    3. 'm' → logprob: -11.125030517578125
    4. ' (' → logprob: -14.125030517578125
    5. '(M' → logprob: -16.250030517578125
    6. ' m' → logprob: -17.375030517578125
    7. '(n' → logprob: -17.625030517578125
    8. '((' → logprob: -18.250030517578125
    9. '(int' → logprob: -18.375030517578125
    10. '()' → logprob: -18.625030517578125

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05050564557313919
    2. ',' → logprob: -3.6755056381225586
    3. '):
' → logprob: -3.8005056381225586
    4. ' ):' → logprob: -6.800505638122559
    5. ')' → logprob: -8.050505638122559
    6. ':' → logprob: -10.675505638122559
    7. ' ,' → logprob: -10.925505638122559
    8. ',
' → logprob: -11.175505638122559
    9. ' ):
' → logprob: -11.425505638122559
    10. '):
' → logprob: -11.800505638122559

Token 169: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.520662248134613
    2. 'a' → logprob: -1.2706623077392578
    3. ' x' → logprob: -2.395662307739258
    4. ' a' → logprob: -4.020662307739258
    5. ',' → logprob: -4.770662307739258
    6. 'u' → logprob: -6.020662307739258
    7. ',a' → logprob: -6.020662307739258
    8. ',x' → logprob: -6.395662307739258
    9. '<|end|>' → logprob: -7.395662307739258
    10. ' u' → logprob: -8.645662307739258

Token 170: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005307873710989952
    2. 'x' (adapté à ' x') → logprob: -5.255307674407959
    3. 'u' → logprob: -10.255308151245117
    4. ' a' → logprob: -10.255308151245117
    5. ',a' → logprob: -13.755308151245117
    6. '	a' → logprob: -14.130308151245117
    7. '```' → logprob: -14.630308151245117
    8. ' x' → logprob: -14.880308151245117
    9. '   ' → logprob: -15.005308151245117
    10. ',' → logprob: -15.130308151245117

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002470350591465831
    2. ',y' → logprob: -8.50024700164795
    3. ' ,' → logprob: -10.12524700164795
    4. ',
' → logprob: -13.87524700164795
    5. 'y' → logprob: -14.00024700164795
    6. '1' → logprob: -14.25024700164795
    7. '-' → logprob: -15.00024700164795
    8. '_,' → logprob: -15.25024700164795
    9. '-,' → logprob: -16.375247955322266
    10. ',x' → logprob: -16.375247955322266

Token 172: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04858805239200592
    2. ' y' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.673587799072266
    4. '   ' → logprob: -15.798587799072266
    5. ',' → logprob: -16.173587799072266
    6. '=' → logprob: -16.923587799072266
    7. ',y' → logprob: -17.048587799072266
    8. '  ' → logprob: -17.173587799072266
    9. '    ' → logprob: -17.173587799072266
    10. '	y' → logprob: -17.548587799072266

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. 'x' → logprob: -16.251928329467773
    4. '=input' → logprob: -16.501928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '   ' → logprob: -17.126928329467773
    7. ')' → logprob: -17.376928329467773
    8. '=line' → logprob: -17.501928329467773
    9. '＝' → logprob: -17.751928329467773
    10. '=

' → logprob: -17.876928329467773

Token 174: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5759421586990356
    2. 'map' → logprob: -0.8259421586990356
    3. '	map' → logprob: -13.700942039489746
    4. ' ' → logprob: -14.325942039489746
    5. '(map' → logprob: -14.825942039489746
    6. 'list' → logprob: -15.200942039489746
    7. ' list' → logprob: -16.450942993164062
    8. 'm' → logprob: -16.825942993164062
    9. '   ' → logprob: -16.950942993164062
    10. ' ' → logprob: -17.200942993164062

Token 175: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.4849443838757e-06
    2. 'int' → logprob: -12.500004768371582
    3. '(input' → logprob: -14.625004768371582
    4. '(' → logprob: -15.625004768371582
    5. '(lambda' → logprob: -16.375003814697266
    6. ' int' → logprob: -17.625003814697266
    7. ',int' → logprob: -18.000003814697266
    8. '=int' → logprob: -18.000003814697266
    9. '<int' → logprob: -18.250003814697266
    10. '[int' → logprob: -18.500003814697266

Token 176: ' v' (ID: 323)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029709985479712486
    2. ' int' → logprob: -3.904710054397583
    3. 'lambda' → logprob: -5.404709815979004
    4. ' lambda' → logprob: -6.279709815979004
    5. 'x' → logprob: -6.404709815979004
    6. ' x' → logprob: -7.404709815979004
    7. '(int' → logprob: -8.154709815979004
    8. ':int' → logprob: -8.904709815979004
    9. ':' → logprob: -10.529709815979004
    10. '=int' → logprob: -11.404709815979004

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3187633156776428
    2. 'int' → logprob: -1.693763256072998
    3. ':int' → logprob: -2.693763256072998
    4. 'x' → logprob: -4.568763256072998
    5. ' :' → logprob: -5.193763256072998
    6. ' int' → logprob: -5.943763256072998
    7. 'v' → logprob: -6.193763256072998
    8. ' x' → logprob: -7.568763256072998
    9. ' v' → logprob: -8.443763732910156
    10. '=int' → logprob: -10.193763732910156

Token 178: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.7120533811976202e-05
    2. ' int' → logprob: -11.375017166137695
    3. 'v' → logprob: -12.125017166137695
    4. '(int' → logprob: -16.500017166137695
    5. '[int' → logprob: -16.500017166137695
    6. '<int' → logprob: -17.125017166137695
    7. 'x' → logprob: -17.250017166137695
    8. '=int' → logprob: -17.875017166137695
    9. '   ' → logprob: -18.000017166137695
    10. ':int' → logprob: -18.375017166137695

Token 179: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.742448022123426e-05
    2. '(' → logprob: -10.125067710876465
    3. 'v' → logprob: -10.875067710876465
    4. ' (' → logprob: -11.875067710876465
    5. ' ' → logprob: -14.375067710876465
    6. '(x' → logprob: -14.625067710876465
    7. ',v' → logprob: -15.750067710876465
    8. ',' → logprob: -16.25006675720215
    9. ' v' → logprob: -17.00006675720215
    10. '	v' → logprob: -17.50006675720215

Token 180: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.442888081073761
    2. ' -' → logprob: -1.6928880214691162
    3. ')' → logprob: -2.942888021469116
    4. '()' → logprob: -3.067888021469116
    5. '(v' → logprob: -3.317888021469116
    6. 'v' → logprob: -4.067888259887695
    7. '(x' → logprob: -4.817888259887695
    8. '()-' → logprob: -5.567888259887695
    9. 'x' → logprob: -5.942888259887695
    10. ' ' → logprob: -5.942888259887695

Token 181: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06215948984026909
    2. ' -' → logprob: -2.812159538269043
    3. 'v' → logprob: -9.937159538269043
    4. ',' → logprob: -10.062159538269043
    5. '()-' → logprob: -10.437159538269043
    6. ')' → logprob: -10.812159538269043
    7. ' ' → logprob: -11.312159538269043
    8. 'x' → logprob: -11.687159538269043
    9. ')-' → logprob: -12.437159538269043
    10. '   ' → logprob: -12.437159538269043

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.2501802444458
    4. '<|end|>' → logprob: -16.250179290771484
    5. '```' → logprob: -16.687679290771484
    6. ',' → logprob: -17.500179290771484
    7. '  ' → logprob: -17.812679290771484
    8. ')' → logprob: -17.812679290771484
    9. 'v' → logprob: -17.875179290771484
    10. '0' → logprob: -17.937679290771484

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. ',' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.5000057220459
    5. ')' → logprob: -17.6250057220459
    6. '```' → logprob: -17.6250057220459
    7. '<|end|>' → logprob: -18.2500057220459
    8. 'v' → logprob: -19.0000057220459
    9. '  ' → logprob: -19.3750057220459
    10. '...' → logprob: -19.3750057220459

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000585322268307209
    2. ',input' → logprob: -7.500585556030273
    3. 'input' → logprob: -11.500585556030273
    4. ' ,' → logprob: -11.625585556030273
    5. ',x' → logprob: -11.875585556030273
    6. ')' → logprob: -12.500585556030273
    7. ',y' → logprob: -14.625585556030273
    8. '),' → logprob: -14.750585556030273
    9. ' input' → logprob: -15.125585556030273
    10. '(input' → logprob: -15.250585556030273

Token 185: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011048408225178719
    2. ' input' → logprob: -4.511048316955566
    3. '(input' → logprob: -14.761048316955566
    4. ')' → logprob: -16.261049270629883
    5. ' ' → logprob: -17.011049270629883
    6. '   ' → logprob: -17.511049270629883
    7. '=input' → logprob: -18.011049270629883
    8. ',input' → logprob: -18.011049270629883
    9. '[input' → logprob: -18.761049270629883
    10. '	input' → logprob: -18.761049270629883

Token 186: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.625000953674316
    3. ' ().' → logprob: -16.125
    4. ')' → logprob: -18.25
    5. '(' → logprob: -18.375
    6. '.' → logprob: -20.375
    7. '.split' → logprob: -21.0
    8. '()
' → logprob: -21.0
    9. '())' → logprob: -21.125
    10. '   ' → logprob: -21.625

Token 187: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6047699318733066e-05
    2. '().' → logprob: -11.625016212463379
    3. 'strip' → logprob: -12.625016212463379
    4. ')' → logprob: -13.250016212463379
    5. ' split' → logprob: -14.000016212463379
    6. ').' → logprob: -14.375016212463379
    7. '())' → logprob: -16.000015258789062
    8. '()' → logprob: -16.250015258789062
    9. '(split' → logprob: -16.375015258789062
    10. '.split' → logprob: -16.500015258789062

Token 188: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20804958045482635
    2. '())' → logprob: -1.9580495357513428
    3. '))' → logprob: -3.3330495357513428
    4. '()' → logprob: -4.583049774169922
    5. '()))' → logprob: -8.083049774169922
    6. ')
' → logprob: -8.333049774169922
    7. '())
' → logprob: -8.458049774169922
    8. '))
' → logprob: -11.458049774169922
    9. '()
' → logprob: -11.833049774169922
    10. '(' → logprob: -12.708049774169922

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14541102945804596
    2. 'un' → logprob: -2.0204110145568848
    3. '
' → logprob: -7.020411014556885
    4. '    
' → logprob: -7.395411014556885
    5. ')' → logprob: -7.770411014556885
    6. ' un' → logprob: -8.145411491394043
    7. '  
' → logprob: -9.145411491394043
    8. '	un' → logprob: -9.270411491394043
    9. ' unite' → logprob: -9.645411491394043
    10. ',' → logprob: -9.895411491394043

Token 190: ' unite' (ID: 96146)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0004487844998948276
    2. ' unite' → logprob: -7.750448703765869
    3. '   ' → logprob: -12.250449180603027
    4. '
' → logprob: -12.500449180603027
    5. ' un' → logprob: -12.625449180603027
    6. 'u' → logprob: -13.375449180603027
    7. '    
' → logprob: -13.375449180603027
    8. ' united' → logprob: -14.125449180603027
    9. 'unie' → logprob: -14.375449180603027
    10. 'union' → logprob: -14.875449180603027

Token 191: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002981624274980277
    2. '(' → logprob: -8.125298500061035
    3. '(
' → logprob: -13.750298500061035
    4. ' (' → logprob: -13.875298500061035
    5. 'x' → logprob: -16.62529754638672
    6. '((' → logprob: -17.25029754638672
    7. '<|end|>' → logprob: -18.37529754638672
    8. '(y' → logprob: -18.50029754638672
    9. '(

' → logprob: -18.62529754638672
    10. ')' → logprob: -19.00029754638672

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.526570384972729e-05
    2. ',y' → logprob: -10.250055313110352
    3. ' ,' → logprob: -10.875055313110352
    4. ',
' → logprob: -14.250055313110352
    5. 'y' → logprob: -15.875055313110352
    6. '‌,' → logprob: -17.25005531311035
    7. ')' → logprob: -18.25005531311035
    8. '<|end|>' → logprob: -18.37505531311035
    9. '   ' → logprob: -18.87505531311035
    10. ',

' → logprob: -19.37505531311035

Token 193: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004886920796707273
    2. ' y' → logprob: -7.625488758087158
    3. ')y' → logprob: -15.50048828125
    4. '<|end|>' → logprob: -15.87548828125
    5. ')' → logprob: -16.00048828125
    6. 'x' → logprob: -16.50048828125
    7. '	y' → logprob: -18.00048828125
    8. ' ' → logprob: -18.87548828125
    9. ''y' → logprob: -19.87548828125
    10. '   ' → logprob: -20.75048828125

Token 194: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -17.000001907348633
    4. '))' → logprob: -18.000001907348633
    5. ')return' → logprob: -18.625001907348633
    6. ')

' → logprob: -18.875001907348633
    7. ')n' → logprob: -20.000001907348633
    8. ')`' → logprob: -20.125001907348633
    9. '())' → logprob: -20.125001907348633
    10. '),' → logprob: -20.375001907348633

Token 195: 'print' (ID: 1598)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.12677793204784393
    2. 'ans' → logprob: -2.7517778873443604
    3. 'result' → logprob: -3.5017778873443604
    4. 'answer' → logprob: -4.1267781257629395
    5. 'cnt' → logprob: -4.8767781257629395
    6. 'counter' → logprob: -7.6267781257629395
    7. 'res' → logprob: -8.251777648925781
    8. 'print' → logprob: -8.376777648925781
    9. 'sum' → logprob: -8.501777648925781
    10. 'correct' → logprob: -8.751777648925781

Token 196: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.10181865841150284
    2. '(' → logprob: -2.351818561553955
    3. '(
' → logprob: -7.226818561553955
    4. '(len' → logprob: -7.351818561553955
    5. 'sum' → logprob: -9.476819038391113
    6. '(all' → logprob: -9.851819038391113
    7. '(sorted' → logprob: -10.476819038391113
    8. '(p' → logprob: -10.601819038391113
    9. '(any' → logprob: -10.601819038391113
    10. '((' → logprob: -11.101819038391113

Token 197: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -0.48159998655319214
    2. '(' → logprob: -0.9815999865531921
    3. '(i' → logprob: -5.606599807739258
    4. '(p' → logprob: -5.606599807739258
    5. '(x' → logprob: -10.481599807739258
    6. '((' → logprob: -10.731599807739258
    7. '(a' → logprob: -10.731599807739258
    8. 'find' → logprob: -10.856599807739258
    9. '(int' → logprob: -11.356599807739258
    10. '(
' → logprob: -11.606599807739258

Token 198: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2524413764476776
    2. '(p' → logprob: -1.50244140625
    3. '(' → logprob: -8.12744140625
    4. '((' → logprob: -9.25244140625
    5. 'i' → logprob: -9.37744140625
    6. '(x' → logprob: -11.50244140625
    7. 'p' → logprob: -11.87744140625
    8. '(parent' → logprob: -11.87744140625
    9. ' i' → logprob: -12.87744140625
    10. ')' → logprob: -13.37744140625

Token 199: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.37194183468818665
    2. '(p' → logprob: -1.7469418048858643
    3. ')' → logprob: -2.2469418048858643
    4. '(i' → logprob: -3.6219418048858643
    5. '(' → logprob: -6.621942043304443
    6. '())' → logprob: -6.746942043304443
    7. '()==' → logprob: -7.496942043304443
    8. ')==' → logprob: -7.996942043304443
    9. '(n' → logprob: -8.371941566467285
    10. 'p' → logprob: -9.746941566467285

Token 200: ' ==' (ID: 951)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4966452717781067
    2. '==' → logprob: -1.121645212173462
    3. '(p' → logprob: -3.371645212173462
    4. ' ==' → logprob: -3.871645212173462
    5. '()' → logprob: -5.371645450592041
    6. '(' → logprob: -5.871645450592041
    7. '()==' → logprob: -5.996645450592041
    8. ')' → logprob: -7.746645450592041
    9. ')==' → logprob: -9.871644973754883
    10. '=' → logprob: -10.496644973754883

Token 201: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.0009138475870713592
    2. ' find' → logprob: -7.000913619995117
    3. '(find' → logprob: -13.750913619995117
    4. '	find' → logprob: -14.250913619995117
    5. 'parent' → logprob: -14.875913619995117
    6. '   ' → logprob: -16.125913619995117
    7. '=find' → logprob: -16.375913619995117
    8. ')find' → logprob: -17.375913619995117
    9. '  ' → logprob: -17.875913619995117
    10. ' ' → logprob: -18.000913619995117

Token 202: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.000902884581591934
    2. '(i' → logprob: -7.1259026527404785
    3. 'p' → logprob: -9.375903129577637
    4. '(' → logprob: -11.250903129577637
    5. '((' → logprob: -14.875903129577637
    6. ' (' → logprob: -16.00090217590332
    7. 'i' → logprob: -16.75090217590332
    8. ' p' → logprob: -17.25090217590332
    9. '<p' → logprob: -17.25090217590332
    10. '	p' → logprob: -17.50090217590332

Token 203: '[i' (ID: 1768)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20145173370838165
    2. '[i' → logprob: -1.7014517784118652
    3. 'i' → logprob: -10.826451301574707
    4. ')' → logprob: -11.826451301574707
    5. ')i' → logprob: -12.076451301574707
    6. '(' → logprob: -13.076451301574707
    7. '[' → logprob: -13.826451301574707
    8. ' i' → logprob: -14.326451301574707
    9. ' (' → logprob: -14.576451301574707
    10. ')(' → logprob: -14.701451301574707

Token 204: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027526880148798227
    2. '[i' → logprob: -6.377752780914307
    3. '))' → logprob: -7.502752780914307
    4. '(i' → logprob: -8.127752304077148
    5. 'i' → logprob: -9.252752304077148
    6. ')i' → logprob: -9.502752304077148
    7. ')
' → logprob: -11.502752304077148
    8. '])' → logprob: -12.127752304077148
    9. ')`' → logprob: -12.127752304077148
    10. ' )' → logprob: -12.252752304077148

Token 205: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2566058933734894
    2. 'for' → logprob: -1.506605863571167
    3. ')' → logprob: -5.381606101989746
    4. '))' → logprob: -9.881606101989746
    5. '	for' → logprob: -12.131606101989746
    6. '   ' → logprob: -12.256606101989746
    7. ' ' → logprob: -12.756606101989746
    8. ' ' → logprob: -14.881606101989746
    9. '  ' → logprob: -15.506606101989746
    10. '
' → logprob: -15.881606101989746

Token 206: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0592563152313232
    2. ' range' → logprob: -1.0592563152313232
    3. 'range' → logprob: -1.3092563152313232
    4. ' i' → logprob: -3.3092563152313232
    5. ' ' → logprob: -12.059256553649902
    6. '(range' → logprob: -14.184256553649902
    7. '  ' → logprob: -14.309256553649902
    8. ' in' → logprob: -15.059256553649902
    9. ')' → logprob: -15.059256553649902
    10. '
' → logprob: -15.809256553649902

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01008162647485733
    2. ' range' → logprob: -5.135081768035889
    3. 'in' → logprob: -6.135081768035889
    4. 'range' → logprob: -6.385081768035889
    5. '(range' → logprob: -8.88508129119873
    6. ')' → logprob: -9.01008129119873
    7. ' n' → logprob: -11.76008129119873
    8. ' i' → logprob: -12.13508129119873
    9. ' )' → logprob: -12.13508129119873
    10. 'n' → logprob: -12.51008129119873

Token 208: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07888989895582199
    2. ' range' → logprob: -2.578889846801758
    3. '(range' → logprob: -15.703889846801758
    4. '	range' → logprob: -18.453889846801758
    5. ' ' → logprob: -19.578889846801758
    6. ')' → logprob: -19.703889846801758
    7. '  ' → logprob: -20.953889846801758
    8. '   ' → logprob: -21.203889846801758
    9. '.range' → logprob: -21.328889846801758
    10. 'Range' → logprob: -22.078889846801758

Token 209: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.182190554682165e-05
    2. 'n' → logprob: -9.750061988830566
    3. '(' → logprob: -12.625061988830566
    4. ' n' → logprob: -15.750061988830566
    5. ' (' → logprob: -17.37506103515625
    6. ')n' → logprob: -18.25006103515625
    7. '(
' → logprob: -18.50006103515625
    8. ',n' → logprob: -19.50006103515625
    9. '(len' → logprob: -19.75006103515625
    10. ')' → logprob: -20.00006103515625

Token 210: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028233008924871683
    2. ')' → logprob: -5.877823352813721
    3. ')))' → logprob: -11.377822875976562
    4. '))
' → logprob: -12.127822875976562
    5. ')
' → logprob: -13.752822875976562
    6. ')}' → logprob: -16.127822875976562
    7. '),' → logprob: -16.377822875976562
    8. ' ))' → logprob: -16.502822875976562
    9. '})' → logprob: -17.377822875976562
    10. '])' → logprob: -18.127822875976562


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 208
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 193
Précision stricte (1ère position): 41.83%
Précision adaptée (1ère position): 46.15%
Précision (top 10): 92.79%
================================================================================
