================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    """
    Lit les données d'entrée de l'utilisateur. 
    L'utilisateur saisit d'abord un entier n (nombre d'éléments), 
    puis saisit n entiers (la liste des couleurs, ou valeurs quelconques).
    
    Returns:
        int: Le nombre d'éléments n.
        list of int: La liste des entiers saisis.
    """
    n = int(input())
    c = [int(input()) for _ in range(n)]
    return n, c

def calculate_previous_occurrences(c):
    """
    Pour chaque valeur de la liste c, trouve la position précédente où cette valeur est apparue.
    Si une valeur n'a jamais été vue auparavant, assigne -1.

    Args:
        c (list of int): La liste des entiers représentant des couleurs ou valeurs quelconques.

    Returns:
        list of int: Une liste r telle que r[i] est l'index précédent de c[i]
                     où c[i] == c[r[i]], ou -1 si c[i] n'est jamais apparu avant.
    """
    n = len(c)
    r = [-1] * n  # tableau résultat initialisé à -1
    last_seen = dict()  # dictionnaire pour mémoriser la dernière occurrence de chaque valeur
    for i, value in enumerate(c):
        if value in last_seen:
            # Si déjà vu, on stocke la dernière position et on met à jour
            r[i] = last_seen[value]
        # Met à jour l'index courant pour ce value
        last_seen[value] = i
    return r

def compute_dp(r, modulo=10**9+7):
    """
    Applique le calcul dynamique basé sur les occurrences passées enregistrées dans r.
    Calcule pour chaque position le nombre de façons d'atteindre cette position selon les règles :
        - Si la valeur à l'indice i n'a jamais été vue ou juste vue à l'indice i-1, on ne change rien.
        - Sinon, on additionne les façons du pas précédent et de la précédente occurrence trouvée.
    Le résultat est calculé modulo le paramètre modulo.

    Args:
        r (list of int): La liste indiquant l'apparition précédente de chaque valeur.
        modulo (int): L'entier par lequel on prend le reste pour éviter les débordements.

    Returns:
        list of int: Le tableau dynamique des résultats intermédiaires jusqu'à chaque position.
    """
    n = len(r)
    dp = [1] * n  # Initialisation : il y a au moins une façon pour chaque élément
    dp[0] = 1     # La première case est toujours 1
    for i in range(1, n):
        if r[i] == -1:
            # Si aucune occurrence précédente, même valeur que dp[i-1]
            dp[i] = dp[i-1]
        elif r[i] == i-1:
            # Si occurrence précédente immédiatement avant, même valeur que dp[i-1]
            dp[i] = dp[i-1]
        else:
            # Sinon, ajoute le nombre de façons jusqu'à la précédente occurrence
            dp[i] = (dp[i-1] + dp[r[i]]) % modulo
    return dp

def main():
    """
    Point d'entrée du script. 
    1. Lit les entrées utilisateur,
    2. Calcule les occurrences précédentes,
    3. Applique la programmation dynamique pour obtenir le résultat final,
    4. Affiche le résultat pour la dernière position de la liste saisie.
    """
    n, c = read_input()
    r = calculate_previous_occurrences(c)
    dp = compute_dp(r)
    print(dp[-1])

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.988785445690155
    2. '\' → logprob: -1.2387855052947998
    3. '\n' → logprob: -1.3637855052947998
    4. '   ' → logprob: -3.1137855052948
    5. '    
' → logprob: -4.863785266876221
    6. '
' → logprob: -5.113785266876221
    7. ' 
' → logprob: -5.613785266876221
    8. '``' → logprob: -5.863785266876221
    9. ':' → logprob: -6.113785266876221
    10. ''\' → logprob: -6.613785266876221

Token 5: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.028692428022623062
    2. '   ' → logprob: -4.653692245483398
    3. 'Reads' → logprob: -5.028692245483398
    4. '""' → logprob: -5.278692245483398
    5. 'Read' → logprob: -6.028692245483398
    6. ' reads' → logprob: -6.903692245483398
    7. '```' → logprob: -6.903692245483398
    8. ''''' → logprob: -7.028692245483398
    9. ' """' → logprob: -7.903692245483398
    10. 'Returns' → logprob: -8.278692245483398

Token 7: ' Lit' (ID: 45595)
  Prédit: 'Read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Read' → logprob: -0.5392963886260986
    2. 'Reads' → logprob: -1.1642963886260986
    3. '"""' → logprob: -2.9142963886260986
    4. '   ' → logprob: -3.7892963886260986
    5. '       ' → logprob: -5.4142961502075195
    6. 'Get' → logprob: -5.5392961502075195
    7. 'Accept' → logprob: -6.1642961502075195
    8. 'Receive' → logprob: -6.4142961502075195
    9. 'Returns' → logprob: -6.5392961502075195
    10. ' reads' → logprob: -6.5392961502075195

Token 8: ' les' (ID: 1341)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9673304557800293
    2. 'er' → logprob: -1.7173304557800293
    3. ' les' → logprob: -1.9673304557800293
    4. ' e' → logprob: -2.7173304557800293
    5. '   ' → logprob: -2.9673304557800293
    6. ' ' → logprob: -3.3423304557800293
    7. ' input' → logprob: -3.5923304557800293
    8. ' le' → logprob: -3.7173304557800293
    9. ' inputs' → logprob: -3.7173304557800293
    10. ' une' → logprob: -4.717330455780029

Token 9: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.29084643721580505
    2. ' données' → logprob: -1.5408464670181274
    3. '   ' → logprob: -4.540846347808838
    4. ' ' → logprob: -4.790846347808838
    5. ' lignes' → logprob: -5.165846347808838
    6. 'l' → logprob: -5.415846347808838
    7. ' entr' → logprob: -5.915846347808838
    8. 'don' → logprob: -6.415846347808838
    9. ' caractères' → logprob: -7.040846347808838
    10. 'entrée' → logprob: -7.290846347808838

Token 10: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17710918188095093
    2. ' d' → logprob: -2.4271092414855957
    3. ' de' → logprob: -3.6771092414855957
    4. ' entr' → logprob: -4.302109241485596
    5. ' du' → logprob: -4.302109241485596
    6. ' en' → logprob: -4.927109241485596
    7. 'd' → logprob: -5.552109241485596
    8. ' ' → logprob: -6.302109241485596
    9. 'du' → logprob: -6.677109241485596
    10. 'de' → logprob: -6.927109241485596

Token 11: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.11431387811899185
    2. 'entrée' → logprob: -2.864313840866089
    3. 'es' → logprob: -3.739313840866089
    4. 'e' → logprob: -4.114314079284668
    5. '’entrée' → logprob: -5.614314079284668
    6. ' entrée' → logprob: -5.864314079284668
    7. ''une' → logprob: -6.489314079284668
    8. ''' → logprob: -7.114314079284668
    9. 'entr' → logprob: -8.239314079284668
    10. 'une' → logprob: -8.364314079284668

Token 12: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01227664016187191
    2. '\n' → logprob: -5.762276649475098
    3. '```' → logprob: -5.887276649475098
    4. ' ' → logprob: -6.262276649475098
    5. '    ' → logprob: -6.762276649475098
    6. '
' → logprob: -7.137276649475098
    7. ' en' → logprob: -8.387276649475098
    8. '       ' → logprob: -8.512276649475098
    9. '\' → logprob: -8.512276649475098
    10. '`' → logprob: -8.512276649475098

Token 13: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7317933440208435
    2. ' l' → logprob: -1.7317934036254883
    3. ' stdin' → logprob: -1.7317934036254883
    4. 'stdin' → logprob: -3.1067934036254883
    5. ' sys' → logprob: -3.2317934036254883
    6. 'sys' → logprob: -3.7317934036254883
    7. '   ' → logprob: -3.8567934036254883
    8. ' standard' → logprob: -4.481793403625488
    9. ' la' → logprob: -4.731793403625488
    10. 'la' → logprob: -4.856793403625488

Token 14: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.5531723499298096
    2. 'a' → logprob: -1.5531723499298096
    3. ''entrée' → logprob: -1.6781723499298096
    4. ''' → logprob: -3.8031723499298096
    5. 'e' → logprob: -6.9281721115112305
    6. ''a' → logprob: -7.0531721115112305
    7. ''
' → logprob: -7.8031721115112305
    8. 'u' → logprob: -7.8031721115112305
    9. ''application' → logprob: -8.30317211151123
    10. 'input' → logprob: -8.55317211151123

Token 15: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027888774871826172
    2. '\n' → logprob: -3.902888774871826
    3. '
' → logprob: -5.777888774871826
    4. '    
' → logprob: -6.652888774871826
    5. '```' → logprob: -7.277888774871826
    6. '    ' → logprob: -7.902888774871826
    7. '       ' → logprob: -8.277889251708984
    8. '.' → logprob: -8.402889251708984
    9. '`' → logprob: -8.652889251708984
    10. ' ' → logprob: -8.777889251708984

Token 16: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006450911983847618
    2. '\n' → logprob: -5.75645112991333
    3. '"""' → logprob: -7.13145112991333
    4. '```' → logprob: -7.13145112991333
    5. '"""
' → logprob: -7.75645112991333
    6. '\' → logprob: -8.131450653076172
    7. '    
' → logprob: -8.506450653076172
    8. ' ' → logprob: -8.881450653076172
    9. '`' → logprob: -9.006450653076172
    10. '       ' → logprob: -9.381450653076172

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027946571353822947
    2. '"""' → logprob: -6.5027947425842285
    3. 'return' → logprob: -7.6277947425842285
    4. '"""
' → logprob: -8.12779426574707
    5. '```' → logprob: -9.00279426574707
    6. '    
' → logprob: -9.37779426574707
    7. '       ' → logprob: -9.75279426574707
    8. '\n' → logprob: -10.00279426574707
    9. '""' → logprob: -10.12779426574707
    10. '
' → logprob: -10.50279426574707

Token 18: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018439209088683128
    2. 'return' → logprob: -6.6268439292907715
    3. '"""' → logprob: -8.126843452453613
    4. '    
' → logprob: -10.001843452453613
    5. '```' → logprob: -10.376843452453613
    6. '"""
' → logprob: -10.501843452453613
    7. '    ' → logprob: -10.876843452453613
    8. '       ' → logprob: -11.126843452453613
    9. '  ' → logprob: -11.251843452453613
    10. 'def' → logprob: -11.501843452453613

Token 19: ''utilisateur' (ID: 140803)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21050578355789185
    2. 'a' → logprob: -2.210505723953247
    3. 'es' → logprob: -2.835505723953247
    4. '   ' → logprob: -4.585505962371826
    5. 'i' → logprob: -5.835505962371826
    6. ''utilisateur' → logprob: -5.835505962371826
    7. ''entrée' → logprob: -6.710505962371826
    8. 'ignes' → logprob: -7.335505962371826
    9. 'ecture' → logprob: -7.460505962371826
    10. 'u' → logprob: -7.460505962371826

Token 20: ' sais' (ID: 30010)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.21017785370349884
    2. ' doit' → logprob: -2.8351778984069824
    3. 'pe' → logprob: -3.3351778984069824
    4. '   ' → logprob: -4.085177898406982
    5. 's' → logprob: -4.210177898406982
    6. ' entre' → logprob: -4.585177898406982
    7. ' est' → logprob: -4.585177898406982
    8. ' ' → logprob: -4.585177898406982
    9. ' a' → logprob: -4.960177898406982
    10. ' peux' → logprob: -5.085177898406982

Token 21: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0013501148205250502
    2. 't' → logprob: -6.751349925994873
    3. 'i' → logprob: -9.001350402832031
    4. 'e' → logprob: -11.001350402832031
    5. '_it' → logprob: -12.251350402832031
    6. ' it' → logprob: -12.376350402832031
    7. 'ît' → logprob: -12.626350402832031
    8. 'et' → logprob: -12.626350402832031
    9. '```' → logprob: -12.751350402832031
    10. 'ie' → logprob: -13.251350402832031

Token 22: ' d' (ID: 272)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6449291706085205
    2. ' des' → logprob: -0.8949291706085205
    3. 'une' → logprob: -4.019928932189941
    4. ' ' → logprob: -4.144928932189941
    5. ' un' → logprob: -4.644928932189941
    6. 'des' → logprob: -4.894928932189941
    7. ' plusieurs' → logprob: -5.519928932189941
    8. ' les' → logprob: -6.019928932189941
    9. ' du' → logprob: -6.144928932189941
    10. ' jusqu' → logprob: -6.769928932189941

Token 23: ''abord' (ID: 89989)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.7851362228393555
    2. 'e' → logprob: -1.0351362228393555
    3. ''un' → logprob: -2.2851362228393555
    4. ''' → logprob: -3.1601362228393555
    5. 'es' → logprob: -3.6601362228393555
    6. ''u' → logprob: -5.1601362228393555
    7. ''entrée' → logprob: -5.9101362228393555
    8. 'u' → logprob: -6.0351362228393555
    9. 'une' → logprob: -6.1601362228393555
    10. ''abord' → logprob: -6.9101362228393555

Token 24: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6113266348838806
    2. ' une' → logprob: -1.2363266944885254
    3. 'une' → logprob: -2.8613266944885254
    4. ' le' → logprob: -2.8613266944885254
    5. 'le' → logprob: -4.361326694488525
    6. 'la' → logprob: -4.736326694488525
    7. ' ' → logprob: -4.736326694488525
    8. '   ' → logprob: -4.861326694488525
    9. ' l' → logprob: -5.486326694488525
    10. ' un' → logprob: -5.611326694488525

Token 25: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2006860077381134
    2. ' entier' → logprob: -2.325685977935791
    3. ' nombre' → logprob: -2.700685977935791
    4. 'nombre' → logprob: -4.950685977935791
    5. 'ent' → logprob: -5.450685977935791
    6. ' e' → logprob: -6.075685977935791
    7. ' ' → logprob: -7.575685977935791
    8. 'a' → logprob: -7.825685977935791
    9. ' ent' → logprob: -7.825685977935791
    10. 'n' → logprob: -8.32568645477295

Token 26: ' n' (ID: 297)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.5719085335731506
    2. ',' → logprob: -2.196908473968506
    3. ' ' → logprob: -2.446908473968506
    4. '   ' → logprob: -2.696908473968506
    5. ' n' → logprob: -2.946908473968506
    6. ' )' → logprob: -3.196908473968506
    7. ' représentant' → logprob: -4.321908473968506
    8. ' indiqu' → logprob: -4.446908473968506
    9. ' `' → logprob: -4.571908473968506
    10. 'n' → logprob: -5.446908473968506

Token 27: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3046126961708069
    2. '   ' → logprob: -1.804612636566162
    3. ' ,' → logprob: -3.304612636566162
    4. ' ' → logprob: -3.804612636566162
    5. '.' → logprob: -4.804612636566162
    6. ',
' → logprob: -5.429612636566162
    7. '\' → logprob: -5.554612636566162
    8. ':' → logprob: -5.929612636566162
    9. ' (' → logprob: -5.929612636566162
    10. ')' → logprob: -5.929612636566162

Token 28: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10784260928630829
    2. '),' → logprob: -2.7328426837921143
    3. ' )' → logprob: -3.4828426837921143
    4. ' ),' → logprob: -5.732842445373535
    5. ',' → logprob: -6.732842445373535
    6. 'e' → logprob: -7.357842445373535
    7. ' ' → logprob: -8.482842445373535
    8. ' représentant' → logprob: -8.607842445373535
    9. ').' → logprob: -8.732842445373535
    10. ' ' → logprob: -8.982842445373535

Token 29: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9709290266036987
    2. ' d' → logprob: -1.0959290266036987
    3. 'de' → logprob: -1.9709290266036987
    4. ')' → logprob: -2.7209291458129883
    5. '   ' → logprob: -3.0959291458129883
    6. 'd' → logprob: -3.7209291458129883
    7. ' total' → logprob: -5.720929145812988
    8. 'total' → logprob: -6.345929145812988
    9. '_de' → logprob: -6.595929145812988
    10. ' ' → logprob: -6.720929145812988

Token 30: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2185799777507782
    2. '_' → logprob: -2.3435800075531006
    3. 'e' → logprob: -3.2185800075531006
    4. ''' → logprob: -4.4685797691345215
    5. ')' → logprob: -4.7185797691345215
    6. ''é' → logprob: -4.8435797691345215
    7. 'é' → logprob: -4.9685797691345215
    8. '   ' → logprob: -5.3435797691345215
    9. ' )' → logprob: -5.8435797691345215
    10. ' lignes' → logprob: -5.8435797691345215

Token 31: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.515399694442749
    2. ''' → logprob: -1.140399694442749
    3. ''ex' → logprob: -3.390399694442749
    4. 'é' → logprob: -4.640399932861328
    5. 'él' → logprob: -4.640399932861328
    6. ''él' → logprob: -4.640399932861328
    7. ''é' → logprob: -5.015399932861328
    8. 'ex' → logprob: -5.515399932861328
    9. 'l' → logprob: -6.390399932861328
    10. ''ent' → logprob: -6.765399932861328

Token 32: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0006173660513013601
    2. 'ment' → logprob: -7.500617504119873
    3. 'm' → logprob: -10.000617027282715
    4. '```' → logprob: -11.875617027282715
    5. 'me' → logprob: -13.500617027282715
    6. 'mé' → logprob: -13.500617027282715
    7. '`' → logprob: -13.750617027282715
    8. 'éments' → logprob: -13.875617027282715
    9. 'ements' → logprob: -14.000617027282715
    10. 'MENTS' → logprob: -14.125617027282715

Token 33: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9439647197723389
    2. ' )' → logprob: -1.0689647197723389
    3. ' à' → logprob: -1.8189647197723389
    4. ' ),' → logprob: -2.693964719772339
    5. '),' → logprob: -3.443964719772339
    6. '   ' → logprob: -6.318964958190918
    7. ' de' → logprob: -6.943964958190918
    8. ' ' → logprob: -7.068964958190918
    9. 'à' → logprob: -7.943964958190918
    10. ' que' → logprob: -8.068964958190918

Token 34: ' 
' (ID: 793)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.07370239496231079
    2. '   ' → logprob: -3.448702335357666
    3. ' ensuite' → logprob: -4.823702335357666
    4. ' ' → logprob: -4.823702335357666
    5. ' then' → logprob: -5.823702335357666
    6. ' """
' → logprob: -5.948702335357666
    7. ' 
' → logprob: -6.073702335357666
    8. '    ' → logprob: -6.323702335357666
    9. ' ' → logprob: -6.698702335357666
    10. 'ens' → logprob: -6.823702335357666

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6723995804786682
    2. ' puis' → logprob: -0.7973995804786682
    3. 'p' → logprob: -3.6723995208740234
    4. 'ens' → logprob: -5.297399520874023
    5. ')' → logprob: -6.672399520874023
    6. '    ' → logprob: -6.797399520874023
    7. ',' → logprob: -7.172399520874023
    8. '    
' → logprob: -7.297399520874023
    9. ' ensuite' → logprob: -7.422399520874023
    10. ' )' → logprob: -7.672399520874023

Token 36: ' puis' (ID: 18766)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3949491083621979
    2. ' puis' → logprob: -1.6449490785598755
    3. '   ' → logprob: -2.144949197769165
    4. 'ens' → logprob: -4.269948959350586
    5. ' p' → logprob: -7.019948959350586
    6. ' ensuite' → logprob: -7.644948959350586
    7. '    ' → logprob: -8.894948959350586
    8. ' ens' → logprob: -9.644948959350586
    9. ' ' → logprob: -9.894948959350586
    10. 'n' → logprob: -9.894948959350586

Token 37: ' sais' (ID: 30010)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -1.0868433713912964
    2. '   ' → logprob: -1.5868433713912964
    3. 'une' → logprob: -2.336843490600586
    4. 's' → logprob: -2.836843490600586
    5. ' une' → logprob: -2.836843490600586
    6. ' sais' → logprob: -3.586843490600586
    7. ' ' → logprob: -3.711843490600586
    8. 'lit' → logprob: -3.711843490600586
    9. ' ensuite' → logprob: -3.961843490600586
    10. 'n' → logprob: -3.961843490600586

Token 38: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -7.941850526549388e-06
    2. '_t' → logprob: -13.375007629394531
    3. 'т' → logprob: -13.500007629394531
    4. 'z' → logprob: -13.500007629394531
    5. 'it' → logprob: -14.250007629394531
    6. '[t' → logprob: -14.625007629394531
    7. '\t' → logprob: -14.875007629394531
    8. '(t' → logprob: -15.375007629394531
    9. '?t' → logprob: -15.875007629394531
    10. '<t' → logprob: -15.875007629394531

Token 39: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09110754728317261
    2. ' un' → logprob: -3.7161076068878174
    3. 's' → logprob: -4.341107368469238
    4. 'n' → logprob: -4.341107368469238
    5. ' une' → logprob: -4.966107368469238
    6. ' ' → logprob: -4.966107368469238
    7. '  ' → logprob: -5.341107368469238
    8. ' n' → logprob: -5.716107368469238
    9. ' la' → logprob: -6.091107368469238
    10. 'une' → logprob: -6.591107368469238

Token 40: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.06226881220936775
    2. 'i' → logprob: -2.8122687339782715
    3. 'ières' → logprob: -8.56226921081543
    4. 'ié' → logprob: -9.81226921081543
    5. '```' → logprob: -10.81226921081543
    6. 'ier' → logprob: -11.06226921081543
    7. '   ' → logprob: -12.18726921081543
    8. ' i' → logprob: -12.43726921081543
    9. '	i' → logprob: -13.56226921081543
    10. 'e' → logprob: -13.68726921081543

Token 42: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013928300701081753
    2. '\n' → logprob: -4.638928413391113
    3. ',' → logprob: -6.888928413391113
    4. '    
' → logprob: -7.263928413391113
    5. ')' → logprob: -7.263928413391113
    6. '.' → logprob: -7.638928413391113
    7. ':' → logprob: -8.138928413391113
    8. '
' → logprob: -8.513928413391113
    9. '(' → logprob: -9.263928413391113
    10. 'n' → logprob: -9.263928413391113

Token 43: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5252490639686584
    2. ' )' → logprob: -1.0252490043640137
    3. ').' → logprob: -3.5252490043640137
    4. ' ).' → logprob: -4.275249004364014
    5. ' sur' → logprob: -6.775249004364014
    6. '   ' → logprob: -7.150249004364014
    7. ',' → logprob: -7.150249004364014
    8. ' sépar' → logprob: -7.400249004364014
    9. ' ' → logprob: -7.525249004364014
    10. 's' → logprob: -7.900249004364014

Token 44: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9207135438919067
    2. 's' → logprob: -1.0457135438919067
    3. ' liste' → logprob: -1.7957135438919067
    4. ' s' → logprob: -3.545713424682617
    5. ')' → logprob: -4.170713424682617
    6. ' )' → logprob: -4.545713424682617
    7. ' list' → logprob: -4.670713424682617
    8. '  ' → logprob: -5.420713424682617
    9. ' listes' → logprob: -5.545713424682617
    10. ' table' → logprob: -6.420713424682617

Token 45: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6558424830436707
    2. ' complète' → logprob: -1.5308425426483154
    3. ' )' → logprob: -2.6558425426483154
    4. ' d' → logprob: -2.7808425426483154
    5. ' de' → logprob: -2.9058425426483154
    6. ')' → logprob: -3.1558425426483154
    7. 's' → logprob: -4.905842304229736
    8. ' ]' → logprob: -5.155842304229736
    9. ' ' → logprob: -5.655842304229736
    10. ' complete' → logprob: -6.155842304229736

Token 46: ' couleurs' (ID: 54001)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.535861074924469
    2. ' éléments' → logprob: -1.5358610153198242
    3. 'élé' → logprob: -2.410861015319824
    4. ' valeurs' → logprob: -2.660861015319824
    5. ' ent' → logprob: -4.410861015319824
    6. ' elements' → logprob: -4.785861015319824
    7. 'ent' → logprob: -5.285861015319824
    8. 'val' → logprob: -5.785861015319824
    9. ' ' → logprob: -5.785861015319824
    10. 'elements' → logprob: -6.410861015319824

Token 47: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041103423573076725
    2. ' )' → logprob: -6.129110336303711
    3. ').' → logprob: -6.629110336303711
    4. 's' → logprob: -8.379110336303711
    5. ']' → logprob: -9.254110336303711
    6. ',' → logprob: -10.004110336303711
    7. '[' → logprob: -10.379110336303711
    8. '):' → logprob: -10.629110336303711
    9. '')' → logprob: -10.754110336303711
    10. '),' → logprob: -11.004110336303711

Token 48: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5296794176101685
    2. ' )' → logprob: -0.9046794176101685
    3. '   ' → logprob: -5.779679298400879
    4. ' ' → logprob: -6.654679298400879
    5. ' ).' → logprob: -7.904679298400879
    6. ' ' → logprob: -8.279679298400879
    7. '    ' → logprob: -8.279679298400879
    8. ').' → logprob: -8.529679298400879
    9. ' la' → logprob: -8.654679298400879
    10. ' que' → logprob: -8.654679298400879

Token 49: ' valeurs' (ID: 73668)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.205644965171814
    2. ' les' → logprob: -1.830644965171814
    3. ' des' → logprob: -1.955644965171814
    4. ' indices' → logprob: -2.8306450843811035
    5. ' valeurs' → logprob: -2.9556450843811035
    6. ' leurs' → logprob: -3.2056450843811035
    7. ' "' → logprob: -3.5806450843811035
    8. ' l' → logprob: -3.5806450843811035
    9. 'des' → logprob: -3.7056450843811035
    10. 'indices' → logprob: -3.9556450843811035

Token 50: ' quelcon' (ID: 199130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5354530215263367
    2. ' des' → logprob: -1.4104530811309814
    3. ' )' → logprob: -2.2854530811309814
    4. ').' → logprob: -3.7854530811309814
    5. ' de' → logprob: -3.9104530811309814
    6. 'des' → logprob: -5.160452842712402
    7. 'de' → logprob: -5.910452842712402
    8. ' ).' → logprob: -5.910452842712402
    9. '   ' → logprob: -6.035452842712402
    10. ' ' → logprob: -6.285452842712402

Token 51: 'ques' (ID: 3531)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8157438039779663
    2. 'q' → logprob: -1.6907438039779663
    3. 'ques' → logprob: -1.6907438039779663
    4. 's' → logprob: -2.190743923187256
    5. 'e' → logprob: -3.815743923187256
    6. 'que' → logprob: -4.190743923187256
    7. 'r' → logprob: -4.190743923187256
    8. ' )' → logprob: -4.315743923187256
    9. 'es' → logprob: -5.440743923187256
    10. '`' → logprob: -6.440743923187256

Token 52: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06302875280380249
    2. '):' → logprob: -3.1880288124084473
    3. '   ' → logprob: -4.063028812408447
    4. ').' → logprob: -6.688028812408447
    5. ' )' → logprob: -7.563028812408447
    6. '):
' → logprob: -7.938028812408447
    7. ')
' → logprob: -8.063028335571289
    8. '")' → logprob: -10.813028335571289
    9. '),' → logprob: -10.938028335571289
    10. 'def' → logprob: -11.188028335571289

Token 53: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0184917151927948
    2. '"""' → logprob: -5.268491744995117
    3. '"' → logprob: -5.643491744995117
    4. '"""
' → logprob: -5.893491744995117
    5. '\n' → logprob: -6.018491744995117
    6. '```' → logprob: -6.393491744995117
    7. ')' → logprob: -6.893491744995117
    8. '\' → logprob: -7.893491744995117
    9. '`' → logprob: -7.893491744995117
    10. '    
' → logprob: -8.018491744995117

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011343818623572588
    2. '"""' → logprob: -7.376134395599365
    3. ')' → logprob: -7.876134395599365
    4. '    
' → logprob: -10.751133918762207
    5. '```' → logprob: -10.751133918762207
    6. '    ' → logprob: -10.876133918762207
    7. ' ' → logprob: -11.126133918762207
    8. '"' → logprob: -11.751133918762207
    9. ' """' → logprob: -11.876133918762207
    10. '  ' → logprob: -12.126133918762207

Token 55: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029523206874728203
    2. 'n' → logprob: -3.7795231342315674
    3. '"""' → logprob: -5.5295233726501465
    4. '```' → logprob: -7.2795233726501465
    5. 'return' → logprob: -7.6545233726501465
    6. ' ' → logprob: -8.279522895812988
    7. '    
' → logprob: -8.904522895812988
    8. 'r' → logprob: -9.029522895812988
    9. ')' → logprob: -9.029522895812988
    10. '"""
' → logprob: -9.279522895812988

Token 56: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2147062122821808
    2. ':' → logprob: -1.7147061824798584
    3. '   ' → logprob: -4.8397064208984375
    4. 'n' → logprob: -5.9647064208984375
    5. '    ' → logprob: -7.4647064208984375
    6. '```' → logprob: -7.9647064208984375
    7. ' ' → logprob: -8.339706420898438
    8. ' ' → logprob: -8.464706420898438
    9. ' ):' → logprob: -8.464706420898438
    10. ' n' → logprob: -8.714706420898438

Token 57: '       ' (ID: 309)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4504394233226776
    2. ' n' → logprob: -1.825439453125
    3. 'n' → logprob: -2.700439453125
    4. '   ' → logprob: -2.825439453125
    5. ' list' → logprob: -3.950439453125
    6. ' List' → logprob: -4.075439453125
    7. ' int' → logprob: -4.450439453125
    8. ' )' → logprob: -5.575439453125
    9. 'List' → logprob: -5.575439453125
    10. 'int' → logprob: -5.950439453125

Token 58: ' int' (ID: 677)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07266426086425781
    2. 'List' → logprob: -2.697664260864258
    3. ' list' → logprob: -6.072664260864258
    4. ' List' → logprob: -8.322664260864258
    5. '   ' → logprob: -9.572664260864258
    6. 'tuple' → logprob: -10.322664260864258
    7. 'n' → logprob: -10.697664260864258
    8. 'Tuple' → logprob: -11.072664260864258
    9. 'int' (adapté à ' int') → logprob: -11.822664260864258
    10. '_list' → logprob: -12.447664260864258

Token 59: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1828118860721588
    2. ' ,' → logprob: -1.8078118562698364
    3. ',n' → logprob: -6.682811737060547
    4. ',
' → logprob: -7.432811737060547
    5. ',int' → logprob: -8.057811737060547
    6. ')' → logprob: -8.557811737060547
    7. 'n' → logprob: -9.057811737060547
    8. '[' → logprob: -9.307811737060547
    9. '   ' → logprob: -9.307811737060547
    10. ' ,
' → logprob: -9.307811737060547

Token 60: ' Le' (ID: 2018)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06217169761657715
    2. 'n' → logprob: -2.812171697616577
    3. ' ' → logprob: -9.187171936035156
    4. ' nombre' → logprob: -10.437171936035156
    5. ' ' → logprob: -10.937171936035156
    6. ' `' → logprob: -11.687171936035156
    7. '<|end|>' → logprob: -11.812171936035156
    8. '	n' → logprob: -12.187171936035156
    9. ' )' → logprob: -12.187171936035156
    10. 'nombre' → logprob: -12.312171936035156

Token 61: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0044907694682478905
    2. 'nombre' → logprob: -5.754490852355957
    3. ' n' → logprob: -7.254490852355957
    4. ' nombres' → logprob: -7.629490852355957
    5. 'n' → logprob: -9.504490852355957
    6. ' number' → logprob: -10.754490852355957
    7. ' ' → logprob: -11.879490852355957
    8. '_nombre' → logprob: -12.004490852355957
    9. 's' → logprob: -13.004490852355957
    10. ' nb' → logprob: -13.004490852355957

Token 62: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33332958817481995
    2. '<|end|>' → logprob: -1.4583295583724976
    3. ' d' → logprob: -3.708329677581787
    4. '  ' → logprob: -4.708329677581787
    5. ' des' → logprob: -5.208329677581787
    6. ' )' → logprob: -5.583329677581787
    7. ' de' → logprob: -5.708329677581787
    8. 's' → logprob: -6.458329677581787
    9. ')' → logprob: -6.833329677581787
    10. ' n' → logprob: -7.583329677581787

Token 63: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38876253366470337
    2. ' ' → logprob: -1.2637624740600586
    3. ' d' → logprob: -3.3887624740600586
    4. 's' → logprob: -5.888762474060059
    5. ' de' → logprob: -7.263762474060059
    6. ' _' → logprob: -7.513762474060059
    7. '  ' → logprob: -8.013762474060059
    8. '<|end|>' → logprob: -8.388762474060059
    9. '_s' → logprob: -8.638762474060059
    10. ')' → logprob: -8.763762474060059

Token 64: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.05549495294690132
    2. 'é' → logprob: -3.180495023727417
    3. ' éléments' → logprob: -4.930494785308838
    4. ' ' → logprob: -5.930494785308838
    5. 'él' → logprob: -6.930494785308838
    6. ' él' → logprob: -7.555494785308838
    7. '_' → logprob: -8.680495262145996
    8. ''é' → logprob: -8.930495262145996
    9. ' é' → logprob: -9.055495262145996
    10. 'è' → logprob: -9.430495262145996

Token 65: 'ments' (ID: 1626)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5763742923736572
    2. 'ments' → logprob: -0.8263742923736572
    3. 'ment' → logprob: -7.951374053955078
    4. 'men' → logprob: -10.576374053955078
    5. ' m' → logprob: -10.951374053955078
    6. 'м' → logprob: -11.701374053955078
    7. '```' → logprob: -11.701374053955078
    8. 'me' → logprob: -12.201374053955078
    9. '-' → logprob: -12.826374053955078
    10. 'mentation' → logprob: -13.201374053955078

Token 66: ' n' (ID: 297)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06293796747922897
    2. 'n' → logprob: -4.1879377365112305
    3. ',n' → logprob: -4.1879377365112305
    4. ')' → logprob: -4.5629377365112305
    5. ',
' → logprob: -4.8129377365112305
    6. '   ' → logprob: -5.1879377365112305
    7. ' ,' → logprob: -6.5629377365112305
    8. '<|end|>' → logprob: -7.1879377365112305
    9. '\n' → logprob: -7.3129377365112305
    10. '\' → logprob: -7.3129377365112305

Token 67: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11830750107765198
    2. ')' → logprob: -3.118307590484619
    3. '   ' → logprob: -3.618307590484619
    4. '<|end|>' → logprob: -4.868307590484619
    5. '    
' → logprob: -5.118307590484619
    6. 'n' → logprob: -5.118307590484619
    7. ',
' → logprob: -5.243307590484619
    8. ' ,' → logprob: -5.493307590484619
    9. ',n' → logprob: -5.868307590484619
    10. ' 
' → logprob: -5.993307590484619

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008347192779183388
    2. '       ' → logprob: -5.008347034454346
    3. 'int' → logprob: -7.508347034454346
    4. ')' → logprob: -8.133347511291504
    5. 'list' → logprob: -8.383347511291504
    6. '```' → logprob: -8.508347511291504
    7. '    ' → logprob: -9.008347511291504
    8. 'List' → logprob: -9.508347511291504
    9. '"""' → logprob: -9.758347511291504
    10. ' list' → logprob: -10.758347511291504

Token 69: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.4081515967845917
    2. ' list' → logprob: -1.283151626586914
    3. '   ' → logprob: -3.533151626586914
    4. 'List' → logprob: -4.283151626586914
    5. ' tuple' → logprob: -4.658151626586914
    6. ' List' → logprob: -5.908151626586914
    7. 'tuple' → logprob: -6.033151626586914
    8. ' Tuple' → logprob: -9.158151626586914
    9. 'Tuple' → logprob: -9.783151626586914
    10. '```' → logprob: -9.908151626586914

Token 70: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6920055150985718
    2. '[' → logprob: -1.1920055150985718
    3. '<|end|>' → logprob: -1.6920055150985718
    4. ' of' → logprob: -5.567005634307861
    5. '<|end|>' → logprob: -6.442005634307861
    6. '```' → logprob: -6.692005634307861
    7. '[]' → logprob: -6.817005634307861
    8. '[str' → logprob: -7.442005634307861
    9. ')' → logprob: -7.692005634307861
    10. '[
' → logprob: -7.817005634307861

Token 71: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31345897912979126
    2. 'int' → logprob: -1.3134589195251465
    3. '<int' → logprob: -10.188459396362305
    4. '[int' → logprob: -10.188459396362305
    5. ' integers' → logprob: -10.313459396362305
    6. '<|end|>' → logprob: -10.313459396362305
    7. ' ints' → logprob: -10.688459396362305
    8. ' ' → logprob: -11.438459396362305
    9. ']int' → logprob: -12.063459396362305
    10. '(int' → logprob: -12.438459396362305

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10770635306835175
    2. '<|end|>' → logprob: -2.732706308364868
    3. ' :' → logprob: -3.732706308364868
    4. '   ' → logprob: -5.732706546783447
    5. '[' → logprob: -5.857706546783447
    6. '[int' → logprob: -6.232706546783447
    7. '```' → logprob: -6.982706546783447
    8. '):' → logprob: -7.107706546783447
    9. ')' → logprob: -7.357706546783447
    10. '<|end|>' → logprob: -7.357706546783447

Token 73: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7166072726249695
    2. '<|end|>' → logprob: -1.2166073322296143
    3. ' la' → logprob: -2.3416073322296143
    4. ' La' → logprob: -2.4666073322296143
    5. 'La' → logprob: -5.091607093811035
    6. ' The' → logprob: -5.091607093811035
    7. 's' → logprob: -5.466607093811035
    8. ' ' → logprob: -5.841607093811035
    9. '[]' → logprob: -6.341607093811035
    10. '  ' → logprob: -6.716607093811035

Token 74: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.0014341588830575347
    2. ' list' → logprob: -7.376434326171875
    3. ' listes' → logprob: -7.626434326171875
    4. 'liste' → logprob: -8.251434326171875
    5. ' ' → logprob: -11.251434326171875
    6. '   ' → logprob: -11.501434326171875
    7. 's' → logprob: -11.751434326171875
    8. ' Liste' → logprob: -12.001434326171875
    9. 'list' → logprob: -12.376434326171875
    10. ' lists' → logprob: -12.626434326171875

Token 75: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03542577102780342
    2. 'des' → logprob: -4.535425662994385
    3. '_des' → logprob: -5.035425662994385
    4. ' of' → logprob: -5.410425662994385
    5. '_' → logprob: -5.785425662994385
    6. ' de' → logprob: -5.785425662994385
    7. '<|end|>' → logprob: -6.410425662994385
    8. ' ' → logprob: -6.535425662994385
    9. '[' → logprob: -6.535425662994385
    10. ' d' → logprob: -6.785425662994385

Token 76: ' ent' (ID: 1121)
  Prédit: ' couleurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.34962737560272217
    2. ' valeurs' → logprob: -1.3496273756027222
    3. '_' → logprob: -3.7246274948120117
    4. ' des' → logprob: -6.099627494812012
    5. '_c' → logprob: -6.599627494812012
    6. ' colors' → logprob: -6.599627494812012
    7. '_colors' → logprob: -6.849627494812012
    8. 'cou' → logprob: -6.974627494812012
    9. ' éléments' → logprob: -7.349627494812012
    10. ' _' → logprob: -7.349627494812012

Token 77: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29103758931159973
    2. 'iers' → logprob: -1.4160375595092773
    3. 'ières' → logprob: -5.416037559509277
    4. 'r' → logprob: -5.666037559509277
    5. 'ié' → logprob: -7.041037559509277
    6. 'ier' → logprob: -7.916037559509277
    7. 'ière' → logprob: -8.916037559509277
    8. 'ités' → logprob: -9.291037559509277
    9. 'é' → logprob: -9.666037559509277
    10. '```' → logprob: -9.791037559509277

Token 78: ' sa' (ID: 880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.219558984041214
    2. '```' → logprob: -3.8445589542388916
    3. ' 
' → logprob: -3.9695589542388916
    4. ')' → logprob: -3.9695589542388916
    5. '\n' → logprob: -4.094559192657471
    6. ' ' → logprob: -4.219559192657471
    7. ',' → logprob: -4.219559192657471
    8. '    
' → logprob: -4.344559192657471
    9. '  
' → logprob: -4.344559192657471
    10. '
' → logprob: -4.469559192657471

Token 79: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.4084208905696869
    2. 'isi' → logprob: -2.0334208011627197
    3. 'is' → logprob: -2.6584208011627197
    4. 'i' → logprob: -2.7834208011627197
    5. 'u' → logprob: -3.1584208011627197
    6. 'n' → logprob: -3.9084208011627197
    7. 'nis' → logprob: -5.908421039581299
    8. 'ïs' → logprob: -6.283421039581299
    9. 'isie' → logprob: -6.408421039581299
    10. 'ns' → logprob: -6.908421039581299

Token 80: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021731950342655182
    2. ')' → logprob: -4.396731853485107
    3. '    
' → logprob: -6.021731853485107
    4. '\n' → logprob: -6.396731853485107
    5. '```' → logprob: -6.646731853485107
    6. '):' → logprob: -7.146731853485107
    7. '\' → logprob: -7.646731853485107
    8. ':' → logprob: -7.771731853485107
    9. '    ' → logprob: -8.271732330322266
    10. '"' → logprob: -8.396732330322266

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3954717218875885
    2. '"""' → logprob: -1.1454716920852661
    3. '"""
' → logprob: -5.270471572875977
    4. '"' → logprob: -6.395471572875977
    5. '""' → logprob: -7.145471572875977
    6. '```' → logprob: -7.270471572875977
    7. '
' → logprob: -9.270471572875977
    8. ' """' → logprob: -9.520471572875977
    9. '    
' → logprob: -10.145471572875977
    10. ')' → logprob: -10.520471572875977

Token 82: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03748531639575958
    2. '\n' → logprob: -4.537485122680664
    3. '"""' → logprob: -4.662485122680664
    4. '```' → logprob: -4.912485122680664
    5. '    
' → logprob: -6.037485122680664
    6. ')' → logprob: -6.287485122680664
    7. '"' → logprob: -6.412485122680664
    8. '
' → logprob: -6.662485122680664
    9. '`' → logprob: -7.662485122680664
    10. 'n' → logprob: -8.162485122680664

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028476715087890625
    2. 'n' → logprob: -6.752847671508789
    3. '    
' → logprob: -6.877847671508789
    4. '\n' → logprob: -8.252847671508789
    5. '
' → logprob: -8.502847671508789
    6. '    ' → logprob: -9.752847671508789
    7. 'r' → logprob: -10.377847671508789
    8. '       ' → logprob: -11.002847671508789
    9. ' ' → logprob: -11.127847671508789
    10. '```' → logprob: -11.252847671508789

Token 84: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011739065870642662
    2. '   ' → logprob: -4.511739253997803
    3. 'r' → logprob: -8.261738777160645
    4. 'i' → logprob: -8.761738777160645
    5. '#' → logprob: -10.011738777160645
    6. 'data' → logprob: -10.136738777160645
    7. 'inputs' → logprob: -10.386738777160645
    8. 'input' → logprob: -10.511738777160645
    9. 'result' → logprob: -10.636738777160645
    10. '    
' → logprob: -11.011738777160645

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002865973860025406
    2. '=' → logprob: -5.877865791320801
    3. ',' → logprob: -10.0028657913208
    4. ' ' → logprob: -11.3778657913208
    5. ' ,' → logprob: -13.6278657913208
    6. '=input' → logprob: -14.3778657913208
    7. '.' → logprob: -14.5028657913208
    8. ' =
' → logprob: -14.6278657913208
    9. ')' → logprob: -15.0028657913208
    10. '   ' → logprob: -15.1278657913208

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0013319060672074556
    2. 'int' → logprob: -6.626331806182861
    3. '=int' → logprob: -13.00133228302002
    4. ' ' → logprob: -13.37633228302002
    5. ' input' → logprob: -13.62633228302002
    6. ' in' → logprob: -15.12633228302002
    7. ' ' → logprob: -15.37633228302002
    8. '  ' → logprob: -16.126331329345703
    9. '[int' → logprob: -16.251331329345703
    10. '	int' → logprob: -16.251331329345703

Token 87: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01818166859447956
    2. '(input' → logprob: -4.018181800842285
    3. 'input' → logprob: -11.018181800842285
    4. ' (' → logprob: -12.518181800842285
    5. '('' → logprob: -12.518181800842285
    6. '()' → logprob: -12.643181800842285
    7. '(
' → logprob: -12.768181800842285
    8. '("' → logprob: -14.643181800842285
    9. '(

' → logprob: -14.643181800842285
    10. ' input' → logprob: -15.768181800842285

Token 88: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0507899709045887
    2. '())' → logprob: -3.1757900714874268
    3. '(' → logprob: -4.925789833068848
    4. '('' → logprob: -8.800789833068848
    5. ')' → logprob: -9.050789833068848
    6. '("("' → logprob: -9.050789833068848
    7. '("' → logprob: -10.675789833068848
    8. '()))' → logprob: -11.050789833068848
    9. ' ())' → logprob: -11.050789833068848
    10. '(()' → logprob: -11.175789833068848

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5732126832008362
    2. '    
' → logprob: -1.1982126235961914
    3. '
' → logprob: -2.3232126235961914
    4. 'n' → logprob: -4.823212623596191
    5. '\n' → logprob: -4.948212623596191
    6. ' 
' → logprob: -5.573212623596191
    7. '   
' → logprob: -5.823212623596191
    8. '  
' → logprob: -5.823212623596191
    9. ' ' → logprob: -5.948212623596191
    10. '    ' → logprob: -6.198212623596191

Token 90: ' c' (ID: 274)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.6370388269424438
    2. 'colors' → logprob: -0.8870388269424438
    3. ' lst' → logprob: -3.6370387077331543
    4. ' couleurs' → logprob: -4.512038707733154
    5. 'lst' → logprob: -4.887038707733154
    6. ' data' → logprob: -5.387038707733154
    7. 'data' → logprob: -6.012038707733154
    8. '   ' → logprob: -6.762038707733154
    9. ' color' → logprob: -7.012038707733154
    10. 'color' → logprob: -7.262038707733154

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8967994451522827
    2. ' =' → logprob: -1.1467994451522827
    3. 'ol' → logprob: -2.0217995643615723
    4. '_' → logprob: -2.3967995643615723
    5. 'o' → logprob: -3.8967995643615723
    6. 'ols' → logprob: -5.396799564361572
    7. 'c' → logprob: -5.521799564361572
    8. '[:]' → logprob: -5.646799564361572
    9. '_list' → logprob: -6.021799564361572
    10. '[' → logprob: -6.021799564361572

Token 92: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5801194310188293
    2. ' []' → logprob: -0.8301194310188293
    3. ' list' → logprob: -6.455119609832764
    4. '[' → logprob: -6.580119609832764
    5. '[]' → logprob: -6.830119609832764
    6. 'list' → logprob: -9.330119132995605
    7. '[list' → logprob: -11.330119132995605
    8. ' ' → logprob: -11.455119132995605
    9. '[int' → logprob: -11.705119132995605
    10. '[input' → logprob: -12.705119132995605

Token 93: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. ']int' → logprob: -16.250123977661133
    4. '   ' → logprob: -17.875123977661133
    5. '[int' → logprob: -18.000123977661133
    6. '(int' → logprob: -18.125123977661133
    7. '<int' → logprob: -18.750123977661133
    8. 'input' → logprob: -18.750123977661133
    9. 'in' → logprob: -19.000123977661133
    10. '  ' → logprob: -19.125123977661133

Token 94: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4760705232620239
    2. '(input' → logprob: -0.9760705232620239
    3. '()' → logprob: -6.601070404052734
    4. '()]' → logprob: -7.726070404052734
    5. '(x' → logprob: -9.476070404052734
    6. '(
' → logprob: -9.851070404052734
    7. 'input' → logprob: -11.101070404052734
    8. '(

' → logprob: -11.351070404052734
    9. ' (' → logprob: -11.851070404052734
    10. ']' → logprob: -11.851070404052734

Token 95: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00019102399528492242
    2. '()' → logprob: -8.750190734863281
    3. '()]' → logprob: -10.750190734863281
    4. '()),' → logprob: -12.250190734863281
    5. ')' → logprob: -13.125190734863281
    6. '()))' → logprob: -13.250190734863281
    7. ' ())' → logprob: -13.375190734863281
    8. '())
' → logprob: -14.125190734863281
    9. '(' → logprob: -16.25019073486328
    10. '()
' → logprob: -16.62519073486328

Token 96: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016547352075576782
    2. 'for' → logprob: -4.891547203063965
    3. ')' → logprob: -5.266547203063965
    4. ' for' → logprob: -5.641547203063965
    5. '   ' → logprob: -9.266547203063965
    6. ' ()' → logprob: -10.391547203063965
    7. ' ' → logprob: -10.391547203063965
    8. ']' → logprob: -11.641547203063965
    9. '())' → logprob: -11.641547203063965
    10. '()]' → logprob: -11.891547203063965

Token 97: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09521543234586716
    2. '_' → logprob: -2.970215320587158
    3. ' range' → logprob: -3.595215320587158
    4. ' ' → logprob: -4.470215320587158
    5. ' i' → logprob: -7.720215320587158
    6. ' in' → logprob: -9.345215797424316
    7. 'range' → logprob: -9.595215797424316
    8. '_range' → logprob: -11.095215797424316
    9. ' ' → logprob: -12.595215797424316
    10. ' ▁' → logprob: -13.345215797424316

Token 98: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07020684331655502
    2. ' range' → logprob: -2.695206880569458
    3. ' in' → logprob: -9.195206642150879
    4. ' ' → logprob: -9.820206642150879
    5. '  ' → logprob: -10.570206642150879
    6. '   ' → logprob: -10.820206642150879
    7. 'ran' → logprob: -11.195206642150879
    8. 'in' → logprob: -11.320206642150879
    9. '    ' → logprob: -11.695206642150879
    10. ' ran' → logprob: -11.820206642150879

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023252349346876144
    2. ' range' → logprob: -3.773252248764038
    3. 'rang' → logprob: -12.898252487182617
    4. '(range' → logprob: -13.773252487182617
    5. 'ran' → logprob: -14.023252487182617
    6. ' ' → logprob: -14.398252487182617
    7. '	range' → logprob: -14.523252487182617
    8. 'r' → logprob: -15.023252487182617
    9. 'ange' → logprob: -15.148252487182617
    10. '```' → logprob: -15.273252487182617

Token 100: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015568782109767199
    2. '(' → logprob: -6.501556873321533
    3. ' (' → logprob: -10.501557350158691
    4. ' n' → logprob: -10.751557350158691
    5. 'n' → logprob: -12.126557350158691
    6. '(
' → logprob: -15.751557350158691
    7. ')' → logprob: -17.626556396484375
    8. ' )' → logprob: -18.376556396484375
    9. '(

' → logprob: -18.626556396484375
    10. ')n' → logprob: -18.751556396484375

Token 101: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.220573363360018e-05
    2. ')' → logprob: -10.000082015991211
    3. ']' → logprob: -10.250082015991211
    4. ' )' → logprob: -14.250082015991211
    5. ')]
' → logprob: -15.375082015991211
    6. '   ' → logprob: -16.25008201599121
    7. ')])' → logprob: -16.37508201599121
    8. '])' → logprob: -16.50008201599121
    9. '))' → logprob: -16.50008201599121
    10. ' ]' → logprob: -17.12508201599121

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029577314853668213
    2. 'return' → logprob: -5.877957820892334
    3. ' return' → logprob: -9.002957344055176
    4. '    
' → logprob: -11.252957344055176
    5. '	return' → logprob: -11.752957344055176
    6. '
' → logprob: -11.877957344055176
    7. ':return' → logprob: -14.127957344055176
    8. ')' → logprob: -15.127957344055176
    9. '```' → logprob: -15.502957344055176
    10. '       ' → logprob: -15.752957344055176

Token 103: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3881877064704895
    2. 'return' (adapté à ' return') → logprob: -1.1381876468658447
    3. ' return' → logprob: -6.638187885284424
    4. '    
' → logprob: -12.888187408447266
    5. '	return' → logprob: -13.263187408447266
    6. '
' → logprob: -13.388187408447266
    7. ':return' → logprob: -15.388187408447266
    8. ' ' → logprob: -16.263187408447266
    9. '```' → logprob: -16.263187408447266
    10. '       ' → logprob: -16.388187408447266

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061973292380571365
    2. 'n' → logprob: -2.8119733333587646
    3. '(n' → logprob: -12.811973571777344
    4. ' (' → logprob: -12.811973571777344
    5. ' ' → logprob: -16.811973571777344
    6. '(' → logprob: -16.811973571777344
    7. '   ' → logprob: -17.061973571777344
    8. '	n' → logprob: -17.561973571777344
    9. ' ' → logprob: -17.686973571777344
    10. 'c' → logprob: -19.686973571777344

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019550370052456856
    2. ' ,' → logprob: -6.751955032348633
    3. ',c' → logprob: -7.376955032348633
    4. ' c' → logprob: -8.876955032348633
    5. 'c' → logprob: -11.376955032348633
    6. ',
' → logprob: -12.001955032348633
    7. '‌,' → logprob: -14.126955032348633
    8. ' ,
' → logprob: -15.626955032348633
    9. '   ' → logprob: -15.751955032348633
    10. ',n' → logprob: -16.001955032348633

Token 106: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005234356038272381
    2. 'c' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.130234718322754
    4. ' ' → logprob: -15.130234718322754
    5. '	c' → logprob: -17.130233764648438
    6. ' [' → logprob: -20.005233764648438
    7. '_c' → logprob: -20.255233764648438
    8. '  ' → logprob: -20.505233764648438
    9. '(c' → logprob: -20.630233764648438
    10. '[' → logprob: -20.630233764648438

Token 107: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5970972776412964
    2. '<|end|>' → logprob: -1.4720972776412964
    3. '#' → logprob: -1.9720972776412964
    4. '\n' → logprob: -3.222097396850586
    5. '```' → logprob: -4.472097396850586
    6. '[' → logprob: -5.222097396850586
    7. 'n' → logprob: -5.347097396850586
    8. ' ' → logprob: -5.597097396850586
    9. 'newline' → logprob: -5.722097396850586
    10. '' → logprob: -6.097097396850586

Token 109: ' calculate' (ID: 17950)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.36385032534599304
    2. ' calculate' → logprob: -2.1138503551483154
    3. ' compute' → logprob: -2.7388503551483154
    4. ' find' → logprob: -3.7388503551483154
    5. ' count' → logprob: -3.7388503551483154
    6. ' process' → logprob: -4.238850116729736
    7. '_' → logprob: -4.363850116729736
    8. ' solve' → logprob: -4.613850116729736
    9. ' analyze' → logprob: -5.238850116729736
    10. ' ' → logprob: -5.238850116729736

Token 110: '_previous' (ID: 126212)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.19060081243515015
    2. '_color' → logprob: -3.065600872039795
    3. '_colors' → logprob: -3.690600872039795
    4. '_' → logprob: -3.815600872039795
    5. '_score' → logprob: -4.065600872039795
    6. '_distance' → logprob: -4.565600872039795
    7. '_frequency' → logprob: -4.940600872039795
    8. '_difference' → logprob: -5.065600872039795
    9. '_counts' → logprob: -5.440600872039795
    10. '_count' → logprob: -5.815600872039795

Token 111: '_occ' (ID: 180107)
  Prédit: '_sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sm' → logprob: -0.9633467197418213
    2. '_' → logprob: -1.4633467197418213
    3. '_less' → logprob: -1.7133467197418213
    4. '_occ' → logprob: -3.0883467197418213
    5. '_color' → logprob: -3.3383467197418213
    6. '_g' → logprob: -3.4633467197418213
    7. '_indices' → logprob: -3.8383467197418213
    8. '_index' → logprob: -4.713346481323242
    9. '_elements' → logprob: -5.088346481323242
    10. '_l' → logprob: -5.338346481323242

Token 112: 'urrences' (ID: 63292)
  Prédit: 'urrence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrence' → logprob: -0.07583288848400116
    2. 'urrences' → logprob: -2.7008328437805176
    3. 'ur' → logprob: -5.200832843780518
    4. 'urred' → logprob: -8.950833320617676
    5. 'urrent' → logprob: -9.700833320617676
    6. 'urr' → logprob: -10.075833320617676
    7. 'urance' → logprob: -10.200833320617676
    8. 'urrency' → logprob: -10.325833320617676
    9. 'urring' → logprob: -10.325833320617676
    10. '_' → logprob: -12.075833320617676

Token 113: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03329465910792351
    2. ' (' → logprob: -3.533294677734375
    3. '(c' → logprob: -6.533294677734375
    4. '_' → logprob: -7.033294677734375
    5. '(n' → logprob: -7.158294677734375
    6. '_(' → logprob: -9.658294677734375
    7. 's' → logprob: -9.658294677734375
    8. ' ' → logprob: -9.783294677734375
    9. '(_' → logprob: -10.158294677734375
    10. '("("' → logprob: -10.533294677734375

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007445912342518568
    2. ')' → logprob: -7.625744819641113
    3. ' ):' → logprob: -8.750744819641113
    4. ',' → logprob: -9.875744819641113
    5. '):
' → logprob: -10.375744819641113
    6. ':' → logprob: -12.000744819641113
    7. '_' → logprob: -13.250744819641113
    8. '[]):' → logprob: -13.375744819641113
    9. '[' → logprob: -14.000744819641113
    10. 's' → logprob: -14.375744819641113

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5387113094329834
    2. ':' → logprob: -0.9137113094329834
    3. '():' → logprob: -5.4137115478515625
    4. ' :' → logprob: -6.0387115478515625
    5. '_' → logprob: -6.7887115478515625
    6. '[]' → logprob: -6.7887115478515625
    7. '[' → logprob: -6.7887115478515625
    8. ' =' → logprob: -7.0387115478515625
    9. ':
' → logprob: -7.1637115478515625
    10. '[:]' → logprob: -7.4137115478515625

Token 116: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14928632974624634
    2. ' previous' → logprob: -2.1492862701416016
    3. ' prev' → logprob: -4.274286270141602
    4. ' n' → logprob: -6.024286270141602
    5. 'previous' → logprob: -6.274286270141602
    6. 'prev' → logprob: -6.524286270141602
    7. ' ' → logprob: -7.524286270141602
    8. '    ' → logprob: -7.524286270141602
    9. ' """
' → logprob: -8.149286270141602
    10. '    
' → logprob: -8.774286270141602

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21302808821201324
    2. ' """
' → logprob: -2.3380281925201416
    3. '    ' → logprob: -3.2130281925201416
    4. ' previous' → logprob: -4.0880279541015625
    5. ' d' → logprob: -4.3380279541015625
    6. 'd' → logprob: -5.4630279541015625
    7. ' ' → logprob: -5.5880279541015625
    8. '"' → logprob: -5.7130279541015625
    9. ' "' → logprob: -5.8380279541015625
    10. '"""
' → logprob: -6.3380279541015625

Token 118: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39391016960144043
    2. ' previous' → logprob: -1.3939101696014404
    3. ' prev' → logprob: -3.2689101696014404
    4. ' """
' → logprob: -4.6439104080200195
    5. 'previous' → logprob: -4.6439104080200195
    6. 'prev' → logprob: -5.2689104080200195
    7. '    ' → logprob: -5.5189104080200195
    8. ' 
' → logprob: -5.8939104080200195
    9. '    
' → logprob: -6.1439104080200195
    10. '
' → logprob: -6.7689104080200195

Token 119: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19210658967494965
    2. ' chaque' → logprob: -2.8171064853668213
    3. ' ' → logprob: -3.4421064853668213
    4. ' previous' → logprob: -4.0671067237854
    5. '  ' → logprob: -4.1921067237854
    6. ' """
' → logprob: -4.3171067237854
    7. '    ' → logprob: -4.3171067237854
    8. ' n' → logprob: -5.4421067237854
    9. ' def' → logprob: -5.6921067237854
    10. ' each' → logprob: -5.8171067237854

Token 120: ' valeur' (ID: 41664)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7102699279785156
    2. ' index' → logprob: -1.3352699279785156
    3. ' élément' → logprob: -2.3352699279785156
    4. 'élé' → logprob: -3.0852699279785156
    5. ' couleur' → logprob: -3.7102699279785156
    6. ' ' → logprob: -3.9602699279785156
    7. ' valeur' → logprob: -4.460269927978516
    8. ' color' → logprob: -4.710269927978516
    9. ' indice' → logprob: -4.710269927978516
    10. ' element' → logprob: -4.710269927978516

Token 121: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9917950630187988
    2. ' ,' → logprob: -1.6167950630187988
    3. ',' → logprob: -1.7417950630187988
    4. ' dans' → logprob: -2.491795063018799
    5. ' c' → logprob: -2.991795063018799
    6. ' ' → logprob: -2.991795063018799
    7. ' in' → logprob: -3.991795063018799
    8. ' i' → logprob: -4.741795063018799
    9. '_' → logprob: -4.866795063018799
    10. '   ' → logprob: -4.991795063018799

Token 122: ' la' (ID: 557)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14635947346687317
    2. 'c' → logprob: -2.021359443664551
    3. ' la' → logprob: -6.396359443664551
    4. ' range' → logprob: -7.146359443664551
    5. 'range' → logprob: -7.146359443664551
    6. ' ' → logprob: -8.77135944366455
    7. 'i' → logprob: -9.77135944366455
    8. 'la' → logprob: -10.02135944366455
    9. '   ' → logprob: -10.27135944366455
    10. 'enumer' → logprob: -11.02135944366455

Token 123: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2556763291358948
    2. ' liste' → logprob: -1.50567626953125
    3. 'list' → logprob: -5.88067626953125
    4. 'c' → logprob: -7.63067626953125
    5. '   ' → logprob: -9.13067626953125
    6. ' ' → logprob: -9.25567626953125
    7. ' list' → logprob: -9.38067626953125
    8. 'Liste' → logprob: -10.13067626953125
    9. 's' → logprob: -10.88067626953125
    10. '  ' → logprob: -11.38067626953125

Token 124: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1330966055393219
    2. ',' → logprob: -2.758096694946289
    3. 'c' → logprob: -3.508096694946289
    4. ' ,' → logprob: -4.008096694946289
    5. '   ' → logprob: -5.133096694946289
    6. ' ' → logprob: -6.258096694946289
    7. ' des' → logprob: -6.883096694946289
    8. ' de' → logprob: -7.133096694946289
    9. ' `' → logprob: -7.133096694946289
    10. ' (' → logprob: -7.133096694946289

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018428985029459
    2. ' ,' → logprob: -4.018428802490234
    3. '   ' → logprob: -8.518428802490234
    4. '),' → logprob: -11.518428802490234
    5. ' :' → logprob: -12.018428802490234
    6. ' (' → logprob: -12.268428802490234
    7. ' ' → logprob: -12.268428802490234
    8. ')' → logprob: -12.393428802490234
    9. ':' → logprob: -12.518428802490234
    10. ',
' → logprob: -12.518428802490234

Token 126: ' trouve' (ID: 30913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02316221036016941
    2. ' previous' → logprob: -4.773162364959717
    3. ' retourne' → logprob: -5.648162364959717
    4. ' prev' → logprob: -6.273162364959717
    5. ' précédente' → logprob: -6.523162364959717
    6. ' précédent' → logprob: -6.523162364959717
    7. '    ' → logprob: -6.898162364959717
    8. ' précéd' → logprob: -7.273162364959717
    9. ' on' → logprob: -7.773162364959717
    10. ' calcul' → logprob: -7.773162364959717

Token 127: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1447806358337402
    2. ' la' → logprob: -1.3947806358337402
    3. ' les' → logprob: -2.1447806358337402
    4. '_' → logprob: -2.6447806358337402
    5. '_previous' → logprob: -2.8947806358337402
    6. '_indices' → logprob: -3.6447806358337402
    7. ' ' → logprob: -3.7697806358337402
    8. ',' → logprob: -3.8947806358337402
    9. '[]' → logprob: -4.26978063583374
    10. ' le' → logprob: -4.39478063583374

Token 128: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.4498107433319092
    2. 'position' → logprob: -1.4498107433319092
    3. ' liste' → logprob: -2.574810743331909
    4. ' dernière' → logprob: -4.074810981750488
    5. ' précédente' → logprob: -4.699810981750488
    6. ' index' → logprob: -5.324810981750488
    7. ' ' → logprob: -5.824810981750488
    8. '   ' → logprob: -5.949810981750488
    9. 'index' → logprob: -6.199810981750488
    10. ' plus' → logprob: -6.449810981750488

Token 129: ' précédente' (ID: 177319)
  Prédit: ' précédente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédente' → logprob: -0.502517819404602
    2. 's' → logprob: -1.877517819404602
    3. ' du' → logprob: -2.3775177001953125
    4. ' ' → logprob: -3.1275177001953125
    5. '<|end|>' → logprob: -3.5025177001953125
    6. ' de' → logprob: -3.8775177001953125
    7. ' des' → logprob: -4.1275177001953125
    8. ' précéd' → logprob: -4.5025177001953125
    9. '_previous' → logprob: -5.5025177001953125
    10. ' d' → logprob: -6.2525177001953125

Token 130: ' où' (ID: 15113)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6099891662597656
    2. 'où' → logprob: -1.7349891662597656
    3. ' où' → logprob: -1.9849891662597656
    4. '<|end|>' → logprob: -2.7349891662597656
    5. ' where' → logprob: -3.2349891662597656
    6. ' de' → logprob: -4.359989166259766
    7. '_where' → logprob: -4.609989166259766
    8. ' _' → logprob: -5.484989166259766
    9. ' ' → logprob: -5.609989166259766
    10. 'where' → logprob: -6.484989166259766

Token 131: ' cette' (ID: 7696)
  Prédit: ' cette'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cette' → logprob: -0.5880407094955444
    2. 'c' → logprob: -1.2130407094955444
    3. ' elle' → logprob: -1.9630407094955444
    4. ' la' → logprob: -5.713040828704834
    5. ''elle' → logprob: -6.838040828704834
    6. 'celle' → logprob: -7.588040828704834
    7. ' c' → logprob: -7.713040828704834
    8. ' celle' → logprob: -7.838040828704834
    9. 'val' → logprob: -7.838040828704834
    10. 'la' → logprob: -8.713040351867676

Token 132: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.18641351163387299
    2. ' valeur' → logprob: -1.8114135265350342
    3. ' même' → logprob: -5.436413288116455
    4. 'value' → logprob: -6.811413288116455
    5. ' val' → logprob: -7.061413288116455
    6. 'm' → logprob: -8.936413764953613
    7. '   ' → logprob: -9.686413764953613
    8. ' value' → logprob: -9.811413764953613
    9. ' ' → logprob: -10.311413764953613
    10. ' vale' → logprob: -11.936413764953613

Token 133: ' est' (ID: 893)
  Prédit: ' apparaît'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.9044445157051086
    2. ' est' → logprob: -1.0294444561004639
    3. 'a' → logprob: -2.404444456100464
    4. ' a' → logprob: -2.904444456100464
    5. ' appara' → logprob: -3.529444456100464
    6. 'ap' → logprob: -3.529444456100464
    7. ' appar' → logprob: -4.279444694519043
    8. 'appar' → logprob: -4.654444694519043
    9. 'est' → logprob: -5.654444694519043
    10. ' appeared' → logprob: -6.154444694519043

Token 134: ' appar' (ID: 13643)
  Prédit: ' appar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appar' → logprob: -0.18793682754039764
    2. 'vue' → logprob: -2.312936782836914
    3. 'appar' → logprob: -2.687936782836914
    4. ' vue' → logprob: -6.187936782836914
    5. 'ap' → logprob: -8.062936782836914
    6. ' rencontr' → logprob: -8.437936782836914
    7. 'appear' → logprob: -8.562936782836914
    8. 'venue' → logprob: -8.687936782836914
    9. 'prés' → logprob: -8.937936782836914
    10. ' appara' → logprob: -9.062936782836914

Token 135: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0002319071936653927
    2. 'u' → logprob: -8.500231742858887
    3. 'a' → logprob: -12.250231742858887
    4. '   ' → logprob: -12.625231742858887
    5. '**' → logprob: -13.000231742858887
    6. '</' → logprob: -13.000231742858887
    7. '

' → logprob: -13.000231742858887
    8. '
' → logprob: -13.250231742858887
    9. '1' → logprob: -13.500231742858887
    10. '```' → logprob: -13.625231742858887

Token 136: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2062350958585739
    2. '_' → logprob: -2.33123517036438
    3. ' (' → logprob: -3.33123517036438
    4. '.' → logprob: -3.83123517036438
    5. ' ou' → logprob: -4.081234931945801
    6. ' or' → logprob: -5.081234931945801
    7. ' ' → logprob: -5.831234931945801
    8. ' ,' → logprob: -6.456234931945801
    9. '(' → logprob: -6.706234931945801
    10. ' _' → logprob: -7.206234931945801

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10199436545372009
    2. '_' → logprob: -2.726994276046753
    3. '    
' → logprob: -5.101994514465332
    4. 'def' → logprob: -5.226994514465332
    5. ' 
' → logprob: -5.351994514465332
    6. ' ' → logprob: -6.226994514465332
    7. ',' → logprob: -6.351994514465332
    8. '  
' → logprob: -6.476994514465332
    9. '   
' → logprob: -6.476994514465332
    10. '
' → logprob: -6.601994514465332

Token 138: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32966455817222595
    2. '_' → logprob: -2.454664468765259
    3. ' 
' → logprob: -2.579664468765259
    4. '
' → logprob: -3.829664468765259
    5. '    
' → logprob: -4.079664707183838
    6. 'def' → logprob: -4.454664707183838
    7. '_previous' → logprob: -4.579664707183838
    8. ' ' → logprob: -4.704664707183838
    9. '  
' → logprob: -4.704664707183838
    10. '"' → logprob: -4.954664707183838

Token 139: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1213308572769165
    2. '_' → logprob: -1.6213308572769165
    3. ' None' → logprob: -1.7463308572769165
    4. ' -' → logprob: -2.246330738067627
    5. 'None' → logprob: -2.871330738067627
    6. '  ' → logprob: -3.621330738067627
    7. ' _' → logprob: -4.121330738067627
    8. ' ‌' → logprob: -4.621330738067627
    9. ' i' → logprob: -4.746330738067627
    10. ' aucune' → logprob: -4.871330738067627

Token 140: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.41846004128456116
    2. ' ' → logprob: -1.5434600114822388
    3. '_' → logprob: -2.2934601306915283
    4. 'val' → logprob: -4.668459892272949
    5. ' val' → logprob: -5.168459892272949
    6. ' value' → logprob: -5.543459892272949
    7. ' n' → logprob: -6.918459892272949
    8. '_val' → logprob: -7.043459892272949
    9. 'value' → logprob: -7.168459892272949
    10. ')' → logprob: -7.418459892272949

Token 141: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.050561290234327316
    2. 'n' → logprob: -3.9255611896514893
    3. '   ' → logprob: -4.175561428070068
    4. ' précédente' → logprob: -5.175561428070068
    5. ' ' → logprob: -5.675561428070068
    6. ' ne' → logprob: -5.925561428070068
    7. '    ' → logprob: -7.675561428070068
    8. '  ' → logprob: -7.800561428070068
    9. ' not' → logprob: -8.17556095123291
    10. ' précéd' → logprob: -8.30056095123291

Token 142: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28654760122299194
    2. ''a' → logprob: -2.6615476608276367
    3. 'e' → logprob: -3.1615476608276367
    4. 'n' → logprob: -3.4115476608276367
    5. 'on' → logprob: -3.5365476608276367
    6. ''est' → logprob: -3.6615476608276367
    7. ''' → logprob: -4.161547660827637
    8. ''app' → logprob: -4.911547660827637
    9. ''ap' → logprob: -5.161547660827637
    10. ''appar' → logprob: -5.161547660827637

Token 143: ' jamais' (ID: 23077)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9682278633117676
    2. ' pas' → logprob: -1.5932278633117676
    3. ''a' → logprob: -2.3432278633117676
    4. ''appar' → logprob: -2.4682278633117676
    5. 't' → logprob: -2.5932278633117676
    6. ''est' → logprob: -3.4682278633117676
    7. 'pas' → logprob: -3.7182278633117676
    8. ''ap' → logprob: -3.7182278633117676
    9. ''' → logprob: -4.218227863311768
    10. ' jamais' → logprob: -4.468227863311768

Token 144: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.014410533010959625
    2. 'été' → logprob: -5.014410495758057
    3. ' been' → logprob: -6.639410495758057
    4. ' appeared' → logprob: -6.764410495758057
    5. ' appar' → logprob: -7.014410495758057
    6. 'appe' → logprob: -7.139410495758057
    7. ' appara' → logprob: -7.264410495758057
    8. '_' → logprob: -7.264410495758057
    9. ' rencontré' → logprob: -8.139410972595215
    10. ' auparavant' → logprob: -8.264410972595215

Token 145: ' vue' (ID: 30721)
  Prédit: 'vue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vue' → logprob: -0.08136899769306183
    2. ' vue' → logprob: -2.706368923187256
    3. ' rencontr' → logprob: -4.831368923187256
    4. 'vu' → logprob: -6.706368923187256
    5. 'v' → logprob: -6.831368923187256
    6. 'aper' → logprob: -7.581368923187256
    7. ' aper' → logprob: -8.581369400024414
    8. 'observ' → logprob: -9.706369400024414
    9. ' trouv' → logprob: -10.081369400024414
    10. '   ' → logprob: -10.081369400024414

Token 146: ' auparavant' (ID: 163143)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23530696332454681
    2. ' auparavant' → logprob: -1.860306978225708
    3. ' ,' → logprob: -3.235306978225708
    4. ' avant' → logprob: -4.485306739807129
    5. ' précéd' → logprob: -6.235306739807129
    6. ' ' → logprob: -7.485306739807129
    7. 'avant' → logprob: -8.235306739807129
    8. ' précédente' → logprob: -8.610306739807129
    9. ' before' → logprob: -9.110306739807129
    10. ' jusqu' → logprob: -9.860306739807129

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016504550352692604
    2. ' ,' → logprob: -4.141504764556885
    3. ' ' → logprob: -8.016504287719727
    4. 'None' → logprob: -10.266504287719727
    5. '   ' → logprob: -10.516504287719727
    6. ' None' → logprob: -10.641504287719727
    7. ',None' → logprob: -11.141504287719727
    8. ' :' → logprob: -11.641504287719727
    9. ',
' → logprob: -11.641504287719727
    10. ' (' → logprob: -12.266504287719727

Token 148: ' ass' (ID: 1680)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41867679357528687
    2. ' None' → logprob: -1.1686768531799316
    3. 'None' → logprob: -3.7936768531799316
    4. '-' → logprob: -5.418676853179932
    5. ' ' → logprob: -6.418676853179932
    6. '   ' → logprob: -6.918676853179932
    7. '0' → logprob: -6.918676853179932
    8. ' on' → logprob: -8.293676376342773
    9. ' return' → logprob: -8.668676376342773
    10. '[]' → logprob: -9.793676376342773

Token 149: 'igne' (ID: 24120)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.013500887900590897
    2. 'ert' → logprob: -5.638500690460205
    3. 'ig' → logprob: -6.138500690460205
    4. 'i' → logprob: -6.263500690460205
    5. 'igne' → logprob: -6.513500690460205
    6. 'igned' → logprob: -6.763500690460205
    7. 'ignor' → logprob: -7.638500690460205
    8. 'e' → logprob: -7.763500690460205
    9. 'ignment' → logprob: -8.013501167297363
    10. '#' → logprob: -8.013501167297363

Token 150: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3136873245239258
    2. '-' → logprob: -1.4386873245239258
    3. ' None' → logprob: -3.563687324523926
    4. '   ' → logprob: -6.313687324523926
    5. 'None' → logprob: -6.563687324523926
    6. ' ' → logprob: -8.063687324523926
    7. '  ' → logprob: -10.188687324523926
    8. '0' → logprob: -10.313687324523926
    9. '=None' → logprob: -10.813687324523926
    10. '    ' → logprob: -10.938687324523926

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020449401927180588
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -13.875204086303711
    4. '  ' → logprob: -16.75020408630371
    5. ' -' → logprob: -17.50020408630371
    6. '    ' → logprob: -19.25020408630371
    7. '-' → logprob: -19.25020408630371
    8. ' ' → logprob: -19.50020408630371
    9. '```' → logprob: -20.25020408630371
    10. ',' → logprob: -20.56270408630371

Token 152: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4257485270500183
    2. '
' → logprob: -1.300748586654663
    3. '    
' → logprob: -3.425748586654663
    4. ' 
' → logprob: -4.050748348236084
    5. '\n' → logprob: -4.925748348236084
    6. '  
' → logprob: -5.175748348236084
    7. ')' → logprob: -5.300748348236084
    8. '   
' → logprob: -6.050748348236084
    9. ')
' → logprob: -6.175748348236084
    10. '```' → logprob: -8.050748825073242

Token 154: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21257539093494415
    2. '
' → logprob: -2.0875754356384277
    3. '    
' → logprob: -3.2125754356384277
    4. ' previous' → logprob: -4.087575435638428
    5. 'previous' → logprob: -5.837575435638428
    6. ' 
' → logprob: -5.962575435638428
    7. '  
' → logprob: -6.837575435638428
    8. '   
' → logprob: -6.837575435638428
    9. 'prev' → logprob: -6.962575435638428
    10. '```' → logprob: -8.21257495880127

Token 155: ':
' (ID: 734)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.055134892463684
    2. ',' → logprob: -1.430134892463684
    3. '   ' → logprob: -1.555134892463684
    4. ':' → logprob: -2.1801347732543945
    5. ')' → logprob: -3.1801347732543945
    6. '=' → logprob: -4.1801347732543945
    7. '):' → logprob: -4.9301347732543945
    8. 'c' → logprob: -5.1801347732543945
    9. 'def' → logprob: -5.3051347732543945
    10. ',c' → logprob: -5.8051347732543945

Token 156: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16337068378925323
    2. ' c' → logprob: -2.0383706092834473
    3. 'c' → logprob: -3.9133706092834473
    4. ')' → logprob: -9.038371086120605
    5. '	c' → logprob: -9.038371086120605
    6. '    ' → logprob: -9.788371086120605
    7. '       ' → logprob: -9.913371086120605
    8. ' ' → logprob: -10.038371086120605
    9. ')c' → logprob: -10.413371086120605
    10. ' self' → logprob: -10.538371086120605

Token 157: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0029129309114068747
    2. ' c' → logprob: -6.252912998199463
    3. '   ' → logprob: -7.002912998199463
    4. 'list' → logprob: -9.752912521362305
    5. 'self' → logprob: -12.377912521362305
    6. '	c' → logprob: -12.752912521362305
    7. 'List' → logprob: -13.502912521362305
    8. '```' → logprob: -13.627912521362305
    9. ' list' → logprob: -13.877912521362305
    10. 'liste' → logprob: -14.002912521362305

Token 158: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6383100748062134
    2. '):' → logprob: -0.7633100748062134
    3. '):
' → logprob: -6.013309955596924
    4. ' :' → logprob: -6.513309955596924
    5. ')' → logprob: -7.138309955596924
    6. ' ):' → logprob: -7.763309955596924
    7. ':list' → logprob: -7.763309955596924
    8. '   ' → logprob: -10.388310432434082
    9. '):

' → logprob: -11.013310432434082
    10. ',' → logprob: -11.013310432434082

Token 159: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004097003838978708
    2. ' list' → logprob: -8.500410079956055
    3. 'List' → logprob: -8.625410079956055
    4. '   ' → logprob: -11.000410079956055
    5. ')' → logprob: -12.000410079956055
    6. 'c' → logprob: -12.750410079956055
    7. ':list' → logprob: -15.500410079956055
    8. '_list' → logprob: -15.750410079956055
    9. ' List' → logprob: -16.375410079956055
    10. '[list' → logprob: -16.625410079956055

Token 160: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.011986102908849716
    2. '):' → logprob: -5.011986255645752
    3. ' of' → logprob: -5.386986255645752
    4. ')' → logprob: -7.511986255645752
    5. '<int' → logprob: -9.511985778808594
    6. 'of' → logprob: -10.636985778808594
    7. '):
' → logprob: -11.136985778808594
    8. 'int' → logprob: -12.386985778808594
    9. '(int' → logprob: -12.386985778808594
    10. '[' → logprob: -12.511985778808594

Token 161: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003178306156769395
    2. ' int' → logprob: -5.753178119659424
    3. ')' → logprob: -15.128178596496582
    4. '[int' → logprob: -16.003177642822266
    5. '   ' → logprob: -16.503177642822266
    6. ']int' → logprob: -17.628177642822266
    7. '<int' → logprob: -17.878177642822266
    8. ':int' → logprob: -18.128177642822266
    9. '	int' → logprob: -18.753177642822266
    10. '(int' → logprob: -18.753177642822266

Token 162: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4755457639694214
    2. ')' → logprob: -0.9755457639694214
    3. '):
' → logprob: -7.350545883178711
    4. ' ):' → logprob: -7.975545883178711
    5. '   ' → logprob: -8.350545883178711
    6. ' )' → logprob: -9.225545883178711
    7. ']):' → logprob: -9.975545883178711
    8. ' ' → logprob: -10.850545883178711
    9. ')):' → logprob: -10.975545883178711
    10. '):

' → logprob: -11.350545883178711

Token 163: ' La' (ID: 3038)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6431156992912292
    2. '   ' → logprob: -1.643115758895874
    3. '    ' → logprob: -2.643115758895874
    4. ' list' → logprob: -3.143115758895874
    5. 'La' → logprob: -3.268115758895874
    6. '       ' → logprob: -3.393115758895874
    7. ' la' → logprob: -3.768115758895874
    8. 'List' → logprob: -3.893115758895874
    9. ' La' → logprob: -4.143115520477295
    10. 'The' → logprob: -5.518115520477295

Token 164: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.0640273168683052
    2. 'liste' → logprob: -2.9390273094177246
    3. ' list' → logprob: -5.439027309417725
    4. 'list' → logprob: -6.314027309417725
    5. 'val' → logprob: -7.064027309417725
    6. '   ' → logprob: -7.314027309417725
    7. ' ' → logprob: -8.564027786254883
    8. 'position' → logprob: -8.939027786254883
    9. 'positions' → logprob: -9.064027786254883
    10. ' valeur' → logprob: -9.189027786254883

Token 165: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05366225913167
    2. ')' → logprob: -3.1786623001098633
    3. ' of' → logprob: -5.553662300109863
    4. '<|end|>' → logprob: -6.303662300109863
    5. ' de' → logprob: -6.553662300109863
    6. ' )' → logprob: -6.678662300109863
    7. '[int' → logprob: -6.803662300109863
    8. '   ' → logprob: -7.678662300109863
    9. 'des' → logprob: -8.428662300109863
    10. '[' → logprob: -9.553662300109863

Token 166: ' ent' (ID: 1121)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.15057380497455597
    2. 'c' → logprob: -3.02557373046875
    3. 'int' → logprob: -3.90057373046875
    4. ' valeurs' → logprob: -3.90057373046875
    5. 'cou' → logprob: -4.15057373046875
    6. 'ent' → logprob: -4.52557373046875
    7. 'positions' → logprob: -4.65057373046875
    8. 'indices' → logprob: -6.15057373046875
    9. ' c' → logprob: -6.40057373046875
    10. ' ent' → logprob: -6.40057373046875

Token 167: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.016376851126551628
    2. 'ières' → logprob: -4.141376972198486
    3. 'ier' → logprob: -9.016376495361328
    4. 'ités' → logprob: -9.266376495361328
    5. 't' → logprob: -10.141376495361328
    6. '   ' → logprob: -10.266376495361328
    7. 'i' → logprob: -10.641376495361328
    8. 'ires' → logprob: -12.516376495361328
    9. 'ière' → logprob: -12.766376495361328
    10. 'ers' → logprob: -13.266376495361328

Token 168: ' représentant' (ID: 136122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4248642921447754
    2. '):' → logprob: -1.6748642921447754
    3. '   ' → logprob: -2.2998642921447754
    4. '):
' → logprob: -2.9248642921447754
    5. ')
' → logprob: -6.049864292144775
    6. ' )' → logprob: -6.549864292144775
    7. '
' → logprob: -8.299863815307617
    8. ' ):' → logprob: -8.424863815307617
    9. '):

' → logprob: -8.799863815307617
    10. ' ):
' → logprob: -9.049863815307617

Token 169: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3018247187137604
    2. 'les' → logprob: -1.426824688911438
    3. ' des' → logprob: -4.301824569702148
    4. ' la' → logprob: -6.176824569702148
    5. ')' → logprob: -6.801824569702148
    6. 'des' → logprob: -6.801824569702148
    7. 'c' → logprob: -6.926824569702148
    8. 'l' → logprob: -8.301824569702148
    9. 'positions' → logprob: -8.426824569702148
    10. ' l' → logprob: -8.551824569702148

Token 170: ' couleurs' (ID: 54001)
  Prédit: ' couleurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.7439894676208496
    2. ' valeurs' → logprob: -1.7439894676208496
    3. 'cou' → logprob: -1.7439894676208496
    4. 'val' → logprob: -1.9939894676208496
    5. ' positions' → logprob: -3.9939894676208496
    6. 'positions' → logprob: -4.11898946762085
    7. 'élé' → logprob: -7.11898946762085
    8. ' indices' → logprob: -7.36898946762085
    9. 'indices' → logprob: -7.74398946762085
    10. ' cou' → logprob: -7.74398946762085

Token 171: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07584725320339203
    2. '   ' → logprob: -3.0758471488952637
    3. '):' → logprob: -4.200847148895264
    4. ')
' → logprob: -4.700847148895264
    5. '):
' → logprob: -5.950847148895264
    6. ' )' → logprob: -9.450847625732422
    7. ')

' → logprob: -9.950847625732422
    8. '       ' → logprob: -10.950847625732422
    9. '):

' → logprob: -10.950847625732422
    10. '
' → logprob: -11.325847625732422

Token 172: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.5831095576286316
    2. 'val' → logprob: -1.0831096172332764
    3. ' des' → logprob: -2.9581096172332764
    4. ' positions' → logprob: -3.9581096172332764
    5. 'positions' → logprob: -4.583109378814697
    6. ' val' → logprob: -5.083109378814697
    7. ' la' → logprob: -5.708109378814697
    8. 'values' → logprob: -6.458109378814697
    9. ' les' → logprob: -6.708109378814697
    10. 'des' → logprob: -6.708109378814697

Token 173: ' quelcon' (ID: 199130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8339589834213257
    2. '):
' → logprob: -0.9589589834213257
    3. '):' → logprob: -2.0839591026306152
    4. ')
' → logprob: -3.5839591026306152
    5. '   ' → logprob: -3.5839591026306152
    6. ' )' → logprob: -7.208959102630615
    7. '):

' → logprob: -7.583959102630615
    8. ' ):
' → logprob: -7.583959102630615
    9. ' )
' → logprob: -8.583958625793457
    10. ' ):' → logprob: -8.708958625793457

Token 174: 'ques' (ID: 3531)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03342679142951965
    2. 'es' → logprob: -3.6584267616271973
    3. 'és' → logprob: -6.283426761627197
    4. ' )' → logprob: -6.533426761627197
    5. ')`' → logprob: -7.158426761627197
    6. '`)' → logprob: -7.408426761627197
    7. 's' → logprob: -7.533426761627197
    8. 'ites' → logprob: -7.533426761627197
    9. 'ées' → logprob: -8.533427238464355
    10. '）' → logprob: -8.658427238464355

Token 175: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20768895745277405
    2. '   ' → logprob: -1.9576889276504517
    3. '):' → logprob: -3.457689046859741
    4. ')
' → logprob: -4.707688808441162
    5. '):
' → logprob: -5.207688808441162
    6. '
' → logprob: -8.83268928527832
    7. ')

' → logprob: -9.58268928527832
    8. ' )' → logprob: -10.83268928527832
    9. ')**' → logprob: -10.95768928527832
    10. '):

' → logprob: -11.08268928527832

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040085695683956146
    2. ')' → logprob: -3.415085792541504
    3. '    
' → logprob: -5.790085792541504
    4. '
' → logprob: -7.290085792541504
    5. ' previous' → logprob: -7.415085792541504
    6. 'prev' → logprob: -7.915085792541504
    7. 'previous' → logprob: -7.915085792541504
    8. '):
' → logprob: -8.040085792541504
    9. ')
' → logprob: -8.540085792541504
    10. ' 
' → logprob: -8.665085792541504

Token 177: ' Returns' (ID: 9609)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.7349166870117188
    2. 'prev' → logprob: -1.7349166870117188
    3. '   ' → logprob: -1.8599166870117188
    4. 'Returns' (adapté à ' Returns') → logprob: -2.3599166870117188
    5. 'returns' → logprob: -2.6099166870117188
    6. 'positions' → logprob: -4.734916687011719
    7. '
' → logprob: -5.484916687011719
    8. '"""
' → logprob: -5.859916687011719
    9. 'last' → logprob: -6.609916687011719
    10. 'result' → logprob: -7.484916687011719

Token 178: ':
' (ID: 734)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.023248974233865738
    2. ' []' → logprob: -4.39824914932251
    3. '[' → logprob: -5.39824914932251
    4. ' ' → logprob: -5.52324914932251
    5. ' [
' → logprob: -6.64824914932251
    6. ' [-' → logprob: -8.398248672485352
    7. '   ' → logprob: -8.773248672485352
    8. '  ' → logprob: -9.023248672485352
    9. '[]' → logprob: -9.148248672485352
    10. '_' → logprob: -9.398248672485352

Token 179: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2151166945695877
    2. ' [' → logprob: -1.9651167392730713
    3. '[' → logprob: -3.2151167392730713
    4. ' [-' → logprob: -4.715116500854492
    5. '[-' → logprob: -6.465116500854492
    6. ' [
' → logprob: -7.215116500854492
    7. ' prev' → logprob: -7.840116500854492
    8. '[
' → logprob: -7.965116500854492
    9. ' []' → logprob: -8.090116500854492
    10. ' previous' → logprob: -8.090116500854492

Token 180: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.02326854318380356
    2. ' list' → logprob: -3.773268461227417
    3. 'List' → logprob: -11.273268699645996
    4. '   ' → logprob: -12.398268699645996
    5. 'prev' → logprob: -12.398268699645996
    6. 'dict' → logprob: -13.898268699645996
    7. ' List' → logprob: -15.023268699645996
    8. 'previous' → logprob: -15.273268699645996
    9. '_list' → logprob: -15.273268699645996
    10. '```' → logprob: -16.14826774597168

Token 181: ' of' (ID: 328)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.26334694027900696
    2. ' of' → logprob: -1.6383469104766846
    3. '[' → logprob: -3.3883469104766846
    4. '<int' → logprob: -6.638347148895264
    5. '_' → logprob: -7.638347148895264
    6. ' [' → logprob: -7.763347148895264
    7. '(int' → logprob: -8.138346672058105
    8. '[-' → logprob: -8.263346672058105
    9. '_of' → logprob: -8.888346672058105
    10. '[List' → logprob: -9.138346672058105

Token 182: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003177952254191041
    2. ' int' → logprob: -5.753178119659424
    3. '[int' → logprob: -15.503177642822266
    4. '(int' → logprob: -17.503177642822266
    5. '<int' → logprob: -17.628177642822266
    6. ':int' → logprob: -19.378177642822266
    7. '=int' → logprob: -20.003177642822266
    8. 'ints' → logprob: -21.003177642822266
    9. '	int' → logprob: -21.128177642822266
    10. ',int' → logprob: -21.628177642822266

Token 183: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20426543056964874
    2. ']' → logprob: -2.7042653560638428
    3. ')' → logprob: -3.4542653560638428
    4. '):' → logprob: -3.8292653560638428
    5. '_prev' → logprob: -4.204265594482422
    6. ' previous' → logprob: -4.579265594482422
    7. '_previous' → logprob: -4.954265594482422
    8. '   ' → logprob: -5.204265594482422
    9. ',' → logprob: -5.329265594482422
    10. ']:' → logprob: -5.329265594482422

Token 184: ' Une' (ID: 19758)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' previous' → logprob: -0.3055223822593689
    2. 'prev' → logprob: -2.3055224418640137
    3. ' prev' → logprob: -2.3055224418640137
    4. 'previous' → logprob: -3.3055224418640137
    5. ' La' → logprob: -4.555522441864014
    6. 'La' → logprob: -5.055522441864014
    7. '   ' → logprob: -5.680522441864014
    8. ' indices' → logprob: -6.680522441864014
    9. '[' → logprob: -7.180522441864014
    10. ' positions' → logprob: -7.555522441864014

Token 185: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.0784350261092186
    2. 'liste' → logprob: -2.703434944152832
    3. ' list' → logprob: -4.953434944152832
    4. 'list' → logprob: -8.078434944152832
    5. '[]' → logprob: -8.203434944152832
    6. '_list' → logprob: -8.328434944152832
    7. ' lista' → logprob: -9.078434944152832
    8. ' listes' → logprob: -9.203434944152832
    9. ' Liste' → logprob: -9.453434944152832
    10. '[' → logprob: -9.828434944152832

Token 186: ' r' (ID: 428)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.105629324913025
    2. ' des' → logprob: -1.230629324913025
    3. '<|end|>' → logprob: -1.855629324913025
    4. '[-' → logprob: -2.6056294441223145
    5. ' of' → logprob: -3.6056294441223145
    6. ' [' → logprob: -4.4806294441223145
    7. '   ' → logprob: -4.6056294441223145
    8. '([-' → logprob: -4.7306294441223145
    9. '_des' → logprob: -4.8556294441223145
    10. ' de' → logprob: -4.8556294441223145

Token 187: ' telle' (ID: 70904)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6327884793281555
    2. 'e' → logprob: -2.0077884197235107
    3. '[-' → logprob: -2.1327884197235107
    4. ' of' → logprob: -2.2577884197235107
    5. ' =' → logprob: -3.5077884197235107
    6. ' des' → logprob: -4.38278865814209
    7. 'ep' → logprob: -4.63278865814209
    8. 'es' → logprob: -4.75778865814209
    9. 'anging' → logprob: -5.13278865814209
    10. ' ' → logprob: -5.38278865814209

Token 188: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.058836232870817184
    2. 'que' → logprob: -2.9338362216949463
    3. ' that' → logprob: -5.933836460113525
    4. 'that' → logprob: -6.683836460113525
    5. 'qu' → logprob: -10.933835983276367
    6. ' ' → logprob: -12.058835983276367
    7. ' qu' → logprob: -12.433835983276367
    8. '   ' → logprob: -12.558835983276367
    9. '_that' → logprob: -12.558835983276367
    10. ',' → logprob: -13.433835983276367

Token 189: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3442932665348053
    2. ' r' → logprob: -1.344293236732483
    3. 'len' → logprob: -3.8442933559417725
    4. ' len' → logprob: -6.344293117523193
    5. '   ' → logprob: -6.469293117523193
    6. 'où' → logprob: -6.844293117523193
    7. '[r' → logprob: -7.219293117523193
    8. ' pour' → logprob: -7.344293117523193
    9. ' où' → logprob: -7.344293117523193
    10. '[len' → logprob: -7.344293117523193

Token 190: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009894323535263538
    2. '=' → logprob: -4.759894371032715
    3. '=[]' → logprob: -8.009894371032715
    4. '=[' → logprob: -8.509894371032715
    5. '[' → logprob: -8.634894371032715
    6. '=[]
' → logprob: -9.009894371032715
    7. '[i' → logprob: -9.134894371032715
    8. '[]' → logprob: -9.259894371032715
    9. '[-' → logprob: -9.884894371032715
    10. '   ' → logprob: -9.884894371032715

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4756453037261963
    2. '[i' → logprob: -0.9756453037261963
    3. ' ]' → logprob: -6.975645065307617
    4. '[' → logprob: -8.100645065307617
    5. ']=' → logprob: -9.100645065307617
    6. '][' → logprob: -9.225645065307617
    7. '[j' → logprob: -10.100645065307617
    8. '   ' → logprob: -10.975645065307617
    9. ']==' → logprob: -11.350645065307617
    10. '[]' → logprob: -11.475645065307617

Token 192: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2156262993812561
    2. ' =' → logprob: -1.8406262397766113
    3. '[' → logprob: -4.090626239776611
    4. '=' → logprob: -4.715626239776611
    5. ' contains' → logprob: -6.465626239776611
    6. '.append' → logprob: -6.590626239776611
    7. ' contient' → logprob: -6.840626239776611
    8. '[j' → logprob: -7.090626239776611
    9. '[]' → logprob: -7.090626239776611
    10. '=[' → logprob: -7.215626239776611

Token 193: ' l' (ID: 305)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.049306869506836
    2. 'la' → logprob: -1.049306869506836
    3. ' la' → logprob: -1.299306869506836
    4. ' -' → logprob: -4.299306869506836
    5. 'l' → logprob: -5.674306869506836
    6. ' l' → logprob: -5.924306869506836
    7. 'position' → logprob: -6.174306869506836
    8. ' soit' → logprob: -6.174306869506836
    9. ' ' → logprob: -6.924306869506836
    10. '   ' → logprob: -7.299306869506836

Token 194: ''' (ID: 6)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016069328412413597
    2. ' -' → logprob: -5.391069412231445
    3. ''' → logprob: -5.516069412231445
    4. 'e' → logprob: -5.766069412231445
    5. 'a' → logprob: -6.141069412231445
    6. ''-' → logprob: -7.641069412231445
    7. '[-' → logprob: -8.016069412231445
    8. '   ' → logprob: -8.016069412231445
    9. 'es' → logprob: -8.266069412231445
    10. ''ind' → logprob: -9.141069412231445

Token 195: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.581379234790802
    2. 'indice' → logprob: -0.831379234790802
    3. 'indices' → logprob: -6.456379413604736
    4. ''ind' → logprob: -6.581379413604736
    5. 'position' → logprob: -6.956379413604736
    6. ' index' → logprob: -7.581379413604736
    7. '-' → logprob: -8.206378936767578
    8. ''' → logprob: -8.581378936767578
    9. 'ind' → logprob: -8.831378936767578
    10. ' indice' → logprob: -8.956378936767578

Token 196: ' précédent' (ID: 128462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.16815900802612305
    2. ' du' → logprob: -2.918159008026123
    3. ' précédent' → logprob: -3.418159008026123
    4. '   ' → logprob: -3.793159008026123
    5. 'des' → logprob: -4.668159008026123
    6. ' ' → logprob: -4.793159008026123
    7. ' -' → logprob: -5.293159008026123
    8. '-' → logprob: -6.043159008026123
    9. '_des' → logprob: -6.168159008026123
    10. ' précéd' → logprob: -6.168159008026123

Token 197: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26189324259757996
    2. ' de' → logprob: -2.3868932723999023
    3. ' ' → logprob: -2.3868932723999023
    4. ' des' → logprob: -3.8868932723999023
    5. 'de' → logprob: -5.386893272399902
    6. ' _' → logprob: -5.636893272399902
    7. ' i' → logprob: -5.761893272399902
    8. '(' → logprob: -6.386893272399902
    9. '[' → logprob: -6.636893272399902
    10. 's' → logprob: -6.636893272399902

Token 198: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1473836600780487
    2. 'c' → logprob: -2.022383689880371
    3. ' la' → logprob: -5.522383689880371
    4. ' l' → logprob: -8.522383689880371
    5. ' i' → logprob: -8.772383689880371
    6. ' ' → logprob: -9.397383689880371
    7. 'i' → logprob: -9.897383689880371
    8. ')c' → logprob: -10.147383689880371
    9. 'l' → logprob: -10.272383689880371
    10. 'la' → logprob: -10.647383689880371

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.015530749224126339
    2. '[' → logprob: -4.640530586242676
    3. '[c' → logprob: -5.890530586242676
    4. 'c' → logprob: -6.890530586242676
    5. ']' → logprob: -7.890530586242676
    6. '[
' → logprob: -8.265530586242676
    7. '```' → logprob: -8.265530586242676
    8. '(i' → logprob: -8.765530586242676
    9. ' [' → logprob: -9.015530586242676
    10. ')' → logprob: -9.265530586242676

Token 200: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004989912733435631
    2. ' ]' → logprob: -5.629990100860596
    3. '],' → logprob: -7.754990100860596
    4. '-' → logprob: -8.129989624023438
    5. ',' → logprob: -8.879989624023438
    6. '[i' → logprob: -8.879989624023438
    7. ' -' → logprob: -9.129989624023438
    8. ')' → logprob: -9.379989624023438
    9. ']
' → logprob: -10.254989624023438
    10. '   ' → logprob: -10.379989624023438

Token 201: '                    ' (ID: 7692)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9073204398155212
    2. ',' → logprob: -1.157320499420166
    3. ']' → logprob: -1.657320499420166
    4. '[i' → logprob: -2.907320499420166
    5. ')' → logprob: -5.032320499420166
    6. 's' → logprob: -5.282320499420166
    7. ' if' → logprob: -5.282320499420166
    8. ' ]' → logprob: -5.657320499420166
    9. ' or' → logprob: -5.782320499420166
    10. ' ,' → logprob: -6.157320499420166

Token 202: ' où' (ID: 15113)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.07682392746210098
    2. ',' → logprob: -4.076823711395264
    3. ' si' → logprob: -4.076823711395264
    4. '   ' → logprob: -4.326823711395264
    5. ' if' → logprob: -4.326823711395264
    6. 'ou' → logprob: -4.951823711395264
    7. ' pour' → logprob: -6.451823711395264
    8. ' ' → logprob: -6.826823711395264
    9. ' or' → logprob: -7.076823711395264
    10. 'si' → logprob: -7.326823711395264

Token 203: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10025175660848618
    2. 'c' → logprob: -2.3502516746520996
    3. ' la' → logprob: -12.475252151489258
    4. ')c' → logprob: -12.475252151489258
    5. ' on' → logprob: -12.600252151489258
    6. ')' → logprob: -12.600252151489258
    7. '`' → logprob: -12.725252151489258
    8. 'a' → logprob: -12.850252151489258
    9. ' a' → logprob: -13.225252151489258
    10. '">' → logprob: -13.350252151489258

Token 204: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004430627159308642
    2. '[' → logprob: -7.875442981719971
    3. 'c' → logprob: -10.500443458557129
    4. '[j' → logprob: -12.000443458557129
    5. 'i' → logprob: -12.625443458557129
    6. '[
' → logprob: -12.625443458557129
    7. 's' → logprob: -12.750443458557129
    8. 'est' → logprob: -12.750443458557129
    9. '[c' → logprob: -13.125443458557129
    10. ' [' → logprob: -13.375443458557129

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027885181829333305
    2. '[i' → logprob: -4.6528849601745605
    3. ' ]' → logprob: -5.2778849601745605
    4. ' a' → logprob: -5.6528849601745605
    5. ']==' → logprob: -5.7778849601745605
    6. 'a' → logprob: -6.4028849601745605
    7. '[' → logprob: -7.0278849601745605
    8. ')' → logprob: -7.5278849601745605
    9. '==' → logprob: -7.5278849601745605
    10. ' ==' → logprob: -7.6528849601745605

Token 206: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2682721614837646
    2. 'a' → logprob: -1.3932721614837646
    3. ' a' → logprob: -1.6432721614837646
    4. ' ==' → logprob: -1.7682721614837646
    5. ']==' → logprob: -3.2682721614837646
    6. '==' → logprob: -3.3932721614837646
    7. '[' → logprob: -5.143272399902344
    8. ' was' → logprob: -5.393272399902344
    9. ' appar' → logprob: -5.893272399902344
    10. ' appeared' → logprob: -6.018272399902344

Token 207: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06205249950289726
    2. ' c' → logprob: -2.8120524883270264
    3. ')c' → logprob: -10.437052726745605
    4. ')' → logprob: -11.312052726745605
    5. '   ' → logprob: -11.437052726745605
    6. ' ' → logprob: -12.062052726745605
    7. ']' → logprob: -12.187052726745605
    8. '	c' → logprob: -12.437052726745605
    9. ' ' → logprob: -12.687052726745605
    10. '```' → logprob: -12.937052726745605

Token 208: '[r' (ID: 33265)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024332129396498203
    2. '[j' → logprob: -6.6274333000183105
    3. ']' → logprob: -7.1274333000183105
    4. '[' → logprob: -8.877432823181152
    5. '][' → logprob: -10.002432823181152
    6. '[
' → logprob: -10.877432823181152
    7. '],' → logprob: -11.377432823181152
    8. ''[' → logprob: -11.502432823181152
    9. '[r' → logprob: -11.877432823181152
    10. '].' → logprob: -12.002432823181152

Token 209: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.472211968386546e-05
    2. ']' → logprob: -10.000094413757324
    3. '[j' → logprob: -10.875094413757324
    4. '[' → logprob: -11.250094413757324
    5. 'i' → logprob: -12.000094413757324
    6. '(i' → logprob: -12.125094413757324
    7. '[
' → logprob: -12.500094413757324
    8. '[r' → logprob: -14.375094413757324
    9. '][' → logprob: -15.125094413757324
    10. 'r' → logprob: -15.875094413757324

Token 210: ']],' (ID: 37171)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7343819737434387
    2. ']]' → logprob: -1.359381914138794
    3. '[i' → logprob: -1.484381914138794
    4. ']],' → logprob: -3.984381914138794
    5. 'i' → logprob: -4.609382152557373
    6. '],' → logprob: -6.109382152557373
    7. '']]' → logprob: -6.859382152557373
    8. '(i' → logprob: -7.109382152557373
    9. ']])' → logprob: -7.234382152557373
    10. '"]' → logprob: -7.734382152557373

Token 211: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.2047826051712036
    2. 'ou' → logprob: -2.454782485961914
    3. '-' → logprob: -3.204782485961914
    4. ' -' → logprob: -3.954782485961914
    5. '                    ' → logprob: -3.954782485961914
    6. ' or' → logprob: -4.704782485961914
    7. ' sinon' → logprob: -4.954782485961914
    8. ',' → logprob: -6.079782485961914
    9. '   ' → logprob: -7.954782485961914
    10. '0' → logprob: -8.454782485961914

Token 212: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5236128568649292
    2. '-' → logprob: -0.8986128568649292
    3. '   ' → logprob: -7.648612976074219
    4. '    ' → logprob: -11.773612976074219
    5. ' ' → logprob: -13.148612976074219
    6. '  ' → logprob: -13.648612976074219
    7. 'None' → logprob: -14.898612976074219
    8. '                   ' → logprob: -15.148612976074219
    9. '                    ' → logprob: -15.523612976074219
    10. '
' → logprob: -15.773612976074219

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.310693111619912e-05
    2. ' ' → logprob: -10.125042915344238
    3. '   ' → logprob: -12.875042915344238
    4. ' -' → logprob: -16.062543869018555
    5. '```' → logprob: -16.250043869018555
    6. ',' → logprob: -16.937543869018555
    7. '  ' → logprob: -17.000043869018555
    8. '2' → logprob: -17.187543869018555
    9. '    ' → logprob: -17.687543869018555
    10. '`' → logprob: -17.812543869018555

Token 214: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8561067581176758
    2. ']' → logprob: -1.6061067581176758
    3. ' if' → logprob: -2.231106758117676
    4. ' for' → logprob: -2.356106758117676
    5. ')' → logprob: -2.731106758117676
    6. ' pour' → logprob: -2.981106758117676
    7. '[i' → logprob: -3.606106758117676
    8. ' si' → logprob: -4.481106758117676
    9. '<|end|>' → logprob: -5.231106758117676
    10. '```' → logprob: -5.856106758117676

Token 215: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06323825567960739
    2. 'c' → logprob: -2.9382381439208984
    3. ' aucune' → logprob: -5.938238143920898
    4. 'r' → logprob: -6.438238143920898
    5. 'auc' → logprob: -6.688238143920898
    6. ' aucun' → logprob: -6.813238143920898
    7. ' r' → logprob: -7.188238143920898
    8. ' jamais' → logprob: -8.188238143920898
    9. ' not' → logprob: -8.688238143920898
    10. ' pas' → logprob: -9.438238143920898

Token 216: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014609156642109156
    2. '[' → logprob: -9.25014591217041
    3. '[
' → logprob: -11.62514591217041
    4. 'est' → logprob: -11.87514591217041
    5. '[j' → logprob: -12.00014591217041
    6. '[n' → logprob: -12.12514591217041
    7. 'i' → logprob: -12.25014591217041
    8. 'n' → logprob: -12.62514591217041
    9. '   ' → logprob: -12.75014591217041
    10. ']' → logprob: -13.25014591217041

Token 217: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30670854449272156
    2. '[i' → logprob: -1.431708574295044
    3. 'n' → logprob: -4.556708335876465
    4. ' n' → logprob: -5.181708335876465
    5. ')' → logprob: -5.806708335876465
    6. '[' → logprob: -6.181708335876465
    7. '   ' → logprob: -6.931708335876465
    8. 'r' → logprob: -7.306708335876465
    9. 'i' → logprob: -8.056708335876465
    10. '[n' → logprob: -8.431708335876465

Token 218: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5943570137023926
    2. 'n' → logprob: -0.8443570137023926
    3. ' has' → logprob: -4.469357013702393
    4. 'a' → logprob: -6.594357013702393
    5. ']' → logprob: -6.719357013702393
    6. ' a' → logprob: -7.219357013702393
    7. 'has' → logprob: -7.469357013702393
    8. '   ' → logprob: -7.594357013702393
    9. ' not' → logprob: -7.844357013702393
    10. 'not' → logprob: -8.594356536865234

Token 219: ''est' (ID: 6616)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.1385360211133957
    2. 'a' → logprob: -3.138535976409912
    3. ''' → logprob: -3.888535976409912
    4. ''[' → logprob: -4.388535976409912
    5. '[i' → logprob: -4.888535976409912
    6. ''est' → logprob: -4.888535976409912
    7. '['' → logprob: -4.888535976409912
    8. '[a' → logprob: -5.013535976409912
    9. ''ont' → logprob: -5.263535976409912
    10. '[' → logprob: -5.388535976409912

Token 220: ' jamais' (ID: 23077)
  Prédit: ' jamais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jamais' → logprob: -0.4707654118537903
    2. 'pas' → logprob: -1.0957653522491455
    3. ' pas' → logprob: -3.3457653522491455
    4. 'a' → logprob: -6.220765590667725
    5. 'jam' → logprob: -6.595765590667725
    6. 't' → logprob: -7.470765590667725
    7. 'ent' → logprob: -8.345765113830566
    8. 'e' → logprob: -8.595765113830566
    9. 'o' → logprob: -8.720765113830566
    10. '_pas' → logprob: -8.845765113830566

Token 221: ' appar' (ID: 13643)
  Prédit: ' appar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appar' → logprob: -0.6384888291358948
    2. 'vu' → logprob: -1.01348876953125
    3. ' vu' → logprob: -2.51348876953125
    4. 'vue' → logprob: -4.01348876953125
    5. 'appar' → logprob: -5.26348876953125
    6. ' vue' → logprob: -6.38848876953125
    7. 'seen' → logprob: -7.51348876953125
    8. 'v' → logprob: -7.51348876953125
    9. 'app' → logprob: -8.01348876953125
    10. ' trouvé' → logprob: -8.26348876953125

Token 222: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0015585471410304308
    2. '
' → logprob: -7.376558780670166
    3. 'ue' → logprob: -7.751558780670166
    4. '[u' → logprob: -8.501558303833008
    5. '   ' → logprob: -9.751558303833008
    6. '

' → logprob: -10.126558303833008
    7. '<u' → logprob: -10.751558303833008
    8. ' u' → logprob: -11.376558303833008
    9. '```' → logprob: -11.501558303833008
    10. 'eu' → logprob: -11.501558303833008

Token 223: ' avant' (ID: 13339)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.558716893196106
    2. ' avant' → logprob: -1.558716893196106
    3. ' auparavant' → logprob: -1.808716893196106
    4. '   ' → logprob: -3.3087167739868164
    5. 'e' → logprob: -4.808716773986816
    6. ' before' → logprob: -6.183716773986816
    7. 'before' → logprob: -6.558716773986816
    8. ' précéd' → logprob: -6.808716773986816
    9. '    ' → logprob: -7.558716773986816
    10. ''avant' → logprob: -7.683716773986816

Token 224: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6956710815429688
    2. '[i' → logprob: -1.3206710815429688
    3. '   ' → logprob: -1.5706710815429688
    4. ')' → logprob: -4.570671081542969
    5. ']' → logprob: -5.070671081542969
    6. ' i' → logprob: -5.820671081542969
    7. 'i' → logprob: -6.195671081542969
    8. ',' → logprob: -6.320671081542969
    9. '.
' → logprob: -7.945671081542969
    10. 'e' → logprob: -8.070671081542969

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005177308339625597
    2. '"""
' → logprob: -5.8801774978637695
    3. '
' → logprob: -6.2551774978637695
    4. 'def' → logprob: -8.38017749786377
    5. '"""' → logprob: -9.38017749786377
    6. '```' → logprob: -10.13017749786377
    7. ' """
' → logprob: -10.50517749786377
    8. '    
' → logprob: -11.00517749786377
    9. ')' → logprob: -11.50517749786377
    10. '  ' → logprob: -11.63017749786377

Token 226: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28058937191963196
    2. '
' → logprob: -1.6555893421173096
    3. '"""
' (adapté à ' """
') → logprob: -3.5305893421173096
    4. 'def' → logprob: -4.655589580535889
    5. '    
' → logprob: -5.155589580535889
    6. ')' → logprob: -6.030589580535889
    7. '):
' → logprob: -6.030589580535889
    8. ')
' → logprob: -6.155589580535889
    9. '```' → logprob: -7.655589580535889
    10. '  
' → logprob: -7.655589580535889

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009014541283249855
    2. 'prev' → logprob: -8.000901222229004
    3. 'previous' → logprob: -8.375901222229004
    4. ' previous' → logprob: -9.125901222229004
    5. ' prev' → logprob: -9.875901222229004
    6. ' last' → logprob: -10.000901222229004
    7. 'def' → logprob: -10.375901222229004
    8. 'last' → logprob: -11.000901222229004
    9. 'r' → logprob: -11.125901222229004
    10. 'n' → logprob: -11.500901222229004

Token 228: ' n' (ID: 297)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.7105423808097839
    2. 'prev' → logprob: -1.4605424404144287
    3. 'last' → logprob: -1.5855424404144287
    4. 'r' → logprob: -3.7105424404144287
    5. 'seen' → logprob: -4.58554220199585
    6. '   ' → logprob: -4.58554220199585
    7. ' last' → logprob: -4.96054220199585
    8. 'pos' → logprob: -5.08554220199585
    9. ' previous' → logprob: -5.58554220199585
    10. 'preced' → logprob: -5.83554220199585

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07081152498722076
    2. '=' → logprob: -2.6958115100860596
    3. ',' → logprob: -7.945811748504639
    4. '   ' → logprob: -8.57081127166748
    5. ')' → logprob: -8.94581127166748
    6. '_' → logprob: -9.69581127166748
    7. '=len' → logprob: -9.69581127166748
    8. '_prev' → logprob: -11.19581127166748
    9. '=int' → logprob: -11.32081127166748
    10. 'c' → logprob: -11.82081127166748

Token 230: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02975141443312168
    2. ' len' → logprob: -3.5297513008117676
    3. '   ' → logprob: -14.654751777648926
    4. '(len' → logprob: -15.029751777648926
    5. '[len' → logprob: -16.52975082397461
    6. '=len' → logprob: -17.77975082397461
    7. '	len' → logprob: -18.77975082397461
    8. 'length' → logprob: -19.15475082397461
    9. ',len' → logprob: -20.77975082397461
    10. 'Len' → logprob: -21.15475082397461

Token 231: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003902775060851127
    2. '(' → logprob: -7.87539005279541
    3. 'c' → logprob: -12.00039005279541
    4. ' (' → logprob: -12.87539005279541
    5. '(
' → logprob: -14.50039005279541
    6. '   ' → logprob: -14.75039005279541
    7. ')c' → logprob: -16.000391006469727
    8. ')' → logprob: -16.250391006469727
    9. 's' → logprob: -16.875391006469727
    10. '	c' → logprob: -17.125391006469727

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5765466690063477
    2. ')
' → logprob: -0.8265466690063477
    3. '   ' → logprob: -7.576546669006348
    4. ' )
' → logprob: -10.201546669006348
    5. ')
' → logprob: -10.576546669006348
    6. ' )' → logprob: -10.951546669006348
    7. ')

' → logprob: -12.326546669006348
    8. 'def' → logprob: -12.576546669006348
    9. ')n' → logprob: -13.326546669006348
    10. '):
' → logprob: -13.701546669006348

Token 233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22412975132465363
    2. 'previous' → logprob: -2.4741296768188477
    3. 'prev' → logprob: -3.0991296768188477
    4. ' previous' → logprob: -3.2241296768188477
    5. ' last' → logprob: -4.349129676818848
    6. ' prev' → logprob: -4.474129676818848
    7. 'last' → logprob: -5.724129676818848
    8. 'r' → logprob: -6.849129676818848
    9. ' r' → logprob: -6.974129676818848
    10. 'preced' → logprob: -7.599129676818848

Token 234: ' r' (ID: 428)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0410346984863281
    2. 'previous' → logprob: -1.0410346984863281
    3. 'prev' → logprob: -1.2910346984863281
    4. 'pos' → logprob: -5.041034698486328
    5. 'preced' → logprob: -5.166034698486328
    6. 'r' (adapté à ' r') → logprob: -5.791034698486328
    7. 'position' → logprob: -6.916034698486328
    8. 'seen' → logprob: -7.041034698486328
    9. 'positions' → logprob: -7.791034698486328
    10. 'index' → logprob: -8.416034698486328

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021109133958817
    2. '=' → logprob: -2.3502111434936523
    3. ' ' → logprob: -13.100211143493652
    4. ',' → logprob: -13.725211143493652
    5. '[' → logprob: -14.725211143493652
    6. '_' → logprob: -15.600211143493652
    7. '=[]' → logprob: -15.850211143493652
    8. ' =[' → logprob: -15.850211143493652
    9. '=[' → logprob: -15.975211143493652
    10. '=[]
' → logprob: -15.975211143493652

Token 236: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0019324433524161577
    2. ' [-' → logprob: -6.251932621002197
    3. '[]' → logprob: -12.751932144165039
    4. '[' → logprob: -14.251932144165039
    5. '[n' → logprob: -16.62693214416504
    6. ' [' → logprob: -17.37693214416504
    7. '[:]' → logprob: -17.75193214416504
    8. ' []' → logprob: -17.87693214416504
    9. '   ' → logprob: -19.00193214416504
    10. '-' → logprob: -19.25193214416504

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.437500953674316
    3. ' -' → logprob: -17.1875
    4. '   ' → logprob: -17.25
    5. '১' → logprob: -17.3125
    6. '۱' → logprob: -17.5
    7. '१' → logprob: -17.5625
    8. '```' → logprob: -17.75
    9. '-' → logprob: -17.9375
    10. '<|end|>' → logprob: -18.25

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07357615232467651
    2. ' ]' → logprob: -3.1985762119293213
    3. ' for' → logprob: -3.5735762119293213
    4. 'for' → logprob: -6.573575973510742
    5. ')' → logprob: -7.948575973510742
    6. ']*' → logprob: -8.573575973510742
    7. '   ' → logprob: -9.823575973510742
    8. ' ' → logprob: -11.073575973510742
    9. ')]' → logprob: -11.573575973510742
    10. ' )' → logprob: -11.948575973510742

Token 239: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5159607529640198
    2. '   ' → logprob: -1.890960693359375
    3. ' for' → logprob: -2.015960693359375
    4. 'for' → logprob: -2.265960693359375
    5. '    
' → logprob: -5.390960693359375
    6. '[' → logprob: -6.015960693359375
    7. ' ' → logprob: -6.640960693359375
    8. ' *' → logprob: -7.140960693359375
    9. '*' → logprob: -7.140960693359375
    10. ' n' → logprob: -7.265960693359375

Token 240: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.517272024415433e-05
    2. ' n' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.500075340270996
    4. '(n' → logprob: -17.50007438659668
    5. '	n' → logprob: -18.00007438659668
    6. ')n' → logprob: -19.12507438659668
    7. '
' → logprob: -19.62507438659668
    8. '```' → logprob: -20.12507438659668
    9. '[n' → logprob: -21.37507438659668
    10. '_n' → logprob: -21.87507438659668

Token 241: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10718879848718643
    2. '   ' → logprob: -2.3571887016296387
    3. '    
' → logprob: -5.107188701629639
    4. '   
' → logprob: -8.232189178466797
    5. '  
' → logprob: -8.482189178466797
    6. '
' → logprob: -9.232189178466797
    7. ' 
' → logprob: -9.482189178466797
    8. 'last' → logprob: -9.982189178466797
    9. 'dict' → logprob: -10.107189178466797
    10. '	
' → logprob: -10.357189178466797

Token 242: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002734858775511384
    2. '   ' → logprob: -7.002734661102295
    3. '    
' → logprob: -7.502734661102295
    4. 'last' → logprob: -7.502734661102295
    5. 'seen' → logprob: -9.002735137939453
    6. 'previous' → logprob: -9.252735137939453
    7. 'prev' → logprob: -9.377735137939453
    8. 'positions' → logprob: -9.377735137939453
    9. '   
' → logprob: -10.127735137939453
    10. 'dict' → logprob: -10.252735137939453

Token 243: ' tableau' (ID: 67053)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.2221393585205078
    2. ' last' → logprob: -1.5971393585205078
    3. 'd' → logprob: -1.8471393585205078
    4. 'dict' → logprob: -2.472139358520508
    5. ' d' → logprob: -2.847139358520508
    6. 'seen' → logprob: -2.847139358520508
    7. 'position' → logprob: -3.472139358520508
    8. ' seen' → logprob: -3.722139358520508
    9. 'positions' → logprob: -3.972139358520508
    10. 'prev' → logprob: -4.472139358520508

Token 244: ' résultat' (ID: 62556)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31243816018104553
    2. 'de' → logprob: -1.9374381303787231
    3. 'des' → logprob: -2.6874382495880127
    4. 'last' → logprob: -4.187438011169434
    5. 'index' → logprob: -4.562438011169434
    6. 'indices' → logprob: -5.062438011169434
    7. ' de' → logprob: -5.812438011169434
    8. 'for' → logprob: -5.812438011169434
    9. 'd' → logprob: -5.937438011169434
    10. 'indice' → logprob: -6.062438011169434

Token 245: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4678725004196167
    2. '
' → logprob: -1.0928725004196167
    3. '    
' → logprob: -3.9678726196289062
    4. 'last' → logprob: -4.842872619628906
    5. 'seen' → logprob: -6.217872619628906
    6. 'dict' → logprob: -6.467872619628906
    7. ',' → logprob: -6.467872619628906
    8. '  
' → logprob: -6.842872619628906
    9. ' last' → logprob: -7.217872619628906
    10. '   
' → logprob: -7.342872619628906

Token 246: 'isé' (ID: 30065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34626373648643494
    2. '
' → logprob: -1.9712637662887573
    3. '    
' → logprob: -2.7212636470794678
    4. 'last' → logprob: -2.7212636470794678
    5. ' last' → logprob: -5.721263885498047
    6. 'dict' → logprob: -5.971263885498047
    7. 'seen' → logprob: -5.971263885498047
    8. ',' → logprob: -6.096263885498047
    9. '   
' → logprob: -6.471263885498047
    10. 'positions' → logprob: -6.596263885498047

Token 247: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1650323122739792
    2. 'dict' → logprob: -3.290032386779785
    3. 'avec' → logprob: -4.040032386779785
    4. ' à' → logprob: -4.290032386779785
    5. '
' → logprob: -4.415032386779785
    6. 'prev' → logprob: -4.540032386779785
    7. ' avec' → logprob: -5.040032386779785
    8. 'last' → logprob: -5.290032386779785
    9. 'for' → logprob: -5.290032386779785
    10. ',' → logprob: -5.290032386779785

Token 248: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007505117449909449
    2. ' -' → logprob: -5.507504940032959
    3. 'n' → logprob: -5.757504940032959
    4. '-n' → logprob: -8.882505416870117
    5. ' n' → logprob: -9.507505416870117
    6. '[-' → logprob: -10.507505416870117
    7. '   ' → logprob: -11.632505416870117
    8. '-l' → logprob: -12.132505416870117
    9. '[n' → logprob: -13.507505416870117
    10. ' ' → logprob: -13.507505416870117

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -11.750029563903809
    3. 'n' → logprob: -12.000029563903809
    4. '   ' → logprob: -12.125029563903809
    5. '-' → logprob: -13.750029563903809
    6. '```' → logprob: -14.187529563903809
    7. 'r' → logprob: -14.312529563903809
    8. ' -' → logprob: -14.375029563903809
    9. 'len' → logprob: -14.875029563903809
    10. '  ' → logprob: -14.937529563903809

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2449105978012085
    2. '   ' → logprob: -1.7449105978012085
    3. '    
' → logprob: -3.494910717010498
    4. 'last' → logprob: -5.244910717010498
    5. ' last' → logprob: -6.619910717010498
    6. '   
' → logprob: -6.869910717010498
    7. '  
' → logprob: -6.994910717010498
    8. 'dict' → logprob: -7.494910717010498
    9. ',' → logprob: -7.619910717010498
    10. 'prev' → logprob: -8.11991024017334

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002039987128227949
    2. ' last' → logprob: -7.377039909362793
    3. 'last' → logprob: -7.627039909362793
    4. ' seen' → logprob: -8.377039909362793
    5. '    
' → logprob: -8.502039909362793
    6. 'seen' → logprob: -8.877039909362793
    7. 'positions' → logprob: -9.127039909362793
    8. 'position' → logprob: -9.752039909362793
    9. 'index' → logprob: -10.627039909362793
    10. 'previous' → logprob: -10.877039909362793

Token 252: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.46880826354026794
    2. ' last' → logprob: -1.0938082933425903
    3. 'seen' → logprob: -4.093808174133301
    4. ' seen' → logprob: -4.593808174133301
    5. 'positions' → logprob: -5.593808174133301
    6. '   ' → logprob: -5.593808174133301
    7. 'pos' → logprob: -6.843808174133301
    8. 'position' → logprob: -7.093808174133301
    9. 'previous' → logprob: -7.468808174133301
    10. 'dern' → logprob: -7.593808174133301

Token 253: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.858191192150116
    2. '_occ' → logprob: -1.3581912517547607
    3. '_positions' → logprob: -1.6081912517547607
    4. '_indices' → logprob: -2.2331912517547607
    5. '_pos' → logprob: -4.858191013336182
    6. '_oc' → logprob: -6.483191013336182
    7. '_position' → logprob: -6.983191013336182
    8. '_indexes' → logprob: -7.358191013336182
    9. '_index' → logprob: -7.858191013336182
    10. '_' → logprob: -8.73319149017334

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326398253440857
    2. '=' → logprob: -1.313264012336731
    3. 's' → logprob: -14.063263893127441
    4. '={}' → logprob: -14.688263893127441
    5. ' ' → logprob: -15.188263893127441
    6. ',' → logprob: -16.313264846801758
    7. '   ' → logprob: -16.313264846801758
    8. ')' → logprob: -16.563264846801758
    9. '={}
' → logprob: -16.813264846801758
    10. '```' → logprob: -17.188264846801758

Token 255: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0488019660115242
    2. ' {}' → logprob: -3.048801898956299
    3. 'dict' → logprob: -8.548802375793457
    4. ' dict' → logprob: -10.798802375793457
    5. '={}' → logprob: -15.298802375793457
    6. '{}
' → logprob: -18.04880142211914
    7. ' {}\' → logprob: -18.04880142211914
    8. '{},' → logprob: -18.17380142211914
    9. '{})' → logprob: -18.54880142211914
    10. '{}_' → logprob: -18.54880142211914

Token 256: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017231269157491624
    2. '()
' → logprob: -8.75017261505127
    3. ' ()' → logprob: -12.25017261505127
    4. '(' → logprob: -12.62517261505127
    5. '()

' → logprob: -12.62517261505127
    6. '()]' → logprob: -14.37517261505127
    7. '()\' → logprob: -14.37517261505127
    8. '())' → logprob: -15.25017261505127
    9. '()
' → logprob: -15.50017261505127
    10. '()>' → logprob: -15.75017261505127

Token 257: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07430827617645264
    2. '   ' → logprob: -2.824308395385742
    3. '    
' → logprob: -4.574308395385742
    4. ' for' → logprob: -7.074308395385742
    5. '  
' → logprob: -7.949308395385742
    6. 'for' → logprob: -8.199308395385742
    7. ' 
' → logprob: -8.449308395385742
    8. '	
' → logprob: -9.074308395385742
    9. '\n' → logprob: -9.824308395385742
    10. '
' → logprob: -10.324308395385742

Token 258: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05519469827413559
    2. '
' → logprob: -3.180194616317749
    3. 'for' → logprob: -5.180194854736328
    4. ' for' → logprob: -5.680194854736328
    5. '    
' → logprob: -5.805194854736328
    6. '  
' → logprob: -10.555194854736328
    7. '	for' → logprob: -11.430194854736328
    8. '	
' → logprob: -11.680194854736328
    9. ' 
' → logprob: -11.930194854736328
    10. '   
' → logprob: -12.430194854736328

Token 259: ' diction' (ID: 155259)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44387707114219666
    2. ' for' → logprob: -1.068877100944519
    3. '   ' → logprob: -4.318877220153809
    4. '
' → logprob: -6.943877220153809
    5. 'def' → logprob: -8.443877220153809
    6. ')' → logprob: -8.568877220153809
    7. '	for' → logprob: -8.943877220153809
    8. '    
' → logprob: -9.818877220153809
    9. '{}' → logprob: -9.943877220153809
    10. '{' → logprob: -10.568877220153809

Token 260: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.010781330987811089
    2. 'ary' → logprob: -5.010781288146973
    3. 'aire' → logprob: -5.885781288146973
    4. 'a' → logprob: -7.510781288146973
    5. 'ar' → logprob: -7.760781288146973
    6. 'n' → logprob: -9.135781288146973
    7. '   ' → logprob: -9.385781288146973
    8. 'na' → logprob: -10.260781288146973
    9. 'naires' → logprob: -10.260781288146973
    10. 'arie' → logprob: -12.385781288146973

Token 261: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' mém' (ID: 136981)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.9919239282608032
    2. ' garder' → logprob: -1.1169239282608032
    3. ' suivre' → logprob: -2.1169238090515137
    4. ' stock' → logprob: -2.2419238090515137
    5. 'stock' → logprob: -3.1169238090515137
    6. '   ' → logprob: -5.116923809051514
    7. 'reten' → logprob: -5.616923809051514
    8. ' enregistr' → logprob: -5.741923809051514
    9. 'g' → logprob: -6.116923809051514
    10. 'tracker' → logprob: -6.241923809051514

Token 263: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00016551809676457196
    2. 'orer' → logprob: -9.250165939331055
    3. 'oir' → logprob: -11.125165939331055
    4. 'oris' → logprob: -11.250165939331055
    5. 'er' → logprob: -11.625165939331055
    6. 'o' → logprob: -11.750165939331055
    7. 'orrer' → logprob: -11.875165939331055
    8. 'oriz' → logprob: -12.250165939331055
    9. 'érer' → logprob: -13.000165939331055
    10. 'oire' → logprob: -13.750165939331055

Token 264: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.027500445023179054
    2. 'er' → logprob: -3.6525003910064697
    3. 'izer' → logprob: -7.402500629425049
    4. 'is' → logprob: -8.90250015258789
    5. 'ser' → logprob: -9.65250015258789
    6. 'last' → logprob: -9.90250015258789
    7. 'érer' → logprob: -10.15250015258789
    8. 'e' → logprob: -10.27750015258789
    9. 'ise' → logprob: -10.40250015258789
    10. 'rer' → logprob: -10.77750015258789

Token 265: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4350569546222687
    2. '<|end|>' → logprob: -1.4350569248199463
    3. ' la' → logprob: -2.8100569248199463
    4. 'les' → logprob: -3.5600569248199463
    5. 'the' → logprob: -4.310057163238525
    6. ' the' → logprob: -4.935057163238525
    7. ',' → logprob: -6.935057163238525
    8. ' l' → logprob: -7.060057163238525
    9. 'positions' → logprob: -7.435057163238525
    10. 'l' → logprob: -7.935057163238525

Token 266: ' dernière' (ID: 39497)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.741186797618866
    2. ' dernière' → logprob: -1.4911868572235107
    3. 'position' → logprob: -2.2411868572235107
    4. 'dern' → logprob: -2.7411868572235107
    5. 'positions' → logprob: -3.2411868572235107
    6. 'indices' → logprob: -3.6161868572235107
    7. ' derni' → logprob: -3.9911868572235107
    8. 'last' → logprob: -4.616186618804932
    9. ' der' → logprob: -4.991186618804932
    10. ' position' → logprob: -5.241186618804932

Token 267: ' occurrence' (ID: 55807)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6796776056289673
    2. 'position' → logprob: -1.9296776056289673
    3. ' position' → logprob: -2.4296774864196777
    4. '_position' → logprob: -2.9296774864196777
    5. '_occ' → logprob: -2.9296774864196777
    6. ' _' → logprob: -3.1796774864196777
    7. '_seen' → logprob: -3.3046774864196777
    8. 'occ' → logprob: -4.179677486419678
    9. '_oc' → logprob: -4.429677486419678
    10. ' occurrence' → logprob: -5.054677486419678

Token 268: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9005244374275208
    2. ' of' → logprob: -1.775524377822876
    3. ' des' → logprob: -2.150524377822876
    4. ' ' → logprob: -2.525524377822876
    5. 's' → logprob: -2.775524377822876
    6. '<|end|>' → logprob: -3.025524377822876
    7. '   ' → logprob: -3.400524377822876
    8. '  ' → logprob: -3.775524377822876
    9. '    ' → logprob: -4.525524616241455
    10. ')' → logprob: -4.525524616241455

Token 269: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8695035576820374
    2. 'each' → logprob: -1.1195034980773926
    3. ' chaque' → logprob: -2.2445034980773926
    4. ' each' → logprob: -2.2445034980773926
    5. ' c' → logprob: -3.3695034980773926
    6. ' chacune' → logprob: -5.869503498077393
    7. ' ' → logprob: -6.244503498077393
    8. '<|end|>' → logprob: -6.744503498077393
    9. 'value' → logprob: -6.994503498077393
    10. 'ch' → logprob: -7.619503498077393

Token 270: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.7826111316680908
    2. 'val' → logprob: -1.0326111316680908
    3. 'value' → logprob: -2.907611131668091
    4. 'c' → logprob: -3.157611131668091
    5. 'élé' → logprob: -3.657611131668091
    6. ' value' → logprob: -3.657611131668091
    7. ' c' → logprob: -3.782611131668091
    8. ' couleur' → logprob: -5.657610893249512
    9. ' ' → logprob: -5.782610893249512
    10. ' élément' → logprob: -6.032610893249512

Token 271: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1434585005044937
    2. '
' → logprob: -2.393458604812622
    3. '    
' → logprob: -3.268458604812622
    4. ' for' → logprob: -6.268458366394043
    5. '  
' → logprob: -7.268458366394043
    6. 'for' → logprob: -7.268458366394043
    7. '<|end|>' → logprob: -8.393458366394043
    8. ')' → logprob: -9.018458366394043
    9. '   
' → logprob: -9.018458366394043
    10. ' 
' → logprob: -9.393458366394043

Token 272: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6807223558425903
    2. '   ' → logprob: -0.8057223558425903
    3. '    
' → logprob: -3.805722236633301
    4. ' for' → logprob: -4.305722236633301
    5. ' 
' → logprob: -5.930722236633301
    6. 'for' → logprob: -5.930722236633301
    7. '  
' → logprob: -6.055722236633301
    8. '\n' → logprob: -6.055722236633301
    9. '   
' → logprob: -8.0557222366333
    10. '	
' → logprob: -8.4307222366333

Token 273: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3218253254890442
    2. '   ' → logprob: -1.5718252658843994
    3. ' for' → logprob: -2.6968252658843994
    4. '	for' → logprob: -9.69682502746582
    5. '    
' → logprob: -11.07182502746582
    6. '
' → logprob: -11.94682502746582
    7. ' ' → logprob: -13.32182502746582
    8. '```' → logprob: -13.44682502746582
    9. '  ' → logprob: -14.19682502746582
    10. 'i' → logprob: -14.32182502746582

Token 274: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007610886357724667
    2. 'i' → logprob: -4.88261079788208
    3. '	i' → logprob: -13.007611274719238
    4. ' ' → logprob: -13.632611274719238
    5. '_i' → logprob: -14.757611274719238
    6. ' ' → logprob: -15.257611274719238
    7. 'I' → logprob: -16.132610321044922
    8. ',' → logprob: -16.507610321044922
    9. ',i' → logprob: -16.507610321044922
    10. '[i' → logprob: -16.632610321044922

Token 275: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014524499885737896
    2. 'in' → logprob: -4.264524459838867
    3. ' ' → logprob: -8.014524459838867
    4. ',' → logprob: -11.639524459838867
    5. ' i' → logprob: -12.389524459838867
    6. '   ' → logprob: -13.139524459838867
    7. '	in' → logprob: -13.139524459838867
    8. '0' → logprob: -13.264524459838867
    9. '  ' → logprob: -13.389524459838867
    10. ')' → logprob: -13.764524459838867

Token 276: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.9312896132469177
    2. ' value' → logprob: -1.1812896728515625
    3. ' val' → logprob: -1.5562896728515625
    4. 'val' → logprob: -2.5562896728515625
    5. ' v' → logprob: -6.0562896728515625
    6. 'v' → logprob: -6.3062896728515625
    7. ' c' → logprob: -6.3062896728515625
    8. ' color' → logprob: -6.4312896728515625
    9. 'c' → logprob: -6.8062896728515625
    10. ' valeur' → logprob: -7.4312896728515625

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08918286114931107
    2. 'in' → logprob: -2.4641828536987305
    3. ',' → logprob: -8.46418285369873
    4. ' ' → logprob: -11.08918285369873
    5. '	in' → logprob: -12.58918285369873
    6. 's' → logprob: -12.71418285369873
    7. ')' → logprob: -12.83918285369873
    8. ' ,' → logprob: -13.46418285369873
    9. '_in' → logprob: -14.08918285369873
    10. '_' → logprob: -14.46418285369873

Token 278: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.10057573765516281
    2. 'enumer' → logprob: -2.3505756855010986
    3. ' c' → logprob: -8.22557544708252
    4. 'c' → logprob: -9.22557544708252
    5. ' ' → logprob: -14.22557544708252
    6. ' enumer' → logprob: -14.35057544708252
    7. ' en' → logprob: -14.60057544708252
    8. '(c' → logprob: -15.47557544708252
    9. ' enumeration' → logprob: -15.72557544708252
    10. ')' → logprob: -15.85057544708252

Token 279: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.000685391016304493
    2. ' (' → logprob: -8.125685691833496
    3. '(' → logprob: -8.500685691833496
    4. 'c' → logprob: -9.250685691833496
    5. ' c' → logprob: -10.125685691833496
    6. ')' → logprob: -10.500685691833496
    7. ')c' → logprob: -11.125685691833496
    8. 's' → logprob: -12.375685691833496
    9. '	c' → logprob: -14.125685691833496
    10. '(
' → logprob: -14.250685691833496

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01615542732179165
    2. '):
' → logprob: -4.141155242919922
    3. ' ):' → logprob: -9.516155242919922
    4. ':' → logprob: -10.391155242919922
    5. '   ' → logprob: -11.891155242919922
    6. ')' → logprob: -12.141155242919922
    7. '):
' → logprob: -12.891155242919922
    8. ' ):
' → logprob: -13.766155242919922
    9. ' :' → logprob: -15.016155242919922
    10. '():' → logprob: -15.516155242919922

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049281973391771317
    2. '   ' → logprob: -3.2992820739746094
    3. ' ' → logprob: -5.549282073974609
    4. '    ' → logprob: -5.799282073974609
    5. '    
' → logprob: -7.299282073974609
    6. '        
' → logprob: -7.424282073974609
    7. ' 
' → logprob: -7.674282073974609
    8. ' if' → logprob: -7.799282073974609
    9. ':' → logprob: -7.924282073974609
    10. '<|end|>' → logprob: -7.924282073974609

Token 282: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1626438945531845
    2. 'if' (adapté à ' if') → logprob: -1.9126439094543457
    3. '       ' → logprob: -6.037643909454346
    4. '   ' → logprob: -11.537643432617188
    5. '	if' → logprob: -11.787643432617188
    6. '    ' → logprob: -11.787643432617188
    7. '        ' → logprob: -13.537643432617188
    8. ' ' → logprob: -13.787643432617188
    9. 'If' → logprob: -14.787643432617188
    10. ' previous' → logprob: -15.162643432617188

Token 283: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0031784253660589457
    2. ' value' → logprob: -5.753178596496582
    3. '   ' → logprob: -15.003178596496582
    4. ' ' → logprob: -16.753177642822266
    5. 'alue' → logprob: -16.878177642822266
    6. 'val' → logprob: -17.003177642822266
    7. '	value' → logprob: -17.378177642822266
    8. '(value' → logprob: -17.378177642822266
    9. 'valu' → logprob: -17.503177642822266
    10. '"value' → logprob: -18.128177642822266

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007631943095475435
    2. 'in' → logprob: -4.882631778717041
    3. ' not' → logprob: -11.6326322555542
    4. ')' → logprob: -12.2576322555542
    5. ' ' → logprob: -12.3826322555542
    6. 'not' → logprob: -13.0076322555542
    7. ']' → logprob: -13.8826322555542
    8. '<|end|>' → logprob: -14.0076322555542
    9. 's' → logprob: -14.8201322555542
    10. 'In' → logprob: -14.8201322555542

Token 285: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.17974810302257538
    2. ' last' → logprob: -1.8047480583190918
    3. '	last' → logprob: -13.80474853515625
    4. '   ' → logprob: -13.80474853515625
    5. '[last' → logprob: -14.92974853515625
    6. ' ' → logprob: -15.05474853515625
    7. '_last' → logprob: -15.17974853515625
    8. '(last' → logprob: -16.05474853515625
    9. 'l' → logprob: -16.17974853515625
    10. '
' → logprob: -16.55474853515625

Token 286: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.00010998018842656165
    2. '_' → logprob: -9.125109672546387
    3. ' _' → logprob: -15.250109672546387
    4. 'seen' → logprob: -15.625109672546387
    5. '_used' → logprob: -15.875109672546387
    6. '_s' → logprob: -16.125110626220703
    7. '_se' → logprob: -16.500110626220703
    8. '_taken' → logprob: -16.625110626220703
    9. '_visible' → logprob: -16.750110626220703
    10. '   ' → logprob: -17.625110626220703

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055101171135902405
    2. ':
' → logprob: -2.930101156234741
    3. ' :' → logprob: -8.80510139465332
    4. ' :
' → logprob: -10.93010139465332
    5. '):
' → logprob: -11.55510139465332
    6. '):' → logprob: -11.55510139465332
    7. '   ' → logprob: -11.68010139465332
    8. '       ' → logprob: -11.80510139465332
    9. ' and' → logprob: -12.05510139465332
    10. 'and' → logprob: -12.93010139465332

Token 288: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05959010496735573
    2. '       ' → logprob: -3.9345901012420654
    3. ':' → logprob: -4.0595903396606445
    4. ':
' → logprob: -4.0595903396606445
    5. 'r' → logprob: -6.6845903396606445
    6. ' r' → logprob: -6.8095903396606445
    7. '
' → logprob: -8.184590339660645
    8. '):
' → logprob: -8.184590339660645
    9. ' :' → logprob: -8.934590339660645
    10. ' :
' → logprob: -8.934590339660645

Token 289: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01090940274298191
    2. ' r' → logprob: -4.635909557342529
    3. '       ' → logprob: -6.885909557342529
    4. '           ' → logprob: -9.010909080505371
    5. '   ' → logprob: -12.010909080505371
    6. 'i' → logprob: -14.510909080505371
    7. '_r' → logprob: -14.635909080505371
    8. '               ' → logprob: -14.885909080505371
    9. '	r' → logprob: -15.260909080505371
    10. '        
' → logprob: -15.385909080505371

Token 290: ' Si' (ID: 7832)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07596106082201004
    2. ' r' → logprob: -2.700961112976074
    3. '           ' → logprob: -5.200961112976074
    4. '       ' → logprob: -7.825961112976074
    5. '   ' → logprob: -9.700961112976074
    6. ' ' → logprob: -11.450961112976074
    7. '               ' → logprob: -11.575961112976074
    8. 'prev' → logprob: -12.575961112976074
    9. ' previous' → logprob: -12.700961112976074
    10. 'previous' → logprob: -13.450961112976074

Token 291: ' déjà' (ID: 21229)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.5833836197853088
    2. 'last' → logprob: -1.208383560180664
    3. 'r' → logprob: -2.708383560180664
    4. ' i' → logprob: -4.083383560180664
    5. '   ' → logprob: -4.083383560180664
    6. '_last' → logprob: -4.333383560180664
    7. ' ' → logprob: -4.458383560180664
    8. ' r' → logprob: -4.958383560180664
    9. 'i' → logprob: -5.958383560180664
    10. '	last' → logprob: -6.708383560180664

Token 292: ' vu' (ID: 12005)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.18876315653324127
    2. ' last' → logprob: -2.56376314163208
    3. '_seen' → logprob: -2.93876314163208
    4. '_last' → logprob: -3.81376314163208
    5. 'seen' → logprob: -4.56376314163208
    6. ':' → logprob: -6.06376314163208
    7. ' seen' → logprob: -6.18876314163208
    8. 'value' → logprob: -6.43876314163208
    9. ':last' → logprob: -7.31376314163208
    10. '   ' → logprob: -7.43876314163208

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053567007184028625
    2. ' ,' → logprob: -3.9285669326782227
    3. ':
' → logprob: -4.553566932678223
    4. ':' → logprob: -4.553566932678223
    5. '       ' → logprob: -5.553566932678223
    6. 'r' → logprob: -5.678566932678223
    7. '           ' → logprob: -6.178566932678223
    8. '   ' → logprob: -7.303566932678223
    9. ' :
' → logprob: -8.053566932678223
    10. ' :' → logprob: -8.553566932678223

Token 294: ' on' (ID: 402)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1859266459941864
    2. 'r' → logprob: -1.9359266757965088
    3. '       ' → logprob: -3.935926675796509
    4. '           ' → logprob: -5.18592643737793
    5. '   ' → logprob: -9.06092643737793
    6. '               ' → logprob: -9.93592643737793
    7. '	r' → logprob: -11.06092643737793
    8. ' ' → logprob: -11.18592643737793
    9. '	       ' → logprob: -11.31092643737793
    10. ' ' → logprob: -11.56092643737793

Token 295: ' stock' (ID: 6546)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.28274524211883545
    2. ' r' → logprob: -1.9077452421188354
    3. '       ' → logprob: -3.907745361328125
    4. ' assign' → logprob: -4.032745361328125
    5. ' a' → logprob: -4.282745361328125
    6. 'assign' → logprob: -5.032745361328125
    7. ' trouve' → logprob: -5.032745361328125
    8. ' continue' → logprob: -5.157745361328125
    9. '           ' → logprob: -5.782745361328125
    10. ' met' → logprob: -5.907745361328125

Token 296: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0015953186666592956
    2. 'er' → logprob: -6.751595497131348
    3. 'r' → logprob: -8.126595497131348
    4. '   ' → logprob: -10.001595497131348
    5. 'ne' → logprob: -10.126595497131348
    6. 're' → logprob: -12.126595497131348
    7. ' last' → logprob: -12.376595497131348
    8. '           ' → logprob: -12.626595497131348
    9. 'nne' → logprob: -12.751595497131348
    10. 'i' → logprob: -12.876595497131348

Token 297: ' la' (ID: 557)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.20154958963394165
    2. 'last' → logprob: -1.7015495300292969
    3. '_last' → logprob: -9.701549530029297
    4. '(last' → logprob: -10.076549530029297
    5. ' ' → logprob: -11.451549530029297
    6. '_' → logprob: -12.326549530029297
    7. 'space' → logprob: -12.326549530029297
    8. ' ' → logprob: -13.076549530029297
    9. '[last' → logprob: -13.201549530029297
    10. '	last' → logprob: -13.326549530029297

Token 298: ' dernière' (ID: 39497)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.026384131982922554
    2. ' last' → logprob: -3.651384115219116
    3. 'previous' → logprob: -10.526384353637695
    4. '_last' → logprob: -10.651384353637695
    5. ' previous' → logprob: -12.401384353637695
    6. 'i' → logprob: -12.401384353637695
    7. ' dernier' → logprob: -12.526384353637695
    8. 'dern' → logprob: -12.526384353637695
    9. '[last' → logprob: -12.651384353637695
    10. '	last' → logprob: -12.776384353637695

Token 299: ' position' (ID: 4010)
  Prédit: '_seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seen' → logprob: -0.10113432258367538
    2. '_' → logprob: -2.6011343002319336
    3. '_occ' → logprob: -4.476134300231934
    4. '_oc' → logprob: -4.976134300231934
    5. '_s' → logprob: -6.601134300231934
    6. ' _' → logprob: -6.976134300231934
    7. 'seen' → logprob: -7.851134300231934
    8. '_vue' → logprob: -8.726134300231934
    9. '[_' → logprob: -9.101134300231934
    10. ' ' → logprob: -9.226134300231934

Token 300: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0455436706542969
    2. '       ' → logprob: -1.1705436706542969
    3. '   ' → logprob: -2.545543670654297
    4. '[i' → logprob: -2.920543670654297
    5. '[' → logprob: -3.295543670654297
    6. '
' → logprob: -3.295543670654297
    7. '               ' → logprob: -3.795543670654297
    8. '                   ' → logprob: -4.920543670654297
    9. ' =' → logprob: -5.045543670654297
    10. '    
' → logprob: -5.045543670654297

Token 301: ' on' (ID: 402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2301305532455444
    2. '       ' → logprob: -1.2301305532455444
    3. ' r' → logprob: -1.3551305532455444
    4. '           ' → logprob: -2.230130672454834
    5. '   ' → logprob: -3.605130672454834
    6. '
' → logprob: -5.355130672454834
    7. ' ' → logprob: -5.980130672454834
    8. ' 
' → logprob: -6.355130672454834
    9. ')' → logprob: -6.855130672454834
    10. '"' → logprob: -6.855130672454834

Token 302: ' met' (ID: 1421)
  Prédit: ' met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' met' → logprob: -0.9012669920921326
    2. ' update' → logprob: -0.9012669920921326
    3. '       ' → logprob: -2.2762670516967773
    4. 'update' → logprob: -3.4012670516967773
    5. ' continue' → logprob: -3.7762670516967773
    6. 'r' → logprob: -5.401267051696777
    7. '   ' → logprob: -5.526267051696777
    8. 'met' → logprob: -5.651267051696777
    9. '           ' → logprob: -5.651267051696777
    10. 'continue' → logprob: -5.776267051696777

Token 303: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.053426094353199005
    2. 'à' → logprob: -3.0534260272979736
    3. '   ' → logprob: -6.428426265716553
    4. ' ' → logprob: -6.678426265716553
    5. ' ' → logprob: -7.803426265716553
    6. 'jour' → logprob: -7.803426265716553
    7. ' jour' → logprob: -8.053425788879395
    8. 'a' → logprob: -8.553425788879395
    9. 'last' → logprob: -8.678425788879395
    10. ' last' → logprob: -9.178425788879395

Token 304: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.00432294886559248
    2. ' jour' → logprob: -5.5043230056762695
    3. '```' → logprob: -9.50432300567627
    4. ' ' → logprob: -10.25432300567627
    5. '   ' → logprob: -10.37932300567627
    6. 'jou' → logprob: -10.50432300567627
    7. 'day' → logprob: -10.87932300567627
    8. '
' → logprob: -11.12932300567627
    9. 'journ' → logprob: -11.75432300567627
    10. 'last' → logprob: -12.25432300567627

Token 305: '
' (ID: 198)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.43895384669303894
    2. 'last' → logprob: -1.0639538764953613
    3. '           ' → logprob: -5.563953876495361
    4. '_last' → logprob: -5.813953876495361
    5. '   ' → logprob: -6.313953876495361
    6. '[last' → logprob: -8.188953399658203
    7. '       ' → logprob: -8.313953399658203
    8. ' value' → logprob: -8.563953399658203
    9. '(last' → logprob: -8.938953399658203
    10. 'value' → logprob: -9.063953399658203

Token 306: '           ' (ID: 352)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0010055303573608
    2. '       ' → logprob: -1.3760055303573608
    3. '           ' → logprob: -2.0010056495666504
    4. ' r' → logprob: -2.1260056495666504
    5. ' last' → logprob: -3.3760056495666504
    6. '_r' → logprob: -3.7510056495666504
    7. '   ' → logprob: -3.7510056495666504
    8. '_' → logprob: -5.25100564956665
    9. '               ' → logprob: -5.25100564956665
    10. '_last' → logprob: -5.62600564956665

Token 307: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.19792191684246063
    2. 'r' (adapté à ' r') → logprob: -1.947921872138977
    3. '           ' → logprob: -3.3229219913482666
    4. '       ' → logprob: -7.1979217529296875
    5. '   ' → logprob: -9.822921752929688
    6. ',' → logprob: -10.697921752929688
    7. '
' → logprob: -10.822921752929688
    8. '               ' → logprob: -10.947921752929688
    9. ' last' → logprob: -11.822921752929688
    10. 'n' → logprob: -11.822921752929688

Token 308: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000297685619443655
    2. '[' → logprob: -8.125297546386719
    3. ' [' → logprob: -14.125297546386719
    4. '[I' → logprob: -14.750297546386719
    5. '[r' → logprob: -15.500297546386719
    6. '   ' → logprob: -16.75029754638672
    7. '```' → logprob: -17.00029754638672
    8. '[j' → logprob: -17.12529754638672
    9. 'i' → logprob: -17.12529754638672
    10. ')[' → logprob: -17.50029754638672

Token 309: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1369246542453766
    2. '=' → logprob: -2.8869247436523438
    3. ' =' → logprob: -3.3869247436523438
    4. ' ]' → logprob: -3.7619247436523438
    5. ']=' → logprob: -4.261924743652344
    6. ')' → logprob: -7.136924743652344
    7. '[' → logprob: -9.636924743652344
    8. ' ' → logprob: -9.761924743652344
    9. '   ' → logprob: -10.136924743652344
    10. '[i' → logprob: -10.886924743652344

Token 310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. ',' → logprob: -15.886871337890625
    4. '=

' → logprob: -17.511871337890625
    5. ' ' → logprob: -18.011871337890625
    6. '=int' → logprob: -19.636871337890625
    7. ' =
' → logprob: -19.761871337890625
    8. '.=' → logprob: -19.886871337890625
    9. '＝' → logprob: -19.886871337890625
    10. ')' → logprob: -19.886871337890625

Token 311: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.07888989895582199
    2. ' last' → logprob: -2.578889846801758
    3. '	last' → logprob: -16.078889846801758
    4. '(last' → logprob: -16.828889846801758
    5. '_last' → logprob: -18.328889846801758
    6. '[last' → logprob: -18.328889846801758
    7. 'Last' → logprob: -18.828889846801758
    8. '           ' → logprob: -19.703889846801758
    9. ',last' → logprob: -20.078889846801758
    10. 'l' → logprob: -20.078889846801758

Token 312: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -1.735893965815194e-05
    2. 'seen' → logprob: -11.250017166137695
    3. '_' → logprob: -12.875017166137695
    4. ' _' → logprob: -15.000017166137695
    5. 'Seen' → logprob: -15.375017166137695
    6. '_s' → logprob: -15.500017166137695
    7. '   ' → logprob: -15.500017166137695
    8. '_taken' → logprob: -15.750017166137695
    9. '_visible' → logprob: -16.500017166137695
    10. '_used' → logprob: -16.875017166137695

Token 313: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -3.845798710244708e-05
    2. ' [' → logprob: -10.875038146972656
    3. '[' → logprob: -11.000038146972656
    4. 'value' → logprob: -13.250038146972656
    5. '(value' → logprob: -15.125038146972656
    6. '[val' → logprob: -15.625038146972656
    7. ' value' → logprob: -16.125038146972656
    8. ' ' → logprob: -16.750038146972656
    9. '```' → logprob: -17.125038146972656
    10. '   ' → logprob: -17.125038146972656

Token 314: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07348333299160004
    2. '       ' → logprob: -3.3234832286834717
    3. ')' → logprob: -3.8234832286834717
    4. ' ]' → logprob: -4.573483467102051
    5. ']
' → logprob: -6.323483467102051
    6. '   ' → logprob: -8.69848346710205
    7. '           ' → logprob: -8.82348346710205
    8. ' )' → logprob: -9.32348346710205
    9. '
' → logprob: -9.44848346710205
    10. ')
' → logprob: -9.69848346710205

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004972120281308889
    2. '        
' → logprob: -5.879971981048584
    3. '
' → logprob: -6.254971981048584
    4. '           ' → logprob: -9.004972457885742
    5. ' last' → logprob: -10.379972457885742
    6. '            
' → logprob: -10.629972457885742
    7. '    
' → logprob: -11.004972457885742
    8. '   ' → logprob: -11.379972457885742
    9. '       
' → logprob: -11.629972457885742
    10. ' 
' → logprob: -11.879972457885742

Token 316: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010394911281764507
    2. ' last' → logprob: -4.885395050048828
    3. 'last' → logprob: -6.385395050048828
    4. '   ' → logprob: -6.885395050048828
    5. '        
' → logprob: -10.385395050048828
    6. '           ' → logprob: -10.760395050048828
    7. '
' → logprob: -11.760395050048828
    8. '	last' → logprob: -12.510395050048828
    9. '    
' → logprob: -13.135395050048828
    10. '    ' → logprob: -13.135395050048828

Token 317: ' Met' (ID: 7227)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.4608919024467468
    2. ' last' → logprob: -1.4608919620513916
    3. '       ' → logprob: -2.3358919620513916
    4. '   ' → logprob: -3.2108919620513916
    5. '           ' → logprob: -9.335891723632812
    6. '	last' → logprob: -10.335891723632812
    7. ' ' → logprob: -10.585891723632812
    8. '    ' → logprob: -10.835891723632812
    9. '  ' → logprob: -11.460891723632812
    10. '     ' → logprob: -11.710891723632812

Token 318: ' à' (ID: 1221)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.6047617197036743
    2. 'last' → logprob: -1.1047617197036743
    3. '   ' → logprob: -2.4797616004943848
    4. ' à' → logprob: -3.7297616004943848
    5. '       ' → logprob: -5.854761600494385
    6. ' ' → logprob: -5.979761600494385
    7. '_last' → logprob: -5.979761600494385
    8. '           ' → logprob: -6.104761600494385
    9. 'à' → logprob: -6.229761600494385
    10. '	last' → logprob: -6.729761600494385

Token 319: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0037377295084297657
    2. ' jour' → logprob: -5.628737926483154
    3. 'jou' → logprob: -10.128737449645996
    4. 'j' → logprob: -10.628737449645996
    5. 'day' → logprob: -11.003737449645996
    6. '```' → logprob: -11.253737449645996
    7. '   ' → logprob: -11.628737449645996
    8. 'jourd' → logprob: -11.628737449645996
    9. 'jours' → logprob: -11.753737449645996
    10. '_j' → logprob: -12.128737449645996

Token 320: ' l' (ID: 305)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.351639986038208
    2. 'last' → logprob: -1.226639986038208
    3. '[last' → logprob: -6.226639747619629
    4. '   ' → logprob: -6.851639747619629
    5. '       ' → logprob: -9.726639747619629
    6. '_last' → logprob: -10.351639747619629
    7. '	last' → logprob: -10.726639747619629
    8. '           ' → logprob: -10.726639747619629
    9. ' ' → logprob: -12.351639747619629
    10. '[value' → logprob: -12.851639747619629

Token 321: ''' (ID: 6)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6005771160125732
    2. ' last' → logprob: -1.3505771160125732
    3. '[last' → logprob: -1.7255771160125732
    4. '[value' → logprob: -4.475577354431152
    5. '_last' → logprob: -6.475577354431152
    6. ' value' → logprob: -8.350577354431152
    7. ' [' → logprob: -8.350577354431152
    8. 'value' → logprob: -8.600577354431152
    9. '[val' → logprob: -8.600577354431152
    10. '[' → logprob: -9.725577354431152

Token 322: 'index' (ID: 2257)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03529585897922516
    2. ' last' → logprob: -3.4102959632873535
    3. 'dern' → logprob: -7.9102959632873535
    4. '[last' → logprob: -8.410295486450195
    5. ' dernier' → logprob: -8.660295486450195
    6. 'der' → logprob: -8.660295486450195
    7. 'd' → logprob: -8.785295486450195
    8. ' dernière' → logprob: -9.285295486450195
    9. ' diction' → logprob: -9.410295486450195
    10. 'value' → logprob: -9.535295486450195

Token 323: ' courant' (ID: 74694)
  Prédit: '[value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[value' → logprob: -0.018850918859243393
    2. '[last' → logprob: -4.893850803375244
    3. ' last' → logprob: -5.143850803375244
    4. 'last' → logprob: -5.893850803375244
    5. '   ' → logprob: -7.143850803375244
    6. ' value' → logprob: -7.893850803375244
    7. 'value' → logprob: -8.018851280212402
    8. '_last' → logprob: -8.143851280212402
    9. '       ' → logprob: -8.768851280212402
    10. ' [' → logprob: -8.893851280212402

Token 324: ' pour' (ID: 1930)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.669005274772644
    2. ' last' → logprob: -1.044005274772644
    3. '       ' → logprob: -2.5440053939819336
    4. 'last' → logprob: -3.2940053939819336
    5. '   ' → logprob: -5.169005393981934
    6. '[value' → logprob: -5.294005393981934
    7. ' =' → logprob: -5.544005393981934
    8. '[i' → logprob: -6.794005393981934
    9. '           ' → logprob: -7.044005393981934
    10. '[' → logprob: -7.044005393981934

Token 325: ' ce' (ID: 2357)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4301792085170746
    2. ' value' → logprob: -1.055179238319397
    3. '[value' → logprob: -6.930179119110107
    4. ' la' → logprob: -8.430179595947266
    5. ' valeur' → logprob: -9.680179595947266
    6. 'last' → logprob: -9.805179595947266
    7. '(value' → logprob: -9.930179595947266
    8. ')value' → logprob: -10.430179595947266
    9. ' last' → logprob: -10.680179595947266
    10. '"value' → logprob: -11.305179595947266

Token 326: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4741789400577545
    2. ' value' → logprob: -0.9741789102554321
    3. ' valeur' → logprob: -10.5991792678833
    4. '[value' → logprob: -11.0991792678833
    5. '"value' → logprob: -11.0991792678833
    6. 'alue' → logprob: -11.5991792678833
    7. ''value' → logprob: -11.5991792678833
    8. 'token' → logprob: -11.9741792678833
    9. 'valuer' → logprob: -12.5991792678833
    10. '(value' → logprob: -12.5991792678833

Token 327: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16825079917907715
    2. '[last' → logprob: -2.043250799179077
    3. '   ' → logprob: -4.668251037597656
    4. '
' → logprob: -5.418251037597656
    5. ' last' → logprob: -5.543251037597656
    6. '[value' → logprob: -5.793251037597656
    7. '=' → logprob: -7.293251037597656
    8. '[' → logprob: -7.418251037597656
    9. ' =' → logprob: -7.418251037597656
    10. 'last' → logprob: -7.543251037597656

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46202173829078674
    2. ' last' → logprob: -1.0870217084884644
    3. 'last' → logprob: -3.462021827697754
    4. '   ' → logprob: -6.837021827697754
    5. '[last' → logprob: -8.337021827697754
    6. '           ' → logprob: -10.337021827697754
    7. '	last' → logprob: -10.712021827697754
    8. '(last' → logprob: -11.712021827697754
    9. '        
' → logprob: -11.837021827697754
    10. '
' → logprob: -12.337021827697754

Token 329: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.4741881787776947
    2. ' last' → logprob: -0.9741882085800171
    3. '   ' → logprob: -9.974187850952148
    4. '       ' → logprob: -9.974187850952148
    5. '[last' → logprob: -11.724187850952148
    6. '	last' → logprob: -11.849187850952148
    7. '(last' → logprob: -14.224187850952148
    8. '_last' → logprob: -14.474187850952148
    9. '           ' → logprob: -14.474187850952148
    10. '.last' → logprob: -15.349187850952148

Token 330: '_seen' (ID: 158839)
  Prédit: '_seen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seen' → logprob: -6.968934758333489e-05
    2. '_' → logprob: -9.625069618225098
    3. '_se' → logprob: -13.250069618225098
    4. '_s' → logprob: -14.000069618225098
    5. 'seen' → logprob: -15.250069618225098
    6. ' _' → logprob: -15.750069618225098
    7. '_taken' → logprob: -15.875069618225098
    8. '_used' → logprob: -16.000070571899414
    9. '_sent' → logprob: -16.000070571899414
    10. '_visible' → logprob: -16.625070571899414

Token 331: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.00000286102295
    3. ' [' → logprob: -15.12500286102295
    4. '[val' → logprob: -15.87500286102295
    5. 'value' → logprob: -16.000003814697266
    6. '```' → logprob: -16.500003814697266
    7. '(value' → logprob: -18.375003814697266
    8. '=value' → logprob: -18.500003814697266
    9. ')value' → logprob: -19.250003814697266
    10. '\[' → logprob: -19.250003814697266

Token 332: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5693421363830566
    2. ' =' → logprob: -0.9443421363830566
    3. ']' → logprob: -3.1943421363830566
    4. ')' → logprob: -5.694342136383057
    5. '=i' → logprob: -7.819342136383057
    6. ']=' → logprob: -8.569341659545898
    7. ' ]' → logprob: -8.944341659545898
    8. ')=' → logprob: -10.444341659545898
    9. ' )' → logprob: -10.694341659545898
    10. ' ' → logprob: -10.944341659545898

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048636648803949356
    2. ' =' → logprob: -3.0486366748809814
    3. '=i' → logprob: -9.923636436462402
    4. '[i' → logprob: -16.17363739013672
    5. '=
' → logprob: -16.67363739013672
    6. '[' → logprob: -17.79863739013672
    7. ')=' → logprob: -18.17363739013672
    8. ')' → logprob: -18.17363739013672
    9. '＝' → logprob: -18.54863739013672
    10. ' =
' → logprob: -18.79863739013672

Token 334: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01416350994259119
    2. ' i' → logprob: -4.264163494110107
    3. '	i' → logprob: -17.889163970947266
    4. '   ' → logprob: -18.139163970947266
    5. '[i' → logprob: -19.514163970947266
    6. '_i' → logprob: -19.764163970947266
    7. ' ' → logprob: -20.514163970947266
    8. '```' → logprob: -20.639163970947266
    9. ' ' → logprob: -21.389163970947266
    10. '{i' → logprob: -21.514163970947266

Token 335: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04161137714982033
    2. '<|end|>' → logprob: -3.791611433029175
    3. '\n' → logprob: -5.041611194610596
    4. '   ' → logprob: -5.166611194610596
    5. '    
' → logprob: -6.416611194610596
    6. ' return' → logprob: -6.916611194610596
    7. ' 
' → logprob: -6.916611194610596
    8. '  
' → logprob: -6.916611194610596
    9. 'return' → logprob: -7.291611194610596
    10. '	return' → logprob: -8.416611671447754

Token 336: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6652021408081055
    2. '   ' → logprob: -0.7902021408081055
    3. '    
' → logprob: -4.5402021408081055
    4. 'return' → logprob: -4.6652021408081055
    5. ' return' → logprob: -5.6652021408081055
    6. '\n' → logprob: -5.7902021408081055
    7. '	return' → logprob: -6.2902021408081055
    8. ' 
' → logprob: -6.7902021408081055
    9. '<|end|>' → logprob: -7.1652021408081055
    10. '  
' → logprob: -7.9152021408081055

Token 337: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02473149076104164
    2. 'return' (adapté à ' return') → logprob: -4.274731636047363
    3. ' return' → logprob: -5.024731636047363
    4. '	return' → logprob: -6.274731636047363
    5. '
' → logprob: -6.774731636047363
    6. '    
' → logprob: -7.774731636047363
    7. '<|end|>' → logprob: -8.274731636047363
    8. ':return' → logprob: -9.399731636047363
    9. '\n' → logprob: -10.149731636047363
    10. ' ' → logprob: -10.649731636047363

Token 338: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00861456897109747
    2. ' r' → logprob: -4.758614540100098
    3. '   ' → logprob: -20.258615493774414
    4. '	r' → logprob: -20.383615493774414
    5. '[r' → logprob: -21.633615493774414
    6. '_r' → logprob: -21.883615493774414
    7. '(r' → logprob: -22.133615493774414
    8. ' ' → logprob: -22.758615493774414
    9. ' ' → logprob: -23.508615493774414
    10. '    ' → logprob: -24.633615493774414

Token 339: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002808798337355256
    2. '<|end|>' → logprob: -6.502808570861816
    3. '
' → logprob: -7.002808570861816
    4. '```' → logprob: -8.627808570861816
    5. '#' → logprob: -8.877808570861816
    6. ' def' → logprob: -10.752808570861816
    7. '

' → logprob: -11.002808570861816
    8. '<|end|>' → logprob: -11.127808570861816
    9. '[' → logprob: -12.377808570861816
    10. '\' → logprob: -12.627808570861816

Token 341: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.36524704098701477
    2. ' solve' → logprob: -2.3652470111846924
    3. ' calculate' → logprob: -2.6152470111846924
    4. ' count' → logprob: -2.6152470111846924
    5. ' find' → logprob: -3.2402470111846924
    6. ' process' → logprob: -5.4902472496032715
    7. ' compute' → logprob: -5.7402472496032715
    8. 'main' → logprob: -5.8652472496032715
    9. ' max' → logprob: -6.1152472496032715
    10. 'count' → logprob: -6.3652472496032715

Token 342: '_dp' (ID: 133252)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.894809901714325
    2. '_dist' → logprob: -2.0198099613189697
    3. '_previous' → logprob: -2.2698099613189697
    4. '_color' → logprob: -2.8948099613189697
    5. '_unique' → logprob: -3.3948099613189697
    6. '_sub' → logprob: -3.6448099613189697
    7. '_k' → logprob: -3.7698099613189697
    8. '_next' → logprob: -3.8948099613189697
    9. '_prefix' → logprob: -4.019809722900391
    10. '_l' → logprob: -4.019809722900391

Token 343: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.055453673005104065
    2. '_' → logprob: -3.3054537773132324
    3. '(c' → logprob: -5.055453777313232
    4. '[' → logprob: -5.555453777313232
    5. '(n' → logprob: -5.805453777313232
    6. '_list' → logprob: -7.930453777313232
    7. '(_' → logprob: -8.055453300476074
    8. '(i' → logprob: -8.180453300476074
    9. '_previous' → logprob: -8.180453300476074
    10. '_prev' → logprob: -8.430453300476074

Token 344: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01624116115272045
    2. ',' → logprob: -4.766241073608398
    3. '):
' → logprob: -4.891241073608398
    4. ')' → logprob: -9.641241073608398
    5. ' ):' → logprob: -11.266241073608398
    6. ':' → logprob: -13.516241073608398
    7. '):
' → logprob: -13.891241073608398
    8. '):

' → logprob: -14.016241073608398
    9. ',n' → logprob: -14.266241073608398
    10. '   ' → logprob: -14.266241073608398

Token 345: ' modulo' (ID: 112372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015822838991880417
    2. ' n' → logprob: -4.640822887420654
    3. 'c' → logprob: -5.265822887420654
    4. 'k' → logprob: -8.015822410583496
    5. 'dp' → logprob: -9.140822410583496
    6. ')' → logprob: -9.515822410583496
    7. 'r' → logprob: -9.765822410583496
    8. ' c' → logprob: -9.890822410583496
    9. '   ' → logprob: -10.265822410583496
    10. '):
' → logprob: -10.515822410583496

Token 346: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06530612707138062
    2. ',' → logprob: -2.8153061866760254
    3. '):
' → logprob: -6.190306186676025
    4. '=' → logprob: -7.690306186676025
    5. ' ):' → logprob: -7.690306186676025
    6. ')' → logprob: -8.190305709838867
    7. ':' → logprob: -9.940305709838867
    8. '):
' → logprob: -11.565305709838867
    9. ' ,' → logprob: -11.815305709838867
    10. '   ' → logprob: -12.877805709838867

Token 347: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018411779776215553
    2. '100' → logprob: -4.643411636352539
    3. ' ' → logprob: -4.768411636352539
    4. '998' → logprob: -9.518411636352539
    5. '1' → logprob: -10.393411636352539
    6. '(' → logprob: -12.393411636352539
    7. '   ' → logprob: -12.518411636352539
    8. 'int' → logprob: -12.518411636352539
    9. ')' → logprob: -12.643411636352539
    10. '2' → logprob: -13.893411636352539

Token 348: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.474321573972702
    2. '**' → logprob: -0.9743216037750244
    3. '09' → logprob: -8.349321365356445
    4. '```' → logprob: -12.724321365356445
    5. '_' → logprob: -13.849321365356445
    6. '*' → logprob: -13.849321365356445
    7. '7' → logprob: -14.224321365356445
    8. ' **' → logprob: -14.724321365356445
    9. '07' → logprob: -14.849321365356445
    10. ' ' → logprob: -14.849321365356445

Token 349: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '8' → logprob: -14.750000953674316
    3. '6' → logprob: -15.500000953674316
    4. '7' → logprob: -16.375
    5. '09' → logprob: -16.625
    6. '10' → logprob: -16.75
    7. '18' → logprob: -17.0
    8. '15' → logprob: -17.625
    9. '4' → logprob: -18.25
    10. '5' → logprob: -18.375

Token 350: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003825293097179383
    2. ' +' → logprob: -7.875382423400879
    3. '7' → logprob: -13.000382423400879
    4. '+
' → logprob: -17.125383377075195
    5. '＋' → logprob: -17.500383377075195
    6. ' plus' → logprob: -17.625383377075195
    7. ')+' → logprob: -17.875383377075195
    8. 'plus' → logprob: -18.250383377075195
    9. '9' → logprob: -18.750383377075195
    10. '```' → logprob: -18.875383377075195

Token 351: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.438573680294212e-06
    2. '+' → logprob: -12.500005722045898
    3. '9' → logprob: -13.375005722045898
    4. '```' → logprob: -16.2500057220459
    5. ' ' → logprob: -17.7500057220459
    6. '
' → logprob: -18.1250057220459
    7. '``' → logprob: -18.2500057220459
    8. '

' → logprob: -18.3750057220459
    9. '   ' → logprob: -18.3750057220459
    10. '07' → logprob: -18.5000057220459

Token 352: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009882692247629166
    2. '):
' → logprob: -7.375988483428955
    3. ')' → logprob: -8.625988006591797
    4. ',' → logprob: -8.625988006591797
    5. ' ):' → logprob: -13.375988006591797
    6. '):
' → logprob: -14.125988006591797
    7. '   ' → logprob: -15.500988006591797
    8. ':' → logprob: -15.750988006591797
    9. '):

' → logprob: -15.875988006591797
    10. '),' → logprob: -17.250988006591797

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008415993303060532
    2. 'n' → logprob: -5.133416175842285
    3. ' n' → logprob: -6.758416175842285
    4. '    ' → logprob: -7.758416175842285
    5. '	n' → logprob: -8.258416175842285
    6. '[' → logprob: -8.633416175842285
    7. '(n' → logprob: -9.008416175842285
    8. '    
' → logprob: -9.008416175842285
    9. '
' → logprob: -10.008416175842285
    10. '[n' → logprob: -10.508416175842285

Token 354: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1212816908955574
    2. '   ' → logprob: -2.371281623840332
    3. ' n' → logprob: -3.871281623840332
    4. '	n' → logprob: -11.371281623840332
    5. 'def' → logprob: -12.496281623840332
    6. '
' → logprob: -12.496281623840332
    7. '"""
' (adapté à ' """
') → logprob: -12.746281623840332
    8. '  ' → logprob: -14.746281623840332
    9. ' ' → logprob: -14.871281623840332
    10. '```' → logprob: -15.246281623840332

Token 355: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015660785138607025
    2. '   ' → logprob: -4.265660762786865
    3. ' n' → logprob: -7.140660762786865
    4. 'def' → logprob: -7.265660762786865
    5. '"""
' → logprob: -12.765661239624023
    6. '
' → logprob: -14.515661239624023
    7. ' ' → logprob: -14.640661239624023
    8. '	n' → logprob: -14.640661239624023
    9. '  ' → logprob: -15.640661239624023
    10. '```' → logprob: -15.765661239624023

Token 356: ' Ap' (ID: 6537)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.022568440064787865
    2. 'def' → logprob: -4.272568225860596
    3. 'dp' → logprob: -4.897568225860596
    4. ' n' → logprob: -7.272568225860596
    5. '   ' → logprob: -8.772568702697754
    6. '"""
' → logprob: -10.147568702697754
    7. '
' → logprob: -11.522568702697754
    8. ' def' → logprob: -13.147568702697754
    9. ' dp' → logprob: -13.647568702697754
    10. 'd' → logprob: -14.022568702697754

Token 357: 'plique' (ID: 71193)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4494555592536926
    2. 'ply' → logprob: -1.5744554996490479
    3. 'pl' → logprob: -2.199455499649048
    4. 'pr' → logprob: -3.949455499649048
    5. 'r' → logprob: -4.824455738067627
    6. 'pend' → logprob: -5.324455738067627
    7. 'pliquer' → logprob: -6.449455738067627
    8. 'pli' → logprob: -6.574455738067627
    9. 'prox' → logprob: -6.574455738067627
    10. 'plies' → logprob: -6.824455738067627

Token 358: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2972551584243774
    2. 'dp' → logprob: -2.047255039215088
    3. ' dynamic' → logprob: -2.047255039215088
    4. '_dp' → logprob: -2.047255039215088
    5. 'def' → logprob: -2.172255039215088
    6. '[]' → logprob: -3.297255039215088
    7. ' le' → logprob: -3.672255039215088
    8. ' une' → logprob: -3.797255039215088
    9. '   ' → logprob: -4.047255039215088
    10. 'DP' → logprob: -4.172255039215088

Token 359: ' calcul' (ID: 7559)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -1.3040482997894287
    2. 'dynamic' → logprob: -1.3040482997894287
    3. 'd' → logprob: -1.9290482997894287
    4. '   ' → logprob: -2.5540482997894287
    5. '
' → logprob: -2.6790482997894287
    6. '```' → logprob: -2.8040482997894287
    7. 'program' → logprob: -4.179048538208008
    8. 'dp' → logprob: -4.179048538208008
    9. ' dynamic' → logprob: -4.179048538208008
    10. 'programm' → logprob: -4.679048538208008

Token 360: ' dynamique' (ID: 98708)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2704218029975891
    2. ' dynamique' → logprob: -2.0204217433929443
    3. ' du' → logprob: -3.2704217433929443
    4. ' dynamic' → logprob: -4.145421981811523
    5. '   ' → logprob: -4.645421981811523
    6. '_' → logprob: -4.645421981811523
    7. 'de' → logprob: -5.020421981811523
    8. 'dp' → logprob: -5.270421981811523
    9. '_dp' → logprob: -5.270421981811523
    10. 's' → logprob: -5.520421981811523

Token 361: ' basé' (ID: 139381)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7432334423065186
    2. 'def' → logprob: -1.8682334423065186
    3. 'dp' → logprob: -2.1182334423065186
    4. 'de' → logprob: -3.1182334423065186
    5. ' des' → logprob: -3.4932334423065186
    6. '_' → logprob: -3.4932334423065186
    7. '   ' → logprob: -3.6182334423065186
    8. ' dp' → logprob: -3.9932334423065186
    9. '_dp' → logprob: -3.9932334423065186
    10. ' pour' → logprob: -4.368233680725098

Token 362: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.6327082514762878
    2. ' sur' → logprob: -1.0077083110809326
    3. '=' → logprob: -3.0077083110809326
    4. 'def' → logprob: -3.8827083110809326
    5. '   ' → logprob: -4.0077080726623535
    6. '_sur' → logprob: -4.8827080726623535
    7. '_' → logprob: -5.1327080726623535
    8. ' =' → logprob: -7.8827080726623535
    9. 'e' → logprob: -7.8827080726623535
    10. ')' → logprob: -8.507708549499512

Token 363: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3351709842681885
    2. ' r' → logprob: -1.3351709842681885
    3. ' la' → logprob: -4.085170745849609
    4. 'len' → logprob: -6.460170745849609
    5. ' le' → logprob: -6.460170745849609
    6. 'la' → logprob: -7.960170745849609
    7. 'l' → logprob: -7.960170745849609
    8. ' len' → logprob: -8.08517074584961
    9. ' les' → logprob: -8.46017074584961
    10. ' l' → logprob: -8.46017074584961

Token 364: ' occurrences' (ID: 108073)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002680652542039752
    2. ' r' → logprob: -6.002680778503418
    3. 'previous' → logprob: -9.377680778503418
    4. ' previous' → logprob: -11.002680778503418
    5. 'len' → logprob: -11.127680778503418
    6. 'def' → logprob: -11.502680778503418
    7. '
' → logprob: -11.627680778503418
    8. '-' → logprob: -11.627680778503418
    9. '-r' → logprob: -11.627680778503418
    10. 'preced' → logprob: -11.752680778503418

Token 365: ' pass' (ID: 1853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2633973360061646
    2. ' précéd' → logprob: -1.6383973360061646
    3. '_' → logprob: -1.8883973360061646
    4. 'pr' → logprob: -2.013397216796875
    5. '_pr' → logprob: -2.138397216796875
    6. '_previous' → logprob: -2.763397216796875
    7. '_prev' → logprob: -3.888397216796875
    8. 'def' → logprob: -5.013397216796875
    9. ' des' → logprob: -5.388397216796875
    10. 'pré' → logprob: -5.763397216796875

Token 366: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.008439755998551846
    2. 'é' → logprob: -5.758439540863037
    3. 'r' → logprob: -6.883439540863037
    4. ' précéd' → logprob: -7.258439540863037
    5. 'def' → logprob: -7.633439540863037
    6. 'entes' → logprob: -7.633439540863037
    7. 'ée' → logprob: -8.008440017700195
    8. 'ences' → logprob: -8.133440017700195
    9. 'e' → logprob: -8.258440017700195
    10. ')' → logprob: -8.383440017700195

Token 367: ' enregistr' (ID: 76845)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6172812581062317
    2. ' de' → logprob: -1.242281198501587
    3. 'de' → logprob: -3.117281198501587
    4. 'def' → logprob: -3.367281198501587
    5. ' pour' → logprob: -4.117281436920166
    6. '(r' → logprob: -4.242281436920166
    7. ',' → logprob: -4.367281436920166
    8. ' des' → logprob: -4.742281436920166
    9. 'r' → logprob: -5.242281436920166
    10. ':
' → logprob: -5.367281436920166

Token 368: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0032990318723022938
    2. '=' → logprob: -6.003299236297607
    3. 'és' → logprob: -8.25329875946045
    4. 'es' → logprob: -8.25329875946045
    5. 'é' → logprob: -8.37829875946045
    6. 'ée' → logprob: -10.62829875946045
    7. '_' → logprob: -10.87829875946045
    8. 'def' → logprob: -12.00329875946045
    9. 'e' → logprob: -12.12829875946045
    10. 'd' → logprob: -12.12829875946045

Token 369: ' dans' (ID: 2671)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5992149710655212
    2. 'def' → logprob: -1.974215030670166
    3. '   ' → logprob: -2.349215030670166
    4. '(' → logprob: -2.974215030670166
    5. ' dans' → logprob: -3.224215030670166
    6. ' de' → logprob: -3.724215030670166
    7. '.' → logprob: -3.849215030670166
    8. ',' → logprob: -4.099215030670166
    9. ' pour' → logprob: -4.099215030670166
    10. 'dans' → logprob: -4.724215030670166

Token 370: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23132961988449097
    2. ' r' → logprob: -1.6063296794891357
    3. ' la' → logprob: -6.106329441070557
    4. 'def' → logprob: -6.356329441070557
    5. '   ' → logprob: -6.856329441070557
    6. ' def' → logprob: -7.481329441070557
    7. ' ' → logprob: -9.231329917907715
    8. ' le' → logprob: -9.356329917907715
    9. 'la' → logprob: -9.981329917907715
    10. '
' → logprob: -11.231329917907715

Token 371: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5526712536811829
    2. '   ' → logprob: -1.177671194076538
    3. '.' → logprob: -3.427671194076538
    4. 'def' → logprob: -3.552671194076538
    5. ':
' → logprob: -4.177671432495117
    6. ',' → logprob: -4.302671432495117
    7. '):' → logprob: -5.052671432495117
    8. '(r' → logprob: -5.052671432495117
    9. '(n' → logprob: -5.177671432495117
    10. ')' → logprob: -5.677671432495117

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034321267157793045
    2. '
' → logprob: -4.284321308135986
    3. 'def' → logprob: -4.284321308135986
    4. '    
' → logprob: -5.659321308135986
    5. ' def' → logprob: -6.909321308135986
    6. ' 
' → logprob: -7.784321308135986
    7. ':' → logprob: -8.159320831298828
    8. '\n' → logprob: -8.534320831298828
    9. '  
' → logprob: -8.909320831298828
    10. '   
' → logprob: -9.159320831298828

Token 373: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20566685497760773
    2. 'n' → logprob: -2.4556667804718018
    3. '
' → logprob: -2.5806667804718018
    4. ' n' → logprob: -4.830667018890381
    5. ' 
' → logprob: -5.580667018890381
    6. '    
' → logprob: -5.580667018890381
    7. 'def' → logprob: -5.705667018890381
    8. '(n' → logprob: -6.205667018890381
    9. '\n' → logprob: -6.330667018890381
    10. '  
' → logprob: -6.830667018890381

Token 374: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.6503859758377075
    2. 'cul' → logprob: -0.9003859758377075
    3. 'c' → logprob: -2.650385856628418
    4. 'culate' → logprob: -7.275385856628418
    5. 'cules' → logprob: -8.650385856628418
    6. 'cula' → logprob: -9.525385856628418
    7. 'e' → logprob: -10.900385856628418
    8. 'cu' → logprob: -11.150385856628418
    9. '```' → logprob: -11.275385856628418
    10. 'l' → logprob: -11.275385856628418

Token 375: ' pour' (ID: 1930)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5295398831367493
    2. 'dp' → logprob: -1.2795398235321045
    3. ' la' → logprob: -3.1545398235321045
    4. ' un' → logprob: -3.4045398235321045
    5. ' n' → logprob: -3.9045398235321045
    6. ' une' → logprob: -4.654540061950684
    7. ' le' → logprob: -4.654540061950684
    8. '   ' → logprob: -5.154540061950684
    9. '_dp' → logprob: -5.529540061950684
    10. 'n' → logprob: -6.404540061950684

Token 376: ' chaque' (ID: 21194)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6397169232368469
    2. 'n' → logprob: -1.2647168636322021
    3. ' i' → logprob: -2.389716863632202
    4. 'i' → logprob: -2.514716863632202
    5. ' chaque' → logprob: -4.889717102050781
    6. ' la' → logprob: -6.264717102050781
    7. 'r' → logprob: -6.514717102050781
    8. '   ' → logprob: -6.639717102050781
    9. ' ' → logprob: -7.014717102050781
    10. '_' → logprob: -7.389717102050781

Token 377: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34928855299949646
    2. ' i' → logprob: -1.2242885828018188
    3. ' position' → logprob: -8.474288940429688
    4. 'position' → logprob: -8.724288940429688
    5. 'indice' → logprob: -9.224288940429688
    6. ' index' → logprob: -9.599288940429688
    7. 'index' → logprob: -9.599288940429688
    8. '   ' → logprob: -9.974288940429688
    9. ' ' → logprob: -9.974288940429688
    10. '_i' → logprob: -10.099288940429688

Token 378: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3928678333759308
    2. ' _' → logprob: -2.5178678035736084
    3. '_' → logprob: -2.7678678035736084
    4. ',' → logprob: -3.1428678035736084
    5. '[i' → logprob: -3.5178678035736084
    6. '   ' → logprob: -3.7678678035736084
    7. ' de' → logprob: -3.8928678035736084
    8. ' ' → logprob: -4.7678680419921875
    9. '[' → logprob: -5.0178680419921875
    10. ' un' → logprob: -5.1428680419921875

Token 379: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8615379929542542
    2. ' dp' → logprob: -0.8615379929542542
    3. 'dp' → logprob: -1.9865379333496094
    4. 'nombre' → logprob: -4.861537933349609
    5. ' résultat' → logprob: -6.236537933349609
    6. ' maximum' → logprob: -6.611537933349609
    7. '   ' → logprob: -6.861537933349609
    8. ' max' → logprob: -6.986537933349609
    9. '_dp' → logprob: -7.361537933349609
    10. ' result' → logprob: -7.486537933349609

Token 380: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20572254061698914
    2. ' d' → logprob: -2.7057225704193115
    3. '_' → logprob: -3.4557225704193115
    4. ' des' → logprob: -3.7057225704193115
    5. '_de' → logprob: -4.455722332000732
    6. ' ' → logprob: -4.830722332000732
    7. 'def' → logprob: -5.205722332000732
    8. 's' → logprob: -5.580722332000732
    9. '_total' → logprob: -5.705722332000732
    10. '  ' → logprob: -5.830722332000732

Token 381: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.1546013206243515
    2. 'man' → logprob: -2.6546013355255127
    3. 'ways' → logprob: -3.5296013355255127
    4. 's' → logprob: -3.6546013355255127
    5. 'fa' → logprob: -5.029601097106934
    6. ' man' → logprob: -6.029601097106934
    7. ' subse' → logprob: -6.404601097106934
    8. '   ' → logprob: -6.654601097106934
    9. '```' → logprob: -6.904601097106934
    10. ' ways' → logprob: -6.904601097106934

Token 382: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6533734202384949
    2. ' d' → logprob: -0.7783734202384949
    3. 'de' → logprob: -5.1533732414245605
    4. ' ' → logprob: -5.2783732414245605
    5. '   ' → logprob: -5.5283732414245605
    6. 'd' → logprob: -6.4033732414245605
    7. '_' → logprob: -7.0283732414245605
    8. '    ' → logprob: -7.4033732414245605
    9. '  ' → logprob: -7.6533732414245605
    10. ' possible' → logprob: -7.6533732414245605

Token 383: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1443006843328476
    2. ''' → logprob: -2.269300699234009
    3. '_' → logprob: -4.01930046081543
    4. ''é' → logprob: -5.64430046081543
    5. ' e' → logprob: -5.89430046081543
    6. 'u' → logprob: -6.64430046081543
    7. ''utiliser' → logprob: -6.76930046081543
    8. ''obtenir' → logprob: -6.89430046081543
    9. ''avoir' → logprob: -7.64430046081543
    10. ''acc' → logprob: -7.89430046081543

Token 384: 'atte' (ID: 23975)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0023802844807505608
    2. 'atte' → logprob: -7.25238037109375
    3. 'color' → logprob: -7.62738037109375
    4. ''arr' → logprob: -7.75238037109375
    5. 'cho' → logprob: -9.25238037109375
    6. 'avoir' → logprob: -9.25238037109375
    7. 'placer' → logprob: -9.87738037109375
    8. 'acheter' → logprob: -10.00238037109375
    9. 'être' → logprob: -10.62738037109375
    10. '_arr' → logprob: -10.87738037109375

Token 385: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.0024389089085161686
    2. 'nd' → logprob: -7.002439022064209
    3. 'ind' → logprob: -7.002439022064209
    4. 'inder' → logprob: -8.37743854522705
    5. 'i' → logprob: -9.00243854522705
    6. 'int' → logprob: -9.50243854522705
    7. 'n' → logprob: -10.00243854522705
    8. 'indir' → logprob: -11.12743854522705
    9. '...' → logprob: -11.50243854522705
    10. 'in' → logprob: -11.50243854522705

Token 386: ' cette' (ID: 7696)
  Prédit: ' cette'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cette' → logprob: -0.02934286743402481
    2. 'c' → logprob: -3.6543428897857666
    3. ' cet' → logprob: -7.6543426513671875
    4. '   ' → logprob: -7.9043426513671875
    5. 'celle' → logprob: -8.029342651367188
    6. 'la' → logprob: -8.154342651367188
    7. ' ce' → logprob: -8.154342651367188
    8. ' chaque' → logprob: -8.154342651367188
    9. 'cet' → logprob: -8.154342651367188
    10. ' la' → logprob: -8.529342651367188

Token 387: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.030219828709959984
    2. 'position' → logprob: -3.905219793319702
    3. '_' → logprob: -4.780220031738281
    4. '_position' → logprob: -7.030220031738281
    5. ' ' → logprob: -8.780220031738281
    6. ' _' → logprob: -9.905220031738281
    7. ' place' → logprob: -10.155220031738281
    8. 'pos' → logprob: -10.405220031738281
    9. '_pos' → logprob: -10.530220031738281
    10. ' pos' → logprob: -11.780220031738281

Token 388: ' selon' (ID: 27571)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9373946785926819
    2. ' de' → logprob: -1.687394618988037
    3. '   ' → logprob: -1.812394618988037
    4. ',' → logprob: -2.437394618988037
    5. '.' → logprob: -2.937394618988037
    6. ' avec' → logprob: -3.437394618988037
    7. ' (' → logprob: -4.187394618988037
    8. ' d' → logprob: -4.437394618988037
    9. '
' → logprob: -4.562394618988037
    10. '```' → logprob: -4.687394618988037

Token 389: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3058644235134125
    2. ' l' → logprob: -1.9308644533157349
    3. ' le' → logprob: -3.0558643341064453
    4. ' les' → logprob: -3.4308643341064453
    5. ' une' → logprob: -4.180864334106445
    6. ' un' → logprob: -4.680864334106445
    7. ' r' → logprob: -5.055864334106445
    8. '```' → logprob: -6.430864334106445
    9. 'r' → logprob: -6.680864334106445
    10. '   ' → logprob: -7.180864334106445

Token 390: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.3889695405960083
    2. 'r' → logprob: -2.0139694213867188
    3. '_' → logprob: -3.0139694213867188
    4. ' r' → logprob: -3.7639694213867188
    5. ' occurrences' → logprob: -3.8889694213867188
    6. ' valeurs' → logprob: -4.013969421386719
    7. ' espaces' → logprob: -4.513969421386719
    8. ' différentes' → logprob: -4.888969421386719
    9. ' déf' → logprob: -5.013969421386719
    10. ' étapes' → logprob: -5.888969421386719

Token 391: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06240030750632286
    2. ' de' → logprob: -3.9374003410339355
    3. ' suivantes' → logprob: -3.9374003410339355
    4. ' d' → logprob: -5.3124003410339355
    5. '  ' → logprob: -5.9374003410339355
    6. ' ' → logprob: -6.0624003410339355
    7. '    
' → logprob: -6.0624003410339355
    8. ',' → logprob: -6.5624003410339355
    9. '    ' → logprob: -6.6874003410339355
    10. '.' → logprob: -6.9374003410339355

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01710413210093975
    2. '
' → logprob: -5.142104148864746
    3. '    
' → logprob: -5.142104148864746
    4. ' 
' → logprob: -6.267104148864746
    5. '    ' → logprob: -6.892104148864746
    6. ' def' → logprob: -7.017104148864746
    7. 'def' → logprob: -7.517104148864746
    8. '  
' → logprob: -8.392104148864746
    9. '\n' → logprob: -8.892104148864746
    10. '\' → logprob: -9.392104148864746

Token 393: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48612338304519653
    2. ' dp' → logprob: -1.2361233234405518
    3. 'dp' → logprob: -2.7361233234405518
    4. '
' → logprob: -5.111123561859131
    5. '    ' → logprob: -5.111123561859131
    6. ' result' → logprob: -5.486123561859131
    7. ' n' → logprob: -5.611123561859131
    8. ' for' → logprob: -5.736123561859131
    9. ' res' → logprob: -6.361123561859131
    10. '    
' → logprob: -6.486123561859131

Token 394: ' Si' (ID: 7832)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.340312123298645
    2. ' def' → logprob: -1.590312123298645
    3. ' for' → logprob: -2.3403120040893555
    4. ' r' → logprob: -2.4653120040893555
    5. ' if' → logprob: -2.5903120040893555
    6. '   ' → logprob: -2.9653120040893555
    7. '    ' → logprob: -3.2153120040893555
    8. 'dp' → logprob: -3.3403120040893555
    9. ' la' → logprob: -3.8403120040893555
    10. 'def' → logprob: -4.0903120040893555

Token 395: ' la' (ID: 557)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12791156768798828
    2. 'r' → logprob: -2.1279115676879883
    3. ' i' → logprob: -7.377911567687988
    4. 'i' → logprob: -8.627911567687988
    5. '   ' → logprob: -9.002911567687988
    6. ' ' → logprob: -11.752911567687988
    7. ' le' → logprob: -12.065411567687988
    8. '(r' → logprob: -12.127911567687988
    9. '    ' → logprob: -12.440411567687988
    10. ' la' → logprob: -12.877911567687988

Token 396: ' valeur' (ID: 41664)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4478679299354553
    2. ' r' → logprob: -1.5728678703308105
    3. ' i' → logprob: -2.4478678703308105
    4. 'i' → logprob: -3.1978678703308105
    5. ' position' → logprob: -4.8228678703308105
    6. ' c' → logprob: -5.4478678703308105
    7. 'c' → logprob: -5.5728678703308105
    8. ' ' → logprob: -5.9478678703308105
    9. ' value' → logprob: -6.0728678703308105
    10. ' previous' → logprob: -6.4478678703308105

Token 397: ' à' (ID: 1221)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0485002994537354
    2. ' à' → logprob: -1.7985002994537354
    3. ' précédente' → logprob: -1.9235002994537354
    4. '[i' → logprob: -2.5485002994537354
    5. ' at' → logprob: -3.0485002994537354
    6. ' de' → logprob: -3.0485002994537354
    7. ' est' → logprob: -3.1735002994537354
    8. ' r' → logprob: -3.2985002994537354
    9. ' suivante' → logprob: -4.423500061035156
    10. ' ==' → logprob: -4.548500061035156

Token 398: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8241296410560608
    2. 'i' → logprob: -0.9491296410560608
    3. ' i' → logprob: -2.324129581451416
    4. ' r' → logprob: -3.074129581451416
    5. 'l' → logprob: -3.949129581451416
    6. ' l' → logprob: -4.949129581451416
    7. '   ' → logprob: -6.324129581451416
    8. ' la' → logprob: -7.199129581451416
    9. ' ' → logprob: -7.949129581451416
    10. 'c' → logprob: -8.324130058288574

Token 399: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4110117256641388
    2. '[i' → logprob: -1.9110116958618164
    3. ' i' → logprob: -2.7860116958618164
    4. ''i' → logprob: -3.2860116958618164
    5. '_i' → logprob: -3.2860116958618164
    6. ''' → logprob: -4.036011695861816
    7. '_' → logprob: -4.661011695861816
    8. 'a' → logprob: -5.286011695861816
    9. 'r' → logprob: -5.661011695861816
    10. 'indice' → logprob: -5.786011695861816

Token 400: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -2.2127087504486553e-05
    2. 'e' → logprob: -11.250021934509277
    3. 'é' → logprob: -12.125021934509277
    4. 'ice' → logprob: -12.875021934509277
    5. 'i' → logprob: -14.000021934509277
    6. ' ex' → logprob: -16.375022888183594
    7. 'ices' → logprob: -17.000022888183594
    8. 'exp' → logprob: -17.750022888183594
    9. 'exe' → logprob: -17.750022888183594
    10. 'ec' → logprob: -18.000022888183594

Token 401: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5815954208374023
    2. 'i' → logprob: -0.9565954208374023
    3. '[i' → logprob: -3.5815954208374023
    4. '0' → logprob: -4.206595420837402
    5. ' précédent' → logprob: -6.081595420837402
    6. '_' → logprob: -6.456595420837402
    7. '_i' → logprob: -6.456595420837402
    8. '[' → logprob: -6.581595420837402
    9. '```' → logprob: -6.706595420837402
    10. ' ' → logprob: -6.956595420837402

Token 402: ' n' (ID: 297)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1886957287788391
    2. '==' → logprob: -2.5636956691741943
    3. ' est' → logprob: -2.8136956691741943
    4. ' ' → logprob: -5.063695907592773
    5. ']' → logprob: -5.563695907592773
    6. '=' → logprob: -5.688695907592773
    7. '[i' → logprob: -5.813695907592773
    8. ')' → logprob: -5.938695907592773
    9. ' n' → logprob: -6.188695907592773
    10. ' vaut' → logprob: -6.313695907592773

Token 403: ''a' (ID: 10443)
  Prédit: ''est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3574790954589844
    2. ''a' → logprob: -1.9824790954589844
    3. ''' → logprob: -3.2324790954589844
    4. 'a' → logprob: -3.4824790954589844
    5. ' a' → logprob: -3.4824790954589844
    6. ''ai' → logprob: -4.107479095458984
    7. ' est' → logprob: -4.482479095458984
    8. ''était' → logprob: -5.607479095458984
    9. ''appar' → logprob: -5.732479095458984
    10. 'est' → logprob: -5.857479095458984

Token 404: ' jamais' (ID: 23077)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.078484296798706
    2. 'a' → logprob: -1.328484296798706
    3. 'pas' → logprob: -1.578484296798706
    4. ''a' → logprob: -2.703484296798706
    5. ' jamais' → logprob: -3.078484296798706
    6. ''appar' → logprob: -3.203484296798706
    7. ''était' → logprob: -5.078484535217285
    8. ''est' → logprob: -5.203484535217285
    9. '_pas' → logprob: -5.328484535217285
    10. ''ap' → logprob: -5.828484535217285

Token 405: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.1599334180355072
    2. 'été' → logprob: -2.90993332862854
    3. '```' → logprob: -3.65993332862854
    4. 'a' → logprob: -4.409933567047119
    5. ''appar' → logprob: -4.784933567047119
    6. 'appar' → logprob: -4.909933567047119
    7. 'appe' → logprob: -5.409933567047119
    8. 'app' → logprob: -5.409933567047119
    9. 't' → logprob: -5.534933567047119
    10. '-' → logprob: -5.659933567047119

Token 406: ' vue' (ID: 30721)
  Prédit: 'vue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vue' → logprob: -0.05272248759865761
    2. ' vue' → logprob: -3.427722454071045
    3. 'v' → logprob: -4.552722454071045
    4. 'vu' → logprob: -5.802722454071045
    5. '-' → logprob: -6.177722454071045
    6. '```' → logprob: -6.927722454071045
    7. 'ap' → logprob: -8.177722930908203
    8. 'seen' → logprob: -8.427722930908203
    9. ' rencontr' → logprob: -8.677722930908203
    10. '   ' → logprob: -8.677722930908203

Token 407: ' ou' (ID: 2031)
  Prédit: ' auparavant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' auparavant' → logprob: -0.4602546989917755
    2. ' avant' → logprob: -1.3352546691894531
    3. 'avant' → logprob: -2.335254669189453
    4. '   ' → logprob: -6.460254669189453
    5. ' before' → logprob: -6.460254669189453
    6. ' précéd' → logprob: -7.085254669189453
    7. '    ' → logprob: -7.335254669189453
    8. ',' → logprob: -7.335254669189453
    9. 'before' → logprob: -7.460254669189453
    10. ' ' → logprob: -7.585254669189453

Token 408: ' juste' (ID: 31553)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3517454266548157
    2. ' r' → logprob: -1.476745367050171
    3. ' i' → logprob: -3.601745367050171
    4. ' est' → logprob: -4.97674560546875
    5. 'i' → logprob: -5.10174560546875
    6. 'est' → logprob: -5.22674560546875
    7. ' a' → logprob: -5.72674560546875
    8. '-' → logprob: -5.85174560546875
    9. ' ' → logprob: -6.10174560546875
    10. 'a' → logprob: -6.35174560546875

Token 409: ' vue' (ID: 30721)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6358516812324524
    2. ' avant' → logprob: -1.7608516216278076
    3. ' au' → logprob: -2.8858516216278076
    4. ' ' → logprob: -3.0108516216278076
    5. ' -' → logprob: -3.2608516216278076
    6. ' après' → logprob: -3.7608516216278076
    7. ' précédente' → logprob: -3.8858516216278076
    8. '-' → logprob: -4.010851860046387
    9. ' précéd' → logprob: -4.135851860046387
    10. 'avant' → logprob: -4.385851860046387

Token 410: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3919069468975067
    2. ' avant' → logprob: -2.016906976699829
    3. 'avant' → logprob: -3.016906976699829
    4. ' auparavant' → logprob: -3.141906976699829
    5. ',' → logprob: -3.266906976699829
    6. 'à' → logprob: -4.01690673828125
    7. ' ' → logprob: -4.14190673828125
    8. ' précéd' → logprob: -5.14190673828125
    9. 'au' → logprob: -5.14190673828125
    10. ' au' → logprob: -6.14190673828125

Token 411: ' l' (ID: 305)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.33106040954589844
    2. 'i' → logprob: -1.3310604095458984
    3. ' i' → logprob: -4.831060409545898
    4. ' -' → logprob: -5.331060409545898
    5. 'l' → logprob: -6.581060409545898
    6. '-i' → logprob: -7.456060409545898
    7. 'r' → logprob: -7.706060409545898
    8. ' ' → logprob: -7.706060409545898
    9. 'None' → logprob: -7.831060409545898
    10. 'la' → logprob: -7.831060409545898

Token 412: ''ind' (ID: 82245)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5855588912963867
    2. 'i' → logprob: -0.8355588912963867
    3. 'indice' → logprob: -5.960558891296387
    4. ' i' → logprob: -6.210558891296387
    5. ''i' → logprob: -6.710558891296387
    6. '_i' → logprob: -7.210558891296387
    7. 'im' → logprob: -7.210558891296387
    8. '-i' → logprob: -7.835558891296387
    9. ' -' → logprob: -8.335558891296387
    10. '[i' → logprob: -8.335558891296387

Token 413: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.045809075236320496
    2. 'e' → logprob: -3.795809030532837
    3. 'i' → logprob: -4.420809268951416
    4. 'ice' → logprob: -4.670809268951416
    5. 'é' → logprob: -7.420809268951416
    6. ' i' → logprob: -9.670808792114258
    7. '   ' → logprob: -9.670808792114258
    8. '(i' → logprob: -10.545808792114258
    9. 'exe' → logprob: -11.045808792114258
    10. '-' → logprob: -11.420808792114258

Token 414: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06819674372673035
    2. 'i' → logprob: -2.9431967735290527
    3. ' précédent' → logprob: -5.068196773529053
    4. '-' → logprob: -5.943196773529053
    5. ' -' → logprob: -6.193196773529053
    6. ' ' → logprob: -7.818196773529053
    7. '[i' → logprob: -7.943196773529053
    8. '   ' → logprob: -8.443196296691895
    9. ' précéd' → logprob: -8.693196296691895
    10. ' previous' → logprob: -8.943196296691895

Token 415: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11790147423744202
    2. ' -' → logprob: -2.242901563644409
    3. ',' → logprob: -6.11790132522583
    4. ' ' → logprob: -6.36790132522583
    5. ' ,' → logprob: -7.86790132522583
    6. '   ' → logprob: -8.242901802062988
    7. '  ' → logprob: -8.367901802062988
    8. ' ou' → logprob: -8.992901802062988
    9. ')' → logprob: -11.242901802062988
    10. '),' → logprob: -11.555401802062988

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '```' → logprob: -15.751502990722656
    4. 'i' → logprob: -16.376502990722656
    5. '`' → logprob: -16.751502990722656
    6. '-' → logprob: -17.001502990722656
    7. '   ' → logprob: -17.251502990722656
    8. '2' → logprob: -17.439002990722656
    9. ',' → logprob: -17.814002990722656
    10. ' -' → logprob: -18.064002990722656

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2867378890514374
    2. ':' → logprob: -1.5367379188537598
    3. '   ' → logprob: -3.6617379188537598
    4. ':
' → logprob: -6.03673791885376
    5. ' or' → logprob: -6.41173791885376
    6. ' :' → logprob: -6.78673791885376
    7. ' ,' → logprob: -6.78673791885376
    8. ',
' → logprob: -7.16173791885376
    9. '       ' → logprob: -7.78673791885376
    10. ')' → logprob: -7.91173791885376

Token 418: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10738711059093475
    2. '    ' → logprob: -2.857387065887451
    3. '       ' → logprob: -3.482387065887451
    4. ' on' → logprob: -5.357387065887451
    5. 'r' → logprob: -6.857387065887451
    6. ' return' → logprob: -6.982387065887451
    7. ' continuer' → logprob: -7.232387065887451
    8. ',' → logprob: -7.357387065887451
    9. ' r' → logprob: -7.357387065887451
    10. ' alors' → logprob: -7.482387065887451

Token 419: ' ne' (ID: 453)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6015040874481201
    2. '+' → logprob: -1.3515040874481201
    3. ' continue' → logprob: -2.35150408744812
    4. '+=' → logprob: -3.47650408744812
    5. '   ' → logprob: -3.85150408744812
    6. 'continue' → logprob: -4.476504325866699
    7. ' =' → logprob: -4.726504325866699
    8. ' +' → logprob: -5.101504325866699
    9. ' ' → logprob: -5.351504325866699
    10. ':' → logprob: -5.976504325866699

Token 420: ' change' (ID: 3343)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.3316988945007324
    2. ' ajoute' → logprob: -1.8316988945007324
    3. ' change' → logprob: -2.0816988945007324
    4. ' mod' → logprob: -2.3316988945007324
    5. 'change' → logprob: -2.3316988945007324
    6. ' pas' → logprob: -2.4566988945007324
    7. 'aj' → logprob: -3.3316988945007324
    8. 'mod' → logprob: -3.4566988945007324
    9. ' continue' → logprob: -4.331698894500732
    10. ' calc' → logprob: -4.581698894500732

Token 421: ' rien' (ID: 23082)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.5554124116897583
    2. 'r' → logprob: -1.0554124116897583
    3. ' rien' → logprob: -2.6804122924804688
    4. 'pas' → logprob: -5.430412292480469
    5. '_' → logprob: -6.680412292480469
    6. '_pas' → logprob: -6.680412292480469
    7. '_r' → logprob: -6.930412292480469
    8. ' r' → logprob: -7.680412292480469
    9. ' la' → logprob: -8.680412292480469
    10. ' ' → logprob: -8.930412292480469

Token 422: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11803518235683441
    2. '.' → logprob: -2.868035078048706
    3. ',' → logprob: -3.868035078048706
    4. '    
' → logprob: -4.368035316467285
    5. ',
' → logprob: -5.118035316467285
    6. '.
' → logprob: -5.118035316467285
    7. '       ' → logprob: -5.368035316467285
    8. '
' → logprob: -5.993035316467285
    9. ':' → logprob: -7.868035316467285
    10. '\n' → logprob: -8.118035316467285

Token 423: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016350820660591125
    2. '
' → logprob: -5.016350746154785
    3. '    
' → logprob: -5.766350746154785
    4. ':' → logprob: -6.016350746154785
    5. '\n' → logprob: -6.641350746154785
    6. ',
' → logprob: -7.766350746154785
    7. '       ' → logprob: -7.766350746154785
    8. ',' → logprob: -7.766350746154785
    9. ':
' → logprob: -8.391350746154785
    10. 'else' → logprob: -8.516350746154785

Token 424: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06166556105017662
    2. '       ' → logprob: -3.0616655349731445
    3. '
' → logprob: -4.4366655349731445
    4. '    
' → logprob: -7.8116655349731445
    5. ' ' → logprob: -8.061665534973145
    6. 'else' → logprob: -9.561665534973145
    7. 'def' → logprob: -9.561665534973145
    8. ' else' → logprob: -9.811665534973145
    9. ' 
' → logprob: -9.936665534973145
    10. '  ' → logprob: -10.436665534973145

Token 425: ' Sinon' (ID: 154924)
  Prédit: 'Sinon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sinon' → logprob: -1.0412137508392334
    2. 'else' → logprob: -1.2912137508392334
    3. '   ' → logprob: -1.9162137508392334
    4. ' else' → logprob: -2.9162137508392334
    5. 'Si' → logprob: -3.1662137508392334
    6. ' Sinon' → logprob: -3.2912137508392334
    7. ' sinon' → logprob: -3.7912137508392334
    8. 'Otherwise' → logprob: -4.5412139892578125
    9. ' Si' → logprob: -4.6662139892578125
    10. 'elif' → logprob: -4.9162139892578125

Token 426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.771445095539093
    2. '   ' → logprob: -1.0214450359344482
    3. ':' → logprob: -1.8964450359344482
    4. ',
' → logprob: -4.396445274353027
    5. ':
' → logprob: -4.771445274353027
    6. '       ' → logprob: -5.771445274353027
    7. '    ' → logprob: -6.896445274353027
    8. ' :' → logprob: -7.396445274353027
    9. ' ,' → logprob: -7.646445274353027
    10. '
' → logprob: -7.771445274353027

Token 427: ' on' (ID: 402)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.1992492824792862
    2. ' for' → logprob: -2.574249267578125
    3. 'dp' → logprob: -2.824249267578125
    4. '   ' → logprob: -3.949249267578125
    5. ' on' → logprob: -4.949249267578125
    6. '    ' → logprob: -5.074249267578125
    7. 'for' → logprob: -5.449249267578125
    8. ' d' → logprob: -6.574249267578125
    9. ' result' → logprob: -7.074249267578125
    10. '       ' → logprob: -7.074249267578125

Token 428: ' addition' (ID: 5856)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2477811723947525
    2. ' +=' → logprob: -2.747781276702881
    3. ' add' → logprob: -3.372781276702881
    4. '[i' → logprob: -3.372781276702881
    5. ' continue' → logprob: -4.497781276702881
    6. ' append' → logprob: -4.622781276702881
    7. 'for' → logprob: -4.747781276702881
    8. ' ajoute' → logprob: -4.747781276702881
    9. '   ' → logprob: -4.872781276702881
    10. ' update' → logprob: -4.997781276702881

Token 429: 'ne' (ID: 611)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07137265801429749
    2. '+=' → logprob: -2.9463727474212646
    3. '+' → logprob: -4.4463725090026855
    4. '=' → logprob: -6.1963725090026855
    5. ' +' → logprob: -6.6963725090026855
    6. ' =' → logprob: -6.9463725090026855
    7. 's' → logprob: -9.571372985839844
    8. ')' → logprob: -9.571372985839844
    9. 'n' → logprob: -9.821372985839844
    10. 'ne' → logprob: -10.196372985839844

Token 430: ' les' (ID: 1341)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.008343053050339222
    2. 'dp' → logprob: -5.13334321975708
    3. '(dp' → logprob: -6.25834321975708
    4. ' r' → logprob: -8.008342742919922
    5. 'r' → logprob: -10.008342742919922
    6. ' (' → logprob: -10.133342742919922
    7. '_dp' → logprob: -10.883342742919922
    8. '(' → logprob: -10.883342742919922
    9. ' result' → logprob: -11.258342742919922
    10. ' d' → logprob: -11.883342742919922

Token 431: ' façons' (ID: 165958)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.39350733160972595
    2. 'dp' → logprob: -1.1435073614120483
    3. '(dp' → logprob: -5.393507480621338
    4. ' (' → logprob: -6.643507480621338
    5. '(' → logprob: -8.39350700378418
    6. '_dp' → logprob: -8.51850700378418
    7. 'd' → logprob: -9.14350700378418
    8. 'r' → logprob: -9.64350700378418
    9. ' d' → logprob: -10.26850700378418
    10. ' r' → logprob: -10.64350700378418

Token 432: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.97764652967453
    2. 'de' → logprob: -2.102646589279175
    3. '[r' → logprob: -2.227646589279175
    4. '   ' → logprob: -2.477646589279175
    5. ' de' → logprob: -2.727646589279175
    6. 'd' → logprob: -2.852646589279175
    7. '[d' → logprob: -3.102646589279175
    8. '[' → logprob: -3.477646589279175
    9. ' d' → logprob: -3.727646589279175
    10. 'dp' → logprob: -4.227646350860596

Token 433: ' pas' (ID: 2173)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04112791270017624
    2. ' r' → logprob: -3.291127920150757
    3. 'previous' → logprob: -6.916127681732178
    4. ' previous' → logprob: -7.541127681732178
    5. 'pr' → logprob: -7.916127681732178
    6. ' précédent' → logprob: -7.916127681732178
    7. '```' → logprob: -8.791128158569336
    8. 'indice' → logprob: -9.291128158569336
    9. '_r' → logprob: -9.541128158569336
    10. 'prev' → logprob: -10.041128158569336

Token 434: ' précédent' (ID: 128462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0431298166513443
    2. ' ' → logprob: -3.7931299209594727
    3. ' s' → logprob: -4.793129920959473
    4. '   ' → logprob: -5.918129920959473
    5. 'i' → logprob: -6.168129920959473
    6. '[i' → logprob: -6.168129920959473
    7. ' i' → logprob: -6.543129920959473
    8. 'sage' → logprob: -7.043129920959473
    9. '[' → logprob: -7.668129920959473
    10. '    ' → logprob: -8.418129920959473

Token 435: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0269465446472168
    2. ' +' → logprob: -1.1519465446472168
    3. '   ' → logprob: -2.401946544647217
    4. ' i' → logprob: -2.526946544647217
    5. '+' → logprob: -2.776946544647217
    6. ',' → logprob: -4.026946544647217
    7. '(i' → logprob: -4.276946544647217
    8. '_' → logprob: -4.651946544647217
    9. 'i' → logprob: -4.901946544647217
    10. '.' → logprob: -5.026946544647217

Token 436: ' de' (ID: 334)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4999909996986389
    2. ' r' → logprob: -0.9999909996986389
    3. ' celles' → logprob: -4.374990940093994
    4. ' dp' → logprob: -5.124990940093994
    5. ' les' → logprob: -6.499990940093994
    6. 'dp' → logprob: -6.624990940093994
    7. ' la' → logprob: -6.874990940093994
    8. '   ' → logprob: -7.124990940093994
    9. ' le' → logprob: -7.499990940093994
    10. ' ' → logprob: -7.749990940093994

Token 437: ' la' (ID: 557)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.32180798053741455
    2. 'r' → logprob: -1.3218079805374146
    3. ' l' → logprob: -6.196807861328125
    4. ' la' → logprob: -6.196807861328125
    5. 'l' → logprob: -6.696807861328125
    6. ' ' → logprob: -6.946807861328125
    7. ' dp' → logprob: -7.696807861328125
    8. ' (' → logprob: -7.946807861328125
    9. '[r' → logprob: -8.446807861328125
    10. '(r' → logprob: -8.571807861328125

Token 438: ' précédente' (ID: 177319)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013792982324957848
    2. ' r' → logprob: -4.388792991638184
    3. 'pr' → logprob: -7.763792991638184
    4. 'previous' → logprob: -8.013792991638184
    5. 'i' → logprob: -9.138792991638184
    6. ' ' → logprob: -9.263792991638184
    7. ' previous' → logprob: -9.388792991638184
    8. ' i' → logprob: -10.388792991638184
    9. 'prev' → logprob: -10.888792991638184
    10. 'val' → logprob: -10.888792991638184

Token 439: ' occurrence' (ID: 55807)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1466833353042603
    2. 'position' → logprob: -1.2716833353042603
    3. '_' → logprob: -1.5216833353042603
    4. '_position' → logprob: -2.2716832160949707
    5. '[i' → logprob: -4.396683216094971
    6. ' _' → logprob: -4.396683216094971
    7. ' étape' → logprob: -5.146683216094971
    8. '_i' → logprob: -5.646683216094971
    9. ' à' → logprob: -5.646683216094971
    10. ' i' → logprob: -5.896683216094971

Token 440: ' trouv' (ID: 40254)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3759094774723053
    2. '   ' → logprob: -2.3759095668792725
    3. '.' → logprob: -2.6259095668792725
    4. ' précédente' → logprob: -3.5009095668792725
    5. ',' → logprob: -3.6259095668792725
    6. ']' → logprob: -3.8759095668792725
    7. ' precedente' → logprob: -5.000909328460693
    8. 'preced' → logprob: -5.125909328460693
    9. ' i' → logprob: -5.250909328460693
    10. ' de' → logprob: -5.250909328460693

Token 441: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0022079506888985634
    2. 'ées' → logprob: -7.0022077560424805
    3. 'é' → logprob: -7.3772077560424805
    4. 'u' → logprob: -7.8772077560424805
    5. 'e' → logprob: -9.12720775604248
    6. 'ue' → logprob: -9.50220775604248
    7. 'és' → logprob: -10.25220775604248
    8. '```' → logprob: -11.50220775604248
    9. 'è' → logprob: -11.75220775604248
    10. 'ee' → logprob: -12.00220775604248

Token 442: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1719934493303299
    2. '   ' → logprob: -2.1719934940338135
    3. '.
' → logprob: -3.9219934940338135
    4. ',' → logprob: -4.546993255615234
    5. ')' → logprob: -5.546993255615234
    6. '[i' → logprob: -5.671993255615234
    7. ',
' → logprob: -6.421993255615234
    8. ' à' → logprob: -6.921993255615234
    9. '
' → logprob: -7.921993255615234
    10. 'def' → logprob: -8.171993255615234

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07302257418632507
    2. '
' → logprob: -2.6980226039886475
    3. '    
' → logprob: -6.198022365570068
    4. '\n' → logprob: -8.198022842407227
    5. 'def' → logprob: -8.698022842407227
    6. ' 
' → logprob: -8.823022842407227
    7. '```' → logprob: -9.323022842407227
    8. '  
' → logprob: -9.573022842407227
    9. '"""
' → logprob: -10.073022842407227
    10. ')' → logprob: -10.448022842407227

Token 444: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1915355622768402
    2. '
' → logprob: -2.191535472869873
    3. 'def' → logprob: -3.066535472869873
    4. ' def' → logprob: -4.941535472869873
    5. '\n' → logprob: -6.316535472869873
    6. '    
' → logprob: -6.441535472869873
    7. '```' → logprob: -6.941535472869873
    8. ':' → logprob: -7.066535472869873
    9. 'n' → logprob: -7.316535472869873
    10. '\' → logprob: -7.441535472869873

Token 445: ' résultat' (ID: 62556)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8680948615074158
    2. ' ' → logprob: -1.9930949211120605
    3. ' \' → logprob: -2.4930949211120605
    4. '_' → logprob: -2.4930949211120605
    5. ' _' → logprob: -3.2430949211120605
    6. '\n' → logprob: -3.2430949211120605
    7. ' def' → logprob: -3.6180949211120605
    8. '   ' → logprob: -3.7430949211120605
    9. ' n' → logprob: -3.9930949211120605
    10. 'n' → logprob: -4.1180949211120605

Token 446: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4545894265174866
    2. 's' → logprob: -1.8295893669128418
    3. ' s' → logprob: -2.704589366912842
    4. '=' → logprob: -3.204589366912842
    5. ' est' → logprob: -3.954589366912842
    6. 'final' → logprob: -3.954589366912842
    7. ' final' → logprob: -4.204589366912842
    8. '_' → logprob: -4.454589366912842
    9. '_final' → logprob: -4.579589366912842
    10. '[' → logprob: -5.079589366912842

Token 447: ' calcul' (ID: 7559)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7407204508781433
    2. ' une' → logprob: -1.115720510482788
    3. ' stock' → logprob: -2.615720510482788
    4. '   ' → logprob: -3.490720510482788
    5. ' retourn' → logprob: -4.240720272064209
    6. '[]' → logprob: -4.365720272064209
    7. ' la' → logprob: -4.740720272064209
    8. ' modulo' → logprob: -4.865720272064209
    9. ' le' → logprob: -5.240720272064209
    10. '[' → logprob: -5.240720272064209

Token 448: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5747260451316833
    2. '_' → logprob: -1.0747261047363281
    3. 'e' → logprob: -2.699726104736328
    4. ' ' → logprob: -5.199726104736328
    5. ' en' → logprob: -5.449726104736328
    6. ' e' → logprob: -5.449726104736328
    7. ' à' → logprob: -5.824726104736328
    8. ' =' → logprob: -6.199726104736328
    9. ' final' → logprob: -6.324726104736328
    10. ' d' → logprob: -6.574726104736328

Token 449: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.011297264136373997
    2. 'mod' → logprob: -5.136297225952148
    3. ' mod' → logprob: -5.886297225952148
    4. '_mod' → logprob: -6.761297225952148
    5. ' en' → logprob: -7.511297225952148
    6. ' au' → logprob: -8.011297225952148
    7. ' ' → logprob: -9.261297225952148
    8. ' à' → logprob: -9.511297225952148
    9. ' sous' → logprob: -10.136297225952148
    10. ' pour' → logprob: -10.136297225952148

Token 450: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5023162961006165
    2. ' modulo' → logprob: -1.2523162364959717
    3. '10' → logprob: -2.7523162364959717
    4. ' mod' → logprob: -4.127316474914551
    5. 'mod' → logprob: -4.502316474914551
    6. ' (' → logprob: -4.877316474914551
    7. ' `' → logprob: -5.502316474914551
    8. ' ' → logprob: -6.377316474914551
    9. ' space' → logprob: -6.752316474914551
    10. '(mod' → logprob: -7.502316474914551

Token 451: ' param' (ID: 3802)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.9506462216377258
    2. ' ' → logprob: -1.450646162033081
    3. ''' → logprob: -1.950646162033081
    4. '"' → logprob: -2.575646162033081
    5. 'mod' → logprob: -2.950646162033081
    6. '\n' → logprob: -3.450646162033081
    7. '10' → logprob: -3.700646162033081
    8. '`' → logprob: -4.45064640045166
    9. ' \' → logprob: -4.82564640045166
    10. ''\' → logprob: -5.20064640045166

Token 452: 'ètre' (ID: 60948)
  Prédit: 'ètre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètre' → logprob: -0.021425578743219376
    2. 'è' → logprob: -4.521425724029541
    3. 'etre' → logprob: -4.771425724029541
    4. 'e' → logprob: -7.646425724029541
    5. 'ètres' → logprob: -7.896425724029541
    6. 'etro' → logprob: -8.271425247192383
    7. '`' → logprob: -8.396425247192383
    8. ')' → logprob: -8.896425247192383
    9. 'èt' → logprob: -9.396425247192383
    10. ' ' → logprob: -10.271425247192383

Token 453: ' modulo' (ID: 112372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26569005846977234
    2. '_' → logprob: -1.8906900882720947
    3. '.' → logprob: -3.7656900882720947
    4. '_=' → logprob: -4.640689849853516
    5. '=_' → logprob: -4.765689849853516
    6. ' =' → logprob: -4.765689849853516
    7. 'mod' → logprob: -4.890689849853516
    8. '_mod' → logprob: -5.015689849853516
    9. ' modulo' → logprob: -5.390689849853516
    10. ' _' → logprob: -5.515689849853516

Token 454: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2321968376636505
    2. '
' → logprob: -2.607196807861328
    3. '.' → logprob: -2.732196807861328
    4. '.
' → logprob: -3.232196807861328
    5. 'def' → logprob: -4.107196807861328
    6. ':' → logprob: -5.982196807861328
    7. ',' → logprob: -6.232196807861328
    8. ':
' → logprob: -6.607196807861328
    9. '):
' → logprob: -6.732196807861328
    10. ')' → logprob: -6.732196807861328

Token 455: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10875381529331207
    2. '   ' → logprob: -2.8587539196014404
    3. 'def' → logprob: -3.2337539196014404
    4. '    
' → logprob: -5.983753681182861
    5. '\n' → logprob: -6.983753681182861
    6. '"""
' → logprob: -7.108753681182861
    7. ')
' → logprob: -7.858753681182861
    8. ' def' → logprob: -7.983753681182861
    9. '```' → logprob: -7.983753681182861
    10. ' 
' → logprob: -8.48375415802002

Token 456: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6670992970466614
    2. '
' → logprob: -1.0420992374420166
    3. '   ' → logprob: -2.2920992374420166
    4. 'n' → logprob: -4.292099475860596
    5. ' def' → logprob: -4.667099475860596
    6. '    
' → logprob: -5.542099475860596
    7. '"""
' → logprob: -5.667099475860596
    8. ' n' → logprob: -6.792099475860596
    9. ' 
' → logprob: -7.542099475860596
    10. '\n' → logprob: -7.917099475860596

Token 457: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2600822448730469
    2. '   ' → logprob: -1.3850822448730469
    3. ':' → logprob: -1.5100822448730469
    4. ',' → logprob: -1.6350822448730469
    5. '):' → logprob: -3.760082244873047
    6. '       ' → logprob: -4.385082244873047
    7. '):
' → logprob: -5.010082244873047
    8. 'def' → logprob: -5.635082244873047
    9. ')' → logprob: -6.760082244873047
    10. ' :' → logprob: -7.135082244873047

Token 458: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030462324619293213
    2. 'r' → logprob: -3.6554622650146484
    3. ' r' → logprob: -6.155462265014648
    4. '       ' → logprob: -6.280462265014648
    5. '    ' → logprob: -9.280462265014648
    6. '  ' → logprob: -11.530462265014648
    7. '```' → logprob: -11.530462265014648
    8. ' def' → logprob: -11.780462265014648
    9. '    
' → logprob: -11.780462265014648
    10. '
' → logprob: -12.280462265014648

Token 459: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.0021007757168263197
    2. ' r' → logprob: -6.252100944519043
    3. '   ' → logprob: -8.877100944519043
    4. 'list' → logprob: -10.502100944519043
    5. 'c' → logprob: -14.002100944519043
    6. 'def' → logprob: -14.127100944519043
    7. ' list' → logprob: -14.127100944519043
    8. ' ' → logprob: -14.877100944519043
    9. 'n' → logprob: -14.877100944519043
    10. ')' → logprob: -15.127100944519043

Token 460: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3688511848449707
    2. ' (' → logprob: -1.2438511848449707
    3. '(list' → logprob: -4.743851184844971
    4. ':' → logprob: -5.243851184844971
    5. ' ,' → logprob: -6.118851184844971
    6. '=list' → logprob: -6.618851184844971
    7. '=' → logprob: -7.118851184844971
    8. ' :' → logprob: -7.993851184844971
    9. '   ' → logprob: -8.118850708007812
    10. ')' → logprob: -8.368850708007812

Token 461: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00012594614236149937
    2. ' list' → logprob: -9.000125885009766
    3. '   ' → logprob: -14.000125885009766
    4. 'List' → logprob: -14.375125885009766
    5. ')' → logprob: -14.500125885009766
    6. '[list' → logprob: -15.250125885009766
    7. 'r' → logprob: -16.000125885009766
    8. 'c' → logprob: -16.500125885009766
    9. ':list' → logprob: -16.625125885009766
    10. '=list' → logprob: -17.250125885009766

Token 462: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08899934589862823
    2. 'of' → logprob: -3.0889992713928223
    3. '[int' → logprob: -3.4639992713928223
    4. ')' → logprob: -4.963999271392822
    5. '[' → logprob: -7.588999271392822
    6. '   ' → logprob: -8.08899974822998
    7. '):
' → logprob: -8.83899974822998
    8. '<int' → logprob: -9.58899974822998
    9. ',' → logprob: -9.71399974822998
    10. '):' → logprob: -9.83899974822998

Token 463: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1637164789135568e-05
    2. ' int' → logprob: -12.125011444091797
    3. '[int' → logprob: -12.500011444091797
    4. ')' → logprob: -13.125011444091797
    5. '   ' → logprob: -16.250011444091797
    6. '<int' → logprob: -16.625011444091797
    7. '(int' → logprob: -16.875011444091797
    8. 'ints' → logprob: -17.500011444091797
    9. '```' → logprob: -17.625011444091797
    10. '):' → logprob: -17.625011444091797

Token 464: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010267133824527264
    2. '):
' → logprob: -4.63526725769043
    3. ')' → logprob: -8.38526725769043
    4. ']):' → logprob: -8.51026725769043
    5. '>):' → logprob: -10.76026725769043
    6. '   ' → logprob: -11.38526725769043
    7. '[int' → logprob: -11.63526725769043
    8. '[' → logprob: -11.76026725769043
    9. ' ):' → logprob: -11.88526725769043
    10. ':' → logprob: -12.01026725769043

Token 465: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2913029193878174
    2. ' list' → logprob: -1.7913029193878174
    3. 'list' → logprob: -3.6663029193878174
    4. ')' → logprob: -3.6663029193878174
    5. '       ' → logprob: -4.541302680969238
    6. 'List' → logprob: -5.291302680969238
    7. 'def' → logprob: -5.416302680969238
    8. '    
' → logprob: -5.916302680969238
    9. 'int' → logprob: -6.041302680969238
    10. ' 
' → logprob: -6.541302680969238

Token 466: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.49197930097579956
    2. ' previous' → logprob: -0.9919793009757996
    3. 'previous' → logprob: -5.366979122161865
    4. ' next' → logprob: -5.491979122161865
    5. ' positions' → logprob: -6.241979122161865
    6. 'list' → logprob: -6.241979122161865
    7. 'r' → logprob: -7.741979122161865
    8. ' ' → logprob: -8.116979598999023
    9. ' indices' → logprob: -8.116979598999023
    10. ' r' → logprob: -8.116979598999023

Token 467: ' indiqu' (ID: 100773)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.13561156392097473
    2. ' des' → logprob: -2.2606115341186523
    3. ' de' → logprob: -4.635611534118652
    4. '[' → logprob: -5.635611534118652
    5. 'of' → logprob: -5.885611534118652
    6. '[int' → logprob: -5.885611534118652
    7. '<|end|>' → logprob: -6.385611534118652
    8. ')' → logprob: -7.260611534118652
    9. ' d' → logprob: -8.135611534118652
    10. 'des' → logprob: -8.135611534118652

Token 468: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.010993114672601223
    2. 'ée' → logprob: -4.635993003845215
    3. 'e' → logprob: -6.760993003845215
    4. 'é' → logprob: -11.010993003845215
    5. '   ' → logprob: -11.135993003845215
    6. 'ent' → logprob: -11.135993003845215
    7. 'ue' → logprob: -11.760993003845215
    8. '[' → logprob: -11.760993003845215
    9. 'ee' → logprob: -12.010993003845215
    10. 'eur' → logprob: -12.635993003845215

Token 469: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2288249731063843
    2. ' les' → logprob: -1.8538249731063843
    3. ' l' → logprob: -1.9788249731063843
    4. ' des' → logprob: -2.353825092315674
    5. '<|end|>' → logprob: -2.478825092315674
    6. 'previous' → logprob: -3.228825092315674
    7. ',' → logprob: -3.353825092315674
    8. ' previous' → logprob: -3.978825092315674
    9. '_previous' → logprob: -4.103825092315674
    10. '   ' → logprob: -4.353825092315674

Token 470: ''appar' (ID: 195019)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.379758596420288
    2. ' précédent' → logprob: -2.004758596420288
    3. '   ' → logprob: -2.129758596420288
    4. '[i' → logprob: -2.504758596420288
    5. ' i' → logprob: -2.629758596420288
    6. ' previous' → logprob: -3.004758596420288
    7. ']' → logprob: -3.129758596420288
    8. ')' → logprob: -3.379758596420288
    9. 'i' → logprob: -3.754758596420288
    10. '[' → logprob: -3.754758596420288

Token 471: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.024482814595103264
    2. 'u' → logprob: -4.024482727050781
    3. 'i' → logprob: -6.149482727050781
    4. 'itions' → logprob: -6.274482727050781
    5. 'ue' → logprob: -6.399482727050781
    6. '[i' → logprob: -8.649482727050781
    7. 'ence' → logprob: -8.899482727050781
    8. 'ent' → logprob: -9.399482727050781
    9. 'e' → logprob: -9.524482727050781
    10. 'it' → logprob: -10.399482727050781

Token 472: ' précédente' (ID: 177319)
  Prédit: ' précédente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédente' → logprob: -0.5291720628738403
    2. 's' → logprob: -1.5291720628738403
    3. 'pr' → logprob: -2.029171943664551
    4. '_previous' → logprob: -4.279171943664551
    5. '   ' → logprob: -4.404171943664551
    6. '_pr' → logprob: -5.154171943664551
    7. ')' → logprob: -5.404171943664551
    8. 'previous' → logprob: -5.779171943664551
    9. ' précéd' → logprob: -5.904171943664551
    10. '_s' → logprob: -6.154171943664551

Token 473: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18047121167182922
    2. ' de' → logprob: -2.430471181869507
    3. ' )' → logprob: -3.805471181869507
    4. 'de' → logprob: -3.930471181869507
    5. '):' → logprob: -5.555471420288086
    6. 's' → logprob: -5.555471420288086
    7. '_previous' → logprob: -5.680471420288086
    8. ' précédente' → logprob: -5.805471420288086
    9. ' precedente' → logprob: -6.055471420288086
    10. '_prev' → logprob: -6.180471420288086

Token 474: ' chaque' (ID: 21194)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12767574191093445
    2. ' c' → logprob: -2.252675771713257
    3. ')' → logprob: -4.377675533294678
    4. ')c' → logprob: -6.752675533294678
    5. ' )' → logprob: -7.752675533294678
    6. ' ' → logprob: -8.752676010131836
    7. ' la' → logprob: -9.002676010131836
    8. ']' → logprob: -9.252676010131836
    9. 'r' → logprob: -9.877676010131836
    10. 's' → logprob: -10.627676010131836

Token 475: ' valeur' (ID: 41664)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49468594789505005
    2. ')' → logprob: -1.4946858882904053
    3. '_c' → logprob: -3.2446858882904053
    4. ']' → logprob: -3.4946858882904053
    5. 'élé' → logprob: -3.7446858882904053
    6. ' élément' → logprob: -4.244686126708984
    7. 'val' → logprob: -4.869686126708984
    8. 'c' → logprob: -4.994686126708984
    9. '_val' → logprob: -4.994686126708984
    10. ' _' → logprob: -5.119686126708984

Token 476: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3763042986392975
    2. '):' → logprob: -1.876304268836975
    3. '   ' → logprob: -2.2513043880462646
    4. '):
' → logprob: -3.0013043880462646
    5. ',' → logprob: -6.1263041496276855
    6. ')
' → logprob: -6.1263041496276855
    7. '),' → logprob: -8.251304626464844
    8. '
' → logprob: -9.001304626464844
    9. '[i' → logprob: -9.001304626464844
    10. ',
' → logprob: -9.376304626464844

Token 477: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24485889077186584
    2. ')' → logprob: -1.6198588609695435
    3. '
' → logprob: -4.744858741760254
    4. '):
' → logprob: -5.369858741760254
    5. ',' → logprob: -6.244858741760254
    6. '    
' → logprob: -6.869858741760254
    7. '):' → logprob: -6.869858741760254
    8. ')
' → logprob: -6.869858741760254
    9. 'def' → logprob: -7.869858741760254
    10. ',
' → logprob: -9.119858741760254

Token 478: ' modulo' (ID: 112372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08618971705436707
    2. ' n' → logprob: -2.7111897468566895
    3. '   ' → logprob: -4.3361897468566895
    4. '
' → logprob: -7.0861897468566895
    5. 'return' → logprob: -8.211189270019531
    6. '       ' → logprob: -8.211189270019531
    7. ')' → logprob: -8.336189270019531
    8. 'def' → logprob: -8.336189270019531
    9. 'returns' → logprob: -8.336189270019531
    10. 'dp' → logprob: -8.336189270019531

Token 479: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3661818504333496
    2. '):' → logprob: -1.2411818504333496
    3. ':' → logprob: -4.24118185043335
    4. ')' → logprob: -6.49118185043335
    5. ' =' → logprob: -6.99118185043335
    6. '):
' → logprob: -8.116182327270508
    7. '=int' → logprob: -8.491182327270508
    8. ' ):' → logprob: -8.866182327270508
    9. '=None' → logprob: -9.866182327270508
    10. ',' → logprob: -10.741182327270508

Token 480: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029756641015410423
    2. 'int' → logprob: -8.625297546386719
    3. ':int' → logprob: -10.500297546386719
    4. '10' → logprob: -10.625297546386719
    5. ' )' → logprob: -10.875297546386719
    6. '=' → logprob: -10.875297546386719
    7. '=int' → logprob: -12.250297546386719
    8. '100' → logprob: -12.250297546386719
    9. ':' → logprob: -12.500297546386719
    10. '):' → logprob: -12.625297546386719

Token 481: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13423463702201843
    2. ')' → logprob: -2.634234666824341
    3. '=' → logprob: -3.009234666824341
    4. '):
' → logprob: -5.509234428405762
    5. ' =' → logprob: -8.634234428405762
    6. ')=' → logprob: -8.759234428405762
    7. ' ):' → logprob: -9.509234428405762
    8. '):

' → logprob: -11.009234428405762
    9. '):
' → logprob: -11.134234428405762
    10. ':' → logprob: -12.009234428405762

Token 482: ' L' (ID: 451)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.33026322722435
    2. '100' → logprob: -1.5802632570266724
    3. ')' → logprob: -2.955263137817383
    4. '   ' → logprob: -4.455263137817383
    5. '):' → logprob: -5.580263137817383
    6. 'int' → logprob: -5.830263137817383
    7. ' ' → logprob: -6.080263137817383
    8. ' int' → logprob: -6.830263137817383
    9. 'None' → logprob: -7.330263137817383
    10. '1' → logprob: -8.080263137817383

Token 483: ''ent' (ID: 53422)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0064531564712524
    2. '=' → logprob: -1.1314531564712524
    3. '_' → logprob: -1.5064531564712524
    4. ' ' → logprob: -3.756453037261963
    5. ' )' → logprob: -3.756453037261963
    6. ' =' → logprob: -3.881453037261963
    7. ',' → logprob: -5.006453037261963
    8. ' _' → logprob: -5.256453037261963
    9. ' space' → logprob: -5.506453037261963
    10. ''' → logprob: -5.631453037261963

Token 484: 'ier' (ID: 905)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0437639951705933
    2. ')' → logprob: -1.5437639951705933
    3. ' modulo' → logprob: -1.5437639951705933
    4. ' =' → logprob: -3.168764114379883
    5. 'ier' → logprob: -3.168764114379883
    6. 'e' → logprob: -3.293764114379883
    7. ',' → logprob: -3.418764114379883
    8. 'mod' → logprob: -3.418764114379883
    9. '   ' → logprob: -5.043764114379883
    10. 'u' → logprob: -5.668764114379883

Token 485: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24094368517398834
    2. ')' → logprob: -1.9909436702728271
    3. ' =' → logprob: -2.865943670272827
    4. ' )' → logprob: -4.990943908691406
    5. ',' → logprob: -5.115943908691406
    6. ' ' → logprob: -5.865943908691406
    7. ':' → logprob: -6.365943908691406
    8. '):' → logprob: -6.615943908691406
    9. '   ' → logprob: -7.740943908691406
    10. '=None' → logprob: -7.990943908691406

Token 486: ' lequel' (ID: 55154)
  Prédit: ' défaut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.7889267802238464
    2. 'dé' → logprob: -1.7889268398284912
    3. 'def' → logprob: -1.9139268398284912
    4. 'default' → logprob: -2.413926839828491
    5. ' default' → logprob: -2.663926839828491
    6. ')' → logprob: -2.913926839828491
    7. ' def' → logprob: -4.288926601409912
    8. ' )' → logprob: -6.163926601409912
    9. ' ' → logprob: -7.413926601409912
    10. 'd' → logprob: -8.28892707824707

Token 487: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1264377385377884
    2. ')' → logprob: -3.0014376640319824
    3. ' )' → logprob: -4.251437664031982
    4. ' modulo' → logprob: -4.251437664031982
    5. ' ' → logprob: -4.376437664031982
    6. '   ' → logprob: -4.751437664031982
    7. 'on' → logprob: -5.001437664031982
    8. '_' → logprob: -6.126437664031982
    9. ' le' → logprob: -6.376437664031982
    10. ' mod' → logprob: -6.501437664031982

Token 488: ' prend' (ID: 37463)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8280162811279297
    2. ' modulo' → logprob: -1.5780162811279297
    3. ' mod' → logprob: -2.0780162811279297
    4. ' %' → logprob: -2.0780162811279297
    5. ')' → logprob: -2.4530162811279297
    6. '   ' → logprob: -4.45301628112793
    7. 'mod' → logprob: -6.20301628112793
    8. '_mod' → logprob: -6.20301628112793
    9. ')%' → logprob: -6.95301628112793
    10. ' ' → logprob: -7.57801628112793

Token 489: ' le' (ID: 505)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3353217840194702
    2. ' modulo' → logprob: -1.3353217840194702
    3. ' =' → logprob: -1.4603217840194702
    4. ' ' → logprob: -1.9603217840194702
    5. ' mod' → logprob: -4.08532190322876
    6. '_' → logprob: -4.08532190322876
    7. ')' → logprob: -4.33532190322876
    8. 'mod' → logprob: -4.46032190322876
    9. ' _' → logprob: -4.83532190322876
    10. ' )' → logprob: -4.96032190322876

Token 490: ' reste' (ID: 26769)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.08584374189376831
    2. ' mod' → logprob: -3.335843801498413
    3. ' %' → logprob: -4.210843563079834
    4. '%' → logprob: -4.210843563079834
    5. 'mod' → logprob: -4.460843563079834
    6. ' modulus' → logprob: -5.585843563079834
    7. ' ' → logprob: -7.210843563079834
    8. ' module' → logprob: -7.710843563079834
    9. '=' → logprob: -9.085844039916992
    10. '_' → logprob: -10.210844039916992

Token 491: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029616838321089745
    2. ' )' → logprob: -3.7796168327331543
    3. ',' → logprob: -6.279616832733154
    4. '=' → logprob: -6.404616832733154
    5. ' modulo' → logprob: -7.279616832733154
    6. '   ' → logprob: -7.529616832733154
    7. ' =' → logprob: -7.654616832733154
    8. '%' → logprob: -8.279617309570312
    9. ' ' → logprob: -8.404617309570312
    10. '.' → logprob: -8.779617309570312

Token 492: ' éviter' (ID: 64013)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.48314905166625977
    2. ' la' → logprob: -1.1081490516662598
    3. ')' → logprob: -3.9831490516662598
    4. 'le' → logprob: -4.85814905166626
    5. ' modulo' → logprob: -5.10814905166626
    6. ' l' → logprob: -5.48314905166626
    7. ' les' → logprob: -5.60814905166626
    8. 'l' → logprob: -6.35814905166626
    9. ' calcul' → logprob: -6.35814905166626
    10. 'calcul' → logprob: -7.10814905166626

Token 493: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3404067754745483
    2. ' overflow' → logprob: -1.5904067754745483
    3. ' les' → logprob: -1.8404067754745483
    4. ' la' → logprob: -1.9654067754745483
    5. ' des' → logprob: -2.465406894683838
    6. ' l' → logprob: -3.215406894683838
    7. ' le' → logprob: -3.590406894683838
    8. '_' → logprob: -3.840406894683838
    9. ',' → logprob: -3.965406894683838
    10. ' ' → logprob: -4.215406894683838

Token 494: ' déb' (ID: 37874)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.0831267461180687
    2. '_' → logprob: -3.7081267833709717
    3. ' ' → logprob: -3.8331267833709717
    4. ' _' → logprob: -5.083126544952393
    5. 'overflow' → logprob: -5.208126544952393
    6. ' \' → logprob: -5.333126544952393
    7. ' over' → logprob: -5.333126544952393
    8. ' déb' → logprob: -5.708126544952393
    9. ' modulo' → logprob: -6.208126544952393
    10. '\' → logprob: -6.583126544952393

Token 495: 'ord' (ID: 604)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -1.4594271183013916
    2. ' modulo' → logprob: -1.7094271183013916
    3. '-' → logprob: -2.0844271183013916
    4. 'p' → logprob: -2.0844271183013916
    5. '_' → logprob: -2.4594271183013916
    6. '_p' → logprob: -3.5844271183013916
    7. '=' → logprob: -3.7094271183013916
    8. ')' → logprob: -3.7094271183013916
    9. 'mod' → logprob: -3.9594271183013916
    10. 'ord' → logprob: -4.2094268798828125

Token 496: 'ements' (ID: 4507)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33949002623558044
    2. 'ord' → logprob: -2.2144899368286133
    3. 'r' → logprob: -2.9644899368286133
    4. 'u' → logprob: -3.9644899368286133
    5. 'er' → logprob: -4.464489936828613
    6. 'êt' → logprob: -4.589489936828613
    7. 'êtement' → logprob: -4.839489936828613
    8. '}' → logprob: -4.964489936828613
    9. 'p' → logprob: -5.214489936828613
    10. 'ût' → logprob: -5.464489936828613

Token 497: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0628959983587265
    2. '):' → logprob: -2.8128960132598877
    3. '):
' → logprob: -7.312895774841309
    4. ')
' → logprob: -9.562895774841309
    5. '   ' → logprob: -9.687895774841309
    6. ',' → logprob: -9.937895774841309
    7. ' )' → logprob: -10.312895774841309
    8. '.' → logprob: -11.062895774841309
    9. ' ):' → logprob: -11.812895774841309
    10. ').' → logprob: -12.187895774841309

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31192243099212646
    2. ')' → logprob: -2.311922550201416
    3. '):
' → logprob: -2.311922550201416
    4. '"""
' → logprob: -3.686922550201416
    5. ')
' → logprob: -4.186922550201416
    6. '):' → logprob: -4.561922550201416
    7. '
' → logprob: -4.686922550201416
    8. 'def' → logprob: -5.311922550201416
    9. '```' → logprob: -6.061922550201416
    10. '    
' → logprob: -6.686922550201416

Token 499: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.5330923199653625
    2. '"""
' → logprob: -1.2830922603607178
    3. '   ' → logprob: -2.2830922603607178
    4. ')
' → logprob: -3.9080922603607178
    5. '
' → logprob: -5.408092498779297
    6. '):
' → logprob: -5.533092498779297
    7. ')' → logprob: -6.158092498779297
    8. 'returns' → logprob: -6.908092498779297
    9. 'def' → logprob: -7.158092498779297
    10. '"""' → logprob: -7.283092498779297

Token 500: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6510262489318848
    2. ' [
' → logprob: -1.6510262489318848
    3. ' [' → logprob: -1.9010262489318848
    4. ':' → logprob: -2.7760262489318848
    5. ' list' → logprob: -3.9010262489318848
    6. ',' → logprob: -5.026026248931885
    7. ' :' → logprob: -5.151026248931885
    8. ' r' → logprob: -5.276026248931885
    9. '[
' → logprob: -5.276026248931885
    10. ' =' → logprob: -5.276026248931885

Token 501: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001451067510060966
    2. ' list' → logprob: -6.876451015472412
    3. '    ' → logprob: -8.00145149230957
    4. 'list' → logprob: -10.75145149230957
    5. '[' → logprob: -10.87645149230957
    6. '
' → logprob: -11.25145149230957
    7. '    
' → logprob: -11.50145149230957
    8. 'List' → logprob: -12.00145149230957
    9. '       ' → logprob: -12.75145149230957
    10. ' [' → logprob: -13.00145149230957

Token 502: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -4.990154047845863e-05
    2. ' list' → logprob: -10.000049591064453
    3. 'int' → logprob: -12.500049591064453
    4. '   ' → logprob: -14.250049591064453
    5. 'List' → logprob: -17.125049591064453
    6. '       ' → logprob: -19.250049591064453
    7. '
' → logprob: -20.500049591064453
    8. '```' → logprob: -20.625049591064453
    9. '(list' → logprob: -21.000049591064453
    10. 'tuple' → logprob: -21.875049591064453

Token 503: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3252592980861664
    2. '[int' → logprob: -1.3252593278884888
    3. '[' → logprob: -4.450259208679199
    4. '<int' → logprob: -9.4502592086792
    5. 'of' → logprob: -9.5752592086792
    6. '```' → logprob: -10.2002592086792
    7. '_of' → logprob: -10.8252592086792
    8. ' [' → logprob: -11.3252592086792
    9. '[
' → logprob: -11.4502592086792
    10. '   ' → logprob: -12.0752592086792

Token 504: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.872261317563243e-05
    2. ' int' → logprob: -9.750059127807617
    3. '[int' → logprob: -15.500059127807617
    4. '(int' → logprob: -16.000059127807617
    5. '<int' → logprob: -19.375059127807617
    6. '   ' → logprob: -19.625059127807617
    7. '```' → logprob: -20.125059127807617
    8. '	int' → logprob: -20.125059127807617
    9. 'ints' → logprob: -20.500059127807617
    10. ' ' → logprob: -20.875059127807617

Token 505: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003369135083630681
    2. ':
' → logprob: -5.878369331359863
    3. '[' → logprob: -8.753369331359863
    4. '[int' → logprob: -9.003369331359863
    5. ' :' → logprob: -9.503369331359863
    6. ',' → logprob: -9.503369331359863
    7. '   ' → logprob: -9.503369331359863
    8. ' =' → logprob: -10.253369331359863
    9. ' :
' → logprob: -12.253369331359863
    10. '=' → logprob: -12.753369331359863

Token 506: ' Le' (ID: 2018)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7994754910469055
    2. 'dp' → logprob: -1.1744754314422607
    3. '   ' → logprob: -1.9244754314422607
    4. ' list' → logprob: -3.2994754314422607
    5. ' result' → logprob: -4.17447566986084
    6. ' res' → logprob: -4.29947566986084
    7. ' ways' → logprob: -4.79947566986084
    8. ' Le' → logprob: -5.54947566986084
    9. ' La' → logprob: -5.79947566986084
    10. ' la' → logprob: -6.29947566986084

Token 507: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.045371267944574356
    2. ' dp' → logprob: -3.1703712940216064
    3. '[' → logprob: -6.170371055603027
    4. '_dp' → logprob: -9.420371055603027
    5. ' [' → logprob: -10.045371055603027
    6. ' ways' → logprob: -10.670371055603027
    7. '   ' → logprob: -11.045371055603027
    8. '[]' → logprob: -11.295371055603027
    9. 'd' → logprob: -11.420371055603027
    10. '	dp' → logprob: -11.420371055603027

Token 508: ' dynamique' (ID: 98708)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7540836334228516
    2. ' des' → logprob: -1.0040836334228516
    3. ' de' → logprob: -2.0040836334228516
    4. 'dp' → logprob: -4.629083633422852
    5. '_dp' → logprob: -4.629083633422852
    6. ' of' → logprob: -5.754083633422852
    7. '[' → logprob: -6.004083633422852
    8. '_des' → logprob: -6.254083633422852
    9. '_' → logprob: -8.504083633422852
    10. '[]' → logprob: -9.004083633422852

Token 509: ' des' (ID: 731)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6613854765892029
    2. 'dp' → logprob: -1.9113855361938477
    3. ' des' → logprob: -2.1613855361938477
    4. '_dp' → logprob: -2.9113855361938477
    5. '   ' → logprob: -3.1613855361938477
    6. '[' → logprob: -3.4113855361938477
    7. '(dp' → logprob: -3.5363855361938477
    8. ' de' → logprob: -4.286385536193848
    9. ' of' → logprob: -4.536385536193848
    10. '_des' → logprob: -4.911385536193848

Token 510: ' résultats' (ID: 48985)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1146785318851471
    2. ' façons' → logprob: -2.7396786212921143
    3. 'man' → logprob: -3.9896786212921143
    4. 'nombre' → logprob: -4.364678382873535
    5. 'fa' → logprob: -5.864678382873535
    6. ' résultats' → logprob: -6.239678382873535
    7. ' nombres' → logprob: -6.614678382873535
    8. 'val' → logprob: -6.614678382873535
    9. ' dp' → logprob: -6.864678382873535
    10. ' man' → logprob: -7.614678382873535

Token 511: ' interm' (ID: 120489)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5779392123222351
    2. '   ' → logprob: -1.0779392719268799
    3. ' =' → logprob: -3.45293927192688
    4. '(dp' → logprob: -3.57793927192688
    5. ',' → logprob: -4.702939033508301
    6. '[' → logprob: -5.452939033508301
    7. '    
' → logprob: -5.827939033508301
    8. '(
' → logprob: -5.952939033508301
    9. '.
' → logprob: -6.202939033508301
    10. ':
' → logprob: -6.202939033508301

Token 512: 'édia' (ID: 49296)
  Prédit: 'édia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'édia' → logprob: -1.0996358394622803
    2. 'édiaire' → logprob: -1.0996358394622803
    3. 'édi' → logprob: -1.8496358394622803
    4. '```' → logprob: -3.0996358394622803
    5. ']' → logprob: -3.3496358394622803
    6. '[]' → logprob: -3.7246358394622803
    7. 'ed' → logprob: -4.224636077880859
    8. 'edi' → logprob: -4.349636077880859
    9. '   ' → logprob: -4.849636077880859
    10. 'edia' → logprob: -4.974636077880859

Token 513: 'ires' (ID: 5255)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.24620038270950317
    2. 'ires' → logprob: -2.2462003231048584
    3. 'aires' → logprob: -2.2462003231048584
    4. 'ats' → logprob: -6.3712005615234375
    5. 't' → logprob: -6.6212005615234375
    6. 'a' → logprob: -6.8712005615234375
    7. 'ates' → logprob: -7.8712005615234375
    8. 'es' → logprob: -8.121200561523438
    9. '```' → logprob: -8.121200561523438
    10. 's' → logprob: -8.246200561523438

Token 514: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5441408157348633
    2. '
' → logprob: -0.9191408157348633
    3. ',' → logprob: -4.919140815734863
    4. ' =' → logprob: -5.919140815734863
    5. ']' → logprob: -6.544140815734863
    6. 's' → logprob: -6.669140815734863
    7. '"""
' → logprob: -6.919140815734863
    8. ')' → logprob: -7.044140815734863
    9. '    
' → logprob: -7.294140815734863
    10. 'def' → logprob: -7.419140815734863

Token 515: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.004729161038994789
    2. ''au' → logprob: -5.879729270935059
    3. '’à' → logprob: -7.254729270935059
    4. 'à' → logprob: -7.754729270935059
    5. '[i' → logprob: -8.254729270935059
    6. ''' → logprob: -8.379729270935059
    7. '[' → logprob: -9.254729270935059
    8. 'au' → logprob: -10.004729270935059
    9. ''a' → logprob: -10.129729270935059
    10. ' à' → logprob: -10.754729270935059

Token 516: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1151815876364708
    2. ' i' → logprob: -2.7401816844940186
    3. 'len' → logprob: -4.3651814460754395
    4. 'l' → logprob: -4.6151814460754395
    5. 'n' → logprob: -5.4901814460754395
    6. 'index' → logprob: -5.4901814460754395
    7. ' la' → logprob: -5.6151814460754395
    8. 'la' → logprob: -6.1151814460754395
    9. '   ' → logprob: -6.3651814460754395
    10. ' ' → logprob: -6.7401814460754395

Token 517: ' position' (ID: 4010)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12558089196681976
    2. ' _' → logprob: -3.3755807876586914
    3. ' i' → logprob: -3.8755807876586914
    4. ' position' → logprob: -4.000580787658691
    5. ' ' → logprob: -4.500580787658691
    6. 'i' → logprob: -5.000580787658691
    7. '_i' → logprob: -5.000580787658691
    8. 'position' → logprob: -5.500580787658691
    9. '_position' → logprob: -6.125580787658691
    10. '[i' → logprob: -6.125580787658691

Token 518: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4968668818473816
    2. '
' → logprob: -0.9968668818473816
    3. '.' → logprob: -4.621866703033447
    4. '.
' → logprob: -5.621866703033447
    5. ',' → logprob: -5.746866703033447
    6. ',
' → logprob: -7.121866703033447
    7. ':
' → logprob: -7.246866703033447
    8. ']' → logprob: -7.246866703033447
    9. ')' → logprob: -7.746866703033447
    10. 'def' → logprob: -7.871866703033447

Token 519: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.840594470500946
    2. '   ' → logprob: -1.0905945301055908
    3. '"""
' → logprob: -1.5905945301055908
    4. 'def' → logprob: -3.840594530105591
    5. '    
' → logprob: -5.965594291687012
    6. ')
' → logprob: -6.215594291687012
    7. '```' → logprob: -7.590594291687012
    8. ')' → logprob: -8.090594291687012
    9. '\n' → logprob: -8.090594291687012
    10. '  
' → logprob: -8.215594291687012

Token 520: ' """
' (ID: 7037)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' (adapté à ' """
') → logprob: -0.231491357088089
    2. '   ' → logprob: -1.9814913272857666
    3. 'def' → logprob: -2.8564913272857666
    4. '
' → logprob: -5.606491565704346
    5. '"""' → logprob: -5.606491565704346
    6. '```' → logprob: -6.481491565704346
    7. '):
' → logprob: -6.856491565704346
    8. ')
' → logprob: -7.231491565704346
    9. ')' → logprob: -7.981491565704346
    10. ' """
' → logprob: -9.356491088867188

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007506771944463253
    2. 'n' → logprob: -5.632506847381592
    3. 'dp' → logprob: -5.757506847381592
    4. '
' → logprob: -7.382506847381592
    5. 'def' → logprob: -10.132506370544434
    6. ' n' → logprob: -10.257506370544434
    7. ' dp' → logprob: -10.507506370544434
    8. '```' → logprob: -11.757506370544434
    9. '    
' → logprob: -12.382506370544434
    10. '	dp' → logprob: -13.507506370544434

Token 522: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.17076563835144043
    2. '   ' → logprob: -2.7957656383514404
    3. 'def' → logprob: -3.0457656383514404
    4. 'dp' → logprob: -3.0457656383514404
    5. ' n' → logprob: -7.7957658767700195
    6. '
' → logprob: -9.42076587677002
    7. 'from' → logprob: -9.92076587677002
    8. 'r' → logprob: -10.04576587677002
    9. 'd' → logprob: -10.17076587677002
    10. ' dp' → logprob: -10.17076587677002

Token 523: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016060644760727882
    2. '=' → logprob: -4.141060829162598
    3. '   ' → logprob: -11.391060829162598
    4. ',' → logprob: -11.516060829162598
    5. '=len' → logprob: -12.641060829162598
    6. ')' → logprob: -14.016060829162598
    7. ' ' → logprob: -15.016060829162598
    8. '=int' → logprob: -15.141060829162598
    9. '=n' → logprob: -15.766060829162598
    10. ' =
' → logprob: -16.51605987548828

Token 524: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31326526403427124
    2. ' len' → logprob: -1.313265323638916
    3. '(len' → logprob: -12.813264846801758
    4. '[len' → logprob: -14.688264846801758
    5. '=len' → logprob: -14.938264846801758
    6. '   ' → logprob: -17.313264846801758
    7. '	len' → logprob: -17.563264846801758
    8. ',len' → logprob: -18.813264846801758
    9. '<len' → logprob: -20.313264846801758
    10. 'Len' → logprob: -20.813264846801758

Token 525: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0022079506888985634
    2. 'r' → logprob: -6.1272077560424805
    3. '(c' → logprob: -11.62720775604248
    4. '(' → logprob: -11.75220775604248
    5. ' r' → logprob: -12.87720775604248
    6. ' (' → logprob: -13.50220775604248
    7. '(
' → logprob: -13.75220775604248
    8. 'c' → logprob: -14.87720775604248
    9. '[r' → logprob: -15.75220775604248
    10. '	r' → logprob: -16.252208709716797

Token 526: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2521670162677765
    2. ')' → logprob: -1.502166986465454
    3. '   ' → logprob: -8.627166748046875
    4. ')
' → logprob: -9.752166748046875
    5. ' )
' → logprob: -15.627166748046875
    6. ')

' → logprob: -16.377166748046875
    7. ')`
' → logprob: -16.627166748046875
    8. '
' → logprob: -17.127166748046875
    9. 'def' → logprob: -17.127166748046875
    10. ' )' → logprob: -17.752166748046875

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22607292234897614
    2. 'dp' → logprob: -1.601072907447815
    3. ' dp' → logprob: -7.476072788238525
    4. '	dp' → logprob: -10.101073265075684
    5. 'd' → logprob: -10.851073265075684
    6. '    
' → logprob: -11.726073265075684
    7. '
' → logprob: -12.101073265075684
    8. '```' → logprob: -12.476073265075684
    9. '  ' → logprob: -12.851073265075684
    10. '_dp' → logprob: -12.851073265075684

Token 528: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00014811802248004824
    2. 'd' → logprob: -10.000147819519043
    3. '   ' → logprob: -10.125147819519043
    4. 'f' → logprob: -10.125147819519043
    5. 'res' → logprob: -12.125147819519043
    6. ' dp' → logprob: -12.375147819519043
    7. 'result' → logprob: -12.750147819519043
    8. 'ways' → logprob: -12.875147819519043
    9. 'ans' → logprob: -13.375147819519043
    10. '	dp' → logprob: -14.250147819519043

Token 529: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028086788952350616
    2. '=' → logprob: -5.877808570861816
    3. '[' → logprob: -13.502808570861816
    4. ' =[' → logprob: -13.502808570861816
    5. '=[' → logprob: -14.627808570861816
    6. ' ' → logprob: -15.002808570861816
    7. ',' → logprob: -15.377808570861816
    8. ')' → logprob: -16.502809524536133
    9. '   ' → logprob: -17.002809524536133
    10. ']' → logprob: -17.752809524536133

Token 530: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.448370838072151e-05
    2. '[n' → logprob: -10.125094413757324
    3. '[r' → logprob: -10.125094413757324
    4. ' [' → logprob: -11.250094413757324
    5. '[-' → logprob: -13.875094413757324
    6. '[m' → logprob: -15.500094413757324
    7. '[i' → logprob: -17.50009536743164
    8. '[len' → logprob: -18.00009536743164
    9. '[num' → logprob: -18.00009536743164
    10. '[int' → logprob: -18.00009536743164

Token 531: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023246875032782555
    2. '1' → logprob: -3.7732467651367188
    3. '[' → logprob: -14.898246765136719
    4. '(' → logprob: -15.023246765136719
    5. ' ' → logprob: -15.273246765136719
    6. ']' → logprob: -15.835746765136719
    7. '```' → logprob: -16.58574676513672
    8. '۰' → logprob: -16.89824676513672
    9. '"' → logprob: -17.39824676513672
    10. '-' → logprob: -17.58574676513672

Token 532: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017147827020380646
    2. ' ]' → logprob: -9.500171661376953
    3. ']+' → logprob: -9.625171661376953
    4. ']*' → logprob: -11.000171661376953
    5. ',' → logprob: -11.875171661376953
    6. ']*(' → logprob: -12.875171661376953
    7. ' for' → logprob: -13.250171661376953
    8. ')' → logprob: -13.750171661376953
    9. 'for' → logprob: -14.625171661376953
    10. ']
' → logprob: -15.000171661376953

Token 533: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2352354526519775
    2. '
' → logprob: -1.3602354526519775
    3. ' +' → logprob: -1.3602354526519775
    4. ' *' → logprob: -2.8602354526519775
    5. 'for' → logprob: -3.2352354526519775
    6. ']' → logprob: -3.3602354526519775
    7. ' for' → logprob: -3.4852354526519775
    8. '*' → logprob: -3.8602354526519775
    9. ' ' → logprob: -5.735235214233398
    10. ')' → logprob: -6.235235214233398

Token 534: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20297464728355408
    2. '(n' → logprob: -1.7029746770858765
    3. ' (' → logprob: -6.702974796295166
    4. '(' → logprob: -8.827974319458008
    5. ' n' → logprob: -8.827974319458008
    6. '   ' → logprob: -11.577974319458008
    7. '
' → logprob: -11.952974319458008
    8. '_n' → logprob: -12.327974319458008
    9. '(
' → logprob: -13.077974319458008
    10. '[n' → logprob: -13.140474319458008

Token 535: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009613470174372196
    2. '   ' → logprob: -4.884613513946533
    3. '    
' → logprob: -6.759613513946533
    4. ' 
' → logprob: -8.134613037109375
    5. ' for' → logprob: -8.509613037109375
    6. 'for' → logprob: -9.009613037109375
    7. '	
' → logprob: -9.509613037109375
    8. '  
' → logprob: -9.759613037109375
    9. '
' → logprob: -10.009613037109375
    10. '   
' → logprob: -10.384613037109375

Token 536: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018946953117847443
    2. '   ' → logprob: -4.143947124481201
    3. '    
' → logprob: -6.518947124481201
    4. 'for' → logprob: -7.518947124481201
    5. ' 
' → logprob: -7.893947124481201
    6. ' for' → logprob: -8.768946647644043
    7. '  
' → logprob: -8.893946647644043
    8. '   
' → logprob: -9.143946647644043
    9. '	
' → logprob: -10.018946647644043
    10. '
' → logprob: -10.268946647644043

Token 537: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20198751986026764
    2. '
' → logprob: -2.3269875049591064
    3. '   ' → logprob: -3.3269875049591064
    4. ' for' → logprob: -3.3269875049591064
    5. 'n' → logprob: -5.5769877433776855
    6. '1' → logprob: -5.7019877433776855
    7. ')' → logprob: -6.0769877433776855
    8. '    
' → logprob: -6.8269877433776855
    9. '0' → logprob: -7.7019877433776855
    10. '\n' → logprob: -7.8269877433776855

Token 538: 'isation' (ID: 6993)
  Prédit: 'ized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.9171909093856812
    2. 'e' → logprob: -1.1671909093856812
    3. '_' → logprob: -2.2921910285949707
    4. 'ization' → logprob: -2.4171910285949707
    5. '   ' → logprob: -3.6671910285949707
    6. '[' → logprob: -3.6671910285949707
    7. 'i' → logprob: -4.292191028594971
    8. 'isé' → logprob: -4.792191028594971
    9. 'dp' → logprob: -5.167191028594971
    10. 'ize' → logprob: -5.667191028594971

Token 539: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003951236605644226
    2. '   ' → logprob: -6.253951072692871
    3. '    
' → logprob: -6.628951072692871
    4. '  
' → logprob: -8.378951072692871
    5. '
' → logprob: -9.128951072692871
    6. ' 
' → logprob: -9.128951072692871
    7. '<|end|>' → logprob: -9.128951072692871
    8. '   
' → logprob: -10.378951072692871
    9. '	
' → logprob: -10.503951072692871
    10. '\n' → logprob: -10.878951072692871

Token 540: ' il' (ID: 1793)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.458876371383667
    2. ' for' → logprob: -2.208876371383667
    3. '   ' → logprob: -2.333876371383667
    4. '1' → logprob: -2.458876371383667
    5. '0' → logprob: -4.083876609802246
    6. '
' → logprob: -4.333876609802246
    7. ')' → logprob: -4.458876609802246
    8. 'dp' → logprob: -4.458876609802246
    9. 'n' → logprob: -5.208876609802246
    10. ' ' → logprob: -5.333876609802246

Token 541: ' y' (ID: 342)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.147966742515564
    2. '[' → logprob: -1.397966742515564
    3. 'n' → logprob: -1.522966742515564
    4. 's' → logprob: -2.3979668617248535
    5. '[i' → logprob: -3.5229668617248535
    6. 'nd' → logprob: -4.2729668617248535
    7. '[n' → logprob: -4.3979668617248535
    8. ' s' → logprob: -4.6479668617248535
    9. ']' → logprob: -4.6479668617248535
    10. 'e' → logprob: -5.0229668617248535

Token 542: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23606812953948975
    2. ' a' → logprob: -1.7360681295394897
    3. 's' → logprob: -3.4860682487487793
    4. ''a' → logprob: -6.736068248748779
    5. 'avait' → logprob: -6.736068248748779
    6. ' ' → logprob: -8.486067771911621
    7. 'n' → logprob: -8.986067771911621
    8. 'f' → logprob: -9.236067771911621
    9. '[a' → logprob: -9.361067771911621
    10. 'ai' → logprob: -9.861067771911621

Token 543: ' au' (ID: 2791)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1511828452348709
    2. ' ' → logprob: -2.2761828899383545
    3. ' une' → logprob: -4.651182651519775
    4. 'n' → logprob: -4.776182651519775
    5. 'au' → logprob: -5.151182651519775
    6. ' au' → logprob: -5.276182651519775
    7. ' toujours' → logprob: -5.901182651519775
    8. ' un' → logprob: -6.151182651519775
    9. ' n' → logprob: -6.651182651519775
    10. '   ' → logprob: -7.026182651519775

Token 544: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.005446246825158596
    2. '   ' → logprob: -5.755446434020996
    3. 'mo' → logprob: -7.380446434020996
    4. ' moins' → logprob: -7.505446434020996
    5. 'm' → logprob: -7.755446434020996
    6. '```' → logprob: -8.255446434020996
    7. '  ' → logprob: -9.380446434020996
    8. '-' → logprob: -9.630446434020996
    9. 'minimum' → logprob: -9.755446434020996
    10. '1' → logprob: -10.380446434020996

Token 545: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.26276540756225586
    2. '1' → logprob: -2.262765407562256
    3. ' une' → logprob: -2.262765407562256
    4. 'un' → logprob: -4.137765407562256
    5. '   ' → logprob: -6.137765407562256
    6. ' ' → logprob: -6.262765407562256
    7. ''une' → logprob: -6.637765407562256
    8. 'au' → logprob: -7.387765407562256
    9. ' un' → logprob: -7.637765407562256
    10. ''un' → logprob: -9.262765884399414

Token 546: ' façon' (ID: 33381)
  Prédit: ' façon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façon' → logprob: -0.3555653393268585
    2. 'fa' → logprob: -1.8555653095245361
    3. ' manière' → logprob: -2.480565309524536
    4. 'way' → logprob: -3.855565309524536
    5. 'man' → logprob: -4.730565547943115
    6. 'fois' → logprob: -4.730565547943115
    7. '   ' → logprob: -5.230565547943115
    8. ' way' → logprob: -5.980565547943115
    9. ' possibilité' → logprob: -6.105565547943115
    10. ' façons' → logprob: -6.480565547943115

Token 547: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02239242009818554
    2. 'for' → logprob: -4.897392272949219
    3. ' for' → logprob: -4.897392272949219
    4. '<|end|>' → logprob: -5.772392272949219
    5. '    
' → logprob: -6.647392272949219
    6. '
' → logprob: -6.772392272949219
    7. '[' → logprob: -7.522392272949219
    8. '<|end|>' → logprob: -8.272392272949219
    9. ')' → logprob: -8.397392272949219
    10. '  ' → logprob: -9.022392272949219

Token 548: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9806054830551147
    2. '0' → logprob: -1.1056054830551147
    3. ' chaque' → logprob: -1.9806054830551147
    4. ' i' → logprob: -2.3556056022644043
    5. 'each' → logprob: -4.230605602264404
    6. ' ' → logprob: -4.230605602264404
    7. ' la' → logprob: -4.855605602264404
    8. ' each' → logprob: -5.480605602264404
    9. 'l' → logprob: -5.980605602264404
    10. '_' → logprob: -6.105605602264404

Token 549: ' élément' (ID: 99627)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.7574793696403503
    2. 'i' → logprob: -1.0074794292449951
    3. ' position' → logprob: -2.382479429244995
    4. ' i' → logprob: -2.757479429244995
    5. 'pos' → logprob: -6.382479190826416
    6. '   ' → logprob: -6.507479190826416
    7. 'indice' → logprob: -6.757479190826416
    8. '[' → logprob: -6.882479190826416
    9. '_' → logprob: -7.132479190826416
    10. ' ' → logprob: -7.382479190826416

Token 550: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0043557025492191315
    2. '   ' → logprob: -5.6293559074401855
    3. '    
' → logprob: -7.7543559074401855
    4. '  
' → logprob: -9.129355430603027
    5. ' 
' → logprob: -9.629355430603027
    6. '
' → logprob: -9.629355430603027
    7. 'for' → logprob: -10.629355430603027
    8. ' for' → logprob: -11.379355430603027
    9. '   
' → logprob: -11.379355430603027
    10. '\n' → logprob: -11.629355430603027

Token 551: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024620767682790756
    2. 'for' → logprob: -5.024620532989502
    3. ' for' → logprob: -5.274620532989502
    4. '   ' → logprob: -5.399620532989502
    5. ' 
' → logprob: -5.524620532989502
    6. '    
' → logprob: -6.149620532989502
    7. '  
' → logprob: -6.899620532989502
    8. '
' → logprob: -8.77462100982666
    9. '\n' → logprob: -9.02462100982666
    10. '[' → logprob: -9.27462100982666

Token 552: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017147827020380646
    2. ' for' → logprob: -8.750171661376953
    3. '   ' → logprob: -11.375171661376953
    4. 'i' → logprob: -13.625171661376953
    5. '	for' → logprob: -15.875171661376953
    6. '```' → logprob: -16.375171661376953
    7. ')' → logprob: -18.125171661376953
    8. '[' → logprob: -18.250171661376953
    9. '
' → logprob: -18.375171661376953
    10. '_' → logprob: -18.625171661376953

Token 553: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03139853850007057
    2. 'for' → logprob: -4.281398773193359
    3. '.append' → logprob: -5.406398773193359
    4. '=' → logprob: -5.406398773193359
    5. ' =' → logprob: -5.781398773193359
    6. '_' → logprob: -7.156398773193359
    7. '0' → logprob: -7.406398773193359
    8. '.' → logprob: -7.906398773193359
    9. 'def' → logprob: -8.03139877319336
    10. 's' → logprob: -8.15639877319336

Token 554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462771812453866
    2. '1' → logprob: -5.379627704620361
    3. ' ' → logprob: -12.25462818145752
    4. '=' → logprob: -13.50462818145752
    5. '   ' → logprob: -15.00462818145752
    6. '-' → logprob: -15.37962818145752
    7. ' =' → logprob: -15.37962818145752
    8. ']' → logprob: -15.94212818145752
    9. 'i' → logprob: -15.94212818145752
    10. ':' → logprob: -16.379627227783203

Token 555: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002765902318060398
    2. ' ]' → logprob: -8.375276565551758
    3. ']=' → logprob: -10.125276565551758
    4. ')' → logprob: -12.625276565551758
    5. '=' → logprob: -13.625276565551758
    6. ']+=' → logprob: -14.250276565551758
    7. '[' → logprob: -15.500276565551758
    8. ']
' → logprob: -15.500276565551758
    9. ',' → logprob: -16.375276565551758
    10. ' =' → logprob: -16.375276565551758

Token 556: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011171492747962475
    2. ' =' → logprob: -4.511171340942383
    3. ',' → logprob: -9.261171340942383
    4. '%=' → logprob: -11.636171340942383
    5. ')' → logprob: -12.011171340942383
    6. ')=' → logprob: -12.011171340942383
    7. ' %=' → logprob: -13.261171340942383
    8. '=
' → logprob: -13.511171340942383
    9. ']=' → logprob: -13.886171340942383
    10. ']' → logprob: -14.386171340942383

Token 557: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -17.5
    4. '   ' → logprob: -19.0625
    5. '۱' → logprob: -19.8125
    6. '2' → logprob: -20.0625
    7. '```' → logprob: -20.875
    8. '[' → logprob: -21.0
    9. '' → logprob: -21.0625
    10. '১' → logprob: -21.4375

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '0' → logprob: -15.500000953674316
    4. '2' → logprob: -18.875
    5. '[' → logprob: -19.75
    6. '(' → logprob: -19.9375
    7. '۱' → logprob: -20.0
    8. '   ' → logprob: -20.0625
    9. 'mod' → logprob: -20.1875
    10. '' → logprob: -20.375

Token 559: '    ' (ID: 257)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0009888652712106705
    2. '   ' → logprob: -7.875988960266113
    3. '    
' → logprob: -8.375988960266113
    4. 'for' → logprob: -9.000988960266113
    5. '  
' → logprob: -9.375988960266113
    6. ' for' → logprob: -10.000988960266113
    7. '
' → logprob: -10.125988960266113
    8. '<|end|>' → logprob: -10.625988960266113
    9. ' 
' → logprob: -10.750988960266113
    10. '\n' → logprob: -10.875988960266113

Token 560: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0023643479216843843
    2. '<|end|>' → logprob: -6.627364158630371
    3. '   ' → logprob: -7.502364158630371
    4. 'for' → logprob: -8.877364158630371
    5. '    
' → logprob: -9.252364158630371
    6. ' 
' → logprob: -9.502364158630371
    7. '  
' → logprob: -10.127364158630371
    8. '
' → logprob: -10.502364158630371
    9. ' for' → logprob: -10.502364158630371
    10. '<|end|>' → logprob: -10.627364158630371

Token 561: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04931953176856041
    2. ' for' → logprob: -3.0493195056915283
    3. '   ' → logprob: -8.29931926727295
    4. '<|end|>' → logprob: -8.29931926727295
    5. '0' → logprob: -9.17431926727295
    6. '
' → logprob: -9.92431926727295
    7. '1' → logprob: -10.42431926727295
    8. ' ' → logprob: -11.29931926727295
    9. ')' → logprob: -11.54931926727295
    10. '	for' → logprob: -12.04931926727295

Token 562: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.02803344465792179
    2. ' première' → logprob: -3.653033494949341
    3. ' premiere' → logprob: -7.653033256530762
    4. ' premier' → logprob: -8.653033256530762
    5. '0' → logprob: -9.153033256530762
    6. 'first' → logprob: -9.153033256530762
    7. 'base' → logprob: -9.153033256530762
    8. 'dé' → logprob: -9.403033256530762
    9. ' premi' → logprob: -9.528033256530762
    10. 'pr' → logprob: -9.778033256530762

Token 563: ' case' (ID: 1890)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 565: ' toujours' (ID: 16867)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.253787636756897
    2. 'égal' → logprob: -1.878787636756897
    3. 'fix' → logprob: -3.7537875175476074
    4. 'dé' → logprob: -4.253787517547607
    5. 'tou' → logprob: -4.878787517547607
    6. ' toujours' → logprob: -5.253787517547607
    7. ' fix' → logprob: -5.378787517547607
    8. ' ' → logprob: -5.753787517547607
    9. 'for' → logprob: -6.003787517547607
    10. 'exact' → logprob: -6.753787517547607

Token 566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020880463998764753
    2. ' ' → logprob: -6.3770880699157715
    3. 'valid' → logprob: -9.002087593078613
    4. 'égal' → logprob: -9.502087593078613
    5. 'fix' → logprob: -10.377087593078613
    6. 'dé' → logprob: -10.377087593078613
    7. 'à' → logprob: -10.627087593078613
    8. ' valid' → logprob: -11.252087593078613
    9. 'correct' → logprob: -11.252087593078613
    10. '=' → logprob: -11.377087593078613

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.470901229884475e-05
    2. 'valid' → logprob: -9.75008487701416
    3. ' ' → logprob: -11.87508487701416
    4. 'égal' → logprob: -12.25008487701416
    5. 'correct' → logprob: -12.75008487701416
    6. 'fix' → logprob: -12.87508487701416
    7. 'initial' → logprob: -13.37508487701416
    8. 'val' → logprob: -13.50008487701416
    9. 'dé' → logprob: -13.62508487701416
    10. 'exact' → logprob: -13.75008487701416

Token 568: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.000680861237924546
    2. '   ' → logprob: -8.375680923461914
    3. '    
' → logprob: -8.750680923461914
    4. '\n' → logprob: -9.625680923461914
    5. ' 
' → logprob: -9.625680923461914
    6. '
' → logprob: -10.000680923461914
    7. ' for' → logprob: -10.375680923461914
    8. '  
' → logprob: -10.750680923461914
    9. 'for' → logprob: -10.750680923461914
    10. '' → logprob: -11.250680923461914

Token 569: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003007415682077408
    2. '  
' → logprob: -7.128007411956787
    3. '\n' → logprob: -7.378007411956787
    4. '    
' → logprob: -8.003007888793945
    5. '<|end|>' → logprob: -8.003007888793945
    6. ' 
' → logprob: -8.253007888793945
    7. ' for' → logprob: -8.628007888793945
    8. '
' → logprob: -9.003007888793945
    9. 'for' → logprob: -9.128007888793945
    10. '   ' → logprob: -9.253007888793945

Token 570: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21174128353595734
    2. ' for' → logprob: -1.711741328239441
    3. '
' → logprob: -4.5867414474487305
    4. '   ' → logprob: -10.33674144744873
    5. ' 
' → logprob: -10.46174144744873
    6. '    
' → logprob: -11.33674144744873
    7. '	for' → logprob: -11.71174144744873
    8. '\n' → logprob: -12.96174144744873
    9. 'if' → logprob: -14.08674144744873
    10. '  
' → logprob: -14.21174144744873

Token 571: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06994432210922241
    2. 'i' → logprob: -2.694944381713867
    3. '   ' → logprob: -12.569944381713867
    4. '	i' → logprob: -12.694944381713867
    5. ' ' → logprob: -14.694944381713867
    6. ' ' → logprob: -14.944944381713867
    7. '_i' → logprob: -15.944944381713867
    8. '  ' → logprob: -16.444944381713867
    9. '    ' → logprob: -16.694944381713867
    10. '`' → logprob: -16.757444381713867

Token 572: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018158841878175735
    2. 'in' → logprob: -4.018158912658691
    3. ' ' → logprob: -12.268158912658691
    4. '	in' → logprob: -13.768158912658691
    5. ',' → logprob: -14.018158912658691
    6. ' i' → logprob: -14.393158912658691
    7. '1' → logprob: -14.393158912658691
    8. 'i' → logprob: -15.018158912658691
    9. '_in' → logprob: -16.393157958984375
    10. 'In' → logprob: -16.768157958984375

Token 573: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759887099266052
    2. 'range' → logprob: -0.8259887099266052
    3. '1' → logprob: -10.07598876953125
    4. ' in' → logprob: -12.57598876953125
    5. ' ' → logprob: -13.07598876953125
    6. '(range' → logprob: -14.20098876953125
    7. 'in' → logprob: -14.20098876953125
    8. '   ' → logprob: -15.45098876953125
    9. '	range' → logprob: -16.95098876953125
    10. '2' → logprob: -18.45098876953125

Token 574: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003812217037193477
    2. '(' → logprob: -7.875380992889404
    3. ' ' → logprob: -14.000381469726562
    4. '   ' → logprob: -15.500381469726562
    5. ',' → logprob: -18.000381469726562
    6. '
' → logprob: -19.375381469726562
    7. ' (' → logprob: -19.750381469726562
    8. '[' → logprob: -19.875381469726562
    9. '=' → logprob: -20.625381469726562
    10. '```' → logprob: -21.250381469726562

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -19.0
    4. '(' → logprob: -20.5
    5. '１' → logprob: -22.75
    6. '2' → logprob: -22.875
    7. '۱' → logprob: -23.25
    8. '```' → logprob: -23.375
    9. '  ' → logprob: -24.125
    10. '0' → logprob: -24.125

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017168942838907242
    2. ',n' → logprob: -4.517168998718262
    3. '):' → logprob: -5.267168998718262
    4. ' ,' → logprob: -7.767168998718262
    5. 'n' → logprob: -8.892168998718262
    6. ',len' → logprob: -9.017168998718262
    7. ')' → logprob: -9.767168998718262
    8. '(n' → logprob: -10.017168998718262
    9. ' ):' → logprob: -10.267168998718262
    10. ':' → logprob: -10.642168998718262

Token 577: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005530327325686812
    2. ' n' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.250553131103516
    4. ')n' → logprob: -18.500553131103516
    5. 'len' → logprob: -18.625553131103516
    6. '	n' → logprob: -19.000553131103516
    7. ')' → logprob: -19.750553131103516
    8. 'i' → logprob: -21.375553131103516
    9. '_n' → logprob: -21.500553131103516
    10. ' len' → logprob: -21.875553131103516

Token 578: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47715097665786743
    2. '):
' → logprob: -0.9771509766578674
    3. ':' → logprob: -5.852150917053223
    4. '   ' → logprob: -9.477150917053223
    5. ')' → logprob: -10.602150917053223
    6. ' ):' → logprob: -10.602150917053223
    7. '):
' → logprob: -10.852150917053223
    8. '+' → logprob: -11.102150917053223
    9. ':
' → logprob: -11.727150917053223
    10. ' ):
' → logprob: -11.977150917053223

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017762075876817107
    2. ' if' → logprob: -7.001776218414307
    3. '   ' → logprob: -7.376776218414307
    4. 'if' → logprob: -8.876775741577148
    5. 'dp' → logprob: -10.376775741577148
    6. '```' → logprob: -10.626775741577148
    7. ' dp' → logprob: -10.876775741577148
    8. '[' → logprob: -11.876775741577148
    9. ',' → logprob: -12.126775741577148
    10. '    ' → logprob: -12.876775741577148

Token 580: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.054500666621607e-06
    2. 'if' (adapté à ' if') → logprob: -13.00000286102295
    3. ' dp' → logprob: -14.25000286102295
    4. '   ' → logprob: -17.375003814697266
    5. '       ' → logprob: -17.750003814697266
    6. '	dp' → logprob: -18.000003814697266
    7. '_dp' → logprob: -19.500003814697266
    8. 'd' → logprob: -19.625003814697266
    9. '(dp' → logprob: -19.750003814697266
    10. '
' → logprob: -20.375003814697266

Token 581: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.842555426876061e-06
    2. ' r' → logprob: -12.875004768371582
    3. '   ' → logprob: -13.250004768371582
    4. 'i' → logprob: -15.375004768371582
    5. '(r' → logprob: -15.750004768371582
    6. '       ' → logprob: -17.5000057220459
    7. '     ' → logprob: -17.7500057220459
    8. '	r' → logprob: -17.8750057220459
    9. '    ' → logprob: -18.1250057220459
    10. '           ' → logprob: -18.5000057220459

Token 582: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.375000953674316
    3. '[' → logprob: -15.000000953674316
    4. ')' → logprob: -18.000001907348633
    5. ' [' → logprob: -18.000001907348633
    6. '[
' → logprob: -18.125001907348633
    7. ' i' → logprob: -18.625001907348633
    8. '[I' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '(i' → logprob: -19.875001907348633

Token 583: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2925576865673065
    2. ' ==' → logprob: -2.292557716369629
    3. '!=' → logprob: -2.292557716369629
    4. '==-' → logprob: -3.542557716369629
    5. ' !=' → logprob: -4.667557716369629
    6. ']' → logprob: -5.292557716369629
    7. '!=-' → logprob: -5.917557716369629
    8. ')' → logprob: -6.042557716369629
    9. ']==' → logprob: -6.292557716369629
    10. '>' → logprob: -7.792557716369629

Token 584: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07374492287635803
    2. '!=' → logprob: -3.073745012283325
    3. '==-' → logprob: -4.198744773864746
    4. ' ==' → logprob: -5.198744773864746
    5. '<=' → logprob: -6.573744773864746
    6. '<' → logprob: -6.573744773864746
    7. '>=' → logprob: -7.073744773864746
    8. '!=-' → logprob: -7.948744773864746
    9. ' !=' → logprob: -8.573744773864746
    10. '>' → logprob: -9.448744773864746

Token 585: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47432297468185425
    2. '-' → logprob: -0.9743229746818542
    3. ' -' → logprob: -9.099323272705078
    4. ' i' → logprob: -9.849323272705078
    5. '(i' → logprob: -10.224323272705078
    6. '-i' → logprob: -10.224323272705078
    7. '   ' → logprob: -12.599323272705078
    8. '	i' → logprob: -13.474323272705078
    9. '[i' → logprob: -13.849323272705078
    10. ' ' → logprob: -14.474323272705078

Token 586: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. 'i' → logprob: -19.125
    4. '   ' → logprob: -20.25
    5. '۱' → logprob: -21.75
    6. '１' → logprob: -21.875
    7. '১' → logprob: -22.0625
    8. '```' → logprob: -22.0625
    9. '(i' → logprob: -22.125
    10. '१' → logprob: -22.25

Token 587: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6126651167869568
    2. ' or' → logprob: -1.3626651763916016
    3. ':
' → logprob: -1.6126651763916016
    4. 'or' → logprob: -6.112665176391602
    5. '       ' → logprob: -8.487665176391602
    6. '):
' → logprob: -8.987665176391602
    7. ')' → logprob: -9.112665176391602
    8. ',' → logprob: -11.112665176391602
    9. '	or' → logprob: -11.237665176391602
    10. '):' → logprob: -11.362665176391602

Token 588: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27581334114074707
    2. ':
' → logprob: -2.150813341140747
    3. ' or' → logprob: -2.275813341140747
    4. 'dp' → logprob: -4.525813102722168
    5. '       ' → logprob: -5.025813102722168
    6. '):
' → logprob: -6.650813102722168
    7. 'or' → logprob: -6.650813102722168
    8. ' dp' → logprob: -7.775813102722168
    9. '(dp' → logprob: -7.900813102722168
    10. '):' → logprob: -8.400813102722168

Token 589: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.047134305234067e-05
    2. ' dp' → logprob: -10.500030517578125
    3. '       ' → logprob: -13.000030517578125
    4. '           ' → logprob: -14.625030517578125
    5. '	dp' → logprob: -15.500030517578125
    6. '_dp' → logprob: -17.625030517578125
    7. '(dp' → logprob: -17.875030517578125
    8. 'd' → logprob: -19.125030517578125
    9. '   ' → logprob: -19.125030517578125
    10. '=' → logprob: -19.625030517578125

Token 590: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.551721889991313e-05
    2. ' dp' → logprob: -10.000065803527832
    3. '       ' → logprob: -11.125065803527832
    4. '	dp' → logprob: -12.625065803527832
    5. '           ' → logprob: -13.750065803527832
    6. '_dp' → logprob: -14.500065803527832
    7. 'continue' → logprob: -15.875065803527832
    8. '(dp' → logprob: -16.000064849853516
    9. '```' → logprob: -17.000064849853516
    10. 'd' → logprob: -17.375064849853516

Token 591: ' aucune' (ID: 51173)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012883244082331657
    2. ' dp' → logprob: -4.387883186340332
    3. 'r' → logprob: -8.637883186340332
    4. 'i' → logprob: -9.637883186340332
    5. '   ' → logprob: -10.012883186340332
    6. '(dp' → logprob: -10.387883186340332
    7. '	dp' → logprob: -11.262883186340332
    8. '    ' → logprob: -11.887883186340332
    9. '       ' → logprob: -12.262883186340332
    10. ' i' → logprob: -12.262883186340332

Token 592: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.2838563323020935
    2. 'occur' → logprob: -2.2838563919067383
    3. ' précédente' → logprob: -2.9088563919067383
    4. 'ancienne' → logprob: -3.4088563919067383
    5. 'oc' → logprob: -4.283856391906738
    6. 'mod' → logprob: -4.658856391906738
    7. ' occurrence' → logprob: -5.283856391906738
    8. 'val' → logprob: -5.408856391906738
    9. 'previous' → logprob: -5.533856391906738
    10. '   ' → logprob: -5.908856391906738

Token 593: ' précédente' (ID: 177319)
  Prédit: ' précédente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédente' → logprob: -0.6285726428031921
    2. 'pr' → logprob: -1.503572702407837
    3. 'previous' → logprob: -1.628572702407837
    4. '   ' → logprob: -4.378572463989258
    5. 'prev' → logprob: -4.628572463989258
    6. ' previous' → logprob: -5.503572463989258
    7. '_previous' → logprob: -6.128572463989258
    8. 'preced' → logprob: -6.253572463989258
    9. ' precedente' → logprob: -6.503572463989258
    10. 'ancienne' → logprob: -6.503572463989258

Token 594: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1246873289346695
    2. ',' → logprob: -3.249687433242798
    3. '       ' → logprob: -3.374687433242798
    4. ':
' → logprob: -3.499687433242798
    5. ' or' → logprob: -5.749687194824219
    6. '[' → logprob: -5.874687194824219
    7. '=' → logprob: -6.249687194824219
    8. '   ' → logprob: -6.249687194824219
    9. '           ' → logprob: -6.749687194824219
    10. '):' → logprob: -7.749687194824219

Token 595: ' même' (ID: 9679)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.4259644558478612e-05
    2. ' dp' → logprob: -11.250014305114746
    3. '       ' → logprob: -14.000014305114746
    4. '   ' → logprob: -15.125014305114746
    5. '	dp' → logprob: -16.37501335144043
    6. '           ' → logprob: -16.75001335144043
    7. 'd' → logprob: -19.62501335144043
    8. '#' → logprob: -19.75001335144043
    9. '_dp' → logprob: -20.12501335144043
    10. '(dp' → logprob: -20.25001335144043

Token 596: ' valeur' (ID: 41664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030793137848377228
    2. ' dp' → logprob: -3.5307931900024414
    3. '   ' → logprob: -7.405793190002441
    4. 'pas' → logprob: -8.905793190002441
    5. 'value' → logprob: -9.405793190002441
    6. 'pass' → logprob: -10.030793190002441
    7. 'token' → logprob: -10.405793190002441
    8. '(dp' → logprob: -10.655793190002441
    9. 'val' → logprob: -11.030793190002441
    10. '_dp' → logprob: -11.155793190002441

Token 597: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9169880151748657
    2. ':' → logprob: -1.5419880151748657
    3. ':
' → logprob: -1.6669880151748657
    4. 'dp' → logprob: -2.166987895965576
    5. ',' → logprob: -2.916987895965576
    6. '           ' → logprob: -4.541987895965576
    7. '=' → logprob: -5.041987895965576
    8. ' dp' → logprob: -6.166987895965576
    9. '(dp' → logprob: -6.291987895965576
    10. ' or' → logprob: -6.416987895965576

Token 598: ' dp' (ID: 21546)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5660913586616516
    2. 'dp' → logprob: -2.316091299057007
    3. 'i' → logprob: -2.566091299057007
    4. 'l' → logprob: -2.566091299057007
    5. 'pas' → logprob: -3.066091299057007
    6. 'à' → logprob: -3.566091299057007
    7. 'le' → logprob: -3.816091299057007
    8. 'celle' → logprob: -3.941091299057007
    9. 'au' → logprob: -4.441091537475586
    10. 'auc' → logprob: -4.691091537475586

Token 599: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001439459010725841
    2. 'dp' → logprob: -9.250144004821777
    3. '[' → logprob: -10.875144004821777
    4. 'i' → logprob: -11.625144004821777
    5. '   ' → logprob: -12.125144004821777
    6. '       ' → logprob: -12.250144004821777
    7. ' [' → logprob: -12.625144004821777
    8. ' dp' → logprob: -13.250144004821777
    9. ' i' → logprob: -13.750144004821777
    10. 's' → logprob: -13.875144004821777

Token 600: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7286840081214905
    2. ']' → logprob: -0.7286840081214905
    3. '[i' → logprob: -3.8536839485168457
    4. '[' → logprob: -5.478683948516846
    5. ' ]' → logprob: -5.728683948516846
    6. ' -' → logprob: -5.978683948516846
    7. '],' → logprob: -6.353683948516846
    8. '   ' → logprob: -7.228683948516846
    9. '[-' → logprob: -7.978683948516846
    10. ' ' → logprob: -8.853684425354004

Token 601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. ' ' → logprob: -11.375038146972656
    3. ']' → logprob: -11.875038146972656
    4. 'i' → logprob: -12.250038146972656
    5. '   ' → logprob: -12.312538146972656
    6. '-' → logprob: -13.125038146972656
    7. '2' → logprob: -13.375038146972656
    8. '```' → logprob: -13.687538146972656
    9. '0' → logprob: -13.875038146972656
    10. '`' → logprob: -15.312538146972656

Token 602: ']
' (ID: 1592)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4349101185798645
    2. ']' → logprob: -1.4349100589752197
    3. ']:
' → logprob: -2.8099100589752197
    4. ']:' → logprob: -3.4349100589752197
    5. '       ' → logprob: -4.434910297393799
    6. '],
' → logprob: -6.309910297393799
    7. ']
' → logprob: -6.434910297393799
    8. ' ],' → logprob: -6.684910297393799
    9. '           ' → logprob: -6.809910297393799
    10. ',' → logprob: -6.809910297393799

Token 603: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5952044725418091
    2. ':' → logprob: -1.345204472541809
    3. '       ' → logprob: -1.720204472541809
    4. 'dp' → logprob: -5.7202043533325195
    5. ',' → logprob: -5.8452043533325195
    6. '):
' → logprob: -6.9702043533325195
    7. ' dp' → logprob: -7.8452043533325195
    8. '=' → logprob: -8.09520435333252
    9. '   ' → logprob: -8.34520435333252
    10. '           ' → logprob: -8.47020435333252

Token 604: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.000612359493970871
    2. ' dp' → logprob: -7.500612258911133
    3. '       ' → logprob: -9.750612258911133
    4. '	dp' → logprob: -14.375612258911133
    5. '           ' → logprob: -15.250612258911133
    6. '   ' → logprob: -15.375612258911133
    7. '_dp' → logprob: -17.125612258911133
    8. '(dp' → logprob: -17.125612258911133
    9. 'd' → logprob: -18.750612258911133
    10. '
' → logprob: -19.500612258911133

Token 605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.596781946020201e-05
    2. '[' → logprob: -10.000045776367188
    3. 'i' → logprob: -15.000045776367188
    4. '[I' → logprob: -15.625045776367188
    5. ' [' → logprob: -17.250045776367188
    6. '=' → logprob: -18.125045776367188
    7. '[
' → logprob: -18.250045776367188
    8. '[j' → logprob: -18.375045776367188
    9. '   ' → logprob: -18.750045776367188
    10. '[u' → logprob: -19.000045776367188

Token 606: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03563803434371948
    2. ' =' → logprob: -3.4106380939483643
    3. ']' → logprob: -6.285637855529785
    4. ']=' → logprob: -9.035637855529785
    5. '   ' → logprob: -12.535637855529785
    6. '[' → logprob: -13.785637855529785
    7. ')' → logprob: -13.910637855529785
    8. ' ]' → logprob: -14.285637855529785
    9. ',' → logprob: -14.410637855529785
    10. ' ' → logprob: -14.535637855529785

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005541055579669774
    2. ' =' → logprob: -7.500554084777832
    3. '+=' → logprob: -13.750554084777832
    4. '.=' → logprob: -18.37555503845215
    5. ' +=' → logprob: -18.50055503845215
    6. '=

' → logprob: -19.25055503845215
    7. '%=' → logprob: -20.12555503845215
    8. '   ' → logprob: -20.25055503845215
    9. '=
' → logprob: -20.75055503845215
    10. '＝' → logprob: -21.37555503845215

Token 608: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.088346359931165e-07
    2. ' dp' → logprob: -14.375000953674316
    3. '(dp' → logprob: -15.125000953674316
    4. '	dp' → logprob: -18.25
    5. '   ' → logprob: -19.5
    6. 'd' → logprob: -19.625
    7. '(' → logprob: -21.125
    8. '_dp' → logprob: -21.375
    9. '1' → logprob: -21.625
    10. '
' → logprob: -22.75

Token 609: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.375
    3. ' [' → logprob: -19.25
    4. '[' → logprob: -20.0
    5. '   ' → logprob: -21.75
    6. '(i' → logprob: -21.875
    7. '[I' → logprob: -22.125
    8. '
' → logprob: -22.25
    9. '[
' → logprob: -22.25
    10. ' i' → logprob: -22.25

Token 610: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12699027359485626
    2. '[i' → logprob: -2.12699031829834
    3. '[-' → logprob: -10.62699031829834
    4. ' -' → logprob: -10.75199031829834
    5. 'i' → logprob: -11.25199031829834
    6. '[' → logprob: -12.87699031829834
    7. ']' → logprob: -14.87699031829834
    8. '1' → logprob: -15.37699031829834
    9. '```' → logprob: -16.001989364624023
    10. '(i' → logprob: -16.376989364624023

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '-' → logprob: -13.75000286102295
    4. 'i' → logprob: -15.50000286102295
    5. '   ' → logprob: -17.750001907348633
    6. '```' → logprob: -18.375001907348633
    7. ' -' → logprob: -19.125001907348633
    8. '[i' → logprob: -19.750001907348633
    9. '(i' → logprob: -20.187501907348633
    10. '0' → logprob: -20.375001907348633

Token 612: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029183678328990936
    2. '%' → logprob: -4.154183864593506
    3. ')' → logprob: -4.654183864593506
    4. ']%' → logprob: -6.279183864593506
    5. ' ]' → logprob: -7.154183864593506
    6. '<|end|>' → logprob: -7.654183864593506
    7. '   ' → logprob: -9.404183387756348
    8. '+' → logprob: -9.779183387756348
    9. ']+' → logprob: -9.904183387756348
    10. ' %' → logprob: -9.904183387756348

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07850633561611176
    2. 'else' → logprob: -3.0785062313079834
    3. ' else' → logprob: -4.2035064697265625
    4. 'elif' → logprob: -4.3285064697265625
    5. ' elif' → logprob: -7.4535064697265625
    6. '<|end|>' → logprob: -7.5785064697265625
    7. '   ' → logprob: -9.453506469726562
    8. ')' → logprob: -9.703506469726562
    9. '	elif' → logprob: -10.953506469726562
    10. '
' → logprob: -11.203506469726562

Token 614: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01985272392630577
    2. 'else' → logprob: -4.644852638244629
    3. '       ' → logprob: -5.144852638244629
    4. ' elif' → logprob: -5.519852638244629
    5. ' else' → logprob: -8.519852638244629
    6. '	elif' → logprob: -11.769852638244629
    7. 'elseif' → logprob: -13.519852638244629
    8. '   ' → logprob: -14.644852638244629
    9. 'elsif' → logprob: -14.894852638244629
    10. '#elif' → logprob: -15.144852638244629

Token 615: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00219735992141068
    2. ' r' → logprob: -6.127197265625
    3. 'i' → logprob: -11.877197265625
    4. '   ' → logprob: -12.377197265625
    5. '	r' → logprob: -14.752197265625
    6. ' ' → logprob: -15.502197265625
    7. ' i' → logprob: -15.877197265625
    8. '(r' → logprob: -16.002197265625
    9. ' ' → logprob: -16.002197265625
    10. '    ' → logprob: -16.752197265625

Token 616: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -12.250009536743164
    3. ' [' → logprob: -13.375009536743164
    4. '```' → logprob: -14.000009536743164
    5. 'i' → logprob: -14.250009536743164
    6. '   ' → logprob: -14.750009536743164
    7. 'import' → logprob: -16.125009536743164
    8. '(i' → logprob: -16.250009536743164
    9. '[
' → logprob: -16.375009536743164
    10. '][' → logprob: -16.625009536743164

Token 617: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20833580195903778
    2. '[i' → logprob: -1.9583357572555542
    3. ']==' → logprob: -3.9583358764648438
    4. ' ==' → logprob: -4.458335876464844
    5. '==' → logprob: -4.708335876464844
    6. '[' → logprob: -6.333335876464844
    7. ']+' → logprob: -6.708335876464844
    8. ']!=' → logprob: -7.208335876464844
    9. ' !=' → logprob: -7.333335876464844
    10. '!=' → logprob: -7.583335876464844

Token 618: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3680073320865631
    2. ' ==' → logprob: -1.2430073022842407
    3. '<' → logprob: -4.493007183074951
    4. ' <' → logprob: -5.743007183074951
    5. '!=' → logprob: -5.743007183074951
    6. ' !=' → logprob: -6.868007183074951
    7. '+' → logprob: -7.993007183074951
    8. ' ' → logprob: -9.61800765991211
    9. '>' → logprob: -9.99300765991211
    10. '   ' → logprob: -10.36800765991211

Token 619: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.375000953674316
    3. '(i' → logprob: -16.875
    4. '   ' → logprob: -18.75
    5. '[i' → logprob: -19.25
    6. '	i' → logprob: -19.875
    7. '{i' → logprob: -21.5
    8. ' ' → logprob: -22.25
    9. '=i' → logprob: -23.25
    10. '_i' → logprob: -23.25

Token 620: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015040287980809808
    2. ' -' → logprob: -6.501503944396973
    3. '1' → logprob: -13.751503944396973
    4. '   ' → logprob: -15.376503944396973
    5. ' ' → logprob: -16.00150489807129
    6. '−' → logprob: -16.37650489807129
    7. '```' → logprob: -16.50150489807129
    8. '	' → logprob: -18.25150489807129
    9. '[' → logprob: -18.50150489807129
    10. '()-' → logprob: -18.50150489807129

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.0000057220459
    4. '2' → logprob: -16.1250057220459
    5. '```' → logprob: -17.3125057220459
    6. '0' → logprob: -17.5625057220459
    7. 'def' → logprob: -17.8750057220459
    8. '11' → logprob: -18.2500057220459
    9. ',' → logprob: -18.3750057220459
    10. '-' → logprob: -18.6250057220459

Token 622: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760231614112854
    2. ':' → logprob: -0.8260231614112854
    3. '       ' → logprob: -10.07602310180664
    4. ':
' → logprob: -10.95102310180664
    5. '):
' → logprob: -11.95102310180664
    6. '           ' → logprob: -12.07602310180664
    7. ')' → logprob: -13.07602310180664
    8. ',' → logprob: -13.20102310180664
    9. '   ' → logprob: -13.20102310180664
    10. '=' → logprob: -13.70102310180664

Token 623: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25243479013442993
    2. ':
' → logprob: -1.5024347305297852
    3. '       ' → logprob: -7.877434730529785
    4. '+' → logprob: -10.252434730529785
    5. ',' → logprob: -11.002434730529785
    6. '           ' → logprob: -11.252434730529785
    7. '):
' → logprob: -11.877434730529785
    8. '   ' → logprob: -12.002434730529785
    9. '{' → logprob: -12.002434730529785
    10. '[' → logprob: -12.002434730529785

Token 624: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4833275079727173
    2. ' dp' → logprob: -1.4833275079727173
    3. '       ' → logprob: -1.9833275079727173
    4. '	dp' → logprob: -4.233327388763428
    5. '           ' → logprob: -5.858327388763428
    6. '   ' → logprob: -7.608327388763428
    7. '(dp' → logprob: -7.983327388763428
    8. '_dp' → logprob: -8.733327865600586
    9. '	' → logprob: -9.233327865600586
    10. '
' → logprob: -10.108327865600586

Token 625: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.745069499127567e-05
    2. ' dp' → logprob: -9.75008773803711
    3. '       ' → logprob: -10.50008773803711
    4. '           ' → logprob: -14.25008773803711
    5. '   ' → logprob: -14.50008773803711
    6. '	dp' → logprob: -15.12508773803711
    7. '#' → logprob: -16.62508773803711
    8. '```' → logprob: -17.62508773803711
    9. ' ' → logprob: -18.62508773803711
    10. '
' → logprob: -18.75008773803711

Token 626: ' occurrence' (ID: 55807)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6004174947738647
    2. 'r' → logprob: -1.2254174947738647
    3. ' dp' → logprob: -1.9754174947738647
    4. ' r' → logprob: -4.100417613983154
    5. 'True' → logprob: -6.850417613983154
    6. ' the' → logprob: -8.850417137145996
    7. '	dp' → logprob: -9.225417137145996
    8. 'the' → logprob: -9.350417137145996
    9. ' not' → logprob: -9.350417137145996
    10. 's' → logprob: -9.350417137145996

Token 627: ' précédente' (ID: 177319)
  Prédit: ' précédente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédente' → logprob: -0.916167140007019
    2. 'pr' → logprob: -1.166167140007019
    3. '[i' → logprob: -2.4161672592163086
    4. '   ' → logprob: -2.5411672592163086
    5. ' ==' → logprob: -3.2911672592163086
    6. '==' → logprob: -3.5411672592163086
    7. ' =' → logprob: -5.166167259216309
    8. 'previous' → logprob: -5.291167259216309
    9. '=' → logprob: -5.416167259216309
    10. ' precedente' → logprob: -5.541167259216309

Token 628: ' immédiatement' (ID: 100743)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7093814015388489
    2. '==' → logprob: -1.084381341934204
    3. ':' → logprob: -2.459381341934204
    4. '=' → logprob: -3.334381341934204
    5. '<|end|>' → logprob: -3.959381341934204
    6. ' =' → logprob: -4.709381580352783
    7. ',' → logprob: -4.959381580352783
    8. ':
' → logprob: -5.459381580352783
    9. ')' → logprob: -6.084381580352783
    10. 'dp' → logprob: -6.459381580352783

Token 629: ' avant' (ID: 13339)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8512793779373169
    2. 'avant' → logprob: -1.101279377937317
    3. 'à' → logprob: -1.976279377937317
    4. 'pr' → logprob: -2.4762792587280273
    5. 'au' → logprob: -5.226279258728027
    6. 'just' → logprob: -5.601279258728027
    7. ',' → logprob: -6.226279258728027
    8. ' précédente' → logprob: -6.601279258728027
    9. 'i' → logprob: -6.851279258728027
    10. 'before' → logprob: -7.476279258728027

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46739059686660767
    2. ':' → logprob: -1.717390537261963
    3. '           ' → logprob: -1.842390537261963
    4. ':
' → logprob: -3.842390537261963
    5. '       ' → logprob: -5.092390537261963
    6. '               ' → logprob: -5.967390537261963
    7. ' ,' → logprob: -6.592390537261963
    8. '   ' → logprob: -6.842390537261963
    9. 'dp' → logprob: -7.592390537261963
    10. ',
' → logprob: -8.342391014099121

Token 631: ' même' (ID: 9679)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004295403603464365
    2. ' dp' → logprob: -5.504295349121094
    3. '       ' → logprob: -8.754295349121094
    4. '	dp' → logprob: -10.504295349121094
    5. '           ' → logprob: -11.004295349121094
    6. '(dp' → logprob: -12.254295349121094
    7. '   ' → logprob: -12.254295349121094
    8. '_dp' → logprob: -12.754295349121094
    9. '.dp' → logprob: -14.379295349121094
    10. '```' → logprob: -15.004295349121094

Token 632: ' valeur' (ID: 41664)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010881803929805756
    2. ' dp' → logprob: -4.6358819007873535
    3. '(dp' → logprob: -8.135881423950195
    4. 'space' → logprob: -8.885881423950195
    5. '=' → logprob: -9.010881423950195
    6. '+' → logprob: -9.010881423950195
    7. '```' → logprob: -9.010881423950195
    8. '.' → logprob: -9.760881423950195
    9. '_dp' → logprob: -10.385881423950195
    10. '_' → logprob: -10.510881423950195

Token 633: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9455601572990417
    2. '=' → logprob: -1.3205602169036865
    3. 'dp' → logprob: -1.8205602169036865
    4. ' =' → logprob: -2.1955602169036865
    5. '       ' → logprob: -3.1955602169036865
    6. ' dp' → logprob: -3.8205602169036865
    7. '(dp' → logprob: -5.695559978485107
    8. '	dp' → logprob: -6.820559978485107
    9. '[i' → logprob: -7.570559978485107
    10. ',' → logprob: -7.570559978485107

Token 634: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889165729284286
    2. ' dp' → logprob: -2.5788917541503906
    3. '	dp' → logprob: -13.95389175415039
    4. '(dp' → logprob: -14.70389175415039
    5. ' ' → logprob: -15.45389175415039
    6. 'd' → logprob: -15.45389175415039
    7. '```' → logprob: -16.20389175415039
    8. '_dp' → logprob: -16.70389175415039
    9. ' ' → logprob: -16.82889175415039
    10. '   ' → logprob: -17.07889175415039

Token 635: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.392824874026701e-05
    2. '[' → logprob: -10.50003433227539
    3. 'i' → logprob: -12.25003433227539
    4. '```' → logprob: -14.62503433227539
    5. ' [' → logprob: -14.75003433227539
    6. '[
' → logprob: -15.00003433227539
    7. ' i' → logprob: -16.50003433227539
    8. '(i' → logprob: -16.50003433227539
    9. '\[' → logprob: -16.50003433227539
    10. '{i' → logprob: -17.00003433227539

Token 636: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3133673369884491
    2. '-' → logprob: -1.3133673667907715
    3. '[-' → logprob: -10.063366889953613
    4. '[' → logprob: -10.188366889953613
    5. ' -' → logprob: -11.313366889953613
    6. '   ' → logprob: -11.938366889953613
    7. 'i' → logprob: -13.813366889953613
    8. '       ' → logprob: -13.938366889953613
    9. '[j' → logprob: -14.188366889953613
    10. ']' → logprob: -14.313366889953613

Token 637: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. 'i' → logprob: -15.375000953674316
    4. '-' → logprob: -16.562501907348633
    5. '```' → logprob: -17.000001907348633
    6. 'prev' → logprob: -17.312501907348633
    7. '   ' → logprob: -17.750001907348633
    8. '۱' → logprob: -17.937501907348633
    9. '[' → logprob: -18.062501907348633
    10. '१' → logprob: -18.125001907348633

Token 638: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28410303592681885
    2. '       ' → logprob: -1.4091030359268188
    3. ']
' → logprob: -6.909102916717529
    4. '           ' → logprob: -7.534102916717529
    5. ']:
' → logprob: -7.534102916717529
    6. ' ]' → logprob: -7.659102916717529
    7. '   ' → logprob: -9.534103393554688
    8. '               ' → logprob: -9.659103393554688
    9. '```' → logprob: -10.159103393554688
    10. '[' → logprob: -10.159103393554688

Token 639: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48105672001838684
    2. ':' → logprob: -1.1060566902160645
    3. ':
' → logprob: -3.1060566902160645
    4. '           ' → logprob: -5.2310566902160645
    5. '```' → logprob: -8.106057167053223
    6. '   ' → logprob: -8.606057167053223
    7. '=' → logprob: -8.981057167053223
    8. ',' → logprob: -9.731057167053223
    9. '               ' → logprob: -9.981057167053223
    10. '):
' → logprob: -10.481057167053223

Token 640: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.030494820326566696
    2. ' dp' → logprob: -3.5304949283599854
    3. '       ' → logprob: -7.530494689941406
    4. '	dp' → logprob: -8.655494689941406
    5. '           ' → logprob: -10.405494689941406
    6. '_dp' → logprob: -13.655494689941406
    7. '(dp' → logprob: -13.780494689941406
    8. '   ' → logprob: -15.155494689941406
    9. 'd' → logprob: -15.655494689941406
    10. '	' → logprob: -16.155494689941406

Token 641: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. '=' → logprob: -16.375001907348633
    4. '[I' → logprob: -16.875001907348633
    5. ' [' → logprob: -17.750001907348633
    6. ' =' → logprob: -18.000001907348633
    7. '=i' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '=[' → logprob: -20.250001907348633
    10. '[
' → logprob: -20.625001907348633

Token 642: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015848303213715553
    2. '=' → logprob: -4.515848159790039
    3. ']=' → logprob: -5.765848159790039
    4. ' =' → logprob: -7.265848159790039
    5. '[i' → logprob: -7.265848159790039
    6. ' ]' → logprob: -8.390848159790039
    7. '   ' → logprob: -11.390848159790039
    8. '-' → logprob: -12.015848159790039
    9. '[' → logprob: -12.015848159790039
    10. ')' → logprob: -12.640848159790039

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '=

' → logprob: -19.876502990722656
    4. '+=' → logprob: -20.126502990722656
    5. '   ' → logprob: -20.376502990722656
    6. '=
' → logprob: -21.001502990722656
    7. '[' → logprob: -21.501502990722656
    8. '.=' → logprob: -22.501502990722656
    9. '＝' → logprob: -22.501502990722656
    10. ' ' → logprob: -22.626502990722656

Token 644: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.5491004129871726e-05
    2. ' dp' → logprob: -10.000045776367188
    3. '(dp' → logprob: -18.000045776367188
    4. '	dp' → logprob: -18.000045776367188
    5. 'd' → logprob: -19.125045776367188
    6. '   ' → logprob: -21.000045776367188
    7. '_dp' → logprob: -21.125045776367188
    8. 'dpi' → logprob: -22.500045776367188
    9. '.dp' → logprob: -23.250045776367188
    10. 'df' → logprob: -23.625045776367188

Token 645: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.636475493200123e-05
    2. '-' → logprob: -10.000076293945312
    3. '[-' → logprob: -11.000076293945312
    4. '[' → logprob: -11.250076293945312
    5. 'i' → logprob: -13.625076293945312
    6. ' [' → logprob: -17.500076293945312
    7. '-i' → logprob: -18.125076293945312
    8. '[
' → logprob: -18.375076293945312
    9. ' -' → logprob: -18.500076293945312
    10. '   ' → logprob: -18.625076293945312

Token 646: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.5954712075181305e-05
    2. '[i' → logprob: -10.875036239624023
    3. '[-' → logprob: -11.250036239624023
    4. '[' → logprob: -12.750036239624023
    5. ' -' → logprob: -13.875036239624023
    6. 'i' → logprob: -16.625036239624023
    7. '1' → logprob: -17.875036239624023
    8. '−' → logprob: -18.125036239624023
    9. '-i' → logprob: -18.875036239624023
    10. '[:-' → logprob: -19.500036239624023

Token 647: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '-' → logprob: -15.00000286102295
    4. '```' → logprob: -17.125003814697266
    5. '<|end|>' → logprob: -17.375003814697266
    6. '[' → logprob: -17.500003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ']' → logprob: -18.375003814697266
    9. 'i' → logprob: -19.937503814697266
    10. '<|end|>' → logprob: -19.937503814697266

Token 648: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01861482299864292
    2. ')' → logprob: -4.268614768981934
    3. '+' → logprob: -6.143614768981934
    4. '       ' → logprob: -6.518614768981934
    5. ' ]' → logprob: -8.018614768981934
    6. '<|end|>' → logprob: -8.768614768981934
    7. '}' → logprob: -9.643614768981934
    8. '[' → logprob: -10.018614768981934
    9. ']
' → logprob: -10.018614768981934
    10. '   ' → logprob: -10.018614768981934

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2206449955701828
    2. 'else' → logprob: -1.8456449508666992
    3. ' else' → logprob: -3.220644950866699
    4. 'elif' → logprob: -9.5956449508667
    5. '	else' → logprob: -10.7206449508667
    6. '   ' → logprob: -10.8456449508667
    7. '```' → logprob: -10.9706449508667
    8. ')' → logprob: -12.0956449508667
    9. ' elif' → logprob: -12.7206449508667
    10. '[' → logprob: -12.7206449508667

Token 650: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.030041582882404327
    2. '       ' → logprob: -3.5300416946411133
    3. ' else' → logprob: -8.155041694641113
    4. 'elif' → logprob: -12.905041694641113
    5. '	else' → logprob: -14.030041694641113
    6. '   ' → logprob: -15.405041694641113
    7. '```' → logprob: -15.530041694641113
    8. '_else' → logprob: -17.155040740966797
    9. '}else' → logprob: -18.280040740966797
    10. '	' → logprob: -18.530040740966797

Token 651: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6331616044044495
    2. ':' → logprob: -0.7581616044044495
    3. '[' → logprob: -7.758161544799805
    4. '       ' → logprob: -9.508161544799805
    5. ' :
' → logprob: -10.758161544799805
    6. '   ' → logprob: -11.883161544799805
    7. '[i' → logprob: -12.008161544799805
    8. ':
' → logprob: -12.258161544799805
    9. '[
' → logprob: -12.258161544799805
    10. '           ' → logprob: -12.758161544799805

Token 652: '           ' (ID: 352)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.13950422406196594
    2. 'dp' → logprob: -2.1395041942596436
    3. '       ' → logprob: -5.264504432678223
    4. ' dp' → logprob: -5.514504432678223
    5. ' (' → logprob: -5.764504432678223
    6. '(' → logprob: -8.889504432678223
    7. '           ' → logprob: -11.764504432678223
    8. '	dp' → logprob: -11.889504432678223
    9. '   ' → logprob: -12.764504432678223
    10. '_dp' → logprob: -13.514504432678223

Token 653: ' #' (ID: 1069)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.16032283008098602
    2. 'dp' → logprob: -1.9103227853775024
    3. ' dp' → logprob: -10.035323143005371
    4. ' (' → logprob: -10.285323143005371
    5. '(' → logprob: -11.035323143005371
    6. '       ' → logprob: -13.285323143005371
    7. '	dp' → logprob: -13.410323143005371
    8. '   ' → logprob: -14.410323143005371
    9. '_dp' → logprob: -15.660323143005371
    10. '.dp' → logprob: -15.910323143005371

Token 654: ' Sinon' (ID: 154924)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011174794286489487
    2. ' dp' → logprob: -4.51117467880249
    3. '   ' → logprob: -9.886175155639648
    4. '       ' → logprob: -10.011175155639648
    5. '           ' → logprob: -10.511175155639648
    6. '	dp' → logprob: -13.136175155639648
    7. '(dp' → logprob: -14.011175155639648
    8. '
' → logprob: -15.136175155639648
    9. ' ' → logprob: -15.511175155639648
    10. '_dp' → logprob: -15.511175155639648

Token 655: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13227763772010803
    2. ' dp' → logprob: -2.132277727127075
    3. '(dp' → logprob: -5.257277488708496
    4. '
' → logprob: -11.132277488708496
    5. '(' → logprob: -11.257277488708496
    6. '	dp' → logprob: -11.257277488708496
    7. ' =' → logprob: -11.382277488708496
    8. '   ' → logprob: -11.382277488708496
    9. '[' → logprob: -11.382277488708496
    10. ' (' → logprob: -11.507277488708496

Token 656: ' ajoute' (ID: 91611)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19755667448043823
    2. ' dp' → logprob: -2.197556734085083
    3. '(dp' → logprob: -2.697556734085083
    4. ' (' → logprob: -7.322556495666504
    5. '(' → logprob: -8.947556495666504
    6. '	dp' → logprob: -11.072556495666504
    7. '       ' → logprob: -12.447556495666504
    8. '           ' → logprob: -12.572556495666504
    9. '   ' → logprob: -12.697556495666504
    10. '_dp' → logprob: -13.197556495666504

Token 657: ' le' (ID: 505)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.6845491528511047
    2. 'dp' → logprob: -1.68454909324646
    3. ' (' → logprob: -1.80954909324646
    4. ' dp' → logprob: -2.55954909324646
    5. '(' → logprob: -2.68454909324646
    6. 's' → logprob: -7.934549331665039
    7. '=' → logprob: -8.934549331665039
    8. ' =' → logprob: -9.434549331665039
    9. '(
' → logprob: -9.559549331665039
    10. '_dp' → logprob: -9.934549331665039

Token 658: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15032796561717987
    2. '(dp' → logprob: -2.0253279209136963
    3. ' dp' → logprob: -5.150328159332275
    4. '(' → logprob: -6.525328159332275
    5. ' (' → logprob: -8.025327682495117
    6. '	dp' → logprob: -12.025327682495117
    7. 'd' → logprob: -12.150327682495117
    8. 'mod' → logprob: -12.525327682495117
    9. '(
' → logprob: -13.025327682495117
    10. '+' → logprob: -13.025327682495117

Token 659: ' de' (ID: 334)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.32305803894996643
    2. 'dp' → logprob: -2.1980581283569336
    3. '(' → logprob: -2.6980581283569336
    4. ' de' → logprob: -3.6980581283569336
    5. '   ' → logprob: -4.073058128356934
    6. ' dp' → logprob: -4.198058128356934
    7. 'de' → logprob: -4.323058128356934
    8. '_dp' → logprob: -5.198058128356934
    9. 's' → logprob: -5.948058128356934
    10. ' (' → logprob: -6.323058128356934

Token 660: ' façons' (ID: 165958)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16200946271419525
    2. 'fa' → logprob: -2.5370094776153564
    3. 'ways' → logprob: -3.0370094776153564
    4. ' façons' → logprob: -4.162009239196777
    5. 'man' → logprob: -6.162009239196777
    6. ' dp' → logprob: -6.412009239196777
    7. ' ways' → logprob: -6.787009239196777
    8. '```' → logprob: -7.662009239196777
    9. '(dp' → logprob: -8.287009239196777
    10. 'fois' → logprob: -8.912009239196777

Token 661: ' jusqu' (ID: 21961)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3883742392063141
    2. '(dp' → logprob: -2.1383743286132812
    3. '[i' → logprob: -2.2633743286132812
    4. ' dp' → logprob: -3.0133743286132812
    5. '   ' → logprob: -4.013374328613281
    6. '[' → logprob: -4.263374328613281
    7. '       ' → logprob: -4.763374328613281
    8. ' =' → logprob: -5.513374328613281
    9. ' de' → logprob: -6.138374328613281
    10. '_dp' → logprob: -7.013374328613281

Token 662: ''à' (ID: 33688)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6517432928085327
    2. 'à' → logprob: -1.4017432928085327
    3. 'i' → logprob: -1.7767432928085327
    4. ''à' → logprob: -2.9017434120178223
    5. ' à' → logprob: -5.276743412017822
    6. '’à' → logprob: -6.901743412017822
    7. ' i' → logprob: -7.401743412017822
    8. '   ' → logprob: -7.651743412017822
    9. '(i' → logprob: -7.776743412017822
    10. 'a' → logprob: -8.151742935180664

Token 663: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5248950123786926
    2. 'dp' → logprob: -0.8998950123786926
    3. ' dp' → logprob: -6.774895191192627
    4. ' r' → logprob: -7.399895191192627
    5. '   ' → logprob: -12.524894714355469
    6. 'i' → logprob: -12.649894714355469
    7. '	dp' → logprob: -13.274894714355469
    8. 'rp' → logprob: -13.399894714355469
    9. '[r' → logprob: -13.524894714355469
    10. ' ' → logprob: -13.649894714355469

Token 664: ' précédente' (ID: 177319)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0005854414775967598
    2. ' r' → logprob: -8.375585556030273
    3. '[r' → logprob: -8.375585556030273
    4. 'i' → logprob: -9.875585556030273
    5. 'dp' → logprob: -9.875585556030273
    6. '[i' → logprob: -11.750585556030273
    7. '```' → logprob: -12.500585556030273
    8. '   ' → logprob: -13.625585556030273
    9. 'rp' → logprob: -13.625585556030273
    10. ' ' → logprob: -14.000585556030273

Token 665: ' occurrence' (ID: 55807)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4345556497573853
    2. '_occ' → logprob: -1.5595556497573853
    3. 'dp' → logprob: -1.8095556497573853
    4. '_' → logprob: -1.8095556497573853
    5. ']' → logprob: -2.8095555305480957
    6. 'occ' → logprob: -3.1845555305480957
    7. '_dp' → logprob: -3.4345555305480957
    8. '_oc' → logprob: -3.6845555305480957
    9. '[' → logprob: -3.9345555305480957
    10. 'position' → logprob: -4.809555530548096

Token 666: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19122889637947083
    2. 'dp' → logprob: -1.9412288665771484
    3. ' dp' → logprob: -4.566228866577148
    4. '       ' → logprob: -5.691228866577148
    5. '[r' → logprob: -5.691228866577148
    6. '[' → logprob: -5.816228866577148
    7. '           ' → logprob: -6.441228866577148
    8. '_dp' → logprob: -6.566228866577148
    9. '(dp' → logprob: -6.566228866577148
    10. '   ' → logprob: -6.941228866577148

Token 667: '           ' (ID: 352)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.27154386043548584
    2. ' +' → logprob: -1.6465438604354858
    3. 'dp' → logprob: -4.021543979644775
    4. '+' → logprob: -4.521543979644775
    5. '   ' → logprob: -5.521543979644775
    6. ' dp' → logprob: -5.646543979644775
    7. '[' → logprob: -6.396543979644775
    8. ',' → logprob: -6.771543979644775
    9. ' =' → logprob: -7.271543979644775
    10. '
' → logprob: -7.271543979644775

Token 668: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.429416686296463
    2. '(dp' → logprob: -1.0544166564941406
    3. ' dp' → logprob: -7.679416656494141
    4. '(' → logprob: -8.92941665649414
    5. ' (' → logprob: -9.42941665649414
    6. '	dp' → logprob: -11.55441665649414
    7. '   ' → logprob: -11.92941665649414
    8. '[' → logprob: -12.17941665649414
    9. '(
' → logprob: -12.17941665649414
    10. '       ' → logprob: -12.55441665649414

Token 669: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.735893965815194e-05
    2. '[' → logprob: -11.000017166137695
    3. 'i' → logprob: -14.750017166137695
    4. '[I' → logprob: -16.375017166137695
    5. '=' → logprob: -16.625017166137695
    6. '_i' → logprob: -17.750017166137695
    7. ' =' → logprob: -17.875017166137695
    8. '```' → logprob: -18.000017166137695
    9. '[
' → logprob: -18.750017166137695
    10. '[j' → logprob: -19.125017166137695

Token 670: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06792513281106949
    2. ']' → logprob: -2.817925214767456
    3. '[' → logprob: -5.817924976348877
    4. '=' → logprob: -5.942924976348877
    5. ' =' → logprob: -8.942925453186035
    6. ']=' → logprob: -9.192925453186035
    7. '   ' → logprob: -9.817925453186035
    8. 'i' → logprob: -10.317925453186035
    9. '=i' → logprob: -12.692925453186035
    10. '(i' → logprob: -12.942925453186035

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '=(' → logprob: -17.629077911376953
    4. '[' → logprob: -19.629077911376953
    5. '+=' → logprob: -19.879077911376953
    6. '   ' → logprob: -20.129077911376953
    7. '＝' → logprob: -20.379077911376953
    8. '[i' → logprob: -20.504077911376953
    9. ']' → logprob: -20.879077911376953
    10. '=[' → logprob: -21.004077911376953

Token 672: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0004396095173433423
    2. ' (' → logprob: -7.750439643859863
    3. '   ' → logprob: -12.625439643859863
    4. '(' → logprob: -13.125439643859863
    5. '(dx' → logprob: -13.750439643859863
    6. '(df' → logprob: -14.625439643859863
    7. '(D' → logprob: -15.375439643859863
    8. 'dp' → logprob: -15.375439643859863
    9. '(diff' → logprob: -15.500439643859863
    10. '(mod' → logprob: -15.625439643859863

Token 673: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.5776860184123507e-06
    2. ' dp' → logprob: -13.00000286102295
    3. '(dp' → logprob: -15.50000286102295
    4. '	dp' → logprob: -18.000001907348633
    5. '   ' → logprob: -19.375001907348633
    6. 'd' → logprob: -20.500001907348633
    7. '_dp' → logprob: -20.750001907348633
    8. '           ' → logprob: -20.875001907348633
    9. '       ' → logprob: -21.375001907348633
    10. 'dpi' → logprob: -22.625001907348633

Token 674: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.306760805164231e-05
    2. 'i' → logprob: -11.25001335144043
    3. '{i' → logprob: -18.00001335144043
    4. '(i' → logprob: -18.87501335144043
    5. ' i' → logprob: -20.00001335144043
    6. '[' → logprob: -20.25001335144043
    7. ',i' → logprob: -20.75001335144043
    8. '[j' → logprob: -21.62501335144043
    9. '```' → logprob: -21.62501335144043
    10. '[I' → logprob: -21.75001335144043

Token 675: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1615411937236786
    2. '-' → logprob: -1.911541223526001
    3. 'i' → logprob: -6.661540985107422
    4. '[-' → logprob: -11.411540985107422
    5. '-i' → logprob: -11.911540985107422
    6. '(i' → logprob: -11.911540985107422
    7. '[' → logprob: -12.036540985107422
    8. ' -' → logprob: -12.286540985107422
    9. '{i' → logprob: -14.661540985107422
    10. ']' → logprob: -15.036540985107422

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014715864323079586
    2. '-' → logprob: -4.264715671539307
    3. 'i' → logprob: -7.514715671539307
    4. '```' → logprob: -12.889716148376465
    5. ' -' → logprob: -13.639716148376465
    6. ' ' → logprob: -13.764716148376465
    7. ']' → logprob: -14.014716148376465
    8. '[i' → logprob: -14.514716148376465
    9. '   ' → logprob: -14.764716148376465
    10. 'prev' → logprob: -14.889716148376465

Token 677: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04306747019290924
    2. '+' → logprob: -3.168067455291748
    3. ']' → logprob: -9.793067932128906
    4. ']+' → logprob: -11.793067932128906
    5. ')' → logprob: -13.543067932128906
    6. ' ' → logprob: -14.043067932128906
    7. '[' → logprob: -14.293067932128906
    8. ' plus' → logprob: -14.293067932128906
    9. ' +
' → logprob: -14.418067932128906
    10. ' ]' → logprob: -15.543067932128906

Token 678: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407740354537964
    2. ' +' → logprob: -0.9740774035453796
    3. '+
' → logprob: -15.349077224731445
    4. ' ' → logprob: -16.224077224731445
    5. ' +
' → logprob: -16.724077224731445
    6. '+r' → logprob: -17.974077224731445
    7. ' plus' → logprob: -18.099077224731445
    8. ' ' → logprob: -18.224077224731445
    9. '＋' → logprob: -18.224077224731445
    10. '[' → logprob: -18.474077224731445

Token 679: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00026169343618676066
    2. ' dp' → logprob: -8.250261306762695
    3. '	dp' → logprob: -15.125261306762695
    4. '(dp' → logprob: -16.250261306762695
    5. 'd' → logprob: -17.750261306762695
    6. '   ' → logprob: -18.625261306762695
    7. '           ' → logprob: -19.625261306762695
    8. '_dp' → logprob: -19.750261306762695
    9. '.dp' → logprob: -20.625261306762695
    10. '
' → logprob: -20.750261306762695

Token 680: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.750000953674316
    3. 'r' → logprob: -15.250000953674316
    4. '[
' → logprob: -18.000001907348633
    5. ' [' → logprob: -19.875001907348633
    6. '[i' → logprob: -20.750001907348633
    7. '	r' → logprob: -21.000001907348633
    8. '(r' → logprob: -22.000001907348633
    9. '[c' → logprob: -22.125001907348633
    10. '[j' → logprob: -22.375001907348633

Token 681: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011450992315076292
    2. '[' → logprob: -10.000114440917969
    3. '[r' → logprob: -10.125114440917969
    4. 'i' → logprob: -11.250114440917969
    5. '[value' → logprob: -11.875114440917969
    6. '[
' → logprob: -12.750114440917969
    7. ']' → logprob: -13.375114440917969
    8. '][' → logprob: -13.625114440917969
    9. '```' → logprob: -14.125114440917969
    10. 'r' → logprob: -14.750114440917969

Token 682: ']])' (ID: 64959)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003413031517993659
    2. ']' → logprob: -8.750341415405273
    3. 'i' → logprob: -9.125341415405273
    4. ']])' → logprob: -10.125341415405273
    5. '])' → logprob: -10.500341415405273
    6. '(i' → logprob: -13.875341415405273
    7. '[' → logprob: -13.875341415405273
    8. ']]' → logprob: -14.000341415405273
    9. '][' → logprob: -14.250341415405273
    10. ']+' → logprob: -14.375341415405273

Token 683: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20143720507621765
    2. ' %' → logprob: -1.70143723487854
    3. '%i' → logprob: -11.576436996459961
    4. '%c' → logprob: -11.701436996459961
    5. '%n' → logprob: -12.951436996459961
    6. '%d' → logprob: -13.826436996459961
    7. '%x' → logprob: -14.451436996459961
    8. '%m' → logprob: -14.701436996459961
    9. '%e' → logprob: -14.826436996459961
    10. '%A' → logprob: -14.826436996459961

Token 684: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.0219828002154827e-05
    2. '(mod' → logprob: -11.000020027160645
    3. ' modulo' → logprob: -12.625020027160645
    4. 'module' → logprob: -16.37502098083496
    5. 'mo' → logprob: -16.62502098083496
    6. '	mod' → logprob: -18.37502098083496
    7. 'modal' → logprob: -18.87502098083496
    8. '100' → logprob: -19.37502098083496
    9. 'Modulo' → logprob: -19.37502098083496
    10. 'modo' → logprob: -19.50002098083496

Token 685: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 687: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37458354234695435
    2. 'return' (adapté à ' return') → logprob: -1.4995834827423096
    3. '   ' → logprob: -2.8745834827423096
    4. '	return' → logprob: -3.9995834827423096
    5. ':return' → logprob: -4.499583721160889
    6. '```' → logprob: -6.749583721160889
    7. ' 
' → logprob: -7.999583721160889
    8. ' ' → logprob: -8.12458324432373
    9. '\n' → logprob: -8.37458324432373
    10. ' ' → logprob: -8.62458324432373

Token 688: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001234428636962548
    2. ' dp' → logprob: -9.000123023986816
    3. '	dp' → logprob: -18.375123977661133
    4. '(dp' → logprob: -19.250123977661133
    5. '   ' → logprob: -19.625123977661133
    6. '_dp' → logprob: -20.250123977661133
    7. '[' → logprob: -21.000123977661133
    8. 'd' → logprob: -21.750123977661133
    9. 'df' → logprob: -22.125123977661133
    10. 'dc' → logprob: -22.500123977661133

Token 689: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5256109237670898
    2. '<|end|>' → logprob: -0.9006109237670898
    3. '<|end|>' → logprob: -6.65061092376709
    4. '#' → logprob: -8.27561092376709
    5. '```' → logprob: -8.27561092376709
    6. '
' → logprob: -8.40061092376709
    7. '[' → logprob: -8.77561092376709
    8. ' def' → logprob: -9.65061092376709
    9. '\' → logprob: -10.02561092376709
    10. '\n' → logprob: -10.40061092376709

Token 690: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00732062803581357
    2. '<|end|>' → logprob: -5.382320404052734
    3. '#' → logprob: -6.132320404052734
    4. '```' → logprob: -7.757320404052734
    5. ' def' → logprob: -10.882320404052734
    6. '<|end|>' → logprob: -11.007320404052734
    7. '\' → logprob: -11.257320404052734
    8. '[' → logprob: -11.382320404052734
    9. 'n' → logprob: -11.507320404052734
    10. '
' → logprob: -12.132320404052734

Token 691: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07709622383117676
    2. 'main' → logprob: -2.8270962238311768
    3. ' solve' → logprob: -4.577095985412598
    4. 'solve' → logprob: -5.952095985412598
    5. ' count' → logprob: -6.452095985412598
    6. 'count' → logprob: -7.952095985412598
    7. ' solution' → logprob: -9.452095985412598
    8. ' calculate' → logprob: -10.827095985412598
    9. 'solution' → logprob: -10.952095985412598
    10. ' process' → logprob: -11.077095985412598

Token 692: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0008239185553975403
    2. '_' → logprob: -7.500823974609375
    3. '(' → logprob: -9.000823974609375
    4. '()' → logprob: -9.750823974609375
    5. '():
' → logprob: -9.875823974609375
    6. ' ():' → logprob: -11.625823974609375
    7. '_:' → logprob: -11.625823974609375
    8. 'def' → logprob: -12.500823974609375
    9. '()>' → logprob: -13.000823974609375
    10. '(":' → logprob: -13.125823974609375

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03435052931308746
    2. 'n' → logprob: -3.409350633621216
    3. ' n' → logprob: -7.784350395202637
    4. '(n' → logprob: -8.534350395202637
    5. '	n' → logprob: -9.784350395202637
    6. '```' → logprob: -10.659350395202637
    7. ',n' → logprob: -12.534350395202637
    8. '    
' → logprob: -12.784350395202637
    9. 'def' → logprob: -13.284350395202637
    10. '       ' → logprob: -13.784350395202637

Token 694: ' """
' (ID: 7037)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004941754741594195
    2. ' n' → logprob: -8.000494003295898
    3. '   ' → logprob: -8.750494003295898
    4. '```' → logprob: -15.375494003295898
    5. '	n' → logprob: -15.875494003295898
    6. '
' → logprob: -17.2504940032959
    7. '    
' → logprob: -17.6254940032959
    8. '(n' → logprob: -18.5004940032959
    9. '_n' → logprob: -19.7504940032959
    10. '``' → logprob: -19.8754940032959

Token 695: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16234244406223297
    2. '   ' → logprob: -1.9123424291610718
    3. ' n' → logprob: -6.162342548370361
    4. '    
' → logprob: -12.412342071533203
    5. '	n' → logprob: -13.287342071533203
    6. '  ' → logprob: -13.537342071533203
    7. '
' → logprob: -14.037342071533203
    8. '    ' → logprob: -15.037342071533203
    9. '(n' → logprob: -15.662342071533203
    10. ' ' → logprob: -16.162342071533203

Token 696: ' Point' (ID: 9971)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.800125777721405
    2. '   ' → logprob: -1.1751258373260498
    3. ' n' → logprob: -1.4251258373260498
    4. 'def' → logprob: -6.800125598907471
    5. ' def' → logprob: -8.050126075744629
    6. '    ' → logprob: -11.300126075744629
    7. '	n' → logprob: -12.050126075744629
    8. '(n' → logprob: -12.800126075744629
    9. ' input' → logprob: -12.925126075744629
    10. '```' → logprob: -12.925126075744629

Token 697: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30829888582229614
    2. ' d' → logprob: -1.4332988262176514
    3. '(' → logprob: -5.4332990646362305
    4. '_' → logprob: -5.5582990646362305
    5. '   ' → logprob: -5.5582990646362305
    6. 'de' → logprob: -5.9332990646362305
    7. '()' → logprob: -6.3082990646362305
    8. ' ' → logprob: -6.3082990646362305
    9. 'd' → logprob: -6.9332990646362305
    10. '(
' → logprob: -7.1832990646362305

Token 698: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.4916993975639343
    2. ''entrée' → logprob: -0.9916993975639343
    3. '_' → logprob: -4.86669921875
    4. ' entrée' → logprob: -5.11669921875
    5. '’entrée' → logprob: -6.36669921875
    6. 'entr' → logprob: -6.49169921875
    7. ' entr' → logprob: -8.36669921875
    8. 'ent' → logprob: -10.11669921875
    9. 'e' → logprob: -10.24169921875
    10. ''arrivée' → logprob: -10.61669921875

Token 699: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6118494868278503
    2. '():' → logprob: -1.7368495464324951
    3. ':' → logprob: -2.236849546432495
    4. '   ' → logprob: -2.361849546432495
    5. '():
' → logprob: -2.986849546432495
    6. ' de' → logprob: -4.986849308013916
    7. '()' → logprob: -5.111849308013916
    8. 'de' → logprob: -5.236849308013916
    9. ' :' → logprob: -6.111849308013916
    10. ':
' → logprob: -6.236849308013916

Token 700: ' script' (ID: 11713)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.2905193865299225
    2. 'program' → logprob: -1.5405193567276
    3. ' programme' → logprob: -3.4155194759368896
    4. ' program' → logprob: -6.0405192375183105
    5. 'code' → logprob: -6.4155192375183105
    6. 'script' → logprob: -8.040519714355469
    7. ' code' → logprob: -8.665519714355469
    8. ' script' → logprob: -8.665519714355469
    9. '_program' → logprob: -9.040519714355469
    10. 'programma' → logprob: -9.165519714355469

Token 701: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13993173837661743
    2. ':' → logprob: -2.8899316787719727
    3. '():' → logprob: -3.1399316787719727
    4. '():
' → logprob: -4.139931678771973
    5. 'def' → logprob: -5.264931678771973
    6. ':
' → logprob: -5.764931678771973
    7. '
' → logprob: -5.889931678771973
    8. '    
' → logprob: -6.764931678771973
    9. '()' → logprob: -6.764931678771973
    10. '```' → logprob: -7.014931678771973

Token 702: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005316650960594416
    2. '    
' → logprob: -6.255316734313965
    3. '
' → logprob: -6.505316734313965
    4. 'n' → logprob: -6.505316734313965
    5. ' n' → logprob: -9.130316734313965
    6. '```' → logprob: -9.755316734313965
    7. '  
' → logprob: -9.880316734313965
    8. '(n' → logprob: -10.130316734313965
    9. ' 
' → logprob: -10.505316734313965
    10. '<|end|>' → logprob: -10.755316734313965

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013357517309486866
    2. 'n' → logprob: -9.375133514404297
    3. '    
' → logprob: -10.250133514404297
    4. 'def' → logprob: -11.625133514404297
    5. ' n' → logprob: -13.500133514404297
    6. '
' → logprob: -13.750133514404297
    7. '```' → logprob: -13.875133514404297
    8. '    ' → logprob: -14.750133514404297
    9. '       ' → logprob: -16.000133514404297
    10. '  ' → logprob: -16.000133514404297

Token 704: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005034983158111572
    2. 'n' → logprob: -5.380034923553467
    3. ' n' → logprob: -7.880034923553467
    4. '    
' → logprob: -10.380035400390625
    5. '    ' → logprob: -13.505035400390625
    6. '
' → logprob: -13.630035400390625
    7. 'def' → logprob: -14.005035400390625
    8. '	n' → logprob: -14.130035400390625
    9. '```' → logprob: -15.380035400390625
    10. '  ' → logprob: -15.380035400390625

Token 705: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018575966358184814
    2. 'n' → logprob: -4.018576145172119
    3. ' n' → logprob: -7.768576145172119
    4. '	n' → logprob: -13.643575668334961
    5. '    
' → logprob: -13.643575668334961
    6. 'def' → logprob: -14.393575668334961
    7. '
' → logprob: -15.893575668334961
    8. '    ' → logprob: -17.26857566833496
    9. '(n' → logprob: -17.51857566833496
    10. '```' → logprob: -17.51857566833496

Token 706: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05254967883229256
    2. '9' → logprob: -4.177549839019775
    3. '   ' → logprob: -4.927549839019775
    4. '    
' → logprob: -4.927549839019775
    5. ' =' → logprob: -5.927549839019775
    6. ' ' → logprob: -5.927549839019775
    7. '.' → logprob: -5.927549839019775
    8. '2' → logprob: -5.927549839019775
    9. ')' → logprob: -6.052549839019775
    10. ':' → logprob: -6.427549839019775

Token 707: ' Lit' (ID: 45595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012709299102425575
    2. ' n' → logprob: -5.012709140777588
    3. '   ' → logprob: -5.137709140777588
    4. '#' → logprob: -9.262709617614746
    5. '	n' → logprob: -12.887709617614746
    6. ' ' → logprob: -13.637709617614746
    7. '  ' → logprob: -13.762709617614746
    8. '
' → logprob: -13.762709617614746
    9. 'def' → logprob: -13.887709617614746
    10. ' #' → logprob: -14.012709617614746

Token 708: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.200507402420044
    2. '_input' → logprob: -1.200507402420044
    3. '   ' → logprob: -1.950507402420044
    4. ' l' → logprob: -2.325507402420044
    5. ' les' → logprob: -3.200507402420044
    6. 'n' → logprob: -3.325507402420044
    7. '()' → logprob: -3.825507402420044
    8. 'input' → logprob: -4.575507164001465
    9. 'l' → logprob: -4.700507164001465
    10. '_l' → logprob: -5.075507164001465

Token 709: ' entr' (ID: 7072)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061239466071128845
    2. ' n' → logprob: -4.311239242553711
    3. '_' → logprob: -4.436239242553711
    4. 'input' → logprob: -5.061239242553711
    5. 'nombre' → logprob: -5.686239242553711
    6. '_input' → logprob: -5.686239242553711
    7. 'd' → logprob: -5.686239242553711
    8. ' données' → logprob: -5.686239242553711
    9. 'inputs' → logprob: -6.061239242553711
    10. '_n' → logprob: -6.186239242553711

Token 710: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.043026361614465714
    2. 'ées' → logprob: -3.1680264472961426
    3. 'ee' → logprob: -11.793025970458984
    4. 'é' → logprob: -12.043025970458984
    5. 'ees' → logprob: -12.668025970458984
    6. 'rée' → logprob: -12.918025970458984
    7. '   ' → logprob: -13.043025970458984
    8. 'e' → logprob: -13.543025970458984
    9. '```' → logprob: -13.543025970458984
    10. '#' → logprob: -13.668025970458984

Token 711: ' utilisateur' (ID: 115595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034301967825740576
    2. '(n' → logprob: -6.878430366516113
    3. 'n' → logprob: -7.628430366516113
    4. '
' → logprob: -7.753430366516113
    5. '()' → logprob: -7.878430366516113
    6. ',' → logprob: -8.128430366516113
    7. '    
' → logprob: -8.503430366516113
    8. ':' → logprob: -8.753430366516113
    9. '.' → logprob: -9.128430366516113
    10. '()
' → logprob: -9.253430366516113

Token 712: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3387785255908966
    2. '()' → logprob: -1.3387784957885742
    3. ':' → logprob: -5.338778495788574
    4. '()
' → logprob: -5.338778495788574
    5. '(' → logprob: -5.588778495788574
    6. '.' → logprob: -5.713778495788574
    7. ',' → logprob: -6.213778495788574
    8. '```' → logprob: -6.213778495788574
    9. '(n' → logprob: -6.338778495788574
    10. '
' → logprob: -6.963778495788574

Token 713: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002585978072602302
    2. '    
' → logprob: -8.625258445739746
    3. '    ' → logprob: -10.375258445739746
    4. '2' → logprob: -11.375258445739746
    5. ',' → logprob: -11.500258445739746
    6. '
' → logprob: -12.125258445739746
    7. '  ' → logprob: -12.375258445739746
    8. ' ' → logprob: -12.625258445739746
    9. '       ' → logprob: -12.625258445739746
    10. '   
' → logprob: -13.125258445739746

Token 714: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003633521846495569
    2. '    
' → logprob: -8.25036334991455
    3. '    ' → logprob: -9.75036334991455
    4. '
' → logprob: -10.87536334991455
    5. '2' → logprob: -11.75036334991455
    6. ',' → logprob: -12.87536334991455
    7. '  ' → logprob: -13.00036334991455
    8. ' ' → logprob: -13.00036334991455
    9. '       ' → logprob: -13.00036334991455
    10. '   
' → logprob: -13.12536334991455

Token 715: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007635262445546687
    2. '2' → logprob: -8.125763893127441
    3. 'n' → logprob: -8.750763893127441
    4. '    
' → logprob: -9.250763893127441
    5. '    ' → logprob: -9.500763893127441
    6. ' n' → logprob: -9.625763893127441
    7. ' ' → logprob: -11.125763893127441
    8. '       ' → logprob: -11.250763893127441
    9. '  ' → logprob: -11.500763893127441
    10. '
' → logprob: -11.625763893127441

Token 716: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026254786178469658
    2. '.' → logprob: -3.901254892349243
    3. 'def' → logprob: -5.651254653930664
    4. ',' → logprob: -6.776254653930664
    5. ')' → logprob: -7.901254653930664
    6. ':' → logprob: -8.401254653930664
    7. '  ' → logprob: -9.151254653930664
    8. ' def' → logprob: -9.276254653930664
    9. '
' → logprob: -10.276254653930664
    10. '    ' → logprob: -10.276254653930664

Token 717: ' Cal' (ID: 4453)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6480504870414734
    2. 'c' → logprob: -1.5230505466461182
    3. '   ' → logprob: -1.5230505466461182
    4. ' r' → logprob: -3.523050546646118
    5. 'r' → logprob: -4.523050308227539
    6. ' ' → logprob: -8.773050308227539
    7. '
' → logprob: -9.398050308227539
    8. '  ' → logprob: -9.898050308227539
    9. ' n' → logprob: -9.898050308227539
    10. ' calculates' → logprob: -10.398050308227539

Token 718: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.007136243395507336
    2. 'cul' → logprob: -5.007136344909668
    3. 'culate' → logprob: -8.382136344909668
    4. 'c' → logprob: -8.757136344909668
    5. 'cula' → logprob: -10.632136344909668
    6. 'cules' → logprob: -12.007136344909668
    7. '```' → logprob: -13.632136344909668
    8. '
' → logprob: -14.507136344909668
    9. 'cular' → logprob: -14.757136344909668
    10. '\' → logprob: -14.757136344909668

Token 719: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5514247417449951
    2. '   ' → logprob: -1.4264247417449951
    3. ' r' → logprob: -2.551424741744995
    4. ' previous' → logprob: -3.551424741744995
    5. 'r' → logprob: -3.801424741744995
    6. ' la' → logprob: -3.926424741744995
    7. '    ' → logprob: -4.926424980163574
    8. '_previous' → logprob: -4.926424980163574
    9. 'previous' → logprob: -5.551424980163574
    10. ' n' → logprob: -5.676424980163574

Token 720: ' occurrences' (ID: 108073)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017406437546014786
    2. 'previous' → logprob: -4.767406463623047
    3. ' r' → logprob: -4.892406463623047
    4. ' previous' → logprob: -6.892406463623047
    5. '_previous' → logprob: -8.767406463623047
    6. '_r' → logprob: -11.017406463623047
    7. 'prev' → logprob: -11.517406463623047
    8. 'pr' → logprob: -11.642406463623047
    9. '   ' → logprob: -11.892406463623047
    10. ' ' → logprob: -12.142406463623047

Token 721: ' précéd' (ID: 55435)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2068547010421753
    2. '_previous' → logprob: -1.3318547010421753
    3. '_pr' → logprob: -1.8318547010421753
    4. '_pass' → logprob: -1.8318547010421753
    5. 'pr' → logprob: -3.081854820251465
    6. ' précéd' → logprob: -3.206854820251465
    7. '   ' → logprob: -4.456854820251465
    8. '_prev' → logprob: -4.706854820251465
    9. 'pass' → logprob: -5.581854820251465
    10. ' pass' → logprob: -6.581854820251465

Token 722: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.006431379355490208
    2. 'éd' → logprob: -6.256431579589844
    3. 'é' → logprob: -6.631431579589844
    4. 'ées' → logprob: -7.131431579589844
    5. 'ed' → logprob: -7.631431579589844
    6. '   ' → logprob: -7.631431579589844
    7. 'd' → logprob: -8.256431579589844
    8. '```' → logprob: -8.506431579589844
    9. 'ents' → logprob: -8.756431579589844
    10. '#' → logprob: -9.006431579589844

Token 723: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022209517657756805
    2. ',' → logprob: -4.147209644317627
    3. ' des' → logprob: -5.897209644317627
    4. ',
' → logprob: -6.022209644317627
    5. ' de' → logprob: -7.397209644317627
    6. ' pour' → logprob: -9.147209167480469
    7. 'de' → logprob: -9.272209167480469
    8. '  ' → logprob: -9.772209167480469
    9. '    ' → logprob: -10.147209167480469
    10. 'des' → logprob: -10.897209167480469

Token 724: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.057743949990254e-05
    2. ',' → logprob: -12.125020980834961
    3. '    ' → logprob: -12.500020980834961
    4. '3' → logprob: -12.875020980834961
    5. ' puis' → logprob: -13.125020980834961
    6. '    
' → logprob: -13.625020980834961
    7. '  ' → logprob: -13.875020980834961
    8. '2' → logprob: -14.250020980834961
    9. '#' → logprob: -14.375020980834961
    10. '4' → logprob: -14.625020980834961

Token 725: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015221221838146448
    2. '3' → logprob: -6.501522064208984
    3. '#' → logprob: -11.376522064208984
    4. ' ' → logprob: -12.876522064208984
    5. '    ' → logprob: -13.001522064208984
    6. '  ' → logprob: -14.126522064208984
    7. ',' → logprob: -14.376522064208984
    8. ' #' → logprob: -14.376522064208984
    9. '2' → logprob: -14.626522064208984
    10. '1' → logprob: -15.876522064208984

Token 726: '3' (ID: 18)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011849920265376568
    2. '3' → logprob: -6.751184940338135
    3. '    ' → logprob: -12.376185417175293
    4. ',' → logprob: -13.001185417175293
    5. '   ' → logprob: -13.251185417175293
    6. '    
' → logprob: -13.501185417175293
    7. '
' → logprob: -14.001185417175293
    8. '       ' → logprob: -14.126185417175293
    9. ' ' → logprob: -14.501185417175293
    10. '  ' → logprob: -14.626185417175293

Token 727: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029919996857643127
    2. '   ' → logprob: -3.5299201011657715
    3. ',' → logprob: -9.279919624328613
    4. 'def' → logprob: -10.154919624328613
    5. ')' → logprob: -11.529919624328613
    6. '.
' → logprob: -12.279919624328613
    7. '  ' → logprob: -12.404919624328613
    8. ' =' → logprob: -12.529919624328613
    9. '    ' → logprob: -12.654919624328613
    10. '=' → logprob: -13.029919624328613

Token 728: ' Ap' (ID: 6537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16350683569908142
    2. ' dp' → logprob: -3.2885067462921143
    3. 'dp' → logprob: -3.4135067462921143
    4. ' calc' → logprob: -3.9135067462921143
    5. ' compute' → logprob: -4.288506984710693
    6. 'Calcul' → logprob: -4.538506984710693
    7. 'c' → logprob: -4.913506984710693
    8. ' Cal' → logprob: -5.038506984710693
    9. 'compute' → logprob: -5.288506984710693
    10. 'Cal' → logprob: -5.538506984710693

Token 729: 'plique' (ID: 71193)
  Prédit: 'plique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plique' → logprob: -0.1299367994070053
    2. 'pl' → logprob: -2.129936695098877
    3. 'p' → logprob: -6.129936695098877
    4. 'ply' → logprob: -8.504937171936035
    5. 'pli' → logprob: -8.504937171936035
    6. 'plies' → logprob: -9.129937171936035
    7. 'pel' → logprob: -9.879937171936035
    8. 'pliquer' → logprob: -10.004937171936035
    9. 'ple' → logprob: -10.254937171936035
    10. 'pile' → logprob: -10.754937171936035

Token 730: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4579845368862152
    2. ' compute' → logprob: -1.3329845666885376
    3. ' la' → logprob: -2.832984447479248
    4. ' calculate' → logprob: -3.457984447479248
    5. 'compute' → logprob: -4.832984447479248
    6. '   ' → logprob: -5.707984447479248
    7. ' les' → logprob: -7.332984447479248
    8. 'le' → logprob: -8.082984924316406
    9. 'calculate' → logprob: -8.082984924316406
    10. '_compute' → logprob: -8.207984924316406

Token 731: ' programmation' (ID: 166376)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.25528383255004883
    2. ' compute' → logprob: -1.8802838325500488
    3. 'calculate' → logprob: -3.380283832550049
    4. '_compute' → logprob: -4.380283832550049
    5. 'calcul' → logprob: -4.630283832550049
    6. ' calculate' → logprob: -5.005283832550049
    7. ' calcul' → logprob: -5.630283832550049
    8. 'dp' → logprob: -6.005283832550049
    9. ' computation' → logprob: -6.755283832550049
    10. '_dp' → logprob: -7.755283832550049

Token 732: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -0.15631549060344696
    2. 'd' → logprob: -2.156315565109253
    3. ' dynamic' → logprob: -4.156315326690674
    4. 'dynamic' → logprob: -4.656315326690674
    5. '   ' → logprob: -6.906315326690674
    6. '_' → logprob: -7.156315326690674
    7. ' dynam' → logprob: -7.406315326690674
    8. '_dynamic' → logprob: -7.531315326690674
    9. '    
' → logprob: -8.781315803527832
    10. '```' → logprob: -9.156315803527832

Token 733: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030667202547192574
    2. ',
' → logprob: -4.030667304992676
    3. ',' → logprob: -4.780667304992676
    4. '
' → logprob: -6.405667304992676
    5. '    
' → logprob: -6.530667304992676
    6. '.' → logprob: -7.780667304992676
    7. '()' → logprob: -9.405667304992676
    8. '()
' → logprob: -9.530667304992676
    9. '  
' → logprob: -9.780667304992676
    10. ':' → logprob: -10.280667304992676

Token 734: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.06706801056861877
    2. ' calcul' → logprob: -2.817068099975586
    3. 'ob' → logprob: -6.442068099975586
    4. ' produire' → logprob: -7.067068099975586
    5. 'calcul' → logprob: -7.192068099975586
    6. ' afficher' → logprob: -7.567068099975586
    7. ' déterminer' → logprob: -7.942068099975586
    8. ' compter' → logprob: -8.192068099975586
    9. ' trouver' → logprob: -8.817068099975586
    10. 'final' → logprob: -9.942068099975586

Token 735: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.13475953042507172
    2. ' la' → logprob: -2.7597594261169434
    3. '   ' → logprob: -3.3847594261169434
    4. 'le' → logprob: -4.134759426116943
    5. ' les' → logprob: -5.509759426116943
    6. 'la' → logprob: -5.509759426116943
    7. 'result' → logprob: -6.509759426116943
    8. ' et' → logprob: -6.759759426116943
    9. ' result' → logprob: -7.134759426116943
    10. ' résultat' → logprob: -8.259759902954102

Token 736: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.2767884433269501
    2. 'rés' → logprob: -2.0267884731292725
    3. 'nombre' → logprob: -3.0267884731292725
    4. ' nombre' → logprob: -3.2767884731292725
    5. 'result' → logprob: -3.9017884731292725
    6. ' resultat' → logprob: -6.526788234710693
    7. ' result' → logprob: -6.651788234710693
    8. 'ré' → logprob: -9.151788711547852
    9. ' résultats' → logprob: -9.151788711547852
    10. '   ' → logprob: -9.401788711547852

Token 737: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5274304151535034
    2. ',
' → logprob: -1.0274304151535034
    3. ',' → logprob: -3.027430534362793
    4. '.' → logprob: -6.277430534362793
    5. '    
' → logprob: -7.027430534362793
    6. '
' → logprob: -7.527430534362793
    7. '.
' → logprob: -9.402430534362793
    8. ':' → logprob: -10.902430534362793
    9. '  
' → logprob: -10.902430534362793
    10. '(),
' → logprob: -11.402430534362793

Token 738: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09382445365190506
    2. ',
' → logprob: -2.5938243865966797
    3. ',' → logprob: -5.21882438659668
    4. '.' → logprob: -5.59382438659668
    5. '    
' → logprob: -6.09382438659668
    6. '
' → logprob: -6.59382438659668
    7. '()' → logprob: -7.46882438659668
    8. '()
' → logprob: -7.71882438659668
    9. '.
' → logprob: -7.96882438659668
    10. ':' → logprob: -8.46882438659668

Token 739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002870801545213908
    2. '
' → logprob: -8.625287055969238
    3. '    
' → logprob: -9.250287055969238
    4. ' and' → logprob: -12.625287055969238
    5. '#' → logprob: -13.625287055969238
    6. ')' → logprob: -14.125287055969238
    7. 'and' → logprob: -14.250287055969238
    8. ',' → logprob: -14.250287055969238
    9. '       ' → logprob: -14.500287055969238
    10. '```' → logprob: -14.500287055969238

Token 740: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016754455282352865
    2. '4' → logprob: -9.250167846679688
    3. '    
' → logprob: -10.250167846679688
    4. '#' → logprob: -11.625167846679688
    5. '
' → logprob: -12.125167846679688
    6. '    ' → logprob: -12.250167846679688
    7. ',' → logprob: -12.875167846679688
    8. ' and' → logprob: -13.250167846679688
    9. '```' → logprob: -13.375167846679688
    10. '       ' → logprob: -13.500167846679688

Token 741: '4' (ID: 19)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000285530521068722
    2. '
' → logprob: -8.500285148620605
    3. '    
' → logprob: -10.250285148620605
    4. ' and' → logprob: -11.250285148620605
    5. '    ' → logprob: -11.875285148620605
    6. ')' → logprob: -12.500285148620605
    7. ',' → logprob: -12.875285148620605
    8. '  ' → logprob: -12.875285148620605
    9. ' et' → logprob: -13.125285148620605
    10. '#' → logprob: -13.250285148620605

Token 742: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4774985909461975
    2. '   ' → logprob: -0.9774985909461975
    3. '.
' → logprob: -6.602498531341553
    4. ')' → logprob: -6.852498531341553
    5. ',' → logprob: -7.727498531341553
    6. 'def' → logprob: -8.852499008178711
    7. '    
' → logprob: -8.977499008178711
    8. ':' → logprob: -9.102499008178711
    9. '
' → logprob: -9.977499008178711
    10. '<|end|>' → logprob: -10.477499008178711

Token 743: ' Aff' (ID: 13741)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3935486376285553
    2. 'print' → logprob: -1.893548607826233
    3. '   ' → logprob: -2.8935487270355225
    4. ' result' → logprob: -3.2685487270355225
    5. ' affiche' → logprob: -3.6435487270355225
    6. ' n' → logprob: -3.7685487270355225
    7. ' imprime' → logprob: -4.393548488616943
    8. 'result' → logprob: -4.643548488616943
    9. 'aff' → logprob: -6.143548488616943
    10. 'n' → logprob: -6.643548488616943

Token 744: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0007846142980270088
    2. 'icher' → logprob: -7.500784397125244
    3. '   ' → logprob: -9.000784873962402
    4. 'ichage' → logprob: -10.000784873962402
    5. '#' → logprob: -10.125784873962402
    6. 'ic' → logprob: -11.250784873962402
    7. '```' → logprob: -13.375784873962402
    8. '       ' → logprob: -13.625784873962402
    9. '
' → logprob: -13.750784873962402
    10. '**' → logprob: -14.000784873962402

Token 745: ' le' (ID: 505)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.3885095417499542
    2. '(len' → logprob: -1.5135095119476318
    3. '(' → logprob: -2.763509511947632
    4. '   ' → logprob: -4.263509750366211
    5. ' le' → logprob: -4.763509750366211
    6. '()' → logprob: -5.263509750366211
    7. '(result' → logprob: -5.388509750366211
    8. 'dp' → logprob: -5.888509750366211
    9. ' dp' → logprob: -7.263509750366211
    10. ' la' → logprob: -7.638509750366211

Token 746: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.17332229018211365
    2. ' résultat' → logprob: -2.7983222007751465
    3. '()' → logprob: -3.4233222007751465
    4. 'rés' → logprob: -3.5483222007751465
    5. ' result' → logprob: -4.2983222007751465
    6. '(result' → logprob: -4.9233222007751465
    7. '(' → logprob: -5.0483222007751465
    8. 'res' → logprob: -5.7983222007751465
    9. ' resultat' → logprob: -6.2983222007751465
    10. 'r' → logprob: -7.1733222007751465

Token 747: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061381518840789795
    2. '()' → logprob: -3.1863815784454346
    3. '()
' → logprob: -4.4363813400268555
    4. '
' → logprob: -5.8113813400268555
    5. ':' → logprob: -6.9363813400268555
    6. '.' → logprob: -7.3113813400268555
    7. '():' → logprob: -7.3113813400268555
    8. '():
' → logprob: -7.9363813400268555
    9. '    
' → logprob: -8.311381340026855
    10. '```' → logprob: -9.186381340026855

Token 748: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9564274549484253
    2. '()' → logprob: -1.0814274549484253
    3. 'i' → logprob: -2.456427574157715
    4. '(i' → logprob: -3.081427574157715
    5. ' i' → logprob: -3.331427574157715
    6. 'r' → logprob: -3.706427574157715
    7. '   ' → logprob: -3.831427574157715
    8. ' print' → logprob: -4.081427574157715
    9. '()
' → logprob: -4.831427574157715
    10. '(' → logprob: -4.831427574157715

Token 749: ' dernière' (ID: 39497)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -1.0262112617492676
    2. ' dernier' → logprob: -1.2762112617492676
    3. ' test' → logprob: -2.4012112617492676
    4. ' résultat' → logprob: -2.7762112617492676
    5. ' code' → logprob: -3.6512112617492676
    6. ' cas' → logprob: -3.6512112617492676
    7. 'rés' → logprob: -3.9012112617492676
    8. 'test' → logprob: -4.026211261749268
    9. 'i' → logprob: -4.151211261749268
    10. 'print' → logprob: -4.401211261749268

Token 750: ' position' (ID: 4010)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.4017144739627838
    2. ' position' → logprob: -1.2767144441604614
    3. 'position' → logprob: -3.151714563369751
    4. ' ' → logprob: -5.901714324951172
    5. 'ligne' → logprob: -6.151714324951172
    6. '   ' → logprob: -6.276714324951172
    7. ' valeur' → logprob: -7.151714324951172
    8. ' line' → logprob: -7.901714324951172
    9. ' 
' → logprob: -8.776714324951172
    10. ')' → logprob: -9.151714324951172

Token 751: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.535880982875824
    2. '():
' → logprob: -1.6608810424804688
    3. '()' → logprob: -2.2858810424804688
    4. '():' → logprob: -2.5358810424804688
    5. '()
' → logprob: -3.4108810424804688
    6. '
' → logprob: -4.910881042480469
    7. ':' → logprob: -6.285881042480469
    8. ':
' → logprob: -6.535881042480469
    9. '    
' → logprob: -9.535881042480469
    10. 'def' → logprob: -9.535881042480469

Token 752: ' la' (ID: 557)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6033000946044922
    2. 'dp' → logprob: -0.9783000946044922
    3. ' la' → logprob: -2.603300094604492
    4. 'la' → logprob: -5.853300094604492
    5. 'c' → logprob: -10.228300094604492
    6. '   ' → logprob: -10.978300094604492
    7. '(dp' → logprob: -11.103300094604492
    8. ' l' → logprob: -11.353300094604492
    9. 'l' → logprob: -11.478300094604492
    10. '`' → logprob: -11.478300094604492

Token 753: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.39206063747406006
    2. ' liste' → logprob: -1.14206063747406
    3. 'dp' → logprob: -5.64206075668335
    4. 'list' → logprob: -7.39206075668335
    5. 'sé' → logprob: -8.142060279846191
    6. '   ' → logprob: -8.642060279846191
    7. ' dp' → logprob: -9.142060279846191
    8. 'table' → logprob: -9.392060279846191
    9. 'sequence' → logprob: -9.642060279846191
    10. ' list' → logprob: -10.017060279846191

Token 754: ' sais' (ID: 30010)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004547134507447481
    2. '
' → logprob: -5.754547119140625
    3. '()
' → logprob: -7.254547119140625
    4. '()' → logprob: -8.254547119140625
    5. '():
' → logprob: -8.629547119140625
    6. '    
' → logprob: -9.754547119140625
    7. ')' → logprob: -10.129547119140625
    8. ':
' → logprob: -10.879547119140625
    9. '():' → logprob: -10.879547119140625
    10. '):
' → logprob: -11.004547119140625

Token 755: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.00016671013145241886
    2. 'i' → logprob: -9.750166893005371
    3. 'e' → logprob: -9.875166893005371
    4. '
' → logprob: -11.000166893005371
    5. 'ies' → logprob: -11.250166893005371
    6. '   ' → logprob: -12.875166893005371
    7. '```' → logprob: -12.875166893005371
    8. '"""
' → logprob: -13.000166893005371
    9. '"' → logprob: -13.125166893005371
    10. '#' → logprob: -13.125166893005371

Token 756: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05015162378549576
    2. '():
' → logprob: -3.8001515865325928
    3. '()
' → logprob: -4.675151824951172
    4. '()' → logprob: -4.675151824951172
    5. '
' → logprob: -5.675151824951172
    6. '():' → logprob: -6.050151824951172
    7. ':
' → logprob: -7.050151824951172
    8. ':' → logprob: -7.175151824951172
    9. '):
' → logprob: -8.550151824951172
    10. '    
' → logprob: -9.175151824951172

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004569204058498144
    2. ')' → logprob: -6.129569053649902
    3. '
' → logprob: -6.629569053649902
    4. '    
' → logprob: -7.754569053649902
    5. '):' → logprob: -8.754569053649902
    6. ':' → logprob: -8.754569053649902
    7. '```' → logprob: -8.879569053649902
    8. '):
' → logprob: -10.379569053649902
    9. '<|end|>' → logprob: -10.504569053649902
    10. 'def' → logprob: -10.879569053649902

Token 758: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005715019651688635
    2. '
' → logprob: -8.375571250915527
    3. '    
' → logprob: -8.625571250915527
    4. 'n' → logprob: -10.000571250915527
    5. ')' → logprob: -10.375571250915527
    6. ':' → logprob: -10.500571250915527
    7. '```' → logprob: -10.500571250915527
    8. '  
' → logprob: -12.000571250915527
    9. 'def' → logprob: -12.125571250915527
    10. '):
' → logprob: -12.875571250915527

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.201457679271698
    2. 'n' → logprob: -1.7014577388763428
    3. ' n' → logprob: -10.076457977294922
    4. '	n' → logprob: -13.451457977294922
    5. 'def' → logprob: -14.826457977294922
    6. '```' → logprob: -15.076457977294922
    7. '(n' → logprob: -16.201457977294922
    8. '_n' → logprob: -17.451457977294922
    9. '
' → logprob: -17.576457977294922
    10. '    
' → logprob: -17.826457977294922

Token 760: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -6.392202976712724e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' n' → logprob: -15.500006675720215
    4. '```' → logprob: -20.0000057220459
    5. '	n' → logprob: -20.2500057220459
    6. '
' → logprob: -22.0000057220459
    7. '#' → logprob: -22.8750057220459
    8. '(n' → logprob: -22.8750057220459
    9. '    
' → logprob: -23.6250057220459
    10. '  ' → logprob: -23.6250057220459

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ',c' → logprob: -13.875001907348633
    3. ' ,' → logprob: -14.375001907348633
    4. ',n' → logprob: -16.500001907348633
    5. '‌,' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '=' → logprob: -17.500001907348633
    8. '<|end|>' → logprob: -17.500001907348633
    9. ',
' → logprob: -18.250001907348633
    10. ',...' → logprob: -18.500001907348633

Token 762: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3132622241973877
    2. ' c' → logprob: -1.3132622241973877
    3. '	c' → logprob: -15.063261985778809
    4. '<|end|>' → logprob: -15.938261985778809
    5. '_c' → logprob: -16.438262939453125
    6. ' ' → logprob: -17.938262939453125
    7. ')c' → logprob: -18.313262939453125
    8. ' ' → logprob: -18.438262939453125
    9. ' ' → logprob: -18.813262939453125
    10. 'colors' → logprob: -18.938262939453125

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6330456733703613
    2. '=' → logprob: -0.7580456733703613
    3. ',' → logprob: -7.758045673370361
    4. '   ' → logprob: -11.133045196533203
    5. ')' → logprob: -13.508045196533203
    6. '<|end|>' → logprob: -13.633045196533203
    7. '  ' → logprob: -14.633045196533203
    8. '    ' → logprob: -15.383045196533203
    9. ')=' → logprob: -16.008045196533203
    10. '=
' → logprob: -16.008045196533203

Token 764: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.01416350994259119
    2. ' read' → logprob: -4.264163494110107
    3. '	read' → logprob: -21.639163970947266
    4. '(read' → logprob: -23.764163970947266
    5. '_read' → logprob: -24.389163970947266
    6. '.read' → logprob: -25.639163970947266
    7. '   ' → logprob: -26.764163970947266
    8. 'Read' → logprob: -27.889163970947266
    9. 'reading' → logprob: -28.139163970947266
    10. 're' → logprob: -28.514163970947266

Token 765: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.026389814913272858
    2. '_' → logprob: -3.6513898372650146
    3. '_inputs' → logprob: -9.651390075683594
    4. '_output' → logprob: -12.151390075683594
    5. ')' → logprob: -12.151390075683594
    6. ' _' → logprob: -12.901390075683594
    7. '_in' → logprob: -13.151390075683594
    8. 'input' → logprob: -13.151390075683594
    9. '_user' → logprob: -13.776390075683594
    10. ')_' → logprob: -14.276390075683594

Token 766: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0032943941187113523
    2. '   ' → logprob: -6.503294467926025
    3. '    
' → logprob: -6.753294467926025
    4. '  
' → logprob: -8.253293991088867
    5. '<|end|>' → logprob: -9.378293991088867
    6. '
' → logprob: -10.128293991088867
    7. ' 
' → logprob: -10.128293991088867
    8. '()
' → logprob: -10.378293991088867
    9. 'n' → logprob: -10.378293991088867
    10. '[
' → logprob: -10.878293991088867

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11010188609361649
    2. 'r' → logprob: -2.7351019382476807
    3. '
' → logprob: -3.3601019382476807
    4. ' r' → logprob: -6.110101699829102
    5. '    
' → logprob: -6.235101699829102
    6. '  
' → logprob: -8.610101699829102
    7. '	r' → logprob: -9.360101699829102
    8. '```' → logprob: -10.110101699829102
    9. ' 
' → logprob: -10.235101699829102
    10. '  ' → logprob: -10.610101699829102

Token 768: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.008710063993930817
    2. '   ' → logprob: -4.758709907531738
    3. ' r' → logprob: -9.258709907531738
    4. '	r' → logprob: -15.883709907531738
    5. '   ' → logprob: -16.758710861206055
    6. '    
' → logprob: -17.008710861206055
    7. '```' → logprob: -17.258710861206055
    8. ' ' → logprob: -17.508710861206055
    9. 'previous' → logprob: -17.758710861206055
    10. '
' → logprob: -17.758710861206055

Token 769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25201526284217834
    2. '=' → logprob: -1.502015233039856
    3. ',' → logprob: -9.377015113830566
    4. '   ' → logprob: -13.627015113830566
    5. '<|end|>' → logprob: -16.127016067504883
    6. ')' → logprob: -16.877016067504883
    7. '=create' → logprob: -16.877016067504883
    8. '.' → logprob: -17.377016067504883
    9. '  ' → logprob: -17.377016067504883
    10. '＝' → logprob: -17.502016067504883

Token 770: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -9.65101717156358e-05
    2. ' calculate' → logprob: -9.250096321105957
    3. 'compute' → logprob: -14.750096321105957
    4. 'calc' → logprob: -20.000097274780273
    5. '.calculate' → logprob: -21.125097274780273
    6. 'alculate' → logprob: -21.500097274780273
    7. 'calcul' → logprob: -22.500097274780273
    8. ' compute' → logprob: -23.000097274780273
    9. 'cal' → logprob: -23.875097274780273
    10. 'calculator' → logprob: -24.000097274780273

Token 771: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -4.961759259458631e-06
    2. 'previous' → logprob: -12.250004768371582
    3. '_prev' → logprob: -16.6250057220459
    4. '_' → logprob: -17.2500057220459
    5. 'Previous' → logprob: -18.8750057220459
    6. ' previous' → logprob: -19.5000057220459
    7. '(previous' → logprob: -20.3750057220459
    8. '_existing' → logprob: -21.0000057220459
    9. '_current' → logprob: -21.5000057220459
    10. 'r' → logprob: -21.7500057220459

Token 772: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -1.700132997939363e-05
    2. '_oc' → logprob: -11.000017166137695
    3. 'occ' → logprob: -15.375017166137695
    4. '_OCC' → logprob: -17.625017166137695
    5. 'Occurrences' → logprob: -17.875017166137695
    6. '_' → logprob: -18.000017166137695
    7. '_previous' → logprob: -19.875017166137695
    8. ' occurrences' → logprob: -20.375017166137695
    9. '_ob' → logprob: -20.750017166137695
    10. 's' → logprob: -21.250017166137695

Token 773: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.011233855038881302
    2. 'ur' → logprob: -4.511233806610107
    3. 'ences' → logprob: -8.761234283447266
    4. 'urances' → logprob: -11.261234283447266
    5. 'urr' → logprob: -11.761234283447266
    6. 'urrencies' → logprob: -12.761234283447266
    7. 'r' → logprob: -13.386234283447266
    8. 'u' → logprob: -13.636234283447266
    9. 'urrence' → logprob: -14.136234283447266
    10. 'er' → logprob: -14.386234283447266

Token 774: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. 'c' → logprob: -16.875
    4. '(
' → logprob: -19.5
    5. '(C' → logprob: -19.875
    6. '(r' → logprob: -19.875
    7. '[c' → logprob: -20.375
    8. '   ' → logprob: -20.375
    9. '	c' → logprob: -21.0
    10. ')c' → logprob: -21.25

Token 775: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00534392474219203
    2. '   ' → logprob: -5.255343914031982
    3. ')
' → logprob: -9.13034439086914
    4. ' )' → logprob: -14.00534439086914
    5. '
' → logprob: -16.00534439086914
    6. '),' → logprob: -16.00534439086914
    7. '    
' → logprob: -16.13034439086914
    8. '()' → logprob: -16.25534439086914
    9. '<|end|>' → logprob: -16.25534439086914
    10. ' ' → logprob: -16.50534439086914

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019348548725247383
    2. 'dp' → logprob: -4.019348621368408
    3. ' dp' → logprob: -7.144348621368408
    4. 'result' → logprob: -7.894348621368408
    5. ' result' → logprob: -10.76934814453125
    6. '	dp' → logprob: -12.14434814453125
    7. '
' → logprob: -12.51934814453125
    8. 'results' → logprob: -13.51934814453125
    9. '_dp' → logprob: -13.76934814453125
    10. '```' → logprob: -14.01934814453125

Token 777: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.005246568005532026
    2. ' dp' → logprob: -5.505246639251709
    3. '   ' → logprob: -6.755246639251709
    4. 'result' → logprob: -13.25524616241455
    5. '	dp' → logprob: -14.38024616241455
    6. '_dp' → logprob: -15.88024616241455
    7. 'results' → logprob: -16.630247116088867
    8. ' ' → logprob: -16.755247116088867
    9. ' result' → logprob: -16.880247116088867
    10. 'd' → logprob: -17.255247116088867

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858759790658951
    2. '=' → logprob: -3.0485875606536865
    3. '[' → logprob: -15.798587799072266
    4. ' ' → logprob: -17.048587799072266
    5. '   ' → logprob: -17.298587799072266
    6. '_' → logprob: -17.423587799072266
    7. '  ' → logprob: -17.798587799072266
    8. '	' → logprob: -18.048587799072266
    9. ')' → logprob: -18.798587799072266
    10. '    ' → logprob: -18.923587799072266

Token 779: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.02975071594119072
    2. ' compute' → logprob: -3.5297508239746094
    3. 'calculate' → logprob: -15.27975082397461
    4. ' calculate' → logprob: -19.77975082397461
    5. '.compute' → logprob: -20.15475082397461
    6. '   ' → logprob: -20.65475082397461
    7. '_compute' → logprob: -20.65475082397461
    8. 'computer' → logprob: -20.90475082397461
    9. 'computed' → logprob: -22.90475082397461
    10. 'comput' → logprob: -23.27975082397461

Token 780: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.246537173457909e-06
    2. 'dp' → logprob: -12.500003814697266
    3. '(dp' → logprob: -14.750003814697266
    4. '_df' → logprob: -17.750003814697266
    5. '_dt' → logprob: -18.000003814697266
    6. '_' → logprob: -18.125003814697266
    7. '_dc' → logprob: -18.500003814697266
    8. '_db' → logprob: -18.750003814697266
    9. '	dp' → logprob: -18.750003814697266
    10. '_pd' → logprob: -18.875003814697266

Token 781: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. 'r' → logprob: -18.875
    4. ' (' → logprob: -19.625
    5. '[r' → logprob: -21.0
    6. '(
' → logprob: -22.375
    7. '(s' → logprob: -22.875
    8. ' r' → logprob: -23.125
    9. '	r' → logprob: -23.25
    10. '(re' → logprob: -23.375

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017731155967339873
    2. ')
' → logprob: -6.376772880554199
    3. '   ' → logprob: -10.1267728805542
    4. ',' → logprob: -10.8767728805542
    5. ' )' → logprob: -12.5017728805542
    6. '[' → logprob: -12.7517728805542
    7. '(r' → logprob: -13.1267728805542
    8. '[r' → logprob: -14.2517728805542
    9. '(' → logprob: -14.3767728805542
    10. ' ' → logprob: -14.7517728805542

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028346939012408257
    2. 'print' → logprob: -3.7783470153808594
    3. ' print' → logprob: -5.528347015380859
    4. '```' → logprob: -6.903347015380859
    5. '
' → logprob: -9.15334701538086
    6. '    
' → logprob: -12.65334701538086
    7. '``' → logprob: -13.40334701538086
    8. '	print' → logprob: -14.90334701538086
    9. '`' → logprob: -14.90334701538086
    10. '[' → logprob: -17.40334701538086

Token 784: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.1782583391759545e-05
    2. ' print' → logprob: -10.750031471252441
    3. '   ' → logprob: -11.500031471252441
    4. '
' → logprob: -16.375032424926758
    5. '```' → logprob: -18.000032424926758
    6. '    
' → logprob: -19.625032424926758
    7. '	print' → logprob: -20.500032424926758
    8. 'for' → logprob: -23.000032424926758
    9. '``' → logprob: -23.250032424926758
    10. '`' → logprob: -23.250032424926758

Token 785: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. 'dp' → logprob: -15.375006675720215
    4. ' (' → logprob: -17.2500057220459
    5. ' dp' → logprob: -18.1250057220459
    6. '	dp' → logprob: -18.8750057220459
    7. '(df' → logprob: -19.7500057220459
    8. '(
' → logprob: -20.2500057220459
    9. '((' → logprob: -20.8750057220459
    10. '_dp' → logprob: -21.5000057220459

Token 786: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -16.0
    3. '[len' → logprob: -16.0
    4. '[' → logprob: -16.875
    5. '[n' → logprob: -18.625
    6. '   ' → logprob: -19.625
    7. ')' → logprob: -20.5
    8. ' [-' → logprob: -20.75
    9. '][-' → logprob: -22.0
    10. ' -' → logprob: -22.375

Token 787: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -17.75
    4. ']' → logprob: -18.0
    5. '```' → logprob: -18.5
    6. '0' → logprob: -19.625
    7. '])' → logprob: -20.0
    8. '  ' → logprob: -20.125
    9. ')' → logprob: -20.375
    10. '
' → logprob: -20.625

Token 788: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. '])' → logprob: -11.625011444091797
    3. '))' → logprob: -13.375011444091797
    4. '})' → logprob: -14.500011444091797
    5. '）' → logprob: -16.750011444091797
    6. ' )' → logprob: -16.875011444091797
    7. '())' → logprob: -17.375011444091797
    8. '`)' → logprob: -17.375011444091797
    9. ')
' → logprob: -18.125011444091797
    10. ')`' → logprob: -18.625011444091797

Token 789: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024076515808701515
    2. '#' → logprob: -4.399076461791992
    3. 'main' → logprob: -5.149076461791992
    4. '```' → logprob: -5.649076461791992
    5. '<|end|>' → logprob: -6.649076461791992
    6. ' if' → logprob: -7.399076461791992
    7. '
' → logprob: -9.524076461791992
    8. '[' → logprob: -9.649076461791992
    9. 'def' → logprob: -10.649076461791992
    10. '(main' → logprob: -11.399076461791992

Token 790: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.15722444653511047
    2. '__' → logprob: -2.282224416732788
    3. '_' → logprob: -3.157224416732788
    4. ' _' → logprob: -8.282224655151367
    5. ' ' → logprob: -8.532224655151367
    6. '_name' → logprob: -9.032224655151367
    7. '___' → logprob: -9.407224655151367
    8. ' ' → logprob: -9.657224655151367
    9. '  ' → logprob: -9.782224655151367
    10. ' ___' → logprob: -10.657224655151367

Token 791: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006324063055217266
    2. ' ==' → logprob: -5.506324291229248
    3. '==' → logprob: -6.381324291229248
    4. ' __' → logprob: -8.13132381439209
    5. '=="' → logprob: -9.63132381439209
    6. '__.__' → logprob: -9.63132381439209
    7. '_' → logprob: -9.75632381439209
    8. '__.' → logprob: -11.13132381439209
    9. '__[' → logprob: -11.63132381439209
    10. '___' → logprob: -11.88132381439209

Token 792: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0002661039761733264
    2. '__.__' → logprob: -8.250266075134277
    3. '==' → logprob: -13.000266075134277
    4. '__.' → logprob: -13.250266075134277
    5. '___' → logprob: -15.750266075134277
    6. '__["' → logprob: -15.875266075134277
    7. '____' → logprob: -15.875266075134277
    8. '=="' → logprob: -16.250267028808594
    9. '__('' → logprob: -17.125267028808594
    10. ' ==' → logprob: -17.250267028808594

Token 793: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0018623570213094354
    2. '==' → logprob: -6.626862525939941
    3. '=="' → logprob: -8.126862525939941
    4. ' ==' → logprob: -8.501862525939941
    5. '__.__' → logprob: -10.376862525939941
    6. '___' → logprob: -13.376862525939941
    7. '__["' → logprob: -14.001862525939941
    8. '=='' → logprob: -14.001862525939941
    9. '__.' → logprob: -14.251862525939941
    10. '.__' → logprob: -14.501862525939941

Token 794: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006719759665429592
    2. ''' → logprob: -5.006719589233398
    3. ' "__' → logprob: -12.506719589233398
    4. '__' → logprob: -14.881719589233398
    5. '"user' → logprob: -15.506719589233398
    6. '"name' → logprob: -17.1317195892334
    7. '"_' → logprob: -17.2567195892334
    8. ' '__' → logprob: -17.8817195892334
    9. '"default' → logprob: -18.8817195892334
    10. '"class' → logprob: -19.0067195892334

Token 795: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00039158877916634083
    2. 'name' → logprob: -7.875391483306885
    3. 'built' → logprob: -12.000391960144043
    4. 'm' → logprob: -13.500391960144043
    5. 'builtin' → logprob: -13.625391960144043
    6. '__' → logprob: -14.375391960144043
    7. 'python' → logprob: -14.500391960144043
    8. 'x' → logprob: -15.500391960144043
    9. 'if' → logprob: -15.625391960144043
    10. '__':
' → logprob: -15.875391960144043

Token 796: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.31499022245407104
    2. '__' → logprob: -1.3149902820587158
    3. '__:' → logprob: -6.814990043640137
    4. '':' → logprob: -7.564990043640137
    5. ':' → logprob: -9.939990043640137
    6. '_' → logprob: -10.439990043640137
    7. '__":
' → logprob: -10.564990043640137
    8. ''' → logprob: -13.564990043640137
    9. '__*/' → logprob: -13.939990043640137
    10. ''>' → logprob: -13.939990043640137

Token 797: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11319155246019363
    2. 'main' → logprob: -2.238191604614258
    3. '	main' → logprob: -8.113191604614258
    4. '   ' → logprob: -9.863191604614258
    5. '_main' → logprob: -11.863191604614258
    6. '(main' → logprob: -12.488191604614258
    7. '    
' → logprob: -13.738191604614258
    8. '__' → logprob: -13.988191604614258
    9. ' 
' → logprob: -14.238191604614258
    10. ' run' → logprob: -14.238191604614258

Token 798: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -22.125
    4. '   ' → logprob: -25.375
    5. 'mai' → logprob: -26.0
    6. 'm' → logprob: -26.375
    7. 'ma' → logprob: -26.5
    8. '(main' → logprob: -26.75
    9. '_main' → logprob: -26.75
    10. '.main' → logprob: -27.0

Token 799: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 797
Tokens correctement prédits (1ère position, stricte): 262
Tokens correctement prédits (1ère position, avec adaptation): 286
Tokens correctement prédits (top 10): 558
Précision stricte (1ère position): 32.87%
Précision adaptée (1ère position): 35.88%
Précision (top 10): 70.01%
================================================================================
