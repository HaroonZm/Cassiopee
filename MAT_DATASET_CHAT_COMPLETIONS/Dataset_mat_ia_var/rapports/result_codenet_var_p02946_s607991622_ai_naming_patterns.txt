================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
range_start, range_center = map(int, input().split())
range_values = [value for value in range(range_center - range_start + 1, range_center + range_start)]
print(*range_values)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'range' (ID: 20967)
  → Token d'amorce (pas de prédiction)

Token 1: '_start' (ID: 10949)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04387703537940979
    2. ' range' → logprob: -4.293877124786377
    3. ' ' → logprob: -4.418877124786377
    4. '_' → logprob: -5.168877124786377
    5. '_range' → logprob: -5.293877124786377
    6. 'space' → logprob: -5.668877124786377
    7. '=' → logprob: -6.793877124786377
    8. ' _' → logprob: -7.793877124786377
    9. ' =' → logprob: -7.918877124786377
    10. '```' → logprob: -8.043876647949219

Token 4: '_center' (ID: 48737)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001627217628993094
    2. '_start' → logprob: -7.751627445220947
    3. '_end' → logprob: -8.251626968383789
    4. '```' → logprob: -8.501626968383789
    5. '_range' → logprob: -9.626626968383789
    6. '_s' → logprob: -9.626626968383789
    7. '.' → logprob: -9.751626968383789
    8. 's' → logprob: -10.126626968383789
    9. ')' → logprob: -10.126626968383789
    10. '_,' → logprob: -10.251626968383789

Token 5: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.050245046615600586
    2. ',' → logprob: -3.6752450466156006
    3. '=' → logprob: -4.17524528503418
    4. '_range' → logprob: -5.92524528503418
    5. '_,' → logprob: -6.55024528503418
    6. ')' → logprob: -6.80024528503418
    7. '```' → logprob: -6.80024528503418
    8. ' =' → logprob: -7.30024528503418
    9. '.' → logprob: -7.80024528503418
    10. ' _' → logprob: -8.55024528503418

Token 6: ' map' (ID: 4014)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.9958774447441101
    2. 'range' → logprob: -1.4958775043487549
    3. ' ' → logprob: -1.7458775043487549
    4. '0' → logprob: -1.7458775043487549
    5. ' [' → logprob: -4.620877265930176
    6. ' (' → logprob: -4.620877265930176
    7. '[' → logprob: -5.370877265930176
    8. ' map' → logprob: -5.495877265930176
    9. '(range' → logprob: -5.870877265930176
    10. '(' → logprob: -5.995877265930176

Token 7: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.33931538462638855
    2. '(' → logprob: -1.714315414428711
    3. '<|end|>' → logprob: -2.964315414428711
    4. '(int' → logprob: -3.214315414428711
    5. '```' → logprob: -5.089315414428711
    6. '(range' → logprob: -5.589315414428711
    7. '(str' → logprob: -6.339315414428711
    8. '<|end|>' → logprob: -7.464315414428711
    9. '_range' → logprob: -7.589315414428711
    10. '(_' → logprob: -8.089315414428711

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.49924930930137634
    2. '(range' → logprob: -1.3742493391036987
    3. '(' → logprob: -2.249249219894409
    4. '(user' → logprob: -4.249249458312988
    5. ')' → logprob: -4.374249458312988
    6. 'range' → logprob: -5.874249458312988
    7. '(value' → logprob: -6.874249458312988
    8. '(raw' → logprob: -6.874249458312988
    9. '(request' → logprob: -7.874249458312988
    10. 'input' → logprob: -7.874249458312988

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.19539819657802582
    2. ' input' → logprob: -1.820398211479187
    3. 'range' → logprob: -4.320398330688477
    4. ')' → logprob: -6.945398330688477
    5. ' range' → logprob: -6.945398330688477
    6. '(input' → logprob: -8.445398330688477
    7. 'str' → logprob: -11.195398330688477
    8. '(range' → logprob: -11.320398330688477
    9. 'user' → logprob: -11.695398330688477
    10. ' )' → logprob: -11.945398330688477

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47933587431907654
    2. '())' → logprob: -1.229335904121399
    3. '().' → logprob: -3.2293357849121094
    4. '(' → logprob: -3.9793357849121094
    5. '(()' → logprob: -4.979335784912109
    6. ')' → logprob: -5.354335784912109
    7. '`()' → logprob: -5.729335784912109
    8. '());' → logprob: -6.229335784912109
    9. '('' → logprob: -6.479335784912109
    10. '()`' → logprob: -6.479335784912109

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007133854669518769
    2. 'strip' → logprob: -7.250713348388672
    3. 'rstrip' → logprob: -13.250713348388672
    4. ' split' → logprob: -13.625713348388672
    5. '(split' → logprob: -15.875713348388672
    6. 'spl' → logprob: -16.375713348388672
    7. 'replace' → logprob: -16.375713348388672
    8. 'startswith' → logprob: -16.750713348388672
    9. 'rs' → logprob: -18.250713348388672
    10. '```' → logprob: -18.500713348388672

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018973510712385178
    2. ')' → logprob: -4.518973350524902
    3. '()' → logprob: -5.768973350524902
    4. '('' → logprob: -6.393973350524902
    5. '()))' → logprob: -6.518973350524902
    6. '(' → logprob: -7.268973350524902
    7. '))' → logprob: -7.518973350524902
    8. ' ())' → logprob: -9.768973350524902
    9. '')' → logprob: -10.018973350524902
    10. '(""))' → logprob: -10.143973350524902

Token 13: 'range' (ID: 20967)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5468385219573975
    2. '<|end|>' → logprob: -1.6718385219573975
    3. 'range' → logprob: -1.7968385219573975
    4. ',' → logprob: -2.1718385219573975
    5. '+' → logprob: -3.0468385219573975
    6. '#' → logprob: -3.0468385219573975
    7. ':' → logprob: -3.1718385219573975
    8. 'for' → logprob: -3.2968385219573975
    9. 'if' → logprob: -3.9218385219573975
    10. ')' → logprob: -4.421838760375977

Token 14: '_values' (ID: 20393)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2269587516784668
    2. '_start' → logprob: -1.6019587516784668
    3. '_center' → logprob: -7.101958751678467
    4. '_range' → logprob: -8.601959228515625
    5. '_.' → logprob: -9.351959228515625
    6. '_end' → logprob: -9.601959228515625
    7. '._' → logprob: -10.101959228515625
    8. ' _' → logprob: -10.226959228515625
    9. '_lower' → logprob: -10.226959228515625
    10. '_s' → logprob: -10.226959228515625

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23918235301971436
    2. '(' → logprob: -2.239182472229004
    3. '.' → logprob: -2.739182472229004
    4. '(range' → logprob: -3.489182472229004
    5. '_range' → logprob: -6.239182472229004
    6. '[:]' → logprob: -6.489182472229004
    7. '_' → logprob: -6.614182472229004
    8. '.range' → logprob: -6.864182472229004
    9. '[]' → logprob: -7.114182472229004
    10. '```' → logprob: -7.239182472229004

Token 16: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7386216521263123
    2. 'list' → logprob: -1.613621711730957
    3. ' range' → logprob: -1.738621711730957
    4. ' list' → logprob: -1.988621711730957
    5. '[' → logprob: -5.363621711730957
    6. ' [' → logprob: -5.988621711730957
    7. '[]' → logprob: -7.113621711730957
    8. '[list' → logprob: -7.113621711730957
    9. 'set' → logprob: -7.613621711730957
    10. '(range' → logprob: -7.738621711730957

Token 17: 'value' (ID: 1594)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02896379493176937
    2. 'i' → logprob: -3.653963804244995
    3. ' range' → logprob: -6.903963565826416
    4. 'x' → logprob: -7.028963565826416
    5. '0' → logprob: -7.903963565826416
    6. ' i' → logprob: -8.903964042663574
    7. '(range' → logprob: -9.278964042663574
    8. '(i' → logprob: -10.653964042663574
    9. 'r' → logprob: -10.778964042663574
    10. '_' → logprob: -10.903964042663574

Token 18: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05776374042034149
    2. 'for' → logprob: -2.9327638149261475
    3. ')' → logprob: -7.432763576507568
    4. ' ' → logprob: -7.432763576507568
    5. ' in' → logprob: -7.682763576507568
    6. '(range' → logprob: -8.057764053344727
    7. 'range' → logprob: -8.432764053344727
    8. 'in' → logprob: -9.307764053344727
    9. '(' → logprob: -9.307764053344727
    10. '+' → logprob: -9.432764053344727

Token 19: ' value' (ID: 1432)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4387276768684387
    2. ' value' → logprob: -1.438727617263794
    3. ' ' → logprob: -2.563727617263794
    4. 'range' → logprob: -3.438727617263794
    5. 'value' → logprob: -4.813727855682373
    6. ' in' → logprob: -7.813727855682373
    7. '	range' → logprob: -8.938727378845215
    8. '  ' → logprob: -10.313727378845215
    9. '<|end|>' → logprob: -10.438727378845215
    10. ' i' → logprob: -10.563727378845215

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07008548825979233
    2. 'in' → logprob: -2.6950855255126953
    3. ' ' → logprob: -9.570085525512695
    4. '<|end|>' → logprob: -10.320085525512695
    5. 'range' → logprob: -11.320085525512695
    6. 'import' → logprob: -11.695085525512695
    7. '<|end|>' → logprob: -12.320085525512695
    8. '  ' → logprob: -12.820085525512695
    9. 'to' → logprob: -12.945085525512695
    10. '_in' → logprob: -13.382585525512695

Token 21: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.313279926776886
    2. ' range' → logprob: -1.3132798671722412
    3. '(range' → logprob: -11.31328010559082
    4. '	range' → logprob: -12.56328010559082
    5. ' ' → logprob: -13.81328010559082
    6. '  ' → logprob: -15.56328010559082
    7. '```' → logprob: -15.56328010559082
    8. ')' → logprob: -15.56328010559082
    9. 'r' → logprob: -15.81328010559082
    10. '.range' → logprob: -16.31328010559082

Token 22: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.474155068397522
    2. '(' → logprob: -0.974155068397522
    3. ' (' → logprob: -10.84915542602539
    4. '(_' → logprob: -11.09915542602539
    5. '(
' → logprob: -11.72415542602539
    6. '(_,' → logprob: -12.09915542602539
    7. '(start' → logprob: -12.22415542602539
    8. '((' → logprob: -12.47415542602539
    9. '(r' → logprob: -12.72415542602539
    10. '(

' → logprob: -12.84915542602539

Token 23: '_center' (ID: 48737)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.05008552595973015
    2. '_center' → logprob: -3.0500855445861816
    3. '_' → logprob: -6.675085544586182
    4. ' _' → logprob: -9.425085067749023
    5. '_range' → logprob: -9.425085067749023
    6. '_cent' → logprob: -10.550085067749023
    7. '_st' → logprob: -10.675085067749023
    8. '_s' → logprob: -11.550085067749023
    9. '_c' → logprob: -12.675085067749023
    10. '_star' → logprob: -13.175085067749023

Token 24: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07928907126188278
    2. '-' → logprob: -3.079288959503174
    3. '-range' → logprob: -4.079288959503174
    4. ',' → logprob: -4.579288959503174
    5. ' ,' → logprob: -6.079288959503174
    6. '+' → logprob: -8.454289436340332
    7. ' -,' → logprob: -9.079289436340332
    8. ' +' → logprob: -9.079289436340332
    9. '-,' → logprob: -9.329289436340332
    10. ')' → logprob: -9.704289436340332

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3139207661151886
    2. ' range' → logprob: -1.3139207363128662
    3. '10' → logprob: -8.688920974731445
    4. '5' → logprob: -8.813920974731445
    5. ' ' → logprob: -9.063920974731445
    6. '3' → logprob: -9.438920974731445
    7. '	range' → logprob: -10.188920974731445
    8. '1' → logprob: -10.563920974731445
    9. '20' → logprob: -10.813920974731445
    10. '2' → logprob: -11.063920974731445

Token 26: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.0683535037969705e-05
    2. 'start' → logprob: -12.12501049041748
    3. '_center' → logprob: -13.12501049041748
    4. '_' → logprob: -13.50001049041748
    5. '_star' → logprob: -15.12501049041748
    6. 'Start' → logprob: -15.25001049041748
    7. '_START' → logprob: -15.87501049041748
    8. '_st' → logprob: -16.000011444091797
    9. '_size' → logprob: -16.125011444091797
    10. '_range' → logprob: -16.250011444091797

Token 27: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00252917199395597
    2. ' ,' → logprob: -6.002529144287109
    3. ')]' → logprob: -10.87752914428711
    4. ')' → logprob: -11.37752914428711
    5. ' +' → logprob: -11.87752914428711
    6. ' ' → logprob: -12.25252914428711
    7. '+' → logprob: -13.00252914428711
    8. ' )' → logprob: -13.62752914428711
    9. '(range' → logprob: -14.00252914428711
    10. ',r' → logprob: -14.25252914428711

Token 28: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15774860978126526
    2. ' ' → logprob: -2.5327486991882324
    3. 'range' → logprob: -3.2827486991882324
    4. ' range' → logprob: -3.6577486991882324
    5. ' value' → logprob: -6.907748699188232
    6. 'value' → logprob: -7.157748699188232
    7. ')' → logprob: -7.657748699188232
    8. '(range' → logprob: -8.032748222351074
    9. ' abs' → logprob: -9.407748222351074
    10. '10' → logprob: -9.782748222351074

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014045970514416695
    2. 'range' → logprob: -4.3890461921691895
    3. ' ' → logprob: -6.7640461921691895
    4. ' range' → logprob: -8.764045715332031
    5. 'value' → logprob: -9.014045715332031
    6. '2' → logprob: -10.014045715332031
    7. '0' → logprob: -11.389045715332031
    8. '(range' → logprob: -11.514045715332031
    9. '(' → logprob: -12.139045715332031
    10. 'abs' → logprob: -12.389045715332031

Token 30: ',' (ID: 11)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.049290262162685394
    2. ',' → logprob: -3.299290180206299
    3. ')' → logprob: -5.174290180206299
    4. ' ,' → logprob: -5.924290180206299
    5. ' )' → logprob: -6.049290180206299
    6. ')])' → logprob: -9.049290657043457
    7. ']' → logprob: -9.174290657043457
    8. '))' → logprob: -10.049290657043457
    9. ' ]' → logprob: -10.174290657043457
    10. ' ' → logprob: -10.299290657043457

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1604534238576889
    2. 'range' → logprob: -1.91045343875885
    3. ' ' → logprob: -8.660453796386719
    4. '2' → logprob: -11.285453796386719
    5. '(range' → logprob: -11.285453796386719
    6. '	range' → logprob: -11.535453796386719
    7. ' ' → logprob: -12.722953796386719
    8. '  ' → logprob: -13.285453796386719
    9. 'Range' → logprob: -13.347953796386719
    10. 'rang' → logprob: -13.597953796386719

Token 32: '_center' (ID: 48737)
  Prédit: '_center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.00038586699520237744
    2. '_start' → logprob: -8.000386238098145
    3. '_cent' → logprob: -10.625386238098145
    4. '_range' → logprob: -11.375386238098145
    5. '_c' → logprob: -12.375386238098145
    6. 'center' → logprob: -12.750386238098145
    7. '_' → logprob: -13.750386238098145
    8. '_end' → logprob: -13.875386238098145
    9. '(center' → logprob: -14.000386238098145
    10. ' center' → logprob: -14.000386238098145

Token 33: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20145739614963531
    2. '+' → logprob: -1.7014573812484741
    3. ' -' → logprob: -11.326457023620605
    4. ')' → logprob: -11.326457023620605
    5. ' ' → logprob: -11.451457023620605
    6. ',' → logprob: -12.951457023620605
    7. '-' → logprob: -13.701457023620605
    8. ' plus' → logprob: -13.951457023620605
    9. ' )' → logprob: -14.388957023620605
    10. ' ,' → logprob: -14.576457023620605

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16204890608787537
    2. ' range' → logprob: -2.162048816680908
    3. '1' → logprob: -3.412048816680908
    4. ' ' → logprob: -6.537048816680908
    5. '	range' → logprob: -10.662049293518066
    6. '2' → logprob: -10.912049293518066
    7. '(range' → logprob: -11.412049293518066
    8. '_range' → logprob: -12.287049293518066
    9. 'space' → logprob: -12.349549293518066
    10. 'value' → logprob: -12.599549293518066

Token 35: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0009651767322793603
    2. '+' → logprob: -7.875965118408203
    3. ' +' → logprob: -7.875965118408203
    4. ' ' → logprob: -9.500965118408203
    5. ' _' → logprob: -9.750965118408203
    6. '_' → logprob: -10.375965118408203
    7. 'start' → logprob: -10.875965118408203
    8. '_range' → logprob: -11.750965118408203
    9. '1' → logprob: -12.125965118408203
    10. '_add' → logprob: -13.875965118408203

Token 36: ')]
' (ID: 11587)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2765408456325531
    2. ' +' → logprob: -1.6515408754348755
    3. ')]' → logprob: -3.151540756225586
    4. ')' → logprob: -5.401540756225586
    5. ')])' → logprob: -6.651540756225586
    6. '))' → logprob: -6.776540756225586
    7. ' )' → logprob: -9.776540756225586
    8. ' ))' → logprob: -11.901540756225586
    9. ' ' → logprob: -12.026540756225586
    10. '2' → logprob: -12.276540756225586

Token 37: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16999304294586182
    2. ']' → logprob: -2.2949929237365723
    3. '+' → logprob: -3.2949929237365723
    4. ':' → logprob: -4.669992923736572
    5. '[' → logprob: -5.419992923736572
    6. '```' → logprob: -6.669992923736572
    7. ' ' → logprob: -6.919992923736572
    8. '(' → logprob: -7.169992923736572
    9. ')]' → logprob: -8.16999340057373
    10. ',' → logprob: -8.16999340057373

Token 38: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002224125899374485
    2. '(range' → logprob: -6.127223968505859
    3. '("("' → logprob: -10.87722396850586
    4. '('' → logprob: -12.00222396850586
    5. ' (' → logprob: -12.25222396850586
    6. '((' → logprob: -12.87722396850586
    7. '(value' → logprob: -13.37722396850586
    8. '([' → logprob: -13.87722396850586
    9. '(list' → logprob: -14.00222396850586
    10. '()' → logprob: -14.25222396850586

Token 39: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019392271060496569
    2. ' range' → logprob: -6.251939296722412
    3. '(range' → logprob: -11.501938819885254
    4. 'rang' → logprob: -14.626938819885254
    5. '	range' → logprob: -16.87693977355957
    6. ')' → logprob: -18.37693977355957
    7. 'value' → logprob: -19.00193977355957
    8. 'ranges' → logprob: -19.12693977355957
    9. ' rang' → logprob: -19.25193977355957
    10. '_range' → logprob: -19.50193977355957

Token 40: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.000763510703109e-05
    2. '_' → logprob: -10.500040054321289
    3. '_value' → logprob: -11.875040054321289
    4. '_val' → logprob: -12.625040054321289
    5. '_vals' → logprob: -14.250040054321289
    6. ')_' → logprob: -14.375040054321289
    7. '_start' → logprob: -15.500040054321289
    8. '_s' → logprob: -15.625040054321289
    9. '_range' → logprob: -16.25004005432129
    10. '_center' → logprob: -16.62504005432129

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001532401074655354
    2. '))' → logprob: -8.875153541564941
    3. ',' → logprob: -11.625153541564941
    4. ',)' → logprob: -13.750153541564941
    5. ')`' → logprob: -13.750153541564941
    6. ' )' → logprob: -14.000153541564941
    7. ')))' → logprob: -14.500153541564941
    8. '`)' → logprob: -14.750153541564941
    9. '),' → logprob: -16.625152587890625
    10. ']' → logprob: -16.625152587890625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 30
Précision stricte (1ère position): 35.90%
Précision adaptée (1ère position): 35.90%
Précision (top 10): 76.92%
================================================================================
