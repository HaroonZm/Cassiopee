================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m, d = map(int, input().split())
if (n - d) < (1 + d):
    ex = (2 * (n - d)) / (n ** 2)
    ans = ex * (m - 1)
else:
    ex = 2 * (n - d) / (n ** 2)
    if d == 0:
        ans = ex * (m - 1) / 2
    else:
        ans = ex * (m - 1)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45533257722854614
    2. ',' → logprob: -1.0803325176239014
    3. ' =' → logprob: -3.7053325176239014
    4. ')' → logprob: -7.4553327560424805
    5. ' ,' → logprob: -8.33033275604248
    6. ';' → logprob: -8.70533275604248
    7. '```' → logprob: -8.83033275604248
    8. '[' → logprob: -8.95533275604248
    9. ',
' → logprob: -9.20533275604248
    10. ' ' → logprob: -9.83033275604248

Token 4: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48160895705223083
    2. '=' → logprob: -0.9816089868545532
    3. ',' → logprob: -4.981608867645264
    4. ' ' → logprob: -8.481609344482422
    5. ')' → logprob: -8.731609344482422
    6. ';' → logprob: -8.856609344482422
    7. ' ,' → logprob: -9.981609344482422
    8. '.' → logprob: -10.856609344482422
    9. '_' → logprob: -11.856609344482422
    10. '  ' → logprob: -12.231609344482422

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028107047080993652
    2. ' =' → logprob: -3.653107166290283
    3. ',' → logprob: -6.403107166290283
    4. ' ' → logprob: -10.028106689453125
    5. ';' → logprob: -10.153106689453125
    6. '_' → logprob: -11.278106689453125
    7. ')' → logprob: -11.278106689453125
    8. '[' → logprob: -11.778106689453125
    9. '```' → logprob: -12.403106689453125
    10. '#' → logprob: -12.528106689453125

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4019644856452942
    2. ' ' → logprob: -1.9019644260406494
    3. 'map' → logprob: -2.0269644260406494
    4. '0' → logprob: -4.0269646644592285
    5. 'input' → logprob: -4.1519646644592285
    6. ' input' → logprob: -4.1519646644592285
    7. ' list' → logprob: -8.27696418762207
    8. '1' → logprob: -8.90196418762207
    9. ' n' → logprob: -9.27696418762207
    10. 'list' → logprob: -9.90196418762207

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006017910782247782
    2. '(lambda' → logprob: -5.631017684936523
    3. '```' → logprob: -7.131017684936523
    4. '(int' → logprob: -7.381017684936523
    5. '<|end|>' → logprob: -8.131017684936523
    6. '(str' → logprob: -9.006017684936523
    7. ')' → logprob: -9.756017684936523
    8. '(input' → logprob: -9.756017684936523
    9. '(user' → logprob: -10.381017684936523
    10. '(
' → logprob: -10.381017684936523

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18274126946926117
    2. '(' → logprob: -1.9327412843704224
    3. ')' → logprob: -3.932741165161133
    4. '(int' → logprob: -6.807741165161133
    5. '(str' → logprob: -7.057741165161133
    6. '(user' → logprob: -9.182741165161133
    7. 'input' → logprob: -9.307741165161133
    8. '```' → logprob: -9.307741165161133
    9. '(data' → logprob: -9.807741165161133
    10. '=input' → logprob: -10.557741165161133

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5761085152626038
    2. ' input' → logprob: -0.8261085152626038
    3. '(input' → logprob: -8.701108932495117
    4. ')' → logprob: -13.576108932495117
    5. ',input' → logprob: -14.201108932495117
    6. '=input' → logprob: -14.826108932495117
    7. '<input' → logprob: -15.576108932495117
    8. '```' → logprob: -16.576108932495117
    9. '[input' → logprob: -16.951108932495117
    10. ' )' → logprob: -17.076108932495117

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5936318635940552
    2. '())' → logprob: -1.0936318635940552
    3. ')' → logprob: -2.9686317443847656
    4. '(' → logprob: -2.9686317443847656
    5. '().' → logprob: -5.843631744384766
    6. '());' → logprob: -6.968631744384766
    7. '(()' → logprob: -6.968631744384766
    8. '();)' → logprob: -7.218631744384766
    9. '(input' → logprob: -7.593631744384766
    10. '('' → logprob: -7.718631744384766

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001953371800482273
    2. 'strip' → logprob: -6.251953601837158
    3. 'rstrip' → logprob: -10.876953125
    4. ' split' → logprob: -13.001953125
    5. '(split' → logprob: -13.376953125
    6. ')' → logprob: -13.501953125
    7. 'spl' → logprob: -15.876953125
    8. 's' → logprob: -16.001953125
    9. 'read' → logprob: -16.126953125
    10. '```' → logprob: -16.251953125

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08967763185501099
    2. '())' → logprob: -2.589677572250366
    3. '))' → logprob: -4.714677810668945
    4. '()' → logprob: -6.839677810668945
    5. '()))' → logprob: -8.464677810668945
    6. '`)' → logprob: -8.839677810668945
    7. '(' → logprob: -8.839677810668945
    8. '('' → logprob: -10.339677810668945
    9. '```' → logprob: -10.589677810668945
    10. ')))' → logprob: -11.214677810668945

Token 13: 'if' (ID: 366)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3566906750202179
    2. 'if' → logprob: -2.2316906452178955
    3. 'for' → logprob: -2.7316906452178955
    4. 'x' → logprob: -3.6066906452178955
    5. 'max' → logprob: -4.356690883636475
    6. 's' → logprob: -4.481690883636475
    7. 'r' → logprob: -4.481690883636475
    8. '\n' → logprob: -4.481690883636475
    9. 't' → logprob: -4.981690883636475
    10. 'result' → logprob: -4.981690883636475

Token 14: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22403284907341003
    2. ' ' → logprob: -2.2240328788757324
    3. ' d' → logprob: -2.5990328788757324
    4. 'n' → logprob: -4.224032878875732
    5. 'd' → logprob: -6.224032878875732
    6. ' m' → logprob: -6.849032878875732
    7. ' not' → logprob: -8.849032402038574
    8. ' (' → logprob: -8.974032402038574
    9. 'm' → logprob: -9.974032402038574
    10. ' ' → logprob: -9.974032402038574

Token 15: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6592623591423035
    2. 'n' → logprob: -1.4092624187469482
    3. ' d' → logprob: -2.0342624187469482
    4. ' n' → logprob: -2.4092624187469482
    5. 'm' → logprob: -4.659262180328369
    6. ' m' → logprob: -5.909262180328369
    7. 'abs' → logprob: -6.159262180328369
    8. ' abs' → logprob: -6.909262180328369
    9. ' (' → logprob: -7.034262180328369
    10. '(n' → logprob: -7.534262180328369

Token 16: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8482930064201355
    2. ' >' → logprob: -1.3482930660247803
    3. ' >=' → logprob: -2.7232930660247803
    4. ' <=' → logprob: -2.8482930660247803
    5. ')' → logprob: -3.0982930660247803
    6. ' %' → logprob: -3.5982930660247803
    7. ' )' → logprob: -3.9732930660247803
    8. ' <' → logprob: -4.223292827606201
    9. ' ==' → logprob: -4.223292827606201
    10. '>' → logprob: -4.348292827606201

Token 17: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.583667516708374
    2. ' ' → logprob: -1.583667516708374
    3. 'd' → logprob: -1.708667516708374
    4. ' d' → logprob: -2.958667516708374
    5. 'm' → logprob: -6.083667755126953
    6. ' m' → logprob: -6.833667755126953
    7. '2' → logprob: -9.083667755126953
    8. '0' → logprob: -9.083667755126953
    9. '(d' → logprob: -9.583667755126953
    10. ')' → logprob: -9.708667755126953

Token 18: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023130523040890694
    2. ' )' → logprob: -4.523130416870117
    3. '>' → logprob: -5.023130416870117
    4. ' >' → logprob: -6.273130416870117
    5. ')**' → logprob: -6.398130416870117
    6. ')>' → logprob: -7.273130416870117
    7. '-' → logprob: -8.523130416870117
    8. ')>=' → logprob: -8.773130416870117
    9. '**' → logprob: -9.148130416870117
    10. '+' → logprob: -9.273130416870117

Token 19: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1789415329694748
    2. '>' → logprob: -2.178941488265991
    3. ' >=' → logprob: -3.803941488265991
    4. ' <=' → logprob: -4.55394172668457
    5. ')' → logprob: -5.55394172668457
    6. ' <' → logprob: -5.67894172668457
    7. ' ' → logprob: -5.80394172668457
    8. ' %' → logprob: -6.30394172668457
    9. ' ==' → logprob: -6.42894172668457
    10. '>=' → logprob: -6.92894172668457

Token 20: ' (' (ID: 350)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.7881477475166321
    2. 'm' → logprob: -1.5381476879119873
    3. '0' → logprob: -2.1631476879119873
    4. ' d' → logprob: -2.5381476879119873
    5. ' ' → logprob: -2.5381476879119873
    6. 'd' → logprob: -3.2881476879119873
    7. '1' → logprob: -4.788147926330566
    8. ' (' → logprob: -5.163147926330566
    9. ' n' → logprob: -6.288147926330566
    10. '(' → logprob: -6.788147926330566

Token 21: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7745602130889893
    2. ' m' → logprob: -0.8995602130889893
    3. 'd' → logprob: -2.7745602130889893
    4. ' d' → logprob: -3.2745602130889893
    5. ' n' → logprob: -4.52455997467041
    6. ' ' → logprob: -5.02455997467041
    7. 'n' → logprob: -5.39955997467041
    8. ' (' → logprob: -6.02455997467041
    9. '1' → logprob: -6.27455997467041
    10. ')' → logprob: -6.39955997467041

Token 22: ' +' (ID: 659)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7659268975257874
    2. ')' → logprob: -1.6409268379211426
    3. '):' → logprob: -1.6409268379211426
    4. ' )' → logprob: -3.0159268379211426
    5. ' ):' → logprob: -3.0159268379211426
    6. ' and' → logprob: -3.6409268379211426
    7. '+' → logprob: -4.640926837921143
    8. ' +' → logprob: -5.515926837921143
    9. ' -' → logprob: -6.265926837921143
    10. ' ' → logprob: -6.515926837921143

Token 23: ' d' (ID: 272)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3356136381626129
    2. 'd' → logprob: -1.8356136083602905
    3. ' m' → logprob: -2.33561372756958
    4. ' d' → logprob: -3.71061372756958
    5. '(m' → logprob: -6.58561372756958
    6. ' (' → logprob: -6.83561372756958
    7. ' ' → logprob: -7.46061372756958
    8. '(d' → logprob: -8.085613250732422
    9. '(' → logprob: -8.210613250732422
    10. 'n' → logprob: -8.460613250732422

Token 24: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3904014825820923
    2. '):' → logprob: -1.1404014825820923
    3. ' ):' → logprob: -6.140401363372803
    4. ' )' → logprob: -6.765401363372803
    5. '+' → logprob: -9.640401840209961
    6. '))' → logprob: -10.140401840209961
    7. ')):' → logprob: -10.265401840209961
    8. ':' → logprob: -10.890401840209961
    9. ' ' → logprob: -11.640401840209961
    10. '):
' → logprob: -11.890401840209961

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09185284376144409
    2. ' :' → logprob: -2.841852903366089
    3. '   ' → logprob: -5.09185266494751
    4. ' ' → logprob: -5.46685266494751
    5. ' print' → logprob: -5.59185266494751
    6. ' :
' → logprob: -5.84185266494751
    7. 'print' → logprob: -5.96685266494751
    8. ':
' → logprob: -5.96685266494751
    9. ')' → logprob: -6.34185266494751
    10. ' n' → logprob: -6.84185266494751

Token 26: ' ex' (ID: 513)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4305362105369568
    2. 'print' → logprob: -1.0555362701416016
    3. ' n' → logprob: -7.055536270141602
    4. '    ' → logprob: -8.180536270141602
    5. '   ' → logprob: -8.305536270141602
    6. 'n' → logprob: -8.555536270141602
    7. ' ' → logprob: -9.305536270141602
    8. ' d' → logprob: -10.680536270141602
    9. ')' → logprob: -10.805536270141602
    10. ' pass' → logprob: -11.305536270141602

Token 27: ' =' (ID: 314)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.05518161132931709
    2. '   ' → logprob: -3.3051815032958984
    3. 'print' → logprob: -4.430181503295898
    4. '```' → logprob: -5.805181503295898
    5. 'i' → logprob: -7.680181503295898
    6. '       ' → logprob: -8.305181503295898
    7. '_it' → logprob: -8.805181503295898
    8. 'ist' → logprob: -8.930181503295898
    9. '``' → logprob: -9.430181503295898
    10. '     ' → logprob: -9.680181503295898

Token 28: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.284627079963684
    2. ' n' → logprob: -1.659627079963684
    3. ' ' → logprob: -1.784627079963684
    4. 'n' → logprob: -2.2846269607543945
    5. ' d' → logprob: -2.9096269607543945
    6. '1' → logprob: -3.2846269607543945
    7. ' True' → logprob: -3.4096269607543945
    8. '0' → logprob: -3.6596269607543945
    9. '(n' → logprob: -3.9096269607543945
    10. 'd' → logprob: -3.9096269607543945

Token 29: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5398681163787842
    2. ' n' → logprob: -1.7898681163787842
    3. 'd' → logprob: -2.539868116378784
    4. '1' → logprob: -2.539868116378784
    5. 'm' → logprob: -3.414868116378784
    6. ' d' → logprob: -3.914868116378784
    7. ' (' → logprob: -4.289868354797363
    8. ' m' → logprob: -4.789868354797363
    9. '(n' → logprob: -5.164868354797363
    10. ' ' → logprob: -5.414868354797363

Token 30: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1554298847913742
    2. '*' → logprob: -2.7804298400878906
    3. '*d' → logprob: -3.2804298400878906
    4. '*n' → logprob: -3.9054298400878906
    5. ' +' → logprob: -4.530429840087891
    6. ')' → logprob: -5.655429840087891
    7. '+' → logprob: -5.905429840087891
    8. ' **' → logprob: -6.155429840087891
    9. '**' → logprob: -6.780429840087891
    10. '*(' → logprob: -7.030429840087891

Token 31: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002732240129262209
    2. '(d' → logprob: -6.877732276916504
    3. '(' → logprob: -7.377732276916504
    4. ' d' → logprob: -7.877732276916504
    5. 'm' → logprob: -8.377732276916504
    6. '(n' → logprob: -8.627732276916504
    7. 'n' → logprob: -8.877732276916504
    8. '(m' → logprob: -10.127732276916504
    9. '1' → logprob: -11.002732276916504
    10. '   ' → logprob: -11.002732276916504

Token 32: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004144168924540281
    2. 'n' → logprob: -6.379144191741943
    3. '(d' → logprob: -7.129144191741943
    4. '(' → logprob: -7.379144191741943
    5. '(n' → logprob: -7.754144191741943
    6. 'm' → logprob: -8.129143714904785
    7. '1' → logprob: -8.754143714904785
    8. ' d' → logprob: -9.879143714904785
    9. '(m' → logprob: -10.129143714904785
    10. '   ' → logprob: -11.254143714904785

Token 33: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.35733699798583984
    2. '-' → logprob: -1.3573369979858398
    3. ')' → logprob: -3.48233699798584
    4. ' +' → logprob: -5.35733699798584
    5. '+' → logprob: -5.73233699798584
    6. ' ' → logprob: -6.10733699798584
    7. ' )' → logprob: -7.23233699798584
    8. ' *' → logprob: -7.48233699798584
    9. '*' → logprob: -7.60733699798584
    10. 'd' → logprob: -9.60733699798584

Token 34: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13101370632648468
    2. ' d' → logprob: -2.1310136318206787
    3. '1' → logprob: -6.256013870239258
    4. ' ' → logprob: -6.881013870239258
    5. 'm' → logprob: -8.131013870239258
    6. ' (' → logprob: -8.256013870239258
    7. ')' → logprob: -8.631013870239258
    8. ' m' → logprob: -9.006013870239258
    9. '(' → logprob: -9.881013870239258
    10. '(d' → logprob: -10.131013870239258

Token 35: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05772852152585983
    2. '))' → logprob: -3.3077285289764404
    3. ' )' → logprob: -4.807728290557861
    4. '-' → logprob: -5.432728290557861
    5. ' -' → logprob: -5.682728290557861
    6. '+' → logprob: -6.307728290557861
    7. ' +' → logprob: -7.307728290557861
    8. ' ' → logprob: -8.18272876739502
    9. ' ))' → logprob: -8.18272876739502
    10. ')+' → logprob: -8.43272876739502

Token 36: ' /' (ID: 820)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.30694055557250977
    2. 'else' → logprob: -1.9319405555725098
    3. '+' → logprob: -2.9319405555725098
    4. ' +' → logprob: -3.6819405555725098
    5. ' ' → logprob: -3.8069405555725098
    6. '-' → logprob: -5.18194055557251
    7. ' -' → logprob: -5.43194055557251
    8. '    ' → logprob: -6.55694055557251
    9. ' elif' → logprob: -6.55694055557251
    10. '   ' → logprob: -7.18194055557251

Token 37: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1432279646396637
    2. '(' → logprob: -2.768228054046631
    3. '(m' → logprob: -4.143228054046631
    4. 'd' → logprob: -4.268228054046631
    5. ' m' → logprob: -4.518228054046631
    6. '3' → logprob: -4.768228054046631
    7. '(n' → logprob: -4.893228054046631
    8. '2' → logprob: -5.018228054046631
    9. 'n' → logprob: -5.518228054046631
    10. ' (' → logprob: -6.768228054046631

Token 38: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25021904706954956
    2. ' m' → logprob: -2.2502191066741943
    3. '(' → logprob: -3.0002191066741943
    4. 'n' → logprob: -4.125218868255615
    5. '(n' → logprob: -4.250218868255615
    6. ' (' → logprob: -4.625218868255615
    7. '(m' → logprob: -4.750218868255615
    8. '2' → logprob: -5.375218868255615
    9. ' n' → logprob: -5.500218868255615
    10. '3' → logprob: -5.750218868255615

Token 39: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13834960758686066
    2. ' -' → logprob: -2.7633495330810547
    3. ' )' → logprob: -3.3883495330810547
    4. '-' → logprob: -3.6383495330810547
    5. '+' → logprob: -6.013349533081055
    6. ' +' → logprob: -6.638349533081055
    7. ' ' → logprob: -6.888349533081055
    8. '-m' → logprob: -8.138349533081055
    9. '*' → logprob: -8.638349533081055
    10. '))' → logprob: -9.013349533081055

Token 40: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011802800931036472
    2. ' ' → logprob: -5.011802673339844
    3. '3' → logprob: -5.511802673339844
    4. 'm' → logprob: -7.386802673339844
    5. ')' → logprob: -9.011802673339844
    6. '-' → logprob: -9.761802673339844
    7. '(' → logprob: -10.011802673339844
    8. 'd' → logprob: -10.011802673339844
    9. '0' → logprob: -10.511802673339844
    10. '4' → logprob: -10.636802673339844

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005892176181077957
    2. '3' → logprob: -5.880892276763916
    3. '-' → logprob: -6.005892276763916
    4. 'm' → logprob: -8.005891799926758
    5. '1' → logprob: -8.630891799926758
    6. '0' → logprob: -10.630891799926758
    7. '(' → logprob: -11.130891799926758
    8. '4' → logprob: -11.130891799926758
    9. '(-' → logprob: -11.130891799926758
    10. 'd' → logprob: -11.630891799926758

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019532525911927223
    2. ' )' → logprob: -6.876953125
    3. ')
' → logprob: -8.751953125
    4. '+' → logprob: -8.876953125
    5. '*' → logprob: -8.876953125
    6. '**' → logprob: -9.376953125
    7. '-' → logprob: -9.626953125
    8. ')**' → logprob: -9.626953125
    9. ' else' → logprob: -9.876953125
    10. ' -' → logprob: -10.501953125

Token 43: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' ans' (ID: 3345)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.308660626411438
    2. ')' → logprob: -2.0586605072021484
    3. 'n' → logprob: -3.1836605072021484
    4. ' else' → logprob: -3.3086605072021484
    5. '*' → logprob: -4.558660507202148
    6. '<|end|>' → logprob: -4.808660507202148
    7. 'elif' → logprob: -4.808660507202148
    8. '
' → logprob: -5.058660507202148
    9. '\n' → logprob: -5.308660507202148
    10. 'print' → logprob: -5.558660507202148

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057193905115127563
    2. '=' → logprob: -2.9321939945220947
    3. ' +=' → logprob: -6.182193756103516
    4. ' ' → logprob: -9.432193756103516
    5. '+=' → logprob: -9.557193756103516
    6. ' *=' → logprob: -10.307193756103516
    7. '_' → logprob: -11.307193756103516
    8. ' -=' → logprob: -11.682193756103516
    9. '  ' → logprob: -11.682193756103516
    10. ',' → logprob: -11.932193756103516

Token 46: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7462134957313538
    2. '1' → logprob: -1.246213436126709
    3. ' ex' → logprob: -1.996213436126709
    4. ' ' → logprob: -3.871213436126709
    5. '(' → logprob: -4.246213436126709
    6. ' (' → logprob: -4.496213436126709
    7. '0' → logprob: -4.871213436126709
    8. '2' → logprob: -4.871213436126709
    9. 'd' → logprob: -5.121213436126709
    10. '(ex' → logprob: -5.121213436126709

Token 47: ' *' (ID: 425)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2268402874469757
    2. ' else' → logprob: -1.7268402576446533
    3. ' /' → logprob: -5.351840496063232
    4. '/' → logprob: -5.476840496063232
    5. '<|end|>' → logprob: -5.476840496063232
    6. '-' → logprob: -5.851840496063232
    7. '+' → logprob: -6.101840496063232
    8. '*' → logprob: -6.226840496063232
    9. '
' → logprob: -6.476840496063232
    10. 'print' → logprob: -6.976840496063232

Token 48: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.7532738447189331
    2. 'm' → logprob: -1.128273844718933
    3. '(' → logprob: -3.0032739639282227
    4. '(n' → logprob: -3.0032739639282227
    5. ' (' → logprob: -3.3782739639282227
    6. '(d' → logprob: -3.5032739639282227
    7. ' m' → logprob: -4.003273963928223
    8. 'd' → logprob: -4.253273963928223
    9. 'n' → logprob: -6.003273963928223
    10. '((' → logprob: -6.253273963928223

Token 49: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.36905378103256226
    2. '(m' → logprob: -1.494053840637207
    3. '(n' → logprob: -3.619053840637207
    4. '(' → logprob: -3.744053840637207
    5. ' m' → logprob: -4.744053840637207
    6. 'd' → logprob: -5.119053840637207
    7. ' (' → logprob: -5.369053840637207
    8. 'n' → logprob: -5.494053840637207
    9. '(d' → logprob: -5.744053840637207
    10. '2' → logprob: -6.119053840637207

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6037129163742065
    2. '-' → logprob: -0.8537129163742065
    3. ')' → logprob: -3.853713035583496
    4. '**' → logprob: -5.853713035583496
    5. ' *' → logprob: -6.728713035583496
    6. '*' → logprob: -6.853713035583496
    7. ' ' → logprob: -8.478713035583496
    8. ' +' → logprob: -8.603713035583496
    9. ' **' → logprob: -8.728713035583496
    10. '*(' → logprob: -8.853713035583496

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0043665096163749695
    2. ' ' → logprob: -5.754366397857666
    3. 'd' → logprob: -6.879366397857666
    4. '2' → logprob: -9.879366874694824
    5. ' d' → logprob: -10.504366874694824
    6. '0' → logprob: -11.004366874694824
    7. 'm' → logprob: -11.441866874694824
    8. '(' → logprob: -11.441866874694824
    9. '   ' → logprob: -11.566866874694824
    10. 'n' → logprob: -11.629366874694824

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001243920880369842
    2. 'd' → logprob: -6.876244068145752
    3. ' ' → logprob: -9.126243591308594
    4. '2' → logprob: -10.501243591308594
    5. '(' → logprob: -10.751243591308594
    6. '0' → logprob: -11.563743591308594
    7. 'n' → logprob: -12.188743591308594
    8. '   ' → logprob: -12.251243591308594
    9. '(d' → logprob: -12.251243591308594
    10. '```' → logprob: -12.251243591308594

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006591858807951212
    2. ' +' → logprob: -6.006591796875
    3. ' )' → logprob: -6.756591796875
    4. '+' → logprob: -6.756591796875
    5. ')
' → logprob: -8.006591796875
    6. '*' → logprob: -8.256591796875
    7. ' *' → logprob: -8.881591796875
    8. ')/(' → logprob: -8.881591796875
    9. ')**' → logprob: -9.006591796875
    10. ' ' → logprob: -9.006591796875

Token 54: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3753049671649933
    2. '<|end|>' → logprob: -1.500304937362671
    3. 'else' → logprob: -3.000304937362671
    4. ')' → logprob: -3.875304937362671
    5. '
' → logprob: -4.62530517578125
    6. '*' → logprob: -6.00030517578125
    7. ' print' → logprob: -6.62530517578125
    8. '#' → logprob: -6.75030517578125
    9. ' else' → logprob: -6.87530517578125
    10. '```' → logprob: -7.50030517578125

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030733743915334344
    2. ' :' → logprob: -8.500307083129883
    3. '   ' → logprob: -9.625307083129883
    4. ':
' → logprob: -10.250307083129883
    5. ':return' → logprob: -14.875307083129883
    6. '):' → logprob: -15.000307083129883
    7. '<|end|>' → logprob: -15.125307083129883
    8. '    ' → logprob: -15.625307083129883
    9. ':
' → logprob: -15.875307083129883
    10. ':\' → logprob: -16.125307083129883

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08670676499605179
    2. ' ans' → logprob: -2.7117068767547607
    3. ' ex' → logprob: -5.336706638336182
    4. '    ' → logprob: -5.461706638336182
    5. 'ans' → logprob: -6.211706638336182
    6. 'ex' → logprob: -6.711706638336182
    7. ' (' → logprob: -7.086706638336182
    8. ' ' → logprob: -7.461706638336182
    9. '```' → logprob: -7.461706638336182
    10. ' n' → logprob: -7.711706638336182

Token 57: ' ex' (ID: 513)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4664011001586914
    2. ' ex' → logprob: -1.8414011001586914
    3. 'ans' → logprob: -2.2164011001586914
    4. 'ex' (adapté à ' ex') → logprob: -2.3414011001586914
    5. '0' → logprob: -5.966401100158691
    6. '1' → logprob: -7.091401100158691
    7. '   ' → logprob: -7.216401100158691
    8. ' ' → logprob: -7.216401100158691
    9. '(ans' → logprob: -7.591401100158691
    10. ' (' → logprob: -7.716401100158691

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01133251003921032
    2. '=' → logprob: -5.6363325119018555
    3. ' *' → logprob: -5.6363325119018555
    4. ' ' → logprob: -5.8863325119018555
    5. '*' → logprob: -8.386332511901855
    6. ' *=' → logprob: -8.386332511901855
    7. '<|end|>' → logprob: -8.636332511901855
    8. ' +=' → logprob: -8.886332511901855
    9. ',' → logprob: -9.011332511901855
    10. '_' → logprob: -9.136332511901855

Token 59: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15802834928035736
    2. ' (' → logprob: -2.6580283641815186
    3. '((' → logprob: -3.6580283641815186
    4. '2' → logprob: -4.4080281257629395
    5. '1' → logprob: -4.5330281257629395
    6. 'd' → logprob: -5.0330281257629395
    7. '0' → logprob: -5.4080281257629395
    8. '(m' → logprob: -5.5330281257629395
    9. '(n' → logprob: -5.5330281257629395
    10. '(d' → logprob: -6.1580281257629395

Token 60: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10102517157793045
    2. '((' → logprob: -3.101025104522705
    3. '2' → logprob: -3.976025104522705
    4. '(m' → logprob: -4.976025104522705
    5. '1' → logprob: -5.226025104522705
    6. 'd' → logprob: -5.226025104522705
    7. '(n' → logprob: -5.351025104522705
    8. '0' → logprob: -5.601025104522705
    9. ' (' → logprob: -6.226025104522705
    10. '(d' → logprob: -6.476025104522705

Token 61: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5847706198692322
    2. '*' → logprob: -0.8347706198692322
    3. '*(' → logprob: -5.084770679473877
    4. '/' → logprob: -6.959770679473877
    5. ' /' → logprob: -7.459770679473877
    6. '(n' → logprob: -7.709770679473877
    7. '(' → logprob: -8.209770202636719
    8. '/n' → logprob: -9.459770202636719
    9. '*((' → logprob: -9.959770202636719
    10. ' (' → logprob: -10.209770202636719

Token 62: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5877667665481567
    2. 'd' → logprob: -0.9627667665481567
    3. '(n' → logprob: -3.337766647338867
    4. '((' → logprob: -4.462766647338867
    5. '(m' → logprob: -5.212766647338867
    6. '(d' → logprob: -5.462766647338867
    7. '1' → logprob: -6.087766647338867
    8. 'm' → logprob: -6.337766647338867
    9. ' (' → logprob: -7.337766647338867
    10. ' d' → logprob: -7.462766647338867

Token 63: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13122668862342834
    2. '(' → logprob: -2.3812267780303955
    3. '(n' → logprob: -4.131226539611816
    4. '(m' → logprob: -5.381226539611816
    5. '(d' → logprob: -5.881226539611816
    6. '((' → logprob: -6.381226539611816
    7. ' d' → logprob: -6.381226539611816
    8. 'm' → logprob: -6.631226539611816
    9. '1' → logprob: -6.881226539611816
    10. ' (' → logprob: -7.506226539611816

Token 64: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6571765542030334
    2. ' -' → logprob: -0.7821765542030334
    3. '*' → logprob: -4.407176494598389
    4. ' *' → logprob: -5.532176494598389
    5. 'd' → logprob: -5.657176494598389
    6. ')' → logprob: -6.157176494598389
    7. ' ' → logprob: -7.282176494598389
    8. '+' → logprob: -7.782176494598389
    9. '*d' → logprob: -8.282176971435547
    10. ' d' → logprob: -8.407176971435547

Token 65: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03746693953871727
    2. ' d' → logprob: -3.6624670028686523
    3. '(' → logprob: -5.162467002868652
    4. '1' → logprob: -6.037467002868652
    5. ' (' → logprob: -6.787467002868652
    6. ' ' → logprob: -7.412467002868652
    7. ')' → logprob: -7.787467002868652
    8. '2' → logprob: -8.537467002868652
    9. 'm' → logprob: -8.662467002868652
    10. ')d' → logprob: -9.162467002868652

Token 66: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021357780322432518
    2. '-' → logprob: -4.646358013153076
    3. ' )' → logprob: -4.896358013153076
    4. ' -' → logprob: -6.146358013153076
    5. ')/(' → logprob: -7.521358013153076
    6. ' ' → logprob: -7.896358013153076
    7. '*' → logprob: -8.646357536315918
    8. '   ' → logprob: -8.646357536315918
    9. ')/' → logprob: -8.646357536315918
    10. '+' → logprob: -9.271357536315918

Token 67: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.8010762929916382
    2. ' *' → logprob: -1.1760762929916382
    3. '*' → logprob: -1.8010762929916382
    4. '/' → logprob: -2.8010764122009277
    5. ' -' → logprob: -4.926076412200928
    6. '-' → logprob: -5.676076412200928
    7. '*(' → logprob: -6.426076412200928
    8. ' ' → logprob: -6.426076412200928
    9. '```' → logprob: -7.676076412200928
    10. '/(' → logprob: -8.05107593536377

Token 68: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.053813640028238297
    2. 'n' → logprob: -3.3038136959075928
    3. '(' → logprob: -4.178813457489014
    4. '((' → logprob: -8.678813934326172
    5. ' (' → logprob: -9.303813934326172
    6. ' n' → logprob: -10.178813934326172
    7. '(m' → logprob: -12.428813934326172
    8. '2' → logprob: -12.491313934326172
    9. '3' → logprob: -13.366313934326172
    10. '(nn' → logprob: -13.366313934326172

Token 69: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030474241822957993
    2. '(' → logprob: -4.2804741859436035
    3. '(n' → logprob: -4.2804741859436035
    4. '2' → logprob: -6.9054741859436035
    5. ' n' → logprob: -6.9054741859436035
    6. '**' → logprob: -9.155474662780762
    7. ' (' → logprob: -9.405474662780762
    8. ')' → logprob: -9.905474662780762
    9. '((' → logprob: -10.655474662780762
    10. ' ' → logprob: -11.155474662780762

Token 70: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5899309515953064
    2. '**' → logprob: -0.8399309515953064
    3. ')' → logprob: -5.214931011199951
    4. ' ' → logprob: -5.464931011199951
    5. '2' → logprob: -5.839931011199951
    6. ' **)' → logprob: -7.714931011199951
    7. ')**' → logprob: -8.089930534362793
    8. ' )' → logprob: -8.464930534362793
    9. '*' → logprob: -9.339930534362793
    10. '**)' → logprob: -9.339930534362793

Token 71: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00044377794256433845
    2. ' ' → logprob: -7.875443935394287
    3. '3' → logprob: -10.000443458557129
    4. '**' → logprob: -11.625443458557129
    5. '(' → logprob: -12.250443458557129
    6. '```' → logprob: -13.750443458557129
    7. '1' → logprob: -13.875443458557129
    8. '   ' → logprob: -14.000443458557129
    9. ')' → logprob: -14.750443458557129
    10. '²' → logprob: -15.437943458557129

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.8497312895488e-05
    2. ' ' → logprob: -9.750068664550781
    3. '3' → logprob: -12.625068664550781
    4. ')' → logprob: -13.375068664550781
    5. '**' → logprob: -13.625068664550781
    6. '```' → logprob: -13.625068664550781
    7. '(' → logprob: -13.875068664550781
    8. '1' → logprob: -14.000068664550781
    9. '   ' → logprob: -15.000068664550781
    10. '²' → logprob: -15.937568664550781

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002678920282050967
    2. ' )' → logprob: -8.87526798248291
    3. '*' → logprob: -9.37526798248291
    4. ')*' → logprob: -10.75026798248291
    5. ')
' → logprob: -12.37526798248291
    6. '**' → logprob: -13.12526798248291
    7. '   ' → logprob: -13.25026798248291
    8. ' *' → logprob: -13.25026798248291
    9. ')n' → logprob: -13.25026798248291
    10. '))' → logprob: -13.50026798248291

Token 74: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3878028988838196
    2. ')' → logprob: -2.387802839279175
    3. '<|end|>' → logprob: -2.512802839279175
    4. '
' → logprob: -3.012802839279175
    5. '\n' → logprob: -3.262802839279175
    6. '\' → logprob: -4.762803077697754
    7. 'm' → logprob: -4.887803077697754
    8. '#' → logprob: -4.887803077697754
    9. ' *' → logprob: -5.012803077697754
    10. 'print' → logprob: -5.262803077697754

Token 75: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02381696179509163
    2. ' ans' → logprob: -4.27381706237793
    3. '   ' → logprob: -5.52381706237793
    4. 'ex' → logprob: -5.52381706237793
    5. 'print' → logprob: -7.77381706237793
    6. '*' → logprob: -8.14881706237793
    7. '(ans' → logprob: -8.39881706237793
    8. '	ans' → logprob: -9.02381706237793
    9. 'm' → logprob: -9.14881706237793
    10. ')' → logprob: -9.27381706237793

Token 76: ' d' (ID: 272)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.15374568104743958
    2. ' (' → logprob: -2.153745651245117
    3. ' d' → logprob: -4.278745651245117
    4. 'm' → logprob: -4.778745651245117
    5. ' n' → logprob: -6.153745651245117
    6. '(m' → logprob: -6.903745651245117
    7. '(' → logprob: -8.028745651245117
    8. 'd' → logprob: -8.278745651245117
    9. ' ' → logprob: -8.653745651245117
    10. '(n' → logprob: -9.403745651245117

Token 77: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.330407738685608
    2. ' <=' → logprob: -1.455407738685608
    3. ' ==' → logprob: -1.455407738685608
    4. ' <' → logprob: -1.705407738685608
    5. ' >=' → logprob: -3.2054076194763184
    6. ' ' → logprob: -4.080407619476318
    7. '==' → logprob: -4.455407619476318
    8. '>' → logprob: -4.580407619476318
    9. '<=' → logprob: -6.330407619476318
    10. ' !=' → logprob: -6.455407619476318

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18144796788692474
    2. ' ' → logprob: -1.806447982788086
    3. '1' → logprob: -7.431447982788086
    4. 'm' → logprob: -7.681447982788086
    5. ' (' → logprob: -8.556447982788086
    6. ' m' → logprob: -8.806447982788086
    7. '(' → logprob: -9.181447982788086
    8. ' n' → logprob: -9.431447982788086
    9. 'n' → logprob: -9.431447982788086
    10. '(n' → logprob: -10.806447982788086

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015656884061172605
    2. '1' → logprob: -6.876565456390381
    3. ' ' → logprob: -8.126565933227539
    4. 'm' → logprob: -9.251565933227539
    5. 'n' → logprob: -9.376565933227539
    6. '(n' → logprob: -10.626565933227539
    7. '(' → logprob: -10.876565933227539
    8. '   ' → logprob: -12.501565933227539
    9. '(m' → logprob: -13.126565933227539
    10. '2' → logprob: -13.126565933227539

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023357603640761226
    2. ':
' → logprob: -8.62523365020752
    3. ' :' → logprob: -10.37523365020752
    4. ' and' → logprob: -11.25023365020752
    5. ' or' → logprob: -13.00023365020752
    6. 'and' → logprob: -13.25023365020752
    7. '   ' → logprob: -13.62523365020752
    8. ':return' → logprob: -13.87523365020752
    9. ':**' → logprob: -14.37523365020752
    10. '):' → logprob: -14.62523365020752

Token 81: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19128866493701935
    2. '   ' → logprob: -1.941288709640503
    3. '       ' → logprob: -3.691288709640503
    4. ':
' → logprob: -5.816288471221924
    5. '):' → logprob: -7.816288471221924
    6. ' :' → logprob: -7.816288471221924
    7. '.' → logprob: -8.066288948059082
    8. ')' → logprob: -8.441288948059082
    9. '    ' → logprob: -8.441288948059082
    10. ' ans' → logprob: -8.441288948059082

Token 82: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.297097772359848
    2. 'ans' (adapté à ' ans') → logprob: -1.6720978021621704
    3. 'print' → logprob: -3.047097682952881
    4. ' print' → logprob: -4.547097682952881
    5. '   ' → logprob: -5.422097682952881
    6. '	ans' → logprob: -5.922097682952881
    7. '0' → logprob: -7.297097682952881
    8. '
' → logprob: -7.422097682952881
    9. '(ans' → logprob: -7.422097682952881
    10. 'ex' → logprob: -7.922097682952881

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07894806563854218
    2. '=' → logprob: -2.5789480209350586
    3. ' *=' → logprob: -10.328948020935059
    4. ' +=' → logprob: -11.078948020935059
    5. ' ' → logprob: -12.078948020935059
    6. ')' → logprob: -13.828948020935059
    7. ' -=' → logprob: -14.328948020935059
    8. '*=' → logprob: -14.578948020935059
    9. '+=' → logprob: -14.828948020935059
    10. '.' → logprob: -15.078948020935059

Token 84: ' ex' (ID: 513)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6155880689620972
    2. '0' → logprob: -0.9905880689620972
    3. ' m' → logprob: -2.6155881881713867
    4. '(m' → logprob: -5.115588188171387
    5. ' ' → logprob: -5.490588188171387
    6. ' (' → logprob: -5.490588188171387
    7. '1' → logprob: -7.740588188171387
    8. '(' → logprob: -8.365588188171387
    9. 'n' → logprob: -9.865588188171387
    10. '(n' → logprob: -9.865588188171387

Token 85: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2991483509540558
    2. ' *' → logprob: -1.4241483211517334
    3. 'else' → logprob: -4.4241485595703125
    4. ' else' → logprob: -6.0491485595703125
    5. '*(' → logprob: -6.2991485595703125
    6. '+' → logprob: -6.9241485595703125
    7. ' +' → logprob: -8.174148559570312
    8. ' ' → logprob: -9.549148559570312
    9. '   ' → logprob: -9.799148559570312
    10. 'elif' → logprob: -10.174148559570312

Token 86: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.14084173738956451
    2. '(m' → logprob: -2.2658417224884033
    3. ' m' → logprob: -4.015841960906982
    4. '(' → logprob: -5.265841960906982
    5. '0' → logprob: -6.140841960906982
    6. ' (' → logprob: -6.390841960906982
    7. '1' → logprob: -7.765841960906982
    8. '(n' → logprob: -9.765841484069824
    9. '2' → logprob: -10.140841484069824
    10. ' ' → logprob: -10.390841484069824

Token 87: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005752679891884327
    2. '(m' → logprob: -5.8807525634765625
    3. ' m' → logprob: -6.0057525634765625
    4. '0' → logprob: -9.005752563476562
    5. '1' → logprob: -9.005752563476562
    6. ' (' → logprob: -9.255752563476562
    7. '(' → logprob: -9.755752563476562
    8. 'n' → logprob: -10.630752563476562
    9. '(n' → logprob: -10.880752563476562
    10. ')m' → logprob: -11.255752563476562

Token 88: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07354779541492462
    2. '-' → logprob: -2.698547840118408
    3. ')' → logprob: -5.698547840118408
    4. ' )' → logprob: -8.69854736328125
    5. ' ' → logprob: -9.57354736328125
    6. '<|end|>' → logprob: -12.44854736328125
    7. ' ' → logprob: -12.57354736328125
    8. '-)' → logprob: -13.19854736328125
    9. '   ' → logprob: -13.44854736328125
    10. ' -
' → logprob: -14.07354736328125

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08940362930297852
    2. ' ' → logprob: -2.4644036293029785
    3. '2' → logprob: -7.9644036293029785
    4. '0' → logprob: -9.46440315246582
    5. ')' → logprob: -10.83940315246582
    6. '   ' → logprob: -12.65190315246582
    7. '-' → logprob: -13.21440315246582
    8. ' ' → logprob: -13.33940315246582
    9. '  ' → logprob: -13.40190315246582
    10. ' )' → logprob: -13.77690315246582

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008035530336201191
    2. '2' → logprob: -7.500803470611572
    3. ' ' → logprob: -8.37580394744873
    4. '0' → logprob: -11.25080394744873
    5. '   ' → logprob: -13.62580394744873
    6. ')' → logprob: -13.68830394744873
    7. '3' → logprob: -14.25080394744873
    8. '```' → logprob: -14.75080394744873
    9. '-' → logprob: -14.81330394744873
    10. '  ' → logprob: -15.00080394744873

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006378580583259463
    2. 'else' → logprob: -7.750638008117676
    3. ' else' → logprob: -9.375638008117676
    4. '<|end|>' → logprob: -10.250638008117676
    5. '   ' → logprob: -10.625638008117676
    6. ' )' → logprob: -11.125638008117676
    7. '*' → logprob: -11.375638008117676
    8. ')
' → logprob: -11.625638008117676
    9. '+' → logprob: -12.500638008117676
    10. ')return' → logprob: -12.625638008117676

Token 92: ' /' (ID: 820)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005232102237641811
    2. ' else' → logprob: -5.630232334136963
    3. 'elif' → logprob: -6.755232334136963
    4. '   ' → logprob: -8.255231857299805
    5. '<|end|>' → logprob: -9.255231857299805
    6. ')' → logprob: -10.130231857299805
    7. '```' → logprob: -10.630231857299805
    8. '*' → logprob: -11.505231857299805
    9. '	else' → logprob: -11.630231857299805
    10. '
' → logprob: -12.005231857299805

Token 93: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6113113164901733
    2. 'm' → logprob: -1.4863113164901733
    3. 'n' → logprob: -1.6113113164901733
    4. '1' → logprob: -3.986311435699463
    5. '(' → logprob: -5.236311435699463
    6. '3' → logprob: -5.611311435699463
    7. ' ' → logprob: -6.611311435699463
    8. '(n' → logprob: -6.611311435699463
    9. ' n' → logprob: -7.611311435699463
    10. ' m' → logprob: -7.986311435699463

Token 94: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3396051228046417
    2. '2' → logprob: -1.7146050930023193
    3. 'n' → logprob: -2.8396050930023193
    4. '1' → logprob: -3.0896050930023193
    5. '(' → logprob: -5.964605331420898
    6. '(n' → logprob: -7.089605331420898
    7. '(m' → logprob: -8.464605331420898
    8. '3' → logprob: -8.464605331420898
    9. ' m' → logprob: -10.464605331420898
    10. '6' → logprob: -10.964605331420898

Token 95: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02475149743258953
    2. ' else' → logprob: -4.149751663208008
    3. 'elif' → logprob: -6.024751663208008
    4. '   ' → logprob: -6.149751663208008
    5. '<|end|>' → logprob: -6.149751663208008
    6. ')' → logprob: -6.899751663208008
    7. '\n' → logprob: -7.649751663208008
    8. '```' → logprob: -9.024751663208008
    9. '
' → logprob: -9.649751663208008
    10. 'print' → logprob: -9.649751663208008

Token 96: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.016303911805152893
    2. ' else' → logprob: -4.641304016113281
    3. 'elif' → logprob: -5.641304016113281
    4. ')' → logprob: -7.141304016113281
    5. '<|end|>' → logprob: -7.141304016113281
    6. '   ' → logprob: -7.391304016113281
    7. '\n' → logprob: -7.641304016113281
    8. '```' → logprob: -9.391304016113281
    9. 'print' → logprob: -10.016304016113281
    10. '\' → logprob: -10.266304016113281

Token 97: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.010429243557155132
    2. ' else' → logprob: -4.760429382324219
    3. 'elif' → logprob: -6.385429382324219
    4. '   ' → logprob: -9.260429382324219
    5. ')' → logprob: -11.635429382324219
    6. 'print' → logprob: -12.510429382324219
    7. ' elif' → logprob: -12.635429382324219
    8. ' ' → logprob: -12.885429382324219
    9. '```' → logprob: -13.010429382324219
    10. 'e' → logprob: -13.135429382324219

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002703953068703413
    2. '       ' → logprob: -8.87527084350586
    3. ':
' → logprob: -9.00027084350586
    4. '   ' → logprob: -12.37527084350586
    5. '<|end|>' → logprob: -14.00027084350586
    6. ' :' → logprob: -14.25027084350586
    7. ',' → logprob: -15.12527084350586
    8. '):' → logprob: -15.12527084350586
    9. '    ' → logprob: -15.75027084350586
    10. '.' → logprob: -16.12527084350586

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5420086979866028
    2. 'ans' → logprob: -1.542008638381958
    3. '   ' → logprob: -1.667008638381958
    4. ' ans' → logprob: -4.292008876800537
    5. '	ans' → logprob: -6.417008876800537
    6. '```' → logprob: -9.542008399963379
    7. '           ' → logprob: -9.792008399963379
    8. '(ans' → logprob: -9.917008399963379
    9. 'answer' → logprob: -10.042008399963379
    10. '    ' → logprob: -10.417008399963379

Token 100: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.38786259293556213
    2. ' ans' → logprob: -1.1378625631332397
    3. 'ex' → logprob: -7.387862682342529
    4. '   ' → logprob: -9.387862205505371
    5. '	ans' → logprob: -9.387862205505371
    6. ' ex' → logprob: -9.512862205505371
    7. '(ans' → logprob: -10.012862205505371
    8. '    ' → logprob: -10.637862205505371
    9. ' ' → logprob: -11.512862205505371
    10. '_ans' → logprob: -12.262862205505371

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033865992445498705
    2. '=' → logprob: -5.878386497497559
    3. ' *=' → logprob: -7.628386497497559
    4. ' ' → logprob: -9.503386497497559
    5. ' +=' → logprob: -11.003386497497559
    6. ' *' → logprob: -12.878386497497559
    7. ')' → logprob: -15.253386497497559
    8. ' -=' → logprob: -15.378386497497559
    9. ' ' → logprob: -15.628386497497559
    10. '*' → logprob: -16.253387451171875

Token 102: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6407015919685364
    2. ' ex' → logprob: -0.7657015919685364
    3. '(ex' → logprob: -6.640701770782471
    4. '2' → logprob: -6.765701770782471
    5. ' (' → logprob: -6.765701770782471
    6. '1' → logprob: -6.890701770782471
    7. '0' → logprob: -7.015701770782471
    8. '(' → logprob: -7.015701770782471
    9. ' ' → logprob: -7.765701770782471
    10. 'm' → logprob: -8.140701293945312

Token 103: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0026548474561423063
    2. '<|end|>' → logprob: -6.502655029296875
    3. '*' → logprob: -6.877655029296875
    4. '*(' → logprob: -9.752655029296875
    5. '<|end|>' → logprob: -10.627655029296875
    6. ' *(' → logprob: -11.127655029296875
    7. ' **' → logprob: -12.002655029296875
    8. ')' → logprob: -12.502655029296875
    9. '**' → logprob: -12.627655029296875
    10. ' *
' → logprob: -12.627655029296875

Token 104: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.16817140579223633
    2. '(' → logprob: -2.5431714057922363
    3. ' (' → logprob: -3.0431714057922363
    4. 'm' → logprob: -3.9181714057922363
    5. '2' → logprob: -5.293171405792236
    6. ' m' → logprob: -5.918171405792236
    7. '((' → logprob: -7.293171405792236
    8. ' ' → logprob: -8.918170928955078
    9. ' ((' → logprob: -10.543170928955078
    10. '1' → logprob: -11.293170928955078

Token 105: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.33730390667915344
    2. '(m' → logprob: -1.337303876876831
    3. ' m' → logprob: -4.08730411529541
    4. ' (' → logprob: -5.46230411529541
    5. '2' → logprob: -6.96230411529541
    6. '(' → logprob: -6.96230411529541
    7. '1' → logprob: -8.83730411529541
    8. ')m' → logprob: -9.08730411529541
    9. '   ' → logprob: -9.21230411529541
    10. 'd' → logprob: -9.21230411529541

Token 106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05518217757344246
    2. '-' → logprob: -2.9301822185516357
    3. ')' → logprob: -8.805182456970215
    4. ' ' → logprob: -8.930182456970215
    5. '<|end|>' → logprob: -12.180182456970215
    6. ' )' → logprob: -12.305182456970215
    7. '   ' → logprob: -13.180182456970215
    8. '  ' → logprob: -13.555182456970215
    9. '`' → logprob: -14.430182456970215
    10. ' ' → logprob: -14.680182456970215

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028836870566010475
    2. ' ' → logprob: -3.778836965560913
    3. '2' → logprob: -5.778836727142334
    4. ')' → logprob: -6.028836727142334
    5. '   ' → logprob: -10.403837203979492
    6. ' )' → logprob: -10.778837203979492
    7. '  ' → logprob: -12.028837203979492
    8. '```' → logprob: -12.841337203979492
    9. '0' → logprob: -13.216337203979492
    10. ' ' → logprob: -13.403837203979492

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03433382511138916
    2. '2' → logprob: -3.4093337059020996
    3. ' ' → logprob: -7.7843337059021
    4. ')' → logprob: -8.284334182739258
    5. '(' → logprob: -11.659334182739258
    6. '3' → logprob: -13.096834182739258
    7. '-' → logprob: -13.596834182739258
    8. '```' → logprob: -13.784334182739258
    9. '   ' → logprob: -13.909334182739258
    10. '  ' → logprob: -14.221834182739258

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003362954594194889
    2. ' )' → logprob: -6.753363132476807
    3. '<|end|>' → logprob: -6.753363132476807
    4. ' /' → logprob: -7.878363132476807
    5. '/' → logprob: -8.128362655639648
    6. '   ' → logprob: -9.378362655639648
    7. ')
' → logprob: -10.003362655639648
    8. ' *' → logprob: -10.128362655639648
    9. '<|end|>' → logprob: -10.753362655639648
    10. ' ' → logprob: -10.878362655639648

Token 110: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032519849482923746
    2. '#' → logprob: -6.753252029418945
    3. ')' → logprob: -7.128252029418945
    4. '<|end|>' → logprob: -7.628252029418945
    5. '\n' → logprob: -8.003252029418945
    6. '
' → logprob: -8.628252029418945
    7. ' print' → logprob: -8.878252029418945
    8. '\' → logprob: -9.878252029418945
    9. '#print' → logprob: -10.503252029418945
    10. '```' → logprob: -10.878252029418945

Token 111: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06197462975978851
    2. '(' → logprob: -2.81197452545166
    3. '(answer' → logprob: -13.06197452545166
    4. '(
' → logprob: -13.93697452545166
    5. '(abs' → logprob: -13.93697452545166
    6. '('' → logprob: -14.06197452545166
    7. '()' → logprob: -14.68697452545166
    8. ' (' → logprob: -14.93697452545166
    9. '(round' → logprob: -15.31197452545166
    10. '(

' → logprob: -15.31197452545166

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.25
    3. ')`' → logprob: -17.5
    4. '))' → logprob: -17.625
    5. '()' → logprob: -18.75
    6. ')
' → logprob: -18.75
    7. '')' → logprob: -19.625
    8. ')#' → logprob: -20.0
    9. '`)' → logprob: -20.25
    10. ')**' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 110
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 31.82%
Précision adaptée (1ère position): 33.64%
Précision (top 10): 82.73%
================================================================================
