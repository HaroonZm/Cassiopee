================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate

def solve(n, rev):
    """
    Calcule le coût minimum pour réordonner les billes blanches et noires dans une ligne
    selon une règle spécifique basée sur leurs positions initiales.

    Args:
        n (int): Nombre de billes blanches (et également de billes noires, donc 2n billes au total).
        rev (list): Liste composée de deux sous-listes :
            - rev[0] : positions actuelles des billes blanches dans la ligne (ordre donné par les indices).
            - rev[1] : positions actuelles des billes noires dans la ligne.

    Returns:
        int: Le coût minimum selon l'algorithme employé.
    """
    def existence_right(rev_c):
        """
        Pour chaque bille de la couleur concernée, construit une table qui indique
        combien de billes de cette couleur se trouvent plus à droite de chaque position.

        Args:
            rev_c (list): Liste des positions pour une couleur donnée.

        Returns:
            list: Liste d'états accumulés représentant, pour chaque progression,
                le nombre cumulatif de billes à droite de chaque indice.
        """
        n2 = n * 2  # Longueur totale de la ligne (2n positions).
        acc = [[0] * n2]  # Initialise l'accumulateur pour chaque étape.
        row = [0] * n2    # Représente la présence des billes sur chaque case.
        for x in rev_c:
            # On place une bille à la position correspondante (côté "droit", d'où le n2-x-1)
            row[n2 - x - 1] += 1
            # On accumule le total depuis la droite vers la gauche (côté le plus à droite == début de l'accumulateur)
            acc.append(list(reversed(list(accumulate(row)))))
        return acc

    # Chaque élément de cost correspond à une couleur (cost[0] pour blanc, cost[1] pour noir).
    # Chacun est une table donnant combien de billes de cette couleur sont à droite de chaque index,
    # pour chaque nombre de billes déjà prises.
    cost = list(map(existence_right, rev))

    # Initialisation du premier vecteur dp : coût minimum pour sélectionner les billes noires dans un certain ordre.
    # dp[b] sera le coût minimum pour avoir traité les b premières billes noires.
    dp = [0] + list(accumulate(c[y] for y, c in zip(rev[1], cost[1])))

    # On traite ensuite les billes blanches une à une.
    for x, cw0, cw1 in zip(rev[0], cost[0], cost[0][1:]):
        # ndp sera le nouveau tableau des coûts minimums, pour chaque nombre de billes noires déjà sélectionnées.
        ndp = [0] * (n + 1)
        # Coût pour placer une bille blanche à la position x, sachant la config précédente.
        cw0x = cw0[x]
        # Cas où aucune bille noire n'est encore traitée.
        ndp[0] = prev = dp[0] + cw0x
        # Parcours du nombre de billes noires déjà sélectionnées (de 1 à n).
        for b, (y, cb0, cb1) in enumerate(zip(rev[1], cost[1], cost[1][1:])):
            # Choix du coût en ajoutant la prochaine bille noire ou la prochaine bille blanche.
            # Comparaison entre deux scénarios et prise du minimum.
            ndp[b + 1] = prev = min(
                dp[b + 1] + cw0x + cb1[x],  # Cas où l'on ajoute une bille blanche puis une noire
                prev + cw1[y] + cb0[y]      # Cas où l'on ajoute une bille noire puis une blanche
            )
        # On prépare pour la prochaine itération.
        dp = ndp
    # À la fin, le résultat optimal est dp[n], i.e., toutes les billes traitées (blanches et noires)
    return dp[n]

if __name__ == "__main__":
    # Lecture du nombre de billes de chaque couleur
    n = int(input())
    # Initialisation des tableaux pour les positions de chaque bille blanche et noire.
    # rev[0] contiendra les positions des billes blanches
    # rev[1] celles des noires
    rev = [[0] * n, [0] * n]
    for i in range(n * 2):
        c, a = input().split()  # c = couleur ("W" ou "B"), a = numéro de la bille (1-based)
        a = int(a) - 1          # Conversion en indice basé zéro
        rev[int(c == 'B')][a] = i  # Mise à jour de la position pour la couleur et le numéro donnés
    print(solve(n, rev))  # Calcul et affichage du coût minimum
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016706773021724075
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007796077989041805
    2. '(
' → logprob: -7.250779628753662
    3. 'def' → logprob: -11.625779151916504
    4. ',' → logprob: -11.625779151916504
    5. '\(' → logprob: -11.625779151916504
    6. '()' → logprob: -11.875779151916504
    7. '.' → logprob: -12.250779151916504
    8. '```' → logprob: -12.375779151916504
    9. ' (' → logprob: -12.625779151916504
    10. '(

' → logprob: -12.625779151916504

Token 6: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0027708823326975107
    2. ' accumulate' → logprob: -6.252770900726318
    3. ' calculate' → logprob: -8.37777042388916
    4. ' space' → logprob: -8.87777042388916
    5. ' accumulated' → logprob: -9.50277042388916
    6. ' ' → logprob: -9.62777042388916
    7. ' add' → logprob: -9.87777042388916
    8. ' sum' → logprob: -9.87777042388916
    9. ' accumulator' → logprob: -10.12777042388916
    10. ' process' → logprob: -10.75277042388916

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02673911303281784
    2. '_' → logprob: -4.026739120483398
    3. '```' → logprob: -5.151739120483398
    4. '():' → logprob: -6.526739120483398
    5. ':' → logprob: -8.151739120483398
    6. '(:' → logprob: -8.526739120483398
    7. '(_:' → logprob: -9.401739120483398
    8. ' (' → logprob: -9.651739120483398
    9. '(_' → logprob: -9.776739120483398
    10. '(
' → logprob: -10.026739120483398

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08570577204227448
    2. ',' → logprob: -3.0857057571411133
    3. ')' → logprob: -3.3357057571411133
    4. ':' → logprob: -7.210705757141113
    5. ' ):' → logprob: -10.585705757141113
    6. '=' → logprob: -10.710705757141113
    7. ',n' → logprob: -11.460705757141113
    8. '*' → logprob: -12.085705757141113
    9. '):
' → logprob: -12.085705757141113
    10. '),' → logprob: -12.335705757141113

Token 9: ' rev' (ID: 10808)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.0445053577423096
    2. ' arr' → logprob: -1.4195053577423096
    3. ' a' → logprob: -2.5445053577423096
    4. ' lst' → logprob: -2.9195053577423096
    5. 'arr' → logprob: -3.0445053577423096
    6. ' numbers' → logprob: -3.0445053577423096
    7. ' m' → logprob: -3.2945053577423096
    8. ' data' → logprob: -3.6695053577423096
    9. 'a' → logprob: -4.4195051193237305
    10. 'lst' → logprob: -4.5445051193237305

Token 10: '):
' (ID: 1883)
  Prédit: 'erse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erse' → logprob: -0.06877405196428299
    2. '):' → logprob: -3.4437739849090576
    3. 'ers' → logprob: -4.068774223327637
    4. '_' → logprob: -4.943774223327637
    5. 's' → logprob: -5.818774223327637
    6. 'e' → logprob: -7.068774223327637
    7. 'ersion' → logprob: -7.443774223327637
    8. 'er' → logprob: -7.568774223327637
    9. '):
' → logprob: -7.568774223327637
    10. '_e' → logprob: -7.693774223327637

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4879527986049652
    2. ':' → logprob: -1.1129528284072876
    3. '    ' → logprob: -3.362952709197998
    4. '):' → logprob: -5.237952709197998
    5. ' ' → logprob: -5.362952709197998
    6. ' :' → logprob: -5.612952709197998
    7. '    
' → logprob: -6.362952709197998
    8. '\' → logprob: -6.362952709197998
    9. '```' → logprob: -6.737952709197998
    10. ' 
' → logprob: -7.862952709197998

Token 12: ' """
' (ID: 7037)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6667259931564331
    2. ' res' → logprob: -1.291725993156433
    3. 'result' → logprob: -2.6667261123657227
    4. '   ' → logprob: -2.9167261123657227
    5. ' return' → logprob: -3.7917261123657227
    6. ' acc' → logprob: -4.416726112365723
    7. 'res' → logprob: -4.416726112365723
    8. ' r' → logprob: -4.791726112365723
    9. ' total' → logprob: -4.916726112365723
    10. 'r' → logprob: -5.541726112365723

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5218874216079712
    2. ')' → logprob: -1.7718874216079712
    3. ' )' → logprob: -2.6468873023986816
    4. '    ' → logprob: -3.3968873023986816
    5. ' ' → logprob: -3.5218873023986816
    6. '#' → logprob: -3.5218873023986816
    7. 'n' → logprob: -4.021887302398682
    8. '"""' → logprob: -4.896887302398682
    9. ' """' → logprob: -5.146887302398682
    10. ' 
' → logprob: -5.771887302398682

Token 14: ' Cal' (ID: 4453)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5269594788551331
    2. 'Calculate' → logprob: -1.7769594192504883
    3. '"""
' → logprob: -2.4019594192504883
    4. ' Calculates' → logprob: -3.6519594192504883
    5. 'Returns' → logprob: -3.9019594192504883
    6. ' Calculate' → logprob: -3.9019594192504883
    7. '   ' → logprob: -4.151959419250488
    8. ' """' → logprob: -4.526959419250488
    9. 'Generate' → logprob: -4.776959419250488
    10. 'Calcul' → logprob: -5.026959419250488

Token 15: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.3207930326461792
    2. 'c' → logprob: -1.3207930326461792
    3. 'cul' → logprob: -6.320793151855469
    4. 'cula' → logprob: -6.445793151855469
    5. 'l' → logprob: -6.570793151855469
    6. 'culated' → logprob: -6.820793151855469
    7. ' c' → logprob: -8.445793151855469
    8. 'cum' → logprob: -8.695793151855469
    9. '```' → logprob: -8.695793151855469
    10. 'cular' → logprob: -8.820793151855469

Token 16: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01904485374689102
    2. 'rate' → logprob: -4.394044876098633
    3. 'te' → logprob: -6.144044876098633
    4. 's' → logprob: -6.394044876098633
    5. 'late' → logprob: -7.269044876098633
    6. 'ra' → logprob: -7.519044876098633
    7. 'brate' → logprob: -8.019044876098633
    8. 'rates' → logprob: -8.269044876098633
    9. 'tes' → logprob: -9.019044876098633
    10. 'ate' → logprob: -9.019044876098633

Token 17: ' coût' (ID: 73109)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41951364278793335
    2. ' nombre' → logprob: -1.9195137023925781
    3. ' cumul' → logprob: -2.669513702392578
    4. ' s' → logprob: -3.044513702392578
    5. ' total' → logprob: -4.294513702392578
    6. ' montant' → logprob: -4.419513702392578
    7. ' somme' → logprob: -4.544513702392578
    8. ' résultat' → logprob: -5.044513702392578
    9. ' score' → logprob: -5.169513702392578
    10. ' coût' → logprob: -5.169513702392578

Token 18: ' minimum' (ID: 11085)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.11954148858785629
    2. ' de' → logprob: -3.2445414066314697
    3. ' ' → logprob: -3.9945414066314697
    4. ' des' → logprob: -4.119541645050049
    5. ' d' → logprob: -4.619541645050049
    6. '_total' → logprob: -5.119541645050049
    7. 'total' → logprob: -5.244541645050049
    8. ' totale' → logprob: -6.119541645050049
    9. '_' → logprob: -6.244541645050049
    10. '  ' → logprob: -6.369541645050049

Token 19: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38412967324256897
    2. ' de' → logprob: -1.8841296434402466
    3. ' d' → logprob: -2.759129762649536
    4. ' des' → logprob: -4.134129524230957
    5. ' du' → logprob: -4.259129524230957
    6. ')' → logprob: -4.634129524230957
    7. '   ' → logprob: -4.634129524230957
    8. ' à' → logprob: -5.009129524230957
    9. ' pour' → logprob: -5.009129524230957
    10. ',' → logprob: -5.259129524230957

Token 20: ' ré' (ID: 3146)
  Prédit: ' réaliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' réaliser' → logprob: -0.6022567749023438
    2. ' effectuer' → logprob: -1.2272567749023438
    3. ' transformer' → logprob: -3.6022567749023438
    4. ' accompl' → logprob: -3.8522567749023438
    5. ' construire' → logprob: -3.8522567749023438
    6. ' reconstru' → logprob: -4.227256774902344
    7. '    ' → logprob: -4.477256774902344
    8. ' assembler' → logprob: -4.727256774902344
    9. 'transform' → logprob: -4.852256774902344
    10. ' atteindre' → logprob: -4.977256774902344

Token 21: 'ordon' (ID: 39916)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.06678459048271179
    2. 'organ' → logprob: -3.566784620285034
    3. 'a' → logprob: -4.191784381866455
    4. 'part' → logprob: -5.191784381866455
    5. 'du' → logprob: -5.566784381866455
    6. 'é' → logprob: -6.441784381866455
    7. '{' → logprob: -6.441784381866455
    8. 'ali' → logprob: -7.066784381866455
    9. 'arr' → logprob: -7.316784381866455
    10. 'align' → logprob: -7.316784381866455

Token 22: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.0009339710813947022
    2. 'nner' → logprob: -7.50093412399292
    3. 'n' → logprob: -8.750933647155762
    4. 'er' → logprob: -8.875933647155762
    5. '-' → logprob: -10.875933647155762
    6. '   ' → logprob: -11.375933647155762
    7. '``' → logprob: -11.625933647155762
    8. 'der' → logprob: -12.000933647155762
    9. '```' → logprob: -12.000933647155762
    10. '#' → logprob: -12.625933647155762

Token 23: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.49408718943595886
    2. ' la' → logprob: -1.1190872192382812
    3. ' le' → logprob: -3.1190872192382812
    4. ' l' → logprob: -5.869087219238281
    5. ' the' → logprob: -6.119087219238281
    6. 'les' → logprob: -6.244087219238281
    7. ' n' → logprob: -6.494087219238281
    8. 'l' → logprob: -6.494087219238281
    9. ' ' → logprob: -6.494087219238281
    10. ' ' → logprob: -6.619087219238281

Token 24: ' bill' (ID: 6713)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2715778350830078
    2. ' éléments' → logprob: -1.7715778350830078
    3. 'n' → logprob: -4.646577835083008
    4. '   ' → logprob: -5.396577835083008
    5. ' n' → logprob: -5.521577835083008
    6. ' elements' → logprob: -6.021577835083008
    7. ' cartes' → logprob: -6.021577835083008
    8. 'é' → logprob: -6.021577835083008
    9. 'cart' → logprob: -6.021577835083008
    10. 'rev' → logprob: -6.146577835083008

Token 25: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0034240162931382656
    2. 'ets' → logprob: -6.253424167633057
    3. 'et' → logprob: -7.128424167633057
    4. 'e' → logprob: -7.378424167633057
    5. 'etes' → logprob: -11.503423690795898
    6. '   ' → logprob: -11.753423690795898
    7. '```' → logprob: -11.878423690795898
    8. '#' → logprob: -12.253423690795898
    9. 'lets' → logprob: -12.628423690795898
    10. 'i' → logprob: -12.628423690795898

Token 26: ' bl' (ID: 1162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6122970581054688
    2. ' en' → logprob: -0.9872970581054688
    3. ' afin' → logprob: -3.8622970581054688
    4. ' ' → logprob: -4.487297058105469
    5. 'def' → logprob: -4.862297058105469
    6. ' def' → logprob: -5.612297058105469
    7. ',' → logprob: -5.612297058105469
    8. '(s' → logprob: -5.612297058105469
    9. '   ' → logprob: -5.862297058105469
    10. ' de' → logprob: -5.987297058105469

Token 27: 'anches' (ID: 64769)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8935973644256592
    2. 'es' → logprob: -1.5185973644256592
    3. 'anches' → logprob: -2.018597364425659
    4. 'anc' → logprob: -2.268597364425659
    5. 'a' → logprob: -3.018597364425659
    6. 'o' → logprob: -3.893597364425659
    7. 'oc' → logprob: -4.393597602844238
    8. 'ocs' → logprob: -4.393597602844238
    9. 'i' → logprob: -4.768597602844238
    10. '```' → logprob: -5.143597602844238

Token 28: ' et' (ID: 859)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.034278079867362976
    2. '.' → logprob: -5.03427791595459
    3. ',' → logprob: -5.28427791595459
    4. ' afin' → logprob: -5.40927791595459
    5. ' et' → logprob: -5.53427791595459
    6. 's' → logprob: -6.15927791595459
    7. ' selon' → logprob: -6.53427791595459
    8. ' ,' → logprob: -6.53427791595459
    9. ' de' → logprob: -6.78427791595459
    10. ')' → logprob: -7.15927791595459

Token 29: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.7919566035270691
    2. 'no' → logprob: -1.2919566631317139
    3. 'les' → logprob: -2.416956663131714
    4. ' les' → logprob: -2.666956663131714
    5. ' rouges' → logprob: -3.291956663131714
    6. '```' → logprob: -4.166956424713135
    7. 'rou' → logprob: -4.416956424713135
    8. 'bl' → logprob: -4.666956424713135
    9. ' ' → logprob: -4.666956424713135
    10. ' noirs' → logprob: -5.166956424713135

Token 30: 'ires' (ID: 5255)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7695760130882263
    2. 'ires' → logprob: -1.019576072692871
    3. 'n' → logprob: -2.019576072692871
    4. 'ir' → logprob: -3.269576072692871
    5. 'nc' → logprob: -6.269576072692871
    6. '   ' → logprob: -7.394576072692871
    7. 'u' → logprob: -8.019576072692871
    8. 'irc' → logprob: -8.019576072692871
    9. 'ire' → logprob: -8.019576072692871
    10. '#' → logprob: -8.144576072692871

Token 31: ' dans' (ID: 2671)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.22737973928451538
    2. '   ' → logprob: -2.10237979888916
    3. '.' → logprob: -4.10237979888916
    4. '```' → logprob: -4.10237979888916
    5. ' afin' → logprob: -4.35237979888916
    6. ',' → logprob: -5.10237979888916
    7. ' :' → logprob: -5.35237979888916
    8. ':' → logprob: -5.35237979888916
    9. ' selon' → logprob: -5.60237979888916
    10. 'en' → logprob: -5.72737979888916

Token 32: ' une' (ID: 2463)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6025106906890869
    2. ' un' → logprob: -1.977510690689087
    3. 'l' → logprob: -2.227510690689087
    4. ' une' → logprob: -2.352510690689087
    5. ' la' → logprob: -2.977510690689087
    6. ' le' → logprob: -4.227510452270508
    7. '   ' → logprob: -4.727510452270508
    8. '```' → logprob: -4.852510452270508
    9. ' leur' → logprob: -4.977510452270508
    10. 'une' → logprob: -4.977510452270508

Token 33: ' ligne' (ID: 19583)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.2612462639808655
    2. ' chaîne' → logprob: -2.1362462043762207
    3. '   ' → logprob: -3.7612462043762207
    4. ' ' → logprob: -4.136246204376221
    5. ' phrase' → logprob: -4.261246204376221
    6. 'liste' → logprob: -4.386246204376221
    7. ' chaine' → logprob: -4.511246204376221
    8. 'chaine' → logprob: -4.636246204376221
    9. ' sequence' → logprob: -4.886246204376221
    10. ' list' → logprob: -5.886246204376221

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4884311556816101
    2. ',' → logprob: -1.3634312152862549
    3. '.' → logprob: -2.988431215286255
    4. ' en' → logprob: -3.238431215286255
    5. ' :' → logprob: -4.238430976867676
    6. ' ,' → logprob: -4.738430976867676
    7. ':' → logprob: -4.863430976867676
    8. 's' → logprob: -6.488430976867676
    9. ' ' → logprob: -6.988430976867676
    10. ' selon' → logprob: -7.113430976867676

Token 35: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7106231451034546
    2. '   ' → logprob: -1.3356231451034546
    3. ',' → logprob: -1.9606231451034546
    4. '.' → logprob: -3.210623264312744
    5. ' afin' → logprob: -3.835623264312744
    6. ' """' → logprob: -4.710623264312744
    7. ' ,' → logprob: -4.960623264312744
    8. ' selon' → logprob: -5.710623264312744
    9. ' de' → logprob: -5.960623264312744
    10. ' """
' → logprob: -6.085623264312744

Token 36: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36450281739234924
    2. ' en' → logprob: -2.4895029067993164
    3. ',' → logprob: -2.6145029067993164
    4. '.' → logprob: -2.7395029067993164
    5. ' """' → logprob: -3.4895029067993164
    6. '"""' → logprob: -3.9895029067993164
    7. ' afin' → logprob: -5.239502906799316
    8. ' """
' → logprob: -5.239502906799316
    9. ')' → logprob: -5.614502906799316
    10. ' de' → logprob: -5.864502906799316

Token 37: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8024478554725647
    2. ' l' → logprob: -1.30244779586792
    3. ' leur' → logprob: -2.55244779586792
    4. ' un' → logprob: -2.67744779586792
    5. ' le' → logprob: -2.80244779586792
    6. ' les' → logprob: -3.55244779586792
    7. ' une' → logprob: -4.30244779586792
    8. ' ' → logprob: -4.92744779586792
    9. 'l' → logprob: -5.42744779586792
    10. ' leurs' → logprob: -5.80244779586792

Token 38: ' règle' (ID: 115826)
  Prédit: ' stratégie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stratégie' → logprob: -1.426782488822937
    2. ' sé' → logprob: -1.551782488822937
    3. ' certaine' → logprob: -2.3017826080322266
    4. 'partition' → logprob: -2.5517826080322266
    5. 'certain' → logprob: -2.5517826080322266
    6. 'str' → logprob: -3.0517826080322266
    7. ' partition' → logprob: -3.5517826080322266
    8. ' approche' → logprob: -3.6767826080322266
    9. 'sé' → logprob: -3.8017826080322266
    10. 'ordre' → logprob: -4.051782608032227

Token 39: ' spécifique' (ID: 113170)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2646961510181427
    2. ' :' → logprob: -2.1396961212158203
    3. ' ' → logprob: -3.3896961212158203
    4. ':' → logprob: -3.6396961212158203
    5. ',' → logprob: -4.01469612121582
    6. '.' → logprob: -4.76469612121582
    7. '    ' → logprob: -5.01469612121582
    8. '  ' → logprob: -5.26469612121582
    9. ' de' → logprob: -6.13969612121582
    10. ' ' → logprob: -6.38969612121582

Token 40: ' basée' (ID: 153941)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7825161814689636
    2. '):' → logprob: -1.1575162410736084
    3. '   ' → logprob: -1.6575162410736084
    4. ' :' → logprob: -4.157516002655029
    5. ')' → logprob: -4.657516002655029
    6. ',' → logprob: -5.157516002655029
    7. '.' → logprob: -6.032516002655029
    8. '```' → logprob: -6.532516002655029
    9. '(n' → logprob: -7.657516002655029
    10. '):
' → logprob: -7.782516002655029

Token 41: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.6433430314064026
    2. 'sur' → logprob: -0.7683430314064026
    3. '<|end|>' → logprob: -5.893342971801758
    4. 's' → logprob: -6.018342971801758
    5. '_sur' → logprob: -6.518342971801758
    6. 'def' → logprob: -7.393342971801758
    7. 'e' → logprob: -7.518342971801758
    8. '   ' → logprob: -7.643342971801758
    9. ')' → logprob: -8.018342971801758
    10. ' on' → logprob: -8.018342971801758

Token 42: ' leurs' (ID: 16348)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1860944032669067
    2. ' les' → logprob: -1.3110944032669067
    3. ' l' → logprob: -1.4360944032669067
    4. ' leur' → logprob: -2.436094284057617
    5. ' le' → logprob: -3.311094284057617
    6. ' leurs' → logprob: -3.811094284057617
    7. 'l' → logprob: -4.811094284057617
    8. 'leur' → logprob: -5.061094284057617
    9. 'les' → logprob: -5.186094284057617
    10. ' ' → logprob: -5.686094284057617

Token 43: ' positions' (ID: 15897)
  Prédit: ' couleurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.30644500255584717
    2. ' positions' → logprob: -1.6814450025558472
    3. 'positions' → logprob: -3.1814451217651367
    4. ' indices' → logprob: -4.181445121765137
    5. ' valeurs' → logprob: -5.181445121765137
    6. ' couleur' → logprob: -6.306445121765137
    7. ' états' → logprob: -6.306445121765137
    8. ' colors' → logprob: -6.681445121765137
    9. 'indices' → logprob: -6.681445121765137
    10. 'cou' → logprob: -6.931445121765137

Token 44: ' initial' (ID: 4871)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4641357362270355
    2. '   ' → logprob: -1.214135766029358
    3. ':' → logprob: -2.9641356468200684
    4. ')' → logprob: -4.589135646820068
    5. ',' → logprob: -4.714135646820068
    6. ' :' → logprob: -7.089135646820068
    7. '):
' → logprob: -7.589135646820068
    8. '```' → logprob: -7.589135646820068
    9. ' ' → logprob: -7.714135646820068
    10. 'def' → logprob: -8.714136123657227

Token 45: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9012253880500793
    2. 's' → logprob: -1.1512253284454346
    3. ')' → logprob: -2.0262253284454346
    4. ',' → logprob: -2.6512253284454346
    5. ' ' → logprob: -3.4012253284454346
    6. 'e' → logprob: -4.151225566864014
    7. ' )' → logprob: -4.901225566864014
    8. ' ,' → logprob: -5.526225566864014
    9. '   ' → logprob: -6.151225566864014
    10. '.' → logprob: -6.276225566864014

Token 46: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28658968210220337
    2. '   ' → logprob: -2.1615896224975586
    3. '):' → logprob: -2.2865896224975586
    4. ')' → logprob: -4.161589622497559
    5. ',' → logprob: -4.786589622497559
    6. ' ' → logprob: -6.286589622497559
    7. '
' → logprob: -6.286589622497559
    8. ' :' → logprob: -6.911589622497559
    9. ':
' → logprob: -7.161589622497559
    10. '```' → logprob: -7.411589622497559

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23032881319522858
    2. ')' → logprob: -1.8553287982940674
    3. '"""' → logprob: -3.4803287982940674
    4. '```' → logprob: -4.6053290367126465
    5. '):' → logprob: -5.3553290367126465
    6. '\n' → logprob: -6.9803290367126465
    7. '
' → logprob: -7.6053290367126465
    8. '""' → logprob: -7.6053290367126465
    9. '"""
' → logprob: -7.8553290367126465
    10. ' """' → logprob: -8.480328559875488

Token 48: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08671671152114868
    2. ' """
' → logprob: -3.836716651916504
    3. '"""
' → logprob: -3.961716651916504
    4. '"""' → logprob: -4.086716651916504
    5. '
' → logprob: -5.336716651916504
    6. 'b' → logprob: -5.336716651916504
    7. '#' → logprob: -5.711716651916504
    8. ' """' → logprob: -5.961716651916504
    9. 'n' → logprob: -6.211716651916504
    10. 'c' → logprob: -6.586716651916504

Token 49: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4597035348415375
    2. ',' → logprob: -1.0847035646438599
    3. '[n' → logprob: -4.45970344543457
    4. '   ' → logprob: -4.58470344543457
    5. ':' → logprob: -5.95970344543457
    6. ',n' → logprob: -6.33470344543457
    7. '):' → logprob: -6.70970344543457
    8. ')' → logprob: -6.95970344543457
    9. ' (' → logprob: -7.33470344543457
    10. '(' → logprob: -8.08470344543457

Token 50: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0906822681427002
    2. ' n' → logprob: -2.4656822681427
    3. '   ' → logprob: -6.465682029724121
    4. '```' → logprob: -8.965682029724121
    5. ')' → logprob: -10.340682029724121
    6. '    ' → logprob: -11.340682029724121
    7. '(n' → logprob: -12.715682029724121
    8. ' ```' → logprob: -13.340682029724121
    9. '	n' → logprob: -13.590682029724121
    10. ')n' → logprob: -13.590682029724121

Token 51: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.012693996541202068
    2. '   ' → logprob: -4.637693881988525
    3. ' n' → logprob: -5.887693881988525
    4. 'int' → logprob: -9.887694358825684
    5. 'rev' → logprob: -10.387694358825684
    6. '```' → logprob: -10.387694358825684
    7. '	n' → logprob: -11.512694358825684
    8. ' ' → logprob: -11.762694358825684
    9. '`' → logprob: -12.262694358825684
    10. ')' → logprob: -12.637694358825684

Token 52: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026873021852225065
    2. ')' → logprob: -6.752687454223633
    3. '):' → logprob: -6.877687454223633
    4. ':' → logprob: -8.377687454223633
    5. ',n' → logprob: -9.252687454223633
    6. ' ,' → logprob: -9.252687454223633
    7. '   ' → logprob: -11.002687454223633
    8. ',)' → logprob: -12.127687454223633
    9. '=' → logprob: -12.252687454223633
    10. '<|end|>' → logprob: -12.252687454223633

Token 53: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07534845173358917
    2. ')' → logprob: -3.450348377227783
    3. ' int' → logprob: -3.575348377227783
    4. ',' → logprob: -4.575348377227783
    5. '[int' → logprob: -6.700348377227783
    6. ',int' → logprob: -7.575348377227783
    7. ':int' → logprob: -8.325348854064941
    8. '   ' → logprob: -8.325348854064941
    9. ' )' → logprob: -9.200348854064941
    10. '):' → logprob: -9.950348854064941

Token 54: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2564579248428345
    2. ')' → logprob: -1.6314579248428345
    3. ',' → logprob: -3.506457805633545
    4. '),' → logprob: -8.006458282470703
    5. '):
' → logprob: -9.506458282470703
    6. '<|end|>' → logprob: -9.881458282470703
    7. '   ' → logprob: -10.506458282470703
    8. ' ):' → logprob: -10.631458282470703
    9. ':' → logprob: -11.631458282470703
    10. '<|end|>' → logprob: -11.631458282470703

Token 55: ' Nombre' (ID: 70208)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.09761381149292
    2. ' Nombre' → logprob: -1.59761381149292
    3. ' Le' → logprob: -2.22261381149292
    4. ' int' → logprob: -2.59761381149292
    5. 'Nombre' → logprob: -2.72261381149292
    6. ' number' → logprob: -2.97261381149292
    7. '    ' → logprob: -3.47261381149292
    8. '   ' → logprob: -3.59761381149292
    9. ' Number' → logprob: -3.59761381149292
    10. ' le' → logprob: -3.72261381149292

Token 56: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6883035898208618
    2. ' ' → logprob: -1.4383035898208618
    3. ')' → logprob: -2.0633034706115723
    4. '   ' → logprob: -2.9383034706115723
    5. ' )' → logprob: -3.6883034706115723
    6. '    ' → logprob: -4.063303470611572
    7. '  ' → logprob: -5.063303470611572
    8. ' d' → logprob: -5.188303470611572
    9. ' total' → logprob: -5.438303470611572
    10. '_' → logprob: -5.688303470611572

Token 57: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -0.5280876159667969
    2. 'b' → logprob: -1.6530876159667969
    3. 'bill' → logprob: -1.6530876159667969
    4. 'm' → logprob: -4.653087615966797
    5. ')' → logprob: -5.028087615966797
    6. '```' → logprob: -5.653087615966797
    7. ' ' → logprob: -6.278087615966797
    8. ' ' → logprob: -6.403087615966797
    9. 'élé' → logprob: -7.028087615966797
    10. ' éléments' → logprob: -7.653087615966797

Token 58: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0019959660712629557
    2. '   ' → logprob: -7.126996040344238
    3. 'e' → logprob: -7.751996040344238
    4. 'les' → logprob: -8.376996040344238
    5. ' ' → logprob: -8.751996040344238
    6. ')' → logprob: -9.126996040344238
    7. 's' → logprob: -9.501996040344238
    8. '    ' → logprob: -10.251996040344238
    9. '     ' → logprob: -10.626996040344238
    10. '       ' → logprob: -10.876996040344238

Token 59: ' bl' (ID: 1162)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3064800202846527
    2. '):' → logprob: -1.806480050086975
    3. ',' → logprob: -2.5564799308776855
    4. ')' → logprob: -4.0564799308776855
    5. '):
' → logprob: -6.3064799308776855
    6. '```' → logprob: -6.6814799308776855
    7. ':' → logprob: -7.4314799308776855
    8. ' ,' → logprob: -7.5564799308776855
    9. ' :' → logprob: -8.931480407714844
    10. '),' → logprob: -9.306480407714844

Token 60: 'anches' (ID: 64769)
  Prédit: 'anches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anches' → logprob: -0.4957410991191864
    2. 'anc' → logprob: -0.9957411289215088
    3. '```' → logprob: -4.24574089050293
    4. 'ances' → logprob: -6.24574089050293
    5. 'an' → logprob: -7.24574089050293
    6. '=' → logprob: -7.49574089050293
    7. 'a' → logprob: -7.62074089050293
    8. '``' → logprob: -7.74574089050293
    9. '' → logprob: -7.74574089050293
    10. 'es' → logprob: -7.87074089050293

Token 61: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9979211688041687
    2. ')' → logprob: -1.2479212284088135
    3. '   ' → logprob: -1.3729212284088135
    4. '):' → logprob: -2.7479212284088135
    5. '```' → logprob: -3.9979212284088135
    6. ':' → logprob: -6.122920989990234
    7. ' ,' → logprob: -6.872920989990234
    8. '):
' → logprob: -7.122920989990234
    9. ',n' → logprob: -7.247920989990234
    10. ',
' → logprob: -7.372920989990234

Token 62: 'et' (ID: 292)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04198009520769119
    2. '),' → logprob: -4.041980266571045
    3. '):' → logprob: -4.541980266571045
    4. ',' → logprob: -5.416980266571045
    5. 'et' → logprob: -6.166980266571045
    6. ').' → logprob: -6.166980266571045
    7. '   ' → logprob: -7.166980266571045
    8. ' )' → logprob: -7.166980266571045
    9. ' et' → logprob: -7.416980266571045
    10. 'total' → logprob: -8.041979789733887

Token 63: ' également' (ID: 15488)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.3485110402107239
    2. 'no' → logprob: -1.598510980606079
    3. ')' → logprob: -3.598510980606079
    4. ' noirs' → logprob: -3.723510980606079
    5. ' autant' → logprob: -4.473511219024658
    6. ' de' → logprob: -4.848511219024658
    7. ' noire' → logprob: -5.348511219024658
    8. '_no' → logprob: -5.973511219024658
    9. ' black' → logprob: -6.098511219024658
    10. ' aussi' → logprob: -6.223511219024658

Token 64: ' de' (ID: 334)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.42052727937698364
    2. ' no' → logprob: -1.2955272197723389
    3. ' de' → logprob: -4.045527458190918
    4. ' le' → logprob: -4.170527458190918
    5. 'de' → logprob: -4.545527458190918
    6. 'le' → logprob: -5.295527458190918
    7. ')' → logprob: -5.545527458190918
    8. ' noirs' → logprob: -5.920527458190918
    9. '   ' → logprob: -6.170527458190918
    10. 'n' → logprob: -6.170527458190918

Token 65: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -1.0899205207824707
    2. ' no' → logprob: -1.5899205207824707
    3. 'no' → logprob: -2.3399205207824707
    4. ' noirs' → logprob: -2.3399205207824707
    5. ' black' → logprob: -2.4649205207824707
    6. ' chaque' → logprob: -3.0899205207824707
    7. ')' → logprob: -3.3399205207824707
    8. 'bill' → logprob: -4.089920520782471
    9. ' ' → logprob: -4.214920520782471
    10. ' noir' → logprob: -4.464920520782471

Token 66: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0048648882657289505
    2. '```' → logprob: -7.004864692687988
    3. 'anches' → logprob: -7.004864692687988
    4. ')' → logprob: -7.504864692687988
    5. 's' → logprob: -8.129864692687988
    6. '#' → logprob: -8.129864692687988
    7. '' → logprob: -8.254864692687988
    8. 'iques' → logprob: -8.379864692687988
    9. 'és' → logprob: -8.754864692687988
    10. 'èques' → logprob: -8.879864692687988

Token 67: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.043183933943510056
    2. 'no' → logprob: -3.2931840419769287
    3. ' noirs' → logprob: -6.54318380355835
    4. ' noire' → logprob: -7.04318380355835
    5. '   ' → logprob: -7.54318380355835
    6. 'bl' → logprob: -7.91818380355835
    7. '_no' → logprob: -7.91818380355835
    8. ' ' → logprob: -8.043184280395508
    9. ')' → logprob: -8.043184280395508
    10. '```' → logprob: -8.293184280395508

Token 68: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.04286021366715431
    2. 'ir' → logprob: -3.292860269546509
    3. '__' → logprob: -6.29286003112793
    4. '#' → logprob: -7.79286003112793
    5. '\' → logprob: -7.79286003112793
    6. '_' → logprob: -8.16786003112793
    7. '   ' → logprob: -8.29286003112793
    8. '```' → logprob: -8.29286003112793
    9. 'r' → logprob: -8.54286003112793
    10. '**' → logprob: -8.91786003112793

Token 69: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033969197422266006
    2. '):' → logprob: -3.4089691638946533
    3. ').' → logprob: -9.033968925476074
    4. '),' → logprob: -9.033968925476074
    5. ',' → logprob: -10.158968925476074
    6. '):
' → logprob: -10.533968925476074
    7. '   ' → logprob: -11.408968925476074
    8. ')
' → logprob: -13.408968925476074
    9. '```' → logprob: -13.533968925476074
    10. ' )' → logprob: -14.158968925476074

Token 70: ' donc' (ID: 14206)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -0.8912069797515869
    2. ')' → logprob: -1.016206979751587
    3. '   ' → logprob: -1.516206979751587
    4. ' et' → logprob: -6.266206741333008
    5. ' )' → logprob: -6.891206741333008
    6. '       ' → logprob: -7.141206741333008
    7. ' puisque' → logprob: -7.141206741333008
    8. ' ce' → logprob: -7.641206741333008
    9. '):' → logprob: -7.641206741333008
    10. ' la' → logprob: -8.266206741333008

Token 71: ' ' (ID: 220)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2836370468139648
    2. ')' → logprob: -1.7836370468139648
    3. ' n' → logprob: -1.7836370468139648
    4. ' au' → logprob: -2.283637046813965
    5. ' le' → logprob: -2.533637046813965
    6. '   ' → logprob: -3.408637046813965
    7. ' the' → logprob: -3.408637046813965
    8. 'au' → logprob: -3.533637046813965
    9. ' total' → logprob: -3.533637046813965
    10. 'le' → logprob: -4.408637046813965

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04160577803850174
    2. 'la' → logprob: -4.2916059494018555
    3. 'n' → logprob: -4.5416059494018555
    4. 'total' → logprob: -5.7916059494018555
    5. 'au' → logprob: -6.1666059494018555
    6. ' la' → logprob: -6.1666059494018555
    7. ' n' → logprob: -6.2916059494018555
    8. 'len' → logprob: -6.2916059494018555
    9. ' ' → logprob: -6.4166059494018555
    10. 'le' → logprob: -6.5416059494018555

Token 73: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9750522971153259
    2. ' *' → logprob: -1.1000523567199707
    3. '*' → logprob: -1.8500523567199707
    4. '*n' → logprob: -2.2250523567199707
    5. 'n' → logprob: -4.725052356719971
    6. ',' → logprob: -4.725052356719971
    7. ' )' → logprob: -5.725052356719971
    8. ' n' → logprob: -6.100052356719971
    9. ' ' → logprob: -8.225051879882812
    10. ' ,' → logprob: -8.475051879882812

Token 74: ' bill' (ID: 6713)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002791088307276368
    2. ').' → logprob: -6.752790927886963
    3. '):' → logprob: -6.877790927886963
    4. '):
' → logprob: -8.002791404724121
    5. ')
' → logprob: -9.627791404724121
    6. ' )' → logprob: -10.377791404724121
    7. '):

' → logprob: -10.377791404724121
    8. '),' → logprob: -10.502791404724121
    9. ' au' → logprob: -10.752791404724121
    10. '```' → logprob: -11.627791404724121

Token 75: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0002560945285949856
    2. 'les' → logprob: -8.500256538391113
    3. ')' → logprob: -10.000256538391113
    4. 's' → logprob: -13.125256538391113
    5. 'e' → logprob: -13.250256538391113
    6. 'ies' → logprob: -13.375256538391113
    7. '   ' → logprob: -14.375256538391113
    8. '```' → logprob: -15.375256538391113
    9. 'def' → logprob: -15.500256538391113
    10. 'esp' → logprob: -15.875256538391113

Token 76: ' au' (ID: 2791)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08261233568191528
    2. ').' → logprob: -2.7076122760772705
    3. ' au' → logprob: -4.45761251449585
    4. '):' → logprob: -8.332612037658691
    5. ' total' → logprob: -8.957612037658691
    6. ' )' → logprob: -9.207612037658691
    7. 'au' → logprob: -9.207612037658691
    8. '),' → logprob: -9.707612037658691
    9. ',' → logprob: -9.832612037658691
    10. '   ' → logprob: -9.957612037658691

Token 77: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0053522284142673016
    2. ' total' → logprob: -5.255352020263672
    3. '   ' → logprob: -9.505352020263672
    4. ')' → logprob: -10.755352020263672
    5. 't' → logprob: -12.130352020263672
    6. 'tot' → logprob: -12.255352020263672
    7. ' ' → logprob: -12.880352020263672
    8. '```' → logprob: -13.005352020263672
    9. 'line' → logprob: -13.755352020263672
    10. ' totale' → logprob: -14.005352020263672

Token 78: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6401485800743103
    2. ')' → logprob: -0.7651485800743103
    3. '):
' → logprob: -5.015148639678955
    4. '   ' → logprob: -7.515148639678955
    5. ').' → logprob: -9.140148162841797
    6. '):
' → logprob: -9.390148162841797
    7. ',' → logprob: -10.015148162841797
    8. '```' → logprob: -10.390148162841797
    9. '):

' → logprob: -10.515148162841797
    10. '),' → logprob: -10.765148162841797

Token 79: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04570544883608818
    2. ')' → logprob: -3.670705556869507
    3. '"""' → logprob: -5.295705318450928
    4. '):' → logprob: -5.670705318450928
    5. '"""
' → logprob: -5.795705318450928
    6. '
' → logprob: -5.795705318450928
    7. '```' → logprob: -6.670705318450928
    8. '    
' → logprob: -6.795705318450928
    9. '):
' → logprob: -6.795705318450928
    10. ',' → logprob: -8.420705795288086

Token 80: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' (adapté à ' rev') → logprob: -0.674787700176239
    2. ' rev' → logprob: -0.799787700176239
    3. '   ' → logprob: -3.299787759780884
    4. 'b' → logprob: -6.049787521362305
    5. 're' → logprob: -7.924787521362305
    6. '```' → logprob: -8.737287521362305
    7. 'r' → logprob: -8.987287521362305
    8. ' b' → logprob: -8.987287521362305
    9. '       ' → logprob: -9.362287521362305
    10. 's' → logprob: -9.674787521362305

Token 81: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03979417681694031
    2. ':' → logprob: -3.2897942066192627
    3. ',' → logprob: -7.164793968200684
    4. '=' → logprob: -7.789793968200684
    5. '=False' → logprob: -8.789793968200684
    6. '):
' → logprob: -9.039793968200684
    7. ')' → logprob: -9.289793968200684
    8. ' ):' → logprob: -9.664793968200684
    9. '=None' → logprob: -9.914793968200684
    10. ' :' → logprob: -10.539793968200684

Token 82: 'list' (ID: 2641)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.14498357474803925
    2. 'list' → logprob: -2.1449835300445557
    3. ')' → logprob: -4.894983768463135
    4. 'List' → logprob: -5.394983768463135
    5. '):' → logprob: -6.019983768463135
    6. 'str' → logprob: -6.144983768463135
    7. 'int' → logprob: -7.394983768463135
    8. '):
' → logprob: -8.769983291625977
    9. ' bool' → logprob: -9.019983291625977
    10. 'dict' → logprob: -9.644983291625977

Token 83: '):' (ID: 3127)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0016955342143774033
    2. '):' → logprob: -7.37669563293457
    3. ')' → logprob: -7.87669563293457
    4. '<int' → logprob: -8.25169563293457
    5. ' of' → logprob: -8.37669563293457
    6. '[' → logprob: -8.75169563293457
    7. '[str' → logprob: -11.75169563293457
    8. '(int' → logprob: -11.75169563293457
    9. '):
' → logprob: -12.37669563293457
    10. ':' → logprob: -12.50169563293457

Token 84: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7532333731651306
    2. 'list' → logprob: -1.0032334327697754
    3. 'int' → logprob: -2.5032334327697754
    4. '[int' → logprob: -2.8782334327697754
    5. 'List' → logprob: -4.628233432769775
    6. ' int' → logprob: -5.128233432769775
    7. ' List' → logprob: -6.003233432769775
    8. '[list' → logprob: -6.253233432769775
    9. 'bool' → logprob: -7.128233432769775
    10. '   ' → logprob: -7.253233432769775

Token 85: ' composée' (ID: 146865)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18986882269382477
    2. '[int' → logprob: -1.9398688077926636
    3. '<|end|>' → logprob: -4.689868927001953
    4. ' of' → logprob: -4.814868927001953
    5. ' de' → logprob: -5.314868927001953
    6. 'des' → logprob: -5.939868927001953
    7. '[str' → logprob: -6.689868927001953
    8. '[' → logprob: -6.689868927001953
    9. '<int' → logprob: -7.314868927001953
    10. ' d' → logprob: -8.439868927001953

Token 86: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27062907814979553
    2. ' des' → logprob: -1.6456290483474731
    3. '[' → logprob: -3.8956291675567627
    4. ' d' → logprob: -4.270628929138184
    5. ' of' → logprob: -5.270628929138184
    6. 'd' → logprob: -6.895628929138184
    7. 'de' → logprob: -7.270628929138184
    8. '   ' → logprob: -7.645628929138184
    9. 'des' → logprob: -7.645628929138184
    10. '['' → logprob: -7.770628929138184

Token 87: ' deux' (ID: 10301)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2539833188056946
    2. 'int' → logprob: -2.37898325920105
    3. '[' → logprob: -3.00398325920105
    4. '[int' → logprob: -3.50398325920105
    5. 'bool' → logprob: -4.753983497619629
    6. '2' → logprob: -4.753983497619629
    7. 'n' → logprob: -5.128983497619629
    8. 'str' → logprob: -5.253983497619629
    9. ' ' → logprob: -5.628983497619629
    10. '1' → logprob: -5.878983497619629

Token 88: ' sous' (ID: 14487)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.3488439917564392
    2. ' strings' → logprob: -3.098844051361084
    3. 'lists' → logprob: -3.223844051361084
    4. ' elements' → logprob: -3.223844051361084
    5. ' éléments' → logprob: -3.223844051361084
    6. 'élé' → logprob: -4.098844051361084
    7. ' listes' → logprob: -4.223844051361084
    8. 'list' → logprob: -4.348844051361084
    9. 'strings' → logprob: -4.473844051361084
    10. '   ' → logprob: -4.723844051361084

Token 89: '-list' (ID: 18463)
  Prédit: '-list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-list' → logprob: -0.4554849863052368
    2. 'list' → logprob: -1.0804849863052368
    3. '-' → logprob: -4.330484867095947
    4. '-l' → logprob: -5.205484867095947
    5. 'lists' → logprob: -5.455484867095947
    6. '_list' → logprob: -6.455484867095947
    7. 'listas' → logprob: -7.205484867095947
    8. '```' → logprob: -8.455485343933105
    9. '_lists' → logprob: -8.580485343933105
    10. ' listes' → logprob: -8.705485343933105

Token 90: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.01770874671638012
    2. 'istes' → logprob: -4.267708778381348
    3. 'tes' → logprob: -6.142708778381348
    4. 's' → logprob: -6.767708778381348
    5. 'stes' → logprob: -9.517708778381348
    6. 'ist' → logprob: -10.767708778381348
    7. 'etes' → logprob: -11.017708778381348
    8. 'êtes' → logprob: -11.142708778381348
    9. 'iques' → logprob: -11.517708778381348
    10. 'ques' → logprob: -11.517708778381348

Token 91: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6176087260246277
    2. '<|end|>' → logprob: -1.6176087856292725
    3. '[' → logprob: -1.9926087856292725
    4. '[]' → logprob: -3.7426087856292725
    5. '[
' → logprob: -3.7426087856292725
    6. ' de' → logprob: -3.9926087856292725
    7. ' ,' → logprob: -4.992608547210693
    8. ' [' → logprob: -4.992608547210693
    9. ' contenant' → logprob: -4.992608547210693
    10. ' containing' → logprob: -5.117608547210693

Token 92: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5541015267372131
    2. '[
' → logprob: -0.9291015267372131
    3. '['' → logprob: -4.554101467132568
    4. ' [
' → logprob: -4.929101467132568
    5. ' [' → logprob: -5.679101467132568
    6. '[['' → logprob: -5.679101467132568
    7. '[n' → logprob: -6.304101467132568
    8. '   ' → logprob: -6.429101467132568
    9. ' ['' → logprob: -7.179101467132568
    10. '[[' → logprob: -7.929101467132568

Token 93: ' -' (ID: 533)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.605941891670227
    2. '[' → logprob: -0.855941891670227
    3. '[[' → logprob: -4.1059417724609375
    4. ' [
' → logprob: -5.2309417724609375
    5. ' [' → logprob: -6.1059417724609375
    6. '[int' → logprob: -6.7309417724609375
    7. '[n' → logprob: -6.9809417724609375
    8. '[list' → logprob: -6.9809417724609375
    9. '[['' → logprob: -7.4809417724609375
    10. '['' → logprob: -7.8559417724609375

Token 94: ' rev' (ID: 10808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8698540925979614
    2. '[
' → logprob: -1.2448540925979614
    3. 'rev' → logprob: -1.6198540925979614
    4. ' la' → logprob: -3.244853973388672
    5. '['' → logprob: -4.244853973388672
    6. ' [' → logprob: -4.369853973388672
    7. 'list' → logprob: -5.369853973388672
    8. '[n' → logprob: -5.494853973388672
    9. ' rev' → logprob: -5.744853973388672
    10. 'la' → logprob: -5.869853973388672

Token 95: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025554499588906765
    2. ' =' → logprob: -6.7525553703308105
    3. '_bl' → logprob: -8.502555847167969
    4. '_white' → logprob: -8.627555847167969
    5. '```' → logprob: -8.752555847167969
    6. '_b' → logprob: -8.877555847167969
    7. '[
' → logprob: -9.127555847167969
    8. 'bl' → logprob: -9.252555847167969
    9. ' blanc' → logprob: -9.877555847167969
    10. ' blancs' → logprob: -9.877555847167969

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025764419115148485
    2. '1' → logprob: -8.50025749206543
    3. ' ' → logprob: -10.37525749206543
    4. '[' → logprob: -11.87525749206543
    5. '][' → logprob: -12.25025749206543
    6. '   ' → logprob: -12.68775749206543
    7. '-' → logprob: -12.93775749206543
    8. '```' → logprob: -13.56275749206543
    9. ']' → logprob: -13.87525749206543
    10. '
' → logprob: -14.25025749206543

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4631516933441162
    2. ']:' → logprob: -1.0881516933441162
    3. '],' → logprob: -3.838151693344116
    4. ']):' → logprob: -4.838151931762695
    5. '][' → logprob: -5.838151931762695
    6. '])' → logprob: -6.713151931762695
    7. ']]' → logprob: -9.463151931762695
    8. ' ]' → logprob: -10.588151931762695
    9. '][:' → logprob: -10.713151931762695
    10. ']),' → logprob: -10.713151931762695

Token 98: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7673467397689819
    2. ',' → logprob: -1.642346739768982
    3. ']' → logprob: -1.892346739768982
    4. ']:' → logprob: -3.1423468589782715
    5. '[' → logprob: -3.3923468589782715
    6. '][' → logprob: -3.7673468589782715
    7. ' :' → logprob: -4.0173468589782715
    8. ' (' → logprob: -4.2673468589782715
    9. '):' → logprob: -4.3923468589782715
    10. '   ' → logprob: -4.5173468589782715

Token 99: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -1.4275286197662354
    2. ' la' → logprob: -1.5525286197662354
    3. ' list' → logprob: -1.5525286197662354
    4. 'list' → logprob: -2.5525286197662354
    5. 'positions' → logprob: -2.5525286197662354
    6. ' les' → logprob: -2.9275286197662354
    7. ' liste' → logprob: -3.3025286197662354
    8. ' indices' → logprob: -3.9275286197662354
    9. 'Positions' → logprob: -4.427528381347656
    10. '[' → logprob: -4.802528381347656

Token 100: ' actu' (ID: 34043)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.04861609265208244
    2. 'des' → logprob: -3.7986161708831787
    3. '[' → logprob: -4.6736159324646
    4. ')' → logprob: -5.1736159324646
    5. ']' → logprob: -6.4236159324646
    6. ' de' → logprob: -6.6736159324646
    7. '_des' → logprob: -7.0486159324646
    8. ' )' → logprob: -7.2986159324646
    9. ' (' → logprob: -7.5486159324646
    10. 'de' → logprob: -7.5486159324646

Token 101: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0021904718596488237
    2. 'nelles' → logprob: -6.877190589904785
    3. 'uelles' → logprob: -7.252190589904785
    4. 'lles' → logprob: -8.377190589904785
    5. 'ell' → logprob: -9.627190589904785
    6. ']' → logprob: -10.002190589904785
    7. 'el' → logprob: -10.002190589904785
    8. 'ées' → logprob: -10.502190589904785
    9. 'ves' → logprob: -11.377190589904785
    10. 'nées' → logprob: -11.752190589904785

Token 102: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03451327607035637
    2. 'des' → logprob: -3.659513235092163
    3. '[' → logprob: -5.534513473510742
    4. '<|end|>' → logprob: -6.284513473510742
    5. ')' → logprob: -7.784513473510742
    6. ']' → logprob: -8.159513473510742
    7. ',' → logprob: -8.284513473510742
    8. '   ' → logprob: -8.784513473510742
    9. ' de' → logprob: -8.784513473510742
    10. 'de' → logprob: -9.034513473510742

Token 103: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -0.5513956546783447
    2. ' white' → logprob: -1.4263956546783447
    3. ' blancs' → logprob: -2.5513956546783447
    4. 'bill' → logprob: -3.4263956546783447
    5. 'bl' → logprob: -4.176395416259766
    6. ' blanc' → logprob: -4.426395416259766
    7. 'white' → logprob: -4.551395416259766
    8. ']' → logprob: -4.926395416259766
    9. 'b' → logprob: -5.051395416259766
    10. ')' → logprob: -5.801395416259766

Token 104: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0010104191023856401
    2. 'les' → logprob: -7.751010417938232
    3. '[' → logprob: -8.25101089477539
    4. 'anches' → logprob: -8.87601089477539
    5. '#' → logprob: -10.00101089477539
    6. 'anes' → logprob: -10.37601089477539
    7. '```' → logprob: -10.62601089477539
    8. 'e' → logprob: -11.75101089477539
    9. ']' → logprob: -12.00101089477539
    10. 'lles' → logprob: -12.37601089477539

Token 105: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.4002836346626282
    2. ' bl' → logprob: -1.4002835750579834
    3. ' no' → logprob: -3.2752835750579834
    4. '[' → logprob: -3.7752835750579834
    5. ' blancs' → logprob: -5.0252838134765625
    6. 'no' → logprob: -5.4002838134765625
    7. '_bl' → logprob: -5.5252838134765625
    8. ' blanche' → logprob: -6.1502838134765625
    9. ' blanc' → logprob: -6.7752838134765625
    10. '_' → logprob: -7.1502838134765625

Token 106: 'anches' (ID: 64769)
  Prédit: 'anches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anches' → logprob: -0.0001114106344175525
    2. 'aches' → logprob: -9.75011157989502
    3. 'an' → logprob: -10.62511157989502
    4. 'anche' → logprob: -11.75011157989502
    5. '```' → logprob: -11.75011157989502
    6. 'anc' → logprob: -12.62511157989502
    7. '</' → logprob: -13.62511157989502
    8. 'n' → logprob: -13.75011157989502
    9. '[' → logprob: -14.00011157989502
    10. 'ances' → logprob: -14.25011157989502

Token 107: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4450523555278778
    2. ',' → logprob: -1.3200523853302002
    3. '),' → logprob: -3.5700523853302
    4. '   ' → logprob: -3.6950523853302
    5. '[' → logprob: -4.320052146911621
    6. ']' → logprob: -4.570052146911621
    7. '<|end|>' → logprob: -5.070052146911621
    8. '],' → logprob: -5.695052146911621
    9. '])' → logprob: -6.320052146911621
    10. ',
' → logprob: -7.195052146911621

Token 108: ' la' (ID: 557)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.0231382846832275
    2. 'l' → logprob: -1.5231382846832275
    3. ' la' → logprob: -1.7731382846832275
    4. ' l' → logprob: -1.8981382846832275
    5. 'la' → logprob: -2.7731382846832275
    6. '[' → logprob: -4.773138046264648
    7. ' rev' → logprob: -5.273138046264648
    8. 'range' → logprob: -5.273138046264648
    9. 'leur' → logprob: -5.898138046264648
    10. ' range' → logprob: -6.148138046264648

Token 109: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.06960269063711166
    2. ' ligne' → logprob: -3.3196027278900146
    3. 'range' → logprob: -4.0696024894714355
    4. 'liste' → logprob: -4.9446024894714355
    5. 'rev' → logprob: -6.6946024894714355
    6. 'line' → logprob: -6.8196024894714355
    7. ' liste' → logprob: -6.9446024894714355
    8. ' range' → logprob: -6.9446024894714355
    9. 'rang' → logprob: -7.4446024894714355
    10. '[' → logprob: -7.4446024894714355

Token 110: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33066463470458984
    2. ')' → logprob: -2.08066463470459
    3. ',' → logprob: -2.20566463470459
    4. '[' → logprob: -3.83066463470459
    5. ',
' → logprob: -4.45566463470459
    6. ')
' → logprob: -5.08066463470459
    7. ']' → logprob: -6.70566463470459
    8. '
' → logprob: -6.95566463470459
    9. '),' → logprob: -7.33066463470459
    10. '```' → logprob: -7.33066463470459

Token 111: 'ordre' (ID: 59831)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2331007868051529
    2. '[' → logprob: -2.4831008911132812
    3. '0' → logprob: -4.108100891113281
    4. ']' → logprob: -4.108100891113281
    5. 'list' → logprob: -4.233100891113281
    6. 'indices' → logprob: -4.983100891113281
    7. ')]' → logprob: -5.358100891113281
    8. '])' → logprob: -5.358100891113281
    9. ' [' → logprob: -5.483100891113281
    10. 'int' → logprob: -5.733100891113281

Token 112: ' donné' (ID: 52079)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5081087946891785
    2. ' initial' → logprob: -1.5081088542938232
    3. ' inverse' → logprob: -2.6331088542938232
    4. 'initial' → logprob: -4.008108615875244
    5. ' actuel' → logprob: -4.008108615875244
    6. ' naturel' → logprob: -4.883108615875244
    7. ' invers' → logprob: -4.883108615875244
    8. '   ' → logprob: -4.883108615875244
    9. '=' → logprob: -5.258108615875244
    10. 'def' → logprob: -5.258108615875244

Token 113: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6856197118759155
    2. ',' → logprob: -1.5606197118759155
    3. '),' → logprob: -1.9356197118759155
    4. '   ' → logprob: -2.685619831085205
    5. 'def' → logprob: -3.560619831085205
    6. ' des' → logprob: -4.560619831085205
    7. ' )' → logprob: -4.810619831085205
    8. ' ,' → logprob: -4.935619831085205
    9. ' ),' → logprob: -5.060619831085205
    10. ' par' → logprob: -5.560619831085205

Token 114: ' les' (ID: 1341)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.8862984776496887
    2. 'l' → logprob: -1.636298418045044
    3. 'leur' → logprob: -1.636298418045044
    4. 'le' → logprob: -2.636298418045044
    5. 'la' → logprob: -3.011298418045044
    6. ' l' → logprob: -4.386298656463623
    7. 'leurs' → logprob: -4.386298656463623
    8. ' la' → logprob: -4.636298656463623
    9. ' leur' → logprob: -4.636298656463623
    10. ' le' → logprob: -5.261298656463623

Token 115: ' indices' (ID: 30378)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.189170002937317
    2. 'indices' → logprob: -1.314170002937317
    3. ' indices' → logprob: -1.564170002937317
    4. 'positions' → logprob: -2.4391698837280273
    5. 'bl' → logprob: -3.1891698837280273
    6. ' positions' → logprob: -4.189169883728027
    7. ' rev' → logprob: -4.689169883728027
    8. 'input' → logprob: -4.939169883728027
    9. ' input' → logprob: -5.314169883728027
    10. ' blancs' → logprob: -5.814169883728027

Token 116: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25584331154823303
    2. ' des' → logprob: -2.2558434009552
    3. ' )' → logprob: -3.1308434009552
    4. 'des' → logprob: -3.7558434009552
    5. ' de' → logprob: -4.130843162536621
    6. ',' → logprob: -4.255843162536621
    7. 'de' → logprob: -4.880843162536621
    8. 'def' → logprob: -5.380843162536621
    9. '   ' → logprob: -6.380843162536621
    10. '),' → logprob: -6.755843162536621

Token 117: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2665290832519531
    2. ')' → logprob: -1.5165290832519531
    3. '```' → logprob: -5.016529083251953
    4. '[' → logprob: -5.766529083251953
    5. '       ' → logprob: -6.266529083251953
    6. ',' → logprob: -7.016529083251953
    7. '    ' → logprob: -7.891529083251953
    8. ')
' → logprob: -8.766529083251953
    9. '):
' → logprob: -9.141529083251953
    10. '           ' → logprob: -9.141529083251953

Token 118: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0731625184416771
    2. ')' → logprob: -3.57316255569458
    3. '           ' → logprob: -4.19816255569458
    4. ')
' → logprob: -5.07316255569458
    5. '```' → logprob: -5.44816255569458
    6. '[' → logprob: -5.69816255569458
    7. 'rev' → logprob: -6.07316255569458
    8. ''' → logprob: -6.32316255569458
    9. '\n' → logprob: -6.82316255569458
    10. ' ' → logprob: -6.82316255569458

Token 119: ' rev' (ID: 10808)
  Prédit: ' rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.5760107040405273
    2. 'rev' → logprob: -0.8260107040405273
    3. '   ' → logprob: -9.826010704040527
    4. '       ' → logprob: -11.826010704040527
    5. '           ' → logprob: -13.076010704040527
    6. '    ' → logprob: -13.326010704040527
    7. ' ' → logprob: -13.451010704040527
    8. 'rep' → logprob: -14.076010704040527
    9. '_rev' → logprob: -14.201010704040527
    10. '.rev' → logprob: -14.201010704040527

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0087516784551553e-05
    2. '1' → logprob: -11.62501049041748
    3. '[
' → logprob: -14.62501049041748
    4. '0' → logprob: -15.00001049041748
    5. ' [' → logprob: -15.50001049041748
    6. 'def' → logprob: -16.125009536743164
    7. '```' → logprob: -16.500009536743164
    8. ' ' → logprob: -18.250009536743164
    9. '   ' → logprob: -18.875009536743164
    10. '(' → logprob: -19.000009536743164

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.507972572464496e-05
    2. '0' → logprob: -9.50009536743164
    3. ' ' → logprob: -11.87509536743164
    4. '-' → logprob: -12.12509536743164
    5. ']' → logprob: -13.12509536743164
    6. '```' → logprob: -13.12509536743164
    7. '[' → logprob: -14.25009536743164
    8. ')' → logprob: -14.62509536743164
    9. '   ' → logprob: -14.81259536743164
    10. '
' → logprob: -15.06259536743164

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00536905275657773
    2. ']:' → logprob: -5.255369186401367
    3. ')' → logprob: -10.130369186401367
    4. ']):' → logprob: -10.130369186401367
    5. '])' → logprob: -10.630369186401367
    6. '][' → logprob: -11.255369186401367
    7. '):' → logprob: -12.005369186401367
    8. '[' → logprob: -12.380369186401367
    9. ' ]' → logprob: -13.380369186401367
    10. ']=' → logprob: -13.880369186401367

Token 123: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.3487031161785126
    2. ':' → logprob: -1.223703145980835
    3. ':list' → logprob: -9.473703384399414
    4. '):' → logprob: -9.598703384399414
    5. ')' → logprob: -10.098703384399414
    6. ',' → logprob: -10.473703384399414
    7. '<|end|>' → logprob: -11.598703384399414
    8. ' =' → logprob: -11.598703384399414
    9. ' (' → logprob: -11.848703384399414
    10. '[' → logprob: -12.473703384399414

Token 124: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.31581050157546997
    2. 'positions' → logprob: -1.3158104419708252
    3. ' les' → logprob: -6.815810680389404
    4. ' list' → logprob: -7.815810680389404
    5. ' listes' → logprob: -8.065810203552246
    6. 'les' → logprob: -9.065810203552246
    7. 'list' → logprob: -9.065810203552246
    8. 'pos' → logprob: -9.565810203552246
    9. ' la' → logprob: -9.815810203552246
    10. ' ' → logprob: -10.065810203552246

Token 125: ' actu' (ID: 34043)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5834598541259766
    2. 'des' → logprob: -1.7084598541259766
    3. 'act' → logprob: -2.7084598541259766
    4. ' actuelle' → logprob: -2.9584598541259766
    5. ' actu' → logprob: -2.9584598541259766
    6. '_act' → logprob: -3.8334598541259766
    7. '_current' → logprob: -4.333459854125977
    8. 'current' → logprob: -4.458459854125977
    9. ' current' → logprob: -4.958459854125977
    10. '<|end|>' → logprob: -4.958459854125977

Token 126: 'elles' (ID: 8500)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.5082138776779175
    2. '[' → logprob: -1.8832138776779175
    3. 'uelles' → logprob: -2.758213996887207
    4. 'elles' → logprob: -3.133213996887207
    5. 'v' → logprob: -3.383213996887207
    6. ']' → logprob: -3.633213996887207
    7. 'nées' → logprob: -3.758213996887207
    8. 'é' → logprob: -4.508213996887207
    9. 'd' → logprob: -4.883213996887207
    10. 't' → logprob: -5.383213996887207

Token 127: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06026071310043335
    2. 'des' → logprob: -2.935260772705078
    3. '   ' → logprob: -5.935260772705078
    4. '<|end|>' → logprob: -7.560260772705078
    5. '[' → logprob: -7.685260772705078
    6. ']' → logprob: -8.185260772705078
    7. '```' → logprob: -8.310260772705078
    8. '_des' → logprob: -8.560260772705078
    9. ' ' → logprob: -8.560260772705078
    10. ')' → logprob: -8.685260772705078

Token 128: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -0.8562555909156799
    2. 'bill' → logprob: -0.8562555909156799
    3. 'b' → logprob: -1.9812555313110352
    4. 'bl' → logprob: -4.856255531311035
    5. 'black' → logprob: -7.356255531311035
    6. ' black' → logprob: -7.481255531311035
    7. ']' → logprob: -7.481255531311035
    8. ')' → logprob: -7.731255531311035
    9. 'ball' → logprob: -7.981255531311035
    10. ' ' → logprob: -7.981255531311035

Token 129: 'es' (ID: 268)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22255221009254456
    2. 'anches' → logprob: -1.7225521802902222
    3. ']' → logprob: -5.472552299499512
    4. 'es' → logprob: -5.847552299499512
    5. '```' → logprob: -6.222552299499512
    6. 'aches' → logprob: -6.347552299499512
    7. 'anc' → logprob: -6.597552299499512
    8. 'aires' → logprob: -6.847552299499512
    9. 'no' → logprob: -7.222552299499512
    10. 'ues' → logprob: -7.347552299499512

Token 130: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5640020966529846
    2. 'no' → logprob: -1.3140020370483398
    3. 'bl' → logprob: -2.43900203704834
    4. '[' → logprob: -3.06400203704834
    5. '_no' → logprob: -4.68900203704834
    6. ' bl' → logprob: -5.06400203704834
    7. '_bl' → logprob: -5.68900203704834
    8. '_' → logprob: -5.93900203704834
    9. ' blancs' → logprob: -6.68900203704834
    10. ' noirs' → logprob: -7.06400203704834

Token 131: 'ires' (ID: 5255)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007599769625812769
    2. 'bl' → logprob: -5.632599830627441
    3. 'no' → logprob: -7.257599830627441
    4. '_bl' → logprob: -7.382599830627441
    5. ']' → logprob: -7.632599830627441
    6. '_' → logprob: -7.882599830627441
    7. '_[' → logprob: -8.007599830627441
    8. '_no' → logprob: -8.132599830627441
    9. '```' → logprob: -8.507599830627441
    10. 'ues' → logprob: -8.632599830627441

Token 132: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15820543467998505
    2. '])' → logprob: -2.658205509185791
    3. '[' → logprob: -3.408205509185791
    4. ']' → logprob: -4.158205509185791
    5. '   ' → logprob: -5.033205509185791
    6. ')])' → logprob: -5.283205509185791
    7. 'def' → logprob: -5.408205509185791
    8. ')]' → logprob: -5.533205509185791
    9. ' )' → logprob: -6.658205509185791
    10. ',' → logprob: -6.908205509185791

Token 133: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16420972347259521
    2. 'la' → logprob: -1.9142097234725952
    3. 'rev' → logprob: -5.664209842681885
    4. ' rev' → logprob: -8.539209365844727
    5. 'l' → logprob: -9.164209365844727
    6. ' ' → logprob: -10.164209365844727
    7. 'the' → logprob: -10.289209365844727
    8. ')' → logprob: -10.914209365844727
    9. '[' → logprob: -11.164209365844727
    10. '   ' → logprob: -11.289209365844727

Token 134: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.026716718450188637
    2. ' ligne' → logprob: -3.651716709136963
    3. 'line' → logprob: -8.026717185974121
    4. 'liste' → logprob: -10.401717185974121
    5. 'l' → logprob: -10.526717185974121
    6. ')' → logprob: -11.776717185974121
    7. ']' → logprob: -12.151717185974121
    8. ' line' → logprob: -12.276717185974121
    9. '[' → logprob: -12.526717185974121
    10. ' ' → logprob: -12.651717185974121

Token 135: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13507327437400818
    2. '):' → logprob: -3.010073184967041
    3. '   ' → logprob: -3.135073184967041
    4. ').' → logprob: -3.635073184967041
    5. '])' → logprob: -6.135073184967041
    6. ']' → logprob: -6.510073184967041
    7. ' )' → logprob: -6.885073184967041
    8. '):
' → logprob: -7.135073184967041
    9. 'def' → logprob: -7.635073184967041
    10. ')]' → logprob: -8.6350736618042

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09674495458602905
    2. ')' → logprob: -2.471745014190674
    3. '"""' → logprob: -5.096745014190674
    4. ' """' → logprob: -7.846745014190674
    5. '```' → logprob: -8.096744537353516
    6. ')
' → logprob: -8.221744537353516
    7. ' )' → logprob: -8.721744537353516
    8. 'def' → logprob: -8.971744537353516
    9. '"""
' → logprob: -9.471744537353516
    10. ' """
' → logprob: -9.721744537353516

Token 137: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02313028834760189
    2. ')' → logprob: -4.023130416870117
    3. '
' → logprob: -6.773130416870117
    4. ')
' → logprob: -7.148130416870117
    5. '    
' → logprob: -7.773130416870117
    6. '"""' → logprob: -7.773130416870117
    7. '"""
' → logprob: -7.898130416870117
    8. '```' → logprob: -7.898130416870117
    9. 'def' → logprob: -8.148130416870117
    10. 'n' → logprob: -8.273130416870117

Token 138: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2176257073879242
    2. ':' → logprob: -1.7176257371902466
    3. ' ' → logprob: -5.092625617980957
    4. '   ' → logprob: -5.092625617980957
    5. '  ' → logprob: -6.842625617980957
    6. '[' → logprob: -7.467625617980957
    7. '0' → logprob: -7.842625617980957
    8. ' None' → logprob: -7.967625617980957
    9. '    ' → logprob: -8.092625617980957
    10. ' ```' → logprob: -8.717625617980957

Token 139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7123955488204956
    2. ' int' → logprob: -0.8373955488204956
    3. ' None' → logprob: -3.712395668029785
    4. 'int' → logprob: -3.962395668029785
    5. ' n' → logprob: -4.212395668029785
    6. '    ' → logprob: -4.962395668029785
    7. '0' → logprob: -5.462395668029785
    8. ' min' → logprob: -6.212395668029785
    9. ' float' → logprob: -6.587395668029785
    10. '       ' → logprob: -6.962395668029785

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.08952243626117706
    2. ' int' → logprob: -2.464522361755371
    3. '   ' → logprob: -8.339522361755371
    4. ' list' → logprob: -8.839522361755371
    5. 'list' → logprob: -9.714522361755371
    6. ' tuple' → logprob: -9.964522361755371
    7. 'float' → logprob: -10.214522361755371
    8. 'tuple' → logprob: -10.964522361755371
    9. '[int' → logprob: -11.464522361755371
    10. ' float' → logprob: -12.214522361755371

Token 141: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012076086364686489
    2. '<|end|>' → logprob: -5.262075901031494
    3. ' :' → logprob: -5.887075901031494
    4. '   ' → logprob: -6.762075901031494
    5. '
' → logprob: -6.887075901031494
    6. ':
' → logprob: -7.637075901031494
    7. '<|end|>' → logprob: -8.137076377868652
    8. ':return' → logprob: -8.387076377868652
    9. '```' → logprob: -8.762076377868652
    10. ' 
' → logprob: -9.262076377868652

Token 142: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.039258696138858795
    2. ' Co' → logprob: -3.5392587184906006
    3. 'Le' → logprob: -5.2892584800720215
    4. ' le' → logprob: -5.6642584800720215
    5. '   ' → logprob: -7.9142584800720215
    6. 'Co' → logprob: -8.66425895690918
    7. ' La' → logprob: -8.66425895690918
    8. ' coût' → logprob: -9.66425895690918
    9. ' co' → logprob: -10.16425895690918
    10. 'co' → logprob: -10.28925895690918

Token 143: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -0.0055044605396687984
    2. ' cout' → logprob: -5.880504608154297
    3. 'co' → logprob: -7.005504608154297
    4. ' minimum' → logprob: -7.505504608154297
    5. ' co' → logprob: -7.505504608154297
    6. ' nombre' → logprob: -7.880504608154297
    7. ' cost' → logprob: -9.880504608154297
    8. ' minimal' → logprob: -10.255504608154297
    9. 'cout' → logprob: -10.630504608154297
    10. ' prix' → logprob: -10.630504608154297

Token 144: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.05306994915008545
    2. 'minimum' → logprob: -3.553070068359375
    3. ' minimal' → logprob: -3.803070068359375
    4. ' min' → logprob: -8.428070068359375
    5. 'minimal' → logprob: -8.803070068359375
    6. ' total' → logprob: -8.928070068359375
    7. 'min' → logprob: -9.303070068359375
    8. '_min' → logprob: -10.303070068359375
    9. '   ' → logprob: -10.428070068359375
    10. ' maximum' → logprob: -10.553070068359375

Token 145: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23286552727222443
    2. ' pour' → logprob: -1.982865571975708
    3. ')' → logprob: -4.107865333557129
    4. ' à' → logprob: -4.732865333557129
    5. '    
' → logprob: -4.982865333557129
    6. ' des' → logprob: -5.232865333557129
    7. ' nécessaire' → logprob: -5.357865333557129
    8. ',' → logprob: -5.482865333557129
    9. '```' → logprob: -5.607865333557129
    10. '    ' → logprob: -6.107865333557129

Token 146: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.008646713569760323
    2. 'la' → logprob: -5.633646488189697
    3. ' le' → logprob: -5.883646488189697
    4. ' l' → logprob: -6.883646488189697
    5. ' les' → logprob: -7.508646488189697
    6. ' une' → logprob: -8.258646965026855
    7. 'le' → logprob: -9.133646965026855
    8. ' len' → logprob: -9.758646965026855
    9. ' lambda' → logprob: -9.883646965026855
    10. 'l' → logprob: -10.133646965026855

Token 147: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1022094190120697
    2. ''' → logprob: -2.7272093296051025
    3. 'e' → logprob: -4.102209568023682
    4. ''ordre' → logprob: -5.352209568023682
    5. ''objectif' → logprob: -5.727209568023682
    6. ''ensemble' → logprob: -6.227209568023682
    7. 'es' → logprob: -6.602209568023682
    8. ''état' → logprob: -6.977209568023682
    9. ''application' → logprob: -7.477209568023682
    10. ''ex' → logprob: -7.477209568023682

Token 148: 'alg' (ID: 15258)
  Prédit: 'én'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.2759302854537964
    2. ''' → logprob: -1.7759302854537964
    3. 'alg' → logprob: -3.025930404663086
    4. 'en' → logprob: -4.650930404663086
    5. 'ordre' → logprob: -5.400930404663086
    6. 'é' → logprob: -6.150930404663086
    7. 'objectif' → logprob: -6.900930404663086
    8. ' é' → logprob: -6.900930404663086
    9. '
' → logprob: -7.775930404663086
    10. ''ordre' → logprob: -7.900930404663086

Token 149: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.009213373064994812
    2. 'orithm' → logprob: -5.509213447570801
    3. 'o' → logprob: -5.634213447570801
    4. 'or' → logprob: -7.509213447570801
    5. 'orit' → logprob: -8.5092134475708
    6. '```' → logprob: -8.6342134475708
    7. 'ori' → logprob: -8.8842134475708
    8. ')' → logprob: -9.3842134475708
    9. '`' → logprob: -9.6342134475708
    10. ''''' → logprob: -10.2592134475708

Token 150: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0023476961068809032
    2. 'm' → logprob: -6.127347469329834
    3. '```' → logprob: -9.502347946166992
    4. 'e' → logprob: -10.127347946166992
    5. 'mes' → logprob: -11.127347946166992
    6. '   ' → logprob: -11.752347946166992
    7. '``' → logprob: -12.377347946166992
    8. 'mie' → logprob: -12.377347946166992
    9. 'mme' → logprob: -12.752347946166992
    10. '`' → logprob: -12.877347946166992

Token 151: ' employ' (ID: 4350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02424570731818676
    2. ')' → logprob: -4.524245738983154
    3. '
' → logprob: -5.399245738983154
    4. '```' → logprob: -6.024245738983154
    5. ':' → logprob: -6.274245738983154
    6. '):' → logprob: -7.274245738983154
    7. '.' → logprob: -7.274245738983154
    8. 'def' → logprob: -7.524245738983154
    9. '    ' → logprob: -7.649245738983154
    10. ' :' → logprob: -8.274245262145996

Token 152: 'é' (ID: 377)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6080418229103088
    2. 'é' → logprob: -0.8580418229103088
    3. 'e' → logprob: -3.483041763305664
    4. 'ée' → logprob: -8.733041763305664
    5. ']' → logprob: -8.983041763305664
    6. 'def' → logprob: -9.233041763305664
    7. '}' → logprob: -9.233041763305664
    8. ')
' → logprob: -9.733041763305664
    9. '>' → logprob: -10.233041763305664
    10. '=' → logprob: -10.358041763305664

Token 153: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2652970552444458
    2. '   ' → logprob: -1.7652970552444458
    3. '):' → logprob: -2.8902969360351562
    4. ')' → logprob: -5.640296936035156
    5. ':
' → logprob: -6.640296936035156
    6. ',' → logprob: -7.265296936035156
    7. ' :' → logprob: -8.515296936035156
    8. '):
' → logprob: -9.015296936035156
    9. '    
' → logprob: -9.265296936035156
    10. ']:' → logprob: -9.765296936035156

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041941456496715546
    2. ')' → logprob: -3.4169414043426514
    3. '"""' → logprob: -5.1669416427612305
    4. '
' → logprob: -7.2919416427612305
    5. '    
' → logprob: -7.5419416427612305
    6. '```' → logprob: -8.04194164276123
    7. ')
' → logprob: -8.91694164276123
    8. ' """' → logprob: -8.91694164276123
    9. '"""
' → logprob: -9.16694164276123
    10. '):' → logprob: -9.16694164276123

Token 155: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4388156533241272
    2. ')' → logprob: -1.0638155937194824
    3. '
' → logprob: -5.688815593719482
    4. ':' → logprob: -6.063815593719482
    5. '```' → logprob: -6.938815593719482
    6. '):' → logprob: -7.063815593719482
    7. '\n' → logprob: -7.063815593719482
    8. '"""' → logprob: -7.438815593719482
    9. ')
' → logprob: -8.31381607055664
    10. '    
' → logprob: -8.43881607055664

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004232139326632023
    2. 'dp' → logprob: -6.504231929779053
    3. '    
' → logprob: -6.629231929779053
    4. ' dp' → logprob: -7.379231929779053
    5. 'n' → logprob: -8.629232406616211
    6. 'import' → logprob: -9.254232406616211
    7. ' white' → logprob: -9.379232406616211
    8. ' n' → logprob: -9.879232406616211
    9. '```' → logprob: -9.879232406616211
    10. ' 
' → logprob: -10.004232406616211

Token 157: ' def' (ID: 1056)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.7136297225952148
    2. 'bl' → logprob: -1.3386297225952148
    3. 'dp' → logprob: -3.213629722595215
    4. 'wb' → logprob: -3.213629722595215
    5. 'pos' → logprob: -3.463629722595215
    6. '   ' → logprob: -3.588629722595215
    7. 'w' → logprob: -3.588629722595215
    8. 'wh' → logprob: -3.713629722595215
    9. ' blancs' → logprob: -4.588629722595215
    10. 'b' → logprob: -5.088629722595215

Token 158: ' existence' (ID: 24140)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.06494401395320892
    2. 'dp' → logprob: -3.06494402885437
    3. ' helper' → logprob: -5.314943790435791
    4. ' cost' → logprob: -5.814943790435791
    5. ' min' → logprob: -6.189943790435791
    6. ' dfs' → logprob: -6.564943790435791
    7. '_dp' → logprob: -7.064943790435791
    8. ' solve' → logprob: -7.814943790435791
    9. 'cost' → logprob: -7.939943790435791
    10. ' main' → logprob: -8.06494426727295

Token 159: '_right' (ID: 24402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8799257278442383
    2. '(' → logprob: -1.0049257278442383
    3. '(i' → logprob: -1.7549257278442383
    4. '(pos' → logprob: -4.129925727844238
    5. '(x' → logprob: -5.504925727844238
    6. '(s' → logprob: -5.754925727844238
    7. '_(' → logprob: -5.754925727844238
    8. ')' → logprob: -6.379925727844238
    9. '_b' → logprob: -6.504925727844238
    10. '_pos' → logprob: -6.629925727844238

Token 160: '(re' (ID: 8178)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.16735251247882843
    2. '(pos' → logprob: -2.2923524379730225
    3. '(idx' → logprob: -3.9173524379730225
    4. '(' → logprob: -4.292352676391602
    5. '(index' → logprob: -5.792352676391602
    6. '(x' → logprob: -5.792352676391602
    7. '(j' → logprob: -6.167352676391602
    8. '(s' → logprob: -6.167352676391602
    9. '():' → logprob: -6.167352676391602
    10. '(k' → logprob: -6.917352676391602

Token 161: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.994086627149954e-05
    2. 'verse' → logprob: -11.125080108642578
    3. 'vs' → logprob: -11.687580108642578
    4. 'q' → logprob: -11.937580108642578
    5. 's' → logprob: -12.125080108642578
    6. 'f' → logprob: -12.500080108642578
    7. 'w' → logprob: -12.875080108642578
    8. ')' → logprob: -13.250080108642578
    9. ' v' → logprob: -13.312580108642578
    10. 'c' → logprob: -13.375080108642578

Token 162: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22424808144569397
    2. '):' → logprob: -1.9742480516433716
    3. '[' → logprob: -3.474248170852661
    4. '):
' → logprob: -3.974248170852661
    5. ')' → logprob: -4.599247932434082
    6. '   ' → logprob: -7.474247932434082
    7. 's' → logprob: -8.099247932434082
    8. '_right' → logprob: -8.974247932434082
    9. '),' → logprob: -9.349247932434082
    10. ' ,' → logprob: -9.474247932434082

Token 163: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5787728428840637
    2. '):' → logprob: -1.828772783279419
    3. '):
' → logprob: -2.203772783279419
    4. ',' → logprob: -2.578772783279419
    5. 'h' → logprob: -3.078772783279419
    6. '0' → logprob: -5.203773021697998
    7. ']):' → logprob: -5.453773021697998
    8. ')' → logprob: -5.578773021697998
    9. '):

' → logprob: -5.953773021697998
    10. 'har' → logprob: -6.203773021697998

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4317527413368225
    2. ':' → logprob: -1.6817526817321777
    3. '   ' → logprob: -2.0567526817321777
    4. '[' → logprob: -3.9317526817321777
    5. '(' → logprob: -5.556752681732178
    6. '(n' → logprob: -6.181752681732178
    7. '):' → logprob: -6.431752681732178
    8. ')' → logprob: -6.431752681732178
    9. ' :' → logprob: -7.056752681732178
    10. '0' → logprob: -7.306752681732178

Token 165: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2770211696624756
    2. '   ' → logprob: -1.4020211696624756
    3. ' for' → logprob: -1.5270211696624756
    4. 'return' → logprob: -2.1520211696624756
    5. 'n' → logprob: -3.0270211696624756
    6. 'for' → logprob: -3.6520211696624756
    7. ' n' → logprob: -3.6520211696624756
    8. ' res' → logprob: -5.402021408081055
    9. '       ' → logprob: -5.527021408081055
    10. ' if' → logprob: -5.777021408081055

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2208981215953827
    2. '   ' → logprob: -2.095898151397705
    3. ' for' → logprob: -3.845898151397705
    4. '    ' → logprob: -4.595898151397705
    5. ' n' → logprob: -5.095898151397705
    6. ' return' → logprob: -5.220898151397705
    7. '           ' → logprob: -5.220898151397705
    8. '        ' → logprob: -5.470898151397705
    9. ' if' → logprob: -5.470898151397705
    10. ' None' → logprob: -5.970898151397705

Token 167: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2963455319404602
    2. '       ' → logprob: -2.4213454723358154
    3. 'for' → logprob: -2.6713454723358154
    4. ' for' → logprob: -2.7963454723358154
    5. 'return' → logprob: -3.7963454723358154
    6. ' return' → logprob: -5.4213457107543945
    7. '    ' → logprob: -6.4213457107543945
    8. 'n' → logprob: -6.7963457107543945
    9. '#' → logprob: -7.0463457107543945
    10. 'positions' → logprob: -7.1713457107543945

Token 168: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10579895973205566
    2. 'i' → logprob: -2.8557989597320557
    3. ' pos' → logprob: -4.480798721313477
    4. ' j' → logprob: -4.605798721313477
    5. ' rev' → logprob: -5.230798721313477
    6. 'pos' → logprob: -5.855798721313477
    7. ' idx' → logprob: -5.855798721313477
    8. ' b' → logprob: -5.980798721313477
    9. ' r' → logprob: -6.355798721313477
    10. 'rev' → logprob: -6.605798721313477

Token 169: ' bille' (ID: 97414)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8553416728973389
    2. ' i' → logprob: -1.6053416728973389
    3. 'pos' → logprob: -1.8553416728973389
    4. ' pos' → logprob: -2.855341672897339
    5. ' color' → logprob: -3.980341672897339
    6. ' couleur' → logprob: -3.980341672897339
    7. ' j' → logprob: -4.105341911315918
    8. ' idx' → logprob: -4.230341911315918
    9. 'color' → logprob: -4.480341911315918
    10. 'idx' → logprob: -4.730341911315918

Token 170: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6021928191184998
    2. ' blanche' → logprob: -1.8521928787231445
    3. ' de' → logprob: -2.2271928787231445
    4. '_c' → logprob: -3.6021928787231445
    5. 'bl' → logprob: -3.6021928787231445
    6. ' ,' → logprob: -3.7271928787231445
    7. '   ' → logprob: -3.9771928787231445
    8. ' in' → logprob: -4.7271928787231445
    9. ' blanc' → logprob: -4.7271928787231445
    10. '_white' → logprob: -4.8521928787231445

Token 171: ' la' (ID: 557)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.008909759111702442
    2. ' rev' → logprob: -5.258909702301025
    3. 'la' → logprob: -7.133909702301025
    4. 'range' → logprob: -7.383909702301025
    5. ' la' → logprob: -7.508909702301025
    6. 're' → logprob: -8.008910179138184
    7. 'bl' → logprob: -8.508910179138184
    8. 'type' → logprob: -8.633910179138184
    9. 'n' → logprob: -9.383910179138184
    10. 'l' → logprob: -9.571410179138184

Token 172: ' couleur' (ID: 48005)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.13095378875732422
    2. 'range' → logprob: -2.255953788757324
    3. ' range' → logprob: -5.505953788757324
    4. 're' → logprob: -5.630953788757324
    5. ' rev' → logprob: -6.505953788757324
    6. 'ligne' → logprob: -6.880953788757324
    7. 'color' → logprob: -7.130953788757324
    8. 'liste' → logprob: -7.255953788757324
    9. 'c' → logprob: -7.380953788757324
    10. 'cou' → logprob: -7.380953788757324

Token 173: ' concern' (ID: 7372)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49513381719589233
    2. ' donnée' → logprob: -2.370133876800537
    3. ' ,' → logprob: -2.495133876800537
    4. ' blanche' → logprob: -3.370133876800537
    5. ' in' → logprob: -3.495133876800537
    6. ' given' → logprob: -3.745133876800537
    7. ' donné' → logprob: -3.870133876800537
    8. '   ' → logprob: -3.995133876800537
    9. ' rev' → logprob: -4.495133876800537
    10. 'rev' → logprob: -4.745133876800537

Token 174: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3518514633178711
    2. ',' → logprob: -1.726851463317871
    3. 'e' → logprob: -2.476851463317871
    4. 'é' → logprob: -4.351851463317871
    5. '   ' → logprob: -4.851851463317871
    6. 'ee' → logprob: -5.851851463317871
    7. '):
' → logprob: -6.101851463317871
    8. 'rée' → logprob: -6.351851463317871
    9. 'ante' → logprob: -6.726851463317871
    10. ',
' → logprob: -6.976851463317871

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011195420287549496
    2. '   ' → logprob: -5.386195182800293
    3. ' ,' → logprob: -5.386195182800293
    4. '       ' → logprob: -6.511195182800293
    5. ',
' → logprob: -9.136195182800293
    6. ' (' → logprob: -9.761195182800293
    7. '),' → logprob: -10.386195182800293
    8. '[' → logprob: -10.386195182800293
    9. ' et' → logprob: -10.386195182800293
    10. 'def' → logprob: -10.511195182800293

Token 176: ' construit' (ID: 119882)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4417720437049866
    2. '       ' → logprob: -2.191771984100342
    3. ' for' → logprob: -2.566771984100342
    4. 'n' → logprob: -2.941771984100342
    5. '   ' → logprob: -3.191771984100342
    6. ' res' → logprob: -4.066771984100342
    7. ' return' → logprob: -5.066771984100342
    8. ' positions' → logprob: -5.066771984100342
    9. ' right' → logprob: -5.316771984100342
    10. ' count' → logprob: -5.316771984100342

Token 177: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.49086934328079224
    2. ' une' → logprob: -1.4908692836761475
    3. '   ' → logprob: -2.4908692836761475
    4. 'une' → logprob: -3.2408692836761475
    5. '[' → logprob: -4.115869522094727
    6. 'un' → logprob: -4.615869522094727
    7. ' ' → logprob: -5.490869522094727
    8. '[]' → logprob: -5.490869522094727
    9. ' la' → logprob: -6.365869522094727
    10. '    ' → logprob: -6.740869522094727

Token 178: ' table' (ID: 3293)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.2700134813785553
    2. ' liste' → logprob: -1.520013451576233
    3. 'list' → logprob: -5.270013332366943
    4. 'table' → logprob: -5.895013332366943
    5. '   ' → logprob: -6.020013332366943
    6. ' ' → logprob: -6.645013332366943
    7. '[]' → logprob: -7.020013332366943
    8. ' table' → logprob: -7.270013332366943
    9. 's' → logprob: -7.270013332366943
    10. '[' → logprob: -7.520013332366943

Token 179: ' qui' (ID: 2780)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.797537624835968
    2. ' des' → logprob: -1.4225375652313232
    3. '   ' → logprob: -1.6725375652313232
    4. 'de' → logprob: -3.2975375652313232
    5. 'dp' → logprob: -4.047537803649902
    6. '[' → logprob: -4.172537803649902
    7. ' d' → logprob: -4.422537803649902
    8. 'd' → logprob: -4.672537803649902
    9. 'des' → logprob: -4.672537803649902
    10. '    ' → logprob: -5.922537803649902

Token 180: ' indique' (ID: 97324)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.5192955136299133
    2. ' indique' → logprob: -1.1442954540252686
    3. '   ' → logprob: -3.6442954540252686
    4. 'cont' → logprob: -4.144295692443848
    5. 'en' → logprob: -4.394295692443848
    6. 'don' → logprob: -4.644295692443848
    7. 'comp' → logprob: -5.644295692443848
    8. 'stock' → logprob: -6.019295692443848
    9. ' en' → logprob: -6.019295692443848
    10. '       ' → logprob: -6.269295692443848

Token 181: '
' (ID: 198)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.0301145315170288
    2. ' True' → logprob: -1.9051145315170288
    3. '   ' → logprob: -2.0301146507263184
    4. ' la' → logprob: -2.1551146507263184
    5. 'True' → logprob: -2.2801146507263184
    6. 'si' → logprob: -2.9051146507263184
    7. ',' → logprob: -4.030114650726318
    8. '(True' → logprob: -4.530114650726318
    9. ' pour' → logprob: -4.655114650726318
    10. ' if' → logprob: -4.780114650726318

Token 182: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35096168518066406
    2. ' if' → logprob: -1.600961685180664
    3. ' si' → logprob: -3.600961685180664
    4. '       ' → logprob: -3.975961685180664
    5. '    ' → logprob: -4.225961685180664
    6. ' True' → logprob: -4.600961685180664
    7. ' la' → logprob: -4.975961685180664
    8. ' s' → logprob: -5.600961685180664
    9. ' ' → logprob: -6.100961685180664
    10. 'if' → logprob: -6.100961685180664

Token 183: ' combien' (ID: 106648)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.1120235919952393
    2. ' if' → logprob: -1.3620235919952393
    3. ' la' → logprob: -1.3620235919952393
    4. '   ' → logprob: -2.7370235919952393
    5. ' True' → logprob: -3.4870235919952393
    6. 'si' → logprob: -4.11202335357666
    7. 'True' → logprob: -4.73702335357666
    8. ' s' → logprob: -4.86202335357666
    9. '       ' → logprob: -4.86202335357666
    10. 'if' → logprob: -5.48702335357666

Token 184: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4153014123439789
    2. '   ' → logprob: -1.6653014421463013
    3. 'de' → logprob: -2.1653013229370117
    4. '    ' → logprob: -3.7903013229370117
    5. '  ' → logprob: -6.165301322937012
    6. '<|end|>' → logprob: -6.415301322937012
    7. ' d' → logprob: -6.540301322937012
    8. 'd' → logprob: -6.790301322937012
    9. ' ' → logprob: -6.790301322937012
    10. ')' → logprob: -7.290301322937012

Token 185: ' bill' (ID: 6713)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2192528247833252
    2. 'rev' → logprob: -1.3442528247833252
    3. ' bill' → logprob: -2.094252824783325
    4. 'bill' → logprob: -2.844252824783325
    5. 'bl' → logprob: -3.344252824783325
    6. 'cases' → logprob: -3.469252824783325
    7. ' rev' → logprob: -3.469252824783325
    8. 'positions' → logprob: -3.469252824783325
    9. '```' → logprob: -3.969252824783325
    10. 're' → logprob: -4.219252586364746

Token 186: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.02727600559592247
    2. 'les' → logprob: -4.277276039123535
    3. '   ' → logprob: -5.402276039123535
    4. 'e' → logprob: -6.027276039123535
    5. 's' → logprob: -6.652276039123535
    6. 'def' → logprob: -7.152276039123535
    7. 'res' → logprob: -7.152276039123535
    8. 'ues' → logprob: -7.527276039123535
    9. '       ' → logprob: -7.777276039123535
    10. '#' → logprob: -7.777276039123535

Token 187: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6096900105476379
    2. ' bl' → logprob: -2.484689950942993
    3. ' no' → logprob: -2.609689950942993
    4. ' à' → logprob: -2.734689950942993
    5. 'de' → logprob: -2.984689950942993
    6. 'bl' → logprob: -3.359689950942993
    7. ' on' → logprob: -3.609689950942993
    8. ')' → logprob: -3.984689950942993
    9. ' blancs' → logprob: -4.359690189361572
    10. '   ' → logprob: -5.109690189361572

Token 188: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6505972146987915
    2. 'c' → logprob: -1.2755972146987915
    3. 'rev' → logprob: -2.150597095489502
    4. ' la' → logprob: -3.275597095489502
    5. 'l' → logprob: -4.775597095489502
    6. ' cette' → logprob: -5.150597095489502
    7. 'cha' → logprob: -5.525597095489502
    8. 'sa' → logprob: -5.775597095489502
    9. '```' → logprob: -5.900597095489502
    10. ' ' → logprob: -6.275597095489502

Token 189: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.29125767946243286
    2. 'cou' → logprob: -1.416257619857788
    3. 'c' → logprob: -5.666257858276367
    4. 'color' → logprob: -5.791257858276367
    5. ' même' → logprob: -7.041257858276367
    6. ' color' → logprob: -7.791257858276367
    7. '   ' → logprob: -8.041257858276367
    8. '#' → logprob: -8.291257858276367
    9. 'rev' → logprob: -8.291257858276367
    10. ' couleurs' → logprob: -8.416257858276367

Token 190: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.8932247161865234
    2. ' il' → logprob: -1.6432247161865234
    3. 'ont' → logprob: -2.1432247161865234
    4. ' sont' → logprob: -2.6432247161865234
    5. ' ont' → logprob: -3.0182247161865234
    6. ',' → logprob: -3.5182247161865234
    7. ' à' → logprob: -3.6432247161865234
    8. '       ' → logprob: -4.018224716186523
    9. '   ' → logprob: -4.018224716186523
    10. 's' → logprob: -4.268224716186523

Token 191: ' trouvent' (ID: 113172)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.5848822593688965
    2. 'ont' → logprob: -1.7098822593688965
    3. 's' → logprob: -2.3348822593688965
    4. ' trouvent' → logprob: -2.4598822593688965
    5. 'ront' → logprob: -3.5848822593688965
    6. 't' → logprob: -4.5848822593688965
    7. 'tro' → logprob: -4.8348822593688965
    8. 'retr' → logprob: -4.9598822593688965
    9. 'nt' → logprob: -5.0848822593688965
    10. 'r' → logprob: -5.8348822593688965

Token 192: ' plus' (ID: 2932)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3114388585090637
    2. 'à' → logprob: -2.061438798904419
    3. '   ' → logprob: -2.686438798904419
    4. ' après' → logprob: -3.936438798904419
    5. ' sur' → logprob: -4.061439037322998
    6. '       ' → logprob: -4.811439037322998
    7. ' plus' → logprob: -5.561439037322998
    8. 'sur' → logprob: -5.811439037322998
    9. '```' → logprob: -5.936439037322998
    10. 'ap' → logprob: -6.061439037322998

Token 193: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.5887079834938049
    2. ' à' → logprob: -1.4637079238891602
    3. '   ' → logprob: -1.9637079238891602
    4. 'loin' → logprob: -3.46370792388916
    5. ' ' → logprob: -4.46370792388916
    6. ' loin' → logprob: -4.96370792388916
    7. '_' → logprob: -5.33870792388916
    8. '```' → logprob: -5.58870792388916
    9. '  ' → logprob: -5.83870792388916
    10. '       ' → logprob: -6.21370792388916

Token 194: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.0521731823682785
    2. ' droite' → logprob: -3.302173137664795
    3. ' ' → logprob: -4.802173137664795
    4. 'd' → logprob: -6.302173137664795
    5. 'g' → logprob: -6.927173137664795
    6. 'l' → logprob: -7.052173137664795
    7. '   ' → logprob: -7.302173137664795
    8. '```' → logprob: -7.427173137664795
    9. 'la' → logprob: -8.427173614501953
    10. ' ' → logprob: -8.677173614501953

Token 195: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8770559430122375
    2. ' de' → logprob: -2.0020558834075928
    3. '       ' → logprob: -2.0020558834075928
    4. ' dans' → logprob: -2.3770558834075928
    5. ',' → logprob: -2.5020558834075928
    6. ' que' → logprob: -3.1270558834075928
    7. ' par' → logprob: -4.002056121826172
    8. ' (' → logprob: -4.127056121826172
    9. ' des' → logprob: -4.752056121826172
    10. '[' → logprob: -4.752056121826172

Token 196: ' chaque' (ID: 21194)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.3052701950073242
    2. ' la' → logprob: -1.4302701950073242
    3. 'la' → logprob: -2.305270195007324
    4. ' cette' → logprob: -2.305270195007324
    5. 'c' → logprob: -2.555270195007324
    6. 'celle' → logprob: -3.055270195007324
    7. 'l' → logprob: -3.555270195007324
    8. 'i' → logprob: -3.680270195007324
    9. ' chaque' → logprob: -4.180270195007324
    10. ' rev' → logprob: -4.305270195007324

Token 197: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.4844872057437897
    2. 'position' → logprob: -1.1094871759414673
    3. ' ' → logprob: -4.359487056732178
    4. ' case' → logprob: -4.734487056732178
    5. 'indice' → logprob: -5.359487056732178
    6. ' index' → logprob: -5.734487056732178
    7. '   ' → logprob: -5.734487056732178
    8. 'pos' → logprob: -5.984487056732178
    9. ' i' → logprob: -5.984487056732178
    10. '_' → logprob: -6.109487056732178

Token 198: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24803653359413147
    2. ' de' → logprob: -3.1230366230010986
    3. ',' → logprob: -3.3730366230010986
    4. '       ' → logprob: -3.6230366230010986
    5. '    ' → logprob: -3.8730366230010986
    6. 's' → logprob: -3.9980366230010986
    7. ' du' → logprob: -4.1230363845825195
    8. '.' → logprob: -4.3730363845825195
    9. '"' → logprob: -5.6230363845825195
    10. ' ' → logprob: -5.6230363845825195

Token 199: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7697759866714478
    2. '       ' → logprob: -0.7697759866714478
    3. '\n' → logprob: -2.894775867462158
    4. ')' → logprob: -4.519775867462158
    5. '"""' → logprob: -6.394775867462158
    6. '    ' → logprob: -6.894775867462158
    7. ' ' → logprob: -7.519775867462158
    8. '           ' → logprob: -7.644775867462158
    9. 'n' → logprob: -7.894775867462158
    10. ' )' → logprob: -8.019776344299316

Token 200: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17579953372478485
    2. 'n' → logprob: -3.175799608230591
    3. '       ' → logprob: -3.675799608230591
    4. 'rev' → logprob: -4.175799369812012
    5. ')' → logprob: -4.425799369812012
    6. ' n' → logprob: -4.675799369812012
    7. 'right' → logprob: -4.800799369812012
    8. ' rev' → logprob: -4.925799369812012
    9. ' res' → logprob: -5.175799369812012
    10. '):
' → logprob: -5.175799369812012

Token 201: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.928799569606781
    2. '       ' → logprob: -1.8037996292114258
    3. '):' → logprob: -1.9287996292114258
    4. ',' → logprob: -2.178799629211426
    5. '=' → logprob: -2.428799629211426
    6. ':' → logprob: -3.303799629211426
    7. '):
' → logprob: -3.553799629211426
    8. ' =' → logprob: -4.428799629211426
    9. '[' → logprob: -5.678799629211426
    10. ' :' → logprob: -5.678799629211426

Token 202: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003442832676228136
    2. '           ' → logprob: -8.625344276428223
    3. '   ' → logprob: -10.000344276428223
    4. 're' → logprob: -10.500344276428223
    5. 'rev' → logprob: -10.625344276428223
    6. 'self' → logprob: -10.875344276428223
    7. '        ' → logprob: -11.250344276428223
    8. ' rev' → logprob: -11.375344276428223
    9. '      ' → logprob: -12.250344276428223
    10. ' self' → logprob: -12.750344276428223

Token 203: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' (adapté à ' rev') → logprob: -0.009357579052448273
    2. ' rev' → logprob: -4.759357452392578
    3. '       ' → logprob: -8.384357452392578
    4. '           ' → logprob: -8.509357452392578
    5. 're' → logprob: -8.759357452392578
    6. '   ' → logprob: -9.259357452392578
    7. '_rev' → logprob: -11.759357452392578
    8. 'reven' → logprob: -12.384357452392578
    9. 'self' → logprob: -12.446857452392578
    10. 'list' → logprob: -12.571857452392578

Token 204: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0003047186473850161
    2. '[' → logprob: -8.87530517578125
    3. '):' → logprob: -9.12530517578125
    4. '   ' → logprob: -10.50030517578125
    5. ',' → logprob: -11.37530517578125
    6. ')' → logprob: -11.75030517578125
    7. '_' → logprob: -13.12530517578125
    8. ' ):' → logprob: -13.62530517578125
    9. 'c' → logprob: -13.75030517578125
    10. ':' → logprob: -13.87530517578125

Token 205: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7274410128593445
    2. '):' → logprob: -0.8524410128593445
    3. ' (' → logprob: -3.4774410724639893
    4. '):
' → logprob: -3.9774410724639893
    5. '   ' → logprob: -4.10244083404541
    6. ':' → logprob: -4.35244083404541
    7. ',' → logprob: -5.35244083404541
    8. ')' → logprob: -6.35244083404541
    9. '_c' → logprob: -6.47744083404541
    10. '```' → logprob: -6.60244083404541

Token 206: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0762445330619812
    2. 'rev' → logprob: -2.701244592666626
    3. ')' → logprob: -6.076244354248047
    4. '   ' → logprob: -7.076244354248047
    5. 'int' → logprob: -7.076244354248047
    6. '       ' → logprob: -7.326244354248047
    7. ' list' → logprob: -7.826244354248047
    8. '           ' → logprob: -7.951244354248047
    9. 'List' → logprob: -8.076244354248047
    10. '):' → logprob: -8.951244354248047

Token 207: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009077055379748344
    2. '):
' → logprob: -4.884077072143555
    3. '   ' → logprob: -6.884077072143555
    4. '[' → logprob: -9.009077072143555
    5. ')' → logprob: -9.134077072143555
    6. ' ):' → logprob: -9.384077072143555
    7. '):
' → logprob: -10.134077072143555
    8. '       ' → logprob: -10.509077072143555
    9. '):

' → logprob: -10.759077072143555
    10. '           ' → logprob: -10.884077072143555

Token 208: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.27510520815849304
    2. ' rev' → logprob: -2.5251052379608154
    3. 'list' → logprob: -3.4001052379608154
    4. ')' → logprob: -3.5251052379608154
    5. ' List' → logprob: -3.7751052379608154
    6. '           ' → logprob: -3.7751052379608154
    7. 'List' → logprob: -4.150104999542236
    8. 'rev' → logprob: -4.400104999542236
    9. '               ' → logprob: -5.025104999542236
    10. '       ' → logprob: -5.150104999542236

Token 209: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9050710201263428
    2. '):' → logprob: -1.1550710201263428
    3. '   ' → logprob: -1.9050710201263428
    4. ' de' → logprob: -3.1550710201263428
    5. '[int' → logprob: -3.6550710201263428
    6. ')' → logprob: -4.030071258544922
    7. ':' → logprob: -4.405071258544922
    8. '       ' → logprob: -4.780071258544922
    9. '):
' → logprob: -5.280071258544922
    10. '[' → logprob: -5.280071258544922

Token 210: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0726153776049614
    2. ' positions' → logprob: -2.697615385055542
    3. 'int' → logprob: -6.947615146636963
    4. 'indices' → logprob: -7.322615146636963
    5. 'pos' → logprob: -7.447615146636963
    6. ' int' → logprob: -8.822615623474121
    7. ' indices' → logprob: -9.197615623474121
    8. 'ent' → logprob: -9.822615623474121
    9. '   ' → logprob: -10.322615623474121
    10. ' bool' → logprob: -10.822615623474121

Token 211: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.571955680847168
    2. ' des' → logprob: -2.071955680847168
    3. ' de' → logprob: -2.071955680847168
    4. '   ' → logprob: -2.571955680847168
    5. 'de' → logprob: -3.321955680847168
    6. '           ' → logprob: -3.946955680847168
    7. ' )' → logprob: -4.196955680847168
    8. '       ' → logprob: -4.446955680847168
    9. 'des' → logprob: -4.821955680847168
    10. '    ' → logprob: -5.446955680847168

Token 212: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17606686055660248
    2. ' une' → logprob: -2.1760668754577637
    3. '   ' → logprob: -4.551066875457764
    4. 'c' → logprob: -5.051066875457764
    5. ' cette' → logprob: -5.301066875457764
    6. 'la' → logprob: -5.301066875457764
    7. 'une' → logprob: -5.426066875457764
    8. ' laquelle' → logprob: -5.926066875457764
    9. 'rev' → logprob: -5.926066875457764
    10. ' ' → logprob: -6.051066875457764

Token 213: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.4033700227737427
    2. 'cou' → logprob: -1.2783700227737427
    3. '   ' → logprob: -3.278369903564453
    4. 'c' → logprob: -5.028369903564453
    5. ' des' → logprob: -6.028369903564453
    6. ' ' → logprob: -6.778369903564453
    7. 'color' → logprob: -7.278369903564453
    8. 'certain' → logprob: -7.403369903564453
    9. '       ' → logprob: -7.653369903564453
    10. ' certaine' → logprob: -7.778369903564453

Token 214: ' donnée' (ID: 130126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6395792365074158
    2. '):' → logprob: -1.3895792961120605
    3. '   ' → logprob: -1.6395792961120605
    4. ' )' → logprob: -4.8895792961120605
    5. '           ' → logprob: -5.0145792961120605
    6. '       ' → logprob: -5.0145792961120605
    7. ' ):' → logprob: -5.3895792961120605
    8. ',' → logprob: -7.3895792961120605
    9. '[' → logprob: -7.5145792961120605
    10. '):
' → logprob: -7.6395792961120605

Token 215: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5182981491088867
    2. '):' → logprob: -1.5182981491088867
    3. '   ' → logprob: -1.7682981491088867
    4. '       ' → logprob: -4.643298149108887
    5. '):
' → logprob: -5.893298149108887
    6. ' )' → logprob: -7.018298149108887
    7. '           ' → logprob: -7.768298149108887
    8. ' ):' → logprob: -7.893298149108887
    9. ')
' → logprob: -8.643298149108887
    10. ',' → logprob: -9.393298149108887

Token 216: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1112666204571724
    2. ')' → logprob: -2.486266613006592
    3. '       ' → logprob: -4.986266613006592
    4. '\n' → logprob: -4.986266613006592
    5. '    
' → logprob: -5.486266613006592
    6. '    ' → logprob: -6.736266613006592
    7. ' 
' → logprob: -7.236266613006592
    8. '):' → logprob: -7.361266613006592
    9. '
' → logprob: -7.736266613006592
    10. '\t' → logprob: -8.48626708984375

Token 217: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3097466230392456
    2. '       ' → logprob: -1.9347466230392456
    3. 'n' → logprob: -2.684746742248535
    4. 'res' → logprob: -3.684746742248535
    5. ')' → logprob: -4.809746742248535
    6. 'pos' → logprob: -5.559746742248535
    7. 'result' → logprob: -5.809746742248535
    8. ' n' → logprob: -6.434746742248535
    9. 'right' → logprob: -6.434746742248535
    10. ' res' → logprob: -6.434746742248535

Token 218: ':
' (ID: 734)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5057476758956909
    2. '   ' → logprob: -1.505747675895691
    3. ' len' → logprob: -2.3807477951049805
    4. '[' → logprob: -4.0057477951049805
    5. '    ' → logprob: -4.0057477951049805
    6. ')' → logprob: -4.1307477951049805
    7. ' ' → logprob: -5.0057477951049805
    8. 'len' → logprob: -5.0057477951049805
    9. ' [
' → logprob: -5.3807477951049805
    10. ' None' → logprob: -6.1307477951049805

Token 219: '           ' (ID: 352)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.19788143038749695
    2. '       ' → logprob: -2.0728814601898193
    3. '[' → logprob: -3.0728814601898193
    4. '   ' → logprob: -5.19788122177124
    5. ' {' → logprob: -8.447881698608398
    6. '[len' → logprob: -8.447881698608398
    7. '[n' → logprob: -8.697881698608398
    8. ' [
' → logprob: -8.697881698608398
    9. ' []' → logprob: -9.072881698608398
    10. ' ' → logprob: -9.072881698608398

Token 220: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.3575461804866791
    2. ' list' → logprob: -1.2325462102890015
    3. 'List' → logprob: -5.482546329498291
    4. ' List' → logprob: -6.482546329498291
    5. 'dict' → logprob: -7.607546329498291
    6. '[' → logprob: -7.857546329498291
    7. 'int' → logprob: -7.857546329498291
    8. ' [' → logprob: -8.482545852661133
    9. 'acc' → logprob: -8.482545852661133
    10. '[List' → logprob: -8.607545852661133

Token 221: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6760424375534058
    2. ':' → logprob: -0.9260424375534058
    3. '   ' → logprob: -3.0510425567626953
    4. '[' → logprob: -3.3010425567626953
    5. '[len' → logprob: -6.051042556762695
    6. '):' → logprob: -6.426042556762695
    7. ' of' → logprob: -6.676042556762695
    8. ' [' → logprob: -7.051042556762695
    9. ' :' → logprob: -7.176042556762695
    10. '<int' → logprob: -7.301042556762695

Token 222: ' Liste' (ID: 61030)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08433449268341064
    2. '[' → logprob: -3.209334373474121
    3. ' res' → logprob: -4.334334373474121
    4. ' right' → logprob: -4.459334373474121
    5. ' result' → logprob: -5.209334373474121
    6. ' counts' → logprob: -6.459334373474121
    7. ' count' → logprob: -6.709334373474121
    8. '[n' → logprob: -6.709334373474121
    9. '[right' → logprob: -7.209334373474121
    10. ' acc' → logprob: -7.584334373474121

Token 223: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.97803795337677
    2. '[' → logprob: -1.85303795337677
    3. ' de' → logprob: -1.97803795337677
    4. '   ' → logprob: -2.3530378341674805
    5. '([' → logprob: -2.7280378341674805
    6. '(range' → logprob: -2.7280378341674805
    7. '[len' → logprob: -3.9780378341674805
    8. ' of' → logprob: -3.9780378341674805
    9. '_of' → logprob: -4.4780378341674805
    10. ' [' → logprob: -4.7280378341674805

Token 224: ''ét' (ID: 23771)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13343463838100433
    2. ''ent' → logprob: -2.633434534072876
    3. ''' → logprob: -4.008434772491455
    4. '[' → logprob: -4.633434772491455
    5. ''acc' → logprob: -4.633434772491455
    6. ''int' → logprob: -5.008434772491455
    7. ''une' → logprob: -6.633434772491455
    8. 'es' → logprob: -7.258434772491455
    9. 'u' → logprob: -7.258434772491455
    10. '[int' → logprob: -7.508434772491455

Token 225: 'ats' (ID: 1838)
  Prédit: 'apes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apes' → logprob: -0.2175958752632141
    2. 'end' → logprob: -3.2175958156585693
    3. 'ats' → logprob: -3.2175958156585693
    4. '[' → logprob: -3.4675958156585693
    5. 'endus' → logprob: -3.5925958156585693
    6. 'endue' → logprob: -3.7175958156585693
    7. 'endu' → logprob: -5.217596054077148
    8. 'ape' → logprob: -5.467596054077148
    9. 'ages' → logprob: -5.842596054077148
    10. 'endre' → logprob: -5.967596054077148

Token 226: ' accum' (ID: 23148)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7566524744033813
    2. '[' → logprob: -1.3816524744033813
    3. 's' → logprob: -2.131652355194092
    4. ' [' → logprob: -2.381652355194092
    5. '[]' → logprob: -4.256652355194092
    6. ' =' → logprob: -4.506652355194092
    7. '=[' → logprob: -4.756652355194092
    8. ']' → logprob: -5.006652355194092
    9. '    ' → logprob: -5.131652355194092
    10. 'es' → logprob: -5.756652355194092

Token 227: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.002410254208371043
    2. 'ulated' → logprob: -6.502410411834717
    3. 'um' → logprob: -8.252409934997559
    4. 'ulé' → logprob: -8.377409934997559
    5. 'umul' → logprob: -9.002409934997559
    6. 'ulates' → logprob: -9.002409934997559
    7. 'ulative' → logprob: -10.127409934997559
    8. 'ule' → logprob: -10.377409934997559
    9. 'ulat' → logprob: -10.627409934997559
    10. '<ul' → logprob: -10.752409934997559

Token 228: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.36158865690231323
    2. 'es' → logprob: -1.736588716506958
    3. 'ated' → logprob: -2.611588716506958
    4. 'ées' → logprob: -3.111588716506958
    5. 'ée' → logprob: -4.986588478088379
    6. 'é' → logprob: -6.986588478088379
    7. 'ed' → logprob: -7.486588478088379
    8. 'e' → logprob: -7.611588478088379
    9. '[' → logprob: -8.611588478088379
    10. 'ees' → logprob: -9.486588478088379

Token 229: ' représentant' (ID: 136122)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3617411255836487
    2. ' ]' → logprob: -2.611741065979004
    3. ',' → logprob: -3.111741065979004
    4. '   ' → logprob: -3.236741065979004
    5. 's' → logprob: -3.736741065979004
    6. '(' → logprob: -3.986741065979004
    7. '[' → logprob: -3.986741065979004
    8. ')' → logprob: -4.236741065979004
    9. '()' → logprob: -4.611741065979004
    10. '[]' → logprob: -4.861741065979004

Token 230: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6059207320213318
    2. ' [' → logprob: -1.8559207916259766
    3. ' la' → logprob: -1.8559207916259766
    4. ' le' → logprob: -2.3559207916259766
    5. ' les' → logprob: -4.480920791625977
    6. '[n' → logprob: -5.105920791625977
    7. '[len' → logprob: -5.230920791625977
    8. 'le' → logprob: -5.605920791625977
    9. ' len' → logprob: -5.730920791625977
    10. 'len' → logprob: -5.730920791625977

Token 231: ' pour' (ID: 1930)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5443609952926636
    2. '[' → logprob: -0.9193609952926636
    3. '    ' → logprob: -4.544361114501953
    4. '   ' → logprob: -6.544361114501953
    5. '[n' → logprob: -6.544361114501953
    6. ' n' → logprob: -6.794361114501953
    7. ' rev' → logprob: -7.044361114501953
    8. 'rev' → logprob: -7.169361114501953
    9. ' lambda' → logprob: -7.294361114501953
    10. ' len' → logprob: -7.419361114501953

Token 232: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.04373498633503914
    2. ' i' → logprob: -3.4187350273132324
    3. '   ' → logprob: -5.543735027313232
    4. ' each' → logprob: -6.418735027313232
    5. ' position' → logprob: -6.918735027313232
    6. 'i' → logprob: -7.418735027313232
    7. ' ' → logprob: -7.418735027313232
    8. ' chacune' → logprob: -7.418735027313232
    9. ' la' → logprob: -7.918735027313232
    10. 'position' → logprob: -8.418734550476074

Token 233: ' progression' (ID: 47729)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1450737714767456
    2. ' i' → logprob: -1.2700737714767456
    3. 'position' → logprob: -1.6450737714767456
    4. 'i' → logprob: -1.6450737714767456
    5. 'pos' → logprob: -5.020073890686035
    6. ' index' → logprob: -5.395073890686035
    7. 'index' → logprob: -6.395073890686035
    8. 'indice' → logprob: -7.145073890686035
    9. ' idx' → logprob: -8.145073890686035
    10. ' pos' → logprob: -8.520073890686035

Token 234: ',
' (ID: 412)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8841097950935364
    2. ' des' → logprob: -1.5091097354888916
    3. ',' → logprob: -2.0091097354888916
    4. '   ' → logprob: -2.0091097354888916
    5. 's' → logprob: -4.009109973907471
    6. '    ' → logprob: -4.259109973907471
    7. 'de' → logprob: -4.509109973907471
    8. ' dans' → logprob: -4.634109973907471
    9. ' ,' → logprob: -5.134109973907471
    10. ')' → logprob: -5.509109973907471

Token 235: '               ' (ID: 506)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.398718237876892
    2. '    ' → logprob: -1.523718237876892
    3. '               ' → logprob: -1.648718237876892
    4. '            ' → logprob: -2.5237183570861816
    5. '           ' → logprob: -2.6487183570861816
    6. '       ' → logprob: -2.8987183570861816
    7. '   ' → logprob: -3.6487183570861816
    8. '[' → logprob: -3.8987183570861816
    9. ' ' → logprob: -3.8987183570861816
    10. '        ' → logprob: -4.273718357086182

Token 236: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8290303945541382
    2. ' combien' → logprob: -0.8290303945541382
    3. ' la' → logprob: -2.2040305137634277
    4. ' les' → logprob: -4.954030513763428
    5. 'le' (adapté à ' le') → logprob: -5.204030513763428
    6. ' l' → logprob: -7.204030513763428
    7. ' the' → logprob: -7.454030513763428
    8. 'comb' → logprob: -7.704030513763428
    9. ' une' → logprob: -7.829030513763428
    10. 'les' → logprob: -8.32903003692627

Token 237: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.0711398646235466
    2. 'nombre' → logprob: -2.8211398124694824
    3. 'c' → logprob: -5.946139812469482
    4. ' déplacement' → logprob: -6.696139812469482
    5. ' compte' → logprob: -7.071139812469482
    6. 'count' → logprob: -7.321139812469482
    7. ' cumul' → logprob: -7.321139812469482
    8. ' coût' → logprob: -7.571139812469482
    9. ' nombres' → logprob: -8.07114028930664
    10. ' cumulative' → logprob: -8.07114028930664

Token 238: ' cumul' (ID: 163119)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3966882228851318
    2. '[' → logprob: -2.021688222885132
    3. '    ' → logprob: -2.021688222885132
    4. ' [' → logprob: -2.146688222885132
    5. ' de' → logprob: -2.396688222885132
    6. ' des' → logprob: -3.021688222885132
    7. 's' → logprob: -3.146688222885132
    8. '               ' → logprob: -3.396688222885132
    9. ' =' → logprob: -4.146688461303711
    10. '       ' → logprob: -4.146688461303711

Token 239: 'atif' (ID: 23984)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.35173335671424866
    2. 'er' → logprob: -1.7267333269119263
    3. '   ' → logprob: -3.101733446121216
    4. 'ulé' → logprob: -3.726733446121216
    5. 'ér' → logprob: -4.351733207702637
    6. 'e' → logprob: -4.601733207702637
    7. 'é' → logprob: -4.976733207702637
    8. 'érée' → logprob: -5.351733207702637
    9. 'u' → logprob: -6.351733207702637
    10. '[' → logprob: -6.351733207702637

Token 240: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7644738554954529
    2. ' de' → logprob: -1.1394739151000977
    3. 's' → logprob: -1.8894739151000977
    4. '    ' → logprob: -4.014473915100098
    5. ' d' → logprob: -4.514473915100098
    6. ' s' → logprob: -5.014473915100098
    7. '   ' → logprob: -5.014473915100098
    8. ' ' → logprob: -5.514473915100098
    9. 'de' → logprob: -5.889473915100098
    10. ')' → logprob: -6.014473915100098

Token 241: ' bill' (ID: 6713)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5906866788864136
    2. 'rev' → logprob: -2.340686798095703
    3. ' ' → logprob: -2.465686798095703
    4. ' bill' → logprob: -2.715686798095703
    5. ' rev' → logprob: -3.090686798095703
    6. ' positions' → logprob: -3.340686798095703
    7. 'positions' → logprob: -3.465686798095703
    8. 'bill' → logprob: -4.465686798095703
    9. 'b' → logprob: -4.965686798095703
    10. 're' → logprob: -5.215686798095703

Token 242: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.8789383830153383e-05
    2. 'ues' → logprob: -11.500019073486328
    3. 'les' → logprob: -12.125019073486328
    4. 'e' → logprob: -13.250019073486328
    5. 'ies' → logprob: -14.125019073486328
    6. '#' → logprob: -16.000019073486328
    7. 'esp' → logprob: -16.375019073486328
    8. 'tes' → logprob: -16.625019073486328
    9. ' es' → logprob: -16.875019073486328
    10. 'és' → logprob: -17.375019073486328

Token 243: ' à' (ID: 1221)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.1479941606521606
    2. ' à' → logprob: -1.2729941606521606
    3. '   ' → logprob: -2.022994041442871
    4. ' de' → logprob: -3.022994041442871
    5. ' rest' → logprob: -3.522994041442871
    6. ' restantes' → logprob: -3.522994041442871
    7. ' qui' → logprob: -3.647994041442871
    8. 'plus' → logprob: -3.897994041442871
    9. ' présentes' → logprob: -4.147994041442871
    10. 'de' → logprob: -4.397994041442871

Token 244: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.0038245373871177435
    2. 'g' → logprob: -6.003824710845947
    3. ' droite' → logprob: -6.753824710845947
    4. 'd' → logprob: -9.503824234008789
    5. '```' → logprob: -10.628824234008789
    6. 'dre' → logprob: -11.128824234008789
    7. 'la' → logprob: -11.628824234008789
    8. 'part' → logprob: -11.878824234008789
    9. '-dro' → logprob: -11.878824234008789
    10. 'une' → logprob: -12.378824234008789

Token 245: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9237133860588074
    2. ')' → logprob: -1.4237134456634521
    3. '   ' → logprob: -2.548713445663452
    4. ' des' → logprob: -2.798713445663452
    5. 's' → logprob: -3.173713445663452
    6. ',' → logprob: -3.673713445663452
    7. ' du' → logprob: -3.798713445663452
    8. 'de' → logprob: -4.423713207244873
    9. ']' → logprob: -4.548713207244873
    10. ' )' → logprob: -4.673713207244873

Token 246: ' chaque' (ID: 21194)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.5679129958152771
    2. 'i' → logprob: -1.9429130554199219
    3. ' i' → logprob: -2.317913055419922
    4. ' la' → logprob: -2.942913055419922
    5. ' rev' → logprob: -3.317913055419922
    6. ')' → logprob: -3.692913055419922
    7. ']' → logprob: -4.317913055419922
    8. 'la' → logprob: -4.442913055419922
    9. 'pos' → logprob: -5.317913055419922
    10. ' ' → logprob: -5.442913055419922

Token 247: ' indice' (ID: 90848)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.5928669571876526
    2. 'position' → logprob: -1.8428668975830078
    3. ' i' → logprob: -2.092866897583008
    4. 'pos' → logprob: -2.717866897583008
    5. ' index' → logprob: -3.967866897583008
    6. 'i' → logprob: -4.092866897583008
    7. ' pos' → logprob: -4.467866897583008
    8. ' rev' → logprob: -4.842866897583008
    9. '   ' → logprob: -5.092866897583008
    10. ' idx' → logprob: -5.342866897583008

Token 248: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27667689323425293
    2. ' ]' → logprob: -2.026676893234253
    3. ']' → logprob: -2.776676893234253
    4. '   ' → logprob: -3.651676893234253
    5. ')' → logprob: -5.651677131652832
    6. 'e' → logprob: -6.026677131652832
    7. ' s' → logprob: -6.151677131652832
    8. ' )' → logprob: -6.276677131652832
    9. 'es' → logprob: -6.401677131652832
    10. '.' → logprob: -6.776677131652832

Token 249: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008762525394558907
    2. ')' → logprob: -5.633762359619141
    3. ']' → logprob: -6.008762359619141
    4. '       ' → logprob: -6.633762359619141
    5. '    ' → logprob: -7.758762359619141
    6. ':' → logprob: -8.63376235961914
    7. ' ]' → logprob: -9.00876235961914
    8. '[' → logprob: -9.50876235961914
    9. '):' → logprob: -9.63376235961914
    10. '
' → logprob: -9.88376235961914

Token 250: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23781779408454895
    2. ')' → logprob: -1.9878177642822266
    3. ']' → logprob: -3.2378177642822266
    4. ' ]' → logprob: -4.987817764282227
    5. ')
' → logprob: -5.362817764282227
    6. '"""' → logprob: -5.487817764282227
    7. ' """
' → logprob: -5.612817764282227
    8. ' )' → logprob: -6.112817764282227
    9. '"""
' (adapté à ' """
') → logprob: -6.237817764282227
    10. ' """' → logprob: -6.362817764282227

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014610696816816926
    2. '   ' → logprob: -6.626461029052734
    3. 'return' → logprob: -9.876461029052734
    4. ' return' → logprob: -10.751461029052734
    5. 'acc' → logprob: -10.751461029052734
    6. 'n' → logprob: -11.626461029052734
    7. ' acc' → logprob: -12.126461029052734
    8. 'positions' → logprob: -12.251461029052734
    9. ' positions' → logprob: -13.126461029052734
    10. 'indices' → logprob: -13.126461029052734

Token 252: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2646957039833069
    2. 'n' (adapté à ' n') → logprob: -3.139695644378662
    3. 'res' → logprob: -3.514695644378662
    4. 'dp' → logprob: -3.514695644378662
    5. 'return' → logprob: -3.889695644378662
    6. 'right' → logprob: -3.889695644378662
    7. 'counts' → logprob: -4.139695644378662
    8. 'count' → logprob: -4.389695644378662
    9. 'pos' → logprob: -4.639695644378662
    10. '       ' → logprob: -4.889695644378662

Token 253: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4449898898601532
    2. '_' → logprob: -1.6949899196624756
    3. '=' → logprob: -2.9449899196624756
    4. '_positions' → logprob: -2.9449899196624756
    5. '   ' → logprob: -3.4449899196624756
    6. ',' → logprob: -4.3199896812438965
    7. '_pos' → logprob: -5.4449896812438965
    8. ')' → logprob: -5.5699896812438965
    9. '_c' → logprob: -5.8199896812438965
    10. 'c' → logprob: -6.3199896812438965

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09218674898147583
    2. '=' → logprob: -2.592186689376831
    3. '   ' → logprob: -5.34218692779541
    4. '_' → logprob: -5.59218692779541
    5. '_positions' → logprob: -6.34218692779541
    6. ' *' → logprob: -6.84218692779541
    7. ',' → logprob: -8.09218692779541
    8. ')' → logprob: -8.09218692779541
    9. '*' → logprob: -8.34218692779541
    10. '_pos' → logprob: -8.46718692779541

Token 255: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0003502434410620481
    2. ' len' → logprob: -8.125349998474121
    3. '2' → logprob: -10.625349998474121
    4. 'n' → logprob: -10.875349998474121
    5. '[len' → logprob: -11.750349998474121
    6. '[' → logprob: -13.125349998474121
    7. '(len' → logprob: -15.625349998474121
    8. '[n' → logprob: -15.625349998474121
    9. '   ' → logprob: -15.750349998474121
    10. ' n' → logprob: -15.875349998474121

Token 256: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.39244091510772705
    2. '+' → logprob: -2.1424407958984375
    3. ' *' → logprob: -2.6424407958984375
    4. ' +' → logprob: -3.0174407958984375
    5. '   ' → logprob: -3.2674407958984375
    6. ' -' → logprob: -4.1424407958984375
    7. '
' → logprob: -4.2674407958984375
    8. '-' → logprob: -4.3924407958984375
    9. '       ' → logprob: -5.8924407958984375
    10. ',' → logprob: -7.2674407958984375

Token 257: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005333847366273403
    2. ' ' → logprob: -5.25533390045166
    3. 'n' → logprob: -9.38033390045166
    4. ' n' → logprob: -11.75533390045166
    5. '(n' → logprob: -12.88033390045166
    6. '1' → logprob: -13.63033390045166
    7. '   ' → logprob: -13.75533390045166
    8. '  ' → logprob: -14.13033390045166
    9. '3' → logprob: -14.63033390045166
    10. '4' → logprob: -14.88033390045166

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.125019073486328
    3. '1' → logprob: -13.375019073486328
    4. 'n' → logprob: -13.625019073486328
    5. '3' → logprob: -14.750019073486328
    6. '4' → logprob: -15.125019073486328
    7. '   ' → logprob: -15.375019073486328
    8. '  ' → logprob: -16.375019073486328
    9. '
' → logprob: -16.875019073486328
    10. '-' → logprob: -17.500019073486328

Token 259: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3180695176124573
    2. '       ' → logprob: -1.3180694580078125
    3. '        
' → logprob: -6.3180694580078125
    4. '
' → logprob: -6.3180694580078125
    5. '   ' → logprob: -8.318069458007812
    6. '    
' → logprob: -8.693069458007812
    7. ',
' → logprob: -8.943069458007812
    8. ' 
' → logprob: -8.943069458007812
    9. ',' → logprob: -9.068069458007812
    10. '  
' → logprob: -9.818069458007812

Token 260: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0039191762916743755
    2. '       ' → logprob: -6.1289191246032715
    3. '
' → logprob: -6.7539191246032715
    4. '   ' → logprob: -8.50391960144043
    5. '        
' → logprob: -8.50391960144043
    6. '    
' → logprob: -9.37891960144043
    7. '+' → logprob: -11.37891960144043
    8. '' → logprob: -12.00391960144043
    9. '

' → logprob: -12.12891960144043
    10. '  
' → logprob: -12.12891960144043

Token 261: ' Long' (ID: 7790)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2054659128189087
    2. '   ' → logprob: -1.3304659128189087
    3. ' return' → logprob: -1.9554659128189087
    4. ' result' → logprob: -2.705465793609619
    5. 'n' → logprob: -3.080465793609619
    6. ' res' → logprob: -3.205465793609619
    7. 'return' → logprob: -3.830465793609619
    8. ' length' → logprob: -3.955465793609619
    9. ' range' → logprob: -4.080465793609619
    10. '       ' → logprob: -4.205465793609619

Token 262: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.00019376569252926856
    2. 'ue' → logprob: -8.87519359588623
    3. 'eur' → logprob: -10.25019359588623
    4. 'u' → logprob: -12.00019359588623
    5. '   ' → logprob: -13.25019359588623
    6. ' =' → logprob: -13.50019359588623
    7. 'er' → logprob: -13.75019359588623
    8. 'uet' → logprob: -13.75019359588623
    9. 'itud' → logprob: -14.00019359588623
    10. 'ues' → logprob: -14.25019359588623

Token 263: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07917816936969757
    2. '       ' → logprob: -3.4541780948638916
    3. ' =' → logprob: -4.204178333282471
    4. 'rev' → logprob: -4.579178333282471
    5. '=' → logprob: -4.829178333282471
    6. '    ' → logprob: -5.704178333282471
    7. ' de' → logprob: -6.079178333282471
    8. 'de' → logprob: -7.079178333282471
    9. ' des' → logprob: -7.454178333282471
    10. ' of' → logprob: -7.454178333282471

Token 264: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11864125728607178
    2. '
' → logprob: -2.4936413764953613
    3. '       ' → logprob: -4.868641376495361
    4. 'rev' → logprob: -5.368641376495361
    5. '    
' → logprob: -5.618641376495361
    6. ' =' → logprob: -6.243641376495361
    7. ')' → logprob: -6.368641376495361
    8. '=' → logprob: -6.743641376495361
    9. '<|end|>' → logprob: -6.868641376495361
    10. '+' → logprob: -7.243641376495361

Token 265: ' la' (ID: 557)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.018669569864869118
    2. ' rev' → logprob: -4.018669605255127
    3. ' la' → logprob: -8.393669128417969
    4. 'la' → logprob: -8.893669128417969
    5. 're' → logprob: -10.143669128417969
    6. '   ' → logprob: -10.893669128417969
    7. 'range' → logprob: -11.393669128417969
    8. 'l' → logprob: -11.393669128417969
    9. ' ' → logprob: -11.456169128417969
    10. '[' → logprob: -11.643669128417969

Token 266: ' ligne' (ID: 19583)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.007017514202743769
    2. ' rev' → logprob: -5.007017612457275
    3. 'range' → logprob: -8.882017135620117
    4. 'line' → logprob: -10.132017135620117
    5. 're' → logprob: -11.132017135620117
    6. '[' → logprob: -11.257017135620117
    7. ' ' → logprob: -11.257017135620117
    8. '   ' → logprob: -11.382017135620117
    9. '```' → logprob: -11.507017135620117
    10. 'n' → logprob: -11.757017135620117

Token 267: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6414007544517517
    2. '       ' → logprob: -0.7664007544517517
    3. '        
' → logprob: -5.5164008140563965
    4. '   ' → logprob: -6.1414008140563965
    5. '<|end|>' → logprob: -7.1414008140563965
    6. '
' → logprob: -7.6414008140563965
    7. '    
' → logprob: -8.266400337219238
    8. 'positions' → logprob: -8.641400337219238
    9. '  
' → logprob: -9.016400337219238
    10. 'indices' → logprob: -9.391400337219238

Token 268: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11724409461021423
    2. ' )' → logprob: -2.992244005203247
    3. 'n' → logprob: -3.867244005203247
    4. ')
' → logprob: -4.492244243621826
    5. ' n' → logprob: -5.242244243621826
    6. 'rev' → logprob: -5.242244243621826
    7. ')n' → logprob: -5.367244243621826
    8. '2' → logprob: -5.617244243621826
    9. ' ' → logprob: -5.742244243621826
    10. ' rev' → logprob: -6.742244243621826

Token 269: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8598999381065369
    2. ')' → logprob: -1.2348999977111816
    3. ' *' → logprob: -1.9848999977111816
    4. '*n' → logprob: -1.9848999977111816
    5. '*' → logprob: -5.234899997711182
    6. ' )' → logprob: -6.234899997711182
    7. ' n' → logprob: -6.359899997711182
    8. ')n' → logprob: -6.734899997711182
    9. ')
' → logprob: -7.484899997711182
    10. '   ' → logprob: -9.734899520874023

Token 270: ' positions' (ID: 15897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0571632906794548
    2. ')
' → logprob: -2.9321632385253906
    3. ' )' → logprob: -6.432163238525391
    4. '   ' → logprob: -8.30716323852539
    5. ' )
' → logprob: -8.55716323852539
    6. ')
' → logprob: -9.80716323852539
    7. ' -' → logprob: -9.80716323852539
    8. ')

' → logprob: -10.80716323852539
    9. 'def' → logprob: -10.93216323852539
    10. '-' → logprob: -11.30716323852539

Token 271: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022846020758152008
    2. ')
' → logprob: -4.272846221923828
    3. '   ' → logprob: -4.772846221923828
    4. ' )' → logprob: -9.022846221923828
    5. ')
' → logprob: -10.897846221923828
    6. '
' → logprob: -11.397846221923828
    7. '       ' → logprob: -11.522846221923828
    8. ')

' → logprob: -12.397846221923828
    9. ' )
' → logprob: -12.647846221923828
    10. ').' → logprob: -13.022846221923828

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0356479287147522
    2. '   ' → logprob: -3.6606478691101074
    3. 'counts' → logprob: -6.035647869110107
    4. 'count' → logprob: -6.160647869110107
    5. 'dp' → logprob: -7.160647869110107
    6. ' counts' → logprob: -7.160647869110107
    7. 'acc' → logprob: -7.410647869110107
    8. 'res' → logprob: -7.660647869110107
    9. ' acc' → logprob: -8.285648345947266
    10. ' res' → logprob: -8.535648345947266

Token 273: ' acc' (ID: 1259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8654401898384094
    2. '   ' → logprob: -2.3654401302337646
    3. 'count' → logprob: -2.7404401302337646
    4. '       ' → logprob: -2.7404401302337646
    5. ' dp' → logprob: -2.8654401302337646
    6. 'res' → logprob: -2.9904401302337646
    7. 'right' → logprob: -3.4904401302337646
    8. 'counts' → logprob: -3.4904401302337646
    9. 'exist' → logprob: -3.7404401302337646
    10. ' res' → logprob: -3.7404401302337646

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31324252486228943
    2. '=' → logprob: -1.5632425546646118
    3. 'umulate' → logprob: -3.0632424354553223
    4. 'um' → logprob: -5.063242435455322
    5. '_' → logprob: -6.313242435455322
    6. 'umul' → logprob: -6.438242435455322
    7. 'umulator' → logprob: -6.438242435455322
    8. 's' → logprob: -7.938242435455322
    9. '   ' → logprob: -8.56324291229248
    10. '_positions' → logprob: -8.68824291229248

Token 275: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02155170775949955
    2. ' [' → logprob: -4.146551609039307
    3. 'acc' → logprob: -6.271551609039307
    4. '[list' → logprob: -6.521551609039307
    5. 'list' → logprob: -6.771551609039307
    6. '[n' → logprob: -8.521552085876465
    7. ' list' → logprob: -8.771552085876465
    8. '[-' → logprob: -8.896552085876465
    9. '[(' → logprob: -9.146552085876465
    10. '[[' → logprob: -9.396552085876465

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016873658751137555
    2. 'False' → logprob: -9.125168800354004
    3. 'n' → logprob: -11.125168800354004
    4. '1' → logprob: -11.875168800354004
    5. '(' → logprob: -11.875168800354004
    6. 'int' → logprob: -12.000168800354004
    7. '[n' → logprob: -12.000168800354004
    8. '(n' → logprob: -12.250168800354004
    9. '[' → logprob: -12.250168800354004
    10. ' ' → logprob: -12.625168800354004

Token 277: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7613758444786072
    2. ' for' → logprob: -1.261375904083252
    3. 'for' → logprob: -1.761375904083252
    4. ']*(' → logprob: -3.261375904083252
    5. ']*' → logprob: -3.261375904083252
    6. '   ' → logprob: -7.511375904083252
    7. ']+' → logprob: -8.136375427246094
    8. ' ' → logprob: -10.011375427246094
    9. ' ]' → logprob: -10.011375427246094
    10. '0' → logprob: -10.386375427246094

Token 278: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2595767378807068
    2. 'for' → logprob: -1.5095767974853516
    3. ']' → logprob: -5.134576797485352
    4. ']*' → logprob: -6.634576797485352
    5. ']*(' → logprob: -8.259576797485352
    6. '   ' → logprob: -9.009576797485352
    7. '	for' → logprob: -11.884576797485352
    8. ' ' → logprob: -12.384576797485352
    9. '       ' → logprob: -12.509576797485352
    10. '           ' → logprob: -13.009576797485352

Token 279: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023061325773596764
    2. 'n' → logprob: -3.8980612754821777
    3. '(' → logprob: -6.398061275482178
    4. ' (' → logprob: -7.273061275482178
    5. '   ' → logprob: -9.648061752319336
    6. ' n' → logprob: -11.023061752319336
    7. '
' → logprob: -11.148061752319336
    8. ' ' → logprob: -11.960561752319336
    9. '(
' → logprob: -12.023061752319336
    10. '((' → logprob: -12.148061752319336

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001906024175696075
    2. 'for' → logprob: -6.751905918121338
    3. 'n' → logprob: -8.126906394958496
    4. ' for' → logprob: -9.126906394958496
    5. '+' → logprob: -9.376906394958496
    6. '*' → logprob: -9.626906394958496
    7. '   ' → logprob: -10.001906394958496
    8. ']' → logprob: -10.501906394958496
    9. ' ' → logprob: -10.751906394958496
    10. '       ' → logprob: -11.126906394958496

Token 281: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08339109271764755
    2. 'for' → logprob: -2.7083911895751953
    3. ']' → logprob: -4.333391189575195
    4. '   ' → logprob: -8.708391189575195
    5. ' ]' → logprob: -10.958391189575195
    6. ']
' → logprob: -11.208391189575195
    7. '       ' → logprob: -11.333391189575195
    8. '	for' → logprob: -11.458391189575195
    9. ',' → logprob: -12.583391189575195
    10. ' ' → logprob: -12.958391189575195

Token 282: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5813045501708984
    2. '   ' → logprob: -0.8313045501708984
    3. ' for' → logprob: -6.581304550170898
    4. '    
' → logprob: -6.831304550170898
    5. 'for' → logprob: -7.081304550170898
    6. ',
' → logprob: -7.581304550170898
    7. ',' → logprob: -7.831304550170898
    8. ')' → logprob: -7.956304550170898
    9. '  
' → logprob: -8.456304550170898
    10. ')
' → logprob: -9.081304550170898

Token 283: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9632778167724609
    2. 'for' → logprob: -0.9632778167724609
    3. '
' → logprob: -1.588277816772461
    4. ' for' → logprob: -3.463277816772461
    5. ',' → logprob: -8.213277816772461
    6. 'acc' → logprob: -8.463277816772461
    7. '    
' → logprob: -9.088277816772461
    8. ')' → logprob: -9.088277816772461
    9. '
' → logprob: -9.463277816772461
    10. ',
' → logprob: -9.588277816772461

Token 284: ' Initialise' (ID: 179601)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6614379286766052
    2. '   ' → logprob: -1.16143798828125
    3. 'for' → logprob: -1.78643798828125
    4. 'acc' → logprob: -6.41143798828125
    5. '    ' → logprob: -7.91143798828125
    6. ' prefix' → logprob: -8.53643798828125
    7. 'prefix' → logprob: -8.78643798828125
    8. ' acc' → logprob: -8.91143798828125
    9. '       ' → logprob: -9.28643798828125
    10. ' accum' → logprob: -9.41143798828125

Token 285: ' l' (ID: 305)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0058317184448242
    2. 'acc' → logprob: -1.3808317184448242
    3. ' la' → logprob: -2.255831718444824
    4. ' l' → logprob: -2.255831718444824
    5. ' acc' → logprob: -2.630831718444824
    6. '   ' → logprob: -3.505831718444824
    7. ' un' → logprob: -4.130831718444824
    8. ' les' → logprob: -4.380831718444824
    9. '[' → logprob: -4.630831718444824
    10. '[]' → logprob: -5.130831718444824

Token 286: ''acc' (ID: 46331)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10944047570228577
    2. ''acc' → logprob: -3.109440565109253
    3. 'e' → logprob: -3.359440565109253
    4. 'acc' → logprob: -3.859440565109253
    5. '[' → logprob: -6.484440326690674
    6. 'es' → logprob: -7.609440326690674
    7. ''ex' → logprob: -8.234440803527832
    8. ''' → logprob: -8.859440803527832
    9. '’acc' → logprob: -8.984440803527832
    10. 'exist' → logprob: -9.109440803527832

Token 287: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.10147752612829208
    2. 'um' → logprob: -2.47647762298584
    3. 'umulator' → logprob: -4.72647762298584
    4. '[' → logprob: -6.47647762298584
    5. 'umul' → logprob: -6.85147762298584
    6. 'u' → logprob: -7.97647762298584
    7. 'umu' → logprob: -8.60147762298584
    8. 'umulative' → logprob: -8.97647762298584
    9. '[]' → logprob: -9.60147762298584
    10. ']' → logprob: -9.85147762298584

Token 288: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.35321059823036194
    2. 'd' → logprob: -1.4782105684280396
    3. 'urs' → logprob: -2.728210687637329
    4. '[' → logprob: -6.22821044921875
    5. 's' → logprob: -6.60321044921875
    6. '[
' → logprob: -8.10321044921875
    7. '[[' → logprob: -8.72821044921875
    8. '   ' → logprob: -8.97821044921875
    9. 'acc' → logprob: -10.10321044921875
    10. 'es' → logprob: -10.22821044921875

Token 289: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04187069088220596
    2. ' for' → logprob: -3.666870594024658
    3. '<|end|>' → logprob: -4.541870594024658
    4. ')' → logprob: -6.791870594024658
    5. '[' → logprob: -7.041870594024658
    6. ']' → logprob: -7.416870594024658
    7. 'for' → logprob: -7.791870594024658
    8. ',' → logprob: -8.041871070861816
    9. '[
' → logprob: -8.291871070861816
    10. '<|end|>' → logprob: -9.041871070861816

Token 290: ' chaque' (ID: 21194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46609699726104736
    2. '[' → logprob: -2.591096878051758
    3. ' la' → logprob: -2.716096878051758
    4. ' chaque' → logprob: -2.716096878051758
    5. 'i' → logprob: -3.341096878051758
    6. 'la' → logprob: -3.466096878051758
    7. 'les' → logprob: -3.841096878051758
    8. ' les' → logprob: -4.341096878051758
    9. ' ' → logprob: -4.466096878051758
    10. 'l' → logprob: -4.841096878051758

Token 291: ' étape' (ID: 83661)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.7873216867446899
    2. 'position' → logprob: -0.7873216867446899
    3. 'pos' → logprob: -3.4123215675354004
    4. 'i' → logprob: -3.5373215675354004
    5. ' i' → logprob: -3.9123215675354004
    6. 'indice' → logprob: -5.7873215675354
    7. ' index' → logprob: -6.5373215675354
    8. 'index' → logprob: -7.0373215675354
    9. ' pos' → logprob: -7.9123215675354
    10. ' indice' → logprob: -8.287322044372559

Token 292: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042274847626686096
    2. ')' → logprob: -4.6672749519348145
    3. ',' → logprob: -4.6672749519348145
    4. ' for' → logprob: -4.9172749519348145
    5. '       ' → logprob: -5.1672749519348145
    6. ']' → logprob: -5.9172749519348145
    7. '
' → logprob: -6.1672749519348145
    8. '[' → logprob: -6.5422749519348145
    9. 'for' → logprob: -7.1672749519348145
    10. '    ' → logprob: -7.6672749519348145

Token 293: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048388052731752396
    2. ' for' → logprob: -3.5483880043029785
    3. '       ' → logprob: -4.0483880043029785
    4. 'for' → logprob: -7.5483880043029785
    5. '	for' → logprob: -8.423388481140137
    6. '    
' → logprob: -9.548388481140137
    7. '    ' → logprob: -9.798388481140137
    8. '	   ' → logprob: -10.798388481140137
    9. '        
' → logprob: -11.298388481140137
    10. '
' → logprob: -11.298388481140137

Token 294: ' row' (ID: 5225)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29002517461776733
    2. '   ' → logprob: -1.540025234222412
    3. 'for' → logprob: -3.415025234222412
    4. '       ' → logprob: -5.415025234222412
    5. '	for' → logprob: -10.290024757385254
    6. ' ' → logprob: -12.040024757385254
    7. '    ' → logprob: -12.540024757385254
    8. '  ' → logprob: -12.540024757385254
    9. '    
' → logprob: -12.790024757385254
    10. '
' → logprob: -14.415024757385254

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032267119735479355
    2. '=' → logprob: -3.7822670936584473
    3. 's' → logprob: -4.782267093658447
    4. '   ' → logprob: -8.032267570495605
    5. ' s' → logprob: -9.157267570495605
    6. ' ' → logprob: -10.032267570495605
    7. '=[]' → logprob: -10.782267570495605
    8. '    ' → logprob: -11.157267570495605
    9. '_idx' → logprob: -11.532267570495605
    10. '_' → logprob: -11.532267570495605

Token 296: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005250244867056608
    2. ' [' → logprob: -5.255250453948975
    3. '[n' → logprob: -12.005249977111816
    4. '0' → logprob: -12.505249977111816
    5. 'acc' → logprob: -12.880249977111816
    6. '   ' → logprob: -13.380249977111816
    7. ' ' → logprob: -13.505249977111816
    8. 'rev' → logprob: -15.255249977111816
    9. '[-' → logprob: -15.380249977111816
    10. '[int' → logprob: -15.880249977111816

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.68153518543113e-05
    2. 'False' → logprob: -9.875057220458984
    3. '1' → logprob: -13.250057220458984
    4. 'n' → logprob: -13.375057220458984
    5. ' ' → logprob: -14.000057220458984
    6. '[' → logprob: -15.125057220458984
    7. 'int' → logprob: -15.625057220458984
    8. ' False' → logprob: -16.187557220458984
    9. '   ' → logprob: -16.187557220458984
    10. '[n' → logprob: -16.375057220458984

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012766652507707477
    2. ']*' → logprob: -6.87627649307251
    3. ' for' → logprob: -8.876276969909668
    4. ' ]' → logprob: -9.376276969909668
    5. ']*(' → logprob: -11.626276969909668
    6. 'for' → logprob: -11.876276969909668
    7. ' *' → logprob: -14.501276969909668
    8. '   ' → logprob: -14.876276969909668
    9. ')' → logprob: -14.876276969909668
    10. ']+' → logprob: -15.001276969909668

Token 299: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7811111807823181
    2. ']' → logprob: -1.281111240386963
    3. '[:]' → logprob: -1.906111240386963
    4. '<|end|>' → logprob: -2.781111240386963
    5. 'for' → logprob: -3.281111240386963
    6. '   ' → logprob: -5.031111240386963
    7. '<|end|>' → logprob: -5.906111240386963
    8. ' ]' → logprob: -6.281111240386963
    9. ')' → logprob: -6.781111240386963
    10. '.copy' → logprob: -7.531111240386963

Token 300: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011502212146297097
    2. ' n' → logprob: -7.251150131225586
    3. '(n' → logprob: -7.876150131225586
    4. '(' → logprob: -10.376150131225586
    5. '   ' → logprob: -11.126150131225586
    6. ' (' → logprob: -11.501150131225586
    7. ' ' → logprob: -13.626150131225586
    8. '    ' → logprob: -13.876150131225586
    9. '	n' → logprob: -14.251150131225586
    10. '2' → logprob: -14.376150131225586

Token 301: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.625007629394531
    4. '```' → logprob: -15.375007629394531
    5. '*' → logprob: -16.25000762939453
    6. '4' → logprob: -17.00000762939453
    7. ')' → logprob: -17.37500762939453
    8. ' *' → logprob: -17.43750762939453
    9. '    ' → logprob: -17.68750762939453
    10. '
' → logprob: -17.68750762939453

Token 302: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7269039154052734
    2. '<|end|>' → logprob: -0.8519039154052734
    3. '   ' → logprob: -2.6019039154052734
    4. '<|end|>' → logprob: -4.601903915405273
    5. ' for' → logprob: -6.351903915405273
    6. ')' → logprob: -7.476903915405273
    7. '    
' → logprob: -7.726903915405273
    8. 'for' → logprob: -7.851903915405273
    9. '\n' → logprob: -7.851903915405273
    10. '       ' → logprob: -7.851903915405273

Token 303: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6949014663696289
    2. '
' → logprob: -1.444901466369629
    3. '<|end|>' → logprob: -2.069901466369629
    4. ')' → logprob: -3.194901466369629
    5. ' ' → logprob: -3.944901466369629
    6. '    
' → logprob: -4.069901466369629
    7. 'for' → logprob: -4.194901466369629
    8. ' for' → logprob: -4.319901466369629
    9. ' 
' → logprob: -4.444901466369629
    10. '  
' → logprob: -4.694901466369629

Token 304: ' Re' (ID: 907)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32988297939300537
    2. ' for' → logprob: -1.5798829793930054
    3. '   ' → logprob: -4.079883098602295
    4. 'row' → logprob: -4.829883098602295
    5. 'current' → logprob: -4.829883098602295
    6. 'count' → logprob: -4.829883098602295
    7. 'pos' → logprob: -5.079883098602295
    8. 'def' → logprob: -5.329883098602295
    9. 'curr' → logprob: -5.329883098602295
    10. 'prev' → logprob: -5.704883098602295

Token 305: 'prés' (ID: 61592)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00023798657639417797
    2. 've' → logprob: -10.500238418579102
    3. 'rev' → logprob: -10.625238418579102
    4. 'vised' → logprob: -10.875238418579102
    5. 'vive' → logprob: -11.000238418579102
    6. 'turn' → logprob: -11.500238418579102
    7. 'view' → logprob: -11.625238418579102
    8. 'vue' → logprob: -11.750238418579102
    9. 'voy' → logprob: -11.875238418579102
    10. 'vision' → logprob: -11.875238418579102

Token 306: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.011474176310002804
    2. 's' → logprob: -5.011474132537842
    3. 'ent' → logprob: -6.386474132537842
    4. 'nte' → logprob: -6.761474132537842
    5. 'e' → logprob: -7.886474132537842
    6. 'ents' → logprob: -8.261474609375
    7. 'sent' → logprob: -8.511474609375
    8. '[' → logprob: -9.136474609375
    9. 'enter' → logprob: -9.261474609375
    10. 'resente' → logprob: -9.511474609375

Token 307: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.44432565569877625
    2. 'le' → logprob: -2.0693256855010986
    3. 'les' → logprob: -2.5693256855010986
    4. 'l' → logprob: -2.9443256855010986
    5. 'une' → logprob: -2.9443256855010986
    6. ' la' → logprob: -3.3193256855010986
    7. ' une' → logprob: -4.5693254470825195
    8. ' l' → logprob: -6.3193254470825195
    9. ' les' → logprob: -7.1943254470825195
    10. ' le' → logprob: -7.1943254470825195

Token 308: ' présence' (ID: 57522)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5103065371513367
    2. 'ligne' → logprob: -1.7603065967559814
    3. 'count' → logprob: -2.7603065967559814
    4. 'presence' → logprob: -3.1353065967559814
    5. 'position' → logprob: -3.3853065967559814
    6. 'acc' → logprob: -4.385306358337402
    7. 'current' → logprob: -4.385306358337402
    8. 'state' → logprob: -4.385306358337402
    9. 'prés' → logprob: -4.510306358337402
    10. '[' → logprob: -4.885306358337402

Token 309: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5983319878578186
    2. ' des' → logprob: -1.4733319282531738
    3. ' d' → logprob: -2.973331928253174
    4. 'de' → logprob: -3.098331928253174
    5. '    ' → logprob: -3.473331928253174
    6. '   ' → logprob: -3.473331928253174
    7. ' ' → logprob: -3.598331928253174
    8. 'des' → logprob: -4.723331928253174
    9. '<|end|>' → logprob: -4.848331928253174
    10. ' of' → logprob: -4.973331928253174

Token 310: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -0.33825498819351196
    2. 'bill' → logprob: -1.9632549285888672
    3. 'rev' → logprob: -3.338254928588867
    4. 'b' → logprob: -3.338254928588867
    5. ' positions' → logprob: -3.713254928588867
    6. 'positions' → logprob: -4.213254928588867
    7. ' rev' → logprob: -4.463254928588867
    8. ' blancs' → logprob: -5.088254928588867
    9. ' white' → logprob: -5.963254928588867
    10. 'bl' → logprob: -5.963254928588867

Token 311: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.053945690393447876
    2. 'les' → logprob: -3.053945779800415
    3. 'e' → logprob: -5.928945541381836
    4. 'le' → logprob: -6.928945541381836
    5. '[' → logprob: -7.428945541381836
    6. 'ues' → logprob: -8.553945541381836
    7. '   ' → logprob: -8.678945541381836
    8. 'illes' → logprob: -8.803945541381836
    9. 'ules' → logprob: -10.178945541381836
    10. 'mes' → logprob: -10.303945541381836

Token 312: ' sur' (ID: 1512)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5356922745704651
    2. '   ' → logprob: -2.4106922149658203
    3. ' no' → logprob: -2.4106922149658203
    4. 'sur' → logprob: -3.2856922149658203
    5. ' blanche' → logprob: -3.5356922149658203
    6. ' bl' → logprob: -3.5356922149658203
    7. ' aux' → logprob: -3.7856922149658203
    8. 'bl' → logprob: -4.03569221496582
    9. ' ' → logprob: -4.03569221496582
    10. 'à' → logprob: -4.78569221496582

Token 313: ' chaque' (ID: 21194)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5514026880264282
    2. ' la' → logprob: -1.6764026880264282
    3. ' chaque' → logprob: -2.4264025688171387
    4. '   ' → logprob: -2.6764025688171387
    5. '[' → logprob: -3.9264025688171387
    6. 'les' → logprob: -3.9264025688171387
    7. 'positions' → logprob: -4.926402568817139
    8. ' les' → logprob: -5.426402568817139
    9. 'rev' → logprob: -5.426402568817139
    10. 'each' → logprob: -5.676402568817139

Token 314: ' case' (ID: 1890)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.25714507699012756
    2. 'position' → logprob: -1.5071450471878052
    3. ' index' → logprob: -6.382144927978516
    4. 'index' → logprob: -7.007144927978516
    5. 'indice' → logprob: -7.132144927978516
    6. 'case' → logprob: -7.757144927978516
    7. ' case' → logprob: -7.882144927978516
    8. ' ' → logprob: -8.632144927978516
    9. 'pos' → logprob: -9.007144927978516
    10. ' indice' → logprob: -9.132144927978516

Token 315: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050150033086538315
    2. '.' → logprob: -4.050149917602539
    3. ' for' → logprob: -4.800149917602539
    4. ')' → logprob: -4.925149917602539
    5. '<|end|>' → logprob: -5.300149917602539
    6. '
' → logprob: -6.175149917602539
    7. '    
' → logprob: -6.675149917602539
    8. ',' → logprob: -7.175149917602539
    9. 's' → logprob: -7.425149917602539
    10. '  ' → logprob: -7.550149917602539

Token 316: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4534545838832855
    2. ' for' → logprob: -1.453454613685608
    3. 'for' → logprob: -2.9534544944763184
    4. '    
' → logprob: -3.9534544944763184
    5. ' 
' → logprob: -4.078454494476318
    6. '
' → logprob: -4.703454494476318
    7. '	for' → logprob: -4.828454494476318
    8. ' ' → logprob: -5.703454494476318
    9. '  
' → logprob: -5.703454494476318
    10. '   
' → logprob: -5.828454494476318

Token 317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3725820481777191
    2. ' for' → logprob: -1.3725820779800415
    3. '   ' → logprob: -2.872581958770752
    4. '	for' → logprob: -6.997581958770752
    5. 'i' → logprob: -9.99758243560791
    6. '       ' → logprob: -10.49758243560791
    7. ' i' → logprob: -11.74758243560791
    8. '    ' → logprob: -11.99758243560791
    9. 'return' → logprob: -12.12258243560791
    10. '```' → logprob: -12.12258243560791

Token 318: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6164427399635315
    2. ' pos' → logprob: -1.3664426803588867
    3. 'i' → logprob: -2.6164426803588867
    4. ' x' → logprob: -3.1164426803588867
    5. 'pos' → logprob: -3.6164426803588867
    6. ' idx' → logprob: -4.116442680358887
    7. ' p' → logprob: -4.366442680358887
    8. 'x' → logprob: -4.741442680358887
    9. ' c' → logprob: -5.116442680358887
    10. ' v' → logprob: -5.866442680358887

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02995169349014759
    2. 'in' → logprob: -3.529951810836792
    3. ' ' → logprob: -8.779952049255371
    4. '  ' → logprob: -11.154952049255371
    5. ',' → logprob: -11.279952049255371
    6. '   ' → logprob: -12.404952049255371
    7. '_in' → logprob: -12.654952049255371
    8. 'n' → logprob: -13.029952049255371
    9. ')' → logprob: -13.154952049255371
    10. '_' → logprob: -13.779952049255371

Token 320: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.35743197798728943
    2. ' rev' → logprob: -1.2324320077896118
    3. ' range' → logprob: -5.107431888580322
    4. 'range' → logprob: -6.232431888580322
    5. 're' → logprob: -7.607431888580322
    6. '   ' → logprob: -8.48243236541748
    7. ' reversed' → logprob: -9.35743236541748
    8. ' ' → logprob: -9.98243236541748
    9. '[' → logprob: -11.35743236541748
    10. '  ' → logprob: -11.41993236541748

Token 321: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5821585655212402
    2. '[' → logprob: -0.8321585655212402
    3. ':' → logprob: -6.33215856552124
    4. '   ' → logprob: -6.83215856552124
    5. '):' → logprob: -7.20715856552124
    6. '):
' → logprob: -7.45715856552124
    7. 'c' → logprob: -7.45715856552124
    8. ':
' → logprob: -7.70715856552124
    9. ')' → logprob: -8.582159042358398
    10. '[c' → logprob: -8.582159042358398

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00504269078373909
    2. ':
' → logprob: -5.880042552947998
    3. ' :' → logprob: -6.380042552947998
    4. '):' → logprob: -8.755043029785156
    5. ' in' → logprob: -9.130043029785156
    6. '       ' → logprob: -9.380043029785156
    7. '   ' → logprob: -9.880043029785156
    8. ']:' → logprob: -10.255043029785156
    9. '[' → logprob: -10.630043029785156
    10. '[::-' → logprob: -11.005043029785156

Token 323: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4179820418357849
    2. ' 
' → logprob: -2.0429821014404297
    3. '        ' → logprob: -2.5429821014404297
    4. '        
' → logprob: -2.7929821014404297
    5. ' ' → logprob: -3.1679821014404297
    6. '           ' → logprob: -4.29298210144043
    7. '<|end|>' → logprob: -6.29298210144043
    8. '    ' → logprob: -6.54298210144043
    9. '    
' → logprob: -6.66798210144043
    10. '
' → logprob: -6.66798210144043

Token 324: ' #' (ID: 1069)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.05050813779234886
    2. '       ' → logprob: -4.05050802230835
    3. 'row' → logprob: -4.30050802230835
    4. ' for' → logprob: -4.30050802230835
    5. '    ' → logprob: -6.05050802230835
    6. '        ' → logprob: -7.55050802230835
    7. ' ' → logprob: -7.80050802230835
    8. '   ' → logprob: -8.050508499145508
    9. '	row' → logprob: -8.300508499145508
    10. ' if' → logprob: -8.925508499145508

Token 325: ' On' (ID: 2160)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.0570572204887867
    2. 'row' → logprob: -3.0570571422576904
    3. ' for' → logprob: -5.1820573806762695
    4. ' idx' → logprob: -7.1820573806762695
    5. '       ' → logprob: -7.6820573806762695
    6. '   ' → logprob: -7.6820573806762695
    7. 'for' → logprob: -8.30705738067627
    8. '    ' → logprob: -8.43205738067627
    9. '           ' → logprob: -8.93205738067627
    10. ' x' → logprob: -9.18205738067627

Token 326: ' place' (ID: 2475)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7027584910392761
    2. ' row' → logprob: -0.8277584910392761
    3. '[row' → logprob: -3.577758550643921
    4. '   ' → logprob: -3.952758550643921
    5. '       ' → logprob: -5.577758312225342
    6. ' for' → logprob: -5.577758312225342
    7. 'for' → logprob: -5.827758312225342
    8. '           ' → logprob: -5.952758312225342
    9. ' acc' → logprob: -6.827758312225342
    10. '    ' → logprob: -7.327758312225342

Token 327: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24242804944515228
    2. ' row' → logprob: -2.4924280643463135
    3. 'row' → logprob: -2.6174280643463135
    4. ' ' → logprob: -3.3674280643463135
    5. '           ' → logprob: -4.117427825927734
    6. ' x' → logprob: -5.242427825927734
    7. 'x' → logprob: -6.242427825927734
    8. '0' → logprob: -6.867427825927734
    9. ' la' → logprob: -8.992427825927734
    10. ' True' → logprob: -9.617427825927734

Token 328: ' bille' (ID: 97414)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5762174129486084
    2. ' ' → logprob: -0.8262174129486084
    3. 'row' → logprob: -9.326217651367188
    4. '0' → logprob: -9.951217651367188
    5. 'x' → logprob: -10.451217651367188
    6. ' x' → logprob: -10.576217651367188
    7. '   ' → logprob: -11.701217651367188
    8. 'token' → logprob: -11.701217651367188
    9. ' row' → logprob: -11.826217651367188
    10. 'b' → logprob: -12.201217651367188

Token 329: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.40070950984954834
    2. ' sur' → logprob: -2.025709629058838
    3. ' ' → logprob: -2.525709629058838
    4. ' au' → logprob: -3.900709629058838
    5. '1' → logprob: -4.150709629058838
    6. 'sur' → logprob: -4.150709629058838
    7. ' True' → logprob: -4.400709629058838
    8. ' dans' → logprob: -4.525709629058838
    9. '   ' → logprob: -4.775709629058838
    10. ' blanche' → logprob: -4.900709629058838

Token 330: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027090273797512054
    2. 'row' → logprob: -3.777090311050415
    3. ' x' → logprob: -5.652090072631836
    4. ' row' → logprob: -8.527090072631836
    5. '1' → logprob: -9.152090072631836
    6. '   ' → logprob: -11.652090072631836
    7. 'la' → logprob: -12.527090072631836
    8. ' ' → logprob: -12.527090072631836
    9. ' la' → logprob: -13.027090072631836
    10. 'l' → logprob: -13.652090072631836

Token 331: ' position' (ID: 4010)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0589008554816246
    2. '1' → logprob: -3.183900833129883
    3. 'position' → logprob: -4.308900833129883
    4. ' x' → logprob: -6.933900833129883
    5. ' ' → logprob: -7.933900833129883
    6. 'index' → logprob: -7.933900833129883
    7. 'indice' → logprob: -8.558900833129883
    8. 'pos' → logprob: -8.808900833129883
    9. '   ' → logprob: -9.933900833129883
    10. 'row' → logprob: -10.058900833129883

Token 332: ' correspond' (ID: 11095)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759568214416504
    2. ' x' → logprob: -0.8259568214416504
    3. '           ' → logprob: -11.700956344604492
    4. '[x' → logprob: -12.950956344604492
    5. '   ' → logprob: -13.200956344604492
    6. ' ' → logprob: -13.450956344604492
    7. '	x' → logprob: -13.950956344604492
    8. '    ' → logprob: -14.075956344604492
    9. '               ' → logprob: -14.575956344604492
    10. '(x' → logprob: -14.700956344604492

Token 333: 'ante' (ID: 2116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0821471214294434
    2. '           ' → logprob: -1.0821471214294434
    3. ']' → logprob: -1.8321471214294434
    4. 'à' → logprob: -3.2071471214294434
    5. '   ' → logprob: -3.4571471214294434
    6. ' à' → logprob: -4.082147121429443
    7. 'x' → logprob: -4.332147121429443
    8. ' x' → logprob: -4.582147121429443
    9. '               ' → logprob: -4.707147121429443
    10. 'e' → logprob: -4.957147121429443

Token 334: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015121026895940304
    2. ',' → logprob: -5.265120983123779
    3. '            
' → logprob: -6.515120983123779
    4. '               ' → logprob: -7.140120983123779
    5. ' row' → logprob: -7.140120983123779
    6. '            ' → logprob: -7.265120983123779
    7. 'row' → logprob: -7.265120983123779
    8. '[row' → logprob: -7.265120983123779
    9. ' =' → logprob: -7.390120983123779
    10. '.' → logprob: -7.390120983123779

Token 335: 'c' (ID: 66)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5403543710708618
    2. ' x' → logprob: -1.1653543710708618
    3. '1' → logprob: -2.4153542518615723
    4. '           ' → logprob: -5.165354251861572
    5. ' ' → logprob: -5.415354251861572
    6. ')' → logprob: -5.540354251861572
    7. 'row' → logprob: -7.290354251861572
    8. ' row' → logprob: -8.41535472869873
    9. ',' → logprob: -8.54035472869873
    10. '               ' → logprob: -8.91535472869873

Token 336: 'ôté' (ID: 186537)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3568078875541687
    2. ']' → logprob: -2.4818079471588135
    3. 'e' → logprob: -3.3568079471588135
    4. '[' → logprob: -3.4818079471588135
    5. '-' → logprob: -3.6068079471588135
    6. ' =' → logprob: -3.7318079471588135
    7. '+' → logprob: -4.231807708740234
    8. ')' → logprob: -4.856807708740234
    9. ' ' → logprob: -5.106807708740234
    10. '   ' → logprob: -5.106807708740234

Token 337: ' "' (ID: 392)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8220635652542114
    2. 'x' → logprob: -1.5720635652542114
    3. ' blanc' → logprob: -2.697063446044922
    4. '=' → logprob: -2.947063446044922
    5. ')' → logprob: -2.947063446044922
    6. ' white' → logprob: -3.572063446044922
    7. ' de' → logprob: -4.197063446044922
    8. 'd' → logprob: -4.322063446044922
    9. '1' → logprob: -4.322063446044922
    10. '   ' → logprob: -4.447063446044922

Token 338: 'd' (ID: 67)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.966187059879303
    2. 'dro' → logprob: -2.091187000274658
    3. 'd' → logprob: -2.341187000274658
    4. '1' → logprob: -3.091187000274658
    5. ' droit' → logprob: -3.216187000274658
    6. ' x' → logprob: -3.466187000274658
    7. '=' → logprob: -3.466187000274658
    8. 'rev' → logprob: -3.716187000274658
    9. 'no' → logprob: -3.716187000274658
    10. 'white' → logprob: -3.716187000274658

Token 339: 'roit' (ID: 22896)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.5910409092903137
    2. 'ôté' → logprob: -1.091040849685669
    3. 'roit' → logprob: -3.091040849685669
    4. 'e' → logprob: -4.216041088104248
    5. 'o' → logprob: -4.466041088104248
    6. 'eux' → logprob: -4.716041088104248
    7. 'rop' → logprob: -5.216041088104248
    8. 'om' → logprob: -5.591041088104248
    9. 'ont' → logprob: -5.841041088104248
    10. 'on' → logprob: -6.591041088104248

Token 340: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.24159935116767883
    2. '"' → logprob: -2.6165993213653564
    3. ' ")' → logprob: -2.8665993213653564
    4. ' "' → logprob: -4.3665995597839355
    5. '"),' → logprob: -4.8665995597839355
    6. 'e' → logprob: -4.9915995597839355
    7. '")
' → logprob: -5.1165995597839355
    8. '+' → logprob: -5.1165995597839355
    9. ' +' → logprob: -5.2415995597839355
    10. '"):
' → logprob: -5.2415995597839355

Token 341: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8464581370353699
    2. ')' → logprob: -1.3464581966400146
    3. '1' → logprob: -1.5964581966400146
    4. ' x' → logprob: -2.9714581966400146
    5. 'x' → logprob: -3.9714581966400146
    6. ' ' → logprob: -4.2214579582214355
    7. ' )' → logprob: -4.9714579582214355
    8. '0' → logprob: -6.0964579582214355
    9. ' row' → logprob: -6.0964579582214355
    10. 'row' → logprob: -6.7214579582214355

Token 342: ''où' (ID: 186468)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4731103181838989
    2. 'ro' → logprob: -1.598110318183899
    3. '=' → logprob: -2.8481101989746094
    4. 'x' → logprob: -3.3481101989746094
    5. 'u' → logprob: -3.5981101989746094
    6. 'roit' → logprob: -4.473110198974609
    7. 'rop' → logprob: -5.223110198974609
    8. 'ans' → logprob: -5.223110198974609
    9. 'es' → logprob: -5.723110198974609
    10. '+' → logprob: -5.848110198974609

Token 343: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3189074397087097
    2. ' ' → logprob: -1.6939074993133545
    3. ' x' → logprob: -3.4439074993133545
    4. '+' → logprob: -4.068907260894775
    5. ' +' → logprob: -4.568907260894775
    6. 'x' → logprob: -4.568907260894775
    7. ' row' → logprob: -5.068907260894775
    8. 'row' → logprob: -5.568907260894775
    9. ' acc' → logprob: -5.818907260894775
    10. '           ' → logprob: -6.693907260894775

Token 344: ' n' (ID: 297)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4951864182949066
    2. '1' → logprob: -1.620186448097229
    3. 'n' → logprob: -1.995186448097229
    4. ' -' → logprob: -3.6201863288879395
    5. ' n' → logprob: -4.8701863288879395
    6. 'x' → logprob: -5.6201863288879395
    7. '(' → logprob: -5.7451863288879395
    8. ' ' → logprob: -5.8701863288879395
    9. '-n' → logprob: -6.1201863288879395
    10. '-x' → logprob: -6.3701863288879395

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014388911426067352
    2. ' -' → logprob: -4.5143890380859375
    3. '-' → logprob: -6.7643890380859375
    4. ' *' → logprob: -7.2643890380859375
    5. ' ' → logprob: -7.2643890380859375
    6. '*' → logprob: -7.5143890380859375
    7. ' x' → logprob: -9.639389038085938
    8. 'x' → logprob: -9.764389038085938
    9. '  ' → logprob: -10.139389038085938
    10. '   ' → logprob: -10.889389038085938

Token 346: '-x' (ID: 12651)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17976143956184387
    2. ' -' → logprob: -1.8047614097595215
    3. '-x' → logprob: -11.80476188659668
    4. ' ' → logprob: -12.55476188659668
    5. ')' → logprob: -12.55476188659668
    6. 'x' → logprob: -14.55476188659668
    7. '   ' → logprob: -14.80476188659668
    8. '#' → logprob: -15.05476188659668
    9. ' )' → logprob: -15.99226188659668
    10. ']' → logprob: -16.42976188659668

Token 347: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05675891041755676
    2. ')' → logprob: -3.1817588806152344
    3. ' -' → logprob: -4.556758880615234
    4. ')")' → logprob: -6.681758880615234
    5. ']' → logprob: -6.931758880615234
    6. '")' → logprob: -8.181758880615234
    7. ')])' → logprob: -8.806758880615234
    8. ' )' → logprob: -9.181758880615234
    9. '[' → logprob: -9.306758880615234
    10. '1' → logprob: -9.556758880615234

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '-' → logprob: -16.625003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '```' → logprob: -17.875003814697266
    6. '2' → logprob: -18.750003814697266
    7. ')' → logprob: -18.875003814697266
    8. '
' → logprob: -19.250003814697266
    9. 'x' → logprob: -19.625003814697266
    10. '１' → logprob: -20.375003814697266

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3972268104553223
    2. '])' → logprob: -1.5222268104553223
    3. ']' → logprob: -1.7722268104553223
    4. ')])' → logprob: -1.8972268104553223
    5. ' ])' → logprob: -2.3972268104553223
    6. ' )' → logprob: -2.5222268104553223
    7. ')]' → logprob: -4.022226810455322
    8. '])]' → logprob: -4.522226810455322
    9. ' ]' → logprob: -4.897226810455322
    10. '-' → logprob: -5.647226810455322

Token 350: '           ' (ID: 352)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.367019534111023
    2. '           ' → logprob: -1.492019534111023
    3. '       ' → logprob: -1.867019534111023
    4. '   ' → logprob: -2.2420196533203125
    5. ' ]' → logprob: -2.6170196533203125
    6. ']:' → logprob: -2.9920196533203125
    7. ':' → logprob: -3.2420196533203125
    8. '):' → logprob: -3.4920196533203125
    9. ')' → logprob: -3.7420196533203125
    10. '):
' → logprob: -4.7420196533203125

Token 351: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5856324434280396
    2. 'row' (adapté à ' row') → logprob: -0.8356324434280396
    3. '           ' → logprob: -5.21063232421875
    4. '   ' → logprob: -5.71063232421875
    5. '       ' → logprob: -7.71063232421875
    6. '	row' → logprob: -9.33563232421875
    7. '[row' → logprob: -9.71063232421875
    8. '    ' → logprob: -9.83563232421875
    9. '               ' → logprob: -10.46063232421875
    10. ' idx' → logprob: -10.83563232421875

Token 352: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0010680586565285921
    2. '[' → logprob: -7.501068115234375
    3. '[x' → logprob: -8.001068115234375
    4. '[row' → logprob: -9.001068115234375
    5. ' [' → logprob: -11.626068115234375
    6. '][' → logprob: -11.876068115234375
    7. 'n' → logprob: -12.001068115234375
    8. '   ' → logprob: -12.126068115234375
    9. '[-' → logprob: -12.126068115234375
    10. '[len' → logprob: -12.751068115234375

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.375019073486328
    3. '-' → logprob: -12.375019073486328
    4. ' -' → logprob: -13.250019073486328
    5. '_' → logprob: -14.875019073486328
    6. '
' → logprob: -15.125019073486328
    7. '   ' → logprob: -15.125019073486328
    8. '₂' → logprob: -15.937519073486328
    9. '۲' → logprob: -16.062519073486328
    10. '[' → logprob: -16.500019073486328

Token 354: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027090273797512054
    2. ' -' → logprob: -3.652090311050415
    3. '-x' → logprob: -7.152090072631836
    4. '   ' → logprob: -13.402090072631836
    5. 'x' → logprob: -13.777090072631836
    6. ' ' → logprob: -13.902090072631836
    7. '1' → logprob: -14.527090072631836
    8. '-n' → logprob: -14.902090072631836
    9. '−' → logprob: -15.152090072631836
    10. '[' → logprob: -15.277090072631836

Token 355: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003764093853533268
    2. '1' → logprob: -5.6287641525268555
    3. ' x' → logprob: -8.753764152526855
    4. ' ' → logprob: -12.253764152526855
    5. '   ' → logprob: -13.878764152526855
    6. '(x' → logprob: -15.753764152526855
    7. '  ' → logprob: -16.12876319885254
    8. '	x' → logprob: -16.25376319885254
    9. '_x' → logprob: -17.37876319885254
    10. '
' → logprob: -17.37876319885254

Token 356: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12737886607646942
    2. ' -' → logprob: -2.1273789405822754
    3. '1' → logprob: -7.752378940582275
    4. ' ' → logprob: -11.252378463745117
    5. '   ' → logprob: -13.127378463745117
    6. ']' → logprob: -13.502378463745117
    7. '<|end|>' → logprob: -13.502378463745117
    8. '[' → logprob: -13.627378463745117
    9. ')' → logprob: -14.127378463745117
    10. '  ' → logprob: -15.377378463745117

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -15.000036239624023
    4. '```' → logprob: -15.812536239624023
    5. '2' → logprob: -17.312536239624023
    6. '  ' → logprob: -17.687536239624023
    7. '<|end|>' → logprob: -17.875036239624023
    8. '۱' → logprob: -18.125036239624023
    9. '<|end|>' → logprob: -18.562536239624023
    10. '       ' → logprob: -18.750036239624023

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.687505722045898
    4. '```' → logprob: -16.0000057220459
    5. '2' → logprob: -16.0625057220459
    6. '-' → logprob: -17.3125057220459
    7. ')' → logprob: -17.5625057220459
    8. ']' → logprob: -17.6875057220459
    9. '
' → logprob: -17.6875057220459
    10. '۱' → logprob: -17.9375057220459

Token 359: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033439300023019314
    2. ']+=' → logprob: -8.625334739685059
    3. ' ]' → logprob: -8.875334739685059
    4. ']=' → logprob: -11.625334739685059
    5. '=' → logprob: -12.750334739685059
    6. ' +=' → logprob: -13.500334739685059
    7. ')' → logprob: -14.375334739685059
    8. '+=' → logprob: -14.500334739685059
    9. '1' → logprob: -16.000333786010742
    10. '   ' → logprob: -16.125333786010742

Token 360: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10590039938688278
    2. ' =' → logprob: -2.855900287628174
    3. '+=' → logprob: -3.855900287628174
    4. ' +=' → logprob: -3.980900287628174
    5. ']' → logprob: -5.855900287628174
    6. ']+=' → logprob: -8.355900764465332
    7. ']=' → logprob: -9.855900764465332
    8. ' ]' → logprob: -12.855900764465332
    9. ' ' → logprob: -13.355900764465332
    10. '+' → logprob: -13.605900764465332

Token 361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.125040054321289
    4. '0' → logprob: -17.37504005432129
    5. '  ' → logprob: -18.25004005432129
    6. '```' → logprob: -19.62504005432129
    7. '           ' → logprob: -19.75004005432129
    8. '2' → logprob: -20.06254005432129
    9. '       ' → logprob: -20.25004005432129
    10. '
' → logprob: -20.81254005432129

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '0' → logprob: -18.125001907348633
    5. '2' → logprob: -18.937501907348633
    6. '  ' → logprob: -19.625001907348633
    7. '+' → logprob: -19.625001907348633
    8. '```' → logprob: -20.312501907348633
    9. '-' → logprob: -20.375001907348633
    10. '
' → logprob: -20.687501907348633

Token 363: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7232940196990967
    2. '<|end|>' → logprob: -0.7232940196990967
    3. '<|end|>' → logprob: -4.348294258117676
    4. '       ' → logprob: -4.848294258117676
    5. '           ' → logprob: -5.598294258117676
    6. '  
' → logprob: -6.598294258117676
    7. ' 
' → logprob: -6.598294258117676
    8. '   ' → logprob: -7.723294258117676
    9. '        
' → logprob: -8.098294258117676
    10. '    
' → logprob: -8.223294258117676

Token 364: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' #' (ID: 1069)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4243412911891937
    2. '       ' → logprob: -1.1743413209915161
    3. ' acc' → logprob: -3.9243412017822266
    4. '           ' → logprob: -4.174341201782227
    5. '   ' → logprob: -6.549341201782227
    6. '	acc' → logprob: -9.174341201782227
    7. '
' → logprob: -11.174341201782227
    8. ' ' → logprob: -11.549341201782227
    9. 'ac' → logprob: -11.549341201782227
    10. '_acc' → logprob: -11.924341201782227

Token 366: ' On' (ID: 2160)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.02753628045320511
    2. ' acc' → logprob: -3.652536392211914
    3. '           ' → logprob: -7.277536392211914
    4. '       ' → logprob: -8.277536392211914
    5. '   ' → logprob: -8.277536392211914
    6. 'ac' → logprob: -11.277536392211914
    7. ' ' → logprob: -12.277536392211914
    8. '	acc' → logprob: -12.402536392211914
    9. '  ' → logprob: -13.152536392211914
    10. '
' → logprob: -13.277536392211914

Token 367: ' accum' (ID: 23148)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06736616045236588
    2. 'acc' → logprob: -3.567366123199463
    3. ' acc' → logprob: -3.692366123199463
    4. 'append' → logprob: -4.817366123199463
    5. ' append' → logprob: -5.817366123199463
    6. '.' → logprob: -8.817366600036621
    7. ' .' → logprob: -8.817366600036621
    8. '           ' → logprob: -8.942366600036621
    9. '   ' → logprob: -9.067366600036621
    10. '       ' → logprob: -9.317366600036621

Token 368: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.25223174691200256
    2. 'ule' → logprob: -1.5022317171096802
    3. 'late' → logprob: -8.50223159790039
    4. 'umulate' → logprob: -10.50223159790039
    5. 'ul' → logprob: -10.87723159790039
    6. 'e' → logprob: -11.62723159790039
    7. '[' → logprob: -11.87723159790039
    8. 'ulte' → logprob: -12.25223159790039
    9. 'ate' → logprob: -12.37723159790039
    10. 'u' → logprob: -12.50223159790039

Token 369: ' le' (ID: 505)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.8199859261512756
    2. 'acc' → logprob: -0.9449859261512756
    3. ' acc' → logprob: -1.8199858665466309
    4. '           ' → logprob: -6.069985866546631
    5. 'append' → logprob: -6.444985866546631
    6. 'row' → logprob: -6.944985866546631
    7. ' append' → logprob: -7.069985866546631
    8. '[' → logprob: -7.319985866546631
    9. ',' → logprob: -7.569985866546631
    10. ' row' → logprob: -7.819985866546631

Token 370: ' total' (ID: 3609)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5974377393722534
    2. 'acc' → logprob: -0.8474377393722534
    3. ' list' → logprob: -4.722437858581543
    4. '[' → logprob: -5.472437858581543
    5. 'row' → logprob: -5.472437858581543
    6. 'append' → logprob: -6.722437858581543
    7. 'ac' → logprob: -7.222437858581543
    8. ' [' → logprob: -7.722437858581543
    9. 'token' → logprob: -8.222437858581543
    10. ' acc' → logprob: -8.847437858581543

Token 371: ' depuis' (ID: 16277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.751655101776123
    2. '.append' → logprob: -1.001655101776123
    3. '=' → logprob: -3.251655101776123
    4. '           ' → logprob: -3.376655101776123
    5. ',' → logprob: -3.626655101776123
    6. '(acc' → logprob: -4.376655101776123
    7. 's' → logprob: -4.626655101776123
    8. 'acc' → logprob: -4.751655101776123
    9. '       ' → logprob: -5.001655101776123
    10. ' acc' → logprob: -5.501655101776123

Token 372: ' la' (ID: 557)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6968949437141418
    2. '0' → logprob: -1.696894884109497
    3. 'row' → logprob: -2.446894884109497
    4. 'the' → logprob: -2.696894884109497
    5. '[' → logprob: -2.946894884109497
    6. 'x' → logprob: -3.571894884109497
    7. '1' → logprob: -4.071895122528076
    8. 'n' → logprob: -4.446895122528076
    9. 'la' → logprob: -4.446895122528076
    10. 'left' → logprob: -4.946895122528076

Token 373: ' droite' (ID: 61428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47867026925086975
    2. 'fin' → logprob: -2.603670358657837
    3. 'position' → logprob: -2.728670358657837
    4. 'right' → logprob: -2.728670358657837
    5. 'end' → logprob: -2.853670358657837
    6. 'left' → logprob: -3.103670358657837
    7. 'begin' → logprob: -4.228670120239258
    8. 'dé' → logprob: -4.353670120239258
    9. 'dern' → logprob: -5.103670120239258
    10. 'previous' → logprob: -5.228670120239258

Token 374: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4798617660999298
    2. '           ' → logprob: -2.1048617362976074
    3. ',
' → logprob: -2.1048617362976074
    4. ' ,' → logprob: -3.3548617362976074
    5. '(acc' → logprob: -3.3548617362976074
    6. '[' → logprob: -4.604861736297607
    7. ']' → logprob: -4.854861736297607
    8. 'acc' → logprob: -4.979861736297607
    9. '       ' → logprob: -5.229861736297607
    10. ')' → logprob: -5.354861736297607

Token 375: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.001972765428945422
    2. ' la' → logprob: -7.001972675323486
    3. 'g' → logprob: -7.251972675323486
    4. 'le' → logprob: -8.501973152160645
    5. 'l' → logprob: -10.001973152160645
    6. '   ' → logprob: -10.251973152160645
    7. '0' → logprob: -10.626973152160645
    8. '_la' → logprob: -11.376973152160645
    9. 'lac' → logprob: -11.876973152160645
    10. 'left' → logprob: -12.626973152160645

Token 376: ' gauche' (ID: 58367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.002016548067331314
    2. ' gauche' → logprob: -6.252016544342041
    3. '_g' → logprob: -10.3770170211792
    4. '0' → logprob: -10.6270170211792
    5. 'dro' → logprob: -11.1270170211792
    6. ' ' → logprob: -12.2520170211792
    7. 'gau' → logprob: -12.7520170211792
    8. 'left' → logprob: -12.7520170211792
    9. '```' → logprob: -13.0020170211792
    10. '   ' → logprob: -13.2520170211792

Token 377: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17849786579608917
    2. '
' → logprob: -1.9284979104995728
    3. '       ' → logprob: -4.803497791290283
    4. ',' → logprob: -5.303497791290283
    5. ',
' → logprob: -6.178497791290283
    6. '            
' → logprob: -7.678497791290283
    7. 'acc' → logprob: -7.928497791290283
    8. ' acc' → logprob: -8.178498268127441
    9. '(acc' → logprob: -8.178498268127441
    10. ' (' → logprob: -8.553498268127441

Token 378: 'c' (ID: 66)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08354758471250534
    2. 'list' → logprob: -3.708547592163086
    3. 'rev' → logprob: -4.083547592163086
    4. ' acc' → logprob: -4.333547592163086
    5. ' accumulate' → logprob: -4.708547592163086
    6. ' list' → logprob: -5.083547592163086
    7. '           ' → logprob: -6.583547592163086
    8. ']' → logprob: -6.708547592163086
    9. ')' → logprob: -6.958547592163086
    10. 'reverse' → logprob: -7.333547592163086

Token 379: 'ôté' (ID: 186537)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.3834984302520752
    2. 'umul' → logprob: -2.383498430252075
    3. '[' → logprob: -2.508498430252075
    4. 'umsum' → logprob: -2.633498430252075
    5. '[n' → logprob: -2.758498430252075
    6. '=' → logprob: -2.883498430252075
    7. 'umulative' → logprob: -3.383498430252075
    8. 'urrent' → logprob: -3.383498430252075
    9. 'for' → logprob: -3.508498430252075
    10. 'ounter' → logprob: -4.008498191833496

Token 380: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2708892822265625
    2. ' gauche' → logprob: -1.6458892822265625
    3. 'n' → logprob: -1.8958892822265625
    4. ' droit' → logprob: -2.1458892822265625
    5. ' droite' → logprob: -2.5208892822265625
    6. ' n' → logprob: -3.1458892822265625
    7. 'g' → logprob: -3.3958892822265625
    8. 'dro' → logprob: -3.3958892822265625
    9. ' oppos' → logprob: -4.5208892822265625
    10. '   ' → logprob: -4.6458892822265625

Token 381: ' plus' (ID: 2932)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3593941926956177
    2. 'n' → logprob: -1.7343941926956177
    3. ']' → logprob: -1.8593941926956177
    4. 'plus' → logprob: -2.109394073486328
    5. 'rev' → logprob: -2.484394073486328
    6. ' plus' → logprob: -2.734394073486328
    7. ' n' → logprob: -3.234394073486328
    8. 'right' → logprob: -3.484394073486328
    9. ')' → logprob: -4.234394073486328
    10. '])' → logprob: -4.484394073486328

Token 382: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05104024335741997
    2. ' droit' → logprob: -3.6760401725769043
    3. 'à' → logprob: -4.051040172576904
    4. ' à' → logprob: -5.301040172576904
    5. '```' → logprob: -7.926040172576904
    6. 'right' → logprob: -8.051040649414062
    7. 'dro' → logprob: -8.051040649414062
    8. 'g' → logprob: -8.051040649414062
    9. ' ' → logprob: -8.926040649414062
    10. '_d' → logprob: -9.051040649414062

Token 383: ' droite' (ID: 61428)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.32760244607925415
    2. 'dro' → logprob: -1.4526023864746094
    3. ' droite' → logprob: -3.3276023864746094
    4. ' gauche' → logprob: -5.202602386474609
    5. 'right' → logprob: -5.952602386474609
    6. '```' → logprob: -7.452602386474609
    7. 'left' → logprob: -7.952602386474609
    8. 'd' → logprob: -8.32760238647461
    9. '1' → logprob: -9.45260238647461
    10. '0' → logprob: -10.20260238647461

Token 384: ' ==' (ID: 951)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7583901882171631
    2. ')' → logprob: -0.8833901882171631
    3. '           ' → logprob: -3.258390188217163
    4. ',' → logprob: -3.758390188217163
    5. ' )
' → logprob: -3.758390188217163
    6. ' )' → logprob: -4.008390426635742
    7. ')]' → logprob: -6.508390426635742
    8. ' ,' → logprob: -6.633390426635742
    9. ')]
' → logprob: -6.633390426635742
    10. ' avec' → logprob: -7.008390426635742

Token 385: ' début' (ID: 29589)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5624000430107117
    2. '0' → logprob: -1.8124001026153564
    3. ' n' → logprob: -2.3124001026153564
    4. ' -' → logprob: -3.4374001026153564
    5. '-' → logprob: -4.062399864196777
    6. 'x' → logprob: -4.187399864196777
    7. 'acc' → logprob: -4.312399864196777
    8. '1' → logprob: -4.562399864196777
    9. 'rev' → logprob: -4.687399864196777
    10. ' la' → logprob: -4.687399864196777

Token 386: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6901914477348328
    2. ' de' → logprob: -1.0651915073394775
    3. ')' → logprob: -2.3151915073394775
    4. ' of' → logprob: -4.315191268920898
    5. '])' → logprob: -4.315191268920898
    6. ']' → logprob: -4.815191268920898
    7. '   ' → logprob: -5.565191268920898
    8. ' )' → logprob: -6.065191268920898
    9. ' acc' → logprob: -6.065191268920898
    10. ' du' → logprob: -6.190191268920898

Token 387: ' l' (ID: 305)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0017355133313685656
    2. ' acc' → logprob: -6.376735687255859
    3. 'row' → logprob: -11.00173568725586
    4. 'rev' → logprob: -11.37673568725586
    5. '   ' → logprob: -13.87673568725586
    6. '(acc' → logprob: -13.87673568725586
    7. 'l' → logprob: -14.12673568725586
    8. '	acc' → logprob: -14.37673568725586
    9. 're' → logprob: -14.75173568725586
    10. 'la' → logprob: -15.00173568725586

Token 388: ''acc' (ID: 46331)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0016323324525728822
    2. ' acc' → logprob: -6.751632213592529
    3. 'list' → logprob: -8.751632690429688
    4. ''acc' → logprob: -9.126632690429688
    5. 'range' → logprob: -9.751632690429688
    6. 'liste' → logprob: -10.251632690429688
    7. 'ac' → logprob: -10.751632690429688
    8. '`' → logprob: -10.751632690429688
    9. 'row' → logprob: -11.001632690429688
    10. 'la' → logprob: -12.126632690429688

Token 389: 'umulate' (ID: 134636)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.40538933873176575
    2. 'umulate' → logprob: -1.1553893089294434
    3. 'u' → logprob: -5.280389308929443
    4. 'acc' → logprob: -5.405389308929443
    5. 'umulator' → logprob: -5.530389308929443
    6. ' accumulate' → logprob: -6.530389308929443
    7. 'cum' → logprob: -7.280389308929443
    8. 'umul' → logprob: -7.530389308929443
    9. ']' → logprob: -8.280389785766602
    10. ')' → logprob: -8.280389785766602

Token 390: 'ur' (ID: 330)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.062523603439331
    2. 'r' → logprob: -1.437523603439331
    3. 'acc' → logprob: -2.187523603439331
    4. 'tor' → logprob: -2.562523603439331
    5. '   ' → logprob: -2.812523603439331
    6. '(acc' → logprob: -3.312523603439331
    7. 'ion' → logprob: -3.687523603439331
    8. ']' → logprob: -3.687523603439331
    9. 'te' → logprob: -3.937523603439331
    10. '])' → logprob: -4.31252384185791

Token 391: ')
' (ID: 446)
  Prédit: ')]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.32920554280281067
    2. ')' → logprob: -2.7042055130004883
    3. ')]' → logprob: -3.0792055130004883
    4. ')
' → logprob: -3.3292055130004883
    5. ',' → logprob: -3.7042055130004883
    6. '[::-' → logprob: -3.7042055130004883
    7. ')])
' → logprob: -3.9542055130004883
    8. ')])' → logprob: -4.204205513000488
    9. ' )' → logprob: -4.454205513000488
    10. '])
' → logprob: -4.954205513000488

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006256531458348036
    2. '       ' → logprob: -6.006256580352783
    3. '
' → logprob: -6.256256580352783
    4. 'acc' → logprob: -6.506256580352783
    5. ' acc' → logprob: -8.256256103515625
    6. '   ' → logprob: -9.756256103515625
    7. '
' → logprob: -11.006256103515625
    8. ',' → logprob: -12.131256103515625
    9. '(acc' → logprob: -12.506256103515625
    10. '               ' → logprob: -12.756256103515625

Token 393: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' (adapté à ' acc') → logprob: -0.5820720791816711
    2. ' acc' → logprob: -1.4570720195770264
    3. '           ' → logprob: -1.5820720195770264
    4. '       ' → logprob: -6.3320722579956055
    5. '   ' → logprob: -7.5820722579956055
    6. 'row' → logprob: -8.957072257995605
    7. '	acc' → logprob: -9.457072257995605
    8. ' row' → logprob: -10.207072257995605
    9. 'ac' → logprob: -10.457072257995605
    10. ' accum' → logprob: -10.582072257995605

Token 394: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014203863975126296
    2. '.' → logprob: -8.875142097473145
    3. '.app' → logprob: -13.625142097473145
    4. ' .' → logprob: -14.500142097473145
    5. '[-' → logprob: -15.375142097473145
    6. '.ap' → logprob: -16.000141143798828
    7. '.extend' → logprob: -16.125141143798828
    8. '=' → logprob: -18.250141143798828
    9. 'append' → logprob: -18.375141143798828
    10. '   ' → logprob: -18.625141143798828

Token 395: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.00874209776520729
    2. '(acc' → logprob: -4.758742332458496
    3. '(' → logprob: -9.508742332458496
    4. '([' → logprob: -10.633742332458496
    5. '(tuple' → logprob: -11.133742332458496
    6. '(ac' → logprob: -11.633742332458496
    7. ' (' → logprob: -13.258742332458496
    8. '(next' → logprob: -13.383742332458496
    9. 'list' → logprob: -13.633742332458496
    10. '((' → logprob: -14.508742332458496

Token 396: '(re' (ID: 8178)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0006843181326985359
    2. 'acc' → logprob: -7.3756842613220215
    3. '(ac' → logprob: -10.00068473815918
    4. '(' → logprob: -11.87568473815918
    5. '(map' → logprob: -13.00068473815918
    6. ')' → logprob: -13.62568473815918
    7. '	acc' → logprob: -14.62568473815918
    8. 'ac' → logprob: -15.00068473815918
    9. '(re' → logprob: -15.25068473815918
    10. ' ' → logprob: -15.62568473815918

Token 397: 'versed' (ID: 76479)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -1.626946210861206
    2. 'c' → logprob: -1.876946210861206
    3. 'umulate' → logprob: -2.126946210861206
    4. 'versed' → logprob: -2.501946210861206
    5. 'acc' → logprob: -2.626946210861206
    6. 'nder' → logprob: -3.001946210861206
    7. 'cc' → logprob: -3.126946210861206
    8. 'cum' → logprob: -3.626946210861206
    9. '[' → logprob: -3.876946210861206
    10. 'x' → logprob: -4.001946449279785

Token 398: '(list' (ID: 13116)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.07935392111539841
    2. '(list' → logprob: -2.5793538093566895
    3. 'acc' → logprob: -8.579354286193848
    4. '(ac' → logprob: -9.329354286193848
    5. 'list' → logprob: -9.454354286193848
    6. '(tuple' → logprob: -9.454354286193848
    7. '(' → logprob: -10.704354286193848
    8. '((' → logprob: -12.329354286193848
    9. '	acc' → logprob: -14.329354286193848
    10. ')' → logprob: -14.579354286193848

Token 399: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.03807006776332855
    2. 'acc' → logprob: -3.2880699634552
    3. '(ac' → logprob: -11.788069725036621
    4. '(' → logprob: -11.788069725036621
    5. '	acc' → logprob: -12.288069725036621
    6. 'ac' → logprob: -12.538069725036621
    7. ' accumulate' → logprob: -12.913069725036621
    8. '(
' → logprob: -13.788069725036621
    9. ')' → logprob: -14.413069725036621
    10. '_acc' → logprob: -14.913069725036621

Token 400: 'umulate' (ID: 134636)
  Prédit: '(acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.030088193714618683
    2. 'acc' → logprob: -3.530088186264038
    3. '	acc' → logprob: -9.905088424682617
    4. '[' → logprob: -9.905088424682617
    5. '   ' → logprob: -10.030088424682617
    6. '[-' → logprob: -10.405088424682617
    7. 'from' → logprob: -10.405088424682617
    8. '))' → logprob: -10.905088424682617
    9. ' ' → logprob: -11.155088424682617
    10. '(ac' → logprob: -11.405088424682617

Token 401: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00015753143816255033
    2. '(re' → logprob: -9.250157356262207
    3. '(' → logprob: -10.500157356262207
    4. '(lambda' → logprob: -11.250157356262207
    5. 'row' → logprob: -12.250157356262207
    6. '(
' → logprob: -12.250157356262207
    7. '(reverse' → logprob: -12.875157356262207
    8. '([' → logprob: -13.000157356262207
    9. '((' → logprob: -13.000157356262207
    10. ' (' → logprob: -14.250157356262207

Token 402: ')))))
' (ID: 190633)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.10985284298658371
    2. '))))' → logprob: -2.6098527908325195
    3. '))' → logprob: -4.3598527908325195
    4. ',' → logprob: -4.6098527908325195
    5. '(re' → logprob: -6.4848527908325195
    6. ')[' → logprob: -6.8598527908325195
    7. '[' → logprob: -6.8598527908325195
    8. ')))))
' → logprob: -7.2348527908325195
    9. '(reverse' → logprob: -7.3598527908325195
    10. '))[' → logprob: -7.6098527908325195

Token 403: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5383654832839966
    2. '       ' → logprob: -0.9133654832839966
    3. 'return' (adapté à ' return') → logprob: -5.038365364074707
    4. '<|end|>' → logprob: -5.538365364074707
    5. '        
' → logprob: -6.913365364074707
    6. ' return' → logprob: -6.913365364074707
    7. '
' → logprob: -7.038365364074707
    8. '    
' → logprob: -7.163365364074707
    9. ')' → logprob: -8.038365364074707
    10. '	return' → logprob: -8.913365364074707

Token 405: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0019337546546012163
    2. ' acc' → logprob: -6.251933574676514
    3. '[' → logprob: -12.876934051513672
    4. '(acc' → logprob: -13.376934051513672
    5. '	acc' → logprob: -14.376934051513672
    6. '   ' → logprob: -15.376934051513672
    7. ' ' → logprob: -16.126934051513672
    8. ' [' → logprob: -16.876934051513672
    9. '  ' → logprob: -18.001934051513672
    10. '_acc' → logprob: -18.126934051513672

Token 406: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2381591647863388
    2. '<|end|>' → logprob: -1.7381591796875
    3. '
' → logprob: -4.2381591796875
    4. '    
' → logprob: -4.6131591796875
    5. 'n' → logprob: -5.6131591796875
    6. 'def' → logprob: -6.1131591796875
    7. '```' → logprob: -6.4881591796875
    8. ')' → logprob: -6.4881591796875
    9. '<|end|>' → logprob: -6.7381591796875
    10. '  
' → logprob: -8.1131591796875

Token 408: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01595284231007099
    2. 'rev' → logprob: -5.015953063964844
    3. 'white' → logprob: -6.265953063964844
    4. 'res' → logprob: -6.640953063964844
    5. 'acc' → logprob: -7.015953063964844
    6. '
' → logprob: -7.015953063964844
    7. 'def' → logprob: -7.265953063964844
    8. '    
' → logprob: -7.390953063964844
    9. 'n' → logprob: -7.890953063964844
    10. 'colors' → logprob: -8.015953063964844

Token 409: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20452478528022766
    2. 'rev' → logprob: -2.8295247554779053
    3. ' rev' → logprob: -3.9545247554779053
    4. ' white' → logprob: -4.079524993896484
    5. 'n' → logprob: -4.079524993896484
    6. 'white' → logprob: -4.204524993896484
    7. 'exist' → logprob: -4.329524993896484
    8. 'ex' → logprob: -4.829524993896484
    9. ' n' → logprob: -4.954524993896484
    10. ' acc' → logprob: -5.579524993896484

Token 410: ' élément' (ID: 99627)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.7191747426986694
    2. 'rev' → logprob: -2.469174861907959
    3. 'cou' → logprob: -2.469174861907959
    4. '_color' → logprob: -2.969174861907959
    5. '_c' → logprob: -3.094174861907959
    6. ' couleur' → logprob: -3.719174861907959
    7. '_' → logprob: -3.719174861907959
    8. '#' → logprob: -3.719174861907959
    9. 'c' → logprob: -3.969174861907959
    10. 'def' → logprob: -4.219174861907959

Token 411: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6098670363426208
    2. 'de' → logprob: -1.2348670959472656
    3. '=' → logprob: -2.6098670959472656
    4. ' =' → logprob: -2.9848670959472656
    5. '   ' → logprob: -3.8598670959472656
    6. ' of' → logprob: -5.234867095947266
    7. ' est' → logprob: -6.359867095947266
    8. 'for' → logprob: -6.359867095947266
    9. '_' → logprob: -6.484867095947266
    10. 'rev' → logprob: -6.609867095947266

Token 412: ' cost' (ID: 3097)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.026870619505643845
    2. '[' → logprob: -3.7768707275390625
    3. '[n' → logprob: -6.7768707275390625
    4. ' rev' → logprob: -6.9018707275390625
    5. '(re' → logprob: -7.7768707275390625
    6. 'range' → logprob: -8.526870727539062
    7. 'acc' → logprob: -9.151870727539062
    8. '(' → logprob: -9.276870727539062
    9. '(n' → logprob: -9.401870727539062
    10. '[[' → logprob: -9.651870727539062

Token 413: ' correspond' (ID: 11095)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011956769041717052
    2. ' =' → logprob: -5.261956691741943
    3. '=' → logprob: -5.761956691741943
    4. '_s' → logprob: -6.261956691741943
    5. ' s' → logprob: -6.886956691741943
    6. '_' → logprob: -8.636957168579102
    7. '[' → logprob: -9.136957168579102
    8. '[]' → logprob: -9.386957168579102
    9. '[s' → logprob: -9.761957168579102
    10. '=[]' → logprob: -9.761957168579102

Token 414: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8145697116851807
    2. '_' → logprob: -2.1895697116851807
    3. '   ' → logprob: -2.1895697116851807
    4. ' =' → logprob: -2.3145697116851807
    5. ' aux' → logprob: -2.4395697116851807
    6. 's' → logprob: -2.4395697116851807
    7. ' au' → logprob: -3.9395697116851807
    8. '[' → logprob: -4.064569473266602
    9. '=' → logprob: -4.814569473266602
    10. 'aux' → logprob: -5.939569473266602

Token 415: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12962795794010162
    2. '[n' → logprob: -2.2546279430389404
    3. '0' → logprob: -4.6296281814575195
    4. '[[' → logprob: -6.0046281814575195
    5. ' [' → logprob: -6.3796281814575195
    6. '[]' → logprob: -6.5046281814575195
    7. 'n' → logprob: -8.12962818145752
    8. '[i' → logprob: -8.50462818145752
    9. '[int' → logprob: -9.12962818145752
    10. '[len' → logprob: -9.25462818145752

Token 416: ' couleur' (ID: 48005)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.5063382387161255
    2. 'liste' → logprob: -1.7563382387161255
    3. '[' → logprob: -2.381338119506836
    4. '[[' → logprob: -3.256338119506836
    5. 'range' → logprob: -3.506338119506836
    6. 'position' → logprob: -4.631338119506836
    7. 'mat' → logprob: -5.006338119506836
    8. '   ' → logprob: -5.006338119506836
    9. 'list' → logprob: -5.506338119506836
    10. ' ligne' → logprob: -5.756338119506836

Token 417: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11045943200588226
    2. '   ' → logprob: -3.485459327697754
    3. '=' → logprob: -3.735459327697754
    4. 'cost' → logprob: -4.110459327697754
    5. 's' → logprob: -4.735459327697754
    6. '[' → logprob: -4.735459327697754
    7. '_cost' → logprob: -4.985459327697754
    8. '=[' → logprob: -5.985459327697754
    9. '_white' → logprob: -6.235459327697754
    10. '[]' → logprob: -7.360459327697754

Token 418: 'cost' (ID: 33457)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09639979153871536
    2. '0' → logprob: -2.9713997840881348
    3. ')' → logprob: -4.596399784088135
    4. 'for' → logprob: -4.846399784088135
    5. '   ' → logprob: -5.096399784088135
    6. '#' → logprob: -5.721399784088135
    7. 'rev' → logprob: -5.846399784088135
    8. '2' → logprob: -6.721399784088135
    9. '[
' → logprob: -6.846399784088135
    10. ']' → logprob: -6.971399784088135

Token 419: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6048418879508972
    2. ')' → logprob: -1.729841947555542
    3. 's' → logprob: -2.229841947555542
    4. ' =' → logprob: -2.604841947555542
    5. '   ' → logprob: -3.229841947555542
    6. '=' → logprob: -3.604841947555542
    7. '_' → logprob: -5.104841709136963
    8. ']' → logprob: -5.854841709136963
    9. ')[' → logprob: -5.979841709136963
    10. '[s' → logprob: -5.979841709136963

Token 420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006773276720196009
    2. '[' → logprob: -6.006773471832275
    3. '])' → logprob: -6.256773471832275
    4. ']' → logprob: -7.381773471832275
    5. '=' → logprob: -7.381773471832275
    6. 'c' → logprob: -8.256772994995117
    7. '][' → logprob: -8.631772994995117
    8. ' =' → logprob: -8.631772994995117
    9. ')' → logprob: -9.381772994995117
    10. '   ' → logprob: -9.631772994995117

Token 421: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7297651171684265
    2. '])' → logprob: -1.4797651767730713
    3. '][' → logprob: -1.6047651767730713
    4. '],' → logprob: -2.7297651767730713
    5. '])[' → logprob: -5.229764938354492
    6. '[' → logprob: -5.354764938354492
    7. ']),' → logprob: -5.854764938354492
    8. '   ' → logprob: -5.979764938354492
    9. ')' → logprob: -6.229764938354492
    10. ',' → logprob: -6.354764938354492

Token 422: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2003532648086548
    2. ']' → logprob: -1.7003532648086548
    3. ' =' → logprob: -1.8253532648086548
    4. ')' → logprob: -2.0753531455993652
    5. '[' → logprob: -2.7003531455993652
    6. '])' → logprob: -3.2003531455993652
    7. '][' → logprob: -3.2003531455993652
    8. '=' → logprob: -3.9503531455993652
    9. '   ' → logprob: -4.325353145599365
    10. '),' → logprob: -4.450353145599365

Token 423: ' blanc' (ID: 38083)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8013627529144287
    2. 'bl' → logprob: -1.5513627529144287
    3. 'rev' → logprob: -1.5513627529144287
    4. 'white' → logprob: -3.6763627529144287
    5. ' blanc' → logprob: -3.8013627529144287
    6. '[' → logprob: -3.8013627529144287
    7. ' ' → logprob: -4.676362991333008
    8. ' white' → logprob: -4.801362991333008
    9. 'les' → logprob: -4.801362991333008
    10. ' rev' → logprob: -4.926362991333008

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016848403960466385
    2. ')' → logprob: -5.641848564147949
    3. '),' → logprob: -5.766848564147949
    4. ' ,' → logprob: -5.891848564147949
    5. '   ' → logprob: -6.266848564147949
    6. '[' → logprob: -6.391848564147949
    7. ',
' → logprob: -6.641848564147949
    8. ' et' → logprob: -7.641848564147949
    9. ']' → logprob: -7.891848564147949
    10. '],' → logprob: -8.14184856414795

Token 425: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.22593390941619873
    2. ' cost' → logprob: -1.6009339094161987
    3. '   ' → logprob: -7.975934028625488
    4. '1' → logprob: -9.850934028625488
    5. '0' → logprob: -10.475934028625488
    6. '#' → logprob: -10.725934028625488
    7. '    ' → logprob: -10.725934028625488
    8. ')' → logprob: -11.600934028625488
    9. ' coût' → logprob: -11.725934028625488
    10. ' #' → logprob: -12.100934028625488

Token 426: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013077369658276439
    2. ')' → logprob: -7.751307964324951
    3. 's' → logprob: -7.876307964324951
    4. ']' → logprob: -9.126307487487793
    5. '][' → logprob: -9.376307487487793
    6. ',' → logprob: -9.626307487487793
    7. ')[' → logprob: -10.001307487487793
    8. '0' → logprob: -10.251307487487793
    9. ' [' → logprob: -10.501307487487793
    10. '])' → logprob: -10.626307487487793

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006024802569299936
    2. '0' → logprob: -7.6256022453308105
    3. '[' → logprob: -9.500602722167969
    4. '])' → logprob: -10.500602722167969
    5. ']' → logprob: -11.875602722167969
    6. '=' → logprob: -14.000602722167969
    7. ' ' → logprob: -14.250602722167969
    8. 'def' → logprob: -14.500602722167969
    9. '```' → logprob: -14.500602722167969
    10. '   ' → logprob: -14.750602722167969

Token 428: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4298812448978424
    2. ']' → logprob: -1.05488121509552
    3. '],' → logprob: -7.9298810958862305
    4. ')' → logprob: -8.42988109588623
    5. ']=' → logprob: -8.55488109588623
    6. '][' → logprob: -9.05488109588623
    7. '[' → logprob: -9.42988109588623
    8. ']):' → logprob: -9.92988109588623
    9. '])]' → logprob: -10.17988109588623
    10. ']):
' → logprob: -11.17988109588623

Token 429: ' pour' (ID: 1930)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.452301949262619
    2. '])' → logprob: -1.8273019790649414
    3. ')' → logprob: -2.0773019790649414
    4. '[' → logprob: -3.2023019790649414
    5. ']=' → logprob: -4.952301979064941
    6. ']):' → logprob: -5.202301979064941
    7. '=' → logprob: -5.827301979064941
    8. '):' → logprob: -5.827301979064941
    9. ' ]' → logprob: -5.952301979064941
    10. ' )' → logprob: -6.077301979064941

Token 430: ' noir' (ID: 49134)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.517657995223999
    2. 'no' → logprob: -1.142657995223999
    3. ' noir' → logprob: -3.392657995223999
    4. '0' → logprob: -4.267658233642578
    5. '1' → logprob: -4.892658233642578
    6. '[' → logprob: -4.892658233642578
    7. 'cost' → logprob: -5.142658233642578
    8. 'black' → logprob: -5.517658233642578
    9. ' no' → logprob: -6.142658233642578
    10. 'No' → logprob: -6.392658233642578

Token 431: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024642981588840485
    2. '])' → logprob: -4.2746429443359375
    3. '   ' → logprob: -5.3996429443359375
    4. ']' → logprob: -5.6496429443359375
    5. ',' → logprob: -6.7746429443359375
    6. ' )' → logprob: -7.8996429443359375
    7. '[' → logprob: -8.149642944335938
    8. ')]' → logprob: -8.524642944335938
    9. ')
' → logprob: -9.149642944335938
    10. ')])' → logprob: -9.649642944335938

Token 432: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16606396436691284
    2. ' cost' → logprob: -2.0410640239715576
    3. '   ' → logprob: -3.7910640239715576
    4. '
' → logprob: -8.041064262390137
    5. '```' → logprob: -10.166064262390137
    6. '[' → logprob: -10.416064262390137
    7. '_cost' → logprob: -10.791064262390137
    8. 'c' → logprob: -11.041064262390137
    9. '    
' → logprob: -11.166064262390137
    10. 'def' → logprob: -11.166064262390137

Token 433: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006340045481920242
    2. ' cost' → logprob: -5.131340026855469
    3. '   ' → logprob: -7.881340026855469
    4. '[' → logprob: -11.881340026855469
    5. 'color' → logprob: -12.006340026855469
    6. 'def' → logprob: -12.131340026855469
    7. '```' → logprob: -12.756340026855469
    8. 'acc' → logprob: -13.381340026855469
    9. '
' → logprob: -13.381340026855469
    10. ' ' → logprob: -13.506340026855469

Token 434: ' Ch' (ID: 1036)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0010144683765247464
    2. ' cost' → logprob: -7.126014232635498
    3. '   ' → logprob: -10.001014709472656
    4. '
' → logprob: -10.626014709472656
    5. 'color' → logprob: -10.626014709472656
    6. '[' → logprob: -10.626014709472656
    7. 'def' → logprob: -10.876014709472656
    8. 'for' → logprob: -11.126014709472656
    9. 'co' → logprob: -11.251014709472656
    10. 'acc' → logprob: -11.376014709472656

Token 435: 'acun' (ID: 141389)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.09312297403812408
    2. 'cost' → logprob: -2.718122959136963
    3. '_cost' → logprob: -5.593122959136963
    4. 'e' → logprob: -5.843122959136963
    5. 'ef' → logprob: -5.843122959136963
    6. 'est' → logprob: -6.093122959136963
    7. 'for' → logprob: -6.468122959136963
    8. 'o' → logprob: -6.718122959136963
    9. '#' → logprob: -6.718122959136963
    10. 'em' → logprob: -7.093122959136963

Token 436: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7054828405380249
    2. ' =' → logprob: -0.9554828405380249
    3. '[' → logprob: -2.9554829597473145
    4. '.append' → logprob: -4.0804829597473145
    5. 'des' → logprob: -4.4554829597473145
    6. '_c' → logprob: -4.7054829597473145
    7. 'de' → logprob: -5.2054829597473145
    8. ' de' → logprob: -5.7054829597473145
    9. '   ' → logprob: -5.8304829597473145
    10. ' des' → logprob: -5.8304829597473145

Token 437: ' une' (ID: 2463)
  Prédit: 'exist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exist' → logprob: -0.7339619994163513
    2. 'ex' → logprob: -1.108962059020996
    3. '[' → logprob: -1.733962059020996
    4. ' [' → logprob: -5.108962059020996
    5. '[]' → logprob: -6.483962059020996
    6. '   ' → logprob: -6.733962059020996
    7. ' existence' → logprob: -6.858962059020996
    8. '[[' → logprob: -7.483962059020996
    9. 'list' → logprob: -7.733962059020996
    10. ' ex' → logprob: -8.108962059020996

Token 438: ' table' (ID: 3293)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8764644861221313
    2. '[[' → logprob: -1.3764644861221313
    3. '[]' → logprob: -1.7514644861221313
    4. '[
' → logprob: -2.751464366912842
    5. 'list' → logprob: -3.751464366912842
    6. 'acc' → logprob: -3.876464366912842
    7. '[]
' → logprob: -4.126464366912842
    8. 'cost' → logprob: -4.626464366912842
    9. ']' → logprob: -5.251464366912842
    10. '[][]' → logprob: -5.751464366912842

Token 439: ' donnant' (ID: 127774)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.07122802734375
    2. ' de' → logprob: -1.69622802734375
    3. ' des' → logprob: -2.19622802734375
    4. ' =' → logprob: -2.32122802734375
    5. 'des' → logprob: -2.44622802734375
    6. '   ' → logprob: -2.94622802734375
    7. '=' → logprob: -3.07122802734375
    8. '[' → logprob: -3.57122802734375
    9. 'd' → logprob: -4.19622802734375
    10. '[]' → logprob: -5.32122802734375

Token 440: ' combien' (ID: 106648)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8960061073303223
    2. 'l' → logprob: -1.7710061073303223
    3. 'le' → logprob: -2.5210061073303223
    4. 'la' → logprob: -2.5210061073303223
    5. 'les' → logprob: -2.7710061073303223
    6. '   ' → logprob: -3.1460061073303223
    7. 'exist' → logprob: -3.6460061073303223
    8. ' la' → logprob: -4.396006107330322
    9. ' [' → logprob: -4.396006107330322
    10. '[n' → logprob: -4.521006107330322

Token 441: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7944691181182861
    2. ' de' → logprob: -0.9194691181182861
    3. '   ' → logprob: -1.9194691181182861
    4. 'd' → logprob: -6.794468879699707
    5. '  ' → logprob: -8.169468879699707
    6. '_de' → logprob: -8.169468879699707
    7. ' d' → logprob: -8.294468879699707
    8. ' ' → logprob: -8.794468879699707
    9. '[' → logprob: -9.044468879699707
    10. '    ' → logprob: -9.044468879699707

Token 442: ' bill' (ID: 6713)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bill' → logprob: -0.18919911980628967
    2. 'b' → logprob: -2.314199209213257
    3. ' bill' → logprob: -3.064199209213257
    4. 'cases' → logprob: -4.189198970794678
    5. 'positions' → logprob: -5.689198970794678
    6. 'm' → logprob: -6.064198970794678
    7. 'cou' → logprob: -6.564198970794678
    8. 'pas' → logprob: -7.189198970794678
    9. 'case' → logprob: -7.564198970794678
    10. 'bil' → logprob: -7.939198970794678

Token 443: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00961088016629219
    2. '[' → logprob: -5.009610652923584
    3. '   ' → logprob: -7.134610652923584
    4. 'e' → logprob: -7.509610652923584
    5. 'les' → logprob: -7.634610652923584
    6. 'ues' → logprob: -8.509611129760742
    7. 's' → logprob: -9.134611129760742
    8. '```' → logprob: -9.884611129760742
    9. '[[' → logprob: -9.884611129760742
    10. '[
' → logprob: -10.009611129760742

Token 444: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.3901441097259521
    2. ' de' → logprob: -1.6401441097259521
    3. 'de' → logprob: -1.8901441097259521
    4. 'à' → logprob: -2.390144109725952
    5. 'ont' → logprob: -2.640144109725952
    6. ' rest' → logprob: -3.265144109725952
    7. '[' → logprob: -3.515144109725952
    8. 'rest' → logprob: -3.640144109725952
    9. ' se' → logprob: -3.890144109725952
    10. 's' → logprob: -3.890144109725952

Token 445: ' cette' (ID: 7696)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5653253793716431
    2. 'cha' → logprob: -1.065325379371643
    3. 'la' → logprob: -3.4403252601623535
    4. 'ch' → logprob: -3.6903252601623535
    5. ' chaque' → logprob: -4.8153252601623535
    6. '[' → logprob: -4.9403252601623535
    7. 'une' → logprob: -6.1903252601623535
    8. '[c' → logprob: -6.1903252601623535
    9. 'rev' → logprob: -6.4403252601623535
    10. 'ce' → logprob: -6.8153252601623535

Token 446: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.013383971527218819
    2. ' couleur' → logprob: -5.138383865356445
    3. 'c' → logprob: -5.263383865356445
    4. '   ' → logprob: -6.388383865356445
    5. '#' → logprob: -8.763383865356445
    6. 'color' → logprob: -8.888383865356445
    7. ' ' → logprob: -9.388383865356445
    8. '
' → logprob: -10.513383865356445
    9. '```' → logprob: -10.888383865356445
    10. '  ' → logprob: -11.138383865356445

Token 447: ' sont' (ID: 5242)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.33321624994277954
    2. 's' → logprob: -1.8332161903381348
    3. ' se' → logprob: -2.4582161903381348
    4. 'à' → logprob: -4.458216190338135
    5. 'ont' → logprob: -5.083216190338135
    6. ' sont' → logprob: -5.333216190338135
    7. 'sur' → logprob: -5.583216190338135
    8. 'rest' → logprob: -5.833216190338135
    9. ' à' → logprob: -6.083216190338135
    10. 'plus' → logprob: -6.583216190338135

Token 448: ' à' (ID: 1221)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -1.4671553373336792
    2. ' présentes' → logprob: -1.4671553373336792
    3. 'plus' → logprob: -1.5921553373336792
    4. 'à' → logprob: -2.5921554565429688
    5. 'plac' → logprob: -3.2171554565429688
    6. ' plac' → logprob: -3.3421554565429688
    7. ' plus' → logprob: -3.3421554565429688
    8. ' rest' → logprob: -3.7171554565429688
    9. ' à' → logprob: -3.7171554565429688
    10. 'rest' → logprob: -4.092155456542969

Token 449: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.13946615159511566
    2. 'd' → logprob: -2.6394660472869873
    3. 'g' → logprob: -3.5144660472869873
    4. '[' → logprob: -4.639466285705566
    5. ' droite' → logprob: -5.264466285705566
    6. 'cha' → logprob: -5.264466285705566
    7. 'l' → logprob: -6.139466285705566
    8. 'c' → logprob: -6.139466285705566
    9. 'rev' → logprob: -7.389466285705566
    10. 'la' → logprob: -7.389466285705566

Token 450: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.787609875202179
    2. '   ' → logprob: -1.2876098155975342
    3. ' de' → logprob: -1.7876098155975342
    4. 'pour' → logprob: -3.787609815597534
    5. 'd' → logprob: -4.162610054016113
    6. 'des' → logprob: -4.287610054016113
    7. ',' → logprob: -4.537610054016113
    8. ' à' → logprob: -4.912610054016113
    9. ' pour' → logprob: -5.037610054016113
    10. 'sur' → logprob: -5.537610054016113

Token 451: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.1417810022830963
    2. ' chaque' → logprob: -2.6417810916900635
    3. 'ch' → logprob: -3.2667810916900635
    4. 'une' → logprob: -4.641780853271484
    5. 'la' → logprob: -5.516780853271484
    6. 'l' → logprob: -5.516780853271484
    7. 'each' → logprob: -6.641780853271484
    8. 'c' → logprob: -7.516780853271484
    9. 'position' → logprob: -8.141780853271484
    10. 'un' → logprob: -8.516780853271484

Token 452: ' index' (ID: 3472)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.513481080532074
    2. ' position' → logprob: -1.2634811401367188
    3. 'indice' → logprob: -2.8884811401367188
    4. 'case' → logprob: -3.6384811401367188
    5. 'pos' → logprob: -3.8884811401367188
    6. ' case' → logprob: -5.263481140136719
    7. ' indice' → logprob: -6.013481140136719
    8. '#' → logprob: -6.388481140136719
    9. 'index' → logprob: -6.763481140136719
    10. 'i' → logprob: -7.138481140136719

Token 453: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009513230063021183
    2. '.' → logprob: -6.2595133781433105
    3. ',' → logprob: -6.8845133781433105
    4. 'cost' → logprob: -7.2595133781433105
    5. ' =' → logprob: -7.3845133781433105
    6. ')' → logprob: -7.5095133781433105
    7. ' des' → logprob: -7.5095133781433105
    8. ']' → logprob: -7.6345133781433105
    9. '#' → logprob: -7.6345133781433105
    10. '       ' → logprob: -7.7595133781433105

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0965922549366951
    2. '#' → logprob: -2.4715921878814697
    3. ' #' → logprob: -5.721592426300049
    4. '       ' → logprob: -7.221592426300049
    5. '    ' → logprob: -7.346592426300049
    6. ' ce' → logprob: -7.846592426300049
    7. ' ' → logprob: -8.34659194946289
    8. ' et' → logprob: -8.47159194946289
    9. ' en' → logprob: -8.47159194946289
    10. '```' → logprob: -8.59659194946289

Token 455: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5240005254745483
    2. '   ' → logprob: -1.2740005254745483
    3. ' #' → logprob: -2.274000644683838
    4. ' ' → logprob: -5.524000644683838
    5. '0' → logprob: -6.024000644683838
    6. '}' → logprob: -6.024000644683838
    7. ']' → logprob: -6.274000644683838
    8. '    ' → logprob: -6.274000644683838
    9. ')' → logprob: -6.399000644683838
    10. '       ' → logprob: -6.524000644683838

Token 456: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2224605828523636
    2. '   ' → logprob: -1.9724606275558472
    3. ' #' → logprob: -3.3474605083465576
    4. 'pour' → logprob: -5.847460746765137
    5. 'rev' → logprob: -6.097460746765137
    6. '       ' → logprob: -6.347460746765137
    7. '[' → logprob: -6.472460746765137
    8. ' pour' → logprob: -6.597460746765137
    9. 'cost' → logprob: -6.722460746765137
    10. 'et' → logprob: -6.847460746765137

Token 457: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1549491286277771
    2. 'diff' → logprob: -3.654949188232422
    3. 'les' → logprob: -3.779949188232422
    4. ' chacune' → logprob: -4.279949188232422
    5. 'cha' → logprob: -4.404949188232422
    6. 'i' → logprob: -4.654949188232422
    7. ' les' → logprob: -4.654949188232422
    8. 'c' → logprob: -4.779949188232422
    9. 'ch' → logprob: -5.154949188232422
    10. 'each' → logprob: -5.404949188232422

Token 458: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1840163469314575
    2. 'ét' → logprob: -1.1840163469314575
    3. 'indice' → logprob: -2.184016227722168
    4. ' étape' → logprob: -3.309016227722168
    5. 'position' → logprob: -3.434016227722168
    6. 'pas' → logprob: -3.809016227722168
    7. 'k' → logprob: -3.934016227722168
    8. 'cho' → logprob: -4.059016227722168
    9. 'av' → logprob: -4.184016227722168
    10. 'it' → logprob: -4.559016227722168

Token 459: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6555894017219543
    2. ' d' → logprob: -1.9055893421173096
    3. '   ' → logprob: -2.0305893421173096
    4. 'de' → logprob: -2.2805893421173096
    5. 'd' → logprob: -2.9055893421173096
    6. ' of' → logprob: -4.655589580535889
    7. '    ' → logprob: -4.780589580535889
    8. '_de' → logprob: -5.655589580535889
    9. ' des' → logprob: -5.780589580535889
    10. ' ' → logprob: -5.905589580535889

Token 460: ' bill' (ID: 6713)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bill' → logprob: -0.5702120065689087
    2. 'b' → logprob: -1.1952120065689087
    3. ' bill' → logprob: -2.570211887359619
    4. 'cou' → logprob: -4.445211887359619
    5. 'bl' → logprob: -4.570211887359619
    6. 'm' → logprob: -5.195211887359619
    7. 'bou' → logprob: -5.320211887359619
    8. 'ball' → logprob: -6.195211887359619
    9. 'positions' → logprob: -6.320211887359619
    10. 'cases' → logprob: -6.445211887359619

Token 461: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.016074374318122864
    2. 'e' → logprob: -5.016074180603027
    3. 'les' → logprob: -5.516074180603027
    4. 'def' → logprob: -6.641074180603027
    5. '   ' → logprob: -7.641074180603027
    6. 'ues' → logprob: -8.266074180603027
    7. 'de' → logprob: -8.266074180603027
    8. 'illes' → logprob: -8.266074180603027
    9. '```' → logprob: -8.328574180603027
    10. 'ies' → logprob: -8.391074180603027

Token 462: ' déjà' (ID: 21229)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plac' → logprob: -1.331331491470337
    2. ' plac' → logprob: -1.831331491470337
    3. '   ' → logprob: -1.956331491470337
    4. 'dé' → logprob: -2.831331491470337
    5. '_' → logprob: -2.956331491470337
    6. 'trait' → logprob: -3.206331491470337
    7. ' placé' → logprob: -3.706331491470337
    8. ']' → logprob: -3.831331491470337
    9. ')' → logprob: -3.956331491470337
    10. 'ins' → logprob: -4.081331253051758

Token 463: ' prises' (ID: 97643)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.8003947734832764
    2. 'plac' → logprob: -1.4253947734832764
    3. 'prises' → logprob: -1.9253947734832764
    4. 'pris' → logprob: -2.6753947734832764
    5. 'cho' → logprob: -3.4253947734832764
    6. 'prise' → logprob: -4.0503950119018555
    7. 'pos' → logprob: -4.1753950119018555
    8. 'util' → logprob: -4.9253950119018555
    9. 'position' → logprob: -5.3003950119018555
    10. 'cons' → logprob: -5.3003950119018555

Token 464: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13229215145111084
    2. 'cost' → logprob: -2.2572922706604004
    3. ' cost' → logprob: -4.5072922706604
    4. '
' → logprob: -5.0072922706604
    5. 'def' → logprob: -8.132291793823242
    6. '#' → logprob: -8.257291793823242
    7. '    
' → logprob: -8.507291793823242
    8. ']' → logprob: -9.257291793823242
    9. ' =' → logprob: -9.257291793823242
    10. '[' → logprob: -9.382291793823242

Token 465: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.014849884435534477
    2. '   ' → logprob: -4.514849662780762
    3. ' cost' → logprob: -5.639849662780762
    4. '
' → logprob: -8.514849662780762
    5. '```' → logprob: -10.764849662780762
    6. '    
' → logprob: -11.389849662780762
    7. '(cost' → logprob: -13.264849662780762
    8. '_cost' → logprob: -13.389849662780762
    9. '-cost' → logprob: -14.014849662780762
    10. 'co' → logprob: -14.389849662780762

Token 466: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.014325805008411407
    2. '   ' → logprob: -4.8893256187438965
    3. ' cost' → logprob: -5.0143256187438965
    4. '
' → logprob: -10.139326095581055
    5. '```' → logprob: -11.639326095581055
    6. '    
' → logprob: -12.764326095581055
    7. '(cost' → logprob: -14.014326095581055
    8. '_cost' → logprob: -14.389326095581055
    9. '-cost' → logprob: -14.889326095581055
    10. 'color' → logprob: -15.514326095581055

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016218416392803192
    2. '=' → logprob: -4.141218185424805
    3. '[' → logprob: -9.516218185424805
    4. '   ' → logprob: -10.016218185424805
    5. '=[' → logprob: -10.391218185424805
    6. ',' → logprob: -10.766218185424805
    7. ' =[' → logprob: -11.516218185424805
    8. 's' → logprob: -14.391218185424805
    9. '=[[' → logprob: -14.391218185424805
    10. ']' → logprob: -14.641218185424805

Token 468: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03962622210383415
    2. ' [' → logprob: -3.289626121520996
    3. '[list' → logprob: -7.164626121520996
    4. 'exist' → logprob: -7.414626121520996
    5. 'ex' → logprob: -9.289626121520996
    6. ' existence' → logprob: -10.664626121520996
    7. '[
' → logprob: -11.289626121520996
    8. '   ' → logprob: -11.664626121520996
    9. '(ex' → logprob: -11.914626121520996
    10. '[List' → logprob: -12.164626121520996

Token 469: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00032497590291313827
    2. '(ex' → logprob: -8.125325202941895
    3. '(range' → logprob: -11.625325202941895
    4. '(' → logprob: -12.000325202941895
    5. '([' → logprob: -12.250325202941895
    6. 'map' → logprob: -12.375325202941895
    7. '()' → logprob: -12.500325202941895
    8. '   ' → logprob: -15.125325202941895
    9. '[' → logprob: -15.625325202941895
    10. '(zip' → logprob: -15.750325202941895

Token 470: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.00033391619217582047
    2. '(lambda' → logprob: -8.375333786010742
    3. 'exist' → logprob: -9.625333786010742
    4. '(
' → logprob: -11.125333786010742
    5. '(' → logprob: -11.500333786010742
    6. '   ' → logprob: -12.125333786010742
    7. ')' → logprob: -13.250333786010742
    8. ' (' → logprob: -13.500333786010742
    9. '	ex' → logprob: -13.750333786010742
    10. 'ex' → logprob: -14.125333786010742

Token 471: 'istence' (ID: 78521)
  Prédit: 'istence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'istence' → logprob: -1.3856492842023727e-06
    2. 'ist' → logprob: -14.250000953674316
    3. 'istance' → logprob: -15.500000953674316
    4. 'isting' → logprob: -15.875000953674316
    5. '```' → logprob: -16.500001907348633
    6. '(' → logprob: -16.625001907348633
    7. '[' → logprob: -16.750001907348633
    8. '_' → logprob: -17.250001907348633
    9. 'iste' → logprob: -18.000001907348633
    10. '**' → logprob: -18.125001907348633

Token 472: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -7.5649528298527e-05
    2. 'right' → logprob: -9.500075340270996
    3. ')_' → logprob: -14.875075340270996
    4. '_left' → logprob: -16.000076293945312
    5. '_' → logprob: -16.500076293945312
    6. 'Right' → logprob: -16.500076293945312
    7. ' right' → logprob: -17.250076293945312
    8. '_Right' → logprob: -17.250076293945312
    9. ')' → logprob: -17.750076293945312
    10. '_r' → logprob: -17.875076293945312

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005728095420636237
    2. ' ,' → logprob: -7.625572681427002
    3. ',re' → logprob: -10.00057315826416
    4. '   ' → logprob: -10.75057315826416
    5. '(re' → logprob: -12.00057315826416
    6. 'rev' → logprob: -12.37557315826416
    7. ',[' → logprob: -13.00057315826416
    8. ',
' → logprob: -13.50057315826416
    9. ',(' → logprob: -13.62557315826416
    10. '    ' → logprob: -14.37557315826416

Token 474: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.01277626771479845
    2. ' rev' → logprob: -4.3877763748168945
    3. '[' → logprob: -8.387776374816895
    4. '   ' → logprob: -10.762776374816895
    5. ' [' → logprob: -11.887776374816895
    6. 're' → logprob: -12.387776374816895
    7. 'reverse' → logprob: -13.137776374816895
    8. 'rep' → logprob: -14.137776374816895
    9. '.rev' → logprob: -14.262776374816895
    10. ' ' → logprob: -14.387776374816895

Token 475: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.246537173457909e-06
    2. '))
' → logprob: -13.125003814697266
    3. ' ))' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.500003814697266
    5. ')))' → logprob: -14.875003814697266
    6. '[' → logprob: -15.375003814697266
    7. '));' → logprob: -16.375003814697266
    8. '()))' → logprob: -16.500003814697266
    9. ' ' → logprob: -17.500003814697266
    10. '))[' → logprob: -17.875003814697266

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12803146243095398
    2. 'dp' → logprob: -2.3780314922332764
    3. '
' → logprob: -4.128031253814697
    4. 'def' → logprob: -6.128031253814697
    5. ' dp' → logprob: -6.253031253814697
    6. 'return' → logprob: -6.503031253814697
    7. '```' → logprob: -6.628031253814697
    8. 'res' → logprob: -7.253031253814697
    9. '    
' → logprob: -7.628031253814697
    10. 'result' → logprob: -8.128031730651855

Token 477: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02478150464594364
    2. 'res' → logprob: -4.649781703948975
    3. 'm' → logprob: -5.399781703948975
    4. '   ' → logprob: -5.524781703948975
    5. 'f' → logprob: -6.399781703948975
    6. 'result' → logprob: -7.149781703948975
    7. 'from' → logprob: -7.399781703948975
    8. 'n' → logprob: -7.524781703948975
    9. 'ans' → logprob: -7.899781703948975
    10. 'pos' → logprob: -8.024781227111816

Token 478: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012035924941301346
    2. 'from' → logprob: -6.012035846710205
    3. 'f' → logprob: -6.137035846710205
    4. 'm' → logprob: -6.762035846710205
    5. '#' → logprob: -6.887035846710205
    6. 'res' → logprob: -7.012035846710205
    7. 'memo' → logprob: -7.012035846710205
    8. '   ' → logprob: -7.387035846710205
    9. 'DP' → logprob: -7.762035846710205
    10. 'pos' → logprob: -7.762035846710205

Token 479: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.9940804839134216
    2. 'dp' → logprob: -1.6190805435180664
    3. 'cost' → logprob: -1.9940805435180664
    4. 'DP' → logprob: -2.4940805435180664
    5. '#' → logprob: -3.6190805435180664
    6. 'izing' → logprob: -3.8690805435180664
    7. '=' → logprob: -3.9940805435180664
    8. 'state' → logprob: -3.9940805435180664
    9. '_cost' → logprob: -4.119080543518066
    10. 'izer' → logprob: -4.244080543518066

Token 480: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37234535813331604
    2. '   ' → logprob: -1.7473453283309937
    3. ' dp' → logprob: -1.9973453283309937
    4. ' DP' → logprob: -7.997345447540283
    5. 'DP' → logprob: -8.622344970703125
    6. '	dp' → logprob: -9.747344970703125
    7. ' dist' → logprob: -9.872344970703125
    8. 'INF' → logprob: -10.247344970703125
    9. ' f' → logprob: -10.247344970703125
    10. ' =' → logprob: -10.372344970703125

Token 481: ' premier' (ID: 15506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0023487689904868603
    2. 'from' → logprob: -6.502348899841309
    3. 'INF' → logprob: -8.377348899841309
    4. 'memo' → logprob: -8.502348899841309
    5. 'DP' → logprob: -8.627348899841309
    6. 'import' → logprob: -9.877348899841309
    7. 'cost' → logprob: -10.502348899841309
    8. '#' → logprob: -10.627348899841309
    9. 'm' → logprob: -10.877348899841309
    10. 'd' → logprob: -11.002348899841309

Token 482: ' vect' (ID: 106052)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11339155584573746
    2. ' dp' → logprob: -2.238391637802124
    3. 'cost' → logprob: -8.988391876220703
    4. 'DP' → logprob: -9.113391876220703
    5. ' DP' → logprob: -9.488391876220703
    6. 'import' → logprob: -10.113391876220703
    7. '_dp' → logprob: -10.113391876220703
    8. 'd' → logprob: -10.488391876220703
    9. 'f' → logprob: -10.488391876220703
    10. ' cost' → logprob: -11.238391876220703

Token 483: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.1171012818813324
    2. 'or' → logprob: -2.2421011924743652
    3. '   ' → logprob: -6.242101192474365
    4. 'er' → logprob: -7.242101192474365
    5. 'ex' → logprob: -7.742101192474365
    6. 'ect' → logprob: -7.992101192474365
    7. 'ur' → logprob: -8.617101669311523
    8. ' =' → logprob: -9.117101669311523
    9. '=' → logprob: -9.117101669311523
    10. 'ec' → logprob: -9.867101669311523

Token 484: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5154641270637512
    2. '   ' → logprob: -1.7654640674591064
    3. ' dp' → logprob: -1.7654640674591064
    4. ' =' → logprob: -2.8904640674591064
    5. ',' → logprob: -7.1404643058776855
    6. '=' → logprob: -7.5154643058776855
    7. '_dp' → logprob: -7.5154643058776855
    8. 'DP' → logprob: -7.6404643058776855
    9. ' DP' → logprob: -7.7654643058776855
    10. 'cost' → logprob: -8.390463829040527

Token 485: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20078566670417786
    2. ' =' → logprob: -2.2007856369018555
    3. 'dp' → logprob: -2.7007856369018555
    4. ' dp' → logprob: -5.7007856369018555
    5. '=' → logprob: -8.325785636901855
    6. '	dp' → logprob: -8.700785636901855
    7. '_dp' → logprob: -9.200785636901855
    8. '[' → logprob: -9.575785636901855
    9. 'DP' → logprob: -10.200785636901855
    10. ',' → logprob: -10.325785636901855

Token 486: ' coût' (ID: 73109)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.040432412177324295
    2. '[' → logprob: -3.9154324531555176
    3. ' dp' → logprob: -4.290432453155518
    4. '   ' → logprob: -5.290432453155518
    5. ' [' → logprob: -7.540432453155518
    6. '[-' → logprob: -8.66543197631836
    7. '[(' → logprob: -9.16543197631836
    8. '[[' → logprob: -9.66543197631836
    9. 'import' → logprob: -10.91543197631836
    10. '{' → logprob: -11.29043197631836

Token 487: ' minimum' (ID: 11085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008003469556570053
    2. '   ' → logprob: -4.883003234863281
    3. '=' → logprob: -8.383003234863281
    4. 'dp' → logprob: -9.633003234863281
    5. 's' → logprob: -10.508003234863281
    6. '  ' → logprob: -11.133003234863281
    7. '_dp' → logprob: -11.258003234863281
    8. ' ' → logprob: -11.383003234863281
    9. '[' → logprob: -11.633003234863281
    10. '    ' → logprob: -11.758003234863281

Token 488: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25105610489845276
    2. '   ' → logprob: -1.6260560750961304
    3. 'dp' → logprob: -3.87605619430542
    4. '=' → logprob: -5.75105619430542
    5. ' dp' → logprob: -7.00105619430542
    6. '_dp' → logprob: -8.501055717468262
    7. ',' → logprob: -8.876055717468262
    8. 'import' → logprob: -10.376055717468262
    9. ' ' → logprob: -10.376055717468262
    10. '  ' → logprob: -11.126055717468262

Token 489: ' sélectionner' (ID: 188432)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49165889620780945
    2. '[' → logprob: -1.6166589260101318
    3. 'i' → logprob: -2.866658926010132
    4. ' [' → logprob: -3.241658926010132
    5. ' i' → logprob: -3.241658926010132
    6. ' ' → logprob: -3.366658926010132
    7. ' prendre' → logprob: -5.116658687591553
    8. 'prendre' → logprob: -5.741658687591553
    9. '(' → logprob: -6.241658687591553
    10. '[i' → logprob: -6.366658687591553

Token 490: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0887845903635025
    2. ' ' → logprob: -3.088784694671631
    3. 'k' → logprob: -4.463784694671631
    4. 'i' → logprob: -4.588784694671631
    5. ' i' → logprob: -4.963784694671631
    6. ' k' → logprob: -6.338784694671631
    7. 'j' → logprob: -6.588784694671631
    8. '   ' → logprob: -7.213784694671631
    9. 'le' → logprob: -7.213784694671631
    10. 'auc' → logprob: -7.213784694671631

Token 491: ' bill' (ID: 6713)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1118351221084595
    2. '0' → logprob: -1.2368351221084595
    3. 'j' → logprob: -1.7368351221084595
    4. 'k' → logprob: -1.8618351221084595
    5. ' i' → logprob: -3.61183500289917
    6. ' j' → logprob: -4.73683500289917
    7. ' k' → logprob: -5.23683500289917
    8. 'prem' → logprob: -5.86183500289917
    9. ' ' → logprob: -6.11183500289917
    10. '```' → logprob: -7.36183500289917

Token 492: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03478261083364487
    2. 'res' → logprob: -4.034782409667969
    3. 'les' → logprob: -4.784782409667969
    4. 'e' → logprob: -5.034782409667969
    5. 'ues' → logprob: -7.659782409667969
    6. '#' → logprob: -9.284782409667969
    7. '_' → logprob: -9.409782409667969
    8. '=' → logprob: -9.409782409667969
    9. '[' → logprob: -9.534782409667969
    10. 's' → logprob: -9.534782409667969

Token 493: ' no' (ID: 860)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27546194195747375
    2. '   ' → logprob: -1.5254619121551514
    3. 'dp' → logprob: -4.0254621505737305
    4. '[' → logprob: -6.2754621505737305
    5. '=' → logprob: -6.5254621505737305
    6. ' dp' → logprob: -7.2754621505737305
    7. '=[' → logprob: -8.15046215057373
    8. '_dp' → logprob: -8.65046215057373
    9. ' ' → logprob: -8.77546215057373
    10. 'de' → logprob: -9.15046215057373

Token 494: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.0058523546904325485
    2. 'ir' → logprob: -5.380852222442627
    3. '[' → logprob: -8.005852699279785
    4. 'ire' → logprob: -8.130852699279785
    5. '
' → logprob: -9.005852699279785
    6. '#' → logprob: -9.380852699279785
    7. '=' → logprob: -9.755852699279785
    8. '   ' → logprob: -10.130852699279785
    9. '

' → logprob: -10.130852699279785
    10. '__' → logprob: -10.755852699279785

Token 495: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8854348063468933
    2. '   ' → logprob: -1.010434865951538
    3. 'dp' → logprob: -1.635434865951538
    4. ' dp' → logprob: -3.885434865951538
    5. '[' → logprob: -5.135434627532959
    6. '=' → logprob: -6.760434627532959
    7. ',' → logprob: -8.510435104370117
    8. ' ' → logprob: -8.885435104370117
    9. '=[' → logprob: -9.135435104370117
    10. '_dp' → logprob: -9.385435104370117

Token 496: ' un' (ID: 537)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7125361561775208
    2. '[' → logprob: -0.9625361561775208
    3. 'rev' → logprob: -2.462536096572876
    4. 'la' → logprob: -3.712536096572876
    5. ' range' → logprob: -5.087536334991455
    6. '0' → logprob: -5.962536334991455
    7. ' la' → logprob: -6.337536334991455
    8. 'dp' → logprob: -6.462536334991455
    9. 'l' → logprob: -6.962536334991455
    10. '#' → logprob: -7.212536334991455

Token 497: ' certain' (ID: 4454)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.745267927646637
    2. 'range' → logprob: -1.1202678680419922
    3. ' range' → logprob: -1.8702678680419922
    4. ' [' → logprob: -4.870267868041992
    5. 'dp' → logprob: -5.120267868041992
    6. 'white' → logprob: -5.245267868041992
    7. '   ' → logprob: -5.870267868041992
    8. ' white' → logprob: -6.245267868041992
    9. 'rev' → logprob: -6.245267868041992
    10. 'line' → logprob: -6.245267868041992

Token 498: ' ordre' (ID: 103061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5215737819671631
    2. 'state' → logprob: -2.021573781967163
    3. ' range' → logprob: -2.271573781967163
    4. 'dp' → logprob: -3.021573781967163
    5. '```' → logprob: -3.021573781967163
    6. 'position' → logprob: -3.771573781967163
    7. '[' → logprob: -4.771574020385742
    8. ' state' → logprob: -5.146574020385742
    9. ' état' → logprob: -5.646574020385742
    10. '`' → logprob: -5.646574020385742

Token 499: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28730377554893494
    2. '   ' → logprob: -1.4123038053512573
    3. ' dp' → logprob: -5.412303924560547
    4. ' =' → logprob: -6.662303924560547
    5. '
' → logprob: -9.287303924560547
    6. '	dp' → logprob: -9.412303924560547
    7. ',' → logprob: -9.662303924560547
    8. '_dp' → logprob: -10.037303924560547
    9. '=' → logprob: -10.412303924560547
    10. '(dp' → logprob: -10.662303924560547

Token 500: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0802561342716217
    2. '   ' → logprob: -2.955256223678589
    3. ' dp' → logprob: -3.705256223678589
    4. '```' → logprob: -7.83025598526001
    5. '
' → logprob: -10.080256462097168
    6. '	dp' → logprob: -11.830256462097168
    7. '``' → logprob: -12.705256462097168
    8. '    
' → logprob: -12.830256462097168
    9. '`' → logprob: -13.330256462097168
    10. '[' → logprob: -13.455256462097168

Token 501: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018230600282549858
    2. ' dp' → logprob: -4.268230438232422
    3. '   ' → logprob: -5.518230438232422
    4. 'import' → logprob: -10.268230438232422
    5. '```' → logprob: -12.518230438232422
    6. 'from' → logprob: -12.643230438232422
    7. '	dp' → logprob: -13.268230438232422
    8. ' ' → logprob: -14.393230438232422
    9. ' from' → logprob: -14.643230438232422
    10. ' import' → logprob: -15.018230438232422

Token 502: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002944671141449362
    2. '   ' → logprob: -8.62529468536377
    3. 'INF' → logprob: -9.87529468536377
    4. 'import' → logprob: -10.62529468536377
    5. 'from' → logprob: -10.87529468536377
    6. ' dp' → logprob: -11.50029468536377
    7. 'inf' → logprob: -12.12529468536377
    8. 'prev' → logprob: -13.37529468536377
    9. '#' → logprob: -14.62529468536377
    10. 'max' → logprob: -14.87529468536377

Token 503: '[b' (ID: 40800)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004202343989163637
    2. '=' → logprob: -5.504202365875244
    3. '=[' → logprob: -9.379201889038086
    4. ' =[' → logprob: -10.379201889038086
    5. '[' → logprob: -13.004201889038086
    6. '0' → logprob: -13.129201889038086
    7. '=[[' → logprob: -13.879201889038086
    8. '   ' → logprob: -14.004201889038086
    9. ' ' → logprob: -14.504201889038086
    10. '=[]' → logprob: -14.879201889038086

Token 504: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2740766108036041
    2. 'w' → logprob: -2.1490767002105713
    3. '[' → logprob: -3.1490767002105713
    4. '0' → logprob: -3.2740767002105713
    5. 'l' → logprob: -4.274076461791992
    6. '_w' → logprob: -4.399076461791992
    7. ' =' → logprob: -4.774076461791992
    8. ' ]' → logprob: -6.649076461791992
    9. ']=' → logprob: -6.774076461791992
    10. 'lack' → logprob: -6.774076461791992

Token 505: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02100461535155773
    2. '=' → logprob: -3.8960046768188477
    3. '=[' → logprob: -7.896004676818848
    4. ' =[' → logprob: -9.896004676818848
    5. '[' → logprob: -10.646004676818848
    6. '   ' → logprob: -11.521004676818848
    7. ',' → logprob: -13.021004676818848
    8. '0' → logprob: -13.396004676818848
    9. ' ' → logprob: -14.521004676818848
    10. '=b' → logprob: -15.271004676818848

Token 506: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13120253384113312
    2. '0' → logprob: -2.756202459335327
    3. ' [' → logprob: -3.131202459335327
    4. '[b' → logprob: -4.881202697753906
    5. '[n' → logprob: -6.756202697753906
    6. ' ' → logprob: -6.881202697753906
    7. '   ' → logprob: -7.006202697753906
    8. 'b' → logprob: -7.006202697753906
    9. '{' → logprob: -7.131202697753906
    10. 'le' → logprob: -7.756202697753906

Token 507: ' coût' (ID: 73109)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6896156072616577
    2. '0' → logprob: -1.1896156072616577
    3. 'co' → logprob: -2.4396157264709473
    4. 'b' → logprob: -3.3146157264709473
    5. '[' → logprob: -3.6896157264709473
    6. 'nombre' → logprob: -4.689615726470947
    7. 'cost' → logprob: -5.064615726470947
    8. 'dict' → logprob: -5.189615726470947
    9. 'liste' → logprob: -5.439615726470947
    10. ' list' → logprob: -5.564615726470947

Token 508: ' minimum' (ID: 11085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42296504974365234
    2. '[' → logprob: -2.0479650497436523
    3. '=' → logprob: -2.5479650497436523
    4. '[b' → logprob: -2.9229650497436523
    5. '0' → logprob: -3.6729650497436523
    6. '   ' → logprob: -3.9229650497436523
    7. '=[' → logprob: -4.422965049743652
    8. ' [' → logprob: -5.172965049743652
    9. ' for' → logprob: -5.422965049743652
    10. ' pour' → logprob: -5.672965049743652

Token 509: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12028894573450089
    2. '   ' → logprob: -3.245288848876953
    3. '=' → logprob: -3.370288848876953
    4. ' pour' → logprob: -3.745288848876953
    5. 'for' → logprob: -4.870288848876953
    6. ' for' → logprob: -5.620288848876953
    7. '[' → logprob: -6.245288848876953
    8. '=[' → logprob: -6.745288848876953
    9. 'pour' → logprob: -6.995288848876953
    10. ',' → logprob: -8.995288848876953

Token 510: ' avoir' (ID: 16595)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05905470252037048
    2. ' b' → logprob: -2.9340546131134033
    3. ' choisir' → logprob: -6.809054851531982
    4. 'sé' → logprob: -7.809054851531982
    5. 'cho' → logprob: -7.934054851531982
    6. ' no' → logprob: -8.059054374694824
    7. ' sélectionner' → logprob: -8.059054374694824
    8. 'prendre' → logprob: -8.309054374694824
    9. 'no' → logprob: -8.434054374694824
    10. 'avoir' → logprob: -8.559054374694824

Token 511: ' traité' (ID: 160836)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11506971716880798
    2. ' b' → logprob: -2.240069627761841
    3. ' choisi' → logprob: -7.24006986618042
    4. ' pris' → logprob: -7.36506986618042
    5. ' sélection' → logprob: -7.86506986618042
    6. 'pris' → logprob: -8.615069389343262
    7. ' ' → logprob: -10.240069389343262
    8. 'exact' → logprob: -10.240069389343262
    9. ' exactement' → logprob: -10.365069389343262
    10. 'sé' → logprob: -10.615069389343262

Token 512: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3489925265312195
    2. ' b' → logprob: -1.2239925861358643
    3. ' blanc' → logprob: -8.598992347717285
    4. '```' → logprob: -9.848992347717285
    5. ' black' → logprob: -10.098992347717285
    6. ' ' → logprob: -10.348992347717285
    7. ' all' → logprob: -10.348992347717285
    8. '0' → logprob: -10.473992347717285
    9. ' white' → logprob: -10.598992347717285
    10. ' no' → logprob: -10.848992347717285

Token 513: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38968488574028015
    2. ' b' → logprob: -1.3896849155426025
    3. ' blancs' → logprob: -3.5146849155426025
    4. 'bl' → logprob: -4.389684677124023
    5. ' black' → logprob: -4.764684677124023
    6. ' no' → logprob: -4.889684677124023
    7. ' blanc' → logprob: -5.514684677124023
    8. ' white' → logprob: -6.014684677124023
    9. 'white' → logprob: -6.389684677124023
    10. 'no' → logprob: -6.389684677124023

Token 514: ' premières' (ID: 73562)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5655815005302429
    2. ' blancs' → logprob: -1.5655815601348877
    3. 'illes' → logprob: -3.6905815601348877
    4. ']' → logprob: -3.6905815601348877
    5. ',' → logprob: -3.8155815601348877
    6. ' no' → logprob: -3.9405815601348877
    7. ' blanc' → logprob: -4.190581321716309
    8. ' ' → logprob: -4.565581321716309
    9. 'lack' → logprob: -4.565581321716309
    10. ' ,' → logprob: -4.565581321716309

Token 515: ' bill' (ID: 6713)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0333144664764404
    2. ' blancs' → logprob: -1.1583144664764404
    3. 'bl' → logprob: -2.0333144664764404
    4. ' no' → logprob: -2.5333144664764404
    5. ' bl' → logprob: -3.5333144664764404
    6. ' _' → logprob: -4.0333147048950195
    7. ' white' → logprob: -4.2833147048950195
    8. 'no' → logprob: -4.4083147048950195
    9. ' noirs' → logprob: -4.7833147048950195
    10. ' blanc' → logprob: -4.9083147048950195

Token 516: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0829927995800972
    2. 'les' → logprob: -3.5829927921295166
    3. 'anc' → logprob: -3.7079927921295166
    4. 'anches' → logprob: -4.707993030548096
    5. 'an' → logprob: -5.707993030548096
    6. 'aches' → logprob: -5.832993030548096
    7. 'anes' → logprob: -5.957993030548096
    8. 'ues' → logprob: -6.207993030548096
    9. 'res' → logprob: -6.457993030548096
    10. '```' → logprob: -7.082993030548096

Token 517: ' no' (ID: 860)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0305745601654053
    2. '_' → logprob: -1.1555745601654053
    3. ' =' → logprob: -2.4055745601654053
    4. '_b' → logprob: -3.1555745601654053
    5. '   ' → logprob: -3.4055745601654053
    6. ' _' → logprob: -3.4055745601654053
    7. '_white' → logprob: -3.4055745601654053
    8. '_no' → logprob: -4.530574798583984
    9. '_bl' → logprob: -4.905574798583984
    10. ' no' → logprob: -4.905574798583984

Token 518: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.001979072345420718
    2. 'ir' → logprob: -6.251978874206543
    3. '
' → logprob: -11.501978874206543
    4. 'irs' → logprob: -11.751978874206543
    5. '   ' → logprob: -11.876978874206543
    6. 'irc' → logprob: -12.126978874206543
    7. '#' → logprob: -12.501978874206543
    8. 'ire' → logprob: -12.501978874206543
    9. '[' → logprob: -13.126978874206543
    10. 'i' → logprob: -13.251978874206543

Token 519: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012734961695969105
    2. '   ' → logprob: -4.637734889984131
    3. '=' → logprob: -5.887734889984131
    4. '[' → logprob: -9.887735366821289
    5. ',' → logprob: -10.262735366821289
    6. 'dp' → logprob: -10.387735366821289
    7. ' ' → logprob: -10.512735366821289
    8. '=[' → logprob: -11.262735366821289
    9. ']' → logprob: -11.262735366821289
    10. ' =[' → logprob: -11.762735366821289

Token 520: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14294777810573578
    2. '   ' → logprob: -2.1429476737976074
    3. ' dp' → logprob: -4.142947673797607
    4. '	dp' → logprob: -11.642948150634766
    5. '```' → logprob: -13.017948150634766
    6. '_dp' → logprob: -13.267948150634766
    7. ' ' → logprob: -13.267948150634766
    8. '  ' → logprob: -15.017948150634766
    9. '[' → logprob: -15.017948150634766
    10. '(dp' → logprob: -15.267948150634766

Token 521: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.003103565191850066
    2. '   ' → logprob: -6.003103733062744
    3. ' dp' → logprob: -7.378103733062744
    4. 'import' → logprob: -13.378103256225586
    5. '[' → logprob: -14.628103256225586
    6. '	dp' → logprob: -15.003103256225586
    7. 'from' → logprob: -15.253103256225586
    8. ' ' → logprob: -16.003103256225586
    9. '```' → logprob: -16.253103256225586
    10. '_dp' → logprob: -17.253103256225586

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001060675480403006
    2. '=' → logprob: -6.876060485839844
    3. ' =[' → logprob: -11.251060485839844
    4. '=[' → logprob: -11.376060485839844
    5. '[' → logprob: -13.001060485839844
    6. '   ' → logprob: -14.876060485839844
    7. ' ' → logprob: -15.126060485839844
    8. '0' → logprob: -15.376060485839844
    9. ',' → logprob: -15.751060485839844
    10. ')' → logprob: -16.126060485839844

Token 523: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011065270751714706
    2. ' [' → logprob: -4.511065483093262
    3. '{' → logprob: -11.511065483093262
    4. '[n' → logprob: -12.761065483093262
    5. '   ' → logprob: -13.761065483093262
    6. '[c' → logprob: -14.011065483093262
    7. '[min' → logprob: -15.011065483093262
    8. '[list' → logprob: -15.011065483093262
    9. '[-' → logprob: -15.386065483093262
    10. ' ' → logprob: -15.386065483093262

Token 524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017144508892670274
    2. 'float' → logprob: -6.37671422958374
    3. 'i' → logprob: -12.376714706420898
    4. '(' → logprob: -12.876714706420898
    5. ' ' → logprob: -13.251714706420898
    6. ' float' → logprob: -14.126714706420898
    7. '[' → logprob: -14.126714706420898
    8. 'int' → logprob: -14.376714706420898
    9. 'x' → logprob: -15.001714706420898
    10. '(float' → logprob: -15.126714706420898

Token 525: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011084247380495071
    2. ' ]' → logprob: -7.126108646392822
    3. ']+' → logprob: -8.751108169555664
    4. ']*(' → logprob: -9.876108169555664
    5. ' for' → logprob: -10.126108169555664
    6. ']*' → logprob: -10.751108169555664
    7. ' +' → logprob: -11.876108169555664
    8. '   ' → logprob: -11.876108169555664
    9. ' *' → logprob: -12.251108169555664
    10. '+' → logprob: -12.376108169555664

Token 526: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5568007826805115
    2. ']' → logprob: -1.6818008422851562
    3. ' *' → logprob: -2.9318008422851562
    4. '*(' → logprob: -2.9318008422851562
    5. ' for' → logprob: -3.0568008422851562
    6. '+' → logprob: -3.4318008422851562
    7. ']*(' → logprob: -4.181800842285156
    8. 'for' → logprob: -4.556800842285156
    9. '+[' → logprob: -4.806800842285156
    10. '*' → logprob: -4.931800842285156

Token 527: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002237447304651141
    2. ' [' → logprob: -6.502237319946289
    3. '[n' → logprob: -7.252237319946289
    4. '[b' → logprob: -11.377237319946289
    5. '[N' → logprob: -12.877237319946289
    6. '[int' → logprob: -13.127237319946289
    7. '[m' → logprob: -13.127237319946289
    8. '[list' → logprob: -14.252237319946289
    9. '[x' → logprob: -14.377237319946289
    10. '[in' → logprob: -14.502237319946289

Token 528: '(acc' (ID: 82668)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2488628625869751
    2. '(lambda' → logprob: -1.998862862586975
    3. '(range' → logprob: -2.6238627433776855
    4. '(float' → logprob: -5.7488627433776855
    5. '([' → logprob: -5.9988627433776855
    6. '(filter' → logprob: -6.3738627433776855
    7. '(it' → logprob: -6.9988627433776855
    8. '(in' → logprob: -7.1238627433776855
    9. '(' → logprob: -7.2488627433776855
    10. '(int' → logprob: -7.4988627433776855

Token 529: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0007678175461478531
    2. '(' → logprob: -8.250767707824707
    3. 'ulate' → logprob: -8.500767707824707
    4. 'om' → logprob: -9.375767707824707
    5. '[' → logprob: -9.875767707824707
    6. 'cum' → logprob: -10.375767707824707
    7. '([' → logprob: -10.625767707824707
    8. '(c' → logprob: -11.000767707824707
    9. 'c' → logprob: -11.250767707824707
    10. 'um' → logprob: -11.250767707824707

Token 530: '(c' (ID: 2410)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.7065144777297974
    2. '(cost' → logprob: -0.8315144777297974
    3. '([' → logprob: -3.331514358520508
    4. '(lambda' → logprob: -3.456514358520508
    5. '(' → logprob: -6.206514358520508
    6. '(re' → logprob: -6.706514358520508
    7. '((' → logprob: -7.956514358520508
    8. '(c' → logprob: -9.456514358520508
    9. '(row' → logprob: -9.456514358520508
    10. '(map' → logprob: -10.331514358520508

Token 531: '[y' (ID: 34551)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0013848782982677221
    2. '[' → logprob: -6.626384735107422
    3. ' ost' → logprob: -11.126384735107422
    4. '(' → logprob: -11.751384735107422
    5. 'cost' → logprob: -11.876384735107422
    6. '(cost' → logprob: -12.876384735107422
    7. '([' → logprob: -13.001384735107422
    8. 'o' → logprob: -13.126384735107422
    9. '(range' → logprob: -13.251384735107422
    10. 'os' → logprob: -13.626384735107422

Token 532: ']' (ID: 60)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.5561476349830627
    2. '[' → logprob: -0.9311476349830627
    3. '0' → logprob: -3.806147575378418
    4. '])' → logprob: -6.306147575378418
    5. '1' → logprob: -7.181147575378418
    6. '][' → logprob: -7.181147575378418
    7. 'rev' → logprob: -7.306147575378418
    8. 'o' → logprob: -7.431147575378418
    9. '=' → logprob: -7.431147575378418
    10. ']' → logprob: -7.556147575378418

Token 533: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01479185838252306
    2. ')' → logprob: -5.639791965484619
    3. '][' → logprob: -6.514791965484619
    4. '])' → logprob: -6.889791965484619
    5. '0' → logprob: -7.264791965484619
    6. 'rev' → logprob: -7.264791965484619
    7. ' [' → logprob: -7.639791965484619
    8. ')[' → logprob: -7.639791965484619
    9. '(' → logprob: -7.702291965484619
    10. '[-' → logprob: -7.764791965484619

Token 534: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4031907618045807
    2. ' y' → logprob: -1.7781907320022583
    3. 'b' → logprob: -2.653190851211548
    4. 'c' → logprob: -2.653190851211548
    5. ' c' → logprob: -4.778190612792969
    6. ' b' → logprob: -5.403190612792969
    7. 'cost' → logprob: -6.153190612792969
    8. '0' → logprob: -7.028190612792969
    9. 'dp' → logprob: -7.028190612792969
    10. 'x' → logprob: -7.403190612792969

Token 535: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5964058041572571
    2. 'in' → logprob: -0.8464058041572571
    3. 'y' → logprob: -4.596405982971191
    4. ' y' → logprob: -5.596405982971191
    5. '[' → logprob: -5.846405982971191
    6. 'c' → logprob: -6.721405982971191
    7. '0' → logprob: -7.221405982971191
    8. ')' → logprob: -7.721405982971191
    9. 'b' → logprob: -7.846405982971191
    10. 's' → logprob: -9.096405982971191

Token 536: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8355148434638977
    2. 'y' → logprob: -1.585514783859253
    3. ' in' → logprob: -2.085514783859253
    4. 'in' → logprob: -2.210514783859253
    5. 'b' → logprob: -2.460514783859253
    6. ' y' → logprob: -3.835514783859253
    7. 'x' → logprob: -4.460515022277832
    8. ' c' → logprob: -5.210515022277832
    9. ' b' → logprob: -7.085515022277832
    10. '0' → logprob: -7.085515022277832

Token 537: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2526392638683319
    2. ' in' → logprob: -1.5026392936706543
    3. ')' → logprob: -8.502638816833496
    4. '[' → logprob: -8.877638816833496
    5. 's' → logprob: -9.377638816833496
    6. 'y' → logprob: -9.627638816833496
    7. '_in' → logprob: -10.627638816833496
    8. ',' → logprob: -10.877638816833496
    9. 'n' → logprob: -11.315138816833496
    10. '0' → logprob: -11.440138816833496

Token 538: ' zip' (ID: 16216)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.1665559560060501
    2. ' enumerate' → logprob: -2.041555881500244
    3. '[(' → logprob: -3.916555881500244
    4. 'zip' → logprob: -6.791555881500244
    5. 'cost' → logprob: -7.416555881500244
    6. '[' → logprob: -7.416555881500244
    7. 'rev' → logprob: -7.541555881500244
    8. ' zip' → logprob: -8.166556358337402
    9. '```' → logprob: -9.166556358337402
    10. ' [(' → logprob: -9.291556358337402

Token 539: '(re' (ID: 8178)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -1.1396222114562988
    2. '[' → logprob: -1.2646222114562988
    3. 'range' → logprob: -1.5146222114562988
    4. '([' → logprob: -2.889622211456299
    5. ' range' → logprob: -2.889622211456299
    6. '(' → logprob: -3.639622211456299
    7. '(range' → logprob: -3.764622211456299
    8. ' rev' → logprob: -5.764622211456299
    9. ' (' → logprob: -6.264622211456299
    10. ' enumerate' → logprob: -6.389622211456299

Token 540: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.539801688631997e-05
    2. '[' → logprob: -10.625065803527832
    3. '[v' → logprob: -12.312565803527832
    4. 'q' → logprob: -12.375065803527832
    5. 'c' → logprob: -12.437565803527832
    6. 'vq' → logprob: -12.625065803527832
    7. 'p' → logprob: -12.812565803527832
    8. '[[' → logprob: -12.875065803527832
    9. 'verse' → logprob: -13.312565803527832
    10. ' v' → logprob: -13.375065803527832

Token 541: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003005464968737215
    2. '[[' → logprob: -8.500300407409668
    3. 'range' → logprob: -11.250300407409668
    4. ')' → logprob: -11.250300407409668
    5. ')[' → logprob: -11.500300407409668
    6. 's' → logprob: -12.000300407409668
    7. '([' → logprob: -12.000300407409668
    8. '[
' → logprob: -12.250300407409668
    9. ',' → logprob: -12.437800407409668
    10. ',[' → logprob: -12.500300407409668

Token 542: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10363256931304932
    2. 'range' → logprob: -2.3536324501037598
    3. '(' → logprob: -6.10363245010376
    4. ' range' → logprob: -7.22863245010376
    5. '(range' → logprob: -8.353632926940918
    6. '([' → logprob: -9.478632926940918
    7. '[[' → logprob: -10.228632926940918
    8. '0' → logprob: -10.728632926940918
    9. ' [' → logprob: -10.853632926940918
    10. ')' → logprob: -11.103632926940918

Token 543: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18402564525604248
    2. ',' → logprob: -2.059025764465332
    3. ',[' → logprob: -3.684025764465332
    4. '],[' → logprob: -5.184025764465332
    5. '][' → logprob: -5.309025764465332
    6. ' ,' → logprob: -6.934025764465332
    7. '],' → logprob: -7.434025764465332
    8. '])' → logprob: -7.934025764465332
    9. '   ' → logprob: -8.059025764465332
    10. 'range' → logprob: -8.309025764465332

Token 544: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.0493303537368774
    2. '[' → logprob: -1.6743303537368774
    3. 'range' → logprob: -1.6743303537368774
    4. 'rev' → logprob: -1.6743303537368774
    5. ' cost' → logprob: -2.799330234527588
    6. ' range' → logprob: -4.049330234527588
    7. '   ' → logprob: -5.549330234527588
    8. ' rev' → logprob: -6.299330234527588
    9. ' [' → logprob: -6.799330234527588
    10. 're' → logprob: -7.799330234527588

Token 545: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.758300438988954e-05
    2. ')' → logprob: -10.125097274780273
    3. '))' → logprob: -11.250097274780273
    4. ')])' → logprob: -11.375097274780273
    5. ')))' → logprob: -11.500097274780273
    6. ')[' → logprob: -12.625097274780273
    7. '[
' → logprob: -12.750097274780273
    8. 's' → logprob: -13.125097274780273
    9. ')][' → logprob: -13.125097274780273
    10. '))[' → logprob: -13.250097274780273

Token 546: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40985479950904846
    2. '1' → logprob: -1.784854769706726
    3. '[' → logprob: -1.784854769706726
    4. '][' → logprob: -8.659854888916016
    5. ' ' → logprob: -9.534854888916016
    6. '   ' → logprob: -9.784854888916016
    7. '])' → logprob: -10.034854888916016
    8. ']' → logprob: -10.284854888916016
    9. '2' → logprob: -10.534854888916016
    10. ')' → logprob: -10.659854888916016

Token 547: ']))' (ID: 20259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9777602553367615
    2. ']))' → logprob: -1.8527603149414062
    3. '])' → logprob: -2.4777603149414062
    4. '])))' → logprob: -2.4777603149414062
    5. ')]' → logprob: -2.6027603149414062
    6. '][' → logprob: -2.6027603149414062
    7. ')][' → logprob: -3.3527603149414062
    8. ')' → logprob: -3.6027603149414062
    9. ')[' → logprob: -3.6027603149414062
    10. ')])' → logprob: -3.8527603149414062

Token 548: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5348180532455444
    2. ')' → logprob: -0.9098180532455444
    3. ',' → logprob: -5.409818172454834
    4. '[' → logprob: -6.159818172454834
    5. ')))' → logprob: -6.409818172454834
    6. '[::-' → logprob: -7.284818172454834
    7. '   ' → logprob: -7.784818172454834
    8. ')]' → logprob: -8.159817695617676
    9. '[:-' → logprob: -8.284817695617676
    10. '])' → logprob: -8.284817695617676

Token 549: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4373866021633148
    2. '   ' → logprob: -1.8123866319656372
    3. '[' → logprob: -2.4373865127563477
    4. '[::-' → logprob: -3.1873865127563477
    5. '(' → logprob: -3.9373865127563477
    6. '(n' → logprob: -4.687386512756348
    7. ',' → logprob: -4.812386512756348
    8. '[n' → logprob: -5.562386512756348
    9. '[:]' → logprob: -6.187386512756348
    10. '[:' → logprob: -6.312386512756348

Token 550: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21310871839523315
    2. ')' → logprob: -2.088108777999878
    3. '(' → logprob: -3.088108777999878
    4. ' ' → logprob: -4.588108539581299
    5. '   ' → logprob: -5.588108539581299
    6. 'def' → logprob: -6.713108539581299
    7. '[
' → logprob: -6.963108539581299
    8. ',' → logprob: -7.588108539581299
    9. '+' → logprob: -7.588108539581299
    10. ' (' → logprob: -7.713108539581299

Token 551: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8994980454444885
    2. 'for' → logprob: -1.5244979858398438
    3. ' for' → logprob: -1.7744979858398438
    4. ' dp' → logprob: -2.6494979858398438
    5. 'b' → logprob: -4.024497985839844
    6. '   ' → logprob: -4.149497985839844
    7. 'm' → logprob: -4.399497985839844
    8. 'def' → logprob: -4.399497985839844
    9. 'white' → logprob: -4.649497985839844
    10. ' white' → logprob: -4.649497985839844

Token 552: ' traite' (ID: 180696)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5294071435928345
    2. 'for' → logprob: -0.9044071435928345
    3. '   ' → logprob: -5.154407024383545
    4. ' =' → logprob: -8.529407501220703
    5. '	for' → logprob: -9.279407501220703
    6. '=' → logprob: -9.654407501220703
    7. ')' → logprob: -10.529407501220703
    8. '[' → logprob: -10.779407501220703
    9. 'def' → logprob: -11.154407501220703
    10. ' ' → logprob: -11.279407501220703

Token 553: ' ensuite' (ID: 39713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04434514790773392
    2. 'for' → logprob: -3.7943451404571533
    3. ' range' → logprob: -4.669345378875732
    4. '   ' → logprob: -5.919345378875732
    5. ' white' → logprob: -5.919345378875732
    6. ' n' → logprob: -6.169345378875732
    7. 'n' → logprob: -6.919345378875732
    8. 'range' → logprob: -7.044345378875732
    9. 'rev' → logprob: -7.919345378875732
    10. ' des' → logprob: -8.294344902038574

Token 554: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5085962414741516
    2. ' les' → logprob: -1.5085961818695068
    3. 'for' → logprob: -2.383596181869507
    4. '   ' → logprob: -3.758596181869507
    5. ' white' → logprob: -4.383596420288086
    6. ' des' → logprob: -4.508596420288086
    7. ' the' → logprob: -4.758596420288086
    8. ' la' → logprob: -5.008596420288086
    9. 'def' → logprob: -5.883596420288086
    10. '[' → logprob: -6.008596420288086

Token 555: ' bill' (ID: 6713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2889082133769989
    2. 'for' → logprob: -2.0389082431793213
    3. ' range' → logprob: -2.2889082431793213
    4. 'range' → logprob: -4.788908004760742
    5. 'rev' → logprob: -5.288908004760742
    6. ' white' → logprob: -5.913908004760742
    7. ' rev' → logprob: -6.913908004760742
    8. 'n' → logprob: -7.163908004760742
    9. '[' → logprob: -7.913908004760742
    10. ' n' → logprob: -8.288908004760742

Token 556: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.17739345133304596
    2. 'bl' → logprob: -2.9273934364318848
    3. 'les' → logprob: -3.0523934364318848
    4. '[' → logprob: -4.427393436431885
    5. '   ' → logprob: -4.552393436431885
    6. '```' → logprob: -5.052393436431885
    7. 'anches' → logprob: -5.177393436431885
    8. 'iques' → logprob: -5.177393436431885
    9. '_bl' → logprob: -5.927393436431885
    10. 'ues' → logprob: -5.927393436431885

Token 557: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.06927549839019775
    2. ' bl' → logprob: -3.944275379180908
    3. '[' → logprob: -4.069275379180908
    4. '   ' → logprob: -4.444275379180908
    5. ' no' → logprob: -5.444275379180908
    6. ' blancs' → logprob: -5.694275379180908
    7. 'b' → logprob: -5.944275379180908
    8. 'for' → logprob: -6.569275379180908
    9. ' for' → logprob: -6.694275379180908
    10. ' white' → logprob: -7.069275379180908

Token 558: 'anches' (ID: 64769)
  Prédit: 'anches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anches' → logprob: -0.020145321264863014
    2. 'anc' → logprob: -4.270145416259766
    3. 'an' → logprob: -5.895145416259766
    4. '[' → logprob: -7.395145416259766
    5. '_' → logprob: -7.770145416259766
    6. '```' → logprob: -8.020145416259766
    7. 'a' → logprob: -8.145145416259766
    8. '#' → logprob: -8.395145416259766
    9. 'aches' → logprob: -8.520145416259766
    10. 'anche' → logprob: -8.645145416259766

Token 559: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05581878125667572
    2. ' for' → logprob: -3.180818796157837
    3. 'for' → logprob: -4.430818557739258
    4. ':' → logprob: -7.805818557739258
    5. ',' → logprob: -9.055818557739258
    6. '    
' → logprob: -9.180818557739258
    7. '```' → logprob: -10.180818557739258
    8. '[' → logprob: -10.305818557739258
    9. '
' → logprob: -10.555818557739258
    10. '	for' → logprob: -10.930818557739258

Token 560: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5019986629486084
    2. ' for' → logprob: -1.6269986629486084
    3. '   ' → logprob: -3.5019986629486084
    4. ' suivante' → logprob: -3.7519986629486084
    5. 'suite' → logprob: -3.7519986629486084
    6. ' suite' → logprob: -3.8769986629486084
    7. ' pour' → logprob: -4.2519989013671875
    8. '+' → logprob: -4.5019989013671875
    9. ' fois' → logprob: -4.6269989013671875
    10. '[' → logprob: -4.8769989013671875

Token 561: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.4798610210418701
    2. '1' → logprob: -1.8548610210418701
    3. 'pe' → logprob: -1.8548610210418701
    4. '[' → logprob: -1.8548610210418701
    5. 'part' → logprob: -1.9798610210418701
    6. '#' → logprob: -3.97986102104187
    7. 'trait' → logprob: -4.104861259460449
    8. 'prendre' → logprob: -4.604861259460449
    9. 'aj' → logprob: -4.729861259460449
    10. '[i' → logprob: -4.854861259460449

Token 562: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1449626386165619
    2. ' for' → logprob: -2.2699625492095947
    3. 'for' → logprob: -3.6449625492095947
    4. ':' → logprob: -5.644962787628174
    5. ',' → logprob: -6.519962787628174
    6. '	for' → logprob: -9.019962310791016
    7. '.' → logprob: -9.269962310791016
    8. '  ' → logprob: -9.769962310791016
    9. '```' → logprob: -9.769962310791016
    10. '<|end|>' → logprob: -9.894962310791016

Token 563: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7404137849807739
    2. '   ' → logprob: -1.115413784980774
    3. 'for' → logprob: -2.4904136657714844
    4. '[' → logprob: -2.6154136657714844
    5. ',' → logprob: -4.865413665771484
    6. '```' → logprob: -4.865413665771484
    7. '\' → logprob: -4.990413665771484
    8. 'dp' → logprob: -5.865413665771484
    9. ' ' → logprob: -6.365413665771484
    10. ':' → logprob: -6.365413665771484

Token 564: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4492919445037842
    2. 'for' (adapté à ' for') → logprob: -1.1992919445037842
    3. '   ' → logprob: -2.824291944503784
    4. '
' → logprob: -7.949292182922363
    5. 'dp' → logprob: -9.074292182922363
    6. '[' → logprob: -9.199292182922363
    7. 'n' → logprob: -9.199292182922363
    8. '    
' → logprob: -9.324292182922363
    9. ' white' → logprob: -9.449292182922363
    10. '```' → logprob: -9.574292182922363

Token 565: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7636382579803467
    2. 'i' → logprob: -1.3886382579803467
    3. ' i' → logprob: -2.2636382579803467
    4. 'w' → logprob: -2.5136382579803467
    5. ' a' → logprob: -3.1386382579803467
    6. ' w' → logprob: -3.6386382579803467
    7. 'b' → logprob: -4.013638496398926
    8. ' b' → logprob: -4.888638496398926
    9. '_' → logprob: -7.013638496398926
    10. '_w' → logprob: -7.763638496398926

Token 566: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03011295385658741
    2. 'in' → logprob: -3.5301129817962646
    3. ',' → logprob: -8.030113220214844
    4. '_in' → logprob: -11.780113220214844
    5. 's' → logprob: -12.155113220214844
    6. 'range' → logprob: -12.530113220214844
    7. ' ' → logprob: -12.655113220214844
    8. ' ,' → logprob: -12.905113220214844
    9. '0' → logprob: -13.405113220214844
    10. '_' → logprob: -13.405113220214844

Token 567: ' cw' (ID: 72592)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6725786328315735
    2. 'c' → logprob: -1.4225785732269287
    3. 'b' → logprob: -2.2975785732269287
    4. 'w' → logprob: -2.5475785732269287
    5. ' y' → logprob: -4.047578811645508
    6. 'cost' → logprob: -4.172578811645508
    7. 'x' → logprob: -5.297578811645508
    8. ' c' → logprob: -5.422578811645508
    9. '(' → logprob: -5.547578811645508
    10. ' b' → logprob: -5.922578811645508

Token 568: '0' (ID: 15)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006408277899026871
    2. 'in' → logprob: -5.131408214569092
    3. ',' → logprob: -8.00640869140625
    4. ' ' → logprob: -10.13140869140625
    5. '   ' → logprob: -10.75640869140625
    6. '_' → logprob: -11.25640869140625
    7. ')' → logprob: -11.50640869140625
    8. 'c' → logprob: -11.63140869140625
    9. '[' → logprob: -11.88140869140625
    10. 'n' → logprob: -12.00640869140625

Token 569: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023329101502895355
    2. 'in' → logprob: -3.773329019546509
    3. ',' → logprob: -10.02332878112793
    4. ')' → logprob: -10.89832878112793
    5. ' ' → logprob: -12.64832878112793
    6. 'x' → logprob: -13.02332878112793
    7. '_in' → logprob: -13.14832878112793
    8. ']' → logprob: -13.27332878112793
    9. '0' → logprob: -13.64832878112793
    10. '_' → logprob: -13.89832878112793

Token 570: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.03674568980932236
    2. 'c' → logprob: -3.78674578666687
    3. ' cw' → logprob: -5.911745548248291
    4. 'cost' → logprob: -6.161745548248291
    5. 'cb' → logprob: -6.411745548248291
    6. 'cs' → logprob: -6.536745548248291
    7. 'cc' → logprob: -6.911745548248291
    8. 'in' → logprob: -7.161745548248291
    9. 'cp' → logprob: -7.536745548248291
    10. 'cx' → logprob: -7.661745548248291

Token 571: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3405250310897827
    2. 'in' → logprob: -2.0905251502990723
    3. '1' → logprob: -2.5905251502990723
    4. ' in' → logprob: -2.7155251502990723
    5. ',' → logprob: -4.090525150299072
    6. '[' → logprob: -5.340525150299072
    7. '=' → logprob: -6.590525150299072
    8. '2' → logprob: -8.590524673461914
    9. 'c' → logprob: -8.965524673461914
    10. 'x' → logprob: -8.965524673461914

Token 572: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6962289214134216
    2. ' in' → logprob: -0.6962289214134216
    3. ',' → logprob: -5.821228981018066
    4. '   ' → logprob: -9.946228981018066
    5. ')' → logprob: -11.446228981018066
    6. 'b' → logprob: -11.946228981018066
    7. '_' → logprob: -12.071228981018066
    8. '```' → logprob: -12.321228981018066
    9. '_in' → logprob: -12.571228981018066
    10. ' ' → logprob: -12.571228981018066

Token 573: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.2016427218914032
    2. ' zip' → logprob: -1.7016427516937256
    3. '   ' → logprob: -8.951642990112305
    4. '(zip' → logprob: -9.701642990112305
    5. 'rev' → logprob: -10.951642990112305
    6. 'enumer' → logprob: -11.076642990112305
    7. ' ' → logprob: -13.451642990112305
    8. 're' → logprob: -13.951642990112305
    9. '    ' → logprob: -14.201642990112305
    10. '  ' → logprob: -14.576642990112305

Token 574: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.0016123391687870026
    2. '(range' → logprob: -6.501612186431885
    3. 'rev' → logprob: -9.876612663269043
    4. '(' → logprob: -10.126612663269043
    5. '(
' → logprob: -11.501612663269043
    6. '(reverse' → logprob: -12.751612663269043
    7. '(*' → logprob: -12.876612663269043
    8. ' (' → logprob: -13.876612663269043
    9. '   ' → logprob: -14.501612663269043
    10. ' rev' → logprob: -15.376612663269043

Token 575: 'v' (ID: 85)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.5381093621253967
    2. 'v' → logprob: -1.038109302520752
    3. 'ev' → logprob: -3.413109302520752
    4. '[' → logprob: -3.788109302520752
    5. ' rev' → logprob: -6.163109302520752
    6. 'range' → logprob: -6.288109302520752
    7. '(' → logprob: -7.288109302520752
    8. '   ' → logprob: -7.538109302520752
    9. ' range' → logprob: -8.53810977935791
    10. ' ' → logprob: -8.53810977935791

Token 576: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.941161776310764e-05
    2. '0' → logprob: -10.625039100646973
    3. '(' → logprob: -12.125039100646973
    4. '()[' → logprob: -12.125039100646973
    5. ' [' → logprob: -13.875039100646973
    6. '][' → logprob: -14.375039100646973
    7. ')[' → logprob: -14.375039100646973
    8. '[
' → logprob: -14.937539100646973
    9. 's' → logprob: -15.125039100646973
    10. 'def' → logprob: -15.562539100646973

Token 577: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038180917501449585
    2. '[' → logprob: -3.2881808280944824
    3. ' ' → logprob: -10.41318130493164
    4. '(' → logprob: -11.03818130493164
    5. '
' → logprob: -11.03818130493164
    6. '][' → logprob: -11.16318130493164
    7. '1' → logprob: -11.28818130493164
    8. ']' → logprob: -11.97568130493164
    9. ')' → logprob: -12.47568130493164
    10. 'range' → logprob: -12.47568130493164

Token 578: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009470687946304679
    2. ' ,' → logprob: -7.625946998596191
    3. '   ' → logprob: -8.000946998596191
    4. '(),' → logprob: -9.750946998596191
    5. '[' → logprob: -11.250946998596191
    6. ',[' → logprob: -11.250946998596191
    7. '),' → logprob: -12.125946998596191
    8. '       ' → logprob: -12.500946998596191
    9. ',x' → logprob: -12.625946998596191
    10. '],' → logprob: -12.625946998596191

Token 579: ' cost' (ID: 3097)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.11782476305961609
    2. 'cost' → logprob: -2.3678247928619385
    3. 'range' → logprob: -4.242824554443359
    4. 'dp' → logprob: -6.617824554443359
    5. '[' → logprob: -7.617824554443359
    6. 'acc' → logprob: -7.992824554443359
    7. ' cost' → logprob: -8.11782455444336
    8. 're' → logprob: -8.49282455444336
    9. ' rev' → logprob: -8.61782455444336
    10. ' range' → logprob: -9.74282455444336

Token 580: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.123899558791891e-05
    2. '0' → logprob: -9.62507152557373
    3. ' [' → logprob: -13.62507152557373
    4. ')[' → logprob: -13.87507152557373
    5. '   ' → logprob: -14.37507152557373
    6. '[
' → logprob: -14.87507152557373
    7. ')' → logprob: -15.00007152557373
    8. '][' → logprob: -15.12507152557373
    9. ',' → logprob: -15.25007152557373
    10. 's' → logprob: -15.37507152557373

Token 581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001549089647596702
    2. '[' → logprob: -9.250154495239258
    3. '1' → logprob: -10.000154495239258
    4. ' ' → logprob: -11.750154495239258
    5. '   ' → logprob: -12.875154495239258
    6. '][' → logprob: -14.312654495239258
    7. '
' → logprob: -14.500154495239258
    8. '(' → logprob: -14.562654495239258
    9. ']' → logprob: -14.812654495239258
    10. ')' → logprob: -15.625154495239258

Token 582: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9709205031394958
    2. '],' → logprob: -1.0959205627441406
    3. '[' → logprob: -1.8459205627441406
    4. ']):' → logprob: -2.7209205627441406
    5. ']):
' → logprob: -4.220920562744141
    6. '),' → logprob: -4.345920562744141
    7. '   ' → logprob: -4.470920562744141
    8. '):' → logprob: -5.345920562744141
    9. '][' → logprob: -5.720920562744141
    10. '):
' → logprob: -5.845920562744141

Token 583: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.306067556142807
    2. 'rev' → logprob: -1.4310675859451294
    3. ' cost' → logprob: -4.43106746673584
    4. 'dp' → logprob: -5.43106746673584
    5. 'range' → logprob: -5.55606746673584
    6. 're' → logprob: -6.18106746673584
    7. '   ' → logprob: -7.18106746673584
    8. ' rev' → logprob: -7.80606746673584
    9. '       ' → logprob: -8.30606746673584
    10. '    ' → logprob: -8.55606746673584

Token 584: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001676971442066133
    2. '1' → logprob: -7.1266770362854
    3. '[-' → logprob: -7.7516770362854
    4. '0' → logprob: -8.001676559448242
    5. '):
' → logprob: -10.876676559448242
    6. ')' → logprob: -11.001676559448242
    7. ')[' → logprob: -11.126676559448242
    8. '):' → logprob: -11.251676559448242
    9. '   ' → logprob: -11.251676559448242
    10. ' [' → logprob: -11.626676559448242

Token 585: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08943229913711548
    2. '1' → logprob: -2.4644322395324707
    3. '[' → logprob: -7.964432239532471
    4. '])' → logprob: -9.589432716369629
    5. ' ' → logprob: -11.089432716369629
    6. '   ' → logprob: -11.589432716369629
    7. '-' → logprob: -11.901932716369629
    8. '
' → logprob: -11.964432716369629
    9. 'x' → logprob: -12.214432716369629
    10. '(' → logprob: -12.464432716369629

Token 586: '][' (ID: 2696)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.615105152130127
    2. ']):' → logprob: -1.365105152130127
    3. '):
' → logprob: -2.240105152130127
    4. '[' → logprob: -2.990105152130127
    5. ']):
' → logprob: -3.240105152130127
    6. ')' → logprob: -6.490105152130127
    7. ']:' → logprob: -6.740105152130127
    8. '   ' → logprob: -6.865105152130127
    9. ']' → logprob: -6.990105152130127
    10. '])' → logprob: -7.740105152130127

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17416353523731232
    2. '-' → logprob: -2.799163579940796
    3. '0' → logprob: -3.424163579940796
    4. 'x' → logprob: -4.174163341522217
    5. 'n' → logprob: -4.174163341522217
    6. 'range' → logprob: -4.299163341522217
    7. 'len' → logprob: -4.674163341522217
    8. '])' → logprob: -5.924163341522217
    9. '::-' → logprob: -6.424163341522217
    10. '   ' → logprob: -6.424163341522217

Token 588: ':' (ID: 25)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.22567130625247955
    2. ']):
' → logprob: -1.8506712913513184
    3. '][' → logprob: -3.8506712913513184
    4. ']' → logprob: -4.100671291351318
    5. '])' → logprob: -5.975671291351318
    6. ':' → logprob: -6.725671291351318
    7. '[' → logprob: -6.725671291351318
    8. '])[' → logprob: -7.225671291351318
    9. ']:' → logprob: -7.725671291351318
    10. '-' → logprob: -8.975671768188477

Token 589: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.5169304013252258
    2. ']):' → logprob: -1.391930341720581
    3. '1' → logprob: -2.141930341720581
    4. ']' → logprob: -3.391930341720581
    5. ' ]' → logprob: -6.39193058013916
    6. '2' → logprob: -8.01693058013916
    7. '+' → logprob: -8.14193058013916
    8. ' ' → logprob: -8.26693058013916
    9. '],' → logprob: -8.39193058013916
    10. 'x' → logprob: -8.51693058013916

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3572884500026703
    2. '   ' → logprob: -1.2322884798049927
    3. ':' → logprob: -4.982288360595703
    4. '        
' → logprob: -7.607288360595703
    5. ',' → logprob: -8.107288360595703
    6. ':
' → logprob: -8.357288360595703
    7. '    
' → logprob: -8.732288360595703
    8. '[' → logprob: -8.982288360595703
    9. '):
' → logprob: -9.107288360595703
    10. '
' → logprob: -9.357288360595703

Token 591: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7383373975753784
    2. ' new' → logprob: -1.7383373975753784
    3. '       ' → logprob: -1.9883373975753784
    4. ' dp' → logprob: -2.238337516784668
    5. '   ' → logprob: -2.863337516784668
    6. 'new' → logprob: -3.863337516784668
    7. ' for' → logprob: -4.113337516784668
    8. '    ' → logprob: -5.738337516784668
    9. 'for' → logprob: -6.613337516784668
    10. 'n' → logprob: -7.113337516784668

Token 592: ' nd' (ID: 5914)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9026584029197693
    2. ' new' → logprob: -1.402658462524414
    3. '   ' → logprob: -1.652658462524414
    4. 'dp' → logprob: -2.027658462524414
    5. ' dp' → logprob: -4.902658462524414
    6. 'nd' → logprob: -5.152658462524414
    7. 'for' → logprob: -5.527658462524414
    8. 'n' → logprob: -6.277658462524414
    9. '       ' → logprob: -6.652658462524414
    10. 'next' → logprob: -6.777658462524414

Token 593: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.1054253011243418e-05
    2. ' =' → logprob: -11.750020980834961
    3. '   ' → logprob: -11.875020980834961
    4. '=' → logprob: -13.125020980834961
    5. 'w' → logprob: -13.625020980834961
    6. 'px' → logprob: -14.500020980834961
    7. '       ' → logprob: -14.875020980834961
    8. 'ps' → logprob: -15.250020980834961
    9. 'pc' → logprob: -15.625020980834961
    10. 'pw' → logprob: -15.750020980834961

Token 594: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08933723717927933
    2. '=' → logprob: -2.4643373489379883
    3. '=[' → logprob: -8.089337348937988
    4. '[' → logprob: -10.339337348937988
    5. '=[]' → logprob: -10.589337348937988
    6. ' =[' → logprob: -10.839337348937988
    7. '   ' → logprob: -11.839337348937988
    8. '	' → logprob: -13.839337348937988
    9. ' [' → logprob: -14.089337348937988
    10. ',' → logprob: -14.214337348937988

Token 595: ' le' (ID: 505)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4741846024990082
    2. ' [' → logprob: -0.9741846323013306
    3. '[n' → logprob: -9.5991849899292
    4. '[]' → logprob: -10.8491849899292
    5. '[len' → logprob: -12.5991849899292
    6. '[x' → logprob: -12.7241849899292
    7. '   ' → logprob: -12.7241849899292
    8. '[c' → logprob: -13.0991849899292
    9. '[s' → logprob: -13.5991849899292
    10. ' ' → logprob: -13.8491849899292

Token 596: ' nouveau' (ID: 23184)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03885091096162796
    2. ' [' → logprob: -3.288851022720337
    3. '[]' → logprob: -7.788850784301758
    4. '[x' → logprob: -8.413850784301758
    5. '[n' → logprob: -8.913850784301758
    6. '[new' → logprob: -11.413850784301758
    7. '[len' → logprob: -11.663850784301758
    8. '[next' → logprob: -12.663850784301758
    9. '[c' → logprob: -12.913850784301758
    10. '[s' → logprob: -13.163850784301758

Token 597: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5618283748626709
    2. '[' → logprob: -1.686828374862671
    3. ' [' → logprob: -1.686828374862671
    4. ' dp' → logprob: -2.936828374862671
    5. '_dp' → logprob: -5.06182861328125
    6. '   ' → logprob: -9.31182861328125
    7. ' =' → logprob: -9.56182861328125
    8. 'd' → logprob: -10.81182861328125
    9. ' ' → logprob: -11.06182861328125
    10. '	dp' → logprob: -11.43682861328125

Token 598: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12282197922468185
    2. '=' → logprob: -2.3728220462799072
    3. '=[' → logprob: -4.497821807861328
    4. '=[]' → logprob: -5.872821807861328
    5. '[' → logprob: -6.122821807861328
    6. '<|end|>' → logprob: -6.122821807861328
    7. '=[]
' → logprob: -6.872821807861328
    8. '_tokens' → logprob: -7.747821807861328
    9. '=[
' → logprob: -8.497821807861328
    10. ' =[' → logprob: -8.622821807861328

Token 599: ' coûts' (ID: 116912)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0016176922945305705
    2. '[' → logprob: -7.001617908477783
    3. ' dp' → logprob: -8.251617431640625
    4. '[]' → logprob: -8.376617431640625
    5. 'cost' → logprob: -9.001617431640625
    6. 'd' → logprob: -10.001617431640625
    7. '[]
' → logprob: -11.376617431640625
    8. ' [' → logprob: -11.501617431640625
    9. '[n' → logprob: -12.501617431640625
    10. ']' → logprob: -12.876617431640625

Token 600: ' minimum' (ID: 11085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12585075199604034
    2. '=' → logprob: -2.8758506774902344
    3. '   ' → logprob: -2.8758506774902344
    4. '       ' → logprob: -6.250850677490234
    5. '=[]' → logprob: -6.625850677490234
    6. '=[' → logprob: -7.000850677490234
    7. '[' → logprob: -7.250850677490234
    8. '=[]
' → logprob: -7.875850677490234
    9. ',' → logprob: -10.125850677490234
    10. '    ' → logprob: -10.500850677490234

Token 601: 's' (ID: 82)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037219807505607605
    2. '   ' → logprob: -4.037220001220703
    3. '=' → logprob: -4.412220001220703
    4. '=[]' → logprob: -5.912220001220703
    5. '=[' → logprob: -6.537220001220703
    6. ',' → logprob: -6.787220001220703
    7. '=[]
' → logprob: -7.412220001220703
    8. '       ' → logprob: -8.537220001220703
    9. '[' → logprob: -9.287220001220703
    10. '  ' → logprob: -9.287220001220703

Token 602: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15042775869369507
    2. '=' → logprob: -2.40042781829834
    3. '   ' → logprob: -3.77542781829834
    4. '=[]' → logprob: -4.40042781829834
    5. ',' → logprob: -5.52542781829834
    6. '=[' → logprob: -5.77542781829834
    7. '<|end|>' → logprob: -5.90042781829834
    8. '       ' → logprob: -7.02542781829834
    9. '=[]
' → logprob: -7.02542781829834
    10. '[' → logprob: -7.15042781829834

Token 603: ' pour' (ID: 1930)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6998326778411865
    2. ' nd' → logprob: -1.0748326778411865
    3. '   ' → logprob: -2.5748326778411865
    4. '       ' → logprob: -2.9498326778411865
    5. '[' → logprob: -3.9498326778411865
    6. '[n' → logprob: -5.199832916259766
    7. 'n' → logprob: -5.949832916259766
    8. '_nd' → logprob: -6.699832916259766
    9. ' n' → logprob: -6.949832916259766
    10. '           ' → logprob: -7.199832916259766

Token 604: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2124110609292984
    2. ' [' → logprob: -2.5874111652374268
    3. 'range' → logprob: -2.9624111652374268
    4. ' range' → logprob: -3.3374111652374268
    5. '[b' → logprob: -4.587410926818848
    6. '[n' → logprob: -5.212410926818848
    7. '[x' → logprob: -5.462410926818848
    8. '[len' → logprob: -5.712410926818848
    9. 'len' → logprob: -6.962410926818848
    10. '   ' → logprob: -7.087410926818848

Token 605: ' nombre' (ID: 9733)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13364794850349426
    2. ' b' → logprob: -2.133647918701172
    3. ' range' → logprob: -6.383647918701172
    4. 'i' → logprob: -6.758647918701172
    5. ' possible' → logprob: -6.883647918701172
    6. ' i' → logprob: -7.258647918701172
    7. 'j' → logprob: -7.633647918701172
    8. ' j' → logprob: -8.383647918701172
    9. 'possible' → logprob: -8.383647918701172
    10. 'range' → logprob: -8.508647918701172

Token 606: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6238905787467957
    2. 'de' → logprob: -1.4988906383514404
    3. 'dp' → logprob: -2.9988906383514404
    4. '   ' → logprob: -3.2488906383514404
    5. ' of' → logprob: -3.8738906383514404
    6. ' des' → logprob: -3.9988906383514404
    7. 'b' → logprob: -3.9988906383514404
    8. 'of' → logprob: -3.9988906383514404
    9. 'des' → logprob: -4.373890399932861
    10. 'd' → logprob: -4.373890399932861

Token 607: ' bill' (ID: 6713)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.10193020105361938
    2. 'b' → logprob: -3.7269301414489746
    3. 'bill' → logprob: -3.7269301414489746
    4. ' bill' → logprob: -4.226930141448975
    5. 'no' → logprob: -4.476930141448975
    6. ' blancs' → logprob: -4.476930141448975
    7. '```' → logprob: -6.226930141448975
    8. 'prises' → logprob: -6.351930141448975
    9. 'white' → logprob: -6.976930141448975
    10. ' no' → logprob: -7.351930141448975

Token 608: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.031213000416755676
    2. 'ires' → logprob: -4.15621280670166
    3. 'illes' → logprob: -4.78121280670166
    4. 'ières' → logprob: -5.90621280670166
    5. 'les' → logprob: -6.90621280670166
    6. '```' → logprob: -8.03121280670166
    7. 'é' → logprob: -8.15621280670166
    8. 'tes' → logprob: -8.15621280670166
    9. '   ' → logprob: -8.15621280670166
    10. 'aires' → logprob: -8.53121280670166

Token 609: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.0667214393615723
    2. 'bl' → logprob: -2.3167214393615723
    3. ' pris' → logprob: -2.4417214393615723
    4. 'de' → logprob: -2.6917214393615723
    5. ' de' → logprob: -2.6917214393615723
    6. ' trait' → logprob: -2.6917214393615723
    7. ' blancs' → logprob: -2.6917214393615723
    8. 'trait' → logprob: -2.9417214393615723
    9. 'no' → logprob: -3.0667214393615723
    10. ' no' → logprob: -3.0667214393615723

Token 610: 'ires' (ID: 5255)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2321850210428238
    2. 'p' → logprob: -1.6071850061416626
    3. 'ne' → logprob: -5.732184886932373
    4. 'n' → logprob: -6.482184886932373
    5. 'tp' → logprob: -7.357184886932373
    6. 'np' → logprob: -8.482185363769531
    7. ' dp' → logprob: -8.732185363769531
    8. 'w' → logprob: -8.857185363769531
    9. 'de' → logprob: -8.857185363769531
    10. '[' → logprob: -8.982185363769531

Token 611: ' déjà' (ID: 21229)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20982128381729126
    2. '=' → logprob: -2.3348212242126465
    3. '   ' → logprob: -3.0848212242126465
    4. 'dp' → logprob: -3.9598212242126465
    5. '=[]' → logprob: -4.8348212242126465
    6. '=[' → logprob: -5.9598212242126465
    7. '=[]
' → logprob: -6.0848212242126465
    8. 'b' → logprob: -6.3348212242126465
    9. ' dp' → logprob: -6.8348212242126465
    10. 'de' → logprob: -7.2098212242126465

Token 612: ' sélection' (ID: 43472)
  Prédit: 'taken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taken' → logprob: -0.5161784291267395
    2. 'selected' → logprob: -2.3911783695220947
    3. 'picked' → logprob: -2.6411783695220947
    4. '```' → logprob: -2.6411783695220947
    5. 'trait' → logprob: -3.1411783695220947
    6. 'b' → logprob: -3.3911783695220947
    7. ' taken' → logprob: -3.6411783695220947
    8. 'processed' → logprob: -4.766178607940674
    9. '_taken' → logprob: -4.766178607940674
    10. 'pris' → logprob: -5.016178607940674

Token 613: 'nées' (ID: 136473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9498294591903687
    2. '   ' → logprob: -0.9498294591903687
    3. ' =' → logprob: -2.324829578399658
    4. 's' → logprob: -3.074829578399658
    5. '[' → logprob: -3.324829578399658
    6. '       ' → logprob: -4.199829578399658
    7. ']' → logprob: -5.199829578399658
    8. 'r' → logprob: -5.574829578399658
    9. ')' → logprob: -5.699829578399658
    10. '=[' → logprob: -5.949829578399658

Token 614: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07857532799243927
    2. '<|end|>' → logprob: -3.078575372695923
    3. ':' → logprob: -4.828575134277344
    4. ',' → logprob: -4.953575134277344
    5. '       ' → logprob: -5.078575134277344
    6. '<|end|>' → logprob: -5.828575134277344
    7. '[' → logprob: -6.578575134277344
    8. ' ' → logprob: -7.703575134277344
    9. '.' → logprob: -7.828575134277344
    10. '    ' → logprob: -7.828575134277344

Token 615: '       ' (ID: 309)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.43392884731292725
    2. '```' → logprob: -1.6839288473129272
    3. 'nd' → logprob: -2.683928966522217
    4. '   ' → logprob: -3.058928966522217
    5. '[' → logprob: -4.058928966522217
    6. '\' → logprob: -5.058928966522217
    7. ' n' → logprob: -5.308928966522217
    8. '       ' → logprob: -5.433928966522217
    9. '``' → logprob: -5.683928966522217
    10. '`' → logprob: -5.683928966522217

Token 616: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.17460252344608307
    2. ' nd' → logprob: -1.9246025085449219
    3. '   ' → logprob: -4.924602508544922
    4. '[' → logprob: -5.799602508544922
    5. '       ' → logprob: -6.674602508544922
    6. 'n' → logprob: -7.174602508544922
    7. '_nd' → logprob: -7.549602508544922
    8. 'dp' → logprob: -7.799602508544922
    9. ' n' → logprob: -8.174602508544922
    10. '[n' → logprob: -9.174602508544922

Token 617: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006220113136805594
    2. '_p' → logprob: -7.625621795654297
    3. ' =' → logprob: -9.250621795654297
    4. '=' → logprob: -10.500621795654297
    5. '   ' → logprob: -12.250621795654297
    6. 'P' → logprob: -13.250621795654297
    7. ' p' → logprob: -13.875621795654297
    8. 'dp' → logprob: -14.000621795654297
    9. '_' → logprob: -14.125621795654297
    10. ' ' → logprob: -14.375621795654297

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694543600082397
    2. '=' → logprob: -2.1269454956054688
    3. '=[' → logprob: -11.376945495605469
    4. ' =[' → logprob: -13.126945495605469
    5. '   ' → logprob: -13.376945495605469
    6. ',' → logprob: -13.876945495605469
    7. '=[]' → logprob: -14.376945495605469
    8. '[' → logprob: -15.251945495605469
    9. '＝' → logprob: -15.876945495605469
    10. ' ' → logprob: -15.876945495605469

Token 619: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2520279586315155
    2. ' [' → logprob: -1.502027988433838
    3. '[n' → logprob: -10.12702751159668
    4. '[len' → logprob: -10.87702751159668
    5. '[]' → logprob: -11.25202751159668
    6. '[x' → logprob: -11.37702751159668
    7. '[min' → logprob: -12.62702751159668
    8. '   ' → logprob: -13.12702751159668
    9. '[int' → logprob: -13.75202751159668
    10. '[s' → logprob: -14.12702751159668

Token 620: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005764064844697714
    2. 'dp' → logprob: -5.505764007568359
    3. '0' → logprob: -7.005764007568359
    4. '10' → logprob: -7.630764007568359
    5. 'min' → logprob: -8.25576400756836
    6. ' float' → logprob: -11.50576400756836
    7. '1' → logprob: -11.88076400756836
    8. 'int' → logprob: -12.75576400756836
    9. '(float' → logprob: -12.88076400756836
    10. 'max' → logprob: -13.13076400756836

Token 621: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006445949897170067
    2. ']*(' → logprob: -5.50644588470459
    3. ']*' → logprob: -7.00644588470459
    4. ']+' → logprob: -7.50644588470459
    5. '0' → logprob: -8.25644588470459
    6. ' ]' → logprob: -8.63144588470459
    7. 'for' → logprob: -8.88144588470459
    8. '+' → logprob: -9.25644588470459
    9. ' for' → logprob: -9.63144588470459
    10. ']
' → logprob: -10.38144588470459

Token 622: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2721855044364929
    2. ' +' → logprob: -3.0221855640411377
    3. ' for' → logprob: -3.0221855640411377
    4. '<|end|>' → logprob: -3.2721855640411377
    5. 'for' → logprob: -3.3971855640411377
    6. '+' → logprob: -3.7721855640411377
    7. '[' → logprob: -4.772185325622559
    8. '
' → logprob: -4.772185325622559
    9. '       ' → logprob: -4.772185325622559
    10. ' *' → logprob: -5.397185325622559

Token 623: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47513577342033386
    2. '(len' → logprob: -0.9751358032226562
    3. 'len' → logprob: -7.350135803222656
    4. ' (' → logprob: -8.100135803222656
    5. 'n' → logprob: -10.475135803222656
    6. '(' → logprob: -10.600135803222656
    7. '(N' → logprob: -11.100135803222656
    8. '((' → logprob: -11.100135803222656
    9. '   ' → logprob: -11.225135803222656
    10. '(dp' → logprob: -11.975135803222656

Token 624: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.160366490483284
    2. 'len' → logprob: -1.9103665351867676
    3. '(n' → logprob: -10.03536605834961
    4. ' n' → logprob: -10.03536605834961
    5. '(len' → logprob: -10.28536605834961
    6. ' len' → logprob: -11.16036605834961
    7. '   ' → logprob: -13.16036605834961
    8. '[n' → logprob: -13.66036605834961
    9. '[len' → logprob: -14.16036605834961
    10. '=len' → logprob: -14.53536605834961

Token 625: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06206044554710388
    2. ' +' → logprob: -2.8120603561401367
    3. '[' → logprob: -9.937060356140137
    4. '+
' → logprob: -11.812060356140137
    5. '   ' → logprob: -11.937060356140137
    6. '+n' → logprob: -12.062060356140137
    7. '	' → logprob: -12.187060356140137
    8. '*' → logprob: -12.937060356140137
    9. 'n' → logprob: -13.062060356140137
    10. '0' → logprob: -13.062060356140137

Token 626: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.500031471252441
    3. '2' → logprob: -12.750031471252441
    4. 'n' → logprob: -14.750031471252441
    5. '   ' → logprob: -15.750031471252441
    6. '+' → logprob: -16.875030517578125
    7. '```' → logprob: -17.500030517578125
    8. ' n' → logprob: -18.062530517578125
    9. '(n' → logprob: -18.312530517578125
    10. ')' → logprob: -19.500030517578125

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.125007629394531
    3. '2' → logprob: -13.500007629394531
    4. '   ' → logprob: -15.375007629394531
    5. 'n' → logprob: -16.25000762939453
    6. '```' → logprob: -18.00000762939453
    7. '+' → logprob: -18.62500762939453
    8. '0' → logprob: -19.25000762939453
    9. '  ' → logprob: -19.62500762939453
    10. ')' → logprob: -19.81250762939453

Token 628: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034780744463205338
    2. ')
' → logprob: -5.753478050231934
    3. '   ' → logprob: -8.253478050231934
    4. '<|end|>' → logprob: -11.628478050231934
    5. ']' → logprob: -11.753478050231934
    6. ')]' → logprob: -12.003478050231934
    7. ')
' → logprob: -12.253478050231934
    8. ' )' → logprob: -12.878478050231934
    9. '       ' → logprob: -13.003478050231934
    10. ')

' → logprob: -13.753478050231934

Token 629: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22372210025787354
    2. 'for' → logprob: -2.348721981048584
    3. ' for' → logprob: -2.848721981048584
    4. '       ' → logprob: -3.098721981048584
    5. 'i' → logprob: -6.723721981048584
    6. 'j' → logprob: -7.973721981048584
    7. ' i' → logprob: -8.723722457885742
    8. '	for' → logprob: -9.723722457885742
    9. '    ' → logprob: -10.348722457885742
    10. ' j' → logprob: -10.473722457885742

Token 630: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3453736901283264
    2. '       ' → logprob: -1.9703736305236816
    3. ' for' → logprob: -2.4703736305236816
    4. 'i' → logprob: -3.4703736305236816
    5. 'j' → logprob: -3.5953736305236816
    6. '   ' → logprob: -4.845373630523682
    7. ' i' → logprob: -7.345373630523682
    8. 'idx' → logprob: -7.970373630523682
    9. ' j' → logprob: -8.47037410736084
    10. 'b' → logprob: -8.72037410736084

Token 631: ' Co' (ID: 4642)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0040964470244944096
    2. 'j' → logprob: -6.379096508026123
    3. '   ' → logprob: -6.629096508026123
    4. 'i' → logprob: -7.379096508026123
    5. ' for' → logprob: -8.004096031188965
    6. '       ' → logprob: -9.754096031188965
    7. 'prev' → logprob: -11.129096031188965
    8. 'dp' → logprob: -11.504096031188965
    9. 'idx' → logprob: -12.754096031188965
    10. 'm' → logprob: -12.879096031188965

Token 632: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.023831045255064964
    2. 'sts' → logprob: -4.273830890655518
    3. '   ' → logprob: -5.023830890655518
    4. '       ' → logprob: -6.898830890655518
    5. 'for' → logprob: -7.148830890655518
    6. 's' → logprob: -8.398831367492676
    7. '  ' → logprob: -8.898831367492676
    8. 'nst' → logprob: -9.023831367492676
    9. 'l' → logprob: -9.148831367492676
    10. 'd' → logprob: -9.148831367492676

Token 633: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1211960315704346
    2. 'for' → logprob: -1.3711960315704346
    3. ' =' → logprob: -1.9961960315704346
    4. '   ' → logprob: -2.4961960315704346
    5. '       ' → logprob: -2.8711960315704346
    6. 'import' → logprob: -3.6211960315704346
    7. 'def' → logprob: -3.6211960315704346
    8. ')' → logprob: -3.9961960315704346
    9. 's' → logprob: -4.3711957931518555
    10. '=' → logprob: -4.6211957931518555

Token 634: ' placer' (ID: 55591)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5325099229812622
    2. ' b' → logprob: -1.4075099229812622
    3. '0' → logprob: -2.7825098037719727
    4. 'i' → logprob: -3.6575098037719727
    5. ' j' → logprob: -3.9075098037719727
    6. 'j' → logprob: -3.9075098037719727
    7. ' i' → logprob: -4.157509803771973
    8. ' ' → logprob: -4.532509803771973
    9. ' nd' → logprob: -6.157509803771973
    10. ' y' → logprob: -6.282509803771973

Token 635: ' une' (ID: 2463)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4350440502166748
    2. 'nd' → logprob: -1.5600440502166748
    3. ' nd' → logprob: -2.435044050216675
    4. '0' → logprob: -2.560044050216675
    5. 'dp' → logprob: -2.685044050216675
    6. ' la' → logprob: -2.935044050216675
    7. ' x' → logprob: -3.185044050216675
    8. 'la' → logprob: -3.310044050216675
    9. 'bl' → logprob: -3.560044050216675
    10. ' blanc' → logprob: -3.685044050216675

Token 636: ' bille' (ID: 97414)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.17153483629226685
    2. ' blanc' → logprob: -3.296534776687622
    3. ' blanche' → logprob: -3.296534776687622
    4. 'b' → logprob: -3.546534776687622
    5. 'no' → logprob: -4.546535015106201
    6. '   ' → logprob: -5.171535015106201
    7. '0' → logprob: -5.546535015106201
    8. ' white' → logprob: -5.796535015106201
    9. ' no' → logprob: -5.921535015106201
    10. 'white' → logprob: -5.984035015106201

Token 637: ' blanche' (ID: 102684)
  Prédit: ' blanche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blanche' → logprob: -0.5956316590309143
    2. ' noire' → logprob: -1.3456315994262695
    3. ' no' → logprob: -2.7206315994262695
    4. 'bl' → logprob: -3.2206315994262695
    5. 'no' → logprob: -4.0956315994262695
    6. '   ' → logprob: -4.2206315994262695
    7. ' blanc' → logprob: -4.9706315994262695
    8. ' de' → logprob: -5.0956315994262695
    9. '[' → logprob: -5.2206315994262695
    10. '_no' → logprob: -5.4706315994262695

Token 638: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48811087012290955
    2. '[' → logprob: -2.2381107807159424
    3. '   ' → logprob: -2.6131107807159424
    4. ' =' → logprob: -2.6131107807159424
    5. ' à' → logprob: -3.1131107807159424
    6. ' at' → logprob: -3.9881107807159424
    7. ' for' → logprob: -4.7381110191345215
    8. ')' → logprob: -5.2381110191345215
    9. ',' → logprob: -5.2381110191345215
    10. '=' → logprob: -5.3631110191345215

Token 639: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8317657709121704
    2. '0' → logprob: -2.081765651702881
    3. 'la' → logprob: -2.206765651702881
    4. 'position' → logprob: -2.331765651702881
    5. 'l' → logprob: -2.831765651702881
    6. 'c' → logprob: -3.331765651702881
    7. 'rev' → logprob: -3.831765651702881
    8. ' la' → logprob: -4.081765651702881
    9. 'i' → logprob: -4.331765651702881
    10. 'y' → logprob: -4.331765651702881

Token 640: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8588230609893799
    2. ' position' → logprob: -1.6088230609893799
    3. 'i' → logprob: -2.10882306098938
    4. '   ' → logprob: -2.98382306098938
    5. ' i' → logprob: -3.85882306098938
    6. 'no' → logprob: -4.108822822570801
    7. 'b' → logprob: -4.358822822570801
    8. '0' → logprob: -4.483822822570801
    9. ' ' → logprob: -4.483822822570801
    10. 'place' → logprob: -4.483822822570801

Token 641: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2313026636838913
    2. '[' → logprob: -2.7313027381896973
    3. '       ' → logprob: -2.7313027381896973
    4. 'x' → logprob: -4.106302738189697
    5. ' ' → logprob: -4.606302738189697
    6. 'j' → logprob: -5.231302738189697
    7. 'for' → logprob: -5.481302738189697
    8. 'i' → logprob: -5.481302738189697
    9. '   ' → logprob: -5.481302738189697
    10. 'b' → logprob: -5.606302738189697

Token 642: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02759600803256035
    2. '<|end|>' → logprob: -4.5275959968566895
    3. ',' → logprob: -5.0275959968566895
    4. ' =' → logprob: -6.0275959968566895
    5. ':' → logprob: -6.5275959968566895
    6. '=' → logprob: -6.7775959968566895
    7. ' for' → logprob: -6.7775959968566895
    8. ')' → logprob: -6.9025959968566895
    9. '<|end|>' → logprob: -7.1525959968566895
    10. '[' → logprob: -7.4025959968566895

Token 643: ' sachant' (ID: 174239)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9891757369041443
    2. '       ' → logprob: -1.114175796508789
    3. ' for' → logprob: -1.239175796508789
    4. '0' → logprob: -5.489175796508789
    5. 'j' → logprob: -7.114175796508789
    6. '   ' → logprob: -7.114175796508789
    7. 'dp' → logprob: -7.489175796508789
    8. '...' → logprob: -7.739175796508789
    9. 'prev' → logprob: -7.739175796508789
    10. 'b' → logprob: -8.114175796508789

Token 644: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3741134405136108
    2. 'que' → logprob: -1.3741134405136108
    3. ' que' → logprob: -1.4991134405136108
    4. '0' → logprob: -2.4991135597229004
    5. '   ' → logprob: -3.4991135597229004
    6. 'qu' → logprob: -3.7491135597229004
    7. 'le' → logprob: -3.9991135597229004
    8. ' ' → logprob: -4.3741135597229
    9. 'j' → logprob: -4.4991135597229
    10. ' qu' → logprob: -4.7491135597229

Token 645: ' config' (ID: 3833)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.378362774848938
    2. ' nombre' → logprob: -1.878362774848938
    3. '   ' → logprob: -2.1283626556396484
    4. 'b' → logprob: -2.5033626556396484
    5. 'current' → logprob: -3.5033626556396484
    6. ' current' → logprob: -3.6283626556396484
    7. 'position' → logprob: -3.7533626556396484
    8. ' ' → logprob: -4.003362655639648
    9. 'n' → logprob: -4.003362655639648
    10. '       ' → logprob: -4.378362655639648

Token 646: ' précédente' (ID: 177319)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23163273930549622
    2. 'nd' → logprob: -2.606632709503174
    3. '   ' → logprob: -3.481632709503174
    4. '_' → logprob: -4.356632709503174
    5. 'ation' → logprob: -4.356632709503174
    6. 'd' → logprob: -4.856632709503174
    7. 's' → logprob: -5.106632709503174
    8. '[i' → logprob: -5.356632709503174
    9. '       ' → logprob: -5.356632709503174
    10. '```' → logprob: -5.481632709503174

Token 647: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3841198980808258
    2. '       ' → logprob: -2.134119987487793
    3. 'for' → logprob: -2.509119987487793
    4. '   ' → logprob: -2.634119987487793
    5. '[' → logprob: -3.759119987487793
    6. 'dp' → logprob: -4.509119987487793
    7. ' dp' → logprob: -5.509119987487793
    8. ' nd' → logprob: -6.259119987487793
    9. ',' → logprob: -6.509119987487793
    10. 'nd' → logprob: -7.134119987487793

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08981384336948395
    2. ' for' → logprob: -2.5898139476776123
    3. 'for' → logprob: -4.589813709259033
    4. '   ' → logprob: -7.964813709259033
    5. '	for' → logprob: -8.089814186096191
    6. '	' → logprob: -11.089814186096191
    7. '```' → logprob: -11.464814186096191
    8. '	   ' → logprob: -11.714814186096191
    9. '           ' → logprob: -11.964814186096191
    10. ',' → logprob: -12.964814186096191

Token 649: ' cw' (ID: 72592)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048087939620018005
    2. ' for' → logprob: -3.4230878353118896
    3. '   ' → logprob: -4.423088073730469
    4. '       ' → logprob: -6.798088073730469
    5. 'dp' → logprob: -7.423088073730469
    6. 'nd' → logprob: -8.048088073730469
    7. '	for' → logprob: -9.173088073730469
    8. '```' → logprob: -9.423088073730469
    9. 'i' → logprob: -10.173088073730469
    10. 'prev' → logprob: -10.298088073730469

Token 650: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47162213921546936
    2. '0' → logprob: -1.471622109413147
    3. '1' → logprob: -2.0966222286224365
    4. ' =' → logprob: -4.721621990203857
    5. '=' → logprob: -4.846621990203857
    6. '       ' → logprob: -6.346621990203857
    7. ' [' → logprob: -6.471621990203857
    8. '   ' → logprob: -6.846621990203857
    9. '[c' → logprob: -7.096621990203857
    10. '_' → logprob: -7.971621990203857

Token 651: 'x' (ID: 87)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1939213275909424
    2. ' =' → logprob: -1.1939213275909424
    3. '[c' → logprob: -2.3189213275909424
    4. ',' → logprob: -2.5689213275909424
    5. '_idx' → logprob: -3.1939213275909424
    6. '_index' → logprob: -4.068921089172363
    7. '[' → logprob: -4.193921089172363
    8. 'c' → logprob: -4.318921089172363
    9. '[n' → logprob: -4.568921089172363
    10. ')' → logprob: -4.818921089172363

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6042591333389282
    2. '[c' → logprob: -1.3542591333389282
    3. ' =' → logprob: -2.1042590141296387
    4. '[' → logprob: -3.1042590141296387
    5. '[n' → logprob: -4.604259014129639
    6. '   ' → logprob: -5.104259014129639
    7. '=[' → logprob: -5.479259014129639
    8. '[x' → logprob: -5.729259014129639
    9. '=c' → logprob: -6.479259014129639
    10. '       ' → logprob: -7.229259014129639

Token 653: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.024868719279766083
    2. ' cw' → logprob: -3.8998687267303467
    3. '   ' → logprob: -6.649868488311768
    4. '[c' → logprob: -6.774868488311768
    5. 'c' → logprob: -7.524868488311768
    6. 'x' → logprob: -7.774868488311768
    7. 'cost' → logprob: -8.274868965148926
    8. ' ' → logprob: -8.899868965148926
    9. '[' → logprob: -9.024868965148926
    10. '[x' → logprob: -9.274868965148926

Token 654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2661300003528595
    2. 'x' → logprob: -1.891129970550537
    3. '1' → logprob: -2.891129970550537
    4. '[x' → logprob: -3.891129970550537
    5. '[' → logprob: -5.266129970550537
    6. '[c' → logprob: -7.516129970550537
    7. '   ' → logprob: -8.141130447387695
    8. ' ' → logprob: -8.266130447387695
    9. ' [' → logprob: -8.641130447387695
    10. ' x' → logprob: -9.516130447387695

Token 655: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5941785573959351
    2. '[n' → logprob: -0.9691785573959351
    3. '[' → logprob: -3.4691786766052246
    4. '<|end|>' → logprob: -3.4691786766052246
    5. '[:]' → logprob: -6.719178676605225
    6. '[::-' → logprob: -7.719178676605225
    7. '[y' → logprob: -7.719178676605225
    8. '[c' → logprob: -7.844178676605225
    9. '[:' → logprob: -7.844178676605225
    10. '       ' → logprob: -8.094178199768066

Token 656: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004882550332695246
    2. ']+' → logprob: -6.504882335662842
    3. '[x' → logprob: -7.004882335662842
    4. ' ]' → logprob: -7.129882335662842
    5. '-' → logprob: -7.129882335662842
    6. '[n' → logprob: -8.6298828125
    7. '[' → logprob: -8.6298828125
    8. '])' → logprob: -8.6298828125
    9. '+' → logprob: -9.1298828125
    10. ' -' → logprob: -9.5048828125

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16156816482543945
    2. '+' → logprob: -3.0365681648254395
    3. '<|end|>' → logprob: -3.2865681648254395
    4. '[' → logprob: -3.6615681648254395
    5. ' +' → logprob: -3.9115681648254395
    6. ')' → logprob: -5.2865681648254395
    7. ' for' → logprob: -5.5365681648254395
    8. 'for' → logprob: -6.1615681648254395
    9. '   ' → logprob: -7.2865681648254395
    10. ',' → logprob: -7.2865681648254395

Token 658: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12016759067773819
    2. ' for' → logprob: -2.6201674938201904
    3. '       ' → logprob: -3.2451674938201904
    4. '   ' → logprob: -7.2451677322387695
    5. '	for' → logprob: -8.49516773223877
    6. '```' → logprob: -8.74516773223877
    7. 'i' → logprob: -9.74516773223877
    8. '#' (adapté à ' #') → logprob: -10.24516773223877
    9. ' ' → logprob: -10.37016773223877
    10. ' ' → logprob: -10.37016773223877

Token 659: ' Cas' (ID: 8066)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005572979338467121
    2. 'j' → logprob: -5.63057279586792
    3. 'b' → logprob: -7.50557279586792
    4. ' for' → logprob: -8.130573272705078
    5. 'prev' → logprob: -8.130573272705078
    6. 'i' → logprob: -8.380573272705078
    7. '   ' → logprob: -8.755573272705078
    8. 'black' → logprob: -9.505573272705078
    9. 'dp' → logprob: -9.505573272705078
    10. '       ' → logprob: -10.130573272705078

Token 660: ' où' (ID: 15113)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -1.1507338285446167
    2. 'dp' → logprob: -1.7757338285446167
    3. '0' → logprob: -2.1507339477539062
    4. ' dp' → logprob: -2.4007339477539062
    5. '       ' → logprob: -2.7757339477539062
    6. ' ' → logprob: -3.0257339477539062
    7. ' for' → logprob: -3.5257339477539062
    8. '   ' → logprob: -3.7757339477539062
    9. ' où' → logprob: -3.9007339477539062
    10. ' i' → logprob: -4.025733947753906

Token 661: ' aucune' (ID: 51173)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.44488227367401123
    2. 'b' → logprob: -2.569882392883301
    3. ' j' → logprob: -2.944882392883301
    4. '0' → logprob: -3.319882392883301
    5. ' nd' → logprob: -3.319882392883301
    6. 'j' → logprob: -3.569882392883301
    7. 'nd' → logprob: -3.569882392883301
    8. 'on' → logprob: -3.694882392883301
    9. ' b' → logprob: -4.069882392883301
    10. ' ' → logprob: -4.444882392883301

Token 662: ' bille' (ID: 97414)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.4520506858825684
    2. ' noire' → logprob: -1.8270506858825684
    3. ' blanche' → logprob: -1.9520506858825684
    4. 'b' → logprob: -2.2020506858825684
    5. ' no' → logprob: -2.7020506858825684
    6. ' de' → logprob: -2.7020506858825684
    7. 'bl' → logprob: -2.9520506858825684
    8. 'n' → logprob: -3.3270506858825684
    9. 'nd' → logprob: -3.5770506858825684
    10. ' nd' → logprob: -4.077050685882568

Token 663: ' noire' (ID: 115610)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.5544030666351318
    2. ' blanche' → logprob: -1.5544030666351318
    3. 'n' → logprob: -1.8044030666351318
    4. ' n' → logprob: -1.9294030666351318
    5. ' noire' → logprob: -2.304403066635132
    6. 'no' → logprob: -2.554403066635132
    7. '_no' → logprob: -3.554403066635132
    8. 'bl' → logprob: -3.804403066635132
    9. '_n' → logprob: -4.804403305053711
    10. '_' → logprob: -5.554403305053711

Token 664: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12321704626083374
    2. 'n' → logprob: -3.2482171058654785
    3. ' a' → logprob: -4.3732171058654785
    4. ' est' → logprob: -4.4982171058654785
    5. ' is' → logprob: -4.7482171058654785
    6. ' sélection' → logprob: -4.7482171058654785
    7. ' selected' → logprob: -4.9982171058654785
    8. 'dp' → logprob: -5.7482171058654785
    9. '_n' → logprob: -5.8732171058654785
    10. ' nd' → logprob: -5.9982171058654785

Token 665: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9531881213188171
    2. ''est' → logprob: -0.9531881213188171
    3. ''a' → logprob: -1.703188180923462
    4. ' n' → logprob: -4.203187942504883
    5. ' a' → logprob: -4.453187942504883
    6. 'n' → logprob: -4.953187942504883
    7. ''' → logprob: -5.328187942504883
    8. 'est' → logprob: -5.703187942504883
    9. ' est' → logprob: -6.328187942504883
    10. '’est' → logprob: -7.328187942504883

Token 666: ' encore' (ID: 14043)
  Prédit: 'prise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prise' → logprob: -0.8557852506637573
    2. 'plac' → logprob: -0.9807852506637573
    3. ' plac' → logprob: -2.605785369873047
    4. 'pos' → logprob: -2.980785369873047
    5. ' ' → logprob: -4.480785369873047
    6. 'sé' → logprob: -4.730785369873047
    7. 'cho' → logprob: -4.855785369873047
    8. ' sélection' → logprob: -5.105785369873047
    9. ' prise' → logprob: -5.230785369873047
    10. 's' → logprob: -5.605785369873047

Token 667: ' trait' (ID: 15458)
  Prédit: 'prise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prise' → logprob: -0.660409688949585
    2. 'plac' → logprob: -1.035409688949585
    3. 'sé' → logprob: -3.535409688949585
    4. 'pos' → logprob: -3.660409688949585
    5. ' plac' → logprob: -3.785409688949585
    6. 's' → logprob: -4.035409927368164
    7. 'cho' → logprob: -4.785409927368164
    8. ' ' → logprob: -5.160409927368164
    9. ' sélection' → logprob: -6.160409927368164
    10. 'position' → logprob: -6.160409927368164

Token 668: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00018983196059707552
    2. 'é' → logprob: -8.625189781188965
    3. '[' → logprob: -12.875189781188965
    4. 'ee' → logprob: -13.375189781188965
    5. 'e' → logprob: -13.625189781188965
    6. 'née' → logprob: -13.875189781188965
    7. 'ées' → logprob: -14.000189781188965
    8. 'és' → logprob: -14.250189781188965
    9. 'rée' → logprob: -14.375189781188965
    10. 'É' → logprob: -15.000189781188965

Token 669: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3649812638759613
    2. '       ' → logprob: -1.2399812936782837
    3. ',' → logprob: -5.489981174468994
    4. '<|end|>' → logprob: -5.864981174468994
    5. ':
' → logprob: -6.239981174468994
    6. '        
' → logprob: -6.239981174468994
    7. ' :' → logprob: -7.114981174468994
    8. '[' → logprob: -7.239981174468994
    9. '
' → logprob: -7.489981174468994
    10. '   ' → logprob: -7.489981174468994

Token 670: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0530492067337036
    2. 'for' → logprob: -1.1780492067337036
    3. 'nd' → logprob: -1.8030492067337036
    4. '       ' → logprob: -2.053049087524414
    5. '   ' → logprob: -3.803049087524414
    6. ' nd' → logprob: -4.178049087524414
    7. 'dp' → logprob: -5.053049087524414
    8. '	for' → logprob: -5.928049087524414
    9. '```' → logprob: -6.053049087524414
    10. '_nd' → logprob: -8.178049087524414

Token 671: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' (adapté à ' nd') → logprob: -0.06091245263814926
    2. 'for' → logprob: -3.4359123706817627
    3. ' nd' → logprob: -3.9359123706817627
    4. ' for' → logprob: -5.810912609100342
    5. '   ' → logprob: -5.810912609100342
    6. '       ' → logprob: -7.060912609100342
    7. 'if' → logprob: -8.310912132263184
    8. '```' → logprob: -9.185912132263184
    9. '_nd' → logprob: -9.560912132263184
    10. ' if' → logprob: -11.060912132263184

Token 672: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.03521392197581e-05
    2. '[' → logprob: -11.125030517578125
    3. '   ' → logprob: -11.750030517578125
    4. ' ' → logprob: -13.375030517578125
    5. '[p' → logprob: -13.625030517578125
    6. 'P' → logprob: -14.000030517578125
    7. '```' → logprob: -14.375030517578125
    8. '_p' → logprob: -14.500030517578125
    9. ' p' → logprob: -14.500030517578125
    10. '       ' → logprob: -14.750030517578125

Token 673: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.629921436891891e-05
    2. '=' → logprob: -11.87502670288086
    3. ' [' → logprob: -11.87502670288086
    4. ' =' → logprob: -12.37502670288086
    5. '   ' → logprob: -12.62502670288086
    6. '=[' → logprob: -13.00002670288086
    7. '[-' → logprob: -14.37502670288086
    8. '0' → logprob: -14.87502670288086
    9. '[:]' → logprob: -15.25002670288086
    10. '[
' → logprob: -15.37502670288086

Token 674: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000217006730963476
    2. ' ' → logprob: -8.62521743774414
    3. '1' → logprob: -10.87521743774414
    4. '[' → logprob: -11.62521743774414
    5. '   ' → logprob: -11.75021743774414
    6. '       ' → logprob: -14.81271743774414
    7. '           ' → logprob: -15.87521743774414
    8. '=' → logprob: -16.25021743774414
    9. '```' → logprob: -16.25021743774414
    10. '#' → logprob: -16.37521743774414

Token 675: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002378619508817792
    2. ' =' → logprob: -6.877378463745117
    3. ']=' → logprob: -7.502378463745117
    4. ' ]' → logprob: -7.752378463745117
    5. '=' → logprob: -8.002378463745117
    6. '   ' → logprob: -11.377378463745117
    7. '[' → logprob: -11.502378463745117
    8. ')' → logprob: -12.752378463745117
    9. ']+=' → logprob: -13.252378463745117
    10. ' ' → logprob: -14.752378463745117

Token 676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759497284889221
    2. ' =' → logprob: -0.8259497284889221
    3. '+=' → logprob: -12.450949668884277
    4. '=c' → logprob: -12.950949668884277
    5. ' +=' → logprob: -13.325949668884277
    6. '=int' → logprob: -14.450949668884277
    7. ',' → logprob: -15.450949668884277
    8. '   ' → logprob: -15.575949668884277
    9. '=

' → logprob: -15.575949668884277
    10. '=
' → logprob: -15.825949668884277

Token 677: ' prev' (ID: 10258)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03293068706989288
    2. 'cw' → logprob: -3.782930612564087
    3. 'min' → logprob: -5.407930850982666
    4. '0' → logprob: -5.907930850982666
    5. ' dp' → logprob: -6.532930850982666
    6. ' cw' → logprob: -8.407930374145508
    7. 'float' → logprob: -8.657930374145508
    8. 'c' → logprob: -8.907930374145508
    9. '   ' → logprob: -9.407930374145508
    10. 'max' → logprob: -9.907930374145508

Token 678: ' =' (ID: 314)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.14475926756858826
    2. 'dp' → logprob: -2.019759178161621
    3. '[' → logprob: -6.769759178161621
    4. 'd' → logprob: -8.144759178161621
    5. '_' → logprob: -9.019759178161621
    6. ']' → logprob: -9.144759178161621
    7. ' dp' → logprob: -9.769759178161621
    8. ')' → logprob: -9.894759178161621
    9. '	dp' → logprob: -9.894759178161621
    10. '_d' → logprob: -9.894759178161621

Token 679: ' dp' (ID: 21546)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.8372055888175964
    2. 'dp' → logprob: -1.0872056484222412
    3. '0' → logprob: -1.5872056484222412
    4. ' cw' → logprob: -4.337205410003662
    5. 'float' → logprob: -5.837205410003662
    6. ' dp' → logprob: -6.087205410003662
    7. 'cost' → logprob: -6.212205410003662
    8. 'c' → logprob: -6.462205410003662
    9. ' ' → logprob: -7.337205410003662
    10. 'abs' → logprob: -7.462205410003662

Token 680: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003334393841214478
    2. '0' → logprob: -8.125333786010742
    3. ' [' → logprob: -10.375333786010742
    4. '[x' → logprob: -13.625333786010742
    5. '[:' → logprob: -14.375333786010742
    6. '   ' → logprob: -14.500333786010742
    7. '\[' → logprob: -14.500333786010742
    8. '[-' → logprob: -14.750333786010742
    9. '[:]' → logprob: -14.750333786010742
    10. '```' → logprob: -14.875333786010742

Token 681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '[' → logprob: -14.625001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '       ' → logprob: -19.500001907348633
    6. '۰' → logprob: -20.125001907348633
    7. '1' → logprob: -20.562501907348633
    8. 'n' → logprob: -20.562501907348633
    9. 's' → logprob: -20.687501907348633
    10. '           ' → logprob: -20.687501907348633

Token 682: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.061562106013298035
    2. ' +' → logprob: -3.6865620613098145
    3. '+' → logprob: -4.4365620613098145
    4. '<|end|>' → logprob: -4.5615620613098145
    5. ' ]' → logprob: -4.6865620613098145
    6. ']+' → logprob: -6.5615620613098145
    7. ')' → logprob: -6.9365620613098145
    8. '<|end|>' → logprob: -8.311562538146973
    9. ']
' → logprob: -9.061562538146973
    10. '[' → logprob: -9.936562538146973

Token 683: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 684: ' cw' (ID: 72592)
  Prédit: 'cw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cw' → logprob: -0.007752011064440012
    2. ' cw' → logprob: -4.882751941680908
    3. '   ' → logprob: -10.382752418518066
    4. '0' → logprob: -10.507752418518066
    5. 'abs' → logprob: -10.632752418518066
    6. 'cost' → logprob: -11.257752418518066
    7. '1' → logprob: -11.382752418518066
    8. 'c' → logprob: -12.132752418518066
    9. '+' → logprob: -12.257752418518066
    10. ' ' → logprob: -12.507752418518066

Token 685: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. 'x' → logprob: -10.875019073486328
    3. '[' → logprob: -16.500019073486328
    4. '(x' → logprob: -16.500019073486328
    5. ' ' → logprob: -16.625019073486328
    6. '1' → logprob: -17.625019073486328
    7. '[x' → logprob: -17.750019073486328
    8. '(' → logprob: -17.875019073486328
    9. '```' → logprob: -19.125019073486328
    10. '<x' → logprob: -19.750019073486328

Token 686: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011224505578866228
    2. '[x' → logprob: -9.250112533569336
    3. ' x' → logprob: -11.875112533569336
    4. '[' → logprob: -12.750112533569336
    5. '```' → logprob: -12.750112533569336
    6. '_x' → logprob: -14.250112533569336
    7. '0' → logprob: -14.750112533569336
    8. '   ' → logprob: -14.750112533569336
    9. ' [' → logprob: -14.875112533569336
    10. '(x' → logprob: -15.000112533569336

Token 687: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 688: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7237526178359985
    2. ' for' → logprob: -0.8487526178359985
    3. '       ' → logprob: -2.598752498626709
    4. '	for' → logprob: -4.848752498626709
    5. '```' → logprob: -6.098752498626709
    6. '   ' → logprob: -6.098752498626709
    7. '<|end|>' → logprob: -8.598752975463867
    8. '[' → logprob: -9.723752975463867
    9. '	' → logprob: -9.973752975463867
    10. '           ' → logprob: -11.223752975463867

Token 690: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00035810720873996615
    2. 'j' → logprob: -8.750358581542969
    3. ' for' → logprob: -9.125358581542969
    4. 'i' → logprob: -10.125358581542969
    5. '   ' → logprob: -11.125358581542969
    6. 'idx' → logprob: -11.125358581542969
    7. 'b' → logprob: -11.500358581542969
    8. 'prev' → logprob: -12.125358581542969
    9. '```' → logprob: -13.250358581542969
    10. '       ' → logprob: -13.375358581542969

Token 691: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.32743406295776367
    2. 'ours' → logprob: -1.5774340629577637
    3. 'for' → logprob: -2.7024340629577637
    4. 'ourt' → logprob: -6.202434062957764
    5. 'ourse' → logprob: -6.452434062957764
    6. 'or' → logprob: -7.202434062957764
    7. 'er' → logprob: -8.327434539794922
    8. 'u' → logprob: -8.327434539794922
    9. ' for' → logprob: -8.452434539794922
    10. 'i' → logprob: -9.577434539794922

Token 692: ' du' (ID: 1462)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10538814961910248
    2. ' des' → logprob: -3.3553881645202637
    3. 'for' → logprob: -3.6053881645202637
    4. '   ' → logprob: -3.9803881645202637
    5. ' range' → logprob: -4.855388164520264
    6. ' of' → logprob: -6.105388164520264
    7. ' in' → logprob: -6.355388164520264
    8. '       ' → logprob: -6.855388164520264
    9. 'range' → logprob: -6.855388164520264
    10. 'b' → logprob: -7.105388164520264

Token 693: ' nombre' (ID: 9733)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04334352910518646
    2. ' range' → logprob: -3.1683435440063477
    3. 'i' → logprob: -9.168343544006348
    4. '```' → logprob: -9.668343544006348
    5. 'black' → logprob: -9.918343544006348
    6. 'for' → logprob: -10.543343544006348
    7. '1' → logprob: -10.793343544006348
    8. ' ' → logprob: -11.043343544006348
    9. 'b' → logprob: -11.168343544006348
    10. 'n' → logprob: -11.293343544006348

Token 694: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.4541188478469849
    2. ' des' → logprob: -2.0791187286376953
    3. 'of' → logprob: -2.2041187286376953
    4. 'des' → logprob: -2.7041187286376953
    5. 'for' → logprob: -2.7041187286376953
    6. 'dp' → logprob: -2.7041187286376953
    7. 'de' → logprob: -3.0791187286376953
    8. '   ' → logprob: -3.0791187286376953
    9. ' no' → logprob: -3.3291187286376953
    10. ' for' → logprob: -3.3291187286376953

Token 695: ' bill' (ID: 6713)
  Prédit: ' bill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bill' → logprob: -0.6991516351699829
    2. 'bill' → logprob: -0.8241516351699829
    3. 'no' → logprob: -2.9491515159606934
    4. 'b' → logprob: -4.699151515960693
    5. 'bl' → logprob: -7.074151515960693
    6. ' noirs' → logprob: -7.199151515960693
    7. ' no' → logprob: -7.574151515960693
    8. 'black' → logprob: -8.074151992797852
    9. '0' → logprob: -9.199151992797852
    10. 'ball' → logprob: -9.324151992797852

Token 696: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7297836542129517
    2. 'res' → logprob: -1.4797836542129517
    3. 'ires' → logprob: -2.229783535003662
    4. 'no' → logprob: -2.729783535003662
    5. 'ières' → logprob: -3.479783535003662
    6. 'iques' → logprob: -3.604783535003662
    7. 'aires' → logprob: -4.229783535003662
    8. 'ères' → logprob: -5.104783535003662
    9. 'ures' → logprob: -5.229783535003662
    10. 'ues' → logprob: -5.354783535003662

Token 697: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.5057721138000488
    2. '_no' → logprob: -1.1307721138000488
    3. '```' → logprob: -4.005772113800049
    4. ' no' → logprob: -4.255772113800049
    5. ' noirs' → logprob: -4.755772113800049
    6. '   ' → logprob: -4.880772113800049
    7. 'trait' → logprob: -5.380772113800049
    8. '_' → logprob: -5.755772113800049
    9. '[' → logprob: -6.005772113800049
    10. 'de' → logprob: -6.130772113800049

Token 698: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.0009761215187609196
    2. 'ir' → logprob: -7.375976085662842
    3. '[' → logprob: -9.5009765625
    4. '   ' → logprob: -9.8759765625
    5. '_no' → logprob: -10.1259765625
    6. 'no' → logprob: -10.3759765625
    7. 'irs' → logprob: -10.5009765625
    8. '
' → logprob: -11.0009765625
    9. '```' → logprob: -11.0009765625
    10. '#' → logprob: -11.1259765625

Token 699: ' déjà' (ID: 21229)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4213774800300598
    2. ' trait' → logprob: -2.671377420425415
    3. 'for' → logprob: -2.671377420425415
    4. '   ' → logprob: -3.796377420425415
    5. ' traité' → logprob: -3.796377420425415
    6. ' sélection' → logprob: -4.046377658843994
    7. ' ' → logprob: -4.046377658843994
    8. ' range' → logprob: -4.046377658843994
    9. ' no' → logprob: -4.171377658843994
    10. ',' → logprob: -4.171377658843994

Token 700: ' sélection' (ID: 43472)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.17196494340896606
    2. ' trait' → logprob: -2.0469648838043213
    3. 'tra' → logprob: -3.9219648838043213
    4. 'plac' → logprob: -6.4219651222229
    5. ' traité' → logprob: -6.5469651222229
    6. '_trait' → logprob: -6.5469651222229
    7. ' ' → logprob: -6.9219651222229
    8. '```' → logprob: -7.5469651222229
    9. 'pris' → logprob: -7.7969651222229
    10. 'processed' → logprob: -8.046964645385742

Token 701: 'nées' (ID: 136473)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.17220641672611237
    2. 'és' → logprob: -1.9222064018249512
    3. 'nées' → logprob: -4.547206401824951
    4. 'ée' → logprob: -7.047206401824951
    5. 'nés' → logprob: -9.29720687866211
    6. 'u' → logprob: -10.04720687866211
    7. '```' → logprob: -10.04720687866211
    8. 'es' → logprob: -10.29720687866211
    9. 'ur' → logprob: -10.67220687866211
    10. '   ' → logprob: -10.67220687866211

Token 702: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22202849388122559
    2. '[' → logprob: -2.8470284938812256
    3. 'for' → logprob: -3.2220284938812256
    4. ' in' → logprob: -3.3470284938812256
    5. ':' → logprob: -3.4720284938812256
    6. ',' → logprob: -4.722028732299805
    7. ' range' → logprob: -5.222028732299805
    8. '   ' → logprob: -5.347028732299805
    9. '```' → logprob: -5.722028732299805
    10. '<|end|>' → logprob: -5.722028732299805

Token 703: 'de' (ID: 613)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7782947421073914
    2. ' for' → logprob: -1.4032948017120361
    3. ' range' → logprob: -1.9032948017120361
    4. 'for' → logprob: -2.653294801712036
    5. 'range' → logprob: -3.653294801712036
    6. ' ' → logprob: -4.403294563293457
    7. ')' → logprob: -4.778294563293457
    8. ' in' → logprob: -5.028294563293457
    9. ' n' → logprob: -5.153294563293457
    10. ' i' → logprob: -5.528294563293457

Token 704: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12923561036586761
    2. '0' → logprob: -2.1292355060577393
    3. ' ' → logprob: -6.129235744476318
    4. 'range' → logprob: -9.62923526763916
    5. ' range' → logprob: -10.12923526763916
    6. '   ' → logprob: -11.12923526763916
    7. 'n' → logprob: -13.62923526763916
    8. ')' → logprob: -13.87923526763916
    9. '```' → logprob: -14.50423526763916
    10. 'i' → logprob: -14.62923526763916

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004217890091240406
    2. '0' → logprob: -5.504218101501465
    3. 'range' → logprob: -9.504218101501465
    4. ' ' → logprob: -10.129218101501465
    5. ' range' → logprob: -11.379218101501465
    6. 'n' → logprob: -12.129218101501465
    7. '   ' → logprob: -12.754218101501465
    8. 'dp' → logprob: -13.004218101501465
    9. 'nd' → logprob: -13.629218101501465
    10. '
' → logprob: -15.004218101501465

Token 706: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07626253366470337
    2. ',n' → logprob: -3.3262624740600586
    3. '):
' → logprob: -4.076262474060059
    4. ' ,' → logprob: -4.576262474060059
    5. ' à' → logprob: -5.451262474060059
    6. '
' → logprob: -6.076262474060059
    7. '   ' → logprob: -6.951262474060059
    8. ')' → logprob: -7.451262474060059
    9. 'à' → logprob: -7.701262474060059
    10. 'for' → logprob: -8.451262474060059

Token 707: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007100477814674377
    2. ' n' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.500709533691406
    4. '```' → logprob: -17.125709533691406
    5. '
' → logprob: -17.875709533691406
    6. ')n' → logprob: -18.250709533691406
    7. '	n' → logprob: -18.375709533691406
    8. '_n' → logprob: -20.125709533691406
    9. ')' → logprob: -20.375709533691406
    10. ' ' → logprob: -20.375709533691406

Token 708: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05295497551560402
    2. '+' → logprob: -3.802954912185669
    3. '):' → logprob: -3.802954912185669
    4. ')' → logprob: -5.927955150604248
    5. '   ' → logprob: -6.052955150604248
    6. ' +' → logprob: -7.552955150604248
    7. '       ' → logprob: -7.552955150604248
    8. ',' → logprob: -8.30295467376709
    9. '```' → logprob: -8.30295467376709
    10. ':' → logprob: -9.42795467376709

Token 709: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025568727403879166
    2. '   ' → logprob: -4.525568962097168
    3. 'for' → logprob: -4.900568962097168
    4. '```' → logprob: -5.650568962097168
    5. '       ' → logprob: -6.650568962097168
    6. '	for' → logprob: -6.775568962097168
    7. ':' → logprob: -7.900568962097168
    8. '[' → logprob: -8.275568962097168
    9. '<|end|>' → logprob: -9.275568962097168
    10. '    ' → logprob: -9.900568962097168

Token 710: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16659289598464966
    2. 'for' (adapté à ' for') → logprob: -1.9165928363800049
    3. '       ' → logprob: -5.541593074798584
    4. '   ' → logprob: -6.166593074798584
    5. '```' → logprob: -8.291592597961426
    6. '	for' → logprob: -9.916592597961426
    7. '    ' → logprob: -12.166592597961426
    8. '_' → logprob: -12.291592597961426
    9. '[' → logprob: -13.166592597961426
    10. '\' → logprob: -13.416592597961426

Token 711: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.37976911664009094
    2. 'j' → logprob: -1.6297690868377686
    3. 'i' → logprob: -3.0047690868377686
    4. ' b' → logprob: -3.2547690868377686
    5. ' j' → logprob: -3.7547690868377686
    6. ' i' → logprob: -5.129769325256348
    7. 'y' → logprob: -6.754769325256348
    8. 'k' → logprob: -7.879769325256348
    9. ' y' → logprob: -8.379769325256348
    10. 'black' → logprob: -8.879769325256348

Token 712: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028185509145259857
    2. 'in' → logprob: -5.877818584442139
    3. '   ' → logprob: -12.62781810760498
    4. '_in' → logprob: -13.00281810760498
    5. '[' → logprob: -13.25281810760498
    6. '_' → logprob: -13.50281810760498
    7. '	in' → logprob: -13.50281810760498
    8. ',' → logprob: -14.12781810760498
    9. 'b' → logprob: -14.12781810760498
    10. '1' → logprob: -14.62781810760498

Token 713: ' (' (ID: 350)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.6449577808380127
    2. 'dp' → logprob: -1.1449577808380127
    3. 'val' → logprob: -2.3949577808380127
    4. 'cost' → logprob: -3.5199577808380127
    5. 'p' → logprob: -5.019957542419434
    6. 'db' → logprob: -5.144957542419434
    7. 'v' → logprob: -5.394957542419434
    8. 'pb' → logprob: -5.894957542419434
    9. 'nb' → logprob: -6.019957542419434
    10. 'c' → logprob: -6.019957542419434

Token 714: 'y' (ID: 88)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21648475527763367
    2. 'prev' → logprob: -2.591484785079956
    3. 'db' → logprob: -3.341484785079956
    4. 'cost' → logprob: -3.466484785079956
    5. 'b' → logprob: -4.716484546661377
    6. 'val' → logprob: -4.841484546661377
    7. 'nb' → logprob: -4.841484546661377
    8. 'pb' → logprob: -4.966484546661377
    9. 'cb' → logprob: -5.466484546661377
    10. 'c' → logprob: -5.841484546661377

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031910240650177
    2. ' ,' → logprob: -6.378190994262695
    3. '),' → logprob: -7.253190994262695
    4. ')' → logprob: -7.628190994262695
    5. ',)' → logprob: -9.003190994262695
    6. '_,' → logprob: -9.628190994262695
    7. ',y' → logprob: -11.003190994262695
    8. ',b' → logprob: -11.128190994262695
    9. ',_' → logprob: -11.503190994262695
    10. ',),' → logprob: -11.503190994262695

Token 716: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.7066136598587036
    2. 'cost' → logprob: -1.7066136598587036
    3. 'dp' → logprob: -1.9566136598587036
    4. 'c' → logprob: -2.331613540649414
    5. 'db' → logprob: -3.456613540649414
    6. 'prev' → logprob: -3.956613540649414
    7. 'val' → logprob: -5.456613540649414
    8. 'd' → logprob: -5.581613540649414
    9. 'dc' → logprob: -5.706613540649414
    10. 'v' → logprob: -5.831613540649414

Token 717: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010079983621835709
    2. '1' → logprob: -4.760079860687256
    3. '),' → logprob: -7.510079860687256
    4. ',' → logprob: -7.635079860687256
    5. ')]' → logprob: -8.635080337524414
    6. '0' → logprob: -9.260080337524414
    7. '[' → logprob: -9.885080337524414
    8. 's' → logprob: -10.760080337524414
    9. 'b' → logprob: -10.885080337524414
    10. 'in' → logprob: -11.010080337524414

Token 718: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012618985492736101
    2. '),' → logprob: -6.7512617111206055
    3. '0' → logprob: -10.126261711120605
    4. ',' → logprob: -11.251261711120605
    5. '1' → logprob: -11.376261711120605
    6. '   ' → logprob: -12.251261711120605
    7. 'in' → logprob: -12.376261711120605
    8. '[' → logprob: -12.501261711120605
    9. ' )' → logprob: -12.501261711120605
    10. 'b' → logprob: -12.626261711120605

Token 719: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.0010675819357857108
    2. ' cb' → logprob: -7.126067638397217
    3. 'dp' → logprob: -9.876067161560059
    4. 'prev' → logprob: -10.126067161560059
    5. 'y' → logprob: -10.251067161560059
    6. '_cb' → logprob: -10.376067161560059
    7. 'nd' → logprob: -10.501067161560059
    8. 'yb' → logprob: -10.626067161560059
    9. 'b' → logprob: -10.751067161560059
    10. 'nb' → logprob: -12.251067161560059

Token 720: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002205828350270167
    2. '0' → logprob: -9.00022029876709
    3. ',' → logprob: -10.37522029876709
    4. ')' → logprob: -10.75022029876709
    5. 'b' → logprob: -10.75022029876709
    6. '[' → logprob: -12.25022029876709
    7. 'cb' → logprob: -12.37522029876709
    8. 'y' → logprob: -12.37522029876709
    9. '_' → logprob: -13.50022029876709
    10. '),' → logprob: -13.87522029876709

Token 721: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032867121626622975
    2. 'in' → logprob: -8.25032901763916
    3. ' in' → logprob: -10.75032901763916
    4. '),' → logprob: -10.87532901763916
    5. ' )' → logprob: -11.25032901763916
    6. '   ' → logprob: -12.37532901763916
    7. ')
' → logprob: -13.00032901763916
    8. ',' → logprob: -13.00032901763916
    9. '）' → logprob: -14.37532901763916
    10. '_' → logprob: -14.87532901763916

Token 722: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1807173192501068
    2. 'in' → logprob: -1.8057173490524292
    3. ',' → logprob: -7.180717468261719
    4. '   ' → logprob: -9.555717468261719
    5. '_in' → logprob: -10.180717468261719
    6. ')' → logprob: -10.305717468261719
    7. '```' → logprob: -10.930717468261719
    8. '_' → logprob: -11.555717468261719
    9. ' ' → logprob: -11.930717468261719
    10. '	in' → logprob: -12.180717468261719

Token 723: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5777218341827393
    2. ' enumerate' → logprob: -0.8277218341827393
    3. ' zip' → logprob: -6.82772159576416
    4. 'zip' → logprob: -7.32772159576416
    5. 'en' → logprob: -10.82772159576416
    6. '```' → logprob: -11.20272159576416
    7. 'in' → logprob: -13.57772159576416
    8. ' in' → logprob: -13.95272159576416
    9. ' en' → logprob: -14.07772159576416
    10. ' ' → logprob: -14.20272159576416

Token 724: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.11402802169322968
    2. 'zip' → logprob: -2.364027976989746
    3. ' zip' → logprob: -4.489027976989746
    4. 'rev' → logprob: -6.114027976989746
    5. 'enumer' → logprob: -9.364027976989746
    6. '(en' → logprob: -9.364027976989746
    7. '(re' → logprob: -9.864027976989746
    8. '(range' → logprob: -10.989027976989746
    9. '((' → logprob: -11.239027976989746
    10. 're' → logprob: -11.614027976989746

Token 725: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.043268412351608276
    2. '(range' → logprob: -3.1682684421539307
    3. '(' → logprob: -9.168268203735352
    4. '(dp' → logprob: -9.293268203735352
    5. 'rev' → logprob: -10.668268203735352
    6. '(reverse' → logprob: -11.043268203735352
    7. ' (' → logprob: -11.293268203735352
    8. ' rev' → logprob: -12.543268203735352
    9. '(prev' → logprob: -13.043268203735352
    10. '   ' → logprob: -13.043268203735352

Token 726: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.7292167184641585e-05
    2. 'p' → logprob: -10.375057220458984
    3. 'c' → logprob: -11.875057220458984
    4. '(' → logprob: -12.125057220458984
    5. '(v' → logprob: -12.500057220458984
    6. '[' → logprob: -13.250057220458984
    7. 'f' → logprob: -13.375057220458984
    8. '(re' → logprob: -13.750057220458984
    9. 'w' → logprob: -14.250057220458984
    10. 'ev' → logprob: -14.500057220458984

Token 727: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009402852156199515
    2. '1' → logprob: -7.500940322875977
    3. '(' → logprob: -8.000940322875977
    4. '   ' → logprob: -10.625940322875977
    5. '0' → logprob: -12.375940322875977
    6. ')[' → logprob: -12.500940322875977
    7. ' [' → logprob: -12.750940322875977
    8. ',' → logprob: -12.875940322875977
    9. '       ' → logprob: -13.125940322875977
    10. ')' → logprob: -13.563440322875977

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13950110971927643
    2. '[' → logprob: -2.1395010948181152
    3. '0' → logprob: -4.389501094818115
    4. '(' → logprob: -10.514501571655273
    5. '   ' → logprob: -10.639501571655273
    6. '
' → logprob: -11.639501571655273
    7. ' ' → logprob: -12.014501571655273
    8. '```' → logprob: -12.014501571655273
    9. ' [' → logprob: -13.264501571655273
    10. '{' → logprob: -13.764501571655273

Token 729: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013616843149065971
    2. '[' → logprob: -4.763617038726807
    3. ' ,' → logprob: -6.638617038726807
    4. '   ' → logprob: -6.763617038726807
    5. '       ' → logprob: -6.888617038726807
    6. ',[' → logprob: -7.763617038726807
    7. '(),' → logprob: -8.013616561889648
    8. '[b' → logprob: -8.888616561889648
    9. '           ' → logprob: -9.013616561889648
    10. ',b' → logprob: -9.388616561889648

Token 730: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.663394033908844
    2. ' cost' → logprob: -1.0383939743041992
    3. 'cw' → logprob: -2.788393974304199
    4. ' cw' → logprob: -2.913393974304199
    5. 'range' → logprob: -5.913393974304199
    6. ' range' → logprob: -5.913393974304199
    7. '               ' → logprob: -6.538393974304199
    8. '   ' → logprob: -6.663393974304199
    9. '           ' → logprob: -6.913393974304199
    10. '       ' → logprob: -7.038393974304199

Token 731: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028732267674058676
    2. '0' → logprob: -6.627873420715332
    3. ',' → logprob: -7.252873420715332
    4. '1' → logprob: -7.627873420715332
    5. ')[' → logprob: -9.377873420715332
    6. '(' → logprob: -9.627873420715332
    7. '       ' → logprob: -9.752873420715332
    8. '   ' → logprob: -9.877873420715332
    9. ',[' → logprob: -10.252873420715332
    10. ')' → logprob: -11.127873420715332

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8327206969261169
    2. '0' → logprob: -0.9577206969261169
    3. '[' → logprob: -1.7077207565307617
    4. '(' → logprob: -9.957720756530762
    5. '   ' → logprob: -10.832720756530762
    6. ' ' → logprob: -12.582720756530762
    7. 'range' → logprob: -12.957720756530762
    8. '[b' → logprob: -12.957720756530762
    9. ' [' → logprob: -13.457720756530762
    10. '```' → logprob: -13.457720756530762

Token 733: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6850794553756714
    2. ',' → logprob: -0.8100794553756714
    3. '),' → logprob: -3.435079574584961
    4. '       ' → logprob: -4.310079574584961
    5. '[b' → logprob: -6.185079574584961
    6. '   ' → logprob: -6.685079574584961
    7. ',[' → logprob: -7.560079574584961
    8. ' ,' → logprob: -7.935079574584961
    9. ',b' → logprob: -8.185079574584961
    10. ')[' → logprob: -8.310079574584961

Token 734: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.431274950504303
    2. 'cost' → logprob: -1.0562748908996582
    3. '           ' → logprob: -8.056275367736816
    4. '               ' → logprob: -8.056275367736816
    5. '                   ' → logprob: -8.806275367736816
    6. '   ' → logprob: -9.056275367736816
    7. '       ' → logprob: -9.181275367736816
    8. 'range' → logprob: -9.181275367736816
    9. '          ' → logprob: -9.181275367736816
    10. '                ' → logprob: -9.306275367736816

Token 735: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004546254931483418
    2. '[b' → logprob: -7.875454425811768
    3. ')[' → logprob: -10.750454902648926
    4. '1' → logprob: -11.125454902648926
    5. '   ' → logprob: -11.375454902648926
    6. ' [' → logprob: -11.750454902648926
    7. 'b' → logprob: -12.250454902648926
    8. '[n' → logprob: -13.125454902648926
    9. '[x' → logprob: -13.125454902648926
    10. '[y' → logprob: -13.250454902648926

Token 736: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.97024549683556e-05
    2. '2' → logprob: -10.000080108642578
    3. '0' → logprob: -10.750080108642578
    4. ' ' → logprob: -11.875080108642578
    5. 'cost' → logprob: -12.875080108642578
    6. '   ' → logprob: -13.125080108642578
    7. '[' → logprob: -14.625080108642578
    8. '(' → logprob: -15.500080108642578
    9. '  ' → logprob: -16.375080108642578
    10. ' cost' → logprob: -16.750080108642578

Token 737: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01927255280315876
    2. '[b' → logprob: -5.019272327423096
    3. '),' → logprob: -5.394272327423096
    4. '],' → logprob: -5.894272327423096
    5. '][' → logprob: -6.144272327423096
    6. ')):
' → logprob: -6.519272327423096
    7. ')[' → logprob: -8.394272804260254
    8. ',' → logprob: -8.394272804260254
    9. ']):
' → logprob: -8.519272804260254
    10. '       ' → logprob: -8.644272804260254

Token 738: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07806253433227539
    2. 'b' → logprob: -2.7030625343322754
    3. ':b' → logprob: -6.078062534332275
    4. '   ' → logprob: -6.203062534332275
    5. ':-' → logprob: -6.828062534332275
    6. ':' → logprob: -7.453062534332275
    7. '0' → logprob: -7.828062534332275
    8. '(b' → logprob: -8.328062057495117
    9. '```' → logprob: -8.578062057495117
    10. '2' → logprob: -8.953062057495117

Token 739: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014990346506237984
    2. ':],' → logprob: -4.639990329742432
    3. '])):
' → logprob: -6.014990329742432
    4. ':]' → logprob: -6.764990329742432
    5. ']):' → logprob: -7.889990329742432
    6. ']),' → logprob: -7.889990329742432
    7. ']):
' → logprob: -8.38999080657959
    8. '),' → logprob: -8.38999080657959
    9. '],' → logprob: -9.01499080657959
    10. ']))' → logprob: -9.01499080657959

Token 740: '])):
' (ID: 145266)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.0862482339143753
    2. '),' → logprob: -3.0862481594085693
    3. ')):' → logprob: -3.7112481594085693
    4. '       ' → logprob: -4.586248397827148
    5. '):
' → logprob: -7.336248397827148
    6. '))' → logprob: -7.711248397827148
    7. ')),' → logprob: -8.211248397827148
    8. '])):
' → logprob: -8.336248397827148
    9. '           ' → logprob: -8.461248397827148
    10. ')):
' → logprob: -8.586248397827148

Token 741: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4055643677711487
    2. '           ' → logprob: -1.155564308166504
    3. ',' → logprob: -4.530564308166504
    4. '[' → logprob: -6.530564308166504
    5. ' if' → logprob: -7.530564308166504
    6. '        
' → logprob: -7.530564308166504
    7. '):
' → logprob: -7.530564308166504
    8. ' ' → logprob: -7.530564308166504
    9. ')' → logprob: -7.655564308166504
    10. '               ' → logprob: -7.655564308166504

Token 742: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0974599123001099
    2. '           ' → logprob: -1.4724599123001099
    3. ' nd' → logprob: -1.5974599123001099
    4. ' if' → logprob: -2.0974597930908203
    5. 'nd' → logprob: -2.3474597930908203
    6. 'if' → logprob: -5.22245979309082
    7. 'prev' → logprob: -5.59745979309082
    8. '       ' → logprob: -6.09745979309082
    9. ' prev' → logprob: -6.59745979309082
    10. '#' (adapté à ' #') → logprob: -7.47245979309082

Token 743: ' Cho' (ID: 14207)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.5687432289123535
    2. 'prev' → logprob: -1.1937432289123535
    3. 'cost' → logprob: -3.3187432289123535
    4. 'dp' → logprob: -3.6937432289123535
    5. 'if' → logprob: -3.8187432289123535
    6. ' nd' → logprob: -4.0687432289123535
    7. 'val' → logprob: -4.8187432289123535
    8. '           ' → logprob: -5.1937432289123535
    9. 'cur' → logprob: -5.6937432289123535
    10. '       ' → logprob: -6.8187432289123535

Token 744: 'ix' (ID: 1128)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1266658902168274
    2. 'oses' → logprob: -3.2516658306121826
    3. 'ose' → logprob: -4.126666069030762
    4. 'ix' → logprob: -4.251666069030762
    5. '               ' → logprob: -4.376666069030762
    6. 'if' → logprob: -4.376666069030762
    7. 'os' → logprob: -5.001666069030762
    8. 'isir' → logprob: -5.626666069030762
    9. '       ' → logprob: -5.751666069030762
    10. 'o' → logprob: -6.126666069030762

Token 745: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06537122279405594
    2. ' between' → logprob: -3.94037127494812
    3. ' =' → logprob: -4.190371036529541
    4. '=' → logprob: -5.315371036529541
    5. '               ' → logprob: -5.315371036529541
    6. ':' → logprob: -5.440371036529541
    7. ' if' → logprob: -5.690371036529541
    8. '[' → logprob: -5.940371036529541
    9. ' entre' → logprob: -6.190371036529541
    10. '       ' → logprob: -6.190371036529541

Token 746: ' coût' (ID: 73109)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5768749117851257
    2. 'nd' → logprob: -1.3268749713897705
    3. 'prev' → logprob: -1.9518749713897705
    4. 'max' → logprob: -4.326874732971191
    5. 'dp' → logprob: -4.451874732971191
    6. 'minimum' → logprob: -6.326874732971191
    7. 'best' → logprob: -6.951874732971191
    8. 'b' → logprob: -7.201874732971191
    9. 'cost' → logprob: -7.451874732971191
    10. 'continue' → logprob: -7.951874732971191

Token 747: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3288666605949402
    2. '       ' → logprob: -2.203866720199585
    3. 'nd' → logprob: -3.203866720199585
    4. '               ' → logprob: -3.453866720199585
    5. ' =' → logprob: -3.828866720199585
    6. ' nd' → logprob: -3.953866720199585
    7. ' précédent' → logprob: -4.828866481781006
    8. '=' → logprob: -4.953866481781006
    9. 'prev' → logprob: -4.953866481781006
    10. 'possible' → logprob: -4.953866481781006

Token 748: ' ajout' (ID: 64605)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23640941083431244
    2. 'nd' → logprob: -1.6114094257354736
    3. 'b' → logprob: -5.1114091873168945
    4. '[min' → logprob: -7.3614091873168945
    5. ' nd' → logprob: -7.4864091873168945
    6. 'minimum' → logprob: -7.4864091873168945
    7. '   ' → logprob: -7.9864091873168945
    8. '#' → logprob: -7.9864091873168945
    9. 'dp' → logprob: -8.111409187316895
    10. 'continu' → logprob: -8.236409187316895

Token 749: 'ant' (ID: 493)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.7009024620056152
    2. 'ant' → logprob: -0.7009024620056152
    3. 'outer' → logprob: -5.950902462005615
    4. 'ent' → logprob: -7.075902462005615
    5. '           ' → logprob: -7.075902462005615
    6. 'oint' → logprob: -7.200902462005615
    7. 'oute' → logprob: -7.200902462005615
    8. 'd' → logprob: -8.075902938842773
    9. '   ' → logprob: -8.450902938842773
    10. '               ' → logprob: -8.575902938842773

Token 750: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2680585384368896
    2. 'max' → logprob: -1.8930585384368896
    3. 'cb' → logprob: -1.8930585384368896
    4. 'prev' → logprob: -2.1430585384368896
    5. 'nd' → logprob: -2.6430585384368896
    6. ' dp' → logprob: -3.1430585384368896
    7. 'min' → logprob: -3.2680585384368896
    8. ' max' → logprob: -3.2680585384368896
    9. ' cb' → logprob: -3.3930585384368896
    10. ' min' → logprob: -3.6430585384368896

Token 751: ' prochaine' (ID: 78876)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.7209397554397583
    2. 'cb' → logprob: -1.7209397554397583
    3. 'nd' → logprob: -1.8459397554397583
    4. 'dp' → logprob: -1.8459397554397583
    5. 'b' → logprob: -2.3459396362304688
    6. 'min' → logprob: -2.8459396362304688
    7. ' max' → logprob: -3.8459396362304688
    8. 'prev' → logprob: -3.8459396362304688
    9. ' min' → logprob: -4.220939636230469
    10. 'cw' → logprob: -4.220939636230469

Token 752: ' bille' (ID: 97414)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9227198362350464
    2. 'bl' → logprob: -1.9227198362350464
    3. ' noire' → logprob: -1.9227198362350464
    4. 'nd' → logprob: -2.422719955444336
    5. '_no' → logprob: -2.547719955444336
    6. ' nd' → logprob: -3.047719955444336
    7. ' blanche' → logprob: -3.172719955444336
    8. ' no' → logprob: -3.547719955444336
    9. 'no' → logprob: -3.672719955444336
    10. '   ' → logprob: -3.797719955444336

Token 753: ' noire' (ID: 115610)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2846237421035767
    2. '       ' → logprob: -1.9096237421035767
    3. '   ' → logprob: -2.409623622894287
    4. 'bl' → logprob: -2.534623622894287
    5. ' no' → logprob: -3.034623622894287
    6. 'no' → logprob: -3.034623622894287
    7. '_no' → logprob: -3.159623622894287
    8. '[b' → logprob: -3.159623622894287
    9. '[' → logprob: -3.284623622894287
    10. ' noire' → logprob: -3.659623622894287

Token 754: ' ou' (ID: 2031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.321013480424881
    2. ' =' → logprob: -1.4460134506225586
    3. '=' → logprob: -4.821013450622559
    4. '       ' → logprob: -4.821013450622559
    5. ',' → logprob: -5.321013450622559
    6. '               ' → logprob: -5.946013450622559
    7. '[' → logprob: -5.946013450622559
    8. 'nd' → logprob: -6.071013450622559
    9. ' or' → logprob: -6.696013450622559
    10. ' if' → logprob: -6.696013450622559

Token 755: ' la' (ID: 557)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5173974633216858
    2. 'en' → logprob: -2.517397403717041
    3. ' la' → logprob: -2.517397403717041
    4. 'nd' → logprob: -3.017397403717041
    5. ' nd' → logprob: -3.517397403717041
    6. '           ' → logprob: -3.767397403717041
    7. 'la' → logprob: -4.017397403717041
    8. '   ' → logprob: -4.517397403717041
    9. ' celle' → logprob: -4.767397403717041
    10. 'bl' → logprob: -4.767397403717041

Token 756: ' prochaine' (ID: 78876)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.40452462434768677
    2. ' blanche' → logprob: -2.529524564743042
    3. 'white' → logprob: -3.779524564743042
    4. 'b' → logprob: -3.779524564743042
    5. 'no' → logprob: -3.904524564743042
    6. 'nd' → logprob: -3.904524564743042
    7. '   ' → logprob: -4.029524803161621
    8. '#' → logprob: -4.404524803161621
    9. ' blanc' → logprob: -4.404524803161621
    10. ' white' → logprob: -4.654524803161621

Token 757: ' bille' (ID: 97414)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.08541534096002579
    2. ' blanche' → logprob: -2.9604153633117676
    3. 'b' → logprob: -3.5854153633117676
    4. 'white' → logprob: -7.460415363311768
    5. 'no' → logprob: -7.585415363311768
    6. 'ble' → logprob: -7.960415363311768
    7. '```' → logprob: -8.71041488647461
    8. ' noire' → logprob: -8.83541488647461
    9. 'bill' → logprob: -9.33541488647461
    10. '   ' → logprob: -9.58541488647461

Token 758: ' blanche' (ID: 102684)
  Prédit: ' noire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noire' → logprob: -0.36438116431236267
    2. ' blanche' → logprob: -2.2393810749053955
    3. 'no' → logprob: -2.8643810749053955
    4. '   ' → logprob: -3.1143810749053955
    5. '_no' → logprob: -3.7393810749053955
    6. 'bl' → logprob: -3.8643810749053955
    7. '       ' → logprob: -4.364381313323975
    8. ' no' → logprob: -4.489381313323975
    9. '[' → logprob: -5.364381313323975
    10. '```' → logprob: -5.739381313323975

Token 759: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02555164135992527
    2. '               ' → logprob: -5.400551795959473
    3. ' =' → logprob: -5.650551795959473
    4. 'nd' → logprob: -6.025551795959473
    5. '       ' → logprob: -6.025551795959473
    6. '[' → logprob: -6.150551795959473
    7. ',' → logprob: -6.525551795959473
    8. ' nd' → logprob: -6.775551795959473
    9. ')' → logprob: -6.900551795959473
    10. '=' → logprob: -6.900551795959473

Token 760: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3669358789920807
    2. ' nd' → logprob: -1.4919358491897583
    3. 'nd' → logprob: -3.241935968399048
    4. '               ' → logprob: -3.366935968399048
    5. ' if' → logprob: -5.241935729980469
    6. '```' → logprob: -7.491935729980469
    7. '
' → logprob: -7.741935729980469
    8. ' prev' → logprob: -7.866935729980469
    9. ',' → logprob: -7.866935729980469
    10. 'prev' → logprob: -8.616935729980469

Token 761: ' #' (ID: 1069)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.35804083943367004
    2. ' nd' → logprob: -1.7330408096313477
    3. '           ' → logprob: -2.6080408096313477
    4. ' if' → logprob: -3.4830408096313477
    5. 'if' → logprob: -4.483040809631348
    6. '               ' → logprob: -6.233040809631348
    7. 'dp' → logprob: -6.358040809631348
    8. 'prev' → logprob: -6.733040809631348
    9. '       ' → logprob: -7.233040809631348
    10. '   ' → logprob: -7.608040809631348

Token 762: ' Compar' (ID: 35094)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.19601228833198547
    2. 'prev' → logprob: -2.321012258529663
    3. ' nd' → logprob: -2.696012258529663
    4. 'if' → logprob: -5.196012496948242
    5. '           ' → logprob: -5.696012496948242
    6. ' if' → logprob: -6.571012496948242
    7. ' prev' → logprob: -7.196012496948242
    8. 'dp' → logprob: -7.571012496948242
    9. '               ' → logprob: -9.071012496948242
    10. '_nd' → logprob: -9.196012496948242

Token 763: 'aison' (ID: 37278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.062434129416942596
    2. 'er' → logprob: -3.312434196472168
    3. '           ' → logprob: -5.187434196472168
    4. 'é' → logprob: -5.312434196472168
    5. 'aison' → logprob: -5.437434196472168
    6. '               ' → logprob: -6.437434196472168
    7. '   ' → logprob: -7.062434196472168
    8. 'ons' → logprob: -7.062434196472168
    9. ' =' → logprob: -7.437434196472168
    10. '            ' → logprob: -7.687434196472168

Token 764: ' entre' (ID: 3853)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.3740522861480713
    2. ' nd' → logprob: -1.3740522861480713
    3. ' =' → logprob: -1.7490522861480713
    4. '           ' → logprob: -1.8740522861480713
    5. '=' → logprob: -2.6240522861480713
    6. '   ' → logprob: -4.249052047729492
    7. '(nd' → logprob: -4.374052047729492
    8. '               ' → logprob: -4.624052047729492
    9. '[' → logprob: -4.749052047729492
    10. '       ' → logprob: -4.874052047729492

Token 765: ' deux' (ID: 10301)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.48845043778419495
    2. 'prev' → logprob: -1.1134504079818726
    3. 'dp' → logprob: -3.238450527191162
    4. ' nd' → logprob: -4.613450527191162
    5. 'min' → logprob: -5.363450527191162
    6. ' prev' → logprob: -6.863450527191162
    7. '   ' → logprob: -6.863450527191162
    8. ' dp' → logprob: -7.238450527191162
    9. 'max' → logprob: -7.363450527191162
    10. ' min' → logprob: -9.238450050354004

Token 766: ' scén' (ID: 90015)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.7861151099205017
    2. 'dp' → logprob: -1.1611151695251465
    3. '(dp' → logprob: -3.2861151695251465
    4. 'options' → logprob: -3.9111151695251465
    5. ' nd' → logprob: -3.9111151695251465
    6. 'co' → logprob: -3.9111151695251465
    7. '(nd' → logprob: -3.9111151695251465
    8. ' options' → logprob: -4.0361151695251465
    9. 'min' → logprob: -4.6611151695251465
    10. ' coûts' → logprob: -4.7861151695251465

Token 767: 'arios' (ID: 8368)
  Prédit: 'arios'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arios' → logprob: -0.17066001892089844
    2. 'ar' → logprob: -2.0456600189208984
    3. 'arii' → logprob: -4.670660018920898
    4. 'aires' → logprob: -4.920660018920898
    5. 'ario' → logprob: -5.670660018920898
    6. 'ários' → logprob: -6.170660018920898
    7. '```' → logprob: -7.295660018920898
    8. 's' → logprob: -7.420660018920898
    9. 'ARIOS' → logprob: -7.420660018920898
    10. 'aros' → logprob: -7.795660018920898

Token 768: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6931442618370056
    2. 'nd' → logprob: -1.5681443214416504
    3. ' =' → logprob: -2.4431443214416504
    4. '               ' → logprob: -2.8181443214416504
    5. '       ' → logprob: -3.4431443214416504
    6. ' nd' → logprob: -3.5681443214416504
    7. '=' → logprob: -3.9431443214416504
    8. ':' → logprob: -4.19314432144165
    9. ' if' → logprob: -4.56814432144165
    10. 'prev' → logprob: -4.81814432144165

Token 769: ' prise' (ID: 43816)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9835014343261719
    2. 'nd' → logprob: -1.2335014343261719
    3. ' nd' → logprob: -1.9835014343261719
    4. ' min' → logprob: -2.233501434326172
    5. ' choisir' → logprob: -3.983501434326172
    6. 'max' → logprob: -4.108501434326172
    7. 'cho' → logprob: -4.108501434326172
    8. '       ' → logprob: -5.608501434326172
    9. '           ' → logprob: -5.733501434326172
    10. '   ' → logprob: -5.733501434326172

Token 770: ' du' (ID: 1462)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.687581479549408
    2. ' min' → logprob: -1.5625815391540527
    3. 'max' → logprob: -1.5625815391540527
    4. ' max' → logprob: -3.0625815391540527
    5. ' de' → logprob: -4.562581539154053
    6. '_min' → logprob: -4.812581539154053
    7. '[min' → logprob: -4.937581539154053
    8. '_max' → logprob: -6.062581539154053
    9. 'de' → logprob: -6.312581539154053
    10. '[max' → logprob: -7.937581539154053

Token 771: ' minimum' (ID: 11085)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3964560329914093
    2. 'min' → logprob: -1.271456003189087
    3. ' min' → logprob: -3.896456003189087
    4. ' max' → logprob: -4.021456241607666
    5. 'minimum' → logprob: -5.646456241607666
    6. 'nd' → logprob: -6.521456241607666
    7. 'maximum' → logprob: -6.646456241607666
    8. '   ' → logprob: -7.771456241607666
    9. ' minimum' → logprob: -8.021455764770508
    10. 'prev' → logprob: -8.271455764770508

Token 772: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3578532338142395
    2. ' nd' → logprob: -1.9828531742095947
    3. 'nd' → logprob: -2.7328531742095947
    4. ' if' → logprob: -3.7328531742095947
    5. '       ' → logprob: -3.8578531742095947
    6. ' =' → logprob: -4.232853412628174
    7. '(nd' → logprob: -4.232853412628174
    8. '               ' → logprob: -4.607853412628174
    9. ',' → logprob: -5.857853412628174
    10. ' min' → logprob: -6.607853412628174

Token 773: '           ' (ID: 352)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.36251795291900635
    2. 'nd' → logprob: -1.6125179529190063
    3. '           ' → logprob: -2.612517833709717
    4. '       ' → logprob: -3.987517833709717
    5. '               ' → logprob: -4.987517833709717
    6. ' min' → logprob: -5.987517833709717
    7. 'min' → logprob: -7.487517833709717
    8. '   ' → logprob: -7.862517833709717
    9. '                   ' → logprob: -7.987517833709717
    10. '```' → logprob: -8.112518310546875

Token 774: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.7737597823143005
    2. 'nd' (adapté à ' nd') → logprob: -1.3987598419189453
    3. ' if' → logprob: -2.0237598419189453
    4. 'if' → logprob: -3.2737598419189453
    5. 'dp' → logprob: -3.3987598419189453
    6. ' dp' → logprob: -3.7737598419189453
    7. 'prev' → logprob: -4.148759841918945
    8. '           ' → logprob: -4.648759841918945
    9. '       ' → logprob: -4.773759841918945
    10. '   ' → logprob: -5.148759841918945

Token 775: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.750000953674316
    3. '_p' → logprob: -16.375
    4. '[p' → logprob: -16.375
    5. 'п' → logprob: -16.5
    6. '=' → logprob: -17.375
    7. '
' → logprob: -17.625
    8. '[' → logprob: -17.75
    9. '```' → logprob: -17.75
    10. 'پ' → logprob: -17.8125

Token 776: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0001114106344175525
    2. 'b' → logprob: -9.62511157989502
    3. '[' → logprob: -10.12511157989502
    4. ' [' → logprob: -12.87511157989502
    5. '[
' → logprob: -14.25011157989502
    6. '   ' → logprob: -14.75011157989502
    7. ' b' → logprob: -15.12511157989502
    8. ' =' → logprob: -15.50011157989502
    9. '=b' → logprob: -15.50011157989502
    10. '```' → logprob: -15.75011157989502

Token 777: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01279604434967041
    2. ' +' → logprob: -4.512795925140381
    3. ']' → logprob: -6.387795925140381
    4. '+]' → logprob: -10.887796401977539
    5. '   ' → logprob: -11.012796401977539
    6. '+
' → logprob: -11.262796401977539
    7. ']+' → logprob: -11.512796401977539
    8. ' ]' → logprob: -13.637796401977539
    9. ']+=' → logprob: -14.137796401977539
    10. '1' → logprob: -14.137796401977539

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -15.875007629394531
    4. '=' → logprob: -17.50000762939453
    5. '```' → logprob: -18.31250762939453
    6. ']' → logprob: -18.37500762939453
    7. '１' → logprob: -19.12500762939453
    8. 'b' → logprob: -19.25000762939453
    9. '+' → logprob: -19.25000762939453
    10. ' =' → logprob: -19.56250762939453

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.62500286102295
    4. '```' → logprob: -16.750001907348633
    5. '
' → logprob: -17.125001907348633
    6. '       ' → logprob: -18.312501907348633
    7. '+' → logprob: -18.437501907348633
    8. '0' → logprob: -18.625001907348633
    9. '           ' → logprob: -18.687501907348633
    10. '[' → logprob: -18.812501907348633

Token 780: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023599520791321993
    2. '=' → logprob: -6.877359867095947
    3. ' =' → logprob: -6.877359867095947
    4. ']=' → logprob: -8.377360343933105
    5. ' ]' → logprob: -9.752360343933105
    6. ')' → logprob: -12.252360343933105
    7. '   ' → logprob: -14.252360343933105
    8. ',' → logprob: -14.377360343933105
    9. '])' → logprob: -14.877360343933105
    10. '],' → logprob: -15.502360343933105

Token 781: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022015124559402
    2. '=' → logprob: -2.350220203399658
    3. '=min' → logprob: -11.2252197265625
    4. '=max' → logprob: -16.9752197265625
    5. ',' → logprob: -17.3502197265625
    6. ')' → logprob: -17.6002197265625
    7. 'min' → logprob: -17.8502197265625
    8. '   ' → logprob: -18.7252197265625
    9. ']' → logprob: -18.9752197265625
    10. '[' → logprob: -19.8502197265625

Token 782: ' prev' (ID: 10258)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001929228543303907
    2. ' min' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.12692928314209
    4. 'prev' → logprob: -16.251928329467773
    5. '	min' → logprob: -16.376928329467773
    6. 'max' → logprob: -17.126928329467773
    7. '```' → logprob: -18.251928329467773
    8. ' ' → logprob: -18.751928329467773
    9. 'minimum' → logprob: -18.751928329467773
    10. '           ' → logprob: -19.251928329467773

Token 783: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5638710260391235
    2. ' if' → logprob: -1.5638710260391235
    3. '+' → logprob: -1.8138710260391235
    4. 'if' → logprob: -3.438870906829834
    5. ',' → logprob: -4.063870906829834
    6. ' =' → logprob: -6.188870906829834
    7. '+c' → logprob: -6.188870906829834
    8. '=' → logprob: -6.813870906829834
    9. '       ' → logprob: -7.188870906829834
    10. '   ' → logprob: -7.313870906829834

Token 784: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015023599844425917
    2. ' min' → logprob: -6.501502513885498
    3. '	min' → logprob: -17.001502990722656
    4. '   ' → logprob: -17.251502990722656
    5. 'max' → logprob: -18.251502990722656
    6. 'minimum' → logprob: -18.251502990722656
    7. '```' → logprob: -19.376502990722656
    8. '           ' → logprob: -20.251502990722656
    9. ' ' → logprob: -20.376502990722656
    10. '(min' → logprob: -20.626502990722656

Token 785: '(
' (ID: 1607)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.2276877611875534
    2. '(nd' → logprob: -2.2276878356933594
    3. '(dp' → logprob: -2.6026878356933594
    4. 'prev' → logprob: -3.9776878356933594
    5. 'dp' → logprob: -6.602687835693359
    6. '(' → logprob: -7.477687835693359
    7. 'nd' → logprob: -7.477687835693359
    8. '(
' → logprob: -7.602687835693359
    9. '(n' → logprob: -11.72768783569336
    10. ' prev' → logprob: -11.97768783569336

Token 786: '               ' (ID: 506)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.02272588014602661
    2. 'dp' → logprob: -4.147726058959961
    3. 'nd' → logprob: -5.522726058959961
    4. ' prev' → logprob: -6.272726058959961
    5. '           ' → logprob: -7.522726058959961
    6. '       ' → logprob: -9.147726058959961
    7. ' dp' → logprob: -10.022726058959961
    8. ' nd' → logprob: -10.272726058959961
    9. '   ' → logprob: -10.772726058959961
    10. '               ' → logprob: -11.272726058959961

Token 787: ' dp' (ID: 21546)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.004122923128306866
    2. 'nd' → logprob: -6.129122734069824
    3. 'dp' (adapté à ' dp') → logprob: -6.379122734069824
    4. ' prev' → logprob: -8.879122734069824
    5. '   ' → logprob: -9.504122734069824
    6. '           ' → logprob: -11.504122734069824
    7. '	prev' → logprob: -12.129122734069824
    8. '       ' → logprob: -12.504122734069824
    9. ' nd' → logprob: -13.129122734069824
    10. '               ' → logprob: -13.629122734069824

Token 788: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.8325677703833207e-05
    2. 'b' → logprob: -10.875028610229492
    3. '[' → logprob: -12.625028610229492
    4. '   ' → logprob: -12.750028610229492
    5. ' [' → logprob: -13.875028610229492
    6. '       ' → logprob: -14.500028610229492
    7. '           ' → logprob: -14.875028610229492
    8. '               ' → logprob: -15.875028610229492
    9. '[
' → logprob: -16.125028610229492
    10. '```' → logprob: -16.250028610229492

Token 789: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30188870429992676
    2. '+' → logprob: -1.5518887042999268
    3. ']+' → logprob: -3.8018887042999268
    4. '],' → logprob: -4.176888465881348
    5. ' +' → logprob: -5.051888465881348
    6. '+b' → logprob: -6.426888465881348
    7. '[b' → logprob: -6.676888465881348
    8. '               ' → logprob: -6.926888465881348
    9. '           ' → logprob: -7.926888465881348
    10. '                   ' → logprob: -9.676888465881348

Token 790: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.875004768371582
    4. '```' → logprob: -16.8125057220459
    5. '           ' → logprob: -17.1875057220459
    6. '       ' → logprob: -17.6250057220459
    7. '0' → logprob: -18.2500057220459
    8. ']' → logprob: -18.4375057220459
    9. '
' → logprob: -18.6250057220459
    10. '     ' → logprob: -18.6250057220459

Token 791: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.250008583068848
    4. '
' → logprob: -15.375008583068848
    5. '```' → logprob: -16.37500762939453
    6. '0' → logprob: -17.12500762939453
    7. '2' → logprob: -17.37500762939453
    8. '     ' → logprob: -17.68750762939453
    9. '[' → logprob: -17.87500762939453
    10. 'i' → logprob: -17.87500762939453

Token 792: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.032424893230199814
    2. ' +' → logprob: -3.9074249267578125
    3. '],' → logprob: -5.6574249267578125
    4. '+' → logprob: -5.7824249267578125
    5. ']+' → logprob: -5.7824249267578125
    6. ',' → logprob: -6.2824249267578125
    7. ' ]' → logprob: -8.532424926757812
    8. '           ' → logprob: -10.782424926757812
    9. '   ' → logprob: -11.157424926757812
    10. '],
' → logprob: -11.407424926757812

Token 793: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.45328763127326965
    2. ',' → logprob: -1.2032876014709473
    3. '+' → logprob: -2.8282876014709473
    4. ',
' → logprob: -5.953287601470947
    5. ' ,' → logprob: -6.828287601470947
    6. '               ' → logprob: -7.203287601470947
    7. ',c' → logprob: -8.078288078308105
    8. '           ' → logprob: -8.953288078308105
    9. ' +
' → logprob: -9.828288078308105
    10. '+c' → logprob: -10.078288078308105

Token 794: ' cw' (ID: 72592)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.16675646603107452
    2. 'cw' → logprob: -1.916756510734558
    3. ' cb' → logprob: -5.666756629943848
    4. ' cw' → logprob: -6.541756629943848
    5. '   ' → logprob: -7.291756629943848
    6. '(cb' → logprob: -8.291756629943848
    7. ' ' → logprob: -8.541756629943848
    8. 'c' → logprob: -9.041756629943848
    9. '  ' → logprob: -9.416756629943848
    10. 'cost' → logprob: -9.666756629943848

Token 795: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8439901471138
    2. 'x' → logprob: -0.8439901471138
    3. '1' → logprob: -1.9689900875091553
    4. '[x' → logprob: -8.218990325927734
    5. ' x' → logprob: -9.968990325927734
    6. '(x' → logprob: -10.343990325927734
    7. '   ' → logprob: -11.218990325927734
    8. '_x' → logprob: -11.968990325927734
    9. '```' → logprob: -12.093990325927734
    10. 'b' → logprob: -12.093990325927734

Token 796: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9981420336989686e-05
    2. '[x' → logprob: -11.000020027160645
    3. 'y' → logprob: -13.500020027160645
    4. ' x' → logprob: -14.250020027160645
    5. '   ' → logprob: -15.250020027160645
    6. '(x' → logprob: -15.250020027160645
    7. '```' → logprob: -15.750020027160645
    8. '       ' → logprob: -16.625019073486328
    9. ',' → logprob: -16.625019073486328
    10. '[' → logprob: -17.000019073486328

Token 797: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02089231088757515
    2. ',
' → logprob: -3.895892381668091
    3. '+' → logprob: -8.520892143249512
    4. '               ' → logprob: -10.395892143249512
    5. ' +' → logprob: -10.520892143249512
    6. ' ,' → logprob: -10.645892143249512
    7. ',
' → logprob: -11.145892143249512
    8. '           ' → logprob: -11.145892143249512
    9. ',c' → logprob: -11.270892143249512
    10. ',

' → logprob: -11.520892143249512

Token 798: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.003099404275417328
    2. ' cb' → logprob: -6.00309944152832
    3. 'cw' → logprob: -8.50309944152832
    4. '   ' → logprob: -8.75309944152832
    5. '(cb' → logprob: -9.00309944152832
    6. ' ' → logprob: -10.12809944152832
    7. '  ' → logprob: -10.62809944152832
    8. '    ' → logprob: -11.12809944152832
    9. '(' → logprob: -11.50309944152832
    10. '1' → logprob: -11.87809944152832

Token 799: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04040883481502533
    2. '[b' → logprob: -4.165408611297607
    3. '0' → logprob: -4.415408611297607
    4. 'b' → logprob: -4.665408611297607
    5. '[y' → logprob: -6.540408611297607
    6. 'y' → logprob: -6.915408611297607
    7. '[' → logprob: -9.915409088134766
    8. 'x' → logprob: -11.165409088134766
    9. '[x' → logprob: -11.477909088134766
    10. 'cb' → logprob: -11.977909088134766

Token 800: '[x' (ID: 17295)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0017244421178475022
    2. '[x' → logprob: -6.8767242431640625
    3. '[b' → logprob: -7.6267242431640625
    4. '[n' → logprob: -9.251724243164062
    5. '[' → logprob: -9.876724243164062
    6. '[c' → logprob: -10.376724243164062
    7. 'y' → logprob: -11.751724243164062
    8. '(y' → logprob: -12.126724243164062
    9. '[(' → logprob: -13.251724243164062
    10. 'b' → logprob: -13.626724243164062

Token 801: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.2564772069454193
    2. '],
' → logprob: -1.6314772367477417
    3. ',' → logprob: -3.631477117538452
    4. ']' → logprob: -7.256477355957031
    5. ',
' → logprob: -7.256477355957031
    6. '   ' → logprob: -7.381477355957031
    7. '           ' → logprob: -7.631477355957031
    8. '               ' → logprob: -8.006477355957031
    9. '       ' → logprob: -8.131477355957031
    10. '],
' → logprob: -8.131477355957031

Token 802: ' ' (ID: 220)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.1366809457540512
    2. 'dp' → logprob: -2.511680841445923
    3. ' prev' → logprob: -3.386680841445923
    4. ' dp' → logprob: -4.636681079864502
    5. '           ' → logprob: -6.261681079864502
    6. '       ' → logprob: -7.761681079864502
    7. '               ' → logprob: -8.136680603027344
    8. '   ' → logprob: -9.011680603027344
    9. 'nd' → logprob: -9.886680603027344
    10. '                   ' → logprob: -10.386680603027344

Token 803: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0005829381989315152
    2. 'dp' → logprob: -8.000582695007324
    3. ' prev' → logprob: -8.750582695007324
    4. 'nd' → logprob: -9.500582695007324
    5. '   ' → logprob: -12.375582695007324
    6. '           ' → logprob: -13.000582695007324
    7. '       ' → logprob: -13.375582695007324
    8. '  ' → logprob: -13.750582695007324
    9. '               ' → logprob: -14.000582695007324
    10. '    ' → logprob: -14.625582695007324

Token 804: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11045132577419281
    2. 'prev' → logprob: -2.4854512214660645
    3. 'nd' → logprob: -4.2354512214660645
    4. ' dp' → logprob: -5.3604512214660645
    5. ' prev' → logprob: -7.7354512214660645
    6. '   ' → logprob: -7.7354512214660645
    7. '           ' → logprob: -8.360451698303223
    8. '  ' → logprob: -8.485451698303223
    9. ' nd' → logprob: -8.610451698303223
    10. '       ' → logprob: -8.860451698303223

Token 805: ' où' (ID: 15113)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4437033534049988
    2. 'dp' → logprob: -1.3187034130096436
    3. ' où' → logprob: -3.3187034130096436
    4. ' where' → logprob: -3.4437034130096436
    5. '               ' → logprob: -4.8187031745910645
    6. 'où' → logprob: -5.1937031745910645
    7. 'where' → logprob: -5.5687031745910645
    8. ')' → logprob: -6.5687031745910645
    9. '(dp' → logprob: -7.5687031745910645
    10. ' ' → logprob: -7.6937031745910645

Token 806: ' l' (ID: 305)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5569770336151123
    2. ' on' → logprob: -1.1819770336151123
    3. 'dp' → logprob: -2.3069770336151123
    4. 'nd' → logprob: -4.681977272033691
    5. ''on' → logprob: -5.556977272033691
    6. 'l' → logprob: -6.556977272033691
    7. 'la' → logprob: -6.556977272033691
    8. ' dp' → logprob: -6.681977272033691
    9. '#' → logprob: -6.931977272033691
    10. 'une' → logprob: -7.806977272033691

Token 807: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.34256666898727417
    2. 'a' → logprob: -1.467566728591919
    3. 'e' → logprob: -3.592566728591919
    4. 'on' → logprob: -3.717566728591919
    5. ''utilisateur' → logprob: -5.96756649017334
    6. 'nd' → logprob: -6.59256649017334
    7. '’on' → logprob: -7.46756649017334
    8. 'n' → logprob: -7.84256649017334
    9. 'dp' → logprob: -7.96756649017334
    10. ' on' → logprob: -8.09256649017334

Token 808: ' ajoute' (ID: 91611)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -1.2959195375442505
    2. 'pr' → logprob: -1.4209195375442505
    3. 'cho' → logprob: -1.5459195375442505
    4. 'aj' → logprob: -2.295919418334961
    5. 'pose' → logprob: -2.295919418334961
    6. ' place' → logprob: -3.545919418334961
    7. ' chois' → logprob: -5.045919418334961
    8. 'n' → logprob: -5.295919418334961
    9. ' ajoute' → logprob: -5.545919418334961
    10. 'p' → logprob: -5.795919418334961

Token 809: ' une' (ID: 2463)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8983045220375061
    2. ' la' → logprob: -1.2733044624328613
    3. ' une' → logprob: -2.3983044624328613
    4. 'la' → logprob: -2.7733044624328613
    5. 'y' → logprob: -3.1483044624328613
    6. 'une' → logprob: -3.6483044624328613
    7. 'rev' → logprob: -3.8983044624328613
    8. 'b' → logprob: -4.148304462432861
    9. ' dp' → logprob: -4.273304462432861
    10. 'dp' → logprob: -4.523304462432861

Token 810: ' bille' (ID: 97414)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25177136063575745
    2. 'no' → logprob: -2.1267714500427246
    3. 'bl' → logprob: -2.6267714500427246
    4. ' noire' → logprob: -4.251771450042725
    5. 'bill' → logprob: -5.501771450042725
    6. ' no' → logprob: -5.876771450042725
    7. ' bille' → logprob: -5.876771450042725
    8. ' blanche' → logprob: -5.876771450042725
    9. ' bill' → logprob: -6.501771450042725
    10. '#' → logprob: -7.876771450042725

Token 811: ' blanche' (ID: 102684)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.6475438475608826
    2. ' noire' → logprob: -0.8975438475608826
    3. ' blanche' → logprob: -3.7725439071655273
    4. 'bl' → logprob: -3.7725439071655273
    5. ' no' → logprob: -4.147543907165527
    6. '   ' → logprob: -6.397543907165527
    7. '_no' → logprob: -6.522543907165527
    8. ' ' → logprob: -6.647543907165527
    9. ' ' → logprob: -7.647543907165527
    10. '```' → logprob: -8.147543907165527

Token 812: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5244448184967041
    2. '               ' → logprob: -1.149444818496704
    3. '),' → logprob: -3.024444818496704
    4. ',' → logprob: -4.399444580078125
    5. '           ' → logprob: -4.524444580078125
    6. '),
' → logprob: -6.024444580078125
    7. ' +' → logprob: -6.149444580078125
    8. ' )' → logprob: -6.274444580078125
    9. '```' → logprob: -6.399444580078125
    10. '+' → logprob: -6.524444580078125

Token 813: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5569832921028137
    2. ' une' → logprob: -1.931983232498169
    3. 'no' → logprob: -2.181983232498169
    4. 'cb' → logprob: -2.431983232498169
    5. 'dp' → logprob: -4.056983470916748
    6. 'y' → logprob: -4.181983470916748
    7. '   ' → logprob: -4.306983470916748
    8. 'la' → logprob: -4.431983470916748
    9. ' cb' → logprob: -5.431983470916748
    10. ' y' → logprob: -5.556983470916748

Token 814: ' noire' (ID: 115610)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.28630349040031433
    2. ' noire' → logprob: -1.6613035202026367
    3. 'bl' → logprob: -3.2863035202026367
    4. 'b' → logprob: -4.411303520202637
    5. ' no' → logprob: -5.286303520202637
    6. ' blanche' → logprob: -6.286303520202637
    7. '#' → logprob: -7.286303520202637
    8. 'No' → logprob: -8.161303520202637
    9. 'black' → logprob: -8.286303520202637
    10. '```' → logprob: -8.286303520202637

Token 815: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5969605445861816
    2. '               ' → logprob: -1.4719605445861816
    3. ',
' → logprob: -1.5969605445861816
    4. ')' → logprob: -4.721960544586182
    5. '           ' → logprob: -4.846960544586182
    6. '),' → logprob: -7.971960544586182
    7. ')
' → logprob: -9.096960067749023
    8. '              ' → logprob: -10.096960067749023
    9. '),
' → logprob: -10.346960067749023
    10. '```' → logprob: -10.471960067749023

Token 816: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21155615150928497
    2. ' dp' → logprob: -1.7115561962127686
    3. '               ' → logprob: -5.3365559577941895
    4. 'prev' → logprob: -5.9615559577941895
    5. '           ' → logprob: -6.4615559577941895
    6. '```' → logprob: -7.8365559577941895
    7. ' prev' → logprob: -8.211556434631348
    8. 'nd' → logprob: -8.961556434631348
    9. 'min' → logprob: -9.211556434631348
    10. ' min' → logprob: -9.836556434631348

Token 817: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.0046430183574557304
    2. 'dp' → logprob: -5.879642963409424
    3. ' prev' → logprob: -6.504642963409424
    4. 'nd' → logprob: -9.254643440246582
    5. '           ' → logprob: -9.629643440246582
    6. '   ' → logprob: -9.629643440246582
    7. '  ' → logprob: -10.754643440246582
    8. '               ' → logprob: -11.004643440246582
    9. '       ' → logprob: -11.254643440246582
    10. ' dp' → logprob: -11.629643440246582

Token 818: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10024010390043259
    2. '+' → logprob: -2.3502399921417236
    3. ')' → logprob: -10.600239753723145
    4. '   ' → logprob: -13.350239753723145
    5. ' +
' → logprob: -13.350239753723145
    6. '+
' → logprob: -13.850239753723145
    7. '[' → logprob: -14.225239753723145
    8. '+b' → logprob: -14.350239753723145
    9. '+c' → logprob: -14.725239753723145
    10. ')+' → logprob: -14.975239753723145

Token 819: ' cw' (ID: 72592)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.028737489134073257
    2. ' cb' → logprob: -4.153737545013428
    3. 'cw' → logprob: -4.653737545013428
    4. ' cw' → logprob: -6.903737545013428
    5. 'cost' → logprob: -7.278737545013428
    6. '   ' → logprob: -7.778737545013428
    7. ' ' → logprob: -8.27873706817627
    8. '1' → logprob: -8.52873706817627
    9. 'c' → logprob: -8.77873706817627
    10. '  ' → logprob: -9.27873706817627

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.583723783493042
    2. '0' → logprob: -0.833723783493042
    3. 'x' → logprob: -5.958724021911621
    4. '[y' → logprob: -6.208724021911621
    5. 'y' → logprob: -6.458724021911621
    6. '[x' → logprob: -7.208724021911621
    7. 'b' → logprob: -7.958724021911621
    8. '[b' → logprob: -8.583724021911621
    9. '[' → logprob: -9.958724021911621
    10. '   ' → logprob: -10.083724021911621

Token 821: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.005325785372406244
    2. '[x' → logprob: -5.380325794219971
    3. 'y' → logprob: -7.755325794219971
    4. '[b' → logprob: -9.005325317382812
    5. ' [' → logprob: -10.005325317382812
    6. '[' → logprob: -10.255325317382812
    7. '   ' → logprob: -10.755325317382812
    8. '(y' → logprob: -11.630325317382812
    9. '[c' → logprob: -11.630325317382812
    10. 'x' → logprob: -11.880325317382812

Token 822: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7382950782775879
    2. ']' → logprob: -1.238295078277588
    3. '[x' → logprob: -2.488295078277588
    4. '       ' → logprob: -3.113295078277588
    5. ']
' → logprob: -3.363295078277588
    6. '[y' → logprob: -3.488295078277588
    7. '   ' → logprob: -4.738295078277588
    8. ')' → logprob: -4.863295078277588
    9. '           ' → logprob: -4.863295078277588
    10. '               ' → logprob: -5.363295078277588

Token 823: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005928558763116598
    2. '           ' → logprob: -5.2559285163879395
    3. '       ' → logprob: -7.7559285163879395
    4. '               ' → logprob: -8.755928993225098
    5. ')
' → logprob: -9.755928993225098
    6. ' )' → logprob: -10.880928993225098
    7. '   ' → logprob: -11.130928993225098
    8. '<|end|>' → logprob: -11.505928993225098
    9. '                   ' → logprob: -14.130928993225098
    10. '	       ' → logprob: -14.130928993225098

Token 824: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.05005524680018425
    2. '1' → logprob: -3.8000552654266357
    3. ' cb' → logprob: -4.050055027008057
    4. '0' → logprob: -4.925055027008057
    5. 'cw' → logprob: -6.800055027008057
    6. ' ' → logprob: -8.300055503845215
    7. ' cw' → logprob: -9.300055503845215
    8. '(cb' → logprob: -9.675055503845215
    9. '   ' → logprob: -9.800055503845215
    10. 'b' → logprob: -10.050055503845215

Token 825: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003594184236135334
    2. '0' → logprob: -8.000359535217285
    3. '_' → logprob: -11.875359535217285
    4. '[y' → logprob: -12.750359535217285
    5. 'b' → logprob: -12.875359535217285
    6. '[' → logprob: -13.125359535217285
    7. '```' → logprob: -13.375359535217285
    8. '+' → logprob: -13.625359535217285
    9. 'y' → logprob: -14.000359535217285
    10. ']' → logprob: -14.000359535217285

Token 826: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.03128982335329056
    2. '[x' → logprob: -3.53128981590271
    3. ']' → logprob: -7.156290054321289
    4. ')' → logprob: -8.406290054321289
    5. '```' → logprob: -8.531290054321289
    6. '[' → logprob: -9.156290054321289
    7. '       ' → logprob: -9.281290054321289
    8. '   ' → logprob: -9.906290054321289
    9. '])' → logprob: -10.406290054321289
    10. '[b' → logprob: -11.031290054321289

Token 827: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.829685628414154
    2. ']
' → logprob: -1.8296856880187988
    3. '           ' → logprob: -2.079685688018799
    4. '])' → logprob: -2.204685688018799
    5. '               ' → logprob: -2.454685688018799
    6. ')' → logprob: -2.829685688018799
    7. ')
' → logprob: -4.704685688018799
    8. '   ' → logprob: -5.204685688018799
    9. '       ' → logprob: -5.704685688018799
    10. '                   ' → logprob: -6.954685688018799

Token 828: '     ' (ID: 530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2644413411617279
    2. '           ' → logprob: -1.5144413709640503
    3. '               ' → logprob: -4.76444149017334
    4. '       ' → logprob: -5.63944149017334
    5. ')
' → logprob: -8.76444149017334
    6. '   ' → logprob: -9.01444149017334
    7. '                   ' → logprob: -10.38944149017334
    8. '),' → logprob: -11.13944149017334
    9. '<|end|>' → logprob: -11.76444149017334
    10. '```' → logprob: -11.88944149017334

Token 829: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00886711198836565
    2. '           ' → logprob: -4.883867263793945
    3. '               ' → logprob: -7.508867263793945
    4. '       ' → logprob: -7.758867263793945
    5. ')
' → logprob: -8.633867263793945
    6. '   ' → logprob: -9.758867263793945
    7. '),' → logprob: -11.133867263793945
    8. ' )' → logprob: -11.758867263793945
    9. '```' → logprob: -11.758867263793945
    10. '                   ' → logprob: -12.133867263793945

Token 830: ' Cas' (ID: 8066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014708463102579117
    2. '1' → logprob: -5.264708518981934
    3. '<|end|>' → logprob: -5.514708518981934
    4. '```' → logprob: -5.764708518981934
    5. ' )' → logprob: -6.889708518981934
    6. ' ' → logprob: -8.014708518981934
    7. ']' → logprob: -8.514708518981934
    8. '")' → logprob: -8.764708518981934
    9. ' ' → logprob: -9.014708518981934
    10. '`)' → logprob: -9.639708518981934

Token 831: ' où' (ID: 15113)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.9293881058692932
    2. ' où' → logprob: -1.5543880462646484
    3. 'where' → logprob: -1.5543880462646484
    4. 'où' → logprob: -2.0543880462646484
    5. '               ' → logprob: -3.6793880462646484
    6. ')' → logprob: -3.6793880462646484
    7. '+' → logprob: -6.804388046264648
    8. ' +' → logprob: -7.304388046264648
    9. '           ' → logprob: -8.304388046264648
    10. '```' → logprob: -8.429388046264648

Token 832: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.577419102191925
    2. 'on' → logprob: -0.827419102191925
    3. ''on' → logprob: -6.952419281005859
    4. ' l' → logprob: -8.70241928100586
    5. 'l' → logprob: -9.32741928100586
    6. 'prev' → logprob: -9.45241928100586
    7. ' ' → logprob: -10.45241928100586
    8. '           ' → logprob: -10.70241928100586
    9. ')' → logprob: -10.70241928100586
    10. 'nd' → logprob: -10.95241928100586

Token 833: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.005437350831925869
    2. 'on' → logprob: -6.00543737411499
    3. ' on' → logprob: -6.00543737411499
    4. '’on' → logprob: -8.630436897277832
    5. 'n' → logprob: -9.130436897277832
    6. '_on' → logprob: -9.755436897277832
    7. ''aj' → logprob: -10.005436897277832
    8. 'nd' → logprob: -10.630436897277832
    9. '1' → logprob: -10.880436897277832
    10. ''' → logprob: -11.630436897277832

Token 834: ' ajoute' (ID: 91611)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.14297454059123993
    2. ' ajoute' → logprob: -2.642974615097046
    3. '+' → logprob: -3.767974615097046
    4. ')' → logprob: -4.642974376678467
    5. 'cho' → logprob: -4.767974376678467
    6. 'continue' → logprob: -5.517974376678467
    7. ' chois' → logprob: -5.642974376678467
    8. '   ' → logprob: -6.392974376678467
    9. 'choose' → logprob: -6.392974376678467
    10. 'add' → logprob: -6.892974376678467

Token 835: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.005351636093109846
    2. 'une' → logprob: -5.255351543426514
    3. ' a' → logprob: -9.505352020263672
    4. ' ' → logprob: -10.880352020263672
    5. 'a' → logprob: -11.880352020263672
    6. ' un' → logprob: -12.005352020263672
    7. ' ' → logprob: -13.255352020263672
    8. ''une' → logprob: -13.380352020263672
    9. ' una' → logprob: -13.380352020263672
    10. ' y' → logprob: -13.630352020263672

Token 836: ' bille' (ID: 97414)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.835118293762207
    2. 'no' → logprob: -0.960118293762207
    3. ' noire' → logprob: -2.210118293762207
    4. ' blanche' → logprob: -3.210118293762207
    5. 'b' → logprob: -4.710118293762207
    6. ' no' → logprob: -4.835118293762207
    7. ' blanc' → logprob: -5.210118293762207
    8. '```' → logprob: -6.335118293762207
    9. ' ' → logprob: -6.585118293762207
    10. 'white' → logprob: -6.710118293762207

Token 837: ' noire' (ID: 115610)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.13039593398571014
    2. 'no' → logprob: -2.5053958892822266
    3. ' blanche' → logprob: -3.5053958892822266
    4. ' noire' → logprob: -5.005395889282227
    5. '_no' → logprob: -6.005395889282227
    6. ' no' → logprob: -7.380395889282227
    7. 'white' → logprob: -8.505395889282227
    8. '_bl' → logprob: -8.505395889282227
    9. '```' → logprob: -9.130395889282227
    10. 'No' → logprob: -10.005395889282227

Token 838: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02777283638715744
    2. '+' → logprob: -4.152772903442383
    3. ' +' → logprob: -6.152772903442383
    4. '```' → logprob: -6.277772903442383
    5. '<|end|>' → logprob: -6.527772903442383
    6. '           ' → logprob: -6.777772903442383
    7. '),' → logprob: -7.027772903442383
    8. '       ' → logprob: -7.027772903442383
    9. ' )' → logprob: -7.277772903442383
    10. '   ' → logprob: -7.527772903442383

Token 839: ' une' (ID: 2463)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1090551614761353
    2. 'cb' → logprob: -1.3590551614761353
    3. 'x' → logprob: -1.4840551614761353
    4. ' y' → logprob: -2.3590550422668457
    5. ' cb' → logprob: -3.7340550422668457
    6. ' x' → logprob: -4.234055042266846
    7. 'b' → logprob: -4.484055042266846
    8. 'bl' → logprob: -4.484055042266846
    9. 'cw' → logprob: -4.984055042266846
    10. 'une' → logprob: -5.484055042266846

Token 840: ' blanche' (ID: 102684)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.03407543897628784
    2. 'no' → logprob: -3.4090754985809326
    3. ' blanche' → logprob: -8.284075736999512
    4. ' noire' → logprob: -9.534075736999512
    5. '```' → logprob: -10.784075736999512
    6. 'white' → logprob: -10.784075736999512
    7. 'No' → logprob: -11.284075736999512
    8. 'b' → logprob: -11.409075736999512
    9. '#' → logprob: -11.659075736999512
    10. 'black' → logprob: -12.284075736999512

Token 841: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032860562205314636
    2. '       ' → logprob: -3.532860517501831
    3. '           ' → logprob: -5.90786075592041
    4. '   ' → logprob: -8.53286075592041
    5. ')
' → logprob: -9.15786075592041
    6. '               ' → logprob: -9.65786075592041
    7. ' )' → logprob: -11.90786075592041
    8. '<|end|>' → logprob: -12.15786075592041
    9. '                   ' → logprob: -12.78286075592041
    10. '                       ' → logprob: -13.53286075592041

Token 842: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03912894427776337
    2. '       ' → logprob: -3.2891290187835693
    3. '           ' → logprob: -7.28912878036499
    4. '   ' → logprob: -8.164129257202148
    5. '               ' → logprob: -9.789129257202148
    6. ')
' → logprob: -9.914129257202148
    7. '                   ' → logprob: -12.789129257202148
    8. '<|end|>' → logprob: -12.914129257202148
    9. '                       ' → logprob: -13.164129257202148
    10. ' )' → logprob: -13.164129257202148

Token 843: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002966127940453589
    2. '       ' → logprob: -8.500296592712402
    3. ')
' (adapté à ' )
') → logprob: -9.500296592712402
    4. '           ' → logprob: -11.750296592712402
    5. '   ' → logprob: -11.875296592712402
    6. ' )' → logprob: -13.250296592712402
    7. '               ' → logprob: -14.500296592712402
    8. '<|end|>' → logprob: -15.250296592712402
    9. '```' → logprob: -15.750296592712402
    10. ')\
' → logprob: -15.875296592712402

Token 844: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060331303626298904
    2. '<|end|>' → logprob: -3.560331344604492
    3. '   ' → logprob: -4.560331344604492
    4. ')' → logprob: -4.560331344604492
    5. ' return' → logprob: -5.685331344604492
    6. 'return' → logprob: -6.060331344604492
    7. '```' → logprob: -6.185331344604492
    8. '	return' → logprob: -7.935331344604492
    9. ')
' → logprob: -7.935331344604492
    10. ')return' → logprob: -8.685331344604492

Token 845: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22958515584468842
    2. 'return' → logprob: -1.9795851707458496
    3. '       ' → logprob: -3.4795851707458496
    4. '   ' → logprob: -3.4795851707458496
    5. '```' → logprob: -5.47958517074585
    6. ' return' → logprob: -7.35458517074585
    7. ' dp' → logprob: -8.229584693908691
    8. '<|end|>' → logprob: -9.479584693908691
    9. ')' → logprob: -9.729584693908691
    10. '	dp' → logprob: -9.979584693908691

Token 846: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.511406809295295e-06
    2. ' dp' → logprob: -12.000006675720215
    3. '       ' → logprob: -15.625006675720215
    4. '   ' → logprob: -16.3750057220459
    5. 'prev' → logprob: -17.0000057220459
    6. '
' → logprob: -18.3750057220459
    7. '	dp' → logprob: -18.8750057220459
    8. 'dc' → logprob: -20.2500057220459
    9. '           ' → logprob: -20.3750057220459
    10. '(dp' → logprob: -21.5000057220459

Token 847: ' prépare' (ID: 150142)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2811148166656494
    2. ',' → logprob: -1.9061148166656494
    3. 'dp' → logprob: -2.6561148166656494
    4. ' =' → logprob: -3.7811148166656494
    5. ' dp' → logprob: -6.78111457824707
    6. '   ' → logprob: -6.90611457824707
    7. 'prev' → logprob: -7.53111457824707
    8. '       ' → logprob: -8.40611457824707
    9. '
' → logprob: -8.78111457824707
    10. 'd' → logprob: -10.28111457824707

Token 848: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.370294846012257e-05
    2. ' dp' → logprob: -10.875043869018555
    3. '       ' → logprob: -11.000043869018555
    4. 'prev' → logprob: -12.875043869018555
    5. 'nd' → logprob: -13.250043869018555
    6. '   ' → logprob: -13.375043869018555
    7. '(dp' → logprob: -13.500043869018555
    8. '	dp' → logprob: -15.000043869018555
    9. '
' → logprob: -16.375043869018555
    10. '           ' → logprob: -16.500043869018555

Token 849: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007124318508431315
    2. ' dp' → logprob: -7.2507123947143555
    3. '   ' → logprob: -13.375712394714355
    4. '       ' → logprob: -15.500712394714355
    5. '(dp' → logprob: -15.500712394714355
    6. '	dp' → logprob: -15.875712394714355
    7. 'prev' → logprob: -16.250713348388672
    8. 'next' → logprob: -16.375713348388672
    9. 'nd' → logprob: -16.750713348388672
    10. '```' → logprob: -16.875713348388672

Token 850: ' prochaine' (ID: 78876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002509687910787761
    2. ' dp' → logprob: -8.500250816345215
    3. 'prev' → logprob: -10.375250816345215
    4. 'nd' → logprob: -12.125250816345215
    5. '       ' → logprob: -12.875250816345215
    6. 'def' → logprob: -13.125250816345215
    7. '
' → logprob: -13.375250816345215
    8. '   ' → logprob: -13.875250816345215
    9. 'd' → logprob: -14.000250816345215
    10. '```' → logprob: -14.000250816345215

Token 851: ' it' (ID: 480)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.5070613622665405
    2. 'ligne' → logprob: -1.2570613622665405
    3. 'dp' → logprob: -2.38206148147583
    4. 'it' → logprob: -4.13206148147583
    5. ' iteration' → logprob: -7.00706148147583
    6. ' ligne' → logprob: -7.25706148147583
    7. 'line' → logprob: -7.50706148147583
    8. '   ' → logprob: -7.63206148147583
    9. 'indent' → logprob: -7.88206148147583
    10. ' it' → logprob: -8.257061004638672

Token 852: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.01818646676838398
    2. 'er' → logprob: -4.018186569213867
    3. 'érations' → logprob: -11.018186569213867
    4. 'ér' → logprob: -11.143186569213867
    5. 'ration' → logprob: -12.893186569213867
    6. 'é' → logprob: -13.768186569213867
    7. 'éra' → logprob: -14.268186569213867
    8. 'eração' → logprob: -15.268186569213867
    9. 'érer' → logprob: -15.393186569213867
    10. 'étation' → logprob: -15.518186569213867

Token 853: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002495279535651207
    2. '       ' → logprob: -7.127495288848877
    3. ' dp' → logprob: -7.127495288848877
    4. '	dp' → logprob: -7.752495288848877
    5. '   ' → logprob: -8.877494812011719
    6. '<|end|>' → logprob: -9.127494812011719
    7. '
' → logprob: -9.252494812011719
    8. '_dp' → logprob: -10.002494812011719
    9. '(dp' → logprob: -10.127494812011719
    10. '        
' → logprob: -12.002494812011719

Token 854: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.588793960167095e-05
    2. ' dp' → logprob: -9.750076293945312
    3. '   ' → logprob: -11.375076293945312
    4. '       ' → logprob: -12.250076293945312
    5. '	dp' → logprob: -13.875076293945312
    6. '_dp' → logprob: -16.000076293945312
    7. '(dp' → logprob: -16.625076293945312
    8. 'dc' → logprob: -17.875076293945312
    9. '```' → logprob: -18.125076293945312
    10. '
' → logprob: -18.250076293945312

Token 855: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.0325924449716695e-05
    2. ' dp' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. 'prev' → logprob: -17.750009536743164
    5. '	dp' → logprob: -18.000009536743164
    6. '
' → logprob: -18.250009536743164
    7. '       ' → logprob: -18.375009536743164
    8. '_dp' → logprob: -20.125009536743164
    9. '```' → logprob: -20.625009536743164
    10. 'dc' → logprob: -20.750009536743164

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031827057246118784
    2. ' =' → logprob: -5.753182888031006
    3. ',' → logprob: -12.878182411193848
    4. '[:]' → logprob: -13.003182411193848
    5. '[' → logprob: -17.503183364868164
    6. '   ' → logprob: -17.878183364868164
    7. '＝' → logprob: -18.003183364868164
    8. '.=' → logprob: -18.253183364868164
    9. '[:' → logprob: -19.003183364868164
    10. '=
' → logprob: -19.378183364868164

Token 857: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0010341187007725239
    2. ' nd' → logprob: -6.876034259796143
    3. '   ' → logprob: -14.376033782958984
    4. '(nd' → logprob: -15.501033782958984
    5. '```' → logprob: -15.626033782958984
    6. 'dp' → logprob: -16.126033782958984
    7. '_nd' → logprob: -16.501033782958984
    8. 'n' → logprob: -16.626033782958984
    9. '  ' → logprob: -17.376033782958984
    10. 'list' → logprob: -17.626033782958984

Token 858: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.088346359931165e-07
    2. 'dp' → logprob: -14.250000953674316
    3. '[' → logprob: -16.0
    4. 'w' → logprob: -16.875
    5. '[p' → logprob: -17.625
    6. 'xp' → logprob: -17.625
    7. 'x' → logprob: -18.25
    8. '   ' → logprob: -18.25
    9. '=' → logprob: -19.0
    10. '_p' → logprob: -19.25

Token 859: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13647016882896423
    2. 'return' → logprob: -2.136470079421997
    3. '<|end|>' → logprob: -5.011470317840576
    4. '    
' → logprob: -6.636470317840576
    5. ' return' → logprob: -7.011470317840576
    6. '	return' → logprob: -8.636469841003418
    7. '[' → logprob: -8.886469841003418
    8. '```' → logprob: -9.136469841003418
    9. '
' → logprob: -9.636469841003418
    10. '\n' → logprob: -11.011469841003418

Token 860: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21364463865756989
    2. '   ' → logprob: -1.7136446237564087
    3. '```' → logprob: -4.463644504547119
    4. ' return' → logprob: -7.838644504547119
    5. '	return' → logprob: -8.713644981384277
    6. '    
' → logprob: -10.463644981384277
    7. '
' → logprob: -10.713644981384277
    8. '`' → logprob: -11.963644981384277
    9. '``' → logprob: -12.088644981384277
    10. '@return' → logprob: -12.588644981384277

Token 861: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0031923281494528055
    2. '   ' → logprob: -5.75319242477417
    3. '```' → logprob: -11.253191947937012
    4. ' return' → logprob: -13.378191947937012
    5. '	return' → logprob: -16.753192901611328
    6. '    
' → logprob: -17.378192901611328
    7. '#' (adapté à ' #') → logprob: -19.378192901611328
    8. '``' → logprob: -19.628192901611328
    9. '{return' → logprob: -19.753192901611328
    10. '  ' → logprob: -19.878192901611328

Token 862: ' À' (ID: 27643)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002479700604453683
    2. '   ' → logprob: -6.002479553222656
    3. ' return' → logprob: -12.502479553222656
    4. '```' → logprob: -15.002479553222656
    5. '
' → logprob: -17.752479553222656
    6. '	return' → logprob: -18.127479553222656
    7. '{return' → logprob: -20.002479553222656
    8. '    
' → logprob: -20.502479553222656
    9. 'ret' → logprob: -20.752479553222656
    10. '#' → logprob: -20.752479553222656

Token 863: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0011708177626132965
    2. 'ret' → logprob: -7.126170635223389
    3. ' return' → logprob: -8.001171112060547
    4. '   ' → logprob: -10.876171112060547
    5. 'final' → logprob: -12.501171112060547
    6. 'la' → logprob: -13.001171112060547
    7. '_return' → logprob: -13.126171112060547
    8. '#' → logprob: -13.376171112060547
    9. ' retourner' → logprob: -14.001171112060547
    10. '	return' → logprob: -15.001171112060547

Token 864: ' fin' (ID: 2131)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007330321241170168
    2. 'ret' → logprob: -7.250732898712158
    3. 'final' → logprob: -11.375733375549316
    4. ' return' → logprob: -11.750733375549316
    5. '#' → logprob: -13.250733375549316
    6. '   ' → logprob: -14.375733375549316
    7. 'fin' → logprob: -14.500733375549316
    8. 're' → logprob: -16.250732421875
    9. 'finish' → logprob: -16.250732421875
    10. 'result' → logprob: -16.250732421875

Token 865: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26062309741973877
    2. '   ' → logprob: -1.5106230974197388
    3. ' return' → logprob: -4.760622978210449
    4. ':return' → logprob: -10.01062297821045
    5. '
' → logprob: -10.63562297821045
    6. '[' → logprob: -11.38562297821045
    7. '_return' → logprob: -12.76062297821045
    8. '	return' → logprob: -12.88562297821045
    9. '#' → logprob: -13.01062297821045
    10. '```' → logprob: -13.13562297821045

Token 866: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.032061874866485596
    2. '   ' → logprob: -4.03206205368042
    3. ' return' → logprob: -4.28206205368042
    4. '```' → logprob: -13.907061576843262
    5. '	return' → logprob: -15.657061576843262
    6. '
' → logprob: -16.157062530517578
    7. ':return' → logprob: -16.282062530517578
    8. ' ' → logprob: -17.032062530517578
    9. '  ' → logprob: -17.657062530517578
    10. '{return' → logprob: -17.657062530517578

Token 867: ' résultat' (ID: 62556)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0032037352211773396
    2. ' return' → logprob: -5.753203868865967
    3. 'result' → logprob: -11.253203392028809
    4. 'dp' → logprob: -12.128203392028809
    5. 'min' → logprob: -13.003203392028809
    6. '   ' → logprob: -13.378203392028809
    7. '```' → logprob: -13.628203392028809
    8. 'ret' → logprob: -14.003203392028809
    9. 'res' → logprob: -14.253203392028809
    10. '
' → logprob: -14.628203392028809

Token 868: ' optimal' (ID: 24174)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8037564754486084
    2. '=' → logprob: -1.3037564754486084
    3. ' =' → logprob: -1.5537564754486084
    4. ' return' → logprob: -2.9287564754486084
    5. '   ' → logprob: -4.5537567138671875
    6. '[' → logprob: -5.3037567138671875
    7. ' is' → logprob: -8.678756713867188
    8. ':return' → logprob: -9.053756713867188
    9. '	return' → logprob: -10.428756713867188
    10. 'eturn' → logprob: -10.928756713867188

Token 869: ' est' (ID: 893)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06569667160511017
    2. ' return' → logprob: -3.1906967163085938
    3. '   ' → logprob: -4.065696716308594
    4. ' =' → logprob: -5.440696716308594
    5. '=' → logprob: -7.065696716308594
    6. ':return' → logprob: -9.940696716308594
    7. 'eturn' → logprob: -11.315696716308594
    8. ' est' → logprob: -11.815696716308594
    9. ' is' → logprob: -11.940696716308594
    10. '[' → logprob: -11.940696716308594

Token 870: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22022481262683868
    2. ' min' → logprob: -2.7202248573303223
    3. ' dp' → logprob: -2.7202248573303223
    4. 'min' → logprob: -2.7202248573303223
    5. '   ' → logprob: -9.470224380493164
    6. '	dp' → logprob: -13.345224380493164
    7. '(dp' → logprob: -13.470224380493164
    8. '```' → logprob: -14.720224380493164
    9. 'max' → logprob: -15.345224380493164
    10. '  ' → logprob: -15.345224380493164

Token 871: '[n' (ID: 15433)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0005537479883059859
    2. '[n' → logprob: -7.500553607940674
    3. '[' → logprob: -14.125554084777832
    4. '[N' → logprob: -19.125553131103516
    5. ' [-' → logprob: -19.375553131103516
    6. '[len' → logprob: -19.750553131103516
    7. '   ' → logprob: -19.750553131103516
    8. 'n' → logprob: -20.500553131103516
    9. '[end' → logprob: -20.625553131103516
    10. '```' → logprob: -20.750553131103516

Token 872: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003134168218821287
    2. '])' → logprob: -8.375313758850098
    3. ' ]' → logprob: -10.375313758850098
    4. '[-' → logprob: -11.000313758850098
    5. '[' → logprob: -11.125313758850098
    6. ']
' → logprob: -11.875313758850098
    7. '[n' → logprob: -12.250313758850098
    8. ')]' → logprob: -13.000313758850098
    9. ')' → logprob: -13.625313758850098
    10. ']int' → logprob: -14.500313758850098

Token 873: ' i' (ID: 575)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.073871910572052
    2. ' dp' → logprob: -3.0738718509674072
    3. '   ' → logprob: -4.323872089385986
    4. 'return' → logprob: -4.573872089385986
    5. ' return' → logprob: -6.573872089385986
    6. '  ' → logprob: -13.323871612548828
    7. ' ' → logprob: -13.948871612548828
    8. '(dp' → logprob: -14.323871612548828
    9. '	dp' → logprob: -14.448871612548828
    10. '       ' → logprob: -15.198871612548828

Token 874: '.e' (ID: 2560)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9813287854194641
    2. 'm' → logprob: -1.6063287258148193
    3. 'nd' → logprob: -1.6063287258148193
    4. 'n' → logprob: -2.6063287258148193
    5. 'tem' → logprob: -2.9813287258148193
    6. 'nt' → logprob: -3.1063287258148193
    7. 'tems' → logprob: -3.6063287258148193
    8. 'f' → logprob: -4.731328964233398
    9. 'return' → logprob: -4.981328964233398
    10. 'mp' → logprob: -5.481328964233398

Token 875: '.,' (ID: 4213)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38921400904655457
    2. 'n' → logprob: -2.264214038848877
    3. '=' → logprob: -2.639214038848877
    4. 'l' → logprob: -3.639214038848877
    5. '   ' → logprob: -3.639214038848877
    6. 'e' → logprob: -3.889214038848877
    7. '.' → logprob: -3.889214038848877
    8. ' dp' → logprob: -4.639214038848877
    9. '```' → logprob: -5.139214038848877
    10. 'à' → logprob: -5.264214038848877

Token 876: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001955275423824787
    2. ' dp' → logprob: -6.251955509185791
    3. '   ' → logprob: -10.626955032348633
    4. 'min' → logprob: -14.251955032348633
    5. '	dp' → logprob: -14.876955032348633
    6. '  ' → logprob: -15.126955032348633
    7. '       ' → logprob: -15.626955032348633
    8. 'return' → logprob: -15.626955032348633
    9. 'the' → logprob: -15.626955032348633
    10. ' ' → logprob: -15.751955032348633

Token 877: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.47674134373664856
    2. ' les' → logprob: -0.9767413139343262
    3. 'b' → logprob: -6.476741313934326
    4. 'dp' → logprob: -7.226741313934326
    5. '```' → logprob: -8.976741790771484
    6. '   ' → logprob: -9.226741790771484
    7. ' ' → logprob: -9.226741790771484
    8. '[' → logprob: -11.226741790771484
    9. '#' → logprob: -11.351741790771484
    10. ' dp' → logprob: -11.976741790771484

Token 878: ' bill' (ID: 6713)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bill' → logprob: -0.04211096093058586
    2. 'b' → logprob: -3.4171109199523926
    3. ' bill' → logprob: -4.792110919952393
    4. 'bl' → logprob: -9.04211139678955
    5. 'ball' → logprob: -12.04211139678955
    6. '```' → logprob: -13.54211139678955
    7. 'dp' → logprob: -14.04211139678955
    8. 'p' → logprob: -14.29211139678955
    9. 'bou' → logprob: -14.29211139678955
    10. 'n' → logprob: -14.41711139678955

Token 879: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0002802855451591313
    2. 'e' → logprob: -8.750280380249023
    3. 'les' → logprob: -9.125280380249023
    4. '#' → logprob: -13.375280380249023
    5. '=' → logprob: -13.375280380249023
    6. 'lles' → logprob: -13.375280380249023
    7. 'res' → logprob: -13.750280380249023
    8. '```' → logprob: -13.875280380249023
    9. '[' → logprob: -14.000280380249023
    10. '
' → logprob: -14.750280380249023

Token 880: ' trait' (ID: 15458)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.29474735260009766
    2. 's' → logprob: -2.4197473526000977
    3. ' ont' → logprob: -2.7947473526000977
    4. 'no' → logprob: -2.9197473526000977
    5. 'bl' → logprob: -3.2947473526000977
    6. ' no' → logprob: -5.294747352600098
    7. '   ' → logprob: -5.544747352600098
    8. ' bl' → logprob: -6.794747352600098
    9. 'b' → logprob: -7.294747352600098
    10. 'sé' → logprob: -7.419747352600098

Token 881: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -9.567575034452602e-05
    2. 'r' → logprob: -9.50009536743164
    3. 'é' → logprob: -12.00009536743164
    4. 'és' → logprob: -12.25009536743164
    5. 'É' → logprob: -13.00009536743164
    6. 'rees' → logprob: -13.37509536743164
    7. 'ée' → logprob: -13.37509536743164
    8. '[' → logprob: -14.00009536743164
    9. 'érées' → logprob: -14.00009536743164
    10. 'ees' → logprob: -14.37509536743164

Token 882: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7055274248123169
    2. '<|end|>' → logprob: -0.8305274248123169
    3. '```' → logprob: -3.5805273056030273
    4. '[n' → logprob: -4.455527305603027
    5. 'return' → logprob: -5.080527305603027
    6. '[' → logprob: -5.205527305603027
    7. ')' → logprob: -5.330527305603027
    8. ']' → logprob: -5.330527305603027
    9. '.' → logprob: -6.580527305603027
    10. '
' → logprob: -6.830527305603027

Token 883: 'bl' (ID: 1751)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7756325602531433
    2. ')' → logprob: -0.9006325602531433
    3. ']' → logprob: -2.650632619857788
    4. 'n' → logprob: -3.275632619857788
    5. 'dp' → logprob: -4.150632381439209
    6. '[n' → logprob: -5.775632381439209
    7. '   ' → logprob: -6.275632381439209
    8. ')
' → logprob: -6.650632381439209
    9. '])
' → logprob: -6.775632381439209
    10. ']
' → logprob: -8.525632858276367

Token 884: 'anches' (ID: 64769)
  Prédit: 'anches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anches' → logprob: -0.03734200447797775
    2. 'an' → logprob: -3.787342071533203
    3. 'anc' → logprob: -4.787342071533203
    4. 'a' → logprob: -5.787342071533203
    5. '[' → logprob: -7.662342071533203
    6. 'n' → logprob: -8.037342071533203
    7. '```' → logprob: -8.037342071533203
    8. '
' → logprob: -8.162342071533203
    9. '``' → logprob: -8.662342071533203
    10. 'anche' → logprob: -8.912342071533203

Token 885: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1909888982772827
    2. ']' → logprob: -1.4409888982772827
    3. ')' → logprob: -1.9409888982772827
    4. ' +' → logprob: -2.0659890174865723
    5. '])' → logprob: -2.4409890174865723
    6. ',' → logprob: -2.9409890174865723
    7. ' et' → logprob: -4.190989017486572
    8. 'et' → logprob: -4.440989017486572
    9. '+n' → logprob: -5.690989017486572
    10. ')]' → logprob: -5.815989017486572

Token 886: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.7954958821064793e-05
    2. ' no' → logprob: -11.750018119812012
    3. '```' → logprob: -12.375018119812012
    4. '[' → logprob: -13.375018119812012
    5. 'n' → logprob: -13.500018119812012
    6. '
' → logprob: -13.875018119812012
    7. '   ' → logprob: -13.875018119812012
    8. '  ' → logprob: -15.875018119812012
    9. ' ' → logprob: -16.125017166137695
    10. ' ' → logprob: -16.125017166137695

Token 887: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.00025883622583933175
    2. 'ir' → logprob: -8.500258445739746
    3. 'no' → logprob: -10.250258445739746
    4. '
' → logprob: -12.000258445739746
    5. 'ire' → logprob: -12.125258445739746
    6. '_no' → logprob: -13.500258445739746
    7. 'irc' → logprob: -13.625258445739746
    8. '[' → logprob: -13.625258445739746
    9. 'i' → logprob: -14.250258445739746
    10. '

' → logprob: -14.750258445739746

Token 888: ')
' (ID: 446)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -1.0109211206436157
    2. ']' → logprob: -1.1359211206436157
    3. ')' → logprob: -2.010921001434326
    4. ').' → logprob: -2.385921001434326
    5. '].' → logprob: -3.135921001434326
    6. ']).' → logprob: -3.260921001434326
    7. '[n' → logprob: -6.385921001434326
    8. '   ' → logprob: -6.635921001434326
    9. ']
' → logprob: -7.135921001434326
    10. '[' → logprob: -7.510921001434326

Token 889: '   ' (ID: 271)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.046669524163007736
    2. '   ' → logprob: -3.4216694831848145
    3. '[' → logprob: -5.0466694831848145
    4. '[-' → logprob: -5.1716694831848145
    5. 'return' → logprob: -7.7966694831848145
    6. '[len' → logprob: -9.296669960021973
    7. '[
' → logprob: -9.296669960021973
    8. ' return' → logprob: -9.796669960021973
    9. '```' → logprob: -10.171669960021973
    10. '[:]' → logprob: -11.046669960021973

Token 890: ' return' (ID: 622)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3490663468837738
    2. '   ' → logprob: -1.5990663766860962
    3. 'return' (adapté à ' return') → logprob: -2.5990662574768066
    4. '[' → logprob: -4.099066257476807
    5. ' return' → logprob: -6.724066257476807
    6. '```' → logprob: -8.349066734313965
    7. '[-' → logprob: -9.724066734313965
    8. '[
' → logprob: -9.849066734313965
    9. ':return' → logprob: -10.724066734313965
    10. '[len' → logprob: -12.099066734313965

Token 891: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889022678136826
    2. ' dp' → logprob: -2.578890323638916
    3. '(dp' → logprob: -14.828889846801758
    4. '	dp' → logprob: -16.078889846801758
    5. '_dp' → logprob: -17.453889846801758
    6. '   ' → logprob: -18.953889846801758
    7. '.dp' → logprob: -19.578889846801758
    8. '0' → logprob: -19.703889846801758
    9. '```' → logprob: -19.828889846801758
    10. '`' → logprob: -20.203889846801758

Token 892: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.24179228907451e-05
    2. '[-' → logprob: -10.375061988830566
    3. 'n' → logprob: -11.250061988830566
    4. '```' → logprob: -11.250061988830566
    5. '[' → logprob: -12.875061988830566
    6. '(n' → logprob: -13.500061988830566
    7. '\[' → logprob: -14.750061988830566
    8. '][' → logprob: -15.500061988830566
    9. ']' → logprob: -16.125062942504883
    10. '[N' → logprob: -16.250062942504883

Token 893: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019093751907348633
    2. ')' → logprob: -4.0190935134887695
    3. '}' → logprob: -7.0190935134887695
    4. ' ]' → logprob: -11.01909351348877
    5. '+' → logprob: -11.64409351348877
    6. '']' → logprob: -11.76909351348877
    7. '[' → logprob: -11.89409351348877
    8. '<|end|>' → logprob: -12.89409351348877
    9. '```' → logprob: -13.51909351348877
    10. '"]' → logprob: -14.01909351348877

Token 894: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5904588103294373
    2. '<|end|>' → logprob: -0.8404588103294373
    3. '```' → logprob: -5.090458869934082
    4. '#' → logprob: -5.965458869934082
    5. '[' → logprob: -6.090458869934082
    6. ']' → logprob: -6.840458869934082
    7. '<|end|>' → logprob: -7.090458869934082
    8. '\' → logprob: -8.090458869934082
    9. '
' → logprob: -8.590458869934082
    10. '(' → logprob: -8.840458869934082

Token 895: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759895443916321
    2. ' __' → logprob: -0.8259895443916321
    3. 'name' → logprob: -11.450989723205566
    4. '___' → logprob: -11.825989723205566
    5. 'not' → logprob: -11.950989723205566
    6. ' ' → logprob: -12.450989723205566
    7. '```' → logprob: -12.450989723205566
    8. '_name' → logprob: -12.700989723205566
    9. 'True' → logprob: -12.700989723205566
    10. ' True' → logprob: -13.075989723205566

Token 896: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0013279760023579001
    2. '```' → logprob: -7.376327991485596
    3. '[' → logprob: -8.876327514648438
    4. '__":
' → logprob: -9.376327514648438
    5. '__.__' → logprob: -9.376327514648438
    6. '__[' → logprob: -9.626327514648438
    7. ' __' → logprob: -10.126327514648438
    8. 'if' → logprob: -10.126327514648438
    9. '__':
' → logprob: -10.251327514648438
    10. '__["' → logprob: -10.501327514648438

Token 897: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.861651490908116e-05
    2. '```' → logprob: -10.375068664550781
    3. '__.__' → logprob: -10.750068664550781
    4. '==' → logprob: -12.125068664550781
    5. '__":
' → logprob: -12.750068664550781
    6. '__('' → logprob: -13.000068664550781
    7. '__[' → logprob: -14.000068664550781
    8. '=="' → logprob: -14.250068664550781
    9. '__.' → logprob: -14.250068664550781
    10. '___' → logprob: -14.500068664550781

Token 898: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014374573715031147
    2. '==' → logprob: -4.764374732971191
    3. ' ==' → logprob: -5.264374732971191
    4. '=="' → logprob: -7.639374732971191
    5. '=='' → logprob: -10.139374732971191
    6. '__.__' → logprob: -10.514374732971191
    7. '```' → logprob: -12.139374732971191
    8. '__":
' → logprob: -12.889374732971191
    9. '__[' → logprob: -13.389374732971191
    10. '__["' → logprob: -13.514374732971191

Token 899: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005256883800029755
    2. ''' → logprob: -5.255256652832031
    3. ' "__' → logprob: -11.005256652832031
    4. '__' → logprob: -12.005256652832031
    5. ' '__' → logprob: -15.505256652832031
    6. '"name' → logprob: -16.50525665283203
    7. '"_' → logprob: -17.75525665283203
    8. '   ' → logprob: -17.88025665283203
    9. '"\' → logprob: -18.00525665283203
    10. '("__' → logprob: -18.38025665283203

Token 900: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0017014833865687251
    2. '__' → logprob: -6.501701354980469
    3. 'name' → logprob: -8.626701354980469
    4. '"' → logprob: -11.626701354980469
    5. '_main' → logprob: -12.626701354980469
    6. 'built' → logprob: -12.751701354980469
    7. ' main' → logprob: -12.876701354980469
    8. '__":
' → logprob: -14.251701354980469
    9. '"name' → logprob: -15.126701354980469
    10. 'console' → logprob: -15.126701354980469

Token 901: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3198404312133789
    2. '__' → logprob: -1.319840431213379
    3. '__':
' → logprob: -5.069840431213379
    4. '__:' → logprob: -8.319840431213379
    5. '():
' → logprob: -11.194840431213379
    6. '__["' → logprob: -12.444840431213379
    7. '__((' → logprob: -13.194840431213379
    8. '__
' → logprob: -13.444840431213379
    9. ':' → logprob: -13.819840431213379
    10. '__);
' → logprob: -13.944840431213379

Token 902: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013109642080962658
    2. '```' → logprob: -4.6381096839904785
    3. '(n' → logprob: -6.6381096839904785
    4. 'import' → logprob: -6.7631096839904785
    5. '    
' → logprob: -8.13810920715332
    6. '``' → logprob: -8.51310920715332
    7. 'n' → logprob: -8.51310920715332
    8. '(' → logprob: -9.76310920715332
    9. '(
' → logprob: -10.88810920715332
    10. '<|end|>' → logprob: -11.38810920715332

Token 903: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09578093141317368
    2. 'n' → logprob: -2.470780849456787
    3. '   ' → logprob: -5.720780849456787
    4. ' import' → logprob: -6.470780849456787
    5. 't' → logprob: -6.970780849456787
    6. ' n' → logprob: -7.470780849456787
    7. '```' → logprob: -7.970780849456787
    8. 'input' → logprob: -9.095781326293945
    9. 'from' → logprob: -11.970781326293945
    10. 'for' → logprob: -12.595781326293945

Token 904: ' Lecture' (ID: 106534)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011586016975343227
    2. 'n' → logprob: -5.0115861892700195
    3. ' import' → logprob: -6.1365861892700195
    4. 'input' → logprob: -6.6365861892700195
    5. '   ' → logprob: -8.01158618927002
    6. ' n' → logprob: -8.13658618927002
    7. '#' → logprob: -8.26158618927002
    8. '```' → logprob: -8.26158618927002
    9. 'def' → logprob: -9.63658618927002
    10. ' input' → logprob: -10.26158618927002

Token 905: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6598864197731018
    2. 'import' → logprob: -1.909886360168457
    3. '(n' → logprob: -2.534886360168457
    4. 'n' → logprob: -2.659886360168457
    5. '<|end|>' → logprob: -2.784886360168457
    6. '(' → logprob: -3.909886360168457
    7. '=' → logprob: -4.159886360168457
    8. '   ' → logprob: -4.284886360168457
    9. '()>' → logprob: -4.534886360168457
    10. 'line' → logprob: -4.659886360168457

Token 906: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18475724756717682
    2. 'import' → logprob: -2.4347572326660156
    3. 't' → logprob: -3.8097572326660156
    4. 'input' → logprob: -3.9347572326660156
    5. 'stdin' → logprob: -4.434757232666016
    6. 'int' → logprob: -4.934757232666016
    7. 'nombre' → logprob: -5.184757232666016
    8. '__' → logprob: -5.809757232666016
    9. '```' → logprob: -6.309757232666016
    10. 'entrée' → logprob: -6.684757232666016

Token 907: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36063021421432495
    2. ' =' → logprob: -1.6106302738189697
    3. '=' → logprob: -3.3606302738189697
    4. 't' → logprob: -3.7356302738189697
    5. '   ' → logprob: -4.235630035400391
    6. '(n' → logprob: -4.360630035400391
    7. '=int' → logprob: -4.860630035400391
    8. 'import' → logprob: -5.485630035400391
    9. '()' → logprob: -6.985630035400391
    10. '```' → logprob: -7.360630035400391

Token 908: ' bill' (ID: 6713)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026529600843787193
    2. 'test' → logprob: -4.151529788970947
    3. 'l' → logprob: -6.026529788970947
    4. 'import' → logprob: -6.151529788970947
    5. 'b' → logprob: -6.401529788970947
    6. 'lines' → logprob: -7.026529788970947
    7. 'int' → logprob: -7.401529788970947
    8. 'input' → logprob: -7.401529788970947
    9. ' test' → logprob: -7.526529788970947
    10. ' n' → logprob: -7.526529788970947

Token 909: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0024542496539652348
    2. 'les' → logprob: -6.7524542808532715
    3. 'illes' → logprob: -7.2524542808532715
    4. 'res' → logprob: -7.7524542808532715
    5. 'e' → logprob: -9.502453804016113
    6. 'lles' → logprob: -10.877453804016113
    7. 'ues' → logprob: -11.002453804016113
    8. 'ons' → logprob: -12.002453804016113
    9. 'onnes' → logprob: -12.377453804016113
    10. 'ires' → logprob: -12.377453804016113

Token 910: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15302443504333496
    2. '   ' → logprob: -2.278024435043335
    3. ' =' → logprob: -4.403024673461914
    4. '=' → logprob: -4.528024673461914
    5. '=n' → logprob: -5.028024673461914
    6. '(n' → logprob: -5.153024673461914
    7. '```' → logprob: -5.903024673461914
    8. ' n' → logprob: -7.653024673461914
    9. 'import' → logprob: -8.028024673461914
    10. 't' → logprob: -9.278024673461914

Token 911: ' chaque' (ID: 21194)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5617378354072571
    2. 'bou' → logprob: -1.9367377758026123
    3. 'per' → logprob: -2.0617377758026123
    4. 'b' → logprob: -2.6867377758026123
    5. 'entrée' → logprob: -4.061738014221191
    6. 'po' → logprob: -5.186738014221191
    7. 'la' → logprob: -5.186738014221191
    8. 'base' → logprob: -5.311738014221191
    9. 'import' → logprob: -5.436738014221191
    10. ' boule' → logprob: -5.936738014221191

Token 912: ' couleur' (ID: 48005)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08898047357797623
    2. '```' → logprob: -3.8389804363250732
    3. 'color' → logprob: -4.088980674743652
    4. ' couleur' → logprob: -4.338980674743652
    5. 'cot' → logprob: -4.463980674743652
    6. 'cou' → logprob: -4.713980674743652
    7. ' côté' → logprob: -4.838980674743652
    8. 'type' → logprob: -5.838980674743652
    9. ' color' → logprob: -7.588980674743652
    10. ' type' → logprob: -7.713980674743652

Token 913: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04479537159204483
    2. '   ' → logprob: -3.169795274734497
    3. '```' → logprob: -6.794795513153076
    4. '(n' → logprob: -8.669795036315918
    5. ' n' → logprob: -8.794795036315918
    6. ' =' → logprob: -8.919795036315918
    7. '=' → logprob: -9.169795036315918
    8. '=n' → logprob: -9.794795036315918
    9. 'import' → logprob: -11.169795036315918
    10. '	n' → logprob: -11.419795036315918

Token 914: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6690815091133118
    2. 'n' → logprob: -0.7940815091133118
    3. '```' → logprob: -3.919081449508667
    4. '(n' → logprob: -4.544081687927246
    5. ' =' → logprob: -5.669081687927246
    6. ' n' → logprob: -7.294081687927246
    7. '=' → logprob: -7.919081687927246
    8. 'import' → logprob: -8.294081687927246
    9. '(' → logprob: -9.044081687927246
    10. 't' → logprob: -9.419081687927246

Token 915: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -8.85235276655294e-05
    2. '   ' → logprob: -9.500088691711426
    3. ' n' → logprob: -11.875088691711426
    4. 'import' → logprob: -12.625088691711426
    5. '```' → logprob: -12.625088691711426
    6. 'num' → logprob: -17.37508773803711
    7. '	n' → logprob: -18.12508773803711
    8. '    
' → logprob: -18.25008773803711
    9. 't' → logprob: -20.00008773803711
    10. '`' → logprob: -20.00008773803711

Token 916: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07032518833875656
    2. '=' → logprob: -2.6953251361846924
    3. '=int' → logprob: -8.070324897766113
    4. ',' → logprob: -9.695324897766113
    5. '   ' → logprob: -11.320324897766113
    6. '=input' → logprob: -13.570324897766113
    7. ')' → logprob: -15.070324897766113
    8. ' ' → logprob: -15.320324897766113
    9. 'int' → logprob: -15.695324897766113
    10. '  ' → logprob: -16.57032585144043

Token 917: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023245595395565033
    2. ' int' → logprob: -3.7732455730438232
    3. '[int' → logprob: -17.023244857788086
    4. '=int' → logprob: -17.523244857788086
    5. '<int' → logprob: -18.773244857788086
    6. '10' → logprob: -19.273244857788086
    7. '(int' → logprob: -19.273244857788086
    8. '	int' → logprob: -19.648244857788086
    9. '5' → logprob: -20.148244857788086
    10. ' ' → logprob: -20.398244857788086

Token 918: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00044103997061029077
    2. 'input' → logprob: -7.750441074371338
    3. '(' → logprob: -11.62544059753418
    4. '()' → logprob: -14.25044059753418
    5. '=input' → logprob: -14.62544059753418
    6. ' input' → logprob: -15.37544059753418
    7. '<input' → logprob: -17.87544059753418
    8. ',input' → logprob: -18.00044059753418
    9. '	input' → logprob: -18.12544059753418
    10. '(
' → logprob: -19.25044059753418

Token 919: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002546293195337057
    2. '()' → logprob: -6.002546310424805
    3. '().' → logprob: -10.002546310424805
    4. '(' → logprob: -11.002546310424805
    5. ')' → logprob: -12.877546310424805
    6. '())
' → logprob: -13.002546310424805
    7. '();)' → logprob: -14.002546310424805
    8. ' ())' → logprob: -14.127546310424805
    9. '()))' → logprob: -14.377546310424805
    10. '()),' → logprob: -14.752546310424805

Token 920: '   ' (ID: 271)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.10116319358348846
    2. '   ' → logprob: -2.351163148880005
    3. '```' → logprob: -7.101163387298584
    4. ' rev' → logprob: -10.101162910461426
    5. '
' → logprob: -10.601162910461426
    6. '    
' → logprob: -11.351162910461426
    7. 'colors' → logprob: -11.351162910461426
    8. 'positions' → logprob: -11.476162910461426
    9. 're' → logprob: -11.476162910461426
    10. 'lines' → logprob: -11.726162910461426

Token 921: ' #' (ID: 1069)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.009175215847790241
    2. 'white' → logprob: -5.1341753005981445
    3. 'positions' → logprob: -6.2591753005981445
    4. '```' → logprob: -8.009175300598145
    5. '   ' → logprob: -8.134175300598145
    6. 'bl' → logprob: -8.259175300598145
    7. 'lines' → logprob: -9.259175300598145
    8. 'w' → logprob: -9.884175300598145
    9. ' rev' → logprob: -9.884175300598145
    10. 're' → logprob: -10.009175300598145

Token 922: ' Initial' (ID: 9209)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.028131388127803802
    2. 'positions' → logprob: -3.6531314849853516
    3. 'lines' → logprob: -6.778131484985352
    4. 'pos' → logprob: -7.653131484985352
    5. 'line' → logprob: -9.028131484985352
    6. 'colors' → logprob: -11.153131484985352
    7. 'rows' → logprob: -11.153131484985352
    8. 're' → logprob: -11.278131484985352
    9. 'position' → logprob: -11.778131484985352
    10. 'vals' → logprob: -11.778131484985352

Token 923: 'isation' (ID: 6993)
  Prédit: '_rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rev' → logprob: -0.3563247621059418
    2. '_positions' → logprob: -1.8563247919082642
    3. 'rev' → logprob: -2.3563246726989746
    4. '_pos' → logprob: -3.4813246726989746
    5. '_input' → logprob: -4.481324672698975
    6. '_' → logprob: -6.856324672698975
    7. ' rev' → logprob: -6.856324672698975
    8. 'input' → logprob: -7.231324672698975
    9. '_data' → logprob: -7.231324672698975
    10. '_line' → logprob: -7.481324672698975

Token 924: ' des' (ID: 731)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0005015624337829649
    2. '   ' → logprob: -8.75050163269043
    3. 'white' → logprob: -9.62550163269043
    4. 're' → logprob: -9.62550163269043
    5. 'positions' → logprob: -9.87550163269043
    6. ' rev' → logprob: -9.87550163269043
    7. 'lines' → logprob: -10.25050163269043
    8. '
' → logprob: -10.75050163269043
    9. '```' → logprob: -11.50050163269043
    10. 'bl' → logprob: -11.87550163269043

Token 925: ' tableaux' (ID: 176599)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.00031401283922605217
    2. 'positions' → logprob: -8.375313758850098
    3. ' rev' → logprob: -9.625313758850098
    4. 'pos' → logprob: -11.750313758850098
    5. 'lines' → logprob: -12.875313758850098
    6. '_rev' → logprob: -13.375313758850098
    7. '.rev' → logprob: -13.750313758850098
    8. '```' → logprob: -14.375313758850098
    9. '
' → logprob: -14.500313758850098
    10. 'import' → logprob: -14.625313758850098

Token 926: ' pour' (ID: 1930)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5707226395606995
    2. 'white' → logprob: -1.8207225799560547
    3. 'rev' → logprob: -1.9457225799560547
    4. '_white' → logprob: -3.3207225799560547
    5. 'b' → logprob: -4.070722579956055
    6. 'w' → logprob: -4.695722579956055
    7. ' blancs' → logprob: -4.820722579956055
    8. '_bl' → logprob: -4.820722579956055
    9. ' =' → logprob: -4.945722579956055
    10. '=' → logprob: -4.945722579956055

Token 927: ' les' (ID: 1341)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.004185840487480164
    2. 'positions' → logprob: -6.254185676574707
    3. 'pos' → logprob: -7.004185676574707
    4. 'bl' → logprob: -7.129185676574707
    5. 'white' → logprob: -8.254185676574707
    6. '_rev' → logprob: -9.504185676574707
    7. '_' → logprob: -9.879185676574707
    8. ' rev' → logprob: -10.129185676574707
    9. 're' → logprob: -10.629185676574707
    10. 'b' → logprob: -11.254185676574707

Token 928: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.10685558617115021
    2. 'rev' → logprob: -2.356855630874634
    3. 'pos' → logprob: -5.231855392456055
    4. ' positions' → logprob: -7.356855392456055
    5. 're' → logprob: -8.481855392456055
    6. 'b' → logprob: -8.856855392456055
    7. 'bl' → logprob: -9.606855392456055
    8. ' rev' → logprob: -9.981855392456055
    9. 'position' → logprob: -10.481855392456055
    10. 'ranges' → logprob: -11.106855392456055

Token 929: ' de' (ID: 334)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5208942890167236
    2. 'white' → logprob: -1.5208942890167236
    3. 'rev' → logprob: -1.8958942890167236
    4. ' blancs' → logprob: -4.6458940505981445
    5. 'wh' → logprob: -5.2708940505981445
    6. 'w' → logprob: -5.2708940505981445
    7. '```' → logprob: -5.6458940505981445
    8. 'b' → logprob: -5.7708940505981445
    9. '_' → logprob: -6.0208940505981445
    10. ' blanc' → logprob: -6.3958940505981445

Token 930: ' chaque' (ID: 21194)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.6841333508491516
    2. 'bl' → logprob: -1.0591332912445068
    3. '_' → logprob: -3.059133291244507
    4. 'white' → logprob: -3.184133291244507
    5. 'b' → logprob: -3.809133291244507
    6. 'les' → logprob: -4.434133529663086
    7. '[' → logprob: -4.809133529663086
    8. '[]' → logprob: -5.934133529663086
    9. 'la' → logprob: -5.934133529663086
    10. '
' → logprob: -6.059133529663086

Token 931: ' bille' (ID: 97414)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.3351934254169464
    2. 'rev' → logprob: -1.835193395614624
    3. 'b' → logprob: -2.210193395614624
    4. 'cou' → logprob: -5.710193634033203
    5. 'range' → logprob: -5.960193634033203
    6. ' couleur' → logprob: -6.460193634033203
    7. 'token' → logprob: -6.585193634033203
    8. '```' → logprob: -6.710193634033203
    9. 'c' → logprob: -6.960193634033203
    10. ')' → logprob: -7.085193634033203

Token 932: ' blanche' (ID: 102684)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5250609517097473
    2. 'white' → logprob: -1.9000608921051025
    3. '=' → logprob: -2.4000608921051025
    4. ' =' → logprob: -3.0250608921051025
    5. 'b' → logprob: -3.5250608921051025
    6. '```' → logprob: -3.9000608921051025
    7. '_white' → logprob: -4.275061130523682
    8. '_' → logprob: -4.525061130523682
    9. ' blancs' → logprob: -4.525061130523682
    10. '[' → logprob: -5.025061130523682

Token 933: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06610829383134842
    2. '   ' → logprob: -4.191108226776123
    3. '=' → logprob: -4.691108226776123
    4. ' =' → logprob: -5.191108226776123
    5. 'rev' → logprob: -5.316108226776123
    6. ' and' → logprob: -5.441108226776123
    7. 'n' → logprob: -5.441108226776123
    8. 'and' → logprob: -5.691108226776123
    9. 'et' → logprob: -6.191108226776123
    10. '<|end|>' → logprob: -6.191108226776123

Token 934: ' noire' (ID: 115610)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.00039135036058723927
    2. ' noire' → logprob: -7.875391483306885
    3. ' no' → logprob: -11.875391006469727
    4. 'black' → logprob: -13.250391006469727
    5. '```' → logprob: -13.875391006469727
    6. 'No' → logprob: -13.875391006469727
    7. '_no' → logprob: -15.500391006469727
    8. 'neg' → logprob: -16.000391006469727
    9. '#' → logprob: -16.500391006469727
    10. 'n' → logprob: -16.625391006469727

Token 935: '.
' (ID: 558)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.7863719463348389
    2. 'white' → logprob: -1.0363719463348389
    3. 'w' → logprob: -2.661371946334839
    4. '   ' → logprob: -3.286371946334839
    5. 'bl' → logprob: -3.411371946334839
    6. 'wh' → logprob: -3.536371946334839
    7. '```' → logprob: -5.661372184753418
    8. 'wb' → logprob: -5.786372184753418
    9. '
' → logprob: -6.286372184753418
    10. ' blancs' → logprob: -6.411372184753418

Token 936: '   ' (ID: 271)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.24288752675056458
    2. '   ' → logprob: -2.492887496948242
    3. 'white' → logprob: -3.117887496948242
    4. ' rev' → logprob: -3.242887496948242
    5. ' whites' → logprob: -4.742887496948242
    6. 'positions' → logprob: -4.867887496948242
    7. ' white' → logprob: -4.867887496948242
    8. '```' → logprob: -5.242887496948242
    9. ' blancs' → logprob: -5.367887496948242
    10. 'bl' → logprob: -5.492887496948242

Token 937: ' #' (ID: 1069)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0038070916198194027
    2. 'positions' → logprob: -6.378807067871094
    3. 'white' → logprob: -6.753807067871094
    4. 'bl' → logprob: -7.878807067871094
    5. 'pos' → logprob: -8.628807067871094
    6. '```' → logprob: -9.003807067871094
    7. 'w' → logprob: -9.128807067871094
    8. 'wh' → logprob: -9.253807067871094
    9. '   ' → logprob: -11.378807067871094
    10. 'wb' → logprob: -11.753807067871094

Token 938: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.013371155597269535
    2. 'white' → logprob: -5.263370990753174
    3. 'positions' → logprob: -5.513370990753174
    4. 'wh' → logprob: -6.513370990753174
    5. 'bl' → logprob: -6.888370990753174
    6. 'pos' → logprob: -7.388370990753174
    7. 'w' → logprob: -7.888370990753174
    8. ' rev' → logprob: -8.263371467590332
    9. '```' → logprob: -9.638371467590332
    10. ' whites' → logprob: -10.013371467590332

Token 939: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15784838795661926
    2. ' =' → logprob: -2.282848358154297
    3. '[' → logprob: -3.407848358154297
    4. '0' → logprob: -5.282848358154297
    5. '_' → logprob: -6.657848358154297
    6. '_white' → logprob: -6.782848358154297
    7. '```' → logprob: -7.032848358154297
    8. '=[' → logprob: -7.282848358154297
    9. 'rev' → logprob: -7.782848358154297
    10. 'white' → logprob: -8.157848358154297

Token 940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002879145904444158
    2. ']' → logprob: -9.125288009643555
    3. ' ' → logprob: -9.375288009643555
    4. '
' → logprob: -10.375288009643555
    5. ' =' → logprob: -10.875288009643555
    6. '1' → logprob: -11.375288009643555
    7. '=' → logprob: -11.500288009643555
    8. '   ' → logprob: -11.625288009643555
    9. ']=' → logprob: -12.500288009643555
    10. '```' → logprob: -12.875288009643555

Token 941: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13122396171092987
    2. '=' → logprob: -2.2562239170074463
    3. ' =' → logprob: -4.756224155426025
    4. ')' → logprob: -5.756224155426025
    5. ',' → logprob: -6.006224155426025
    6. ']=' → logprob: -6.131224155426025
    7. '],' → logprob: -6.631224155426025
    8. '[' → logprob: -9.006223678588867
    9. '])' → logprob: -9.006223678588867
    10. '   ' → logprob: -9.506223678588867

Token 942: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008137972326949239
    2. ' =' → logprob: -7.125813961029053
    3. ',' → logprob: -12.375813484191895
    4. '=[]' → logprob: -13.125813484191895
    5. '=[' → logprob: -13.375813484191895
    6. '[' → logprob: -14.625813484191895
    7. '=
' → logprob: -15.125813484191895
    8. '=list' → logprob: -15.500813484191895
    9. '=input' → logprob: -15.625813484191895
    10. '=[]
' → logprob: -15.875813484191895

Token 943: 'i' (ID: 72)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15942524373531342
    2. 'inue' → logprob: -2.1594252586364746
    3. 'in' → logprob: -3.6594252586364746
    4. ' =' → logprob: -6.159425258636475
    5. 'inu' → logprob: -6.409425258636475
    6. '=[' → logprob: -6.659425258636475
    7. '=[]' → logprob: -7.534425258636475
    8. '=[]
' → logprob: -8.659424781799316
    9. '.append' → logprob: -9.534424781799316
    10. '+=' → logprob: -9.534424781799316

Token 944: 'endra' (ID: 32364)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5054449439048767
    2. 'inue' → logprob: -1.8804450035095215
    3. 'ains' → logprob: -2.5054450035095215
    4. 'n' → logprob: -2.6304450035095215
    5. 'ient' → logprob: -3.5054450035095215
    6. '=' → logprob: -3.8804450035095215
    7. ' =' → logprob: -4.8804450035095215
    8. 'e' → logprob: -5.1304450035095215
    9. 'i' → logprob: -5.3804450035095215
    10. 'ent' → logprob: -5.6304450035095215

Token 945: ' les' (ID: 1341)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5224416851997375
    2. 'list' → logprob: -1.2724416255950928
    3. '[int' → logprob: -2.7724416255950928
    4. '[' → logprob: -3.0224416255950928
    5. '[]' → logprob: -5.147441864013672
    6. '[input' → logprob: -5.522441864013672
    7. '[x' → logprob: -6.022441864013672
    8. '[n' → logprob: -6.647441864013672
    9. ' list' → logprob: -7.022441864013672
    10. ' [' → logprob: -8.522441864013672

Token 946: ' positions' (ID: 15897)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0840206146240234
    2. '[x' → logprob: -1.4590206146240234
    3. 'list' → logprob: -1.5840206146240234
    4. '[' → logprob: -2.0840206146240234
    5. '[list' → logprob: -3.4590206146240234
    6. 'positions' → logprob: -4.084020614624023
    7. '[pos' → logprob: -4.334020614624023
    8. '[i' → logprob: -4.584020614624023
    9. '[b' → logprob: -4.959020614624023
    10. '[
' → logprob: -5.084020614624023

Token 947: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5970045924186707
    2. ' =' → logprob: -0.9720045924186707
    3. ',' → logprob: -3.7220046520233154
    4. 'bl' → logprob: -3.7220046520233154
    5. '   ' → logprob: -5.847004413604736
    6. '=[' → logprob: -5.847004413604736
    7. '=[]
' → logprob: -5.847004413604736
    8. '[' → logprob: -5.847004413604736
    9. 'des' → logprob: -5.972004413604736
    10. '=[]' → logprob: -6.222004413604736

Token 948: ' bill' (ID: 6713)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.2718152105808258
    2. 'list' → logprob: -1.7718151807785034
    3. 'b' → logprob: -3.271815299987793
    4. 'map' → logprob: -4.521815299987793
    5. ' blancs' → logprob: -4.646815299987793
    6. '[' → logprob: -5.396815299987793
    7. '[int' → logprob: -6.646815299987793
    8. 'white' → logprob: -6.896815299987793
    9. '[list' → logprob: -8.146815299987793
    10. '[i' → logprob: -8.146815299987793

Token 949: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10401343554258347
    2. '[' → logprob: -2.729013442993164
    3. 'anches' → logprob: -5.104013442993164
    4. 'anc' → logprob: -5.354013442993164
    5. 'anes' → logprob: -5.354013442993164
    6. 'ances' → logprob: -5.604013442993164
    7. 'bl' → logprob: -6.104013442993164
    8. '#' → logprob: -6.354013442993164
    9. '```' → logprob: -6.354013442993164
    10. 'les' → logprob: -6.604013442993164

Token 950: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.11033688485622406
    2. '[' → logprob: -2.4853367805480957
    3. 'no' → logprob: -4.735336780548096
    4. '=' → logprob: -4.985336780548096
    5. ' =' → logprob: -6.610336780548096
    6. '```' → logprob: -6.860336780548096
    7. '_bl' → logprob: -6.860336780548096
    8. 'b' → logprob: -7.485336780548096
    9. '   ' → logprob: -7.860336780548096
    10. '=[' → logprob: -8.610337257385254

Token 951: 'anches' (ID: 64769)
  Prédit: 'anches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anches' → logprob: -0.0006307095172815025
    2. 'anc' → logprob: -8.500630378723145
    3. 'an' → logprob: -8.875630378723145
    4. '[' → logprob: -9.500630378723145
    5. 'aches' → logprob: -9.500630378723145
    6. '```' → logprob: -10.500630378723145
    7. 'anche' → logprob: -10.750630378723145
    8. 'a' → logprob: -10.875630378723145
    9. '
' → logprob: -11.250630378723145
    10. '_' → logprob: -11.375630378723145

Token 952: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29117265343666077
    2. '=' → logprob: -1.9161726236343384
    3. '   ' → logprob: -2.416172742843628
    4. ',' → logprob: -4.916172504425049
    5. '=[]
' → logprob: -6.166172504425049
    6. '[' → logprob: -6.666172504425049
    7. ']' → logprob: -6.666172504425049
    8. 'rev' → logprob: -7.041172504425049
    9. '=[' → logprob: -7.041172504425049
    10. '=[]' → logprob: -7.041172504425049

Token 953: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10682526230812073
    2. ' =' → logprob: -2.981825351715088
    3. 'rev' → logprob: -3.731825351715088
    4. '```' → logprob: -4.606825351715088
    5. ',' → logprob: -4.981825351715088
    6. '=' → logprob: -5.356825351715088
    7. '[' → logprob: -5.856825351715088
    8. '[
' → logprob: -7.856825351715088
    9. '``' → logprob: -7.981825351715088
    10. '    
' → logprob: -8.10682487487793

Token 954: ' #' (ID: 1069)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.10959219187498093
    2. '   ' → logprob: -2.3595921993255615
    3. 'positions' → logprob: -4.984591960906982
    4. '```' → logprob: -7.109591960906982
    5. 'white' → logprob: -7.609591960906982
    6. 'pos' → logprob: -7.984591960906982
    7. 'bl' → logprob: -8.48459243774414
    8. ' rev' → logprob: -9.35959243774414
    9. 're' → logprob: -9.35959243774414
    10. '    
' → logprob: -9.48459243774414

Token 955: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0018443976296111941
    2. '   ' → logprob: -6.75184440612793
    3. ' rev' → logprob: -7.50184440612793
    4. '```' → logprob: -10.12684440612793
    5. 'positions' → logprob: -10.62684440612793
    6. 'white' → logprob: -11.50184440612793
    7. ' ' → logprob: -11.62684440612793
    8. '#' → logprob: -11.62684440612793
    9. 'import' → logprob: -12.12684440612793
    10. 're' → logprob: -12.75184440612793

Token 956: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004558175278361887
    2. ' =' → logprob: -8.000455856323242
    3. '=' → logprob: -9.500455856323242
    4. '0' → logprob: -10.250455856323242
    5. '=[' → logprob: -12.500455856323242
    6. '[
' → logprob: -13.125455856323242
    7. '#' → logprob: -13.750455856323242
    8. '_' → logprob: -13.875455856323242
    9. '```' → logprob: -14.875455856323242
    10. '.' → logprob: -15.000455856323242

Token 957: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9186317482963204e-05
    2. '[' → logprob: -10.500049591064453
    3. '0' → logprob: -10.875049591064453
    4. ' ' → logprob: -13.750049591064453
    5. '```' → logprob: -14.000049591064453
    6. '=' → logprob: -15.375049591064453
    7. ']' → logprob: -16.250049591064453
    8. '   ' → logprob: -16.625049591064453
    9. '-' → logprob: -16.750049591064453
    10. '#' → logprob: -17.000049591064453

Token 958: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -11.87501049041748
    3. ']=' → logprob: -12.75001049041748
    4. ' ]' → logprob: -15.75001049041748
    5. '][' → logprob: -16.125011444091797
    6. '=' → logprob: -16.250011444091797
    7. ')' → logprob: -16.375011444091797
    8. '].' → logprob: -16.375011444091797
    9. '```' → logprob: -17.375011444091797
    10. ']
' → logprob: -17.625011444091797

Token 959: ' celles' (ID: 57573)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0110935652628541
    2. ' =' → logprob: -4.511093616485596
    3. '[' → logprob: -10.261093139648438
    4. '=[]' → logprob: -12.136093139648438
    5. ',' → logprob: -13.386093139648438
    6. '=[]
' → logprob: -13.511093139648438
    7. '=input' → logprob: -14.511093139648438
    8. '=[' → logprob: -14.886093139648438
    9. '=
' → logprob: -15.261093139648438
    10. 'input' → logprob: -15.636093139648438

Token 960: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.25253739953041077
    2. '[' → logprob: -1.7525373697280884
    3. '=' → logprob: -4.127537250518799
    4. 'no' → logprob: -4.252537250518799
    5. ' des' → logprob: -4.627537250518799
    6. '   ' → logprob: -5.752537250518799
    7. '#' → logprob: -6.002537250518799
    8. '```' → logprob: -6.502537250518799
    9. ' =' → logprob: -7.002537250518799
    10. '_des' → logprob: -8.002537727355957

Token 961: ' no' (ID: 860)
  Prédit: 'bill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bill' → logprob: -0.4757969081401825
    2. 'b' → logprob: -1.2257969379425049
    3. 'no' → logprob: -3.225796937942505
    4. ' bill' → logprob: -3.850796937942505
    5. 'list' → logprob: -4.100796699523926
    6. 'bl' → logprob: -5.975796699523926
    7. '[' → logprob: -6.225796699523926
    8. 'positions' → logprob: -6.725796699523926
    9. 'range' → logprob: -7.850796699523926
    10. 'input' → logprob: -8.225796699523926

Token 962: 'ires' (ID: 5255)
  Prédit: 'ires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ires' → logprob: -0.0022894255816936493
    2. 'ir' → logprob: -6.252289295196533
    3. 'no' → logprob: -8.627289772033691
    4. '[' → logprob: -9.627289772033691
    5. '
' → logprob: -10.502289772033691
    6. 'ire' → logprob: -10.752289772033691
    7. '#' → logprob: -11.127289772033691
    8. 'aires' → logprob: -11.627289772033691
    9. '```' → logprob: -11.752289772033691
    10. 'oires' → logprob: -12.127289772033691

Token 963: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07469884306192398
    2. '=' → logprob: -3.0746989250183105
    3. '   ' → logprob: -3.8246989250183105
    4. 'rev' → logprob: -6.8246989250183105
    5. '```' → logprob: -7.4496989250183105
    6. 'n' → logprob: -7.5746989250183105
    7. '=[]
' → logprob: -8.199698448181152
    8. 'positions' → logprob: -8.324698448181152
    9. '[' → logprob: -8.324698448181152
    10. '=
' → logprob: -8.824698448181152

Token 964: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029990902170538902
    2. 'rev' → logprob: -3.6549909114837646
    3. '```' → logprob: -6.1549906730651855
    4. 'positions' → logprob: -6.7799906730651855
    5. '
' → logprob: -8.654991149902344
    6. '``' → logprob: -9.779991149902344
    7. ' rev' → logprob: -10.154991149902344
    8. '    
' → logprob: -10.404991149902344
    9. ' =' → logprob: -10.779991149902344
    10. 'pos' → logprob: -10.779991149902344

Token 965: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' (adapté à ' rev') → logprob: -0.03857864812016487
    2. '   ' → logprob: -3.913578748703003
    3. 'positions' → logprob: -4.163578510284424
    4. '```' → logprob: -6.413578510284424
    5. 'pos' → logprob: -8.788578987121582
    6. 'white' → logprob: -8.913578987121582
    7. ' rev' → logprob: -8.913578987121582
    8. 'lines' → logprob: -10.038578987121582
    9. '
' → logprob: -10.038578987121582
    10. '    
' → logprob: -10.163578987121582

Token 966: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759562849998474
    2. '=' → logprob: -0.8259562849998474
    3. '=[' → logprob: -12.200956344604492
    4. '[' → logprob: -12.450956344604492
    5. '=[[' → logprob: -12.450956344604492
    6. '=[]' → logprob: -13.575956344604492
    7. ' =[' → logprob: -13.825956344604492
    8. '＝' → logprob: -15.200956344604492
    9. '   ' → logprob: -15.200956344604492
    10. ',' → logprob: -15.325956344604492

Token 967: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006834602914750576
    2. '[list' → logprob: -5.506834506988525
    3. '[[' → logprob: -6.256834506988525
    4. '[int' → logprob: -7.256834506988525
    5. ' [' → logprob: -10.006834983825684
    6. '[array' → logprob: -10.506834983825684
    7. '[input' → logprob: -10.506834983825684
    8. '[List' → logprob: -11.131834983825684
    9. '[
' → logprob: -12.631834983825684
    10. '[class' → logprob: -13.131834983825684

Token 968: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022934217005968094
    2. '0' → logprob: -3.8979341983795166
    3. '*' → logprob: -7.022934436798096
    4. ']' → logprob: -7.522934436798096
    5. '[]' → logprob: -8.397933959960938
    6. ']int' → logprob: -8.647933959960938
    7. ']*' → logprob: -8.772933959960938
    8. '(int' → logprob: -9.147933959960938
    9. '[int' → logprob: -9.272933959960938
    10. '*n' → logprob: -10.022933959960938

Token 969: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3056391775608063
    2. ' for' → logprob: -1.6806391477584839
    3. 'for' → logprob: -2.9306392669677734
    4. ']*' → logprob: -4.180639266967773
    5. ',' → logprob: -5.055639266967773
    6. ']*(' → logprob: -6.680639266967773
    7. '   ' → logprob: -8.055639266967773
    8. ')' → logprob: -9.180639266967773
    9. '],' → logprob: -9.555639266967773
    10. ' ]' → logprob: -9.805639266967773

Token 970: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7470917701721191
    2. 'for' → logprob: -0.7470917701721191
    3. ']' → logprob: -3.122091770172119
    4. ',' → logprob: -5.622091770172119
    5. ']*' → logprob: -5.872091770172119
    6. '()' → logprob: -7.122091770172119
    7. ']*(' → logprob: -8.122091293334961
    8. 'n' → logprob: -8.497091293334961
    9. 'int' → logprob: -8.997091293334961
    10. '   ' → logprob: -9.122091293334961

Token 971: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006995689473114908
    2. '(n' → logprob: -7.500699520111084
    3. ' n' → logprob: -8.875699996948242
    4. '2' → logprob: -12.750699996948242
    5. ' (' → logprob: -12.875699996948242
    6. '(' → logprob: -14.000699996948242
    7. '[n' → logprob: -15.250699996948242
    8. '	n' → logprob: -16.125699996948242
    9. '   ' → logprob: -16.250699996948242
    10. ' ' → logprob: -16.750699996948242

Token 972: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019484061747789383
    2. ' for' → logprob: -4.394484043121338
    3. 'for' → logprob: -5.769484043121338
    4. ',
' → logprob: -6.144484043121338
    5. ' ,' → logprob: -6.769484043121338
    6. ']' → logprob: -8.144484519958496
    7. '   ' → logprob: -8.894484519958496
    8. ',n' → logprob: -9.769484519958496
    9. '[' → logprob: -11.519484519958496
    10. ',[' → logprob: -11.769484519958496

Token 973: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018156498670578003
    2. ' [' → logprob: -4.0181565284729
    3. '       ' → logprob: -13.143156051635742
    4. '        ' → logprob: -13.643156051635742
    5. '   ' → logprob: -13.893156051635742
    6. '           ' → logprob: -14.393156051635742
    7. '         ' → logprob: -14.518156051635742
    8. '          ' → logprob: -14.768156051635742
    9. '             ' → logprob: -15.643156051635742
    10. '0' → logprob: -15.768156051635742

Token 974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011546355381142348
    2. 'n' → logprob: -9.125115394592285
    3. ' ' → logprob: -12.125115394592285
    4. ' n' → logprob: -14.000115394592285
    5. ']' → logprob: -15.125115394592285
    6. '(n' → logprob: -18.8751163482666
    7. '```' → logprob: -19.0001163482666
    8. '   ' → logprob: -19.2501163482666
    9. ')' → logprob: -20.2501163482666
    10. '  ' → logprob: -20.3751163482666

Token 975: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17599309980869293
    2. ' n' → logprob: -2.3009932041168213
    3. 'n' → logprob: -3.0509932041168213
    4. ' *' → logprob: -5.050992965698242
    5. '(n' → logprob: -6.425992965698242
    6. ' ' → logprob: -6.550992965698242
    7. '*' → logprob: -7.175992965698242
    8. ' ]' → logprob: -7.300992965698242
    9. ')' → logprob: -7.425992965698242
    10. '   ' → logprob: -7.425992965698242

Token 976: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3889431059360504
    2. ' *' → logprob: -1.513943076133728
    3. '*' → logprob: -2.7639431953430176
    4. '*n' → logprob: -4.638943195343018
    5. '   ' → logprob: -5.263943195343018
    6. '(n' → logprob: -5.388943195343018
    7. ')' → logprob: -5.388943195343018
    8. 'n' → logprob: -6.013943195343018
    9. ' for' → logprob: -6.013943195343018
    10. ' n' → logprob: -6.138943195343018

Token 977: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.836499985889532e-05
    2. ' n' → logprob: -9.7500581741333
    3. '(n' → logprob: -19.500059127807617
    4. ')n' → logprob: -19.625059127807617
    5. '	n' → logprob: -20.000059127807617
    6. '   ' → logprob: -21.125059127807617
    7. '_n' → logprob: -21.750059127807617
    8. '2' → logprob: -22.250059127807617
    9. '$n' → logprob: -22.250059127807617
    10. ']' → logprob: -23.500059127807617

Token 978: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5876766443252563
    2. ']
' → logprob: -0.8376766443252563
    3. ']

' → logprob: -4.462676525115967
    4. ']
' → logprob: -9.337677001953125
    5. '   ' → logprob: -10.212677001953125
    6. ' ]
' → logprob: -12.337677001953125
    7. ' ]' → logprob: -12.712677001953125
    8. ']

' → logprob: -12.962677001953125
    9. ']


' → logprob: -13.837677001953125
    10. '
' → logprob: -14.337677001953125

Token 979: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033690307289361954
    2. '   ' → logprob: -3.5336902141571045
    3. ' for' → logprob: -5.658690452575684
    4. '```' → logprob: -7.783690452575684
    5. '
' → logprob: -10.783690452575684
    6. '	for' → logprob: -12.533690452575684
    7. '    
' → logprob: -13.533690452575684
    8. 'i' → logprob: -14.033690452575684
    9. '``' → logprob: -14.158690452575684
    10. 'positions' → logprob: -14.658690452575684

Token 980: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.0100624169572257e-05
    2. ' for' → logprob: -11.250020027160645
    3. '   ' → logprob: -12.000020027160645
    4. '```' → logprob: -14.125020027160645
    5. '
' → logprob: -16.62502098083496
    6. '	for' → logprob: -18.25002098083496
    7. '``' → logprob: -18.37502098083496
    8. '    
' → logprob: -18.75002098083496
    9. 'import' → logprob: -20.25002098083496
    10. '#' → logprob: -22.50002098083496

Token 981: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011597209610044956
    2. ' i' → logprob: -4.511597156524658
    3. '_' → logprob: -7.636597156524658
    4. '_i' → logprob: -9.636597633361816
    5. ' _' → logprob: -13.886597633361816
    6. '	i' → logprob: -14.886597633361816
    7. '_=' → logprob: -16.7615966796875
    8. 'idx' → logprob: -17.0115966796875
    9. 'x' → logprob: -17.1365966796875
    10. 'color' → logprob: -17.5115966796875

Token 982: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07907870411872864
    2. 'in' → logprob: -2.5790786743164062
    3. '_' → logprob: -8.704078674316406
    4. 'n' → logprob: -12.079078674316406
    5. '_in' → logprob: -12.329078674316406
    6. ' ' → logprob: -12.579078674316406
    7. 'i' → logprob: -13.204078674316406
    8. ' _' → logprob: -13.829078674316406
    9. '	in' → logprob: -13.829078674316406
    10. 'range' → logprob: -14.204078674316406

Token 983: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. 'rang' → logprob: -17.750158309936523
    4. '	range' → logprob: -18.250158309936523
    5. 'ra' → logprob: -18.625158309936523
    6. '(range' → logprob: -19.375158309936523
    7. 'r' → logprob: -19.750158309936523
    8. 'ran' → logprob: -20.000158309936523
    9. 'in' → logprob: -20.125158309936523
    10. '_' → logprob: -20.125158309936523

Token 984: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13595126569271088
    2. '(n' → logprob: -2.135951280593872
    3. '(' → logprob: -5.510951042175293
    4. '2' → logprob: -6.010951042175293
    5. ' n' → logprob: -6.010951042175293
    6. ' (' → logprob: -11.010951042175293
    7. '	n' → logprob: -11.260951042175293
    8. '   ' → logprob: -12.635951042175293
    9. ' ' → logprob: -13.635951042175293
    10. '_n' → logprob: -13.760951042175293

Token 985: ' *' (ID: 425)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.053410161286592484
    2. '):' → logprob: -3.053410053253174
    3. '*' → logprob: -6.178410053253174
    4. '   ' → logprob: -6.303410053253174
    5. '*n' → logprob: -8.178410530090332
    6. '=' → logprob: -8.928410530090332
    7. 'n' → logprob: -9.053410530090332
    8. '+' → logprob: -9.053410530090332
    9. '):
' → logprob: -9.678410530090332
    10. '(n' → logprob: -9.803410530090332

Token 986: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003815756645053625
    2. ' ' → logprob: -7.8753814697265625
    3. '1' → logprob: -14.500381469726562
    4. '   ' → logprob: -15.125381469726562
    5. ')' → logprob: -15.375381469726562
    6. 'n' → logprob: -16.250381469726562
    7. '=' → logprob: -16.250381469726562
    8. '(' → logprob: -16.250381469726562
    9. ' n' → logprob: -16.500381469726562
    10. 'int' → logprob: -17.000381469726562

Token 987: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -15.00001335144043
    4. 'int' → logprob: -17.00001335144043
    5. '
' → logprob: -17.25001335144043
    6. '   ' → logprob: -17.37501335144043
    7. '3' → logprob: -17.87501335144043
    8. '  ' → logprob: -18.25001335144043
    9. '4' → logprob: -18.37501335144043
    10. '```' → logprob: -18.37501335144043

Token 988: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.021797966212034225
    2. '):' → logprob: -3.8967978954315186
    3. '   ' → logprob: -6.896798133850098
    4. '):
' → logprob: -8.771798133850098
    5. ':' → logprob: -10.146798133850098
    6. '():
' → logprob: -11.146798133850098
    7. ')' → logprob: -11.646798133850098
    8. ':
' → logprob: -12.021798133850098
    9. '+' → logprob: -12.146798133850098
    10. '()):
' → logprob: -12.646798133850098

Token 989: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6703398823738098
    2. '   ' → logprob: -1.420339822769165
    3. '       ' → logprob: -1.920339822769165
    4. ' c' → logprob: -3.920339822769165
    5. 'color' → logprob: -4.045340061187744
    6. 'line' → logprob: -4.170340061187744
    7. 's' → logprob: -4.670340061187744
    8. ' line' → logprob: -5.045340061187744
    9. 'b' → logprob: -5.295340061187744
    10. 'x' → logprob: -5.545340061187744

Token 990: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.07140373438596725
    2. ' c' → logprob: -3.196403741836548
    3. 'color' → logprob: -3.821403741836548
    4. ' color' → logprob: -6.196403503417969
    5. '   ' → logprob: -7.196403503417969
    6. 't' → logprob: -7.321403503417969
    7. 'b' → logprob: -7.446403503417969
    8. 'x' → logprob: -7.696403503417969
    9. 'col' → logprob: -8.196403503417969
    10. 's' → logprob: -8.196403503417969

Token 991: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133154809474945
    2. '=' → logprob: -1.313315510749817
    3. '=int' → logprob: -10.438315391540527
    4. '=input' → logprob: -11.188315391540527
    5. ',' → logprob: -12.688315391540527
    6. '   ' → logprob: -13.313315391540527
    7. '=line' → logprob: -13.813315391540527
    8. '_' → logprob: -14.313315391540527
    9. ' ' → logprob: -14.313315391540527
    10. 'olor' → logprob: -14.438315391540527

Token 992: ' a' (ID: 261)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6459733843803406
    2. 'p' → logprob: -1.1459734439849854
    3. 'x' → logprob: -2.7709734439849854
    4. 'color' → logprob: -3.6459734439849854
    5. ' p' → logprob: -4.145973205566406
    6. '_' → logprob: -4.145973205566406
    7. ' pos' → logprob: -4.395973205566406
    8. 'col' → logprob: -5.270973205566406
    9. '_=' → logprob: -5.270973205566406
    10. 'b' → logprob: -5.395973205566406

Token 993: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0790133848786354
    2. ' =' → logprob: -2.5790133476257324
    3. ',' → logprob: -9.32901382446289
    4. '=int' → logprob: -11.07901382446289
    5. '=input' → logprob: -11.70401382446289
    6. '=line' → logprob: -12.20401382446289
    7. 's' → logprob: -13.20401382446289
    8. ',b' → logprob: -14.20401382446289
    9. ' ' → logprob: -14.32901382446289
    10. 'r' → logprob: -14.45401382446289

Token 994: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01105159055441618
    2. ' input' → logprob: -4.511051654815674
    3. '(input' → logprob: -12.636051177978516
    4. '=input' → logprob: -14.886051177978516
    5. 'map' → logprob: -15.761051177978516
    6. '[input' → logprob: -17.261051177978516
    7. ',input' → logprob: -18.386051177978516
    8. '<input' → logprob: -18.761051177978516
    9. '	input' → logprob: -19.136051177978516
    10. ' map' → logprob: -20.761051177978516

Token 995: '().' (ID: 1454)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03967961668968201
    2. ' =' → logprob: -3.289679527282715
    3. ',' → logprob: -7.914679527282715
    4. 'split' → logprob: -8.039679527282715
    5. '()' → logprob: -8.914679527282715
    6. '().' → logprob: -9.039679527282715
    7. '_=' → logprob: -9.039679527282715
    8. 'r' → logprob: -9.164679527282715
    9. '=input' → logprob: -9.414679527282715
    10. '=line' → logprob: -9.664679527282715

Token 996: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000432695698691532
    2. 'strip' → logprob: -7.75043249130249
    3. 'spl' → logprob: -13.625432968139648
    4. 'rstrip' → logprob: -14.625432968139648
    5. '(split' → logprob: -15.125432968139648
    6. ' split' → logprob: -16.00043296813965
    7. 's' → logprob: -18.00043296813965
    8. '_split' → logprob: -18.75043296813965
    9. 'replace' → logprob: -19.25043296813965
    10. 'plit' → logprob: -19.62543296813965

Token 997: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6725192666053772
    2. '()
' → logprob: -0.9225192666053772
    3. ',' → logprob: -3.0475192070007324
    4. '();' → logprob: -3.7975192070007324
    5. '[' → logprob: -5.297519207000732
    6. '        
' → logprob: -5.922519207000732
    7. '       ' → logprob: -6.047519207000732
    8. '()[' → logprob: -6.172519207000732
    9. '(),' → logprob: -6.297519207000732
    10. ';' → logprob: -6.672519207000732

Token 998: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030403701588511467
    2. ',' → logprob: -5.2804036140441895
    3. '       ' → logprob: -5.5304036140441895
    4. '        
' → logprob: -5.5304036140441895
    5. '    
' → logprob: -6.1554036140441895
    6. '[' → logprob: -6.2804036140441895
    7. ' =' → logprob: -6.2804036140441895
    8. '<|end|>' → logprob: -6.4054036140441895
    9. '=' → logprob: -6.6554036140441895
    10. '   ' → logprob: -6.9054036140441895

Token 999: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38245490193367004
    2. ',' → logprob: -1.7574548721313477
    3. 'a' → logprob: -2.7574548721313477
    4. '   ' → logprob: -4.632454872131348
    5. 'rev' → logprob: -4.757454872131348
    6. '=' → logprob: -5.007454872131348
    7. 'c' → logprob: -5.007454872131348
    8. ' 
' → logprob: -5.132454872131348
    9. '```' → logprob: -5.132454872131348
    10. 'pos' → logprob: -5.132454872131348

Token 1000: ' c' (ID: 274)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.21419298648834229
    2. 'a' → logprob: -2.7141928672790527
    3. ' pos' → logprob: -2.7141928672790527
    4. 'if' → logprob: -3.9641928672790527
    5. 'c' → logprob: -4.464192867279053
    6. 'rev' → logprob: -4.839192867279053
    7. ' a' → logprob: -4.964192867279053
    8. ' if' → logprob: -5.089192867279053
    9. 'position' → logprob: -5.714192867279053
    10. ' rev' → logprob: -6.089192867279053

Token 1001: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6541298627853394
    2. '=' → logprob: -1.0291298627853394
    3. ' =' → logprob: -2.154129981994629
    4. '=int' → logprob: -6.654129981994629
    5. ' ,' → logprob: -7.029129981994629
    6. 'int' → logprob: -7.154129981994629
    7. '_,' → logprob: -7.279129981994629
    8. 'c' → logprob: -7.904129981994629
    9. 'token' → logprob: -8.029129981994629
    10. 'a' → logprob: -8.279129981994629

Token 1002: ' couleur' (ID: 48005)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018509382382035255
    2. 'a' → logprob: -4.393509387969971
    3. 'str' → logprob: -5.518509387969971
    4. 'input' → logprob: -7.018509387969971
    5. ' c' → logprob: -7.268509387969971
    6. 'int' → logprob: -8.643508911132812
    7. ''a' → logprob: -10.018508911132812
    8. ' a' → logprob: -10.643508911132812
    9. '_' → logprob: -11.018508911132812
    10. ''' → logprob: -11.268508911132812

Token 1003: ' ("' (ID: 7109)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016833750531077385
    2. ' =' → logprob: -4.391833782196045
    3. '=' → logprob: -5.641833782196045
    4. ' ,' → logprob: -8.266833305358887
    5. '_,' → logprob: -8.391833305358887
    6. '   ' → logprob: -9.016833305358887
    7. '<|end|>' → logprob: -10.391833305358887
    8. ')' → logprob: -10.516833305358887
    9. ',
' → logprob: -10.766833305358887
    10. ' ' → logprob: -11.766833305358887

Token 1004: 'W' (ID: 54)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8982129096984863
    2. 'b' → logprob: -0.8982129096984863
    3. 'w' → logprob: -1.7732129096984863
    4. 'c' → logprob: -5.273212909698486
    5. 'bl' → logprob: -5.773212909698486
    6. 'W' → logprob: -6.273212909698486
    7. 'B' → logprob: -6.773212909698486
    8. 'wb' → logprob: -6.773212909698486
    9. 'no' → logprob: -7.648212909698486
    10. ' blanc' → logprob: -8.273212432861328

Token 1005: '"' (ID: 1)
  Prédit: '"),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"),' → logprob: -0.3189505934715271
    2. '"' → logprob: -1.4439506530761719
    3. '")' → logprob: -3.568950653076172
    4. '",' → logprob: -4.818950653076172
    5. ' "),' → logprob: -8.068950653076172
    6. '")
' → logprob: -9.318950653076172
    7. ' or' → logprob: -9.568950653076172
    8. '");' → logprob: -10.068950653076172
    9. '"B' → logprob: -10.318950653076172
    10. 'if' → logprob: -10.693950653076172

Token 1006: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23942531645298004
    2. 'if' → logprob: -1.9894253015518188
    3. ' if' → logprob: -2.8644254207611084
    4. ' or' → logprob: -5.364425182342529
    5. '),' → logprob: -5.614425182342529
    6. ')' → logprob: -5.864425182342529
    7. 'or' → logprob: -5.864425182342529
    8. 'w' → logprob: -6.239425182342529
    9. ' ,' → logprob: -6.864425182342529
    10. ',w' → logprob: -7.739425182342529

Token 1007: ' "' (ID: 392)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011276880279183388
    2. 'N' → logprob: -4.511276721954346
    3. ' B' → logprob: -9.261277198791504
    4. '"B' → logprob: -9.261277198791504
    5. 'b' → logprob: -11.386277198791504
    6. '"N' → logprob: -12.011277198791504
    7. 'No' → logprob: -12.511277198791504
    8. ' ' → logprob: -12.511277198791504
    9. '"' → logprob: -12.636277198791504
    10. '   ' → logprob: -13.136277198791504

Token 1008: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -9.849109119386412e-06
    2. 'N' → logprob: -12.250009536743164
    3. ' B' → logprob: -12.500009536743164
    4. '"B' → logprob: -15.125009536743164
    5. '
' → logprob: -15.750009536743164
    6. 'b' → logprob: -15.750009536743164
    7. '"' → logprob: -15.875009536743164
    8. '0' → logprob: -16.125009536743164
    9. ' ' → logprob: -16.125009536743164
    10. 'L' → logprob: -16.250009536743164

Token 1009: '"),' (ID: 7645)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.59993577003479
    2. '"),' → logprob: -0.84993577003479
    3. ',' → logprob: -4.224935531616211
    4. '")' → logprob: -5.099935531616211
    5. ')' → logprob: -6.224935531616211
    6. '",' → logprob: -7.224935531616211
    7. '")
' → logprob: -9.599935531616211
    8. ';' → logprob: -9.849935531616211
    9. ')
' → logprob: -10.099935531616211
    10. '       ' → logprob: -10.224935531616211

Token 1010: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04860236495733261
    2. ' a' → logprob: -3.548602342605591
    3. 'pos' → logprob: -4.29860258102417
    4. 'p' → logprob: -5.54860258102417
    5. ' p' → logprob: -7.29860258102417
    6. ' pos' → logprob: -7.92360258102417
    7. '   ' → logprob: -9.548602104187012
    8. 'v' → logprob: -10.298602104187012
    9. 'position' → logprob: -10.673602104187012
    10. '       ' → logprob: -12.048602104187012

Token 1011: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001236656797118485
    2. '=int' → logprob: -6.876236438751221
    3. ' =' → logprob: -8.501236915588379
    4. 'int' → logprob: -14.626236915588379
    5. '=
' → logprob: -16.251235961914062
    6. '_int' → logprob: -16.501235961914062
    7. ')' → logprob: -17.376235961914062
    8. '_=' → logprob: -18.251235961914062
    9. '=input' → logprob: -18.501235961914062
    10. 'nt' → logprob: -18.626235961914062

Token 1012: ' numéro' (ID: 65036)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.676292231422849e-05
    2. ' int' → logprob: -11.000017166137695
    3. '=int' → logprob: -19.375017166137695
    4. '[int' → logprob: -21.000017166137695
    5. '<int' → logprob: -21.625017166137695
    6. '(int' → logprob: -21.875017166137695
    7. ':int' → logprob: -22.625017166137695
    8. '
' → logprob: -23.500017166137695
    9. ']int' → logprob: -23.500017166137695
    10. 'i' → logprob: -24.250017166137695

Token 1013: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7037445306777954
    2. ' =' → logprob: -0.7037445306777954
    3. '=int' → logprob: -4.578744411468506
    4. ',' → logprob: -9.328744888305664
    5. '   ' → logprob: -9.828744888305664
    6. ')' → logprob: -10.578744888305664
    7. 'int' → logprob: -11.078744888305664
    8. '<|end|>' → logprob: -11.578744888305664
    9. 'n' → logprob: -11.703744888305664
    10. '=n' → logprob: -11.828744888305664

Token 1014: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.30348607897758484
    2. 'position' → logprob: -2.4284861087799072
    3. 'pos' → logprob: -2.5534861087799072
    4. 'l' → logprob: -2.5534861087799072
    5. 'la' → logprob: -4.428485870361328
    6. 'i' → logprob: -6.303485870361328
    7. ' position' → logprob: -6.928485870361328
    8. ' int' → logprob: -7.053485870361328
    9. ' la' → logprob: -7.053485870361328
    10. 'a' → logprob: -7.678485870361328

Token 1015: ' bille' (ID: 97414)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.03342125564813614
    2. ' position' → logprob: -3.658421277999878
    3. 'pos' → logprob: -5.033421039581299
    4. 'b' → logprob: -7.658421039581299
    5. 'poste' → logprob: -10.033421516418457
    6. ' bille' → logprob: -11.033421516418457
    7. 'ligne' → logprob: -11.783421516418457
    8. ' ' → logprob: -12.158421516418457
    9. ' pos' → logprob: -12.408421516418457
    10. 'token' → logprob: -12.408421516418457

Token 1016: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15918779373168945
    2. '=' → logprob: -2.0341877937316895
    3. '=int' → logprob: -5.0341877937316895
    4. ',' → logprob: -5.4091877937316895
    5. '   ' → logprob: -6.2841877937316895
    6. '
' → logprob: -6.4091877937316895
    7. ')' → logprob: -6.9091877937316895
    8. '<|end|>' → logprob: -8.534187316894531
    9. '<|end|>' → logprob: -9.159187316894531
    10. '       ' → logprob: -9.409187316894531

Token 1017: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021815462969243526
    2. 'int' → logprob: -7.377181529998779
    3. ')
' → logprob: -7.627181529998779
    4. '")' → logprob: -8.127182006835938
    5. 'a' → logprob: -8.627182006835938
    6. ')\' → logprob: -8.877182006835938
    7. ' )' → logprob: -9.377182006835938
    8. '0' → logprob: -9.627182006835938
    9. ')a' → logprob: -9.752182006835938
    10. 'n' → logprob: -10.002182006835938

Token 1018: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003116872161626816
    2. '-' → logprob: -6.753117084503174
    3. ')-' → logprob: -7.128117084503174
    4. ')
' → logprob: -7.628117084503174
    5. '       ' → logprob: -9.003116607666016
    6. '")' → logprob: -9.128116607666016
    7. '=' → logprob: -9.628116607666016
    8. 'int' → logprob: -9.753116607666016
    9. 'a' → logprob: -9.878116607666016
    10. ')\' → logprob: -10.503116607666016

Token 1019: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006259373389184475
    2. ')
' → logprob: -5.506259441375732
    3. '-' → logprob: -7.881259441375732
    4. 'index' → logprob: -7.881259441375732
    5. '<|end|>' → logprob: -8.506258964538574
    6. '_index' → logprob: -8.881258964538574
    7. ')_' → logprob: -9.381258964538574
    8. '   ' → logprob: -9.756258964538574
    9. '```' → logprob: -9.756258964538574
    10. '=' → logprob: -9.881258964538574

Token 1020: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25663816928863525
    2. '       ' → logprob: -2.7566380500793457
    3. ' if' → logprob: -2.7566380500793457
    4. 'a' → logprob: -3.0066380500793457
    5. '```' → logprob: -3.6316380500793457
    6. ' a' → logprob: -5.006638050079346
    7. 'if' → logprob: -5.381638050079346
    8. 'rev' → logprob: -5.506638050079346
    9. '[' → logprob: -6.756638050079346
    10. '<|end|>' → logprob: -7.131638050079346

Token 1021: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8506355285644531
    2. 'a' (adapté à ' a') → logprob: -1.7256355285644531
    3. 'if' → logprob: -1.7256355285644531
    4. ' a' → logprob: -2.475635528564453
    5. 'pos' → logprob: -3.225635528564453
    6. ' pos' → logprob: -3.600635528564453
    7. 'c' → logprob: -4.225635528564453
    8. ' c' → logprob: -4.600635528564453
    9. ' color' → logprob: -4.975635528564453
    10. 'rev' → logprob: -5.225635528564453

Token 1022: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7801157832145691
    2. ' =' → logprob: -1.2801158428192139
    3. '=int' → logprob: -1.9051158428192139
    4. '-' → logprob: -2.780115842819214
    5. '[int' → logprob: -3.155115842819214
    6. 'int' → logprob: -5.405115604400635
    7. '-=' → logprob: -5.905115604400635
    8. '[' → logprob: -6.655115604400635
    9. ' -=' → logprob: -7.530115604400635
    10. '[token' → logprob: -8.905116081237793

Token 1023: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.842555426876061e-06
    2. ' int' → logprob: -12.250004768371582
    3. '[int' → logprob: -17.8750057220459
    4. '=int' → logprob: -19.5000057220459
    5. '(int' → logprob: -20.2500057220459
    6. '<int' → logprob: -20.5000057220459
    7. '	int' → logprob: -20.8750057220459
    8. '   ' → logprob: -21.8750057220459
    9. 'a' → logprob: -22.7500057220459
    10. '```' → logprob: -23.0000057220459

Token 1024: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5451681974809617e-05
    2. 'a' → logprob: -11.125015258789062
    3. '(' → logprob: -14.500015258789062
    4. '(input' → logprob: -16.250015258789062
    5. ' (' → logprob: -17.250015258789062
    6. ')a' → logprob: -17.500015258789062
    7. ' a' → logprob: -18.000015258789062
    8. '(
' → logprob: -18.250015258789062
    9. ')' → logprob: -18.625015258789062
    10. '[a' → logprob: -19.750015258789062

Token 1025: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11676085740327835
    2. ')' → logprob: -2.2417609691619873
    3. ' -' → logprob: -5.616760730743408
    4. ')-' → logprob: -8.241761207580566
    5. '-)' → logprob: -11.616761207580566
    6. '[' → logprob: -12.241761207580566
    7. '       ' → logprob: -12.366761207580566
    8. ')
' → logprob: -12.616761207580566
    9. '   ' → logprob: -12.866761207580566
    10. '#' → logprob: -13.491761207580566

Token 1026: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3614470958709717
    2. '
' → logprob: -2.1114470958709717
    3. ' if' → logprob: -2.6114470958709717
    4. 'if' → logprob: -3.1114470958709717
    5. '   ' → logprob: -3.3614470958709717
    6. '<|end|>' → logprob: -3.9864470958709717
    7. '        
' → logprob: -5.361447334289551
    8. ')' → logprob: -6.111447334289551
    9. '  
' → logprob: -6.736447334289551
    10. '	if' → logprob: -7.361447334289551

Token 1027: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '0' → logprob: -19.875003814697266
    4. '<|end|>' → logprob: -19.875003814697266
    5. '```' → logprob: -21.375003814697266
    6. '   ' → logprob: -21.750003814697266
    7. '=' → logprob: -22.375003814697266
    8. '۱' → logprob: -22.875003814697266
    9. '১' → logprob: -23.000003814697266
    10. 'def' → logprob: -23.375003814697266

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '<|end|>' → logprob: -21.875
    4. '   ' → logprob: -22.875
    5. '```' → logprob: -23.0
    6. '0' → logprob: -23.25
    7. '=' → logprob: -23.875
    8. 'a' → logprob: -24.0
    9. '১' → logprob: -24.25
    10. 'def' → logprob: -24.625

Token 1029: '         ' (ID: 983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05103106424212456
    2. '<|end|>' → logprob: -3.9260311126708984
    3. '   ' → logprob: -4.426031112670898
    4. '
' → logprob: -5.051031112670898
    5. ' if' → logprob: -5.176031112670898
    6. '        
' → logprob: -5.926031112670898
    7. '	if' → logprob: -6.926031112670898
    8. 'if' → logprob: -7.676031112670898
    9. '  
' → logprob: -7.801031112670898
    10. '<|end|>' → logprob: -8.051031112670898

Token 1030: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05397561565041542
    2. '
' → logprob: -3.3039755821228027
    3. '<|end|>' → logprob: -5.178975582122803
    4. '        
' → logprob: -5.803975582122803
    5. ')' → logprob: -5.928975582122803
    6. ' if' → logprob: -6.178975582122803
    7. ' 
' → logprob: -7.303975582122803
    8. ')
' → logprob: -7.803975582122803
    9. '  
' → logprob: -8.178976058959961
    10. 'if' → logprob: -8.428976058959961

Token 1031: ' Conversion' (ID: 74433)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6297996640205383
    2. 'rev' → logprob: -1.2547996044158936
    3. ' if' → logprob: -1.7547996044158936
    4. ' rev' → logprob: -4.879799842834473
    5. 'for' → logprob: -7.129799842834473
    6. 'a' → logprob: -8.629799842834473
    7. ' for' → logprob: -9.254799842834473
    8. 'pos' → logprob: -9.379799842834473
    9. '
' → logprob: -9.504799842834473
    10. '```' → logprob: -9.504799842834473

Token 1032: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7652758955955505
    2. '<|end|>' → logprob: -1.1402759552001953
    3. '=' → logprob: -2.2652759552001953
    4. ' a' → logprob: -3.3902759552001953
    5. '(a' → logprob: -4.640275955200195
    6. 'to' → logprob: -4.765275955200195
    7. '<|end|>' → logprob: -4.765275955200195
    8. ' =' → logprob: -4.890275955200195
    9. ')' → logprob: -5.140275955200195
    10. '()' → logprob: -5.265275955200195

Token 1033: ' indice' (ID: 90848)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17896346747875214
    2. 'a' → logprob: -1.9289634227752686
    3. 'int' → logprob: -4.053963661193848
    4. 'zero' → logprob: -7.678963661193848
    5. ' zero' → logprob: -7.928963661193848
    6. ' a' → logprob: -8.678963661193848
    7. ' ' → logprob: -8.803963661193848
    8. ' int' → logprob: -10.428963661193848
    9. ' zéro' → logprob: -11.053963661193848
    10. 'index' → logprob: -11.303963661193848

Token 1034: ' basé' (ID: 139381)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11801674216985703
    2. ' 
' → logprob: -3.3680167198181152
    3. '<|end|>' → logprob: -4.118016719818115
    4. '
' → logprob: -4.243016719818115
    5. '        
' → logprob: -4.368016719818115
    6. 'if' → logprob: -4.743016719818115
    7. '       ' → logprob: -5.618016719818115
    8. '    
' → logprob: -5.743016719818115
    9. '	if' → logprob: -5.743016719818115
    10. ' for' → logprob: -5.868016719818115

Token 1035: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00818687304854393
    2. '=' → logprob: -4.8831868171691895
    3. 'zero' → logprob: -9.008187294006348
    4. 'a' → logprob: -9.133187294006348
    5. ' zéro' → logprob: -9.633187294006348
    6. '_zero' → logprob: -9.883187294006348
    7. ' zero' → logprob: -9.883187294006348
    8. 'à' → logprob: -10.383187294006348
    9. ' ' → logprob: -10.758187294006348
    10. '[' → logprob: -10.883187294006348

Token 1036: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3875574469566345
    2. ' if' → logprob: -1.6375575065612793
    3. '   ' → logprob: -3.1375575065612793
    4. 'if' → logprob: -3.5125575065612793
    5. '
' → logprob: -4.012557506561279
    6. '        
' → logprob: -4.387557506561279
    7. '<|end|>' → logprob: -4.387557506561279
    8. ')' → logprob: -5.762557506561279
    9. '	if' → logprob: -6.512557506561279
    10. '    
' → logprob: -6.762557506561279

Token 1037: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5113884806632996
    2. ' if' → logprob: -1.6363885402679443
    3. '   ' → logprob: -1.8863885402679443
    4. 'if' → logprob: -3.1363885402679443
    5. '<|end|>' → logprob: -5.511388301849365
    6. '        
' → logprob: -5.761388301849365
    7. '```' → logprob: -6.136388301849365
    8. '    
' → logprob: -8.136388778686523
    9. '
' → logprob: -8.511388778686523
    10. ' 
' → logprob: -8.636388778686523

Token 1038: ' rev' (ID: 10808)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09280480444431305
    2. 'rev' (adapté à ' rev') → logprob: -2.9678049087524414
    3. ' if' → logprob: -3.3428049087524414
    4. '   ' → logprob: -6.467804908752441
    5. '```' → logprob: -9.092804908752441
    6. ' rev' → logprob: -9.217804908752441
    7. '	if' → logprob: -10.217804908752441
    8. 'for' → logprob: -10.842804908752441
    9. '
' → logprob: -11.217804908752441
    10. '       ' → logprob: -11.592804908752441

Token 1039: '[int' (ID: 40124)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.28147804737091064
    2. '[' → logprob: -1.4064780473709106
    3. '][' → logprob: -9.156477928161621
    4. 'c' → logprob: -9.906477928161621
    5. '[int' → logprob: -10.156477928161621
    6. '[][' → logprob: -10.656477928161621
    7. '[
' → logprob: -10.781477928161621
    8. '
' → logprob: -11.281477928161621
    9. '[a' → logprob: -11.531477928161621
    10. '```' → logprob: -11.906477928161621

Token 1040: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013113131280988455
    2. 'c' → logprob: -6.751311302185059
    3. '(not' → logprob: -9.251311302185059
    4. 'not' → logprob: -10.501311302185059
    5. ')c' → logprob: -11.876311302185059
    6. '(' → logprob: -11.876311302185059
    7. '((' → logprob: -14.001311302185059
    8. '```' → logprob: -14.376311302185059
    9. '[c' → logprob: -14.751311302185059
    10. '0' → logprob: -15.126311302185059

Token 1041: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20215357840061188
    2. '(c' → logprob: -2.0771536827087402
    3. '[c' → logprob: -3.7021536827087402
    4. '('' → logprob: -4.20215368270874
    5. '(' → logprob: -5.07715368270874
    6. '=='' → logprob: -6.07715368270874
    7. '==' → logprob: -6.32715368270874
    8. 'not' → logprob: -6.45215368270874
    9. '("' → logprob: -7.20215368270874
    10. '(not' → logprob: -7.32715368270874

Token 1042: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05179540812969208
    2. '"B' → logprob: -3.051795482635498
    3. '"W' → logprob: -5.801795482635498
    4. '"' → logprob: -8.67679500579834
    5. ' "' → logprob: -12.30179500579834
    6. ' '' → logprob: -13.05179500579834
    7. ''S' → logprob: -14.30179500579834
    8. 'B' → logprob: -14.92679500579834
    9. ''"' → logprob: -15.05179500579834
    10. '’' → logprob: -15.30179500579834

Token 1043: 'B' (ID: 33)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.015981705859303474
    2. 'B' → logprob: -4.890981674194336
    3. '"B' → logprob: -5.140981674194336
    4. '"W' → logprob: -6.390981674194336
    5. 'W' → logprob: -7.515981674194336
    6. '"' → logprob: -8.265981674194336
    7. ' '' → logprob: -13.265981674194336
    8. ''S' → logprob: -13.390981674194336
    9. ''A' → logprob: -13.515981674194336
    10. ''O' → logprob: -13.890981674194336

Token 1044: '')' (ID: 1542)
  Prédit: ')]['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')][' → logprob: -0.005591483321040869
    2. '[' → logprob: -5.88059139251709
    3. '][' → logprob: -6.63059139251709
    4. ')' → logprob: -6.88059139251709
    5. ')[' → logprob: -9.38059139251709
    6. ')].' → logprob: -9.63059139251709
    7. '0' → logprob: -9.63059139251709
    8. '1' → logprob: -10.00559139251709
    9. ')]' → logprob: -10.00559139251709
    10. '[a' → logprob: -10.50559139251709

Token 1045: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25729238986968994
    2. '[a' → logprob: -1.50729238986969
    3. '[i' → logprob: -5.2572922706604
    4. ')[' → logprob: -9.257292747497559
    5. ']' → logprob: -11.007292747497559
    6. ' ][' → logprob: -12.132292747497559
    7. '   ' → logprob: -12.257292747497559
    8. 'a' → logprob: -12.382292747497559
    9. '[' → logprob: -12.382292747497559
    10. '[c' → logprob: -13.007292747497559

Token 1046: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.160234272480011
    2. 'i' → logprob: -1.9102342128753662
    3. ' a' → logprob: -12.035234451293945
    4. ' i' → logprob: -13.035234451293945
    5. '   ' → logprob: -14.035234451293945
    6. ']' → logprob: -14.285234451293945
    7. '
' → logprob: -15.785234451293945
    8. ')' → logprob: -15.910234451293945
    9. ')a' → logprob: -16.660234451293945
    10. 'c' → logprob: -17.035234451293945

Token 1047: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14750061929225922
    2. '=' → logprob: -2.397500514984131
    3. ']=' → logprob: -3.272500514984131
    4. ' =' → logprob: -5.022500514984131
    5. '=i' → logprob: -6.397500514984131
    6. ' ]' → logprob: -11.397500991821289
    7. ']+=' → logprob: -11.897500991821289
    8. 'i' → logprob: -12.897500991821289
    9. ')' → logprob: -13.397500991821289
    10. ')=' → logprob: -13.647500991821289

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20169077813625336
    2. ' =' → logprob: -1.7016907930374146
    3. '=i' → logprob: -8.201690673828125
    4. '=int' → logprob: -13.451690673828125
    5. ')=' → logprob: -15.576690673828125
    6. '＝' → logprob: -15.701690673828125
    7. 'i' → logprob: -15.826690673828125
    8. '=k' → logprob: -15.826690673828125
    9. '=a' → logprob: -15.951690673828125
    10. '=
' → logprob: -16.076690673828125

Token 1049: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.696889623621246e-06
    2. ' i' → logprob: -12.87500286102295
    3. '	i' → logprob: -16.375001907348633
    4. '<|end|>' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -19.750001907348633
    6. ')i' → logprob: -20.375001907348633
    7. '_i' → logprob: -21.000001907348633
    8. '$i' → logprob: -21.000001907348633
    9. 'int' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.375001907348633

Token 1050: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4757661819458008
    2. '<|end|>' → logprob: -1.6007661819458008
    3. '   ' → logprob: -2.600766181945801
    4. ')' → logprob: -2.725766181945801
    5. 'print' → logprob: -3.725766181945801
    6. '    
' → logprob: -5.725766181945801
    7. 'return' → logprob: -5.725766181945801
    8. 'continue' → logprob: -6.850766181945801
    9. '  
' → logprob: -7.100766181945801
    10. '<|end|>' → logprob: -7.225766181945801

Token 1051: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1052: ' Mise' (ID: 157932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1053: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.40210962295532227
    2. ' à' → logprob: -1.1521096229553223
    3. 'rev' → logprob: -5.027109622955322
    4. '<|end|>' → logprob: -5.527109622955322
    5. '```' → logprob: -6.152109622955322
    6. 'a' → logprob: -7.402109622955322
    7. ')' → logprob: -7.902109622955322
    8. 'i' → logprob: -8.527109146118164
    9. '-à' → logprob: -8.902109146118164
    10. 'en' → logprob: -9.027109146118164

Token 1054: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.04950198531150818
    2. 'i' → logprob: -3.174501895904541
    3. ' jour' → logprob: -6.674501895904541
    4. 'position' → logprob: -7.174501895904541
    5. 'jours' → logprob: -7.299501895904541
    6. 'place' → logprob: -7.299501895904541
    7. 'day' → logprob: -7.299501895904541
    8. 'placement' → logprob: -7.424501895904541
    9. '```' → logprob: -7.424501895904541
    10. 'jou' → logprob: -8.4245023727417

Token 1055: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1056: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015774961560964584
    2. ' i' → logprob: -5.140774726867676
    3. 'rev' → logprob: -5.640774726867676
    4. 'c' → logprob: -5.890774726867676
    5. 'position' → logprob: -6.765774726867676
    6. 'the' → logprob: -6.890774726867676
    7. 'a' → logprob: -8.015774726867676
    8. ' the' → logprob: -8.640774726867676
    9. 'input' → logprob: -8.890774726867676
    10. '```' → logprob: -8.890774726867676

Token 1057: ' position' (ID: 4010)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.2843046188354492
    2. 'position' → logprob: -1.4093046188354492
    3. 'pos' → logprob: -6.659304618835449
    4. ' position' → logprob: -7.159304618835449
    5. 'positions' → logprob: -7.409304618835449
    6. ' rev' → logprob: -8.53430461883545
    7. 'code' → logprob: -9.15930461883545
    8. '```' → logprob: -10.40930461883545
    9. 'index' → logprob: -11.15930461883545
    10. 'i' → logprob: -11.40930461883545

Token 1058: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2500759959220886
    2. '<|end|>' → logprob: -1.6250760555267334
    3. '```' → logprob: -4.625075817108154
    4. ')' → logprob: -5.250075817108154
    5. '   ' → logprob: -5.625075817108154
    6. 'return' → logprob: -5.875075817108154
    7. 'for' → logprob: -7.125075817108154
    8. '
' → logprob: -7.750075817108154
    9. '<|end|>' → logprob: -8.000076293945312
    10. ' print' → logprob: -8.375076293945312

Token 1059: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006380325183272362
    2. 'int' → logprob: -5.381380558013916
    3. 'a' → logprob: -6.506380558013916
    4. 'rev' → logprob: -9.006380081176758
    5. ' c' → logprob: -9.131380081176758
    6. '[int' → logprob: -11.381380081176758
    7. '   ' → logprob: -12.131380081176758
    8. ' int' → logprob: -12.756380081176758
    9. ' ' → logprob: -13.131380081176758
    10. '
' → logprob: -13.631380081176758

Token 1060: ' couleur' (ID: 48005)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.31930744647979736
    2. 'b' → logprob: -1.4443074464797974
    3. 'bill' → logprob: -4.694307327270508
    4. 'bonne' → logprob: -5.069307327270508
    5. 'cor' → logprob: -5.319307327270508
    6. 'color' → logprob: -5.319307327270508
    7. 'token' → logprob: -5.819307327270508
    8. ' couleur' → logprob: -5.819307327270508
    9. 'c' → logprob: -6.694307327270508
    10. 'rev' → logprob: -7.069307327270508

Token 1061: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1062: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05792192742228508
    2. 'i' → logprob: -3.807921886444092
    3. 'indice' → logprob: -4.057921886444092
    4. 'l' → logprob: -5.182921886444092
    5. 'index' → logprob: -5.932921886444092
    6. 'int' → logprob: -6.307921886444092
    7. 'c' → logprob: -6.307921886444092
    8. 'position' → logprob: -6.557921886444092
    9. 'num' → logprob: -7.307921886444092
    10. 'la' → logprob: -7.432921886444092

Token 1063: ' numéro' (ID: 65036)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007583674509078264
    2. 'i' → logprob: -5.1325836181640625
    3. 'indice' → logprob: -6.8825836181640625
    4. 'position' → logprob: -8.007583618164062
    5. 'num' → logprob: -9.382583618164062
    6. 'index' → logprob: -9.382583618164062
    7. 'code' → logprob: -10.757583618164062
    8. 'token' → logprob: -10.882583618164062
    9. 'numero' → logprob: -10.882583618164062
    10. ' a' → logprob: -11.007583618164062

Token 1064: ' donn' (ID: 20414)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1065: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.7521855235099792
    2. ']' → logprob: -2.002185583114624
    3. '[i' → logprob: -2.877185583114624
    4. 'ées' → logprob: -3.002185583114624
    5. '[' → logprob: -3.127185583114624
    6. '       ' → logprob: -3.252185583114624
    7. '   ' → logprob: -3.377185583114624
    8. ')' → logprob: -3.627185583114624
    9. 'rev' → logprob: -3.627185583114624
    10. 'é' → logprob: -3.752185583114624

Token 1066: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08313935995101929
    2. '   ' → logprob: -3.083139419555664
    3. '<|end|>' → logprob: -3.708139419555664
    4. '
' → logprob: -5.708139419555664
    5. '```' → logprob: -6.083139419555664
    6. 'result' → logprob: -6.458139419555664
    7. ')' → logprob: -6.833139419555664
    8. '    
' → logprob: -8.583139419555664
    9. ' print' → logprob: -8.958139419555664
    10. '#' → logprob: -8.958139419555664

Token 1067: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011892447248101234
    2. '   ' → logprob: -4.636892318725586
    3. '
' → logprob: -6.761892318725586
    4. 'result' → logprob: -7.261892318725586
    5. '    
' → logprob: -9.011892318725586
    6. '```' → logprob: -9.011892318725586
    7. ' print' → logprob: -11.636892318725586
    8. 'for' → logprob: -12.386892318725586
    9. '#print' → logprob: -12.636892318725586
    10. '  
' → logprob: -12.636892318725586

Token 1068: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019619399681687355
    2. '   ' → logprob: -6.626961708068848
    3. '```' → logprob: -7.501961708068848
    4. ' print' → logprob: -10.001961708068848
    5. '
' → logprob: -10.626961708068848
    6. '``' → logprob: -12.126961708068848
    7. 'result' → logprob: -12.376961708068848
    8. '	print' → logprob: -12.876961708068848
    9. '    
' → logprob: -13.626961708068848
    10. '  
' → logprob: -15.251961708068848

Token 1069: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0022320940624922514
    2. '(' → logprob: -6.127232074737549
    3. 'solve' → logprob: -10.627232551574707
    4. '(solution' → logprob: -11.377232551574707
    5. '(
' → logprob: -12.002232551574707
    6. '(sol' → logprob: -12.877232551574707
    7. '('' → logprob: -14.252232551574707
    8. '()' → logprob: -15.002232551574707
    9. '(f' → logprob: -15.127232551574707
    10. '(resolve' → logprob: -15.377232551574707

Token 1070: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.000553151941858232
    2. 'solve' → logprob: -7.500553131103516
    3. '(s' → logprob: -18.000553131103516
    4. ' solve' → logprob: -18.125553131103516
    5. 'ol' → logprob: -18.375553131103516
    6. 'olver' → logprob: -18.500553131103516
    7. '.solve' → logprob: -18.500553131103516
    8. 'OLVE' → logprob: -18.625553131103516
    9. 'ove' → logprob: -19.750553131103516
    10. 'erve' → logprob: -20.625553131103516

Token 1071: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001552355824969709
    2. '(' → logprob: -6.501552581787109
    3. '(
' → logprob: -10.62655258178711
    4. ')' → logprob: -11.00155258178711
    5. ' (' → logprob: -12.62655258178711
    6. 'n' → logprob: -12.87655258178711
    7. ')(' → logprob: -13.62655258178711
    8. '((' → logprob: -14.12655258178711
    9. '```' → logprob: -14.87655258178711
    10. ')n' → logprob: -15.25155258178711

Token 1072: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ',re' → logprob: -12.875003814697266
    3. ',
' → logprob: -14.125003814697266
    4. ')' → logprob: -15.000003814697266
    5. 'rev' → logprob: -15.375003814697266
    6. '(re' → logprob: -15.625003814697266
    7. ' ,' → logprob: -15.625003814697266
    8. '(' → logprob: -17.625003814697266
    9. '```' → logprob: -18.250003814697266
    10. '[' → logprob: -18.250003814697266

Token 1073: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -3.054500666621607e-06
    2. ' rev' → logprob: -12.75000286102295
    3. 'rep' → logprob: -16.125003814697266
    4. '.rev' → logprob: -18.250003814697266
    5. 'repr' → logprob: -18.625003814697266
    6. 'reven' → logprob: -18.875003814697266
    7. '```' → logprob: -19.000003814697266
    8. '   ' → logprob: -19.500003814697266
    9. 'reve' → logprob: -19.500003814697266
    10. 're' → logprob: -19.625003814697266

Token 1074: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3135405480861664
    2. '))' → logprob: -1.3135405778884888
    3. '())' → logprob: -8.3135404586792
    4. ')))' → logprob: -11.3135404586792
    5. '(' → logprob: -12.0635404586792
    6. '])' → logprob: -12.4385404586792
    7. '))
' → logprob: -12.5635404586792
    8. '   ' → logprob: -13.1885404586792
    9. '(n' → logprob: -13.4385404586792
    10. '()))' → logprob: -14.0635404586792

Token 1075: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1076: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1077: ' Calcul' (ID: 57243)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1078: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1079: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10130765289068222
    2. 'aff' → logprob: -2.3513076305389404
    3. ' print' → logprob: -7.3513078689575195
    4. 'display' → logprob: -8.97630786895752
    5. 'output' → logprob: -8.97630786895752
    6. ''aff' → logprob: -9.72630786895752
    7. ' affich' → logprob: -9.97630786895752
    8. '#' → logprob: -10.22630786895752
    9. 'im' → logprob: -10.97630786895752
    10. ' affiche' → logprob: -10.97630786895752

Token 1080: 'age' (ID: 477)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2214323729276657
    2. 'ation' → logprob: -3.0964324474334717
    3. 'ent' → logprob: -3.2214324474334717
    4. '(' → logprob: -3.7214324474334717
    5. 'er' → logprob: -4.096432209014893
    6. ')' → logprob: -4.346432209014893
    7. '())' → logprob: -4.596432209014893
    8. '(s' → logprob: -4.846432209014893
    9. 'e' → logprob: -4.971432209014893
    10. 't' → logprob: -4.971432209014893

Token 1081: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1082: ' coût' (ID: 73109)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.34900420904159546
    2. 'solve' → logprob: -1.5990042686462402
    3. 'rés' → logprob: -2.7240042686462402
    4. ' résultat' → logprob: -3.7240042686462402
    5. 'solution' → logprob: -6.84900426864624
    6. ' result' → logprob: -7.59900426864624
    7. 'cout' → logprob: -8.099003791809082
    8. ' resultat' → logprob: -8.849003791809082
    9. ' solve' → logprob: -8.849003791809082
    10. ' coût' → logprob: -8.974003791809082

Token 1083: ' minimum' (ID: 11085)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1081
Tokens correctement prédits (1ère position, stricte): 277
Tokens correctement prédits (1ère position, avec adaptation): 296
Tokens correctement prédits (top 10): 634
Précision stricte (1ère position): 25.62%
Précision adaptée (1ère position): 27.38%
Précision (top 10): 58.65%
================================================================================
