================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
N=int(input())
n=math.floor(math.log2(N))
ans=1
for i in range(n):
    ans += (2**(i+1)) 
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0034716592635959387
    2. '\n' → logprob: -7.003471851348877
    3. 'import' → logprob: -7.503471851348877
    4. '<|end|>' → logprob: -7.628471851348877
    5. '```' → logprob: -7.753471851348877
    6. '\' → logprob: -7.753471851348877
    7. '.e' → logprob: -9.128471374511719
    8. '.pi' → logprob: -9.628471374511719
    9. 'def' → logprob: -9.878471374511719
    10. 'newline' → logprob: -10.003471374511719

Token 4: '=int' (ID: 37431)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.655153751373291
    2. '=' → logprob: -1.405153751373291
    3. ',' → logprob: -2.405153751373291
    4. '.' → logprob: -2.780153751373291
    5. ' =' → logprob: -3.780153751373291
    6. ')' → logprob: -4.030153751373291
    7. ' ' → logprob: -4.780153751373291
    8. 'umber' → logprob: -5.155153751373291
    9. 'u' → logprob: -5.405153751373291
    10. 'um' → logprob: -5.655153751373291

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.1093578804284334e-05
    2. '('' → logprob: -10.875051498413086
    3. ' (' → logprob: -11.000051498413086
    4. ''' → logprob: -12.875051498413086
    5. '(input' → logprob: -12.875051498413086
    6. '(math' → logprob: -13.000051498413086
    7. '(
' → logprob: -13.000051498413086
    8. '(N' → logprob: -13.750051498413086
    9. '("("' → logprob: -14.000051498413086
    10. '("' → logprob: -14.375051498413086

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06070246547460556
    2. ')' → logprob: -2.9357025623321533
    3. '()' → logprob: -5.435702323913574
    4. '('' → logprob: -7.685702323913574
    5. '())' → logprob: -8.060702323913574
    6. '(
' → logprob: -8.310702323913574
    7. '("("' → logprob: -9.435702323913574
    8. '")' → logprob: -9.935702323913574
    9. '(

' → logprob: -10.060702323913574
    10. '')' → logprob: -10.435702323913574

Token 7: 'n' (ID: 77)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1118531227111816
    2. 's' → logprob: -1.4868531227111816
    3. 'factor' → logprob: -1.6118531227111816
    4. 'for' → logprob: -2.9868531227111816
    5. 'if' → logprob: -3.2368531227111816
    6. 'x' → logprob: -3.7368531227111816
    7. 'fact' → logprob: -3.7368531227111816
    8. '(' → logprob: -3.9868531227111816
    9. ')' → logprob: -3.9868531227111816
    10. 'f' → logprob: -4.111853122711182

Token 8: '=' (ID: 28)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.503882884979248
    2. '*' → logprob: -2.378882884979248
    3. '_' → logprob: -2.628882884979248
    4. '%' → logprob: -3.128882884979248
    5. ' **' → logprob: -3.128882884979248
    6. '-' → logprob: -3.253882884979248
    7. ' ' → logprob: -3.878882884979248
    8. ')' → logprob: -4.003882884979248
    9. '+' → logprob: -4.003882884979248
    10. 'u' → logprob: -4.628882884979248

Token 9: 'math' (ID: 20310)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8640031218528748
    2. 'math' → logprob: -0.8640031218528748
    3. 'N' → logprob: -1.9890031814575195
    4. '0' → logprob: -5.2390031814575195
    5. ' math' → logprob: -5.4890031814575195
    6. ' int' → logprob: -5.6140031814575195
    7. ' N' → logprob: -6.3640031814575195
    8. 'input' → logprob: -6.3640031814575195
    9. '1' → logprob: -6.7390031814575195
    10. '2' → logprob: -7.3640031814575195

Token 10: '.floor' (ID: 23934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008873485960066319
    2. '.sqrt' → logprob: -4.883873462677002
    3. '.pi' → logprob: -7.633873462677002
    4. '.pow' → logprob: -7.883873462677002
    5. '.factor' → logprob: -8.63387393951416
    6. '.sin' → logprob: -9.63387393951416
    7. '.ceil' → logprob: -10.00887393951416
    8. '.log' → logprob: -10.50887393951416
    9. '.cos' → logprob: -11.13387393951416
    10. '.s' → logprob: -11.13387393951416

Token 11: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005100814625620842
    2. '(math' → logprob: -5.505100727081299
    3. '(n' → logprob: -7.505100727081299
    4. '((' → logprob: -9.005101203918457
    5. '(N' → logprob: -9.005101203918457
    6. '(.' → logprob: -9.505101203918457
    7. '('' → logprob: -10.130101203918457
    8. '(s' → logprob: -10.880101203918457
    9. '(Math' → logprob: -11.130101203918457
    10. '(`' → logprob: -11.255101203918457

Token 12: '.log' (ID: 2659)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.04556388780474663
    2. '.' → logprob: -3.5455639362335205
    3. '.log' → logprob: -4.420563697814941
    4. '.pi' → logprob: -6.045563697814941
    5. '.pow' → logprob: -7.545563697814941
    6. '.factor' → logprob: -8.170563697814941
    7. '.ceil' → logprob: -8.545563697814941
    8. '.floor' → logprob: -9.420563697814941
    9. '.s' → logprob: -10.295563697814941
    10. '.sin' → logprob: -10.670563697814941

Token 13: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6404728889465332
    2. '10' → logprob: -0.8904728889465332
    3. '(N' → logprob: -3.015472888946533
    4. '(' → logprob: -4.515472888946533
    5. '(n' → logprob: -6.390472888946533
    6. ' N' → logprob: -8.015472412109375
    7. ' ' → logprob: -8.640472412109375
    8. 'N' → logprob: -8.765472412109375
    9. ' (' → logprob: -9.140472412109375
    10. '1' → logprob: -9.640472412109375

Token 14: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.017946230247616768
    2. '(' → logprob: -4.142946243286133
    3. '(n' → logprob: -6.392946243286133
    4. ' (' → logprob: -8.767946243286133
    5. 'N' → logprob: -9.642946243286133
    6. '((' → logprob: -11.767946243286133
    7. ')' → logprob: -12.392946243286133
    8. '(
' → logprob: -13.642946243286133
    9. ' N' → logprob: -13.767946243286133
    10. ')(' → logprob: -14.517946243286133

Token 15: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10236169397830963
    2. ')' → logprob: -2.3523616790771484
    3. ')+' → logprob: -6.727361679077148
    4. '))+' → logprob: -7.727361679077148
    5. '+' → logprob: -8.727361679077148
    6. ' ))' → logprob: -8.977361679077148
    7. ')))' → logprob: -9.352361679077148
    8. '(' → logprob: -9.352361679077148
    9. '(N' → logprob: -11.227361679077148
    10. ' )' → logprob: -11.352361679077148

Token 16: 'ans' (ID: 616)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020509077236056328
    2. '+' → logprob: -5.020509243011475
    3. '_' → logprob: -5.645509243011475
    4. '(
' → logprob: -5.645509243011475
    5. ')' → logprob: -6.145509243011475
    6. '**' → logprob: -6.520509243011475
    7. '*' → logprob: -7.145509243011475
    8. '2' → logprob: -8.020508766174316
    9. '-' → logprob: -8.645508766174316
    10. '```' → logprob: -8.770508766174316

Token 17: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30120721459388733
    2. '(' → logprob: -2.0512073040008545
    3. '_' → logprob: -2.3012073040008545
    4. ' =' → logprob: -3.5512073040008545
    5. '+' → logprob: -7.426207065582275
    6. '[' → logprob: -7.551207065582275
    7. ' ' → logprob: -7.801207065582275
    8. '()' → logprob: -8.301207542419434
    9. '_space' → logprob: -8.926207542419434
    10. '_=' → logprob: -9.176207542419434

Token 18: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006716913543641567
    2. '(' → logprob: -5.381716728210449
    3. '1' → logprob: -6.631716728210449
    4. '(n' → logprob: -8.50671672821045
    5. 'pow' → logprob: -8.50671672821045
    6. 'n' → logprob: -8.63171672821045
    7. ' ' → logprob: -9.25671672821045
    8. 'N' → logprob: -10.00671672821045
    9. ' (' → logprob: -10.63171672821045
    10. '0' → logprob: -11.63171672821045

Token 19: '
' (ID: 198)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<' → logprob: -1.0650461912155151
    2. '0' → logprob: -1.3150461912155151
    3. '<<' → logprob: -1.3150461912155151
    4. ' ' → logprob: -3.1900463104248047
    5. '<' → logprob: -3.4400463104248047
    6. ' <<=' → logprob: -4.065046310424805
    7. '2' → logprob: -4.315046310424805
    8. '*' → logprob: -5.065046310424805
    9. ' *' → logprob: -6.315046310424805
    10. ' <' → logprob: -6.565046310424805

Token 20: 'for' (ID: 1938)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.48861002922058105
    2. ' <<' → logprob: -1.613610029220581
    3. ' <<=' → logprob: -2.613610029220581
    4. '0' → logprob: -2.738610029220581
    5. '<' → logprob: -3.988610029220581
    6. ' for' → logprob: -4.48861026763916
    7. '<<(' → logprob: -4.86361026763916
    8. '2' → logprob: -5.36361026763916
    9. '*' → logprob: -6.11361026763916
    10. ' ' → logprob: -6.36361026763916

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5474554300308228
    2. ' ' → logprob: -0.9224554300308228
    3. '_' → logprob: -4.047455310821533
    4. ' _' → logprob: -5.422455310821533
    5. 'i' → logprob: -6.172455310821533
    6. ' ‌' → logprob: -10.547455787658691
    7. '  ' → logprob: -11.672455787658691
    8. '_i' → logprob: -11.672455787658691
    9. ' ' → logprob: -12.422455787658691
    10. ' in' → logprob: -12.422455787658691

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014226273633539677
    2. 'in' → logprob: -4.26422643661499
    3. ' ' → logprob: -10.264225959777832
    4. '	in' → logprob: -11.764225959777832
    5. '+' → logprob: -11.889225959777832
    6. ' i' → logprob: -13.389225959777832
    7. 'n' → logprob: -13.389225959777832
    8. 's' → logprob: -14.076725959777832
    9. '0' → logprob: -14.201725959777832
    10. '=' → logprob: -14.201725959777832

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740922451019287
    2. 'range' → logprob: -0.9740922451019287
    3. ' ' → logprob: -11.724092483520508
    4. '	range' → logprob: -12.849092483520508
    5. '(range' → logprob: -13.224092483520508
    6. '  ' → logprob: -14.349092483520508
    7. '   ' → logprob: -14.849092483520508
    8. ' ' → logprob: -14.974092483520508
    9. 'rang' → logprob: -15.349092483520508
    10. ' xrange' → logprob: -15.474092483520508

Token 24: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2617552578449249
    2. '(n' → logprob: -1.5117552280426025
    3. ' (' → logprob: -4.636755466461182
    4. ' ' → logprob: -9.761754989624023
    5. '(N' → logprob: -11.761754989624023
    6. '(i' → logprob: -11.761754989624023
    7. '(range' → logprob: -12.511754989624023
    8. '(
' → logprob: -12.636754989624023
    9. '(space' → logprob: -13.261754989624023
    10. '(s' → logprob: -13.511754989624023

Token 25: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01352535281330347
    2. ' +' → logprob: -4.638525485992432
    3. '):' → logprob: -5.638525485992432
    4. ')' → logprob: -8.638525009155273
    5. ' ):' → logprob: -11.638525009155273
    6. ' ' → logprob: -12.513525009155273
    7. '):
' → logprob: -12.763525009155273
    8. '-' → logprob: -13.138525009155273
    9. '1' → logprob: -13.138525009155273
    10. '2' → logprob: -13.638525009155273

Token 26: '   ' (ID: 271)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.020056527107954025
    2. '   ' → logprob: -4.77005672454834
    3. ' ' → logprob: -5.39505672454834
    4. '2' → logprob: -6.77005672454834
    5. '	ans' → logprob: -6.89505672454834
    6. '    ' → logprob: -7.02005672454834
    7. 'ans' → logprob: -7.02005672454834
    8. '(ans' → logprob: -7.39505672454834
    9. ' ' → logprob: -7.77005672454834
    10. ' 
' → logprob: -7.77005672454834

Token 27: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.06778611987829208
    2. '2' → logprob: -3.19278621673584
    3. ' ' → logprob: -4.56778621673584
    4. 'ans' (adapté à ' ans') → logprob: -4.69278621673584
    5. '*' → logprob: -6.44278621673584
    6. '(ans' → logprob: -6.81778621673584
    7. '   ' → logprob: -7.81778621673584
    8. ' *' → logprob: -7.94278621673584
    9. '    ' → logprob: -8.44278621673584
    10. ' ' → logprob: -8.69278621673584

Token 28: ' +=' (ID: 2757)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.05809055268764496
    2. '*' → logprob: -3.1830904483795166
    3. ' *=' → logprob: -4.933090686798096
    4. ' <<=' → logprob: -5.683090686798096
    5. '=' → logprob: -6.058090686798096
    6. '<<' → logprob: -6.558090686798096
    7. '```' → logprob: -7.808090686798096
    8. ' ' → logprob: -10.183090209960938
    9. '   ' → logprob: -10.183090209960938
    10. '**' → logprob: -10.433090209960938

Token 29: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03974549472332001
    2. ' ' → logprob: -4.039745330810547
    3. 'ans' → logprob: -4.289745330810547
    4. '1' → logprob: -5.289745330810547
    5. 'pow' → logprob: -7.414745330810547
    6. ' ans' → logprob: -7.664745330810547
    7. '(' → logprob: -8.039745330810547
    8. '4' → logprob: -8.539745330810547
    9. '   ' → logprob: -8.789745330810547
    10. '6' → logprob: -8.789745330810547

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06323657184839249
    2. '1' → logprob: -3.6882364749908447
    3. ' ' → logprob: -3.8132364749908447
    4. 'N' → logprob: -5.563236713409424
    5. '4' → logprob: -6.313236713409424
    6. '(' → logprob: -6.313236713409424
    7. 'i' → logprob: -6.563236713409424
    8. ' N' → logprob: -6.938236713409424
    9. 'pow' → logprob: -7.188236713409424
    10. '   ' → logprob: -7.313236713409424

Token 31: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006141846068203449
    2. '*i' → logprob: -5.506141662597656
    3. '*' → logprob: -6.756141662597656
    4. '**)' → logprob: -8.006141662597656
    5. ' **' → logprob: -8.131141662597656
    6. ')**' → logprob: -8.631141662597656
    7. ')' → logprob: -9.881141662597656
    8. ' **)' → logprob: -11.381141662597656
    9. 'i' → logprob: -11.756141662597656
    10. ' ' → logprob: -12.631141662597656

Token 32: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020892774686217308
    2. '(i' → logprob: -3.895892858505249
    3. '(n' → logprob: -9.145893096923828
    4. ' i' → logprob: -9.145893096923828
    5. '(' → logprob: -9.770893096923828
    6. ' (' → logprob: -10.270893096923828
    7. '   ' → logprob: -11.145893096923828
    8. 'n' → logprob: -11.520893096923828
    9. '_i' → logprob: -12.270893096923828
    10. ' ' → logprob: -12.395893096923828

Token 33: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007978349458426237
    2. '(i' → logprob: -7.375797748565674
    3. ' i' → logprob: -9.750798225402832
    4. '(n' → logprob: -10.250798225402832
    5. '   ' → logprob: -10.750798225402832
    6. 'n' → logprob: -10.875798225402832
    7. '(' → logprob: -11.875798225402832
    8. '1' → logprob: -11.875798225402832
    9. ')' → logprob: -12.375798225402832
    10. ' (' → logprob: -12.500798225402832

Token 34: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0529627650976181
    2. '))' → logprob: -3.5529627799987793
    3. ')' → logprob: -4.427962779998779
    4. ' +' → logprob: -5.302962779998779
    5. '1' → logprob: -5.802962779998779
    6. ')+' → logprob: -6.552962779998779
    7. '))+' → logprob: -8.052962303161621
    8. '))-' → logprob: -8.052962303161621
    9. '))*' → logprob: -8.677962303161621
    10. '-' → logprob: -9.052962303161621

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011264503933489323
    2. '0' → logprob: -4.886264324188232
    3. '2' → logprob: -6.386264324188232
    4. ')' → logprob: -7.261264324188232
    5. 'i' → logprob: -7.636264324188232
    6. '+' → logprob: -7.886264324188232
    7. '))' → logprob: -8.51126480102539
    8. '3' → logprob: -9.63626480102539
    9. ' ' → logprob: -10.38626480102539
    10. '5' → logprob: -11.01126480102539

Token 36: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8367090821266174
    2. ' -' → logprob: -1.0867090225219727
    3. '-' → logprob: -2.3367090225219727
    4. ')-' → logprob: -2.9617090225219727
    5. '))' → logprob: -2.9617090225219727
    6. ' )' → logprob: -3.9617090225219727
    7. '+' → logprob: -4.961709022521973
    8. ' ))' → logprob: -6.461709022521973
    9. '))-' → logprob: -6.836709022521973
    10. '-)' → logprob: -8.336709022521973

Token 37: ' 
' (ID: 793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015433547087013721
    2. ' ' → logprob: -4.890433311462402
    3. ')' → logprob: -5.890433311462402
    4. ' 
' → logprob: -6.265433311462402
    5. '
' → logprob: -7.515433311462402
    6. ' ans' → logprob: -7.765433311462402
    7. '*' → logprob: -7.765433311462402
    8. '```' → logprob: -7.765433311462402
    9. '+
' → logprob: -8.265433311462402
    10. '<|end|>' → logprob: -8.890433311462402

Token 38: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4734319746494293
    2. ')' → logprob: -1.598431944847107
    3. '<|end|>' → logprob: -2.8484320640563965
    4. '\n' → logprob: -3.0984320640563965
    5. ' ' → logprob: -4.0984320640563965
    6. 'print' → logprob: -4.2234320640563965
    7. '
' → logprob: -4.2234320640563965
    8. '\' → logprob: -4.8484320640563965
    9. '*' → logprob: -5.2234320640563965
    10. '```' → logprob: -5.5984320640563965

Token 39: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.4741767346858978
    2. '(' → logprob: -0.9741767644882202
    3. '()' → logprob: -9.974176406860352
    4. '('' → logprob: -10.474176406860352
    5. 'ans' → logprob: -11.724176406860352
    6. '("("' → logprob: -11.849176406860352
    7. '(answer' → logprob: -12.849176406860352
    8. '((' → logprob: -13.224176406860352
    9. '(`' → logprob: -14.349176406860352
    10. ' (' → logprob: -14.349176406860352

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6405310816480778e-05
    2. '))' → logprob: -11.125016212463379
    3. ' )' → logprob: -14.000016212463379
    4. '+' → logprob: -15.250016212463379
    5. '')' → logprob: -16.125017166137695
    6. ')`' → logprob: -16.125017166137695
    7. '`)' → logprob: -16.250017166137695
    8. ')))' → logprob: -16.500017166137695
    9. '()' → logprob: -16.500017166137695
    10. ')
' → logprob: -16.875017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 36.84%
Précision adaptée (1ère position): 36.84%
Précision (top 10): 68.42%
================================================================================
