================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
V = input().split()
for i in range(N):
    V[i] = int(V[i])
V.sort()
m = V[0]
for i in range(1, N):
    m = (m + V[i]) / 2
print(m)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'V' (ID: 53)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.025950735434889793
    2. 'a' → logprob: -5.275950908660889
    3. ' =' → logprob: -5.275950908660889
    4. '=' → logprob: -5.650950908660889
    5. '[i' → logprob: -5.650950908660889
    6. 'al' → logprob: -5.900950908660889
    7. '[a' → logprob: -6.775950908660889
    8. '[:]' → logprob: -6.775950908660889
    9. '[V' → logprob: -7.275950908660889
    10. '.' → logprob: -7.775950908660889

Token 7: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6157921552658081
    2. ' []' → logprob: -0.9907921552658081
    3. '[int' → logprob: -3.4907922744750977
    4. 'list' → logprob: -3.8657922744750977
    5. ' [' → logprob: -4.615792274475098
    6. 'int' → logprob: -4.865792274475098
    7. '0' → logprob: -5.115792274475098
    8. ' list' → logprob: -5.365792274475098
    9. '[' → logprob: -5.740792274475098
    10. ' int' → logprob: -6.240792274475098

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007910476415418088
    2. '('' → logprob: -7.750791072845459
    3. ''' → logprob: -9.1257905960083
    4. '(
' → logprob: -9.2507905960083
    5. '()' → logprob: -10.5007905960083
    6. '("("' → logprob: -10.6257905960083
    7. ')' → logprob: -11.0007905960083
    8. '"' → logprob: -11.1257905960083
    9. ' (' → logprob: -11.1257905960083
    10. '(

' → logprob: -11.1257905960083

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004098346922546625
    2. 'strip' → logprob: -5.504098415374756
    3. 'rstrip' → logprob: -12.129097938537598
    4. 'replace' → logprob: -12.254097938537598
    5. ' split' → logprob: -12.629097938537598
    6. 's' → logprob: -12.754097938537598
    7. 'spl' → logprob: -12.754097938537598
    8. 'rs' → logprob: -14.879097938537598
    9. 'sp' → logprob: -15.379097938537598
    10. 'lower' → logprob: -16.879098892211914

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029962215572595596
    2. '('' → logprob: -3.7799623012542725
    3. '("("' → logprob: -5.154962062835693
    4. '()' → logprob: -7.654962062835693
    5. '((' → logprob: -9.404962539672852
    6. '(`' → logprob: -9.779962539672852
    7. ' (' → logprob: -10.029962539672852
    8. ''' → logprob: -10.154962539672852
    9. '(
' → logprob: -10.154962539672852
    10. '"' → logprob: -10.154962539672852

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43255096673965454
    2. 'V' → logprob: -1.8075509071350098
    3. 'A' → logprob: -3.0575509071350098
    4. 'v' → logprob: -3.6825509071350098
    5. 'result' → logprob: -4.05755090713501
    6. 'a' → logprob: -4.18255090713501
    7. 'count' → logprob: -4.30755090713501
    8. 'S' → logprob: -4.68255090713501
    9. 'c' → logprob: -4.68255090713501
    10. 's' → logprob: -4.93255090713501

Token 12: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10213020443916321
    2. '_' → logprob: -3.102130174636841
    3. ' ' → logprob: -3.352130174636841
    4. ' _' → logprob: -4.35213041305542
    5. ' v' → logprob: -6.22713041305542
    6. 'i' → logprob: -6.35213041305542
    7. '  ' → logprob: -8.727129936218262
    8. ' ' → logprob: -9.477129936218262
    9. ' x' → logprob: -9.852129936218262
    10. ' ‌' → logprob: -10.102129936218262

Token 13: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31559354066848755
    2. ' in' → logprob: -1.3155934810638428
    3. '_' → logprob: -7.190593719482422
    4. ' ' → logprob: -7.440593719482422
    5. '  ' → logprob: -7.565593719482422
    6. 'n' → logprob: -9.440593719482422
    7. ')' → logprob: -9.565593719482422
    8. '=' → logprob: -10.190593719482422
    9. '	in' → logprob: -10.190593719482422
    10. 'space' → logprob: -10.440593719482422

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602790653705597
    2. 'range' → logprob: -1.9102790355682373
    3. ' ' → logprob: -9.910279273986816
    4. '	range' → logprob: -13.160279273986816
    5. ' xrange' → logprob: -13.535279273986816
    6. '(range' → logprob: -14.535279273986816
    7. '_range' → logprob: -15.285279273986816
    8. '  ' → logprob: -15.285279273986816
    9. '```' → logprob: -15.410279273986816
    10. ')' → logprob: -15.910279273986816

Token 15: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03825894743204117
    2. '(N' → logprob: -3.2882590293884277
    3. ' (' → logprob: -9.41325855255127
    4. '(len' → logprob: -9.53825855255127
    5. '(n' → logprob: -10.16325855255127
    6. '(i' → logprob: -12.03825855255127
    7. '(V' → logprob: -12.03825855255127
    8. '(
' → logprob: -12.53825855255127
    9. ' ' → logprob: -13.03825855255127
    10. '(range' → logprob: -13.41325855255127

Token 16: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42950522899627686
    2. '):' → logprob: -1.0545052289962769
    3. '+' → logprob: -7.554505348205566
    4. ' )' → logprob: -8.804505348205566
    5. ' ):' → logprob: -9.804505348205566
    6. ':' → logprob: -10.179505348205566
    7. '):
' → logprob: -11.429505348205566
    8. ',' → logprob: -12.929505348205566
    9. '-' → logprob: -12.929505348205566
    10. '+)' → logprob: -13.054505348205566

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0814620703458786
    2. ' ' → logprob: -3.3314621448516846
    3. '    ' → logprob: -3.5814621448516846
    4. ' if' → logprob: -5.3314619064331055
    5. '    
' → logprob: -5.7064619064331055
    6. ' print' → logprob: -6.5814619064331055
    7. ' V' → logprob: -6.9564619064331055
    8. '  ' → logprob: -7.5814619064331055
    9. 'print' → logprob: -7.5814619064331055
    10. 'if' → logprob: -7.8314619064331055

Token 18: ' V' (ID: 631)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1478420495986938
    2. 'print' → logprob: -1.2728420495986938
    3. ' if' → logprob: -1.8978420495986938
    4. 'if' → logprob: -2.2728419303894043
    5. ' print' → logprob: -2.6478419303894043
    6. 'V' (adapté à ' V') → logprob: -3.0228419303894043
    7. '    ' → logprob: -4.522841930389404
    8. ' V' → logprob: -4.522841930389404
    9. ' ' → logprob: -6.397841930389404
    10. 'i' → logprob: -6.647841930389404

Token 19: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47682297229766846
    2. '[i' → logprob: -0.9768229722976685
    3. '[V' → logprob: -5.976822853088379
    4. '[I' → logprob: -9.476822853088379
    5. '[int' → logprob: -10.226822853088379
    6. '\[' → logprob: -10.726822853088379
    7. '[...]' → logprob: -10.976822853088379
    8. '[v' → logprob: -11.226822853088379
    9. '```' → logprob: -12.101822853088379
    10. '[in' → logprob: -12.101822853088379

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03486699238419533
    2. ')' → logprob: -3.78486704826355
    3. ' ]' → logprob: -5.159866809844971
    4. '])' → logprob: -5.534866809844971
    5. ']=' → logprob: -7.159866809844971
    6. ')]' → logprob: -8.284867286682129
    7. ' )' → logprob: -8.284867286682129
    8. '].' → logprob: -8.909867286682129
    9. ' ])' → logprob: -9.284867286682129
    10. '[' → logprob: -9.409867286682129

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002439028350636363
    2. ' =' → logprob: -6.377439022064209
    3. '+=' → logprob: -7.627439022064209
    4. ')' → logprob: -10.127439498901367
    5. ',' → logprob: -10.127439498901367
    6. '+' → logprob: -10.252439498901367
    7. 'print' → logprob: -10.502439498901367
    8. ' +=' → logprob: -11.127439498901367
    9. '=int' → logprob: -11.127439498901367
    10. '[' → logprob: -11.377439498901367

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008616108447313309
    2. ' int' → logprob: -4.758615970611572
    3. 'float' → logprob: -14.00861644744873
    4. '(int' → logprob: -15.63361644744873
    5. '=int' → logprob: -15.75861644744873
    6. '[int' → logprob: -15.75861644744873
    7. '   ' → logprob: -16.258615493774414
    8. ']int' → logprob: -16.883615493774414
    9. '	int' → logprob: -17.258615493774414
    10. ' ' → logprob: -17.508615493774414

Token 23: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.5759651064872742
    2. '(' → logprob: -0.8259651064872742
    3. '(
' → logprob: -11.95096492767334
    4. ' (' → logprob: -12.32596492767334
    5. ')(' → logprob: -12.45096492767334
    6. '(

' → logprob: -12.95096492767334
    7. '('' → logprob: -13.20096492767334
    8. '(B' → logprob: -13.95096492767334
    9. '`' → logprob: -14.20096492767334
    10. '((' → logprob: -14.32596492767334

Token 24: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007437567692250013
    2. '[' → logprob: -7.250743865966797
    3. ')' → logprob: -11.000743865966797
    4. '[I' → logprob: -11.625743865966797
    5. ' [' → logprob: -12.625743865966797
    6. '[V' → logprob: -13.250743865966797
    7. ']' → logprob: -13.750743865966797
    8. '[
' → logprob: -13.875743865966797
    9. '])' → logprob: -15.125743865966797
    10. '\[' → logprob: -15.875743865966797

Token 25: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01003454439342022
    2. '))' → logprob: -5.135034561157227
    3. '])' → logprob: -5.510034561157227
    4. ']' → logprob: -10.885034561157227
    5. ')]' → logprob: -11.260034561157227
    6. ')])' → logprob: -11.385034561157227
    7. '})' → logprob: -13.260034561157227
    8. ')
' → logprob: -13.385034561157227
    9. ''])' → logprob: -14.135034561157227
    10. ' )' → logprob: -14.260034561157227

Token 26: 'V' (ID: 53)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2881309390068054
    2. ' ' → logprob: -2.78813099861145
    3. 'print' → logprob: -3.28813099861145
    4. 'sum' → logprob: -3.41313099861145
    5. '#' → logprob: -3.66313099861145
    6. '[' → logprob: -3.91313099861145
    7. ' for' → logprob: -3.91313099861145
    8. ')' → logprob: -4.163130760192871
    9. 'i' → logprob: -5.538130760192871
    10. 'if' → logprob: -5.538130760192871

Token 27: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.345041424036026
    2. '<|end|>' → logprob: -1.3450413942337036
    3. '```' → logprob: -4.720041275024414
    4. '#' → logprob: -5.095041275024414
    5. '.' → logprob: -5.220041275024414
    6. '\[' → logprob: -6.220041275024414
    7. '[i' → logprob: -6.595041275024414
    8. ')' → logprob: -6.970041275024414
    9. '
' → logprob: -6.970041275024414
    10. '\n' → logprob: -7.220041275024414

Token 28: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014181245118379593
    2. '(' → logprob: -4.264181137084961
    3. '()
' → logprob: -11.764181137084961
    4. '()`' → logprob: -12.889181137084961
    5. '(
' → logprob: -13.639181137084961
    6. '();' → logprob: -14.014181137084961
    7. '()

' → logprob: -14.014181137084961
    8. '().' → logprob: -14.139181137084961
    9. ' ()' → logprob: -14.389181137084961
    10. '())' → logprob: -14.889181137084961

Token 29: 'm' (ID: 76)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5889010429382324
    2. 'for' → logprob: -0.8389010429382324
    3. 'if' → logprob: -5.963901042938232
    4. 'p' → logprob: -6.213901042938232
    5. 'a' → logprob: -6.713901042938232
    6. 'sum' → logprob: -6.963901042938232
    7. 'x' → logprob: -7.338901042938232
    8. 'count' → logprob: -7.338901042938232
    9. '#' → logprob: -7.588901042938232
    10. 'i' → logprob: -7.713901042938232

Token 30: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5036377310752869
    2. 'ax' → logprob: -1.5036377906799316
    3. 'i' → logprob: -2.5036377906799316
    4. 'edian' → logprob: -3.5036377906799316
    5. 'e' → logprob: -3.6286377906799316
    6. 'in' → logprob: -3.8786377906799316
    7. 'ed' → logprob: -5.378637790679932
    8. 'id' → logprob: -5.503637790679932
    9. 'ean' → logprob: -6.128637790679932
    10. ' =' → logprob: -6.878637790679932

Token 31: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.04071950167417526
    2. '0' → logprob: -4.290719509124756
    3. ' V' → logprob: -4.290719509124756
    4. '(V' → logprob: -5.540719509124756
    5. 'len' → logprob: -5.915719509124756
    6. '100' → logprob: -6.665719509124756
    7. ' ' → logprob: -6.790719509124756
    8. '1' → logprob: -7.040719509124756
    9. 'int' → logprob: -7.540719509124756
    10. '10' → logprob: -7.665719509124756

Token 32: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.031897928565740585
    2. '[' → logprob: -4.281898021697998
    3. '[:' → logprob: -4.531898021697998
    4. '.copy' → logprob: -5.156898021697998
    5. '.' → logprob: -8.03189754486084
    6. '[::-' → logprob: -8.03189754486084
    7. '[len' → logprob: -9.03189754486084
    8. '[:-' → logprob: -9.28189754486084
    9. '[-' → logprob: -9.53189754486084
    10. '[m' → logprob: -10.15689754486084

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056488897651433945
    2. '-' → logprob: -2.9314889907836914
    3. '1' → logprob: -6.681488990783691
    4. 'N' → logprob: -8.931488990783691
    5. ' ' → logprob: -8.931488990783691
    6. ' -' → logprob: -10.056488990783691
    7. 'len' → logprob: -11.556488990783691
    8. '-N' → logprob: -11.681488990783691
    9. '2' → logprob: -11.931488990783691
    10. '(' → logprob: -12.556488990783691

Token 34: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008092629723250866
    2. ')' → logprob: -5.258092403411865
    3. '+' → logprob: -6.633092403411865
    4. ' ]' → logprob: -7.008092403411865
    5. '}' → logprob: -8.133092880249023
    6. ',' → logprob: -9.133092880249023
    7. '*' → logprob: -9.508092880249023
    8. ')]' → logprob: -10.508092880249023
    9. ' ' → logprob: -10.758092880249023
    10. '-' → logprob: -11.133092880249023

Token 35: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013035167939960957
    2. ' for' → logprob: -5.263035297393799
    3. 'max' → logprob: -6.138035297393799
    4. 'min' → logprob: -6.513035297393799
    5. 'i' → logprob: -7.138035297393799
    6. 'print' → logprob: -7.263035297393799
    7. 'f' → logprob: -7.388035297393799
    8. 'if' → logprob: -7.388035297393799
    9. 'count' → logprob: -8.13803482055664
    10. 'm' → logprob: -8.76303482055664

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07156112045049667
    2. 'i' → logprob: -2.696561098098755
    3. ' ' → logprob: -6.821561336517334
    4. ' j' → logprob: -8.071560859680176
    5. ' x' → logprob: -9.196560859680176
    6. 'j' → logprob: -10.446560859680176
    7. 'x' → logprob: -10.821560859680176
    8. '	i' → logprob: -11.196560859680176
    9. ' ' → logprob: -11.196560859680176
    10. ' v' → logprob: -11.571560859680176

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05721788853406906
    2. 'in' → logprob: -2.932217836380005
    3. ' ' → logprob: -6.182218074798584
    4. '+' → logprob: -8.807217597961426
    5. '	in' → logprob: -10.057217597961426
    6. '  ' → logprob: -10.182217597961426
    7. ',' → logprob: -11.932217597961426
    8. '   ' → logprob: -11.932217597961426
    9. 'range' → logprob: -12.432217597961426
    10. 'n' → logprob: -12.557217597961426

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14276443421840668
    2. 'range' → logprob: -2.0177643299102783
    3. ' ' → logprob: -9.6427640914917
    4. '  ' → logprob: -11.7677640914917
    5. '   ' → logprob: -12.6427640914917
    6. ' V' → logprob: -12.6427640914917
    7. '(range' → logprob: -12.7677640914917
    8. '	range' → logprob: -13.2677640914917
    9. ' ' → logprob: -13.8927640914917
    10. ' xrange' → logprob: -14.1427640914917

Token 39: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03839041292667389
    2. '(N' → logprob: -3.2883903980255127
    3. ' (' → logprob: -8.413390159606934
    4. '(len' → logprob: -10.038390159606934
    5. '(m' → logprob: -10.288390159606934
    6. '(n' → logprob: -11.038390159606934
    7. '1' → logprob: -11.538390159606934
    8. '(
' → logprob: -11.538390159606934
    9. '(

' → logprob: -12.663390159606934
    10. ' ' → logprob: -13.038390159606934

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08002353459596634
    2. 'N' → logprob: -2.5800235271453857
    3. 'len' → logprob: -7.455023765563965
    4. 'm' → logprob: -8.205023765563965
    5. ' ' → logprob: -9.580023765563965
    6. '0' → logprob: -9.830023765563965
    7. '(' → logprob: -10.080023765563965
    8. ' N' → logprob: -10.205023765563965
    9. '   ' → logprob: -10.330023765563965
    10. 'n' → logprob: -11.330023765563965

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024090489372611046
    2. ',N' → logprob: -4.02409029006958
    3. ' ,' → logprob: -5.14909029006958
    4. ',len' → logprob: -9.649090766906738
    5. 'N' → logprob: -10.399090766906738
    6. ' N' → logprob: -11.649090766906738
    7. ',n' → logprob: -12.149090766906738
    8. ' ' → logprob: -12.399090766906738
    9. '(N' → logprob: -13.274090766906738
    10. '   ' → logprob: -13.899090766906738

Token 42: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009815473109483719
    2. ' N' → logprob: -4.634815692901611
    3. 'len' → logprob: -10.134815216064453
    4. 'n' → logprob: -11.759815216064453
    5. ' len' → logprob: -11.884815216064453
    6. ' ' → logprob: -13.009815216064453
    7. '   ' → logprob: -13.134815216064453
    8. 'm' → logprob: -14.634815216064453
    9. '	N' → logprob: -15.634815216064453
    10. '  ' → logprob: -16.259815216064453

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07967188209295273
    2. '):
' → logprob: -2.579671859741211
    3. ':' → logprob: -7.579671859741211
    4. '):
' → logprob: -8.579671859741211
    5. ' ):' → logprob: -10.454671859741211
    6. ',' → logprob: -11.079671859741211
    7. ')' → logprob: -11.329671859741211
    8. '-' → logprob: -11.579671859741211
    9. '+' → logprob: -11.954671859741211
    10. ' ' → logprob: -12.829671859741211

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022054191678762436
    2. ' ' → logprob: -4.397054195404053
    3. ' if' → logprob: -5.897054195404053
    4. ' 
' → logprob: -6.522054195404053
    5. ':' → logprob: -6.772054195404053
    6. '```' → logprob: -7.022054195404053
    7. '    
' → logprob: -7.272054195404053
    8. ' m' → logprob: -7.397054195404053
    9. '    ' → logprob: -7.647054195404053
    10. ':
' → logprob: -7.897054195404053

Token 45: ' m' (ID: 284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46521157026290894
    2. ' if' → logprob: -1.7152116298675537
    3. 'm' (adapté à ' m') → logprob: -2.0902116298675537
    4. ' m' → logprob: -3.2152116298675537
    5. '   ' → logprob: -3.5902116298675537
    6. ' ' → logprob: -8.090211868286133
    7. 'print' → logprob: -9.340211868286133
    8. '```' → logprob: -9.465211868286133
    9. 'diff' → logprob: -10.340211868286133
    10. 'i' → logprob: -10.590211868286133

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6337087154388428
    2. ' =' → logprob: -0.7587087154388428
    3. '=min' → logprob: -7.758708953857422
    4. '+=' → logprob: -8.258708953857422
    5. '*=' → logprob: -8.758708953857422
    6. ' *=' → logprob: -9.883708953857422
    7. ' +=' → logprob: -10.008708953857422
    8. '=max' → logprob: -10.258708953857422
    9. '-=' → logprob: -10.633708953857422
    10. '   ' → logprob: -10.883708953857422

Token 47: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3734208941459656
    2. ' min' → logprob: -1.4984209537506104
    3. 'max' → logprob: -2.8734209537506104
    4. ' max' → logprob: -3.7484209537506104
    5. 'm' → logprob: -5.248420715332031
    6. 'g' → logprob: -6.248420715332031
    7. ' m' → logprob: -7.373420715332031
    8. ' gcd' → logprob: -8.373420715332031
    9. ' g' → logprob: -11.498420715332031
    10. ' ' → logprob: -12.373420715332031

Token 48: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1023116484284401
    2. ' m' → logprob: -2.852311611175537
    3. 'min' → logprob: -3.602311611175537
    4. 'max' → logprob: -5.227311611175537
    5. ' min' → logprob: -5.477311611175537
    6. ' max' → logprob: -6.477311611175537
    7. '   ' → logprob: -7.852311611175537
    8. ')' → logprob: -8.477312088012695
    9. ' ' → logprob: -8.977312088012695
    10. 'V' → logprob: -9.977312088012695

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5089128613471985
    2. ' +' → logprob: -1.0089128017425537
    3. '*' → logprob: -3.6339128017425537
    4. ' *' → logprob: -5.258913040161133
    5. ' &' → logprob: -7.008913040161133
    6. '&' → logprob: -7.258913040161133
    7. '|' → logprob: -8.383913040161133
    8. ' ' → logprob: -8.758913040161133
    9. ',' → logprob: -8.883913040161133
    10. '-' → logprob: -9.258913040161133

Token 50: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.3874185383319855
    2. ' V' → logprob: -1.137418508529663
    3. '   ' → logprob: -8.262418746948242
    4. ' ' → logprob: -8.887418746948242
    5. '1' → logprob: -10.012418746948242
    6. '	V' → logprob: -10.387418746948242
    7. ')' → logprob: -10.762418746948242
    8. '    ' → logprob: -11.012418746948242
    9. '  ' → logprob: -11.262418746948242
    10. ')V' → logprob: -11.887418746948242

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.00000286102295
    3. ')' → logprob: -14.87500286102295
    4. '[
' → logprob: -16.250003814697266
    5. 'i' → logprob: -16.750003814697266
    6. '```' → logprob: -16.750003814697266
    7. '[I' → logprob: -16.875003814697266
    8. '[N' → logprob: -18.000003814697266
    9. '(i' → logprob: -18.750003814697266
    10. ' [' → logprob: -18.875003814697266

Token 52: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005781737272627652
    2. ')//' → logprob: -7.7505784034729
    3. ' )' → logprob: -9.000577926635742
    4. ')/' → logprob: -11.375577926635742
    5. '//' → logprob: -13.000577926635742
    6. '）' → logprob: -13.500577926635742
    7. '+' → logprob: -13.625577926635742
    8. '   ' → logprob: -13.875577926635742
    9. '`)' → logprob: -14.000577926635742
    10. '*' → logprob: -14.125577926635742

Token 53: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.04981108382344246
    2. '//' → logprob: -3.0498111248016357
    3. '2' → logprob: -7.924810886383057
    4. ' ' → logprob: -8.299811363220215
    5. '/' → logprob: -9.049811363220215
    6. ' /' → logprob: -9.424811363220215
    7. '1' → logprob: -9.674811363220215
    8. ')' → logprob: -10.049811363220215
    9. '0' → logprob: -10.049811363220215
    10. '   ' → logprob: -10.049811363220215

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022353052627295256
    2. ' ' → logprob: -6.627235412597656
    3. 'i' → logprob: -7.252235412597656
    4. '(' → logprob: -9.252235412597656
    5. '(i' → logprob: -9.377235412597656
    6. ' i' → logprob: -12.002235412597656
    7. 'N' → logprob: -12.377235412597656
    8. '(N' → logprob: -13.127235412597656
    9. '   ' → logprob: -13.252235412597656
    10. ' (' → logprob: -13.502235412597656

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004813161212950945
    2. 'i' → logprob: -8.000481605529785
    3. '(' → logprob: -9.500481605529785
    4. '(i' → logprob: -10.500481605529785
    5. ' ' → logprob: -10.750481605529785
    6. 'N' → logprob: -11.750481605529785
    7. '1' → logprob: -12.250481605529785
    8. '(N' → logprob: -12.750481605529785
    9. '3' → logprob: -13.375481605529785
    10. '10' → logprob: -13.375481605529785

Token 56: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005784121458418667
    2. ' print' → logprob: -7.6255784034729
    3. ')' → logprob: -9.750578880310059
    4. 'm' → logprob: -11.000578880310059
    5. '
' → logprob: -11.875578880310059
    6. ' 
' → logprob: -13.500578880310059
    7. '  
' → logprob: -13.625578880310059
    8. '.print' → logprob: -14.000578880310059
    9. '(print' → logprob: -14.125578880310059
    10. '<|end|>' → logprob: -14.125578880310059

Token 57: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3856492842023727e-06
    2. ' print' → logprob: -14.750000953674316
    3. 'm' → logprob: -14.875000953674316
    4. '```' → logprob: -15.625000953674316
    5. 'p' → logprob: -16.375001907348633
    6. 'pr' → logprob: -16.375001907348633
    7. '#' → logprob: -17.000001907348633
    8. '#print' → logprob: -17.625001907348633
    9. '
' → logprob: -17.750001907348633
    10. 'for' → logprob: -18.125001907348633

Token 58: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5760798454284668
    2. '(' → logprob: -0.8260798454284668
    3. '()' → logprob: -9.076080322265625
    4. '((' → logprob: -11.951080322265625
    5. '(round' → logprob: -12.076080322265625
    6. '(max' → logprob: -12.826080322265625
    7. '("("' → logprob: -13.201080322265625
    8. '('' → logprob: -13.201080322265625
    9. '(sum' → logprob: -13.326080322265625
    10. '(len' → logprob: -13.576080322265625

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -15.250000953674316
    4. ')`' → logprob: -17.5
    5. '）' → logprob: -19.0
    6. ')
' → logprob: -19.5
    7. '')' → logprob: -19.625
    8. ')}' → logprob: -19.75
    9. '`)' → logprob: -20.125
    10. '(' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 40.35%
Précision adaptée (1ère position): 40.35%
Précision (top 10): 78.95%
================================================================================
