================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h, w = map(int, raw_input().split())
grid = [raw_input() for r in range(h)]
result = True
for r in range(h):
    for c in range(w):
        if grid[r][c] == '#':
            cnt = 0
            for dr, dc in [(1,0),(0,1),(-1,0),(0,-1)]:
                nr, nc = r+dr, c+dc
                if (0 <= nr < h) and (0 <= nc < w) and (grid[nr][nc] == '#'):
                    cnt += 1
            if cnt == 0:
                result = False
if result:
    print "Yes"
else:
    print "No"
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' w' (ID: 286)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7141396999359131
    2. '=' → logprob: -0.7141396999359131
    3. ' =' → logprob: -4.089139938354492
    4. ')' → logprob: -6.464139938354492
    5. '*' → logprob: -6.839139938354492
    6. '.' → logprob: -7.964139938354492
    7. ':' → logprob: -8.839139938354492
    8. '[' → logprob: -8.839139938354492
    9. '```' → logprob: -9.339139938354492
    10. ' ' → logprob: -9.464139938354492

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20660795271396637
    2. ' image' → logprob: -2.4566080570220947
    3. ' h' → logprob: -3.0816080570220947
    4. ' img' → logprob: -3.3316080570220947
    5. ' map' → logprob: -4.956607818603516
    6. '0' → logprob: -5.956607818603516
    7. 'image' → logprob: -5.956607818603516
    8. 'map' → logprob: -6.456607818603516
    9. ' input' → logprob: -7.206607818603516
    10. ' np' → logprob: -7.331607818603516

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06916536390781403
    2. '(int' → logprob: -3.4441654682159424
    3. '(lambda' → logprob: -3.8191654682159424
    4. '(str' → logprob: -4.694165229797363
    5. '```' → logprob: -6.694165229797363
    6. '<|end|>' → logprob: -7.819165229797363
    7. '[int' → logprob: -8.069165229797363
    8. ')' → logprob: -8.319165229797363
    9. '(len' → logprob: -8.694165229797363
    10. '<int' → logprob: -8.819165229797363

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016287608072161674
    2. '(' → logprob: -4.891287803649902
    3. ')' → logprob: -4.891287803649902
    4. 'input' → logprob: -7.516287803649902
    5. '(str' → logprob: -8.891287803649902
    6. '(raw' → logprob: -9.141287803649902
    7. '```' → logprob: -9.141287803649902
    8. ' input' → logprob: -10.266287803649902
    9. '(int' → logprob: -10.391287803649902
    10. '[input' → logprob: -10.766287803649902

Token 7: ' raw' (ID: 11428)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4742639660835266
    2. 'input' → logprob: -0.9742639660835266
    3. '(input' → logprob: -9.099264144897461
    4. ')' → logprob: -9.599264144897461
    5. ',input' → logprob: -12.474264144897461
    6. ' )' → logprob: -13.849264144897461
    7. '=input' → logprob: -13.974264144897461
    8. '<input' → logprob: -15.099264144897461
    9. '[input' → logprob: -15.349264144897461
    10. '	input' → logprob: -15.849264144897461

Token 8: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002272773766890168
    2. '_' → logprob: -6.502272605895996
    3. 'input' → logprob: -7.252272605895996
    4. '_in' → logprob: -11.127272605895996
    5. '```' → logprob: -11.127272605895996
    6. '(' → logprob: -11.877272605895996
    7. 'Input' → logprob: -12.252272605895996
    8. '__' → logprob: -12.627272605895996
    9. ' input' → logprob: -12.877272605895996
    10. ')' → logprob: -13.127272605895996

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7598122954368591
    2. '('' → logprob: -1.259812355041504
    3. '())' → logprob: -2.009812355041504
    4. '()' → logprob: -2.634812355041504
    5. ')' → logprob: -4.384812355041504
    6. '(""))' → logprob: -4.884812355041504
    7. '("("' → logprob: -5.759812355041504
    8. '(()' → logprob: -6.134812355041504
    9. '();)' → logprob: -6.384812355041504
    10. '("")' → logprob: -6.509812355041504

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018252842128276825
    2. 'strip' → logprob: -4.018252849578857
    3. ' split' → logprob: -10.0182523727417
    4. 'rstrip' → logprob: -10.1432523727417
    5. 'read' → logprob: -11.8932523727417
    6. ')' → logprob: -12.0182523727417
    7. 'decode' → logprob: -13.0182523727417
    8. '(split' → logprob: -13.0182523727417
    9. ' strip' → logprob: -14.1432523727417
    10. 'startswith' → logprob: -15.5182523727417

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.18786156177520752
    2. ')' → logprob: -1.8128615617752075
    3. '))' → logprob: -6.187861442565918
    4. '(' → logprob: -6.312861442565918
    5. '()' → logprob: -6.437861442565918
    6. '('' → logprob: -6.687861442565918
    7. '()))' → logprob: -6.812861442565918
    8. '`)' → logprob: -9.062861442565918
    9. '')' → logprob: -10.312861442565918
    10. ' ())' → logprob: -10.437861442565918

Token 12: 'grid' (ID: 7886)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07975609600543976
    2. '#' → logprob: -3.329756021499634
    3. '<|end|>' → logprob: -4.579756259918213
    4. '()' → logprob: -4.704756259918213
    5. '(' → logprob: -4.829756259918213
    6. 'print' → logprob: -5.329756259918213
    7. 'for' → logprob: -6.954756259918213
    8. '\n' → logprob: -7.079756259918213
    9. ':' → logprob: -7.079756259918213
    10. ',' → logprob: -7.204756259918213

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047952806926332414
    2. '[h' → logprob: -8.375479698181152
    3. '\[' → logprob: -9.375479698181152
    4. '[]' → logprob: -9.875479698181152
    5. '[
' → logprob: -11.125479698181152
    6. '[][]' → logprob: -11.125479698181152
    7. '[:]' → logprob: -11.375479698181152
    8. '[i' → logprob: -11.375479698181152
    9. '[int' → logprob: -11.500479698181152
    10. '[row' → logprob: -12.250479698181152

Token 14: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.141982913017273
    2. '[' → logprob: -1.391982913017273
    3. ' []' → logprob: -1.516982913017273
    4. '[]' → logprob: -1.641982913017273
    5. '[list' → logprob: -5.3919830322265625
    6. '[h' → logprob: -5.5169830322265625
    7. '[input' → logprob: -5.8919830322265625
    8. '[str' → logprob: -6.0169830322265625
    9. '[['' → logprob: -6.6419830322265625
    10. '[int' → logprob: -7.0169830322265625

Token 15: 'raw' (ID: 1618)
  Prédit: 'raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.3559906482696533
    2. 'list' → logprob: -1.2309906482696533
    3. 'map' → logprob: -5.105990409851074
    4. ' list' → logprob: -6.855990409851074
    5. ' raw' → logprob: -8.480990409851074
    6. '   ' → logprob: -9.730990409851074
    7. 'str' → logprob: -9.855990409851074
    8. '[' → logprob: -10.855990409851074
    9. 'tuple' → logprob: -10.855990409851074
    10. '[]' → logprob: -11.480990409851074

Token 16: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0001446611131541431
    2. '_' → logprob: -8.875144958496094
    3. ' _' → logprob: -13.750144958496094
    4. '_inputs' → logprob: -13.750144958496094
    5. 'input' → logprob: -14.000144958496094
    6. '_in' → logprob: -14.500144958496094
    7. '```' → logprob: -15.000144958496094
    8. '_i' → logprob: -15.125144958496094
    9. '_output' → logprob: -15.250144958496094
    10. '_line' → logprob: -16.625144958496094

Token 17: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3484949767589569
    2. '())' → logprob: -1.8484950065612793
    3. '()' → logprob: -2.3484950065612793
    4. '()]' → logprob: -3.2234950065612793
    5. '()].' → logprob: -7.348495006561279
    6. '()).' → logprob: -7.973495006561279
    7. '()),' → logprob: -8.348494529724121
    8. '());' → logprob: -9.348494529724121
    9. '()][' → logprob: -10.473494529724121
    10. '()],' → logprob: -11.098494529724121

Token 18: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3818458318710327
    2. '())' → logprob: -1.6318458318710327
    3. ')' → logprob: -2.1318459510803223
    4. '().' → logprob: -6.006845951080322
    5. '()]' → logprob: -7.506845951080322
    6. ' )' → logprob: -10.256845474243164
    7. ')]' → logprob: -10.506845474243164
    8. '()).' → logprob: -10.881845474243164
    9. 'for' → logprob: -11.006845474243164
    10. ' ' → logprob: -11.006845474243164

Token 19: ' r' (ID: 428)
  Prédit: ' xrange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' xrange' → logprob: -0.35008108615875244
    2. ' range' → logprob: -1.2250810861587524
    3. ' ' → logprob: -6.725080966949463
    4. 'range' → logprob: -8.600081443786621
    5. '	range' → logprob: -9.100081443786621
    6. ' i' → logprob: -9.600081443786621
    7. '_' → logprob: -10.350081443786621
    8. '(range' → logprob: -11.100081443786621
    9. ' _' → logprob: -12.225081443786621
    10. ' x' → logprob: -12.475081443786621

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030928626656532288
    2. 'ange' → logprob: -5.8780927658081055
    3. 'in' → logprob: -8.878092765808105
    4. ' ' → logprob: -9.003092765808105
    5. 'range' → logprob: -11.753092765808105
    6. ' range' → logprob: -11.878092765808105
    7. ' xrange' → logprob: -13.003092765808105
    8. 'ow' → logprob: -13.378092765808105
    9. '  ' → logprob: -13.503092765808105
    10. 'nge' → logprob: -14.128092765808105

Token 21: ' range' (ID: 3352)
  Prédit: ' xrange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xrange' → logprob: -0.2711293399333954
    2. ' range' → logprob: -1.8961293697357178
    3. 'range' → logprob: -2.6461293697357178
    4. 'x' → logprob: -4.146129131317139
    5. ' ' → logprob: -7.646129131317139
    6. '  ' → logprob: -10.396129608154297
    7. '	range' → logprob: -11.146129608154297
    8. ' x' → logprob: -11.271129608154297
    9. '   ' → logprob: -11.271129608154297
    10. '[' → logprob: -11.896129608154297

Token 22: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00043448375072330236
    2. '(' → logprob: -7.750434398651123
    3. '(w' → logprob: -13.125434875488281
    4. '(H' → logprob: -14.125434875488281
    5. ' (' → logprob: -14.375434875488281
    6. '(
' → logprob: -16.00043487548828
    7. '(height' → logprob: -16.12543487548828
    8. '(s' → logprob: -16.12543487548828
    9. '(int' → logprob: -16.50043487548828
    10. '(n' → logprob: -17.12543487548828

Token 23: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005823421524837613
    2. ')' → logprob: -7.500582218170166
    3. ']' → logprob: -10.750582695007324
    4. ')])' → logprob: -12.500582695007324
    5. '))' → logprob: -13.750582695007324
    6. ' )' → logprob: -13.750582695007324
    7. '')]' → logprob: -14.250582695007324
    8. '])]' → logprob: -14.375582695007324
    9. ')],' → logprob: -15.625582695007324
    10. '])' → logprob: -16.000581741333008

Token 24: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9564827680587769
    2. '#' → logprob: -1.0814827680587769
    3. '<|end|>' → logprob: -2.3314828872680664
    4. '.' → logprob: -3.0814828872680664
    5. '
' → logprob: -3.3314828872680664
    6. '[' → logprob: -3.8314828872680664
    7. '\n' → logprob: -4.331482887268066
    8. '' → logprob: -4.331482887268066
    9. 'n' → logprob: -4.581482887268066
    10. ')' → logprob: -4.956482887268066

Token 25: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0132495164871216
    2. '[' → logprob: -1.5132495164871216
    3. '=' → logprob: -1.7632495164871216
    4. ' =' → logprob: -1.7632495164871216
    5. '_' → logprob: -3.513249397277832
    6. '[:]' → logprob: -4.513249397277832
    7. 's' → logprob: -4.638249397277832
    8. '<|end|>' → logprob: -5.138249397277832
    9. '(' → logprob: -5.263249397277832
    10. ' ' → logprob: -5.388249397277832

Token 26: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4297215938568115
    2. ' []' → logprob: -1.8047215938568115
    3. '0' → logprob: -2.5547215938568115
    4. '[]' → logprob: -3.5547215938568115
    5. '"' → logprob: -4.179721832275391
    6. ' "' → logprob: -4.304721832275391
    7. '[' → logprob: -4.679721832275391
    8. ''' → logprob: -4.804721832275391
    9. ' [' → logprob: -4.804721832275391
    10. ' set' → logprob: -5.429721832275391

Token 27: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0288175344467163
    2. '
' → logprob: -1.4038175344467163
    3. '\' → logprob: -2.278817653656006
    4. '<|end|>' → logprob: -2.403817653656006
    5. ' for' → logprob: -2.528817653656006
    6. '\n' → logprob: -2.528817653656006
    7. ':' → logprob: -4.403817653656006
    8. ' ' → logprob: -4.778817653656006
    9. ',' → logprob: -5.028817653656006
    10. '' → logprob: -5.403817653656006

Token 28: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08676305413246155
    2. '
' → logprob: -2.9617631435394287
    3. '\n' → logprob: -3.7117631435394287
    4. ' for' → logprob: -6.08676290512085
    5. '```' → logprob: -6.08676290512085
    6. '' → logprob: -7.21176290512085
    7. '<|end|>' → logprob: -7.46176290512085
    8. '\' → logprob: -7.58676290512085
    9. 'n' → logprob: -8.211763381958008
    10. ' 
' → logprob: -9.586763381958008

Token 29: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010542018339037895
    2. ' r' → logprob: -5.260541915893555
    3. '  ' → logprob: -5.760541915893555
    4. ' i' → logprob: -7.010541915893555
    5. ' row' → logprob: -7.385541915893555
    6. 'r' → logprob: -8.760541915893555
    7. '"' → logprob: -9.010541915893555
    8. ''' → logprob: -9.510541915893555
    9. ' ,' → logprob: -10.010541915893555
    10. 'i' → logprob: -10.385541915893555

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024170422926545143
    2. ' ' → logprob: -4.024170398712158
    3. 'in' → logprob: -5.149170398712158
    4. '<|end|>' → logprob: -9.024170875549316
    5. '	in' → logprob: -11.149170875549316
    6. '  ' → logprob: -11.399170875549316
    7. ',' → logprob: -11.774170875549316
    8. '0' → logprob: -12.149170875549316
    9. ' i' → logprob: -12.274170875549316
    10. ')' → logprob: -12.274170875549316

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01559025701135397
    2. ' xrange' → logprob: -4.390590190887451
    3. 'range' → logprob: -5.890590190887451
    4. ' ' → logprob: -8.14059066772461
    5. 'ange' → logprob: -11.76559066772461
    6. '	range' → logprob: -12.26559066772461
    7. '(range' → logprob: -12.76559066772461
    8. ' ' → logprob: -13.26559066772461
    9. '  ' → logprob: -14.26559066772461
    10. '_range' → logprob: -15.01559066772461

Token 32: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20187237858772278
    2. '(h' → logprob: -1.7018723487854004
    3. ' (' → logprob: -7.8268723487854
    4. '(
' → logprob: -10.451872825622559
    5. '(w' → logprob: -11.451872825622559
    6. '(s' → logprob: -11.701872825622559
    7. '(len' → logprob: -12.326872825622559
    8. '(space' → logprob: -13.576872825622559
    9. '(

' → logprob: -13.701872825622559
    10. '((' → logprob: -14.576872825622559

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005646475125104189
    2. '):
' → logprob: -5.630646705627441
    3. ')' → logprob: -7.130646705627441
    4. ' ):' → logprob: -7.505646705627441
    5. '+' → logprob: -7.630646705627441
    6. ':' → logprob: -8.630646705627441
    7. ' ' → logprob: -11.880646705627441
    8. '-' → logprob: -12.005646705627441
    9. '+:' → logprob: -12.505646705627441
    10. '   ' → logprob: -12.880646705627441

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11977439373731613
    2. ' for' → logprob: -3.244774341583252
    3. ' ' → logprob: -3.369774341583252
    4. ':' → logprob: -3.619774341583252
    5. '<|end|>' → logprob: -4.994774341583252
    6. '    ' → logprob: -5.869774341583252
    7. '	for' → logprob: -7.244774341583252
    8. '  ' → logprob: -7.494774341583252
    9. 'for' → logprob: -8.36977481842041
    10. '    
' → logprob: -8.36977481842041

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05157363787293434
    2. '   ' → logprob: -3.3015737533569336
    3. 'for' (adapté à ' for') → logprob: -4.676573753356934
    4. ' ' → logprob: -6.051573753356934
    5. '    ' → logprob: -6.426573753356934
    6. '	for' → logprob: -10.426573753356934
    7. '<|end|>' → logprob: -10.676573753356934
    8. '       ' → logprob: -10.926573753356934
    9. ' w' → logprob: -10.926573753356934
    10. ' if' → logprob: -11.051573753356934

Token 36: ' c' (ID: 274)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.06135236844420433
    2. ' ' → logprob: -3.061352252960205
    3. ' range' → logprob: -5.061352252960205
    4. 'w' → logprob: -5.686352252960205
    5. '<|end|>' → logprob: -6.061352252960205
    6. 'range' → logprob: -7.936352252960205
    7. ' xrange' → logprob: -9.436352729797363
    8. ' s' → logprob: -10.061352729797363
    9. ')' → logprob: -10.311352729797363
    10. '<|end|>' → logprob: -11.186352729797363

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025822367519140244
    2. 'in' → logprob: -4.275822162628174
    3. '<|end|>' → logprob: -4.650822162628174
    4. ' ' → logprob: -6.275822162628174
    5. '<|end|>' → logprob: -10.025822639465332
    6. '	in' → logprob: -10.650822639465332
    7. '  ' → logprob: -10.775822639465332
    8. '+' → logprob: -11.400822639465332
    9. ')' → logprob: -11.838322639465332
    10. '   ' → logprob: -12.088322639465332

Token 38: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.031588438898324966
    2. ' w' → logprob: -3.906588554382324
    3. 'range' → logprob: -4.656588554382324
    4. ' (' → logprob: -7.906588554382324
    5. ' h' → logprob: -8.281588554382324
    6. ' ' → logprob: -8.531588554382324
    7. 'w' → logprob: -8.781588554382324
    8. '(range' → logprob: -8.781588554382324
    9. '(' → logprob: -9.031588554382324
    10. ' xrange' → logprob: -9.656588554382324

Token 39: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.5340099334716797
    2. '(' → logprob: -0.9090099334716797
    3. '(h' → logprob: -5.15900993347168
    4. ' (' → logprob: -5.40900993347168
    5. '(s' → logprob: -7.78400993347168
    6. ')' → logprob: -9.65900993347168
    7. '(
' → logprob: -9.78400993347168
    8. '<|end|>' → logprob: -10.15900993347168
    9. ' w' → logprob: -12.28400993347168
    10. '(

' → logprob: -12.90900993347168

Token 40: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5362913012504578
    2. '):' → logprob: -0.9112913012504578
    3. '+' → logprob: -5.036291122436523
    4. ' )' → logprob: -5.786291122436523
    5. ' ):' → logprob: -6.036291122436523
    6. ':' → logprob: -8.036291122436523
    7. 'if' → logprob: -8.036291122436523
    8. '):
' → logprob: -9.661291122436523
    9. ')>' → logprob: -9.661291122436523
    10. '-' → logprob: -10.036291122436523

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7161604166030884
    2. ' ' → logprob: -1.4661604166030884
    3. '   ' → logprob: -1.5911604166030884
    4. '    ' → logprob: -4.091160297393799
    5. ' if' → logprob: -4.341160297393799
    6. ':' → logprob: -4.341160297393799
    7. 'if' → logprob: -4.966160297393799
    8. 'i' → logprob: -5.466160297393799
    9. '<|end|>' → logprob: -5.841160297393799
    10. ' i' → logprob: -6.091160297393799

Token 42: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3585676848888397
    2. ' if' → logprob: -1.608567714691162
    3. 'if' (adapté à ' if') → logprob: -3.733567714691162
    4. '   ' → logprob: -4.108567714691162
    5. ' i' → logprob: -4.233567714691162
    6. 'i' → logprob: -4.358567714691162
    7. '    ' → logprob: -4.608567714691162
    8. '       ' → logprob: -4.858567714691162
    9. '#' → logprob: -5.983567714691162
    10. '           ' → logprob: -6.483567714691162

Token 43: ' grid' (ID: 10586)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4862028658390045
    2. ' grid' → logprob: -0.9862028360366821
    3. 'grid' → logprob: -4.986202716827393
    4. ' (' → logprob: -6.486202716827393
    5. ' not' → logprob: -6.986202716827393
    6. '(grid' → logprob: -7.486202716827393
    7. ' )' → logprob: -7.611202716827393
    8. ' g' → logprob: -7.861202716827393
    9. '<|end|>' → logprob: -8.36120319366455
    10. ')' → logprob: -8.48620319366455

Token 44: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0028709694743156433
    2. '[' → logprob: -6.377871036529541
    3. '[c' → logprob: -7.002871036529541
    4. '[h' → logprob: -8.377870559692383
    5. ' [' → logprob: -11.252870559692383
    6. '[
' → logprob: -13.252870559692383
    7. '```' → logprob: -13.502870559692383
    8. '[f' → logprob: -13.752870559692383
    9. '[s' → logprob: -13.752870559692383
    10. ']' → logprob: -13.752870559692383

Token 45: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2372659146785736
    2. '[c' → logprob: -1.612265944480896
    3. ']' → logprob: -4.6122660636901855
    4. '[' → logprob: -6.6122660636901855
    5. '[r' → logprob: -8.362265586853027
    6. ' ][' → logprob: -9.737265586853027
    7. ']==' → logprob: -9.987265586853027
    8. '[
' → logprob: -10.362265586853027
    9. '```' → logprob: -10.612265586853027
    10. '[C' → logprob: -11.112265586853027

Token 46: 'c' (ID: 66)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.8002172708511353
    2. '#' → logprob: -1.3002172708511353
    3. '0' → logprob: -2.5502171516418457
    4. ''' → logprob: -2.6752171516418457
    5. 'c' → logprob: -3.0502171516418457
    6. '1' → logprob: -3.4252171516418457
    7. ']' → logprob: -4.175217151641846
    8. ')' → logprob: -5.050217151641846
    9. 'r' → logprob: -5.175217151641846
    10. ' ' → logprob: -5.300217151641846

Token 47: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20810118317604065
    2. ' ' → logprob: -3.083101272583008
    3. '==' → logprob: -3.208101272583008
    4. ']' → logprob: -3.458101272583008
    5. ' !=' → logprob: -3.583101272583008
    6. ')' → logprob: -4.208101272583008
    7. '=' → logprob: -4.333101272583008
    8. ' ]' → logprob: -5.458101272583008
    9. ' )' → logprob: -5.708101272583008
    10. '!=' → logprob: -6.333101272583008

Token 48: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0784398764371872
    2. ' !=' → logprob: -3.328439950942993
    3. '==' → logprob: -3.703439950942993
    4. ' ' → logprob: -4.828439712524414
    5. '=' → logprob: -5.828439712524414
    6. '!=' → logprob: -6.328439712524414
    7. ' =' → logprob: -7.078439712524414
    8. ' =='' → logprob: -8.828439712524414
    9. '=='' → logprob: -9.078439712524414
    10. '>' → logprob: -9.078439712524414

Token 49: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.25813183188438416
    2. ''' → logprob: -1.8831318616867065
    3. ''*' → logprob: -3.633131742477417
    4. ' '#'' → logprob: -4.258131980895996
    5. '#' → logprob: -4.508131980895996
    6. ''.' → logprob: -4.758131980895996
    7. '"#' → logprob: -5.133131980895996
    8. ''S' → logprob: -6.258131980895996
    9. '"' → logprob: -6.383131980895996
    10. ''a' → logprob: -7.883131980895996

Token 50: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08395311236381531
    2. ' and' → logprob: -3.3339531421661377
    3. ' :' → logprob: -3.3339531421661377
    4. '':' → logprob: -6.083952903747559
    5. '):' → logprob: -6.208952903747559
    6. ' ':' → logprob: -6.583952903747559
    7. ' ' → logprob: -6.833952903747559
    8. ')' → logprob: -7.583952903747559
    9. ''' → logprob: -7.708952903747559
    10. ' ):' → logprob: -7.958952903747559

Token 51: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2902217507362366
    2. ' ' → logprob: -2.040221691131592
    3. ' :' → logprob: -2.415221691131592
    4. ' and' → logprob: -4.040221691131592
    5. '           ' → logprob: -5.790221691131592
    6. '   ' → logprob: -5.915221691131592
    7. '       ' → logprob: -6.040221691131592
    8. '    ' → logprob: -7.040221691131592
    9. ' continue' → logprob: -7.040221691131592
    10. ' :
' → logprob: -7.290221691131592

Token 52: ' cnt' (ID: 27340)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4569857716560364
    2. ' if' → logprob: -1.7069857120513916
    3. 'if' → logprob: -3.2069857120513916
    4. ' #' → logprob: -3.4569857120513916
    5. '               ' → logprob: -3.9569857120513916
    6. '    ' → logprob: -4.331985950469971
    7. '            ' → logprob: -4.331985950469971
    8. ' continue' → logprob: -4.331985950469971
    9. '#' → logprob: -4.581985950469971
    10. '           ' → logprob: -4.581985950469971

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2601148188114166
    2. '=' → logprob: -2.135114908218384
    3. '_' → logprob: -2.885114908218384
    4. ' ' → logprob: -3.135114908218384
    5. '<|end|>' → logprob: -5.010114669799805
    6. '(' → logprob: -6.260114669799805
    7. ' _' → logprob: -6.885114669799805
    8. ' +=' → logprob: -8.135114669799805
    9. ')' → logprob: -8.510114669799805
    10. '_neighbors' → logprob: -8.635114669799805

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.282100647687912
    2. ' ' → logprob: -1.4071006774902344
    3. ' sum' → logprob: -7.782100677490234
    4. 'sum' → logprob: -7.907100677490234
    5. '1' → logprob: -9.157100677490234
    6. '(' → logprob: -11.032100677490234
    7. ' (' → logprob: -11.657100677490234
    8. ' [' → logprob: -11.782100677490234
    9. '[' → logprob: -12.407100677490234
    10. 'int' → logprob: -12.657100677490234

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011196188861504197
    2. ' ' → logprob: -7.501119613647461
    3. 'sum' → logprob: -7.876119613647461
    4. '1' → logprob: -9.501119613647461
    5. '4' → logprob: -10.126119613647461
    6. '3' → logprob: -11.001119613647461
    7. '(' → logprob: -11.501119613647461
    8. ' sum' → logprob: -11.876119613647461
    9. '[
' → logprob: -11.876119613647461
    10. '[' → logprob: -12.376119613647461

Token 56: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5485557317733765
    2. '<|end|>' → logprob: -1.5485557317733765
    3. '    ' → logprob: -3.173555850982666
    4. '   ' → logprob: -3.173555850982666
    5. '           ' → logprob: -3.673555850982666
    6. '       ' → logprob: -3.798555850982666
    7. '               ' → logprob: -4.298555850982666
    8. '          ' → logprob: -4.423555850982666
    9. '            ' → logprob: -4.798555850982666
    10. '  ' → logprob: -5.173555850982666

Token 58: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.45630988478660583
    2. ' for' → logprob: -1.2063099145889282
    3. ' ' → logprob: -2.8313097953796387
    4. 'if' → logprob: -6.581309795379639
    5. '            ' → logprob: -6.706309795379639
    6. '           ' → logprob: -7.081309795379639
    7. ' if' → logprob: -7.331309795379639
    8. '    ' → logprob: -7.331309795379639
    9. ' 
' → logprob: -7.706309795379639
    10. ' (' → logprob: -7.956309795379639

Token 59: ' dr' (ID: 1498)
  Prédit: ' dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dr' → logprob: -0.5968535542488098
    2. ' nr' → logprob: -1.346853494644165
    3. ' ' → logprob: -2.346853494644165
    4. ' r' → logprob: -2.721853494644165
    5. 'dr' → logprob: -5.346853733062744
    6. ' (' → logprob: -5.346853733062744
    7. 'nr' → logprob: -5.346853733062744
    8. 'r' → logprob: -6.096853733062744
    9. ' rr' → logprob: -6.096853733062744
    10. ' d' → logprob: -6.221853733062744

Token 60: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012293245643377304
    2. ' ' → logprob: -5.137293338775635
    3. 'in' → logprob: -5.137293338775635
    4. ',' → logprob: -8.387292861938477
    5. ' ,' → logprob: -9.137292861938477
    6. '<|end|>' → logprob: -9.887292861938477
    7. ' -' → logprob: -10.512292861938477
    8. '-' → logprob: -11.262292861938477
    9. '	in' → logprob: -11.887292861938477
    10. '[-' → logprob: -12.512292861938477

Token 61: ' dc' (ID: 37843)
  Prédit: ' dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dc' → logprob: -0.04861915484070778
    2. 'dc' → logprob: -3.048619270324707
    3. '_dc' → logprob: -10.548619270324707
    4. '<|end|>' → logprob: -12.923619270324707
    5. '.dc' → logprob: -13.923619270324707
    6. '(dc' → logprob: -14.048619270324707
    7. ' DC' → logprob: -14.173619270324707
    8. ' ' → logprob: -15.048619270324707
    9. ' Dc' → logprob: -15.798619270324707
    10. 'Dc' → logprob: -16.29861831665039

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02638494223356247
    2. 'in' → logprob: -3.6513848304748535
    3. ' ' → logprob: -10.151385307312012
    4. '<|end|>' → logprob: -11.151385307312012
    5. ',' → logprob: -12.151385307312012
    6. ')' → logprob: -12.276385307312012
    7. ' i' → logprob: -12.526385307312012
    8. ' ,' → logprob: -12.526385307312012
    9. '	in' → logprob: -12.526385307312012
    10. 's' → logprob: -13.088885307312012

Token 63: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.041775576770305634
    2. '[(' → logprob: -3.6667754650115967
    3. ' [' → logprob: -4.416775703430176
    4. '[' → logprob: -6.541775703430176
    5. ' [-' → logprob: -7.041775703430176
    6. ' ((' → logprob: -7.416775703430176
    7. ' (-' → logprob: -9.291775703430176
    8. ' [
' → logprob: -9.416775703430176
    9. '[-' → logprob: -9.416775703430176
    10. ' ' → logprob: -9.791775703430176

Token 64: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.031612578779459
    2. '0' → logprob: -3.6566126346588135
    3. '1' → logprob: -5.406612396240234
    4. ' -' → logprob: -7.406612396240234
    5. ' ' → logprob: -8.531612396240234
    6. '(-' → logprob: -13.031612396240234
    7. '   ' → logprob: -13.406612396240234
    8. '−' → logprob: -14.031612396240234
    9. '(' → logprob: -14.156612396240234
    10. ')' → logprob: -14.656612396240234

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014072739577386528
    2. ' ,' → logprob: -9.500141143798828
    3. '<|end|>' → logprob: -10.000141143798828
    4. ',
' → logprob: -12.000141143798828
    5. '0' → logprob: -12.000141143798828
    6. ',

' → logprob: -12.750141143798828
    7. '),' → logprob: -13.625141143798828
    8. ')' → logprob: -13.750141143798828
    9. ',)' → logprob: -14.125141143798828
    10. ',),' → logprob: -14.500141143798828

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018207771703600883
    2. ' ' → logprob: -4.018207550048828
    3. '-' → logprob: -10.518207550048828
    4. '1' → logprob: -10.768207550048828
    5. ' -' → logprob: -11.643207550048828
    6. ')' → logprob: -14.768207550048828
    7. '   ' → logprob: -16.080707550048828
    8. '  ' → logprob: -16.268207550048828
    9. ' )' → logprob: -16.330707550048828
    10. ',' → logprob: -16.830707550048828

Token 67: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0391325019299984
    2. '),(' → logprob: -3.289132595062256
    3. ')' → logprob: -7.539132595062256
    4. ' ),' → logprob: -7.664132595062256
    5. '),
' → logprob: -9.539132118225098
    6. '<|end|>' → logprob: -12.664132118225098
    7. ',' → logprob: -13.039132118225098
    8. '),

' → logprob: -13.039132118225098
    9. ''),' → logprob: -13.664132118225098
    10. ' ' → logprob: -13.664132118225098

Token 68: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03811711072921753
    2. '0' → logprob: -3.2881171703338623
    3. ' ' → logprob: -10.538117408752441
    4. ' -' → logprob: -10.663117408752441
    5. '1' → logprob: -10.788117408752441
    6. '−' → logprob: -13.288117408752441
    7. ')' → logprob: -13.788117408752441
    8. '   ' → logprob: -14.288117408752441
    9. '```' → logprob: -14.788117408752441
    10. ',' → logprob: -15.225617408752441

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06679318100214005
    2. '),' → logprob: -3.316793203353882
    3. '),(' → logprob: -3.691793203353882
    4. ',-' → logprob: -6.441792964935303
    5. '1' → logprob: -6.691792964935303
    6. ')' → logprob: -8.566793441772461
    7. '-' → logprob: -9.191793441772461
    8. ',),' → logprob: -9.191793441772461
    9. ' ,' → logprob: -9.691793441772461
    10. ' ),' → logprob: -9.691793441772461

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043040867894887924
    2. '-' → logprob: -3.1680407524108887
    3. ' ' → logprob: -10.793041229248047
    4. ' -' → logprob: -11.293041229248047
    5. ')' → logprob: -12.668041229248047
    6. '```' → logprob: -13.168041229248047
    7. '-)' → logprob: -14.043041229248047
    8. '   ' → logprob: -14.480541229248047
    9. '+' → logprob: -14.730541229248047
    10. '−' → logprob: -15.543041229248047

Token 71: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.009980954229831696
    2. '),' → logprob: -4.634981155395508
    3. ' ),' → logprob: -8.884981155395508
    4. ')' → logprob: -10.259981155395508
    5. ')]' → logprob: -10.509981155395508
    6. '),
' → logprob: -11.509981155395508
    7. ',' → logprob: -12.259981155395508
    8. ')],' → logprob: -13.009981155395508
    9. '],[' → logprob: -13.259981155395508
    10. ' ' → logprob: -13.759981155395508

Token 72: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.01831885799765587
    2. '(' → logprob: -4.0183186531066895
    3. ' (-' → logprob: -9.018319129943848
    4. '-' → logprob: -10.268319129943848
    5. ' (' → logprob: -11.643319129943848
    6. '   ' → logprob: -14.268319129943848
    7. '[-' → logprob: -14.268319129943848
    8. ',-' → logprob: -14.768319129943848
    9. ' ' → logprob: -15.018319129943848
    10. '0' → logprob: -15.018319129943848

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ',' → logprob: -13.625003814697266
    3. ' ' → logprob: -13.625003814697266
    4. '<|end|>' → logprob: -13.875003814697266
    5. '0' → logprob: -15.750003814697266
    6. ')' → logprob: -16.437503814697266
    7. 'h' → logprob: -16.562503814697266
    8. '```' → logprob: -17.062503814697266
    9. 'r' → logprob: -17.187503814697266
    10. '   ' → logprob: -17.187503814697266

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006958735757507384
    2. '0' → logprob: -7.750695705413818
    3. ' ,' → logprob: -8.250696182250977
    4. '<|end|>' → logprob: -13.375696182250977
    5. '),' → logprob: -14.000696182250977
    6. ')' → logprob: -14.750696182250977
    7. '```' → logprob: -14.875696182250977
    8. ' ' → logprob: -15.438196182250977
    9. '‌,' → logprob: -16.000696182250977
    10. ',
' → logprob: -16.563196182250977

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.750028610229492
    3. '1' → logprob: -12.750028610229492
    4. ',' → logprob: -13.000028610229492
    5. '<|end|>' → logprob: -13.375028610229492
    6. '```' → logprob: -15.625028610229492
    7. ')' → logprob: -16.125028610229492
    8. '۰' → logprob: -16.187528610229492
    9. '-' → logprob: -17.187528610229492
    10. ' ,' → logprob: -17.437528610229492

Token 76: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.04883148521184921
    2. '),' → logprob: -3.0488314628601074
    3. ')]' → logprob: -9.048831939697266
    4. ' ),' → logprob: -9.673831939697266
    5. ')' → logprob: -10.298831939697266
    6. ',' → logprob: -11.423831939697266
    7. '],[' → logprob: -12.173831939697266
    8. '),
' → logprob: -12.798831939697266
    9. ')],' → logprob: -13.173831939697266
    10. ')][' → logprob: -13.798831939697266

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.9888433093437925e-05
    2. ' ' → logprob: -11.000040054321289
    3. ',' → logprob: -11.500040054321289
    4. '-' → logprob: -11.625040054321289
    5. '1' → logprob: -12.750040054321289
    6. '```' → logprob: -14.937540054321289
    7. ')' → logprob: -15.937540054321289
    8. '۰' → logprob: -16.00004005432129
    9. ',-' → logprob: -16.43754005432129
    10. ' ' → logprob: -16.93754005432129

Token 78: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.12724389135837555
    2. ',' → logprob: -2.127243995666504
    3. '-' → logprob: -8.127243995666504
    4. '1' → logprob: -11.627243995666504
    5. ',-

' → logprob: -13.002243995666504
    6. '",-' → logprob: -13.752243995666504
    7. ')' → logprob: -13.877243995666504
    8. ' ,-' → logprob: -13.877243995666504
    9. ',-
' → logprob: -14.002243995666504
    10. ',--' → logprob: -14.252243995666504

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.500000953674316
    3. ')]' → logprob: -15.125000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '```' → logprob: -17.187501907348633
    6. '-' → logprob: -17.562501907348633
    7. ']]' → logprob: -18.312501907348633
    8. ')>' → logprob: -18.812501907348633
    9. ']' → logprob: -19.000001907348633
    10. '">' → logprob: -19.062501907348633

Token 80: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.39362016320228577
    2. ')' → logprob: -1.1436201333999634
    3. '):' → logprob: -5.143620014190674
    4. ']' → logprob: -7.643620014190674
    5. ')])' → logprob: -8.518620491027832
    6. ' )' → logprob: -9.768620491027832
    7. '),' → logprob: -10.643620491027832
    8. ')][' → logprob: -10.768620491027832
    9. ':' → logprob: -11.143620491027832
    10. ']:' → logprob: -11.268620491027832

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006568295415490866
    2. '<|end|>' → logprob: -5.631568431854248
    3. '               ' → logprob: -6.631568431854248
    4. ',' → logprob: -7.381568431854248
    5. ':
' → logprob: -7.881568431854248
    6. '):' → logprob: -7.881568431854248
    7. '           ' → logprob: -9.00656795501709
    8. ' :' → logprob: -10.13156795501709
    9. '<|end|>' → logprob: -10.38156795501709
    10. ')' → logprob: -11.63156795501709

Token 82: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17312029004096985
    2. '<|end|>' → logprob: -2.2981202602386475
    3. ' ' → logprob: -3.1731202602386475
    4. '                ' → logprob: -5.173120498657227
    5. ' 
' → logprob: -5.673120498657227
    6. '            ' → logprob: -5.798120498657227
    7. '           ' → logprob: -6.298120498657227
    8. '                
' → logprob: -7.173120498657227
    9. '              ' → logprob: -7.423120498657227
    10. '             ' → logprob: -8.673120498657227

Token 83: ' nr' (ID: 24055)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17186808586120605
    2. 'n' → logprob: -2.546868085861206
    3. '                ' → logprob: -3.671868085861206
    4. '<|end|>' → logprob: -4.171868324279785
    5. '               ' → logprob: -4.546868324279785
    6. ' 
' → logprob: -4.796868324279785
    7. '                   ' → logprob: -5.671868324279785
    8. '            ' → logprob: -5.921868324279785
    9. 'r' → logprob: -6.296868324279785
    10. 's' → logprob: -6.546868324279785

Token 84: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5241677761077881
    2. '=' → logprob: -0.8991677761077881
    3. ',' → logprob: -6.899168014526367
    4. '=r' → logprob: -10.524168014526367
    5. ' ,' → logprob: -13.149168014526367
    6. ' ' → logprob: -13.274168014526367
    7. '=n' → logprob: -13.524168014526367
    8. ' =)' → logprob: -14.524168014526367
    9. '>' → logprob: -14.774168014526367
    10. ')' → logprob: -14.774168014526367

Token 85: ' nc' (ID: 39841)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9056627750396729
    2. ' =' → logprob: -1.7806627750396729
    3. 'w' → logprob: -1.9056627750396729
    4. ' c' → logprob: -2.030662775039673
    5. 'r' → logprob: -2.780662775039673
    6. '<|end|>' → logprob: -3.530662775039673
    7. '=' → logprob: -4.405662536621094
    8. 'nc' → logprob: -4.405662536621094
    9. ' w' → logprob: -4.530662536621094
    10. ' r' → logprob: -5.280662536621094

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408178448677063
    2. ' =' → logprob: -0.9740817546844482
    3. ')' → logprob: -12.974081993103027
    4. ' ' → logprob: -14.599081993103027
    5. '<|end|>' → logprob: -14.724081993103027
    6. '=r' → logprob: -15.474081993103027
    7. ',' → logprob: -15.974081993103027
    8. ']' → logprob: -15.974081993103027
    9. ' =
' → logprob: -15.974081993103027
    10. '=s' → logprob: -16.22408103942871

Token 87: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5759895443916321
    2. 'r' → logprob: -0.8259895443916321
    3. ' ' → logprob: -10.075989723205566
    4. '<|end|>' → logprob: -12.450989723205566
    5. 'h' → logprob: -14.075989723205566
    6. ' h' → logprob: -14.200989723205566
    7. '  ' → logprob: -14.950989723205566
    8. '    ' → logprob: -14.950989723205566
    9. '(r' → logprob: -15.325989723205566
    10. '	r' → logprob: -15.450989723205566

Token 88: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06196891888976097
    2. ' +' → logprob: -2.8119688034057617
    3. '<|end|>' → logprob: -13.936968803405762
    4. '＋' → logprob: -16.061969757080078
    5. '+r' → logprob: -16.061969757080078
    6. ' plus' → logprob: -16.811969757080078
    7. ' ' → logprob: -17.311969757080078
    8. '+
' → logprob: -17.936969757080078
    9. '+xml' → logprob: -17.936969757080078
    10. '+k' → logprob: -18.811969757080078

Token 89: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -1.0280383548888494e-06
    2. ' dr' → logprob: -14.000000953674316
    3. 'd' → logprob: -16.000001907348633
    4. '	dr' → logprob: -17.500001907348633
    5. ' ' → logprob: -19.000001907348633
    6. '_dr' → logprob: -19.750001907348633
    7. '(dr' → logprob: -19.875001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '<|end|>' → logprob: -20.250001907348633
    10. '1' → logprob: -20.750001907348633

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013091674773022532
    2. ' ,' → logprob: -6.751309394836426
    3. ',w' → logprob: -9.876309394836426
    4. ',n' → logprob: -10.001309394836426
    5. ',c' → logprob: -10.126309394836426
    6. ',
' → logprob: -14.626309394836426
    7. '<|end|>' → logprob: -14.876309394836426
    8. ' ' → logprob: -15.126309394836426
    9. '           ' → logprob: -15.376309394836426
    10. '               ' → logprob: -15.751309394836426

Token 91: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.11284232884645462
    2. 'c' → logprob: -2.237842321395874
    3. ' ' → logprob: -11.237842559814453
    4. ' w' → logprob: -12.487842559814453
    5. 'w' → logprob: -13.737842559814453
    6. ' ' → logprob: -14.362842559814453
    7. '	c' → logprob: -14.487842559814453
    8. '    ' → logprob: -15.112842559814453
    9. '   ' → logprob: -15.862842559814453
    10. '  ' → logprob: -16.487842559814453

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.836499985889532e-05
    2. '+c' → logprob: -10.3750581741333
    3. ' +' → logprob: -10.6250581741333
    4. '+w' → logprob: -13.5000581741333
    5. '+n' → logprob: -14.5000581741333
    6. '<|end|>' → logprob: -15.0000581741333
    7. '+d' → logprob: -15.6250581741333
    8. '+r' → logprob: -16.250059127807617
    9. '+C' → logprob: -16.625059127807617
    10. '+s' → logprob: -17.500059127807617

Token 93: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.09042397886514664
    2. 'c' → logprob: -2.465424060821533
    3. '1' → logprob: -6.715424060821533
    4. ' dc' → logprob: -8.715423583984375
    5. 'd' → logprob: -9.715423583984375
    6. ' ' → logprob: -10.840423583984375
    7. '```' → logprob: -12.215423583984375
    8. '  ' → logprob: -12.340423583984375
    9. '<|end|>' → logprob: -12.590423583984375
    10. '0' → logprob: -13.215423583984375

Token 94: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27415671944618225
    2. '<|end|>' → logprob: -1.8991566896438599
    3. '               ' → logprob: -2.7741568088531494
    4. '
' → logprob: -5.14915657043457
    5. ' ' → logprob: -5.52415657043457
    6. '<|end|>' → logprob: -5.77415657043457
    7. ')' → logprob: -5.89915657043457
    8. ' if' → logprob: -6.02415657043457
    9. '                   ' → logprob: -6.77415657043457
    10. '            
' → logprob: -6.89915657043457

Token 96: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1434338241815567
    2. ' if' → logprob: -2.5184338092803955
    3. '                ' → logprob: -4.018434047698975
    4. 'if' (adapté à ' if') → logprob: -4.268434047698975
    5. '            ' → logprob: -4.393434047698975
    6. '               ' → logprob: -5.768434047698975
    7. '           ' → logprob: -6.018434047698975
    8. ' 
' → logprob: -7.643434047698975
    9. '             
' → logprob: -8.393433570861816
    10. '                    ' → logprob: -8.518433570861816

Token 97: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16028515994548798
    2. ' ' → logprob: -1.9102851152420044
    3. 'nr' → logprob: -10.410284996032715
    4. ' nr' → logprob: -11.285284996032715
    5. ' not' → logprob: -12.160284996032715
    6. ' (' → logprob: -12.285284996032715
    7. ' ' → logprob: -13.160284996032715
    8. '(' → logprob: -13.285284996032715
    9. '  ' → logprob: -13.910284996032715
    10. 'not' → logprob: -14.035284996032715

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004304307512938976
    2. ' ' → logprob: -5.5043044090271
    3. 'nr' → logprob: -8.754303932189941
    4. ')' → logprob: -10.004303932189941
    5. ' nr' → logprob: -11.379303932189941
    6. ' )' → logprob: -13.379303932189941
    7. '(' → logprob: -13.629303932189941
    8. '   ' → logprob: -13.754303932189941
    9. ' not' → logprob: -14.191803932189941
    10. '  ' → logprob: -14.441803932189941

Token 99: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31335607171058655
    2. ' <=' → logprob: -1.3133560419082642
    3. ')' → logprob: -10.188356399536133
    4. ')<=' → logprob: -10.438356399536133
    5. '<' → logprob: -10.688356399536133
    6. ']<=' → logprob: -13.813356399536133
    7. 'le' → logprob: -14.563356399536133
    8. ',' → logprob: -14.688356399536133
    9. '<|end|>' → logprob: -14.813356399536133
    10. ' <' → logprob: -14.938356399536133

Token 100: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' → logprob: -0.0007101670489646494
    2. ' nr' → logprob: -7.2507100105285645
    3. '_nr' → logprob: -16.125709533691406
    4. '.nr' → logprob: -16.750709533691406
    5. 'nc' → logprob: -18.125709533691406
    6. 'n' → logprob: -18.250709533691406
    7. ' ' → logprob: -18.875709533691406
    8. '
' → logprob: -19.250709533691406
    9. ' ' → logprob: -19.500709533691406
    10. '	n' → logprob: -20.000709533691406

Token 101: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00012415809032972902
    2. ' <' → logprob: -9.250123977661133
    3. 'and' → logprob: -10.750123977661133
    4. ' and' → logprob: -12.375123977661133
    5. ')' → logprob: -13.875123977661133
    6. ')<' → logprob: -14.500123977661133
    7. '<len' → logprob: -15.250123977661133
    8. '<n' → logprob: -16.000123977661133
    9. '<
' → logprob: -16.500123977661133
    10. '<w' → logprob: -16.750123977661133

Token 102: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.02630285546183586
    2. ' h' → logprob: -3.6513028144836426
    3. ' ' → logprob: -13.4013032913208
    4. '	h' → logprob: -14.1513032913208
    5. '   ' → logprob: -15.5263032913208
    6. ')' → logprob: -15.6513032913208
    7. '  ' → logprob: -17.526302337646484
    8. '
' → logprob: -18.026302337646484
    9. ' ' → logprob: -18.401302337646484
    10. '    ' → logprob: -18.526302337646484

Token 103: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31563422083854675
    2. ')' → logprob: -1.5656342506408691
    3. 'and' → logprob: -2.815634250640869
    4. ' )' → logprob: -6.315634250640869
    5. ' ' → logprob: -10.190633773803711
    6. '   ' → logprob: -13.815633773803711
    7. '               ' → logprob: -13.815633773803711
    8. '           ' → logprob: -13.940633773803711
    9. '       ' → logprob: -13.940633773803711
    10. '        ' → logprob: -14.440633773803711

Token 104: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868810832500458
    2. 'and' → logprob: -1.1368811130523682
    3. ' ' → logprob: -11.761880874633789
    4. ')' → logprob: -14.761880874633789
    5. '           ' → logprob: -14.761880874633789
    6. '	and' → logprob: -15.011880874633789
    7. '        ' → logprob: -15.636880874633789
    8. '    ' → logprob: -15.761880874633789
    9. '               ' → logprob: -15.761880874633789
    10. '                ' → logprob: -16.38688087463379

Token 105: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759865641593933
    2. ' (' → logprob: -0.8259865641593933
    3. '                ' → logprob: -10.575986862182617
    4. '0' → logprob: -11.325986862182617
    5. '               ' → logprob: -12.075986862182617
    6. ' ' → logprob: -13.575986862182617
    7. '                   ' → logprob: -14.325986862182617
    8. '              ' → logprob: -14.950986862182617
    9. '            ' → logprob: -15.200986862182617
    10. '                 ' → logprob: -15.325986862182617

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003541734768077731
    2. ' ' → logprob: -8.000353813171387
    3. '(' → logprob: -11.125353813171387
    4. ')' → logprob: -14.125353813171387
    5. '   ' → logprob: -14.375353813171387
    6. ' (' → logprob: -14.375353813171387
    7. '                   ' → logprob: -14.750353813171387
    8. '               ' → logprob: -14.750353813171387
    9. '  ' → logprob: -15.375353813171387
    10. 'w' → logprob: -15.500353813171387

Token 107: ' <=' (ID: 5017)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.32643890380859375
    2. ' <=' → logprob: -1.5764389038085938
    3. ' w' → logprob: -2.9514389038085938
    4. '<=' → logprob: -4.201438903808594
    5. ' <' → logprob: -6.201438903808594
    6. ' ' → logprob: -6.451438903808594
    7. '<' → logprob: -7.701438903808594
    8. 'c' → logprob: -9.201438903808594
    9. ')' → logprob: -9.451438903808594
    10. '<|end|>' → logprob: -9.951438903808594

Token 108: ' nc' (ID: 39841)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.11285030841827393
    2. ' w' → logprob: -2.2378501892089844
    3. ' ' → logprob: -11.987850189208984
    4. '   ' → logprob: -12.237850189208984
    5. 'wc' → logprob: -12.362850189208984
    6. '	w' → logprob: -12.987850189208984
    7. 'nc' → logprob: -13.487850189208984
    8. ')' → logprob: -13.612850189208984
    9. '  ' → logprob: -13.737850189208984
    10. 'c' → logprob: -13.987850189208984

Token 109: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31333836913108826
    2. '<' → logprob: -1.3133383989334106
    3. 'w' → logprob: -10.188338279724121
    4. '<w' → logprob: -10.938338279724121
    5. ' ' → logprob: -11.063338279724121
    6. ')' → logprob: -13.063338279724121
    7. ' w' → logprob: -13.438338279724121
    8. '<|end|>' → logprob: -13.563338279724121
    9. ')<' → logprob: -15.563338279724121
    10. ' ' → logprob: -15.938338279724121

Token 110: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.018167966976761818
    2. ' w' → logprob: -4.018167972564697
    3. ')' → logprob: -11.268167495727539
    4. ' ' → logprob: -12.643167495727539
    5. '	w' → logprob: -14.143167495727539
    6. '   ' → logprob: -14.393167495727539
    7. '),' → logprob: -16.58066749572754
    8. '  ' → logprob: -16.70566749572754
    9. '>w' → logprob: -16.70566749572754
    10. ' ' → logprob: -16.70566749572754

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07281810790300369
    2. ' and' → logprob: -2.9478180408477783
    3. ' )' → logprob: -4.947818279266357
    4. '):' → logprob: -4.947818279266357
    5. 'and' → logprob: -5.697818279266357
    6. '):
' → logprob: -9.4478178024292
    7. ' ):' → logprob: -9.8228178024292
    8. '                   ' → logprob: -10.5728178024292
    9. '               ' → logprob: -10.5728178024292
    10. '                       ' → logprob: -11.8228178024292

Token 112: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04520414397120476
    2. 'and' → logprob: -3.1702041625976562
    3. '               ' → logprob: -6.795204162597656
    4. '                   ' → logprob: -7.795204162597656
    5. ':' → logprob: -8.170204162597656
    6. '                       ' → logprob: -9.170204162597656
    7. '           ' → logprob: -9.170204162597656
    8. ':
' → logprob: -9.795204162597656
    9. '                           ' → logprob: -10.420204162597656
    10. ' ' → logprob: -10.420204162597656

Token 113: ' (' (ID: 350)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5773978233337402
    2. ' grid' → logprob: -0.8273978233337402
    3. '(grid' → logprob: -6.57739782333374
    4. ' (' → logprob: -10.202398300170898
    5. '	grid' → logprob: -11.702398300170898
    6. ' ' → logprob: -12.202398300170898
    7. '   ' → logprob: -12.952398300170898
    8. '                   ' → logprob: -13.202398300170898
    9. ':grid' → logprob: -13.202398300170898
    10. '(' → logprob: -13.327398300170898

Token 114: 'grid' (ID: 7886)
  Prédit: 'grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.001752891344949603
    2. ' grid' → logprob: -6.376752853393555
    3. ')' → logprob: -10.751752853393555
    4. '(grid' → logprob: -11.376752853393555
    5. '           ' → logprob: -12.626752853393555
    6. '               ' → logprob: -12.751752853393555
    7. '   ' → logprob: -12.751752853393555
    8. '                   ' → logprob: -13.126752853393555
    9. '	grid' → logprob: -13.126752853393555
    10. ' ' → logprob: -14.001752853393555

Token 115: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0004411591507960111
    2. '[' → logprob: -8.625441551208496
    3. ')[' → logprob: -8.875441551208496
    4. '][' → logprob: -9.625441551208496
    5. '[
' → logprob: -10.500441551208496
    6. ')' → logprob: -12.000441551208496
    7. 'nr' → logprob: -12.625441551208496
    8. ' [' → logprob: -13.125441551208496
    9. '[r' → logprob: -13.250441551208496
    10. '
' → logprob: -13.250441551208496

Token 116: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00010509284038562328
    2. '][' → logprob: -10.000104904174805
    3. '[' → logprob: -10.250104904174805
    4. '[r' → logprob: -12.000104904174805
    5. ']' → logprob: -12.500104904174805
    6. 'р' → logprob: -12.500104904174805
    7. '```' → logprob: -12.750104904174805
    8. 'or' → logprob: -13.750104904174805
    9. 'rr' → logprob: -14.125104904174805
    10. 'R' → logprob: -14.125104904174805

Token 117: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003597760514821857
    2. ']' → logprob: -8.125359535217285
    3. ' ][' → logprob: -10.125359535217285
    4. '[' → logprob: -11.250359535217285
    5. '"][' → logprob: -13.000359535217285
    6. ')[' → logprob: -13.250359535217285
    7. '   ' → logprob: -13.375359535217285
    8. ''][' → logprob: -13.500359535217285
    9. '[c' → logprob: -13.625359535217285
    10. '[n' → logprob: -14.750359535217285

Token 118: 'nc' (ID: 24825)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2815137505531311
    2. 'nc' → logprob: -1.4065136909484863
    3. 'n' → logprob: -8.781514167785645
    4. '][' → logprob: -10.156514167785645
    5. ' nc' → logprob: -10.656514167785645
    6. ' ' → logprob: -10.781514167785645
    7. ')' → logprob: -10.781514167785645
    8. '[' → logprob: -10.781514167785645
    9. '[c' → logprob: -11.281514167785645
    10. '   ' → logprob: -11.281514167785645

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3987649083137512
    2. ']==' → logprob: -1.1487648487091064
    3. '==' → logprob: -4.7737650871276855
    4. ' ==' → logprob: -6.6487650871276855
    5. ']=='' → logprob: -7.0237650871276855
    6. ')' → logprob: -7.3987650871276855
    7. ' ]' → logprob: -8.898764610290527
    8. '']' → logprob: -9.023764610290527
    9. '']==' → logprob: -9.023764610290527
    10. ')==' → logprob: -9.148764610290527

Token 120: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11140431463718414
    2. ' ==' → logprob: -2.3614044189453125
    3. ']==' → logprob: -5.4864044189453125
    4. ')' → logprob: -5.9864044189453125
    5. ']' → logprob: -6.1114044189453125
    6. '=='' → logprob: -6.9864044189453125
    7. '#' → logprob: -8.236404418945312
    8. '=' → logprob: -8.361404418945312
    9. ')==' → logprob: -8.361404418945312
    10. '==
' → logprob: -8.361404418945312

Token 121: ' '#' (ID: 11284)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.020662866532802582
    2. ' '#' → logprob: -3.895662784576416
    3. ' '#'' → logprob: -10.270663261413574
    4. ''' → logprob: -10.645663261413574
    5. '"#' → logprob: -10.770663261413574
    6. ' ' → logprob: -11.395663261413574
    7. '('#' → logprob: -11.520663261413574
    8. '   ' → logprob: -12.395663261413574
    9. '  ' → logprob: -12.895663261413574
    10. '	' → logprob: -13.020663261413574

Token 122: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6544395089149475
    2. '):
' → logprob: -0.7794395089149475
    3. ')' → logprob: -4.029439449310303
    4. ''):
' → logprob: -6.029439449310303
    5. ''):' → logprob: -6.904439449310303
    6. '):

' → logprob: -9.029439926147461
    7. '               ' → logprob: -9.904439926147461
    8. ':' → logprob: -9.904439926147461
    9. '):
' → logprob: -9.904439926147461
    10. ' ):
' → logprob: -10.654439926147461

Token 123: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5641255974769592
    2. '               ' → logprob: -0.9391255974769592
    3. ' cnt' → logprob: -3.5641255378723145
    4. 'cnt' → logprob: -5.1891255378723145
    5. '                       ' → logprob: -6.1891255378723145
    6. '
' → logprob: -6.5641255378723145
    7. '                    
' → logprob: -6.8141255378723145
    8. '           ' → logprob: -7.8141255378723145
    9. '                
' → logprob: -7.9391255378723145
    10. '	cnt' → logprob: -8.314126014709473

Token 124: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0023592368233948946
    2. ' cnt' → logprob: -6.127359390258789
    3. '               ' → logprob: -9.752359390258789
    4. '                   ' → logprob: -10.002359390258789
    5. '	cnt' → logprob: -10.252359390258789
    6. '
' → logprob: -10.627359390258789
    7. '   ' → logprob: -12.127359390258789
    8. '           ' → logprob: -13.252359390258789
    9. '                    
' → logprob: -13.752359390258789
    10. '[cnt' → logprob: -14.377359390258789

Token 125: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04394388943910599
    2. ' +=' → logprob: -3.1689438819885254
    3. '+' → logprob: -7.043943881988525
    4. '=' → logprob: -9.918944358825684
    5. ']+=' → logprob: -12.168944358825684
    6. '>' → logprob: -12.293944358825684
    7. '>=' → logprob: -12.668944358825684
    8. '<|end|>' → logprob: -12.918944358825684
    9. '   ' → logprob: -13.168944358825684
    10. '+='' → logprob: -14.043944358825684

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.876928329467773
    4. '   ' → logprob: -18.501928329467773
    5. '2' → logprob: -18.876928329467773
    6. '<|end|>' → logprob: -18.876928329467773
    7. '```' → logprob: -19.564428329467773
    8. '  ' → logprob: -19.814428329467773
    9. '１' → logprob: -20.626928329467773
    10. '۱' → logprob: -21.001928329467773

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.0000057220459
    4. '```' → logprob: -17.9375057220459
    5. '１' → logprob: -18.6250057220459
    6. '2' → logprob: -18.9375057220459
    7. ')' → logprob: -19.3750057220459
    8. '`' → logprob: -19.6875057220459
    9. '۱' → logprob: -19.8750057220459
    10. '  ' → logprob: -20.0000057220459

Token 128: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5475963950157166
    2. '
' → logprob: -1.0475964546203613
    3. ' 
' → logprob: -3.1725964546203613
    4. ' ' → logprob: -4.797596454620361
    5. '            
' → logprob: -4.797596454620361
    6. '<|end|>' → logprob: -6.297596454620361
    7. '       ' → logprob: -6.422596454620361
    8. '               ' → logprob: -6.547596454620361
    9. '            ' → logprob: -6.922596454620361
    10. 'if' → logprob: -7.172596454620361

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02192975953221321
    2. '
' → logprob: -4.021929740905762
    3. ' 
' → logprob: -6.646929740905762
    4. '            
' → logprob: -7.021929740905762
    5. ' if' → logprob: -7.521929740905762
    6. ' ' → logprob: -8.646929740905762
    7. '  
' → logprob: -8.896929740905762
    8. '       ' → logprob: -8.896929740905762
    9. '<|end|>' → logprob: -8.896929740905762
    10. '               ' → logprob: -9.271929740905762

Token 130: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06382278352975845
    2. '           ' → logprob: -2.8138227462768555
    3. ' if' → logprob: -6.3138227462768555
    4. '            
' → logprob: -11.688822746276855
    5. '
' → logprob: -11.813822746276855
    6. '       ' → logprob: -11.813822746276855
    7. '               ' → logprob: -12.313822746276855
    8. 'If' → logprob: -12.688822746276855
    9. '```' → logprob: -12.688822746276855
    10. ' ' → logprob: -13.313822746276855

Token 131: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3869488537311554
    2. ' cnt' → logprob: -1.136948823928833
    3. ' not' → logprob: -10.136948585510254
    4. ' ' → logprob: -11.386948585510254
    5. '(cnt' → logprob: -11.636948585510254
    6. '	cnt' → logprob: -12.011948585510254
    7. 'not' → logprob: -12.761948585510254
    8. 'cn' → logprob: -13.011948585510254
    9. 'ct' → logprob: -13.011948585510254
    10. '   ' → logprob: -13.761948585510254

Token 132: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.210645854473114
    2. ' ==' → logprob: -1.7106459140777588
    3. '0' → logprob: -4.83564567565918
    4. '=' → logprob: -7.46064567565918
    5. '<' → logprob: -7.58564567565918
    6. ' <' → logprob: -9.21064567565918
    7. ' ' → logprob: -10.83564567565918
    8. '>' → logprob: -10.96064567565918
    9. ' =' → logprob: -11.21064567565918
    10. '==
' → logprob: -12.33564567565918

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542940124869347
    2. ' ' → logprob: -3.895542860031128
    3. '4' → logprob: -14.270543098449707
    4. '2' → logprob: -16.27054214477539
    5. '1' → logprob: -16.27054214477539
    6. '   ' → logprob: -16.27054214477539
    7. '  ' → logprob: -17.64554214477539
    8. '000' → logprob: -17.89554214477539
    9. ' ' → logprob: -18.08304214477539
    10. '    ' → logprob: -18.33304214477539

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008055794751271605
    2. ' ' → logprob: -7.125805377960205
    3. '4' → logprob: -14.000805854797363
    4. '1' → logprob: -16.250804901123047
    5. '2' → logprob: -16.750804901123047
    6. '   ' → logprob: -17.000804901123047
    7. '۰' → logprob: -17.938304901123047
    8. '3' → logprob: -18.188304901123047
    9. '  ' → logprob: -18.313304901123047
    10. '000' → logprob: -18.438304901123047

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019458913011476398
    2. ':
' → logprob: -6.251945972442627
    3. ' :' → logprob: -11.251945495605469
    4. '):' → logprob: -13.626945495605469
    5. ':return' → logprob: -14.251945495605469
    6. ':

' → logprob: -14.751945495605469
    7. '           ' → logprob: -14.751945495605469
    8. ' :
' → logprob: -15.126945495605469
    9. '   ' → logprob: -15.251945495605469
    10. ':
' → logprob: -15.626945495605469

Token 136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004837007261812687
    2. ' result' → logprob: -6.3798370361328125
    3. '           ' → logprob: -6.6298370361328125
    4. 'result' → logprob: -6.7548370361328125
    5. '                
' → logprob: -8.004837036132812
    6. '                   ' → logprob: -9.504837036132812
    7. '   ' → logprob: -9.629837036132812
    8. ' 
' → logprob: -10.129837036132812
    9. '              ' → logprob: -10.129837036132812
    10. '
' → logprob: -10.504837036132812

Token 137: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.016217011958360672
    2. ' result' → logprob: -4.141217231750488
    3. '
' → logprob: -9.266217231750488
    4. 'False' → logprob: -10.391217231750488
    5. ' 
' → logprob: -11.266217231750488
    6. ' False' → logprob: -11.516217231750488
    7. '   ' → logprob: -11.891217231750488
    8. 'r' → logprob: -12.266217231750488
    9. '           ' → logprob: -12.266217231750488
    10. '    
' → logprob: -13.141217231750488

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632700465619564
    2. '=' → logprob: -3.651326894760132
    3. ' ' → logprob: -10.776327133178711
    4. '=False' → logprob: -12.276327133178711
    5. ' =)' → logprob: -15.151327133178711
    6. ' False' → logprob: -15.526327133178711
    7. ' ==' → logprob: -15.526327133178711
    8. 'False' → logprob: -15.776327133178711
    9. ' =
' → logprob: -16.65132713317871
    10. '.' → logprob: -16.77632713317871

Token 139: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5759394764900208
    2. ' False' → logprob: -0.8259394764900208
    3. ' ' → logprob: -17.700939178466797
    4. ' false' → logprob: -18.075939178466797
    5. 'F' → logprob: -18.200939178466797
    6. '(False' → logprob: -18.200939178466797
    7. '=False' → logprob: -18.325939178466797
    8. '.False' → logprob: -19.075939178466797
    9. 'True' → logprob: -19.575939178466797
    10. ' True' → logprob: -19.700939178466797

Token 140: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4945262372493744
    2. '
' → logprob: -1.1195262670516968
    3. '\n' → logprob: -3.2445261478424072
    4. '<|end|>' → logprob: -4.244526386260986
    5. '            
' → logprob: -6.244526386260986
    6. 'newline' → logprob: -6.744526386260986
    7. '' → logprob: -6.994526386260986
    8. ' 
' → logprob: -7.119526386260986
    9. '           ' → logprob: -7.244526386260986
    10. '               ' → logprob: -7.369526386260986

Token 141: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8558964133262634
    2. 'print' → logprob: -0.9808964133262634
    3. '<|end|>' → logprob: -1.8558964729309082
    4. '\n' → logprob: -3.480896472930908
    5. ' 
' → logprob: -6.105896472930908
    6. ')' → logprob: -6.230896472930908
    7. '' → logprob: -6.355896472930908
    8. '#' → logprob: -6.730896472930908
    9. ' ' → logprob: -7.355896472930908
    10. '            
' → logprob: -7.605896472930908

Token 142: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.043881606310606
    2. 'result' → logprob: -3.79388165473938
    3. ' not' → logprob: -3.91888165473938
    4. 'not' → logprob: -7.918881416320801
    5. ' ' → logprob: -8.7938814163208
    6. ' ' → logprob: -10.1688814163208
    7. '  ' → logprob: -13.0438814163208
    8. '(result' → logprob: -13.2938814163208
    9. ' __' → logprob: -14.1688814163208
    10. '	result' → logprob: -14.2938814163208

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038055602461099625
    2. ':
' → logprob: -3.288055658340454
    3. 'print' → logprob: -12.413055419921875
    4. ' :' → logprob: -12.413055419921875
    5. ':

' → logprob: -12.663055419921875
    6. ':
' → logprob: -13.788055419921875
    7. ' :
' → logprob: -14.413055419921875
    8. '):
' → logprob: -15.413055419921875
    9. '):' → logprob: -15.538055419921875
    10. ' print' → logprob: -15.538055419921875

Token 144: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07485824078321457
    2. ' print' → logprob: -3.1998581886291504
    3. ':
' → logprob: -4.19985818862915
    4. '   ' → logprob: -4.82485818862915
    5. ':' → logprob: -5.19985818862915
    6. '
' → logprob: -7.19985818862915
    7. '\n' → logprob: -7.44985818862915
    8. '    
' → logprob: -7.82485818862915
    9. '	print' → logprob: -8.449858665466309
    10. '       ' → logprob: -9.199858665466309

Token 145: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5783384442329407
    2. 'print' (adapté à ' print') → logprob: -0.8283384442329407
    3. '   ' → logprob: -6.078338623046875
    4. '	print' → logprob: -10.203338623046875
    5. '
' → logprob: -10.328338623046875
    6. '\n' → logprob: -11.328338623046875
    7. ' 
' → logprob: -11.703338623046875
    8. '    
' → logprob: -12.328338623046875
    9. '       ' → logprob: -13.203338623046875
    10. '```' → logprob: -13.328338623046875

Token 146: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.22258798778057098
    2. '(' → logprob: -1.7225879430770874
    3. '('' → logprob: -4.472588062286377
    4. '("#' → logprob: -5.097588062286377
    5. '"' → logprob: -6.472588062286377
    6. ' ("' → logprob: -6.847588062286377
    7. '('#' → logprob: -8.472587585449219
    8. ' "' → logprob: -8.722587585449219
    9. ' (' → logprob: -8.972587585449219
    10. 'Yes' → logprob: -9.597587585449219

Token 147: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.5825936198234558
    2. 'Possible' → logprob: -1.3325936794281006
    3. 'possible' → logprob: -2.4575936794281006
    4. 'YES' → logprob: -2.7075936794281006
    5. '#' → logprob: -4.2075934410095215
    6. 'im' → logprob: -5.3325934410095215
    7. ' possible' → logprob: -6.8325934410095215
    8. '"#' → logprob: -7.5825934410095215
    9. 'Poss' → logprob: -7.7075934410095215
    10. '"' → logprob: -7.7075934410095215

Token 148: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0002273774443892762
    2. '"
' → logprob: -8.500226974487305
    3. 'else' → logprob: -11.000226974487305
    4. '")' → logprob: -12.500226974487305
    5. '```' → logprob: -13.125226974487305
    6. ')' → logprob: -15.000226974487305
    7. '#else' → logprob: -15.625226974487305
    8. '">' → logprob: -15.750226974487305
    9. '"#' → logprob: -15.875226974487305
    10. '"

' → logprob: -16.125226974487305

Token 149: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0011703446507453918
    2. ' else' → logprob: -6.7511701583862305
    3. '	else' → logprob: -17.126171112060547
    4. 'el' → logprob: -18.251171112060547
    5. 'els' → logprob: -18.376171112060547
    6. 'e' → logprob: -18.501171112060547
    7. '
' → logprob: -18.751171112060547
    8. 'Else' → logprob: -18.876171112060547
    9. 'elses' → logprob: -18.876171112060547
    10. '    
' → logprob: -19.501171112060547

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009454108658246696
    2. ':
' → logprob: -7.000945568084717
    3. ' :' → logprob: -10.625945091247559
    4. '   ' → logprob: -11.750945091247559
    5. ' print' → logprob: -14.375945091247559
    6. ' :
' → logprob: -14.375945091247559
    7. 'print' → logprob: -15.250945091247559
    8. ':

' → logprob: -15.750945091247559
    9. '):' → logprob: -17.000946044921875
    10. ' ' → logprob: -17.125946044921875

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021179696545004845
    2. ' print' → logprob: -3.896179676055908
    3. '    ' → logprob: -7.646179676055908
    4. 'print' → logprob: -9.271180152893066
    5. '	print' → logprob: -10.521180152893066
    6. '       ' → logprob: -11.521180152893066
    7. '  ' → logprob: -12.146180152893066
    8. '"' → logprob: -12.271180152893066
    9. '   ' → logprob: -12.396180152893066
    10. '    
' → logprob: -13.021180152893066

Token 152: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.048707954585552216
    2. 'print' (adapté à ' print') → logprob: -3.048707962036133
    3. '   ' → logprob: -9.173707962036133
    4. '    ' → logprob: -11.798707962036133
    5. '	print' → logprob: -12.548707962036133
    6. '.print' → logprob: -13.298707962036133
    7. ' ' → logprob: -13.548707962036133
    8. '(print' → logprob: -13.798707962036133
    9. ' ' → logprob: -14.298707962036133
    10. ' prin' → logprob: -15.798707962036133

Token 153: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06331345438957214
    2. ' "' → logprob: -2.8133134841918945
    3. ' ' → logprob: -6.8133134841918945
    4. '(' → logprob: -8.563313484191895
    5. ' ' → logprob: -10.938313484191895
    6. '("' → logprob: -11.188313484191895
    7. ''' → logprob: -11.438313484191895
    8. '"No' → logprob: -12.063313484191895
    9. '"I' → logprob: -14.313313484191895
    10. ' ("' → logprob: -14.563313484191895

Token 154: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00012570773833431304
    2. '"No' → logprob: -9.000125885009766
    3. ' No' → logprob: -13.000125885009766
    4. 'NO' → logprob: -17.375125885009766
    5. '"' → logprob: -17.750125885009766
    6. '“No' → logprob: -19.000125885009766
    7. 'N' → logprob: -19.000125885009766
    8. '_No' → logprob: -19.125125885009766
    9. '(No' → logprob: -20.375125885009766
    10. ' ' → logprob: -21.000125885009766

Token 155: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -6.873571692267433e-05
    2. '")' → logprob: -9.750068664550781
    3. ')' → logprob: -12.250068664550781
    4. ')"' → logprob: -12.875068664550781
    5. '```' → logprob: -13.250068664550781
    6. '"
' → logprob: -14.250068664550781
    7. '()"' → logprob: -14.875068664550781
    8. ' "' → logprob: -15.750068664550781
    9. ''' → logprob: -16.75006866455078
    10. '">' → logprob: -16.75006866455078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 153
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 132
Précision stricte (1ère position): 46.41%
Précision adaptée (1ère position): 49.02%
Précision (top 10): 86.27%
================================================================================
