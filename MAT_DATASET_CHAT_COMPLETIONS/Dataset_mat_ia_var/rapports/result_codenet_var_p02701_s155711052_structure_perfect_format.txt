================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
result_dict = {}
for i in range(n):
    string = input()
    result_dict[string] = 1
print(len(result_dict.keys()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4112190902233124
    2. 'i' → logprob: -2.0362191200256348
    3. 's' → logprob: -2.4112191200256348
    4. 'if' → logprob: -2.9112191200256348
    5. '#' → logprob: -4.911219120025635
    6. ' ' → logprob: -5.036219120025635
    7. 'x' → logprob: -5.036219120025635
    8. 'f' → logprob: -5.536219120025635
    9. ''' → logprob: -5.536219120025635
    10. 'sum' → logprob: -5.536219120025635

Token 6: '_dict' (ID: 11295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16768422722816467
    2. '=' → logprob: -2.542684316635132
    3. '+' → logprob: -3.542684316635132
    4. ' =' → logprob: -3.792684316635132
    5. ' +=' → logprob: -5.167684078216553
    6. '(' → logprob: -5.667684078216553
    7. ')' → logprob: -6.042684078216553
    8. '[]' → logprob: -6.167684078216553
    9. '_' → logprob: -6.167684078216553
    10. '```' → logprob: -6.292684078216553

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004500023555010557
    2. '.' → logprob: -5.754499912261963
    3. '.setdefault' → logprob: -7.254499912261963
    4. '\[' → logprob: -8.754500389099121
    5. '[]' → logprob: -9.129500389099121
    6. '```' → logprob: -9.379500389099121
    7. '['' → logprob: -9.879500389099121
    8. ' =' → logprob: -10.254500389099121
    9. '.update' → logprob: -10.754500389099121
    10. '=' → logprob: -11.004500389099121

Token 8: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.3136208653450012
    2. '{}' → logprob: -1.3136208057403564
    3. ' {' → logprob: -8.313620567321777
    4. '{' → logprob: -9.688620567321777
    5. ' ' → logprob: -10.313620567321777
    6. ' {}\' → logprob: -11.938620567321777
    7. ' defaultdict' → logprob: -12.438620567321777
    8. ' {}
' → logprob: -12.563620567321777
    9. 'dict' → logprob: -13.438620567321777
    10. ' {})' → logprob: -13.938620567321777

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010216168593615294
    2. 'f' → logprob: -7.001021385192871
    3. ' for' → logprob: -9.751021385192871
    4. '
' → logprob: -10.501021385192871
    5. '```' → logprob: -11.626021385192871
    6. '[' → logprob: -12.376021385192871
    7. 'i' → logprob: -12.751021385192871
    8. 'n' → logprob: -13.376021385192871
    9. '' → logprob: -14.001021385192871
    10. '`' → logprob: -14.001021385192871

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03499765321612358
    2. ' i' → logprob: -3.4099977016448975
    3. '  ' → logprob: -6.909997463226318
    4. ' n' → logprob: -8.784997940063477
    5. 'i' → logprob: -10.034997940063477
    6. ' _' → logprob: -10.034997940063477
    7. '_' → logprob: -10.409997940063477
    8. ' ‌' → logprob: -10.409997940063477
    9. ' item' → logprob: -10.659997940063477
    10. ' x' → logprob: -12.534997940063477

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05991160869598389
    2. ' ' → logprob: -3.4349117279052734
    3. 'in' → logprob: -3.9349117279052734
    4. 'n' → logprob: -5.559911727905273
    5. ' n' → logprob: -6.434911727905273
    6. '  ' → logprob: -7.184911727905273
    7. ')' → logprob: -10.434911727905273
    8. '_' → logprob: -11.059911727905273
    9. '   ' → logprob: -11.059911727905273
    10. ' i' → logprob: -11.184911727905273

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03809623047709465
    2. 'range' → logprob: -3.2880961894989014
    3. ' ' → logprob: -10.28809642791748
    4. ' in' → logprob: -11.03809642791748
    5. ' n' → logprob: -13.28809642791748
    6. '	range' → logprob: -13.78809642791748
    7. 'in' → logprob: -15.03809642791748
    8. ')' → logprob: -15.03809642791748
    9. 'n' → logprob: -15.28809642791748
    10. '(range' → logprob: -15.53809642791748

Token 13: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25740888714790344
    2. '(n' → logprob: -1.507408857345581
    3. ' (' → logprob: -5.25740909576416
    4. '(range' → logprob: -9.00740909576416
    5. '(len' → logprob: -9.25740909576416
    6. '(i' → logprob: -10.50740909576416
    7. '```' → logprob: -13.00740909576416
    8. '((' → logprob: -13.75740909576416
    9. '`' → logprob: -14.00740909576416
    10. '(
' → logprob: -14.13240909576416

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31456974148750305
    2. ')' → logprob: -1.3145697116851807
    3. ':' → logprob: -7.43956995010376
    4. '+' → logprob: -7.43956995010376
    5. ' ):' → logprob: -10.064569473266602
    6. '):
' → logprob: -10.439569473266602
    7. ' )' → logprob: -10.814569473266602
    8. ',' → logprob: -11.689569473266602
    9. ' ' → logprob: -12.314569473266602
    10. '   ' → logprob: -12.439569473266602

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0820486843585968
    2. '    ' → logprob: -3.2070486545562744
    3. ' input' → logprob: -3.8320486545562744
    4. ' ' → logprob: -4.7070488929748535
    5. ' result' → logprob: -5.9570488929748535
    6. ' )' → logprob: -6.4570488929748535
    7. 'input' → logprob: -7.5820488929748535
    8. ' i' → logprob: -7.8320488929748535
    9. '_' → logprob: -7.9570488929748535
    10. ' []' → logprob: -8.207048416137695

Token 16: ' string' (ID: 1621)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1073555275797844
    2. '   ' → logprob: -2.9823555946350098
    3. 'line' → logprob: -4.48235559463501
    4. ' key' → logprob: -4.60735559463501
    5. ' input' → logprob: -4.98235559463501
    6. 'key' → logprob: -5.60735559463501
    7. 'input' → logprob: -5.60735559463501
    8. ' ' → logprob: -5.73235559463501
    9. ' user' → logprob: -5.85735559463501
    10. '    ' → logprob: -5.85735559463501

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030968131497502327
    2. 's' → logprob: -3.655968189239502
    3. '_' → logprob: -6.530968189239502
    4. '=' → logprob: -6.530968189239502
    5. '_input' → logprob: -7.405968189239502
    6. ' ' → logprob: -8.155967712402344
    7. ')' → logprob: -8.155967712402344
    8. ' s' → logprob: -8.780967712402344
    9. '```' → logprob: -9.655967712402344
    10. '[' → logprob: -9.905967712402344

Token 18: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06197776645421982
    2. 'input' → logprob: -2.8119778633117676
    3. '(input' → logprob: -12.43697738647461
    4. '=input' → logprob: -12.81197738647461
    5. ' str' → logprob: -14.18697738647461
    6. ' ' → logprob: -14.43697738647461
    7. ' int' → logprob: -15.06197738647461
    8. '"' → logprob: -15.06197738647461
    9. '   ' → logprob: -15.43697738647461
    10. 'str' → logprob: -15.56197738647461

Token 19: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022052090615034103
    2. '(' → logprob: -4.27205228805542
    3. '('' → logprob: -5.02205228805542
    4. '("("' → logprob: -7.89705228805542
    5. '().' → logprob: -8.647051811218262
    6. '())' → logprob: -8.647051811218262
    7. '("' → logprob: -9.022051811218262
    8. ')' → logprob: -9.272051811218262
    9. '```' → logprob: -9.647051811218262
    10. '"' → logprob: -9.897051811218262

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011363989673554897
    2. '    
' → logprob: -5.636363983154297
    3. '_' → logprob: -6.636363983154297
    4. '[' → logprob: -7.136363983154297
    5. ' if' → logprob: -7.136363983154297
    6. 'result' → logprob: -7.261363983154297
    7. ' ' → logprob: -7.386363983154297
    8. ')' → logprob: -7.386363983154297
    9. '
' → logprob: -7.511363983154297
    10. '    ' → logprob: -8.136363983154297

Token 21: ' result' (ID: 1534)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.355266809463501
    2. 'if' → logprob: -1.605266809463501
    3. 'result' (adapté à ' result') → logprob: -2.605266809463501
    4. '   ' → logprob: -4.605266571044922
    5. ' result' → logprob: -5.480266571044922
    6. '_' → logprob: -6.355266571044922
    7. ' 
' → logprob: -6.605266571044922
    8. ' ' → logprob: -6.730266571044922
    9. '    
' → logprob: -6.730266571044922
    10. '[' → logprob: -7.105266571044922

Token 22: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0020003693643957376
    2. '_' → logprob: -7.002000331878662
    3. '```' → logprob: -8.00200080871582
    4. '_d' → logprob: -8.75200080871582
    5. '[' → logprob: -8.75200080871582
    6. '_dic' → logprob: -8.87700080871582
    7. '_string' → logprob: -10.50200080871582
    8. '_str' → logprob: -10.62700080871582
    9. '_dictionary' → logprob: -10.62700080871582
    10. '\' → logprob: -10.87700080871582

Token 23: '[string' (ID: 29228)
  Prédit: '[string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[string' → logprob: -0.048752348870038986
    2. '[' → logprob: -3.0487523078918457
    3. '.setdefault' → logprob: -9.298752784729004
    4. '[String' → logprob: -10.923752784729004
    5. '[str' → logprob: -11.423752784729004
    6. '[...]' → logprob: -11.548752784729004
    7. '\[' → logprob: -11.673752784729004
    8. ' [' → logprob: -11.923752784729004
    9. '[]' → logprob: -12.173752784729004
    10. '['' → logprob: -13.173752784729004

Token 24: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006349971517920494
    2. ' ]' → logprob: -8.250635147094727
    3. ']=' → logprob: -8.500635147094727
    4. ']+=' → logprob: -8.750635147094727
    5. ')' → logprob: -12.500635147094727
    6. ')]' → logprob: -12.625635147094727
    7. '=' → logprob: -13.375635147094727
    8. '']' → logprob: -14.000635147094727
    9. '`]' → logprob: -14.500635147094727
    10. '])' → logprob: -14.625635147094727

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5105556845664978
    2. '=' → logprob: -1.1355557441711426
    3. ' +=' → logprob: -2.6355557441711426
    4. '+=' → logprob: -5.010555744171143
    5. ' ' → logprob: -9.260555267333984
    6. ']' → logprob: -10.135555267333984
    7. '[' → logprob: -10.135555267333984
    8. ']+=' → logprob: -10.510555267333984
    9. '+' → logprob: -11.135555267333984
    10. '```' → logprob: -11.885555267333984

Token 26: ' ' (ID: 220)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3894421458244324
    2. ' result' → logprob: -1.1394422054290771
    3. '0' → logprob: -6.764441967010498
    4. 'i' → logprob: -7.514441967010498
    5. ' i' → logprob: -7.639441967010498
    6. '1' → logprob: -8.389442443847656
    7. ' ' → logprob: -9.764442443847656
    8. '(result' → logprob: -10.389442443847656
    9. ' True' → logprob: -11.264442443847656
    10. 'True' → logprob: -11.389442443847656

Token 27: '1' (ID: 16)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018358182162046432
    2. ' result' → logprob: -4.26835823059082
    3. '0' → logprob: -6.26835823059082
    4. 'i' → logprob: -6.39335823059082
    5. '1' → logprob: -8.01835823059082
    6. ' i' → logprob: -8.64335823059082
    7. 'string' → logprob: -10.01835823059082
    8. ' ' → logprob: -10.76835823059082
    9. '(result' → logprob: -11.39335823059082
    10. 'True' → logprob: -11.76835823059082

Token 28: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13547050952911377
    2. '+' → logprob: -3.260470390319824
    3. ' else' → logprob: -3.260470390319824
    4. 'else' → logprob: -3.885470390319824
    5. '<|end|>' → logprob: -4.135470390319824
    6. ' elif' → logprob: -5.510470390319824
    7. ' 
' → logprob: -6.385470390319824
    8. 'elif' → logprob: -6.510470390319824
    9. '
' → logprob: -7.385470390319824
    10. '  
' → logprob: -7.385470390319824

Token 29: 'print' (ID: 1598)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14870665967464447
    2. '<|end|>' → logprob: -2.5237066745758057
    3. '+' → logprob: -3.1487066745758057
    4. 'else' → logprob: -5.773706436157227
    5. ' 
' → logprob: -6.648706436157227
    6. ' else' → logprob: -6.773706436157227
    7. 'elif' → logprob: -6.898706436157227
    8. '
' → logprob: -7.148706436157227
    9. '    ' → logprob: -7.273706436157227
    10. '  ' → logprob: -7.398706436157227

Token 30: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000610690622124821
    2. '("("' → logprob: -7.875610828399658
    3. '('' → logprob: -8.5006103515625
    4. '()' → logprob: -11.6256103515625
    5. '(result' → logprob: -12.1256103515625
    6. '(
' → logprob: -12.2506103515625
    7. '(len' → logprob: -13.2506103515625
    8. '((' → logprob: -14.1256103515625
    9. '("")' → logprob: -14.2506103515625
    10. '(

' → logprob: -14.2506103515625

Token 31: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.4741213321685791
    2. '(' → logprob: -0.9741213321685791
    3. ')' → logprob: -11.47412109375
    4. '(string' → logprob: -11.72412109375
    5. '(
' → logprob: -11.97412109375
    6. '()' → logprob: -12.47412109375
    7. '(

' → logprob: -12.72412109375
    8. '(results' → logprob: -12.84912109375
    9. 'result' → logprob: -13.09912109375
    10. '('' → logprob: -13.34912109375

Token 32: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.00017445837147533894
    2. '_' → logprob: -9.000174522399902
    3. '_dic' → logprob: -10.750174522399902
    4. '_d' → logprob: -11.500174522399902
    5. '_)' → logprob: -11.500174522399902
    6. ')' → logprob: -12.125174522399902
    7. ')_' → logprob: -14.125174522399902
    8. 'dict' → logprob: -14.125174522399902
    9. '))' → logprob: -14.500174522399902
    10. '_str' → logprob: -14.750174522399902

Token 33: '.keys' (ID: 18392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014164921827614307
    2. '))' → logprob: -4.264164924621582
    3. ')))' → logprob: -14.764164924621582
    4. ' )' → logprob: -15.014164924621582
    5. '})' → logprob: -15.264164924621582
    6. '])' → logprob: -15.889164924621582
    7. '(' → logprob: -16.514163970947266
    8. ')}' → logprob: -16.514163970947266
    9. ')`' → logprob: -16.889163970947266
    10. ')
' → logprob: -17.014163970947266

Token 34: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17781732976436615
    2. '()))' → logprob: -1.9278173446655273
    3. '()' → logprob: -4.177817344665527
    4. ')' → logprob: -6.302817344665527
    5. '))' → logprob: -8.802817344665527
    6. '(' → logprob: -9.802817344665527
    7. '())
' → logprob: -10.052817344665527
    8. '()
' → logprob: -12.177817344665527
    9. '()))
' → logprob: -12.177817344665527
    10. '().' → logprob: -12.927817344665527


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 40.62%
Précision adaptée (1ère position): 40.62%
Précision (top 10): 75.00%
================================================================================
