================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, c, d, e, k = [int(input()) for _ in range(6)]
a1 = [a, b, c, d, e]

import itertools as it
x1 = list(it.combinations(range(5), 2))

ans = "Yay!"
for i, j in x1:
    if abs(a1[i] - a1[j]) > k:
        ans = ":("
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.035714417695999146
    2. '+' → logprob: -3.7857143878936768
    3. ' =' → logprob: -4.785714626312256
    4. ',' → logprob: -5.660714626312256
    5. '+=' → logprob: -9.535714149475098
    6. '.' → logprob: -9.660714149475098
    7. ' ' → logprob: -9.660714149475098
    8. '*' → logprob: -9.660714149475098
    9. '```' → logprob: -10.035714149475098
    10. '_' → logprob: -10.035714149475098

Token 4: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2139989733695984
    2. ',' → logprob: -2.213999032974243
    3. ' =' → logprob: -3.088999032974243
    4. 'c' → logprob: -3.838999032974243
    5. ' ' → logprob: -4.838998794555664
    6. ',c' → logprob: -5.713998794555664
    7. '<|end|>' → logprob: -6.713998794555664
    8. ')' → logprob: -6.963998794555664
    9. '.' → logprob: -7.213998794555664
    10. '_' → logprob: -7.463998794555664

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16013993322849274
    2. '+' → logprob: -2.035140037536621
    3. ',' → logprob: -4.785140037536621
    4. ' =' → logprob: -5.035140037536621
    5. ')' → logprob: -7.035140037536621
    6. '```' → logprob: -8.535140037536621
    7. '[' → logprob: -8.660140037536621
    8. ' +' → logprob: -8.785140037536621
    9. '+=' → logprob: -8.785140037536621
    10. '<|end|>' → logprob: -8.910140037536621

Token 6: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31447094678878784
    2. ' =' → logprob: -1.4394710063934326
    3. 'd' → logprob: -3.8144710063934326
    4. ',' → logprob: -4.8144707679748535
    5. ')' → logprob: -7.3144707679748535
    6. ' ' → logprob: -7.6894707679748535
    7. '<|end|>' → logprob: -7.9394707679748535
    8. ',d' → logprob: -8.564471244812012
    9. '```' → logprob: -8.689471244812012
    10. '_' → logprob: -8.814471244812012

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034434832632541656
    2. ',' → logprob: -4.034434795379639
    3. ' =' → logprob: -4.784434795379639
    4. '+' → logprob: -5.409434795379639
    5. ')' → logprob: -6.659434795379639
    6. '<|end|>' → logprob: -7.784434795379639
    7. '(' → logprob: -8.034435272216797
    8. ';' → logprob: -8.159435272216797
    9. '.' → logprob: -8.659435272216797
    10. ' ' → logprob: -8.909435272216797

Token 8: ' e' (ID: 319)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009743100963532925
    2. ' =' → logprob: -4.7597432136535645
    3. ',' → logprob: -7.7597432136535645
    4. 'e' → logprob: -7.8847432136535645
    5. ')' → logprob: -9.009742736816406
    6. ' ' → logprob: -9.134742736816406
    7. '.' → logprob: -10.884742736816406
    8. '<|end|>' → logprob: -11.009742736816406
    9. '+' → logprob: -11.134742736816406
    10. ':' → logprob: -11.259742736816406

Token 9: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.047886259853839874
    2. ' =' → logprob: -3.797886371612549
    3. ',' → logprob: -4.172886371612549
    4. '+' → logprob: -6.172886371612549
    5. 'f' → logprob: -6.172886371612549
    6. '<|end|>' → logprob: -6.672886371612549
    7. ')' → logprob: -6.672886371612549
    8. '```' → logprob: -6.922886371612549
    9. '.' → logprob: -8.29788589477539
    10. ':' → logprob: -8.67288589477539

Token 10: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0628653764724731
    2. 'f' → logprob: -1.4378653764724731
    3. ' =' → logprob: -1.5628653764724731
    4. ' ' → logprob: -1.8128653764724731
    5. ',' → logprob: -3.9378652572631836
    6. ' f' → logprob: -4.312865257263184
    7. '<|end|>' → logprob: -4.937865257263184
    8. ')' → logprob: -6.312865257263184
    9. ',f' → logprob: -7.312865257263184
    10. ' ,' → logprob: -7.687865257263184

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025944221764802933
    2. ' =' → logprob: -4.275944232940674
    3. '+' → logprob: -5.275944232940674
    4. ',' → logprob: -5.525944232940674
    5. ')' → logprob: -7.400944232940674
    6. '[' → logprob: -7.775944232940674
    7. ':' → logprob: -8.025943756103516
    8. '(' → logprob: -8.025943756103516
    9. ' ' → logprob: -8.275943756103516
    10. '.' → logprob: -8.525943756103516

Token 12: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14799587428569794
    2. '0' → logprob: -2.147995948791504
    3. '1' → logprob: -4.647995948791504
    4. ' [' → logprob: -4.772995948791504
    5. '[' → logprob: -6.897995948791504
    6. '10' → logprob: -7.272995948791504
    7. 'input' → logprob: -8.772995948791504
    8. ' (' → logprob: -8.897995948791504
    9. ' input' → logprob: -9.022995948791504
    10. '5' → logprob: -9.147995948791504

Token 13: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5064200162887573
    2. ']' → logprob: -1.0064200162887573
    3. '1' → logprob: -3.506420135498047
    4. ']int' → logprob: -6.756420135498047
    5. '10' → logprob: -8.756420135498047
    6. '[]' → logprob: -8.756420135498047
    7. ' ' → logprob: -9.506420135498047
    8. 'a' → logprob: -10.006420135498047
    9. ' ]' → logprob: -10.256420135498047
    10. '][]' → logprob: -10.381420135498047

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48381534218788147
    2. ']' → logprob: -0.9838153123855591
    3. '(x' → logprob: -4.9838151931762695
    4. '()]' → logprob: -6.4838151931762695
    5. '[' → logprob: -8.23381519317627
    6. '(i' → logprob: -8.48381519317627
    7. ']()' → logprob: -8.98381519317627
    8. '](' → logprob: -8.98381519317627
    9. '(s' → logprob: -9.60881519317627
    10. 's' → logprob: -9.85881519317627

Token 15: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1598363071680069
    2. '(' → logprob: -3.0348362922668457
    3. ')]' → logprob: -3.1598362922668457
    4. ')' → logprob: -3.6598362922668457
    5. '()]' → logprob: -4.284836292266846
    6. '()' → logprob: -4.534836292266846
    7. '('' → logprob: -5.534836292266846
    8. '[' → logprob: -7.909836292266846
    9. '(()' → logprob: -8.409836769104004
    10. ')])' → logprob: -8.409836769104004

Token 16: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005830573500134051
    2. ')]' → logprob: -8.250582695007324
    3. ')' → logprob: -9.500582695007324
    4. ' ]' → logprob: -9.625582695007324
    5. '()]' → logprob: -10.125582695007324
    6. ' for' → logprob: -10.500582695007324
    7. '],' → logprob: -10.625582695007324
    8. '`]' → logprob: -10.750582695007324
    9. ',' → logprob: -11.250582695007324
    10. '[' → logprob: -11.250582695007324

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004980066791176796
    2. 'range' → logprob: -5.754980087280273
    3. ' _' → logprob: -7.254980087280273
    4. ' i' → logprob: -7.629980087280273
    5. ' ' → logprob: -8.254980087280273
    6. '_' → logprob: -8.754980087280273
    7. '_range' → logprob: -9.379980087280273
    8. '(range' → logprob: -10.129980087280273
    9. ' in' → logprob: -10.879980087280273
    10. '	range' → logprob: -11.379980087280273

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10057132691144943
    2. 'in' → logprob: -2.350571393966675
    3. ' ' → logprob: -8.475571632385254
    4. 'n' → logprob: -10.475571632385254
    5. 'import' → logprob: -10.600571632385254
    6. 'range' → logprob: -10.600571632385254
    7. '<|end|>' → logprob: -10.725571632385254
    8. '	in' → logprob: -10.975571632385254
    9. 's' → logprob: -11.475571632385254
    10. '  ' → logprob: -12.600571632385254

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269323080778122
    2. ' range' → logprob: -2.126932382583618
    3. '[' → logprob: -13.376932144165039
    4. ' ' → logprob: -13.501932144165039
    5. '(range' → logprob: -14.876932144165039
    6. '	range' → logprob: -15.001932144165039
    7. 'a' → logprob: -15.376932144165039
    8. '(' → logprob: -16.12693214416504
    9. 'ran' → logprob: -16.25193214416504
    10. '  ' → logprob: -16.75193214416504

Token 20: '(' (ID: 7)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.38689762353897095
    2. '(' → logprob: -1.1368975639343262
    3. '7' → logprob: -11.011898040771484
    4. '5' → logprob: -11.886898040771484
    5. ' (' → logprob: -13.636898040771484
    6. '```' → logprob: -13.636898040771484
    7. ' ' → logprob: -14.761898040771484
    8. ')' → logprob: -16.136898040771484
    9. '`' → logprob: -16.636898040771484
    10. '(
' → logprob: -16.636898040771484

Token 21: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -9.253090865968261e-06
    2. '5' → logprob: -11.625009536743164
    3. '7' → logprob: -15.125009536743164
    4. ' ' → logprob: -17.125009536743164
    5. '```' → logprob: -20.875009536743164
    6. ')' → logprob: -21.375009536743164
    7. '3' → logprob: -21.500009536743164
    8. '0' → logprob: -21.625009536743164
    9. '1' → logprob: -21.625009536743164
    10. '٦' → logprob: -21.750009536743164

Token 22: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003297440707683563
    2. ')' → logprob: -8.750329971313477
    3. ']' → logprob: -8.750329971313477
    4. ')])' → logprob: -11.625329971313477
    5. '])' → logprob: -13.625329971313477
    6. '])]' → logprob: -13.625329971313477
    7. ')],' → logprob: -14.625329971313477
    8. '')]' → logprob: -15.125329971313477
    9. ' )' → logprob: -16.250329971313477
    10. ')].' → logprob: -16.375329971313477

Token 23: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9365143775939941
    2. 'if' → logprob: -1.5615143775939941
    3. '
' → logprob: -1.5615143775939941
    4. 'f' → logprob: -2.936514377593994
    5. '#' → logprob: -3.686514377593994
    6. '+
' → logprob: -3.811514377593994
    7. ' if' → logprob: -4.186514377593994
    8. '*' → logprob: -4.311514377593994
    9. '\n' → logprob: -4.311514377593994
    10. '```' → logprob: -4.686514377593994

Token 24: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008854585699737072
    2. ' +' → logprob: -5.883854389190674
    3. ' ' → logprob: -6.133854389190674
    4. '*' → logprob: -6.383854389190674
    5. '<|end|>' → logprob: -6.883854389190674
    6. ')' → logprob: -8.258854866027832
    7. '```' → logprob: -8.758854866027832
    8. '>' → logprob: -8.883854866027832
    9. '%' → logprob: -9.258854866027832
    10. '+a' → logprob: -9.633854866027832

Token 25: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4704020023345947
    2. '*' → logprob: -1.8454020023345947
    3. '=' → logprob: -2.8454020023345947
    4. ' +' → logprob: -3.3454020023345947
    5. ' *' → logprob: -3.5954020023345947
    6. ' =' → logprob: -3.8454020023345947
    7. ',' → logprob: -4.345401763916016
    8. '%' → logprob: -4.595401763916016
    9. ')' → logprob: -4.720401763916016
    10. '-' → logprob: -5.095401763916016

Token 26: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15100891888141632
    2. ' a' → logprob: -2.0260088443756104
    3. '0' → logprob: -5.4010090827941895
    4. 'b' → logprob: -6.4010090827941895
    5. ' b' → logprob: -7.1510090827941895
    6. ' ' → logprob: -8.026008605957031
    7. 'k' → logprob: -8.401008605957031
    8. ' k' → logprob: -8.651008605957031
    9. '(a' → logprob: -8.901008605957031
    10. ' (' → logprob: -9.276008605957031

Token 27: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.540660560131073
    2. '0' → logprob: -1.6656606197357178
    3. 'int' → logprob: -1.6656606197357178
    4. 'i' → logprob: -3.7906606197357178
    5. ']' → logprob: -4.790660381317139
    6. 'k' → logprob: -5.540660381317139
    7. '1' → logprob: -7.040660381317139
    8. 'b' → logprob: -7.290660381317139
    9. 'x' → logprob: -7.540660381317139
    10. '(a' → logprob: -7.540660381317139

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06003330647945404
    2. ']' → logprob: -3.1850333213806152
    3. '+' → logprob: -5.060033321380615
    4. ' ,' → logprob: -5.560033321380615
    5. '-' → logprob: -6.435033321380615
    6. ')' → logprob: -6.810033321380615
    7. ',a' → logprob: -7.310033321380615
    8. ',b' → logprob: -7.560033321380615
    9. ' +' → logprob: -7.935033321380615
    10. '*' → logprob: -8.185032844543457

Token 29: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2811991274356842
    2. 'b' → logprob: -1.4061990976333618
    3. ' ' → logprob: -11.03119945526123
    4. ',' → logprob: -11.78119945526123
    5. 'a' → logprob: -12.15619945526123
    6. 'd' → logprob: -13.28119945526123
    7. '1' → logprob: -13.28119945526123
    8. ',b' → logprob: -13.28119945526123
    9. ' c' → logprob: -13.40619945526123
    10. ' a' → logprob: -13.53119945526123

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001647326396778226
    2. ']' → logprob: -6.501647472381592
    3. ' ,' → logprob: -9.626646995544434
    4. ',
' → logprob: -10.626646995544434
    5. ')' → logprob: -11.126646995544434
    6. ',c' → logprob: -11.376646995544434
    7. ',a' → logprob: -11.626646995544434
    8. 'a' → logprob: -12.501646995544434
    9. ',b' → logprob: -13.001646995544434
    10. ',d' → logprob: -13.251646995544434

Token 31: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10022026300430298
    2. 'c' → logprob: -2.350220203399658
    3. ' ' → logprob: -12.225220680236816
    4. ',' → logprob: -13.100220680236816
    5. 'd' → logprob: -13.350220680236816
    6. '	c' → logprob: -13.850220680236816
    7. ']' → logprob: -13.850220680236816
    8. ',c' → logprob: -14.412720680236816
    9. ')c' → logprob: -14.662720680236816
    10. ' d' → logprob: -14.850220680236816

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5235960483551025
    2. ']' → logprob: -0.8985960483551025
    3. ' ]' → logprob: -8.273595809936523
    4. ' ,' → logprob: -9.273595809936523
    5. ',
' → logprob: -9.773595809936523
    6. 'd' → logprob: -11.023595809936523
    7. '   ' → logprob: -11.648595809936523
    8. ')' → logprob: -12.148595809936523
    9. ',d' → logprob: -12.148595809936523
    10. ' ' → logprob: -12.273595809936523

Token 33: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04882580414414406
    2. 'd' → logprob: -3.048825740814209
    3. ' ' → logprob: -8.673826217651367
    4. ']' → logprob: -10.298826217651367
    5. ',' → logprob: -11.548826217651367
    6. ' ,' → logprob: -12.673826217651367
    7. ' ]' → logprob: -12.673826217651367
    8. ',d' → logprob: -13.048826217651367
    9. '],' → logprob: -13.423826217651367
    10. '  ' → logprob: -13.486326217651367

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01210164837539196
    2. ']' → logprob: -4.512101650238037
    3. ',e' → logprob: -7.262101650238037
    4. ' ,' → logprob: -8.387101173400879
    5. 'e' → logprob: -9.637101173400879
    6. ' ]' → logprob: -10.887101173400879
    7. ')' → logprob: -11.137101173400879
    8. ' ' → logprob: -12.512101173400879
    9. ',
' → logprob: -12.512101173400879
    10. '   ' → logprob: -13.012101173400879

Token 35: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14270946383476257
    2. ' e' → logprob: -2.017709493637085
    3. ']' → logprob: -11.142709732055664
    4. 'k' → logprob: -11.892709732055664
    5. ' ' → logprob: -12.892709732055664
    6. ',' → logprob: -13.392709732055664
    7. ',e' → logprob: -13.517709732055664
    8. ' ]' → logprob: -13.642709732055664
    9. ' k' → logprob: -13.767709732055664
    10. '	e' → logprob: -14.080209732055664

Token 36: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3876398205757141
    2. ',' → logprob: -1.1376397609710693
    3. ' ]' → logprob: -7.887639999389648
    4. ' ,' → logprob: -8.512639999389648
    5. ',k' → logprob: -9.637639999389648
    6. '[' → logprob: -10.512639999389648
    7. '+' → logprob: -11.387639999389648
    8. ')' → logprob: -11.637639999389648
    9. ' ' → logprob: -12.012639999389648
    10. 'd' → logprob: -12.137639999389648

Token 37: 'import' (ID: 561)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.387145459651947
    2. '[' → logprob: -2.137145519256592
    3. '.append' → logprob: -2.762145519256592
    4. ',' → logprob: -3.387145519256592
    5. ']' → logprob: -3.637145519256592
    6. ',k' → logprob: -4.137145519256592
    7. '.sort' → logprob: -4.762145519256592
    8. '[i' → logprob: -4.762145519256592
    9. '.' → logprob: -5.262145519256592
    10. '[:]' → logprob: -5.512145519256592

Token 38: ' itertools' (ID: 103178)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4179726839065552
    2. ' itertools' → logprob: -1.4179726839065552
    3. ' math' → logprob: -2.5429725646972656
    4. 'sys' → logprob: -4.292972564697266
    5. ' random' → logprob: -5.792972564697266
    6. 'math' → logprob: -6.292972564697266
    7. ' collections' → logprob: -7.292972564697266
    8. ' heap' → logprob: -7.792972564697266
    9. ' numpy' → logprob: -8.042972564697266
    10. 'random' → logprob: -8.542972564697266

Token 39: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9537668228149414
    2. 'f' → logprob: -2.0787668228149414
    3. '.per' → logprob: -2.3287668228149414
    4. ',k' → logprob: -2.8287668228149414
    5. ',' → logprob: -2.9537668228149414
    6. 'com' → logprob: -3.3287668228149414
    7. '.com' → logprob: -3.4537668228149414
    8. 'per' → logprob: -3.5787668228149414
    9. ' permutations' → logprob: -3.8287668228149414
    10. '
' → logprob: -3.9537668228149414

Token 40: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0015316474018618464
    2. ' it' → logprob: -6.501531600952148
    3. 'itl' → logprob: -11.126531600952148
    4. 'It' → logprob: -11.751531600952148
    5. 'itm' → logprob: -12.501531600952148
    6. 'itg' → logprob: -14.376531600952148
    7. '	it' → logprob: -14.376531600952148
    8. 'itt' → logprob: -14.751531600952148
    9. 'its' → logprob: -15.001531600952148
    10. 'itr' → logprob: -15.001531600952148

Token 41: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5352718234062195
    2. '.' → logprob: -1.9102718830108643
    3. '.per' → logprob: -2.2852718830108643
    4. '.for' → logprob: -3.6602718830108643
    5. '.com' → logprob: -3.7852718830108643
    6. '
' → logprob: -3.9102718830108643
    7. 'f' → logprob: -4.035271644592285
    8. '.
' → logprob: -4.035271644592285
    9. 'per' → logprob: -4.535271644592285
    10. '.f' → logprob: -4.785271644592285

Token 42: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0614315271377563
    2. '
' → logprob: -1.3114315271377563
    3. 's' → logprob: -1.9364315271377563
    4. 'k' → logprob: -2.311431407928467
    5. 'a' → logprob: -2.811431407928467
    6. 'f' → logprob: -4.186431407928467
    7. '1' → logprob: -4.686431407928467
    8. '.
' → logprob: -4.811431407928467
    9. 'print' → logprob: -5.186431407928467
    10. 'com' → logprob: -5.436431407928467

Token 43: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5335633158683777
    2. '=' → logprob: -0.9085633158683777
    3. '.' → logprob: -5.408563137054443
    4. 's' → logprob: -5.783563137054443
    5. '1' → logprob: -7.283563137054443
    6. '_' → logprob: -7.658563137054443
    7. 'o' → logprob: -8.158563613891602
    8. 'for' → logprob: -8.283563613891602
    9. 'x' → logprob: -8.533563613891602
    10. ',' → logprob: -8.658563613891602

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6343629956245422
    2. ' =' → logprob: -0.7593629956245422
    3. '.' → logprob: -6.634363174438477
    4. '.=' → logprob: -8.759363174438477
    5. 's' → logprob: -9.134363174438477
    6. ',' → logprob: -10.009363174438477
    7. '_' → logprob: -10.634363174438477
    8. ' ' → logprob: -10.634363174438477
    9. '=

' → logprob: -11.509363174438477
    10. ' =
' → logprob: -11.634363174438477

Token 45: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14650434255599976
    2. ' list' → logprob: -2.2715044021606445
    3. 'it' → logprob: -3.6465044021606445
    4. ' it' → logprob: -6.1465044021606445
    5. 'sum' → logprob: -6.7715044021606445
    6. 'set' → logprob: -6.7715044021606445
    7. '[it' → logprob: -6.7715044021606445
    8. '[list' → logprob: -8.146504402160645
    9. '[' → logprob: -8.396504402160645
    10. 'len' → logprob: -8.646504402160645

Token 46: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.00012475410767365247
    2. '(' → logprob: -9.00012493133545
    3. 'it' → logprob: -14.00012493133545
    4. '(
' → logprob: -16.250123977661133
    5. '	it' → logprob: -16.625123977661133
    6. '[it' → logprob: -16.625123977661133
    7. ' it' → logprob: -16.875123977661133
    8. '()' → logprob: -17.125123977661133
    9. '(

' → logprob: -17.500123977661133
    10. '(i' → logprob: -17.750123977661133

Token 47: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.503629744052887
    2. '.per' → logprob: -1.0036296844482422
    3. '.product' → logprob: -3.753629684448242
    4. '.' → logprob: -5.753629684448242
    5. 'ertools' → logprob: -6.753629684448242
    6. '.chain' → logprob: -7.003629684448242
    7. '.p' → logprob: -8.753629684448242
    8. '.prod' → logprob: -10.128629684448242
    9. '.acc' → logprob: -10.378629684448242
    10. ' .' → logprob: -10.378629684448242

Token 48: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0003380846756044775
    2. 'b' → logprob: -8.000338554382324
    3. 'inations' → logprob: -13.375338554382324
    4. 'bin' → logprob: -14.125338554382324
    5. '```' → logprob: -16.250337600708008
    6. 'bination' → logprob: -16.375337600708008
    7. 'bos' → logprob: -16.875337600708008
    8. 'per' → logprob: -17.750337600708008
    9. '.com' → logprob: -17.750337600708008
    10. 'bined' → logprob: -18.250337600708008

Token 49: '(range' (ID: 50017)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.500000953674316
    3. '(x' → logprob: -15.625000953674316
    4. ')' → logprob: -15.750000953674316
    5. ' (' → logprob: -15.750000953674316
    6. ')(' → logprob: -18.125
    7. '(A' → logprob: -18.625
    8. '(
' → logprob: -19.0
    9. '((' → logprob: -19.375
    10. '```' → logprob: -19.875

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03368454426527023
    2. '(len' → logprob: -3.408684492111206
    3. ' (' → logprob: -10.783684730529785
    4. 'len' → logprob: -11.783684730529785
    5. '(
' → logprob: -12.283684730529785
    6. ')' → logprob: -14.033684730529785
    7. '(a' → logprob: -14.158684730529785
    8. '(n' → logprob: -14.158684730529785
    9. '5' → logprob: -14.408684730529785
    10. '6' → logprob: -14.658684730529785

Token 51: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.004596387501806021
    2. 'len' → logprob: -5.75459623336792
    3. '1' → logprob: -7.37959623336792
    4. ' ' → logprob: -7.62959623336792
    5. '6' → logprob: -9.129596710205078
    6. '4' → logprob: -9.629596710205078
    7. 'a' → logprob: -9.879596710205078
    8. ' len' → logprob: -10.379596710205078
    9. '3' → logprob: -11.379596710205078
    10. '0' → logprob: -11.817096710205078

Token 52: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07928246259689331
    2. ',' → logprob: -2.579282522201538
    3. ' ),' → logprob: -8.704282760620117
    4. ')' → logprob: -9.079282760620117
    5. ' ,' → logprob: -9.954282760620117
    6. ',),' → logprob: -11.204282760620117
    7. '],' → logprob: -11.329282760620117
    8. '>,' → logprob: -11.954282760620117
    9. '```' → logprob: -11.954282760620117
    10. '},' → logprob: -12.329282760620117

Token 53: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.20306864380836487
    2. ' ' → logprob: -2.078068733215332
    3. '2' → logprob: -3.078068733215332
    4. '4' → logprob: -4.953068733215332
    5. 'k' → logprob: -5.578068733215332
    6. ' k' → logprob: -6.578068733215332
    7. '1' → logprob: -8.328068733215332
    8. '5' → logprob: -10.203068733215332
    9. ')' → logprob: -10.453068733215332
    10. '   ' → logprob: -12.953068733215332

Token 54: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3583700358867645
    2. 'k' → logprob: -1.483370065689087
    3. '2' → logprob: -3.108370065689087
    4. '4' → logprob: -3.983370065689087
    5. ' ' → logprob: -5.233369827270508
    6. ' k' → logprob: -5.358369827270508
    7. '1' → logprob: -7.483369827270508
    8. '5' → logprob: -8.358369827270508
    9. '   ' → logprob: -9.858369827270508
    10. ')' → logprob: -10.858369827270508

Token 55: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018154505640268326
    2. ')' → logprob: -4.018154621124268
    3. ')))' → logprob: -13.39315414428711
    4. '),' → logprob: -13.64315414428711
    5. '))
' → logprob: -13.64315414428711
    6. ')
' → logprob: -14.89315414428711
    7. ' ))' → logprob: -16.26815414428711
    8. '));' → logprob: -17.01815414428711
    9. '))

' → logprob: -17.01815414428711
    10. '1' → logprob: -17.39315414428711

Token 56: 'ans' (ID: 616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17653000354766846
    2. '
' → logprob: -2.801529884338379
    3. 'x' → logprob: -3.051529884338379
    4. 'for' → logprob: -4.051529884338379
    5. '\n' → logprob: -4.176529884338379
    6. ')
' → logprob: -5.051529884338379
    7. '<|end|>' → logprob: -6.176529884338379
    8. 'n' → logprob: -6.426529884338379
    9. 's' → logprob: -6.551529884338379
    10. '  
' → logprob: -6.926529884338379

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033802103251218796
    2. '=' → logprob: -3.408802032470703
    3. 's' → logprob: -9.658802032470703
    4. '_' → logprob: -10.033802032470703
    5. '[' → logprob: -11.533802032470703
    6. '1' → logprob: -11.908802032470703
    7. ' ' → logprob: -11.908802032470703
    8. ',' → logprob: -12.033802032470703
    9. ':' → logprob: -12.658802032470703
    10. ' =
' → logprob: -13.033802032470703

Token 58: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3377987742424011
    2. 'float' → logprob: -2.212798833847046
    3. '-' → logprob: -2.587798833847046
    4. '[]' → logprob: -3.337798833847046
    5. 'max' → logprob: -3.837798833847046
    6. '100' → logprob: -4.087798595428467
    7. '10' → logprob: -4.962798595428467
    8. ' ' → logprob: -5.587798595428467
    9. 'a' → logprob: -5.837798595428467
    10. 'sum' → logprob: -5.837798595428467

Token 59: 'Y' (ID: 56)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.281046599149704
    2. 'NO' → logprob: -1.9060466289520264
    3. '"' → logprob: -4.156046390533447
    4. 'Yes' → logprob: -4.406046390533447
    5. '0' → logprob: -4.531046390533447
    6. 'Impossible' → logprob: -4.781046390533447
    7. 'IMP' → logprob: -4.781046390533447
    8. '-' → logprob: -4.906046390533447
    9. '"No' → logprob: -5.156046390533447
    10. 'NG' → logprob: -5.281046390533447

Token 60: 'ay' (ID: 356)
  Prédit: 'ES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ES' → logprob: -0.0014446416171267629
    2. 'E' → logprob: -7.0014448165893555
    3. 'es' → logprob: -7.6264448165893555
    4. 'Es' → logprob: -11.251444816589355
    5. '```' → logprob: -11.501444816589355
    6. '``' → logprob: -12.376444816589355
    7. 'et' → logprob: -13.501444816589355
    8. '
' → logprob: -13.626444816589355
    9. '"' → logprob: -13.626444816589355
    10. 'ESC' → logprob: -13.751444816589355

Token 61: '!"
' (ID: 44450)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5314911007881165
    2. '"' → logprob: -0.9064911007881165
    3. '!"' → logprob: -5.281491279602051
    4. '!' → logprob: -6.281491279602051
    5. '!\' → logprob: -7.906491279602051
    6. '"\' → logprob: -8.28149127960205
    7. '
' → logprob: -8.78149127960205
    8. '\' → logprob: -9.40649127960205
    9. '!!' → logprob: -9.78149127960205
    10. 's' → logprob: -9.78149127960205

Token 62: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1084754467010498
    2. '
' → logprob: -3.35847544670105
    3. '\n' → logprob: -3.60847544670105
    4. '<|end|>' → logprob: -3.73347544670105
    5. ' for' → logprob: -4.108475685119629
    6. 'if' → logprob: -8.358475685119629
    7. '<|end|>' → logprob: -9.483475685119629
    8. '\' → logprob: -10.108475685119629
    9. '\
' → logprob: -10.358475685119629
    10. '```' → logprob: -10.608475685119629

Token 63: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5353114604949951
    2. ' i' → logprob: -1.0353114604949951
    3. 'p' → logprob: -4.410311698913574
    4. ' p' → logprob: -4.535311698913574
    5. ' idx' → logprob: -4.910311698913574
    6. 'idx' → logprob: -5.285311698913574
    7. ' pair' → logprob: -5.410311698913574
    8. 'x' → logprob: -5.660311698913574
    9. ' x' → logprob: -6.785311698913574
    10. 'pair' → logprob: -6.910311698913574

Token 64: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09601487219333649
    2. 'in' → logprob: -2.721014976501465
    3. 'n' → logprob: -3.971014976501465
    4. ' ' → logprob: -5.221014976501465
    5. ',' → logprob: -6.971014976501465
    6. ' n' → logprob: -8.096014976501465
    7. '  ' → logprob: -9.346014976501465
    8. '_' → logprob: -9.596014976501465
    9. ' i' → logprob: -11.346014976501465
    10. 'x' → logprob: -11.471014976501465

Token 65: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13463753461837769
    2. '(j' → logprob: -3.0096375942230225
    3. ' j' → logprob: -3.2596375942230225
    4. 'x' → logprob: -5.259637355804443
    5. 'idx' → logprob: -5.384637355804443
    6. 'indices' → logprob: -5.634637355804443
    7. ' (' → logprob: -6.009637355804443
    8. 'v' → logprob: -6.134637355804443
    9. 'combo' → logprob: -6.259637355804443
    10. 'comb' → logprob: -6.384637355804443

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543564438819885
    2. 'in' → logprob: -1.6004356145858765
    3. ',' → logprob: -11.725435256958008
    4. ' ' → logprob: -12.100435256958008
    5. 'n' → logprob: -12.475435256958008
    6. ')' → logprob: -13.475435256958008
    7. '	in' → logprob: -14.100435256958008
    8. '  ' → logprob: -14.600435256958008
    9. ' i' → logprob: -14.600435256958008
    10. 's' → logprob: -15.225435256958008

Token 67: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004620830062776804
    2. ' x' → logprob: -5.3796210289001465
    3. ' ' → logprob: -14.629620552062988
    4. '(x' → logprob: -16.879621505737305
    5. '	x' → logprob: -17.004621505737305
    6. '   ' → logprob: -17.629621505737305
    7. ')x' → logprob: -18.004621505737305
    8. '```' → logprob: -18.004621505737305
    9. '  ' → logprob: -18.504621505737305
    10. '    ' → logprob: -19.004621505737305

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.432518421206623e-05
    2. '```' → logprob: -10.8750638961792
    3. ':' → logprob: -11.0000638961792
    4. '_' → logprob: -11.0000638961792
    5. 'in' → logprob: -12.6250638961792
    6. ')' → logprob: -12.8750638961792
    7. '.' → logprob: -14.1250638961792
    8. 'm' → logprob: -14.2500638961792
    9. 's' → logprob: -14.2500638961792
    10. '-' → logprob: -14.6250638961792

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029387109680101275
    2. ' :' → logprob: -8.250293731689453
    3. ' in' → logprob: -11.125293731689453
    4. ':
' → logprob: -11.250293731689453
    5. '):' → logprob: -13.000293731689453
    6. 'in' → logprob: -13.875293731689453
    7. ',' → logprob: -14.125293731689453
    8. ':**' → logprob: -14.750293731689453
    9. ',:' → logprob: -15.875293731689453
    10. ')' → logprob: -16.125293731689453

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004367813467979431
    2. ' if' → logprob: -5.754367828369141
    3. ' ' → logprob: -7.504367828369141
    4. 'if' → logprob: -8.62936782836914
    5. '    
' → logprob: -8.87936782836914
    6. '
' → logprob: -9.37936782836914
    7. '```' → logprob: -9.62936782836914
    8. '<|end|>' → logprob: -9.62936782836914
    9. ',' → logprob: -11.00436782836914
    10. '	if' → logprob: -11.37936782836914

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5581164956092834
    2. 'if' (adapté à ' if') → logprob: -0.9331164956092834
    3. '   ' → logprob: -3.5581164360046387
    4. ' for' → logprob: -6.808116436004639
    5. 'k' → logprob: -6.933116436004639
    6. 'x' → logprob: -7.433116436004639
    7. ' ' → logprob: -7.558116436004639
    8. ' x' → logprob: -7.558116436004639
    9. 'for' → logprob: -7.683116436004639
    10. '       ' → logprob: -7.933116436004639

Token 72: ' abs' (ID: 8443)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2833317518234253
    2. 'a' → logprob: -1.4083317518234253
    3. ' ' → logprob: -6.658331871032715
    4. ' abs' → logprob: -8.283331871032715
    5. '   ' → logprob: -8.658331871032715
    6. ' (' → logprob: -8.783331871032715
    7. '(a' → logprob: -9.658331871032715
    8. ' not' → logprob: -9.783331871032715
    9. '  ' → logprob: -9.908331871032715
    10. 'abs' → logprob: -10.408331871032715

Token 73: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00010330478107789531
    2. '(i' → logprob: -9.750102996826172
    3. '(' → logprob: -11.000102996826172
    4. 'a' → logprob: -11.250102996826172
    5. '((' → logprob: -12.250102996826172
    6. '(k' → logprob: -12.750102996826172
    7. '(ans' → logprob: -13.250102996826172
    8. '(ai' → logprob: -13.250102996826172
    9. '(e' → logprob: -13.875102996826172
    10. '(x' → logprob: -14.125102996826172

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002008933573961258
    2. '[i' → logprob: -6.25200891494751
    3. 'i' → logprob: -10.127009391784668
    4. ' -' → logprob: -11.252009391784668
    5. '-' → logprob: -12.377009391784668
    6. ' ' → logprob: -12.377009391784668
    7. 'a' → logprob: -12.627009391784668
    8. '[j' → logprob: -12.814509391784668
    9. ' i' → logprob: -13.002009391784668
    10. '```' → logprob: -13.252009391784668

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.947715832618997e-05
    2. '[j' → logprob: -9.500089645385742
    3. '[' → logprob: -12.000089645385742
    4. '[a' → logprob: -12.125089645385742
    5. 'i' → logprob: -13.500089645385742
    6. ')' → logprob: -14.875089645385742
    7. '[k' → logprob: -15.375089645385742
    8. ')[' → logprob: -15.750089645385742
    9. '[
' → logprob: -16.125089645385742
    10. '   ' → logprob: -16.125089645385742

Token 76: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17992866039276123
    2. ' -' → logprob: -1.8049286603927612
    3. ' ' → logprob: -9.30492877960205
    4. '[' → logprob: -10.30492877960205
    5. '   ' → logprob: -10.92992877960205
    6. ']' → logprob: -11.30492877960205
    7. '  ' → logprob: -11.55492877960205
    8. '-a' → logprob: -11.55492877960205
    9. 'a' → logprob: -13.05492877960205
    10. '[i' → logprob: -13.55492877960205

Token 77: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07892162352800369
    2. ' -' → logprob: -2.5789215564727783
    3. '+' → logprob: -10.9539213180542
    4. ' ' → logprob: -11.9539213180542
    5. '  ' → logprob: -13.3289213180542
    6. '-
' → logprob: -13.8289213180542
    7. '[' → logprob: -13.8289213180542
    8. '-a' → logprob: -14.3289213180542
    9. '   ' → logprob: -14.4539213180542
    10. '```' → logprob: -14.5789213180542

Token 78: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16030444204807281
    2. ' a' → logprob: -1.9103044271469116
    3. ' ' → logprob: -9.660304069519043
    4. 'k' → logprob: -12.035304069519043
    5. '	a' → logprob: -12.410304069519043
    6. '<|end|>' → logprob: -12.660304069519043
    7. '>a' → logprob: -14.160304069519043
    8. ' k' → logprob: -14.160304069519043
    9. '  ' → logprob: -14.410304069519043
    10. ')a' → logprob: -15.410304069519043

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000431861262768507
    2. '[j' → logprob: -8.125432014465332
    3. 'j' → logprob: -9.625432014465332
    4. ' ' → logprob: -11.000432014465332
    5. 'a' → logprob: -11.125432014465332
    6. '[' → logprob: -11.625432014465332
    7. '[a' → logprob: -12.000432014465332
    8. '2' → logprob: -13.062932014465332
    9. '```' → logprob: -13.125432014465332
    10. '-' → logprob: -13.187932014465332

Token 80: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00013250234769657254
    2. '[' → logprob: -9.00013256072998
    3. ' [' → logprob: -12.75013256072998
    4. ')' → logprob: -13.62513256072998
    5. '[i' → logprob: -13.87513256072998
    6. '[js' → logprob: -13.87513256072998
    7. 'j' → logprob: -14.62513256072998
    8. '   ' → logprob: -14.87513256072998
    9. '[a' → logprob: -15.00013256072998
    10. '[k' → logprob: -15.12513256072998

Token 81: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010482928482815623
    2. ')>' → logprob: -7.2510480880737305
    3. '])' → logprob: -8.25104808807373
    4. '>)' → logprob: -10.50104808807373
    5. ')>=' → logprob: -11.25104808807373
    6. ' )' → logprob: -11.62604808807373
    7. ')`' → logprob: -12.25104808807373
    8. ')">' → logprob: -12.37604808807373
    9. '>' → logprob: -12.50104808807373
    10. '）' → logprob: -12.75104808807373

Token 82: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5547400712966919
    2. '>' → logprob: -1.054740071296692
    3. ' <' → logprob: -3.8047399520874023
    4. '<' → logprob: -4.054739952087402
    5. ' >=' → logprob: -4.304739952087402
    6. '>=' → logprob: -4.304739952087402
    7. ' <=' → logprob: -5.429739952087402
    8. '%' → logprob: -6.054739952087402
    9. '<=' → logprob: -6.304739952087402
    10. ' ' → logprob: -7.054739952087402

Token 83: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06995365768671036
    2. ' k' → logprob: -2.694953680038452
    3. ' ' → logprob: -11.569953918457031
    4. '	k' → logprob: -12.069953918457031
    5. '   ' → logprob: -14.319953918457031
    6. '2' → logprob: -15.194953918457031
    7. '5' → logprob: -15.819953918457031
    8. '10' → logprob: -16.19495391845703
    9. '6' → logprob: -16.44495391845703
    10. 'd' → logprob: -16.44495391845703

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001200231839902699
    2. '[' → logprob: -7.876200199127197
    3. ':
' → logprob: -7.876200199127197
    4. ' :' → logprob: -8.501200675964355
    5. ' ' → logprob: -9.626200675964355
    6. '[i' → logprob: -9.876200675964355
    7. '):' → logprob: -10.876200675964355
    8. ':return' → logprob: -11.126200675964355
    9. '   ' → logprob: -11.376200675964355
    10. ':\' → logprob: -11.501200675964355

Token 85: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02704235166311264
    2. '  ' → logprob: -5.277042388916016
    3. '<|end|>' → logprob: -5.402042388916016
    4. '    ' → logprob: -5.527042388916016
    5. ' 
' → logprob: -5.652042388916016
    6. '0' → logprob: -5.902042388916016
    7. ':' → logprob: -6.652042388916016
    8. '   ' → logprob: -6.902042388916016
    9. '1' → logprob: -7.152042388916016
    10. '[' → logprob: -7.652042388916016

Token 86: ' ans' (ID: 3345)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058191217482089996
    2. ' =' → logprob: -3.0581912994384766
    3. ' ' → logprob: -4.933191299438477
    4. 'ans' (adapté à ' ans') → logprob: -7.308191299438477
    5. '\n' → logprob: -7.933191299438477
    6. 'n' → logprob: -8.683191299438477
    7. '"' → logprob: -8.808191299438477
    8. ')' → logprob: -9.183191299438477
    9. '  ' → logprob: -9.308191299438477
    10. '0' → logprob: -9.433191299438477

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367532044649124
    2. '=' → logprob: -3.4086754322052
    3. ' ' → logprob: -10.533675193786621
    4. ' +=' → logprob: -13.783675193786621
    5. ' =)' → logprob: -14.533675193786621
    6. ' ="' → logprob: -15.158675193786621
    7. ' ='' → logprob: -15.408675193786621
    8. ' *=' → logprob: -15.533675193786621
    9. '.' → logprob: -15.908675193786621
    10. '  ' → logprob: -16.408676147460938

Token 88: ' ":' (ID: 27274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004374105948954821
    2. ' "' → logprob: -5.504374027252197
    3. ''' → logprob: -8.879374504089355
    4. ' ' → logprob: -9.254374504089355
    5. '"No' → logprob: -10.379374504089355
    6. '!' → logprob: -12.879374504089355
    7. '"I' → logprob: -13.004374504089355
    8. '""' → logprob: -13.004374504089355
    9. '"N' → logprob: -13.004374504089355
    10. '`' → logprob: -13.129374504089355

Token 89: '("
' (ID: 193063)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23094162344932556
    2. '("' → logprob: -1.605941653251648
    3. ''(' → logprob: -6.6059417724609375
    4. ''' → logprob: -6.7309417724609375
    5. '"' → logprob: -7.1059417724609375
    6. '("("' → logprob: -7.6059417724609375
    7. '(":' → logprob: -8.105941772460938
    8. '"(' → logprob: -8.230941772460938
    9. '-' → logprob: -8.855941772460938
    10. '((' → logprob: -8.980941772460938

Token 90: 'print' (ID: 1598)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.0478452444076538
    2. '<|end|>' → logprob: -1.4228452444076538
    3. '[' → logprob: -1.9228452444076538
    4. '\n' → logprob: -2.6728453636169434
    5. '[i' → logprob: -2.6728453636169434
    6. '
' → logprob: -3.2978453636169434
    7. '```' → logprob: -4.422845363616943
    8. ')' → logprob: -4.672845363616943
    9. 'k' → logprob: -4.797845363616943
    10. '[n' → logprob: -4.797845363616943

Token 91: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741092026233673
    2. '(ans' → logprob: -0.9741091728210449
    3. '(
' → logprob: -10.974109649658203
    4. '(

' → logprob: -12.349109649658203
    5. '("("' → logprob: -12.599109649658203
    6. 'ans' → logprob: -12.724109649658203
    7. ' (' → logprob: -13.349109649658203
    8. '(answer' → logprob: -13.474109649658203
    9. '(an' → logprob: -14.724109649658203
    10. '('' → logprob: -14.849109649658203

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -16.375
    4. ')`' → logprob: -16.5
    5. '))' → logprob: -16.75
    6. '`)' → logprob: -18.5
    7. '[' → logprob: -19.375
    8. ')

' → logprob: -19.625
    9. '')' → logprob: -19.75
    10. '),' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 34.44%
Précision adaptée (1ère position): 34.44%
Précision (top 10): 73.33%
================================================================================
