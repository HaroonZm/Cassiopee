================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
range = xrange
input = raw_input

def read_int():
    return int(input())

def read_int_list():
    return [int(x) for x in input().split()]

def initialize_dp(size):
    dp = [0] * (size + 1)
    dp[size] = size
    return dp

def compute_extra(a, b, idx):
    sell = a[idx]
    extra = b[idx] - sell
    return sell, extra

def update_dp(dp, sell, extra):
    for i in reversed(range(len(dp) - sell)):
        dp[i] = max(dp[i], dp[i + sell] + extra)

def dp_round(n, A, B):
    dp = initialize_dp(n)
    for j in range(3):
        sell, extra = compute_extra(A, B, j)
        if extra > 0:
            update_dp(dp, sell, extra)
    return max(dp)

def swap_lists(a, b):
    return b, a

def process(A, B, n):
    first_max = dp_round(n, A, B)
    A, B = swap_lists(A, B)
    second_max = dp_round(first_max, A, B)
    return second_max

def main():
    n = read_int()
    A = read_int_list()
    B = read_int_list()
    result = process(A, B, n)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'range' (ID: 20967)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1863299012184143
    2. '\n' → logprob: -2.0613298416137695
    3. '<|end|>' → logprob: -4.1863298416137695
    4. '\' → logprob: -4.5613298416137695
    5. 'newline' → logprob: -5.1863298416137695
    6. '```' → logprob: -6.0613298416137695
    7. 'import' → logprob: -6.0613298416137695
    8. '<|end|>' → logprob: -6.5613298416137695
    9. '' → logprob: -6.9363298416137695
    10. '
' → logprob: -7.1863298416137695

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023624442983418703
    2. '.' → logprob: -6.377362251281738
    3. ' (' → logprob: -8.377362251281738
    4. '_' → logprob: -9.002362251281738
    5. ')' → logprob: -9.752362251281738
    6. '(
' → logprob: -10.002362251281738
    7. '[' → logprob: -10.127362251281738
    8. ',' → logprob: -10.627362251281738
    9. '```' → logprob: -10.752362251281738
    10. 's' → logprob: -11.127362251281738

Token 5: ' xrange' (ID: 92050)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01425424125045538
    2. 'range' → logprob: -4.889254093170166
    3. '(range' → logprob: -5.514254093170166
    4. '(
' → logprob: -6.764254093170166
    5. ' range' → logprob: -7.514254093170166
    6. ' (' → logprob: -8.139254570007324
    7. ' ' → logprob: -8.264254570007324
    8. '(len' → logprob: -8.764254570007324
    9. ' xrange' → logprob: -9.889254570007324
    10. '(int' → logprob: -10.014254570007324

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005802231840789318
    2. '(
' → logprob: -5.505802154541016
    3. '.' → logprob: -7.505802154541016
    4. '('' → logprob: -7.880802154541016
    5. '[' → logprob: -8.255802154541016
    6. ''' → logprob: -9.380802154541016
    7. '`' → logprob: -9.380802154541016
    8. '```' → logprob: -10.005802154541016
    9. ')' → logprob: -10.505802154541016
    10. '("("' → logprob: -10.630802154541016

Token 7: 'input' (ID: 2586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03231789916753769
    2. '(
' → logprob: -3.782317876815796
    3. '.' → logprob: -5.157318115234375
    4. '[' → logprob: -6.532318115234375
    5. '_' → logprob: -7.782318115234375
    6. '#' → logprob: -8.532318115234375
    7. '('' → logprob: -8.907318115234375
    8. '(

' → logprob: -8.907318115234375
    9. ',' → logprob: -9.407318115234375
    10. ')' → logprob: -9.407318115234375

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007707939948886633
    2. '.' → logprob: -8.250770568847656
    3. '(
' → logprob: -9.125770568847656
    4. ')' → logprob: -9.250770568847656
    5. '()' → logprob: -9.500770568847656
    6. '('' → logprob: -10.125770568847656
    7. ' (' → logprob: -10.375770568847656
    8. '("("' → logprob: -10.875770568847656
    9. '"' → logprob: -11.000770568847656
    10. ''' → logprob: -11.125770568847656

Token 9: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.5671126246452332
    2. ' raw' → logprob: -1.192112684249878
    3. ' sys' → logprob: -2.317112684249878
    4. 'sys' → logprob: -3.567112684249878
    5. 'input' → logprob: -7.067112445831299
    6. 'x' → logprob: -7.192112445831299
    7. ' xrange' → logprob: -8.567112922668457
    8. '	raw' → logprob: -8.567112922668457
    9. ' input' → logprob: -8.692112922668457
    10. 'range' → logprob: -9.692112922668457

Token 10: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.3881414234638214
    2. '_' → logprob: -1.138141393661499
    3. '_in' → logprob: -7.013141632080078
    4. ' _' → logprob: -8.013141632080078
    5. '__' → logprob: -10.763141632080078
    6. 'input' → logprob: -11.763141632080078
    7. '_i' → logprob: -12.138141632080078
    8. 'in' → logprob: -13.138141632080078
    9. '_
' → logprob: -14.263141632080078
    10. '_

' → logprob: -14.763141632080078

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3476426899433136
    2. '(
' → logprob: -2.597642660140991
    3. '
' → logprob: -2.722642660140991
    4. '<|end|>' → logprob: -2.847642660140991
    5. '.' → logprob: -3.597642660140991
    6. '#' → logprob: -4.09764289855957
    7. '()' → logprob: -4.59764289855957
    8. '\' → logprob: -4.84764289855957
    9. '' → logprob: -5.47264289855957
    10. '\n' → logprob: -5.47264289855957

Token 12: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07033830136060715
    2. '(
' → logprob: -3.570338249206543
    3. '
' → logprob: -4.320338249206543
    4. '<|end|>' → logprob: -4.945338249206543
    5. '.' → logprob: -5.570338249206543
    6. '[' → logprob: -6.070338249206543
    7. ' (' → logprob: -6.070338249206543
    8. '\' → logprob: -6.320338249206543
    9. ' ' → logprob: -6.570338249206543
    10. '#' → logprob: -6.570338249206543

Token 13: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7602139115333557
    2. ' main' → logprob: -1.885213851928711
    3. ' my' → logprob: -2.010213851928711
    4. ' factorial' → logprob: -2.010213851928711
    5. ' calculate' → logprob: -3.260213851928711
    6. ' hello' → logprob: -3.885213851928711
    7. ' foo' → logprob: -4.010213851928711
    8. ' add' → logprob: -5.135213851928711
    9. ' parse' → logprob: -5.635213851928711
    10. ' func' → logprob: -5.635213851928711

Token 14: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11841932684183121
    2. '_' → logprob: -2.7434194087982178
    3. '_line' → logprob: -3.3684194087982178
    4. '()' → logprob: -4.868419170379639
    5. ' (' → logprob: -6.493419170379639
    6. '_input' → logprob: -7.118419170379639
    7. '():' → logprob: -7.743419170379639
    8. '_token' → logprob: -7.993419170379639
    9. '(line' → logprob: -7.993419170379639
    10. 'line' → logprob: -8.368419647216797

Token 15: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.044353242963552475
    2. 's' → logprob: -3.2943532466888428
    3. '()' → logprob: -5.294353008270264
    4. '(' → logprob: -6.919353008270264
    5. ' ():' → logprob: -8.544353485107422
    6. ' ()' → logprob: -10.169353485107422
    7. '_' → logprob: -11.544353485107422
    8. '():
' → logprob: -12.044353485107422
    9. '()(' → logprob: -12.544353485107422
    10. '(s' → logprob: -12.544353485107422

Token 16: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2686229348182678
    2. '():' → logprob: -1.643622875213623
    3. '(' → logprob: -3.643622875213623
    4. ' ()' → logprob: -4.393622875213623
    5. '   ' → logprob: -7.268622875213623
    6. ' return' → logprob: -7.393622875213623
    7. ' ():' → logprob: -7.393622875213623
    8. ':' → logprob: -7.643622875213623
    9. ')' → logprob: -8.268623352050781
    10. ' ' → logprob: -8.393623352050781

Token 17: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11210311949253082
    2. 'return' (adapté à ' return') → logprob: -2.362103223800659
    3. 'int' → logprob: -5.11210298538208
    4. ' int' → logprob: -5.61210298538208
    5. '   ' → logprob: -6.23710298538208
    6. '    ' → logprob: -9.987103462219238
    7. ' i' → logprob: -10.487103462219238
    8. 'n' → logprob: -10.612103462219238
    9. ' n' → logprob: -10.612103462219238
    10. ' ' → logprob: -10.737103462219238

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.032571788877248764
    2. ' ' → logprob: -3.657571792602539
    3. 'int' → logprob: -5.157571792602539
    4. '(int' → logprob: -7.782571792602539
    5. '  ' → logprob: -10.282571792602539
    6. ' ' → logprob: -11.532571792602539
    7. ' (' → logprob: -11.782571792602539
    8. ' in' → logprob: -11.782571792602539
    9. '<int' → logprob: -12.157571792602539
    10. ' input' → logprob: -12.282571792602539

Token 19: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06137737259268761
    2. '(input' → logprob: -3.0613772869110107
    3. '(raw' → logprob: -4.68637752532959
    4. '(sys' → logprob: -5.68637752532959
    5. '(next' → logprob: -10.81137752532959
    6. '(read' → logprob: -10.93637752532959
    7. '((' → logprob: -11.31137752532959
    8. ' (' → logprob: -11.56137752532959
    9. '('' → logprob: -11.68637752532959
    10. '(
' → logprob: -12.43637752532959

Token 20: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06551001220941544
    2. '()))' → logprob: -2.8155100345611572
    3. '()' → logprob: -5.690509796142578
    4. ' ())' → logprob: -9.815509796142578
    5. ')' → logprob: -9.940509796142578
    6. '(' → logprob: -10.815509796142578
    7. '))' → logprob: -11.565509796142578
    8. '())
' → logprob: -12.315509796142578
    9. '());' → logprob: -12.440509796142578
    10. '()),' → logprob: -12.815509796142578

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3250581920146942
    2. '
' → logprob: -1.7000582218170166
    3. '\n' → logprob: -3.5750582218170166
    4. '<|end|>' → logprob: -4.0750579833984375
    5. '\' → logprob: -4.3250579833984375
    6. '(' → logprob: -4.7000579833984375
    7. '(
' → logprob: -5.5750579833984375
    8. '()' → logprob: -5.7000579833984375
    9. '#' → logprob: -5.8250579833984375
    10. ' ' → logprob: -6.2000579833984375

Token 22: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.01797608844935894
    2. '_' → logprob: -4.8929762840271
    3. ' ' → logprob: -6.1429762840271
    4. ' main' → logprob: -6.1429762840271
    5. ' write' → logprob: -6.3929762840271
    6. 'read' → logprob: -7.1429762840271
    7. ' calculate' → logprob: -7.1429762840271
    8. ' solve' → logprob: -7.6429762840271
    9. ' _' → logprob: -7.7679762840271
    10. ' compute' → logprob: -7.8929762840271

Token 23: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.53315269947052
    2. '_' → logprob: -0.90815269947052
    3. '_int' → logprob: -5.7831525802612305
    4. '_str' → logprob: -6.1581525802612305
    5. '_string' → logprob: -6.7831525802612305
    6. '_list' → logprob: -7.0331525802612305
    7. '_array' → logprob: -7.7831525802612305
    8. ' _' → logprob: -8.03315258026123
    9. '()' → logprob: -8.03315258026123
    10. '_token' → logprob: -8.15815258026123

Token 24: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25328290462493896
    2. '()' → logprob: -1.503282904624939
    3. '_list' → logprob: -7.0032830238342285
    4. '_array' → logprob: -8.87828254699707
    5. 'list' → logprob: -10.25328254699707
    6. '())' → logprob: -10.62828254699707
    7. '_' → logprob: -10.75328254699707
    8. '()>' → logprob: -10.75328254699707
    9. '_line' → logprob: -10.87828254699707
    10. ' ()' → logprob: -10.87828254699707

Token 25: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.016247613355517387
    2. '()' → logprob: -4.141247749328613
    3. '(' → logprob: -8.766247749328613
    4. ' ()' → logprob: -11.141247749328613
    5. '()">' → logprob: -11.766247749328613
    6. '()>' → logprob: -11.891247749328613
    7. ' ():' → logprob: -11.891247749328613
    8. '()[' → logprob: -12.266247749328613
    9. '():
' → logprob: -12.266247749328613
    10. '():

' → logprob: -13.641247749328613

Token 26: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.28730204701423645
    2. '():' → logprob: -1.412302017211914
    3. '   ' → logprob: -5.287302017211914
    4. ' ()' → logprob: -7.287302017211914
    5. '():
' → logprob: -8.537302017211914
    6. '(' → logprob: -9.662302017211914
    7. '()[' → logprob: -10.287302017211914
    8. '()
' → logprob: -10.787302017211914
    9. ' ():' → logprob: -11.037302017211914
    10. '().' → logprob: -11.537302017211914

Token 27: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5630670785903931
    2. ' map' → logprob: -1.813067078590393
    3. '   ' → logprob: -2.1880669593811035
    4. 'list' → logprob: -2.6880669593811035
    5. 'return' (adapté à ' return') → logprob: -2.6880669593811035
    6. ' return' → logprob: -4.5630669593811035
    7. ' list' → logprob: -4.9380669593811035
    8. ' ' → logprob: -6.5630669593811035
    9. '  ' → logprob: -9.313067436218262
    10. '    ' → logprob: -10.688067436218262

Token 28: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6830950975418091
    2. 'list' → logprob: -1.183095097541809
    3. ' map' → logprob: -2.0580949783325195
    4. 'map' → logprob: -2.9330949783325195
    5. '[' → logprob: -5.3080949783325195
    6. '[list' → logprob: -6.1830949783325195
    7. ' [' → logprob: -7.5580949783325195
    8. ' ' → logprob: -9.30809497833252
    9. '[int' → logprob: -10.93309497833252
    10. '[input' → logprob: -11.80809497833252

Token 29: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.746380237629637e-05
    2. ' int' → logprob: -9.375097274780273
    3. ' ' → logprob: -12.625097274780273
    4. '   ' → logprob: -12.875097274780273
    5. '  ' → logprob: -12.875097274780273
    6. ']int' → logprob: -13.375097274780273
    7. '	int' → logprob: -14.500097274780273
    8. '<int' → logprob: -14.750097274780273
    9. 'map' → logprob: -14.750097274780273
    10. '(int' → logprob: -15.000097274780273

Token 30: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.026449497789144516
    2. '(i' → logprob: -3.65144944190979
    3. '(' → logprob: -10.276449203491211
    4. ']' → logprob: -10.401449203491211
    5. 'x' → logprob: -10.526449203491211
    6. '(e' → logprob: -10.776449203491211
    7. '(token' → logprob: -11.901449203491211
    8. 'i' → logprob: -12.026449203491211
    9. '(_)' → logprob: -12.151449203491211
    10. '(s' → logprob: -12.276449203491211

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003886086633428931
    2. 'for' → logprob: -8.000388145446777
    3. ' for' → logprob: -10.875388145446777
    4. '(x' → logprob: -10.875388145446777
    5. ' )' → logprob: -11.250388145446777
    6. 'in' → logprob: -13.875388145446777
    7. ')]' → logprob: -15.125388145446777
    8. '()' → logprob: -15.500388145446777
    9. ' ' → logprob: -15.750388145446777
    10. 'x' → logprob: -16.125389099121094

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3519776165485382
    2. ' for' → logprob: -1.2269775867462158
    3. ')' → logprob: -6.226977825164795
    4. ' ' → logprob: -7.851977825164795
    5. '(x' → logprob: -7.851977825164795
    6. 'in' → logprob: -8.101977348327637
    7. ' in' → logprob: -8.101977348327637
    8. 'x' → logprob: -9.351977348327637
    9. '  ' → logprob: -10.976977348327637
    10. ']' → logprob: -11.601977348327637

Token 33: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.168068528175354
    2. 'input' → logprob: -2.5430684089660645
    3. ' x' → logprob: -2.7930684089660645
    4. 'x' → logprob: -4.5430684089660645
    5. ' raw' → logprob: -6.1680684089660645
    6. ' ' → logprob: -6.4180684089660645
    7. 'raw' → logprob: -8.793068885803223
    8. '  ' → logprob: -9.043068885803223
    9. ' xrange' → logprob: -9.918068885803223
    10. ' sys' → logprob: -10.043068885803223

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.314598023891449
    2. 'in' → logprob: -1.3145980834960938
    3. ' ' → logprob: -7.814598083496094
    4. ')' → logprob: -8.314598083496094
    5. 'n' → logprob: -8.939598083496094
    6. 's' → logprob: -9.189598083496094
    7. '	in' → logprob: -9.439598083496094
    8. ']' → logprob: -9.564598083496094
    9. 'input' → logprob: -9.564598083496094
    10. '(' → logprob: -10.314598083496094

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.40447816252708435
    2. ' input' → logprob: -1.1544781923294067
    3. 'raw' → logprob: -4.529478073120117
    4. ' raw' → logprob: -5.029478073120117
    5. ' ' → logprob: -10.529478073120117
    6. ' sys' → logprob: -10.654478073120117
    7. 'sys' → logprob: -10.779478073120117
    8. ' xrange' → logprob: -12.029478073120117
    9. 'range' → logprob: -12.029478073120117
    10. '(input' → logprob: -12.154478073120117

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001612696796655655
    2. '()' → logprob: -6.501612663269043
    3. '()]' → logprob: -9.126612663269043
    4. ' ().' → logprob: -13.876612663269043
    5. '()].' → logprob: -15.626612663269043
    6. '(' → logprob: -16.00161361694336
    7. 'split' → logprob: -16.12661361694336
    8. '())' → logprob: -16.25161361694336
    9. ' ()' → logprob: -16.50161361694336
    10. '.split' → logprob: -17.87661361694336

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011061854660511017
    2. 'strip' → logprob: -4.511061668395996
    3. 'rstrip' → logprob: -11.261061668395996
    4. ' split' → logprob: -14.011061668395996
    5. 'spl' → logprob: -15.136061668395996
    6. ' strip' → logprob: -16.886062622070312
    7. '(split' → logprob: -17.386062622070312
    8. 's' → logprob: -19.386062622070312
    9. '.split' → logprob: -19.511062622070312
    10. ' ' → logprob: -20.136062622070312

Token 38: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0008288058452308178
    2. '())' → logprob: -7.500828742980957
    3. '()' → logprob: -8.250828742980957
    4. '(' → logprob: -11.750828742980957
    5. ')]' → logprob: -12.750828742980957
    6. ']' → logprob: -12.875828742980957
    7. '()]
' → logprob: -14.125828742980957
    8. ']()' → logprob: -15.500828742980957
    9. '()],' → logprob: -16.000829696655273
    10. '()][' → logprob: -16.250829696655273

Token 39: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.041219767183065414
    2. '()]' → logprob: -3.791219711303711
    3. ')]' → logprob: -4.041219711303711
    4. '])' → logprob: -8.666219711303711
    5. ' ]' → logprob: -10.041219711303711
    6. ')' → logprob: -11.916219711303711
    7. '])]' → logprob: -11.916219711303711
    8. ']()' → logprob: -12.541219711303711
    9. '()' → logprob: -13.916219711303711
    10. '`]' → logprob: -13.916219711303711

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6182750463485718
    2. '
' → logprob: -0.9932750463485718
    3. '

' → logprob: -3.4932751655578613
    4. 'd' → logprob: -3.4932751655578613
    5. 'n' → logprob: -4.243275165557861
    6. '\' → logprob: -5.368275165557861
    7. '\n' → logprob: -5.493275165557861
    8. '#' → logprob: -5.868275165557861
    9. 'class' → logprob: -6.743275165557861
    10. '```' → logprob: -7.243275165557861

Token 41: ' initialize' (ID: 18400)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4873202443122864
    2. ' read' → logprob: -1.7373201847076416
    3. ' main' → logprob: -2.9873201847076416
    4. ' count' → logprob: -3.1123201847076416
    5. ' calculate' → logprob: -3.7373201847076416
    6. ' write' → logprob: -3.9873201847076416
    7. ' find' → logprob: -4.237320423126221
    8. ' is' → logprob: -4.612320423126221
    9. ' factorial' → logprob: -4.737320423126221
    10. ' compute' → logprob: -4.987320423126221

Token 42: '_dp' (ID: 133252)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1996629387140274
    2. '()' → logprob: -2.324662923812866
    3. '(' → logprob: -2.699662923812866
    4. '_array' → logprob: -5.574663162231445
    5. '_data' → logprob: -6.824663162231445
    6. '_parent' → logprob: -7.074663162231445
    7. '_(' → logprob: -7.199663162231445
    8. '():' → logprob: -7.324663162231445
    9. '_map' → logprob: -7.324663162231445
    10. '_list' → logprob: -7.574663162231445

Token 43: '(size' (ID: 15192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2059672772884369
    2. '_' → logprob: -1.7059673070907593
    3. '_(' → logprob: -6.705967426300049
    4. '(_' → logprob: -7.580967426300049
    5. '_array' → logprob: -7.580967426300049
    6. '()' → logprob: -7.955967426300049
    7. '(n' → logprob: -7.955967426300049
    8. '_table' → logprob: -8.33096694946289
    9. '(size' → logprob: -8.45596694946289
    10. '(_)' → logprob: -8.58096694946289

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025699487887322903
    2. ')' → logprob: -6.627570152282715
    3. ',' → logprob: -6.877570152282715
    4. ' ):' → logprob: -8.877570152282715
    5. ':' → logprob: -10.752570152282715
    6. '_' → logprob: -10.877570152282715
    7. '):
' → logprob: -11.252570152282715
    8. '=' → logprob: -12.252570152282715
    9. ' ' → logprob: -13.127570152282715
    10. '   ' → logprob: -13.252570152282715

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33100998401641846
    2. ':' → logprob: -1.9560099840164185
    3. '[' → logprob: -2.456009864807129
    4. ':
' → logprob: -4.456009864807129
    5. ' =' → logprob: -4.831009864807129
    6. '[:]' → logprob: -4.831009864807129
    7. '    ' → logprob: -5.706009864807129
    8. ' :' → logprob: -5.956009864807129
    9. ' ' → logprob: -5.956009864807129
    10. 'dp' → logprob: -6.206009864807129

Token 46: ' dp' (ID: 21546)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.18367205560207367
    2. '[' → logprob: -2.1836719512939453
    3. ' [[' → logprob: -3.1836719512939453
    4. 'dp' (adapté à ' dp') → logprob: -5.308671951293945
    5. '   ' → logprob: -5.933671951293945
    6. ' return' → logprob: -6.183671951293945
    7. 'return' → logprob: -6.558671951293945
    8. '[[' → logprob: -6.933671951293945
    9. ' dp' → logprob: -7.058671951293945
    10. ' ' → logprob: -7.558671951293945

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4300667643547058
    2. '=' → logprob: -1.0550668239593506
    3. '[' → logprob: -6.6800665855407715
    4. ' ' → logprob: -10.05506706237793
    5. '_' → logprob: -10.80506706237793
    6. ']' → logprob: -11.55506706237793
    7. ' =[' → logprob: -11.55506706237793
    8. '=[' → logprob: -11.80506706237793
    9. '[:]' → logprob: -12.30506706237793
    10. '.' → logprob: -12.68006706237793

Token 48: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2313002049922943
    2. '[' → logprob: -1.7313002347946167
    3. ' [[' → logprob: -3.981300115585327
    4. '[[' → logprob: -4.856300354003906
    5. '[-' → logprob: -6.231300354003906
    6. ' [-' → logprob: -7.606300354003906
    7. '[size' → logprob: -9.106300354003906
    8. '[s' → logprob: -9.606300354003906
    9. ' [{}' → logprob: -9.731300354003906
    10. '[value' → logprob: -9.981300354003906

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5746506452560425
    2. 'float' → logprob: -1.3246506452560425
    3. '[' → logprob: -2.074650764465332
    4. 'False' → logprob: -3.574650764465332
    5. '-' → logprob: -4.449650764465332
    6. '[-' → logprob: -5.949650764465332
    7. '(float' → logprob: -7.199650764465332
    8. '-f' → logprob: -7.324650764465332
    9. ' float' → logprob: -7.699650764465332
    10. ' [' → logprob: -7.949650764465332

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009511216776445508
    2. ']*' → logprob: -7.625951290130615
    3. ']*(' → logprob: -7.875951290130615
    4. ' for' → logprob: -9.625950813293457
    5. ' ]' → logprob: -11.500950813293457
    6. 'for' → logprob: -12.875950813293457
    7. ']+' → logprob: -13.625950813293457
    8. '.' → logprob: -13.875950813293457
    9. ')' → logprob: -14.375950813293457
    10. ',' → logprob: -14.625950813293457

Token 51: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03569842875003815
    2. ' for' → logprob: -4.035698413848877
    3. ']*' → logprob: -4.535698413848877
    4. ']*(' → logprob: -5.910698413848877
    5. '*' → logprob: -6.160698413848877
    6. 'for' → logprob: -7.285698413848877
    7. ' ]' → logprob: -7.410698413848877
    8. ']+' → logprob: -8.535698890686035
    9. ',' → logprob: -9.035698890686035
    10. ' ' → logprob: -9.535698890686035

Token 52: ' (' (ID: 350)
  Prédit: '(size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.056653931736946106
    2. 'size' → logprob: -3.0566539764404297
    3. ' size' → logprob: -5.18165397644043
    4. ' (' → logprob: -6.18165397644043
    5. '(' → logprob: -8.05665397644043
    6. '(s' → logprob: -11.18165397644043
    7. '[size' → logprob: -12.30665397644043
    8. '<size' → logprob: -12.55665397644043
    9. ',size' → logprob: -13.43165397644043
    10. 's' → logprob: -13.55665397644043

Token 53: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.008638677187263966
    2. ' size' → logprob: -4.758638858795166
    3. '(size' → logprob: -10.758638381958008
    4. ')' → logprob: -13.508638381958008
    5. 'siz' → logprob: -15.258638381958008
    6. ' ' → logprob: -15.508638381958008
    7. '[size' → logprob: -15.758638381958008
    8. 'si' → logprob: -15.883638381958008
    9. '	size' → logprob: -16.008638381958008
    10. '   ' → logprob: -16.008638381958008

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05813126638531685
    2. ' +' → logprob: -3.058131217956543
    3. ')' → logprob: -4.683131217956543
    4. ' )' → logprob: -8.558131217956543
    5. '+)' → logprob: -9.933131217956543
    6. '1' → logprob: -12.683131217956543
    7. '))' → logprob: -14.308131217956543
    8. '+
' → logprob: -14.433131217956543
    9. ' ' → logprob: -14.683131217956543
    10. ')+' → logprob: -14.808131217956543

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01879230886697769
    2. ' ' → logprob: -4.018792152404785
    3. '2' → logprob: -7.393792152404785
    4. '   ' → logprob: -10.768792152404785
    5. '  ' → logprob: -13.268792152404785
    6. '7' → logprob: -13.768792152404785
    7. '```' → logprob: -13.768792152404785
    8. '10' → logprob: -14.956292152404785
    9. '    ' → logprob: -15.081292152404785
    10. ')' → logprob: -15.206292152404785

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002233245177194476
    2. '2' → logprob: -8.875223159790039
    3. ' ' → logprob: -9.500223159790039
    4. '10' → logprob: -12.000223159790039
    5. '5' → logprob: -14.125223159790039
    6. '   ' → logprob: -14.250223159790039
    7. '  ' → logprob: -15.312723159790039
    8. '100' → logprob: -15.562723159790039
    9. '3' → logprob: -15.687723159790039
    10. '```' → logprob: -15.875223159790039

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001426346570951864
    2. ')
' → logprob: -9.000143051147461
    3. '<|end|>' → logprob: -11.625143051147461
    4. ' )' → logprob: -12.625143051147461
    5. ']' → logprob: -13.250143051147461
    6. ')return' → logprob: -13.375143051147461
    7. ' ' → logprob: -14.500143051147461
    8. '
' → logprob: -14.500143051147461
    9. '```' → logprob: -14.625143051147461
    10. '}' → logprob: -14.625143051147461

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002578155370429158
    2. '<|end|>' → logprob: -7.127578258514404
    3. 'return' → logprob: -7.252578258514404
    4. '	return' → logprob: -7.377578258514404
    5. ' return' → logprob: -8.752577781677246
    6. '
' → logprob: -9.002577781677246
    7. '    
' → logprob: -9.252577781677246
    8. '<|end|>' → logprob: -10.752577781677246
    9. ')' → logprob: -11.877577781677246
    10. ' ' → logprob: -12.377577781677246

Token 59: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8158857226371765
    2. 'return' → logprob: -1.1908857822418213
    3. ' return' → logprob: -1.6908857822418213
    4. 'dp' (adapté à ' dp') → logprob: -2.8158857822418213
    5. ' dp' → logprob: -5.190885543823242
    6. '	return' → logprob: -6.440885543823242
    7. ' for' → logprob: -7.315885543823242
    8. '
' → logprob: -7.565885543823242
    9. '	dp' → logprob: -8.190885543823242
    10. ' ' → logprob: -8.440885543823242

Token 60: '[size' (ID: 77532)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4974866644479334e-05
    2. '=' → logprob: -12.375015258789062
    3. '[:]' → logprob: -12.500015258789062
    4. ' =' → logprob: -13.750015258789062
    5. '[-' → logprob: -14.000015258789062
    6. '[size' → logprob: -14.000015258789062
    7. ' [' → logprob: -14.750015258789062
    8. ' ' → logprob: -14.750015258789062
    9. '\[' → logprob: -14.750015258789062
    10. '[]' → logprob: -14.750015258789062

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027541153132915497
    2. ')' → logprob: -3.777541160583496
    3. ']=' → logprob: -6.527541160583496
    4. '=' → logprob: -6.902541160583496
    5. '-' → logprob: -6.902541160583496
    6. '+' → logprob: -8.152541160583496
    7. ' ]' → logprob: -8.277541160583496
    8. ')]' → logprob: -9.402541160583496
    9. ')=' → logprob: -9.777541160583496
    10. ' -' → logprob: -10.277541160583496

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326203346252441
    2. '=' → logprob: -0.7576203346252441
    3. ' +=' → logprob: -11.882619857788086
    4. '+=' → logprob: -12.882619857788086
    5. '[' → logprob: -13.382619857788086
    6. ' ' → logprob: -13.507619857788086
    7. ' =
' → logprob: -14.007619857788086
    8. '   ' → logprob: -14.132619857788086
    9. ' |=' → logprob: -14.257619857788086
    10. '0' → logprob: -14.382619857788086

Token 63: ' size' (ID: 2349)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031960124615579844
    2. ' ' → logprob: -6.3781962394714355
    3. '0' → logprob: -6.8781962394714355
    4. 'float' → logprob: -8.503195762634277
    5. '-' → logprob: -8.753195762634277
    6. '100' → logprob: -9.753195762634277
    7. ' -' → logprob: -11.628195762634277
    8. '10' → logprob: -11.753195762634277
    9. ' float' → logprob: -11.753195762634277
    10. 'sys' → logprob: -12.690695762634277

Token 64: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.529895544052124
    2. '
' → logprob: -1.904895544052124
    3. '-' → logprob: -2.404895544052124
    4. ' ' → logprob: -2.904895544052124
    5. ' 
' → logprob: -3.154895544052124
    6. '<|end|>' → logprob: -3.154895544052124
    7. '  
' → logprob: -4.654895782470703
    8. ' +' → logprob: -4.779895782470703
    9. ' -' → logprob: -5.904895782470703
    10. '0' → logprob: -6.154895782470703

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29862064123153687
    2. '<|end|>' → logprob: -1.6736207008361816
    3. '
' → logprob: -3.0486207008361816
    4. '\n' → logprob: -5.173620700836182
    5. ' ' → logprob: -5.298620700836182
    6. '    
' → logprob: -5.673620700836182
    7. '	return' → logprob: -6.048620700836182
    8. '' → logprob: -6.423620700836182
    9. '  
' → logprob: -6.548620700836182
    10. 'return' → logprob: -7.048620700836182

Token 66: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.778816282749176
    2. '   ' → logprob: -1.6538162231445312
    3. 'return' (adapté à ' return') → logprob: -2.0288162231445312
    4. ' return' → logprob: -2.5288162231445312
    5. ' ' → logprob: -3.2788162231445312
    6. '\n' → logprob: -3.4038162231445312
    7. ' 
' → logprob: -3.7788162231445312
    8. '<|end|>' → logprob: -4.403816223144531
    9. '  
' → logprob: -4.528816223144531
    10. '    
' → logprob: -4.903816223144531

Token 67: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.023286247625947
    2. 'dp' → logprob: -3.7732863426208496
    3. '(dp' → logprob: -10.523285865783691
    4. '	dp' → logprob: -11.898285865783691
    5. ' ' → logprob: -12.148285865783691
    6. '_dp' → logprob: -13.398285865783691
    7. ' size' → logprob: -16.648286819458008
    8. 'size' → logprob: -16.773286819458008
    9. ' ' → logprob: -17.023286819458008
    10. '.dp' → logprob: -17.523286819458008

Token 68: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3850685954093933
    2. 'def' → logprob: -2.135068655014038
    3. '

' → logprob: -2.385068655014038
    4. '<|end|>' → logprob: -2.385068655014038
    5. '\n' → logprob: -5.760068416595459
    6. '\' → logprob: -5.885068416595459
    7. '_' → logprob: -6.135068416595459
    8. '' → logprob: -6.260068416595459
    9. 'newline' → logprob: -6.260068416595459
    10. '```' → logprob: -6.635068416595459

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4801551103591919
    2. '
' → logprob: -1.355155110359192
    3. '

' → logprob: -2.1051549911499023
    4. '```' → logprob: -7.605154991149902
    5. '<|end|>' → logprob: -7.980154991149902
    6. '
' → logprob: -8.730154991149902
    7. '\' → logprob: -8.980154991149902
    8. ' def' → logprob: -9.230154991149902
    9. '_' → logprob: -9.230154991149902
    10. '' → logprob: -9.980154991149902

Token 70: ' compute' (ID: 23864)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8107237815856934
    2. ' longest' → logprob: -1.6857237815856934
    3. ' max' → logprob: -2.0607237815856934
    4. ' calculate' → logprob: -2.4357237815856934
    5. ' compute' → logprob: -2.8107237815856934
    6. ' find' → logprob: -3.6857237815856934
    7. ' maximize' → logprob: -4.810723781585693
    8. ' main' → logprob: -4.810723781585693
    9. ' count' → logprob: -5.060723781585693
    10. ' dynamic' → logprob: -5.435723781585693

Token 71: '_extra' (ID: 77451)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0771980881690979
    2. '_' → logprob: -2.952198028564453
    3. '_max' → logprob: -4.577198028564453
    4. '(' → logprob: -5.577198028564453
    5. '(dp' → logprob: -6.577198028564453
    6. '_sum' → logprob: -6.952198028564453
    7. '_next' → logprob: -7.202198028564453
    8. '_factor' → logprob: -7.327198028564453
    9. '_range' → logprob: -7.702198028564453
    10. '_value' → logprob: -7.702198028564453

Token 72: '(a' (ID: 6271)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.412158727645874
    2. '_cost' → logprob: -1.662158727645874
    3. '_space' → logprob: -1.912158727645874
    4. '_' → logprob: -2.162158727645874
    5. '_points' → logprob: -2.912158727645874
    6. '(' → logprob: -3.537158727645874
    7. '_moves' → logprob: -3.787158727645874
    8. '_spaces' → logprob: -4.287158966064453
    9. '_dp' → logprob: -4.287158966064453
    10. '_needed' → logprob: -4.537158966064453

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9886639714241028
    2. '):' → logprob: -1.238663911819458
    3. ')' → logprob: -1.363663911819458
    4. '[i' → logprob: -3.613663911819458
    5. '[' → logprob: -3.738663911819458
    6. '_size' → logprob: -5.238664150238037
    7. '_length' → logprob: -5.363664150238037
    8. '_lengths' → logprob: -6.238664150238037
    9. '[size' → logprob: -6.363664150238037
    10. ' ,' → logprob: -6.738664150238037

Token 74: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10714703798294067
    2. ' b' → logprob: -2.482146978378296
    3. 'dp' → logprob: -4.982147216796875
    4. 'i' → logprob: -5.607147216796875
    5. 'n' → logprob: -6.357147216796875
    6. ' dp' → logprob: -6.857147216796875
    7. ' i' → logprob: -7.107147216796875
    8. 'size' → logprob: -7.607147216796875
    9. 'k' → logprob: -7.732147216796875
    10. ' n' → logprob: -7.857147216796875

Token 75: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022031900007277727
    2. ',' → logprob: -6.377202987670898
    3. ')' → logprob: -8.002202987670898
    4. '):
' → logprob: -9.252202987670898
    5. ' ):' → logprob: -10.877202987670898
    6. ':' → logprob: -11.252202987670898
    7. '   ' → logprob: -11.752202987670898
    8. '_' → logprob: -11.752202987670898
    9. '):
' → logprob: -12.752202987670898
    10. ']:' → logprob: -13.252202987670898

Token 76: ' idx' (ID: 14016)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.15367983281612396
    2. 'c' → logprob: -3.028679847717285
    3. ' dp' → logprob: -3.278679847717285
    4. ' i' → logprob: -4.278679847717285
    5. ' idx' → logprob: -5.028679847717285
    6. ' size' → logprob: -5.153679847717285
    7. ' n' → logprob: -5.278679847717285
    8. 'dp' → logprob: -5.778679847717285
    9. ' k' → logprob: -5.903679847717285
    10. ' )' → logprob: -6.153679847717285

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002556519117206335
    2. ')' → logprob: -6.127556324005127
    3. ',' → logprob: -8.627556800842285
    4. '):
' → logprob: -9.252556800842285
    5. ' ):' → logprob: -10.502556800842285
    6. '1' → logprob: -10.877556800842285
    7. 's' → logprob: -11.627556800842285
    8. '   ' → logprob: -11.627556800842285
    9. '_' → logprob: -11.627556800842285
    10. ':' → logprob: -12.877556800842285

Token 78: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6536796689033508
    2. '   ' → logprob: -0.9036796689033508
    3. '):' → logprob: -3.403679609298706
    4. ')' → logprob: -3.903679609298706
    5. '(' → logprob: -4.528679847717285
    6. ' ' → logprob: -5.903679847717285
    7. '<|end|>' → logprob: -6.278679847717285
    8. ' :' → logprob: -6.903679847717285
    9. ' (' → logprob: -7.153679847717285
    10. '_' → logprob: -7.278679847717285

Token 79: ' sell' (ID: 7437)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8371489644050598
    2. ' ' → logprob: -1.337148904800415
    3. '    ' → logprob: -2.087148904800415
    4. ' if' → logprob: -2.087148904800415
    5. ' return' → logprob: -3.212148904800415
    6. 'if' → logprob: -5.587149143218994
    7. 'return' → logprob: -5.837149143218994
    8. ' 
' → logprob: -6.212149143218994
    9. '  ' → logprob: -6.462149143218994
    10. '    
' → logprob: -7.087149143218994

Token 80: ' =' (ID: 314)
  Prédit: '_price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_price' → logprob: -0.2777368724346161
    2. '_idx' → logprob: -2.2777369022369385
    3. 'ing' → logprob: -3.4027369022369385
    4. 'er' → logprob: -3.5277369022369385
    5. '_' → logprob: -3.5277369022369385
    6. '_amount' → logprob: -4.152736663818359
    7. ' =' → logprob: -5.777736663818359
    8. '-' → logprob: -5.902736663818359
    9. '=' → logprob: -5.902736663818359
    10. '_prices' → logprob: -6.027736663818359

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.128106713294983
    2. ' a' → logprob: -1.253106713294983
    3. 'b' → logprob: -2.2531065940856934
    4. ' max' → logprob: -2.2531065940856934
    5. ' b' → logprob: -2.3781065940856934
    6. 'max' → logprob: -3.6281065940856934
    7. ' (' → logprob: -4.003106594085693
    8. '(a' → logprob: -5.128106594085693
    9. ' min' → logprob: -5.253106594085693
    10. ' idx' → logprob: -5.253106594085693

Token 82: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.018393639475107193
    2. '[' → logprob: -4.268393516540527
    3. ' -' → logprob: -6.518393516540527
    4. '-' → logprob: -7.518393516540527
    5. ' +' → logprob: -8.018393516540527
    6. ' *' → logprob: -8.143393516540527
    7. '+' → logprob: -8.268393516540527
    8. '_idx' → logprob: -8.643393516540527
    9. '*' → logprob: -9.205893516540527
    10. '[-' → logprob: -9.268393516540527

Token 83: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018803777173161507
    2. '-' → logprob: -4.768803596496582
    3. '])' → logprob: -5.268803596496582
    4. '+' → logprob: -5.893803596496582
    5. ']-' → logprob: -7.268803596496582
    6. ']+' → logprob: -7.768803596496582
    7. ')' → logprob: -8.143803596496582
    8. ' -' → logprob: -8.643803596496582
    9. '[' → logprob: -8.643803596496582
    10. '][' → logprob: -9.143803596496582

Token 84: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4795435070991516
    2. '-' → logprob: -1.4795434474945068
    3. '+' → logprob: -2.229543447494507
    4. ' +' → logprob: -4.104543685913086
    5. '[' → logprob: -4.229543685913086
    6. '[idx' → logprob: -5.729543685913086
    7. ' *' → logprob: -5.979543685913086
    8. '*' → logprob: -6.104543685913086
    9. '>' → logprob: -6.604543685913086
    10. ' ' → logprob: -6.729543685913086

Token 85: ' extra' (ID: 5018)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.860370397567749
    2. ' buy' → logprob: -1.735370397567749
    3. '+' → logprob: -2.360370397567749
    4. '-' → logprob: -2.610370397567749
    5. 'buy' → logprob: -2.735370397567749
    6. ' +' → logprob: -3.235370397567749
    7. ' if' → logprob: -3.360370397567749
    8. '-buy' → logprob: -3.360370397567749
    9. ' *' → logprob: -4.485370635986328
    10. '*' → logprob: -5.235370635986328

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3155554533004761
    2. '=' → logprob: -1.315555453300476
    3. '_' → logprob: -6.815555572509766
    4. 's' → logprob: -8.690555572509766
    5. '+' → logprob: -8.940555572509766
    6. ' ' → logprob: -8.940555572509766
    7. ' +=' → logprob: -9.190555572509766
    8. '_cost' → logprob: -9.440555572509766
    9. '  ' → logprob: -9.690555572509766
    10. '   ' → logprob: -9.815555572509766

Token 87: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7761180996894836
    2. ' max' → logprob: -0.9011180996894836
    3. 'b' → logprob: -2.901118040084839
    4. ' sell' → logprob: -3.526118040084839
    5. 'max' → logprob: -4.026118278503418
    6. ' ' → logprob: -4.401118278503418
    7. '0' → logprob: -4.776118278503418
    8. ' (' → logprob: -5.526118278503418
    9. 'sell' → logprob: -6.276118278503418
    10. ' abs' → logprob: -6.901118278503418

Token 88: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.014731248840689659
    2. '[' → logprob: -4.264731407165527
    3. ' [' → logprob: -8.139731407165527
    4. 'idx' → logprob: -9.514731407165527
    5. '[id' → logprob: -10.764731407165527
    6. '[index' → logprob: -10.889731407165527
    7. '[
' → logprob: -11.014731407165527
    8. '[s' → logprob: -11.139731407165527
    9. '[len' → logprob: -11.139731407165527
    10. '[size' → logprob: -11.514731407165527

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07224027067422867
    2. ')' → logprob: -3.1972403526306152
    3. ' -' → logprob: -4.322240352630615
    4. '[' → logprob: -5.072240352630615
    5. '-' → logprob: -5.072240352630615
    6. ' ]' → logprob: -6.697240352630615
    7. '])' → logprob: -7.822240352630615
    8. '<|end|>' → logprob: -7.822240352630615
    9. ' )' → logprob: -8.572239875793457
    10. '+' → logprob: -8.697239875793457

Token 90: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22726283967494965
    2. '-' → logprob: -2.6022627353668213
    3. '<|end|>' → logprob: -2.9772627353668213
    4. ' ' → logprob: -3.4772627353668213
    5. '+' → logprob: -3.9772627353668213
    6. ' +' → logprob: -4.4772629737854
    7. '   ' → logprob: -4.9772629737854
    8. '[' → logprob: -5.3522629737854
    9. '    ' → logprob: -6.8522629737854
    10. ' *' → logprob: -6.9772629737854

Token 91: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.31447070837020874
    2. ' sell' → logprob: -1.5644707679748535
    3. 'a' → logprob: -3.0644707679748535
    4. ' a' → logprob: -4.4394707679748535
    5. '1' → logprob: -7.3144707679748535
    6. ' ' → logprob: -7.5644707679748535
    7. ' (' → logprob: -8.876970291137695
    8. '0' → logprob: -9.376970291137695
    9. '(' → logprob: -9.751970291137695
    10. 's' → logprob: -9.751970291137695

Token 92: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.060845497995615005
    2. '<|end|>' → logprob: -2.9358456134796143
    3. ' ' → logprob: -6.310845375061035
    4. '+' → logprob: -6.810845375061035
    5. ' 
' → logprob: -7.060845375061035
    6. ' if' → logprob: -7.310845375061035
    7. '<|end|>' → logprob: -7.560845375061035
    8. '*' → logprob: -8.560845375061035
    9. '  
' → logprob: -9.060845375061035
    10. ' +' → logprob: -9.310845375061035

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2469680905342102
    2. '   ' → logprob: -1.9969680309295654
    3. '<|end|>' → logprob: -3.7469680309295654
    4. ' ' → logprob: -4.2469682693481445
    5. ' if' → logprob: -4.2469682693481445
    6. '	return' → logprob: -4.8719682693481445
    7. ' 
' → logprob: -4.9969682693481445
    8. 'return' → logprob: -5.3719682693481445
    9. ' return' → logprob: -5.8719682693481445
    10. '    
' → logprob: -6.1219682693481445

Token 94: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14326587319374084
    2. ' 
' → logprob: -3.393265962600708
    3. ' ' → logprob: -3.518265962600708
    4. '<|end|>' → logprob: -3.893265962600708
    5. '   ' → logprob: -4.393265724182129
    6. ' if' → logprob: -4.518265724182129
    7. ' return' → logprob: -4.643265724182129
    8. 'return' (adapté à ' return') → logprob: -5.393265724182129
    9. '\n' → logprob: -5.893265724182129
    10. '  
' → logprob: -6.143265724182129

Token 95: ' sell' (ID: 7437)
  Prédit: ' extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extra' → logprob: -0.21516053378582
    2. ' max' → logprob: -2.090160608291626
    3. 'extra' → logprob: -2.715160608291626
    4. 'max' → logprob: -5.840160369873047
    5. ' abs' → logprob: -7.965160369873047
    6. ' ' → logprob: -8.715160369873047
    7. '0' → logprob: -9.340160369873047
    8. 'abs' → logprob: -9.965160369873047
    9. '1' → logprob: -10.215160369873047
    10. ' ' → logprob: -10.340160369873047

Token 96: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' extra' (ID: 5018)
  Prédit: ' extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extra' → logprob: -0.044034700840711594
    2. 'extra' → logprob: -3.169034719467163
    3. ' ' → logprob: -8.044034957885742
    4. ' ' → logprob: -8.169034957885742
    5. ' max' → logprob: -8.294034957885742
    6. 'space' → logprob: -9.669034957885742
    7. ' space' → logprob: -10.169034957885742
    8. '(extra' → logprob: -10.544034957885742
    9. ' extras' → logprob: -11.669034957885742
    10. ' 
' → logprob: -11.794034957885742

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8721526861190796
    2. 'def' → logprob: -0.8721526861190796
    3. '<|end|>' → logprob: -1.8721526861190796
    4. '

' → logprob: -5.622152805328369
    5. '<|end|>' → logprob: -6.622152805328369
    6. '\n' → logprob: -6.622152805328369
    7. '\' → logprob: -6.872152805328369
    8. '#' → logprob: -7.372152805328369
    9. '```' → logprob: -7.372152805328369
    10. '[' → logprob: -8.372152328491211

Token 99: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7375414371490479
    2. 'def' → logprob: -0.7375414371490479
    3. '

' → logprob: -3.737541437149048
    4. '<|end|>' → logprob: -4.237541198730469
    5. '\n' → logprob: -5.737541198730469
    6. '\' → logprob: -7.237541198730469
    7. '<|end|>' → logprob: -8.362541198730469
    8. '```' → logprob: -8.612541198730469
    9. ' def' → logprob: -8.987541198730469
    10. '#' → logprob: -9.112541198730469

Token 100: ' update' (ID: 4027)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.412604570388794
    2. ' solve' → logprob: -1.412604570388794
    3. ' main' → logprob: -1.662604570388794
    4. ' process' → logprob: -2.287604570388794
    5. ' compute' → logprob: -2.287604570388794
    6. ' calculate' → logprob: -3.787604570388794
    7. ' find' → logprob: -4.287604331970215
    8. ' min' → logprob: -4.287604331970215
    9. ' maximize' → logprob: -4.412604331970215
    10. 'max' → logprob: -4.912604331970215

Token 101: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.0012667786795645952
    2. '(dp' → logprob: -7.251266956329346
    3. '_' → logprob: -8.126266479492188
    4. 'dp' → logprob: -9.876266479492188
    5. '(' → logprob: -10.001266479492188
    6. '_max' → logprob: -10.126266479492188
    7. '_(' → logprob: -10.376266479492188
    8. '_lp' → logprob: -11.626266479492188
    9. '(_' → logprob: -11.751266479492188
    10. '_DP' → logprob: -12.126266479492188

Token 102: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0064557744190096855
    2. '(' → logprob: -5.131455898284912
    3. ' (' → logprob: -8.006455421447754
    4. '(size' → logprob: -8.756455421447754
    5. '(idx' → logprob: -11.381455421447754
    6. '(a' → logprob: -11.756455421447754
    7. '(i' → logprob: -12.131455421447754
    8. ' dp' → logprob: -12.506455421447754
    9. 'dp' → logprob: -13.381455421447754
    10. '(n' → logprob: -13.381455421447754

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003270023735240102
    2. ' ,' → logprob: -8.125327110290527
    3. ',index' → logprob: -10.875327110290527
    4. ',i' → logprob: -12.500327110290527
    5. '):' → logprob: -13.500327110290527
    6. ',size' → logprob: -13.625327110290527
    7. ' idx' → logprob: -13.750327110290527
    8. 'idx' → logprob: -14.250327110290527
    9. ',n' → logprob: -14.375327110290527
    10. ',a' → logprob: -14.500327110290527

Token 104: ' sell' (ID: 7437)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5419270992279053
    2. ' idx' → logprob: -1.7919270992279053
    3. 'a' → logprob: -2.2919270992279053
    4. ' sell' → logprob: -3.2919270992279053
    5. ' extra' → logprob: -3.4169270992279053
    6. ' dp' → logprob: -3.9169270992279053
    7. 'idx' → logprob: -4.166927337646484
    8. ' size' → logprob: -4.541927337646484
    9. ' i' → logprob: -4.666927337646484
    10. 'sell' → logprob: -4.791927337646484

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008341663633473217
    2. ' ,' → logprob: -8.125834465026855
    3. 's' → logprob: -8.625834465026855
    4. '_idx' → logprob: -8.875834465026855
    5. 'idx' → logprob: -10.250834465026855
    6. '_values' → logprob: -11.125834465026855
    7. '_value' → logprob: -11.250834465026855
    8. '):
' → logprob: -11.250834465026855
    9. '_,' → logprob: -11.375834465026855
    10. ')' → logprob: -11.500834465026855

Token 106: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.062106166034936905
    2. ' extra' → logprob: -2.812106132507324
    3. 'sell' → logprob: -10.062106132507324
    4. 'dp' → logprob: -10.812106132507324
    5. ' sell' → logprob: -11.312106132507324
    6. 'idx' → logprob: -11.562106132507324
    7. ' dp' → logprob: -11.937106132507324
    8. '   ' → logprob: -12.062106132507324
    9. 'size' → logprob: -12.062106132507324
    10. ' ' → logprob: -12.312106132507324

Token 107: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2428743541240692
    2. '):' → logprob: -1.6178743839263916
    3. '):
' → logprob: -4.1178741455078125
    4. '   ' → logprob: -7.8678741455078125
    5. ' ,' → logprob: -8.242874145507812
    6. '):
' → logprob: -8.867874145507812
    7. ' ):' → logprob: -9.492874145507812
    8. ',index' → logprob: -9.992874145507812
    9. ',size' → logprob: -10.742874145507812
    10. ')' → logprob: -10.742874145507812

Token 108: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29600292444229126
    2. '   ' → logprob: -1.4210028648376465
    3. 'for' → logprob: -5.0460028648376465
    4. ' dp' → logprob: -5.7960028648376465
    5. ' if' → logprob: -5.9210028648376465
    6. '
' → logprob: -6.6710028648376465
    7. 'dp' → logprob: -7.9210028648376465
    8. ' i' → logprob: -8.296003341674805
    9. '	for' → logprob: -8.671003341674805
    10. '    ' → logprob: -8.796003341674805

Token 109: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07825911045074463
    2. 'for' (adapté à ' for') → logprob: -2.828258991241455
    3. '   ' → logprob: -4.828258991241455
    4. ' if' → logprob: -5.703258991241455
    5. ' dp' → logprob: -5.953258991241455
    6. 'dp' → logprob: -6.953258991241455
    7. 'if' → logprob: -7.953258991241455
    8. ' n' → logprob: -8.078259468078613
    9. 'n' → logprob: -8.078259468078613
    10. ' i' → logprob: -8.953259468078613

Token 110: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0006086751818656921
    2. 'i' → logprob: -8.125608444213867
    3. ' idx' → logprob: -8.625608444213867
    4. ' ' → logprob: -9.250608444213867
    5. ' _' → logprob: -11.375608444213867
    6. ' j' → logprob: -12.375608444213867
    7. '	i' → logprob: -12.625608444213867
    8. ' x' → logprob: -12.625608444213867
    9. ' ' → logprob: -13.125608444213867
    10. '   ' → logprob: -13.250608444213867

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003942448645830154
    2. 'in' → logprob: -5.628942489624023
    3. ' ' → logprob: -8.253942489624023
    4. ',' → logprob: -10.003942489624023
    5. '   ' → logprob: -11.878942489624023
    6. '  ' → logprob: -12.003942489624023
    7. '+' → logprob: -12.378942489624023
    8. 'range' → logprob: -12.503942489624023
    9. ' ,' → logprob: -13.253942489624023
    10. 'n' → logprob: -13.253942489624023

Token 112: ' reversed' (ID: 57184)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6997796297073364
    2. ' xrange' → logprob: -1.3247796297073364
    3. 'range' → logprob: -1.4497796297073364
    4. 'x' → logprob: -6.574779510498047
    5. '   ' → logprob: -7.449779510498047
    6. '	range' → logprob: -8.074779510498047
    7. ' ' → logprob: -8.199779510498047
    8. '  ' → logprob: -9.324779510498047
    9. '(range' → logprob: -10.824779510498047
    10. ')' → logprob: -10.949779510498047

Token 113: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0013063102960586548
    2. '(' → logprob: -6.751306533813477
    3. 'range' → logprob: -9.501306533813477
    4. ' range' → logprob: -9.876306533813477
    5. ' (' → logprob: -12.251306533813477
    6. '(x' → logprob: -12.501306533813477
    7. ' xrange' → logprob: -14.501306533813477
    8. '(dp' → logprob: -14.751306533813477
    9. '	range' → logprob: -15.376306533813477
    10. '   ' → logprob: -16.376306533813477

Token 114: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.02783219702541828
    2. '(' → logprob: -4.27783203125
    3. '(s' → logprob: -4.52783203125
    4. '(dp' → logprob: -5.90283203125
    5. 'len' → logprob: -11.52783203125
    6. '(extra' → logprob: -11.65283203125
    7. ' (' → logprob: -11.77783203125
    8. ' len' → logprob: -12.90283203125
    9. ')' → logprob: -13.15283203125
    10. '((' → logprob: -13.77783203125

Token 115: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.625041961669922
    3. 'dp' → logprob: -11.625041961669922
    4. ' (' → logprob: -12.625041961669922
    5. ' dp' → logprob: -13.125041961669922
    6. '(d' → logprob: -14.000041961669922
    7. '_dp' → logprob: -14.750041961669922
    8. '	dp' → logprob: -14.875041961669922
    9. '))' → logprob: -15.375041961669922
    10. ' ' → logprob: -15.625041961669922

Token 116: ')' (ID: 8)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.40206480026245117
    2. '))' → logprob: -1.4020648002624512
    3. ')):
' → logprob: -3.277064800262451
    4. ' ))' → logprob: -3.277064800262451
    5. '()))' → logprob: -4.902064800262451
    6. ' ' → logprob: -6.777064800262451
    7. ')):
' → logprob: -7.902064800262451
    8. ' -' → logprob: -8.65206527709961
    9. '   ' → logprob: -9.02706527709961
    10. ')' → logprob: -9.27706527709961

Token 117: ' -' (ID: 533)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.024371134117245674
    2. ')):
' → logprob: -3.8993711471557617
    3. '))' → logprob: -5.899371147155762
    4. ')):
' → logprob: -8.149371147155762
    5. '-' → logprob: -8.274371147155762
    6. ' ))' → logprob: -9.024371147155762
    7. ' ' → logprob: -9.274371147155762
    8. '   ' → logprob: -9.524371147155762
    9. ':' → logprob: -9.649371147155762
    10. '):' → logprob: -9.774371147155762

Token 118: ' sell' (ID: 7437)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002204262651503086
    2. ' ' → logprob: -6.127204418182373
    3. '   ' → logprob: -11.627203941345215
    4. '2' → logprob: -12.377203941345215
    5. ')' → logprob: -12.877203941345215
    6. '
' → logprob: -14.314703941345215
    7. '```' → logprob: -14.314703941345215
    8. '-' → logprob: -14.939703941345215
    9. ' ' → logprob: -15.627203941345215
    10. '  ' → logprob: -15.689703941345215

Token 119: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.15044233202934265
    2. ')):
' → logprob: -2.275442361831665
    3. '+' → logprob: -4.025442123413086
    4. ' +' → logprob: -5.025442123413086
    5. '))' → logprob: -5.150442123413086
    6. ' ))' → logprob: -6.525442123413086
    7. '):' → logprob: -6.775442123413086
    8. ' -' → logprob: -6.900442123413086
    9. ')):
' → logprob: -7.025442123413086
    10. '   ' → logprob: -7.150442123413086

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37795501947402954
    2. ':' → logprob: -1.2529549598693848
    3. '):' → logprob: -3.8779549598693848
    4. ' :' → logprob: -5.252954959869385
    5. '   ' → logprob: -6.627954959869385
    6. ':
' → logprob: -7.877954959869385
    7. '):
' → logprob: -8.502955436706543
    8. '    ' → logprob: -8.502955436706543
    9. ')' → logprob: -8.627955436706543
    10. 'dp' → logprob: -8.877955436706543

Token 121: ' dp' (ID: 21546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1018267422914505
    2. '       ' → logprob: -3.2268266677856445
    3. ' dp' → logprob: -3.7268266677856445
    4. 'if' → logprob: -3.8518266677856445
    5. 'dp' (adapté à ' dp') → logprob: -5.2268266677856445
    6. '           ' → logprob: -5.6018266677856445
    7. '   ' → logprob: -6.3518266677856445
    8. '    ' → logprob: -7.3518266677856445
    9. ' ' → logprob: -9.601826667785645
    10. '	if' → logprob: -9.601826667785645

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010192327899858356
    2. '[' → logprob: -7.00101900100708
    3. ' [' → logprob: -9.626019477844238
    4. '[max' → logprob: -11.001019477844238
    5. 'max' → logprob: -12.376019477844238
    6. 'i' → logprob: -12.626019477844238
    7. '[j' → logprob: -12.751019477844238
    8. '[
' → logprob: -13.001019477844238
    9. '```' → logprob: -13.001019477844238
    10. ']' → logprob: -13.251019477844238

Token 123: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02966173179447651
    2. '+' → logprob: -3.9046616554260254
    3. ']+=' → logprob: -5.529661655426025
    4. '+i' → logprob: -6.029661655426025
    5. ' ]' → logprob: -7.154661655426025
    6. ']=' → logprob: -7.154661655426025
    7. ' +' → logprob: -7.279661655426025
    8. '+s' → logprob: -8.779662132263184
    9. '   ' → logprob: -8.904662132263184
    10. '+j' → logprob: -10.529662132263184

Token 124: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4424331486225128
    2. ' =' → logprob: -1.4424331188201904
    3. '+=' → logprob: -2.1924331188201904
    4. ' +=' → logprob: -4.9424333572387695
    5. '=max' → logprob: -6.5674333572387695
    6. '+' → logprob: -7.4424333572387695
    7. '>' → logprob: -9.31743335723877
    8. 'max' → logprob: -9.81743335723877
    9. ']+=' → logprob: -9.81743335723877
    10. '>=' → logprob: -10.19243335723877

Token 125: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01609044335782528
    2. ' max' → logprob: -4.141090393066406
    3. 'min' → logprob: -10.016090393066406
    4. 'dp' → logprob: -11.891090393066406
    5. '	max' → logprob: -12.891090393066406
    6. '   ' → logprob: -14.641090393066406
    7. ' ' → logprob: -14.766090393066406
    8. ' min' → logprob: -14.766090393066406
    9. ' dp' → logprob: -14.766090393066406
    10. '(max' → logprob: -15.641090393066406

Token 126: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0006481022574007511
    2. '(' → logprob: -7.375648021697998
    3. 'dp' → logprob: -11.000648498535156
    4. ' (' → logprob: -13.250648498535156
    5. '(
' → logprob: -13.375648498535156
    6. ' dp' → logprob: -13.875648498535156
    7. '	dp' → logprob: -15.500648498535156
    8. '   ' → logprob: -15.750648498535156
    9. '_dp' → logprob: -17.375648498535156
    10. '(d' → logprob: -17.625648498535156

Token 127: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00044377794256433845
    2. '[' → logprob: -9.125443458557129
    3. 'i' → logprob: -9.125443458557129
    4. '(i' → logprob: -9.750443458557129
    5. '+i' → logprob: -10.250443458557129
    6. ')' → logprob: -10.375443458557129
    7. ']' → logprob: -11.125443458557129
    8. '   ' → logprob: -11.250443458557129
    9. '][' → logprob: -11.250443458557129
    10. '+' → logprob: -11.250443458557129

Token 128: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11893521249294281
    2. '],' → logprob: -2.6189351081848145
    3. '+i' → logprob: -3.6189351081848145
    4. ' +' → logprob: -4.7439351081848145
    5. ',' → logprob: -5.7439351081848145
    6. 'i' → logprob: -8.868935585021973
    7. '+s' → logprob: -9.243935585021973
    8. '   ' → logprob: -9.243935585021973
    9. '       ' → logprob: -9.743935585021973
    10. ']' → logprob: -10.118935585021973

Token 129: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1603551208972931
    2. ' dp' → logprob: -1.9103550910949707
    3. '       ' → logprob: -10.035355567932129
    4. '   ' → logprob: -10.660355567932129
    5. '	dp' → logprob: -10.785355567932129
    6. '           ' → logprob: -11.285355567932129
    7. 'i' → logprob: -11.660355567932129
    8. '(dp' → logprob: -12.160355567932129
    9. ' ' → logprob: -12.535355567932129
    10. ' i' → logprob: -13.035355567932129

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5690089639974758e-05
    2. 'i' → logprob: -11.750015258789062
    3. '[' → logprob: -11.875015258789062
    4. '{i' → logprob: -15.000015258789062
    5. '(i' → logprob: -15.375015258789062
    6. ' i' → logprob: -17.000015258789062
    7. '	i' → logprob: -17.125015258789062
    8. '   ' → logprob: -17.375015258789062
    9. '[int' → logprob: -17.625015258789062
    10. '[next' → logprob: -17.750015258789062

Token 131: ' +' (ID: 659)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1221536248922348
    2. '[i' → logprob: -2.7471535205841064
    3. '+' → logprob: -3.7471535205841064
    4. '+i' → logprob: -3.9971535205841064
    5. ' +' → logprob: -4.8721537590026855
    6. ' i' → logprob: -6.9971537590026855
    7. '[' → logprob: -8.997153282165527
    8. 's' → logprob: -9.622153282165527
    9. '(i' → logprob: -10.247153282165527
    10. '
' → logprob: -10.997153282165527

Token 132: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.002812363440170884
    2. ' sell' → logprob: -5.877812385559082
    3. ' ' → logprob: -12.627812385559082
    4. '   ' → logprob: -13.252812385559082
    5. 's' → logprob: -13.877812385559082
    6. 'sold' → logprob: -14.877812385559082
    7. '.sell' → logprob: -15.002812385559082
    8. '  ' → logprob: -15.127812385559082
    9. '	s' → logprob: -16.002811431884766
    10. 'sale' → logprob: -16.002811431884766

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032592954812571406
    2. ']+' → logprob: -8.750326156616211
    3. ' ]' → logprob: -8.750326156616211
    4. '+' → logprob: -12.375326156616211
    5. '])' → logprob: -13.125326156616211
    6. ')' → logprob: -14.000326156616211
    7. '   ' → logprob: -14.000326156616211
    8. ' +' → logprob: -15.250326156616211
    9. '']' → logprob: -15.625326156616211
    10. '+]' → logprob: -15.750326156616211

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6938318610191345
    2. ' +' → logprob: -0.6938318610191345
    3. ')' → logprob: -7.443831920623779
    4. ' -' → logprob: -10.818831443786621
    5. ']' → logprob: -11.068831443786621
    6. ' plus' → logprob: -11.068831443786621
    7. '-' → logprob: -11.193831443786621
    8. ' ' → logprob: -11.943831443786621
    9. '   ' → logprob: -11.943831443786621
    10. 'plus' → logprob: -12.068831443786621

Token 135: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.16024251282215118
    2. ' extra' → logprob: -1.9102425575256348
    3. 'sell' → logprob: -12.035242080688477
    4. ' sell' → logprob: -12.035242080688477
    5. '(extra' → logprob: -13.535242080688477
    6. ' ' → logprob: -14.035242080688477
    7. '   ' → logprob: -14.285242080688477
    8. 'extr' → logprob: -14.785242080688477
    9. 'extras' → logprob: -14.785242080688477
    10. 'Extra' → logprob: -14.785242080688477

Token 136: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016957100888248533
    2. ')
' → logprob: -8.75016975402832
    3. ' )' → logprob: -11.62516975402832
    4. '))' → logprob: -13.75016975402832
    5. '   ' → logprob: -14.37516975402832
    6. '       ' → logprob: -15.62516975402832
    7. ')

' → logprob: -16.37516975402832
    8. ')`' → logprob: -16.50016975402832
    9. ')
' → logprob: -17.50016975402832
    10. ')return' → logprob: -17.62516975402832

Token 137: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' dp' (ID: 21546)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04461628571152687
    2. ' solve' → logprob: -3.794616222381592
    3. ' max' → logprob: -4.544616222381592
    4. 'main' → logprob: -5.544616222381592
    5. ' process' → logprob: -5.794616222381592
    6. ' maximize' → logprob: -6.669616222381592
    7. 'solve' → logprob: -7.419616222381592
    8. ' compute' → logprob: -7.919616222381592
    9. 'max' → logprob: -8.54461669921875
    10. ' calculate' → logprob: -8.79461669921875

Token 139: '_round' (ID: 79298)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5267773270606995
    2. '(' → logprob: -1.2767772674560547
    3. '_update' → logprob: -2.5267772674560547
    4. '(size' → logprob: -5.651777267456055
    5. '_main' → logprob: -5.651777267456055
    6. '_run' → logprob: -5.651777267456055
    7. '_size' → logprob: -5.776777267456055
    8. '_dp' → logprob: -5.901777267456055
    9. '_loop' → logprob: -6.026777267456055
    10. '_initialize' → logprob: -6.276777267456055

Token 140: '(n' (ID: 2406)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.20463378727436066
    2. '(' → logprob: -1.7046338319778442
    3. '():' → logprob: -6.704633712768555
    4. '(size' → logprob: -7.329633712768555
    5. '(lp' → logprob: -8.454633712768555
    6. '(a' → logprob: -8.954633712768555
    7. '(_' → logprob: -9.079633712768555
    8. ' (' → logprob: -9.204633712768555
    9. '(s' → logprob: -9.204633712768555
    10. '()' → logprob: -9.579633712768555

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001582470489665866
    2. '):' → logprob: -6.501582622528076
    3. ' ,' → logprob: -10.251582145690918
    4. ')' → logprob: -11.126582145690918
    5. ',n' → logprob: -11.376582145690918
    6. ',
' → logprob: -12.751582145690918
    7. ',a' → logprob: -12.876582145690918
    8. 'a' → logprob: -13.376582145690918
    9. ',s' → logprob: -13.626582145690918
    10. '_,' → logprob: -13.751582145690918

Token 142: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.053568024188280106
    2. ' a' → logprob: -3.303568124771118
    3. 'dp' → logprob: -4.553567886352539
    4. 'm' → logprob: -6.428567886352539
    5. ' dp' → logprob: -6.553567886352539
    6. 'k' → logprob: -8.553567886352539
    7. ' m' → logprob: -8.678567886352539
    8. 'b' → logprob: -8.803567886352539
    9. 'A' → logprob: -9.241067886352539
    10. 'round' → logprob: -9.303567886352539

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005682834889739752
    2. '):' → logprob: -7.875568389892578
    3. 'a' → logprob: -10.375568389892578
    4. 's' → logprob: -10.750568389892578
    5. ' ,' → logprob: -10.750568389892578
    6. ')' → logprob: -10.750568389892578
    7. ',a' → logprob: -10.875568389892578
    8. ',
' → logprob: -11.250568389892578
    9. ',n' → logprob: -11.750568389892578
    10. '1' → logprob: -11.750568389892578

Token 144: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026423374190926552
    2. ' B' → logprob: -3.651423454284668
    3. 'b' → logprob: -10.276423454284668
    4. 'dp' → logprob: -11.026423454284668
    5. 'n' → logprob: -11.276423454284668
    6. ' ' → logprob: -11.401423454284668
    7. '   ' → logprob: -12.151423454284668
    8. 'M' → logprob: -12.463923454284668
    9. ')' → logprob: -12.463923454284668
    10. 'a' → logprob: -12.713923454284668

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04317057877779007
    2. ',' → logprob: -3.168170690536499
    3. ')' → logprob: -9.293170928955078
    4. ' ):' → logprob: -10.043170928955078
    5. '):
' → logprob: -10.793170928955078
    6. ':' → logprob: -12.293170928955078
    7. '   ' → logprob: -12.418170928955078
    8. ' ,' → logprob: -13.293170928955078
    9. ',n' → logprob: -13.793170928955078
    10. ']:' → logprob: -14.543170928955078

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03375358134508133
    2. 'dp' → logprob: -3.5337536334991455
    3. ' dp' → logprob: -5.533753395080566
    4. 'def' → logprob: -10.658753395080566
    5. '	dp' → logprob: -11.033753395080566
    6. '   ' → logprob: -13.408753395080566
    7. '(dp' → logprob: -13.908753395080566
    8. '_dp' → logprob: -14.158753395080566
    9. '```' → logprob: -14.408753395080566
    10. ' def' → logprob: -15.658753395080566

Token 147: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0064230868592858315
    2. '   ' → logprob: -5.756422996520996
    3. ' dp' → logprob: -5.756422996520996
    4. 'def' → logprob: -9.756422996520996
    5. '
' → logprob: -12.256422996520996
    6. '	dp' → logprob: -12.381422996520996
    7. 'size' → logprob: -12.506422996520996
    8. ' ' → logprob: -12.881422996520996
    9. 'n' → logprob: -13.381422996520996
    10. '```' → logprob: -14.506422996520996

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575941264629364
    2. ' =' → logprob: -0.825941264629364
    3. '   ' → logprob: -13.57594108581543
    4. ',' → logprob: -15.57594108581543
    5. ' ' → logprob: -15.82594108581543
    6. '  ' → logprob: -15.95094108581543
    7. '[' → logprob: -16.07594108581543
    8. '＝' → logprob: -17.45094108581543
    9. ')' → logprob: -17.70094108581543
    10. '=

' → logprob: -18.20094108581543

Token 149: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.2810707092285156
    2. ' initialize' → logprob: -1.5310707092285156
    3. '[' → logprob: -3.7810707092285156
    4. ' [' → logprob: -5.156070709228516
    5. '[in' → logprob: -9.656070709228516
    6. '	initialize' → logprob: -10.156070709228516
    7. '   ' → logprob: -11.156070709228516
    8. '.initialize' → logprob: -11.531070709228516
    9. ' ' → logprob: -12.031070709228516
    10. 'initial' → logprob: -12.656070709228516

Token 150: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.505351095460355e-05
    2. 'dp' → logprob: -9.625075340270996
    3. '(dp' → logprob: -11.875075340270996
    4. '_' → logprob: -14.500075340270996
    5. '(' → logprob: -15.125075340270996
    6. '_lp' → logprob: -15.125075340270996
    7. '```' → logprob: -15.250075340270996
    8. 'DP' → logprob: -15.875075340270996
    9. '	dp' → logprob: -16.50007438659668
    10. '_dn' → logprob: -16.62507438659668

Token 151: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.125017166137695
    3. 'n' → logprob: -13.250017166137695
    4. ' (' → logprob: -14.875017166137695
    5. '(len' → logprob: -14.875017166137695
    6. '(
' → logprob: -16.875017166137695
    7. '[n' → logprob: -17.750017166137695
    8. '((' → logprob: -18.000017166137695
    9. '(N' → logprob: -18.500017166137695
    10. '(nx' → logprob: -19.000017166137695

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001698094274615869
    2. ')
' → logprob: -8.87516975402832
    3. ' )' → logprob: -10.75016975402832
    4. ')n' → logprob: -12.12516975402832
    5. ')

' → logprob: -14.00016975402832
    6. 'n' → logprob: -14.62516975402832
    7. ')`' → logprob: -14.87516975402832
    8. ')
' → logprob: -15.25016975402832
    9. '))' → logprob: -15.25016975402832
    10. '   ' → logprob: -15.62516975402832

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045471735298633575
    2. 'for' → logprob: -3.170471668243408
    3. ' for' → logprob: -6.295471668243408
    4. '<|end|>' → logprob: -7.420471668243408
    5. '	for' → logprob: -11.670472145080566
    6. 'def' → logprob: -11.670472145080566
    7. 'dp' → logprob: -12.795472145080566
    8. '    
' → logprob: -13.170472145080566
    9. '<|end|>' → logprob: -14.170472145080566
    10. ')' → logprob: -14.420472145080566

Token 154: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.081584716506768e-05
    2. ' for' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.250020980834961
    4. '	for' → logprob: -18.87502098083496
    5. '    
' → logprob: -19.62502098083496
    6. 'dp' → logprob: -20.75002098083496
    7. '
' → logprob: -21.25002098083496
    8. 'def' → logprob: -21.62502098083496
    9. '  ' → logprob: -21.62502098083496
    10. ' ' → logprob: -21.75002098083496

Token 155: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.458025187253952
    2. 'i' → logprob: -1.0830252170562744
    3. 'idx' → logprob: -3.8330252170562744
    4. ' idx' → logprob: -5.083024978637695
    5. 'range' → logprob: -7.458024978637695
    6. ' range' → logprob: -8.083024978637695
    7. 'x' → logprob: -9.208024978637695
    8. 'index' → logprob: -11.208024978637695
    9. ' ' → logprob: -11.458024978637695
    10. '	i' → logprob: -11.833024978637695

Token 156: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.313923716545105
    2. 'in' → logprob: -1.313923716545105
    3. ',' → logprob: -7.4389238357543945
    4. ' ' → logprob: -10.063923835754395
    5. '	in' → logprob: -11.438923835754395
    6. ' ,' → logprob: -11.813923835754395
    7. 'range' → logprob: -12.688923835754395
    8. 'import' → logprob: -13.063923835754395
    9. '  ' → logprob: -13.688923835754395
    10. 'n' → logprob: -13.813923835754395

Token 157: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028612269088625908
    2. ' range' → logprob: -4.40361213684082
    3. ' xrange' → logprob: -4.77861213684082
    4. 'x' → logprob: -4.90361213684082
    5. '   ' → logprob: -10.02861213684082
    6. '	range' → logprob: -10.40361213684082
    7. ' ' → logprob: -10.52861213684082
    8. '  ' → logprob: -10.52861213684082
    9. '(range' → logprob: -12.52861213684082
    10. '    ' → logprob: -13.27861213684082

Token 158: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01304775383323431
    2. '(len' → logprob: -4.388047695159912
    3. '(' → logprob: -8.01304817199707
    4. 'n' → logprob: -8.63804817199707
    5. 'len' → logprob: -11.01304817199707
    6. ' (' → logprob: -12.26304817199707
    7. '   ' → logprob: -13.13804817199707
    8. '(m' → logprob: -13.51304817199707
    9. '((' → logprob: -13.51304817199707
    10. ' n' → logprob: -14.13804817199707

Token 159: '3' (ID: 18)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006073490716516972
    2. 'len' → logprob: -5.131073474884033
    3. ' n' → logprob: -9.131073951721191
    4. '   ' → logprob: -11.131073951721191
    5. '(n' → logprob: -12.131073951721191
    6. ' len' → logprob: -12.256073951721191
    7. '(len' → logprob: -12.881073951721191
    8. ' ' → logprob: -13.131073951721191
    9. '	n' → logprob: -13.881073951721191
    10. '3' → logprob: -13.881073951721191

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.045570727437734604
    2. '):
' → logprob: -3.1705706119537354
    3. ' ):' → logprob: -6.0455708503723145
    4. ':' → logprob: -9.420570373535156
    5. ' ):
' → logprob: -10.045570373535156
    6. ')' → logprob: -10.045570373535156
    7. '   ' → logprob: -10.795570373535156
    8. '):
' → logprob: -12.920570373535156
    9. ',' → logprob: -13.670570373535156
    10. '**' → logprob: -13.670570373535156

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005402852548286319
    2. ' for' → logprob: -8.625540733337402
    3. ',' → logprob: -8.875540733337402
    4. '   ' → logprob: -10.125540733337402
    5. '        
' → logprob: -10.375540733337402
    6. 'for' → logprob: -10.625540733337402
    7. '
' → logprob: -10.875540733337402
    8. 'A' → logprob: -11.500540733337402
    9. 'a' → logprob: -11.625540733337402
    10. '	' → logprob: -11.750540733337402

Token 162: ' sell' (ID: 7437)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6041017770767212
    2. '       ' → logprob: -1.4791017770767212
    3. ' for' → logprob: -1.6041017770767212
    4. 'dp' → logprob: -4.604101657867432
    5. 'update' → logprob: -4.979101657867432
    6. 'sell' (adapté à ' sell') → logprob: -6.229101657867432
    7. ' dp' → logprob: -6.354101657867432
    8. ' update' → logprob: -6.604101657867432
    9. '   ' → logprob: -6.604101657867432
    10. ' sell' → logprob: -7.854101657867432

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23778462409973145
    2. ' =' → logprob: -1.7377846240997314
    3. ' ,' → logprob: -3.9877846240997314
    4. '=' → logprob: -4.112784385681152
    5. ' ' → logprob: -8.737784385681152
    6. 's' → logprob: -9.112784385681152
    7. ')' → logprob: -9.612784385681152
    8. '_,' → logprob: -9.737784385681152
    9. ',j' → logprob: -10.300284385681152
    10. '   ' → logprob: -10.362784385681152

Token 164: ' extra' (ID: 5018)
  Prédit: ' extra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' extra' → logprob: -0.16032475233078003
    2. 'extra' → logprob: -1.9103248119354248
    3. '_extra' → logprob: -10.285325050354004
    4. ' =' → logprob: -11.410325050354004
    5. ' compute' → logprob: -11.410325050354004
    6. '=' → logprob: -11.910325050354004
    7. ' update' → logprob: -12.160325050354004
    8. ' dp' → logprob: -12.410325050354004
    9. ' ' → logprob: -12.410325050354004
    10. ' j' → logprob: -12.535325050354004

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022706031799316
    2. '=' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.535226821899414
    4. ')' → logprob: -14.535226821899414
    5. '   ' → logprob: -14.785226821899414
    6. ',' → logprob: -15.160226821899414
    7. '	' → logprob: -16.160226821899414
    8. '    ' → logprob: -16.785226821899414
    9. '  ' → logprob: -16.785226821899414
    10. '<|end|>' → logprob: -16.785226821899414

Token 166: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.020546678453683853
    2. ' compute' → logprob: -3.8955466747283936
    3. '   ' → logprob: -12.770546913146973
    4. '0' → logprob: -14.645546913146973
    5. ' ' → logprob: -14.645546913146973
    6. '  ' → logprob: -15.020546913146973
    7. '.compute' → logprob: -15.270546913146973
    8. '
' → logprob: -15.770546913146973
    9. 'computer' → logprob: -16.520545959472656
    10. '_compute' → logprob: -16.645545959472656

Token 167: '_extra' (ID: 77451)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0239650197327137
    2. '_dp' → logprob: -4.148964881896973
    3. '_extra' → logprob: -5.023964881896973
    4. '(B' → logprob: -7.898964881896973
    5. 'dp' → logprob: -8.023964881896973
    6. 'extra' → logprob: -8.273964881896973
    7. ')' → logprob: -9.648964881896973
    8. '(' → logprob: -9.898964881896973
    9. ' (' → logprob: -9.898964881896973
    10. 'DP' → logprob: -9.898964881896973

Token 168: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.4021237802808173e-05
    2. '(B' → logprob: -11.875014305114746
    3. '(' → logprob: -12.375014305114746
    4. ' (' → logprob: -13.500014305114746
    5. '(a' → logprob: -14.000014305114746
    6. '((' → logprob: -15.750014305114746
    7. '(
' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.12501335144043
    9. ' ' → logprob: -17.25001335144043
    10. ')' → logprob: -17.87501335144043

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035918003413826227
    2. ',j' → logprob: -8.500359535217285
    3. ',B' → logprob: -9.000359535217285
    4. ' ,' → logprob: -10.750359535217285
    5. ',b' → logprob: -12.250359535217285
    6. ',n' → logprob: -13.500359535217285
    7. ',
' → logprob: -14.125359535217285
    8. '[j' → logprob: -14.125359535217285
    9. '   ' → logprob: -14.625359535217285
    10. '[' → logprob: -15.125359535217285

Token 170: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12693314254283905
    2. ' B' → logprob: -2.1269330978393555
    3. ' ' → logprob: -13.376933097839355
    4. '   ' → logprob: -14.126933097839355
    5. ')' → logprob: -14.376933097839355
    6. ',' → logprob: -14.626933097839355
    7. '	B' → logprob: -15.564433097839355
    8. 'b' → logprob: -15.626933097839355
    9. '    ' → logprob: -15.751933097839355
    10. '  ' → logprob: -15.751933097839355

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000994464149698615
    2. ',j' → logprob: -7.000994682312012
    3. ' ,' → logprob: -9.500994682312012
    4. ')' → logprob: -13.125994682312012
    5. '   ' → logprob: -13.625994682312012
    6. '       ' → logprob: -13.750994682312012
    7. 'j' → logprob: -14.125994682312012
    8. ',n' → logprob: -14.125994682312012
    9. ',i' → logprob: -14.125994682312012
    10. ',index' → logprob: -14.625994682312012

Token 172: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02975500375032425
    2. ' j' → logprob: -3.529755115509033
    3. ' ' → logprob: -13.654754638671875
    4. '   ' → logprob: -13.779754638671875
    5. '    ' → logprob: -13.904754638671875
    6. ')' → logprob: -14.654754638671875
    7. '	j' → logprob: -15.029754638671875
    8. '_j' → logprob: -16.154754638671875
    9. ' ' → logprob: -16.154754638671875
    10. '0' → logprob: -16.529754638671875

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2521874010562897
    2. ')
' → logprob: -1.5021873712539673
    3. '       ' → logprob: -8.627187728881836
    4. ')
' → logprob: -9.502187728881836
    5. ')

' → logprob: -13.252187728881836
    6. '   ' → logprob: -13.877187728881836
    7. ' )' → logprob: -14.252187728881836
    8. ' )
' → logprob: -14.752187728881836
    9. ')`
' → logprob: -15.502187728881836
    10. ')`' → logprob: -16.502187728881836

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4617256056226324e-05
    2. '   ' → logprob: -11.375014305114746
    3. 'update' → logprob: -13.625014305114746
    4. '<|end|>' → logprob: -14.125014305114746
    5. '```' → logprob: -15.125014305114746
    6. ' update' → logprob: -15.250014305114746
    7. '           ' → logprob: -15.750014305114746
    8. ' ' → logprob: -15.875014305114746
    9. '	' → logprob: -16.000015258789062
    10. '      ' → logprob: -16.375015258789062

Token 175: ' if' (ID: 538)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.01935439556837082
    2. ' update' → logprob: -4.019354343414307
    3. '       ' → logprob: -6.769354343414307
    4. '	update' → logprob: -10.394354820251465
    5. '   ' → logprob: -10.894354820251465
    6. '.update' → logprob: -13.019354820251465
    7. '
' → logprob: -14.144354820251465
    8. ' ' → logprob: -14.269354820251465
    9. '_update' → logprob: -14.269354820251465
    10. 'dp' → logprob: -14.394354820251465

Token 176: ' extra' (ID: 5018)
  Prédit: ' sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sell' → logprob: -0.09594697505235672
    2. 'sell' → logprob: -2.720947027206421
    3. ' extra' → logprob: -4.595946788787842
    4. ' dp' → logprob: -4.595946788787842
    5. 'extra' → logprob: -5.845946788787842
    6. 'dp' → logprob: -6.345946788787842
    7. ' len' → logprob: -8.220947265625
    8. ' not' → logprob: -9.345947265625
    9. 'len' → logprob: -9.595947265625
    10. ' buy' → logprob: -9.970947265625

Token 177: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6367735862731934
    2. ' >' → logprob: -0.7617735862731934
    3. '>=' → logprob: -6.636773586273193
    4. ' >=' → logprob: -6.761773586273193
    5. ' <=' → logprob: -7.011773586273193
    6. '<=' → logprob: -7.261773586273193
    7. ' <' → logprob: -10.511774063110352
    8. '<' → logprob: -10.511774063110352
    9. ' ' → logprob: -11.136774063110352
    10. ':' → logprob: -12.386774063110352

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14277085661888123
    2. ' ' → logprob: -2.017770767211914
    3. '=' → logprob: -9.892770767211914
    4. '-' → logprob: -11.267770767211914
    5. '
' → logprob: -11.392770767211914
    6. ' -' → logprob: -11.767770767211914
    7. 'sell' → logprob: -13.017770767211914
    8. '1' → logprob: -13.580270767211914
    9. '  ' → logprob: -13.767770767211914
    10. ' ' → logprob: -13.830270767211914

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021934446413069963
    2. ' ' → logprob: -6.127193450927734
    3. '-' → logprob: -12.627193450927734
    4. 'sell' → logprob: -13.627193450927734
    5. '
' → logprob: -14.002193450927734
    6. ' -' → logprob: -14.127193450927734
    7. '1' → logprob: -14.564693450927734
    8. '=' → logprob: -14.814693450927734
    9. '00' → logprob: -15.627193450927734
    10. '  ' → logprob: -16.377193450927734

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02340247668325901
    2. ':
' → logprob: -3.773402452468872
    3. '           ' → logprob: -9.398402214050293
    4. '       ' → logprob: -10.273402214050293
    5. ',' → logprob: -11.273402214050293
    6. ' :' → logprob: -11.398402214050293
    7. ' :
' → logprob: -12.398402214050293
    8. ':

' → logprob: -12.648402214050293
    9. '<|end|>' → logprob: -13.273402214050293
    10. '   ' → logprob: -13.273402214050293

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013034695759415627
    2. ' update' → logprob: -4.513034820556641
    3. 'update' → logprob: -7.388034820556641
    4. '	       ' → logprob: -7.638034820556641
    5. '		' → logprob: -8.63803482055664
    6. '       ' → logprob: -8.63803482055664
    7. '            
' → logprob: -9.51303482055664
    8. '
' → logprob: -9.63803482055664
    9. '               ' → logprob: -9.63803482055664
    10. '(update' → logprob: -9.76303482055664

Token 182: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.535034716129303
    2. 'update' (adapté à ' update') → logprob: -0.910034716129303
    3. '       ' → logprob: -4.660034656524658
    4. '           ' → logprob: -6.285034656524658
    5. '   ' → logprob: -8.285035133361816
    6. '	update' → logprob: -8.910035133361816
    7. '.update' → logprob: -10.285035133361816
    8. ' ' → logprob: -10.660035133361816
    9. '
' → logprob: -10.785035133361816
    10. '(update' → logprob: -11.785035133361816

Token 183: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.007872306741774082
    2. '(dp' → logprob: -4.882872104644775
    3. 'dp' → logprob: -8.257872581481934
    4. ' dp' → logprob: -12.882872581481934
    5. '	dp' → logprob: -13.007872581481934
    6. '(' → logprob: -14.507872581481934
    7. '_' → logprob: -14.757872581481934
    8. 'DP' → logprob: -15.007872581481934
    9. '_DP' → logprob: -15.257872581481934
    10. '_lp' → logprob: -16.257871627807617

Token 184: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -6.0033853515051305e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -13.750060081481934
    4. '(
' → logprob: -14.500060081481934
    5. 'dp' → logprob: -17.625059127807617
    6. '	dp' → logprob: -18.250059127807617
    7. ' dp' → logprob: -18.375059127807617
    8. '(df' → logprob: -18.875059127807617
    9. '(

' → logprob: -19.000059127807617
    10. '(dt' → logprob: -19.750059127807617

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02072441391646862
    2. '(dp' → logprob: -4.520724296569824
    3. ' ,' → logprob: -4.645724296569824
    4. '(' → logprob: -11.645724296569824
    5. ')' → logprob: -12.395724296569824
    6. 'dp' → logprob: -12.520724296569824
    7. ' (' → logprob: -13.145724296569824
    8. ',
' → logprob: -13.270724296569824
    9. ',s' → logprob: -13.645724296569824
    10. '   ' → logprob: -13.645724296569824

Token 186: ' sell' (ID: 7437)
  Prédit: 'sell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sell' → logprob: -0.005240872036665678
    2. ' sell' → logprob: -5.2552409172058105
    3. 's' → logprob: -12.755240440368652
    4. '.sell' → logprob: -13.755240440368652
    5. 'sale' → logprob: -14.380240440368652
    6. '
' → logprob: -14.630240440368652
    7. ' ' → logprob: -15.005240440368652
    8. '   ' → logprob: -15.005240440368652
    9. ')' → logprob: -15.630240440368652
    10. '_sell' → logprob: -15.630240440368652

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',
' → logprob: -15.125066757202148
    4. '   ' → logprob: -15.875066757202148
    5. ',s' → logprob: -16.00006675720215
    6. ')' → logprob: -16.87506675720215
    7. '```' → logprob: -17.50006675720215
    8. '           ' → logprob: -17.62506675720215
    9. '‌,' → logprob: -17.62506675720215
    10. '=' → logprob: -18.50006675720215

Token 188: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.03804252669215202
    2. ' extra' → logprob: -3.2880425453186035
    3. '(extra' → logprob: -14.663042068481445
    4. 'extr' → logprob: -15.413042068481445
    5. '   ' → logprob: -16.413042068481445
    6. ' ' → logprob: -16.538042068481445
    7. 'extras' → logprob: -16.788042068481445
    8. '
' → logprob: -16.788042068481445
    9. '.extra' → logprob: -17.288042068481445
    10. 'ex' → logprob: -17.413042068481445

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060150641947984695
    2. ')
' → logprob: -5.131015300750732
    3. '   ' → logprob: -10.256014823913574
    4. '       ' → logprob: -11.006014823913574
    5. ' )' → logprob: -11.006014823913574
    6. ')return' → logprob: -11.756014823913574
    7. ')

' → logprob: -11.881014823913574
    8. ')
' → logprob: -13.881014823913574
    9. ')\
' → logprob: -14.756014823913574
    10. ')n' → logprob: -15.006014823913574

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016357855638489127
    2. ' return' → logprob: -7.126635551452637
    3. 'return' → logprob: -7.626635551452637
    4. '<|end|>' → logprob: -8.501635551452637
    5. '	return' → logprob: -9.751635551452637
    6. '
' → logprob: -10.001635551452637
    7. '       ' → logprob: -11.751635551452637
    8. '    
' → logprob: -11.751635551452637
    9. ',' → logprob: -12.751635551452637
    10. ':return' → logprob: -13.001635551452637

Token 191: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02268836461007595
    2. ' return' → logprob: -4.147688388824463
    3. '   ' → logprob: -5.022688388824463
    4. ' ' → logprob: -11.272687911987305
    5. '	return' → logprob: -11.397687911987305
    6. 'for' → logprob: -11.397687911987305
    7. '
' → logprob: -13.147687911987305
    8. ' for' → logprob: -13.272687911987305
    9. '  ' → logprob: -14.022687911987305
    10. 'eturn' → logprob: -14.147687911987305

Token 192: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3505077064037323
    2. ' dp' → logprob: -1.2255077362060547
    3. 'max' → logprob: -6.850507736206055
    4. ' max' → logprob: -6.975507736206055
    5. '(dp' → logprob: -10.600507736206055
    6. ' ' → logprob: -11.725507736206055
    7. '[' → logprob: -12.100507736206055
    8. '	dp' → logprob: -12.350507736206055
    9. ' ' → logprob: -12.475507736206055
    10. '   ' → logprob: -12.600507736206055

Token 193: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -10.875019073486328
    3. '(
' → logprob: -15.000019073486328
    4. '(max' → logprob: -15.875019073486328
    5. 'dp' → logprob: -17.125019073486328
    6. ' (' → logprob: -19.500019073486328
    7. '	dp' → logprob: -19.500019073486328
    8. '()' → logprob: -19.875019073486328
    9. '(df' → logprob: -20.000019073486328
    10. '(

' → logprob: -20.500019073486328

Token 194: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012570513412356377
    2. '())' → logprob: -4.387570381164551
    3. '()' → logprob: -10.38757038116455
    4. ')
' → logprob: -11.13757038116455
    5. '))' → logprob: -11.88757038116455
    6. '[])' → logprob: -12.63757038116455
    7. ' )' → logprob: -13.13757038116455
    8. '())
' → logprob: -13.88757038116455
    9. ')`' → logprob: -14.76257038116455
    10. '   ' → logprob: -15.26257038116455

Token 195: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7406615018844604
    2. '<|end|>' → logprob: -0.8656615018844604
    3. ')' → logprob: -2.74066162109375
    4. '#' → logprob: -4.11566162109375
    5. '
' → logprob: -5.24066162109375
    6. 'n' → logprob: -5.24066162109375
    7. '```' → logprob: -6.49066162109375
    8. '(' → logprob: -6.74066162109375
    9. '[' → logprob: -6.99066162109375
    10. '<|end|>' → logprob: -6.99066162109375

Token 196: ' swap' (ID: 25489)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.041525959968566895
    2. '__' → logprob: -4.041525840759277
    3. ' __' → logprob: -4.166525840759277
    4. 'main' → logprob: -4.916525840759277
    5. ' solve' → logprob: -8.791525840759277
    6. '_main' → logprob: -10.916525840759277
    7. ' read' → logprob: -11.041525840759277
    8. ' def' → logprob: -11.166525840759277
    9. 'solve' → logprob: -11.291525840759277
    10. ' dp' → logprob: -11.666525840759277

Token 197: '_lists' (ID: 93609)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4301280379295349
    2. '(A' → logprob: -1.8051280975341797
    3. '(_' → logprob: -2.4301280975341797
    4. '(' → logprob: -2.9301280975341797
    5. '_positions' → logprob: -4.68012809753418
    6. '_items' → logprob: -4.80512809753418
    7. '_values' → logprob: -5.18012809753418
    8. '(n' → logprob: -5.68012809753418
    9. '(arr' → logprob: -5.80512809753418
    10. '_elements' → logprob: -6.30512809753418

Token 198: '(a' (ID: 6271)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.38913264870643616
    2. '(a' → logprob: -1.1391326189041138
    3. '(' → logprob: -7.264132499694824
    4. '(lst' → logprob: -7.264132499694824
    5. '(list' → logprob: -7.889132499694824
    6. '(l' → logprob: -8.764132499694824
    7. '(L' → logprob: -8.889132499694824
    8. ' (' → logprob: -9.139132499694824
    9. '(arr' → logprob: -10.889132499694824
    10. '(lhs' → logprob: -10.889132499694824

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.612634362885728e-05
    2. ',b' → logprob: -9.750076293945312
    3. ' ,' → logprob: -11.500076293945312
    4. ',a' → logprob: -12.250076293945312
    5. '1' → logprob: -13.625076293945312
    6. ',
' → logprob: -14.000076293945312
    7. 'a' → logprob: -14.375076293945312
    8. 'b' → logprob: -15.875076293945312
    9. '):' → logprob: -16.875076293945312
    10. 's' → logprob: -16.875076293945312

Token 200: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31327199935913086
    2. ' b' → logprob: -1.3132719993591309
    3. ' ' → logprob: -12.688272476196289
    4. ')' → logprob: -13.688272476196289
    5. '   ' → logprob: -13.938272476196289
    6. '    ' → logprob: -14.063272476196289
    7. ')b' → logprob: -14.313272476196289
    8. '	b' → logprob: -14.750772476196289
    9. ',' → logprob: -14.875772476196289
    10. '
' → logprob: -15.000772476196289

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033691804856061935
    2. '):
' → logprob: -3.408691883087158
    3. '(a' → logprob: -11.03369140625
    4. ')' → logprob: -11.65869140625
    5. '):
' → logprob: -11.90869140625
    6. ',' → logprob: -12.40869140625
    7. ' ):' → logprob: -12.53369140625
    8. '   ' → logprob: -12.65869140625
    9. '):

' → logprob: -14.15869140625
    10. ':' → logprob: -14.15869140625

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1477806717157364
    2. 'a' → logprob: -2.272780656814575
    3. ' a' → logprob: -3.897780656814575
    4. '
' → logprob: -5.397780895233154
    5. '    
' → logprob: -5.772780895233154
    6. ' for' → logprob: -5.897780895233154
    7. 'for' → logprob: -6.397780895233154
    8. 'def' → logprob: -7.397780895233154
    9. '[a' → logprob: -7.522780895233154
    10. '```' → logprob: -8.772780418395996

Token 203: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6069526076316833
    2. 'for' → logprob: -0.8569526076316833
    3. ' for' → logprob: -4.106952667236328
    4. 'return' (adapté à ' return') → logprob: -4.981952667236328
    5. ' a' → logprob: -5.106952667236328
    6. ' return' → logprob: -7.731952667236328
    7. '   ' → logprob: -7.731952667236328
    8. 'temp' → logprob: -8.981952667236328
    9. 'n' → logprob: -9.106952667236328
    10. 'def' → logprob: -11.481952667236328

Token 204: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05515014007687569
    2. ' b' → logprob: -2.930150032043457
    3. 'a' → logprob: -8.805150032043457
    4. '[b' → logprob: -9.555150032043457
    5. ' a' → logprob: -10.930150032043457
    6. '(b' → logprob: -11.055150032043457
    7. ' [' → logprob: -12.680150032043457
    8. ' (' → logprob: -12.930150032043457
    9. '	b' → logprob: -13.305150032043457
    10. '[a' → logprob: -13.430150032043457

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027794393245130777
    2. ',a' → logprob: -6.002779483795166
    3. ' ,' → logprob: -8.377779006958008
    4. 'a' → logprob: -9.752779006958008
    5. ',b' → logprob: -11.252779006958008
    6. '<|end|>' → logprob: -14.127779006958008
    7. ' a' → logprob: -14.252779006958008
    8. '‌,' → logprob: -15.127779006958008
    9. ',s' → logprob: -16.252779006958008
    10. ',
' → logprob: -16.252779006958008

Token 206: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '	a' → logprob: -18.626928329467773
    4. '[' → logprob: -19.626928329467773
    5. ' ' → logprob: -19.876928329467773
    6. '```' → logprob: -20.001928329467773
    7. '<|end|>' → logprob: -20.376928329467773
    8. ',a' → logprob: -20.751928329467773
    9. 'а' → logprob: -20.751928329467773
    10. '[a' → logprob: -21.251928329467773

Token 207: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 208: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22334107756614685
    2. '<|end|>' → logprob: -1.7233411073684692
    3. '
' → logprob: -4.59834098815918
    4. 'n' → logprob: -4.97334098815918
    5. '#' → logprob: -6.47334098815918
    6. 'for' → logprob: -6.84834098815918
    7. '<|end|>' → logprob: -7.09834098815918
    8. '```' → logprob: -8.22334098815918
    9. 'result' → logprob: -8.34834098815918
    10. 'range' → logprob: -8.59834098815918

Token 209: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.181186243891716
    2. 'main' → logprob: -1.8061861991882324
    3. ' solve' → logprob: -7.431186199188232
    4. 'solve' → logprob: -8.18118667602539
    5. ' process' → logprob: -8.55618667602539
    6. 'process' → logprob: -9.68118667602539
    7. ' max' → logprob: -9.68118667602539
    8. 'max' → logprob: -10.05618667602539
    9. ' swap' → logprob: -10.30618667602539
    10. ' dp' → logprob: -10.43118667602539

Token 210: '(A' (ID: 10706)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2760176658630371
    2. '(' → logprob: -2.526017665863037
    3. '_input' → logprob: -2.526017665863037
    4. '_list' → logprob: -3.651017665863037
    5. '_data' → logprob: -3.651017665863037
    6. '_' → logprob: -4.901017665863037
    7. '_lists' → logprob: -5.526017665863037
    8. '_items' → logprob: -5.901017665863037
    9. '_inputs' → logprob: -5.901017665863037
    10. '_n' → logprob: -6.151017665863037

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.941161776310764e-05
    2. ' ,' → logprob: -10.625039100646973
    3. ',B' → logprob: -11.625039100646973
    4. ',
' → logprob: -12.250039100646973
    5. ',b' → logprob: -13.750039100646973
    6. ',

' → logprob: -17.12504005432129
    7. '   ' → logprob: -17.25004005432129
    8. '):
' → logprob: -17.50004005432129
    9. '‌,' → logprob: -17.50004005432129
    10. '_,' → logprob: -17.62504005432129

Token 212: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25194504857063293
    2. ' B' → logprob: -1.5019450187683105
    3. ' ' → logprob: -12.001945495605469
    4. 'b' → logprob: -12.376945495605469
    5. '   ' → logprob: -13.001945495605469
    6. ')' → logprob: -14.376945495605469
    7. '    ' → logprob: -14.501945495605469
    8. '  ' → logprob: -14.751945495605469
    9. '	B' → logprob: -14.814445495605469
    10. ' b' → logprob: -15.314445495605469

Token 213: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007708957884460688
    2. ',' → logprob: -5.25770902633667
    3. '):
' → logprob: -6.00770902633667
    4. ')' → logprob: -12.257708549499512
    5. '   ' → logprob: -12.507708549499512
    6. ' ):' → logprob: -13.007708549499512
    7. '):
' → logprob: -14.382708549499512
    8. ',n' → logprob: -14.882708549499512
    9. ':' → logprob: -15.632708549499512
    10. 'def' → logprob: -15.882708549499512

Token 214: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2983980178833008
    2. 'C' → logprob: -2.173398017883301
    3. ' n' → logprob: -2.173398017883301
    4. ' C' → logprob: -4.048398017883301
    5. 'N' → logprob: -4.923398017883301
    6. '):
' → logprob: -6.423398017883301
    7. ' N' → logprob: -7.423398017883301
    8. '   ' → logprob: -7.423398017883301
    9. 'k' → logprob: -7.860898017883301
    10. ')' → logprob: -8.4233980178833

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019606323912739754
    2. '):
' → logprob: -6.251960754394531
    3. ',' → logprob: -10.626960754394531
    4. ' ):' → logprob: -12.501960754394531
    5. ')' → logprob: -12.626960754394531
    6. '):
' → logprob: -14.751960754394531
    7. '   ' → logprob: -15.501960754394531
    8. '):

' → logprob: -15.751960754394531
    9. ':' → logprob: -16.87696075439453
    10. 'def' → logprob: -17.12696075439453

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02005676180124283
    2. ' dp' → logprob: -4.77005672454834
    3. 'dp' → logprob: -5.14505672454834
    4. ' for' → logprob: -5.89505672454834
    5. 'def' → logprob: -7.64505672454834
    6. ' result' → logprob: -7.89505672454834
    7. 'for' → logprob: -8.27005672454834
    8. 'n' → logprob: -8.52005672454834
    9. 'result' → logprob: -8.77005672454834
    10. '    
' → logprob: -8.89505672454834

Token 217: ' first' (ID: 1577)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3606904149055481
    2. ' dp' → logprob: -1.4856903553009033
    3. '   ' → logprob: -3.2356903553009033
    4. 'result' → logprob: -4.860690593719482
    5. ' result' → logprob: -4.985690593719482
    6. ' res' → logprob: -5.360690593719482
    7. 'max' → logprob: -5.610690593719482
    8. ' max' → logprob: -5.860690593719482
    9. 'for' → logprob: -5.985690593719482
    10. 'res' → logprob: -6.235690593719482

Token 218: '_max' (ID: 13731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1209356039762497
    2. ' =' → logprob: -2.4959356784820557
    3. '_' → logprob: -4.620935440063477
    4. '=' → logprob: -4.870935440063477
    5. '_s' → logprob: -5.245935440063477
    6. ' ,' → logprob: -6.620935440063477
    7. '_,' → logprob: -6.995935440063477
    8. '_sell' → logprob: -7.120935440063477
    9. ')' → logprob: -7.620935440063477
    10. 'A' → logprob: -7.745935440063477

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4554530084133148
    2. '_' → logprob: -1.7054530382156372
    3. '=' → logprob: -2.3304529190063477
    4. ',' → logprob: -2.9554529190063477
    5. '_idx' → logprob: -4.330452919006348
    6. '_val' → logprob: -4.830452919006348
    7. '_index' → logprob: -5.455452919006348
    8. '_s' → logprob: -5.955452919006348
    9. '_sell' → logprob: -5.955452919006348
    10. '_value' → logprob: -6.580452919006348

Token 220: ' dp' (ID: 21546)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4937993586063385
    2. ' max' → logprob: -1.4937993288040161
    3. '0' → logprob: -2.7437994480133057
    4. 'dp' → logprob: -2.7437994480133057
    5. ' dp' → logprob: -3.7437994480133057
    6. 'float' → logprob: -5.243799209594727
    7. ' ' → logprob: -5.618799209594727
    8. ' float' → logprob: -6.118799209594727
    9. '-' → logprob: -7.493799209594727
    10. 'n' → logprob: -8.368799209594727

Token 221: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -5.4192871175473556e-05
    2. '_max' → logprob: -10.500054359436035
    3. '_' → logprob: -12.000054359436035
    4. 'round' → logprob: -12.500054359436035
    5. '_process' → logprob: -12.625054359436035
    6. 'max' → logprob: -13.000054359436035
    7. '=' → logprob: -13.250054359436035
    8. '_range' → logprob: -13.625054359436035
    9. 'Round' → logprob: -13.625054359436035
    10. '(round' → logprob: -14.375054359436035

Token 222: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015157493180595338
    2. '(' → logprob: -9.875151634216309
    3. ' (' → logprob: -10.000151634216309
    4. '(A' → logprob: -10.375151634216309
    5. 'n' → logprob: -11.000151634216309
    6. '(len' → logprob: -12.500151634216309
    7. ' n' → logprob: -14.125151634216309
    8. 'def' → logprob: -14.875151634216309
    9. '(
' → logprob: -15.125151634216309
    10. ',' → logprob: -15.250151634216309

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017839208885561675
    2. ',A' → logprob: -9.000178337097168
    3. ' ,' → logprob: -9.875178337097168
    4. '   ' → logprob: -13.000178337097168
    5. ')' → logprob: -14.625178337097168
    6. ',
' → logprob: -15.250178337097168
    7. 'A' → logprob: -15.500178337097168
    8. '(A' → logprob: -15.500178337097168
    9. ',B' → logprob: -17.625179290771484
    10. ' ' → logprob: -18.000179290771484

Token 224: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.22542575001716614
    2. ' A' → logprob: -1.6004257202148438
    3. 'B' → logprob: -12.350425720214844
    4. '<|end|>' → logprob: -12.600425720214844
    5. ' ' → logprob: -13.350425720214844
    6. '	A' → logprob: -14.100425720214844
    7. ')' → logprob: -14.225425720214844
    8. ' B' → logprob: -14.600425720214844
    9. '   ' → logprob: -14.600425720214844
    10. ',A' → logprob: -14.975425720214844

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.20603168499656e-05
    2. ' ,' → logprob: -9.750061988830566
    3. ',B' → logprob: -13.125061988830566
    4. ',
' → logprob: -14.125061988830566
    5. ',

' → logprob: -14.750061988830566
    6. ')' → logprob: -15.375061988830566
    7. '   ' → logprob: -16.000062942504883
    8. '‌,' → logprob: -16.375062942504883
    9. '

' → logprob: -17.125062942504883
    10. ',b' → logprob: -17.375062942504883

Token 226: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14267690479755402
    2. ' B' → logprob: -2.017676830291748
    3. ' ' → logprob: -14.392677307128906
    4. 'b' → logprob: -15.392677307128906
    5. '   ' → logprob: -15.517677307128906
    6. '	B' → logprob: -15.642677307128906
    7. '
' → logprob: -15.767677307128906
    8. ' ' → logprob: -16.142677307128906
    9. 'A' → logprob: -16.455177307128906
    10. '  ' → logprob: -16.705177307128906

Token 227: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805101290345192
    2. ')
' → logprob: -3.288051128387451
    3. ')

' → logprob: -12.163050651550293
    4. ')
' → logprob: -13.163050651550293
    5. ',' → logprob: -14.038050651550293
    6. ' )' → logprob: -14.163050651550293
    7. '   ' → logprob: -14.288050651550293
    8. ' )
' → logprob: -15.538050651550293
    9. ')+' → logprob: -17.41305160522461
    10. ' ' → logprob: -17.66305160522461

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18446269631385803
    2. '
' → logprob: -1.8094626665115356
    3. 'second' → logprob: -5.809462547302246
    4. '    
' → logprob: -7.059462547302246
    5. ' second' → logprob: -7.184462547302246
    6. '	second' → logprob: -10.059462547302246
    7. '  
' → logprob: -12.059462547302246
    8. '
' → logprob: -12.184462547302246
    9. 'return' → logprob: -12.184462547302246
    10. '```' → logprob: -12.309462547302246

Token 229: ' A' (ID: 355)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.109473817050457
    2. ' second' → logprob: -2.734473705291748
    3. '   ' → logprob: -3.984473705291748
    4. 'A' (adapté à ' A') → logprob: -4.234473705291748
    5. 'B' → logprob: -5.734473705291748
    6. ' A' → logprob: -6.484473705291748
    7. ' B' → logprob: -7.734473705291748
    8. 'rest' → logprob: -9.484474182128906
    9. 'return' → logprob: -9.734474182128906
    10. '
' → logprob: -9.734474182128906

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2723104848410003e-05
    2. ',B' → logprob: -11.250022888183594
    3. ' ,' → logprob: -12.125022888183594
    4. ',b' → logprob: -13.375022888183594
    5. 'B' → logprob: -13.375022888183594
    6. '=' → logprob: -14.500022888183594
    7. ',
' → logprob: -15.000022888183594
    8. ' B' → logprob: -16.875022888183594
    9. 'b' → logprob: -17.125022888183594
    10. '2' → logprob: -17.250022888183594

Token 231: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.31326615810394287
    2. ' B' → logprob: -1.3132661581039429
    3. 'swap' → logprob: -13.813265800476074
    4. ' ' → logprob: -13.938265800476074
    5. 'b' → logprob: -14.563265800476074
    6. 'process' → logprob: -14.688265800476074
    7. 'A' → logprob: -14.813265800476074
    8. ' process' → logprob: -14.938265800476074
    9. '  ' → logprob: -15.313265800476074
    10. ' swap' → logprob: -15.563265800476074

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150178715586662
    2. ' =' → logprob: -4.018150329589844
    3. ',' → logprob: -15.893150329589844
    4. '=
' → logprob: -16.143150329589844
    5. '=A' → logprob: -17.518150329589844
    6. '<|end|>' → logprob: -17.643150329589844
    7. '=

' → logprob: -18.018150329589844
    8. ' ' → logprob: -18.143150329589844
    9. '＝' → logprob: -18.643150329589844
    10. ')' → logprob: -19.143150329589844

Token 233: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.6006931066513062
    2. ' swap' → logprob: -0.8506931066513062
    3. 'B' → logprob: -4.100693225860596
    4. ' B' → logprob: -4.850693225860596
    5. 'b' → logprob: -10.725692749023438
    6. '	swap' → logprob: -11.100692749023438
    7. ' ' → logprob: -11.850692749023438
    8. 'sw' → logprob: -12.100692749023438
    9. '   ' → logprob: -13.288192749023438
    10. '.swap' → logprob: -13.350692749023438

Token 234: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.000692420348059386
    2. 'Lists' → logprob: -7.875692367553711
    3. 'lists' → logprob: -8.375692367553711
    4. '(A' → logprob: -9.500692367553711
    5. '_arrays' → logprob: -12.875692367553711
    6. 'A' → logprob: -13.500692367553711
    7. ' Lists' → logprob: -13.875692367553711
    8. '(B' → logprob: -14.500692367553711
    9. 'B' → logprob: -14.875692367553711
    10. '_ranges' → logprob: -15.125692367553711

Token 235: '(A' (ID: 10706)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.1602855622768402
    2. '(A' → logprob: -1.9102855920791626
    3. 'B' → logprob: -9.785285949707031
    4. 'A' → logprob: -12.410285949707031
    5. ' (' → logprob: -14.660285949707031
    6. ' B' → logprob: -16.03528594970703
    7. '(
' → logprob: -16.16028594970703
    8. '(' → logprob: -16.28528594970703
    9. '(b' → logprob: -16.53528594970703
    10. '(a' → logprob: -16.66028594970703

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9160102712921798e-05
    2. ',B' → logprob: -11.125029563903809
    3. ' ,' → logprob: -11.250029563903809
    4. ',
' → logprob: -14.125029563903809
    5. 'B' → logprob: -14.750029563903809
    6. ')' → logprob: -15.375029563903809
    7. ' B' → logprob: -17.500028610229492
    8. ',b' → logprob: -18.000028610229492
    9. '),' → logprob: -18.000028610229492
    10. ',A' → logprob: -18.625028610229492

Token 237: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07889121770858765
    2. ' B' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.828890800476074
    4. '  ' → logprob: -15.828890800476074
    5. '   ' → logprob: -15.953890800476074
    6. 'A' → logprob: -16.57889175415039
    7. ')' → logprob: -17.07889175415039
    8. '	B' → logprob: -17.07889175415039
    9. 'b' → logprob: -17.45389175415039
    10. '>B' → logprob: -17.70389175415039

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25196021795272827
    2. ')
' → logprob: -1.501960277557373
    3. ')

' → logprob: -10.501959800720215
    4. ')
' → logprob: -12.751959800720215
    5. ' )
' → logprob: -15.126959800720215
    6. ' )' → logprob: -15.376959800720215
    7. ')`
' → logprob: -17.00196075439453
    8. '   ' → logprob: -17.12696075439453
    9. '
' → logprob: -17.75196075439453
    10. '),' → logprob: -17.75196075439453

Token 239: '   ' (ID: 271)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.2170112133026123
    2. ' second' → logprob: -1.7170112133026123
    3. '   ' → logprob: -4.217011451721191
    4. '	second' → logprob: -7.842011451721191
    5. '
' → logprob: -8.217011451721191
    6. '_second' → logprob: -9.842011451721191
    7. '    
' → logprob: -11.592011451721191
    8. ' ' → logprob: -13.467011451721191
    9. '.second' → logprob: -13.592011451721191
    10. 'Second' → logprob: -13.717011451721191

Token 240: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.00010139751975657418
    2. ' second' → logprob: -9.250101089477539
    3. 'first' → logprob: -12.875101089477539
    4. '
' → logprob: -13.625101089477539
    5. '   ' → logprob: -14.250101089477539
    6. '	second' → logprob: -15.125101089477539
    7. 'return' → logprob: -15.625101089477539
    8. '    
' → logprob: -16.37510108947754
    9. 'sec' → logprob: -16.37510108947754
    10. '_second' → logprob: -16.75010108947754

Token 241: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.5570885807392187e-05
    2. 'max' → logprob: -11.125015258789062
    3. '_' → logprob: -14.375015258789062
    4. '_min' → logprob: -16.375015258789062
    5. '_first' → logprob: -16.750015258789062
    6. '_result' → logprob: -17.500015258789062
    7. ' _' → logprob: -17.500015258789062
    8. '_MAX' → logprob: -18.250015258789062
    9. '_final' → logprob: -18.625015258789062
    10. '_best' → logprob: -18.625015258789062

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014133334159851
    2. '=' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.076414108276367
    4. ',' → logprob: -18.576414108276367
    5. '＝' → logprob: -18.826414108276367
    6. ' ' → logprob: -19.576414108276367
    7. '=max' → logprob: -19.701414108276367
    8. '_' → logprob: -19.826414108276367
    9. '=_' → logprob: -19.951414108276367
    10. ')' → logprob: -20.326414108276367

Token 243: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12693241238594055
    2. ' dp' → logprob: -2.126932382583618
    3. '   ' → logprob: -13.376932144165039
    4. '(dp' → logprob: -13.751932144165039
    5. '	dp' → logprob: -14.376932144165039
    6. ' ' → logprob: -15.001932144165039
    7. '_dp' → logprob: -15.501932144165039
    8. 'd' → logprob: -15.626932144165039
    9. ' ' → logprob: -16.25193214416504
    10. '.dp' → logprob: -16.37693214416504

Token 244: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.375000953674316
    3. '_range' → logprob: -15.500000953674316
    4. '_second' → logprob: -15.875000953674316
    5. '_r' → logprob: -16.250001907348633
    6. '_roll' → logprob: -16.375001907348633
    7. 'round' → logprob: -16.625001907348633
    8. '_row' → logprob: -16.750001907348633
    9. '_ring' → logprob: -17.125001907348633
    10. ' _' → logprob: -17.375001907348633

Token 245: '(first' (ID: 31998)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. 'n' → logprob: -16.000001907348633
    4. ' (' → logprob: -16.625001907348633
    5. '<|end|>' → logprob: -17.500001907348633
    6. '(len' → logprob: -18.875001907348633
    7. '(
' → logprob: -19.250001907348633
    8. ' n' → logprob: -20.125001907348633
    9. ',n' → logprob: -20.625001907348633
    10. '```' → logprob: -20.875001907348633

Token 246: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.23533675074577332
    2. 'max' → logprob: -2.3603367805480957
    3. 'n' → logprob: -2.4853367805480957
    4. '(n' → logprob: -3.9853367805480957
    5. 'Max' → logprob: -4.985336780548096
    6. ')' → logprob: -6.360336780548096
    7. ',' → logprob: -6.860336780548096
    8. ' n' → logprob: -7.610336780548096
    9. ' max' → logprob: -7.735336780548096
    10. '_n' → logprob: -8.235336303710938

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008203497272916138
    2. ' ,' → logprob: -7.125820159912109
    3. ')' → logprob: -12.12582015991211
    4. ',n' → logprob: -12.62582015991211
    5. 'n' → logprob: -13.12582015991211
    6. ',
' → logprob: -13.62582015991211
    7. '+' → logprob: -13.75082015991211
    8. '   ' → logprob: -13.87582015991211
    9. '-' → logprob: -14.37582015991211
    10. ' +' → logprob: -14.87582015991211

Token 248: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17798538506031036
    2. 'B' → logprob: -2.552985429763794
    3. ' A' → logprob: -2.552985429763794
    4. ' B' → logprob: -4.927985191345215
    5. '   ' → logprob: -9.677985191345215
    6. ' ' → logprob: -10.927985191345215
    7. '
' → logprob: -12.365485191345215
    8. '  ' → logprob: -12.427985191345215
    9. '    ' → logprob: -12.802985191345215
    10. '	A' → logprob: -13.052985191345215

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010950337309623137
    2. ' ,' → logprob: -9.250109672546387
    3. ',B' → logprob: -11.250109672546387
    4. ',
' → logprob: -15.625109672546387
    5. 'B' → logprob: -16.25010871887207
    6. ',b' → logprob: -16.87510871887207
    7. ')' → logprob: -17.50010871887207
    8. ' B' → logprob: -18.00010871887207
    9. '   ' → logprob: -18.50010871887207
    10. '),' → logprob: -18.87510871887207

Token 250: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20141352713108063
    2. ' B' → logprob: -1.7014135122299194
    3. '   ' → logprob: -16.201414108276367
    4. ' ' → logprob: -16.701414108276367
    5. '	B' → logprob: -16.826414108276367
    6. '>B' → logprob: -17.951414108276367
    7. 'b' → logprob: -18.451414108276367
    8. '  ' → logprob: -18.701414108276367
    9. '    ' → logprob: -18.826414108276367
    10. '_B' → logprob: -19.451414108276367

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693306565284729
    2. ')
' → logprob: -0.693306565284729
    3. '   ' → logprob: -8.818306922912598
    4. ')
' → logprob: -11.943306922912598
    5. ')

' → logprob: -12.568306922912598
    6. ' )
' → logprob: -13.943306922912598
    7. ' )' → logprob: -15.193306922912598
    8. ')return' → logprob: -16.19330596923828
    9. ')`
' → logprob: -16.81830596923828
    10. ' ' → logprob: -17.56830596923828

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006787128280848265
    2. 'return' → logprob: -5.006787300109863
    3. ' return' → logprob: -10.256787300109863
    4. '
' → logprob: -10.256787300109863
    5. '	return' → logprob: -14.131787300109863
    6. '    
' → logprob: -14.756787300109863
    7. '```' → logprob: -16.131786346435547
    8. 'def' → logprob: -16.256786346435547
    9. 'print' → logprob: -16.631786346435547
    10. '       ' → logprob: -16.631786346435547

Token 253: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004486258141696453
    2. 'print' → logprob: -6.004486083984375
    3. '   ' → logprob: -6.754486083984375
    4. ' return' → logprob: -7.129486083984375
    5. '
' → logprob: -10.504486083984375
    6. 'if' → logprob: -12.129486083984375
    7. 'result' → logprob: -12.629486083984375
    8. 'third' → logprob: -12.879486083984375
    9. 'final' → logprob: -13.879486083984375
    10. ' print' → logprob: -14.379486083984375

Token 254: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.40329939126968384
    2. ' second' → logprob: -1.403299331665039
    3. ' max' → logprob: -3.028299331665039
    4. 'max' → logprob: -3.278299331665039
    5. 'first' → logprob: -12.528299331665039
    6. 'min' → logprob: -13.403299331665039
    7. ' first' → logprob: -13.528299331665039
    8. ' min' → logprob: -13.528299331665039
    9. '(second' → logprob: -13.778299331665039
    10. ' ' → logprob: -13.903299331665039

Token 255: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.128163257315464e-07
    2. 'max' → logprob: -15.75
    3. '_' → logprob: -16.75
    4. '_first' → logprob: -18.0
    5. ' _' → logprob: -18.125
    6. '_MAX' → logprob: -18.25
    7. '_Max' → logprob: -18.375
    8. 'Max' → logprob: -18.625
    9. '_ma' → logprob: -20.125
    10. '_best' → logprob: -20.25

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.423664391040802
    2. 'def' → logprob: -1.7986643314361572
    3. '#' → logprob: -1.9236643314361572
    4. '<|end|>' → logprob: -4.173664569854736
    5. 'n' → logprob: -4.423664569854736
    6. 'print' → logprob: -5.423664569854736
    7. '```' → logprob: -7.048664569854736
    8. 'for' → logprob: -8.048664093017578
    9. ' if' → logprob: -8.048664093017578
    10. 'A' → logprob: -9.298664093017578

Token 258: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5759422779083252
    2. 'main' → logprob: -0.8259422779083252
    3. 'process' → logprob: -13.700942039489746
    4. 'solve' → logprob: -14.825942039489746
    5. ' solve' → logprob: -15.200942039489746
    6. 'max' → logprob: -15.325942039489746
    7. ' process' → logprob: -15.325942039489746
    8. 'def' → logprob: -15.950942039489746
    9. '	main' → logprob: -15.950942039489746
    10. 'm' → logprob: -16.200942993164062

Token 259: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.990154047845863e-05
    2. '():
' → logprob: -10.000049591064453
    3. ' ():' → logprob: -12.500049591064453
    4. '()' → logprob: -14.750049591064453
    5. '():
' → logprob: -15.750049591064453
    6. '(' → logprob: -16.375049591064453
    7. ':' → logprob: -18.750049591064453
    8. '():

' → logprob: -19.625049591064453
    9. '().' → logprob: -20.375049591064453
    10. '(":' → logprob: -20.750049591064453

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7643632888793945
    2. 'n' → logprob: -1.0143632888793945
    3. ' n' → logprob: -1.7643632888793945
    4. 'import' → logprob: -8.014363288879395
    5. '	n' → logprob: -9.639363288879395
    6. ' import' → logprob: -10.389363288879395
    7. '```' → logprob: -12.264363288879395
    8. '_n' → logprob: -12.889363288879395
    9. ',n' → logprob: -13.014363288879395
    10. '    
' → logprob: -14.014363288879395

Token 261: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2526903748512268
    2. ' n' → logprob: -1.502690315246582
    3. '   ' → logprob: -7.752690315246582
    4. 'import' → logprob: -8.877690315246582
    5. 't' → logprob: -9.127690315246582
    6. ' t' → logprob: -10.002690315246582
    7. ' import' → logprob: -10.377690315246582
    8. ' T' → logprob: -13.127690315246582
    9. '	n' → logprob: -13.127690315246582
    10. 'T' → logprob: -13.377690315246582

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033962175250053406
    2. '=' → logprob: -3.4089622497558594
    3. ',' → logprob: -8.15896224975586
    4. ' ' → logprob: -11.53396224975586
    5. '   ' → logprob: -11.65896224975586
    6. '=int' → logprob: -11.78396224975586
    7. '  ' → logprob: -13.65896224975586
    8. ' ,' → logprob: -14.53396224975586
    9. ' =
' → logprob: -14.65896224975586
    10. ' ' → logprob: -15.03396224975586

Token 263: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.612969160079956
    2. ' int' → logprob: -1.612969160079956
    3. 'read' → logprob: -1.737969160079956
    4. 'int' → logprob: -2.487969160079956
    5. ' ' → logprob: -11.987969398498535
    6. ' ' → logprob: -14.112969398498535
    7. '  ' → logprob: -14.487969398498535
    8. '	read' → logprob: -14.987969398498535
    9. '   ' → logprob: -15.237969398498535
    10. '<int' → logprob: -15.737969398498535

Token 264: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0008168928325176239
    2. 'int' → logprob: -7.125816822052002
    3. '_line' → logprob: -12.75081729888916
    4. '()' → logprob: -12.87581729888916
    5. '_in' → logprob: -13.00081729888916
    6. '_' → logprob: -13.87581729888916
    7. '_integer' → logprob: -14.12581729888916
    8. '(int' → logprob: -14.37581729888916
    9. '(' → logprob: -14.37581729888916
    10. '_str' → logprob: -15.00081729888916

Token 265: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008616226725280285
    2. '()
' → logprob: -4.7586164474487305
    3. '()
' → logprob: -14.50861644744873
    4. '()\' → logprob: -14.50861644744873
    5. '()

' → logprob: -14.88361644744873
    6. ')' → logprob: -15.88361644744873
    7. '(' → logprob: -16.258615493774414
    8. '())' → logprob: -16.508615493774414
    9. '   ' → logprob: -16.883615493774414
    10. '()`' → logprob: -17.133615493774414

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21705986559391022
    2. 'A' → logprob: -1.717059850692749
    3. ' A' → logprob: -4.217060089111328
    4. '	A' → logprob: -7.967060089111328
    5. '  ' → logprob: -8.717060089111328
    6. 'a' → logprob: -8.967060089111328
    7. ' ' → logprob: -10.217060089111328
    8. '    
' → logprob: -10.342060089111328
    9. ',A' → logprob: -11.342060089111328
    10. 'n' → logprob: -11.592060089111328

Token 267: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0011462911497801542
    2. 'a' → logprob: -7.37614631652832
    3. 'AB' → logprob: -8.25114631652832
    4. '   ' → logprob: -9.00114631652832
    5. ' A' → logprob: -9.87614631652832
    6. 'for' → logprob: -10.37614631652832
    7. 'arr' → logprob: -11.12614631652832
    8. 'ab' → logprob: -12.12614631652832
    9. 'abc' → logprob: -12.37614631652832
    10. 'ABC' → logprob: -12.37614631652832

Token 268: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39854180812835693
    2. ' =' → logprob: -1.273541808128357
    3. '=' → logprob: -3.0235419273376465
    4. ' ,' → logprob: -8.398541450500488
    5. ' ' → logprob: -13.398541450500488
    6. ',B' → logprob: -13.648541450500488
    7. ',b' → logprob: -13.773541450500488
    8. ' =
' → logprob: -14.148541450500488
    9. '<|end|>' → logprob: -14.148541450500488
    10. ')' → logprob: -14.398541450500488

Token 269: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0019382734317332506
    2. ' read' → logprob: -6.251938343048096
    3. '[' → logprob: -11.626937866210938
    4. '[]' → logprob: -14.751937866210938
    5. ' [' → logprob: -14.876937866210938
    6. '(read' → logprob: -17.251937866210938
    7. '	read' → logprob: -17.876937866210938
    8. '  ' → logprob: -18.376937866210938
    9. '   ' → logprob: -18.501937866210938
    10. ' ' → logprob: -19.251937866210938

Token 270: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0005900867399759591
    2. 'int' → logprob: -7.6255903244018555
    3. '_list' → logprob: -9.625590324401855
    4. '_' → logprob: -12.250590324401855
    5. '_line' → logprob: -12.250590324401855
    6. '()' → logprob: -12.500590324401855
    7. '_in' → logprob: -12.750590324401855
    8. '```' → logprob: -12.875590324401855
    9. '
' → logprob: -13.375590324401855
    10. '_input' → logprob: -13.500590324401855

Token 271: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.12710154056549072
    2. '()' → logprob: -2.127101421356201
    3. 'List' → logprob: -10.00210189819336
    4. 's' → logprob: -10.00210189819336
    5. 'list' → logprob: -10.12710189819336
    6. '()
' → logprob: -10.75210189819336
    7. '_lista' → logprob: -12.37710189819336
    8. '_lists' → logprob: -12.75210189819336
    9. '_lst' → logprob: -13.25210189819336
    10. '().' → logprob: -13.37710189819336

Token 272: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008056987426243722
    2. '()
' → logprob: -7.125805854797363
    3. '()

' → logprob: -15.000805854797363
    4. ' ()' → logprob: -15.375805854797363
    5. '()
' → logprob: -15.750805854797363
    6. '()\' → logprob: -15.750805854797363
    7. '(' → logprob: -16.000804901123047
    8. '())' → logprob: -16.625804901123047
    9. '   ' → logprob: -16.750804901123047
    10. '()`' → logprob: -17.000804901123047

Token 273: '   ' (ID: 271)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6946113109588623
    2. '   ' → logprob: -0.6946113109588623
    3. ' B' → logprob: -6.569611549377441
    4. '	B' → logprob: -10.069611549377441
    5. ' ' → logprob: -11.194611549377441
    6. '  ' → logprob: -13.444611549377441
    7. 'b' → logprob: -13.944611549377441
    8. '```' → logprob: -14.069611549377441
    9. '   ' → logprob: -14.319611549377441
    10. ' ' → logprob: -16.069610595703125

Token 274: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.10039429366588593
    2. ' B' → logprob: -2.3503942489624023
    3. '   ' → logprob: -8.600394248962402
    4. ' ' → logprob: -12.975394248962402
    5. '	B' → logprob: -14.975394248962402
    6. '
' → logprob: -15.350394248962402
    7. 'b' → logprob: -15.725394248962402
    8. '  ' → logprob: -15.975394248962402
    9. '```' → logprob: -16.35039520263672
    10. ' ' → logprob: -16.35039520263672

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740794599056244
    2. '=' → logprob: -0.9740794897079468
    3. '(' → logprob: -14.474079132080078
    4. '()' → logprob: -14.599079132080078
    5. ',' → logprob: -15.224079132080078
    6. '   ' → logprob: -15.224079132080078
    7. ' ' → logprob: -15.474079132080078
    8. ')' → logprob: -15.724079132080078
    9. '	' → logprob: -15.849079132080078
    10. ' =
' → logprob: -16.474079132080078

Token 276: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.20141665637493134
    2. ' read' → logprob: -1.7014166116714478
    3. ' ' → logprob: -13.701416969299316
    4. '  ' → logprob: -13.701416969299316
    5. '   ' → logprob: -14.076416969299316
    6. '	read' → logprob: -16.076416015625
    7. '(read' → logprob: -16.451416015625
    8. '[' → logprob: -17.076416015625
    9. 'raw' → logprob: -17.326416015625
    10. '    ' → logprob: -17.451416015625

Token 277: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0024982523173093796
    2. 'int' → logprob: -6.627498149871826
    3. '_list' → logprob: -6.752498149871826
    4. 'list' → logprob: -13.252498626708984
    5. 'Int' → logprob: -13.877498626708984
    6. '```' → logprob: -14.377498626708984
    7. '()' → logprob: -16.002498626708984
    8. '_str' → logprob: -16.127498626708984
    9. '
' → logprob: -16.877498626708984
    10. '_INT' → logprob: -17.377498626708984

Token 278: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3892892897129059
    2. '_list' → logprob: -1.1392892599105835
    3. '()
' → logprob: -6.889289379119873
    4. 'List' → logprob: -7.264289379119873
    5. 'list' → logprob: -7.889289379119873
    6. 'ist' → logprob: -9.014288902282715
    7. '().' → logprob: -10.139288902282715
    8. '()

' → logprob: -10.139288902282715
    9. '()[' → logprob: -10.389288902282715
    10. '())' → logprob: -10.514288902282715

Token 279: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03805951029062271
    2. '()
' → logprob: -3.2880594730377197
    3. '   ' → logprob: -11.41305923461914
    4. '()

' → logprob: -12.28805923461914
    5. '())' → logprob: -14.28805923461914
    6. '()
' → logprob: -14.78805923461914
    7. ')' → logprob: -14.91305923461914
    8. ' ()' → logprob: -15.16305923461914
    9. '()`' → logprob: -15.66305923461914
    10. 'def' → logprob: -16.16305923461914

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1497911661863327
    2. '
' → logprob: -2.0247912406921387
    3. '    
' → logprob: -5.024791240692139
    4. '  
' → logprob: -8.77479076385498
    5. '```' → logprob: -9.14979076385498
    6. '<|end|>' → logprob: -9.27479076385498
    7. 'n' → logprob: -10.77479076385498
    8. 'for' → logprob: -10.89979076385498
    9. ' 
' → logprob: -11.02479076385498
    10. 'result' → logprob: -11.14979076385498

Token 281: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.17878074944019318
    2. ' result' → logprob: -1.9287807941436768
    3. '   ' → logprob: -4.303780555725098
    4. ' res' → logprob: -6.428780555725098
    5. 'res' → logprob: -6.428780555725098
    6. 'max' → logprob: -7.053780555725098
    7. '    
' → logprob: -8.303780555725098
    8. '
' → logprob: -8.428780555725098
    9. ' max' → logprob: -8.678780555725098
    10. 'ans' → logprob: -10.428780555725098

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300091043114662
    2. '=' → logprob: -3.1680009365081787
    3. ' =
' → logprob: -14.418001174926758
    4. ' ' → logprob: -14.918001174926758
    5. ' =)' → logprob: -15.168001174926758
    6. ' ' → logprob: -15.293001174926758
    7. ',' → logprob: -16.168001174926758
    8. '<|end|>' → logprob: -16.418001174926758
    9. ')' → logprob: -16.543001174926758
    10. ' =
' → logprob: -17.043001174926758

Token 283: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.31326231360435486
    2. 'process' → logprob: -1.3132623434066772
    3. '(process' → logprob: -14.813261985778809
    4. '	process' → logprob: -16.313262939453125
    5. '   ' → logprob: -16.563262939453125
    6. '.process' → logprob: -17.938262939453125
    7. ' proces' → logprob: -18.688262939453125
    8. ' ' → logprob: -18.813262939453125
    9. '_process' → logprob: -18.938262939453125
    10. 'rocess' → logprob: -19.063262939453125

Token 284: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0012018970446661115
    2. '(' → logprob: -6.75120210647583
    3. ' (' → logprob: -10.376201629638672
    4. '(
' → logprob: -15.126201629638672
    5. '((' → logprob: -16.001201629638672
    6. '(B' → logprob: -16.626201629638672
    7. ' ' → logprob: -17.501201629638672
    8. '(

' → logprob: -17.751201629638672
    9. '   ' → logprob: -18.376201629638672
    10. '(I' → logprob: -18.751201629638672

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002694416616577655
    2. ' ,' → logprob: -8.250269889831543
    3. ',B' → logprob: -11.875269889831543
    4. ',
' → logprob: -14.250269889831543
    5. 'B' → logprob: -15.500269889831543
    6. '   ' → logprob: -15.625269889831543
    7. ')' → logprob: -16.250268936157227
    8. '(' → logprob: -17.375268936157227
    9. '(),' → logprob: -17.500268936157227
    10. ',b' → logprob: -17.625268936157227

Token 286: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5759401917457581
    2. ' B' → logprob: -0.8259401917457581
    3. ' ' → logprob: -15.075940132141113
    4. '   ' → logprob: -15.325940132141113
    5. '	B' → logprob: -16.07594108581543
    6. '    ' → logprob: -16.57594108581543
    7. ' ' → logprob: -17.32594108581543
    8. 'b' → logprob: -17.82594108581543
    9. '  ' → logprob: -18.07594108581543
    10. '>B' → logprob: -18.20094108581543

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ',n' → logprob: -11.125017166137695
    3. ' ,' → logprob: -13.000017166137695
    4. ',
' → logprob: -18.500017166137695
    5. '   ' → logprob: -18.750017166137695
    6. 'n' → logprob: -20.250017166137695
    7. ')' → logprob: -20.375017166137695
    8. '```' → logprob: -21.125017166137695
    9. '(n' → logprob: -21.375017166137695
    10. '，' → logprob: -22.000017166137695

Token 288: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.061967913061380386
    2. ' n' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.436967849731445
    4. ')n' → logprob: -16.561967849731445
    5. ')' → logprob: -16.811967849731445
    6. '	n' → logprob: -16.936967849731445
    7. '
' → logprob: -17.936967849731445
    8. 'len' → logprob: -18.936967849731445
    9. ' ' → logprob: -19.061967849731445
    10. '```' → logprob: -19.186967849731445

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12693041563034058
    2. ')
' → logprob: -2.1269304752349854
    3. ')
' → logprob: -13.126930236816406
    4. '   ' → logprob: -15.626930236816406
    5. ')`
' → logprob: -16.751930236816406
    6. ' )' → logprob: -17.126930236816406
    7. ' )
' → logprob: -17.126930236816406
    8. ')

' → logprob: -17.251930236816406
    9. ')`' → logprob: -18.001930236816406
    10. '),' → logprob: -19.126930236816406

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10073958337306976
    2. 'print' → logprob: -2.3507394790649414
    3. '
' → logprob: -7.850739479064941
    4. ' print' → logprob: -9.350739479064941
    5. '    
' → logprob: -10.100739479064941
    6. '```' → logprob: -11.350739479064941
    7. '	print' → logprob: -13.850739479064941
    8. '  
' → logprob: -14.600739479064941
    9. '(print' → logprob: -14.850739479064941
    10. '<|end|>' → logprob: -15.100739479064941

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.2617008400848135e-05
    2. ' print' → logprob: -10.500032424926758
    3. '   ' → logprob: -12.250032424926758
    4. '
' → logprob: -16.125032424926758
    5. '```' → logprob: -16.750032424926758
    6. 'sys' → logprob: -18.875032424926758
    7. '	print' → logprob: -19.625032424926758
    8. '    
' → logprob: -20.875032424926758
    9. 'pr' → logprob: -21.500032424926758
    10. 'printf' → logprob: -21.625032424926758

Token 292: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002889874158427119
    2. '(' → logprob: -8.250288963317871
    3. 'result' → logprob: -10.625288963317871
    4. ' result' → logprob: -13.125288963317871
    5. ' (' → logprob: -13.500288963317871
    6. '=result' → logprob: -17.500289916992188
    7. ',result' → logprob: -17.625289916992188
    8. '(res' → logprob: -18.500289916992188
    9. '()' → logprob: -18.625289916992188
    10. '(
' → logprob: -18.875289916992188

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '()' → logprob: -12.87500286102295
    3. '())' → logprob: -15.12500286102295
    4. ')
' → logprob: -15.75000286102295
    5. ' )' → logprob: -17.125003814697266
    6. ')`' → logprob: -17.250003814697266
    7. '))' → logprob: -17.750003814697266
    8. '(' → logprob: -18.500003814697266
    9. '`)' → logprob: -19.250003814697266
    10. '),' → logprob: -19.500003814697266

Token 294: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.2729995988775045e-06
    2. ' if' → logprob: -12.125006675720215
    3. '<|end|>' → logprob: -14.875006675720215
    4. '
' → logprob: -15.250006675720215
    5. '```' → logprob: -15.750006675720215
    6. 'main' → logprob: -17.5000057220459
    7. '#' → logprob: -17.6250057220459
    8. '\' → logprob: -18.2500057220459
    9. '  
' → logprob: -18.6250057220459
    10. '#if' → logprob: -19.0000057220459

Token 295: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 293
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 248
Précision stricte (1ère position): 39.93%
Précision adaptée (1ère position): 43.34%
Précision (top 10): 84.64%
================================================================================
