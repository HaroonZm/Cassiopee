================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())  # On lit le nombre d'entrées
results = []
for idx in range(n):
    line = input()
    name, score = line.split()
    # Pour rappel, on veut trier par -score, c'est plus simple :-)
    score = int(score)
    results.append([[name, -score], idx + 1])   # On stocke tout, bon...

# Je crois que ça trie comme on veut.
sorted_results = sorted(results)
for result in sorted_results:
    print(result[1])  # Afficher juste l’index, c’est demandé ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -5.7530574849806726e-05
    2. ''' → logprob: -10.750057220458984
    3. '('' → logprob: -11.125057220458984
    4. '(
' → logprob: -11.750057220458984
    5. '(n' → logprob: -13.000057220458984
    6. '```' → logprob: -13.125057220458984
    7. '("("' → logprob: -13.125057220458984
    8. '()' → logprob: -13.500057220458984
    9. '`' → logprob: -13.500057220458984
    10. '[' → logprob: -14.125057220458984

Token 4: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.797021746635437
    2. 'for' → logprob: -1.297021746635437
    3. 's' → logprob: -2.5470218658447266
    4. '\n' → logprob: -2.5470218658447266
    5. '\' → logprob: -4.172021865844727
    6. '```' → logprob: -4.297021865844727
    7. ' if' → logprob: -4.422021865844727
    8. '#' → logprob: -4.547021865844727
    9. 'print' → logprob: -4.547021865844727
    10. 'result' → logprob: -4.672021865844727

Token 6: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7094632387161255
    2. 'if' → logprob: -1.7094632387161255
    3. 's' → logprob: -2.084463119506836
    4. 'i' → logprob: -2.459463119506836
    5. '\n' → logprob: -3.209463119506836
    6. 'f' → logprob: -4.709463119506836
    7. 'x' → logprob: -4.834463119506836
    8. 'a' → logprob: -4.834463119506836
    9. '\' → logprob: -4.959463119506836
    10. '`' → logprob: -5.084463119506836

Token 7: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0034591832663863897
    2. '  ' → logprob: -6.3784589767456055
    3. ' )' → logprob: -7.7534589767456055
    4. ' \' → logprob: -8.253458976745605
    5. '<|end|>' → logprob: -8.753458976745605
    6. ')' → logprob: -8.878458976745605
    7. ' n' → logprob: -9.128458976745605
    8. ''' → logprob: -9.503458976745605
    9. 'n' → logprob: -9.628458976745605
    10. ' (' → logprob: -9.753458976745605

Token 8: ' lit' (ID: 11980)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020282363519072533
    2. 'ly' → logprob: -4.39528226852417
    3. 'es' → logprob: -5.52028226852417
    4. 'the' → logprob: -6.89528226852417
    5. 'el' → logprob: -7.02028226852417
    6. ' e' → logprob: -8.520282745361328
    7. ' the' → logprob: -8.520282745361328
    8. 'line' → logprob: -8.645282745361328
    9. 'eline' → logprob: -8.770282745361328
    10. 's' → logprob: -8.895282745361328

Token 9: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30384913086891174
    2. 'l' → logprob: -2.678849220275879
    3. ' la' → logprob: -3.053849220275879
    4. ' l' → logprob: -3.803849220275879
    5. '()' → logprob: -3.803849220275879
    6. 'n' → logprob: -4.428849220275879
    7. 'le' → logprob: -4.553849220275879
    8. ' une' → logprob: -4.553849220275879
    9. ' un' → logprob: -4.928849220275879
    10. 'r' → logprob: -5.303849220275879

Token 10: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8855562806129456
    2. 'nombre' → logprob: -1.1355562210083008
    3. ' nombre' → logprob: -1.3855562210083008
    4. '\n' → logprob: -5.510556221008301
    5. 'n' → logprob: -5.510556221008301
    6. 's' → logprob: -6.010556221008301
    7. ' ' → logprob: -7.010556221008301
    8. ' \' → logprob: -7.760556221008301
    9. '  ' → logprob: -7.760556221008301
    10. '  
' → logprob: -8.1355562210083

Token 11: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11371707171201706
    2. '_' → logprob: -2.6137170791625977
    3. ' de' → logprob: -4.988717079162598
    4. ')' → logprob: -5.113717079162598
    5. 's' → logprob: -5.363717079162598
    6. '<|end|>' → logprob: -5.488717079162598
    7. ' )' → logprob: -5.613717079162598
    8. ' d' → logprob: -5.738717079162598
    9. '  ' → logprob: -6.488717079162598
    10. 'd' → logprob: -6.988717079162598

Token 12: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7609726190567017
    2. 'élé' → logprob: -1.1359726190567017
    3. 'é' → logprob: -2.260972499847412
    4. ''' → logprob: -3.010972499847412
    5. '_' → logprob: -4.885972499847412
    6. ' élèves' → logprob: -5.510972499847412
    7. '   ' → logprob: -5.760972499847412
    8. ' é' → logprob: -5.885972499847412
    9. ' éléments' → logprob: -5.885972499847412
    10. ''ent' → logprob: -6.260972499847412

Token 13: 'entr' (ID: 12792)
  Prédit: 'él'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'él' → logprob: -1.1746270656585693
    2. 'élé' → logprob: -1.1746270656585693
    3. 'lé' → logprob: -1.4246270656585693
    4. 'é' → logprob: -2.6746270656585693
    5. 'l' → logprob: -3.4246270656585693
    6. 'el' → logprob: -3.9246270656585693
    7. 'én' → logprob: -5.924627304077148
    8. ' élèves' → logprob: -6.049627304077148
    9. ''él' → logprob: -6.299627304077148
    10. 'ele' → logprob: -6.424627304077148

Token 14: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.004523042589426041
    2. 'ée' → logprob: -5.629523277282715
    3. 'é' → logprob: -7.254523277282715
    4. 'ees' → logprob: -8.754523277282715
    5. 'és' → logprob: -10.129523277282715
    6. 'es' → logprob: -12.129523277282715
    7. '```' → logprob: -12.629523277282715
    8. 'e' → logprob: -13.754523277282715
    9. '�' → logprob: -14.379523277282715
    10. '%C' → logprob: -14.504523277282715

Token 15: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6426672339439392
    2. '
' → logprob: -1.017667293548584
    3. 'for' → logprob: -2.517667293548584
    4. '\' → logprob: -4.392667293548584
    5. '' → logprob: -4.392667293548584
    6. ' for' → logprob: -6.517667293548584
    7. ' 
' → logprob: -7.017667293548584
    8. '```' → logprob: -7.017667293548584
    9. '\r' → logprob: -7.017667293548584
    10. '
' → logprob: -7.392667293548584

Token 16: 'results' (ID: 16570)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4300210475921631
    2. 'for' → logprob: -1.430021047592163
    3. '
' → logprob: -2.305021047592163
    4. ' for' → logprob: -5.930021286010742
    5. 'n' → logprob: -6.430021286010742
    6. '\' → logprob: -6.805021286010742
    7. '' → logprob: -7.055021286010742
    8. 's' → logprob: -7.055021286010742
    9. '```' → logprob: -7.305021286010742
    10. '#' → logprob: -7.555021286010742

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3566097915172577
    2. ' =' → logprob: -1.60660982131958
    3. '=' → logprob: -2.98160982131958
    4. '.' → logprob: -3.35660982131958
    5. '.append' → logprob: -4.85660982131958
    6. '_' → logprob: -6.10660982131958
    7. '[]' → logprob: -6.48160982131958
    8. '[:]' → logprob: -7.10660982131958
    9. 's' → logprob: -8.106609344482422
    10. '(' → logprob: -8.731609344482422

Token 18: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.10058996826410294
    2. '[]' → logprob: -2.3505899906158447
    3. '[' → logprob: -8.475589752197266
    4. ' [' → logprob: -8.850589752197266
    5. ' []
' → logprob: -11.100589752197266
    6. ' ' → logprob: -12.100589752197266
    7. '[]
' → logprob: -12.600589752197266
    8. '"' → logprob: -13.225589752197266
    9. ' []

' → logprob: -13.350589752197266
    10. ' "' → logprob: -13.475589752197266

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02364547736942768
    2. '\n' → logprob: -4.773645401000977
    3. '
' → logprob: -5.273645401000977
    4. '```' → logprob: -5.273645401000977
    5. ' for' → logprob: -5.523645401000977
    6. '\' → logprob: -7.898645401000977
    7. '' → logprob: -9.148645401000977
    8. ' 
' → logprob: -9.273645401000977
    9. 'n' → logprob: -10.898645401000977
    10. 'i' → logprob: -11.273645401000977

Token 20: ' idx' (ID: 14016)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021857447922229767
    2. ' i' → logprob: -4.021857261657715
    3. ' n' → logprob: -5.896857261657715
    4. '  ' → logprob: -7.021857261657715
    5. 'i' → logprob: -11.146857261657715
    6. ' ' → logprob: -11.271857261657715
    7. ' ‌' → logprob: -11.646857261657715
    8. '_' → logprob: -12.271857261657715
    9. 'n' → logprob: -12.396857261657715
    10. '```' → logprob: -13.021857261657715

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07391519844532013
    2. 'in' → logprob: -2.6989152431488037
    3. ' ' → logprob: -5.573915004730225
    4. '  ' → logprob: -9.323915481567383
    5. ',' → logprob: -10.448915481567383
    6. ' ,' → logprob: -11.448915481567383
    7. '_' → logprob: -11.448915481567383
    8. 'n' → logprob: -12.073915481567383
    9. ' i' → logprob: -12.198915481567383
    10. 'i' → logprob: -12.573915481567383

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021249949932098
    2. 'range' → logprob: -2.350212574005127
    3. ' ' → logprob: -13.100212097167969
    4. '	range' → logprob: -13.725212097167969
    5. ' n' → logprob: -13.850212097167969
    6. 'n' → logprob: -14.475212097167969
    7. '```' → logprob: -15.475212097167969
    8. ')' → logprob: -15.725212097167969
    9. 'rang' → logprob: -15.725212097167969
    10. ' xrange' → logprob: -16.10021209716797

Token 23: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16036304831504822
    2. '(n' → logprob: -1.9103630781173706
    3. ' (' → logprob: -9.03536319732666
    4. '(
' → logprob: -11.41036319732666
    5. '(len' → logprob: -12.41036319732666
    6. '(

' → logprob: -13.03536319732666
    7. '(s' → logprob: -14.03536319732666
    8. '(range' → logprob: -15.16036319732666
    9. ' n' → logprob: -15.66036319732666
    10. '(`' → logprob: -15.78536319732666

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003946367651224136
    2. ')' → logprob: -5.878946304321289
    3. ' ):' → logprob: -7.253946304321289
    4. '+' → logprob: -7.878946304321289
    5. ':' → logprob: -10.753946304321289
    6. '):
' → logprob: -11.753946304321289
    7. ',' → logprob: -12.003946304321289
    8. ' )' → logprob: -12.003946304321289
    9. ' +' → logprob: -12.503946304321289
    10. ' ' → logprob: -12.878946304321289

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8312990665435791
    2. ' ' → logprob: -1.081299066543579
    3. '    ' → logprob: -1.581299066543579
    4. ' input' → logprob: -5.581298828125
    5. ' )' → logprob: -5.581298828125
    6. '     
' → logprob: -6.081298828125
    7. '_' → logprob: -6.581298828125
    8. '    
' → logprob: -6.581298828125
    9. 'input' → logprob: -7.081298828125
    10. '  ' → logprob: -7.331298828125

Token 26: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4139917194843292
    2. ' line' → logprob: -2.288991689682007
    3. '   ' → logprob: -2.538991689682007
    4. '    ' → logprob: -2.663991689682007
    5. ' input' → logprob: -3.413991689682007
    6. ' data' → logprob: -4.538991928100586
    7. 'input' → logprob: -5.663991928100586
    8. ' )' → logprob: -5.788991928100586
    9. ' code' → logprob: -5.913991928100586
    10. 's' → logprob: -5.913991928100586

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002499794587492943
    2. '=' → logprob: -6.252499580383301
    3. '_' → logprob: -8.3774995803833
    4. ' ' → logprob: -8.5024995803833
    5. 's' → logprob: -9.8774995803833
    6. '_input' → logprob: -10.7524995803833
    7. ',' → logprob: -10.8774995803833
    8. ' ,' → logprob: -11.7524995803833
    9. '_tokens' → logprob: -11.8774995803833
    10. '  ' → logprob: -12.3774995803833

Token 28: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016046451404690742
    2. 'input' → logprob: -4.141046524047852
    3. ' int' → logprob: -11.891046524047852
    4. ' ' → logprob: -13.391046524047852
    5. 'int' → logprob: -13.516046524047852
    6. '=input' → logprob: -14.141046524047852
    7. ' ' → logprob: -15.016046524047852
    8. '_input' → logprob: -15.391046524047852
    9. ' list' → logprob: -15.516046524047852
    10. '	input' → logprob: -15.766046524047852

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020992294885218143
    2. '(' → logprob: -6.25209903717041
    3. '().' → logprob: -9.62709903717041
    4. '())' → logprob: -10.25209903717041
    5. ')' → logprob: -10.37709903717041
    6. '('' → logprob: -11.75209903717041
    7. '("")' → logprob: -12.25209903717041
    8. ' ()' → logprob: -12.37709903717041
    9. ' ' → logprob: -12.87709903717041
    10. '```' → logprob: -13.00209903717041

Token 30: '   ' (ID: 271)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.08330950140953064
    2. '   ' → logprob: -3.0833094120025635
    3. '.strip' → logprob: -4.583309650421143
    4. ' ' → logprob: -5.583309650421143
    5. 's' → logprob: -5.833309650421143
    6. 'split' → logprob: -5.958309650421143
    7. 'tokens' → logprob: -6.083309650421143
    8. '<|end|>' → logprob: -6.333309650421143
    9. '.s' → logprob: -6.583309650421143
    10. ')' → logprob: -6.708309650421143

Token 31: ' name' (ID: 1308)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5191208720207214
    2. ' if' → logprob: -2.144120931625366
    3. '   ' → logprob: -2.894120931625366
    4. 'tokens' → logprob: -3.019120931625366
    5. 'if' → logprob: -3.519120931625366
    6. 's' → logprob: -3.519120931625366
    7. '_' → logprob: -3.769120931625366
    8. '    ' → logprob: -4.144120693206787
    9. ')' → logprob: -4.769120693206787
    10. ''' → logprob: -4.769120693206787

Token 32: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8308637738227844
    2. '_' → logprob: -1.3308637142181396
    3. ' =' → logprob: -1.5808637142181396
    4. '=' → logprob: -3.5808637142181396
    5. ',' → logprob: -3.7058637142181396
    6. ')' → logprob: -4.580863952636719
    7. ' ' → logprob: -5.080863952636719
    8. 's' → logprob: -5.080863952636719
    9. '.' → logprob: -5.330863952636719
    10. ']' → logprob: -6.080863952636719

Token 33: ' score' (ID: 8429)
  Prédit: ' age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' age' → logprob: -0.6150572896003723
    2. 'age' → logprob: -1.6150572299957275
    3. ' score' → logprob: -2.3650572299957275
    4. 'score' → logprob: -2.7400572299957275
    5. 'value' → logprob: -3.8650572299957275
    6. ' value' → logprob: -4.115057468414307
    7. 'space' → logprob: -4.990057468414307
    8. ' amount' → logprob: -4.990057468414307
    9. 'amount' → logprob: -5.365057468414307
    10. ' year' → logprob: -5.490057468414307

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003257450181990862
    2. '=' → logprob: -5.8782572746276855
    3. ',' → logprob: -7.7532572746276855
    4. ' ' → logprob: -12.128257751464844
    5. 's' → logprob: -12.253257751464844
    6. ' ,' → logprob: -12.253257751464844
    7. '_' → logprob: -12.628257751464844
    8. ')' → logprob: -13.503257751464844
    9. '  ' → logprob: -14.003257751464844
    10. '   ' → logprob: -15.003257751464844

Token 35: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03003707155585289
    2. 'line' → logprob: -3.5300371646881104
    3. ' ' → logprob: -8.405036926269531
    4. ' map' → logprob: -11.280036926269531
    5. '	line' → logprob: -11.530036926269531
    6. '=line' → logprob: -11.530036926269531
    7. '[line' → logprob: -12.405036926269531
    8. ' ' → logprob: -12.655036926269531
    9. '    ' → logprob: -12.655036926269531
    10. ' lin' → logprob: -12.780036926269531

Token 36: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.31336960196495056
    2. '.' → logprob: -1.313369631767273
    3. '.strip' → logprob: -9.438369750976562
    4. ' .' → logprob: -11.063369750976562
    5. '.s' → logprob: -12.438369750976562
    6. 'split' → logprob: -12.688369750976562
    7. '.rstrip' → logprob: -12.688369750976562
    8. 's' → logprob: -14.688369750976562
    9. '.replace' → logprob: -14.813369750976562
    10. '.Split' → logprob: -15.313369750976562

Token 37: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0075009786523878574
    2. '("("' → logprob: -5.132501125335693
    3. '()' → logprob: -6.757501125335693
    4. '(' → logprob: -8.132500648498535
    5. '("' → logprob: -9.382500648498535
    6. '(',' → logprob: -11.507500648498535
    7. '('(' → logprob: -11.882500648498535
    8. ''' → logprob: -12.257500648498535
    9. '('.')' → logprob: -12.382500648498535
    10. '(('' → logprob: -13.632500648498535

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' #' (ID: 1069)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.796772301197052
    2. ' ' → logprob: -1.2967722415924072
    3. 'results' → logprob: -2.0467722415924072
    4. ' score' → logprob: -3.6717722415924072
    5. '   ' → logprob: -4.296772480010986
    6. 'scores' → logprob: -4.296772480010986
    7. ' 
' → logprob: -4.421772480010986
    8. ')' → logprob: -4.546772480010986
    9. ' results' → logprob: -4.546772480010986
    10. ' )' → logprob: -4.921772480010986

Token 40: ' Pour' (ID: 13931)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.17396791279315948
    2. 'score' → logprob: -2.0489678382873535
    3. ' results' → logprob: -4.6739678382873535
    4. ' scores' → logprob: -4.7989678382873535
    5. '   ' → logprob: -5.1739678382873535
    6. ' ' → logprob: -6.1739678382873535
    7. 'results' → logprob: -6.6739678382873535
    8. ' if' → logprob: -7.1739678382873535
    9. 'scores' → logprob: -7.1739678382873535
    10. 's' → logprob: -7.2989678382873535

Token 41: ' rappel' (ID: 86346)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.16195562481880188
    2. ' ' → logprob: -3.0369555950164795
    3. 'score' → logprob: -3.4119555950164795
    4. ' calcul' → logprob: -4.661955833435059
    5. '_' → logprob: -5.036955833435059
    6. ' convertir' → logprob: -5.036955833435059
    7. '   ' → logprob: -5.286955833435059
    8. ' s' → logprob: -5.536955833435059
    9. ' if' → logprob: -5.786955833435059
    10. ' le' → logprob: -6.161955833435059

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.988881528377533
    2. '   ' → logprob: -0.988881528377533
    3. ' ' → logprob: -2.9888815879821777
    4. 'score' → logprob: -3.1138815879821777
    5. ' ,' → logprob: -3.2388815879821777
    6. ' score' → logprob: -3.2388815879821777
    7. '<|end|>' → logprob: -3.8638815879821777
    8. ' if' → logprob: -4.613881587982178
    9. 's' → logprob: -4.613881587982178
    10. ' n' → logprob: -4.988881587982178

Token 43: ' on' (ID: 402)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5650584101676941
    2. 'score' → logprob: -1.0650584697723389
    3. ' ' → logprob: -2.690058469772339
    4. ' if' → logprob: -5.81505823135376
    5. ' scores' → logprob: -5.81505823135376
    6. '<|end|>' → logprob: -6.69005823135376
    7. ' results' → logprob: -7.06505823135376
    8. 'scores' → logprob: -7.19005823135376
    9. '    ' → logprob: -7.19005823135376
    10. ' s' → logprob: -7.31505823135376

Token 44: ' veut' (ID: 41653)
  Prédit: ' souhaite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' souhaite' → logprob: -1.7563917636871338
    2. 'score' → logprob: -2.006391763687134
    3. ' veut' → logprob: -2.131391763687134
    4. ' stock' → logprob: -2.131391763687134
    5. ' ajoute' → logprob: -2.881391763687134
    6. 'stock' → logprob: -2.881391763687134
    7. 'aj' → logprob: -3.506391763687134
    8. ' score' → logprob: -3.756391763687134
    9. 'compare' → logprob: -3.881391763687134
    10. 'cherche' → logprob: -4.006391525268555

Token 45: ' tr' (ID: 498)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6744459271430969
    2. ' tr' → logprob: -1.2994458675384521
    3. ' stock' → logprob: -3.299445867538452
    4. ' conserver' → logprob: -3.299445867538452
    5. ' que' → logprob: -3.549445867538452
    6. ' comparer' → logprob: -4.049446105957031
    7. ' garder' → logprob: -4.174446105957031
    8. '   ' → logprob: -4.674446105957031
    9. 'stock' → logprob: -4.924446105957031
    10. ' ' → logprob: -5.049446105957031

Token 46: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.009427376091480255
    2. 'i' → logprob: -5.009427547454834
    3. 'ouver' → logprob: -6.384427547454834
    4. 'ié' → logprob: -8.884427070617676
    5. 'ie' → logprob: -9.009427070617676
    6. 'iquer' → logprob: -9.696927070617676
    7. '#' → logprob: -10.071927070617676
    8. 'a' → logprob: -10.259427070617676
    9. 'class' → logprob: -10.509427070617676
    10. 'rier' → logprob: -10.696927070617676

Token 47: ' par' (ID: 686)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.06654783338308334
    2. ' results' → logprob: -3.1915478706359863
    3. '   ' → logprob: -5.066547870635986
    4. ' les' → logprob: -5.441547870635986
    5. ',' → logprob: -5.816547870635986
    6. ' ,' → logprob: -6.191547870635986
    7. ' par' → logprob: -6.691547870635986
    8. '_results' → logprob: -6.816547870635986
    9. '	results' → logprob: -7.066547870635986
    10. 'scores' → logprob: -7.191547870635986

Token 48: ' -' (ID: 533)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.027933986857533455
    2. 'score' → logprob: -3.6529340744018555
    3. ' le' → logprob: -7.9029340744018555
    4. ' la' → logprob: -8.527934074401855
    5. ' ' → logprob: -8.777934074401855
    6. '   ' → logprob: -8.777934074401855
    7. '	score' → logprob: -9.152934074401855
    8. '    ' → logprob: -9.402934074401855
    9. ' scores' → logprob: -9.777934074401855
    10. ' note' → logprob: -9.902934074401855

Token 49: 'score' (ID: 21200)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1809707880020142
    2. ' int' → logprob: -1.4309707880020142
    3. ' score' → logprob: -1.5559707880020142
    4. 'score' → logprob: -1.5559707880020142
    5. ' -' → logprob: -4.180970668792725
    6. '-' → logprob: -4.805970668792725
    7. '-score' → logprob: -5.305970668792725
    8. '-int' → logprob: -6.805970668792725
    9. '1' → logprob: -8.055971145629883
    10. 'float' → logprob: -8.305971145629883

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18825171887874603
    2. '<|end|>' → logprob: -2.4382517337799072
    3. '   ' → logprob: -2.9382517337799072
    4. 's' → logprob: -5.313251495361328
    5. ' ,' → logprob: -5.313251495361328
    6. 'results' → logprob: -5.313251495361328
    7. ')' → logprob: -5.313251495361328
    8. '<|end|>' → logprob: -5.688251495361328
    9. ' ' → logprob: -6.188251495361328
    10. ',
' → logprob: -6.688251495361328

Token 51: ' c' (ID: 274)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6910121440887451
    2. ' name' → logprob: -1.5660121440887451
    3. ' ' → logprob: -2.066012144088745
    4. ' -' → logprob: -2.691012144088745
    5. 'int' → logprob: -4.066012382507324
    6. ' )' → logprob: -4.191012382507324
    7. ')' → logprob: -4.316012382507324
    8. '    ' → logprob: -4.441012382507324
    9. '<|end|>' → logprob: -4.691012382507324
    10. ' int' → logprob: -4.816012382507324

Token 52: ''est' (ID: 6616)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.7997079491615295
    2. 'ont' → logprob: -2.2997078895568848
    3. 'o' → logprob: -3.0497078895568848
    4. 'on' → logprob: -3.4247078895568848
    5. 'e' → logprob: -3.7997078895568848
    6. 'score' → logprob: -3.7997078895568848
    7. '-' → logprob: -4.049707889556885
    8. 'ode' → logprob: -4.049707889556885
    9. ' puis' → logprob: -4.174707889556885
    10. 'a' → logprob: -4.174707889556885

Token 53: ' plus' (ID: 2932)
  Prédit: '-à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.1269080489873886
    2. '-' → logprob: -2.37690806388855
    3. ' à' → logprob: -4.501907825469971
    4. ' -' → logprob: -5.251907825469971
    5. 'à' → logprob: -5.876907825469971
    6. '=' → logprob: -6.626907825469971
    7. ' ' → logprob: -6.751907825469971
    8. '   ' → logprob: -7.251907825469971
    9. ' =' → logprob: -7.376907825469971
    10. '-score' → logprob: -7.626907825469971

Token 54: ' simple' (ID: 4705)
  Prédit: ' simple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simple' → logprob: -0.9178823828697205
    2. ' facile' → logprob: -1.0428824424743652
    3. 'fac' → logprob: -2.6678824424743652
    4. 'simple' → logprob: -2.7928824424743652
    5. 'pr' → logprob: -3.0428824424743652
    6. ' logique' → logprob: -3.6678824424743652
    7. ' clair' → logprob: -4.667882442474365
    8. 'pro' → logprob: -4.792882442474365
    9. 'log' → logprob: -5.167882442474365
    10. ' log' → logprob: -5.417882442474365

Token 55: ' :-)
' (ID: 181750)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4218928813934326
    2. 'results' → logprob: -1.4218928813934326
    3. ',' → logprob: -2.6718928813934326
    4. ' ,' → logprob: -4.546893119812012
    5. '    
' → logprob: -5.421893119812012
    6. ' results' → logprob: -5.546893119812012
    7. '    ' → logprob: -6.046893119812012
    8. 'scores' → logprob: -6.171893119812012
    9. 'score' → logprob: -6.421893119812012
    10. ')' → logprob: -6.546893119812012

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19485610723495483
    2. 'results' → logprob: -1.8198561668395996
    3. ',' → logprob: -5.5698561668396
    4. '    
' → logprob: -5.6948561668396
    5. ' results' → logprob: -5.8198561668396
    6. ')' → logprob: -6.9448561668396
    7. '    ' → logprob: -7.0698561668396
    8. 'scores' → logprob: -7.4448561668396
    9. ' ' → logprob: -7.9448561668396
    10. ' if' → logprob: -8.319855690002441

Token 57: ' score' (ID: 8429)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.34640201926231384
    2. '   ' → logprob: -1.3464020490646362
    3. ' results' → logprob: -3.5964019298553467
    4. 'score' (adapté à ' score') → logprob: -6.846402168273926
    5. ',' → logprob: -7.221402168273926
    6. '    
' → logprob: -7.346402168273926
    7. ')' → logprob: -7.471402168273926
    8. '    ' → logprob: -7.971402168273926
    9. 'scores' → logprob: -8.096402168273926
    10. ' ' → logprob: -8.096402168273926

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31348851323127747
    2. '=' → logprob: -1.313488483428955
    3. '=int' → logprob: -9.063488960266113
    4. ',' → logprob: -9.688488960266113
    5. 's' → logprob: -10.688488960266113
    6. ')' → logprob: -11.688488960266113
    7. ' ' → logprob: -12.688488960266113
    8. 'int' → logprob: -13.063488960266113
    9. '<|end|>' → logprob: -13.063488960266113
    10. '>' → logprob: -14.063488960266113

Token 59: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.041558861732483
    2. '-int' → logprob: -1.416558861732483
    3. ' -' → logprob: -1.541558861732483
    4. '-' → logprob: -2.2915587425231934
    5. 'int' → logprob: -2.4165587425231934
    6. '-in' → logprob: -9.791559219360352
    7. ' ' → logprob: -10.416559219360352
    8. '	int' → logprob: -11.541559219360352
    9. '=int' → logprob: -11.541559219360352
    10. '-m' → logprob: -11.541559219360352

Token 60: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -0.04859452322125435
    2. '(' → logprob: -3.0485944747924805
    3. ' (' → logprob: -12.17359447479248
    4. '(
' → logprob: -14.67359447479248
    5. '(scores' → logprob: -14.67359447479248
    6. 'score' → logprob: -15.17359447479248
    7. '(s' → logprob: -15.79859447479248
    8. ' ' → logprob: -16.048595428466797
    9. '(space' → logprob: -16.048595428466797
    10. '('' → logprob: -16.298595428466797

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002398938377154991
    2. ')
' → logprob: -8.750240325927734
    3. ' )' → logprob: -10.125240325927734
    4. '   ' → logprob: -10.500240325927734
    5. '))' → logprob: -12.250240325927734
    6. ')*' → logprob: -13.125240325927734
    7. '-' → logprob: -13.500240325927734
    8. '),' → logprob: -14.000240325927734
    9. '-)' → logprob: -14.000240325927734
    10. ')

' → logprob: -14.625240325927734

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18987493216991425
    2. 'results' → logprob: -1.8148748874664307
    3. ' results' → logprob: -4.68987512588501
    4. '<|end|>' → logprob: -8.439874649047852
    5. ')' → logprob: -8.689874649047852
    6. '	results' → logprob: -8.939874649047852
    7. '    
' → logprob: -9.064874649047852
    8. '  ' → logprob: -10.189874649047852
    9. '(results' → logprob: -10.314874649047852
    10. '
' → logprob: -10.439874649047852

Token 63: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.2853728234767914
    2. ' results' → logprob: -1.4103728532791138
    3. '   ' → logprob: -5.535372734069824
    4. '	results' → logprob: -8.660372734069824
    5. ' ' → logprob: -10.660372734069824
    6. '(results' → logprob: -11.160372734069824
    7. ')' → logprob: -11.785372734069824
    8. '_results' → logprob: -11.910372734069824
    9. '    
' → logprob: -12.035372734069824
    10. 'result' → logprob: -12.035372734069824

Token 64: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024843348655849695
    2. '.' → logprob: -6.002484321594238
    3. '.app' → logprob: -12.877484321594238
    4. '.extend' → logprob: -13.252484321594238
    5. ' .' → logprob: -13.877484321594238
    6. '.setdefault' → logprob: -13.877484321594238
    7. '.push' → logprob: -14.002484321594238
    8. '.add' → logprob: -14.627484321594238
    9. '.ap' → logprob: -14.627484321594238
    10. 'append' → logprob: -15.877484321594238

Token 65: '([[' (ID: 60239)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00026634239475242794
    2. '(' → logprob: -8.250266075134277
    3. '(('' → logprob: -13.000266075134277
    4. '((-' → logprob: -13.125266075134277
    5. '(("' → logprob: -15.250266075134277
    6. '([' → logprob: -16.125267028808594
    7. '```' → logprob: -16.250267028808594
    8. '({'' → logprob: -16.500267028808594
    9. ' ((' → logprob: -16.875267028808594
    10. '(
' → logprob: -17.000267028808594

Token 66: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.27971628308296204
    2. '-score' → logprob: -2.2797162532806396
    3. 'score' → logprob: -2.7797162532806396
    4. '-name' → logprob: -2.7797162532806396
    5. ' name' → logprob: -5.279716491699219
    6. '-' → logprob: -5.279716491699219
    7. ' -' → logprob: -5.404716491699219
    8. ' score' → logprob: -6.779716491699219
    9. '-s' → logprob: -7.654716491699219
    10. '   ' → logprob: -7.654716491699219

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00342960050329566
    2. '],' → logprob: -6.128429412841797
    3. ' ,' → logprob: -6.753429412841797
    4. '],[' → logprob: -10.378429412841797
    5. ']' → logprob: -11.628429412841797
    6. '),' → logprob: -11.878429412841797
    7. ' ],' → logprob: -11.878429412841797
    8. ' ' → logprob: -12.753429412841797
    9. ',s' → logprob: -12.878429412841797
    10. ',int' → logprob: -13.003429412841797

Token 68: ' -' (ID: 533)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5682880282402039
    2. 'score' → logprob: -1.5682880878448486
    3. '-score' → logprob: -1.8182880878448486
    4. ' -' → logprob: -2.8182880878448486
    5. '-' → logprob: -6.0682878494262695
    6. ' ' → logprob: -8.19328784942627
    7. '-s' → logprob: -8.94328784942627
    8. '(score' → logprob: -9.19328784942627
    9. '	score' → logprob: -9.94328784942627
    10. '   ' → logprob: -9.94328784942627

Token 69: 'score' (ID: 21200)
  Prédit: 'score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0003819332632701844
    2. ' score' → logprob: -7.875381946563721
    3. '	score' → logprob: -14.500381469726562
    4. 'scores' → logprob: -14.625381469726562
    5. '(score' → logprob: -15.000381469726562
    6. ' ' → logprob: -16.000381469726562
    7. '_score' → logprob: -16.250381469726562
    8. '1' → logprob: -17.000381469726562
    9. '-score' → logprob: -17.125381469726562
    10. 'sc' → logprob: -17.125381469726562

Token 70: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6504878401756287
    2. ']])' → logprob: -0.7754878401756287
    3. ']' → logprob: -4.525487899780273
    4. ']]' → logprob: -5.775487899780273
    5. '],' → logprob: -6.150487899780273
    6. ')])' → logprob: -6.900487899780273
    7. ')' → logprob: -8.900487899780273
    8. ' ])' → logprob: -9.025487899780273
    9. ']])
' → logprob: -9.275487899780273
    10. ')]' → logprob: -9.900487899780273

Token 71: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09419925510883331
    2. ' idx' → logprob: -2.4691991806030273
    3. 'name' → logprob: -6.719199180603027
    4. 'score' → logprob: -6.844199180603027
    5. 'line' → logprob: -7.469199180603027
    6. '0' → logprob: -7.844199180603027
    7. ']' → logprob: -7.844199180603027
    8. 'None' → logprob: -8.094199180603027
    9. '])' → logprob: -8.969199180603027
    10. ' score' → logprob: -8.969199180603027

Token 72: ' +' (ID: 659)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014400302432477474
    2. ')' → logprob: -4.389400482177734
    3. ')])' → logprob: -6.764400482177734
    4. ')]' → logprob: -7.389400482177734
    5. ']' → logprob: -9.764400482177734
    6. '])
' → logprob: -11.139400482177734
    7. ' ])' → logprob: -11.139400482177734
    8. '])]' → logprob: -11.639400482177734
    9. ']])' → logprob: -11.889400482177734
    10. '))' → logprob: -12.264400482177734

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000649529043585062
    2. ' ' → logprob: -7.375649452209473
    3. '   ' → logprob: -11.625649452209473
    4. ']' → logprob: -12.625649452209473
    5. '])' → logprob: -12.750649452209473
    6. ',' → logprob: -13.000649452209473
    7. ')' → logprob: -13.125649452209473
    8. '```' → logprob: -14.438149452209473
    9. '0' → logprob: -15.000649452209473
    10. '2' → logprob: -15.125649452209473

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023119196703191847
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -15.93773078918457
    4. ')' → logprob: -16.37523078918457
    5. '-' → logprob: -16.81273078918457
    6. ',' → logprob: -17.00023078918457
    7. '=' → logprob: -17.06273078918457
    8. '2' → logprob: -17.06273078918457
    9. '```' → logprob: -17.12523078918457
    10. '   ' → logprob: -17.25023078918457

Token 75: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.011438945308327675
    2. ')' → logprob: -4.511438846588135
    3. ')])' → logprob: -8.386439323425293
    4. ']' → logprob: -9.261439323425293
    5. ')]' → logprob: -10.261439323425293
    6. ' ])' → logprob: -11.636439323425293
    7. '])
' → logprob: -12.011439323425293
    8. '))' → logprob: -12.136439323425293
    9. ']])' → logprob: -12.261439323425293
    10. '})' → logprob: -13.886439323425293

Token 76: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1982187032699585
    2. 'results' → logprob: -1.8232187032699585
    3. 'sorted' → logprob: -4.823218822479248
    4. 'for' → logprob: -6.323218822479248
    5. '<|end|>' → logprob: -6.323218822479248
    6. '

' → logprob: -6.823218822479248
    7. '
' → logprob: -6.948218822479248
    8. '.sort' → logprob: -7.073218822479248
    9. '  
' → logprob: -7.448218822479248
    10. '    
' → logprob: -7.448218822479248

Token 77: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017736155539751053
    2. 'results' → logprob: -5.267735958099365
    3. ')' → logprob: -5.642735958099365
    4. 'for' → logprob: -6.517735958099365
    5. '  
' → logprob: -7.017735958099365
    6. '```' → logprob: -7.017735958099365
    7. ']' → logprob: -7.267735958099365
    8. '
' → logprob: -7.267735958099365
    9. '

' → logprob: -7.392735958099365
    10. ')
' → logprob: -7.392735958099365

Token 78: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' stock' (ID: 6546)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.897758424282074
    2. 'tr' → logprob: -1.7727584838867188
    3. 'append' → logprob: -2.8977584838867188
    4. ' veux' → logprob: -2.8977584838867188
    5. '.append' → logprob: -3.0227584838867188
    6. ' souhaite' → logprob: -3.2727584838867188
    7. 's' → logprob: -3.3977584838867188
    8. 'continue' → logprob: -3.6477584838867188
    9. ' trie' → logprob: -3.8977584838867188
    10. ' ajoute' → logprob: -4.147758483886719

Token 80: 'e' (ID: 68)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' tout' (ID: 5501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013000923208892345
    2. '
' → logprob: -5.388000965118408
    3. 'results' → logprob: -5.638000965118408
    4. '\n' → logprob: -6.263000965118408
    5. '' → logprob: -7.263000965118408
    6. '

' → logprob: -7.638000965118408
    7. '  
' → logprob: -7.638000965118408
    8. '    
' → logprob: -8.01300048828125
    9. 'for' → logprob: -8.76300048828125
    10. '[
' → logprob: -9.26300048828125

Token 83: ' bon' (ID: 4846)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '...

' (ID: 2161)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02424338087439537
    2. 'results' → logprob: -4.149243354797363
    3. '
' → logprob: -5.899243354797363
    4. '\n' → logprob: -6.774243354797363
    5. '

' → logprob: -7.024243354797363
    6. 'for' → logprob: -7.274243354797363
    7. '  
' → logprob: -7.274243354797363
    8. '    
' → logprob: -7.899243354797363
    9. '' → logprob: -8.024243354797363
    10. '```' → logprob: -8.149243354797363

Token 85: '#' (ID: 2)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.012343180365860462
    2. '
' → logprob: -4.512343406677246
    3. ' results' → logprob: -8.137343406677246
    4. '  
' → logprob: -8.637343406677246
    5. 'sorted' → logprob: -8.762343406677246
    6. '```' → logprob: -9.137343406677246
    7. '
' → logprob: -9.262343406677246
    8. '(results' → logprob: -9.512343406677246
    9. '#' → logprob: -9.637343406677246
    10. 'for' → logprob: -10.012343406677246

Token 86: ' Je' (ID: 4678)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.029755467548966408
    2. ' results' → logprob: -3.7797553539276123
    3. '
' → logprob: -5.279755592346191
    4. '#' → logprob: -7.404755592346191
    5. 'sorted' → logprob: -7.779755592346191
    6. '```' → logprob: -8.904755592346191
    7. 'result' → logprob: -9.779755592346191
    8. ' sorted' → logprob: -10.529755592346191
    9. '

' → logprob: -10.904755592346191
    10. '(results' → logprob: -11.404755592346191

Token 87: ' crois' (ID: 65485)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5424794554710388
    2. 'veux' → logprob: -2.2924795150756836
    3. ' #' → logprob: -3.4174795150756836
    4. 've' → logprob: -3.5424795150756836
    5. ' veux' → logprob: -3.5424795150756836
    6. ' vais' → logprob: -3.9174795150756836
    7. ' m' → logprob: -3.9174795150756836
    8. 'v' → logprob: -3.9174795150756836
    9. 'vais' → logprob: -4.042479515075684
    10. 's' → logprob: -4.042479515075684

Token 88: ' que' (ID: 661)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.3789691925048828
    2. ' que' → logprob: -1.8789691925048828
    3. 'sorted' → logprob: -2.878969192504883
    4. ' results' → logprob: -3.003969192504883
    5. '#' → logprob: -4.128969192504883
    6. ' sorted' → logprob: -5.003969192504883
    7. '```' → logprob: -5.003969192504883
    8. 'que' → logprob: -5.253969192504883
    9. ' qu' → logprob: -5.503969192504883
    10. ' ' → logprob: -6.253969192504883

Token 89: ' ça' (ID: 13590)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6924824118614197
    2. ' on' → logprob: -2.1924824714660645
    3. ' results' → logprob: -2.1924824714660645
    4. ' la' → logprob: -2.5674824714660645
    5. 'sorted' → logprob: -2.8174824714660645
    6. 'le' → logprob: -3.5674824714660645
    7. ' sorted' → logprob: -3.6924824714660645
    8. ' c' → logprob: -4.4424824714660645
    9. ' le' → logprob: -4.5674824714660645
    10. 'c' → logprob: -4.5674824714660645

Token 90: ' trie' (ID: 139428)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8214535117149353
    2. '#' → logprob: -1.69645357131958
    3. ' va' → logprob: -2.69645357131958
    4. '```' → logprob: -3.07145357131958
    5. ' fonctionne' → logprob: -3.44645357131958
    6. 'fonction' → logprob: -3.44645357131958
    7. 'continue' → logprob: -3.57145357131958
    8. ' continue' → logprob: -3.69645357131958
    9. 'va' → logprob: -4.44645357131958
    10. ' s' → logprob: -4.57145357131958

Token 91: ' comme' (ID: 7971)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.03045538440346718
    2. ' results' → logprob: -4.155455589294434
    3. '
' → logprob: -4.280455589294434
    4. 's' → logprob: -9.155455589294434
    5. '(results' → logprob: -9.155455589294434
    6. '
' → logprob: -10.030455589294434
    7. '```' → logprob: -10.155455589294434
    8. '.results' → logprob: -10.405455589294434
    9. ' 
' → logprob: -10.405455589294434
    10. 'sorted' → logprob: -11.155455589294434

Token 92: ' on' (ID: 402)
  Prédit: 'tu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tu' → logprob: -0.7771837115287781
    2. 'on' → logprob: -1.7771837711334229
    3. ' on' → logprob: -2.402183771133423
    4. 'ça' → logprob: -2.527183771133423
    5. 'il' → logprob: -3.152183771133423
    6. 'python' → logprob: -3.527183771133423
    7. ' attendu' → logprob: -3.527183771133423
    8. ' prévu' → logprob: -4.152183532714844
    9. 'Python' → logprob: -4.152183532714844
    10. ' Python' → logprob: -4.777183532714844

Token 93: ' veut' (ID: 41653)
  Prédit: ' veut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veut' → logprob: -1.262562870979309
    2. 'a' → logprob: -1.637562870979309
    3. 've' → logprob: -1.762562870979309
    4. 'l' → logprob: -2.7625627517700195
    5. 'att' → logprob: -3.0125627517700195
    6. 'veux' → logprob: -3.2625627517700195
    7. 'fait' → logprob: -3.8875627517700195
    8. 's' → logprob: -4.2625627517700195
    9. 'vou' → logprob: -4.2625627517700195
    10. 'voud' → logprob: -4.3875627517700195

Token 94: '.
' (ID: 558)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.1311846524477005
    2. '
' → logprob: -2.1311845779418945
    3. ' results' → logprob: -5.6311845779418945
    4. '```' → logprob: -8.506184577941895
    5. 'sorted' → logprob: -8.506184577941895
    6. '
' → logprob: -9.881184577941895
    7. '

' → logprob: -10.256184577941895
    8. '  
' → logprob: -10.506184577941895
    9. '(results' → logprob: -10.631184577941895
    10. ' 
' → logprob: -10.631184577941895

Token 95: 'sorted' (ID: 64288)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.07113410532474518
    2. '
' → logprob: -2.696134090423584
    3. 'sorted' → logprob: -7.321134090423584
    4. ' results' → logprob: -7.821134090423584
    5. '```' → logprob: -9.571134567260742
    6. '
' → logprob: -10.071134567260742
    7. '``' → logprob: -12.446134567260742
    8. '

' → logprob: -12.821134567260742
    9. 'result' → logprob: -13.071134567260742
    10. '    
' → logprob: -13.196134567260742

Token 96: '_results' (ID: 31049)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.8509315848350525
    2. '(results' → logprob: -0.8509315848350525
    3. '_results' → logprob: -1.9759316444396973
    4. '(' → logprob: -4.975931644439697
    5. ' results' → logprob: -8.850931167602539
    6. '_' → logprob: -8.975931167602539
    7. '	results' → logprob: -10.100931167602539
    8. ' (' → logprob: -10.475931167602539
    9. 'Results' → logprob: -10.850931167602539
    10. '(
' → logprob: -11.100931167602539

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014361321926117
    2. ' =' → logprob: -1.701436161994934
    3. '(' → logprob: -11.201436042785645
    4. '_' → logprob: -13.201436042785645
    5. '(results' → logprob: -13.701436042785645
    6. '(sorted' → logprob: -13.951436042785645
    7. 's' → logprob: -13.951436042785645
    8. 'sorted' → logprob: -14.076436042785645
    9. 'results' → logprob: -14.201436042785645
    10. ')' → logprob: -14.576436042785645

Token 98: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006721536163240671
    2. ' sorted' → logprob: -5.006721496582031
    3. '   ' → logprob: -12.256721496582031
    4. '(sorted' → logprob: -14.131721496582031
    5. ' ' → logprob: -15.131721496582031
    6. '  ' → logprob: -15.756721496582031
    7. '.sorted' → logprob: -16.38172149658203
    8. 'sort' → logprob: -17.00672149658203
    9. '```' → logprob: -17.13172149658203
    10. 'Sorted' → logprob: -18.38172149658203

Token 99: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.0003123439964838326
    2. '(' → logprob: -8.375312805175781
    3. 'results' → logprob: -9.500312805175781
    4. ' (' → logprob: -12.875312805175781
    5. '(
' → logprob: -13.250312805175781
    6. '((' → logprob: -13.500312805175781
    7. ' results' → logprob: -14.875312805175781
    8. '(result' → logprob: -15.500312805175781
    9. '	results' → logprob: -15.875312805175781
    10. '([' → logprob: -16.00031280517578

Token 100: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04329991713166237
    2. ',key' → logprob: -3.418299913406372
    3. ')' → logprob: -4.668300151824951
    4. 'key' → logprob: -8.918299674987793
    5. ' ,' → logprob: -9.793299674987793
    6. ' key' → logprob: -11.668299674987793
    7. '(key' → logprob: -11.668299674987793
    8. '(),' → logprob: -12.543299674987793
    9. '[key' → logprob: -12.918299674987793
    10. '   ' → logprob: -13.293299674987793

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004423943813890219
    2. ' for' → logprob: -6.629424095153809
    3. 'print' → logprob: -7.379424095153809
    4. '```' → logprob: -7.379424095153809
    5. 'sorted' → logprob: -7.879424095153809
    6. '#' → logprob: -8.004424095153809
    7. '<|end|>' → logprob: -8.254424095153809
    8. ')' → logprob: -8.379424095153809
    9. '
' → logprob: -8.504424095153809
    10. '[' → logprob: -8.754424095153809

Token 102: ' result' (ID: 1534)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.4126571416854858
    2. 'result' → logprob: -1.9126571416854858
    3. 'entry' → logprob: -2.0376572608947754
    4. ' item' → logprob: -2.0376572608947754
    5. ' entry' → logprob: -2.4126572608947754
    6. 'res' → logprob: -2.5376572608947754
    7. ' res' → logprob: -2.5376572608947754
    8. ' result' → logprob: -3.4126572608947754
    9. 'r' → logprob: -4.787657260894775
    10. ' i' → logprob: -5.037657260894775

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04887927696108818
    2. 'in' → logprob: -3.048879384994507
    3. ' ' → logprob: -8.923879623413086
    4. ',' → logprob: -9.673879623413086
    5. '   ' → logprob: -10.548879623413086
    6. '[' → logprob: -10.673879623413086
    7. '_in' → logprob: -11.048879623413086
    8. '```' → logprob: -12.048879623413086
    9. '  ' → logprob: -12.298879623413086
    10. 'result' → logprob: -12.548879623413086

Token 104: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.17979253828525543
    2. 'sorted' → logprob: -1.8047925233840942
    3. '(sorted' → logprob: -10.679792404174805
    4. ' results' → logprob: -11.554792404174805
    5. '   ' → logprob: -12.179792404174805
    6. 'results' → logprob: -12.554792404174805
    7. ' ' → logprob: -12.804792404174805
    8. ' range' → logprob: -13.804792404174805
    9. '.sorted' → logprob: -14.179792404174805
    10. 'range' → logprob: -14.679792404174805

Token 105: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -4.4849443838757e-06
    2. '_result' → logprob: -12.625004768371582
    3. '_' → logprob: -15.000004768371582
    4. ' _' → logprob: -15.125004768371582
    5. '_res' → logprob: -15.625004768371582
    6. '_sorted' → logprob: -15.625004768371582
    7. 'results' → logprob: -16.375003814697266
    8. '__' → logprob: -16.500003814697266
    9. 's' → logprob: -17.750003814697266
    10. '(_' → logprob: -18.125003814697266

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02070140838623047
    2. ':
' → logprob: -3.8957014083862305
    3. '[' → logprob: -8.89570140838623
    4. '   ' → logprob: -10.89570140838623
    5. ':

' → logprob: -13.64570140838623
    6. ' :' → logprob: -14.64570140838623
    7. ':
' → logprob: -14.64570140838623
    8. 'print' → logprob: -14.64570140838623
    9. ',' → logprob: -14.77070140838623
    10. '[
' → logprob: -15.39570140838623

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01979009062051773
    2. ' print' → logprob: -4.019790172576904
    3. 'print' → logprob: -6.769790172576904
    4. '```' → logprob: -7.894790172576904
    5. '    
' → logprob: -9.894789695739746
    6. '[' → logprob: -10.769789695739746
    7. '   ' → logprob: -11.144789695739746
    8. '	print' → logprob: -11.269789695739746
    9. '<|end|>' → logprob: -12.769789695739746
    10. ',' → logprob: -12.894789695739746

Token 108: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2098938673734665
    2. ' print' → logprob: -1.709893822669983
    3. '   ' → logprob: -4.834893703460693
    4. '```' → logprob: -7.709893703460693
    5. '    
' → logprob: -10.959894180297852
    6. '	print' → logprob: -11.334894180297852
    7. '
' → logprob: -11.334894180297852
    8. '``' → logprob: -12.834894180297852
    9. ' 
' → logprob: -14.459894180297852
    10. '#print' → logprob: -14.584894180297852

Token 109: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0028061794582754374
    2. '(' → logprob: -6.252806186676025
    3. 'result' → logprob: -7.252806186676025
    4. '(f' → logprob: -9.377805709838867
    5. '(*' → logprob: -9.502805709838867
    6. '('' → logprob: -12.502805709838867
    7. '((' → logprob: -13.252805709838867
    8. '("' → logprob: -13.627805709838867
    9. ' (' → logprob: -14.002805709838867
    10. '(
' → logprob: -14.127805709838867

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016913694562390447
    2. '[-' → logprob: -6.5016913414001465
    3. '][' → logprob: -9.251691818237305
    4. ' [' → logprob: -10.001691818237305
    5. ']' → logprob: -10.876691818237305
    6. ')[' → logprob: -11.251691818237305
    7. ')' → logprob: -12.001691818237305
    8. '[[' → logprob: -13.501691818237305
    9. '])' → logprob: -13.876691818237305
    10. '   ' → logprob: -14.126691818237305

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023524489370174706
    2. '0' → logprob: -8.375235557556152
    3. '-' → logprob: -12.500235557556152
    4. ' ' → logprob: -15.375235557556152
    5. '```' → logprob: -15.750235557556152
    6. '[' → logprob: -15.812735557556152
    7. '::-' → logprob: -16.187734603881836
    8. '   ' → logprob: -16.937734603881836
    9. ']' → logprob: -17.250234603881836
    10. '`' → logprob: -17.312734603881836

Token 112: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006349971517920494
    2. '])' → logprob: -7.375635147094727
    3. '))' → logprob: -12.625635147094727
    4. ')])' → logprob: -13.500635147094727
    5. '})' → logprob: -13.625635147094727
    6. ' )' → logprob: -13.875635147094727
    7. ')]' → logprob: -14.500635147094727
    8. ')`' → logprob: -14.750635147094727
    9. ')
' → logprob: -15.625635147094727
    10. ')")' → logprob: -16.125635147094727

Token 113: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39983588457107544
    2. '<|end|>' → logprob: -1.1498358249664307
    3. '[' → logprob: -5.39983606338501
    4. '```' → logprob: -6.02483606338501
    5. '#' → logprob: -6.27483606338501
    6. '<|end|>' → logprob: -6.39983606338501
    7. ']' → logprob: -7.14983606338501
    8. ' ' → logprob: -7.39983606338501
    9. '(' → logprob: -8.774835586547852
    10. ',' → logprob: -9.274835586547852

Token 114: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23700420558452606
    2. '<|end|>' → logprob: -1.6120041608810425
    3. '[' → logprob: -5.362004280090332
    4. '#' → logprob: -5.987004280090332
    5. '```' → logprob: -6.737004280090332
    6. '<|end|>' → logprob: -7.112004280090332
    7. ' ' → logprob: -7.737004280090332
    8. '(' → logprob: -7.737004280090332
    9. 'n' → logprob: -8.237004280090332
    10. ']' → logprob: -8.487004280090332

Token 115: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: 'icher' (ID: 13617)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.2562068998813629
    2. 'icher' → logprob: -1.6312068700790405
    3. 'ichage' → logprob: -3.50620698928833
    4. 'ich' → logprob: -9.006206512451172
    5. 'ic' → logprob: -9.381206512451172
    6. 'ichert' → logprob: -10.631206512451172
    7. 'iché' → logprob: -10.881206512451172
    8. '#' → logprob: -11.131206512451172
    9. 'ichel' → logprob: -11.256206512451172
    10. 'ichier' → logprob: -11.256206512451172

Token 117: ' juste' (ID: 31553)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.03068246878683567
    2. 'result' → logprob: -3.9056825637817383
    3. ' only' → logprob: -6.655682563781738
    4. '<|end|>' → logprob: -6.655682563781738
    5. ' uniquement' → logprob: -6.655682563781738
    6. ' la' → logprob: -6.780682563781738
    7. ' result' → logprob: -6.780682563781738
    8. '(' → logprob: -6.905682563781738
    9. 'the' → logprob: -7.530682563781738
    10. ' le' → logprob: -7.655682563781738

Token 118: ' l' (ID: 305)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.7371342778205872
    2. ' la' → logprob: -1.9871342182159424
    3. 'result' → logprob: -2.1121342182159424
    4. ' le' → logprob: -2.4871342182159424
    5. ' l' → logprob: -2.8621342182159424
    6. 'l' → logprob: -3.4871342182159424
    7. '<|end|>' → logprob: -3.4871342182159424
    8. ' result' → logprob: -3.6121342182159424
    9. 'le' → logprob: -4.4871344566345215
    10. '()' → logprob: -5.2371344566345215

Token 119: '’' (ID: 438)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9345173835754395
    2. 'e' → logprob: -1.1845173835754395
    3. ''ind' → logprob: -1.3095173835754395
    4. ''ident' → logprob: -3.8095173835754395
    5. 'a' → logprob: -5.4345173835754395
    6. ''id' → logprob: -7.0595173835754395
    7. 'es' → logprob: -7.0595173835754395
    8. ''ordre' → logprob: -7.4345173835754395
    9. 'index' → logprob: -7.8095173835754395
    10. ''instant' → logprob: -8.184516906738281

Token 120: 'index' (ID: 2257)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.5319098234176636
    2. 'index' → logprob: -1.2819098234176636
    3. ''' → logprob: -2.656909942626953
    4. ''ind' → logprob: -3.531909942626953
    5. 'e' → logprob: -4.406909942626953
    6. 'idx' → logprob: -4.531909942626953
    7. ''ident' → logprob: -5.281909942626953
    8. 'i' → logprob: -6.781909942626953
    9. 'ind' → logprob: -7.406909942626953
    10. 'num' → logprob: -7.531909942626953

Token 121: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' c' (ID: 274)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9187542200088501
    2. 'newline' → logprob: -0.9187542200088501
    3. 'end' → logprob: -2.6687541007995605
    4. ')' → logprob: -3.6687541007995605
    5. '   ' → logprob: -3.6687541007995605
    6. '\n' → logprob: -3.7937541007995605
    7. '<|end|>' → logprob: -4.4187541007995605
    8. ' ' → logprob: -5.0437541007995605
    9. '...' → logprob: -5.4187541007995605
    10. '``' → logprob: -5.4187541007995605

Token 123: '’est' (ID: 6838)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.4065556824207306
    2. '#' → logprob: -1.9065556526184082
    3. ''est' → logprob: -2.656555652618408
    4. '```' → logprob: -3.906555652618408
    5. 'est' → logprob: -4.031555652618408
    6. 'e' → logprob: -4.031555652618408
    7. 'ar' → logprob: -4.656555652618408
    8. 'ela' → logprob: -4.656555652618408
    9. 'ode' → logprob: -4.906555652618408
    10. 'omme' → logprob: -5.031555652618408

Token 124: ' demandé' (ID: 82780)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tout' → logprob: -0.05175952613353729
    2. 'ce' → logprob: -3.4267594814300537
    3. 'cela' → logprob: -5.176759719848633
    4. 'exact' → logprob: -6.051759719848633
    5. 'la' → logprob: -6.426759719848633
    6. ' ce' → logprob: -6.551759719848633
    7. 'bien' → logprob: -6.676759719848633
    8. 'fac' → logprob: -6.926759719848633
    9. ' tout' → logprob: -6.926759719848633
    10. 'ça' → logprob: -7.676759719848633

Token 125: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 28.46%
Précision adaptée (1ère position): 30.08%
Précision (top 10): 60.16%
================================================================================
