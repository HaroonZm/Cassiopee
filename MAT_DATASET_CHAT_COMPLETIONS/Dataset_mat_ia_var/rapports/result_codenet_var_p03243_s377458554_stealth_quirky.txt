================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = eval(input())
calc = lambda x: 123 - 12 + (111*((x-1)//111+1))
exec("print(calc(N))")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' eval' (ID: 29383)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000428761966759339
    2. '('' → logprob: -8.375429153442383
    3. '("("' → logprob: -8.750429153442383
    4. '(eval' → logprob: -11.250429153442383
    5. ''' → logprob: -11.625429153442383
    6. '(
' → logprob: -11.875429153442383
    7. '`' → logprob: -13.875429153442383
    8. '(

' → logprob: -13.875429153442383
    9. '(open' → logprob: -13.875429153442383
    10. '\(' → logprob: -14.000429153442383

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01592995785176754
    2. '("("' → logprob: -4.64093017578125
    3. ')' → logprob: -5.76593017578125
    4. '('' → logprob: -6.76593017578125
    5. '()' → logprob: -7.01593017578125
    6. '(""))' → logprob: -8.14093017578125
    7. '("")' → logprob: -8.26593017578125
    8. '(
' → logprob: -9.39093017578125
    9. '())' → logprob: -9.89093017578125
    10. '("' → logprob: -10.01593017578125

Token 5: 'calc' (ID: 49633)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06689397990703583
    2. '*' → logprob: -4.316894054412842
    3. '\n' → logprob: -4.441894054412842
    4. 'if' → logprob: -4.566894054412842
    5. ' for' → logprob: -4.816894054412842
    6. '```' → logprob: -5.441894054412842
    7. '#' → logprob: -5.816894054412842
    8. '+' → logprob: -6.316894054412842
    9. 'print' → logprob: -6.441894054412842
    10. '[' → logprob: -6.566894054412842

Token 6: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0214943066239357
    2. 'ulator' → logprob: -4.271494388580322
    3. 'ulate' → logprob: -6.396494388580322
    4. 'ulation' → logprob: -6.771494388580322
    5. 'u' → logprob: -6.771494388580322
    6. '_' → logprob: -7.146494388580322
    7. '()' → logprob: -7.521494388580322
    8. 's' → logprob: -7.771494388580322
    9. '('' → logprob: -7.896494388580322
    10. 'ul' → logprob: -8.396493911743164

Token 7: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5645365715026855
    2. 'lambda' → logprob: -1.5645365715026855
    3. '"' → logprob: -1.6895365715026855
    4. ' lambda' → logprob: -1.9395365715026855
    5. '0' → logprob: -2.6895365715026855
    6. ' []' → logprob: -3.1895365715026855
    7. 'sum' → logprob: -3.8145365715026855
    8. ''' → logprob: -3.9395365715026855
    9. 'int' → logprob: -4.1895365715026855
    10. '(lambda' → logprob: -4.3145365715026855

Token 8: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.00886061042547226
    2. 'x' → logprob: -4.7588605880737305
    3. ' lambda' → logprob: -8.88386058807373
    4. ' n' → logprob: -10.00886058807373
    5. ' a' → logprob: -10.50886058807373
    6. ' ' → logprob: -11.63386058807373
    7. 'lambda' → logprob: -11.63386058807373
    8. 'a' → logprob: -12.38386058807373
    9. ' N' → logprob: -12.50886058807373
    10. 'N' → logprob: -12.63386058807373

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0182616226375103
    2. ' :' → logprob: -4.518261432647705
    3. ' x' → logprob: -5.393261432647705
    4. '+' → logprob: -6.768261432647705
    5. '*' → logprob: -7.393261432647705
    6. ' ' → logprob: -8.393261909484863
    7. 'x' → logprob: -8.518261909484863
    8. '+:' → logprob: -8.768261909484863
    9. '**' → logprob: -9.893261909484863
    10. ':x' → logprob: -10.143261909484863

Token 10: ' ' (ID: 220)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16185951232910156
    2. 'x' → logprob: -1.9118595123291016
    3. ' ' → logprob: -7.161859512329102
    4. ' (' → logprob: -7.911859512329102
    5. '2' → logprob: -9.411859512329102
    6. '1' → logprob: -9.536859512329102
    7. '(x' → logprob: -9.661859512329102
    8. 'sum' → logprob: -10.161859512329102
    9. ' sum' → logprob: -10.161859512329102
    10. '(' → logprob: -10.286859512329102

Token 11: '123' (ID: 7633)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01246008649468422
    2. ' x' → logprob: -4.762460231781006
    3. 'sum' → logprob: -6.012460231781006
    4. '(x' → logprob: -7.762460231781006
    5. '2' → logprob: -8.387459754943848
    6. 'eval' → logprob: -8.887459754943848
    7. '3' → logprob: -9.137459754943848
    8. 'int' → logprob: -9.262459754943848
    9. '(' → logprob: -9.262459754943848
    10. '1' → logprob: -10.137459754943848

Token 12: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34926837682724
    2. '*' → logprob: -1.3492684364318848
    3. '(' → logprob: -3.5992684364318848
    4. ')' → logprob: -6.099268436431885
    5. ' ' → logprob: -6.849268436431885
    6. ' +' → logprob: -6.849268436431885
    7. '[' → logprob: -7.224268436431885
    8. ' *' → logprob: -7.224268436431885
    9. '4' → logprob: -7.724268436431885
    10. '0' → logprob: -8.224267959594727

Token 13: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10021615028381348
    2. ' x' → logprob: -2.3502161502838135
    3. ' ' → logprob: -11.600215911865234
    4. '	x' → logprob: -16.725215911865234
    5. '2' → logprob: -16.850215911865234
    6. '(x' → logprob: -16.975215911865234
    7. '1' → logprob: -16.975215911865234
    8. '4' → logprob: -17.100215911865234
    9. '*x' → logprob: -17.475215911865234
    10. ' ' → logprob: -17.600215911865234

Token 14: '12' (ID: 899)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.607391408877447e-05
    2. ' x' → logprob: -10.250036239624023
    3. '2' → logprob: -15.625036239624023
    4. '123' → logprob: -16.125036239624023
    5. ' ' → logprob: -16.250036239624023
    6. '1' → logprob: -16.750036239624023
    7. '(x' → logprob: -16.750036239624023
    8. '4' → logprob: -17.125036239624023
    9. '7' → logprob: -17.250036239624023
    10. '45' → logprob: -18.000036239624023

Token 15: ' +' (ID: 659)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.5332410931587219
    2. ' *' → logprob: -1.5332410335540771
    3. 'x' → logprob: -2.158241033554077
    4. '*' → logprob: -2.658241033554077
    5. ' x' → logprob: -5.408241271972656
    6. '3' → logprob: -6.158241271972656
    7. '5' → logprob: -6.408241271972656
    8. '7' → logprob: -7.533241271972656
    9. '4' → logprob: -7.658241271972656
    10. '+' → logprob: -7.908241271972656

Token 16: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5302199721336365
    2. ' x' → logprob: -0.9052199721336365
    3. '7' → logprob: -6.030220031738281
    4. ' ' → logprob: -6.905220031738281
    5. '3' → logprob: -7.280220031738281
    6. '34' → logprob: -7.280220031738281
    7. '4' → logprob: -7.780220031738281
    8. '5' → logprob: -8.155220031738281
    9. '8' → logprob: -8.405220031738281
    10. '6' → logprob: -8.530220031738281

Token 17: '111' (ID: 8780)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07894278317689896
    2. ' x' → logprob: -2.5789427757263184
    3. ')x' → logprob: -11.578943252563477
    4. '12' → logprob: -11.828943252563477
    5. '45' → logprob: -12.453943252563477
    6. '48' → logprob: -12.953943252563477
    7. ' ' → logprob: -13.078943252563477
    8. '24' → logprob: -13.203943252563477
    9. '1' → logprob: -13.203943252563477
    10. '7' → logprob: -13.328943252563477

Token 18: '*((' (ID: 123115)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6263670921325684
    2. '*' → logprob: -1.0013670921325684
    3. '*x' → logprob: -2.5013670921325684
    4. ')' → logprob: -5.626367092132568
    5. ' -' → logprob: -5.751367092132568
    6. 'x' → logprob: -6.126367092132568
    7. ' ' → logprob: -6.251367092132568
    8. '-' → logprob: -6.626367092132568
    9. ' x' → logprob: -7.126367092132568
    10. '7' → logprob: -7.751367092132568

Token 19: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010684163309633732
    2. ' x' → logprob: -5.135684013366699
    3. 'N' → logprob: -5.760684013366699
    4. '10' → logprob: -8.1356840133667
    5. '123' → logprob: -8.6356840133667
    6. '2' → logprob: -8.7606840133667
    7. '9' → logprob: -9.0106840133667
    8. '(x' → logprob: -9.1356840133667
    9. '3' → logprob: -9.3856840133667
    10. '(' → logprob: -9.3856840133667

Token 20: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.199906826019287
    2. ')' → logprob: -1.574906826019287
    3. '+' → logprob: -2.199906826019287
    4. ' -' → logprob: -2.824906826019287
    5. ' )' → logprob: -2.949906826019287
    6. '//' → logprob: -3.074906826019287
    7. '**' → logprob: -3.199906826019287
    8. '))' → logprob: -3.449906826019287
    9. ')**' → logprob: -3.449906826019287
    10. '*' → logprob: -3.574906826019287

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7607231140136719
    2. 'x' → logprob: -1.2607231140136719
    3. ' ' → logprob: -2.885723114013672
    4. 'N' → logprob: -3.010723114013672
    5. '2' → logprob: -3.385723114013672
    6. '3' → logprob: -3.510723114013672
    7. '10' → logprob: -4.260723114013672
    8. ' x' → logprob: -4.260723114013672
    9. '5' → logprob: -4.885723114013672
    10. '7' → logprob: -5.385723114013672

Token 22: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42773744463920593
    2. ')//' → logprob: -1.8027374744415283
    3. ')**' → logprob: -2.1777374744415283
    4. ')))' → logprob: -3.6777374744415283
    5. ' )' → logprob: -3.9277374744415283
    6. ')*' → logprob: -4.177737236022949
    7. ')>>' → logprob: -6.052737236022949
    8. '))' → logprob: -6.177737236022949
    9. '//' → logprob: -6.552737236022949
    10. ')%' → logprob: -6.677737236022949

Token 23: '111' (ID: 8780)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8491004109382629
    2. '7' → logprob: -2.349100351333618
    3. '12' → logprob: -2.349100351333618
    4. '9' → logprob: -2.599100351333618
    5. '3' → logprob: -2.724100351333618
    6. '2' → logprob: -2.724100351333618
    7. '5' → logprob: -3.349100351333618
    8. '11' → logprob: -3.974100351333618
    9. '50' → logprob: -4.099100589752197
    10. '4' → logprob: -4.224100589752197

Token 24: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6282798647880554
    2. ')' → logprob: -0.8782798647880554
    3. ')))' → logprob: -3.1282799243927
    4. '+' → logprob: -6.378279685974121
    5. ')+' → logprob: -7.003279685974121
    6. ''))' → logprob: -7.253279685974121
    7. ' ))' → logprob: -7.378279685974121
    8. ' ' → logprob: -7.628279685974121
    9. ' )' → logprob: -7.628279685974121
    10. '))+' → logprob: -8.003279685974121

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005798388738185167
    2. ' ' → logprob: -7.500579833984375
    3. 'x' → logprob: -11.625579833984375
    4. '(x' → logprob: -12.000579833984375
    5. ' x' → logprob: -12.375579833984375
    6. ' (' → logprob: -13.000579833984375
    7. '(' → logprob: -13.250579833984375
    8. '0' → logprob: -13.750579833984375
    9. '((' → logprob: -14.375579833984375
    10. ')' → logprob: -14.625579833984375

Token 26: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19970570504665375
    2. ')' → logprob: -1.824705719947815
    3. ')))' → logprob: -3.9497056007385254
    4. ' ))' → logprob: -8.449706077575684
    5. ' ' → logprob: -9.199706077575684
    6. ' )' → logprob: -9.324706077575684
    7. '))))' → logprob: -11.074706077575684
    8. ')x' → logprob: -11.574706077575684
    9. ')*' → logprob: -11.699706077575684
    10. '))
' → logprob: -11.949706077575684

Token 27: 'exec' (ID: 31592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009876853786408901
    2. '(x' → logprob: -4.759876728057861
    3. '*' → logprob: -8.00987720489502
    4. '(
' → logprob: -8.25987720489502
    5. ' ' → logprob: -8.88487720489502
    6. '+' → logprob: -9.25987720489502
    7. '((' → logprob: -9.38487720489502
    8. ')' → logprob: -9.50987720489502
    9. '[' → logprob: -10.13487720489502
    10. '(N' → logprob: -10.38487720489502

Token 28: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025417746510356665
    2. '("("' → logprob: -6.252541542053223
    3. '('' → logprob: -7.502541542053223
    4. '(calc' → logprob: -11.252541542053223
    5. '("' → logprob: -11.502541542053223
    6. '(code' → logprob: -12.002541542053223
    7. '((' → logprob: -12.252541542053223
    8. '("""' → logprob: -12.377541542053223
    9. '(open' → logprob: -12.377541542053223
    10. '(
' → logprob: -12.502541542053223

Token 29: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3033158481121063
    2. 'calc' → logprob: -1.4283158779144287
    3. 'print' → logprob: -5.05331563949585
    4. '"' → logprob: -5.55331563949585
    5. 'i' → logprob: -6.05331563949585
    6. 'n' → logprob: -6.30331563949585
    7. ' for' → logprob: -6.55331563949585
    8. '")' → logprob: -6.80331563949585
    9. '""' → logprob: -6.80331563949585
    10. 'c' → logprob: -7.30331563949585

Token 30: '(calc' (ID: 190074)
  Prédit: '(calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(calc' → logprob: -0.12468986213207245
    2. '(' → logprob: -2.624689817428589
    3. '(x' → logprob: -3.749689817428589
    4. '(N' → logprob: -4.999690055847168
    5. '("' → logprob: -5.624690055847168
    6. '((' → logprob: -5.999690055847168
    7. '(f' → logprob: -6.124690055847168
    8. '(c' → logprob: -6.124690055847168
    9. '('' → logprob: -6.749690055847168
    10. '(chr' → logprob: -7.499690055847168

Token 31: '(N' (ID: 10564)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.13692662119865417
    2. '(' → logprob: -2.2619266510009766
    3. '(N' → logprob: -4.261926651000977
    4. '(i' → logprob: -6.011926651000977
    5. '(calc' → logprob: -6.511926651000977
    6. '(n' → logprob: -6.636926651000977
    7. '(eval' → logprob: -6.761926651000977
    8. '((' → logprob: -7.011926651000977
    9. '(input' → logprob: -7.261926651000977
    10. '(+' → logprob: -8.136926651000977

Token 32: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0046644918620586395
    2. ')))' → logprob: -5.504664421081543
    3. ')' → logprob: -7.629664421081543
    4. '"))' → logprob: -10.504664421081543
    5. ')")' → logprob: -10.754664421081543
    6. ' ))' → logprob: -11.004664421081543
    7. '))
' → logprob: -11.504664421081543
    8. '),' → logprob: -11.879664421081543
    9. ' ' → logprob: -12.629664421081543
    10. '))))' → logprob: -13.004664421081543

Token 33: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.8322098851203918
    2. ')")' → logprob: -1.207209825515747
    3. ')' → logprob: -1.332209825515747
    4. '))' → logprob: -6.832210063934326
    5. ')"' → logprob: -7.332210063934326
    6. ' )' → logprob: -9.582209587097168
    7. '"))' → logprob: -9.707209587097168
    8. '"' → logprob: -10.082209587097168
    9. ')")
' → logprob: -10.582209587097168
    10. '')' → logprob: -11.832209587097168


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 29.03%
Précision adaptée (1ère position): 29.03%
Précision (top 10): 58.06%
================================================================================
