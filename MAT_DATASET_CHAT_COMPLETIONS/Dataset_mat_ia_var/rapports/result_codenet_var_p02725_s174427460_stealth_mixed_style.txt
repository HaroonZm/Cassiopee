================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K,N=[int(e)for e in input().split()]
A=list(map(int,input().split()))
def f(a,k):
 d=[]
 for i in range(len(a)-1):
  d+=[a[i+1]-a[i]
 ]
 class X:pass
 X.gap=k-a[-1]+a[0]
 d.append(X.gap)
 return d
from functools import reduce
d=f(A,K)
print((lambda k,m: k-m)(K,reduce(lambda x,y: max(x,y),d)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: ',N' (ID: 49539)
  → Token d'amorce (pas de prédiction)

Token 2: '=[' (ID: 13370)
  → Token d'amorce (pas de prédiction)

Token 3: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016613778425380588
    2. ']int' → logprob: -7.37666130065918
    3. 'map' → logprob: -7.50166130065918
    4. '10' → logprob: -9.12666130065918
    5. '0' → logprob: -9.12666130065918
    6. ']' → logprob: -9.50166130065918
    7. 'list' → logprob: -10.12666130065918
    8. ' int' → logprob: -10.25166130065918
    9. '5' → logprob: -10.75166130065918
    10. '[int' → logprob: -10.75166130065918

Token 4: '(e' (ID: 3454)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3802412152290344
    2. '(' → logprob: -1.5052411556243896
    3. '(i' → logprob: -2.3802411556243896
    4. '(input' → logprob: -7.255241394042969
    5. '(s' → logprob: -7.880241394042969
    6. ']' → logprob: -8.130241394042969
    7. '(a' → logprob: -8.880241394042969
    8. '()]' → logprob: -9.505241394042969
    9. '(token' → logprob: -10.005241394042969
    10. '(c' → logprob: -10.380241394042969

Token 5: ')' (ID: 8)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7020401358604431
    2. '(x' → logprob: -0.7020401358604431
    3. '(s' → logprob: -6.077040195465088
    4. '(input' → logprob: -6.077040195465088
    5. '(' → logprob: -6.327040195465088
    6. ')' → logprob: -6.952040195465088
    7. '(e' → logprob: -7.202040195465088
    8. '()' → logprob: -7.827040195465088
    9. '(a' → logprob: -8.95203971862793
    10. '(f' → logprob: -10.20203971862793

Token 6: 'for' (ID: 1938)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.26030901074409485
    2. '(i' → logprob: -1.8853089809417725
    3. ' for' → logprob: -3.6353089809417725
    4. 'for' → logprob: -3.7603089809417725
    5. '(input' → logprob: -4.385309219360352
    6. '(' → logprob: -5.260309219360352
    7. ']' → logprob: -5.635309219360352
    8. '(e' → logprob: -6.010309219360352
    9. 'x' → logprob: -6.635309219360352
    10. 'i' → logprob: -7.260309219360352

Token 7: ' e' (ID: 319)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10261506587266922
    2. 'input' → logprob: -2.3526151180267334
    3. ' e' → logprob: -7.352614879608154
    4. 'e' → logprob: -7.477614879608154
    5. ' in' → logprob: -8.352615356445312
    6. ' range' → logprob: -8.352615356445312
    7. ' user' → logprob: -8.727615356445312
    8. ' ' → logprob: -8.852615356445312
    9. ' K' → logprob: -9.102615356445312
    10. '_' → logprob: -9.602615356445312

Token 8: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18713043630123138
    2. ' in' → logprob: -2.0621304512023926
    3. 'input' → logprob: -3.3121304512023926
    4. '=input' → logprob: -5.437130451202393
    5. 'in' → logprob: -6.687130451202393
    6. '(input' → logprob: -6.937130451202393
    7. '<|end|>' → logprob: -8.312129974365234
    8. '_input' → logprob: -9.687129974365234
    9. ',input' → logprob: -9.812129974365234
    10. ' ' → logprob: -10.062129974365234

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889111340045929
    2. ' input' → logprob: -2.5788910388946533
    3. '(input' → logprob: -13.953890800476074
    4. '=input' → logprob: -15.578890800476074
    5. '<input' → logprob: -15.953890800476074
    6. '	input' → logprob: -16.45389175415039
    7. ',input' → logprob: -16.70389175415039
    8. '```' → logprob: -16.82889175415039
    9. ' ' → logprob: -17.57889175415039
    10. '[input' → logprob: -18.82889175415039

Token 10: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.09066146612167358
    2. '()' → logprob: -3.0906615257263184
    3. '().' → logprob: -3.2156615257263184
    4. '()].' → logprob: -7.465661525726318
    5. '()][' → logprob: -8.21566104888916
    6. '())' → logprob: -8.96566104888916
    7. '(' → logprob: -10.46566104888916
    8. '()],' → logprob: -10.71566104888916
    9. '()>' → logprob: -11.46566104888916
    10. ']' → logprob: -11.71566104888916

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.718606891809031e-05
    2. 'strip' → logprob: -10.000066757202148
    3. 'rstrip' → logprob: -10.875066757202148
    4. ' split' → logprob: -13.000066757202148
    5. 'spl' → logprob: -15.000066757202148
    6. '(split' → logprob: -15.750066757202148
    7. 'read' → logprob: -18.62506675720215
    8. 'replace' → logprob: -18.75006675720215
    9. '```' → logprob: -18.87506675720215
    10. 's' → logprob: -19.87506675720215

Token 12: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0008801387157291174
    2. '(' → logprob: -7.750880241394043
    3. '()' → logprob: -7.875880241394043
    4. '())' → logprob: -10.500880241394043
    5. ']' → logprob: -10.625880241394043
    6. '('' → logprob: -12.375880241394043
    7. '()],' → logprob: -12.500880241394043
    8. '()][' → logprob: -13.125880241394043
    9. ']()' → logprob: -13.375880241394043
    10. '`]' → logprob: -13.375880241394043

Token 13: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5552979707717896
    2. '
' → logprob: -2.0552978515625
    3. 'for' → logprob: -2.0552978515625
    4. 'd' → logprob: -3.0552978515625
    5. '#' → logprob: -3.5552978515625
    6. 'x' → logprob: -4.3052978515625
    7. '\n' → logprob: -4.4302978515625
    8. '\' → logprob: -4.6802978515625
    9. 'A' → logprob: -4.9302978515625
    10. 'data' → logprob: -5.1802978515625

Token 14: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16046732664108276
    2. '=' → logprob: -2.1604673862457275
    3. '.' → logprob: -4.160467147827148
    4. ' =' → logprob: -4.910467147827148
    5. '[A' → logprob: -6.785467147827148
    6. '[i' → logprob: -6.785467147827148
    7. '[int' → logprob: -7.035467147827148
    8. 'A' → logprob: -7.035467147827148
    9. '=[' → logprob: -7.035467147827148
    10. '[:]' → logprob: -7.160467147827148

Token 15: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017113516805693507
    2. '(range' → logprob: -7.001711368560791
    3. '[int' → logprob: -8.001710891723633
    4. '[' → logprob: -8.751710891723633
    5. '(int' → logprob: -9.376710891723633
    6. '[(' → logprob: -10.001710891723633
    7. '([' → logprob: -10.501710891723633
    8. '(A' → logprob: -10.876710891723633
    9. '(map' → logprob: -11.001710891723633
    10. '()' → logprob: -11.001710891723633

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004133253358304501
    2. '(' → logprob: -5.504133224487305
    3. 'int' → logprob: -10.754133224487305
    4. '<int' → logprob: -11.254133224487305
    5. '(lambda' → logprob: -11.879133224487305
    6. '(
' → logprob: -11.879133224487305
    7. '[int' → logprob: -13.504133224487305
    8. ')' → logprob: -13.754133224487305
    9. '=int' → logprob: -14.129133224487305
    10. ',int' → logprob: -14.129133224487305

Token 17: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02596188522875309
    2. ',input' → logprob: -4.150961875915527
    3. '(' → logprob: -4.650961875915527
    4. ',' → logprob: -8.525961875915527
    5. ')' → logprob: -9.900961875915527
    6. 'input' → logprob: -10.650961875915527
    7. '),' → logprob: -11.900961875915527
    8. ' (' → logprob: -11.900961875915527
    9. '=input' → logprob: -11.900961875915527
    10. '(),' → logprob: -12.025961875915527

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0035518433433026075
    2. '()' → logprob: -6.128551959991455
    3. '()))' → logprob: -6.878551959991455
    4. '())' → logprob: -8.128551483154297
    5. '()));' → logprob: -10.878551483154297
    6. '())))' → logprob: -11.503551483154297
    7. '())).' → logprob: -13.003551483154297
    8. '()),' → logprob: -13.253551483154297
    9. '(' → logprob: -13.378551483154297
    10. '()>' → logprob: -13.503551483154297

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5332478142227046e-05
    2. 'strip' → logprob: -11.250015258789062
    3. ' split' → logprob: -13.125015258789062
    4. 'rstrip' → logprob: -15.500015258789062
    5. '(split' → logprob: -16.875015258789062
    6. 'spl' → logprob: -17.375015258789062
    7. '.split' → logprob: -19.375015258789062
    8. 'sp' → logprob: -19.500015258789062
    9. 'plit' → logprob: -19.875015258789062
    10. ')' → logprob: -20.000015258789062

Token 20: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07314945757389069
    2. '())' → logprob: -2.6981494426727295
    3. '()' → logprob: -6.448149681091309
    4. '))' → logprob: -6.823149681091309
    5. ')' → logprob: -7.948149681091309
    6. '()));' → logprob: -9.573149681091309
    7. '())))' → logprob: -10.323149681091309
    8. '(' → logprob: -10.948149681091309
    9. '()),' → logprob: -11.323149681091309
    10. '()))
' → logprob: -11.448149681091309

Token 21: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23602651059627533
    2. 'A' → logprob: -2.2360265254974365
    3. 's' → logprob: -3.8610265254974365
    4. 'd' → logprob: -4.111026287078857
    5. 'a' → logprob: -4.361026287078857
    6. '[' → logprob: -4.986026287078857
    7. 'c' → logprob: -5.236026287078857
    8. ' for' → logprob: -5.486026287078857
    9. 'i' → logprob: -5.486026287078857
    10. '
' → logprob: -5.611026287078857

Token 22: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.956944465637207
    2. ' max' → logprob: -1.706944465637207
    3. ' solve' → logprob: -2.331944465637207
    4. ' dfs' → logprob: -2.956944465637207
    5. ' solution' → logprob: -3.206944465637207
    6. ' count' → logprob: -3.581944465637207
    7. ' ' → logprob: -3.706944465637207
    8. ' ' → logprob: -3.831944465637207
    9. ' factorial' → logprob: -3.831944465637207
    10. ' main' → logprob: -3.956944465637207

Token 23: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022171074524521828
    2. '(a' → logprob: -6.7522172927856445
    3. '_' → logprob: -7.3772172927856445
    4. 'a' → logprob: -9.377217292785645
    5. '(x' → logprob: -9.502217292785645
    6. 'u' → logprob: -9.627217292785645
    7. '(n' → logprob: -9.877217292785645
    8. ' (' → logprob: -10.252217292785645
    9. ')' → logprob: -10.752217292785645
    10. '[' → logprob: -10.752217292785645

Token 24: ',k' (ID: 35155)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.45428165793418884
    2. ')' → logprob: -1.7042816877365112
    3. '[' → logprob: -2.3292815685272217
    4. ',' → logprob: -2.5792815685272217
    5. ',a' → logprob: -5.204281806945801
    6. '[i' → logprob: -6.829281806945801
    7. '[a' → logprob: -6.829281806945801
    8. 'a' → logprob: -8.0792818069458
    9. '[]):' → logprob: -8.2042818069458
    10. ' ,' → logprob: -8.4542818069458

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06341985613107681
    2. ')' → logprob: -3.188419818878174
    3. ',' → logprob: -3.938419818878174
    4. ',a' → logprob: -8.063420295715332
    5. '),' → logprob: -9.438420295715332
    6. ' ):' → logprob: -9.563420295715332
    7. ',k' → logprob: -10.188420295715332
    8. '):
' → logprob: -10.563420295715332
    9. ',p' → logprob: -10.563420295715332
    10. ')):' → logprob: -10.688420295715332

Token 26: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5567883253097534
    2. '   ' → logprob: -1.5567883253097534
    3. ':' → logprob: -1.8067883253097534
    4. ' :' → logprob: -4.181788444519043
    5. '[' → logprob: -4.431788444519043
    6. ' []' → logprob: -5.431788444519043
    7. '[:]' → logprob: -5.681788444519043
    8. ' if' → logprob: -5.681788444519043
    9. '  ' → logprob: -6.431788444519043
    10. '    ' → logprob: -6.431788444519043

Token 27: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6239355802536011
    2. ' =' → logprob: -1.623935580253601
    3. 'e' → logprob: -1.998935580253601
    4. 'ef' → logprob: -2.3739356994628906
    5. ' ' → logprob: -4.123935699462891
    6. 'f' → logprob: -5.498935699462891
    7. 'a' → logprob: -5.873935699462891
    8. 'p' → logprob: -6.248935699462891
    9. ' a' → logprob: -6.248935699462891
    10. ' e' → logprob: -6.373935699462891

Token 28: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1461373120546341
    2. 'for' → logprob: -2.521137237548828
    3. ' ' → logprob: -3.146137237548828
    4. '   ' → logprob: -6.021137237548828
    5. 'r' → logprob: -6.646137237548828
    6. ' a' → logprob: -6.771137237548828
    7. ' i' → logprob: -6.771137237548828
    8. ' f' → logprob: -6.896137237548828
    9. ' =' → logprob: -7.396137237548828
    10. ' x' → logprob: -7.396137237548828

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.031617771834135056
    2. 'i' → logprob: -3.9066178798675537
    3. ' x' → logprob: -4.656617641448975
    4. 'x' → logprob: -7.281617641448975
    5. ' ' → logprob: -8.156618118286133
    6. ' a' → logprob: -8.531618118286133
    7. ' e' → logprob: -8.531618118286133
    8. ' _' → logprob: -10.281618118286133
    9. 'e' → logprob: -10.531618118286133
    10. 'a' → logprob: -10.656618118286133

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006896882317960262
    2. 'in' → logprob: -5.00689697265625
    3. ' ' → logprob: -9.38189697265625
    4. 'n' → logprob: -9.88189697265625
    5. ',' → logprob: -11.13189697265625
    6. ',n' → logprob: -11.63189697265625
    7. 'range' → logprob: -12.63189697265625
    8. '	in' → logprob: -12.75689697265625
    9. '  ' → logprob: -13.19439697265625
    10. '+' → logprob: -13.25689697265625

Token 31: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5293811559677124
    2. 'range' → logprob: -0.9043811559677124
    3. 'a' → logprob: -5.779381275177002
    4. ' a' → logprob: -5.779381275177002
    5. ' A' → logprob: -11.029380798339844
    6. 'A' → logprob: -11.029380798339844
    7. ' ' → logprob: -11.404380798339844
    8. 'r' → logprob: -12.529380798339844
    9. '	range' → logprob: -13.029380798339844
    10. ' xrange' → logprob: -13.654380798339844

Token 32: '(len' (ID: 14990)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5416998267173767
    2. '(len' → logprob: -0.9166998267173767
    3. '(' → logprob: -4.5416998863220215
    4. '(K' → logprob: -5.0416998863220215
    5. ' (' → logprob: -7.2916998863220215
    6. '(a' → logprob: -8.416699409484863
    7. '(N' → logprob: -9.166699409484863
    8. ' len' → logprob: -9.291699409484863
    9. '(n' → logprob: -9.416699409484863
    10. ' k' → logprob: -10.666699409484863

Token 33: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008438145159743726
    2. '(' → logprob: -7.5008440017700195
    3. '(A' → logprob: -8.75084400177002
    4. 'a' → logprob: -9.12584400177002
    5. ' a' → logprob: -12.00084400177002
    6. ' (' → logprob: -12.00084400177002
    7. '(k' → logprob: -12.37584400177002
    8. '(s' → logprob: -13.37584400177002
    9. '(d' → logprob: -13.50084400177002
    10. 'A' → logprob: -13.50084400177002

Token 34: ')-' (ID: 14080)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.4626542031764984
    2. '-' → logprob: -1.8376542329788208
    3. ')):
' → logprob: -2.0876541137695312
    4. ')-' → logprob: -3.5876541137695312
    5. ')' → logprob: -3.9626541137695312
    6. '))' → logprob: -4.087654113769531
    7. ' ' → logprob: -4.837654113769531
    8. ' -' → logprob: -5.087654113769531
    9. ' ))' → logprob: -5.087654113769531
    10. '):' → logprob: -6.712654113769531

Token 35: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03866203874349594
    2. ' k' → logprob: -3.6636619567871094
    3. '1' → logprob: -4.413661956787109
    4. '(k' → logprob: -9.53866195678711
    5. ' ' → logprob: -9.66366195678711
    6. '(' → logprob: -10.66366195678711
    7. 'K' → logprob: -11.78866195678711
    8. ' (' → logprob: -12.53866195678711
    9. '	k' → logprob: -13.03866195678711
    10. '2' → logprob: -14.16366195678711

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010070065036416054
    2. ' ):' → logprob: -5.885069847106934
    3. ',' → logprob: -6.260069847106934
    4. '-' → logprob: -6.510069847106934
    5. '):
' → logprob: -6.635069847106934
    6. '+' → logprob: -6.635069847106934
    7. ' -' → logprob: -8.010069847106934
    8. ')' → logprob: -8.010069847106934
    9. ',-' → logprob: -8.385069847106934
    10. '-k' → logprob: -9.760069847106934

Token 37: ' ' (ID: 220)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7428771257400513
    2. ' ' → logprob: -0.8678771257400513
    3. '       ' → logprob: -3.4928770065307617
    4. '   ' → logprob: -3.6178770065307617
    5. ' if' → logprob: -3.9928770065307617
    6. ' d' → logprob: -4.117877006530762
    7. 'd' → logprob: -5.367877006530762
    8. ' for' → logprob: -5.492877006530762
    9. '  ' → logprob: -6.742877006530762
    10. '[' → logprob: -7.867877006530762

Token 38: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6903747320175171
    2. ' ' → logprob: -0.9403747320175171
    3. ' d' → logprob: -3.1903748512268066
    4. 'd' → logprob: -3.3153748512268066
    5. ' for' → logprob: -4.315374851226807
    6. 'if' → logprob: -4.690374851226807
    7. '    ' → logprob: -6.565374851226807
    8. ' i' → logprob: -6.690374851226807
    9. '  ' → logprob: -7.190374851226807
    10. ' ' → logprob: -7.190374851226807

Token 39: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.037456952035427094
    2. '.' → logprob: -3.53745698928833
    3. ' .' → logprob: -4.91245698928833
    4. '.ap' → logprob: -8.537456512451172
    5. '.app' → logprob: -9.662456512451172
    6. '+' → logprob: -11.287456512451172
    7. '+.' → logprob: -11.287456512451172
    8. '.extend' → logprob: -11.537456512451172
    9. '.a' → logprob: -11.912456512451172
    10. 'append' → logprob: -12.287456512451172

Token 40: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.49434658885002136
    2. ' [' → logprob: -1.9943466186523438
    3. '=[' → logprob: -1.9943466186523438
    4. '=' → logprob: -2.2443466186523438
    5. '[a' → logprob: -4.494346618652344
    6. '[int' → logprob: -9.369346618652344
    7. '[i' → logprob: -9.494346618652344
    8. '[p' → logprob: -9.744346618652344
    9. '.append' → logprob: -10.119346618652344
    10. ' ' → logprob: -10.119346618652344

Token 41: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8336204290390015
    2. 'abs' → logprob: -0.9586204290390015
    3. ' abs' → logprob: -2.458620548248291
    4. 'max' → logprob: -3.208620548248291
    5. ' a' → logprob: -3.458620548248291
    6. ' max' → logprob: -4.208620548248291
    7. 'min' → logprob: -5.708620548248291
    8. '(a' → logprob: -6.333620548248291
    9. '[a' → logprob: -6.458620548248291
    10. ' min' → logprob: -7.333620548248291

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.429896944202483e-05
    2. '[' → logprob: -11.125043869018555
    3. 'i' → logprob: -11.250043869018555
    4. ' [' → logprob: -12.250043869018555
    5. ' i' → logprob: -12.875043869018555
    6. '[j' → logprob: -12.875043869018555
    7. ']' → logprob: -13.500043869018555
    8. ' ' → logprob: -13.625043869018555
    9. '][' → logprob: -14.000043869018555
    10. '(i' → logprob: -14.500043869018555

Token 43: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3595760464668274
    2. ']-' → logprob: -1.4845759868621826
    3. ']+' → logprob: -3.3595759868621826
    4. ']' → logprob: -4.234576225280762
    5. ' -' → logprob: -4.859576225280762
    6. '-' → logprob: -5.359576225280762
    7. ']]' → logprob: -5.609576225280762
    8. ' +' → logprob: -5.859576225280762
    9. '+i' → logprob: -6.359576225280762
    10. ' ' → logprob: -6.609576225280762

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1019693911075592
    2. ']' → logprob: -2.4769694805145264
    3. ']-' → logprob: -4.976969242095947
    4. ' ' → logprob: -5.976969242095947
    5. '-' → logprob: -6.726969242095947
    6. ']+' → logprob: -7.226969242095947
    7. ']]' → logprob: -7.601969242095947
    8. ' -' → logprob: -7.726969242095947
    9. ' ]' → logprob: -8.601969718933105
    10. 'i' → logprob: -8.726969718933105

Token 45: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5963442921638489
    2. '-' → logprob: -0.8463442921638489
    3. ']-' → logprob: -3.971344232559204
    4. ' ' → logprob: -7.471344470977783
    5. '-a' → logprob: -7.721344470977783
    6. ']' → logprob: -8.721343994140625
    7. ')-' → logprob: -9.971343994140625
    8. '-i' → logprob: -10.096343994140625
    9. ' ]' → logprob: -10.221343994140625
    10. '	' → logprob: -12.346343994140625

Token 46: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019289902411401272
    2. ' a' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.37692928314209
    4. '	a' → logprob: -16.751928329467773
    5. '>a' → logprob: -17.126928329467773
    6. '<|end|>' → logprob: -17.876928329467773
    7. ')a' → logprob: -18.126928329467773
    8. '```' → logprob: -18.876928329467773
    9. ''a' → logprob: -19.501928329467773
    10. '<|end|>' → logprob: -20.001928329467773

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017421995289623737
    2. '[' → logprob: -8.875174522399902
    3. '[I' → logprob: -10.500174522399902
    4. '[
' → logprob: -13.625174522399902
    5. '][' → logprob: -14.000174522399902
    6. ']' → logprob: -14.000174522399902
    7. '[a' → logprob: -14.500174522399902
    8. ' [' → logprob: -14.500174522399902
    9. '[s' → logprob: -14.625174522399902
    10. '[A' → logprob: -15.000174522399902

Token 48: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1646634191274643
    2. ']' → logprob: -1.9146634340286255
    3. ')' → logprob: -6.164663314819336
    4. ' ]' → logprob: -6.539663314819336
    5. '+' → logprob: -7.789663314819336
    6. ']+' → logprob: -8.914663314819336
    7. ' )' → logprob: -9.414663314819336
    8. '])' → logprob: -9.914663314819336
    9. ' ' → logprob: -10.539663314819336
    10. ']]' → logprob: -10.664663314819336

Token 49: ' ]
' (ID: 10213)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40700992941856384
    2. ')]' → logprob: -1.6570099592208862
    3. ']' → logprob: -2.0320098400115967
    4. ' )' → logprob: -5.032010078430176
    5. ' ]' → logprob: -5.157010078430176
    6. '])' → logprob: -8.782010078430176
    7. ')])' → logprob: -9.907010078430176
    8. ' ' → logprob: -10.532010078430176
    9. ' ])' → logprob: -11.032010078430176
    10. '']' → logprob: -11.407010078430176

Token 50: ' class' (ID: 744)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0093509741127491
    2. ' ' → logprob: -5.009350776672363
    3. ' )' → logprob: -6.509350776672363
    4. ']' → logprob: -7.634350776672363
    5. ')return' → logprob: -8.259350776672363
    6. '<|end|>' → logprob: -8.884350776672363
    7. ')
' → logprob: -9.134350776672363
    8. 'return' → logprob: -10.884350776672363
    9. ')]' → logprob: -10.884350776672363
    10. '}' → logprob: -11.009350776672363

Token 51: ' X' (ID: 2127)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7593138217926025
    2. ' A' → logprob: -1.7593138217926025
    3. ' C' → logprob: -2.7593138217926025
    4. ' My' → logprob: -2.7593138217926025
    5. '<|end|>' → logprob: -2.8843138217926025
    6. ' f' → logprob: -3.3843138217926025
    7. ' K' → logprob: -3.7593138217926025
    8. 'A' → logprob: -3.8843138217926025
    9. ' None' → logprob: -3.8843138217926025
    10. ' Class' → logprob: -4.009313583374023

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029954127967357635
    2. ':
' → logprob: -6.752995491027832
    3. ' :' → logprob: -7.252995491027832
    4. '):' → logprob: -7.502995491027832
    5. '():' → logprob: -8.127995491027832
    6. '<|end|>' → logprob: -9.252995491027832
    7. '(object' → logprob: -9.627995491027832
    8. ':def' → logprob: -10.627995491027832
    9. '(X' → logprob: -11.127995491027832
    10. ')' → logprob: -11.377995491027832

Token 53: 'pass' (ID: 9948)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.05829187110066414
    2. ' ' → logprob: -3.1832919120788574
    3. ' def' → logprob: -4.308291912078857
    4. 'pass' → logprob: -7.308291912078857
    5. '   ' → logprob: -8.4332914352417
    6. '    ' → logprob: -8.6832914352417
    7. ' 
' → logprob: -8.6832914352417
    8. '  ' → logprob: -9.4332914352417
    9. 'def' → logprob: -9.6832914352417
    10. '' → logprob: -9.6832914352417

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3616264760494232
    2. '<|end|>' → logprob: -1.4866265058517456
    3. ' 
' → logprob: -3.236626386642456
    4. ' ' → logprob: -3.486626386642456
    5. '  
' → logprob: -5.486626625061035
    6. '<|end|>' → logprob: -7.111626625061035
    7. '

' → logprob: -7.861626625061035
    8. ' 

' → logprob: -8.111626625061035
    9. '
' → logprob: -8.236626625061035
    10. '' → logprob: -8.486626625061035

Token 55: ' X' (ID: 2127)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8754012584686279
    2. ' ' → logprob: -1.125401258468628
    3. ' 
' → logprob: -1.625401258468628
    4. ' x' → logprob: -3.750401258468628
    5. '  
' → logprob: -4.250401496887207
    6. ' return' → logprob: -4.875401496887207
    7. 'x' → logprob: -6.250401496887207
    8. ' class' → logprob: -6.500401496887207
    9. ' X' → logprob: -6.625401496887207
    10. ' )' → logprob: -6.875401496887207

Token 56: '.g' (ID: 1940)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008011689060367644
    2. '()
' → logprob: -7.750801086425781
    3. '<|end|>' → logprob: -9.000801086425781
    4. ':' → logprob: -9.250801086425781
    5. '(' → logprob: -9.750801086425781
    6. ')' → logprob: -10.000801086425781
    7. '().' → logprob: -11.750801086425781
    8. '.' → logprob: -11.875801086425781
    9. '().__' → logprob: -12.375801086425781
    10. ' ()' → logprob: -12.625801086425781

Token 57: 'ap' (ID: 403)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048919692635536194
    2. ' =' → logprob: -3.298919677734375
    3. '=g' → logprob: -5.298919677734375
    4. '=[]' → logprob: -5.923919677734375
    5. ' ' → logprob: -7.923919677734375
    6. '=.' → logprob: -8.048919677734375
    7. '=lambda' → logprob: -8.173919677734375
    8. 'lobal' → logprob: -8.298919677734375
    9. '=None' → logprob: -8.423919677734375
    10. '=len' → logprob: -8.548919677734375

Token 58: '=k' (ID: 105633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1375512182712555
    2. '=max' → logprob: -2.7625513076782227
    3. ' =' → logprob: -3.1375513076782227
    4. '=[]' → logprob: -4.262551307678223
    5. '=len' → logprob: -5.637551307678223
    6. '=[' → logprob: -6.637551307678223
    7. ' ' → logprob: -7.512551307678223
    8. ')' → logprob: -8.137551307678223
    9. '=None' → logprob: -8.137551307678223
    10. '[' → logprob: -8.262551307678223

Token 59: '-a' (ID: 8575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '[-' (ID: 17503)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8178061246871948
    2. '<|end|>' → logprob: -1.6928061246871948
    3. 'g' → logprob: -2.1928062438964844
    4. '.g' → logprob: -2.8178062438964844
    5. 'X' → logprob: -3.1928062438964844
    6. 'gap' → logprob: -3.3178062438964844
    7. '[' → logprob: -3.8178062438964844
    8. '[class' → logprob: -4.442806243896484
    9. 'class' → logprob: -4.817806243896484
    10. '>' → logprob: -5.067806243896484

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029729455709457397
    2. ']' → logprob: -6.2529730796813965
    3. '-' → logprob: -7.6279730796813965
    4. '[' → logprob: -8.377972602844238
    5. '[-' → logprob: -8.877972602844238
    6. ' ' → logprob: -10.002972602844238
    7. '<|end|>' → logprob: -10.502972602844238
    8. '])' → logprob: -11.002972602844238
    9. 'i' → logprob: -11.502972602844238
    10. '(' → logprob: -11.752972602844238

Token 62: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020392391830682755
    2. '-' → logprob: -5.020392417907715
    3. ')' → logprob: -5.270392417907715
    4. ' ]' → logprob: -5.645392417907715
    5. '+' → logprob: -6.020392417907715
    6. '<|end|>' → logprob: -6.895392417907715
    7. ')]' → logprob: -7.895392417907715
    8. '[' → logprob: -8.145392417907715
    9. ']
' → logprob: -8.395392417907715
    10. ' -' → logprob: -8.770392417907715

Token 63: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011361661599949002
    2. ' a' → logprob: -6.876136302947998
    3. '0' → logprob: -9.62613582611084
    4. ' ' → logprob: -11.12613582611084
    5. '1' → logprob: -11.62613582611084
    6. '<|end|>' → logprob: -12.62613582611084
    7. 'A' → logprob: -13.25113582611084
    8. '  ' → logprob: -13.75113582611084
    9. '<|end|>' → logprob: -13.87613582611084
    10. ''a' → logprob: -14.12613582611084

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002914715325459838
    2. '[-' → logprob: -6.377914905548096
    3. '[i' → logprob: -7.252914905548096
    4. '0' → logprob: -7.627914905548096
    5. '[
' → logprob: -12.752914428710938
    6. '[len' → logprob: -13.127914428710938
    7. '[N' → logprob: -13.252914428710938
    8. '[X' → logprob: -13.627914428710938
    9. ' [' → logprob: -14.002914428710938
    10. ' ' → logprob: -14.002914428710938

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002667450113222003
    2. '-' → logprob: -6.002667427062988
    3. ' ' → logprob: -8.627667427062988
    4. ' -' → logprob: -12.002667427062988
    5. 'i' → logprob: -13.065167427062988
    6. '1' → logprob: -13.252667427062988
    7. '۰' → logprob: -15.440167427062988
    8. '-i' → logprob: -15.565167427062988
    9. '[' → logprob: -15.627667427062988
    10. '
' → logprob: -15.815167427062988

Token 66: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016066865995526314
    2. ' )' → logprob: -4.391067028045654
    3. ']' → logprob: -6.141067028045654
    4. ')
' → logprob: -7.766067028045654
    5. '<|end|>' → logprob: -8.141066551208496
    6. ' ' → logprob: -8.391066551208496
    7. ' ]' → logprob: -8.766066551208496
    8. ')]' → logprob: -9.016066551208496
    9. ' )
' → logprob: -10.016066551208496
    10. '')' → logprob: -11.391066551208496

Token 67: ' d' (ID: 272)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5580294132232666
    2. '<|end|>' → logprob: -1.0580294132232666
    3. ' 
' → logprob: -3.4330294132232666
    4. ' ' → logprob: -3.5580294132232666
    5. ')' → logprob: -5.5580291748046875
    6. '  
' → logprob: -5.6830291748046875
    7. '\n' → logprob: -6.0580291748046875
    8. ' return' → logprob: -6.0580291748046875
    9. '<|end|>' → logprob: -6.1830291748046875
    10. '
' → logprob: -7.0580291748046875

Token 68: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '(X' (ID: 17061)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0444027185440063
    2. '(' → logprob: -1.1694027185440063
    3. '(max' → logprob: -2.044402599334717
    4. '(X' → logprob: -2.294402599334717
    5. '(d' → logprob: -2.669402599334717
    6. '(min' → logprob: -3.919402599334717
    7. '(a' → logprob: -4.669402599334717
    8. '(A' → logprob: -5.919402599334717
    9. '(-' → logprob: -6.794402599334717
    10. '((' → logprob: -6.794402599334717

Token 70: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.02422907203435898
    2. ')' → logprob: -3.774229049682617
    3. '.' → logprob: -7.649229049682617
    4. ').' → logprob: -9.274229049682617
    5. ' )' → logprob: -9.274229049682617
    6. '().' → logprob: -9.399229049682617
    7. '.)' → logprob: -9.774229049682617
    8. ' .' → logprob: -9.899229049682617
    9. ')
' → logprob: -10.524229049682617
    10. '())' → logprob: -10.524229049682617

Token 71: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -4.704065213445574e-05
    2. 'gap' → logprob: -10.125046730041504
    3. 'a' → logprob: -13.250046730041504
    4. 'ап' → logprob: -13.500046730041504
    5. ' gap' → logprob: -14.375046730041504
    6. 'p' → logprob: -14.687546730041504
    7. 'g' → logprob: -14.937546730041504
    8. 'app' → logprob: -15.187546730041504
    9. '	ap' → logprob: -15.187546730041504
    10. 'apped' → logprob: -15.937546730041504

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4708871841430664
    2. ')
' → logprob: -1.3458871841430664
    3. ' )
' → logprob: -2.5958871841430664
    4. ' )' → logprob: -3.2208871841430664
    5. ')
' → logprob: -7.845887184143066
    6. ')return' → logprob: -8.720887184143066
    7. ' )
' → logprob: -9.470887184143066
    8. ')d' → logprob: -10.095887184143066
    9. ')

' → logprob: -10.595887184143066
    10. ' ' → logprob: -11.095887184143066

Token 73: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20719178020954132
    2. ' ' → logprob: -2.5821917057037354
    3. ' d' → logprob: -3.4571917057037354
    4. ' f' → logprob: -3.8321917057037354
    5. '
' → logprob: -3.8321917057037354
    6. ')' → logprob: -4.3321919441223145
    7. ' 
' → logprob: -4.9571919441223145
    8. '<|end|>' → logprob: -5.3321919441223145
    9. ' K' → logprob: -6.2071919441223145
    10. '   ' → logprob: -6.7071919441223145

Token 74: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.164232075214386
    2. ' d' → logprob: -2.289232015609741
    3. 'sum' → logprob: -3.664232015609741
    4. ' sum' → logprob: -4.91423225402832
    5. 'sorted' → logprob: -4.91423225402832
    6. 'max' → logprob: -5.53923225402832
    7. 'min' → logprob: -6.53923225402832
    8. ' sorted' → logprob: -6.53923225402832
    9. ' max' → logprob: -6.66423225402832
    10. ' min' → logprob: -7.16423225402832

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1743781417608261
    2. ' math' → logprob: -2.5493781566619873
    3. ' collections' → logprob: -2.7993781566619873
    4. 'collections' → logprob: -4.549377918243408
    5. ' heap' → logprob: -5.299377918243408
    6. 'math' → logprob: -5.924377918243408
    7. ' functools' → logprob: -7.049377918243408
    8. 'heap' → logprob: -7.424377918243408
    9. '_' → logprob: -8.049378395080566
    10. 'it' → logprob: -8.174378395080566

Token 78: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6327077746391296
    2. ' import' → logprob: -0.7577077746391296
    3. '	import' → logprob: -9.757707595825195
    4. '<|end|>' → logprob: -11.132707595825195
    5. '_import' → logprob: -11.257707595825195
    6. ' .' → logprob: -12.757707595825195
    7. ' ' → logprob: -12.757707595825195
    8. '.import' → logprob: -13.007707595825195
    9. '32' → logprob: -13.257707595825195
    10. ' ' → logprob: -13.382707595825195

Token 79: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.06957954913377762
    2. ' reduce' → logprob: -2.819579601287842
    3. 'cmp' → logprob: -5.069579601287842
    4. 'l' → logprob: -7.569579601287842
    5. ' cmp' → logprob: -7.819579601287842
    6. ' l' → logprob: -8.569579124450684
    7. 'wrap' → logprob: -9.819579124450684
    8. 'cache' → logprob: -10.319579124450684
    9. 'partial' → logprob: -10.319579124450684
    10. 'redu' → logprob: -10.569579124450684

Token 80: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0449455976486206
    2. '<|end|>' → logprob: -1.5449455976486206
    3. '
' → logprob: -2.04494571685791
    4. 'd' → logprob: -2.91994571685791
    5. 'def' → logprob: -2.91994571685791
    6. ',
' → logprob: -3.04494571685791
    7. '(lambda' → logprob: -3.29494571685791
    8. ')' → logprob: -3.79494571685791
    9. ' def' → logprob: -4.41994571685791
    10. ' 
' → logprob: -4.41994571685791

Token 81: 'd' (ID: 67)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30161941051483154
    2. 'd' → logprob: -2.551619529724121
    3. 'import' → logprob: -3.301619529724121
    4. 'from' → logprob: -3.676619529724121
    5. ' def' → logprob: -4.051619529724121
    6. ',' → logprob: -4.051619529724121
    7. '_' → logprob: -4.426619529724121
    8. '<|end|>' → logprob: -4.551619529724121
    9. 'reduce' → logprob: -5.051619529724121
    10. '
' → logprob: -5.051619529724121

Token 82: '=f' (ID: 40464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0742484331130981
    2. '<|end|>' → logprob: -1.4492484331130981
    3. '.reduce' → logprob: -1.9492484331130981
    4. ' =' → logprob: -2.6992483139038086
    5. '.' → logprob: -3.3242483139038086
    6. 'd' → logprob: -3.4492483139038086
    7. '[' → logprob: -3.4492483139038086
    8. '(' → logprob: -3.5742483139038086
    9. ')' → logprob: -3.8242483139038086
    10. ',' → logprob: -4.324248313903809

Token 83: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004934870172291994
    2. 'A' → logprob: -5.379934787750244
    3. '(' → logprob: -9.254935264587402
    4. '(a' → logprob: -10.254935264587402
    5. ' A' → logprob: -10.254935264587402
    6. '(N' → logprob: -10.629935264587402
    7. '
' → logprob: -10.629935264587402
    8. '(d' → logprob: -11.004935264587402
    9. '(K' → logprob: -11.004935264587402
    10. '(
' → logprob: -11.129935264587402

Token 84: ',K' (ID: 107147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.390436589717865
    2. ',k' → logprob: -1.7654366493225098
    3. ',K' → logprob: -1.8904366493225098
    4. ' ,' → logprob: -7.01543664932251
    5. ',N' → logprob: -9.265436172485352
    6. ')' → logprob: -10.015436172485352
    7. ' ' → logprob: -11.140436172485352
    8. ',)' → logprob: -11.265436172485352
    9. ',
' → logprob: -11.515436172485352
    10. ',i' → logprob: -11.515436172485352

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.490809417096898e-05
    2. ' )' → logprob: -10.375055313110352
    3. ')
' → logprob: -11.250055313110352
    4. '))' → logprob: -11.625055313110352
    5. ')d' → logprob: -15.250055313110352
    6. ')))' → logprob: -15.500055313110352
    7. ')

' → logprob: -15.875055313110352
    8. '[' → logprob: -15.875055313110352
    9. '),' → logprob: -16.00005531311035
    10. '')' → logprob: -16.12505531311035

Token 86: 'print' (ID: 1598)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3974533081054688
    2. 'r' → logprob: -1.7724533081054688
    3. 'm' → logprob: -2.0224533081054688
    4. 'g' → logprob: -2.1474533081054688
    5. 'c' → logprob: -2.6474533081054688
    6. 'p' → logprob: -3.1474533081054688
    7. 's' → logprob: -3.5224533081054688
    8. 'x' → logprob: -3.7724533081054688
    9. 'res' → logprob: -4.022453308105469
    10. 'print' → logprob: -4.147453308105469

Token 87: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18388938903808594
    2. '(sum' → logprob: -2.433889389038086
    3. '(len' → logprob: -2.558889389038086
    4. '(d' → logprob: -6.683889389038086
    5. '(max' → logprob: -6.933889389038086
    6. '(re' → logprob: -7.933889389038086
    7. '(list' → logprob: -9.058889389038086
    8. '("("' → logprob: -10.308889389038086
    9. '(f' → logprob: -10.683889389038086
    10. '(
' → logprob: -10.808889389038086

Token 88: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.23493053019046783
    2. 'sum' → logprob: -2.4849305152893066
    3. 'max' → logprob: -2.9849305152893066
    4. ' reduce' → logprob: -3.1099305152893066
    5. ' max' → logprob: -4.484930515289307
    6. ' sum' → logprob: -4.984930515289307
    7. 'min' → logprob: -5.484930515289307
    8. 'len' → logprob: -5.734930515289307
    9. 'K' → logprob: -6.109930515289307
    10. ' min' → logprob: -7.359930515289307

Token 89: ' k' (ID: 372)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4052211344242096
    2. 'x' → logprob: -2.5302212238311768
    3. ' d' → logprob: -3.1552212238311768
    4. ' a' → logprob: -3.4052212238311768
    5. ' reduce' → logprob: -3.5302212238311768
    6. ' l' → logprob: -3.6552212238311768
    7. ' r' → logprob: -3.9052212238311768
    8. ' acc' → logprob: -4.280220985412598
    9. ' lambda' → logprob: -4.280220985412598
    10. 'a' → logprob: -4.655220985412598

Token 90: ',m' (ID: 26648)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08489598333835602
    2. ':[' → logprob: -3.5848960876464844
    3. ' :' → logprob: -3.8348960876464844
    4. ':d' → logprob: -4.584896087646484
    5. ':k' → logprob: -5.459896087646484
    6. ':list' → logprob: -5.709896087646484
    7. ':n' → logprob: -5.834896087646484
    8. ',' → logprob: -6.084896087646484
    9. ',d' → logprob: -6.584896087646484
    10. ':f' → logprob: -6.709896087646484

Token 91: ':' (ID: 25)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.5892689228057861
    2. ':' → logprob: -1.4642689228057861
    3. ',m' → logprob: -2.589268922805786
    4. ',d' → logprob: -3.214268922805786
    5. ':(' → logprob: -3.839268922805786
    6. ',' → logprob: -3.964268922805786
    7. ':k' → logprob: -4.339268684387207
    8. ' :' → logprob: -4.714268684387207
    9. ',n' → logprob: -4.839268684387207
    10. ':[' → logprob: -5.464268684387207

Token 92: ' k' (ID: 372)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5614690780639648
    2. ' reduce' → logprob: -1.4364690780639648
    3. 'k' → logprob: -3.436469078063965
    4. '0' → logprob: -3.811469078063965
    5. 'm' → logprob: -3.936469078063965
    6. ' k' → logprob: -4.186469078063965
    7. ' (' → logprob: -4.311469078063965
    8. 'max' → logprob: -4.311469078063965
    9. ' max' → logprob: -4.436469078063965
    10. '(m' → logprob: -4.436469078063965

Token 93: '-m' (ID: 2126)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22764305770397186
    2. '+m' → logprob: -3.3526430130004883
    3. 'and' → logprob: -3.6026430130004883
    4. ' and' → logprob: -3.8526430130004883
    5. '-m' → logprob: -3.9776430130004883
    6. '+' → logprob: -4.102643013000488
    7. 'if' → logprob: -4.477643013000488
    8. '*' → logprob: -4.602643013000488
    9. '[m' → logprob: -4.852643013000488
    10. '*m' → logprob: -4.977643013000488

Token 94: ')(' (ID: 4898)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.7512102723121643
    2. ')(' → logprob: -1.2512102127075195
    3. '(d' → logprob: -2.2512102127075195
    4. ')' → logprob: -3.0012102127075195
    5. '(' → logprob: -3.8762102127075195
    6. '[' → logprob: -4.2512102127075195
    7. '(sum' → logprob: -4.6262102127075195
    8. '(k' → logprob: -5.0012102127075195
    9. '))' → logprob: -5.2512102127075195
    10. 'd' → logprob: -5.5012102127075195

Token 95: 'K' (ID: 42)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.0675079822540283
    2. ' max' → logprob: -1.1925079822540283
    3. 'max' → logprob: -1.5675079822540283
    4. ' reduce' → logprob: -2.0675079822540283
    5. 'sum' → logprob: -4.942507743835449
    6. ' sum' → logprob: -5.692507743835449
    7. ' K' → logprob: -6.317507743835449
    8. 'min' → logprob: -6.567507743835449
    9. ' min' → logprob: -6.942507743835449
    10. 'K' → logprob: -6.942507743835449

Token 96: ',' (ID: 11)
  Prédit: ',max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -1.0051772594451904
    2. ',' → logprob: -1.1301772594451904
    3. ' ,' → logprob: -1.8801772594451904
    4. ',sum' → logprob: -2.5051772594451904
    5. ',min' → logprob: -2.6301772594451904
    6. ',len' → logprob: -6.7551774978637695
    7. ',d' → logprob: -6.8801774978637695
    8. ' max' → logprob: -7.0051774978637695
    9. 'max' → logprob: -7.6301774978637695
    10. ',re' → logprob: -7.7551774978637695

Token 97: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0517059825360775
    2. 'min' → logprob: -3.801706075668335
    3. 'max' → logprob: -3.926706075668335
    4. ' reduce' → logprob: -5.051705837249756
    5. ' max' → logprob: -7.051705837249756
    6. ' min' → logprob: -7.176705837249756
    7. 'sum' → logprob: -8.176706314086914
    8. ')' → logprob: -11.426706314086914
    9. 'redu' → logprob: -11.801706314086914
    10. ' sum' → logprob: -12.301706314086914

Token 98: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.14742450416088104
    2. '(max' → logprob: -2.5224244594573975
    3. '(min' → logprob: -3.2724244594573975
    4. '(' → logprob: -4.522424697875977
    5. ' (' → logprob: -5.647424697875977
    6. '<|end|>' → logprob: -6.397424697875977
    7. ')' → logprob: -6.522424697875977
    8. ' lambda' → logprob: -8.397424697875977
    9. ' max' → logprob: -8.522424697875977
    10. 'lambda' → logprob: -8.647424697875977

Token 99: ' x' (ID: 1215)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.581186056137085
    2. ' lambda' → logprob: -1.206186056137085
    3. '<|end|>' → logprob: -2.081186056137085
    4. ' (' → logprob: -4.456186294555664
    5. 'lambda' → logprob: -6.081186294555664
    6. '(' → logprob: -6.331186294555664
    7. ' ' → logprob: -7.706186294555664
    8. '=lambda' → logprob: -8.456186294555664
    9. '<|end|>' → logprob: -9.581186294555664
    10. ')' → logprob: -9.706186294555664

Token 100: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12406118214130402
    2. ',x' → logprob: -2.999061107635498
    3. ' ,' → logprob: -3.124061107635498
    4. ',k' → logprob: -4.499061107635498
    5. ',max' → logprob: -5.124061107635498
    6. ',int' → logprob: -6.499061107635498
    7. ',min' → logprob: -6.874061107635498
    8. ' lambda' → logprob: -6.874061107635498
    9. ',m' → logprob: -7.624061107635498
    10. ',y' → logprob: -7.749061107635498

Token 101: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033890608698129654
    2. ' :' → logprob: -4.283890724182129
    3. ':max' → logprob: -4.533890724182129
    4. 'lambda' → logprob: -5.783890724182129
    5. ' lambda' → logprob: -5.908890724182129
    6. '(lambda' → logprob: -6.908890724182129
    7. ':x' → logprob: -7.533890724182129
    8. ':min' → logprob: -7.658890724182129
    9. ' max' → logprob: -8.283890724182129
    10. ' x' → logprob: -8.783890724182129

Token 102: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7750359177589417
    2. 'x' → logprob: -1.9000358581542969
    3. ' x' → logprob: -1.9000358581542969
    4. ' min' → logprob: -2.150035858154297
    5. 'max' → logprob: -2.525035858154297
    6. 'min' → logprob: -3.150035858154297
    7. ' lambda' → logprob: -8.525035858154297
    8. ' ' → logprob: -8.900035858154297
    9. 'lambda' → logprob: -9.150035858154297
    10. ' abs' → logprob: -9.775035858154297

Token 103: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00025907461531460285
    2. '(' → logprob: -8.500259399414062
    3. ' (' → logprob: -10.000259399414062
    4. 'x' → logprob: -11.875259399414062
    5. ' x' → logprob: -13.375259399414062
    6. '(
' → logprob: -14.500259399414062
    7. '((' → logprob: -14.750259399414062
    8. '<|end|>' → logprob: -15.125259399414062
    9. ',x' → logprob: -15.375259399414062
    10. ' ' → logprob: -15.625259399414062

Token 104: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0018702136585488915
    2. ' ,' → logprob: -6.876870155334473
    3. ',' → logprob: -7.126870155334473
    4. ',d' → logprob: -11.626870155334473
    5. '+y' → logprob: -11.751870155334473
    6. ' y' → logprob: -12.126870155334473
    7. 'y' → logprob: -12.251870155334473
    8. '+' → logprob: -13.501870155334473
    9. ',f' → logprob: -14.251870155334473
    10. ' ' → logprob: -14.376870155334473

Token 105: '),' (ID: 936)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.001618526759557426
    2. ',' → logprob: -6.876618385314941
    3. ' ,' → logprob: -7.501618385314941
    4. '(d' → logprob: -10.626618385314941
    5. ' d' → logprob: -13.251618385314941
    6. '),' → logprob: -13.626618385314941
    7. 'd' → logprob: -13.876618385314941
    8. ',max' → logprob: -13.876618385314941
    9. ',y' → logprob: -14.251618385314941
    10. ',map' → logprob: -14.501618385314941

Token 106: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.42871418595314026
    2. ' d' → logprob: -1.0537141561508179
    3. ' ' → logprob: -12.80371379852295
    4. 'f' → logprob: -13.05371379852295
    5. ')d' → logprob: -13.05371379852295
    6. '(d' → logprob: -13.30371379852295
    7. '[d' → logprob: -13.92871379852295
    8. ' ' → logprob: -14.05371379852295
    9. ')' → logprob: -14.30371379852295
    10. ' 
' → logprob: -14.42871379852295

Token 107: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.014760617166757584
    2. '))' → logprob: -4.264760494232178
    3. ')' → logprob: -7.514760494232178
    4. ')))
' → logprob: -11.014760971069336
    5. '))))' → logprob: -11.139760971069336
    6. ' ' → logprob: -11.264760971069336
    7. ' ))' → logprob: -12.514760971069336
    8. ')));' → logprob: -13.764760971069336
    9. ')))

' → logprob: -14.389760971069336
    10. '))
' → logprob: -14.514760971069336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 73.33%
================================================================================
