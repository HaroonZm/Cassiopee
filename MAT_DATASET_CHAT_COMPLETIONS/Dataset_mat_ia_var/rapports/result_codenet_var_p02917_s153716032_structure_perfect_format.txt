================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
B = list(map(int, input().split()))

count = B[0] + B[-1]

for i in range(N - 2):
    count += min(B[i], B[i + 1])

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.346993088722229
    2. ')' → logprob: -1.346993088722229
    3. '()' → logprob: -3.5969929695129395
    4. '())' → logprob: -5.3469929695129395
    5. '(
' → logprob: -8.096993446350098
    6. '```' → logprob: -9.221993446350098
    7. '))' → logprob: -9.346993446350098
    8. '")' → logprob: -9.596993446350098
    9. '('' → logprob: -9.721993446350098
    10. '(

' → logprob: -9.971993446350098

Token 5: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07444360107183456
    2. '[i' → logprob: -3.5744435787200928
    3. '=' → logprob: -4.199443817138672
    4. ' =' → logprob: -4.449443817138672
    5. '[]' → logprob: -5.199443817138672
    6. '[:]' → logprob: -6.074443817138672
    7. ',' → logprob: -6.324443817138672
    8. '.' → logprob: -6.574443817138672
    9. ' ' → logprob: -6.949443817138672
    10. ')' → logprob: -6.949443817138672

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2685169279575348
    2. 'list' → logprob: -2.643517017364502
    3. '[]' → logprob: -2.768517017364502
    4. ' input' → logprob: -3.393517017364502
    5. '0' → logprob: -4.393517017364502
    6. 'N' → logprob: -4.768517017364502
    7. 'int' → logprob: -4.768517017364502
    8. ' []' → logprob: -4.768517017364502
    9. '[input' → logprob: -4.893517017364502
    10. ' list' → logprob: -5.143517017364502

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017179005080834031
    2. '[' → logprob: -7.126718044281006
    3. '(range' → logprob: -7.876718044281006
    4. '[(' → logprob: -8.126717567443848
    5. '```' → logprob: -9.001717567443848
    6. ' (' → logprob: -10.501717567443848
    7. '(
' → logprob: -11.251717567443848
    8. '`' → logprob: -11.376717567443848
    9. ')' → logprob: -11.501717567443848
    10. ''s' → logprob: -11.751717567443848

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.18585418164730072
    2. '(' → logprob: -1.810854196548462
    3. '(str' → logprob: -5.435853958129883
    4. '(input' → logprob: -6.685853958129883
    5. '(lambda' → logprob: -8.935853958129883
    6. ')' → logprob: -9.310853958129883
    7. '(
' → logprob: -9.560853958129883
    8. 'int' → logprob: -10.185853958129883
    9. '(eval' → logprob: -10.310853958129883
    10. '<int' → logprob: -10.560853958129883

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0397428497672081
    2. ',input' → logprob: -3.789742946624756
    3. '(' → logprob: -4.289742946624756
    4. ',' → logprob: -6.289742946624756
    5. '(int' → logprob: -8.414742469787598
    6. ')' → logprob: -8.914742469787598
    7. ' (' → logprob: -9.414742469787598
    8. ' ,' → logprob: -9.789742469787598
    9. 'input' → logprob: -10.039742469787598
    10. '=input' → logprob: -10.164742469787598

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.693652868270874
    2. ' input' → logprob: -0.693652868270874
    3. '(input' → logprob: -7.818653106689453
    4. ',input' → logprob: -9.443653106689453
    5. ')' → logprob: -11.193653106689453
    6. '=input' → logprob: -12.693653106689453
    7. ' ' → logprob: -13.693653106689453
    8. ' (' → logprob: -13.818653106689453
    9. 'range' → logprob: -14.068653106689453
    10. '(' → logprob: -14.193653106689453

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7155216932296753
    2. '().' → logprob: -1.2155216932296753
    3. '()' → logprob: -1.9655216932296753
    4. '())' → logprob: -3.090521812438965
    5. '(' → logprob: -3.715521812438965
    6. '()));' → logprob: -5.965521812438965
    7. '))' → logprob: -7.465521812438965
    8. '(),' → logprob: -7.715521812438965
    9. '()>' → logprob: -8.340521812438965
    10. ')' → logprob: -8.465521812438965

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00036084887688048184
    2. 'strip' → logprob: -8.000360488891602
    3. 'rstrip' → logprob: -10.625360488891602
    4. ' split' → logprob: -14.250360488891602
    5. '(split' → logprob: -14.875360488891602
    6. 'spl' → logprob: -16.3753604888916
    7. ')' → logprob: -17.3753604888916
    8. 'replace' → logprob: -18.3753604888916
    9. 'sp' → logprob: -19.1253604888916
    10. 'read' → logprob: -19.2503604888916

Token 14: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.29076308012008667
    2. '))' → logprob: -1.5407631397247314
    3. '())' → logprob: -4.040762901306152
    4. ')' → logprob: -4.790762901306152
    5. '()' → logprob: -4.915762901306152
    6. '(' → logprob: -5.415762901306152
    7. '('' → logprob: -8.790762901306152
    8. ''))' → logprob: -9.290762901306152
    9. ')))' → logprob: -10.790762901306152
    10. '()));' → logprob: -10.790762901306152

Token 15: 'count' (ID: 5420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.251639485359192
    2. 'c' → logprob: -2.0016393661499023
    3. 'max' → logprob: -2.7516393661499023
    4. 'a' → logprob: -2.7516393661499023
    5. 'dp' → logprob: -2.8766393661499023
    6. 'S' → logprob: -3.0016393661499023
    7. 'd' → logprob: -3.1266393661499023
    8. 'A' → logprob: -3.2516393661499023
    9. 'for' → logprob: -3.3766393661499023
    10. 'M' → logprob: -3.3766393661499023

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5845689177513123
    2. '_' → logprob: -1.084568977355957
    3. 's' → logprob: -2.334568977355957
    4. '[' → logprob: -5.084568977355957
    5. '(_)' → logprob: -7.959568977355957
    6. '_s' → logprob: -8.584568977355957
    7. '('' → logprob: -9.209568977355957
    8. '__' → logprob: -9.334568977355957
    9. '```' → logprob: -9.584568977355957
    10. '[(' → logprob: -9.709568977355957

Token 17: ' B' (ID: 418)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4855683147907257
    2. ' ' → logprob: -0.9855682849884033
    3. '{}' → logprob: -4.860568523406982
    4. ' {}' → logprob: -5.735568523406982
    5. '{' → logprob: -8.110568046569824
    6. ' {' → logprob: -9.485568046569824
    7. '[' → logprob: -10.360568046569824
    8. '(' → logprob: -11.110568046569824
    9. ' defaultdict' → logprob: -11.485568046569824
    10. ' [' → logprob: -12.610568046569824

Token 18: '[' (ID: 58)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.23086288571357727
    2. '[' → logprob: -2.355862855911255
    3. '.' → logprob: -2.730862855911255
    4. '.copy' → logprob: -3.230862855911255
    5. '[:' → logprob: -5.605863094329834
    6. '.count' → logprob: -6.355863094329834
    7. '[]' → logprob: -8.105862617492676
    8. ')' → logprob: -8.480862617492676
    9. '```' → logprob: -8.730862617492676
    10. '[count' → logprob: -8.730862617492676

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004579415079206228
    2. '-' → logprob: -5.879579544067383
    3. ' ' → logprob: -6.379579544067383
    4. ' -' → logprob: -9.879579544067383
    5. '1' → logprob: -10.879579544067383
    6. ']' → logprob: -13.004579544067383
    7. ')' → logprob: -13.817079544067383
    8. '   ' → logprob: -14.754579544067383
    9. '])' → logprob: -14.754579544067383
    10. ' :' → logprob: -14.817079544067383

Token 20: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1465056836605072
    2. ' )' → logprob: -2.27150559425354
    3. '+' → logprob: -4.521505832672119
    4. ']' → logprob: -5.396505832672119
    5. '])' → logprob: -5.521505832672119
    6. '>' → logprob: -6.146505832672119
    7. ',' → logprob: -6.646505832672119
    8. '==' → logprob: -6.646505832672119
    9. '-' → logprob: -6.771505832672119
    10. ' ])' → logprob: -6.771505832672119

Token 21: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3001941442489624
    2. '<|end|>' → logprob: -1.4251941442489624
    3. '>' → logprob: -5.300194263458252
    4. ' ' → logprob: -5.425194263458252
    5. '-' → logprob: -5.800194263458252
    6. 'for' → logprob: -6.175194263458252
    7. ' +' → logprob: -6.925194263458252
    8. '<|end|>' → logprob: -7.175194263458252
    9. ')' → logprob: -7.425194263458252
    10. ' for' → logprob: -7.550194263458252

Token 22: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4304693043231964
    2. 'B' → logprob: -1.055469274520874
    3. '1' → logprob: -7.180469512939453
    4. ' ' → logprob: -7.555469512939453
    5. ' sum' → logprob: -8.055469512939453
    6. 'sum' → logprob: -9.180469512939453
    7. '0' → logprob: -11.305469512939453
    8. ' (' → logprob: -11.430469512939453
    9. 'len' → logprob: -12.055469512939453
    10. 'b' → logprob: -12.430469512939453

Token 23: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000204851632588543
    2. '[count' → logprob: -9.625205039978027
    3. '.count' → logprob: -10.250205039978027
    4. '[:]' → logprob: -10.250205039978027
    5. '.' → logprob: -11.000205039978027
    6. '[-' → logprob: -11.250205039978027
    7. '```' → logprob: -11.750205039978027
    8. '[...]' → logprob: -11.875205039978027
    9. '[]' → logprob: -12.375205039978027
    10. '[len' → logprob: -12.750205039978027

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -11.000028610229492
    3. ']' → logprob: -11.875028610229492
    4. '])' → logprob: -13.750028610229492
    5. '(' → logprob: -14.125028610229492
    6. '-' → logprob: -14.250028610229492
    7. '2' → logprob: -14.375028610229492
    8. '0' → logprob: -15.000028610229492
    9. ')' → logprob: -15.062528610229492
    10. '```' → logprob: -15.250028610229492

Token 25: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.52919222577475e-05
    2. ' )' → logprob: -9.625075340270996
    3. '+' → logprob: -13.500075340270996
    4. '>' → logprob: -13.750075340270996
    5. '`)' → logprob: -14.000075340270996
    6. '}' → logprob: -14.000075340270996
    7. ']' → logprob: -14.125075340270996
    8. '))' → logprob: -14.250075340270996
    9. '-' → logprob: -14.750075340270996
    10. '）' → logprob: -15.250075340270996

Token 26: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.501846432685852
    2. '<|end|>' → logprob: -1.626846432685852
    3. '
' → logprob: -2.2518463134765625
    4. 'for' → logprob: -3.2518463134765625
    5. '-' → logprob: -3.8768463134765625
    6. '\n' → logprob: -5.1268463134765625
    7. ' for' → logprob: -5.3768463134765625
    8. 'print' → logprob: -5.3768463134765625
    9. '+
' → logprob: -5.3768463134765625
    10. '```' → logprob: -6.1268463134765625

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023539993911981583
    2. ' ' → logprob: -4.023540019989014
    3. ' _' → logprob: -6.023540019989014
    4. '_' → logprob: -6.023540019989014
    5. 'i' → logprob: -7.773540019989014
    6. '  ' → logprob: -10.023539543151855
    7. ' b' → logprob: -10.398539543151855
    8. ' ' → logprob: -11.273539543151855
    9. ' B' → logprob: -11.398539543151855
    10. ' x' → logprob: -11.898539543151855

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005267549771815538
    2. 'in' → logprob: -5.38026762008667
    3. ' ' → logprob: -7.38026762008667
    4. '  ' → logprob: -11.255267143249512
    5. 'n' → logprob: -12.755267143249512
    6. ' i' → logprob: -13.130267143249512
    7. '	in' → logprob: -13.380267143249512
    8. '+' → logprob: -14.255267143249512
    9. '```' → logprob: -14.255267143249512
    10. ' n' → logprob: -14.255267143249512

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002813313389196992
    2. 'range' → logprob: -5.877813339233398
    3. ' ' → logprob: -11.877813339233398
    4. '	range' → logprob: -13.877813339233398
    5. '(range' → logprob: -15.252813339233398
    6. ' xrange' → logprob: -15.752813339233398
    7. '  ' → logprob: -16.0028133392334
    8. '_range' → logprob: -17.3778133392334
    9. '   ' → logprob: -18.5028133392334
    10. ' ran' → logprob: -18.5028133392334

Token 30: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019298245897516608
    2. '(len' → logprob: -6.251929759979248
    3. ' (' → logprob: -14.376930236816406
    4. '(n' → logprob: -15.251930236816406
    5. '(N' → logprob: -15.251930236816406
    6. '(
' → logprob: -15.751930236816406
    7. '((' → logprob: -17.251930236816406
    8. '(count' → logprob: -17.751930236816406
    9. '()' → logprob: -17.876930236816406
    10. '(-' → logprob: -18.001930236816406

Token 31: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2569175660610199
    2. ' -' → logprob: -1.5069175958633423
    3. ')' → logprob: -5.756917476654053
    4. '):' → logprob: -6.881917476654053
    5. ' ' → logprob: -7.756917476654053
    6. '1' → logprob: -8.506917953491211
    7. ' )' → logprob: -9.756917953491211
    8. '):
' → logprob: -10.131917953491211
    9. ' ):' → logprob: -10.131917953491211
    10. '2' → logprob: -11.381917953491211

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1604004055261612
    2. ' ' → logprob: -1.910400390625
    3. '2' → logprob: -8.660400390625
    4. '  ' → logprob: -14.535400390625
    5. ')' → logprob: -14.785400390625
    6. '```' → logprob: -14.785400390625
    7. '3' → logprob: -14.910400390625
    8. '-' → logprob: -14.972900390625
    9. '   ' → logprob: -15.160400390625
    10. '１' → logprob: -15.910400390625

Token 33: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015335931675508618
    2. '2' → logprob: -9.375153541564941
    3. ' ' → logprob: -9.625153541564941
    4. '１' → logprob: -14.375153541564941
    5. '   ' → logprob: -14.750153541564941
    6. '```' → logprob: -15.312653541564941
    7. '  ' → logprob: -15.437653541564941
    8. '۱' → logprob: -15.812653541564941
    9. '-' → logprob: -15.812653541564941
    10. '3' → logprob: -15.937653541564941

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017561286687850952
    2. ' ):' → logprob: -4.392561435699463
    3. '):
' → logprob: -5.517561435699463
    4. ':' → logprob: -7.642561435699463
    5. ')' → logprob: -7.892561435699463
    6. ' ):
' → logprob: -9.767560958862305
    7. '):
' → logprob: -10.642560958862305
    8. ' :' → logprob: -11.017560958862305
    9. ' )' → logprob: -11.142560958862305
    10. ',' → logprob: -11.142560958862305

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5665423274040222
    2. '   ' → logprob: -0.9415423274040222
    3. ' count' → logprob: -4.441542148590088
    4. '    ' → logprob: -4.816542148590088
    5. '  ' → logprob: -5.066542148590088
    6. '    
' → logprob: -5.441542148590088
    7. '	count' → logprob: -5.941542148590088
    8. 'count' → logprob: -6.691542148590088
    9. ' ' → logprob: -6.941542148590088
    10. '     
' → logprob: -7.066542148590088

Token 36: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06293192505836487
    2. 'count' (adapté à ' count') → logprob: -3.812932014465332
    3. ' ' → logprob: -3.937932014465332
    4. ' if' → logprob: -4.812932014465332
    5. '   ' → logprob: -5.312932014465332
    6. '    ' → logprob: -6.187932014465332
    7. '	count' → logprob: -6.312932014465332
    8. '```' → logprob: -6.562932014465332
    9. ' ```' → logprob: -8.812932014465332
    10. '     
' → logprob: -9.062932014465332

Token 37: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04656655713915825
    2. '+=' → logprob: -3.4215664863586426
    3. '+' → logprob: -4.421566486358643
    4. ' +' → logprob: -7.296566486358643
    5. '   ' → logprob: -10.1715669631958
    6. ' ' → logprob: -10.7965669631958
    7. '  ' → logprob: -10.9215669631958
    8. '    ' → logprob: -11.0465669631958
    9. ' =' → logprob: -12.0465669631958
    10. '```' → logprob: -12.1715669631958

Token 38: ' min' (ID: 1349)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3759901821613312
    2. ' B' → logprob: -1.3759901523590088
    3. 'max' → logprob: -3.500990152359009
    4. ' max' → logprob: -4.250990390777588
    5. 'min' → logprob: -4.375990390777588
    6. ' min' → logprob: -5.750990390777588
    7. ' ' → logprob: -8.00098991394043
    8. '   ' → logprob: -9.87598991394043
    9. '(B' → logprob: -10.00098991394043
    10. 'abs' → logprob: -10.12598991394043

Token 39: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.04865061491727829
    2. '(' → logprob: -3.0486505031585693
    3. '((' → logprob: -9.923650741577148
    4. '(min' → logprob: -12.423650741577148
    5. '(b' → logprob: -13.423650741577148
    6. '(A' → logprob: -13.548650741577148
    7. '(max' → logprob: -13.548650741577148
    8. '(abs' → logprob: -14.048650741577148
    9. '(count' → logprob: -14.173650741577148
    10. '(
' → logprob: -14.423650741577148

Token 40: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8908587662735954e-05
    2. '[' → logprob: -11.000019073486328
    3. '(i' → logprob: -13.875019073486328
    4. ')' → logprob: -14.250019073486328
    5. ' [' → logprob: -16.000019073486328
    6. ')[' → logprob: -16.625019073486328
    7. '[I' → logprob: -16.750019073486328
    8. '[
' → logprob: -16.875019073486328
    9. '[a' → logprob: -17.125019073486328
    10. '[min' → logprob: -17.750019073486328

Token 41: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5395586490631104
    2. '+' → logprob: -0.9145586490631104
    3. ']' → logprob: -4.914558410644531
    4. ' +' → logprob: -5.039558410644531
    5. '),' → logprob: -7.539558410644531
    6. '[i' → logprob: -7.664558410644531
    7. ':i' → logprob: -8.039558410644531
    8. ',' → logprob: -8.164558410644531
    9. '   ' → logprob: -8.789558410644531
    10. '+i' → logprob: -9.039558410644531

Token 42: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.579350471496582
    2. 'B' → logprob: -0.829350471496582
    3. ' ' → logprob: -5.704350471496582
    4. '  ' → logprob: -10.204350471496582
    5. '   ' → logprob: -10.704350471496582
    6. ' ' → logprob: -11.829350471496582
    7. ')' → logprob: -13.329350471496582
    8. '	B' → logprob: -13.704350471496582
    9. 'b' → logprob: -13.829350471496582
    10. 'i' → logprob: -14.204350471496582

Token 43: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037170578725636005
    2. '[i' → logprob: -6.003716945648193
    3. ' +' → logprob: -6.878716945648193
    4. '[' → logprob: -9.253717422485352
    5. ' ' → logprob: -10.003717422485352
    6. '   ' → logprob: -10.003717422485352
    7. '+i' → logprob: -10.753717422485352
    8. ' i' → logprob: -13.503717422485352
    9. '  ' → logprob: -14.503717422485352
    10. 'i' → logprob: -15.128717422485352

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031836593989282846
    2. ' +' → logprob: -5.753183841705322
    3. ' ' → logprob: -13.003183364868164
    4. '   ' → logprob: -13.378183364868164
    5. '+i' → logprob: -13.378183364868164
    6. '+
' → logprob: -16.503183364868164
    7. '+j' → logprob: -16.628183364868164
    8. '＋' → logprob: -16.628183364868164
    9. '  ' → logprob: -16.878183364868164
    10. '+k' → logprob: -16.878183364868164

Token 45: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001227276516146958
    2. ' ' → logprob: -9.250123023986816
    3. '1' → logprob: -10.625123023986816
    4. '   ' → logprob: -13.625123023986816
    5. '  ' → logprob: -14.500123023986816
    6. '２' → logprob: -15.875123023986816
    7. '۲' → logprob: -16.2501220703125
    8. '२' → logprob: -16.7501220703125
    9. '২' → logprob: -16.8126220703125
    10. ']' → logprob: -17.0001220703125

Token 46: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012892624363303185
    2. '1' → logprob: -9.125128746032715
    3. ' ' → logprob: -11.000128746032715
    4. '   ' → logprob: -13.750128746032715
    5. '２' → logprob: -14.562628746032715
    6. '  ' → logprob: -14.937628746032715
    7. '۲' → logprob: -15.000128746032715
    8. '२' → logprob: -16.00012969970703
    9. '```' → logprob: -16.06262969970703
    10. '২' → logprob: -16.37512969970703

Token 47: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01575290411710739
    2. '])' → logprob: -4.640752792358398
    3. '))' → logprob: -5.390752792358398
    4. '+' → logprob: -7.015752792358398
    5. ')
' → logprob: -8.390752792358398
    6. ')])' → logprob: -9.015752792358398
    7. ')]' → logprob: -10.015752792358398
    8. ' )' → logprob: -10.765752792358398
    9. ''])' → logprob: -10.890752792358398
    10. '})' → logprob: -11.265752792358398

Token 48: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07893803715705872
    2. '(count' → logprob: -2.5789380073547363
    3. '()' → logprob: -10.453938484191895
    4. '(B' → logprob: -12.203938484191895
    5. '('' → logprob: -12.578938484191895
    6. '(len' → logprob: -13.078938484191895
    7. '(
' → logprob: -13.078938484191895
    8. '(sum' → logprob: -13.453938484191895
    9. '(`' → logprob: -13.578938484191895
    10. '((' → logprob: -14.078938484191895

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.75000286102295
    3. '))' → logprob: -13.75000286102295
    4. '`)' → logprob: -15.50000286102295
    5. '+' → logprob: -15.75000286102295
    6. '')' → logprob: -16.000003814697266
    7. ')
' → logprob: -16.000003814697266
    8. '[' → logprob: -16.250003814697266
    9. ')`' → logprob: -16.875003814697266
    10. '）' → logprob: -17.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 31.25%
Précision (top 10): 77.08%
================================================================================
