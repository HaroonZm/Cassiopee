================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
K_X = input().split()
K = int(K_X[0])
X = int(K_X[1])
i = X - K + 1
while i < X + K:
    print(i)
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'K' (ID: 42)
  → Token d'amorce (pas de prédiction)

Token 1: '_X' (ID: 16245)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.260986328125
    2. ''' → logprob: -1.885986328125
    3. ' ' → logprob: -2.135986328125
    4. '"' → logprob: -2.260986328125
    5. '(' → logprob: -2.635986328125
    6. '0' → logprob: -3.135986328125
    7. '1' → logprob: -3.260986328125
    8. 'np' → logprob: -3.510986328125
    9. 'X' → logprob: -4.010986328125
    10. '[]' → logprob: -4.260986328125

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2364496886730194
    2. '[' → logprob: -1.8614497184753418
    3. '.' → logprob: -3.236449718475342
    4. ''' → logprob: -4.986449718475342
    5. '_' → logprob: -5.986449718475342
    6. '"' → logprob: -6.111449718475342
    7. ')' → logprob: -7.736449718475342
    8. '=' → logprob: -7.736449718475342
    9. '('' → logprob: -7.736449718475342
    10. '()' → logprob: -7.986449718475342

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8384064435958862
    2. '+' → logprob: -1.2134064435958862
    3. '.strip' → logprob: -2.213406562805176
    4. '.upper' → logprob: -2.963406562805176
    5. '.split' → logprob: -3.713406562805176
    6. '.lower' → logprob: -3.838406562805176
    7. '_' → logprob: -3.963406562805176
    8. '*' → logprob: -5.213406562805176
    9. ')' → logprob: -5.463406562805176
    10. '```' → logprob: -5.463406562805176

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25220462679862976
    2. '()' → logprob: -1.5022046566009521
    3. '('' → logprob: -8.752204895019531
    4. '(
' → logprob: -10.252204895019531
    5. '(`' → logprob: -11.502204895019531
    6. '("("' → logprob: -11.502204895019531
    7. '(

' → logprob: -11.627204895019531
    8. '"' → logprob: -11.752204895019531
    9. '```' → logprob: -12.127204895019531
    10. '(**' → logprob: -12.252204895019531

Token 7: 'K' (ID: 42)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015447042882442474
    2. '.' → logprob: -5.01544713973999
    3. '.append' → logprob: -6.51544713973999
    4. '```' → logprob: -6.64044713973999
    5. '+' → logprob: -6.89044713973999
    6. '_' → logprob: -7.01544713973999
    7. '\[' → logprob: -7.26544713973999
    8. '=' → logprob: -7.26544713973999
    9. '[
' → logprob: -7.39044713973999
    10. '[int' → logprob: -7.51544713973999

Token 8: ' =' (ID: 314)
  Prédit: '_X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.017092064023017883
    2. '_' → logprob: -4.267092227935791
    3. '[' → logprob: -6.017092227935791
    4. '[_' → logprob: -8.267091751098633
    5. '_[' → logprob: -9.892091751098633
    6. '_Y' → logprob: -10.267091751098633
    7. ' _' → logprob: -10.392091751098633
    8. '_S' → logprob: -10.517091751098633
    9. '_K' → logprob: -10.892091751098633
    10. '_x' → logprob: -11.017091751098633

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07101086527109146
    2. ' int' → logprob: -3.4460108280181885
    3. 'list' → logprob: -4.071011066436768
    4. '[int' → logprob: -4.446011066436768
    5. 'K' → logprob: -5.571011066436768
    6. ' K' → logprob: -6.321011066436768
    7. ' list' → logprob: -6.321011066436768
    8. ' [' → logprob: -8.69601058959961
    9. '[' → logprob: -9.32101058959961
    10. '[K' → logprob: -9.44601058959961

Token 10: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08096812665462494
    2. '(K' → logprob: -2.580968141555786
    3. '('' → logprob: -6.455967903137207
    4. '("("' → logprob: -7.955967903137207
    5. 'K' → logprob: -9.330967903137207
    6. ''' → logprob: -11.330967903137207
    7. '(
' → logprob: -11.330967903137207
    8. ' (' → logprob: -11.955967903137207
    9. '```' → logprob: -12.580967903137207
    10. '_K' → logprob: -12.705967903137207

Token 11: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.08952092379331589
    2. '[' → logprob: -2.4645209312438965
    3. ')' → logprob: -8.214520454406738
    4. '_[' → logprob: -9.464520454406738
    5. '[X' → logprob: -9.589520454406738
    6. '[_' → logprob: -9.839520454406738
    7. '_K' → logprob: -9.964520454406738
    8. 'X' → logprob: -10.214520454406738
    9. '```' → logprob: -12.214520454406738
    10. '[-' → logprob: -12.714520454406738

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.250000953674316
    4. '[K' → logprob: -15.250000953674316
    5. '[
' → logprob: -16.375001907348633
    6. '\[' → logprob: -16.500001907348633
    7. '```' → logprob: -17.375001907348633
    8. '(' → logprob: -18.500001907348633
    9. '['' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.375001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -12.625004768371582
    3. ' ' → logprob: -13.500004768371582
    4. ')' → logprob: -16.8750057220459
    5. '```' → logprob: -18.0625057220459
    6. '۰' → logprob: -18.1250057220459
    7. '])' → logprob: -19.0000057220459
    8. '０' → logprob: -19.1875057220459
    9. '`' → logprob: -19.1875057220459
    10. '2' → logprob: -19.4375057220459

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35047873854637146
    2. '])' → logprob: -1.2254787683486938
    3. ']' → logprob: -6.475478649139404
    4. ')]' → logprob: -8.100479125976562
    5. ')])' → logprob: -9.100479125976562
    6. ''])' → logprob: -10.850479125976562
    7. ' ])' → logprob: -10.850479125976562
    8. '[' → logprob: -11.475479125976562
    9. '))' → logprob: -12.225479125976562
    10. ' )' → logprob: -12.475479125976562

Token 15: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0014728414826095104
    2. 'K' → logprob: -7.2514729499816895
    3. ' X' → logprob: -8.126472473144531
    4. '_X' → logprob: -8.626472473144531
    5. 'N' → logprob: -8.876472473144531
    6. 'L' → logprob: -10.751472473144531
    7. '```' → logprob: -10.876472473144531
    8. '_' → logprob: -11.001472473144531
    9. 'M' → logprob: -11.126472473144531
    10. 'x' → logprob: -11.376472473144531

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5525166988372803
    2. ' =' → logprob: -1.0525166988372803
    3. '=' → logprob: -2.9275166988372803
    4. ')' → logprob: -4.677516937255859
    5. '<|end|>' → logprob: -5.302516937255859
    6. ' ' → logprob: -5.802516937255859
    7. '_token' → logprob: -6.802516937255859
    8. '[' → logprob: -7.302516937255859
    9. '<|end|>' → logprob: -7.552516937255859
    10. '_=' → logprob: -7.802516937255859

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269298940896988
    2. ' int' → logprob: -2.126929998397827
    3. ' K' → logprob: -13.751930236816406
    4. '(int' → logprob: -15.126930236816406
    5. '=int' → logprob: -15.626930236816406
    6. 'K' → logprob: -16.626930236816406
    7. ' ' → logprob: -16.751930236816406
    8. '	int' → logprob: -17.001930236816406
    9. 'input' → logprob: -17.501930236816406
    10. '[int' → logprob: -17.626930236816406

Token 18: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25266900658607483
    2. '(K' → logprob: -1.5026689767837524
    3. '(X' → logprob: -7.377668857574463
    4. ' (' → logprob: -9.752669334411621
    5. '('' → logprob: -10.627669334411621
    6. '()' → logprob: -11.377669334411621
    7. '(`' → logprob: -12.002669334411621
    8. '(k' → logprob: -13.127669334411621
    9. '((' → logprob: -13.252669334411621
    10. ' ' → logprob: -13.252669334411621

Token 19: '_X' (ID: 16245)
  Prédit: '_X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_X' → logprob: -0.18026337027549744
    2. '[' → logprob: -1.8052634000778198
    3. '[X' → logprob: -8.18026351928711
    4. ')' → logprob: -9.43026351928711
    5. '[_' → logprob: -9.68026351928711
    6. ')[' → logprob: -10.93026351928711
    7. ']' → logprob: -11.68026351928711
    8. '[
' → logprob: -11.93026351928711
    9. '```' → logprob: -11.93026351928711
    10. '   ' → logprob: -12.05526351928711

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -13.125005722045898
    3. ' [' → logprob: -13.125005722045898
    4. ')' → logprob: -14.625005722045898
    5. '][' → logprob: -15.125005722045898
    6. '```' → logprob: -15.375005722045898
    7. ')[' → logprob: -15.875005722045898
    8. '-' → logprob: -15.875005722045898
    9. '(' → logprob: -16.0000057220459
    10. '2' → logprob: -16.0000057220459

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.927930654550437e-05
    2. ' ' → logprob: -11.125029563903809
    3. '])' → logprob: -11.875029563903809
    4. '0' → logprob: -12.250029563903809
    5. '2' → logprob: -14.375029563903809
    6. ']' → logprob: -14.562529563903809
    7. '-' → logprob: -14.687529563903809
    8. '```' → logprob: -15.375029563903809
    9. ')' → logprob: -15.687529563903809
    10. '`' → logprob: -16.312528610229492

Token 22: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008274946012534201
    2. '])' → logprob: -7.125827312469482
    3. '))' → logprob: -11.62582778930664
    4. ')
' → logprob: -12.62582778930664
    5. ')])' → logprob: -12.87582778930664
    6. '）' → logprob: -13.00082778930664
    7. ''])' → logprob: -13.62582778930664
    8. '})' → logprob: -13.87582778930664
    9. '`)' → logprob: -14.12582778930664
    10. ']' → logprob: -14.25082778930664

Token 23: 'i' (ID: 72)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6025703549385071
    2. 'print' → logprob: -0.8525703549385071
    3. ' if' → logprob: -4.102570533752441
    4. 'for' → logprob: -5.352570533752441
    5. ' ' → logprob: -6.477570533752441
    6. ' print' → logprob: -6.727570533752441
    7. 'range' → logprob: -7.477570533752441
    8. ' for' → logprob: -8.102570533752441
    9. 'i' → logprob: -8.352570533752441
    10. 'sum' → logprob: -8.477570533752441

Token 24: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10493594408035278
    2. 'n' → logprob: -2.354935884475708
    3. 'm' → logprob: -6.104936122894287
    4. 'nt' → logprob: -6.979936122894287
    5. '=' → logprob: -7.354936122894287
    6. ' ' → logprob: -8.729935646057129
    7. '+' → logprob: -8.854935646057129
    8. 'nd' → logprob: -8.854935646057129
    9. ' n' → logprob: -9.104935646057129
    10. ' =' → logprob: -9.479935646057129

Token 25: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.6609700918197632
    2. '1' → logprob: -1.5359700918197632
    3. '0' → logprob: -1.7859700918197632
    4. 'K' → logprob: -2.5359702110290527
    5. 'max' → logprob: -4.785970211029053
    6. ' X' → logprob: -5.410970211029053
    7. ' ' → logprob: -5.785970211029053
    8. '-' → logprob: -6.285970211029053
    9. ' K' → logprob: -6.410970211029053
    10. '-X' → logprob: -7.035970211029053

Token 26: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.030719809234142303
    2. ' -' → logprob: -3.655719757080078
    3. '+' → logprob: -5.655719757080078
    4. ' ' → logprob: -7.655719757080078
    5. ' +' → logprob: -9.780719757080078
    6. '<|end|>' → logprob: -9.780719757080078
    7. '>' → logprob: -9.905719757080078
    8. '```' → logprob: -10.405719757080078
    9. '<' → logprob: -10.655719757080078
    10. ' for' → logprob: -10.905719757080078

Token 27: ' K' (ID: 658)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.11550524830818176
    2. 'K' → logprob: -2.2405052185058594
    3. '(' → logprob: -6.365505218505859
    4. ' (' → logprob: -7.615505218505859
    5. '1' → logprob: -8.24050521850586
    6. '(k' → logprob: -10.11550521850586
    7. ' K' → logprob: -10.74050521850586
    8. '(i' → logprob: -10.86550521850586
    9. 'i' → logprob: -11.36550521850586
    10. '(int' → logprob: -11.74050521850586

Token 28: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04312467202544212
    2. ' +' → logprob: -3.1681246757507324
    3. ' ' → logprob: -10.293124198913574
    4. '1' → logprob: -10.668124198913574
    5. '+i' → logprob: -10.668124198913574
    6. '<|end|>' → logprob: -11.168124198913574
    7. '```' → logprob: -12.043124198913574
    8. ' plus' → logprob: -13.043124198913574
    9. '+
' → logprob: -13.168124198913574
    10. '20' → logprob: -13.168124198913574

Token 29: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '0' → logprob: -15.50008487701416
    4. 'i' → logprob: -15.87508487701416
    5. '2' → logprob: -17.250085830688477
    6. '<|end|>' → logprob: -17.250085830688477
    7. '１' → logprob: -18.937585830688477
    8. '  ' → logprob: -19.125085830688477
    9. '۱' → logprob: -19.250085830688477
    10. '   ' → logprob: -19.312585830688477

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -15.500007629394531
    4. 'i' → logprob: -16.62500762939453
    5. '2' → logprob: -17.25000762939453
    6. '' → logprob: -19.37500762939453
    7. '```' → logprob: -19.43750762939453
    8. '   ' → logprob: -19.50000762939453
    9. '１' → logprob: -19.62500762939453
    10. '  ' → logprob: -19.81250762939453

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3485000729560852
    2. ' i' → logprob: -1.2235000133514404
    3. 'X' → logprob: -10.97350025177002
    4. ' X' → logprob: -11.47350025177002
    5. ' K' → logprob: -11.59850025177002
    6. 'K' → logprob: -12.47350025177002
    7. ' ' → logprob: -12.72350025177002
    8. '<' → logprob: -12.97350025177002
    9. '1' → logprob: -13.09850025177002
    10. '(i' → logprob: -13.47350025177002

Token 34: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1270737200975418
    2. '<=' → logprob: -2.1270737648010254
    3. ' <' → logprob: -9.377073287963867
    4. '<' → logprob: -10.002073287963867
    5. ' ' → logprob: -11.877073287963867
    6. ')<=' → logprob: -13.627073287963867
    7. '```' → logprob: -13.627073287963867
    8. ' <=",' → logprob: -13.752073287963867
    9. '(' → logprob: -13.877073287963867
    10. ' ≤' → logprob: -14.252073287963867

Token 35: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0448853000998497
    2. ' X' → logprob: -3.1698853969573975
    3. '=' → logprob: -6.419885158538818
    4. '=X' → logprob: -9.419885635375977
    5. '0' → logprob: -9.919885635375977
    6. ' =' → logprob: -10.169885635375977
    7. 'x' → logprob: -10.794885635375977
    8. '>X' → logprob: -11.544885635375977
    9. ':' → logprob: -12.044885635375977
    10. ' ' → logprob: -12.169885635375977

Token 36: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06303277611732483
    2. ' +' → logprob: -2.813032865524292
    3. ':' → logprob: -7.063032627105713
    4. '+:' → logprob: -8.688033103942871
    5. '++' → logprob: -10.938033103942871
    6. '>' → logprob: -12.438033103942871
    7. '+i' → logprob: -12.563033103942871
    8. '+
' → logprob: -12.938033103942871
    9. '{' → logprob: -13.563033103942871
    10. ' +
' → logprob: -13.688033103942871

Token 37: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0051503852009773254
    2. '1' → logprob: -5.755150318145752
    3. ' K' → logprob: -6.255150318145752
    4. 'i' → logprob: -10.88015079498291
    5. 'k' → logprob: -11.25515079498291
    6. ' ' → logprob: -11.88015079498291
    7. '>K' → logprob: -12.88015079498291
    8. '0' → logprob: -13.50515079498291
    9. '	K' → logprob: -13.50515079498291
    10. '+' → logprob: -13.88015079498291

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001667803735472262
    2. ':
' → logprob: -6.5016679763793945
    3. ' :' → logprob: -9.126667976379395
    4. '+:' → logprob: -10.626667976379395
    5. '+' → logprob: -10.876667976379395
    6. ' :
' → logprob: -12.626667976379395
    7. '):' → logprob: -13.501667976379395
    8. ':i' → logprob: -13.626667976379395
    9. 'print' → logprob: -14.126667976379395
    10. '{' → logprob: -14.376667976379395

Token 39: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5742789506912231
    2. 'print' → logprob: -1.0742789506912231
    3. '   ' → logprob: -2.6992788314819336
    4. ':' → logprob: -3.8242788314819336
    5. '    ' → logprob: -6.074278831481934
    6. ' ' → logprob: -6.449278831481934
    7. '	print' → logprob: -7.574278831481934
    8. '.print' → logprob: -7.699278831481934
    9. ',' → logprob: -7.824278831481934
    10. '```' → logprob: -8.699278831481934

Token 40: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00790258776396513
    2. ' print' → logprob: -4.8829026222229
    3. '   ' → logprob: -8.132902145385742
    4. '    ' → logprob: -14.382902145385742
    5. '.print' → logprob: -14.382902145385742
    6. 'if' → logprob: -15.007902145385742
    7. '	print' → logprob: -15.632902145385742
    8. 'pr' → logprob: -15.632902145385742
    9. ' ' → logprob: -15.757902145385742
    10. '(print' → logprob: -16.007902145385742

Token 41: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001931970240548253
    2. '(' → logprob: -6.251932144165039
    3. 'i' → logprob: -13.251932144165039
    4. '('' → logprob: -14.001932144165039
    5. '()' → logprob: -15.251932144165039
    6. '(f' → logprob: -15.626932144165039
    7. '(chr' → logprob: -15.751932144165039
    8. '("' → logprob: -16.12693214416504
    9. '(str' → logprob: -17.12693214416504
    10. '(end' → logprob: -18.00193214416504

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.514650183613412e-05
    2. ')
' → logprob: -10.125055313110352
    3. ' )' → logprob: -11.375055313110352
    4. ')i' → logprob: -13.125055313110352
    5. '   ' → logprob: -14.750055313110352
    6. ')`' → logprob: -15.125055313110352
    7. ')#' → logprob: -15.875055313110352
    8. ' ' → logprob: -15.875055313110352
    9. ')
' → logprob: -16.00005531311035
    10. ',' → logprob: -16.12505531311035

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21776838600635529
    2. 'i' → logprob: -2.967768430709839
    3. ' ' → logprob: -3.092768430709839
    4. '<|end|>' → logprob: -3.217768430709839
    5. '    ' → logprob: -3.842768430709839
    6. ' i' → logprob: -4.09276819229126
    7. '  ' → logprob: -4.96776819229126
    8. '+' → logprob: -5.21776819229126
    9. '	i' → logprob: -6.34276819229126
    10. ')' → logprob: -6.84276819229126

Token 44: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16457463800907135
    2. 'i' (adapté à ' i') → logprob: -1.9145746231079102
    3. ' i' → logprob: -5.66457462310791
    4. '	i' → logprob: -7.28957462310791
    5. ' ' → logprob: -9.91457462310791
    6. '  ' → logprob: -9.91457462310791
    7. '    ' → logprob: -10.78957462310791
    8. '\' → logprob: -11.66457462310791
    9. ',i' → logprob: -11.66457462310791
    10. '```' → logprob: -11.66457462310791

Token 45: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.026584746316075325
    2. '=' → logprob: -4.401584625244141
    3. '+' → logprob: -4.526584625244141
    4. ' +=' → logprob: -5.776584625244141
    5. '++' → logprob: -10.02658462524414
    6. '+++' → logprob: -12.52658462524414
    7. '+='' → logprob: -12.77658462524414
    8. '```' → logprob: -12.90158462524414
    9. ')' → logprob: -13.52658462524414
    10. '+="' → logprob: -13.90158462524414

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.250001907348633
    5. '+' → logprob: -19.562501907348633
    6. '0' → logprob: -20.062501907348633
    7. '  ' → logprob: -20.625001907348633
    8. '2' → logprob: -20.687501907348633
    9. '<|end|>' → logprob: -20.687501907348633
    10. '[' → logprob: -20.750001907348633

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. '```' → logprob: -17.1250057220459
    5. '2' → logprob: -17.8750057220459
    6. '0' → logprob: -18.1875057220459
    7. '+' → logprob: -18.3750057220459
    8. '  ' → logprob: -18.6875057220459
    9. '<|end|>' → logprob: -18.8125057220459
    10. '１' → logprob: -19.3125057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 45
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 12
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 24.44%
Précision adaptée (1ère position): 26.67%
Précision (top 10): 77.78%
================================================================================
