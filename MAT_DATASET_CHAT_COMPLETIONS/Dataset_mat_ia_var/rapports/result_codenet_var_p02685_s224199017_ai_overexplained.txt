================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    # Définition de la constante N qui servira de taille maximale des tableaux de factorielle
    N = 200002  # N est fixé à 200002 car on doit pouvoir calculer toutes les combinaisons jusqu'à ce nombre.
    # Définition de la constante MOD qui servira à prendre les résultats des opérations modulo MOD,
    # ce qui évite le dépassement de capacité et est courant dans les problèmes de combinatoire modulaire.
    MOD = 998244353  # Ce nombre est un grand nombre premier, souvent utilisé en programmation compétitive.

    # Lecture de trois entiers à partir de l'entrée standard. La fonction input() lit une ligne depuis l'entrée.
    # split() sépare la chaîne en sous-chaînes selon les espaces.
    # map(int, ...) convertit chaque sous-chaîne en entier.
    # n, m, k sont donc trois entiers extraits de cette ligne.
    n, m, k = map(int, input().split())

    # Initialisation de deux listes :
    # fact sert à stocker les factorielles (n!) pour tous n jusqu'à N-1
    # finv sert à stocker les inverses multiplicatifs des factorielles (fact[n]^(-1) modulo MOD)
    # On les initialise avec des 1 par défaut.
    fact = [1] * N  # Liste de taille N, initialisée avec des 1
    finv = [1] * N  # Même chose pour les inverses

    # Calcul des factorielles modulo MOD pour tous les i de 1 à N-1
    for i in range(1, N):
        # La factorielle de i est la factorielle de (i-1) multipliée par i
        # On prend le résultat modulo MOD à chaque étape pour éviter les dépassements
        fact[i] = fact[i - 1] * i % MOD

    # Calcul de l'inverse multiplicatif de la factorielle la plus grande (fact[N-1])
    # Ceci utilise le petit théorème de Fermat car MOD est premier.
    # pow(a, b, c) calcule (a**b)%c efficacement même pour de grands nombres.
    finv[N - 1] = pow(fact[N - 1], MOD - 2, MOD)

    # Calcul des inverses multiplicatifs des factorielles pour tous les i de N-2 à 0 dans l'ordre décroissant
    for i in range(N - 2, -1, -1):
        # L'inverse de fact[i] se calcule à partir de l'inverse de fact[i+1]
        # Multiplié par (i+1) car fact[i+1] = fact[i] * (i+1)
        # On garde tout modulo MOD
        finv[i] = finv[i + 1] * (i + 1) % MOD

    # Définition d'une fonction de calcul du coefficient binomial "n choose r"
    # C(n, r) représente le nombre de façons de choisir r éléments parmi n (combinaison)
    def C(n, r):
        # Le coefficient binomial C(n, r) se calcule par n!/(r!*(n-r)!)
        # Ici, on utilise les tables pré-calculées pour un calcul rapide sous modulo
        # La multiplication des inverses simule une division sous modulo premier.
        return fact[n] * finv[r] * finv[n - r] % MOD

    # Initialisation de la réponse : on élève m à la puissance n, puis on prend le résultat modulo MOD
    # Cela représente toutes les possibilités avant prise en compte de contraintes supplémentaires.
    ans = pow(m, n, MOD)

    # Boucle pour corriger la réponse de base en soustrayant certaines configurations
    # La boucle va de r = 1 à r = n - k - 1 inclus (car range s'arrête avant le second argument)
    for r in range(1, n - k):
        # Pour chaque r de cet intervalle, on doit retrancher un certain nombre de configurations
        # Ces configurations sont calculées à l'aide du coefficient binomial, d'une puissance de m,
        # et d'une puissance de (m-1), le tout multiplié et pris modulo MOD
        soustraction = C(n - 1, r - 1) * m * pow(m - 1, r - 1, MOD)
        # On soustrait ce terme à la réponse actuelle, tout en assurant le modulo MOD pour rester dans les bornes
        ans -= soustraction
        # Pour s'assurer que ans reste dans l'intervalle [0, MOD-1], on applique le modulo après chaque soustraction
        ans %= MOD  # Cela corrige aussi le cas où ans deviendrait négatif

    # Affichage final du résultat : print() envoie la valeur de ans à la sortie standard
    print(ans)

# Appel de la fonction principale : c'est le point d'entrée du programme
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' (adapté à ' #') → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: ' Dé' (ID: 27247)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.950888454914093
    2. '   ' → logprob: -1.0758883953094482
    3. '#' → logprob: -1.8258883953094482
    4. ' pass' → logprob: -3.2008883953094482
    5. '    ' → logprob: -3.3258883953094482
    6. ' #' → logprob: -4.075888633728027
    7. '  ' → logprob: -5.200888633728027
    8. 'pass' → logprob: -5.200888633728027
    9. 'print' → logprob: -6.575888633728027
    10. '     ' → logprob: -6.825888633728027

Token 6: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.000727921025827527
    2. 'fin' → logprob: -8.375727653503418
    3. 'fi' → logprob: -8.750727653503418
    4. 'm' → logprob: -9.500727653503418
    5. '	f' → logprob: -9.500727653503418
    6. 'mo' → logprob: -10.125727653503418
    7. '   ' → logprob: -10.125727653503418
    8. 'fen' → logprob: -10.625727653503418
    9. '\f' → logprob: -11.000727653503418
    10. ' f' → logprob: -11.750727653503418

Token 7: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.9406771659851074
    2. '   ' → logprob: -1.8156771659851074
    3. 't' → logprob: -1.9406771659851074
    4. 'tion' → logprob: -2.3156771659851074
    5. 'inition' → logprob: -2.4406771659851074
    6. 'r' → logprob: -2.8156771659851074
    7. 'ir' → logprob: -4.190677165985107
    8. 'n' → logprob: -4.565677165985107
    9. '    ' → logprob: -5.690677165985107
    10. 'ti' → logprob: -5.940677165985107

Token 8: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014449422247707844
    2. '(' → logprob: -5.389449596405029
    3. '_' → logprob: -5.889449596405029
    4. '    ' → logprob: -6.514449596405029
    5. '   ' → logprob: -6.764449596405029
    6. ' d' → logprob: -7.139449596405029
    7. ' de' → logprob: -7.514449596405029
    8. ' of' → logprob: -7.639449596405029
    9. 's' → logprob: -7.764449596405029
    10. ' )' → logprob: -7.889449596405029

Token 9: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.36721718311309814
    2. ' ' → logprob: -1.7422171831130981
    3. ' l' → logprob: -2.2422170639038086
    4. '_' → logprob: -4.492217063903809
    5. 'l' → logprob: -5.242217063903809
    6. 's' → logprob: -5.867217063903809
    7. '   ' → logprob: -6.742217063903809
    8. ' ' → logprob: -6.742217063903809
    9. '_la' → logprob: -7.242217063903809
    10. ' main' → logprob: -7.367217063903809

Token 10: ' constante' (ID: 49652)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022280391305685043
    2. '   ' → logprob: -4.522280216217041
    3. 's' → logprob: -5.772280216217041
    4. ' :' → logprob: -6.397280216217041
    5. 'r' → logprob: -6.647280216217041
    6. 'n' → logprob: -7.022280216217041
    7. '  ' → logprob: -7.272280216217041
    8. ' ' → logprob: -7.272280216217041
    9. '_' → logprob: -7.397280216217041
    10. ' #' → logprob: -7.647280216217041

Token 11: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06164853274822235
    2. '_' → logprob: -3.8116486072540283
    3. 'C' → logprob: -4.686648368835449
    4. ' ' → logprob: -5.061648368835449
    5. 'S' → logprob: -5.311648368835449
    6. 'SP' → logprob: -5.686648368835449
    7. 'SPACE' → logprob: -6.061648368835449
    8. 'CON' → logprob: -6.186648368835449
    9. 'T' → logprob: -6.561648368835449
    10. '```' → logprob: -6.686648368835449

Token 12: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3698844313621521
    2. 'N' → logprob: -1.4948844909667969
    3. 'n' → logprob: -3.244884490966797
    4. '_' → logprob: -3.494884490966797
    5. '```' → logprob: -5.244884490966797
    6. ' N' → logprob: -6.119884490966797
    7. '\' → logprob: -6.494884490966797
    8. ' =' → logprob: -6.619884490966797
    9. '=' → logprob: -6.869884490966797
    10. ' ' → logprob: -7.244884490966797

Token 13: ' serv' (ID: 2096)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.5812515020370483
    2. ' correspond' → logprob: -1.3312515020370483
    3. ' =' → logprob: -2.456251621246338
    4. '=' → logprob: -4.331251621246338
    5. ' repr' → logprob: -4.456251621246338
    6. 's' → logprob: -4.706251621246338
    7. '_' → logprob: -4.831251621246338
    8. ' vaut' → logprob: -5.081251621246338
    9. ' définit' → logprob: -5.081251621246338
    10. ' ' → logprob: -5.206251621246338

Token 14: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.00015300170343834907
    2. 'ir' → logprob: -9.000152587890625
    3. 'era' → logprob: -11.250152587890625
    4. 'a' → logprob: -11.500152587890625
    5. 'ra' → logprob: -13.125152587890625
    6. 'i' → logprob: -13.500152587890625
    7. 'irà' → logprob: -13.625152587890625
    8. 'it' → logprob: -14.000152587890625
    9. '```' → logprob: -15.000152587890625
    10. '#' → logprob: -16.000152587890625

Token 15: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.44645607471466064
    2. ' ' → logprob: -1.3214560747146606
    3. 'a' → logprob: -3.196455955505371
    4. ' a' → logprob: -3.946455955505371
    5. '   ' → logprob: -4.821455955505371
    6. 'e' → logprob: -5.321455955505371
    7. 'à' → logprob: -5.821455955505371
    8. '  ' → logprob: -5.821455955505371
    9. ' `' → logprob: -6.321455955505371
    10. 's' → logprob: -6.696455955505371

Token 16: ' taille' (ID: 41644)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.4899399280548096
    2. 'nombre' → logprob: -1.4899399280548096
    3. ' ' → logprob: -2.2399399280548096
    4. 'e' → logprob: -2.6149399280548096
    5. 't' → logprob: -2.7399399280548096
    6. 'n' → logprob: -2.7399399280548096
    7. 's' → logprob: -2.9899399280548096
    8. 'r' → logprob: -3.3649399280548096
    9. ' point' → logprob: -3.4899399280548096
    10. '=' → logprob: -3.9899399280548096

Token 17: ' maximale' (ID: 76380)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12198924273252487
    2. ' ' → logprob: -2.2469892501831055
    3. '   ' → logprob: -4.8719892501831055
    4. '  ' → logprob: -7.7469892501831055
    5. '_space' → logprob: -8.746989250183105
    6. ' _' → logprob: -8.871989250183105
    7. '=' → logprob: -9.246989250183105
    8. '```' → logprob: -9.246989250183105
    9. 'n' → logprob: -9.371989250183105
    10. '\' → logprob: -9.996989250183105

Token 18: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46471893787384033
    2. '   ' → logprob: -1.8397189378738403
    3. ' ' → logprob: -2.089718818664551
    4. 'N' → logprob: -2.964718818664551
    5. 'n' → logprob: -4.464718818664551
    6. '```' → logprob: -5.214718818664551
    7. ' :' → logprob: -5.464718818664551
    8. ' N' → logprob: -5.714718818664551
    9. '  ' → logprob: -6.089718818664551
    10. ':' → logprob: -6.339718818664551

Token 19: ' tableaux' (ID: 176599)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -1.5716798305511475
    2. 'l' → logprob: -1.8216798305511475
    3. ' tableaux' → logprob: -2.0716798305511475
    4. '_' → logprob: -2.5716798305511475
    5. '   ' → logprob: -2.9466798305511475
    6. ' données' → logprob: -3.1966798305511475
    7. 'élé' → logprob: -3.3216798305511475
    8. 'table' → logprob: -3.4466798305511475
    9. ' table' → logprob: -3.6966798305511475
    10. ' lignes' → logprob: -3.9466798305511475

Token 20: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08996638655662537
    2. 'N' → logprob: -3.464966297149658
    3. 'n' → logprob: -3.589966297149658
    4. ' ' → logprob: -4.214966297149658
    5. '\' → logprob: -5.964966297149658
    6. ':' → logprob: -6.339966297149658
    7. '```' → logprob: -6.339966297149658
    8. '_' → logprob: -6.589966297149658
    9. ' N' → logprob: -7.089966297149658
    10. ' :' → logprob: -7.089966297149658

Token 21: ' factor' (ID: 12332)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9283009171485901
    2. ' données' → logprob: -1.6783008575439453
    3. 'n' → logprob: -2.4283008575439453
    4. 'list' → logprob: -3.4283008575439453
    5. ' tableaux' → logprob: -3.4283008575439453
    6. 'table' → logprob: -3.5533008575439453
    7. 'l' → logprob: -3.8033008575439453
    8. 's' → logprob: -3.9283008575439453
    9. 'variables' → logprob: -4.303300857543945
    10. 'don' → logprob: -4.428300857543945

Token 22: 'ielle' (ID: 22380)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4260435104370117
    2. 's' → logprob: -1.3010435104370117
    3. '_' → logprob: -2.6760435104370117
    4. 'u' → logprob: -6.426043510437012
    5. '=' → logprob: -6.801043510437012
    6. 'a' → logprob: -6.801043510437012
    7. '```' → logprob: -7.301043510437012
    8. 'e' → logprob: -7.801043510437012
    9. '(' → logprob: -8.301043510437012
    10. ',' → logprob: -8.426043510437012

Token 23: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40318548679351807
    2. 'N' → logprob: -1.653185486793518
    3. 'n' → logprob: -2.4031853675842285
    4. '_' → logprob: -3.4031853675842285
    5. ' ' → logprob: -4.5281853675842285
    6. '\' → logprob: -6.9031853675842285
    7. '    
' → logprob: -7.0281853675842285
    8. '  ' → logprob: -7.4031853675842285
    9. ' N' → logprob: -7.4031853675842285
    10. '\n' → logprob: -7.6531853675842285

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15645486116409302
    2. 'N' → logprob: -2.1564548015594482
    3. 'n' → logprob: -4.281455039978027
    4. ' ' → logprob: -4.531455039978027
    5. '_' → logprob: -6.406455039978027
    6. '```' → logprob: -7.531455039978027
    7. ' :' → logprob: -7.656455039978027
    8. '    
' → logprob: -8.031455039978027
    9. '  ' → logprob: -8.156455039978027
    10. ' N' → logprob: -8.656455039978027

Token 25: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.022203918546438217
    2. '   ' → logprob: -4.1472039222717285
    3. 'n' → logprob: -5.6472039222717285
    4. ' N' → logprob: -6.6472039222717285
    5. '_' → logprob: -7.3972039222717285
    6. ' ' → logprob: -8.02220344543457
    7. '    ' → logprob: -9.77220344543457
    8. '\' → logprob: -9.89720344543457
    9. ' \' → logprob: -10.14720344543457
    10. '```' → logprob: -10.14720344543457

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033679816871881485
    2. '=' → logprob: -3.408679723739624
    3. '_' → logprob: -11.033679962158203
    4. ' ' → logprob: -11.283679962158203
    5. '   ' → logprob: -13.783679962158203
    6. '  ' → logprob: -13.908679962158203
    7. '_space' → logprob: -14.283679962158203
    8. ' =
' → logprob: -14.533679962158203
    9. ',' → logprob: -15.033679962158203
    10. 's' → logprob: -15.033679962158203

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017690006643533707
    2. '100' → logprob: -4.267690181732178
    3. '20' → logprob: -6.392690181732178
    4. '10' → logprob: -6.392690181732178
    5. '50' → logprob: -9.01768970489502
    6. '1' → logprob: -10.76768970489502
    7. '30' → logprob: -11.89268970489502
    8. '40' → logprob: -12.14268970489502
    9. '200' → logprob: -12.51768970489502
    10. '500' → logprob: -12.76768970489502

Token 28: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.15356677770614624
    2. '10' → logprob: -2.278566837310791
    3. '20' → logprob: -3.653566837310791
    4. '50' → logprob: -5.028566837310791
    5. ' ' → logprob: -6.153566837310791
    6. '200' → logprob: -6.278566837310791
    7. '500' → logprob: -6.403566837310791
    8. '30' → logprob: -7.528566837310791
    9. '1' → logprob: -8.153566360473633
    10. '300' → logprob: -8.403566360473633

Token 29: '002' (ID: 11950)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045384831726551056
    2. '' → logprob: -4.295384883880615
    3. '<|end|>' → logprob: -4.795384883880615
    4. '\' → logprob: -4.920384883880615
    5. '\n' → logprob: -5.670384883880615
    6. '    
' → logprob: -6.420384883880615
    7. '0' → logprob: -6.420384883880615
    8. '#' → logprob: -6.670384883880615
    9. ' 
' → logprob: -6.795384883880615
    10. '```' → logprob: -6.920384883880615

Token 30: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02795218676328659
    2. '' → logprob: -4.152952194213867
    3. '<|end|>' → logprob: -5.652952194213867
    4. '\n' → logprob: -6.277952194213867
    5. ' 
' → logprob: -6.527952194213867
    6. '
' → logprob: -6.902952194213867
    7. '    
' → logprob: -7.027952194213867
    8. '  
' → logprob: -7.277952194213867
    9. '\' → logprob: -7.527952194213867
    10. '```' → logprob: -7.652952194213867

Token 31: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0073409914039075375
    2. '' → logprob: -5.507340908050537
    3. '\n' → logprob: -6.882340908050537
    4. ' 
' → logprob: -7.882340908050537
    5. '
' → logprob: -8.132341384887695
    6. '    
' → logprob: -8.257341384887695
    7. 'n' → logprob: -8.257341384887695
    8. '

' → logprob: -8.382341384887695
    9. ' ' → logprob: -8.882341384887695
    10. '\' → logprob: -9.007341384887695

Token 32: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1961546540260315
    2. '\' → logprob: -2.9461545944213867
    3. '\n' → logprob: -3.6961545944213867
    4. ' 
' → logprob: -4.196154594421387
    5. ' 

' → logprob: -4.196154594421387
    6. '  
' → logprob: -4.321154594421387
    7. '#' → logprob: -4.696154594421387
    8. ''' → logprob: -4.821154594421387
    9. '0' → logprob: -5.071154594421387
    10. '  ' → logprob: -5.196154594421387

Token 33: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0890181064605713
    2. '<|end|>' → logprob: -1.3390181064605713
    3. '
' → logprob: -1.4640181064605713
    4. '#' → logprob: -2.9640181064605713
    5. ' 
' → logprob: -3.0890181064605713
    6. '  
' → logprob: -4.839017868041992
    7. '0' → logprob: -5.089017868041992
    8. '.' → logprob: -5.214017868041992
    9. '<|end|>' → logprob: -5.214017868041992
    10. ' #' → logprob: -5.339017868041992

Token 34: ' fixé' (ID: 187561)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8169842958450317
    2. ' l' → logprob: -1.8169842958450317
    3. ' une' → logprob: -2.191984176635742
    4. ' un' → logprob: -2.691984176635742
    5. ' ' → logprob: -2.816984176635742
    6. ' utilisé' → logprob: -3.441984176635742
    7. ' =' → logprob: -4.316984176635742
    8. ' égal' → logprob: -4.441984176635742
    9. 'space' → logprob: -4.691984176635742
    10. ' le' → logprob: -4.691984176635742

Token 35: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017769768834114075
    2. ' a' → logprob: -5.392769813537598
    3. '200' → logprob: -5.392769813537598
    4. '2' → logprob: -5.642769813537598
    5. '20' → logprob: -6.892769813537598
    6. ' deux' → logprob: -7.142769813537598
    7. ' un' → logprob: -7.392769813537598
    8. ' une' → logprob: -7.767769813537598
    9. '  ' → logprob: -8.267769813537598
    10. 'un' → logprob: -8.392769813537598

Token 37: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.0782351940870285
    2. ' ' → logprob: -3.078235149383545
    3. '2' → logprob: -3.578235149383545
    4. '20' → logprob: -7.828235149383545
    5. '100' → logprob: -8.078235626220703
    6. '10' → logprob: -8.703235626220703
    7. '1' → logprob: -9.578235626220703
    8. '```' → logprob: -10.203235626220703
    9. 'la' → logprob: -10.453235626220703
    10. 'le' → logprob: -10.703235626220703

Token 38: '002' (ID: 11950)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05022350698709488
    2. '2' → logprob: -3.4252235889434814
    3. '\' → logprob: -5.050223350524902
    4. ' 
' → logprob: -6.425223350524902
    5. ' ' → logprob: -6.550223350524902
    6. '
' → logprob: -6.675223350524902
    7. '\n' → logprob: -6.800223350524902
    8. '<|end|>' → logprob: -6.800223350524902
    9. '' → logprob: -7.425223350524902
    10. '*' → logprob: -8.175223350524902

Token 39: ' car' (ID: 1669)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06963793188333511
    2. '\n' → logprob: -3.5696380138397217
    3. '' → logprob: -3.6946380138397217
    4. '    
' → logprob: -5.819637775421143
    5. '\' → logprob: -6.194637775421143
    6. ' 
' → logprob: -6.444637775421143
    7. '```' → logprob: -6.819637775421143
    8. '  
' → logprob: -6.944637775421143
    9. '
' → logprob: -7.069637775421143
    10. '

' → logprob: -7.444637775421143

Token 40: ' on' (ID: 402)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5733135938644409
    2. ' l' → logprob: -2.3233137130737305
    3. ' on' → logprob: -2.4483137130737305
    4. ' nous' → logprob: -2.6983137130737305
    5. ' c' → logprob: -2.8233137130737305
    6. ' les' → logprob: -2.8233137130737305
    7. ' le' → logprob: -3.6983137130737305
    8. 'la' → logprob: -4.8233137130737305
    9. 'le' → logprob: -5.3233137130737305
    10. 'l' → logprob: -5.4483137130737305

Token 41: ' doit' (ID: 21822)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.36206263303756714
    2. ' a' → logprob: -2.362062692642212
    3. ' prévoit' → logprob: -3.112062692642212
    4. ' calcul' → logprob: -3.612062692642212
    5. ' calc' → logprob: -3.862062692642212
    6. ' veut' → logprob: -3.987062692642212
    7. 'a' → logprob: -4.237062454223633
    8. ' souhaite' → logprob: -4.362062454223633
    9. ' devra' → logprob: -4.862062454223633
    10. ' compte' → logprob: -4.862062454223633

Token 42: ' pouvoir' (ID: 27197)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.09321495145559311
    2. ' pouvoir' → logprob: -3.593214988708496
    3. ' ' → logprob: -4.093214988708496
    4. ' effectuer' → logprob: -4.343214988708496
    5. ' faire' → logprob: -5.343214988708496
    6. ' gérer' → logprob: -5.468214988708496
    7. ' factor' → logprob: -5.968214988708496
    8. ' stock' → logprob: -6.343214988708496
    9. 's' → logprob: -6.468214988708496
    10. ' réaliser' → logprob: -6.718214988708496

Token 43: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.009422539733350277
    2. ' stock' → logprob: -5.259422302246094
    3. ' gérer' → logprob: -6.759422302246094
    4. 'calcul' → logprob: -6.884422302246094
    5. ' calc' → logprob: -8.384422302246094
    6. ' effectuer' → logprob: -8.509422302246094
    7. ' couvrir' → logprob: -8.509422302246094
    8. ' calcular' → logprob: -9.134422302246094
    9. ' faire' → logprob: -9.134422302246094
    10. ' calcula' → logprob: -9.509422302246094

Token 44: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00018387178715784103
    2. 'e' → logprob: -8.875184059143066
    3. 'ate' → logprob: -11.500184059143066
    4. 'u' → logprob: -11.500184059143066
    5. 'r' → logprob: -12.000184059143066
    6. 'é' → logprob: -12.375184059143066
    7. 'a' → logprob: -12.750184059143066
    8. '#' → logprob: -13.500184059143066
    9. 's' → logprob: -13.625184059143066
    10. '\' → logprob: -13.750184059143066

Token 45: ' toutes' (ID: 17502)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5344405770301819
    2. ' des' → logprob: -1.159440517425537
    3. ' les' → logprob: -3.534440517425537
    4. ' la' → logprob: -3.784440517425537
    5. '!' → logprob: -4.534440517425537
    6. ' l' → logprob: -4.909440517425537
    7. '_' → logprob: -5.659440517425537
    8. 's' → logprob: -5.784440517425537
    9. '  ' → logprob: -5.909440517425537
    10. ' factorial' → logprob: -5.909440517425537

Token 46: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.378298819065094
    2. '_' → logprob: -1.6282987594604492
    3. ' les' → logprob: -2.878298759460449
    4. 'les' → logprob: -3.128298759460449
    5. ' _' → logprob: -5.628298759460449
    6. 's' → logprob: -6.128298759460449
    7. ' ' → logprob: -6.503298759460449
    8. '!' → logprob: -6.503298759460449
    9. 'l' → logprob: -6.628298759460449
    10. '  ' → logprob: -6.628298759460449

Token 47: ' comb' (ID: 4134)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7967604398727417
    2. 'factor' → logprob: -1.6717604398727417
    3. '!' → logprob: -1.7967604398727417
    4. ' fact' → logprob: -2.5467605590820312
    5. ' factorial' → logprob: -3.7967605590820312
    6. ' factor' → logprob: -3.7967605590820312
    7. '   ' → logprob: -4.921760559082031
    8. 'fact' → logprob: -5.046760559082031
    9. '\n' → logprob: -5.296760559082031
    10. '\t' → logprob: -5.484260559082031

Token 48: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.008668933995068073
    2. 'ina' → logprob: -5.008668899536133
    3. 'i' → logprob: -7.008668899536133
    4. 'inas' → logprob: -8.008668899536133
    5. '```' → logprob: -8.008668899536133
    6. 'ais' → logprob: -9.258668899536133
    7. 'in' → logprob: -9.258668899536133
    8. '#' → logprob: -10.133668899536133
    9. 'inations' → logprob: -10.133668899536133
    10. '``' → logprob: -10.133668899536133

Token 49: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.049456145614385605
    2. 's' → logprob: -3.1744561195373535
    3. 'o' → logprob: -5.1744561195373535
    4. '```' → logprob: -8.174456596374512
    5. '#' → logprob: -8.674456596374512
    6. 'on' → logprob: -9.424456596374512
    7. 'n' → logprob: -10.174456596374512
    8. 'os' → logprob: -10.424456596374512
    9. 'sons' → logprob: -10.424456596374512
    10. '0' → logprob: -10.424456596374512

Token 50: ' jusqu' (ID: 21961)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31152015924453735
    2. ' ' → logprob: -2.4365200996398926
    3. '\' → logprob: -2.9365200996398926
    4. 's' → logprob: -3.5615200996398926
    5. ',' → logprob: -3.9365200996398926
    6. '.' → logprob: -4.561520099639893
    7. ')' → logprob: -4.561520099639893
    8. '(' → logprob: -4.686520099639893
    9. 'def' → logprob: -4.936520099639893
    10. '_n' → logprob: -5.436520099639893

Token 51: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.03567197546362877
    2. 'à' → logprob: -3.9106719493865967
    3. ' à' → logprob: -4.910672187805176
    4. ''' → logprob: -5.785672187805176
    5. ''au' → logprob: -6.785672187805176
    6. '’à' → logprob: -6.785672187805176
    7. ''a' → logprob: -7.160672187805176
    8. 'a' → logprob: -7.160672187805176
    9. 'au' → logprob: -8.160672187805176
    10. '   ' → logprob: -8.535672187805176

Token 52: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021391157060861588
    2. '200' → logprob: -4.52139139175415
    3. '2' → logprob: -5.02139139175415
    4. ' n' → logprob: -7.02139139175415
    5. 'n' → logprob: -7.39639139175415
    6. '0' → logprob: -7.89639139175415
    7. '1' → logprob: -8.146390914916992
    8. ' N' → logprob: -8.146390914916992
    9. '100' → logprob: -8.396390914916992
    10. '10' → logprob: -8.771390914916992

Token 53: ' nombre' (ID: 9733)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.7019931077957153
    2. ' ' → logprob: -2.076992988586426
    3. 'que' → logprob: -2.076992988586426
    4. ' valeur' → logprob: -2.326992988586426
    5. 'l' → logprob: -2.576992988586426
    6. '#' → logprob: -2.951992988586426
    7. 'val' → logprob: -3.076992988586426
    8. 'à' → logprob: -3.576992988586426
    9. 'qui' → logprob: -3.576992988586426
    10. ' ligne' → logprob: -3.826992988586426

Token 54: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.682671844959259
    2. '   ' → logprob: -2.0576717853546143
    3. '\n' → logprob: -2.5576717853546143
    4. '    
' → logprob: -2.5576717853546143
    5. '' → logprob: -2.8076717853546143
    6. ' ' → logprob: -2.8076717853546143
    7. 'n' → logprob: -3.5576717853546143
    8. ' 
' → logprob: -3.8076717853546143
    9. '\' → logprob: -4.432672023773193
    10. '  ' → logprob: -5.182672023773193

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062129464000463486
    2. '\n' → logprob: -3.312129497528076
    3. '   ' → logprob: -5.062129497528076
    4. '    
' → logprob: -5.187129497528076
    5. '\' → logprob: -5.312129497528076
    6. '' → logprob: -6.187129497528076
    7. 'n' → logprob: -6.687129497528076
    8. ' 
' → logprob: -6.812129497528076
    9. '```' → logprob: -7.062129497528076
    10. '  
' → logprob: -8.312129020690918

Token 56: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9614719748497009
    2. '\' → logprob: -1.3364720344543457
    3. '\n' → logprob: -2.2114720344543457
    4. 'n' → logprob: -2.8364720344543457
    5. '    
' → logprob: -2.8364720344543457
    6. '   ' → logprob: -3.3364720344543457
    7. '' → logprob: -3.5864720344543457
    8. ' 
' → logprob: -3.8364720344543457
    9. ' ' → logprob: -4.961472034454346
    10. '```' → logprob: -4.961472034454346

Token 57: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1742552518844604
    2. '#' → logprob: -1.2992552518844604
    3. '    
' → logprob: -2.29925537109375
    4. 'f' → logprob: -3.04925537109375
    5. ' 
' → logprob: -3.17425537109375
    6. '```' → logprob: -3.17425537109375
    7. 'n' → logprob: -3.29925537109375
    8. ' ' → logprob: -3.67425537109375
    9. '_' → logprob: -3.79925537109375
    10. 'factor' → logprob: -4.42425537109375

Token 58: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0004857266612816602
    2. 'fi' → logprob: -8.50048542022705
    3. 'fin' → logprob: -9.00048542022705
    4. '#' → logprob: -9.00048542022705
    5. '   ' → logprob: -11.37548542022705
    6. 'c' → logprob: -11.87548542022705
    7. '```' → logprob: -12.87548542022705
    8. 't' → logprob: -13.37548542022705
    9. 'v' → logprob: -13.75048542022705
    10. '  ' → logprob: -14.00048542022705

Token 59: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.30159786343574524
    2. 'i' → logprob: -1.4265978336334229
    3. 'inition' → logprob: -4.301598072052002
    4. 'it' → logprob: -5.301598072052002
    5. 'e' → logprob: -7.676598072052002
    6. 't' → logprob: -8.051597595214844
    7. '   ' → logprob: -8.301597595214844
    8. 'itional' → logprob: -9.301597595214844
    9. '#' → logprob: -9.426597595214844
    10. 'a' → logprob: -9.551597595214844

Token 60: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5782238245010376
    2. ' des' → logprob: -1.2032238245010376
    3. '_' → logprob: -2.453223705291748
    4. ' de' → logprob: -3.953223705291748
    5. '   ' → logprob: -4.203223705291748
    6. '    ' → logprob: -4.828223705291748
    7. '  ' → logprob: -6.203223705291748
    8. ' d' → logprob: -6.203223705291748
    9. 'des' → logprob: -6.578223705291748
    10. 's' → logprob: -6.828223705291748

Token 61: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17040058970451355
    2. ' l' → logprob: -2.545400619506836
    3. ' factorial' → logprob: -3.420400619506836
    4. ' ' → logprob: -4.295400619506836
    5. 'l' → logprob: -4.545400619506836
    6. 'la' → logprob: -4.795400619506836
    7. 'factor' → logprob: -5.545400619506836
    8. ' factor' → logprob: -5.545400619506836
    9. ' max' → logprob: -7.170400619506836
    10. '    ' → logprob: -7.295400619506836

Token 62: ' constante' (ID: 49652)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -1.1735963821411133
    2. 'fact' → logprob: -1.9235963821411133
    3. '_factor' → logprob: -2.1735963821411133
    4. '_' → logprob: -2.2985963821411133
    5. ' constante' → logprob: -2.5485963821411133
    6. ' factorial' → logprob: -3.0485963821411133
    7. '_fact' → logprob: -3.2985963821411133
    8. ' variable' → logprob: -3.5485963821411133
    9. 'const' → logprob: -4.048596382141113
    10. ' factor' → logprob: -4.298596382141113

Token 63: ' MOD' (ID: 32868)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.6072627305984497
    2. ' ' → logprob: -1.9822627305984497
    3. ' MAX' → logprob: -1.9822627305984497
    4. ' max' → logprob: -2.48226261138916
    5. '_' → logprob: -3.10726261138916
    6. ' MOD' → logprob: -3.23226261138916
    7. 's' → logprob: -3.48226261138916
    8. ' K' → logprob: -3.60726261138916
    9. 'MAX' → logprob: -3.73226261138916
    10. ' C' → logprob: -3.73226261138916

Token 64: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009230977855622768
    2. '=' → logprob: -4.759231090545654
    3. ' ' → logprob: -7.509231090545654
    4. ' =
' → logprob: -10.259230613708496
    5. ',' → logprob: -11.509230613708496
    6. '_' → logprob: -11.509230613708496
    7. '   ' → logprob: -12.509230613708496
    8. ' ,' → logprob: -12.759230613708496
    9. '  ' → logprob: -13.009230613708496
    10. '<|end|>' → logprob: -13.759230613708496

Token 65: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012304904870688915
    2. '=' → logprob: -4.512304782867432
    3. ' ' → logprob: -6.887304782867432
    4. '<|end|>' → logprob: -9.51230525970459
    5. '  ' → logprob: -9.63730525970459
    6. '_' → logprob: -10.38730525970459
    7. ' ,' → logprob: -11.63730525970459
    8. ',' → logprob: -11.76230525970459
    9. ' =
' → logprob: -11.76230525970459
    10. ')' → logprob: -11.88730525970459

Token 66: 'ira' (ID: 2633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.434060275554657
    2. ' =' → logprob: -1.0590603351593018
    3. 'e' → logprob: -6.434060096740723
    4. 'é' → logprob: -6.684060096740723
    5. 'er' → logprob: -7.684060096740723
    6. 'ateur' → logprob: -7.934060096740723
    7. '=int' → logprob: -8.309060096740723
    8. '   ' → logprob: -8.684060096740723
    9. 'u' → logprob: -9.059060096740723
    10. '_' → logprob: -9.059060096740723

Token 67: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045851174741983414
    2. '=' → logprob: -3.295851230621338
    3. '<|end|>' → logprob: -5.045851230621338
    4. '_' → logprob: -7.420851230621338
    5. '<|end|>' → logprob: -8.79585075378418
    6. ' ' → logprob: -9.17085075378418
    7. ',' → logprob: -9.29585075378418
    8. ')' → logprob: -9.29585075378418
    9. ' à' → logprob: -10.04585075378418
    10. '  ' → logprob: -10.04585075378418

Token 68: ' prendre' (ID: 24257)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026707211509346962
    2. '100' → logprob: -4.026707172393799
    3. '10' → logprob: -6.026707172393799
    4. ' (' → logprob: -6.151707172393799
    5. '1' → logprob: -7.151707172393799
    6. '  ' → logprob: -7.526707172393799
    7. ' calcul' → logprob: -7.776707172393799
    8. ' l' → logprob: -8.026707649230957
    9. ' '' → logprob: -8.651707649230957
    10. '600' → logprob: -8.776707649230957

Token 69: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.030377337709069252
    2. '_' → logprob: -3.7803773880004883
    3. '<|end|>' → logprob: -5.780377388000488
    4. '  ' → logprob: -7.030377388000488
    5. 'mod' → logprob: -7.655377388000488
    6. ' modulo' → logprob: -8.155377388000488
    7. '```' → logprob: -8.405377388000488
    8. '    ' → logprob: -8.530377388000488
    9. ' mod' → logprob: -8.655377388000488
    10. '%' → logprob: -8.905377388000488

Token 70: ' résultats' (ID: 48985)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04955064132809639
    2. '_' → logprob: -3.6745505332946777
    3. '  ' → logprob: -4.049550533294678
    4. ' espaces' → logprob: -5.799550533294678
    5. ' _' → logprob: -8.049551010131836
    6. 'mod' → logprob: -8.424551010131836
    7. ' ```' → logprob: -8.424551010131836
    8. ' mod' → logprob: -8.674551010131836
    9. '  ' → logprob: -8.674551010131836
    10. ' modulus' → logprob: -8.924551010131836

Token 71: ' des' (ID: 731)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.4603099524974823
    2. ' ' → logprob: -2.0853099822998047
    3. ' =' → logprob: -2.8353099822998047
    4. ' des' → logprob: -3.0853099822998047
    5. '_mod' → logprob: -3.9603099822998047
    6. 'mod' → logprob: -4.085309982299805
    7. '_' → logprob: -4.210309982299805
    8. ' au' → logprob: -4.335309982299805
    9. ' à' → logprob: -4.585309982299805
    10. ' %' → logprob: -4.710309982299805

Token 72: ' opérations' (ID: 102793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1530514508485794
    2. ' comb' → logprob: -2.6530513763427734
    3. ' combin' → logprob: -3.2780513763427734
    4. 'com' → logprob: -4.528051376342773
    5. '_' → logprob: -5.278051376342773
    6. '  ' → logprob: -5.403051376342773
    7. ' calcul' → logprob: -5.778051376342773
    8. ' espaces' → logprob: -5.903051376342773
    9. ' combinations' → logprob: -6.778051376342773
    10. ' résultats' → logprob: -7.403051376342773

Token 73: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.7952733635902405
    2. ' ' → logprob: -1.7952733039855957
    3. ' %' → logprob: -2.5452733039855957
    4. '%' → logprob: -2.6702733039855957
    5. ' à' → logprob: -3.4202733039855957
    6. '_' → logprob: -3.5452733039855957
    7. 'mod' → logprob: -3.5452733039855957
    8. ' en' → logprob: -3.9202733039855957
    9. ' ```' → logprob: -4.170273303985596
    10. '```' → logprob: -4.170273303985596

Token 74: ' MOD' (ID: 32868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15594786405563354
    2. '<|end|>' → logprob: -2.6559479236602783
    3. '10' → logprob: -3.1559479236602783
    4. ' )' → logprob: -5.530947685241699
    5. '  ' → logprob: -5.655947685241699
    6. '20' → logprob: -5.905947685241699
    7. '_' → logprob: -5.905947685241699
    8. 'space' → logprob: -6.030947685241699
    9. '32' → logprob: -6.530947685241699
    10. ' space' → logprob: -6.655947685241699

Token 75: ',
' (ID: 412)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3884253203868866
    2. '=' → logprob: -1.138425350189209
    3. ' =
' → logprob: -7.388425350189209
    4. ' ' → logprob: -7.513425350189209
    5. '   ' → logprob: -9.38842487335205
    6. '_' → logprob: -9.51342487335205
    7. ',' → logprob: -9.63842487335205
    8. '\' → logprob: -10.01342487335205
    9. '=
' → logprob: -10.51342487335205
    10. ' :' → logprob: -10.88842487335205

Token 76: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39265015721321106
    2. ' =' → logprob: -1.3926501274108887
    3. '=' → logprob: -3.1426501274108887
    4. ' )' → logprob: -4.017650127410889
    5. '_' → logprob: -6.017650127410889
    6. '   ' → logprob: -6.142650127410889
    7. ')' → logprob: -6.142650127410889
    8. '    ' → logprob: -6.267650127410889
    9. '  ' → logprob: -6.392650127410889
    10. '1' → logprob: -7.267650127410889

Token 77: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1436629742383957
    2. ' =' → logprob: -2.893662929534912
    3. '   ' → logprob: -3.768662929534912
    4. '=' → logprob: -4.143662929534912
    5. ' )' → logprob: -4.393662929534912
    6. '    ' → logprob: -4.768662929534912
    7. '  ' → logprob: -5.518662929534912
    8. '1' → logprob: -5.768662929534912
    9. '0' → logprob: -5.893662929534912
    10. '2' → logprob: -6.518662929534912

Token 78: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018230954185128212
    2. '10' → logprob: -5.64323091506958
    3. '1' → logprob: -6.01823091506958
    4. '2' → logprob: -6.14323091506958
    5. '  ' → logprob: -6.39323091506958
    6. '100' → logprob: -6.76823091506958
    7. '20' → logprob: -7.01823091506958
    8. '0' → logprob: -7.39323091506958
    9. '    ' → logprob: -7.39323091506958
    10. '32' → logprob: -7.51823091506958

Token 79: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6594715714454651
    2. '=' → logprob: -1.0344715118408203
    3. ' ' → logprob: -2.4094715118408203
    4. '_' → logprob: -5.15947151184082
    5. '.' → logprob: -5.53447151184082
    6. ')' → logprob: -5.53447151184082
    7. ' space' → logprob: -5.90947151184082
    8. ' qui' → logprob: -6.15947151184082
    9. ' )' → logprob: -6.28447151184082
    10. ' is' → logprob: -6.28447151184082

Token 80: ' év' (ID: 23692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.26215398311615
    2. ' permettra' → logprob: -2.0121541023254395
    3. ' ' → logprob: -2.2621541023254395
    4. ' est' → logprob: -2.5121541023254395
    5. ' permet' → logprob: -2.7621541023254395
    6. ' sera' → logprob: -3.0121541023254395
    7. '=' → logprob: -3.1371541023254395
    8. ' va' → logprob: -3.1371541023254395
    9. ' is' → logprob: -3.2621541023254395
    10. ' )' → logprob: -4.5121541023254395

Token 81: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.48493972420692444
    2. 'itera' → logprob: -1.234939694404602
    3. 'it' → logprob: -2.4849398136138916
    4. 'ita' → logprob: -6.3599395751953125
    5. 'i' → logprob: -6.4849395751953125
    6. 'ité' → logprob: -7.3599395751953125
    7. 'itent' → logprob: -7.6099395751953125
    8. 'iter' → logprob: -7.6099395751953125
    9. 'v' → logprob: -7.8599395751953125
    10. 'e' → logprob: -7.9849395751953125

Token 82: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.53038489818573
    2. ' d' → logprob: -1.65538489818573
    3. ' des' → logprob: -2.6553850173950195
    4. ' de' → logprob: -3.2803850173950195
    5. ' l' → logprob: -3.2803850173950195
    6. '_' → logprob: -4.0303850173950195
    7. 'l' → logprob: -4.5303850173950195
    8. ' ' → logprob: -4.7803850173950195
    9. ' ' → logprob: -4.9053850173950195
    10. ' un' → logprob: -5.2803850173950195

Token 83: ' dépasse' (ID: 165701)
  Prédit: ' déb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déb' → logprob: -0.42120811343193054
    2. ' dépasse' → logprob: -1.671208143234253
    3. ' overflow' → logprob: -2.421208143234253
    4. 's' → logprob: -3.421208143234253
    5. 'd' → logprob: -3.921208143234253
    6. 'overflow' → logprob: -5.546207904815674
    7. 'dé' → logprob: -5.921207904815674
    8. ' problème' → logprob: -6.671207904815674
    9. ' risque' → logprob: -6.671207904815674
    10. '%' → logprob: -6.671207904815674

Token 84: 'ment' (ID: 508)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010076811304315925
    2. 'ment' → logprob: -7.126007556915283
    3. 'd' → logprob: -9.751008033752441
    4. '-' → logprob: -9.876008033752441
    5. 'r' → logprob: -10.751008033752441
    6. 'e' → logprob: -11.126008033752441
    7. 'u' → logprob: -11.251008033752441
    8. 'n' → logprob: -11.501008033752441
    9. 'a' → logprob: -12.376008033752441
    10. 'p' → logprob: -12.376008033752441

Token 85: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04807737097144127
    2. ' de' → logprob: -3.673077344894409
    3. '_' → logprob: -4.173077583312988
    4. ' _' → logprob: -6.173077583312988
    5. ' )' → logprob: -6.548077583312988
    6. ' des' → logprob: -7.423077583312988
    7. ' du' → logprob: -7.798077583312988
    8. ')' → logprob: -8.423077583312988
    9. '.' → logprob: -8.923077583312988
    10. '  ' → logprob: -9.048077583312988

Token 86: ' capacité' (ID: 62575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1495651006698608
    2. ' la' → logprob: -1.1495651006698608
    3. ' l' → logprob: -1.5245651006698608
    4. ' ' → logprob: -2.0245652198791504
    5. ' ' → logprob: -6.14956521987915
    6. ' i' → logprob: -6.39956521987915
    7. '-' → logprob: -6.64956521987915
    8. 's' → logprob: -6.64956521987915
    9. '```' → logprob: -6.64956521987915
    10. '  ' → logprob: -6.89956521987915

Token 87: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9406682252883911
    2. ' ' → logprob: -1.0656682252883911
    3. '=' → logprob: -1.4406682252883911
    4. ' =' → logprob: -4.440668106079102
    5. ',' → logprob: -4.690668106079102
    6. '\' → logprob: -6.690668106079102
    7. '.' → logprob: -6.815668106079102
    8. ' ,' → logprob: -7.065668106079102
    9. ':' → logprob: -7.565668106079102
    10. ' 
' → logprob: -7.690668106079102

Token 88: ' est' (ID: 893)
  Prédit: ' garantit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garantit' → logprob: -1.2212730646133423
    2. ' des' → logprob: -1.7212730646133423
    3. ' les' → logprob: -2.0962729454040527
    4. ' permet' → logprob: -2.2212729454040527
    5. ' facilite' → logprob: -2.9712729454040527
    6. ' d' → logprob: -3.0962729454040527
    7. ' l' → logprob: -3.0962729454040527
    8. ' assure' → logprob: -3.7212729454040527
    9. ' la' → logprob: -3.9712729454040527
    10. 'd' → logprob: -4.221272945404053

Token 89: ' courant' (ID: 74694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6711044311523438
    2. '_' → logprob: -1.7961044311523438
    3. 's' → logprob: -2.4211044311523438
    4. ' un' → logprob: -2.6711044311523438
    5. ' ```' → logprob: -3.9211044311523438
    6. ' une' → logprob: -4.171104431152344
    7. 'a' → logprob: -4.171104431152344
    8. ' a' → logprob: -4.296104431152344
    9. '```' → logprob: -4.296104431152344
    10. ' ' → logprob: -4.921104431152344

Token 90: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30175700783729553
    2. ' dans' → logprob: -2.0517570972442627
    3. ' en' → logprob: -2.6767570972442627
    4. '_' → logprob: -3.5517570972442627
    5. ' )' → logprob: -4.801756858825684
    6. ' in' → logprob: -4.801756858825684
    7. ' ,' → logprob: -5.801756858825684
    8. '.' → logprob: -6.176756858825684
    9. 'dans' → logprob: -6.426756858825684
    10. ' ```' → logprob: -6.551756858825684

Token 91: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07232477515935898
    2. ' l' → logprob: -3.822324752807617
    3. ' ' → logprob: -3.947324752807617
    4. ' le' → logprob: -4.447324752807617
    5. 'les' → logprob: -4.947324752807617
    6. ' la' → logprob: -5.197324752807617
    7. ' des' → logprob: -6.072324752807617
    8. 'l' → logprob: -6.947324752807617
    9. ' de' → logprob: -8.322324752807617
    10. 'le' → logprob: -8.572324752807617

Token 92: ' problèmes' (ID: 49822)
  Prédit: ' problèmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problèmes' → logprob: -1.1942224502563477
    2. ' calcul' → logprob: -1.4442224502563477
    3. ' compét' → logprob: -2.6942224502563477
    4. ' problems' → logprob: -2.6942224502563477
    5. ' ' → logprob: -2.8192224502563477
    6. ' probl' → logprob: -2.8192224502563477
    7. 's' → logprob: -3.4442224502563477
    8. ' concours' → logprob: -3.4442224502563477
    9. ' c' → logprob: -3.8192224502563477
    10. 'c' → logprob: -3.9442224502563477

Token 93: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5748641490936279
    2. ' de' → logprob: -1.074864149093628
    3. ' ' → logprob: -3.824864149093628
    4. ' modulo' → logprob: -3.949864149093628
    5. ' d' → logprob: -4.074864387512207
    6. 's' → logprob: -4.574864387512207
    7. ' `' → logprob: -4.824864387512207
    8. '.' → logprob: -6.074864387512207
    9. ' en' → logprob: -6.074864387512207
    10. ' =' → logprob: -6.449864387512207

Token 94: ' combin' (ID: 25307)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0085556507110596
    2. ' programmation' → logprob: -1.2585556507110596
    3. 'c' → logprob: -2.7585556507110596
    4. ' compét' → logprob: -3.0085556507110596
    5. 'com' → logprob: -3.1335556507110596
    6. 's' → logprob: -3.1335556507110596
    7. ' c' → logprob: -3.8835556507110596
    8. ' l' → logprob: -3.8835556507110596
    9. ' combin' → logprob: -4.2585554122924805
    10. 'l' → logprob: -4.2585554122924805

Token 95: 'atoire' (ID: 41651)
  Prédit: 'atoire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoire' → logprob: -0.25535014271736145
    2. 'atoires' → logprob: -1.630350112915039
    3. 'a' → logprob: -4.380350112915039
    4. 'ato' → logprob: -4.505350112915039
    5. '```' → logprob: -5.880350112915039
    6. 'at' → logprob: -6.505350112915039
    7. 'atoi' → logprob: -7.005350112915039
    8. '#' → logprob: -9.255350112915039
    9. 'atorial' → logprob: -9.255350112915039
    10. 'atori' → logprob: -9.255350112915039

Token 96: ' mod' (ID: 1812)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3233686685562134
    2. ' ' → logprob: -1.4483686685562134
    3. '=' → logprob: -1.6983686685562134
    4. ',' → logprob: -2.448368549346924
    5. ' =' → logprob: -2.698368549346924
    6. ' :' → logprob: -2.698368549346924
    7. ':' → logprob: -2.823368549346924
    8. ' ,' → logprob: -4.823368549346924
    9. '.' → logprob: -5.323368549346924
    10. '   ' → logprob: -5.573368549346924

Token 97: 'ulaire' (ID: 48584)
  Prédit: '37'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '37' → logprob: -1.704939365386963
    2. 'ulo' → logprob: -1.704939365386963
    3. '=' → logprob: -1.829939365386963
    4. '\' → logprob: -2.204939365386963
    5. 'ule' → logprob: -2.454939365386963
    6. 'ULO' → logprob: -3.454939365386963
    7. ')' → logprob: -3.829939365386963
    8. '#' → logprob: -3.829939365386963
    9. '409' → logprob: -3.954939365386963
    10. '```' → logprob: -3.954939365386963

Token 98: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1246644258499146
    2. ':' → logprob: -1.8746644258499146
    3. ' ' → logprob: -1.8746644258499146
    4. '
' → logprob: -2.749664306640625
    5. '_' → logprob: -2.999664306640625
    6. '\' → logprob: -3.249664306640625
    7. '2' → logprob: -3.499664306640625
    8. ' :' → logprob: -3.624664306640625
    9. ' 
' → logprob: -3.624664306640625
    10. ',' → logprob: -3.749664306640625

Token 99: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.06807692348957062
    2. '
' → logprob: -3.5680768489837646
    3. '  
' → logprob: -4.568077087402344
    4. ' ' → logprob: -4.568077087402344
    5. '   
' → logprob: -5.693077087402344
    6. '\' → logprob: -5.818077087402344
    7. ' 

' → logprob: -5.943077087402344
    8. '    
' → logprob: -6.068077087402344
    9. '=' → logprob: -6.943077087402344
    10. '\n' → logprob: -7.443077087402344

Token 100: ' MOD' (ID: 32868)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1060320138931274
    2. '
' → logprob: -1.4810320138931274
    3. ' ' → logprob: -1.9810320138931274
    4. '\' → logprob: -2.606031894683838
    5. 'MOD' (adapté à ' MOD') → logprob: -2.731031894683838
    6. ' MOD' → logprob: -3.106031894683838
    7. 'M' → logprob: -3.356031894683838
    8. '\n' → logprob: -3.731031894683838
    9. '```' → logprob: -4.981031894683838
    10. '0' → logprob: -5.231031894683838

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025276257656514645
    2. ' ' → logprob: -6.127527713775635
    3. '=' → logprob: -8.002527236938477
    4. ' =
' → logprob: -12.127527236938477
    5. ' ,' → logprob: -14.127527236938477
    6. '  ' → logprob: -14.627527236938477
    7. ' =)' → logprob: -15.002527236938477
    8. ' ' → logprob: -15.752527236938477
    9. ' =
' → logprob: -16.252527236938477
    10. 'space' → logprob: -16.377527236938477

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00031139038037508726
    2. '10' → logprob: -8.125311851501465
    3. '100' → logprob: -11.125311851501465
    4. '1' → logprob: -14.875311851501465
    5. ' ' → logprob: -16.50031089782715
    6. ' (' → logprob: -16.87531089782715
    7. '998' → logprob: -17.75031089782715
    8. '109' → logprob: -18.37531089782715
    9. ' int' → logprob: -18.62531089782715
    10. ' ‌' → logprob: -19.37531089782715

Token 103: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.34904929995536804
    2. '100' → logprob: -1.2240493297576904
    3. '998' → logprob: -7.849049091339111
    4. ' ' → logprob: -8.72404956817627
    5. '1' → logprob: -9.97404956817627
    6. 'int' → logprob: -13.47404956817627
    7. '999' → logprob: -13.72404956817627
    8. '123' → logprob: -14.22404956817627
    9. '```' → logprob: -14.84904956817627
    10. '   ' → logprob: -15.59904956817627

Token 104: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -7.896309739408025e-07
    2. '247' → logprob: -15.000000953674316
    3. '243' → logprob: -15.250000953674316
    4. '245' → logprob: -16.25
    5. '24' → logprob: -17.0
    6. '242' → logprob: -17.125
    7. '2' → logprob: -17.625
    8. '444' → logprob: -17.75
    9. '_' → logprob: -17.875
    10. '344' → logprob: -18.375

Token 105: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -9.639096970204264e-05
    2. '853' → logprob: -9.250096321105957
    3. '357' → logprob: -16.000097274780273
    4. '857' → logprob: -17.250097274780273
    5. '3' → logprob: -17.375097274780273
    6. '253' → logprob: -19.000097274780273
    7. '35' → logprob: -19.375097274780273
    8. '351' → logprob: -19.875097274780273
    9. '```' → logprob: -20.125097274780273
    10. '257' → logprob: -20.125097274780273

Token 106: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013391975313425064
    2. '' → logprob: -5.513391971588135
    3. '    
' → logprob: -6.263391971588135
    4. '   ' → logprob: -6.388391971588135
    5. ' 
' → logprob: -6.638391971588135
    6. '<|end|>' → logprob: -6.763391971588135
    7. '

' → logprob: -6.888391971588135
    8. '\n' → logprob: -7.388391971588135
    9. '
' → logprob: -7.513391971588135
    10. ' ' → logprob: -8.263392448425293

Token 107: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02179761417210102
    2. '' → logprob: -5.0217976570129395
    3. '

' → logprob: -6.0217976570129395
    4. '
    
' → logprob: -6.0217976570129395
    5. '\n' → logprob: -6.1467976570129395
    6. ')' → logprob: -6.5217976570129395
    7. '    
' → logprob: -6.6467976570129395
    8. ' ' → logprob: -6.8967976570129395
    9. '<|end|>' → logprob: -6.8967976570129395
    10. '   ' → logprob: -7.0217976570129395

Token 108: ' Ce' (ID: 14228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7821869254112244
    2. '
' → logprob: -1.2821869850158691
    3. '<|end|>' → logprob: -1.7821869850158691
    4. ' 
' → logprob: -3.407186985015869
    5. ' 

' → logprob: -3.907186985015869
    6. '' → logprob: -4.282186985015869
    7. ' 
    
' → logprob: -5.157186985015869
    8. '

' → logprob: -5.532186985015869
    9. '\n' → logprob: -5.657186985015869
    10. '<|end|>' → logprob: -5.782186985015869

Token 109: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042160335928201675
    2. ' space' → logprob: -4.167160511016846
    3. ' is' → logprob: -4.917160511016846
    4. ' espace' → logprob: -5.917160511016846
    5. ' ```' → logprob: -6.042160511016846
    6. '<|end|>' → logprob: -6.167160511016846
    7. ' n' → logprob: -6.667160511016846
    8. ' code' → logprob: -6.667160511016846
    9. ' ' → logprob: -6.792160511016846
    10. '_' → logprob: -6.792160511016846

Token 110: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2552180886268616
    2. '<|end|>' → logprob: -1.5052180290222168
    3. ' is' → logprob: -6.630218029022217
    4. '<|end|>' → logprob: -7.005218029022217
    5. '  ' → logprob: -8.005218505859375
    6. ')' → logprob: -9.255218505859375
    7. ',' → logprob: -9.255218505859375
    8. '\n' → logprob: -9.505218505859375
    9. '
' → logprob: -9.630218505859375
    10. ' 
' → logprob: -9.755218505859375

Token 111: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20256178081035614
    2. ' un' → logprob: -1.9525617361068726
    3. ' a' → logprob: -4.077561855316162
    4. ' une' → logprob: -4.827561855316162
    5. '<|end|>' → logprob: -4.952561855316162
    6. 'a' → logprob: -5.702561855316162
    7. ' souvent' → logprob: -6.202561855316162
    8. 'l' → logprob: -6.952561855316162
    9. 'u' → logprob: -7.952561855316162
    10. ' l' → logprob: -8.077561378479004

Token 112: ' grand' (ID: 6363)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08044534921646118
    2. ' nombre' → logprob: -2.8304452896118164
    3. ' entier' → logprob: -4.955445289611816
    4. ' espace' → logprob: -5.830445289611816
    5. 'nombre' → logprob: -6.955445289611816
    6. ' mod' → logprob: -7.080445289611816
    7. ' premier' → logprob: -7.080445289611816
    8. 'e' → logprob: -7.205445289611816
    9. '  ' → logprob: -7.705445289611816
    10. ',' → logprob: -7.705445289611816

Token 113: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08999275416135788
    2. ' prime' → logprob: -2.9649927616119385
    3. '<|end|>' → logprob: -4.089992523193359
    4. ' nombre' → logprob: -4.464992523193359
    5. ' premier' → logprob: -6.339992523193359
    6. 'prime' → logprob: -6.589992523193359
    7. ' espace' → logprob: -7.464992523193359
    8. ',' → logprob: -8.33999252319336
    9. '  ' → logprob: -8.46499252319336
    10. 'nombre' → logprob: -8.58999252319336

Token 114: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.019784128293395042
    2. 'prem' → logprob: -4.894783973693848
    3. ' ' → logprob: -5.269783973693848
    4. ' primo' → logprob: -6.144783973693848
    5. ',' → logprob: -6.394783973693848
    6. ' Premier' → logprob: -7.144783973693848
    7. ' prime' → logprob: -7.144783973693848
    8. '  ' → logprob: -7.519783973693848
    9. ' ,' → logprob: -8.144783973693848
    10. 'Premier' → logprob: -8.769783973693848

Token 115: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44362807273864746
    2. '<|end|>' → logprob: -1.8186280727386475
    3. '\n' → logprob: -2.6936280727386475
    4. ')' → logprob: -3.4436280727386475
    5. '' → logprob: -3.9436280727386475
    6. '<|end|>' → logprob: -3.9436280727386475
    7. '   ' → logprob: -4.068628311157227
    8. '    
' → logprob: -4.943628311157227
    9. ' ' → logprob: -5.318628311157227
    10. ',' → logprob: -5.318628311157227

Token 116: ' souvent' (ID: 28137)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027538025751709938
    2. '<|end|>' → logprob: -4.027537822723389
    3. ' 
' → logprob: -5.777537822723389
    4. '\n' → logprob: -6.402537822723389
    5. '  ' → logprob: -6.902537822723389
    6. ' \' → logprob: -7.652537822723389
    7. '   ' → logprob: -7.652537822723389
    8. ')' → logprob: -7.652537822723389
    9. '\' → logprob: -7.902537822723389
    10. '' → logprob: -7.902537822723389

Token 117: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.15475837886333466
    2. '<|end|>' → logprob: -2.1547584533691406
    3. ' used' → logprob: -4.154758453369141
    4. ' utilisée' → logprob: -5.279758453369141
    5. ' ' → logprob: -5.654758453369141
    6. ' utilisés' → logprob: -6.904758453369141
    7. 'used' → logprob: -7.904758453369141
    8. '<|end|>' → logprob: -8.15475845336914
    9. ' utilizado' → logprob: -8.52975845336914
    10. ' utilisées' → logprob: -8.52975845336914

Token 118: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' programmation' (ID: 166376)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8610208034515381
    2. 'les' → logprob: -1.111020803451538
    3. ' programmation' → logprob: -2.236020803451538
    4. ' des' → logprob: -3.736020803451538
    5. ' compét' → logprob: -3.986020803451538
    6. ' compétition' → logprob: -4.111021041870117
    7. ' algorithm' → logprob: -4.486021041870117
    8. 'pro' → logprob: -4.861021041870117
    9. ' la' → logprob: -4.986021041870117
    10. '```' → logprob: -5.111021041870117

Token 120: ' compét' (ID: 34024)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.2639330625534058
    2. ' ' → logprob: -1.5139330625534058
    3. 's' → logprob: -2.2639331817626953
    4. '.' → logprob: -3.2639331817626953
    5. ' )' → logprob: -3.2639331817626953
    6. ' ,' → logprob: -3.2639331817626953
    7. ' de' → logprob: -3.3889331817626953
    8. ' pour' → logprob: -3.6389331817626953
    9. ' competitive' → logprob: -3.6389331817626953
    10. ',' → logprob: -3.8889331817626953

Token 121: 'itive' (ID: 4171)
  Prédit: 'itive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itive' → logprob: -0.0017264684429392219
    2. 'itve' → logprob: -6.7517266273498535
    3. 'itiv' → logprob: -8.251726150512695
    4. 'itif' → logprob: -8.876726150512695
    5. 'it' → logprob: -9.251726150512695
    6. '>' → logprob: -11.751726150512695
    7. 'itiva' → logprob: -11.876726150512695
    8. 't' → logprob: -12.126726150512695
    9. 'e' → logprob: -12.126726150512695
    10. 'itives' → logprob: -12.376726150512695

Token 122: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02991640940308571
    2. '\n' → logprob: -4.904916286468506
    3. '    
' → logprob: -5.404916286468506
    4. '   ' → logprob: -5.654916286468506
    5. '<|end|>' → logprob: -5.779916286468506
    6. '' → logprob: -6.154916286468506
    7. ')' → logprob: -6.654916286468506
    8. '

' → logprob: -6.904916286468506
    9. '
    
' → logprob: -6.904916286468506
    10. '  
' → logprob: -7.154916286468506

Token 123: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0630272924900055
    2. '

' → logprob: -3.8130273818969727
    3. 'n' → logprob: -4.438027381896973
    4. '   ' → logprob: -4.688027381896973
    5. '    
' → logprob: -4.938027381896973
    6. '' → logprob: -5.563027381896973
    7. ' 
' → logprob: -6.313027381896973
    8. '
    
' → logprob: -6.813027381896973
    9. ' ' → logprob: -7.688027381896973
    10. 'def' → logprob: -8.188027381896973

Token 124: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21583834290504456
    2. '    
' → logprob: -2.7158384323120117
    3. '#' (adapté à ' #') → logprob: -3.4658384323120117
    4. 'n' → logprob: -3.7158384323120117
    5. '
' → logprob: -3.7158384323120117
    6. '   ' → logprob: -4.215838432312012
    7. ' 
' → logprob: -4.840838432312012
    8. '' → logprob: -5.215838432312012
    9. '  
' → logprob: -5.590838432312012
    10. 'factor' → logprob: -5.590838432312012

Token 125: ' Lecture' (ID: 106534)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.8161215782165527
    2. 'factor' → logprob: -1.0661215782165527
    3. '#' → logprob: -1.8161215782165527
    4. 'f' → logprob: -3.8161215782165527
    5. 'fac' → logprob: -4.816121578216553
    6. ' #' → logprob: -4.941121578216553
    7. ' factorial' → logprob: -5.441121578216553
    8. ' fact' → logprob: -5.691121578216553
    9. '   ' → logprob: -6.566121578216553
    10. 'import' → logprob: -7.191121578216553

Token 126: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12676902115345
    2. '<|end|>' → logprob: -2.8767690658569336
    3. 's' → logprob: -4.251769065856934
    4. '_' → logprob: -4.876769065856934
    5. '<|end|>' → logprob: -5.001769065856934
    6. '(' → logprob: -5.126769065856934
    7. ' (' → logprob: -5.251769065856934
    8. '   ' → logprob: -5.626769065856934
    9. '    ' → logprob: -5.751769065856934
    10. '(s' → logprob: -6.126769065856934

Token 127: ' trois' (ID: 25564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8944616913795471
    2. ' l' → logprob: -1.8944616317749023
    3. ' la' → logprob: -2.1444616317749023
    4. '<|end|>' → logprob: -2.3944616317749023
    5. ' input' → logprob: -2.3944616317749023
    6. 's' → logprob: -3.5194616317749023
    7. ' n' → logprob: -3.7694616317749023
    8. 'n' → logprob: -3.8944616317749023
    9. 'l' → logprob: -4.019461631774902
    10. '<|end|>' → logprob: -4.394461631774902

Token 128: ' ent' (ID: 1121)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.15554918348789215
    2. ' ' → logprob: -2.2805492877960205
    3. ' espaces' → logprob: -3.9055492877960205
    4. ' nombres' → logprob: -4.280549049377441
    5. ' ent' → logprob: -5.405549049377441
    6. ' entier' → logprob: -7.030549049377441
    7. ' numbers' → logprob: -8.030549049377441
    8. ' integer' → logprob: -8.030549049377441
    9. ' valeurs' → logprob: -8.655549049377441
    10. ' variables' → logprob: -9.155549049377441

Token 129: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.03968271613121033
    2. 'ières' → logprob: -3.664682626724243
    3. 'r' → logprob: -5.164682865142822
    4. 'ers' → logprob: -5.664682865142822
    5. 'ier' → logprob: -6.289682865142822
    6. 'er' → logprob: -7.289682865142822
    7. 'i' → logprob: -7.914682865142822
    8. 'e' → logprob: -8.164682388305664
    9. 'rees' → logprob: -8.789682388305664
    10. 'ière' → logprob: -9.289682388305664

Token 130: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16794881224632263
    2. ',' → logprob: -3.5429487228393555
    3. '  ' → logprob: -3.7929487228393555
    4. 'a' → logprob: -3.7929487228393555
    5. '(' → logprob: -3.9179487228393555
    6. ' (' → logprob: -4.5429487228393555
    7. 's' → logprob: -4.6679487228393555
    8. ' ,' → logprob: -4.6679487228393555
    9. '<|end|>' → logprob: -4.9179487228393555
    10. 'r' → logprob: -5.4179487228393555

Token 131: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.05969063937664032
    2. 'part' → logprob: -3.1846907138824463
    3. 'l' → logprob: -5.559690475463867
    4. 'p' → logprob: -5.684690475463867
    5. 'n' → logprob: -5.684690475463867
    6. 'b' → logprob: -6.934690475463867
    7. 'r' → logprob: -7.809690475463867
    8. 'from' → logprob: -7.809690475463867
    9. 't' → logprob: -7.809690475463867
    10. '_' → logprob: -8.059690475463867

Token 132: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0090584754943848
    2. ' ' → logprob: -1.2590584754943848
    3. ' de' → logprob: -2.1340584754943848
    4. ' des' → logprob: -2.6340584754943848
    5. ' la' → logprob: -3.2590584754943848
    6. '<|end|>' → logprob: -3.2590584754943848
    7. ' input' → logprob: -3.6340584754943848
    8. ' l' → logprob: -3.8840584754943848
    9. 'd' → logprob: -5.384058475494385
    10. '<|end|>' → logprob: -5.759058475494385

Token 133: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23373952507972717
    2. ' l' → logprob: -2.1087396144866943
    3. 'input' → logprob: -3.1087396144866943
    4. 'l' → logprob: -3.4837396144866943
    5. ' la' → logprob: -5.108739376068115
    6. ' ' → logprob: -5.733739376068115
    7. '_input' → logprob: -7.983739376068115
    8. ' une' → logprob: -8.233739852905273
    9. ' stdin' → logprob: -8.358739852905273
    10. '=input' → logprob: -8.358739852905273

Token 134: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.7913224697113037
    2. 'a' → logprob: -1.4163224697113037
    3. 'input' → logprob: -1.5413224697113037
    4. 'e' → logprob: -3.6663224697113037
    5. ' input' → logprob: -3.6663224697113037
    6. ''' → logprob: -4.041322708129883
    7. 'es' → logprob: -5.166322708129883
    8. 'entrée' → logprob: -5.916322708129883
    9. '=input' → logprob: -5.916322708129883
    10. ''utilisateur' → logprob: -6.416322708129883

Token 135: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21610286831855774
    2. ',' → logprob: -2.3411028385162354
    3. 'a' → logprob: -3.8411028385162354
    4. 's' → logprob: -3.9661028385162354
    5. 'n' → logprob: -4.5911030769348145
    6. ' ,' → logprob: -4.7161030769348145
    7. '  ' → logprob: -5.0911030769348145
    8. 'r' → logprob: -5.0911030769348145
    9. ' =' → logprob: -5.5911030769348145
    10. '_' → logprob: -5.7161030769348145

Token 136: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.317353218793869
    2. ' ' → logprob: -1.6923532485961914
    3. 'a' → logprob: -3.8173532485961914
    4. ' ,' → logprob: -3.9423532485961914
    5. '(' → logprob: -4.692353248596191
    6. 'n' → logprob: -5.067353248596191
    7. ':' → logprob: -5.192353248596191
    8. '  ' → logprob: -5.567353248596191
    9. '   ' → logprob: -5.567353248596191
    10. 's' → logprob: -5.692353248596191

Token 137: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8663961291313171
    2. 'n' → logprob: -0.9913961291313171
    3. 'a' → logprob: -1.991396188735962
    4. '(' → logprob: -3.866396188735962
    5. 's' → logprob: -4.866395950317383
    6. 'r' → logprob: -5.116395950317383
    7. '\' → logprob: -5.491395950317383
    8. 'i' → logprob: -5.491395950317383
    9. ',' → logprob: -5.741395950317383
    10. ' (' → logprob: -5.741395950317383

Token 138: ' fonction' (ID: 17610)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.9956000447273254
    2. 's' → logprob: -1.9955999851226807
    3. ' line' → logprob: -1.9955999851226807
    4. 'n' → logprob: -2.2455999851226807
    5. ' input' → logprob: -2.7455999851226807
    6. ' n' → logprob: -2.9955999851226807
    7. ' user' → logprob: -4.37060022354126
    8. 'a' → logprob: -4.49560022354126
    9. 'input' → logprob: -4.62060022354126
    10. 'x' → logprob: -4.62060022354126

Token 139: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07920701056718826
    2. 'input' → logprob: -2.579206943511963
    3. '=input' → logprob: -9.454207420349121
    4. '(input' → logprob: -9.579207420349121
    5. ' ' → logprob: -9.954207420349121
    6. 's' → logprob: -10.829207420349121
    7. ' `' → logprob: -10.954207420349121
    8. ' map' → logprob: -11.579207420349121
    9. ' ' → logprob: -11.579207420349121
    10. ' int' → logprob: -11.829207420349121

Token 140: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024538185447454453
    2. '().' → logprob: -3.774538278579712
    3. '(' → logprob: -7.024538040161133
    4. '(),' → logprob: -9.274538040161133
    5. 's' → logprob: -10.149538040161133
    6. ',' → logprob: -10.399538040161133
    7. '())' → logprob: -10.649538040161133
    8. '();' → logprob: -10.899538040161133
    9. '<|end|>' → logprob: -10.899538040161133
    10. '()]' → logprob: -11.024538040161133

Token 141: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02618010900914669
    2. '().' → logprob: -3.7761800289154053
    3. '<|end|>' → logprob: -7.026180267333984
    4. '(' → logprob: -7.401180267333984
    5. ',' → logprob: -7.901180267333984
    6. 's' → logprob: -8.401180267333984
    7. '.' → logprob: -8.526180267333984
    8. '();' → logprob: -9.401180267333984
    9. '()
' → logprob: -9.526180267333984
    10. ')' → logprob: -9.526180267333984

Token 142: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31147825717926025
    2. ' ' → logprob: -2.0614781379699707
    3. ' une' → logprob: -2.5614781379699707
    4. ' un' → logprob: -3.5614781379699707
    5. '(' → logprob: -5.186478137969971
    6. ' la' → logprob: -5.311478137969971
    7. ' l' → logprob: -5.561478137969971
    8. 'a' → logprob: -5.686478137969971
    9. ' a' → logprob: -5.686478137969971
    10. '<|end|>' → logprob: -5.686478137969971

Token 143: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.11112614721059799
    2. ' ' → logprob: -3.111126184463501
    3. 'ligne' → logprob: -3.486126184463501
    4. ' seule' → logprob: -4.611125946044922
    5. ' chaîne' → logprob: -4.736125946044922
    6. 'l' → logprob: -5.486125946044922
    7. ' line' → logprob: -6.361125946044922
    8. ' l' → logprob: -7.111125946044922
    9. ' chaine' → logprob: -7.486125946044922
    10. 's' → logprob: -7.736125946044922

Token 144: ' depuis' (ID: 16277)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4212935268878937
    2. 'l' → logprob: -2.1712934970855713
    3. ' stdin' → logprob: -2.6712934970855713
    4. '<|end|>' → logprob: -3.1712934970855713
    5. ' la' → logprob: -3.5462934970855713
    6. 'stdin' → logprob: -3.7962934970855713
    7. ' standard' → logprob: -4.04629373550415
    8. ' ' → logprob: -4.29629373550415
    9. ' input' → logprob: -4.67129373550415
    10. 'standard' → logprob: -4.79629373550415

Token 146: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2225358933210373
    2. 'input' → logprob: -2.5975358486175537
    3. ''' → logprob: -2.9725358486175537
    4. 'entrée' → logprob: -3.0975358486175537
    5. ''utilisateur' → logprob: -4.722536087036133
    6. 'a' → logprob: -5.347536087036133
    7. 'e' → logprob: -5.347536087036133
    8. ' input' → logprob: -6.222536087036133
    9. 'stdin' → logprob: -6.472536087036133
    10. '')' → logprob: -6.472536087036133

Token 147: '.
' (ID: 558)
  Prédit: ' standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' standard' → logprob: -0.4392254948616028
    2. 'standard' → logprob: -1.564225435256958
    3. '<|end|>' → logprob: -3.314225435256958
    4. '()' → logprob: -3.689225435256958
    5. ' utilisateur' → logprob: -3.689225435256958
    6. ' ' → logprob: -4.189225673675537
    7. 's' → logprob: -4.439225673675537
    8. 'user' → logprob: -4.689225673675537
    9. ',' → logprob: -5.314225673675537
    10. ' user' → logprob: -6.314225673675537

Token 148: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15287987887859344
    2. 'a' → logprob: -2.1528799533843994
    3. ' n' → logprob: -4.77787971496582
    4. ' ' → logprob: -5.27787971496582
    5. 'x' → logprob: -6.02787971496582
    6. ' a' → logprob: -6.65287971496582
    7. 'r' → logprob: -6.65287971496582
    8. 'm' → logprob: -6.90287971496582
    9. '(' → logprob: -7.15287971496582
    10. 'i' → logprob: -7.15287971496582

Token 149: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.054013121873140335
    2. ' n' → logprob: -3.1790130138397217
    3. 'a' → logprob: -5.054013252258301
    4. 'x' → logprob: -5.929013252258301
    5. 's' → logprob: -7.554013252258301
    6. ' ' → logprob: -8.4290132522583
    7. ' x' → logprob: -8.5540132522583
    8. 'u' → logprob: -8.6790132522583
    9. ' a' → logprob: -8.9290132522583
    10. 'k' → logprob: -9.1790132522583

Token 150: ' split' (ID: 12648)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.00283944606781
    2. 'n' → logprob: -1.00283944606781
    3. ' n' → logprob: -1.87783944606781
    4. ' a' → logprob: -3.0028395652770996
    5. 'x' → logprob: -3.1278395652770996
    6. 'l' → logprob: -5.2528395652771
    7. ' x' → logprob: -5.3778395652771
    8. 'A' → logprob: -5.6278395652771
    9. ' l' → logprob: -6.6278395652771
    10. ' A' → logprob: -6.7528395652771

Token 151: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005479318089783192
    2. '(' → logprob: -5.380479335784912
    3. '('' → logprob: -7.380479335784912
    4. '().' → logprob: -8.630478858947754
    5. ' ()' → logprob: -10.505478858947754
    6. '("' → logprob: -11.880478858947754
    7. '("("' → logprob: -11.880478858947754
    8. '())' → logprob: -13.005478858947754
    9. '()]' → logprob: -13.380478858947754
    10. '(),' → logprob: -13.380478858947754

Token 152: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16400031745433807
    2. '().' → logprob: -1.9140002727508545
    3. '(' → logprob: -6.289000511169434
    4. '<|end|>' → logprob: -6.789000511169434
    5. ' ()' → logprob: -8.789000511169434
    6. '('' → logprob: -9.289000511169434
    7. '.split' → logprob: -9.539000511169434
    8. '()>' → logprob: -9.789000511169434
    9. '()[' → logprob: -9.789000511169434
    10. ' ' → logprob: -10.414000511169434

Token 153: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.00019102399528492242
    2. 'par' → logprob: -9.000190734863281
    3. 'parer' → logprob: -10.875190734863281
    4. 'p' → logprob: -11.000190734863281
    5. 'parent' → logprob: -11.375190734863281
    6. 'parate' → logprob: -12.500190734863281
    7. 'para' → logprob: -12.625190734863281
    8. 'paration' → logprob: -12.750190734863281
    9. 'pa' → logprob: -13.000190734863281
    10. '
' → logprob: -13.500190734863281

Token 154: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6316911578178406
    2. '()' → logprob: -1.0066912174224854
    3. ' les' → logprob: -3.5066912174224854
    4. ' l' → logprob: -3.7566912174224854
    5. 'la' → logprob: -3.7566912174224854
    6. ' ' → logprob: -5.131690979003906
    7. 'l' → logprob: -5.631690979003906
    8. '('' → logprob: -5.756690979003906
    9. ' cette' → logprob: -6.256690979003906
    10. 'les' → logprob: -6.506690979003906

Token 155: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2625153362751007
    2. ' ligne' → logprob: -2.5125153064727783
    3. 'entrée' → logprob: -2.7625153064727783
    4. 'chaine' → logprob: -3.2625153064727783
    5. 'ligne' → logprob: -3.8875153064727783
    6. ' chaine' → logprob: -4.512515544891357
    7. ' input' → logprob: -5.887515544891357
    8. 'cha' → logprob: -6.012515544891357
    9. ' entrée' → logprob: -6.262515544891357
    10. 's' → logprob: -6.387515544891357

Token 156: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4391041398048401
    2. ' en' → logprob: -2.6891040802001953
    3. ' ' → logprob: -2.8141040802001953
    4. 's' → logprob: -3.0641040802001953
    5. 'input' → logprob: -3.0641040802001953
    6. ' input' → logprob: -3.6891040802001953
    7. ' les' → logprob: -4.314104080200195
    8. ' l' → logprob: -4.314104080200195
    9. ' par' → logprob: -4.689104080200195
    10. ' la' → logprob: -4.939104080200195

Token 157: ' sous' (ID: 14487)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5524014234542847
    2. ' des' → logprob: -1.8024014234542847
    3. ' une' → logprob: -1.8024014234542847
    4. ' trois' → logprob: -3.177401542663574
    5. ' tokens' → logprob: -3.927401542663574
    6. ' espace' → logprob: -5.177401542663574
    7. ' liste' → logprob: -5.302401542663574
    8. ' un' → logprob: -5.427401542663574
    9. 'tokens' → logprob: -6.177401542663574
    10. ' ' → logprob: -6.302401542663574

Token 158: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.34702908992767334
    2. '-' → logprob: -2.222029209136963
    3. '_' → logprob: -2.847029209136963
    4. ' chain' → logprob: -3.472029209136963
    5. 'chain' → logprob: -3.597029209136963
    6. 'strings' → logprob: -4.972029209136963
    7. '_chain' → logprob: -4.972029209136963
    8. '_m' → logprob: -5.097029209136963
    9. 'chains' → logprob: -5.097029209136963
    10. '-chain' → logprob: -5.222029209136963

Token 159: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.020128611475229263
    2. 'î' → logprob: -4.2701287269592285
    3. 'ines' → logprob: -5.7701287269592285
    4. 'nes' → logprob: -6.1451287269592285
    5. 'ï' → logprob: -9.14512825012207
    6. '```' → logprob: -9.39512825012207
    7. '   ' → logprob: -9.52012825012207
    8. 'r' → logprob: -9.89512825012207
    9. 'îne' → logprob: -10.27012825012207
    10. '	' → logprob: -10.39512825012207

Token 160: ' selon' (ID: 27571)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1543279886245728
    2. ',' → logprob: -1.7793279886245728
    3. 's' → logprob: -2.154327869415283
    4. ' par' → logprob: -2.654327869415283
    5. '[]' → logprob: -2.779327869415283
    6. '<|end|>' → logprob: -3.029327869415283
    7. 'par' → logprob: -4.029327869415283
    8. ' ' → logprob: -4.154327869415283
    9. ' en' → logprob: -4.154327869415283
    10. '```' → logprob: -4.154327869415283

Token 161: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7813257575035095
    2. ' l' → logprob: -0.9063257575035095
    3. ' des' → logprob: -2.6563258171081543
    4. ' espaces' → logprob: -3.5313258171081543
    5. ' ' → logprob: -4.031325817108154
    6. 'l' → logprob: -5.406325817108154
    7. 'les' → logprob: -5.406325817108154
    8. ' un' → logprob: -6.031325817108154
    9. ' '' → logprob: -6.281325817108154
    10. ''esp' → logprob: -6.781325817108154

Token 162: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.023444626480340958
    2. 'esp' → logprob: -3.773444652557373
    3. 'es' → logprob: -9.898444175720215
    4. 'spaces' → logprob: -10.023444175720215
    5. ''esp' → logprob: -10.273444175720215
    6. ' espace' → logprob: -10.523444175720215
    7. ' espacios' → logprob: -11.273444175720215
    8. ' spaces' → logprob: -11.523444175720215
    9. ' esp' → logprob: -11.898444175720215
    10. ' espaços' → logprob: -12.648444175720215

Token 163: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009942601434886456
    2. ')' → logprob: -5.134942531585693
    3. '().' → logprob: -5.759942531585693
    4. '())' → logprob: -8.509943008422852
    5. '(' → logprob: -8.759943008422852
    6. ',' → logprob: -9.384943008422852
    7. '(),' → logprob: -9.509943008422852
    8. '()
' → logprob: -9.509943008422852
    9. ' )' → logprob: -9.634943008422852
    10. '.' → logprob: -9.759943008422852

Token 164: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12032446265220642
    2. 'x' → logprob: -3.1203243732452393
    3. 'n' → logprob: -3.4953243732452393
    4. ' a' → logprob: -3.8703243732452393
    5. 'A' → logprob: -4.620324611663818
    6. ' n' → logprob: -6.245324611663818
    7. 'k' → logprob: -6.620324611663818
    8. ' A' → logprob: -6.870324611663818
    9. ' x' → logprob: -7.120324611663818
    10. 'i' → logprob: -7.370324611663818

Token 165: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30197572708129883
    2. 'n' → logprob: -2.301975727081299
    3. ' a' → logprob: -2.676975727081299
    4. 'x' → logprob: -3.176975727081299
    5. ' n' → logprob: -3.801975727081299
    6. 'A' → logprob: -4.301975727081299
    7. ' x' → logprob: -5.426975727081299
    8. ' A' → logprob: -5.551975727081299
    9. 'u' → logprob: -7.176975727081299
    10. 'l' → logprob: -7.176975727081299

Token 166: ' map' (ID: 4014)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.076397605240345
    2. ' a' → logprob: -3.076397657394409
    3. 'n' → logprob: -4.82639741897583
    4. 'x' → logprob: -5.20139741897583
    5. 'l' → logprob: -5.45139741897583
    6. 'A' → logprob: -5.70139741897583
    7. ' n' → logprob: -6.20139741897583
    8. 'k' → logprob: -6.70139741897583
    9. ' x' → logprob: -7.57639741897583
    10. ' A' → logprob: -7.70139741897583

Token 167: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03460470214486122
    2. '(' → logprob: -3.409604787826538
    3. '(str' → logprob: -7.034604549407959
    4. '(lambda' → logprob: -9.784605026245117
    5. '(list' → logprob: -12.284605026245117
    6. '=int' → logprob: -12.409605026245117
    7. '(
' → logprob: -12.534605026245117
    8. '<int' → logprob: -13.159605026245117
    9. 'int' → logprob: -13.284605026245117
    10. '[int' → logprob: -13.409605026245117

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12220712006092072
    2. ')' → logprob: -2.2472071647644043
    3. ',input' → logprob: -4.872207164764404
    4. ' ,' → logprob: -7.372207164764404
    5. ' )' → logprob: -7.497207164764404
    6. '(input' → logprob: -9.247206687927246
    7. ',int' → logprob: -9.747206687927246
    8. ' ' → logprob: -10.122206687927246
    9. ',)' → logprob: -10.247206687927246
    10. ')(' → logprob: -10.372206687927246

Token 169: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11550430208444595
    2. ' input' → logprob: -2.240504264831543
    3. ')' → logprob: -5.990504264831543
    4. ' )' → logprob: -9.365504264831543
    5. ' ' → logprob: -10.365504264831543
    6. '(input' → logprob: -10.990504264831543
    7. '   ' → logprob: -11.115504264831543
    8. '<input' → logprob: -12.365504264831543
    9. '),' → logprob: -12.740504264831543
    10. '[input' → logprob: -12.740504264831543

Token 170: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033924952149391174
    2. '(n' → logprob: -5.1589250564575195
    3. ' )' → logprob: -5.1589250564575195
    4. 'n' → logprob: -5.6589250564575195
    5. ' permet' → logprob: -6.1589250564575195
    6. ' n' → logprob: -6.2839250564575195
    7. ')n' → logprob: -6.2839250564575195
    8. '(
' → logprob: -6.6589250564575195
    9. '(' → logprob: -6.9089250564575195
    10. ',' → logprob: -7.5339250564575195

Token 171: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0020435559563338757
    2. 'i' → logprob: -6.752043724060059
    3. 'e' → logprob: -8.502043724060059
    4. 'issant' → logprob: -9.002043724060059
    5. 'ie' → logprob: -9.002043724060059
    6. ' it' → logprob: -9.252043724060059
    7. 'issez' → logprob: -9.877043724060059
    8. 't' → logprob: -10.252043724060059
    9. 'issent' → logprob: -10.377043724060059
    10. 'ir' → logprob: -10.877043724060059

Token 172: ' chaque' (ID: 21194)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2432568222284317
    2. '(' → logprob: -2.6182568073272705
    3. 'input' → logprob: -3.4932568073272705
    4. ')' → logprob: -3.7432568073272705
    5. '(str' → logprob: -4.36825704574585
    6. ' ' → logprob: -4.61825704574585
    7. 's' → logprob: -4.86825704574585
    8. 'l' → logprob: -5.11825704574585
    9. '(int' → logprob: -5.11825704574585
    10. ' les' → logprob: -5.11825704574585

Token 173: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07263854146003723
    2. ' élément' → logprob: -3.822638511657715
    3. 's' → logprob: -5.197638511657715
    4. 'token' → logprob: -5.322638511657715
    5. 'entrée' → logprob: -5.447638511657715
    6. ' token' → logprob: -5.447638511657715
    7. 'chaine' → logprob: -5.572638511657715
    8. ' sous' → logprob: -5.572638511657715
    9. ' mot' → logprob: -5.697638511657715
    10. ' chaîne' → logprob: -5.947638511657715

Token 174: '-cha' (ID: 163177)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9467114806175232
    2. '_' → logprob: -1.696711540222168
    3. ' chaînes' → logprob: -1.946711540222168
    4. '-cha' → logprob: -2.071711540222168
    5. ' chaîne' → logprob: -2.946711540222168
    6. '_chain' → logprob: -3.696711540222168
    7. '-' → logprob: -3.821711540222168
    8. 'chain' → logprob: -3.946711540222168
    9. '-chain' → logprob: -3.946711540222168
    10. '   ' → logprob: -5.821711540222168

Token 175: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.011606632731854916
    2. 'î' → logprob: -5.136606693267822
    3. 'ne' → logprob: -6.386606693267822
    4. 'înes' → logprob: -6.386606693267822
    5. 'ine' → logprob: -6.636606693267822
    6. 'ïne' → logprob: -7.511606693267822
    7. 'în' → logprob: -8.761606216430664
    8. 'Î' → logprob: -9.011606216430664
    9. 'îner' → logprob: -11.136606216430664
    10. 'île' → logprob: -11.386606216430664

Token 176: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16428792476654053
    2. ' en' → logprob: -2.03928804397583
    3. ',' → logprob: -4.91428804397583
    4. '<|end|>' → logprob: -5.03928804397583
    5. ' into' → logprob: -5.91428804397583
    6. ' )' → logprob: -6.03928804397583
    7. 'en' → logprob: -7.16428804397583
    8. ' to' → logprob: -8.289287567138672
    9. ' ' → logprob: -8.414287567138672
    10. ' ,' → logprob: -8.789287567138672

Token 177: ' entier' (ID: 80473)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5257349610328674
    2. ' int' → logprob: -1.2757349014282227
    3. ' un' → logprob: -3.0257349014282227
    4. 'int' → logprob: -3.4007349014282227
    5. ' entier' → logprob: -3.7757349014282227
    6. 'ent' → logprob: -4.775734901428223
    7. ' integers' → logprob: -4.900734901428223
    8. ' ent' → logprob: -5.650734901428223
    9. ' integer' → logprob: -5.900734901428223
    10. ' ' → logprob: -6.400734901428223

Token 178: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29806482791900635
    2. '(' → logprob: -1.7980648279190063
    3. ' )' → logprob: -3.673064708709717
    4. ',' → logprob: -4.048064708709717
    5. '   ' → logprob: -4.548064708709717
    6. '(
' → logprob: -4.923064708709717
    7. '(*' → logprob: -5.173064708709717
    8. '(n' → logprob: -5.423064708709717
    9. '()' → logprob: -5.798064708709717
    10. '    ' → logprob: -5.923064708709717

Token 179: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4730471670627594
    2. ' a' → logprob: -1.848047137260437
    3. 'n' → logprob: -2.5980472564697266
    4. ' n' → logprob: -2.9730472564697266
    5. 'x' → logprob: -3.2230472564697266
    6. 'A' → logprob: -4.098047256469727
    7. ' x' → logprob: -4.223047256469727
    8. ' A' → logprob: -4.598047256469727
    9. '   ' → logprob: -4.723047256469727
    10. '    
' → logprob: -5.973047256469727

Token 180: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3048865795135498
    2. ' a' → logprob: -1.9298865795135498
    3. 'x' → logprob: -3.05488657951355
    4. 'n' → logprob: -3.42988657951355
    5. ' n' → logprob: -4.304886817932129
    6. ' x' → logprob: -4.429886817932129
    7. 'A' → logprob: -5.179886817932129
    8. ' A' → logprob: -5.929886817932129
    9. '   ' → logprob: -6.679886817932129
    10. 'l' → logprob: -6.679886817932129

Token 181: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043914344161748886
    2. 'A' → logprob: -4.543914318084717
    3. 'x' → logprob: -4.543914318084717
    4. 'n' → logprob: -4.793914318084717
    5. ' a' → logprob: -4.793914318084717
    6. 'l' → logprob: -6.293914318084717
    7. 'k' → logprob: -7.293914318084717
    8. ' n' → logprob: -7.918914318084717
    9. ' A' → logprob: -8.043914794921875
    10. 't' → logprob: -8.168914794921875

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001234428636962548
    2. ' ,' → logprob: -9.750123023986816
    3. ',n' → logprob: -10.625123023986816
    4. '1' → logprob: -10.750123023986816
    5. ',a' → logprob: -12.000123023986816
    6. 'a' → logprob: -12.375123023986816
    7. 's' → logprob: -13.125123023986816
    8. ')' → logprob: -14.125123023986816
    9. ',int' → logprob: -14.375123023986816
    10. ',m' → logprob: -14.500123023986816

Token 183: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.30966851115226746
    2. 'm' → logprob: -1.9346685409545898
    3. 'a' → logprob: -2.80966854095459
    4. ' k' → logprob: -3.55966854095459
    5. 'r' → logprob: -4.18466854095459
    6. 'q' → logprob: -5.55966854095459
    7. ' m' → logprob: -5.55966854095459
    8. ' a' → logprob: -6.55966854095459
    9. 's' → logprob: -6.55966854095459
    10. 't' → logprob: -6.55966854095459

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015422382857650518
    2. ' =' → logprob: -6.751542091369629
    3. ' ,' → logprob: -8.376542091369629
    4. '=' → logprob: -9.126542091369629
    5. ',n' → logprob: -11.876542091369629
    6. '<|end|>' → logprob: -11.876542091369629
    7. ')' → logprob: -12.126542091369629
    8. ' ' → logprob: -12.876542091369629
    9. '  ' → logprob: -13.501542091369629
    10. ',j' → logprob: -13.751542091369629

Token 185: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28416529297828674
    2. ' k' → logprob: -1.6591652631759644
    3. 'q' → logprob: -3.784165382385254
    4. 'p' → logprob: -4.534165382385254
    5. ' q' → logprob: -5.409165382385254
    6. ' p' → logprob: -5.659165382385254
    7. 't' → logprob: -5.784165382385254
    8. ' t' → logprob: -6.284165382385254
    9. 'x' → logprob: -6.284165382385254
    10. 'r' → logprob: -6.534165382385254

Token 186: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20200806856155396
    2. '=' → logprob: -1.7020080089569092
    3. ',' → logprob: -7.452008247375488
    4. ')' → logprob: -12.202008247375488
    5. ' ' → logprob: -13.202008247375488
    6. ' =
' → logprob: -13.327008247375488
    7. ')=' → logprob: -13.577008247375488
    8. '=input' → logprob: -14.077008247375488
    9. '=int' → logprob: -14.452008247375488
    10. '   ' → logprob: -14.452008247375488

Token 187: ' donc' (ID: 14206)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24056212604045868
    2. ' map' → logprob: -2.2405622005462646
    3. ' ' → logprob: -2.6155622005462646
    4. '=' → logprob: -5.2405619621276855
    5. '<|end|>' → logprob: -5.4905619621276855
    6. ' _' → logprob: -5.6155619621276855
    7. '_' → logprob: -5.8655619621276855
    8. ',' → logprob: -6.1155619621276855
    9. ' n' → logprob: -6.2405619621276855
    10. '0' → logprob: -6.4905619621276855

Token 188: ' trois' (ID: 25564)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6854686737060547
    2. ' des' → logprob: -1.3104686737060547
    3. ' map' → logprob: -2.4354686737060547
    4. ' assigned' → logprob: -3.8104686737060547
    5. ' assign' → logprob: -3.8104686737060547
    6. ' ' → logprob: -4.310468673706055
    7. ' =' → logprob: -4.685468673706055
    8. ' récup' → logprob: -4.810468673706055
    9. ' utilisés' → logprob: -4.935468673706055
    10. ' trois' → logprob: -4.935468673706055

Token 189: ' ent' (ID: 1121)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0006531051476486027
    2. 'i' → logprob: -8.500653266906738
    3. 'ers' → logprob: -8.750653266906738
    4. ',' → logprob: -9.250653266906738
    5. '   ' → logprob: -9.750653266906738
    6. ' =' → logprob: -10.125653266906738
    7. 'ier' → logprob: -10.375653266906738
    8. 's' → logprob: -11.125653266906738
    9. 'a' → logprob: -11.500653266906738
    10. 'ières' → logprob: -11.625653266906738

Token 191: ' extr' (ID: 15674)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07160638272762299
    2. '=' → logprob: -2.696606397628784
    3. ',' → logprob: -6.446606159210205
    4. '   ' → logprob: -10.696606636047363
    5. ',n' → logprob: -11.196606636047363
    6. '=n' → logprob: -11.571606636047363
    7. 'n' → logprob: -11.946606636047363
    8. '(n' → logprob: -11.946606636047363
    9. '=input' → logprob: -12.321606636047363
    10. 's' → logprob: -12.446606636047363

Token 192: 'aits' (ID: 46641)
  Prédit: 'aits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aits' → logprob: -0.0026034836191684008
    2. 'a' → logprob: -6.002603530883789
    3. 'aites' → logprob: -9.252603530883789
    4. 'ais' → logprob: -11.127603530883789
    5. ' a' → logprob: -12.877603530883789
    6. 'airs' → logprob: -13.252603530883789
    7. 'ait' → logprob: -13.252603530883789
    8. 'aires' → logprob: -13.252603530883789
    9. '   ' → logprob: -13.377603530883789
    10. 'air' → logprob: -13.377603530883789

Token 193: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21416383981704712
    2. '()' → logprob: -2.4641637802124023
    3. '(' → logprob: -2.5891637802124023
    4. '=' → logprob: -3.5891637802124023
    5. ',' → logprob: -5.464163780212402
    6. ' (' → logprob: -8.464163780212402
    7. ' ' → logprob: -8.714163780212402
    8. '(n' → logprob: -9.214163780212402
    9. ' ()' → logprob: -9.464163780212402
    10. '   ' → logprob: -9.964163780212402

Token 194: ' cette' (ID: 7696)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0011815387988463044
    2. 'input' → logprob: -6.876181602478027
    3. ' la' → logprob: -9.251181602478027
    4. ' l' → logprob: -10.501181602478027
    5. 'la' → logprob: -12.126181602478027
    6. '(input' → logprob: -12.126181602478027
    7. ' ' → logprob: -12.501181602478027
    8. ' map' → logprob: -12.751181602478027
    9. ' the' → logprob: -12.876181602478027
    10. 'l' → logprob: -13.251181602478027

Token 195: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7583895325660706
    2. ' input' → logprob: -0.8833895325660706
    3. ' line' → logprob: -3.258389472961426
    4. ' entrée' → logprob: -3.508389472961426
    5. 'input' → logprob: -4.133389472961426
    6. 'ligne' → logprob: -4.633389472961426
    7. 'entrée' → logprob: -4.758389472961426
    8. '(input' → logprob: -5.008389472961426
    9. 'line' → logprob: -6.008389472961426
    10. ' ' → logprob: -7.258389472961426

Token 196: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01460837572813034
    2. '=' → logprob: -4.264608383178711
    3. ' =
' → logprob: -8.139608383178711
    4. ',' → logprob: -9.264608383178711
    5. 'n' → logprob: -11.139608383178711
    6. '   ' → logprob: -11.639608383178711
    7. '=
' → logprob: -11.639608383178711
    8. ')' → logprob: -12.389608383178711
    9. '    ' → logprob: -12.514608383178711
    10. ' ' → logprob: -12.639608383178711

Token 197: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002509666606783867
    2. ' n' → logprob: -6.252509593963623
    3. '   ' → logprob: -8.002510070800781
    4. '    
' → logprob: -8.752510070800781
    5. '(n' → logprob: -10.627510070800781
    6. ' 
' → logprob: -10.627510070800781
    7. '	n' → logprob: -10.877510070800781
    8. '  
' → logprob: -12.377510070800781
    9. '   
' → logprob: -12.502510070800781
    10. 'a' → logprob: -12.877510070800781

Token 198: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.014762031845748425
    2. ' n' → logprob: -4.264761924743652
    3. '    
' → logprob: -8.264761924743652
    4. '   ' → logprob: -8.639761924743652
    5. '	n' → logprob: -9.764761924743652
    6. ' 
' → logprob: -9.764761924743652
    7. '
' → logprob: -10.514761924743652
    8. '(n' → logprob: -11.764761924743652
    9. '   
' → logprob: -12.389761924743652
    10. '  
' → logprob: -12.639761924743652

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.265633419388905e-05
    2. ',m' → logprob: -9.750062942504883
    3. ' ,' → logprob: -12.625062942504883
    4. ',k' → logprob: -14.625062942504883
    5. ',
' → logprob: -15.375062942504883
    6. 'm' → logprob: -15.750062942504883
    7. ',n' → logprob: -16.500062942504883
    8. ',b' → logprob: -17.875062942504883
    9. ',M' → logprob: -18.250062942504883
    10. ',int' → logprob: -18.375062942504883

Token 200: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.032262615859508514
    2. 'm' → logprob: -3.5322625637054443
    3. ' ' → logprob: -6.032262802124023
    4. '  ' → logprob: -9.532262802124023
    5. ' ' → logprob: -11.157262802124023
    6. '<|end|>' → logprob: -12.032262802124023
    7. ' ' → logprob: -12.407262802124023
    8. '    ' → logprob: -13.282262802124023
    9. '	m' → logprob: -13.407262802124023
    10. ',' → logprob: -13.532262802124023

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010020548506872728
    2. ' ,' → logprob: -9.375100135803223
    3. ',k' → logprob: -11.125100135803223
    4. ' =' → logprob: -15.750100135803223
    5. ',m' → logprob: -16.50010108947754
    6. '<|end|>' → logprob: -16.50010108947754
    7. 'k' → logprob: -17.00010108947754
    8. ',n' → logprob: -17.00010108947754
    9. ',
' → logprob: -17.12510108947754
    10. '=' → logprob: -17.12510108947754

Token 202: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.14272165298461914
    2. 'k' → logprob: -2.017721652984619
    3. ' ' → logprob: -10.267721176147461
    4. ' ' → logprob: -11.767721176147461
    5. '<|end|>' → logprob: -13.642721176147461
    6. '	k' → logprob: -14.267721176147461
    7. ',k' → logprob: -14.642721176147461
    8. ' ' → logprob: -14.892721176147461
    9. ' 
' → logprob: -15.517721176147461
    10. '  ' → logprob: -15.642721176147461

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005248579662293196
    2. '=' → logprob: -5.255248546600342
    3. ',' → logprob: -11.6302490234375
    4. ' =
' → logprob: -12.7552490234375
    5. ')' → logprob: -13.7552490234375
    6. ' ' → logprob: -14.6302490234375
    7. '=input' → logprob: -15.0052490234375
    8. ' =
' → logprob: -15.3802490234375
    9. ' ' → logprob: -15.5052490234375
    10. '=int' → logprob: -15.5052490234375

Token 204: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0003380846756044775
    2. 'map' → logprob: -8.250338554382324
    3. ' list' → logprob: -9.625338554382324
    4. ' ' → logprob: -12.250338554382324
    5. ' input' → logprob: -12.875338554382324
    6. ' ' → logprob: -13.375338554382324
    7. '	map' → logprob: -13.500338554382324
    8. 'list' → logprob: -16.250337600708008
    9. '  ' → logprob: -16.375337600708008
    10. ' tuple' → logprob: -17.000337600708008

Token 205: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1271313726902008
    2. '(' → logprob: -2.127131462097168
    3. '(lambda' → logprob: -8.752131462097168
    4. '[int' → logprob: -11.377131462097168
    5. '<int' → logprob: -11.627131462097168
    6. ' (' → logprob: -11.752131462097168
    7. '(str' → logprob: -12.002131462097168
    8. '(
' → logprob: -12.627131462097168
    9. '(input' → logprob: -12.627131462097168
    10. '=int' → logprob: -13.502131462097168

Token 206: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026591476052999496
    2. ',input' → logprob: -3.9015915393829346
    3. ',' → logprob: -6.0265913009643555
    4. 'input' → logprob: -6.2765913009643555
    5. '(' → logprob: -6.7765913009643555
    6. ')' → logprob: -8.276591300964355
    7. '   ' → logprob: -8.776591300964355
    8. '=input' → logprob: -9.401591300964355
    9. ' input' → logprob: -9.776591300964355
    10. ' (' → logprob: -11.026591300964355

Token 207: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014147937297821
    2. ' input' → logprob: -1.7014148235321045
    3. '   ' → logprob: -14.201415061950684
    4. '(input' → logprob: -14.451415061950684
    5. ')' → logprob: -16.326414108276367
    6. '=input' → logprob: -16.451414108276367
    7. ' ' → logprob: -16.951414108276367
    8. '	input' → logprob: -17.701414108276367
    9. ',input' → logprob: -18.076414108276367
    10. '.input' → logprob: -18.701414108276367

Token 208: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '()' → logprob: -11.375011444091797
    3. '())' → logprob: -15.875011444091797
    4. '(' → logprob: -17.375011444091797
    5. ')' → logprob: -18.125011444091797
    6. ' ().' → logprob: -18.250011444091797
    7. '()
' → logprob: -18.500011444091797
    8. '()).' → logprob: -18.875011444091797
    9. '.split' → logprob: -19.625011444091797
    10. '().
' → logprob: -19.750011444091797

Token 209: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014166681095957756
    2. 'strip' → logprob: -4.264166831970215
    3. 'rstrip' → logprob: -12.764166831970215
    4. ' split' → logprob: -15.514166831970215
    5. '(split' → logprob: -16.6391658782959
    6. 'spl' → logprob: -18.3891658782959
    7. ' strip' → logprob: -19.3891658782959
    8. 'read' → logprob: -19.3891658782959
    9. ')' → logprob: -19.6391658782959
    10. 's' → logprob: -20.3891658782959

Token 210: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007110198028385639
    2. '()' → logprob: -5.757110118865967
    3. ')' → logprob: -6.257110118865967
    4. '()))' → logprob: -6.257110118865967
    5. '))' → logprob: -9.382110595703125
    6. '(' → logprob: -12.757110595703125
    7. ' ())' → logprob: -12.757110595703125
    8. '());' → logprob: -15.132110595703125
    9. '()));' → logprob: -15.132110595703125
    10. '())
' → logprob: -15.257110595703125

Token 211: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15644477307796478
    2. '   ' → logprob: -2.156444787979126
    3. '    
' → logprob: -3.781444787979126
    4. '

' → logprob: -6.656444549560547
    5. '<|end|>' → logprob: -6.781444549560547
    6. '  
' → logprob: -6.906444549560547
    7. 'def' → logprob: -7.531444549560547
    8. '   
' → logprob: -7.531444549560547
    9. ' 
' → logprob: -8.156444549560547
    10. 'n' → logprob: -8.281444549560547

Token 212: ' #' (ID: 1069)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.8019365668296814
    2. 'fact' → logprob: -0.9269365668296814
    3. '#' (adapté à ' #') → logprob: -1.9269366264343262
    4. '   ' → logprob: -5.176936626434326
    5. '    
' → logprob: -6.551936626434326
    6. '
' → logprob: -7.051936626434326
    7. 'fac' → logprob: -7.676936626434326
    8. 'def' → logprob: -7.801936626434326
    9. 'f' → logprob: -8.551936149597168
    10. '```' → logprob: -8.676936149597168

Token 213: ' Initial' (ID: 9209)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.1812525987625122
    2. 'fact' → logprob: -2.1812524795532227
    3. '#' → logprob: -3.0562524795532227
    4. 'fac' → logprob: -5.181252479553223
    5. 'def' → logprob: -9.806252479553223
    6. '```' → logprob: -10.806252479553223
    7. 'if' → logprob: -10.931252479553223
    8. ' fact' → logprob: -11.181252479553223
    9. '
' → logprob: -11.431252479553223
    10. ' factorial' → logprob: -11.556252479553223

Token 214: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.3155437111854553
    2. 'ization' → logprob: -1.3155436515808105
    3. 'iser' → logprob: -6.6905436515808105
    4. 'izing' → logprob: -7.9405436515808105
    5. 'ize' → logprob: -8.690544128417969
    6. '_' → logprob: -8.815544128417969
    7. 'is' → logprob: -9.315544128417969
    8. '```' → logprob: -9.815544128417969
    9. '#' → logprob: -9.940544128417969
    10. 'izer' → logprob: -10.565544128417969

Token 215: ' de' (ID: 334)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.30658406019210815
    2. ' des' → logprob: -2.556584119796753
    3. '   ' → logprob: -2.806584119796753
    4. ' factorial' → logprob: -3.181584119796753
    5. 'fact' → logprob: -4.056583881378174
    6. '(' → logprob: -4.306583881378174
    7. '_factor' → logprob: -4.431583881378174
    8. ' de' → logprob: -4.556583881378174
    9. 'de' → logprob: -5.181583881378174
    10. ' factor' → logprob: -5.306583881378174

Token 216: ' deux' (ID: 10301)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4124399423599243
    2. ' fact' → logprob: -2.1624398231506348
    3. 'factor' → logprob: -2.4124398231506348
    4. ' la' → logprob: -2.9124398231506348
    5. ' factorial' → logprob: -3.9124398231506348
    6. 'f' → logprob: -4.037439823150635
    7. 'fac' → logprob: -4.412439823150635
    8. ' une' → logprob: -4.787439823150635
    9. 'la' → logprob: -4.912439823150635
    10. ' fac' → logprob: -5.787439823150635

Token 217: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.29424628615379333
    2. ' lists' → logprob: -1.6692463159561157
    3. ' tableaux' → logprob: -3.294246196746826
    4. ' ' → logprob: -5.169246196746826
    5. ' espaces' → logprob: -5.169246196746826
    6. ' arrays' → logprob: -5.544246196746826
    7. '[' → logprob: -5.919246196746826
    8. '_list' → logprob: -6.169246196746826
    9. '[]' → logprob: -6.419246196746826
    10. ' tab' → logprob: -6.669246196746826

Token 218: ' :
' (ID: 10039)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.9920005202293396
    2. 'fact' → logprob: -1.1170005798339844
    3. ' de' → logprob: -2.2420005798339844
    4. ' des' → logprob: -3.2420005798339844
    5. ':' → logprob: -3.7420005798339844
    6. '_factor' → logprob: -3.8670005798339844
    7. ' =' → logprob: -3.8670005798339844
    8. ' factorial' → logprob: -3.8670005798339844
    9. 'de' → logprob: -4.117000579833984
    10. 'f' → logprob: -4.742000579833984

Token 219: '   ' (ID: 271)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6407361626625061
    2. ' fact' → logprob: -0.8907361626625061
    3. 'factor' → logprob: -3.6407361030578613
    4. '   ' → logprob: -4.015736103057861
    5. ' factorial' → logprob: -4.265736103057861
    6. ' fac' → logprob: -6.140736103057861
    7. 'fac' → logprob: -6.890736103057861
    8. ' factor' → logprob: -8.14073657989502
    9. ' f' → logprob: -8.64073657989502
    10. 'f' → logprob: -8.76573657989502

Token 220: ' #' (ID: 1069)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06436537951231003
    2. ' fact' → logprob: -3.3143653869628906
    3. 'factor' → logprob: -3.9393653869628906
    4. 'fac' → logprob: -5.314365386962891
    5. ' factorial' → logprob: -7.814365386962891
    6. 'f' → logprob: -7.814365386962891
    7. '   ' → logprob: -8.06436538696289
    8. ' fac' → logprob: -8.68936538696289
    9. ' facto' → logprob: -9.06436538696289
    10. 'facts' → logprob: -9.81436538696289

Token 221: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06416752189397812
    2. ' fact' → logprob: -3.5641674995422363
    3. 'factor' → logprob: -3.5641674995422363
    4. 'fac' → logprob: -5.439167499542236
    5. 'f' → logprob: -7.564167499542236
    6. ' factorial' → logprob: -7.939167499542236
    7. ' facto' → logprob: -9.439167976379395
    8. ' fac' → logprob: -9.814167976379395
    9. 'facts' → logprob: -9.939167976379395
    10. '   ' → logprob: -10.439167976379395

Token 222: ' sert' (ID: 52405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25943830609321594
    2. '=' → logprob: -1.5094382762908936
    3. 'orial' → logprob: -5.884438514709473
    4. 'or' → logprob: -6.509438514709473
    5. ' ' → logprob: -6.759438514709473
    6. '   ' → logprob: -8.009438514709473
    7. ',' → logprob: -8.259438514709473
    8. 'é' → logprob: -8.634438514709473
    9. '=[]' → logprob: -8.634438514709473
    10. 'éal' → logprob: -9.009438514709473

Token 223: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8193222284317017
    2. '(' → logprob: -1.4443222284317017
    3. '[' → logprob: -2.069322109222412
    4. ' =' → logprob: -2.069322109222412
    5. '[]' → logprob: -3.944322109222412
    6. '   ' → logprob: -4.444322109222412
    7. '=[]' → logprob: -4.694322109222412
    8. '_' → logprob: -5.069322109222412
    9. '_fact' → logprob: -5.194322109222412
    10. '=[' → logprob: -5.444322109222412

Token 224: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001408805139362812
    2. ' [' → logprob: -6.751408576965332
    3. '[N' → logprob: -8.626408576965332
    4. '[n' → logprob: -9.751408576965332
    5. '[num' → logprob: -15.751408576965332
    6. ' ' → logprob: -15.751408576965332
    7. '[len' → logprob: -16.50140953063965
    8. '[size' → logprob: -16.62640953063965
    9. '[f' → logprob: -16.87640953063965
    10. '[p' → logprob: -16.87640953063965

Token 225: 'er' (ID: 259)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18737222254276276
    2. '=' → logprob: -2.5623722076416016
    3. '   ' → logprob: -3.4373722076416016
    4. '[]' → logprob: -3.6873722076416016
    5. '[:]' → logprob: -4.937372207641602
    6. '(' → logprob: -5.062372207641602
    7. '_' → logprob: -5.062372207641602
    8. ' =' → logprob: -5.562372207641602
    9. '=[' → logprob: -6.062372207641602
    10. 'er' → logprob: -6.187372207641602

Token 226: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.675383448600769
    2. '[' → logprob: -0.800383448600769
    3. ' ' → logprob: -4.050383567810059
    4. '(n' → logprob: -4.675383567810059
    5. '()' → logprob: -6.050383567810059
    6. ' les' → logprob: -6.300383567810059
    7. '[N' → logprob: -6.425383567810059
    8. '[n' → logprob: -6.550383567810059
    9. ' [' → logprob: -6.675383567810059
    10. '(N' → logprob: -6.925383567810059

Token 227: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.3457278311252594
    2. 'factor' → logprob: -1.595727801322937
    3. 'fact' → logprob: -3.2207279205322266
    4. ' factor' → logprob: -3.9707279205322266
    5. ' ' → logprob: -4.095727920532227
    6. ' factorial' → logprob: -4.470727920532227
    7. '_factor' → logprob: -7.345727920532227
    8. ' facteurs' → logprob: -7.345727920532227
    9. ' nombres' → logprob: -8.345727920532227
    10. ' facto' → logprob: -8.345727920532227

Token 228: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6251862645149231
    2. 'orial' → logprob: -1.1251862049102783
    3. '[' → logprob: -3.0001862049102783
    4. '_' → logprob: -3.6251862049102783
    5. '[]' → logprob: -4.375186443328857
    6. 'ori' → logprob: -5.000186443328857
    7. '_or' → logprob: -5.000186443328857
    8. 'ors' → logprob: -5.250186443328857
    9. 'eurs' → logprob: -5.500186443328857
    10. 'o' → logprob: -5.500186443328857

Token 229: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.00275197671726346
    2. 'elle' → logprob: -6.62775182723999
    3. 'els' → logprob: -7.12775182723999
    4. 'el' → logprob: -8.252752304077148
    5. '```' → logprob: -9.127752304077148
    6. 'eles' → logprob: -9.502752304077148
    7. 'nelles' → logprob: -10.002752304077148
    8. 'al' → logprob: -11.002752304077148
    9. 'èles' → logprob: -11.002752304077148
    10. '`' → logprob: -11.377752304077148

Token 230: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29443323612213135
    2. '[' → logprob: -1.4194332361221313
    3. ' =' → logprob: -5.544433116912842
    4. '(n' → logprob: -5.919433116912842
    5. '=' → logprob: -6.169433116912842
    6. ',' → logprob: -6.919433116912842
    7. '[n' → logprob: -7.294433116912842
    8. ' (' → logprob: -7.544433116912842
    9. '([' → logprob: -7.669433116912842
    10. ']' → logprob: -7.669433116912842

Token 231: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4274076223373413
    2. '[N' → logprob: -2.177407741546631
    3. '[' → logprob: -2.552407741546631
    4. '[n' → logprob: -2.927407741546631
    5. '   ' → logprob: -3.177407741546631
    6. ' [' → logprob: -3.677407741546631
    7. '(n' → logprob: -4.677407741546631
    8. ' )' → logprob: -4.927407741546631
    9. ' ' → logprob: -5.177407741546631
    10. '  ' → logprob: -5.927407741546631

Token 232: '!)' (ID: 19406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4444679021835327
    2. ' =' → logprob: -1.3194679021835327
    3. '[' → logprob: -3.0694680213928223
    4. '=' → logprob: -3.9444680213928223
    5. '   ' → logprob: -5.444468021392822
    6. '_fact' → logprob: -5.444468021392822
    7. '_' → logprob: -5.569468021392822
    8. '[i' → logprob: -5.944468021392822
    9. ' )' → logprob: -6.319468021392822
    10. ')=' → logprob: -6.444468021392822

Token 233: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024361124262213707
    2. '=' → logprob: -4.3993611335754395
    3. '[' → logprob: -4.6493611335754395
    4. ',' → logprob: -7.1493611335754395
    5. '(' → logprob: -7.3993611335754395
    6. '=[' → logprob: -8.399360656738281
    7. '[]' → logprob: -9.024360656738281
    8. ' [' → logprob: -9.024360656738281
    9. ' =[' → logprob: -9.524360656738281
    10. ' ' → logprob: -10.024360656738281

Token 234: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03895227238535881
    2. 'i' → logprob: -3.288952350616455
    3. ' range' → logprob: -7.538952350616455
    4. 'range' → logprob: -8.663951873779297
    5. ' _' → logprob: -9.663951873779297
    6. ' ' → logprob: -9.913951873779297
    7. '_' → logprob: -10.038951873779297
    8. ' les' → logprob: -10.663951873779297
    9. '   ' → logprob: -12.163951873779297
    10. '  ' → logprob: -12.788951873779297

Token 235: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13451863825321198
    2. ' ' → logprob: -2.884518623352051
    3. ' les' → logprob: -4.509518623352051
    4. '(i' → logprob: -4.634518623352051
    5. 'i' → logprob: -4.884518623352051
    6. '  ' → logprob: -5.009518623352051
    7. '_' → logprob: -5.259518623352051
    8. '(' → logprob: -5.509518623352051
    9. '   ' → logprob: -5.634518623352051
    10. '(n' → logprob: -5.634518623352051

Token 236: ' jusqu' (ID: 21961)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3022814989089966
    2. ' =' → logprob: -2.177281379699707
    3. ' +' → logprob: -2.552281379699707
    4. '=' → logprob: -3.552281379699707
    5. ' in' → logprob: -4.052281379699707
    6. 'range' → logprob: -5.427281379699707
    7. ' en' → logprob: -6.052281379699707
    8. ' range' → logprob: -6.177281379699707
    9. ' ' → logprob: -6.302281379699707
    10. '[' → logprob: -6.302281379699707

Token 237: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7296715974807739
    2. '(N' → logprob: -0.8546715974807739
    3. ' =' → logprob: -2.9796714782714844
    4. '   ' → logprob: -4.104671478271484
    5. ' à' → logprob: -4.979671478271484
    6. 'à' → logprob: -5.104671478271484
    7. '=N' → logprob: -5.354671478271484
    8. '(' → logprob: -6.104671478271484
    9. '(n' → logprob: -7.104671478271484
    10. ' (' → logprob: -7.229671478271484

Token 238: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07889264822006226
    2. ' N' → logprob: -2.578892707824707
    3. 'n' → logprob: -13.453892707824707
    4. ' ' → logprob: -13.703892707824707
    5. ' n' → logprob: -15.828892707824707
    6. '	N' → logprob: -16.07889175415039
    7. '   ' → logprob: -16.82889175415039
    8. '>N' → logprob: -17.32889175415039
    9. '<N' → logprob: -17.70389175415039
    10. '[N' → logprob: -17.70389175415039

Token 239: '-' (ID: 12)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3350383937358856
    2. '=' → logprob: -1.710038423538208
    3. ',' → logprob: -3.335038423538208
    4. ']' → logprob: -3.960038423538208
    5. '[' → logprob: -3.960038423538208
    6. '(' → logprob: -4.460038185119629
    7. 'fact' → logprob: -4.585038185119629
    8. ')' → logprob: -5.335038185119629
    9. '_fact' → logprob: -6.710038185119629
    10. ' ' → logprob: -7.960038185119629

Token 240: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5944184064865112
    2. '1' → logprob: -1.2194184064865112
    3. ']' → logprob: -2.219418525695801
    4. 'N' → logprob: -4.094418525695801
    5. '   ' → logprob: -4.969418525695801
    6. ' ' → logprob: -4.969418525695801
    7. '2' → logprob: -5.594418525695801
    8. '0' → logprob: -6.344418525695801
    9. '```' → logprob: -6.719418525695801
    10. ' N' → logprob: -7.219418525695801

Token 241: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14410057663917542
    2. '=' → logprob: -2.5191006660461426
    3. '(' → logprob: -3.8941006660461426
    4. ',' → logprob: -4.394100666046143
    5. '[' → logprob: -4.769100666046143
    6. ']' → logprob: -5.269100666046143
    7. 'fact' → logprob: -5.394100666046143
    8. ')' → logprob: -6.894100666046143
    9. '_fact' → logprob: -7.769100666046143
    10. ' (' → logprob: -7.894100666046143

Token 242: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028178676962852478
    2. '=' → logprob: -4.028178691864014
    3. 'fact' → logprob: -4.778178691864014
    4. ',' → logprob: -7.278178691864014
    5. ' fact' → logprob: -8.403178215026855
    6. '[' → logprob: -8.528178215026855
    7. '_fact' → logprob: -8.528178215026855
    8. ' ' → logprob: -9.403178215026855
    9. ' =
' → logprob: -9.528178215026855
    10. '   ' → logprob: -10.403178215026855

Token 243: ' #' (ID: 1069)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.08647764474153519
    2. ' fact' → logprob: -3.211477756500244
    3. ' =' → logprob: -3.461477756500244
    4. ',' → logprob: -4.961477756500244
    5. '=' → logprob: -6.336477756500244
    6. ' ' → logprob: -7.086477756500244
    7. '
' → logprob: -7.586477756500244
    8. '_fact' → logprob: -7.711477756500244
    9. '[' → logprob: -8.086477279663086
    10. ' ,' → logprob: -10.086477279663086

Token 244: ' fin' (ID: 2131)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.010380757041275501
    2. ' inv' → logprob: -5.260380744934082
    3. 'ifact' → logprob: -6.010380744934082
    4. 'pow' → logprob: -6.260380744934082
    5. 'fact' → logprob: -7.510380744934082
    6. 'inverse' → logprob: -9.635380744934082
    7. 'comb' → logprob: -10.635380744934082
    8. 'in' → logprob: -10.635380744934082
    9. '_inv' → logprob: -10.885380744934082
    10. 'fin' → logprob: -11.135380744934082

Token 245: 'v' (ID: 85)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.1539963036775589
    2. 'v' → logprob: -2.403996229171753
    3. 'ct' → logprob: -3.403996229171753
    4. 'ac' → logprob: -6.153996467590332
    5. 'fact' → logprob: -6.153996467590332
    6. ' =' → logprob: -6.278996467590332
    7. '=' → logprob: -6.403996467590332
    8. 'c' → logprob: -6.653996467590332
    9. 'a' → logprob: -6.778996467590332
    10. '
' → logprob: -6.903996467590332

Token 246: ' sert' (ID: 52405)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09364350885152817
    2. ' sert' → logprob: -2.8436434268951416
    3. '=' → logprob: -4.468643665313721
    4. ' ' → logprob: -5.718643665313721
    5. 'sert' → logprob: -5.843643665313721
    6. ' est' → logprob: -5.968643665313721
    7. ' serv' → logprob: -6.093643665313721
    8. 'serv' → logprob: -6.093643665313721
    9. ' servir' → logprob: -6.468643665313721
    10. 's' → logprob: -6.843643665313721

Token 247: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05588846653699875
    2. ' ' → logprob: -4.055888652801514
    3. 'à' → logprob: -4.180888652801514
    4. ' à' → logprob: -4.305888652801514
    5. ' =' → logprob: -5.430888652801514
    6. '_' → logprob: -6.305888652801514
    7. '=[]' → logprob: -7.430888652801514
    8. 'a' → logprob: -8.305888175964355
    9. '   ' → logprob: -8.555888175964355
    10. ' to' → logprob: -8.805888175964355

Token 248: ' stock' (ID: 6546)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08907545357942581
    2. ' [' → logprob: -2.5890755653381348
    3. '[N' → logprob: -4.839075565338135
    4. '[n' → logprob: -6.589075565338135
    5. '[index' → logprob: -8.089075088500977
    6. '[len' → logprob: -9.339075088500977
    7. '[num' → logprob: -9.464075088500977
    8. '[size' → logprob: -10.089075088500977
    9. '[max' → logprob: -10.214075088500977
    10. '[user' → logprob: -10.339075088500977

Token 249: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6585949659347534
    2. 'ocker' → logprob: -2.033595085144043
    3. 'or' → logprob: -2.783595085144043
    4. 'orer' → logprob: -3.033595085144043
    5. 'ager' → logprob: -3.533595085144043
    6. 'uer' → logprob: -3.533595085144043
    7. 'rer' → logprob: -3.658595085144043
    8. 'r' → logprob: -4.158595085144043
    9. 'ock' → logprob: -4.283595085144043
    10. 'urer' → logprob: -4.408595085144043

Token 250: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27817490696907043
    2. ' les' → logprob: -1.778174877166748
    3. ' [' → logprob: -3.778174877166748
    4. ' la' → logprob: -3.778174877166748
    5. ' ' → logprob: -4.778174877166748
    6. 'les' → logprob: -4.778174877166748
    7. '[]' → logprob: -5.653174877166748
    8. ' des' → logprob: -6.278174877166748
    9. '[N' → logprob: -6.278174877166748
    10. 'la' → logprob: -6.653174877166748

Token 251: ' invers' (ID: 38721)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20688650012016296
    2. 'factor' → logprob: -2.2068865299224854
    3. 'inverse' → logprob: -3.8318865299224854
    4. 'fact' → logprob: -4.081886291503906
    5. '[]' → logprob: -4.206886291503906
    6. ' [' → logprob: -4.706886291503906
    7. ' factorial' → logprob: -5.456886291503906
    8. ' inverse' → logprob: -5.956886291503906
    9. '[i' → logprob: -6.206886291503906
    10. '[in' → logprob: -7.081886291503906

Token 252: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.5761444568634033
    2. '   ' → logprob: -1.7011444568634033
    3. '[' → logprob: -1.8261444568634033
    4. '_' → logprob: -1.8261444568634033
    5. 'al' → logprob: -2.4511444568634033
    6. 'er' → logprob: -3.5761444568634033
    7. 'de' → logprob: -4.076144218444824
    8. '```' → logprob: -4.451144218444824
    9. '=' → logprob: -4.701144218444824
    10. 's' → logprob: -4.826144218444824

Token 253: ' multiplic' (ID: 67929)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3697081804275513
    2. ' des' → logprob: -1.4947081804275513
    3. '_des' → logprob: -1.6197081804275513
    4. 'des' → logprob: -1.8697081804275513
    5. '_factor' → logprob: -2.6197080612182617
    6. '_fact' → logprob: -3.6197080612182617
    7. '_inverse' → logprob: -4.369708061218262
    8. '<|end|>' → logprob: -4.869708061218262
    9. '[' → logprob: -5.244708061218262
    10. ' factorial' → logprob: -5.494708061218262

Token 254: 'atifs' (ID: 66205)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07901602983474731
    2. 'es' → logprob: -2.5790159702301025
    3. 'eurs' → logprob: -9.829015731811523
    4. 'ive' → logprob: -10.454015731811523
    5. 'eur' → logprob: -12.329015731811523
    6. 'i' → logprob: -12.329015731811523
    7. 'def' → logprob: -12.579015731811523
    8. 'a' → logprob: -12.704015731811523
    9. 've' → logprob: -12.954015731811523
    10. '   ' → logprob: -12.954015731811523

Token 255: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5494463443756104
    2. 'des' → logprob: -2.1744463443756104
    3. '_' → logprob: -2.2994463443756104
    4. '_des' → logprob: -3.1744463443756104
    5. '<|end|>' → logprob: -3.2994463443756104
    6. '[' → logprob: -3.7994463443756104
    7. ' (' → logprob: -3.9244463443756104
    8. '_factor' → logprob: -3.9244463443756104
    9. ',' → logprob: -4.674446105957031
    10. '(' → logprob: -4.799446105957031

Token 256: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.05922291427850723
    2. 'fact' → logprob: -3.059222936630249
    3. 'factor' → logprob: -5.43422269821167
    4. ' factorial' → logprob: -5.80922269821167
    5. ' ' → logprob: -6.05922269821167
    6. ' factor' → logprob: -7.30922269821167
    7. '_fact' → logprob: -9.684223175048828
    8. ' facto' → logprob: -10.309223175048828
    9. ' facteurs' → logprob: -10.684223175048828
    10. ' facteur' → logprob: -11.059223175048828

Token 257: 'ori' (ID: 6510)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.3339473307132721
    2. 'a' → logprob: -2.3339474201202393
    3. '[' → logprob: -3.4589474201202393
    4. 'or' → logprob: -3.5839474201202393
    5. 'ort' → logprob: -3.7089474201202393
    6. 'o' → logprob: -4.20894718170166
    7. 'actor' → logprob: -4.20894718170166
    8. ' ' → logprob: -4.58394718170166
    9. '_' → logprob: -4.70894718170166
    10. ']' → logprob: -4.83394718170166

Token 258: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0013840439496561885
    2. 'els' → logprob: -6.626384258270264
    3. 'eles' → logprob: -10.376383781433105
    4. 'elle' → logprob: -12.126383781433105
    5. 'nelles' → logprob: -12.501383781433105
    6. 'c' → logprob: -12.751383781433105
    7. 'e' → logprob: -12.876383781433105
    8. 'ables' → logprob: -13.126383781433105
    9. 'ales' → logprob: -13.126383781433105
    10. 'ères' → logprob: -13.751383781433105

Token 259: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0580756664276123
    2. '   ' → logprob: -1.4330756664276123
    3. 'fact' → logprob: -1.9330756664276123
    4. ',' → logprob: -2.5580756664276123
    5. ' (' → logprob: -2.6830756664276123
    6. ' ' → logprob: -3.4330756664276123
    7. ' =' → logprob: -3.5580756664276123
    8. '  ' → logprob: -4.183075904846191
    9. '_fact' → logprob: -4.808075904846191
    10. '_' → logprob: -5.058075904846191

Token 260: 'fact' (ID: 53534)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11330097168684006
    2. 'n' → logprob: -3.3633010387420654
    3. ' )' → logprob: -3.7383010387420654
    4. '[n' → logprob: -4.113300800323486
    5. ' ' → logprob: -4.988300800323486
    6. '[' → logprob: -5.363300800323486
    7. '(n' → logprob: -5.613300800323486
    8. 'fact' → logprob: -5.738300800323486
    9. ')n' → logprob: -5.988300800323486
    10. ' factorial' → logprob: -6.238300800323486

Token 261: '[n' (ID: 15433)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8400524258613586
    2. '_' → logprob: -0.9650524258613586
    3. '_inv' → logprob: -1.8400523662567139
    4. '[' → logprob: -4.965052604675293
    5. ']' → logprob: -5.590052604675293
    6. '_inverse' → logprob: -5.590052604675293
    7. ' =' → logprob: -5.715052604675293
    8. '=' → logprob: -6.340052604675293
    9. '_)' → logprob: -6.340052604675293
    10. '_factor' → logprob: -6.715052604675293

Token 262: ']^' (ID: 144683)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10007627308368683
    2. ']' → logprob: -2.475076198577881
    3. '!' → logprob: -4.725076198577881
    4. ')' → logprob: -7.350076198577881
    5. '],' → logprob: -8.600076675415039
    6. ']!' → logprob: -8.725076675415039
    7. '])
' → logprob: -8.850076675415039
    8. ' ])' → logprob: -9.225076675415039
    9. '])
' → logprob: -9.350076675415039
    10. ']))' → logprob: -9.350076675415039

Token 263: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04691717028617859
    2. ')' → logprob: -3.296917200088501
    3. '{-' → logprob: -6.046916961669922
    4. ' -' → logprob: -6.171916961669922
    5. '
' → logprob: -7.171916961669922
    6. '(-' → logprob: -7.296916961669922
    7. ' ' → logprob: -7.421916961669922
    8. ',' → logprob: -8.171916961669922
    9. ' )' → logprob: -8.671916961669922
    10. '^{-' → logprob: -8.796916961669922

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026875488460063934
    2. ')' → logprob: -3.6518754959106445
    3. ' ' → logprob: -8.026875495910645
    4. '-' → logprob: -9.526875495910645
    5. 'mod' → logprob: -9.776875495910645
    6. ']' → logprob: -11.151875495910645
    7. ' )' → logprob: -11.276875495910645
    8. '{' → logprob: -11.526875495910645
    9. '])' → logprob: -11.651875495910645
    10. ' mod' → logprob: -11.776875495910645

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20160718262195587
    2. '))' → logprob: -1.7016072273254395
    3. ' )' → logprob: -9.826606750488281
    4. ' ))' → logprob: -10.576606750488281
    5. '[' → logprob: -10.701606750488281
    6. '])' → logprob: -11.201606750488281
    7. '),' → logprob: -11.451606750488281
    8. ']' → logprob: -11.951606750488281
    9. ')))' → logprob: -12.076606750488281
    10. '   ' → logprob: -12.451606750488281

Token 266: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006469102227129042
    2. ' )' → logprob: -8.000646591186523
    3. '[' → logprob: -9.125646591186523
    4. ',' → logprob: -9.875646591186523
    5. ')
' → logprob: -9.875646591186523
    6. 's' → logprob: -10.250646591186523
    7. ']' → logprob: -11.750646591186523
    8. '),' → logprob: -11.875646591186523
    9. 'def' → logprob: -12.125646591186523
    10. ')
' → logprob: -12.250646591186523

Token 267: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.6923484206199646
    2. ')' → logprob: -1.1923484802246094
    3. ' MOD' → logprob: -1.8173484802246094
    4. ' )' → logprob: -3.6923484802246094
    5. ' ' → logprob: -5.692348480224609
    6. '_MOD' → logprob: -6.317348480224609
    7. ' ' → logprob: -6.942348480224609
    8. '   ' → logprob: -7.192348480224609
    9. '  ' → logprob: -8.31734848022461
    10. '))' → logprob: -8.31734848022461

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003336777735967189
    2. ')
' → logprob: -9.125333786010742
    3. ' )' → logprob: -9.500333786010742
    4. ').' → logprob: -10.375333786010742
    5. '[' → logprob: -10.500333786010742
    6. '),' → logprob: -10.625333786010742
    7. 's' → logprob: -11.125333786010742
    8. ')
' → logprob: -11.250333786010742
    9. ',' → logprob: -11.625333786010742
    10. ']' → logprob: -12.500333786010742

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0831514298915863
    2. 'fact' → logprob: -2.708151340484619
    3. '
' → logprob: -4.458151340484619
    4. '    
' → logprob: -7.208151340484619
    5. ' fact' → logprob: -7.583151340484619
    6. '  ' → logprob: -9.958151817321777
    7. ' ' → logprob: -10.208151817321777
    8. '    ' → logprob: -10.458151817321777
    9. '	f' → logprob: -10.583151817321777
    10. '   
' → logprob: -10.708151817321777

Token 270: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4079429507255554
    2. 'fact' → logprob: -1.1579430103302002
    3. ' fact' → logprob: -3.9079430103302
    4. '
' → logprob: -7.657942771911621
    5. '    
' → logprob: -8.532942771911621
    6. ' ' → logprob: -10.407942771911621
    7. '  ' → logprob: -10.657942771911621
    8. '    ' → logprob: -11.407942771911621
    9. '_fact' → logprob: -12.282942771911621
    10. '   
' → logprob: -12.407942771911621

Token 271: ' On' (ID: 2160)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.28574374318122864
    2. ' fact' → logprob: -1.7857437133789062
    3. '   ' → logprob: -2.5357437133789062
    4. '
' → logprob: -6.535743713378906
    5. '    
' → logprob: -9.035743713378906
    6. '_fact' → logprob: -10.285743713378906
    7. ' 
' → logprob: -11.035743713378906
    8. '```' → logprob: -11.785743713378906
    9. ' fakt' → logprob: -12.285743713378906
    10. '    ' → logprob: -12.410743713378906

Token 272: ' les' (ID: 1341)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7558477520942688
    2. 'fact' → logprob: -1.880847692489624
    3. ' ' → logprob: -2.130847692489624
    4. '=' → logprob: -2.130847692489624
    5. ' fact' → logprob: -3.005847692489624
    6. ' ]' → logprob: -3.880847692489624
    7. ' )' → logprob: -4.630847930908203
    8. 'n' → logprob: -5.005847930908203
    9. '_' → logprob: -5.005847930908203
    10. ')' → logprob: -5.130847930908203

Token 273: ' initialise' (ID: 145250)
  Prédit: ' initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.6355206966400146
    2. 'initialize' → logprob: -1.6355206966400146
    3. '[' → logprob: -2.2605206966400146
    4. '=' → logprob: -3.2605206966400146
    5. ' =' → logprob: -3.6355206966400146
    6. ']' → logprob: -3.8855206966400146
    7. 'initial' → logprob: -4.260520935058594
    8. '[]' → logprob: -4.385520935058594
    9. ' initializes' → logprob: -4.760520935058594
    10. 'initialized' → logprob: -5.135520935058594

Token 274: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04956335201859474
    2. 'fact' → logprob: -3.549563407897949
    3. '=' → logprob: -4.424563407897949
    4. ' fact' → logprob: -5.799563407897949
    5. '[' → logprob: -6.674563407897949
    6. '=[' → logprob: -6.799563407897949
    7. ' ' → logprob: -7.424563407897949
    8. ' [' → logprob: -7.674563407897949
    9. ' =[' → logprob: -7.924563407897949
    10. ',' → logprob: -8.04956340789795

Token 275: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0194243174046278
    2. '[N' → logprob: -4.2694244384765625
    3. ' [' → logprob: -5.2694244384765625
    4. '[n' → logprob: -9.269424438476562
    5. '1' → logprob: -12.769424438476562
    6. '[num' → logprob: -14.394424438476562
    7. '   ' → logprob: -14.519424438476562
    8. ' ' → logprob: -14.644424438476562
    9. '[f' → logprob: -14.769424438476562
    10. '0' → logprob: -15.269424438476562

Token 276: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21496470272541046
    2. ' [' → logprob: -1.714964747428894
    3. '0' → logprob: -4.464964866638184
    4. ' zeros' → logprob: -6.964964866638184
    5. ' z' → logprob: -7.714964866638184
    6. ' ' → logprob: -8.214964866638184
    7. '[N' → logprob: -8.964964866638184
    8. 'z' → logprob: -9.589964866638184
    9. 'zeros' → logprob: -10.214964866638184
    10. '[z' → logprob: -11.214964866638184

Token 277: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2753216326236725
    2. '0' → logprob: -1.52532160282135
    3. '1' → logprob: -3.9003217220306396
    4. ' [' → logprob: -6.1503214836120605
    5. ' ' → logprob: -7.6503214836120605
    6. 'zeros' → logprob: -10.025321960449219
    7. '-' → logprob: -10.150321960449219
    8. '[N' → logprob: -10.150321960449219
    9. '[]' → logprob: -10.900321960449219
    10. '[-' → logprob: -11.025321960449219

Token 278: ' par' (ID: 686)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47357839345932007
    2. ']' → logprob: -1.0985784530639648
    3. '[' → logprob: -4.723578453063965
    4. ')' → logprob: -4.723578453063965
    5. 'fact' → logprob: -4.848578453063965
    6. ' ]' → logprob: -5.223578453063965
    7. ' [' → logprob: -5.723578453063965
    8. ' ,' → logprob: -5.973578453063965
    9. ' ' → logprob: -5.973578453063965
    10. ' fact' → logprob: -6.973578453063965

Token 279: ' défaut' (ID: 79375)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0757836103439331
    2. '[:]' → logprob: -4.575783729553223
    3. ' [' → logprob: -4.700783729553223
    4. ']' → logprob: -4.950783729553223
    5. ' défaut' → logprob: -5.075783729553223
    6. 'f' → logprob: -5.200783729553223
    7. '[i' → logprob: -5.825783729553223
    8. '[]' → logprob: -5.825783729553223
    9. ')' → logprob: -5.950783729553223
    10. 'range' → logprob: -6.075783729553223

Token 280: '.
' (ID: 558)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.41136786341667175
    2. '
' → logprob: -1.1613678932189941
    3. ' fact' → logprob: -4.161367893218994
    4. '   ' → logprob: -5.036367893218994
    5. ',' → logprob: -7.036367893218994
    6. '    
' → logprob: -7.536367893218994
    7. ',
' → logprob: -8.911367416381836
    8. '
' → logprob: -9.036367416381836
    9. ' 
' → logprob: -9.161367416381836
    10. '

' → logprob: -9.661367416381836

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3029399514198303
    2. 'fact' → logprob: -1.4279398918151855
    3. '
' → logprob: -4.1779398918151855
    4. ' fact' → logprob: -5.3029398918151855
    5. '    
' → logprob: -6.9279398918151855
    6. '```' → logprob: -9.552940368652344
    7. ' 
' → logprob: -9.677940368652344
    8. '  
' → logprob: -10.677940368652344
    9. '  ' → logprob: -10.802940368652344
    10. ' ' → logprob: -10.927940368652344

Token 282: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.1184529960155487
    2. ' fact' → logprob: -2.743453025817871
    3. '   ' → logprob: -3.118453025817871
    4. '
' → logprob: -5.868453025817871
    5. '    
' → logprob: -8.618453025817871
    6. ' 
' → logprob: -10.368453025817871
    7. '_fact' → logprob: -10.618453025817871
    8. '```' → logprob: -10.618453025817871
    9. ' ' → logprob: -11.243453025817871
    10. '  ' → logprob: -12.243453025817871

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05498868599534035
    2. '=' → logprob: -2.9299886226654053
    3. ',' → logprob: -9.429988861083984
    4. '[' → logprob: -11.554988861083984
    5. ' ' → logprob: -11.554988861083984
    6. '=[' → logprob: -13.054988861083984
    7. '   ' → logprob: -13.304988861083984
    8. ' =[' → logprob: -13.304988861083984
    9. ')' → logprob: -15.179988861083984
    10. '  ' → logprob: -15.679988861083984

Token 284: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02975071594119072
    2. ' [' → logprob: -3.5297508239746094
    3. '[N' → logprob: -15.27975082397461
    4. '[n' → logprob: -17.27975082397461
    5. '   ' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.52975082397461
    7. '1' → logprob: -19.27975082397461
    8. '([' → logprob: -19.90475082397461
    9. ' ' → logprob: -20.77975082397461
    10. '[int' → logprob: -20.90475082397461

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -20.625
    4. ']' → logprob: -21.875
    5. '  ' → logprob: -22.25
    6. '```' → logprob: -22.25
    7. '0' → logprob: -22.375
    8. '' → logprob: -23.25
    9. '

' → logprob: -23.625
    10. '１' → logprob: -23.75

Token 286: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000799384550191462
    2. ']*' → logprob: -7.250799179077148
    3. ',' → logprob: -10.000799179077148
    4. ' ]' → logprob: -10.500799179077148
    5. ']*(' → logprob: -11.500799179077148
    6. ' for' → logprob: -12.625799179077148
    7. ']+' → logprob: -13.125799179077148
    8. ')' → logprob: -14.250799179077148
    9. '*' → logprob: -15.375799179077148
    10. ')]' → logprob: -15.500799179077148

Token 287: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01782972365617752
    2. ']*' → logprob: -4.142829895019531
    3. ']*(' → logprob: -6.767829895019531
    4. '*' → logprob: -7.517829895019531
    5. ']+' → logprob: -9.767829895019531
    6. ',' → logprob: -10.892829895019531
    7. ' for' → logprob: -11.267829895019531
    8. 'for' → logprob: -12.017829895019531
    9. ' ]' → logprob: -13.392829895019531
    10. ' *' → logprob: -13.517829895019531

Token 288: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.968312951968983e-06
    2. '(N' → logprob: -11.750009536743164
    3. ' N' → logprob: -13.750009536743164
    4. '200' → logprob: -14.000009536743164
    5. '(' → logprob: -16.250009536743164
    6. '	N' → logprob: -17.875009536743164
    7. '[N' → logprob: -18.875009536743164
    8. 'Ｎ' → logprob: -19.750009536743164
    9. '<N' → logprob: -20.125009536743164
    10. '   ' → logprob: -20.375009536743164

Token 289: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0035998327657580376
    2. '   ' → logprob: -6.503599643707275
    3. '    
' → logprob: -7.253599643707275
    4. ' 
' → logprob: -7.503599643707275
    5. 'fact' → logprob: -8.378600120544434
    6. '
' → logprob: -8.503600120544434
    7. '  
' → logprob: -8.628600120544434
    8. '   
' → logprob: -9.503600120544434
    9. '\n' → logprob: -9.628600120544434
    10. 'f' → logprob: -11.003600120544434

Token 290: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042386602610349655
    2. ' 
' → logprob: -4.417386531829834
    3. '\n' → logprob: -5.292386531829834
    4. 'fact' → logprob: -5.417386531829834
    5. ',' → logprob: -5.542386531829834
    6. '<|end|>' → logprob: -5.667386531829834
    7. ' ' → logprob: -6.042386531829834
    8. '' → logprob: -6.042386531829834
    9. '   ' → logprob: -6.667386531829834
    10. '    
' → logprob: -6.792386531829834

Token 291: ' Liste' (ID: 61030)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.7448186278343201
    2. ' fin' → logprob: -1.4948186874389648
    3. 'fact' → logprob: -1.6198186874389648
    4. 'for' → logprob: -3.369818687438965
    5. ' for' → logprob: -3.494818687438965
    6. 'f' → logprob: -4.369818687438965
    7. ' fact' → logprob: -4.869818687438965
    8. '
' → logprob: -4.994818687438965
    9. ' 
' → logprob: -5.994818687438965
    10. 'inv' → logprob: -6.369818687438965

Token 292: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' taille' (ID: 41644)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.16656140983104706
    2. 'N' → logprob: -1.9165613651275635
    3. '1' → logprob: -5.916561603546143
    4. 'range' → logprob: -7.416561603546143
    5. ' fact' → logprob: -7.416561603546143
    6. '(N' → logprob: -7.916561603546143
    7. 'n' → logprob: -8.166561126708984
    8. '0' → logprob: -8.291561126708984
    9. 'factor' → logprob: -8.416561126708984
    10. '<|end|>' → logprob: -8.666561126708984

Token 294: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0023895641788840294
    2. ' N' → logprob: -6.252389430999756
    3. '200' → logprob: -7.877389430999756
    4. '(N' → logprob: -10.627389907836914
    5. '[N' → logprob: -11.002389907836914
    6. ' ' → logprob: -11.752389907836914
    7. '	N' → logprob: -12.002389907836914
    8. '=N' → logprob: -12.377389907836914
    9. ')' → logprob: -12.502389907836914
    10. '>N' → logprob: -13.002389907836914

Token 295: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09400677680969238
    2. 'fact' → logprob: -2.9690067768096924
    3. ',' → logprob: -4.344006538391113
    4. '<|end|>' → logprob: -4.594006538391113
    5. ' 
' → logprob: -5.594006538391113
    6. 'for' → logprob: -5.844006538391113
    7. '  
' → logprob: -6.594006538391113
    8. ' fact' → logprob: -6.719006538391113
    9. ',
' → logprob: -6.719006538391113
    10. ' for' → logprob: -6.969006538391113

Token 296: ' initial' (ID: 4871)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.8705323338508606
    2. 'fin' → logprob: -0.8705323338508606
    3. 'fact' → logprob: -2.745532274246216
    4. ' fact' → logprob: -3.245532274246216
    5. ' for' → logprob: -3.870532274246216
    6. '<|end|>' → logprob: -4.870532512664795
    7. 'f' → logprob: -4.995532512664795
    8. '1' → logprob: -5.120532512664795
    9. 'for' → logprob: -5.620532512664795
    10. ' ' → logprob: -5.620532512664795

Token 297: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.002359594451263547
    2. 'isé' → logprob: -6.752359390258789
    3. 'is' → logprob: -7.252359390258789
    4. 'iz' → logprob: -8.502359390258789
    5. 'isées' → logprob: -9.002359390258789
    6. 'ized' → logprob: -9.252359390258789
    7. 'iser' → logprob: -10.252359390258789
    8. 'isés' → logprob: -11.502359390258789
    9. 'izada' → logprob: -12.627359390258789
    10. 'ised' → logprob: -13.002359390258789

Token 298: ' avec' (ID: 3937)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' des' (ID: 731)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.375036239624023
    3. '<|end|>' → logprob: -12.625036239624023
    4. 'des' → logprob: -14.750036239624023
    5. '```' → logprob: -15.000036239624023
    6. '[' → logprob: -15.125036239624023
    7. 'fact' → logprob: -15.375036239624023
    8. '...' → logprob: -16.625036239624023
    9. ' des' → logprob: -16.625036239624023
    10. '  ' → logprob: -16.875036239624023

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004491596482694149
    2. ' ' → logprob: -5.504491806030273
    3. ' ones' → logprob: -8.129491806030273
    4. 'uns' → logprob: -10.254491806030273
    5. 'ones' → logprob: -10.254491806030273
    6. ' uns' → logprob: -11.254491806030273
    7. ' ' → logprob: -11.254491806030273
    8. '```' → logprob: -12.504491806030273
    9. 'ent' → logprob: -12.879491806030273
    10. 'un' → logprob: -13.004491806030273

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026264708139933646
    2. 'ones' → logprob: -8.750262260437012
    3. ' ' → logprob: -9.500262260437012
    4. 'fact' → logprob: -11.750262260437012
    5. ' ones' → logprob: -12.250262260437012
    6. 'uns' → logprob: -12.875262260437012
    7. '```' → logprob: -13.000262260437012
    8. 's' → logprob: -13.625262260437012
    9. '[' → logprob: -13.625262260437012
    10. 'un' → logprob: -13.750262260437012

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007035273592919111
    2. '  
' → logprob: -6.382035255432129
    3. '    
' → logprob: -6.632035255432129
    4. 'fact' → logprob: -6.757035255432129
    5. ' 
' → logprob: -7.132035255432129
    6. 'for' → logprob: -7.507035255432129
    7. '
' → logprob: -7.882035255432129
    8. '\n' → logprob: -8.257035255432129
    9. '<|end|>' → logprob: -8.507035255432129
    10. '   
' → logprob: -8.757035255432129

Token 303: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6759933233261108
    2. ' for' → logprob: -1.5509933233261108
    3. 'for' → logprob: -2.3009934425354004
    4. '   ' → logprob: -2.5509934425354004
    5. '    
' → logprob: -3.5509934425354004
    6. 'fact' → logprob: -3.9259934425354004
    7. '  
' → logprob: -4.3009934425354
    8. ' 
' → logprob: -4.5509934425354
    9. '\n' → logprob: -4.6759934425354
    10. '   
' → logprob: -4.8009934425354

Token 304: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.15196777880191803
    2. 'for' → logprob: -2.026967763900757
    3. 'inv' → logprob: -4.901968002319336
    4. ' for' → logprob: -6.651968002319336
    5. ' fin' → logprob: -7.901968002319336
    6. 'i' → logprob: -9.276968002319336
    7. 'f' → logprob: -11.276968002319336
    8. ' inv' → logprob: -11.651968002319336
    9. 'inverse' → logprob: -11.776968002319336
    10. '   ' → logprob: -12.151968002319336

Token 305: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.173704271830502e-06
    2. '	v' → logprob: -13.62500286102295
    3. ' v' → logprob: -15.00000286102295
    4. 'в' → logprob: -15.37500286102295
    5. '[v' → logprob: -15.37500286102295
    6. '_v' → logprob: -15.75000286102295
    7. '```' → logprob: -15.87500286102295
    8. '[' → logprob: -16.375003814697266
    9. ',v' → logprob: -16.437503814697266
    10. '   ' → logprob: -16.437503814697266

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327328085899353
    2. '=' → logprob: -1.313273310661316
    3. '[' → logprob: -11.938273429870605
    4. '=[' → logprob: -13.063273429870605
    5. ' ' → logprob: -13.313273429870605
    6. ' =[' → logprob: -14.313273429870605
    7. ']' → logprob: -15.813273429870605
    8. '   ' → logprob: -16.06327247619629
    9. '＝' → logprob: -16.18827247619629
    10. '=[]' → logprob: -16.18827247619629

Token 307: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519305646419525
    2. ' [' → logprob: -1.501930594444275
    3. ' ' → logprob: -13.626930236816406
    4. '1' → logprob: -16.001930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '   ' → logprob: -16.876930236816406
    7. '=[' → logprob: -17.751930236816406
    8. '  ' → logprob: -18.251930236816406
    9. '([' → logprob: -18.251930236816406
    10. '[N' → logprob: -18.376930236816406

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -15.000000953674316
    4. '```' → logprob: -18.625001907348633
    5. '<|end|>' → logprob: -19.250001907348633
    6. ']' → logprob: -19.250001907348633
    7. '(' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '  ' → logprob: -19.875001907348633
    10. '0' → logprob: -20.687501907348633

Token 309: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002458430244587362
    2. ' ]' → logprob: -8.375246047973633
    3. ']*' → logprob: -11.625246047973633
    4. '*' → logprob: -12.750246047973633
    5. ')' → logprob: -13.625246047973633
    6. '   ' → logprob: -13.875246047973633
    7. ' *' → logprob: -14.500246047973633
    8. ' ' → logprob: -15.250246047973633
    9. '}' → logprob: -16.125246047973633
    10. '[' → logprob: -16.375246047973633

Token 310: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47672218084335327
    2. '*' → logprob: -0.9767221808433533
    3. ']' → logprob: -6.851722240447998
    4. '[' → logprob: -7.226722240447998
    5. ' ' → logprob: -8.35172176361084
    6. '[]' → logprob: -8.47672176361084
    7. ')' → logprob: -8.97672176361084
    8. '<|end|>' → logprob: -9.22672176361084
    9. '   ' → logprob: -9.60172176361084
    10. ' ]' → logprob: -10.35172176361084

Token 311: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.505351095460355e-05
    2. ' N' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.12507438659668
    4. '[N' → logprob: -17.37507438659668
    5. '	N' → logprob: -17.62507438659668
    6. '(N' → logprob: -18.00007438659668
    7. ' ' → logprob: -18.87507438659668
    8. '```' → logprob: -19.75007438659668
    9. '[' → logprob: -20.37507438659668
    10. 'n' → logprob: -20.37507438659668

Token 312: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16521401703357697
    2. '   ' → logprob: -2.4152140617370605
    3. '<|end|>' → logprob: -3.2902140617370605
    4. '    
' → logprob: -4.6652140617370605
    5. '  
' → logprob: -5.5402140617370605
    6. '\n' → logprob: -5.9152140617370605
    7. ' 
' → logprob: -5.9152140617370605
    8. ' ' → logprob: -6.2902140617370605
    9. ')' → logprob: -6.2902140617370605
    10. '   
' → logprob: -7.6652140617370605

Token 313: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9467482566833496
    2. '#' → logprob: -1.1967482566833496
    3. '
' → logprob: -1.3217482566833496
    4. '   ' → logprob: -3.5717482566833496
    5. '

' → logprob: -4.82174825668335
    6. ' for' → logprob: -5.82174825668335
    7. '    
' → logprob: -6.94674825668335
    8. '
' → logprob: -7.19674825668335
    9. 'def' → logprob: -7.44674825668335
    10. ' ' → logprob: -7.44674825668335

Token 314: ' Même' (ID: 89628)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5267168879508972
    2. 'fact' → logprob: -1.526716947555542
    3. ' [' → logprob: -3.026716947555542
    4. '<|end|>' → logprob: -3.526716947555542
    5. ' fact' → logprob: -3.901716947555542
    6. '1' → logprob: -4.026716709136963
    7. 'N' → logprob: -4.026716709136963
    8. ' ' → logprob: -4.151716709136963
    9. '#' → logprob: -5.276716709136963
    10. '
' → logprob: -5.651716709136963

Token 315: ' chose' (ID: 15505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8593193292617798
    2. '[' → logprob: -0.9843193292617798
    3. ' ]' → logprob: -3.2343192100524902
    4. ']' → logprob: -3.2343192100524902
    5. '1' → logprob: -3.4843192100524902
    6. ')' → logprob: -3.7343192100524902
    7. 'fact' → logprob: -4.10931921005249
    8. '<|end|>' → logprob: -4.85931921005249
    9. '  ' → logprob: -5.23431921005249
    10. '[N' → logprob: -5.35931921005249

Token 316: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09080801159143448
    2. '    
' → logprob: -2.8408079147338867
    3. '
' → logprob: -4.215807914733887
    4. 'for' → logprob: -5.340807914733887
    5. ' for' → logprob: -5.465807914733887
    6. '  
' → logprob: -7.215807914733887
    7. '   
' → logprob: -7.465807914733887
    8. 'def' → logprob: -7.465807914733887
    9. '<|end|>' → logprob: -7.590807914733887
    10. '\n' → logprob: -7.840807914733887

Token 317: ' les' (ID: 1341)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.043673716485500336
    2. 'N' → logprob: -3.9186737537384033
    3. ' fact' → logprob: -4.918673515319824
    4. 'fin' → logprob: -5.168673515319824
    5. '[N' → logprob: -5.418673515319824
    6. '[' → logprob: -6.543673515319824
    7. ' N' → logprob: -7.168673515319824
    8. ')' → logprob: -7.418673515319824
    9. ']' → logprob: -7.668673515319824
    10. '   ' → logprob: -7.793673515319824

Token 318: ' invers' (ID: 38721)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.007650876417756081
    2. 'factor' → logprob: -5.382650852203369
    3. 'fin' → logprob: -7.007650852203369
    4. ' fact' → logprob: -7.132650852203369
    5. '   ' → logprob: -8.257651329040527
    6. ' ' → logprob: -8.507651329040527
    7. ']' → logprob: -8.757651329040527
    8. '1' → logprob: -8.882651329040527
    9. '[' → logprob: -9.132651329040527
    10. 'inverse' → logprob: -9.507651329040527

Token 319: 'es' (ID: 268)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.2122817039489746
    2. 'ers' → logprob: -1.4622817039489746
    3. '[' → logprob: -1.9622817039489746
    4. 'rs' → logprob: -2.4622817039489746
    5. 'iers' → logprob: -3.5872817039489746
    6. '[]' → logprob: -3.5872817039489746
    7. 's' → logprob: -3.5872817039489746
    8. 'als' → logprob: -4.087281703948975
    9. 'vers' → logprob: -4.087281703948975
    10. 'sers' → logprob: -4.212281703948975

Token 320: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8859103322029114
    2. '   ' → logprob: -1.0109102725982666
    3. '[' → logprob: -2.8859102725982666
    4. '
' → logprob: -3.0109102725982666
    5. 'fact' → logprob: -3.0109102725982666
    6. '    
' → logprob: -4.260910511016846
    7. 'def' → logprob: -4.260910511016846
    8. ' for' → logprob: -4.635910511016846
    9. '  
' → logprob: -5.510910511016846
    10. ' ' → logprob: -5.635910511016846

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1728505641222
    2. 'for' → logprob: -2.6728506088256836
    3. '    
' → logprob: -2.9228506088256836
    4. '
' → logprob: -3.7978506088256836
    5. ' for' → logprob: -4.422850608825684
    6. '  
' → logprob: -7.547850608825684
    7. '   
' → logprob: -8.172850608825684
    8. ' 
' → logprob: -8.422850608825684
    9. '#' → logprob: -9.172850608825684
    10. '

' → logprob: -9.797850608825684

Token 322: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09338219463825226
    2. ' for' → logprob: -3.0933821201324463
    3. '   ' → logprob: -3.2183821201324463
    4. '#' (adapté à ' #') → logprob: -6.718382358551025
    5. '    
' → logprob: -6.968382358551025
    6. '
' → logprob: -7.343382358551025
    7. ' ' → logprob: -8.093381881713867
    8. ' 
' → logprob: -8.843381881713867
    9. '   
' → logprob: -9.343381881713867
    10. '  
' → logprob: -9.468381881713867

Token 323: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00045700959162786603
    2. '#' → logprob: -7.875456809997559
    3. ' for' → logprob: -9.500456809997559
    4. 'i' → logprob: -13.625456809997559
    5. '   ' → logprob: -14.375456809997559
    6. '```' → logprob: -16.625457763671875
    7. 'def' → logprob: -16.750457763671875
    8. ' ' → logprob: -17.000457763671875
    9. 'fo' → logprob: -17.125457763671875
    10. ' #' → logprob: -17.250457763671875

Token 324: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3329511284828186
    2. ' for' → logprob: -1.5829510688781738
    3. '   ' → logprob: -2.707951068878174
    4. ' ' → logprob: -4.707951068878174
    5. '[' → logprob: -7.082951068878174
    6. '    ' → logprob: -8.707951545715332
    7. '_' → logprob: -8.707951545715332
    8. '[]' → logprob: -8.832951545715332
    9. 'fact' → logprob: -8.832951545715332
    10. '=' → logprob: -9.082951545715332

Token 325: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -1.17156183719635
    2. 'i' → logprob: -1.29656183719635
    3. ' i' → logprob: -1.29656183719635
    4. 'fact' → logprob: -2.2965617179870605
    5. 'factor' → logprob: -3.6715617179870605
    6. ' factorial' → logprob: -4.7965617179870605
    7. ' for' → logprob: -6.0465617179870605
    8. 'for' → logprob: -6.6715617179870605
    9. ' range' → logprob: -6.7965617179870605
    10. ' ' → logprob: -6.7965617179870605

Token 326: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.05982076749205589
    2. 'orial' → logprob: -2.9348206520080566
    3. 'ories' → logprob: -6.059820652008057
    4. 'ors' → logprob: -6.934820652008057
    5. 'o' → logprob: -7.434820652008057
    6. 'ory' → logprob: -8.059821128845215
    7. 'ort' → logprob: -8.684821128845215
    8. 'for' → logprob: -9.059821128845215
    9. 'oria' → logprob: -9.434821128845215
    10. '[' → logprob: -9.809821128845215

Token 327: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -9.305326966568828e-05
    2. 'els' → logprob: -10.625093460083008
    3. 'lles' → logprob: -10.875093460083008
    4. 'ales' → logprob: -11.375093460083008
    5. 'alles' → logprob: -11.375093460083008
    6. 'nelles' → logprob: -11.875093460083008
    7. 'es' → logprob: -12.250093460083008
    8. '```' → logprob: -12.500093460083008
    9. 'eles' → logprob: -12.875093460083008
    10. '#' → logprob: -13.500093460083008

Token 328: ' modulo' (ID: 112372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3842838704586029
    2. ' for' → logprob: -1.2592839002609253
    3. '   ' → logprob: -3.6342837810516357
    4. '[' → logprob: -5.259284019470215
    5. ' ' → logprob: -6.884284019470215
    6. '[i' → logprob: -7.384284019470215
    7. '
' → logprob: -7.759284019470215
    8. ' =' → logprob: -7.759284019470215
    9. '    
' → logprob: -8.384284019470215
    10. '	for' → logprob: -8.634284019470215

Token 329: ' MOD' (ID: 32868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4153538942337036
    2. ' N' → logprob: -1.5403538942337036
    3. 'i' → logprob: -1.6653538942337036
    4. ' i' → logprob: -1.7903538942337036
    5. 'N' → logprob: -2.665353775024414
    6. ')' → logprob: -3.665353775024414
    7. '1' → logprob: -4.290353775024414
    8. ' range' → logprob: -4.290353775024414
    9. 'range' → logprob: -4.415353775024414
    10. '   ' → logprob: -4.415353775024414

Token 330: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7797480225563049
    2. '   ' → logprob: -1.2797479629516602
    3. 'for' → logprob: -1.4047479629516602
    4. '
' → logprob: -4.15474796295166
    5. '    
' → logprob: -6.40474796295166
    6. '	for' → logprob: -8.65474796295166
    7. '  
' → logprob: -9.02974796295166
    8. ' 
' → logprob: -9.27974796295166
    9. ' ' → logprob: -9.52974796295166
    10. '\n' → logprob: -10.40474796295166

Token 331: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16022655367851257
    2. 'i' → logprob: -1.910226583480835
    3. '	i' → logprob: -13.535226821899414
    4. ' ' → logprob: -14.910226821899414
    5. '   ' → logprob: -15.285226821899414
    6. '_i' → logprob: -16.035226821899414
    7. '_' → logprob: -16.160226821899414
    8. ' range' → logprob: -16.660226821899414
    9. '(i' → logprob: -17.035226821899414
    10. ' _' → logprob: -17.035226821899414

Token 332: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014197122305631638
    2. 'i' → logprob: -4.26419734954834
    3. ' ' → logprob: -10.76419734954834
    4. '	i' → logprob: -11.51419734954834
    5. ' ' → logprob: -13.76419734954834
    6. ' _' → logprob: -14.01419734954834
    7. '_' → logprob: -14.88919734954834
    8. '_i' → logprob: -16.139196395874023
    9. '   ' → logprob: -17.139196395874023
    10. '  ' → logprob: -18.014196395874023

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024806505534797907
    2. ' i' → logprob: -6.002480506896973
    3. 'ent' → logprob: -13.127480506896973
    4. ' nombres' → logprob: -13.752480506896973
    5. ' ' → logprob: -14.502480506896973
    6. '   ' → logprob: -15.627480506896973
    7. '	i' → logprob: -15.627480506896973
    8. 'indices' → logprob: -15.752480506896973
    9. '```' → logprob: -15.752480506896973
    10. '1' → logprob: -15.877480506896973

Token 334: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01150045357644558
    2. 'in' → logprob: -4.761500358581543
    3. ' i' → logprob: -6.386500358581543
    4. ' en' → logprob: -8.011500358581543
    5. ' ' → logprob: -8.136500358581543
    6. 'i' → logprob: -8.761500358581543
    7. 'en' → logprob: -9.386500358581543
    8. '   ' → logprob: -9.636500358581543
    9. ',' → logprob: -9.761500358581543
    10. 'range' → logprob: -10.261500358581543

Token 335: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026494083926081657
    2. 'range' → logprob: -3.651494026184082
    3. ' ' → logprob: -8.651494026184082
    4. '1' → logprob: -12.151494026184082
    5. '   ' → logprob: -12.901494026184082
    6. '	range' → logprob: -13.026494026184082
    7. ' i' → logprob: -13.401494026184082
    8. '2' → logprob: -13.526494026184082
    9. ' ' → logprob: -13.901494026184082
    10. '_range' → logprob: -14.151494026184082

Token 336: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0838489755988121
    2. '1' → logprob: -2.8338489532470703
    3. ' range' → logprob: -3.8338489532470703
    4. '2' → logprob: -11.70884895324707
    5. ' ' → logprob: -12.20884895324707
    6. '   ' → logprob: -12.70884895324707
    7. '```' → logprob: -14.83384895324707
    8. '(range' → logprob: -15.95884895324707
    9. 'in' → logprob: -16.20884895324707
    10. '	range' → logprob: -16.20884895324707

Token 337: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.00813236366957426
    2. 'à' → logprob: -5.508132457733154
    3. ' to' → logprob: -6.258132457733154
    4. ',' → logprob: -6.883132457733154
    5. ' jusqu' → logprob: -8.008131980895996
    6. ' ' → logprob: -8.258131980895996
    7. 'to' → logprob: -8.883131980895996
    8. '   ' → logprob: -9.633131980895996
    9. ' in' → logprob: -10.508131980895996
    10. '    ' → logprob: -10.633131980895996

Token 338: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.12768013775348663
    2. 'N' → logprob: -2.1276800632476807
    3. ' ' → logprob: -7.62768030166626
    4. '1' → logprob: -8.752679824829102
    5. '   ' → logprob: -9.877679824829102
    6. '  ' → logprob: -11.127679824829102
    7. ' range' → logprob: -11.627679824829102
    8. 'n' → logprob: -11.627679824829102
    9. '	N' → logprob: -11.752679824829102
    10. ' n' → logprob: -12.127679824829102

Token 339: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1320210099220276
    2. '   ' → logprob: -3.632020950317383
    3. 'range' → logprob: -3.757020950317383
    4. ':
' → logprob: -4.007020950317383
    5. '):' → logprob: -4.007020950317383
    6. '
' → logprob: -4.507020950317383
    7. '1' → logprob: -5.132020950317383
    8. '):
' → logprob: -5.257020950317383
    9. ' range' → logprob: -5.507020950317383
    10. '[' → logprob: -5.632020950317383

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004422524478286505
    2. ' ' → logprob: -6.004422664642334
    3. '   ' → logprob: -7.004422664642334
    4. '-' → logprob: -7.004422664642334
    5. ' -' → logprob: -10.004422187805176
    6. '2' → logprob: -10.879422187805176
    7. '  ' → logprob: -11.254422187805176
    8. 'N' → logprob: -11.504422187805176
    9. '
' → logprob: -11.629422187805176
    10. ')' → logprob: -11.879422187805176

Token 341: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31077590584754944
    2. 'for' → logprob: -2.3107759952545166
    3. '   ' → logprob: -2.4357759952545166
    4. ':' → logprob: -2.9357759952545166
    5. '
' → logprob: -4.3107757568359375
    6. ' i' → logprob: -5.1857757568359375
    7. ':
' → logprob: -5.8107757568359375
    8. 'i' → logprob: -7.3107757568359375
    9. ' ' → logprob: -7.3107757568359375
    10. ',' → logprob: -7.3107757568359375

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06726942956447601
    2. ' for' → logprob: -2.8172693252563477
    3. 'for' → logprob: -5.817269325256348
    4. '
' → logprob: -6.692269325256348
    5. '    
' → logprob: -7.317269325256348
    6. '```' → logprob: -9.317269325256348
    7. ' 
' → logprob: -9.442269325256348
    8. ':' → logprob: -9.692269325256348
    9. '  
' → logprob: -10.317269325256348
    10. '	for' → logprob: -10.567269325256348

Token 343: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09584299474954605
    2. ' for' → logprob: -2.5958430767059326
    3. 'for' (adapté à ' for') → logprob: -4.3458428382873535
    4. '    
' → logprob: -6.3458428382873535
    5. '
' → logprob: -7.3458428382873535
    6. '\n' → logprob: -7.5958428382873535
    7. ' 
' → logprob: -7.7208428382873535
    8. '  
' → logprob: -8.845843315124512
    9. '```' → logprob: -9.470843315124512
    10. '   
' → logprob: -9.595843315124512

Token 344: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00911697931587696
    2. 'i' → logprob: -5.134117126464844
    3. ' ' → logprob: -5.759117126464844
    4. '  ' → logprob: -11.509117126464844
    5. ' _' → logprob: -11.509117126464844
    6. '	i' → logprob: -12.134117126464844
    7. '_' → logprob: -13.384117126464844
    8. ' ‌' → logprob: -14.009117126464844
    9. '_i' → logprob: -14.509117126464844
    10. ' ' → logprob: -15.259117126464844

Token 345: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004727380350232124
    2. 'in' → logprob: -5.379727363586426
    3. ' ' → logprob: -9.379727363586426
    4. ' i' → logprob: -11.254727363586426
    5. '	in' → logprob: -12.629727363586426
    6. '   ' → logprob: -13.254727363586426
    7. '  ' → logprob: -13.379727363586426
    8. ',' → logprob: -14.129727363586426
    9. '1' → logprob: -15.129727363586426
    10. 'range' → logprob: -15.254727363586426

Token 346: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10020796209573746
    2. 'range' → logprob: -2.350208044052124
    3. '(range' → logprob: -14.600208282470703
    4. ' ' → logprob: -14.725208282470703
    5. '1' → logprob: -14.975208282470703
    6. ' in' → logprob: -15.850208282470703
    7. '	range' → logprob: -16.600208282470703
    8. '   ' → logprob: -18.100208282470703
    9. 'in' → logprob: -18.225208282470703
    10. '```' → logprob: -18.725208282470703

Token 347: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015139080351218581
    2. '1' → logprob: -6.501513957977295
    3. ' (' → logprob: -11.501513481140137
    4. ' ' → logprob: -14.251513481140137
    5. '   ' → logprob: -14.376513481140137
    6. '(
' → logprob: -15.501513481140137
    7. ')' → logprob: -19.376514434814453
    8. '2' → logprob: -19.501514434814453
    9. '[' → logprob: -20.001514434814453
    10. ',' → logprob: -20.251514434814453

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.125296592712402
    4. '2' → logprob: -18.500295639038086
    5. '(' → logprob: -18.625295639038086
    6. '  ' → logprob: -18.750295639038086
    7. ')' → logprob: -18.750295639038086
    8. '```' → logprob: -19.250295639038086
    9. '    ' → logprob: -19.500295639038086
    10. '１' → logprob: -20.000295639038086

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001350234029814601
    2. ' ,' → logprob: -6.751350402832031
    3. ',N' → logprob: -8.626350402832031
    4. ' N' → logprob: -15.876350402832031
    5. 'N' → logprob: -16.12635040283203
    6. ')' → logprob: -16.25135040283203
    7. ',
' → logprob: -16.37635040283203
    8. ' ' → logprob: -16.62635040283203
    9. ',n' → logprob: -16.87635040283203
    10. '   ' → logprob: -17.00135040283203

Token 350: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004078878089785576
    2. ' N' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.12907886505127
    4. '	N' → logprob: -15.62907886505127
    5. '    ' → logprob: -19.004079818725586
    6. ' ' → logprob: -19.629079818725586
    7. '  ' → logprob: -20.754079818725586
    8. ')' → logprob: -21.129079818725586
    9. 'n' → logprob: -21.254079818725586
    10. '200' → logprob: -22.379079818725586

Token 351: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002608356298878789
    2. '):
' → logprob: -6.002608299255371
    3. ' ):' → logprob: -10.002608299255371
    4. ')' → logprob: -10.002608299255371
    5. ':' → logprob: -10.127608299255371
    6. '):
' → logprob: -14.252608299255371
    7. ']:' → logprob: -14.877608299255371
    8. '   ' → logprob: -14.877608299255371
    9. '}:' → logprob: -15.502608299255371
    10. ',' → logprob: -16.502609252929688

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3062405288219452
    2. '   ' → logprob: -1.6812405586242676
    3. 'fact' → logprob: -3.0562405586242676
    4. ' fact' → logprob: -3.9312405586242676
    5. ':' → logprob: -5.681240558624268
    6. '    ' → logprob: -5.806240558624268
    7. '    
' → logprob: -6.681240558624268
    8. '        
' → logprob: -6.806240558624268
    9. '     
' → logprob: -7.681240558624268
    10. ' 
' → logprob: -8.30624008178711

Token 353: ' #' (ID: 1069)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.01106373593211174
    2. ' fact' → logprob: -4.511063575744629
    3. '   ' → logprob: -11.136063575744629
    4. '_fact' → logprob: -14.136063575744629
    5. '       ' → logprob: -15.636063575744629
    6. '    ' → logprob: -15.761063575744629
    7. 'Fact' → logprob: -15.761063575744629
    8. 'factor' → logprob: -16.011064529418945
    9. '.fact' → logprob: -16.011064529418945
    10. 'facts' → logprob: -17.761064529418945

Token 354: ' La' (ID: 3038)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.001510335598140955
    2. ' fact' → logprob: -6.501510143280029
    3. '   ' → logprob: -12.001510620117188
    4. '_fact' → logprob: -13.751510620117188
    5. 'factor' → logprob: -15.501510620117188
    6. 'fac' → logprob: -15.751510620117188
    7. 'facts' → logprob: -16.001510620117188
    8. 'Fact' → logprob: -16.001510620117188
    9. '.fact' → logprob: -16.126510620117188
    10. '```' → logprob: -16.751510620117188

Token 355: ' factor' (ID: 12332)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.016454020515084267
    2. ' fact' → logprob: -4.141454219818115
    3. ' ' → logprob: -8.766453742980957
    4. '   ' → logprob: -9.391453742980957
    5. 'act' → logprob: -9.641453742980957
    6. 'factor' → logprob: -9.891453742980957
    7. '_fact' → logprob: -10.641453742980957
    8. 'f' → logprob: -12.266453742980957
    9. 'Fact' → logprob: -12.391453742980957
    10. ' facto' → logprob: -12.641453742980957

Token 356: 'ielle' (ID: 22380)
  Prédit: 'iel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.6654325127601624
    2. 'ielle' → logprob: -0.7904325127601624
    3. 'ial' → logprob: -3.7904324531555176
    4. '=' → logprob: -5.540432453155518
    5. 'ials' → logprob: -6.790432453155518
    6. 'i' → logprob: -6.915432453155518
    7. '_' → logprob: -6.915432453155518
    8. 'iels' → logprob: -7.165432453155518
    9. '   ' → logprob: -7.790432453155518
    10. 'iele' → logprob: -7.915432453155518

Token 357: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007122749462723732
    2. '[' → logprob: -5.63212251663208
    3. 'fact' → logprob: -5.88212251663208
    4. 's' → logprob: -7.88212251663208
    5. '=' → logprob: -9.382122993469238
    6. ' =' → logprob: -9.757122993469238
    7. '_fact' → logprob: -9.882122993469238
    8. ' [' → logprob: -10.132122993469238
    9. 'factor' → logprob: -10.507122993469238
    10. ' *=' → logprob: -10.882122993469238

Token 358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.984426736831665
    2. ' i' → logprob: -0.984426736831665
    3. 'fact' → logprob: -1.484426736831665
    4. ' fact' → logprob: -3.734426736831665
    5. '   ' → logprob: -6.484426498413086
    6. '[i' → logprob: -8.359426498413086
    7. '(i' → logprob: -8.984426498413086
    8. ' ' → logprob: -9.484426498413086
    9. 'factor' → logprob: -9.859426498413086
    10. '	i' → logprob: -9.984426498413086

Token 359: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5625079274177551
    2. ' =' → logprob: -1.4375078678131104
    3. 'fact' → logprob: -1.8125078678131104
    4. ' *=' → logprob: -4.9375081062316895
    5. '*=' → logprob: -5.3125081062316895
    6. '*' → logprob: -5.4375081062316895
    7. 'factor' → logprob: -5.8125081062316895
    8. '[i' → logprob: -6.0625081062316895
    9. '_fact' → logprob: -6.0625081062316895
    10. ' fact' → logprob: -6.5625081062316895

Token 360: ' la' (ID: 557)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.10384637117385864
    2. ' fact' → logprob: -2.353846311569214
    3. ' (' → logprob: -6.353846549987793
    4. '   ' → logprob: -7.353846549987793
    5. '(f' → logprob: -7.478846549987793
    6. '(i' → logprob: -7.603846549987793
    7. '_fact' → logprob: -9.978846549987793
    8. '(' → logprob: -10.228846549987793
    9. 'factor' → logprob: -10.853846549987793
    10. 'i' → logprob: -11.103846549987793

Token 361: ' factor' (ID: 12332)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.03417128697037697
    2. ' fact' → logprob: -3.6591713428497314
    3. 'i' → logprob: -5.784171104431152
    4. ' i' → logprob: -6.659171104431152
    5. '(i' → logprob: -6.659171104431152
    6. 'factor' → logprob: -6.784171104431152
    7. ' (' → logprob: -7.284171104431152
    8. '   ' → logprob: -9.159171104431152
    9. ' ' → logprob: -9.784171104431152
    10. ' factorial' → logprob: -10.034171104431152

Token 362: 'ielle' (ID: 22380)
  Prédit: 'iel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iel' → logprob: -0.2823702394962311
    2. 'ielle' → logprob: -1.5323702096939087
    3. '*' → logprob: -5.032370090484619
    4. 'ial' → logprob: -5.157370090484619
    5. '!' → logprob: -5.407370090484619
    6. '[i' → logprob: -5.907370090484619
    7. 'e' → logprob: -6.407370090484619
    8. 's' → logprob: -6.532370090484619
    9. '   ' → logprob: -6.657370090484619
    10. 'i' → logprob: -6.782370090484619

Token 363: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00977556686848402
    2. '[' → logprob: -5.259775638580322
    3. '   ' → logprob: -5.634775638580322
    4. 's' → logprob: -7.634775638580322
    5. ' de' → logprob: -8.259775161743164
    6. ' [' → logprob: -9.634775161743164
    7. 'de' → logprob: -10.134775161743164
    8. ' précédente' → logprob: -10.759775161743164
    9. '[j' → logprob: -11.259775161743164
    10. '    ' → logprob: -11.509775161743164

Token 364: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18095360696315765
    2. ' i' → logprob: -1.8059536218643188
    3. '(i' → logprob: -7.930953502655029
    4. '   ' → logprob: -7.930953502655029
    5. ' (' → logprob: -8.180953979492188
    6. ' ' → logprob: -8.930953979492188
    7. '[i' → logprob: -10.055953979492188
    8. '	i' → logprob: -10.680953979492188
    9. '    ' → logprob: -12.805953979492188
    10. '  ' → logprob: -12.930953979492188

Token 365: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18028339743614197
    2. ' i' → logprob: -1.8052834272384644
    3. '   ' → logprob: -7.680283546447754
    4. ' ' → logprob: -9.805283546447754
    5. '(i' → logprob: -12.180283546447754
    6. '    ' → logprob: -12.180283546447754
    7. '	i' → logprob: -12.430283546447754
    8. '  ' → logprob: -13.055283546447754
    9. ' (' → logprob: -13.305283546447754
    10. ')' → logprob: -13.805283546447754

Token 366: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02976691536605358
    2. ' -' → logprob: -3.529766798019409
    3. ')' → logprob: -11.154767036437988
    4. ' ' → logprob: -14.154767036437988
    5. '   ' → logprob: -14.404767036437988
    6. '-
' → logprob: -16.029766082763672
    7. '−' → logprob: -16.279766082763672
    8. '-)' → logprob: -16.404766082763672
    9. '	' → logprob: -16.654766082763672
    10. ' ' → logprob: -16.779766082763672

Token 367: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5528329014778137
    2. '1' → logprob: -1.177832841873169
    3. ' ' → logprob: -2.302832841873169
    4. ' )' → logprob: -4.677833080291748
    5. 'i' → logprob: -5.552833080291748
    6. '   ' → logprob: -6.052833080291748
    7. ' i' → logprob: -6.927833080291748
    8. '  ' → logprob: -9.80283260345459
    9. '```' → logprob: -9.80283260345459
    10. '    ' → logprob: -10.55283260345459

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003622793301474303
    2. ' )' → logprob: -8.625362396240234
    3. ')*' → logprob: -9.125362396240234
    4. '   ' → logprob: -10.750362396240234
    5. '*' → logprob: -11.125362396240234
    6. ']' → logprob: -11.500362396240234
    7. '[i' → logprob: -11.750362396240234
    8. ' *' → logprob: -11.875362396240234
    9. ' ' → logprob: -12.000362396240234
    10. '*)' → logprob: -13.750362396240234

Token 369: ' multip' (ID: 17524)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5777585506439209
    2. ' *' → logprob: -0.8277585506439209
    3. '*i' → logprob: -6.7027587890625
    4. ' ' → logprob: -7.8277587890625
    5. '[i' → logprob: -9.2027587890625
    6. '   ' → logprob: -9.8277587890625
    7. ' ' → logprob: -11.9527587890625
    8. ' multiplied' → logprob: -11.9527587890625
    9. '```' → logprob: -12.9527587890625
    10. ')' → logprob: -12.9527587890625

Token 370: 'li' (ID: 1307)
  Prédit: 'lié'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.396788090467453
    2. '   ' → logprob: -2.8967881202697754
    3. 'ip' → logprob: -2.8967881202697754
    4. 'ipl' → logprob: -3.0217881202697754
    5. 'lication' → logprob: -3.2717881202697754
    6. '*' → logprob: -3.3967881202697754
    7. ' par' → logprob: -3.8967881202697754
    8. ' i' → logprob: -4.021788120269775
    9. 'i' → logprob: -4.646788120269775
    10. '[i' → logprob: -4.896788120269775

Token 371: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.186234712600708
    2. 'é' → logprob: -1.811234712600708
    3. 'quée' → logprob: -6.061234474182129
    4. '*' → logprob: -6.436234474182129
    5. 'e' → logprob: -7.436234474182129
    6. 'ant' → logprob: -7.811234474182129
    7. 'és' → logprob: -8.436234474182129
    8. '   ' → logprob: -9.061234474182129
    9. 'i' → logprob: -9.311234474182129
    10. 'ées' → logprob: -9.436234474182129

Token 372: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.11014824360609055
    2. 'par' → logprob: -2.7351481914520264
    3. '*i' → logprob: -3.8601481914520264
    4. ' i' → logprob: -4.7351484298706055
    5. '*' → logprob: -6.1101484298706055
    6. '   ' → logprob: -6.7351484298706055
    7. 'fact' → logprob: -7.2351484298706055
    8. ' *' → logprob: -7.3601484298706055
    9. 'i' → logprob: -7.3601484298706055
    10. ' ' → logprob: -7.4851484298706055

Token 373: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31326258182525635
    2. 'i' → logprob: -1.3132625818252563
    3. '	i' → logprob: -14.313262939453125
    4. ' ' → logprob: -16.313262939453125
    5. '   ' → logprob: -16.313262939453125
    6. ' ' → logprob: -18.438262939453125
    7. '    ' → logprob: -19.438262939453125
    8. '(i' → logprob: -19.688262939453125
    9. '[i' → logprob: -20.563262939453125
    10. ' ‌' → logprob: -20.563262939453125

Token 374: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06656289845705032
    2. '*' → logprob: -3.1915628910064697
    3. 'fact' → logprob: -4.316563129425049
    4. ')' → logprob: -5.941563129425049
    5. ' ' → logprob: -6.191563129425049
    6. '   ' → logprob: -6.191563129425049
    7. ' fact' → logprob: -6.691563129425049
    8. '_fact' → logprob: -7.441563129425049
    9. ',' → logprob: -7.566563129425049
    10. ']' → logprob: -8.69156265258789

Token 375: '       ' (ID: 309)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.7240311503410339
    2. 'fact' → logprob: -0.7240311503410339
    3. '   ' → logprob: -3.5990312099456787
    4. '       ' → logprob: -6.9740309715271
    5. '_fact' → logprob: -7.3490309715271
    6. ' *' → logprob: -7.8490309715271
    7. ':' → logprob: -8.099031448364258
    8. '*' → logprob: -8.849031448364258
    9. 'Fact' → logprob: -8.849031448364258
    10. '    
' → logprob: -9.099031448364258

Token 376: ' #' (ID: 1069)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.22645872831344604
    2. 'fact' → logprob: -1.6014587879180908
    3. '   ' → logprob: -6.976458549499512
    4. '_fact' → logprob: -9.976458549499512
    5. '       ' → logprob: -10.601458549499512
    6. '    ' → logprob: -11.726458549499512
    7. ' fakt' → logprob: -11.976458549499512
    8. 'Fact' → logprob: -12.101458549499512
    9. '.fact' → logprob: -12.101458549499512
    10. ' ' → logprob: -12.476458549499512

Token 377: ' On' (ID: 2160)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4311242699623108
    2. ' fact' → logprob: -1.056124210357666
    3. '   ' → logprob: -6.181124210357666
    4. '_fact' → logprob: -8.681124687194824
    5. '    ' → logprob: -10.056124687194824
    6. '       ' → logprob: -10.181124687194824
    7. '.fact' → logprob: -11.056124687194824
    8. 'Fact' → logprob: -11.181124687194824
    9. ' ' → logprob: -11.181124687194824
    10. ' fakt' → logprob: -11.431124687194824

Token 378: ' prend' (ID: 37463)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -1.0532366037368774
    2. ' %=' → logprob: -1.4282366037368774
    3. 'fact' → logprob: -1.8032366037368774
    4. '=' → logprob: -2.303236484527588
    5. '%' → logprob: -2.678236484527588
    6. ' fact' → logprob: -4.053236484527588
    7. '*=' → logprob: -4.053236484527588
    8. ')' → logprob: -4.553236484527588
    9. ' =' → logprob: -4.928236484527588
    10. '*' → logprob: -4.928236484527588

Token 379: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3711754381656647
    2. ' fact' → logprob: -2.121175527572632
    3. 'fact' → logprob: -2.121175527572632
    4. ' ' → logprob: -3.496175527572632
    5. '(' → logprob: -3.621175527572632
    6. '(i' → logprob: -5.621175289154053
    7. ' i' → logprob: -6.496175289154053
    8. '   ' → logprob: -6.621175289154053
    9. '_fact' → logprob: -6.621175289154053
    10. ' modulo' → logprob: -6.871175289154053

Token 380: ' résultat' (ID: 62556)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9403439164161682
    2. 'fact' → logprob: -0.9403439164161682
    3. 'mod' → logprob: -2.8153438568115234
    4. ' modulo' → logprob: -3.0653438568115234
    5. ' %' → logprob: -3.1903438568115234
    6. '*' → logprob: -3.3153438568115234
    7. ' fact' → logprob: -4.315343856811523
    8. ' *' → logprob: -5.190343856811523
    9. ' i' → logprob: -6.065343856811523
    10. 'i' → logprob: -6.190343856811523

Token 381: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10180898010730743
    2. '%' → logprob: -2.476809024810791
    3. ' ' → logprob: -5.351809024810791
    4. ' modulo' → logprob: -6.226809024810791
    5. '[i' → logprob: -6.601809024810791
    6. '   ' → logprob: -6.851809024810791
    7. ')' → logprob: -7.101809024810791
    8. 'mod' → logprob: -7.726809024810791
    9. ' *' → logprob: -7.851809024810791
    10. ',' → logprob: -7.851809024810791

Token 382: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.38687458634376526
    2. 'MOD' → logprob: -1.1368745565414429
    3. ' ' → logprob: -13.386874198913574
    4. '_MOD' → logprob: -13.636874198913574
    5. ' ' → logprob: -14.886874198913574
    6. '   ' → logprob: -15.136874198913574
    7. '.MOD' → logprob: -15.386874198913574
    8. '  ' → logprob: -17.38687515258789
    9. '(M' → logprob: -18.26187515258789
    10. '    ' → logprob: -18.38687515258789

Token 383: ' à' (ID: 1221)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.24831444025039673
    2. '   ' → logprob: -2.248314380645752
    3. ' fact' → logprob: -2.623314380645752
    4. ':' → logprob: -3.873314380645752
    5. ')' → logprob: -5.123314380645752
    6. ',' → logprob: -5.373314380645752
    7. '_fact' → logprob: -5.498314380645752
    8. '
' → logprob: -6.623314380645752
    9. '       ' → logprob: -6.873314380645752
    10. '```' → logprob: -7.498314380645752

Token 384: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.17499957978725433
    2. 'each' → logprob: -2.424999475479126
    3. 'i' → logprob: -3.049999475479126
    4. ' each' → logprob: -4.299999713897705
    5. '```' → logprob: -4.924999713897705
    6. ' i' → logprob: -6.174999713897705
    7. ' cada' → logprob: -8.299999237060547
    8. 'l' → logprob: -8.549999237060547
    9. '<|end|>' → logprob: -8.674999237060547
    10. 'Chaque' → logprob: -9.299999237060547

Token 385: ' étape' (ID: 83661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.314623475074768
    2. ' i' → logprob: -1.314623475074768
    3. '*' → logprob: -1.689623475074768
    4. '   ' → logprob: -2.4396233558654785
    5. ')' → logprob: -2.6896233558654785
    6. ' *' → logprob: -2.8146233558654785
    7. 'i' → logprob: -4.4396233558654785
    8. '  ' → logprob: -4.5646233558654785
    9. ' )' → logprob: -4.6896233558654785
    10. '=' → logprob: -5.0646233558654785

Token 386: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5309868454933167
    2. ' fact' → logprob: -1.7809867858886719
    3. 'fact' → logprob: -1.7809867858886719
    4. ':' → logprob: -2.780986785888672
    5. '       ' → logprob: -5.030986785888672
    6. ')' → logprob: -6.405986785888672
    7. '    
' → logprob: -7.030986785888672
    8. '_fact' → logprob: -7.280986785888672
    9. ' =' → logprob: -7.780986785888672
    10. '*' → logprob: -7.780986785888672

Token 387: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.228048637509346
    2. 'év' → logprob: -2.10304856300354
    3. ' garantir' → logprob: -2.97804856300354
    4. ' evitar' → logprob: -5.478048801422119
    5. ' conserver' → logprob: -5.603048801422119
    6. ' garder' → logprob: -5.603048801422119
    7. 'ev' → logprob: -5.728048801422119
    8. ' assurer' → logprob: -6.103048801422119
    9. 'é' → logprob: -6.478048801422119
    10. '’éviter' → logprob: -6.603048801422119

Token 388: ' les' (ID: 1341)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.696478009223938
    2. ' ' → logprob: -1.446478009223938
    3. '   ' → logprob: -2.3214778900146484
    4. '    ' → logprob: -3.0714778900146484
    5. ' (' → logprob: -3.5714778900146484
    6. 'overflow' → logprob: -4.071477890014648
    7. ' le' → logprob: -4.696477890014648
    8. ' i' → logprob: -4.821477890014648
    9. '```' → logprob: -4.821477890014648
    10. ' la' → logprob: -5.196477890014648

Token 389: ' dépasse' (ID: 165701)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.5017421841621399
    2. ' dépasse' → logprob: -1.6267421245574951
    3. ' déb' → logprob: -2.376742124557495
    4. 'overflow' → logprob: -2.376742124557495
    5. ' ' → logprob: -5.501742362976074
    6. 'dé' → logprob: -5.876742362976074
    7. 'd' → logprob: -6.001742362976074
    8. ' over' → logprob: -7.001742362976074
    9. 's' → logprob: -7.501742362976074
    10. ' dépass' → logprob: -7.876742362976074

Token 390: 'ments' (ID: 1626)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.744513213634491
    2. ' de' → logprob: -1.6195132732391357
    3. '_' → logprob: -2.1195132732391357
    4. ')' → logprob: -2.7445132732391357
    5. '   ' → logprob: -2.7445132732391357
    6. ' pas' → logprob: -3.6195132732391357
    7. ' _' → logprob: -4.244513034820557
    8. '  ' → logprob: -4.494513034820557
    9. '    ' → logprob: -5.244513034820557
    10. ' des' → logprob: -5.994513034820557

Token 391: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4857800304889679
    2. 'fact' → logprob: -2.1107800006866455
    3. ':' → logprob: -2.7357800006866455
    4. '    
' → logprob: -3.1107800006866455
    5. ')' → logprob: -3.4857800006866455
    6. ' fact' → logprob: -3.6107800006866455
    7. ',' → logprob: -4.235780239105225
    8. '    ' → logprob: -4.610780239105225
    9. ' i' → logprob: -4.610780239105225
    10. ' ' → logprob: -4.860780239105225

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017391441389918327
    2. '       ' → logprob: -5.142391204833984
    3. ':' → logprob: -5.642391204833984
    4. 'fact' → logprob: -5.642391204833984
    5. ' fact' → logprob: -6.142391204833984
    6. '    
' → logprob: -6.892391204833984
    7. '    ' → logprob: -7.892391204833984
    8. ' ' → logprob: -8.892391204833984
    9. ')' → logprob: -9.142391204833984
    10. ' :' → logprob: -9.767391204833984

Token 393: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.1298203021287918
    2. ' fact' → logprob: -2.2548203468322754
    3. '   ' → logprob: -4.129820346832275
    4. '       ' → logprob: -8.129819869995117
    5. '_fact' → logprob: -8.629819869995117
    6. 'factor' → logprob: -9.254819869995117
    7. '    ' → logprob: -9.254819869995117
    8. 'Fact' → logprob: -10.379819869995117
    9. '.fact' → logprob: -11.254819869995117
    10. '   ' → logprob: -11.504819869995117

Token 394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004886920796707273
    2. '[' → logprob: -7.625488758087158
    3. ' [' → logprob: -15.12548828125
    4. '[I' → logprob: -15.37548828125
    5. '\[' → logprob: -16.87548828125
    6. '   ' → logprob: -17.00048828125
    7. '=' → logprob: -17.37548828125
    8. '```' → logprob: -17.37548828125
    9. 'i' → logprob: -18.75048828125
    10. '[e' → logprob: -19.25048828125

Token 395: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04286946356296539
    2. '=' → logprob: -3.6678695678710938
    3. ' =' → logprob: -4.292869567871094
    4. ']=' → logprob: -5.917869567871094
    5. ' ]' → logprob: -9.542869567871094
    6. ')' → logprob: -13.667869567871094
    7. ' ' → logprob: -13.792869567871094
    8. ']=(' → logprob: -14.792869567871094
    9. ' *=' → logprob: -15.417869567871094
    10. ',' → logprob: -15.542869567871094

Token 396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=

' → logprob: -16.163042068481445
    4. '*=' → logprob: -16.913042068481445
    5. '=
' → logprob: -17.538042068481445
    6. ' *=' → logprob: -17.788042068481445
    7. '＝' → logprob: -18.288042068481445
    8. ']=' → logprob: -18.413042068481445
    9. ' =
' → logprob: -18.913042068481445
    10. ']' → logprob: -19.038042068481445

Token 397: ' fact' (ID: 2840)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.25572749972343445
    2. 'fact' → logprob: -1.7557275295257568
    3. ' (' → logprob: -3.255727529525757
    4. ' fact' → logprob: -4.255727291107178
    5. 'factor' → logprob: -10.380727767944336
    6. '_fact' → logprob: -10.505727767944336
    7. '(' → logprob: -10.755727767944336
    8. '.fact' → logprob: -11.755727767944336
    9. ' ' → logprob: -11.880727767944336
    10. ' factorial' → logprob: -12.130727767944336

Token 398: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. ' [' → logprob: -17.625001907348633
    4. ' i' → logprob: -19.250001907348633
    5. '[I' → logprob: -19.375001907348633
    6. 'i' → logprob: -19.500001907348633
    7. '```' → logprob: -20.500001907348633
    8. '[
' → logprob: -20.625001907348633
    9. ' ' → logprob: -21.250001907348633
    10. '(i' → logprob: -21.250001907348633

Token 399: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0037961541675031185
    2. ' -' → logprob: -6.253796100616455
    3. '[i' → logprob: -6.753796100616455
    4. '*' → logprob: -7.753796100616455
    5. ' *' → logprob: -8.378796577453613
    6. ']' → logprob: -11.253796577453613
    7. ' ' → logprob: -11.628796577453613
    8. '[-' → logprob: -11.878796577453613
    9. '*i' → logprob: -12.378796577453613
    10. '(i' → logprob: -13.378796577453613

Token 400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -15.6250581741333
    4. ']' → logprob: -17.375059127807617
    5. '```' → logprob: -17.500059127807617
    6. '  ' → logprob: -19.000059127807617
    7. '    ' → logprob: -19.125059127807617
    8. '

' → logprob: -20.000059127807617
    9. '１' → logprob: -20.000059127807617
    10. '
' → logprob: -20.187559127807617

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.750001907348633
    4. 'i' → logprob: -17.125001907348633
    5. '

' → logprob: -18.125001907348633
    6. ']' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '  ' → logprob: -18.625001907348633
    9. '    ' → logprob: -18.875001907348633
    10. '
' → logprob: -19.312501907348633

Token 402: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2521143853664398
    2. '*' → logprob: -1.5021144151687622
    3. '*i' → logprob: -9.252114295959473
    4. ' ' → logprob: -9.877114295959473
    5. ']' → logprob: -10.627114295959473
    6. ' ' → logprob: -11.502114295959473
    7. '   ' → logprob: -14.127114295959473
    8. '
' → logprob: -14.252114295959473
    9. '```' → logprob: -14.502114295959473
    10. ')' → logprob: -14.752114295959473

Token 403: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16026638448238373
    2. ' *' → logprob: -1.910266399383545
    3. '*i' → logprob: -10.160265922546387
    4. ' ' → logprob: -13.160265922546387
    5. ' ' → logprob: -13.535265922546387
    6. '   ' → logprob: -16.285266876220703
    7. '*object' → logprob: -16.535266876220703
    8. '**' → logprob: -16.910266876220703
    9. '*(' → logprob: -16.910266876220703
    10. '  ' → logprob: -17.660266876220703

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024758970830589533
    2. ' i' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.87747573852539
    4. ' ' → logprob: -16.62747573852539
    5. '	i' → logprob: -18.00247573852539
    6. '  ' → logprob: -18.87747573852539
    7. '    ' → logprob: -20.37747573852539
    8. '```' → logprob: -20.87747573852539
    9. '(i' → logprob: -21.50247573852539
    10. '<|end|>' → logprob: -21.75247573852539

Token 405: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.018150296062231064
    2. '%' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. ')' → logprob: -16.143150329589844
    5. '%i' → logprob: -17.143150329589844
    6. ' %=' → logprob: -17.268150329589844
    7. ' ' → logprob: -17.393150329589844
    8. '%n' → logprob: -17.518150329589844
    9. ')%' → logprob: -19.018150329589844
    10. '%B' → logprob: -19.143150329589844

Token 406: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.014163628220558167
    2. ' MOD' → logprob: -4.264163494110107
    3. '_MOD' → logprob: -16.764163970947266
    4. '.MOD' → logprob: -18.014163970947266
    5. ' ' → logprob: -20.389163970947266
    6. 'MO' → logprob: -21.014163970947266
    7. '   ' → logprob: -22.514163970947266
    8. '998' → logprob: -23.014163970947266
    9. 'mod' → logprob: -23.139163970947266
    10. 'Mod' → logprob: -23.389163970947266

Token 407: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.454959899187088
    2. '
' → logprob: -1.0799598693847656
    3. '    
' → logprob: -4.579959869384766
    4. '<|end|>' → logprob: -4.829959869384766
    5. ')' → logprob: -5.954959869384766
    6. '\n' → logprob: -6.329959869384766
    7. '  
' → logprob: -6.704959869384766
    8. '

' → logprob: -7.954959869384766
    9. ' 
' → logprob: -8.079959869384766
    10. '  ' → logprob: -8.579959869384766

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015115276910364628
    2. '    
' → logprob: -7.376511573791504
    3. '
' → logprob: -7.501511573791504
    4. 'fin' → logprob: -8.251511573791504
    5. 'for' → logprob: -11.376511573791504
    6. '```' → logprob: -11.626511573791504
    7. '  
' → logprob: -11.876511573791504
    8. '

' → logprob: -12.126511573791504
    9. 'fact' → logprob: -12.501511573791504
    10. '#' → logprob: -12.501511573791504

Token 409: ' #' (ID: 1069)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.2718559205532074
    2. '   ' → logprob: -1.7718559503555298
    3. 'inv' → logprob: -3.2718558311462402
    4. '#' (adapté à ' #') → logprob: -3.5218558311462402
    5. 'fact' → logprob: -8.271856307983398
    6. 'def' → logprob: -9.521856307983398
    7. 'for' → logprob: -9.771856307983398
    8. ' fin' → logprob: -9.771856307983398
    9. 'inverse' → logprob: -10.771856307983398
    10. ' inv' → logprob: -11.146856307983398

Token 410: ' Calcul' (ID: 57243)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.055570051074028015
    2. 'fin' → logprob: -3.180570125579834
    3. '#' → logprob: -4.430570125579834
    4. 'def' → logprob: -7.680570125579834
    5. 'inverse' → logprob: -10.180569648742676
    6. 'in' → logprob: -10.555569648742676
    7. 'fact' → logprob: -11.055569648742676
    8. ' inv' → logprob: -11.180569648742676
    9. 'for' → logprob: -11.930569648742676
    10. '   ' → logprob: -12.055569648742676

Token 411: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18801270425319672
    2. ' des' → logprob: -2.8130125999450684
    3. ' of' → logprob: -2.9380125999450684
    4. ' de' → logprob: -4.438012599945068
    5. '#' → logprob: -4.813012599945068
    6. '[' → logprob: -4.938012599945068
    7. 'for' → logprob: -4.938012599945068
    8. ' for' → logprob: -4.938012599945068
    9. '[i' → logprob: -5.563012599945068
    10. '(' → logprob: -6.063012599945068

Token 412: ' l' (ID: 305)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.014175030402839184
    2. ' fin' → logprob: -4.264174938201904
    3. 'f' → logprob: -12.389175415039062
    4. '(fin' → logprob: -12.889175415039062
    5. '#' → logprob: -13.264175415039062
    6. 'inv' → logprob: -14.139175415039062
    7. ' ' → logprob: -14.139175415039062
    8. '   ' → logprob: -14.764175415039062
    9. '	f' → logprob: -15.389175415039062
    10. 'in' → logprob: -15.889175415039062

Token 413: ''in' (ID: 17942)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.20685547590255737
    2. 'inv' → logprob: -1.8318555355072021
    3. 'in' → logprob: -4.206855297088623
    4. '   ' → logprob: -4.956855297088623
    5. 'inverse' → logprob: -7.081855297088623
    6. 'a' → logprob: -7.581855297088623
    7. 'v' → logprob: -7.581855297088623
    8. ' fin' → logprob: -8.081855773925781
    9. 'e' → logprob: -8.331855773925781
    10. '```' → logprob: -8.456855773925781

Token 414: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.0897672101855278
    2. 'v' → logprob: -2.4647672176361084
    3. 'version' → logprob: -8.089767456054688
    4. '[' → logprob: -8.339767456054688
    5. 'vers' → logprob: -8.464767456054688
    6. 'vf' → logprob: -11.714767456054688
    7. 'vr' → logprob: -11.964767456054688
    8. '
' → logprob: -12.214767456054688
    9. 'vx' → logprob: -12.214767456054688
    10. 'ver' → logprob: -12.214767456054688

Token 415: ' multiplic' (ID: 67929)
  Prédit: ' multiplic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplic' → logprob: -1.2238101959228516
    2. 'fact' → logprob: -1.9738101959228516
    3. 'mod' → logprob: -2.2238101959228516
    4. ' modular' → logprob: -2.5988101959228516
    5. '[' → logprob: -2.7238101959228516
    6. 'multip' → logprob: -2.7238101959228516
    7. ' fact' → logprob: -2.9738101959228516
    8. '   ' → logprob: -3.2238101959228516
    9. 'factor' → logprob: -3.3488101959228516
    10. ' de' → logprob: -3.3488101959228516

Token 416: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -6.051066520740278e-05
    2. 'if' → logprob: -10.375060081481934
    3. 'def' → logprob: -11.875060081481934
    4. 'itif' → logprob: -11.875060081481934
    5. 'e' → logprob: -12.875060081481934
    6. '#' → logprob: -13.125060081481934
    7. 'atifs' → logprob: -13.250060081481934
    8. 't' → logprob: -13.500060081481934
    9. 'act' → logprob: -13.750060081481934
    10. '```' → logprob: -14.000060081481934

Token 417: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5831915140151978
    2. 'de' → logprob: -0.8331915140151978
    3. ' of' → logprob: -5.958191394805908
    4. 'fin' → logprob: -6.583191394805908
    5. '[' → logprob: -6.833191394805908
    6. '   ' → logprob: -7.958191394805908
    7. ' du' → logprob: -8.333191871643066
    8. ' fin' → logprob: -8.458191871643066
    9. 's' → logprob: -8.583191871643066
    10. 'f' → logprob: -8.708191871643066

Token 418: ' la' (ID: 557)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.008632649667561054
    2. ' fact' → logprob: -4.758632659912109
    3. 'fin' → logprob: -11.50863265991211
    4. 'fait' → logprob: -12.88363265991211
    5. 'factor' → logprob: -13.00863265991211
    6. 'f' → logprob: -13.88363265991211
    7. 'fac' → logprob: -14.50863265991211
    8. '.fact' → logprob: -15.00863265991211
    9. '_fact' → logprob: -15.13363265991211
    10. ' ' → logprob: -15.25863265991211

Token 419: ' factor' (ID: 12332)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0016386464703828096
    2. 'factor' → logprob: -6.626638412475586
    3. 'der' → logprob: -8.376638412475586
    4. 'fin' → logprob: -10.251638412475586
    5. 'dern' → logprob: -10.876638412475586
    6. 'fac' → logprob: -11.501638412475586
    7. '#' → logprob: -11.751638412475586
    8. 'fait' → logprob: -13.376638412475586
    9. 'Dern' → logprob: -13.501638412475586
    10. 'fa' → logprob: -13.626638412475586

Token 420: 'ielle' (ID: 22380)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3598862886428833
    2. 'inv' → logprob: -1.2348862886428833
    3. 'val' → logprob: -5.609886169433594
    4. 'ielle' → logprob: -5.859886169433594
    5. '_inv' → logprob: -7.109886169433594
    6. 'i' → logprob: -7.234886169433594
    7. '```' → logprob: -7.359886169433594
    8. 'iv' → logprob: -7.609886169433594
    9. 'ial' → logprob: -7.734886169433594
    10. 'ière' → logprob: -8.609886169433594

Token 421: ' la' (ID: 557)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.8798534274101257
    2. '[' → logprob: -1.5048534870147705
    3. 'fact' → logprob: -1.7548534870147705
    4. '[-' → logprob: -2.0048534870147705
    5. 'fin' → logprob: -3.3798534870147705
    6. '   ' → logprob: -4.504853248596191
    7. '[n' → logprob: -5.379853248596191
    8. 'f' → logprob: -6.504853248596191
    9. ' of' → logprob: -7.129853248596191
    10. ' [' → logprob: -7.629853248596191

Token 422: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.009110254235565662
    2. '[N' → logprob: -5.009110450744629
    3. 'fact' → logprob: -6.509110450744629
    4. ' plus' → logprob: -7.509110450744629
    5. 'fin' → logprob: -9.259110450744629
    6. 'der' → logprob: -9.509110450744629
    7. 'Plus' → logprob: -10.134110450744629
    8. 'N' → logprob: -10.509110450744629
    9. 'dern' → logprob: -10.634110450744629
    10. '[' → logprob: -10.884110450744629

Token 423: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.004802364856004715
    2. 'grand' → logprob: -5.379802227020264
    3. 'large' → logprob: -9.004802703857422
    4. '```' → logprob: -10.879802703857422
    5. 'import' → logprob: -11.254802703857422
    6. ' grande' → logprob: -11.379802703857422
    7. '#' → logprob: -12.629802703857422
    8. 'grave' → logprob: -13.129802703857422
    9. 'Grande' → logprob: -13.129802703857422
    10. 'n' → logprob: -13.629802703857422

Token 424: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3127667307853699
    2. ' fact' → logprob: -2.0627667903900146
    3. 'fact' → logprob: -2.1877667903900146
    4. ',' → logprob: -3.8127667903900146
    5. ' (' → logprob: -6.6877665519714355
    6. '[' → logprob: -6.6877665519714355
    7. 'factor' → logprob: -7.4377665519714355
    8. ' ' → logprob: -7.5627665519714355
    9. ' à' → logprob: -7.9377665519714355
    10. ' at' → logprob: -7.9377665519714355

Token 425: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00029494395130313933
    2. ' fact' → logprob: -8.25029468536377
    3. ')' → logprob: -11.62529468536377
    4. 'fin' → logprob: -11.75029468536377
    5. 'factor' → logprob: -11.75029468536377
    6. 'f' → logprob: -12.50029468536377
    7. '   ' → logprob: -12.87529468536377
    8. 'N' → logprob: -13.87529468536377
    9. 'fait' → logprob: -15.12529468536377
    10. 'fac' → logprob: -15.50029468536377

Token 426: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.06197518855333328
    2. '[-' → logprob: -2.8119752407073975
    3. '[' → logprob: -12.186975479125977
    4. 'N' → logprob: -13.686975479125977
    5. '[n' → logprob: -14.311975479125977
    6. '   ' → logprob: -14.561975479125977
    7. '[
' → logprob: -16.686975479125977
    8. '```' → logprob: -16.811975479125977
    9. '

' → logprob: -17.311975479125977
    10. '[i' → logprob: -17.686975479125977

Token 427: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01604398898780346
    2. ' -' → logprob: -4.1410441398620605
    3. '   ' → logprob: -11.891043663024902
    4. ']' → logprob: -14.016043663024902
    5. '1' → logprob: -14.141043663024902
    6. ' ' → logprob: -14.516043663024902
    7. '−' → logprob: -15.266043663024902
    8. ']-' → logprob: -15.766043663024902
    9. '  ' → logprob: -16.14104461669922
    10. '–' → logprob: -16.26604461669922

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '
' → logprob: -15.125001907348633
    5. '```' → logprob: -16.750001907348633
    6. '

' → logprob: -17.750001907348633
    7. '2' → logprob: -18.375001907348633
    8. '
' → logprob: -18.750001907348633
    9. '...' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.062501907348633

Token 429: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2836530804634094
    2. ']' → logprob: -1.4086530208587646
    3. '],' → logprob: -6.533653259277344
    4. '])
' → logprob: -7.783653259277344
    5. ' ])' → logprob: -8.908653259277344
    6. ']
' → logprob: -9.158653259277344
    7. ')' → logprob: -9.283653259277344
    8. ']),' → logprob: -9.783653259277344
    9. ']))' → logprob: -9.908653259277344
    10. '])

' → logprob: -9.908653259277344

Token 430: '   ' (ID: 271)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.006959984544664621
    2. '   ' → logprob: -5.256959915161133
    3. ' fin' → logprob: -6.381959915161133
    4. ',' → logprob: -11.256959915161133
    5. 'f' → logprob: -11.506959915161133
    6. '#' → logprob: -13.006959915161133
    7. '    
' → logprob: -13.006959915161133
    8. '
' → logprob: -13.756959915161133
    9. '(fin' → logprob: -13.881959915161133
    10. 'fim' → logprob: -14.381959915161133

Token 431: ' #' (ID: 1069)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.002089711604639888
    2. '   ' → logprob: -6.752089500427246
    3. ' fin' → logprob: -7.002089500427246
    4. '
' → logprob: -13.252089500427246
    5. 'f' → logprob: -13.377089500427246
    6. '	f' → logprob: -14.127089500427246
    7. ',' → logprob: -14.252089500427246
    8. '[' → logprob: -14.502089500427246
    9. ' ' → logprob: -14.502089500427246
    10. 'fim' → logprob: -14.502089500427246

Token 432: ' Ceci' (ID: 144699)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.006817316170781851
    2. ' fin' → logprob: -5.00681734085083
    3. '   ' → logprob: -9.381816864013672
    4. 'f' → logprob: -11.131816864013672
    5. 'fim' → logprob: -13.631816864013672
    6. ' ' → logprob: -15.131816864013672
    7. 'fi' → logprob: -15.256816864013672
    8. '	f' → logprob: -15.381816864013672
    9. 'fn' → logprob: -15.381816864013672
    10. 'Fin' → logprob: -15.506816864013672

Token 433: ' utilise' (ID: 70283)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14301875233650208
    2. ' =' → logprob: -2.0180187225341797
    3. 'fact' → logprob: -9.01801872253418
    4. 's' → logprob: -10.26801872253418
    5. 'n' → logprob: -10.64301872253418
    6. '[' → logprob: -11.14301872253418
    7. ' is' → logprob: -11.14301872253418
    8. ' ' → logprob: -11.26801872253418
    9. 'inverse' → logprob: -11.26801872253418
    10. '=f' → logprob: -11.39301872253418

Token 434: ' le' (ID: 505)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0009725636919029057
    2. ' pow' → logprob: -7.250972747802734
    3. 'la' → logprob: -9.375972747802734
    4. '(pow' → logprob: -9.625972747802734
    5. '   ' → logprob: -10.125972747802734
    6. 'l' → logprob: -10.250972747802734
    7. '```' → logprob: -12.250972747802734
    8. 'le' → logprob: -12.250972747802734
    9. ' la' → logprob: -12.625972747802734
    10. '  ' → logprob: -12.625972747802734

Token 435: ' petit' (ID: 20577)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00033677343162707984
    2. ' pow' → logprob: -8.000336647033691
    3. '(pow' → logprob: -14.250336647033691
    4. '```' → logprob: -15.375336647033691
    5. 'pu' → logprob: -16.125337600708008
    6. 'p' → logprob: -16.375337600708008
    7. '

' → logprob: -16.375337600708008
    8. 'mod' → logprob: -16.875337600708008
    9. '   ' → logprob: -16.875337600708008
    10. ' ' → logprob: -17.750337600708008

Token 436: ' thé' (ID: 34740)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6112916469573975
    2. 'a' → logprob: -2.4862916469573975
    3. ' a' → logprob: -3.4862916469573975
    4. '^' → logprob: -3.6112916469573975
    5. '_' → logprob: -3.6112916469573975
    6. ' prince' → logprob: -3.6112916469573975
    7. '_p' → logprob: -3.7362916469573975
    8. '```' → logprob: -3.7362916469573975
    9. '_prime' → logprob: -3.8612916469573975
    10. '_python' → logprob: -3.8612916469573975

Token 437: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.048266977071762085
    2. 'ore' → logprob: -4.423266887664795
    3. 'orem' → logprob: -4.423266887664795
    4. 'orme' → logprob: -5.173266887664795
    5. 'r' → logprob: -5.298266887664795
    6. 'ré' → logprob: -5.798266887664795
    7. 'ор' → logprob: -6.048266887664795
    8. '```' → logprob: -6.173266887664795
    9. 'o' → logprob: -6.798266887664795
    10. 're' → logprob: -7.298266887664795

Token 438: 'ème' (ID: 9767)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.6915125250816345
    2. 'or' → logprob: -0.9415125250816345
    3. 'ore' → logprob: -2.8165125846862793
    4. 'ème' → logprob: -3.1915125846862793
    5. 'orme' → logprob: -6.066512584686279
    6. 're' → logprob: -6.941512584686279
    7. 'm' → logprob: -7.441512584686279
    8. 'r' → logprob: -7.691512584686279
    9. '#' → logprob: -7.691512584686279
    10. 'reme' → logprob: -7.941512584686279

Token 439: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.460018128156662
    2. 'de' → logprob: -1.4600181579589844
    3. 'fer' → logprob: -2.0850181579589844
    4. '   ' → logprob: -5.335018157958984
    5. 'd' → logprob: -6.210018157958984
    6. 'f' → logprob: -6.335018157958984
    7. ' ' → logprob: -7.210018157958984
    8. 'def' → logprob: -7.210018157958984
    9. '1' → logprob: -7.960018157958984
    10. 'ferm' → logprob: -8.710018157958984

Token 440: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.005032610148191452
    2. ' Ferm' → logprob: -5.630032539367676
    3. 'ferm' → logprob: -7.755032539367676
    4. 'fer' → logprob: -7.880032539367676
    5. 'f' → logprob: -8.755032539367676
    6. 'Euler' → logprob: -8.880032539367676
    7. 'Fer' → logprob: -9.255032539367676
    8. '#' → logprob: -9.755032539367676
    9. 'Ф' → logprob: -11.005032539367676
    10. '(F' → logprob: -11.130032539367676

Token 441: 'at' (ID: 266)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.1333010047674179
    2. 'mod' → logprob: -3.008301019668579
    3. 'm' → logprob: -4.00830078125
    4. 'me' → logprob: -4.38330078125
    5. 'a' → logprob: -4.63330078125
    6. 'pow' → logprob: -5.25830078125
    7. 'or' → logprob: -5.50830078125
    8. 'ain' → logprob: -5.75830078125
    9. 'ais' → logprob: -6.38330078125
    10. 'raî' → logprob: -6.63330078125

Token 442: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027485268656164408
    2. 'fin' → logprob: -6.127748489379883
    3. ',' → logprob: -8.877748489379883
    4. ' fin' → logprob: -9.127748489379883
    5. '  ' → logprob: -9.502748489379883
    6. ':' → logprob: -9.627748489379883
    7. '
' → logprob: -10.002748489379883
    8. ' ' → logprob: -10.252748489379883
    9. '    
' → logprob: -10.627748489379883
    10. '```' → logprob: -10.877748489379883

Token 443: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.12216469645500183
    2. ' MOD' → logprob: -2.497164726257324
    3. 'N' → logprob: -3.872164726257324
    4. '998' → logprob: -5.122164726257324
    5. ' ' → logprob: -5.997164726257324
    6. ' N' → logprob: -6.122164726257324
    7. 'pow' → logprob: -7.747164726257324
    8. '   ' → logprob: -8.247164726257324
    9. '  ' → logprob: -9.247164726257324
    10. 'fact' → logprob: -9.372164726257324

Token 444: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6247904300689697
    2. '-' → logprob: -0.8747904300689697
    3. ' -' → logprob: -3.7497904300689697
    4. ' is' → logprob: -4.499790191650391
    5. 'est' → logprob: -5.499790191650391
    6. ')' → logprob: -5.874790191650391
    7. 'is' → logprob: -6.124790191650391
    8. ',' → logprob: -6.874790191650391
    9. ' étant' → logprob: -7.499790191650391
    10. ' ' → logprob: -7.624790191650391

Token 445: ' premier' (ID: 15506)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0074762445874512196
    2. 'un' → logprob: -5.507476329803467
    3. ' a' → logprob: -6.632476329803467
    4. ' premier' → logprob: -7.382476329803467
    5. ' prime' → logprob: -7.507476329803467
    6. ' ' → logprob: -8.257475852966309
    7. 'a' → logprob: -8.382475852966309
    8. 'prime' → logprob: -8.632475852966309
    9. 'prem' → logprob: -8.882475852966309
    10. ''un' → logprob: -10.882475852966309

Token 446: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004314872436225414
    2. 'fin' → logprob: -5.75431489944458
    3. '
' → logprob: -7.25431489944458
    4. '    
' → logprob: -8.754314422607422
    5. '  ' → logprob: -9.629314422607422
    6. ',' → logprob: -10.004314422607422
    7. ' ' → logprob: -10.504314422607422
    8. 'f' → logprob: -10.879314422607422
    9. '    ' → logprob: -11.004314422607422
    10. ' fin' → logprob: -11.129314422607422

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07983677834272385
    2. 'fin' → logprob: -2.954836845397949
    3. ' fin' → logprob: -3.704836845397949
    4. '    ' → logprob: -11.45483684539795
    5. '	f' → logprob: -11.70483684539795
    6. ' ' → logprob: -12.45483684539795
    7. '    
' → logprob: -12.45483684539795
    8. '  ' → logprob: -12.70483684539795
    9. 'f' → logprob: -13.32983684539795
    10. '(fin' → logprob: -13.57983684539795

Token 448: ' #' (ID: 1069)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.04539233818650246
    2. ' fin' → logprob: -3.1703922748565674
    3. '   ' → logprob: -6.0453925132751465
    4. 'f' → logprob: -11.545392036437988
    5. '	f' → logprob: -12.920392036437988
    6. 'fim' → logprob: -13.170392036437988
    7. '    
' → logprob: -13.670392036437988
    8. 'Fin' → logprob: -14.170392036437988
    9. '
' → logprob: -14.295392036437988
    10. ' ' → logprob: -14.295392036437988

Token 449: ' pow' (ID: 9779)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.026933399960398674
    2. ' fin' → logprob: -3.651933431625366
    3. '   ' → logprob: -7.401933193206787
    4. 'f' → logprob: -11.776933670043945
    5. 'fim' → logprob: -12.276933670043945
    6. 'fi' → logprob: -13.151933670043945
    7. ' ' → logprob: -13.276933670043945
    8. '	f' → logprob: -13.776933670043945
    9. 'fn' → logprob: -14.151933670043945
    10. '  ' → logprob: -14.651933670043945

Token 450: '(a' (ID: 6271)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.012528485618531704
    2. '(' → logprob: -4.387528419494629
    3. 'f' → logprob: -11.637528419494629
    4. '(
' → logprob: -12.637528419494629
    5. '(pow' → logprob: -13.262528419494629
    6. ' (' → logprob: -13.512528419494629
    7. '(F' → logprob: -14.012528419494629
    8. '	f' → logprob: -14.762528419494629
    9. ')' → logprob: -15.262528419494629
    10. '```' → logprob: -15.512528419494629

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23258177936077118
    2. '(' → logprob: -1.8575817346572876
    3. '(f' → logprob: -3.482581853866577
    4. ',f' → logprob: -4.107581615447998
    5. ')' → logprob: -5.607581615447998
    6. '(
' → logprob: -8.357582092285156
    7. '(

' → logprob: -9.107582092285156
    8. ' ,' → logprob: -9.482582092285156
    9. ',
' → logprob: -9.982582092285156
    10. ',(' → logprob: -10.607582092285156

Token 452: ' b' (ID: 287)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0008344047237187624
    2. ' MOD' → logprob: -7.2508344650268555
    3. '   ' → logprob: -9.750834465026855
    4. '  ' → logprob: -11.125834465026855
    5. ' ' → logprob: -11.125834465026855
    6. ')' → logprob: -11.250834465026855
    7. '-' → logprob: -11.625834465026855
    8. '-M' → logprob: -12.125834465026855
    9. '_MOD' → logprob: -12.875834465026855
    10. '.MOD' → logprob: -13.250834465026855

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004959598300047219
    2. '(' → logprob: -8.875495910644531
    3. ')' → logprob: -9.000495910644531
    4. '=' → logprob: -9.250495910644531
    5. ' ,' → logprob: -10.375495910644531
    6. '-' → logprob: -10.500495910644531
    7. '(N' → logprob: -10.500495910644531
    8. '   ' → logprob: -11.375495910644531
    9. ',
' → logprob: -11.750495910644531
    10. ' ' → logprob: -11.875495910644531

Token 454: ' c' (ID: 274)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.014433672651648521
    2. ' MOD' → logprob: -4.264433860778809
    3. ')' → logprob: -8.264433860778809
    4. '_MOD' → logprob: -12.014433860778809
    5. ' ' → logprob: -13.139433860778809
    6. '   ' → logprob: -13.764433860778809
    7. 'mod' → logprob: -14.389433860778809
    8. 'Mod' → logprob: -14.514433860778809
    9. '.MOD' → logprob: -14.514433860778809
    10. '```' → logprob: -14.514433860778809

Token 455: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027254095766693354
    2. '=' → logprob: -9.000272750854492
    3. ',' → logprob: -10.000272750854492
    4. '(' → logprob: -10.000272750854492
    5. ')=' → logprob: -10.375272750854492
    6. ' )' → logprob: -11.625272750854492
    7. ')
' → logprob: -12.875272750854492
    8. '),' → logprob: -13.000272750854492
    9. '(N' → logprob: -13.250272750854492
    10. '   ' → logprob: -13.375272750854492

Token 456: ' calc' (ID: 25691)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2634204030036926
    2. ')' → logprob: -2.263420343399048
    3. '(f' → logprob: -3.013420343399048
    4. '(
' → logprob: -3.763420343399048
    5. '(pow' → logprob: -4.263420581817627
    6. ' calculates' → logprob: -4.638420581817627
    7. '(a' → logprob: -5.013420581817627
    8. ' (' → logprob: -5.388420581817627
    9. ' is' → logprob: -5.388420581817627
    10. '<|end|>' → logprob: -5.888420581817627

Token 457: 'ule' (ID: 1601)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15115712583065033
    2. 'ule' → logprob: -2.1511571407318115
    3. 'ult' → logprob: -4.526156902313232
    4. 'pow' → logprob: -6.026156902313232
    5. 'ulte' → logprob: -6.151156902313232
    6. '_mod' → logprob: -6.901156902313232
    7. 'mod' → logprob: -6.901156902313232
    8. ')' → logprob: -7.026156902313232
    9. '(pow' → logprob: -7.026156902313232
    10. '_pow' → logprob: -7.151156902313232

Token 458: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10274910926818848
    2. '(pow' → logprob: -2.4777491092681885
    3. '(' → logprob: -5.352748870849609
    4. '(f' → logprob: -5.727748870849609
    5. 'pow' → logprob: -5.977748870849609
    6. 'a' → logprob: -6.602748870849609
    7. '(power' → logprob: -7.477748870849609
    8. ' (' → logprob: -7.602748870849609
    9. ' pow' → logprob: -8.10274887084961
    10. ')' → logprob: -8.85274887084961

Token 459: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.607232391834259
    2. 'fact' → logprob: -0.857232391834259
    3. ' a' → logprob: -3.9822323322296143
    4. ' fact' → logprob: -4.982232570648193
    5. ')' → logprob: -5.607232570648193
    6. 'pow' → logprob: -7.107232570648193
    7. '   ' → logprob: -8.732232093811035
    8. ')a' → logprob: -8.732232093811035
    9. 'factor' → logprob: -8.857232093811035
    10. ' ' → logprob: -9.482232093811035

Token 460: '**' (ID: 410)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03845832124352455
    2. '**' → logprob: -3.9134583473205566
    3. ' ,' → logprob: -5.163458347320557
    4. ',N' → logprob: -5.413458347320557
    5. '[N' → logprob: -6.038458347320557
    6. '%' → logprob: -6.288458347320557
    7. ')' → logprob: -6.413458347320557
    8. '**,' → logprob: -7.788458347320557
    9. '```' → logprob: -8.038457870483398
    10. ',
' → logprob: -9.163457870483398

Token 461: 'b' (ID: 65)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.017384406179189682
    2. 'b' → logprob: -5.1423845291137695
    3. '(c' → logprob: -5.6423845291137695
    4. '(N' → logprob: -5.8923845291137695
    5. ' c' → logprob: -6.0173845291137695
    6. '(' → logprob: -7.0173845291137695
    7. 'MOD' → logprob: -7.7673845291137695
    8. '(M' → logprob: -7.8923845291137695
    9. ')' → logprob: -8.14238452911377
    10. ' (' → logprob: -8.64238452911377

Token 462: ')%' (ID: 57656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015356775373220444
    2. ' ,' → logprob: -4.265356540679932
    3. ')' → logprob: -7.140356540679932
    4. '%' → logprob: -8.64035701751709
    5. ' %' → logprob: -9.51535701751709
    6. '%c' → logprob: -10.01535701751709
    7. ',
' → logprob: -10.51535701751709
    8. '```' → logprob: -11.01535701751709
    9. '-' → logprob: -11.51535701751709
    10. ',c' → logprob: -11.64035701751709

Token 463: 'c' (ID: 66)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.12902262806892395
    2. 'c' → logprob: -2.1290225982666016
    3. ' MOD' → logprob: -6.254022598266602
    4. ' c' → logprob: -9.129022598266602
    5. '_MOD' → logprob: -10.504022598266602
    6. '(Mod' → logprob: -11.504022598266602
    7. '(c' → logprob: -12.379022598266602
    8. '   ' → logprob: -12.504022598266602
    9. '(' → logprob: -12.754022598266602
    10. ')' → logprob: -13.129022598266602

Token 464: ' efficacement' (ID: 155449)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.054030172526836395
    2. '   ' → logprob: -3.554030179977417
    3. '(' → logprob: -4.554029941558838
    4. ',' → logprob: -4.804029941558838
    5. ' (' → logprob: -6.304029941558838
    6. ')' → logprob: -6.804029941558838
    7. '(
' → logprob: -7.054029941558838
    8. '(pow' → logprob: -7.179029941558838
    9. 'fact' → logprob: -9.179030418395996
    10. '(power' → logprob: -9.429030418395996

Token 465: ' même' (ID: 9679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2231651246547699
    2. '(f' → logprob: -2.0981650352478027
    3. ',' → logprob: -2.9731650352478027
    4. '(' → logprob: -4.723165035247803
    5. ')' → logprob: -4.973165035247803
    6. '(fin' → logprob: -5.598165035247803
    7. 'fact' → logprob: -5.723165035247803
    8. ' (' → logprob: -6.598165035247803
    9. ',f' → logprob: -8.473165512084961
    10. '(pow' → logprob: -8.473165512084961

Token 466: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5690786242485046
    2. '<|end|>' → logprob: -1.6940786838531494
    3. ' if' → logprob: -3.0690786838531494
    4. 'if' → logprob: -3.1940786838531494
    5. ',' → logprob: -3.3190786838531494
    6. ' ' → logprob: -4.56907844543457
    7. ' lorsque' → logprob: -4.56907844543457
    8. ' when' → logprob: -4.56907844543457
    9. 'mod' → logprob: -4.69407844543457
    10. '  ' → logprob: -4.81907844543457

Token 467: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.041207753121852875
    2. ' c' → logprob: -3.291207790374756
    3. 'MOD' → logprob: -6.541207790374756
    4. 'large' → logprob: -7.541207790374756
    5. ' ' → logprob: -8.291207313537598
    6. 'b' → logprob: -8.791207313537598
    7. '   ' → logprob: -9.041207313537598
    8. ')c' → logprob: -9.291207313537598
    9. ' large' → logprob: -9.416207313537598
    10. 'mod' → logprob: -9.541207313537598

Token 468: ' grands' (ID: 43085)
  Prédit: ' grandes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grandes' → logprob: -0.8308537602424622
    2. 'large' → logprob: -0.8308537602424622
    3. ' large' → logprob: -2.3308537006378174
    4. ' très' → logprob: -4.4558539390563965
    5. ')' → logprob: -5.7058539390563965
    6. ' larg' → logprob: -5.7058539390563965
    7. 'very' → logprob: -5.9558539390563965
    8. ' grands' → logprob: -6.0808539390563965
    9. 'a' → logprob: -6.8308539390563965
    10. ' very' → logprob: -7.5808539390563965

Token 469: ' nombres' (ID: 76205)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.4756658673286438
    2. ')' → logprob: -2.225665807723999
    3. ',' → logprob: -2.475665807723999
    4. 'MOD' → logprob: -2.975665807723999
    5. 'pu' → logprob: -3.100665807723999
    6. 'pow' → logprob: -3.225665807723999
    7. ' puiss' → logprob: -4.475666046142578
    8. 'N' → logprob: -5.350666046142578
    9. 'mod' → logprob: -5.475666046142578
    10. 'a' → logprob: -5.850666046142578

Token 470: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047697488218545914
    2. ',' → logprob: -4.1726975440979
    3. '(' → logprob: -4.7976975440979
    4. '(f' → logprob: -5.0476975440979
    5. '(N' → logprob: -5.1726975440979
    6. ')' → logprob: -5.2976975440979
    7. ' (' → logprob: -5.6726975440979
    8. 'fact' → logprob: -7.2976975440979
    9. '(fin' → logprob: -7.7976975440979
    10. ')
' → logprob: -8.797697067260742

Token 471: '   ' (ID: 271)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.2578701674938202
    2. '   ' → logprob: -1.5078701972961426
    3. ' fin' → logprob: -5.132870197296143
    4. '```' → logprob: -12.007869720458984
    5. ' ' → logprob: -12.757869720458984
    6. ')' → logprob: -13.007869720458984
    7. '    
' → logprob: -13.132869720458984
    8. '  ' → logprob: -13.507869720458984
    9. '	f' → logprob: -13.757869720458984
    10. '[' → logprob: -13.757869720458984

Token 472: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.019154442474246025
    2. '   ' → logprob: -4.3941545486450195
    3. ' fin' → logprob: -5.0191545486450195
    4. 'f' → logprob: -12.14415454864502
    5. 'fim' → logprob: -13.26915454864502
    6. '	f' → logprob: -13.39415454864502
    7. ' ' → logprob: -14.39415454864502
    8. '  ' → logprob: -14.64415454864502
    9. '(fin' → logprob: -14.76915454864502
    10. '    
' → logprob: -14.76915454864502

Token 473: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.27099974633893e-05
    2. 'inv' → logprob: -12.125012397766113
    3. '=' → logprob: -13.125012397766113
    4. 'f' → logprob: -13.500012397766113
    5. 'в' → logprob: -13.750012397766113
    6. ' =' → logprob: -14.125012397766113
    7. '[' → logprob: -15.625012397766113
    8. 'vs' → logprob: -16.18751335144043
    9. '```' → logprob: -16.25001335144043
    10. '	v' → logprob: -16.31251335144043

Token 474: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.023257127031683922
    2. '[-' → logprob: -3.77325701713562
    3. '[' → logprob: -11.6482572555542
    4. ' [' → logprob: -13.7732572555542
    5. '=[' → logprob: -14.3982572555542
    6. ' =' → logprob: -14.3982572555542
    7. ' [-' → logprob: -15.2732572555542
    8. '=' → logprob: -15.7732572555542
    9. '   ' → logprob: -16.148256301879883
    10. '[len' → logprob: -16.648256301879883

Token 475: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01106079202145338
    2. ' -' → logprob: -4.51106071472168
    3. '1' → logprob: -11.76106071472168
    4. '   ' → logprob: -13.13606071472168
    5. '[' → logprob: -13.76106071472168
    6. ']' → logprob: -14.01106071472168
    7. '[-' → logprob: -15.01106071472168
    8. ' ' → logprob: -15.51106071472168
    9. '−' → logprob: -15.51106071472168
    10. '-
' → logprob: -15.63606071472168

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.75000286102295
    4. '<|end|>' → logprob: -17.375001907348633
    5. ']' → logprob: -17.750001907348633
    6. '```' → logprob: -17.812501907348633
    7. '  ' → logprob: -17.875001907348633
    8. '
' → logprob: -18.500001907348633
    9. '...' → logprob: -18.500001907348633
    10. '    ' → logprob: -18.750001907348633

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.500001907348633
    4. ']' → logprob: -16.937501907348633
    5. '```' → logprob: -17.062501907348633
    6. '
' → logprob: -18.062501907348633
    7. '  ' → logprob: -18.125001907348633
    8. '

' → logprob: -18.312501907348633
    9. '１' → logprob: -18.875001907348633
    10. '۱' → logprob: -18.937501907348633

Token 478: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.630610641877865e-06
    2. ']=' → logprob: -12.000006675720215
    3. ' ]' → logprob: -14.750006675720215
    4. '=' → logprob: -17.0000057220459
    5. '   ' → logprob: -18.8750057220459
    6. ']
' → logprob: -19.2500057220459
    7. ')' → logprob: -19.5000057220459
    8. ']=(' → logprob: -19.7500057220459
    9. '']' → logprob: -20.8750057220459
    10. '"]' → logprob: -21.1250057220459

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004307884373702109
    2. ' =' → logprob: -7.750430583953857
    3. '=

' → logprob: -17.625431060791016
    4. '＝' → logprob: -18.125431060791016
    5. '=}' → logprob: -18.375431060791016
    6. '=
' → logprob: -18.750431060791016
    7. '=int' → logprob: -18.875431060791016
    8. '.=' → logprob: -19.000431060791016
    9. ']=' → logprob: -20.250431060791016
    10. '=f' → logprob: -21.000431060791016

Token 480: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.5491004129871726e-05
    2. ' pow' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.750045776367188
    4. '(pow' → logprob: -20.375045776367188
    5. 'power' → logprob: -21.250045776367188
    6. '_pow' → logprob: -21.625045776367188
    7. '.pow' → logprob: -23.250045776367188
    8. '    ' → logprob: -23.375045776367188
    9. ' ' → logprob: -23.500045776367188
    10. '  ' → logprob: -23.875045776367188

Token 481: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.500075340270996
    3. 'f' → logprob: -17.12507438659668
    4. '	f' → logprob: -17.50007438659668
    5. '(
' → logprob: -18.25007438659668
    6. 'fact' → logprob: -18.37507438659668
    7. '(fid' → logprob: -19.00007438659668
    8. ' (' → logprob: -19.12507438659668
    9. '(F' → logprob: -19.25007438659668
    10. '(fi' → logprob: -20.37507438659668

Token 482: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -1.0564331205387134e-05
    2. '[N' → logprob: -12.87501049041748
    3. 'ac' → logprob: -13.12501049041748
    4. 'a' → logprob: -13.87501049041748
    5. '[' → logprob: -14.12501049041748
    6. '```' → logprob: -14.50001049041748
    7. 'inv' → logprob: -14.87501049041748
    8. 'N' → logprob: -15.00001049041748
    9. 'actor' → logprob: -15.12501049041748
    10. 'in' → logprob: -15.12501049041748

Token 483: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.00018899753922596574
    2. '[' → logprob: -8.875188827514648
    3. 'N' → logprob: -10.125188827514648
    4. '[-' → logprob: -12.125188827514648
    5. ' [' → logprob: -13.875188827514648
    6. '	N' → logprob: -14.000188827514648
    7. '   ' → logprob: -14.500188827514648
    8. '```' → logprob: -14.875188827514648
    9. ' ' → logprob: -15.125188827514648
    10. '[
' → logprob: -15.625188827514648

Token 484: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029769811779260635
    2. ' -' → logprob: -3.5297698974609375
    3. '[' → logprob: -11.529769897460938
    4. '<|end|>' → logprob: -12.529769897460938
    5. '1' → logprob: -13.404769897460938
    6. '[-' → logprob: -13.529769897460938
    7. ' ' → logprob: -14.029769897460938
    8. 's' → logprob: -14.779769897460938
    9. '-
' → logprob: -15.029769897460938
    10. '−' → logprob: -15.154769897460938

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -16.375
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -19.25
    6. '

' → logprob: -19.375
    7. '１' → logprob: -19.625
    8. '2' → logprob: -20.5625
    9. '  ' → logprob: -20.625
    10. '{' → logprob: -21.0

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -16.875
    4. '   ' → logprob: -17.5
    5. '2' → logprob: -17.75
    6. '```' → logprob: -18.0625
    7. '１' → logprob: -18.4375
    8. '

' → logprob: -18.875
    9. '  ' → logprob: -19.0
    10. '' → logprob: -19.3125

Token 487: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ' ,' → logprob: -10.125041961669922
    3. '],' → logprob: -13.625041961669922
    4. ',N' → logprob: -15.750041961669922
    5. '‌,' → logprob: -15.875041961669922
    6. '   ' → logprob: -16.000041961669922
    7. '-' → logprob: -16.625041961669922
    8. '```' → logprob: -16.875041961669922
    9. ' ' → logprob: -17.125041961669922
    10. '),' → logprob: -17.375041961669922

Token 488: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00013595925702247769
    2. ' MOD' → logprob: -9.000136375427246
    3. '-' → logprob: -12.125136375427246
    4. '_MOD' → logprob: -12.250136375427246
    5. '.MOD' → logprob: -14.000136375427246
    6. 'mod' → logprob: -14.500136375427246
    7. 'Mod' → logprob: -15.250136375427246
    8. '998' → logprob: -15.875136375427246
    9. '   ' → logprob: -16.00013542175293
    10. ')' → logprob: -16.25013542175293

Token 489: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019286326132714748
    2. ' -' → logprob: -6.251928806304932
    3. '−' → logprob: -19.626928329467773
    4. ' ' → logprob: -19.876928329467773
    5. '```' → logprob: -20.001928329467773
    6. ')' → logprob: -21.001928329467773
    7. ' ' → logprob: -21.376928329467773
    8. '–' → logprob: -21.376928329467773
    9. '   ' → logprob: -21.626928329467773
    10. '2' → logprob: -22.376928329467773

Token 490: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. '-' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.62500286102295
    4. ' -' → logprob: -17.812501907348633
    5. '۲' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '２' → logprob: -18.437501907348633
    9. '' → logprob: -19.062501907348633
    10. '٢' → logprob: -19.250001907348633

Token 491: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '-' → logprob: -15.000001907348633
    4. '```' → logprob: -15.937501907348633
    5. '
' → logprob: -17.312501907348633
    6. '２' → logprob: -17.500001907348633
    7. '۲' → logprob: -17.625001907348633
    8. '   ' → logprob: -17.687501907348633
    9. ' -' → logprob: -17.750001907348633
    10. '3' → logprob: -18.062501907348633

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.523948907968588e-05
    2. ')' → logprob: -10.500035285949707
    3. ' ,' → logprob: -11.875035285949707
    4. ',N' → logprob: -15.250035285949707
    5. '   ' → logprob: -15.875035285949707
    6. '%' → logprob: -16.00003433227539
    7. ',
' → logprob: -16.12503433227539
    8. '```' → logprob: -17.62503433227539
    9. '}' → logprob: -17.87503433227539
    10. ' ' → logprob: -18.12503433227539

Token 493: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00317783304490149
    2. ' MOD' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.378177642822266
    4. ')' → logprob: -19.753177642822266
    5. '_MOD' → logprob: -19.878177642822266
    6. ' ' → logprob: -20.128177642822266
    7. '.MOD' → logprob: -21.128177642822266
    8. 'MO' → logprob: -21.753177642822266
    9. 'Mod' → logprob: -22.253177642822266
    10. '    ' → logprob: -23.003177642822266

Token 494: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.37500286102295
    4. '   ' → logprob: -17.000001907348633
    5. ')

' → logprob: -18.125001907348633
    6. ')}' → logprob: -18.375001907348633
    7. '),' → logprob: -18.500001907348633
    8. '))' → logprob: -18.750001907348633
    9. ')#' → logprob: -19.000001907348633
    10. '}' → logprob: -19.375001907348633

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07598713785409927
    2. ' for' → logprob: -3.4509871006011963
    3. '
' → logprob: -3.8259871006011963
    4. 'for' → logprob: -4.075987339019775
    5. '    
' → logprob: -6.700987339019775
    6. '	for' → logprob: -7.575987339019775
    7. '```' → logprob: -7.825987339019775
    8. '<|end|>' → logprob: -8.325986862182617
    9. '\n' → logprob: -9.075986862182617
    10. ' 
' → logprob: -9.575986862182617

Token 496: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10214526206254959
    2. '   ' → logprob: -2.352145195007324
    3. ' for' → logprob: -6.352145195007324
    4. '
' → logprob: -8.852145195007324
    5. '	for' → logprob: -9.977145195007324
    6. '    
' → logprob: -12.852145195007324
    7. '#' (adapté à ' #') → logprob: -13.977145195007324
    8. '```' → logprob: -15.102145195007324
    9. '\n' → logprob: -15.602145195007324
    10. '       ' → logprob: -17.22714614868164

Token 497: ' Calcul' (ID: 57243)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.75
    3. 'i' → logprob: -19.5
    4. '#' → logprob: -20.0
    5. '   ' → logprob: -20.0
    6. '	for' → logprob: -23.5
    7. '```' → logprob: -23.875
    8. '    
' → logprob: -26.75
    9. 'For' → logprob: -27.125
    10. 'from' → logprob: -27.375

Token 498: ' des' (ID: 731)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6379083395004272
    2. 'for' → logprob: -1.1379083395004272
    3. '   ' → logprob: -2.012908458709717
    4. ' i' → logprob: -4.262908458709717
    5. 'i' → logprob: -6.512908458709717
    6. ' range' → logprob: -7.637908458709717
    7. ' in' → logprob: -7.762908458709717
    8. 'in' → logprob: -8.637907981872559
    9. ' of' → logprob: -8.762907981872559
    10. '[i' → logprob: -9.012907981872559

Token 499: ' invers' (ID: 38721)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2821832001209259
    2. 'fin' → logprob: -1.4071831703186035
    3. 'i' → logprob: -7.6571831703186035
    4. ' for' → logprob: -8.907183647155762
    5. '[i' → logprob: -8.907183647155762
    6. 'inv' → logprob: -9.032183647155762
    7. 'range' → logprob: -10.157183647155762
    8. '#' → logprob: -10.407183647155762
    9. 'in' → logprob: -10.532183647155762
    10. 'inverse' → logprob: -10.532183647155762

Token 500: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.000929091009311378
    2. 'e' → logprob: -8.12592887878418
    3. '[' → logprob: -8.87592887878418
    4. 'v' → logprob: -9.00092887878418
    5. 's' → logprob: -9.12592887878418
    6. '```' → logprob: -9.75092887878418
    7. 'vers' → logprob: -10.12592887878418
    8. 'des' → logprob: -10.25092887878418
    9. 'ves' → logprob: -10.50092887878418
    10. '
' → logprob: -10.87592887878418

Token 501: ' multiplic' (ID: 67929)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2780535221099854
    2. ' multiplic' → logprob: -1.2780535221099854
    3. 'multip' → logprob: -1.5280535221099854
    4. '   ' → logprob: -1.6530535221099854
    5. ' for' → logprob: -4.528053283691406
    6. ' des' → logprob: -5.403053283691406
    7. 'des' → logprob: -5.403053283691406
    8. 'i' → logprob: -5.653053283691406
    9. 'factor' → logprob: -5.653053283691406
    10. 'fact' → logprob: -6.153053283691406

Token 502: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.032740235328674316
    2. 'cat' → logprob: -4.282740116119385
    3. 'act' → logprob: -4.407740116119385
    4. 'atif' → logprob: -6.032740116119385
    5. 'c' → logprob: -6.282740116119385
    6. 't' → logprob: -7.407740116119385
    7. 'ques' → logprob: -8.532740592956543
    8. 'ultip' → logprob: -8.907740592956543
    9. '```' → logprob: -9.157740592956543
    10. 'def' → logprob: -9.407740592956543

Token 503: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11179924011230469
    2. ' for' → logprob: -2.7367992401123047
    3. '   ' → logprob: -3.4867992401123047
    4. ' des' → logprob: -4.861799240112305
    5. ' pour' → logprob: -6.861799240112305
    6. 'des' → logprob: -6.986799240112305
    7. 'pour' → logprob: -7.861799240112305
    8. '[i' → logprob: -8.736799240112305
    9. '	for' → logprob: -10.611799240112305
    10. ' ' → logprob: -10.736799240112305

Token 504: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.015129957348108292
    2. 'factor' → logprob: -4.765130043029785
    3. 'fin' → logprob: -5.890130043029785
    4. ' fact' → logprob: -6.390130043029785
    5. 'range' → logprob: -6.640130043029785
    6. 'for' → logprob: -7.515130043029785
    7. ' range' → logprob: -9.390130043029785
    8. '[i' → logprob: -9.640130043029785
    9. '[' → logprob: -11.515130043029785
    10. ' factorial' → logprob: -11.890130043029785

Token 505: 'ori' (ID: 6510)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.287130206823349
    2. 'inv' → logprob: -2.162130117416382
    3. '[i' → logprob: -2.162130117416382
    4. 'or' → logprob: -5.287130355834961
    5. 'i' → logprob: -5.537130355834961
    6. '[' → logprob: -5.787130355834961
    7. 'orial' → logprob: -6.037130355834961
    8. 'iv' → logprob: -6.287130355834961
    9. 'ors' → logprob: -7.162130355834961
    10. '[v' → logprob: -8.537130355834961

Token 506: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.00023107275774236768
    2. 'alles' → logprob: -9.25023078918457
    3. 'lles' → logprob: -9.25023078918457
    4. 'els' → logprob: -11.50023078918457
    5. '#' → logprob: -11.62523078918457
    6. 'es' → logprob: -12.87523078918457
    7. 'e' → logprob: -12.87523078918457
    8. 'a' → logprob: -13.25023078918457
    9. 'nelles' → logprob: -13.37523078918457
    10. ' elles' → logprob: -13.75023078918457

Token 507: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025134507566690445
    2. '   ' → logprob: -4.275134563446045
    3. ' for' → logprob: -4.525134563446045
    4. '	for' → logprob: -10.650134086608887
    5. '```' → logprob: -10.650134086608887
    6. '[i' → logprob: -10.775134086608887
    7. ',' → logprob: -12.900134086608887
    8. '[' → logprob: -13.150134086608887
    9. ')' → logprob: -14.275134086608887
    10. '
' → logprob: -14.275134086608887

Token 508: ' tous' (ID: 10688)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015872348740231246
    2. ' i' → logprob: -8.750158309936523
    3. '	i' → logprob: -16.500158309936523
    4. '[i' → logprob: -17.000158309936523
    5. '```' → logprob: -17.500158309936523
    6. '   ' → logprob: -17.750158309936523
    7. '(i' → logprob: -18.250158309936523
    8. ' ' → logprob: -18.875158309936523
    9. 'j' → logprob: -18.875158309936523
    10. 'les' → logprob: -19.625158309936523

Token 509: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931552886962891
    2. ' i' → logprob: -0.6931552886962891
    3. 'j' → logprob: -12.943155288696289
    4. '	i' → logprob: -13.318155288696289
    5. '   ' → logprob: -13.818155288696289
    6. ' ' → logprob: -13.818155288696289
    7. '(i' → logprob: -14.443155288696289
    8. ' j' → logprob: -14.943155288696289
    9. '[i' → logprob: -15.068155288696289
    10. ' les' → logprob: -15.443155288696289

Token 510: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9146995327901095e-05
    2. ' i' → logprob: -10.875019073486328
    3. '```' → logprob: -17.250019073486328
    4. '	i' → logprob: -17.750019073486328
    5. '   ' → logprob: -18.000019073486328
    6. 'indices' → logprob: -18.625019073486328
    7. 'j' → logprob: -18.750019073486328
    8. ' ' → logprob: -18.875019073486328
    9. '[i' → logprob: -19.375019073486328
    10. '(i' → logprob: -20.250019073486328

Token 511: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25322654843330383
    2. 'in' → logprob: -1.5032265186309814
    3. ' en' → logprob: -7.3782267570495605
    4. '   ' → logprob: -8.503226280212402
    5. 'en' → logprob: -8.753226280212402
    6. ' dans' → logprob: -9.128226280212402
    7. 'de' → logprob: -9.628226280212402
    8. 'dans' → logprob: -9.628226280212402
    9. ',' → logprob: -11.253226280212402
    10. 'i' → logprob: -11.628226280212402

Token 512: ' N' (ID: 478)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007009698543697596
    2. 're' → logprob: -5.007009506225586
    3. ' range' → logprob: -8.257009506225586
    4. '(range' → logprob: -11.132009506225586
    5. 'reverse' → logprob: -11.632009506225586
    6. 'N' → logprob: -11.757009506225586
    7. ' reversed' → logprob: -13.382009506225586
    8. 'rev' → logprob: -14.507009506225586
    9. 'ré' → logprob: -15.007009506225586
    10. '   ' → logprob: -15.007009506225586

Token 513: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004623322281986475
    2. ' -' → logprob: -5.3796234130859375
    3. '2' → logprob: -12.879623413085938
    4. '
' → logprob: -14.879623413085938
    5. '   ' → logprob: -16.879623413085938
    6. '1' → logprob: -18.004623413085938
    7. ' ' → logprob: -18.004623413085938
    8. '-
' → logprob: -18.254623413085938
    9. '```' → logprob: -18.379623413085938
    10. '−' → logprob: -18.754623413085938

Token 514: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.297462171758525e-05
    2. '-' → logprob: -10.375033378601074
    3. 'range' → logprob: -13.375033378601074
    4. ' ' → logprob: -15.625033378601074
    5. ' -' → logprob: -17.375032424926758
    6. ' range' → logprob: -18.250032424926758
    7. '   ' → logprob: -18.625032424926758
    8. '```' → logprob: -19.000032424926758
    9. '
' → logprob: -19.250032424926758
    10. '' → logprob: -20.500032424926758

Token 515: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4740469455718994
    2. '-' → logprob: -1.2240469455718994
    3. '   ' → logprob: -2.7240469455718994
    4. ' -' → logprob: -4.34904670715332
    5. ',-' → logprob: -6.84904670715332
    6. ':' → logprob: -6.84904670715332
    7. ' ,' → logprob: -7.47404670715332
    8. ' down' → logprob: -7.84904670715332
    9. '::-' → logprob: -8.09904670715332
    10. '  ' → logprob: -8.22404670715332

Token 516: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042102107545360923
    2. ' ' → logprob: -8.000420570373535
    3. '-' → logprob: -9.750420570373535
    4. ' -' → logprob: -10.875420570373535
    5. '   ' → logprob: -12.250420570373535
    6. '```' → logprob: -14.000420570373535
    7. 'range' → logprob: -14.125420570373535
    8. '1' → logprob: -14.750420570373535
    9. ' range' → logprob: -14.875420570373535
    10. ',' → logprob: -15.125420570373535

Token 517: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.000001907348633
    4. '-' → logprob: -17.250001907348633
    5. '1' → logprob: -17.250001907348633
    6. '```' → logprob: -20.000001907348633
    7. '
' → logprob: -20.250001907348633
    8. ' -' → logprob: -20.625001907348633
    9. '    ' → logprob: -21.625001907348633
    10. '  ' → logprob: -22.375001907348633

Token 518: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019589971750974655
    2. ' for' → logprob: -4.144589900970459
    3. ':' → logprob: -6.394589900970459
    4. ',' → logprob: -7.269589900970459
    5. 'for' → logprob: -7.394589900970459
    6. '	for' → logprob: -7.894589900970459
    7. '  ' → logprob: -9.644590377807617
    8. ' ' → logprob: -10.519590377807617
    9. '    
' → logprob: -10.644590377807617
    10. '[::-' → logprob: -11.144590377807617

Token 519: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048030901700258255
    2. ' range' → logprob: -3.2980308532714844
    3. 'reverse' → logprob: -5.173030853271484
    4. 're' → logprob: -5.548030853271484
    5. ' reverse' → logprob: -8.923030853271484
    6. '   ' → logprob: -9.298030853271484
    7. ' reversed' → logprob: -9.798030853271484
    8. '-' → logprob: -10.673030853271484
    9. '[::-' → logprob: -10.673030853271484
    10. ')' → logprob: -11.048030853271484

Token 520: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0014176189433783293
    2. 'ange' → logprob: -7.501417636871338
    3. ' range' → logprob: -7.876417636871338
    4. 'reverse' → logprob: -8.37641716003418
    5. 'ist' → logprob: -9.50141716003418
    6. 'e' → logprob: -9.50141716003418
    7. 'rang' → logprob: -10.25141716003418
    8. 're' → logprob: -11.00141716003418
    9. 'for' → logprob: -11.75141716003418
    10. 'arge' → logprob: -11.75141716003418

Token 521: ' décro' (ID: 176854)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6720142960548401
    2. '   ' → logprob: -0.9220142960548401
    3. ' for' → logprob: -2.4220142364501953
    4. '-' → logprob: -6.547014236450195
    5. ':' → logprob: -7.172014236450195
    6. ',' → logprob: -8.422014236450195
    7. '[::-' → logprob: -9.422014236450195
    8. '	for' → logprob: -9.547014236450195
    9. ' -' → logprob: -9.797014236450195
    10. 'range' → logprob: -10.297014236450195

Token 522: 'issant' (ID: 31359)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3363008499145508
    2. 'sent' → logprob: -1.3363008499145508
    3. 'res' → logprob: -1.8363008499145508
    4. 'issant' → logprob: -2.586300849914551
    5. 'ing' → logprob: -3.211300849914551
    6. 'rement' → logprob: -3.211300849914551
    7. 'rent' → logprob: -3.336300849914551
    8. 'resent' → logprob: -3.711300849914551
    9. 's' → logprob: -4.086300849914551
    10. 'r' → logprob: -4.211300849914551

Token 523: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4202391505241394
    2. 'for' → logprob: -1.5452392101287842
    3. ' for' → logprob: -2.045239210128784
    4. '	for' → logprob: -8.170239448547363
    5. '
' → logprob: -9.545239448547363
    6. ':' → logprob: -9.670239448547363
    7. '```' → logprob: -9.920239448547363
    8. '    
' → logprob: -11.170239448547363
    9. ':
' → logprob: -11.920239448547363
    10. ',' → logprob: -12.795239448547363

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39780041575431824
    2. ' for' → logprob: -1.1478004455566406
    3. 'for' → logprob: -4.772800445556641
    4. '	for' → logprob: -6.897800445556641
    5. '
' → logprob: -7.647800445556641
    6. '```' → logprob: -7.897800445556641
    7. ':' → logprob: -8.77280044555664
    8. '    
' → logprob: -9.02280044555664
    9. ' ' → logprob: -9.64780044555664
    10. '  
' → logprob: -10.14780044555664

Token 525: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23701810836791992
    2. ' for' → logprob: -1.73701810836792
    3. '   ' → logprob: -3.36201810836792
    4. '	for' → logprob: -8.112018585205078
    5. '```' → logprob: -12.487018585205078
    6. ',' → logprob: -13.237018585205078
    7. '
' → logprob: -13.487018585205078
    8. 'i' → logprob: -13.612018585205078
    9. ' ' → logprob: -13.862018585205078
    10. '    
' → logprob: -14.362018585205078

Token 526: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022463142871857
    2. ' i' → logprob: -1.9102246761322021
    3. '	i' → logprob: -14.785224914550781
    4. ' ' → logprob: -16.03522491455078
    5. '   ' → logprob: -18.53522491455078
    6. '  ' → logprob: -19.03522491455078
    7. '```' → logprob: -19.66022491455078
    8. ' ' → logprob: -20.03522491455078
    9. 'j' → logprob: -20.16022491455078
    10. '_i' → logprob: -20.78522491455078

Token 527: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023356471210718155
    2. 'in' → logprob: -3.7733564376831055
    3. ' ' → logprob: -9.273356437683105
    4. '	in' → logprob: -12.148356437683105
    5. ' i' → logprob: -12.398356437683105
    6. '   ' → logprob: -12.523356437683105
    7. '=' → logprob: -13.773356437683105
    8. '  ' → logprob: -14.523356437683105
    9. ',' → logprob: -14.773356437683105
    10. 'N' → logprob: -14.773356437683105

Token 528: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07893947511911392
    2. ' range' → logprob: -2.578939437866211
    3. 're' → logprob: -9.953939437866211
    4. ' reversed' → logprob: -13.453939437866211
    5. '   ' → logprob: -15.078939437866211
    6. ' ' → logprob: -15.578939437866211
    7. '(range' → logprob: -16.07893943786621
    8. 'reverse' → logprob: -16.82893943786621
    9. 'N' → logprob: -16.82893943786621
    10. '	range' → logprob: -17.57893943786621

Token 529: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00012594614236149937
    2. 'N' → logprob: -9.125125885009766
    3. '(' → logprob: -11.000125885009766
    4. '	N' → logprob: -16.250125885009766
    5. '(
' → logprob: -16.875125885009766
    6. ' (' → logprob: -17.000125885009766
    7. '   ' → logprob: -17.125125885009766
    8. '<N' → logprob: -17.125125885009766
    9. '[N' → logprob: -17.250125885009766
    10. ' N' → logprob: -18.375125885009766

Token 530: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.036524842376821e-05
    2. ' -' → logprob: -10.125040054321289
    3. '2' → logprob: -15.125040054321289
    4. '   ' → logprob: -18.50004005432129
    5. '1' → logprob: -19.00004005432129
    6. '−' → logprob: -19.62504005432129
    7. '[' → logprob: -20.50004005432129
    8. '	' → logprob: -20.62504005432129
    9. '-
' → logprob: -20.62504005432129
    10. '' → logprob: -21.25004005432129

Token 531: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.25
    4. '۲' → logprob: -20.875
    5. '２' → logprob: -21.375
    6. '  ' → logprob: -21.625
    7. '3' → logprob: -21.875
    8. '
' → logprob: -22.25
    9. '```' → logprob: -22.5
    10. '1' → logprob: -22.9375

Token 532: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.125
    4. '۲' → logprob: -20.125
    5. '3' → logprob: -20.25
    6. '1' → logprob: -20.75
    7. '２' → logprob: -20.875
    8. '```' → logprob: -21.625
    9. '  ' → logprob: -21.875
    10. '' → logprob: -22.0

Token 533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.602024900028482e-05
    2. ' ,' → logprob: -9.375085830688477
    3. ',-' → logprob: -13.875085830688477
    4. '   ' → logprob: -16.125085830688477
    5. ',
' → logprob: -16.375085830688477
    6. ',

' → logprob: -18.625085830688477
    7. '-' → logprob: -18.625085830688477
    8. ' ,-' → logprob: -19.000085830688477
    9. ',N' → logprob: -19.500085830688477
    10. ',i' → logprob: -19.875085830688477

Token 534: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003874166286550462
    2. ' -' → logprob: -7.875387191772461
    3. '   ' → logprob: -12.500387191772461
    4. '0' → logprob: -12.875387191772461
    5. '	' → logprob: -14.625387191772461
    6. ' ' → logprob: -14.875387191772461
    7. '  ' → logprob: -16.12538719177246
    8. '    ' → logprob: -17.37538719177246
    9. '-i' → logprob: -17.37538719177246
    10. '1' → logprob: -18.87538719177246

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.75
    4. '１' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. '  ' → logprob: -21.125
    7. ' -' → logprob: -21.375
    8. '
' → logprob: -21.5
    9. '۱' → logprob: -21.875
    10. '১' → logprob: -21.875

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',-' → logprob: -12.375009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. '-' → logprob: -13.000009536743164
    5. '   ' → logprob: -16.875009536743164
    6. ',
' → logprob: -17.375009536743164
    7. ' -' → logprob: -18.250009536743164
    8. '1' → logprob: -19.125009536743164
    9. '،' → logprob: -19.125009536743164
    10. ' ,-' → logprob: -19.125009536743164

Token 537: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.000912774819880724
    2. ' -' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.0009126663208
    4. ' ' → logprob: -15.2509126663208
    5. '  ' → logprob: -17.000913619995117
    6. '	' → logprob: -17.000913619995117
    7. '```' → logprob: -17.750913619995117
    8. '-step' → logprob: -17.875913619995117
    9. '-
' → logprob: -18.625913619995117
    10. '−' → logprob: -19.000913619995117

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -17.75
    4. ')' → logprob: -19.875
    5. '  ' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. '１' → logprob: -20.625
    8. ',' → logprob: -20.875
    9. '۱' → logprob: -20.875
    10. '
' → logprob: -20.875

Token 539: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29498863220214844
    2. '):
' → logprob: -1.9199886322021484
    3. ',' → logprob: -2.6699886322021484
    4. '-' → logprob: -3.2949886322021484
    5. ':' → logprob: -7.169988632202148
    6. ')' → logprob: -7.419988632202148
    7. '   ' → logprob: -7.419988632202148
    8. ',-' → logprob: -8.419988632202148
    9. '):
' → logprob: -8.919988632202148
    10. ' -' → logprob: -9.544988632202148

Token 540: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19910550117492676
    2. 'fin' → logprob: -2.3241055011749268
    3. '       ' → logprob: -2.5741055011749268
    4. ' fin' → logprob: -5.074105262756348
    5. '```' → logprob: -9.574105262756348
    6. '	f' → logprob: -9.699105262756348
    7. '   ' → logprob: -11.699105262756348
    8. '    
' → logprob: -11.824105262756348
    9. '(fin' → logprob: -11.824105262756348
    10. '    ' → logprob: -11.949105262756348

Token 541: ' #' (ID: 1069)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -2.7729658540920354e-05
    2. ' fin' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.125028610229492
    4. '       ' → logprob: -17.000028610229492
    5. 'finite' → logprob: -17.375028610229492
    6. 'f' → logprob: -18.125028610229492
    7. 'Fin' → logprob: -18.500028610229492
    8. '_fin' → logprob: -19.500028610229492
    9. 'fim' → logprob: -19.500028610229492
    10. 'final' → logprob: -20.250028610229492

Token 542: ' L' (ID: 451)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -6.64708495605737e-05
    2. ' fin' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.250066757202148
    4. 'finite' → logprob: -16.87506675720215
    5. 'f' → logprob: -17.00006675720215
    6. 'fim' → logprob: -17.75006675720215
    7. '#' → logprob: -18.50006675720215
    8. 'Fin' → logprob: -18.50006675720215
    9. 'fi' → logprob: -18.62506675720215
    10. 'final' → logprob: -18.62506675720215

Token 543: ''in' (ID: 17942)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0003088871017098427
    2. 'inv' → logprob: -8.375308990478516
    3. ' fin' → logprob: -9.750308990478516
    4. 'in' → logprob: -11.125308990478516
    5. '   ' → logprob: -12.750308990478516
    6. '#' → logprob: -14.375308990478516
    7. 'f' → logprob: -14.500308990478516
    8. 'Fin' → logprob: -14.875308990478516
    9. '_fin' → logprob: -15.750308990478516
    10. 'fact' → logprob: -16.125308990478516

Token 544: 'verse' (ID: 7093)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.23554860055446625
    2. 'v' → logprob: -1.9855486154556274
    3. 'fin' → logprob: -2.860548496246338
    4. 'f' → logprob: -5.735548496246338
    5. 'in' → logprob: -6.485548496246338
    6. 'rev' → logprob: -6.485548496246338
    7. '   ' → logprob: -6.610548496246338
    8. 'ev' → logprob: -6.860548496246338
    9. 'fv' → logprob: -6.985548496246338
    10. 'exp' → logprob: -7.110548496246338

Token 545: ' de' (ID: 334)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.227515697479248
    2. 'fin' → logprob: -1.352515697479248
    3. '[i' → logprob: -1.727515697479248
    4. 's' → logprob: -2.227515697479248
    5. '<|end|>' → logprob: -3.852515697479248
    6. 'f' → logprob: -4.102515697479248
    7. 'i' → logprob: -4.227515697479248
    8. 'inv' → logprob: -4.352515697479248
    9. 'inverse' → logprob: -4.852515697479248
    10. '=' → logprob: -4.852515697479248

Token 546: ' fact' (ID: 2840)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.008230622857809067
    2. 'fact' → logprob: -5.008230686187744
    3. ' fin' → logprob: -6.633230686187744
    4. '(f' → logprob: -9.383230209350586
    5. '(fin' → logprob: -9.883230209350586
    6. 'f' → logprob: -10.008230209350586
    7. ' fact' → logprob: -12.383230209350586
    8. '(i' → logprob: -12.508230209350586
    9. 'factor' → logprob: -12.633230209350586
    10. 'finite' → logprob: -13.383230209350586

Token 547: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003939728485420346
    2. 'v' → logprob: -8.500393867492676
    3. '[' → logprob: -8.750393867492676
    4. 'inv' → logprob: -10.625393867492676
    5. 's' → logprob: -13.000393867492676
    6. 'i' → logprob: -13.625393867492676
    7. 'iv' → logprob: -14.875393867492676
    8. 'val' → logprob: -15.000393867492676
    9. 'in' → logprob: -15.375393867492676
    10. '[v' → logprob: -15.375393867492676

Token 548: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4357092082500458
    2. ']' → logprob: -1.0607092380523682
    3. '[i' → logprob: -5.185708999633789
    4. '=' → logprob: -7.685708999633789
    5. ' +' → logprob: -7.935708999633789
    6. 's' → logprob: -8.435708999633789
    7. 'plus' → logprob: -9.185708999633789
    8. ']=' → logprob: -9.310708999633789
    9. ' =' → logprob: -10.185708999633789
    10. '[' → logprob: -10.560708999633789

Token 549: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04300946369767189
    2. ' =' → logprob: -3.1680095195770264
    3. '[i' → logprob: -12.668009757995605
    4. ']' → logprob: -13.168009757995605
    5. '=i' → logprob: -13.168009757995605
    6. 's' → logprob: -13.793009757995605
    7. '[' → logprob: -14.418009757995605
    8. ']=' → logprob: -14.668009757995605
    9. '=
' → logprob: -14.793009757995605
    10. ')' → logprob: -15.793009757995605

Token 550: ' calc' (ID: 25691)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00019567293929867446
    2. ' =' → logprob: -9.500195503234863
    3. '=f' → logprob: -9.875195503234863
    4. '=
' → logprob: -10.625195503234863
    5. '=int' → logprob: -11.125195503234863
    6. 'cal' → logprob: -12.750195503234863
    7. '=(' → logprob: -12.875195503234863
    8. '=i' → logprob: -13.125195503234863
    9. 'calcul' → logprob: -13.250195503234863
    10. '=r' → logprob: -13.375195503234863

Token 551: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -2.927930654550437e-05
    2. 'cule' → logprob: -10.625029563903809
    3. 'le' → logprob: -13.250029563903809
    4. 'u' → logprob: -13.750029563903809
    5. 'ole' → logprob: -14.625029563903809
    6. 'ure' → logprob: -15.250029563903809
    7. 'ul' → logprob: -15.375029563903809
    8. 'e' → logprob: -15.500029563903809
    9. 'oule' → logprob: -15.750029563903809
    10. '```' → logprob: -16.000028610229492

Token 552: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003603990189731121
    2. ' =' → logprob: -5.628603935241699
    3. '=
' → logprob: -13.6286039352417
    4. '[i' → logprob: -14.3786039352417
    5. ' fin' → logprob: -14.3786039352417
    6. '   ' → logprob: -15.1286039352417
    7. '=(' → logprob: -15.3786039352417
    8. 'fin' → logprob: -15.3786039352417
    9. '=f' → logprob: -15.6286039352417
    10. '[' → logprob: -16.003604888916016

Token 553: ' partir' (ID: 12100)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.16623196005821228
    2. '(fin' → logprob: -2.041231870651245
    3. '(f' → logprob: -4.541232109069824
    4. '(i' → logprob: -4.916232109069824
    5. 'fact' → logprob: -5.791232109069824
    6. 'part' → logprob: -7.416232109069824
    7. '((' → logprob: -7.541232109069824
    8. ' fin' → logprob: -7.916232109069824
    9. '(next' → logprob: -8.541232109069824
    10. 'finite' → logprob: -9.166232109069824

Token 554: ' de' (ID: 334)
  Prédit: '(fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fin' → logprob: -0.5164816379547119
    2. 'fin' → logprob: -1.266481637954712
    3. '(f' → logprob: -3.016481637954712
    4. ' fin' → logprob: -3.016481637954712
    5. '   ' → logprob: -4.641481399536133
    6. ' (' → logprob: -5.391481399536133
    7. ' de' → logprob: -5.641481399536133
    8. 'de' → logprob: -5.766481399536133
    9. '(' → logprob: -7.141481399536133
    10. 'f' → logprob: -7.391481399536133

Token 555: ' l' (ID: 305)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.014331669546663761
    2. ' fin' → logprob: -4.264331817626953
    3. 'f' → logprob: -9.389331817626953
    4. '(fin' → logprob: -9.514331817626953
    5. 'fact' → logprob: -12.389331817626953
    6. '(f' → logprob: -12.889331817626953
    7. 'finite' → logprob: -13.889331817626953
    8. '(' → logprob: -14.639331817626953
    9. '(i' → logprob: -14.889331817626953
    10. '	f' → logprob: -15.014331817626953

Token 556: ''in' (ID: 17942)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.006033672951161861
    2. ' fin' → logprob: -5.256033897399902
    3. 'inv' → logprob: -8.131033897399902
    4. 'in' → logprob: -8.631033897399902
    5. 'fact' → logprob: -9.256033897399902
    6. '+' → logprob: -9.631033897399902
    7. '[i' → logprob: -10.006033897399902
    8. 'f' → logprob: -10.381033897399902
    9. 'i' → logprob: -11.006033897399902
    10. '(i' → logprob: -11.381033897399902

Token 557: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.03469843789935112
    2. 'v' → logprob: -3.409698486328125
    3. 'vers' → logprob: -7.784698486328125
    4. 'f' → logprob: -8.159698486328125
    5. '[' → logprob: -9.034698486328125
    6. '[i' → logprob: -9.909698486328125
    7. '   ' → logprob: -10.284698486328125
    8. 'inverse' → logprob: -10.909698486328125
    9. '```' → logprob: -11.034698486328125
    10. 'ver' → logprob: -11.034698486328125

Token 558: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07623326778411865
    2. '   ' → logprob: -3.701233386993408
    3. 'multip' → logprob: -3.701233386993408
    4. '[' → logprob: -4.076233386993408
    5. 'fin' → logprob: -5.451233386993408
    6. '       ' → logprob: -7.076233386993408
    7. ' multiplic' → logprob: -7.701233386993408
    8. ' ' → logprob: -8.70123291015625
    9. '```' → logprob: -8.70123291015625
    10. 's' → logprob: -8.82623291015625

Token 559: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.05513343587517738
    2. 'fin' → logprob: -2.93013334274292
    3. ' fact' → logprob: -8.430133819580078
    4. '[i' → logprob: -11.180133819580078
    5. 'fait' → logprob: -11.930133819580078
    6. ' fin' → logprob: -12.305133819580078
    7. 'i' → logprob: -13.055133819580078
    8. 'fac' → logprob: -13.555133819580078
    9. 'f' → logprob: -13.680133819580078
    10. '(i' → logprob: -14.305133819580078

Token 560: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. 'i' → logprob: -12.875004768371582
    3. '[' → logprob: -13.375004768371582
    4. '   ' → logprob: -15.875004768371582
    5. 's' → logprob: -16.250003814697266
    6. '```' → logprob: -16.500003814697266
    7. ' ' → logprob: -16.750003814697266
    8. '[
' → logprob: -16.875003814697266
    9. '[I' → logprob: -17.375003814697266
    10. '\[' → logprob: -17.375003814697266

Token 561: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006410692585632205
    2. '+' → logprob: -7.625640869140625
    3. '[' → logprob: -8.875640869140625
    4. 'i' → logprob: -12.250640869140625
    5. ' +' → logprob: -12.875640869140625
    6. '[next' → logprob: -13.375640869140625
    7. '[I' → logprob: -13.875640869140625
    8. '+i' → logprob: -13.875640869140625
    9. '   ' → logprob: -14.500640869140625
    10. 's' → logprob: -15.000640869140625

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.56233171664644e-05
    2. ' ' → logprob: -10.375055313110352
    3. ']' → logprob: -10.750055313110352
    4. '```' → logprob: -13.875055313110352
    5. '+' → logprob: -14.000055313110352
    6. '   ' → logprob: -14.625055313110352
    7. '`' → logprob: -15.500055313110352
    8. ' ' → logprob: -16.62505531311035
    9. '  ' → logprob: -16.87505531311035
    10. 'i' → logprob: -17.00005531311035

Token 563: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009951572865247726
    2. ')' → logprob: -4.759951591491699
    3. '       ' → logprob: -7.509951591491699
    4. ',' → logprob: -8.2599515914917
    5. ' *' → logprob: -8.8849515914917
    6. ' ]' → logprob: -9.0099515914917
    7. '*' → logprob: -9.7599515914917
    8. '   ' → logprob: -10.2599515914917
    9. 'fact' → logprob: -10.7599515914917
    10. ']*' → logprob: -11.0099515914917

Token 564: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03637584298849106
    2. ' =' → logprob: -3.4113757610321045
    3. '       ' → logprob: -6.411375999450684
    4. 'fin' → logprob: -7.536375999450684
    5. '   ' → logprob: -9.036375999450684
    6. ' fin' → logprob: -9.536375999450684
    7. '```' → logprob: -9.536375999450684
    8. 'fact' → logprob: -9.786375999450684
    9. '`' → logprob: -10.286375999450684
    10. '    ' → logprob: -10.286375999450684

Token 565: ' #' (ID: 1069)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.032773811370134354
    2. ' fin' → logprob: -3.657773733139038
    3. '       ' → logprob: -5.282773971557617
    4. '=' → logprob: -7.157773971557617
    5. '   ' → logprob: -7.532773971557617
    6. 'f' → logprob: -10.907773971557617
    7. ' =' → logprob: -11.782773971557617
    8. '_fin' → logprob: -11.907773971557617
    9. '    ' → logprob: -12.532773971557617
    10. 'finite' → logprob: -12.657773971557617

Token 566: ' Multip' (ID: 52811)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0005048964521847665
    2. ' fin' → logprob: -8.000504493713379
    3. '       ' → logprob: -9.375504493713379
    4. '   ' → logprob: -9.500504493713379
    5. 'fact' → logprob: -12.250504493713379
    6. 'finite' → logprob: -13.125504493713379
    7. '=' → logprob: -13.375504493713379
    8. 'f' → logprob: -15.125504493713379
    9. 'final' → logprob: -15.250504493713379
    10. 'finish' → logprob: -15.250504493713379

Token 567: 'lié' (ID: 102412)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.5016480684280396
    2. 'lié' → logprob: -2.12664794921875
    3. '       ' → logprob: -2.25164794921875
    4. '   ' → logprob: -3.25164794921875
    5. 'lying' → logprob: -3.37664794921875
    6. 'li' → logprob: -3.87664794921875
    7. 'lication' → logprob: -4.00164794921875
    8. '           ' → logprob: -4.12664794921875
    9. 'lied' → logprob: -4.87664794921875
    10. 'l' → logprob: -5.12664794921875

Token 568: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6371021270751953
    2. ' par' → logprob: -0.7621021270751953
    3. '<|end|>' → logprob: -6.512102127075195
    4. '(par' → logprob: -7.262102127075195
    5. '_par' → logprob: -7.262102127075195
    6. '	par' → logprob: -8.012102127075195
    7. 'by' → logprob: -8.262102127075195
    8. ')' → logprob: -9.012102127075195
    9. '(i' → logprob: -9.012102127075195
    10. '[i' → logprob: -9.262102127075195

Token 569: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.48150861263275146
    2. 'i' → logprob: -0.9815086126327515
    3. ' (' → logprob: -5.231508731842041
    4. ' i' → logprob: -6.231508731842041
    5. '(' → logprob: -9.731508255004883
    6. '[i' → logprob: -10.731508255004883
    7. '   ' → logprob: -12.606508255004883
    8. ' ' → logprob: -12.856508255004883
    9. '{i' → logprob: -12.856508255004883
    10. '	i' → logprob: -13.481508255004883

Token 570: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009826739551499486
    2. ' i' → logprob: -7.500982761383057
    3. '(i' → logprob: -7.875982761383057
    4. '   ' → logprob: -10.250982284545898
    5. ' (' → logprob: -11.500982284545898
    6. '[i' → logprob: -13.000982284545898
    7. '	i' → logprob: -14.000982284545898
    8. ' ' → logprob: -14.625982284545898
    9. '{i' → logprob: -14.750982284545898
    10. '(' → logprob: -16.1259822845459

Token 571: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08894655108451843
    2. ' +' → logprob: -2.463946580886841
    3. '1' → logprob: -12.588946342468262
    4. '+i' → logprob: -13.588946342468262
    5. ' ' → logprob: -14.338946342468262
    6. '＋' → logprob: -14.588946342468262
    7. '+
' → logprob: -14.838946342468262
    8. ' plus' → logprob: -14.963946342468262
    9. ' +
' → logprob: -15.713946342468262
    10. '   ' → logprob: -15.963946342468262

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -16.25000762939453
    4. '   ' → logprob: -17.00000762939453
    5. '  ' → logprob: -17.62500762939453
    6. '+' → logprob: -18.37500762939453
    7. '2' → logprob: -19.06250762939453
    8. '`' → logprob: -19.25000762939453
    9. '۱' → logprob: -19.43750762939453
    10. ' ' → logprob: -19.62500762939453

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008584582828916609
    2. ' )' → logprob: -7.250858306884766
    3. ')%' → logprob: -9.375858306884766
    4. ')
' → logprob: -10.125858306884766
    5. '),' → logprob: -11.750858306884766
    6. '   ' → logprob: -12.625858306884766
    7. '+' → logprob: -13.375858306884766
    8. ')

' → logprob: -13.500858306884766
    9. '))' → logprob: -13.500858306884766
    10. ' ' → logprob: -14.125858306884766

Token 574: ' car' (ID: 1669)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.7244049906730652
    2. 'fin' → logprob: -1.34940505027771
    3. ')' → logprob: -1.97440505027771
    4. ' *' → logprob: -2.84940505027771
    5. '       ' → logprob: -4.224404811859131
    6. ',' → logprob: -4.474404811859131
    7. ' ' → logprob: -5.099404811859131
    8. ':' → logprob: -5.224404811859131
    9. '<|end|>' → logprob: -5.724404811859131
    10. '   ' → logprob: -5.849404811859131

Token 575: ' fact' (ID: 2840)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.3930172324180603
    2. 'fin' → logprob: -1.143017292022705
    3. '(i' → logprob: -6.268017292022705
    4. ' (' → logprob: -6.518017292022705
    5. ' i' → logprob: -7.143017292022705
    6. '(fin' → logprob: -7.518017292022705
    7. 'fact' → logprob: -8.143016815185547
    8. '(' → logprob: -8.393016815185547
    9. ' fact' → logprob: -8.518016815185547
    10. '   ' → logprob: -8.893016815185547

Token 576: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012130910763517022
    2. '[' → logprob: -7.376213073730469
    3. 'fin' → logprob: -8.376213073730469
    4. '   ' → logprob: -9.876213073730469
    5. 'inv' → logprob: -10.001213073730469
    6. ']' → logprob: -10.126213073730469
    7. 'fact' → logprob: -10.376213073730469
    8. ')' → logprob: -10.501213073730469
    9. '[
' → logprob: -10.501213073730469
    10. '```' → logprob: -10.751213073730469

Token 577: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09337197989225388
    2. ' +' → logprob: -2.468371868133545
    3. ']' → logprob: -5.468371868133545
    4. ']+' → logprob: -9.843372344970703
    5. '[i' → logprob: -9.843372344970703
    6. '+i' → logprob: -10.843372344970703
    7. '+
' → logprob: -11.343372344970703
    8. 'plus' → logprob: -11.468372344970703
    9. ')' → logprob: -11.718372344970703
    10. ' plus' → logprob: -11.968372344970703

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022507118061184883
    2. ']' → logprob: -4.147507190704346
    3. ' ' → logprob: -5.147507190704346
    4. '+' → logprob: -7.772507190704346
    5. '   ' → logprob: -9.022506713867188
    6. '  ' → logprob: -10.897506713867188
    7. '
' → logprob: -11.397506713867188
    8. '```' → logprob: -11.522506713867188
    9. ']+' → logprob: -11.772506713867188
    10. ')' → logprob: -12.022506713867188

Token 579: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43749964237213135
    2. '+' → logprob: -1.4374996423721313
    3. ']' → logprob: -2.812499523162842
    4. ' +' → logprob: -3.937499523162842
    5. ' *' → logprob: -4.437499523162842
    6. '[i' → logprob: -4.812499523162842
    7. ' )' → logprob: -4.812499523162842
    8. '*' → logprob: -5.937499523162842
    9. ' ' → logprob: -6.562499523162842
    10. '   ' → logprob: -7.062499523162842

Token 580: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.8172569274902344
    2. '<|end|>' → logprob: -1.8172569274902344
    3. '=' → logprob: -1.9422569274902344
    4. ')' → logprob: -2.0672569274902344
    5. ' *' → logprob: -2.3172569274902344
    6. ' =' → logprob: -2.4422569274902344
    7. ' is' → logprob: -2.8172569274902344
    8. '*i' → logprob: -3.4422569274902344
    9. '[i' → logprob: -3.5672569274902344
    10. ']' → logprob: -3.6922569274902344

Token 581: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.049724090844392776
    2. ' fact' → logprob: -3.0497241020202637
    3. '(i' → logprob: -7.674724102020264
    4. ' (' → logprob: -7.924724102020264
    5. 'fin' → logprob: -9.299723625183105
    6. '(f' → logprob: -9.924723625183105
    7. '(' → logprob: -10.049723625183105
    8. 'factor' → logprob: -10.049723625183105
    9. ' fin' → logprob: -10.674723625183105
    10. '_fact' → logprob: -11.424723625183105

Token 582: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002338144404347986
    2. '[' → logprob: -8.37523365020752
    3. '[
' → logprob: -13.62523365020752
    4. '   ' → logprob: -14.87523365020752
    5. ' ' → logprob: -15.37523365020752
    6. ' [' → logprob: -15.37523365020752
    7. '	' → logprob: -15.37523365020752
    8. ']' → logprob: -15.75023365020752
    9. '[N' → logprob: -15.75023365020752
    10. '\[' → logprob: -16.250234603881836

Token 583: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3471762537956238
    2. ']' → logprob: -1.4721763134002686
    3. '+' → logprob: -3.2221763134002686
    4. '[' → logprob: -4.2221760749816895
    5. ' ' → logprob: -5.4721760749816895
    6. '   ' → logprob: -6.4721760749816895
    7. ' +' → logprob: -6.9721760749816895
    8. '][' → logprob: -7.7221760749816895
    9. ' [' → logprob: -8.097176551818848
    10. ']+' → logprob: -8.097176551818848

Token 584: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.059025149792432785
    2. '*' → logprob: -3.6840250492095947
    3. '[i' → logprob: -4.434025287628174
    4. 'fin' → logprob: -5.059025287628174
    5. ')' → logprob: -5.684025287628174
    6. ' ' → logprob: -6.559025287628174
    7. '   ' → logprob: -6.684025287628174
    8. '       ' → logprob: -7.059025287628174
    9. ' =' → logprob: -7.184025287628174
    10. ' fin' → logprob: -7.309025287628174

Token 585: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05495879054069519
    2. ' (' → logprob: -2.9299588203430176
    3. '(' → logprob: -9.80495834350586
    4. '[i' → logprob: -11.05495834350586
    5. '(ii' → logprob: -13.67995834350586
    6. '((' → logprob: -13.80495834350586
    7. '(I' → logprob: -14.42995834350586
    8. '
' → logprob: -14.42995834350586
    9. '   ' → logprob: -14.55495834350586
    10. ' ' → logprob: -14.67995834350586

Token 586: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011948640458285809
    2. ' (' → logprob: -4.511948585510254
    3. '[i' → logprob: -7.261948585510254
    4. '(' → logprob: -8.761948585510254
    5. ' i' → logprob: -11.386948585510254
    6. 'i' → logprob: -11.636948585510254
    7. ' ' → logprob: -12.511948585510254
    8. '   ' → logprob: -12.511948585510254
    9. '[' → logprob: -12.636948585510254
    10. ')' → logprob: -12.761948585510254

Token 587: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007620707154273987
    2. ' +' → logprob: -4.882620811462402
    3. '+
' → logprob: -12.382620811462402
    4. '[' → logprob: -12.632620811462402
    5. '   ' → logprob: -13.507620811462402
    6. ' plus' → logprob: -13.882620811462402
    7. '```' → logprob: -14.132620811462402
    8. '+i' → logprob: -14.257620811462402
    9. '1' → logprob: -14.382620811462402
    10. ')' → logprob: -14.507620811462402

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036394817288964987
    2. ' ' → logprob: -8.000364303588867
    3. '+' → logprob: -10.500364303588867
    4. '```' → logprob: -14.375364303588867
    5. ' +' → logprob: -15.750364303588867
    6. '   ' → logprob: -15.875364303588867
    7. '  ' → logprob: -17.125364303588867
    8. '`' → logprob: -17.625364303588867
    9. ')' → logprob: -18.125364303588867
    10. '
' → logprob: -18.375364303588867

Token 589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002201047958806157
    2. ' )' → logprob: -6.377201080322266
    3. ')
' → logprob: -9.002201080322266
    4. '+' → logprob: -9.002201080322266
    5. '       ' → logprob: -9.627201080322266
    6. ')%' → logprob: -10.502201080322266
    7. '   ' → logprob: -10.627201080322266
    8. '[i' → logprob: -10.627201080322266
    9. ' +' → logprob: -10.627201080322266
    10. ']' → logprob: -10.752201080322266

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03243735060095787
    2. '   ' → logprob: -3.532437324523926
    3. 'fin' → logprob: -7.032437324523926
    4. '    ' → logprob: -7.907437324523926
    5. '```' → logprob: -8.282437324523926
    6. '	' → logprob: -8.407437324523926
    7. '        
' → logprob: -9.157437324523926
    8. ' fin' → logprob: -9.282437324523926
    9. ' ' → logprob: -9.282437324523926
    10. '\t' → logprob: -9.407437324523926

Token 591: ' #' (ID: 1069)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.00565809803083539
    2. '   ' → logprob: -6.130658149719238
    3. '       ' → logprob: -6.255658149719238
    4. ' fin' → logprob: -6.505658149719238
    5. '```' → logprob: -10.255658149719238
    6. 'fact' → logprob: -11.755658149719238
    7. '    ' → logprob: -12.880658149719238
    8. '(fin' → logprob: -13.505658149719238
    9. 'finite' → logprob: -14.130658149719238
    10. '_fin' → logprob: -14.380658149719238

Token 592: ' On' (ID: 2160)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.03080434910953045
    2. '       ' → logprob: -3.780804395675659
    3. ' fin' → logprob: -5.53080415725708
    4. '   ' → logprob: -5.65580415725708
    5. '	f' → logprob: -10.655804634094238
    6. 'f' → logprob: -11.155804634094238
    7. '    ' → logprob: -12.530804634094238
    8. 'finite' → logprob: -12.655804634094238
    9. 'finish' → logprob: -12.655804634094238
    10. 'fact' → logprob: -12.780804634094238

Token 593: ' garde' (ID: 65309)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.3567568063735962
    2. ' fin' → logprob: -1.7317568063735962
    3. '=' → logprob: -2.3567566871643066
    4. '%=' → logprob: -5.231756687164307
    5. ' =' → logprob: -5.481756687164307
    6. '*=' → logprob: -6.106756687164307
    7. 'contin' → logprob: -6.356756687164307
    8. 'continue' → logprob: -6.606756687164307
    9. ']' → logprob: -6.606756687164307
    10. ')' → logprob: -6.731756687164307

Token 594: ' tout' (ID: 5501)
  Prédit: ' fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fin' → logprob: -0.7208532094955444
    2. 'fin' → logprob: -1.3458532094955444
    3. '(i' → logprob: -2.595853328704834
    4. '(fin' → logprob: -2.720853328704834
    5. ')' → logprob: -3.220853328704834
    6. ' (' → logprob: -3.345853328704834
    7. '(' → logprob: -3.970853328704834
    8. '%' → logprob: -4.845853328704834
    9. ' )' → logprob: -5.720853328704834
    10. 'fact' → logprob: -6.595853328704834

Token 595: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3542810380458832
    2. ' %' → logprob: -2.229280948638916
    3. ' modulo' → logprob: -2.729280948638916
    4. ')' → logprob: -3.229280948638916
    5. ' fin' → logprob: -3.979280948638916
    6. 'fin' → logprob: -3.979280948638916
    7. '[i' → logprob: -5.354280948638916
    8. ' ' → logprob: -5.479280948638916
    9. ' à' → logprob: -5.479280948638916
    10. '   ' → logprob: -5.479280948638916

Token 596: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.38687458634376526
    2. ' MOD' → logprob: -1.1368745565414429
    3. '_MOD' → logprob: -13.011874198913574
    4. '.MOD' → logprob: -14.136874198913574
    5. ' ' → logprob: -15.136874198913574
    6. ' ' → logprob: -15.511874198913574
    7. '(M' → logprob: -16.01187515258789
    8. '(Mod' → logprob: -17.63687515258789
    9. ' (' → logprob: -17.76187515258789
    10. '```' → logprob: -18.13687515258789

Token 597: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019730713218450546
    2. '   ' → logprob: -4.519730567932129
    3. 'fin' → logprob: -5.894730567932129
    4. '=' → logprob: -6.519730567932129
    5. ' fin' → logprob: -6.644730567932129
    6. ':' → logprob: -6.894730567932129
    7. ' =' → logprob: -7.269730567932129
    8. ')' → logprob: -8.519730567932129
    9. '	' → logprob: -8.644730567932129
    10. '        
' → logprob: -8.894730567932129

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07689380645751953
    2. 'fin' → logprob: -2.7018938064575195
    3. '   ' → logprob: -5.4518938064575195
    4. ' fin' → logprob: -6.4518938064575195
    5. '	f' → logprob: -7.5768938064575195
    6. '```' → logprob: -8.20189380645752
    7. '	   ' → logprob: -9.20189380645752
    8. '(fin' → logprob: -9.82689380645752
    9. '	' → logprob: -10.20189380645752
    10. '    ' → logprob: -11.45189380645752

Token 599: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' (adapté à ' fin') → logprob: -0.01601994037628174
    2. '       ' → logprob: -4.266019821166992
    3. '   ' → logprob: -6.641019821166992
    4. ' fin' → logprob: -7.516019821166992
    5. '    ' → logprob: -14.016019821166992
    6. '```' → logprob: -14.016019821166992
    7. '           ' → logprob: -14.141019821166992
    8. '  ' → logprob: -14.641019821166992
    9. '      ' → logprob: -14.641019821166992
    10. ' ' → logprob: -15.141019821166992

Token 600: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.127333340875339e-06
    2. 'inv' → logprob: -12.875003814697266
    3. 'в' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.750003814697266
    5. '	v' → logprob: -16.000003814697266
    6. '```' → logprob: -16.375003814697266
    7. '=' → logprob: -16.375003814697266
    8. 'f' → logprob: -16.625003814697266
    9. '_v' → logprob: -17.000003814697266
    10. 'vs' → logprob: -17.625003814697266

Token 601: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005547016044147313
    2. '[' → logprob: -7.50055456161499
    3. '[I' → logprob: -14.250555038452148
    4. '\[' → logprob: -14.625555038452148
    5. ' [' → logprob: -15.250555038452148
    6. '=' → logprob: -16.50055503845215
    7. '[next' → logprob: -17.12555503845215
    8. '[j' → logprob: -17.37555503845215
    9. '```' → logprob: -17.50055503845215
    10. '[index' → logprob: -17.62555503845215

Token 602: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03378700464963913
    2. ' =' → logprob: -3.5337870121002197
    3. ']' → logprob: -5.533786773681641
    4. ']=' → logprob: -9.65878677368164
    5. ')' → logprob: -11.40878677368164
    6. ')=' → logprob: -13.28378677368164
    7. ',' → logprob: -15.28378677368164
    8. '=

' → logprob: -15.65878677368164
    9. '*=' → logprob: -16.28378677368164
    10. '>' → logprob: -16.40878677368164

Token 603: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -16.639163970947266
    4. '=

' → logprob: -18.014163970947266
    5. '=
' → logprob: -18.264163970947266
    6. ',' → logprob: -18.764163970947266
    7. '*=' → logprob: -18.889163970947266
    8. '>' → logprob: -18.889163970947266
    9. ')' → logprob: -19.139163970947266
    10. ')=' → logprob: -19.264163970947266

Token 604: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.08339065313339233
    2. ' fin' → logprob: -2.583390712738037
    3. '(f' → logprob: -5.833390712738037
    4. '(fin' → logprob: -6.833390712738037
    5. ' (' → logprob: -8.208390235900879
    6. 'f' → logprob: -8.958390235900879
    7. ' ' → logprob: -10.833390235900879
    8. 'finite' → logprob: -11.583390235900879
    9. '	f' → logprob: -11.958390235900879
    10. 'final' → logprob: -12.270890235900879

Token 605: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.875000953674316
    3. '[v' → logprob: -15.375000953674316
    4. 'inv' → logprob: -15.500000953674316
    5. '[i' → logprob: -17.125
    6. 'f' → logprob: -17.75
    7. 'в' → logprob: -17.875
    8. 'x' → logprob: -18.25
    9. '_inv' → logprob: -18.25
    10. '[-' → logprob: -18.375

Token 606: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. 'i' → logprob: -18.500001907348633
    4. '[I' → logprob: -18.875001907348633
    5. '[
' → logprob: -19.375001907348633
    6. '[j' → logprob: -20.250001907348633
    7. ' [' → logprob: -20.375001907348633
    8. '{i' → logprob: -21.250001907348633
    9. '[index' → logprob: -21.375001907348633
    10. '[next' → logprob: -21.500001907348633

Token 607: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4204053580760956
    2. '+' → logprob: -1.545405387878418
    3. '[' → logprob: -2.045405387878418
    4. ']' → logprob: -8.170405387878418
    5. ' +' → logprob: -8.170405387878418
    6. ' ' → logprob: -10.420405387878418
    7. ' [' → logprob: -10.670405387878418
    8. 'i' → logprob: -11.420405387878418
    9. '[
' → logprob: -11.795405387878418
    10. '][' → logprob: -12.295405387878418

Token 608: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.500024795532227
    4. '```' → logprob: -16.500024795532227
    5. '<|end|>' → logprob: -18.250024795532227
    6. '  ' → logprob: -18.250024795532227
    7. ']' → logprob: -18.500024795532227
    8. '
' → logprob: -19.687524795532227
    9. '۱' → logprob: -20.062524795532227
    10. '0' → logprob: -20.187524795532227

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -15.750004768371582
    4. '```' → logprob: -16.7500057220459
    5. '   ' → logprob: -17.3750057220459
    6. '  ' → logprob: -18.4375057220459
    7. '
' → logprob: -18.6875057220459
    8. ']' → logprob: -18.9375057220459
    9. '۱' → logprob: -19.0625057220459
    10. '0' → logprob: -19.8750057220459

Token 610: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1004890725016594
    2. '*' → logprob: -2.3504891395568848
    3. '*(' → logprob: -8.475488662719727
    4. ' ' → logprob: -10.350488662719727
    5. ')' → logprob: -10.600488662719727
    6. '   ' → logprob: -11.975488662719727
    7. ']' → logprob: -13.100488662719727
    8. '*i' → logprob: -13.225488662719727
    9. '[i' → logprob: -13.600488662719727
    10. ' ' → logprob: -13.725488662719727

Token 611: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06201697885990143
    2. '*' → logprob: -2.8120169639587402
    3. '*(' → logprob: -9.937017440795898
    4. ' ' → logprob: -15.062017440795898
    5. '   ' → logprob: -15.687017440795898
    6. '*object' → logprob: -15.812017440795898
    7. '*i' → logprob: -16.0620174407959
    8. ' ' → logprob: -16.4370174407959
    9. ' *(' → logprob: -17.6870174407959
    10. '<|end|>' → logprob: -17.8120174407959

Token 612: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0019307781476527452
    2. ' (' → logprob: -6.2519307136535645
    3. '(' → logprob: -13.251931190490723
    4. '(I' → logprob: -15.751931190490723
    5. '(ii' → logprob: -15.876931190490723
    6. '((' → logprob: -16.501930236816406
    7. '[i' → logprob: -17.001930236816406
    8. '   ' → logprob: -17.751930236816406
    9. ' ' → logprob: -18.251930236816406
    10. '(ind' → logprob: -18.626930236816406

Token 613: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.048879388719797134
    2. 'i' → logprob: -3.048879384994507
    3. ' (' → logprob: -8.923879623413086
    4. ' i' → logprob: -9.423879623413086
    5. '[i' → logprob: -10.048879623413086
    6. '(' → logprob: -10.673879623413086
    7. '{i' → logprob: -11.673879623413086
    8. '   ' → logprob: -13.048879623413086
    9. '	i' → logprob: -14.923879623413086
    10. ',i' → logprob: -15.173879623413086

Token 614: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008614808320999146
    2. ' +' → logprob: -4.758615016937256
    3. '+
' → logprob: -16.008615493774414
    4. ' plus' → logprob: -17.133615493774414
    5. ' +
' → logprob: -17.633615493774414
    6. '＋' → logprob: -17.758615493774414
    7. '+i' → logprob: -18.758615493774414
    8. '<|end|>' → logprob: -18.883615493774414
    9. '1' → logprob: -19.383615493774414
    10. '```' → logprob: -19.633615493774414

Token 615: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.750015258789062
    4. '   ' → logprob: -16.000015258789062
    5. '<|end|>' → logprob: -16.500015258789062
    6. '
' → logprob: -17.250015258789062
    7. '+' → logprob: -17.437515258789062
    8. '2' → logprob: -17.625015258789062
    9. '۱' → logprob: -17.625015258789062
    10. '  ' → logprob: -18.000015258789062

Token 616: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '+' → logprob: -17.5
    4. '```' → logprob: -19.25
    5. '2' → logprob: -20.5
    6. '   ' → logprob: -21.125
    7. '
' → logprob: -21.5
    8. '۱' → logprob: -21.625
    9. '{' → logprob: -21.75
    10. '১' → logprob: -22.5

Token 617: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.182190554682165e-05
    2. ')%' → logprob: -9.875061988830566
    3. '%' → logprob: -12.125061988830566
    4. ' )' → logprob: -12.375061988830566
    5. ' %' → logprob: -14.500061988830566
    6. '   ' → logprob: -16.37506103515625
    7. ')
' → logprob: -16.62506103515625
    8. ']' → logprob: -17.00006103515625
    9. '```' → logprob: -17.62506103515625
    10. '),' → logprob: -18.25006103515625

Token 618: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06196914613246918
    2. '%' → logprob: -2.811969041824341
    3. ')' → logprob: -13.686968803405762
    4. ')%' → logprob: -15.561968803405762
    5. ' %=' → logprob: -16.436969757080078
    6. ' ' → logprob: -16.811969757080078
    7. ' %
' → logprob: -17.936969757080078
    8. '	' → logprob: -18.186969757080078
    9. '%D' → logprob: -18.561969757080078
    10. ' ' → logprob: -18.686969757080078

Token 619: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005233882926404476
    2. ' MOD' → logprob: -5.2552337646484375
    3. '_MOD' → logprob: -17.255233764648438
    4. '.MOD' → logprob: -19.130233764648438
    5. 'MO' → logprob: -20.130233764648438
    6. 'MODE' → logprob: -21.130233764648438
    7. ' ' → logprob: -21.380233764648438
    8. 'Mod' → logprob: -21.630233764648438
    9. 'MD' → logprob: -22.005233764648438
    10. '   ' → logprob: -22.255233764648438

Token 620: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07662464678287506
    2. '
' → logprob: -3.451624631881714
    3. '<|end|>' → logprob: -4.201624870300293
    4. '    
' → logprob: -4.451624870300293
    5. 'def' → logprob: -5.451624870300293
    6. 'return' → logprob: -5.576624870300293
    7. '```' → logprob: -5.576624870300293
    8. ' return' → logprob: -6.326624870300293
    9. '  
' → logprob: -7.826624870300293
    10. '	return' → logprob: -7.951624870300293

Token 621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35456621646881104
    2. 'def' → logprob: -1.229566216468811
    3. '    
' → logprob: -5.7295660972595215
    4. '<|end|>' → logprob: -6.7295660972595215
    5. '```' → logprob: -6.9795660972595215
    6. ' def' → logprob: -8.35456657409668
    7. ')' → logprob: -8.60456657409668
    8. '
' → logprob: -8.60456657409668
    9. '  
' → logprob: -10.72956657409668
    10. '	def' → logprob: -11.10456657409668

Token 622: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2816914916038513
    2. '   ' → logprob: -1.406691551208496
    3. '    
' → logprob: -8.031691551208496
    4. '```' → logprob: -9.531691551208496
    5. ' def' → logprob: -10.031691551208496
    6. 'comb' → logprob: -10.531691551208496
    7. ')' → logprob: -10.656691551208496
    8. 'result' → logprob: -11.156691551208496
    9. '#' (adapté à ' #') → logprob: -11.281691551208496
    10. '
' → logprob: -11.531691551208496

Token 623: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.526570384972729e-05
    2. '#' → logprob: -10.375055313110352
    3. 'result' → logprob: -11.375055313110352
    4. '```' → logprob: -12.625055313110352
    5. 'comb' → logprob: -12.750055313110352
    6. ' def' → logprob: -12.875055313110352
    7. 'res' → logprob: -13.500055313110352
    8. 'answer' → logprob: -14.625055313110352
    9. 'C' → logprob: -15.250055313110352
    10. 'Comb' → logprob: -15.500055313110352

Token 624: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.004832142032682896
    2. 'but' → logprob: -6.6298322677612305
    3. '#' → logprob: -6.8798322677612305
    4. 'def' → logprob: -7.1298322677612305
    5. 'fin' → logprob: -7.6298322677612305
    6. 'r' → logprob: -8.12983226776123
    7. '```' → logprob: -8.12983226776123
    8. 'fi' → logprob: -8.87983226776123
    9. '
' → logprob: -9.12983226776123
    10. 'fen' → logprob: -9.62983226776123

Token 625: 'ition' (ID: 868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5135071873664856
    2. 'inition' → logprob: -1.6385071277618408
    3. 'ition' → logprob: -2.013507127761841
    4. 'f' → logprob: -2.888507127761841
    5. '   ' → logprob: -5.26350736618042
    6. 'ine' → logprob: -5.38850736618042
    7. 'ir' → logprob: -6.01350736618042
    8. ' def' → logprob: -6.01350736618042
    9. 'er' → logprob: -7.38850736618042
    10. 'e' → logprob: -7.38850736618042

Token 626: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008862264454364777
    2. ' def' → logprob: -5.008862495422363
    3. ' de' → logprob: -6.508862495422363
    4. 'de' → logprob: -8.258862495422363
    5. '   ' → logprob: -8.633862495422363
    6. ' of' → logprob: -8.633862495422363
    7. ' d' → logprob: -11.008862495422363
    8. 'of' → logprob: -11.633862495422363
    9. 'd' → logprob: -12.258862495422363
    10. '  ' → logprob: -13.633862495422363

Token 627: ''une' (ID: 13337)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.6346486210823059
    2. 'e' → logprob: -1.1346485614776611
    3. ''une' → logprob: -2.009648561477661
    4. 'éf' → logprob: -5.38464879989624
    5. 'u' → logprob: -6.00964879989624
    6. 'def' → logprob: -6.38464879989624
    7. 'une' → logprob: -6.88464879989624
    8. 'f' → logprob: -7.00964879989624
    9. ''un' → logprob: -7.13464879989624
    10. ''' → logprob: -7.63464879989624

Token 628: ' fonction' (ID: 17610)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010344763286411762
    2. ' def' → logprob: -7.626034259796143
    3. 'fonction' → logprob: -8.0010347366333
    4. '```' → logprob: -9.3760347366333
    5. 'function' → logprob: -10.1260347366333
    6. ' function' → logprob: -10.2510347366333
    7. '
' → logprob: -10.7510347366333
    8. '#' → logprob: -12.1260347366333
    9. 'dé' → logprob: -12.2510347366333
    10. ' fonction' → logprob: -12.3760347366333

Token 629: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.038297832012176514
    2. '   ' → logprob: -4.163297653198242
    3. ' def' → logprob: -4.288297653198242
    4. '
' → logprob: -4.913297653198242
    5. '    
' → logprob: -9.038297653198242
    6. 'de' → logprob: -9.163297653198242
    7. '	def' → logprob: -9.163297653198242
    8. ' ' → logprob: -9.288297653198242
    9. '  ' → logprob: -9.413297653198242
    10. 'ndef' → logprob: -9.913297653198242

Token 630: ' calcul' (ID: 7559)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3572809398174286
    2. 'calcul' → logprob: -2.232280969619751
    3. 'def' → logprob: -3.357280969619751
    4. 'n' → logprob: -3.732280969619751
    5. 'fin' → logprob: -3.982280969619751
    6. 'inition' → logprob: -4.357280731201172
    7. 'fonction' → logprob: -4.357280731201172
    8. ' calcul' → logprob: -4.482280731201172
    9. 'éf' → logprob: -4.482280731201172
    10. 'cal' → logprob: -4.982280731201172

Token 631: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01122748851776123
    2. '   ' → logprob: -4.761227607727051
    3. 'de' → logprob: -7.011227607727051
    4. ' de' → logprob: -7.136227607727051
    5. ' def' → logprob: -7.386227607727051
    6. '<|end|>' → logprob: -9.51122760772705
    7. '  ' → logprob: -10.51122760772705
    8. ' ' → logprob: -10.88622760772705
    9. '    
' → logprob: -11.26122760772705
    10. '```' → logprob: -11.51122760772705

Token 632: ' coefficient' (ID: 64656)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.17501209676265717
    2. '```' → logprob: -2.9250121116638184
    3. 'C' → logprob: -3.4250121116638184
    4. 'co' → logprob: -3.5500121116638184
    5. 'c' → logprob: -4.175012111663818
    6. 'coeff' → logprob: -4.675012111663818
    7. 'n' → logprob: -4.925012111663818
    8. 'coef' → logprob: -5.300012111663818
    9. 'bin' → logprob: -6.675012111663818
    10. 'def' → logprob: -7.300012111663818

Token 633: ' bin' (ID: 6958)
  Prédit: ' bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.7660528421401978
    2. 'bin' → logprob: -1.3910528421401978
    3. '_bin' → logprob: -1.6410528421401978
    4. ' de' → logprob: -3.516052722930908
    5. '_comb' → logprob: -4.266052722930908
    6. 'b' → logprob: -4.391052722930908
    7. '_' → logprob: -4.391052722930908
    8. 'def' → logprob: -4.641052722930908
    9. '```' → logprob: -6.266052722930908
    10. 'comb' → logprob: -6.391052722930908

Token 634: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.019358372315764427
    2. 'om' → logprob: -4.269358158111572
    3. 'ôme' → logprob: -5.769358158111572
    4. 'ôm' → logprob: -6.394358158111572
    5. 'def' → logprob: -8.76935863494873
    6. 'omia' → logprob: -8.89435863494873
    7. '```' → logprob: -9.76935863494873
    8. 'coef' → logprob: -12.64435863494873
    9. 'omie' → logprob: -12.64435863494873
    10. 'ômes' → logprob: -12.64435863494873

Token 635: ' "' (ID: 392)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5046730637550354
    2. '   ' → logprob: -1.2546730041503906
    3. ' def' → logprob: -2.2546730041503906
    4. ' (' → logprob: -5.629673004150391
    5. '(' → logprob: -7.504673004150391
    6. '(n' → logprob: -7.629673004150391
    7. ' ' → logprob: -7.879673004150391
    8. '  ' → logprob: -7.879673004150391
    9. '
' → logprob: -8.25467300415039
    10. ',' → logprob: -8.62967300415039

Token 636: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024700678884983063
    2. 'C' → logprob: -4.52470064163208
    3. 'comb' → logprob: -5.14970064163208
    4. ' def' → logprob: -5.14970064163208
    5. ' C' → logprob: -6.89970064163208
    6. ' comb' → logprob: -7.89970064163208
    7. '   ' → logprob: -8.649701118469238
    8. 'com' → logprob: -9.024701118469238
    9. 'c' → logprob: -9.649701118469238
    10. '```' → logprob: -9.649701118469238

Token 637: ' choose' (ID: 5655)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.366832971572876
    2. 'def' → logprob: -1.866832971572876
    3. 'C' → logprob: -2.616832971572876
    4. ',' → logprob: -3.366832971572876
    5. 'choose' → logprob: -4.241832733154297
    6. ' choose' → logprob: -4.366832733154297
    7. '_choose' → logprob: -4.991832733154297
    8. 'cr' → logprob: -5.491832733154297
    9. '   ' → logprob: -6.241832733154297
    10. 'Cho' → logprob: -6.366832733154297

Token 638: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15184816718101501
    2. ' k' → logprob: -2.026848077774048
    3. '"' → logprob: -5.276848316192627
    4. 'r' → logprob: -6.651848316192627
    5. '(k' → logprob: -7.276848316192627
    6. 'def' → logprob: -7.901848316192627
    7. ' ' → logprob: -8.026847839355469
    8. '"k' → logprob: -8.151847839355469
    9. '  ' → logprob: -8.776847839355469
    10. '   ' → logprob: -8.901847839355469

Token 639: '"
' (ID: 1092)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3614700138568878
    2. '"' → logprob: -1.4864699840545654
    3. '(n' → logprob: -3.6114699840545654
    4. '   ' → logprob: -4.1114702224731445
    5. '":' → logprob: -4.6114702224731445
    6. '"
' → logprob: -4.6114702224731445
    7. '":
' → logprob: -5.2364702224731445
    8. ' (' → logprob: -5.9864702224731445
    9. ' def' → logprob: -6.9864702224731445
    10. '```' → logprob: -6.9864702224731445

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011555730365216732
    2. 'def' → logprob: -5.0115556716918945
    3. '    
' → logprob: -5.8865556716918945
    4. '
' → logprob: -6.6365556716918945
    5. ' def' → logprob: -7.6365556716918945
    6. '  
' → logprob: -10.261555671691895
    7. '```' → logprob: -10.261555671691895
    8. '   
' → logprob: -10.386555671691895
    9. ' 
' → logprob: -10.511555671691895
    10. '(' → logprob: -10.761555671691895

Token 641: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03088572807610035
    2. 'def' → logprob: -3.530885696411133
    3. '    
' → logprob: -7.405885696411133
    4. ' def' → logprob: -8.030885696411133
    5. '
' → logprob: -8.655885696411133
    6. '	def' → logprob: -11.280885696411133
    7. ' 
' → logprob: -12.780885696411133
    8. '```' → logprob: -12.780885696411133
    9. '   
' → logprob: -13.405885696411133
    10. '\' → logprob: -13.655885696411133

Token 642: ' C' (ID: 363)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1889910250902176
    2. '   ' → logprob: -1.8139910697937012
    3. ' def' → logprob: -4.688991069793701
    4. '	def' → logprob: -12.563990592956543
    5. '
' → logprob: -13.188990592956543
    6. ':def' → logprob: -14.313990592956543
    7. '```' → logprob: -14.688990592956543
    8. '    
' → logprob: -14.688990592956543
    9. '  ' → logprob: -15.438990592956543
    10. '_def' → logprob: -15.688990592956543

Token 643: '(n' (ID: 2406)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13807842135429382
    2. '   ' → logprob: -2.638078451156616
    3. ' def' → logprob: -3.138078451156616
    4. 'ho' → logprob: -5.763078212738037
    5. '  ' → logprob: -6.263078212738037
    6. '=' → logprob: -6.388078212738037
    7. ' =' → logprob: -6.388078212738037
    8. ' ' → logprob: -6.888078212738037
    9. 'o' → logprob: -7.263078212738037
    10. 'ef' → logprob: -7.388078212738037

Token 644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06127803772687912
    2. ',r' → logprob: -2.9362781047821045
    3. ' ,' → logprob: -5.311277866363525
    4. ',n' → logprob: -6.936277866363525
    5. 'r' → logprob: -8.061278343200684
    6. ')' → logprob: -10.186278343200684
    7. ',k' → logprob: -10.186278343200684
    8. 'n' → logprob: -10.686278343200684
    9. ',
' → logprob: -11.936278343200684
    10. ',m' → logprob: -12.061278343200684

Token 645: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003621808486059308
    2. ' r' → logprob: -5.628621578216553
    3. ')' → logprob: -11.128622055053711
    4. 'k' → logprob: -13.003622055053711
    5. 'n' → logprob: -13.003622055053711
    6. 'def' → logprob: -13.128622055053711
    7. ' ' → logprob: -15.878622055053711
    8. '  ' → logprob: -17.00362205505371
    9. ' n' → logprob: -17.25362205505371
    10. '
' → logprob: -17.37862205505371

Token 646: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02982708252966404
    2. '):' → logprob: -3.654827117919922
    3. 'def' → logprob: -5.904827117919922
    4. '=' → logprob: -7.779827117919922
    5. ')=' → logprob: -8.279827117919922
    6. '):
' → logprob: -10.279827117919922
    7. ' =' → logprob: -10.779827117919922
    8. ' def' → logprob: -11.029827117919922
    9. ' )' → logprob: -11.404827117919922
    10. ')
' → logprob: -11.654827117919922

Token 647: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26100268959999084
    2. ' =' → logprob: -2.011002779006958
    3. 'def' → logprob: -2.386002779006958
    4. ' def' → logprob: -5.761002540588379
    5. '   ' → logprob: -7.761002540588379
    6. ' ' → logprob: -9.511002540588379
    7. ')' → logprob: -9.761002540588379
    8. ':' → logprob: -9.761002540588379
    9. '(' → logprob: -10.011002540588379
    10. '(n' → logprob: -11.261002540588379

Token 648: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.37075212597846985
    2. 'la' → logprob: -2.1207520961761475
    3. 'def' → logprob: -2.6207520961761475
    4. '   ' → logprob: -3.3707520961761475
    5. ' n' → logprob: -4.120752334594727
    6. 'n' → logprob: -4.120752334594727
    7. 'fact' → logprob: -4.370752334594727
    8. ' fact' → logprob: -4.995752334594727
    9. 'le' → logprob: -5.245752334594727
    10. ' une' → logprob: -5.620752334594727

Token 649: ' nombre' (ID: 9733)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6763375997543335
    2. 'nombre' → logprob: -1.1763375997543335
    3. 'comb' → logprob: -2.676337718963623
    4. 'factor' → logprob: -3.301337718963623
    5. 'def' → logprob: -3.926337718963623
    6. 'n' → logprob: -4.176337718963623
    7. ' nombre' → logprob: -4.801337718963623
    8. 'co' → logprob: -5.176337718963623
    9. 'coeff' → logprob: -5.551337718963623
    10. ' fact' → logprob: -5.676337718963623

Token 650: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26074400544166565
    2. '   ' → logprob: -1.8857439756393433
    3. '(n' → logprob: -2.885744094848633
    4. ')' → logprob: -4.385744094848633
    5. '=' → logprob: -6.510744094848633
    6. ' =' → logprob: -6.635744094848633
    7. '_' → logprob: -6.760744094848633
    8. 'de' → logprob: -7.260744094848633
    9. '  ' → logprob: -7.260744094848633
    10. ' ' → logprob: -7.635744094848633

Token 651: ' façons' (ID: 165958)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.5870693922042847
    2. 'com' → logprob: -1.2120693922042847
    3. ' comb' → logprob: -2.962069511413574
    4. 'r' → logprob: -3.962069511413574
    5. ' ways' → logprob: -3.962069511413574
    6. 'ways' → logprob: -4.962069511413574
    7. ' combinations' → logprob: -5.087069511413574
    8. '```' → logprob: -5.212069511413574
    9. 'n' → logprob: -5.587069511413574
    10. ' façons' → logprob: -5.712069511413574

Token 652: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7707175016403198
    2. 'de' → logprob: -0.7707175016403198
    3. '   ' → logprob: -2.6457176208496094
    4. ' ' → logprob: -7.145717620849609
    5. '    ' → logprob: -7.520717620849609
    6. '_de' → logprob: -7.770717620849609
    7. '  ' → logprob: -7.895717620849609
    8. 'def' → logprob: -8.14571762084961
    9. 'dont' → logprob: -8.39571762084961
    10. ')' → logprob: -8.64571762084961

Token 653: ' choisir' (ID: 47004)
  Prédit: ' choisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' choisir' → logprob: -0.1763235628604889
    2. 'r' → logprob: -2.926323652267456
    3. 'cho' → logprob: -3.051323652267456
    4. 'comb' → logprob: -3.426323652267456
    5. ' r' → logprob: -4.676323413848877
    6. '   ' → logprob: -5.176323413848877
    7. ' comb' → logprob: -5.676323413848877
    8. '```' → logprob: -6.426323413848877
    9. 'prendre' → logprob: -6.426323413848877
    10. ' ' → logprob: -6.551323413848877

Token 654: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5685458183288574
    2. 'r' → logprob: -1.0685458183288574
    3. '   ' → logprob: -3.1935458183288574
    4. ' ' → logprob: -3.4435458183288574
    5. '(r' → logprob: -5.318545818328857
    6. '    ' → logprob: -5.568545818328857
    7. ' "' → logprob: -6.318545818328857
    8. '(n' → logprob: -6.568545818328857
    9. '  ' → logprob: -6.693545818328857
    10. ')' → logprob: -7.193545818328857

Token 655: ' éléments' (ID: 57375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4790754020214081
    2. ' éléments' → logprob: -1.9790754318237305
    3. ' ' → logprob: -3.1040754318237305
    4. ' parmi' → logprob: -3.4790754318237305
    5. ' items' → logprob: -3.8540754318237305
    6. ' objets' → logprob: -3.9790754318237305
    7. ' des' → logprob: -4.1040754318237305
    8. ' objects' → logprob: -4.1040754318237305
    9. ' elements' → logprob: -4.3540754318237305
    10. ')' → logprob: -4.4790754318237305

Token 656: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6676522493362427
    2. 'def' → logprob: -0.7926522493362427
    3. ' def' → logprob: -3.667652130126953
    4. ')' → logprob: -6.042652130126953
    5. ' de' → logprob: -6.417652130126953
    6. ',' → logprob: -6.917652130126953
    7. 'from' → logprob: -7.417652130126953
    8. ' ' → logprob: -7.792652130126953
    9. ' (' → logprob: -7.917652130126953
    10. ' =' → logprob: -7.917652130126953

Token 657: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14285363256931305
    2. ' n' → logprob: -2.0178537368774414
    3. '   ' → logprob: -9.267853736877441
    4. 'r' → logprob: -9.892853736877441
    5. '	n' → logprob: -11.392853736877441
    6. ' r' → logprob: -11.767853736877441
    7. ' ' → logprob: -12.767853736877441
    8. ' une' → logprob: -13.517853736877441
    9. 'm' → logprob: -13.767853736877441
    10. '(n' → logprob: -13.892853736877441

Token 658: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005701246205717325
    2. ' def' → logprob: -5.380701065063477
    3. '   ' → logprob: -7.005701065063477
    4. '
' → logprob: -9.130701065063477
    5. ')' → logprob: -10.755701065063477
    6. '```' → logprob: -11.380701065063477
    7. '(def' → logprob: -12.130701065063477
    8. '(' → logprob: -12.130701065063477
    9. ' (' → logprob: -12.255701065063477
    10. ' déf' → logprob: -12.630701065063477

Token 659: 'comb' (ID: 43606)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5317217707633972
    2. '   ' → logprob: -1.406721830368042
    3. ' )' → logprob: -2.531721830368042
    4. ' n' → logprob: -3.406721830368042
    5. 'n' → logprob: -3.781721830368042
    6. 'def' → logprob: -4.281721591949463
    7. '):' → logprob: -4.906721591949463
    8. ' ' → logprob: -6.031721591949463
    9. '  ' → logprob: -6.531721591949463
    10. '    ' → logprob: -6.531721591949463

Token 660: 'ina' (ID: 1522)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4596439003944397
    2. '(n' → logprob: -2.084643840789795
    3. 'ination' → logprob: -2.209643840789795
    4. 'def' → logprob: -2.959643840789795
    5. ')' → logprob: -3.584643840789795
    6. '[n' → logprob: -4.209643840789795
    7. 'ina' → logprob: -4.334643840789795
    8. '   ' → logprob: -4.709643840789795
    9. ' n' → logprob: -4.959643840789795
    10. 'inations' → logprob: -6.334643840789795

Token 661: 'ison' (ID: 5072)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0168116092681885
    2. 'r' → logprob: -1.7668116092681885
    3. '#' → logprob: -2.1418116092681885
    4. '```' → logprob: -2.2668116092681885
    5. 'isons' → logprob: -3.2668116092681885
    6. 'sons' → logprob: -3.5168116092681885
    7. '[' → logprob: -3.7668116092681885
    8. 'ais' → logprob: -4.266811370849609
    9. '_' → logprob: -4.641811370849609
    10. '{}' → logprob: -4.891811370849609

Token 662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1829688400030136
    2. 's' → logprob: -1.9329688549041748
    3. '(n' → logprob: -4.682968616485596
    4. ',' → logprob: -5.307968616485596
    5. 'def' → logprob: -5.807968616485596
    6. ' )' → logprob: -6.057968616485596
    7. '   ' → logprob: -6.682968616485596
    8. '")' → logprob: -8.432969093322754
    9. '),' → logprob: -8.557969093322754
    10. 'n' → logprob: -8.557969093322754

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06019369512796402
    2. 'def' → logprob: -2.9351937770843506
    3. '    
' → logprob: -5.9351935386657715
    4. ' def' → logprob: -6.9351935386657715
    5. '
' → logprob: -7.3101935386657715
    6. ')' → logprob: -8.31019401550293
    7. '  
' → logprob: -9.06019401550293
    8. ' 
' → logprob: -9.31019401550293
    9. '(' → logprob: -9.68519401550293
    10. '    ' → logprob: -9.81019401550293

Token 664: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01954590529203415
    2. 'def' (adapté à ' def') → logprob: -4.144546031951904
    3. '
' → logprob: -6.394546031951904
    4. '    
' → logprob: -6.894546031951904
    5. ' def' → logprob: -7.269546031951904
    6. ' 
' → logprob: -10.144545555114746
    7. '```' → logprob: -10.644545555114746
    8. '   
' → logprob: -11.144545555114746
    9. '  
' → logprob: -11.519545555114746
    10. '  ' → logprob: -11.644545555114746

Token 665: ' C' (ID: 363)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.03091658465564251
    2. 'C' → logprob: -4.530916690826416
    3. 'cmb' → logprob: -5.155916690826416
    4. 'n' → logprob: -5.280916690826416
    5. 'com' → logprob: -5.405916690826416
    6. ' comb' → logprob: -5.655916690826416
    7. 'choose' → logprob: -8.405916213989258
    8. ' n' → logprob: -8.655916213989258
    9. ' cmb' → logprob: -9.405916213989258
    10. 'COM' → logprob: -9.530916213989258

Token 666: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03169446438550949
    2. '(' → logprob: -3.7816944122314453
    3. ' (' → logprob: -4.781694412231445
    4. 'n' → logprob: -11.531694412231445
    5. '(i' → logprob: -11.531694412231445
    6. '   ' → logprob: -12.906694412231445
    7. '(N' → logprob: -13.281694412231445
    8. '(
' → logprob: -13.406694412231445
    9. ' ' → logprob: -13.656694412231445
    10. '  ' → logprob: -14.656694412231445

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045367187703959644
    2. ',r' → logprob: -7.750453472137451
    3. ' ,' → logprob: -10.87545394897461
    4. ',n' → logprob: -12.62545394897461
    5. ',k' → logprob: -15.12545394897461
    6. 'r' → logprob: -15.62545394897461
    7. '‌,' → logprob: -15.87545394897461
    8. ',
' → logprob: -16.75045394897461
    9. ',int' → logprob: -17.50045394897461
    10. ',m' → logprob: -17.62545394897461

Token 668: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00220818561501801
    2. ' r' → logprob: -6.127208232879639
    3. 'k' → logprob: -10.75220775604248
    4. '<|end|>' → logprob: -13.37720775604248
    5. ' ' → logprob: -17.377208709716797
    6. ' k' → logprob: -17.752208709716797
    7. '	r' → logprob: -18.627208709716797
    8. ',r' → logprob: -18.752208709716797
    9. 'n' → logprob: -19.127208709716797
    10. 'c' → logprob: -19.252208709716797

Token 669: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007519744685851038
    2. ')' → logprob: -7.250751972198486
    3. '):
' → logprob: -10.375752449035645
    4. ':' → logprob: -11.625752449035645
    5. ' ):' → logprob: -14.000752449035645
    6. '   ' → logprob: -14.750752449035645
    7. ')：' → logprob: -15.375752449035645
    8. '):
' → logprob: -15.875752449035645
    9. ',' → logprob: -16.000751495361328
    10. '):

' → logprob: -17.375751495361328

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00533680897206068
    2. '   ' → logprob: -6.005336761474609
    3. '<|end|>' → logprob: -6.005336761474609
    4. ':' → logprob: -8.88033676147461
    5. ' if' → logprob: -9.88033676147461
    6. '    ' → logprob: -10.13033676147461
    7. ')' → logprob: -10.38033676147461
    8. ' return' → logprob: -11.00533676147461
    9. '.' → logprob: -11.00533676147461
    10. '(' → logprob: -11.75533676147461

Token 671: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3002506494522095
    2. ' if' → logprob: -1.5502506494522095
    3. 'if' → logprob: -3.17525053024292
    4. '       ' → logprob: -5.42525053024292
    5. '    ' → logprob: -7.30025053024292
    6. '	if' → logprob: -9.050251007080078
    7. 'return' → logprob: -9.175251007080078
    8. ' return' → logprob: -9.800251007080078
    9. '    
' → logprob: -11.675251007080078
    10. '  ' → logprob: -12.050251007080078

Token 672: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.000476786372018978
    2. 'return' → logprob: -8.250476837158203
    3. ' if' → logprob: -8.625476837158203
    4. '   ' → logprob: -10.250476837158203
    5. '       ' → logprob: -14.875476837158203
    6. '	if' → logprob: -15.750476837158203
    7. 'global' → logprob: -16.250476837158203
    8. ' return' → logprob: -17.375476837158203
    9. '    ' → logprob: -17.875476837158203
    10. '    
' → logprob: -18.375476837158203

Token 673: ' coefficient' (ID: 64656)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020669763907790184
    2. ' if' → logprob: -4.645669937133789
    3. '0' → logprob: -5.020669937133789
    4. 'r' → logprob: -5.895669937133789
    5. '   ' → logprob: -6.770669937133789
    6. 'return' → logprob: -9.020669937133789
    7. '1' → logprob: -9.020669937133789
    8. ' ' → logprob: -9.645669937133789
    9. ' r' → logprob: -10.770669937133789
    10. '       ' → logprob: -11.770669937133789

Token 674: ' bin' (ID: 6958)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2644129693508148
    2. 'if' → logprob: -1.8894129991531372
    3. ' n' → logprob: -3.8894128799438477
    4. ' ' → logprob: -4.139412879943848
    5. '   ' → logprob: -4.389412879943848
    6. 'n' → logprob: -5.639412879943848
    7. ' =' → logprob: -5.889412879943848
    8. ')' → logprob: -6.139412879943848
    9. '=' → logprob: -6.139412879943848
    10. '_' → logprob: -6.264412879943848

Token 675: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.0005170515505596995
    2. 'om' → logprob: -7.875516891479492
    3. ')' → logprob: -9.750516891479492
    4. 'ôm' → logprob: -10.875516891479492
    5. 'omia' → logprob: -11.750516891479492
    6. '```' → logprob: -11.875516891479492
    7. 'ôme' → logprob: -12.000516891479492
    8. '=' → logprob: -12.250516891479492
    9. '>' → logprob: -12.250516891479492
    10. '   ' → logprob: -12.625516891479492

Token 676: ' C' (ID: 363)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14444071054458618
    2. ':' → logprob: -3.0194406509399414
    3. 'if' → logprob: -3.6444406509399414
    4. ' =' → logprob: -4.144440650939941
    5. '   ' → logprob: -4.269440650939941
    6. ' ' → logprob: -4.644440650939941
    7. '=' → logprob: -4.894440650939941
    8. ' return' → logprob: -5.019440650939941
    9. ')' → logprob: -6.769440650939941
    10. ' :' → logprob: -7.394440650939941

Token 677: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6811663508415222
    2. '(' → logprob: -1.306166410446167
    3. ' if' → logprob: -2.681166410446167
    4. 'if' → logprob: -2.681166410446167
    5. '   ' → logprob: -3.306166410446167
    6. '[' → logprob: -4.306166172027588
    7. ' (' → logprob: -4.931166172027588
    8. '[n' → logprob: -5.556166172027588
    9. ')' → logprob: -5.681166172027588
    10. ',' → logprob: -5.806166172027588

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059685345739126205
    2. ',r' → logprob: -3.184685230255127
    3. ' ,' → logprob: -4.184685230255127
    4. ')' → logprob: -7.309685230255127
    5. ',n' → logprob: -7.934685230255127
    6. '   ' → logprob: -10.184685707092285
    7. ',
' → logprob: -10.559685707092285
    8. ' <' → logprob: -10.559685707092285
    9. ',k' → logprob: -10.809685707092285
    10. '>=' → logprob: -10.809685707092285

Token 679: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006716079078614712
    2. ' r' → logprob: -5.006716251373291
    3. ')' → logprob: -14.631715774536133
    4. 'n' → logprob: -16.631715774536133
    5. '```' → logprob: -17.131715774536133
    6. ' ' → logprob: -17.256715774536133
    7. '   ' → logprob: -17.506715774536133
    8. ',' → logprob: -17.631715774536133
    9. ',r' → logprob: -17.631715774536133
    10. '  ' → logprob: -18.506715774536133

Token 680: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007596337702125311
    2. '):' → logprob: -5.132596492767334
    3. ' )' → logprob: -7.007596492767334
    4. '   ' → logprob: -7.882596492767334
    5. 'if' → logprob: -9.632596015930176
    6. '):
' → logprob: -10.007596015930176
    7. ')==' → logprob: -10.007596015930176
    8. 'def' → logprob: -10.257596015930176
    9. ' if' → logprob: -10.632596015930176
    10. ')
' → logprob: -10.882596015930176

Token 681: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06293181329965591
    2. ' =' → logprob: -2.937931776046753
    3. '   ' → logprob: -5.687932014465332
    4. ':' → logprob: -5.812932014465332
    5. ')' → logprob: -7.687932014465332
    6. ' if' → logprob: -7.812932014465332
    7. 'if' → logprob: -8.062932014465332
    8. ' ' → logprob: -8.437932014465332
    9. '):' → logprob: -9.062932014465332
    10. ')=' → logprob: -11.187932014465332

Token 682: ' calc' (ID: 25691)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03711391240358353
    2. '=' → logprob: -4.287114143371582
    3. 'return' → logprob: -4.412114143371582
    4. ' if' → logprob: -5.662114143371582
    5. 'alculate' → logprob: -7.037114143371582
    6. 'ont' → logprob: -7.162114143371582
    7. ' return' → logprob: -7.162114143371582
    8. 'cal' → logprob: -7.287114143371582
    9. ')' → logprob: -7.662114143371582
    10. 'ult' → logprob: -7.787114143371582

Token 683: 'ule' (ID: 1601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2702405452728271
    2. '=' → logprob: -1.7702405452728271
    3. '_' → logprob: -2.270240545272827
    4. 'al' → logprob: -2.395240545272827
    5. 'alc' → logprob: -2.520240545272827
    6. 'ule' → logprob: -2.895240545272827
    7. 'alculate' → logprob: -3.395240545272827
    8. 'ulate' → logprob: -3.770240545272827
    9. 'ur' → logprob: -3.895240545272827
    10. ')' → logprob: -4.270240783691406

Token 684: ' par' (ID: 686)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7335785031318665
    2. ' if' → logprob: -1.1085784435272217
    3. '=' → logprob: -2.1085784435272217
    4. '   ' → logprob: -3.6085784435272217
    5. '       ' → logprob: -3.7335784435272217
    6. 'if' → logprob: -5.233578681945801
    7. ':' → logprob: -5.608578681945801
    8. ' return' → logprob: -6.733578681945801
    9. '    ' → logprob: -6.983578681945801
    10. ' ' → logprob: -7.358578681945801

Token 685: ' n' (ID: 297)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.1100308895111084
    2. '0' → logprob: -1.8600308895111084
    3. ' fact' → logprob: -1.9850308895111084
    4. '(' → logprob: -1.9850308895111084
    5. '   ' → logprob: -2.3600308895111084
    6. ' (' → logprob: -3.1100308895111084
    7. ' return' → logprob: -3.6100308895111084
    8. ' n' → logprob: -4.3600311279296875
    9. '1' → logprob: -4.6100311279296875
    10. ' ' → logprob: -4.7350311279296875

Token 686: '!' (ID: 0)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4354129433631897
    2. '<' → logprob: -1.310412883758545
    3. ' >=' → logprob: -3.060412883758545
    4. '>=' → logprob: -3.560412883758545
    5. '<n' → logprob: -6.310412883758545
    6. ')' → logprob: -7.060412883758545
    7. '   ' → logprob: -7.185412883758545
    8. '>' → logprob: -7.185412883758545
    9. 'fact' → logprob: -7.185412883758545
    10. '<len' → logprob: -8.060413360595703

Token 687: '/(' (ID: 27334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6115246415138245
    2. 'if' → logprob: -2.4865245819091797
    3. ')' → logprob: -2.7365245819091797
    4. '[n' → logprob: -2.7365245819091797
    5. ',' → logprob: -3.2365245819091797
    6. ' if' → logprob: -3.3615245819091797
    7. '    ' → logprob: -3.6115245819091797
    8. '[' → logprob: -3.7365245819091797
    9. 'fact' → logprob: -3.7365245819091797
    10. 'def' → logprob: -4.11152458190918

Token 688: 'r' (ID: 81)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.007004136219620705
    2. '(f' → logprob: -5.007004261016846
    3. ' fact' → logprob: -8.757003784179688
    4. '(r' → logprob: -9.257003784179688
    5. 'factor' → logprob: -11.132003784179688
    6. 'r' → logprob: -11.382003784179688
    7. ' (' → logprob: -13.007003784179688
    8. 'f' → logprob: -13.132003784179688
    9. '   ' → logprob: -13.632003784179688
    10. 'fac' → logprob: -13.882003784179688

Token 689: '!' (ID: 0)
  Prédit: '!'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.004980900790542364
    2. '!*' → logprob: -5.75498104095459
    3. '*' → logprob: -6.87998104095459
    4. '*!' → logprob: -7.62998104095459
    5. '!(' → logprob: -9.25498104095459
    6. '```' → logprob: -9.75498104095459
    7. '*(' → logprob: -10.50498104095459
    8. '_factor' → logprob: -10.75498104095459
    9. ' factorial' → logprob: -10.87998104095459
    10. '!=' → logprob: -11.25498104095459

Token 690: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.26312652230262756
    2. ' *' → logprob: -1.5131264925003052
    3. '*(' → logprob: -4.513126373291016
    4. '%' → logprob: -9.888126373291016
    5. '   ' → logprob: -9.888126373291016
    6. ')' → logprob: -10.013126373291016
    7. '*r' → logprob: -11.638126373291016
    8. ' ' → logprob: -12.888126373291016
    9. '*((' → logprob: -13.013126373291016
    10. '(' → logprob: -13.513126373291016

Token 691: 'n' (ID: 77)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5931397080421448
    2. 'fact' → logprob: -0.8431397080421448
    3. '(r' → logprob: -4.0931396484375
    4. '(n' → logprob: -8.4681396484375
    5. ' fact' → logprob: -9.7181396484375
    6. '   ' → logprob: -10.4681396484375
    7. '(f' → logprob: -10.9681396484375
    8. 'factor' → logprob: -11.3431396484375
    9. ')' → logprob: -11.4681396484375
    10. 'n' → logprob: -11.5931396484375

Token 692: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.3343590497970581
    2. ' -' → logprob: -1.834359049797058
    3. '-' → logprob: -2.0843591690063477
    4. ')' → logprob: -9.959359169006348
    5. 'r' → logprob: -10.459359169006348
    6. '-n' → logprob: -11.959359169006348
    7. '   ' → logprob: -11.959359169006348
    8. ' ' → logprob: -12.459359169006348
    9. '```' → logprob: -13.584359169006348
    10. '-i' → logprob: -13.709359169006348

Token 693: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18101486563682556
    2. ')!' → logprob: -2.4310147762298584
    3. '!' → logprob: -2.6810147762298584
    4. '))' → logprob: -4.8060150146484375
    5. '!)' → logprob: -7.3060150146484375
    6. ')*' → logprob: -9.431015014648438
    7. ' )' → logprob: -10.431015014648438
    8. 'factor' → logprob: -10.931015014648438
    9. 'r' → logprob: -11.056015014648438
    10. ')!=' → logprob: -11.056015014648438

Token 694: '!)
' (ID: 52210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07734451442956924
    2. '!' → logprob: -2.8273444175720215
    3. '))' → logprob: -4.8273444175720215
    4. '*' → logprob: -5.9523444175720215
    5. ')!' → logprob: -6.0773444175720215
    6. ' *' → logprob: -7.5773444175720215
    7. ' )' → logprob: -7.5773444175720215
    8. ' ' → logprob: -7.9523444175720215
    9. ' factorial' → logprob: -8.45234489440918
    10. ')*' → logprob: -8.57734489440918

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1481701135635376
    2. '   ' → logprob: -2.023169994354248
    3. ')' → logprob: -6.273169994354248
    4. ' if' → logprob: -6.523169994354248
    5. '(' → logprob: -7.773169994354248
    6. '<|end|>' → logprob: -7.773169994354248
    7. '    ' → logprob: -8.148170471191406
    8. ':' → logprob: -8.648170471191406
    9. '    
' → logprob: -8.773170471191406
    10. '        
' → logprob: -8.898170471191406

Token 696: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2733215391635895
    2. ' if' → logprob: -1.523321509361267
    3. 'if' → logprob: -3.8983216285705566
    4. '   ' → logprob: -7.398321628570557
    5. '	if' → logprob: -8.398321151733398
    6. '	' → logprob: -10.898321151733398
    7. '	   ' → logprob: -11.148321151733398
    8. '    ' → logprob: -12.398321151733398
    9. '        
' → logprob: -12.523321151733398
    10. '           ' → logprob: -12.773321151733398

Token 697: ' Ici' (ID: 145754)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5041669011116028
    2. ' if' → logprob: -1.629166841506958
    3. '   ' → logprob: -2.254166841506958
    4. 'if' → logprob: -2.379166841506958
    5. '    ' → logprob: -6.629167079925537
    6. ' ' → logprob: -8.629166603088379
    7. '	if' → logprob: -8.754166603088379
    8. '<|end|>' → logprob: -9.004166603088379
    9. ')' → logprob: -9.504166603088379
    10. '  ' → logprob: -9.629166603088379

Token 698: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04264353588223457
    2. 'if' → logprob: -3.9176435470581055
    3. '   ' → logprob: -4.1676435470581055
    4. '       ' → logprob: -5.1676435470581055
    5. ' return' → logprob: -8.292643547058105
    6. '	if' → logprob: -9.042643547058105
    7. '    ' → logprob: -9.167643547058105
    8. 'return' → logprob: -9.417643547058105
    9. '<|end|>' → logprob: -10.042643547058105
    10. ' n' → logprob: -11.042643547058105

Token 699: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49140068888664246
    2. ' if' → logprob: -1.2414007186889648
    3. 'return' → logprob: -2.491400718688965
    4. ' return' → logprob: -4.366400718688965
    5. '       ' → logprob: -5.991400718688965
    6. '   ' → logprob: -6.741400718688965
    7. 'r' → logprob: -10.991400718688965
    8. '    ' → logprob: -11.241400718688965
    9. '0' → logprob: -11.491400718688965
    10. '        
' → logprob: -11.491400718688965

Token 700: ' utilise' (ID: 70283)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45535582304000854
    2. 'if' → logprob: -1.3303558826446533
    3. '   ' → logprob: -2.3303558826446533
    4. '       ' → logprob: -6.330355644226074
    5. 'return' → logprob: -7.080355644226074
    6. '    ' → logprob: -7.330355644226074
    7. ' return' → logprob: -7.330355644226074
    8. 'def' → logprob: -10.455355644226074
    9. '	if' → logprob: -10.580355644226074
    10. '     ' → logprob: -10.705355644226074

Token 701: ' les' (ID: 1341)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.29360273480415344
    2. ' fact' → logprob: -1.418602705001831
    3. '0' → logprob: -4.91860294342041
    4. 'fin' → logprob: -6.29360294342041
    5. ' fin' → logprob: -6.66860294342041
    6. ' ' → logprob: -6.79360294342041
    7. '   ' → logprob: -7.54360294342041
    8. '(' → logprob: -9.41860294342041
    9. '1' → logprob: -9.54360294342041
    10. '```' → logprob: -10.79360294342041

Token 702: ' tables' (ID: 16584)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.002135748043656349
    2. ' fact' → logprob: -6.877135753631592
    3. '0' → logprob: -7.627135753631592
    4. 'factor' → logprob: -8.377135276794434
    5. 'if' → logprob: -9.002135276794434
    6. '   ' → logprob: -9.877135276794434
    7. 'fin' → logprob: -10.377135276794434
    8. 'fac' → logprob: -10.377135276794434
    9. '1' → logprob: -10.502135276794434
    10. ' ' → logprob: -10.627135276794434

Token 703: ' pré' (ID: 9424)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6196887493133545
    2. '       ' → logprob: -1.6196887493133545
    3. '   ' → logprob: -1.8696887493133545
    4. ' fact' → logprob: -2.6196887493133545
    5. ' if' → logprob: -3.6196887493133545
    6. 'if' → logprob: -5.619688987731934
    7. 'def' → logprob: -5.619688987731934
    8. '_fact' → logprob: -7.244688987731934
    9. '[' → logprob: -8.119688987731934
    10. '    ' → logprob: -8.119688987731934

Token 704: '-cal' (ID: 84920)
  Prédit: 'computed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.04174527898430824
    2. '   ' → logprob: -4.541745185852051
    3. 'cal' → logprob: -4.791745185852051
    4. 'def' → logprob: -4.916745185852051
    5. 'fact' → logprob: -5.666745185852051
    6. '[' → logprob: -5.666745185852051
    7. 'c' → logprob: -6.291745185852051
    8. ' computed' → logprob: -6.416745185852051
    9. 'compute' → logprob: -7.666745185852051
    10. 'C' → logprob: -7.791745185852051

Token 705: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.019443495199084282
    2. 'c' → logprob: -4.144443511962891
    3. 'culated' → logprob: -5.894443511962891
    4. 'cult' → logprob: -8.39444351196289
    5. 'cu' → logprob: -9.01944351196289
    6. 'cule' → logprob: -9.64444351196289
    7. 'cules' → logprob: -9.89444351196289
    8. '   ' → logprob: -10.39444351196289
    9. 'calcul' → logprob: -10.39444351196289
    10. '```' → logprob: -11.14444351196289

Token 706: 'ées' (ID: 5161)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04516448453068733
    2. '       ' → logprob: -3.7951645851135254
    3. 'fact' → logprob: -5.045164585113525
    4. 'ed' → logprob: -5.545164585113525
    5. 'ées' → logprob: -6.545164585113525
    6. 'C' → logprob: -6.670164585113525
    7. 'culated' → logprob: -6.670164585113525
    8. 'ated' → logprob: -7.045164585113525
    9. '    ' → logprob: -7.295164585113525
    10. 'c' → logprob: -7.295164585113525

Token 707: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3367184102535248
    2. ' if' → logprob: -1.5867184400558472
    3. '   ' → logprob: -2.5867183208465576
    4. 'if' → logprob: -5.211718559265137
    5. '    ' → logprob: -8.961718559265137
    6. ',' → logprob: -9.086718559265137
    7. 'fact' → logprob: -9.586718559265137
    8. '	if' → logprob: -9.836718559265137
    9. ')' → logprob: -10.336718559265137
    10. '[' → logprob: -10.461718559265137

Token 708: ' un' (ID: 537)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.05748061463236809
    2. 'r' → logprob: -3.932480573654175
    3. ' fact' → logprob: -3.932480573654175
    4. 'return' → logprob: -4.432480812072754
    5. 'if' → logprob: -6.182480812072754
    6. '   ' → logprob: -7.432480812072754
    7. ' return' → logprob: -7.432480812072754
    8. ' r' → logprob: -7.557480812072754
    9. ' if' → logprob: -7.807480812072754
    10. 'factor' → logprob: -7.932480812072754

Token 709: ' calcul' (ID: 7559)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.5860925912857056
    2. 'r' → logprob: -1.8360925912857056
    3. ' fact' → logprob: -1.8360925912857056
    4. 'n' → logprob: -2.211092472076416
    5. 'if' → logprob: -2.461092472076416
    6. ' if' → logprob: -2.711092472076416
    7. ')' → logprob: -3.461092472076416
    8. 'return' → logprob: -3.461092472076416
    9. 'e' → logprob: -3.586092472076416
    10. ' return' → logprob: -3.711092472076416

Token 710: ' rapide' (ID: 44887)
  Prédit: ' rapide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapide' → logprob: -0.40112802386283875
    2. '   ' → logprob: -1.1511280536651611
    3. ' rapides' → logprob: -5.026127815246582
    4. '       ' → logprob: -5.526127815246582
    5. ' fast' → logprob: -6.651127815246582
    6. ' if' → logprob: -8.151127815246582
    7. '    ' → logprob: -8.276127815246582
    8. 'rap' → logprob: -8.401127815246582
    9. ' efficace' → logprob: -8.651127815246582
    10. ' rapid' → logprob: -8.776127815246582

Token 711: ' sous' (ID: 14487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5459991693496704
    2. '   ' → logprob: -0.9209991693496704
    3. '<|end|>' → logprob: -4.795999050140381
    4. ' if' → logprob: -5.170999050140381
    5. '    ' → logprob: -5.670999050140381
    6. ' ' → logprob: -6.545999050140381
    7. ')' → logprob: -6.920999050140381
    8. '  ' → logprob: -7.545999050140381
    9. ',' → logprob: -7.545999050140381
    10. '      ' → logprob: -7.795999050140381

Token 712: ' modulo' (ID: 112372)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0025225074496120214
    2. ' MOD' → logprob: -6.8775224685668945
    3. 'mod' → logprob: -6.8775224685668945
    4. '   ' → logprob: -8.127522468566895
    5. ' modulo' → logprob: -9.752522468566895
    6. '_MOD' → logprob: -10.377522468566895
    7. '```' → logprob: -10.502522468566895
    8. 'Modulo' → logprob: -11.252522468566895
    9. ')' → logprob: -11.877522468566895
    10. '       ' → logprob: -12.252522468566895

Token 713: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21830901503562927
    2. ' if' → logprob: -2.218308925628662
    3. '   ' → logprob: -2.468308925628662
    4. 'if' → logprob: -6.718308925628662
    5. ')' → logprob: -7.968308925628662
    6. ':' → logprob: -8.09330940246582
    7. '    ' → logprob: -8.34330940246582
    8. '(' → logprob: -9.46830940246582
    9. ' ' → logprob: -9.46830940246582
    10. ' (' → logprob: -9.96830940246582

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008684301748871803
    2. '   ' → logprob: -5.008684158325195
    3. ' if' → logprob: -6.383684158325195
    4. '    ' → logprob: -9.633684158325195
    5. 'if' → logprob: -10.133684158325195
    6. ')' → logprob: -10.508684158325195
    7. '        
' → logprob: -10.508684158325195
    8. '<|end|>' → logprob: -10.758684158325195
    9. '        ' → logprob: -11.008684158325195
    10. '      ' → logprob: -11.383684158325195

Token 715: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6876115202903748
    2. '       ' → logprob: -1.5626115798950195
    3. ' if' → logprob: -1.5626115798950195
    4. '   ' → logprob: -2.5626115798950195
    5. '	if' → logprob: -7.0626115798950195
    6. '    ' → logprob: -10.06261157989502
    7. 'return' → logprob: -11.43761157989502
    8. '   ' → logprob: -11.93761157989502
    9. '	   ' → logprob: -12.06261157989502
    10. ' ' → logprob: -12.56261157989502

Token 716: ' La' (ID: 3038)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17757192254066467
    2. 'if' → logprob: -2.427572011947632
    3. ' if' → logprob: -3.177572011947632
    4. '   ' → logprob: -3.427572011947632
    5. '	if' → logprob: -8.427572250366211
    6. '    ' → logprob: -10.177572250366211
    7. '	   ' → logprob: -10.927572250366211
    8. '	' → logprob: -12.302572250366211
    9. '     ' → logprob: -12.552572250366211
    10. '      ' → logprob: -12.802572250366211

Token 717: ' multiplication' (ID: 86340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35575515031814575
    2. ' if' → logprob: -1.730755090713501
    3. 'r' → logprob: -2.855755090713501
    4. 'return' → logprob: -3.230755090713501
    5. ' return' → logprob: -4.35575532913208
    6. '   ' → logprob: -4.85575532913208
    7. ' r' → logprob: -6.35575532913208
    8. '0' → logprob: -6.73075532913208
    9. 'n' → logprob: -6.73075532913208
    10. ' ' → logprob: -9.230754852294922

Token 718: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7536868453025818
    2. 'fact' → logprob: -1.0036869049072266
    3. '=' → logprob: -2.5036869049072266
    4. ' fact' → logprob: -2.8786869049072266
    5. ' return' → logprob: -4.878686904907227
    6. ',' → logprob: -5.753686904907227
    7. 'return' → logprob: -5.878686904907227
    8. '<|end|>' → logprob: -6.378686904907227
    9. '_fact' → logprob: -6.628686904907227
    10. '   ' → logprob: -6.628686904907227

Token 719: ' invers' (ID: 38721)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.053006187081336975
    2. ' fact' → logprob: -3.178006172180176
    3. '(f' → logprob: -4.803006172180176
    4. ' (' → logprob: -6.678006172180176
    5. '(' → logprob: -9.178006172180176
    6. 'fin' → logprob: -10.115506172180176
    7. '((' → logprob: -10.178006172180176
    8. 'facts' → logprob: -10.303006172180176
    9. 'factor' → logprob: -10.365506172180176
    10. '(fin' → logprob: -10.490506172180176

Token 720: 'es' (ID: 268)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3173906207084656
    2. '   ' → logprob: -1.6923906803131104
    3. ')' → logprob: -2.8173906803131104
    4. ' *' → logprob: -4.192390441894531
    5. 'fact' → logprob: -5.567390441894531
    6. '       ' → logprob: -5.942390441894531
    7. '[' → logprob: -6.192390441894531
    8. ']' → logprob: -6.817390441894531
    9. ',' → logprob: -7.192390441894531
    10. 'def' → logprob: -7.692390441894531

Token 721: ' sim' (ID: 1845)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9728777408599854
    2. '[' → logprob: -1.4728777408599854
    3. ',' → logprob: -2.2228777408599854
    4. '   ' → logprob: -2.3478777408599854
    5. ' fact' → logprob: -2.5978777408599854
    6. ')' → logprob: -3.9728777408599854
    7. '(' → logprob: -4.222877502441406
    8. ' (' → logprob: -4.472877502441406
    9. 'fin' → logprob: -4.847877502441406
    10. ' *' → logprob: -4.972877502441406

Token 722: 'ule' (ID: 1601)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6103823781013489
    2. 'ult' → logprob: -1.485382318496704
    3. 'ple' → logprob: -2.235382318496704
    4. 'pl' → logprob: -3.360382318496704
    5. 'ultan' → logprob: -3.860382318496704
    6. ' fact' → logprob: -4.485382556915283
    7. 'ule' → logprob: -4.985382556915283
    8. 'p' → logprob: -5.235382556915283
    9. '=' → logprob: -5.235382556915283
    10. '[' → logprob: -5.235382556915283

Token 723: ' une' (ID: 2463)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6386265158653259
    2. ' fact' → logprob: -0.8886265158653259
    3. ' (' → logprob: -3.3886265754699707
    4. '   ' → logprob: -4.513626575469971
    5. '(f' → logprob: -4.638626575469971
    6. ' la' → logprob: -6.888626575469971
    7. '(' → logprob: -6.888626575469971
    8. ' ' → logprob: -6.888626575469971
    9. 'fin' → logprob: -7.638626575469971
    10. '    ' → logprob: -8.138626098632812

Token 724: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.4442961812019348
    2. ' division' → logprob: -2.19429612159729
    3. '*' → logprob: -2.44429612159729
    4. 'fact' → logprob: -3.31929612159729
    5. ')' → logprob: -3.56929612159729
    6. 'pow' → logprob: -3.81929612159729
    7. 'factor' → logprob: -4.319296360015869
    8. 'multip' → logprob: -4.319296360015869
    9. ' *' → logprob: -4.444296360015869
    10. 'mod' → logprob: -4.569296360015869

Token 725: ' sous' (ID: 14487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10886318236589432
    2. '   ' → logprob: -2.858863115310669
    3. ' if' → logprob: -3.608863115310669
    4. '<|end|>' → logprob: -5.483863353729248
    5. ')' → logprob: -5.608863353729248
    6. ',' → logprob: -5.733863353729248
    7. '(' → logprob: -6.108863353729248
    8. ' (' → logprob: -6.608863353729248
    9. '    ' → logprob: -7.358863353729248
    10. '(n' → logprob: -7.608863353729248

Token 726: ' modulo' (ID: 112372)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.10264992713928223
    2. ' MOD' → logprob: -2.3526499271392822
    3. ' modulo' → logprob: -6.602649688720703
    4. 'mod' → logprob: -6.977649688720703
    5. '_MOD' → logprob: -9.477649688720703
    6. '.MOD' → logprob: -11.227649688720703
    7. 'Modulo' → logprob: -11.352649688720703
    8. '   ' → logprob: -11.352649688720703
    9. ' modular' → logprob: -11.602649688720703
    10. ' mod' → logprob: -12.227649688720703

Token 727: ' premier' (ID: 15506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17848072946071625
    2. '   ' → logprob: -2.178480625152588
    3. ' if' → logprob: -3.678480625152588
    4. ')' → logprob: -5.178480625152588
    5. '(' → logprob: -5.303480625152588
    6. ',' → logprob: -5.553480625152588
    7. '<|end|>' → logprob: -5.678480625152588
    8. ' (' → logprob: -6.428480625152588
    9. ' return' → logprob: -7.178480625152588
    10. ' ' → logprob: -7.178480625152588

Token 728: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03796632960438728
    2. '   ' → logprob: -3.787966251373291
    3. ')' → logprob: -4.662966251373291
    4. '<|end|>' → logprob: -6.537966251373291
    5. ',' → logprob: -6.787966251373291
    6. ' if' → logprob: -7.037966251373291
    7. '        
' → logprob: -8.28796672821045
    8. '    ' → logprob: -8.53796672821045
    9. ' ' → logprob: -8.91296672821045
    10. '    
' → logprob: -9.03796672821045

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006715670460835099
    2. '   ' → logprob: -7.62567138671875
    3. ' if' → logprob: -9.37567138671875
    4. ')' → logprob: -10.75067138671875
    5. '<|end|>' → logprob: -10.75067138671875
    6. '    ' → logprob: -11.62567138671875
    7. '      ' → logprob: -11.62567138671875
    8. 'if' → logprob: -12.12567138671875
    9. '        
' → logprob: -12.37567138671875
    10. '           ' → logprob: -12.37567138671875

Token 730: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041654039174318314
    2. ' if' → logprob: -3.416654109954834
    3. 'if' → logprob: -5.291654109954834
    4. '   ' → logprob: -5.916654109954834
    5. '	if' → logprob: -9.041653633117676
    6. ' return' → logprob: -10.041653633117676
    7. 'return' (adapté à ' return') → logprob: -10.541653633117676
    8. '    ' → logprob: -11.041653633117676
    9. '           ' → logprob: -12.166653633117676
    10. '<|end|>' → logprob: -12.291653633117676

Token 731: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0253633800894022
    2. ' fact' → logprob: -3.7753634452819824
    3. '(f' → logprob: -6.525363445281982
    4. ' (' → logprob: -7.400363445281982
    5. '_fact' → logprob: -11.525362968444824
    6. '(' → logprob: -12.150362968444824
    7. 'factor' → logprob: -12.275362968444824
    8. 'Fact' → logprob: -12.525362968444824
    9. '((' → logprob: -12.775362968444824
    10. 'fac' → logprob: -13.150362968444824

Token 732: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.3319124011322856e-05
    2. '[r' → logprob: -10.750022888183594
    3. '[' → logprob: -13.875022888183594
    4. 'n' → logprob: -14.000022888183594
    5. '(n' → logprob: -17.875022888183594
    6. ' [' → logprob: -19.000022888183594
    7. '[N' → logprob: -19.125022888183594
    8. '[
' → logprob: -19.875022888183594
    9. '```' → logprob: -19.875022888183594
    10. ' n' → logprob: -20.125022888183594

Token 733: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.4736459888808895e-05
    2. ']*' → logprob: -11.750014305114746
    3. '   ' → logprob: -12.250014305114746
    4. ' ]' → logprob: -13.500014305114746
    5. '[r' → logprob: -15.125014305114746
    6. '[' → logprob: -15.250014305114746
    7. '-' → logprob: -16.750015258789062
    8. ']
' → logprob: -17.125015258789062
    9. ' ' → logprob: -17.375015258789062
    10. '],' → logprob: -17.500015258789062

Token 734: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3786916732788086
    2. '*' → logprob: -1.2536916732788086
    3. '   ' → logprob: -3.6286916732788086
    4. '```' → logprob: -7.128691673278809
    5. ' ' → logprob: -7.503691673278809
    6. ',' → logprob: -8.003691673278809
    7. ')' → logprob: -8.003691673278809
    8. ' ' → logprob: -8.128691673278809
    9. '    ' → logprob: -8.753691673278809
    10. '*r' → logprob: -8.753691673278809

Token 735: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.14534392952919006
    2. '(fin' → logprob: -2.3953440189361572
    3. ' fin' → logprob: -3.7703440189361572
    4. '(f' → logprob: -3.8953440189361572
    5. ' (' → logprob: -7.270343780517578
    6. 'f' → logprob: -10.895343780517578
    7. '(' → logprob: -11.395343780517578
    8. 'finite' → logprob: -12.520343780517578
    9. '((' → logprob: -12.520343780517578
    10. '   ' → logprob: -12.895343780517578

Token 736: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.869017852295656e-06
    2. 'inv' → logprob: -12.125006675720215
    3. ' v' → logprob: -15.375006675720215
    4. '*v' → logprob: -15.750006675720215
    5. '	v' → logprob: -15.875006675720215
    6. ' inv' → logprob: -16.12500762939453
    7. '[' → logprob: -16.25000762939453
    8. ',v' → logprob: -16.25000762939453
    9. 'в' → logprob: -16.37500762939453
    10. '...' → logprob: -16.37500762939453

Token 737: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00015872348740231246
    2. 'r' → logprob: -8.750158309936523
    3. '[' → logprob: -15.875158309936523
    4. '[n' → logprob: -17.500158309936523
    5. '	r' → logprob: -17.625158309936523
    6. '(r' → logprob: -18.875158309936523
    7. ' [' → logprob: -19.875158309936523
    8. '   ' → logprob: -20.250158309936523
    9. ' r' → logprob: -20.250158309936523
    10. '```' → logprob: -20.500158309936523

Token 738: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002153378736693412
    2. ' ]' → logprob: -8.875215530395508
    3. ']%' → logprob: -9.750215530395508
    4. '%' → logprob: -11.875215530395508
    5. '[r' → logprob: -12.250215530395508
    6. '[' → logprob: -12.500215530395508
    7. '']' → logprob: -14.500215530395508
    8. ' %' → logprob: -15.250215530395508
    9. '"]' → logprob: -15.250215530395508
    10. '[n' → logprob: -15.500215530395508

Token 739: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7678465843200684
    2. '%' → logprob: -1.0178465843200684
    3. ' *' → logprob: -1.7678465843200684
    4. '*' → logprob: -6.392846584320068
    5. '<|end|>' → logprob: -6.642846584320068
    6. ')' → logprob: -8.142847061157227
    7. ' ' → logprob: -8.517847061157227
    8. '   ' → logprob: -8.892847061157227
    9. ' ' → logprob: -9.142847061157227
    10. '	' → logprob: -10.892847061157227

Token 740: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.06202627718448639
    2. ' fin' → logprob: -2.812026262283325
    3. '(fin' → logprob: -9.812026023864746
    4. 'f' → logprob: -14.187026023864746
    5. 'finite' → logprob: -14.437026023864746
    6. 'fact' → logprob: -14.437026023864746
    7. 'fim' → logprob: -14.937026023864746
    8. 'fen' → logprob: -15.187026023864746
    9. '(' → logprob: -15.437026023864746
    10. '(f' → logprob: -15.937026023864746

Token 741: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.531315314830863e-06
    2. '[v' → logprob: -13.625003814697266
    3. 'r' → logprob: -14.000003814697266
    4. '[r' → logprob: -14.375003814697266
    5. '[n' → logprob: -15.000003814697266
    6. 'inv' → logprob: -16.500003814697266
    7. '[' → logprob: -16.625003814697266
    8. ' v' → logprob: -16.750003814697266
    9. '	v' → logprob: -16.750003814697266
    10. 'в' → logprob: -17.500003814697266

Token 742: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -14.250001907348633
    3. '[r' → logprob: -14.250001907348633
    4. 'n' → logprob: -14.500001907348633
    5. ' [' → logprob: -17.625001907348633
    6. '(n' → logprob: -19.000001907348633
    7. '```' → logprob: -19.000001907348633
    8. '	n' → logprob: -19.875001907348633
    9. '[[' → logprob: -20.125001907348633
    10. '[
' → logprob: -20.375001907348633

Token 743: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9051955938339233
    2. '-r' → logprob: -0.9051955938339233
    3. ' -' → logprob: -1.6551955938339233
    4. '[r' → logprob: -11.655195236206055
    5. '[' → logprob: -13.030195236206055
    6. '-R' → logprob: -13.030195236206055
    7. '-ra' → logprob: -13.280195236206055
    8. '[-' → logprob: -13.905195236206055
    9. 'r' → logprob: -13.905195236206055
    10. '-k' → logprob: -14.280195236206055

Token 744: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.896309739408025e-07
    2. ' r' → logprob: -14.125000953674316
    3. '	r' → logprob: -19.375
    4. '   ' → logprob: -21.125
    5. ']' → logprob: -21.625
    6. 'р' → logprob: -21.75
    7. '[r' → logprob: -21.75
    8. '_r' → logprob: -21.75
    9. '­r' → logprob: -22.125
    10. '```' → logprob: -23.5

Token 745: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039373442996293306
    2. ']%' → logprob: -7.875393867492676
    3. ' ]' → logprob: -11.250393867492676
    4. '[' → logprob: -16.12539291381836
    5. ']]' → logprob: -16.50039291381836
    6. '']' → logprob: -16.50039291381836
    7. '%' → logprob: -16.62539291381836
    8. '])' → logprob: -16.62539291381836
    9. ']
' → logprob: -16.75039291381836
    10. ']

' → logprob: -17.50039291381836

Token 746: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12695667147636414
    2. '%' → logprob: -2.1269567012786865
    3. '   ' → logprob: -10.876956939697266
    4. ')' → logprob: -12.876956939697266
    5. ')%' → logprob: -13.501956939697266
    6. '%n' → logprob: -13.626956939697266
    7. ' ' → logprob: -13.876956939697266
    8. '	' → logprob: -14.251956939697266
    9. ' %
' → logprob: -14.251956939697266
    10. ' %=' → logprob: -14.751956939697266

Token 747: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001584850688232109
    2. ' MOD' → logprob: -8.750158309936523
    3. '_MOD' → logprob: -19.125158309936523
    4. 'MO' → logprob: -20.375158309936523
    5. '.MOD' → logprob: -20.750158309936523
    6. ' ' → logprob: -21.375158309936523
    7. '```' → logprob: -22.500158309936523
    8. '   ' → logprob: -23.125158309936523
    9. '`' → logprob: -23.250158309936523
    10. '998' → logprob: -23.250158309936523

Token 748: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02565692737698555
    2. '
' → logprob: -4.275656700134277
    3. '    
' → logprob: -4.525656700134277
    4. '<|end|>' → logprob: -8.025656700134277
    5. '```' → logprob: -9.775656700134277
    6. '  
' → logprob: -9.775656700134277
    7. ')' → logprob: -10.525656700134277
    8. 'if' → logprob: -10.650656700134277
    9. ' 
' → logprob: -11.025656700134277
    10. '   
' → logprob: -11.525656700134277

Token 750: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.473937064409256
    2. '   ' → logprob: -1.2239370346069336
    3. 'if' → logprob: -3.5989370346069336
    4. 'answer' → logprob: -3.8489370346069336
    5. 'res' → logprob: -4.098937034606934
    6. 'for' → logprob: -4.723937034606934
    7. '#' (adapté à ' #') → logprob: -5.973937034606934
    8. 's' → logprob: -6.723937034606934
    9. 'results' → logprob: -6.973937034606934
    10. 'total' → logprob: -7.223937034606934

Token 751: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21648341417312622
    2. 'res' → logprob: -2.5914833545684814
    3. 'answer' → logprob: -2.5914833545684814
    4. 'for' → logprob: -3.7164833545684814
    5. 'ans' → logprob: -4.2164835929870605
    6. 'total' → logprob: -6.0914835929870605
    7. 'rés' → logprob: -6.8414835929870605
    8. 'if' → logprob: -7.4664835929870605
    9. 'answers' → logprob: -7.7164835929870605
    10. 'results' → logprob: -7.8414835929870605

Token 752: 'isation' (ID: 6993)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.12347690761089325
    2. 'isation' → logprob: -2.248476982116699
    3. 'ize' → logprob: -4.998476982116699
    4. 'izer' → logprob: -6.623476982116699
    5. 'ized' → logprob: -7.248476982116699
    6. 'is' → logprob: -7.998476982116699
    7. 'z' → logprob: -8.1234769821167
    8. '   ' → logprob: -8.6234769821167
    9. 'iz' → logprob: -8.7484769821167
    10. 'izing' → logprob: -8.9984769821167

Token 753: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.332036554813385
    2. 'answer' → logprob: -1.8320364952087402
    3. 'res' → logprob: -2.4570364952087402
    4. 'ans' → logprob: -3.7070364952087402
    5. '   ' → logprob: -5.70703649520874
    6. ' result' → logprob: -5.95703649520874
    7. ' answer' → logprob: -5.95703649520874
    8. ' ans' → logprob: -6.45703649520874
    9. 'total' → logprob: -6.83203649520874
    10. 'dp' → logprob: -7.83203649520874

Token 754: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0698708295822144
    2. 'result' → logprob: -1.0698708295822144
    3. 'res' → logprob: -1.3198708295822144
    4. 'answer' → logprob: -3.194870948791504
    5. '0' → logprob: -5.444870948791504
    6. 'total' → logprob: -7.569870948791504
    7. 's' → logprob: -7.819870948791504
    8. 'ret' → logprob: -9.319870948791504
    9. ' ans' → logprob: -9.444870948791504
    10. 'r' → logprob: -10.194870948791504

Token 755: ' réponse' (ID: 50332)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20669397711753845
    2. 'res' → logprob: -1.8316940069198608
    3. 'ans' → logprob: -4.33169412612915
    4. 'answer' → logprob: -4.45669412612915
    5. 'total' → logprob: -7.08169412612915
    6. 's' → logprob: -7.58169412612915
    7. 'rés' → logprob: -8.456693649291992
    8. 'sum' → logprob: -9.456693649291992
    9. 'dp' → logprob: -10.081693649291992
    10. 'r' → logprob: -10.831693649291992

Token 756: ' :' (ID: 712)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.753643274307251
    2. 'answer' → logprob: -0.753643274307251
    3. 'res' → logprob: -3.003643274307251
    4. 'result' → logprob: -5.378643035888672
    5. ' ans' → logprob: -6.128643035888672
    6. '=' → logprob: -7.128643035888672
    7. ' =' → logprob: -7.253643035888672
    8. ' answer' → logprob: -7.378643035888672
    9. 'r' → logprob: -10.003643035888672
    10. 'rep' → logprob: -10.628643035888672

Token 757: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.749925434589386
    2. 'answer' → logprob: -1.2499253749847412
    3. 'res' → logprob: -1.9999253749847412
    4. 'result' → logprob: -2.249925374984741
    5. ' ans' → logprob: -8.62492561340332
    6. ' answer' → logprob: -9.37492561340332
    7. '0' → logprob: -10.74992561340332
    8. ' result' → logprob: -11.74992561340332
    9. '```' → logprob: -11.99992561340332
    10. 'total' → logprob: -12.37492561340332

Token 758: ' él' (ID: 13045)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35270264744758606
    2. '=' → logprob: -2.2277026176452637
    3. 's' → logprob: -2.7277026176452637
    4. ' s' → logprob: -2.7277026176452637
    5. ' _' → logprob: -4.852702617645264
    6. '_' → logprob: -5.102702617645264
    7. ' total' → logprob: -5.102702617645264
    8. 'result' → logprob: -5.852702617645264
    9. 'total' → logprob: -5.977702617645264
    10. ' result' → logprob: -5.977702617645264

Token 759: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.1305968165397644
    2. 'ev' → logprob: -2.255596876144409
    3. 't' → logprob: -5.00559663772583
    4. 'eve' → logprob: -5.50559663772583
    5. 'e' → logprob: -6.50559663772583
    6. 'm' → logprob: -7.13059663772583
    7. 'ave' → logprob: -7.38059663772583
    8. 've' → logprob: -7.38059663772583
    9. '=' → logprob: -7.50559663772583
    10. 'v' → logprob: -7.88059663772583

Token 760: ' m' (ID: 284)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5596257448196411
    2. '1' → logprob: -1.3096257448196411
    3. 'm' → logprob: -2.9346256256103516
    4. '0' → logprob: -3.1846256256103516
    5. '(' → logprob: -3.9346256256103516
    6. 'pow' → logprob: -3.9346256256103516
    7. 'ans' → logprob: -4.559625625610352
    8. 'C' → logprob: -5.309625625610352
    9. 'k' → logprob: -5.434625625610352
    10. '(pow' → logprob: -7.559625625610352

Token 761: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.30698028206825256
    2. '*' → logprob: -2.8069803714752197
    3. ' **' → logprob: -2.9319803714752197
    4. ' *' → logprob: -3.3069803714752197
    5. ' to' → logprob: -4.181980133056641
    6. 'm' → logprob: -4.306980133056641
    7. ' m' → logprob: -4.431980133056641
    8. 'to' → logprob: -4.556980133056641
    9. 'pow' → logprob: -4.556980133056641
    10. '<|end|>' → logprob: -5.056980133056641

Token 762: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009365257807075977
    2. '0' → logprob: -4.759365081787109
    3. ' k' → logprob: -7.759365081787109
    4. '1' → logprob: -8.75936508178711
    5. 'the' → logprob: -9.88436508178711
    6. 'pow' → logprob: -10.13436508178711
    7. 'n' → logprob: -10.25936508178711
    8. ' ' → logprob: -11.13436508178711
    9. '(k' → logprob: -11.38436508178711
    10. 'power' → logprob: -12.75936508178711

Token 763: ' puissance' (ID: 63494)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002955358475446701
    2. '0' → logprob: -6.502955436706543
    3. ' k' → logprob: -6.627955436706543
    4. ' ' → logprob: -10.252955436706543
    5. '(k' → logprob: -10.502955436706543
    6. 'n' → logprob: -10.752955436706543
    7. 'power' → logprob: -11.002955436706543
    8. 'pow' → logprob: -11.377955436706543
    9. '(' → logprob: -12.877955436706543
    10. '   ' → logprob: -12.877955436706543

Token 764: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029905755072832108
    2. ' k' → logprob: -3.5299057960510254
    3. '(k' → logprob: -9.404905319213867
    4. '1' → logprob: -10.654905319213867
    5. ' (' → logprob: -10.904905319213867
    6. '0' → logprob: -11.529905319213867
    7. '(' → logprob: -12.279905319213867
    8. 'n' → logprob: -12.404905319213867
    9. ' ' → logprob: -12.404905319213867
    10. '   ' → logprob: -12.779905319213867

Token 765: ',' (ID: 11)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.25047045946121216
    2. '   ' → logprob: -2.5004703998565674
    3. 'm' → logprob: -2.7504703998565674
    4. ' =' → logprob: -3.3754703998565674
    5. '=' → logprob: -4.0004706382751465
    6. 'result' → logprob: -4.6254706382751465
    7. ' m' → logprob: -5.1254706382751465
    8. ' pow' → logprob: -6.3754706382751465
    9. 'res' → logprob: -6.3754706382751465
    10. ',' → logprob: -6.8754706382751465

Token 766: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.151010274887085
    2. ' ans' → logprob: -1.401010274887085
    3. 'pow' → logprob: -2.151010274887085
    4. ' m' → logprob: -2.276010274887085
    5. 'res' → logprob: -2.776010274887085
    6. ' res' → logprob: -2.901010274887085
    7. 'result' → logprob: -3.401010274887085
    8. ' pow' → logprob: -3.901010274887085
    9. 'm' → logprob: -4.401010513305664
    10. ' answer' → logprob: -4.526010513305664

Token 767: ' on' (ID: 402)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.017103662714362144
    2. ' pow' → logprob: -5.017103672027588
    3. '1' → logprob: -5.142103672027588
    4. 'm' → logprob: -7.517103672027588
    5. '   ' → logprob: -7.642103672027588
    6. '
' → logprob: -7.892103672027588
    7. 'k' → logprob: -8.14210319519043
    8. 'C' → logprob: -8.26710319519043
    9. '(' → logprob: -8.51710319519043
    10. 'ans' → logprob: -8.51710319519043

Token 768: ' prend' (ID: 37463)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.17793817818164825
    2. '%' → logprob: -2.677938222885132
    3. ' pow' → logprob: -3.552938222885132
    4. ' %' → logprob: -3.677938222885132
    5. '-' → logprob: -4.052937984466553
    6. 'print' → logprob: -5.052937984466553
    7. '*' → logprob: -5.427937984466553
    8. 'mod' → logprob: -5.677937984466553
    9. ' ' → logprob: -6.677937984466553
    10. '   ' → logprob: -6.802937984466553

Token 769: ' le' (ID: 505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8921259045600891
    2. 'mod' → logprob: -1.6421258449554443
    3. ' m' → logprob: -2.0171258449554443
    4. ' modulo' → logprob: -2.2671258449554443
    5. ' (' → logprob: -3.0171258449554443
    6. '(m' → logprob: -3.5171258449554443
    7. '(' → logprob: -4.017126083374023
    8. 'pow' → logprob: -4.392126083374023
    9. ' ' → logprob: -4.517126083374023
    10. '%' → logprob: -4.892126083374023

Token 770: ' résultat' (ID: 62556)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.6713663339614868
    2. ' %' → logprob: -1.4213663339614868
    3. '%' → logprob: -2.1713662147521973
    4. ' MOD' → logprob: -2.5463662147521973
    5. 'mod' → logprob: -3.4213662147521973
    6. 'MOD' → logprob: -4.421366214752197
    7. ' mod' → logprob: -5.796366214752197
    8. 'pow' → logprob: -5.921366214752197
    9. ' ' → logprob: -5.921366214752197
    10. ' modulus' → logprob: -7.921366214752197

Token 771: ' modulo' (ID: 112372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.126089096069336
    2. ' =' → logprob: -1.501089096069336
    3. '=' → logprob: -2.376089096069336
    4. 'mod' → logprob: -2.626089096069336
    5. ' %' → logprob: -2.626089096069336
    6. ' modulo' → logprob: -3.001089096069336
    7. '%' → logprob: -3.001089096069336
    8. '(m' → logprob: -3.376089096069336
    9. '   ' → logprob: -4.001089096069336
    10. 'pow' → logprob: -4.126089096069336

Token 772: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.12721344828605652
    2. ' MOD' → logprob: -2.127213478088379
    3. ' m' → logprob: -9.377213478088379
    4. 'm' → logprob: -9.502213478088379
    5. 'M' → logprob: -10.127213478088379
    6. ' ' → logprob: -10.377213478088379
    7. '_MOD' → logprob: -11.252213478088379
    8. 'mod' → logprob: -11.377213478088379
    9. ' M' → logprob: -12.127213478088379
    10. '`' → logprob: -12.252213478088379

Token 773: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2398565411567688
    2. 'ans' → logprob: -1.989856481552124
    3. 'answer' → logprob: -3.114856481552124
    4. 'res' → logprob: -3.614856481552124
    5. 'result' → logprob: -6.114856719970703
    6. ' ans' → logprob: -6.614856719970703
    7. '    
' → logprob: -7.864856719970703
    8. '
' → logprob: -8.239856719970703
    9. ' answer' → logprob: -8.239856719970703
    10. ' =' → logprob: -8.614856719970703

Token 774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15122783184051514
    2. 'ans' → logprob: -2.7762279510498047
    3. 'res' → logprob: -2.9012279510498047
    4. 'answer' → logprob: -4.276227951049805
    5. 'result' → logprob: -5.526227951049805
    6. ' ans' → logprob: -5.651227951049805
    7. ' res' → logprob: -7.401227951049805
    8. 'r' → logprob: -7.901227951049805
    9. ' answer' → logprob: -8.276227951049805
    10. ' ' → logprob: -8.901227951049805

Token 775: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7957331538200378
    2. 'res' → logprob: -1.2957332134246826
    3. 'answer' → logprob: -1.5457332134246826
    4. 'result' → logprob: -3.4207332134246826
    5. '   ' → logprob: -3.5457332134246826
    6. ' ans' → logprob: -8.670733451843262
    7. ' answer' → logprob: -10.045733451843262
    8. 'ret' → logprob: -10.170733451843262
    9. 'pow' → logprob: -10.795733451843262
    10. '```' → logprob: -11.045733451843262

Token 776: ' Cela' (ID: 44403)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9733062386512756
    2. 'ans' → logprob: -0.9733062386512756
    3. 'answer' → logprob: -1.4733061790466309
    4. 'result' → logprob: -4.223306179046631
    5. '   ' → logprob: -8.723306655883789
    6. ' ans' → logprob: -8.848306655883789
    7. ' answer' → logprob: -8.973306655883789
    8. 'pow' → logprob: -10.598306655883789
    9. ' res' → logprob: -10.848306655883789
    10. 'ret' → logprob: -11.723306655883789

Token 777: ' représente' (ID: 88912)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7579200863838196
    2. ' =' → logprob: -0.8829200863838196
    3. ' %=' → logprob: -2.507920026779175
    4. '%=' → logprob: -3.632920026779175
    5. '**' → logprob: -5.882920265197754
    6. '%' → logprob: -6.507920265197754
    7. 'result' → logprob: -6.757920265197754
    8. ' **' → logprob: -6.882920265197754
    9. '*=' → logprob: -7.382920265197754
    10. ' %' → logprob: -7.757920265197754

Token 778: ' toutes' (ID: 17502)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.02869555540382862
    2. 'm' → logprob: -3.778695583343506
    3. ' pow' → logprob: -5.403695583343506
    4. ' m' → logprob: -7.028695583343506
    5. '(pow' → logprob: -10.278695106506348
    6. '   ' → logprob: -11.403695106506348
    7. '(m' → logprob: -13.153695106506348
    8. ' ' → logprob: -15.278695106506348
    9. ' (' → logprob: -15.278695106506348
    10. '(' → logprob: -15.278695106506348

Token 779: ' les' (ID: 1341)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.4032773971557617
    2. '(' → logprob: -1.7782773971557617
    3. 'possible' → logprob: -3.2782773971557617
    4. ' m' → logprob: -3.2782773971557617
    5. ' ' → logprob: -3.5282773971557617
    6. ' (' → logprob: -3.6532773971557617
    7. ' pow' → logprob: -4.778277397155762
    8. 'pow' → logprob: -4.903277397155762
    9. ')' → logprob: -6.153277397155762
    10. 'm' → logprob: -6.528277397155762

Token 780: ' possibilités' (ID: 119756)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.7005720138549805
    2. 'm' → logprob: -1.9505720138549805
    3. 'possible' → logprob: -2.2005720138549805
    4. 'poss' → logprob: -2.4505720138549805
    5. 'n' → logprob: -2.5755720138549805
    6. ' possible' → logprob: -3.5755720138549805
    7. ' m' → logprob: -4.0755720138549805
    8. ' n' → logprob: -4.2005720138549805
    9. ' pow' → logprob: -4.9505720138549805
    10. ' possibles' → logprob: -5.4505720138549805

Token 781: ' avant' (ID: 13339)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29172223806381226
    2. '   ' → logprob: -2.541722297668457
    3. ' m' → logprob: -2.541722297668457
    4. 'm' → logprob: -2.791722297668457
    5. '=' → logprob: -4.291722297668457
    6. ' de' → logprob: -4.416722297668457
    7. ',' → logprob: -5.916722297668457
    8. 'result' → logprob: -6.291722297668457
    9. ' possible' → logprob: -7.416722297668457
    10. ' result' → logprob: -7.791722297668457

Token 782: ' prise' (ID: 43816)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.5204042196273804
    2. 'la' → logprob: -1.8954042196273804
    3. ' les' → logprob: -2.27040433883667
    4. 'les' → logprob: -2.27040433883667
    5. ' le' → logprob: -2.77040433883667
    6. ' la' → logprob: -2.89540433883667
    7. 'l' → logprob: -2.89540433883667
    8. 'for' → logprob: -3.27040433883667
    9. 'mod' → logprob: -3.64540433883667
    10. 'any' → logprob: -3.89540433883667

Token 783: ' en' (ID: 469)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.002123734215274453
    2. 'de' → logprob: -6.252123832702637
    3. ' des' → logprob: -10.127123832702637
    4. ' ' → logprob: -10.252123832702637
    5. '   ' → logprob: -10.502123832702637
    6. ' m' → logprob: -11.377123832702637
    7. '_' → logprob: -11.377123832702637
    8. ' d' → logprob: -11.502123832702637
    9. '_de' → logprob: -11.752123832702637
    10. ' en' → logprob: -11.877123832702637

Token 784: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0003396343090571463
    2. ' compte' → logprob: -8.37533950805664
    3. '```' → logprob: -9.62533950805664
    4. 'com' → logprob: -10.75033950805664
    5. 'count' → logprob: -11.50033950805664
    6. 'mod' → logprob: -12.37533950805664
    7. 'Compte' → logprob: -13.00033950805664
    8. 'charge' → logprob: -14.00033950805664
    9. 'account' → logprob: -14.00033950805664
    10. '   ' → logprob: -14.25033950805664

Token 785: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4163609743118286
    2. ' des' → logprob: -1.9163609743118286
    3. '   ' → logprob: -2.041360855102539
    4. ' of' → logprob: -3.291360855102539
    5. ' du' → logprob: -4.916360855102539
    6. ' d' → logprob: -5.041360855102539
    7. '    ' → logprob: -5.166360855102539
    8. 'de' → logprob: -6.166360855102539
    9. ' m' → logprob: -6.541360855102539
    10. ' ' → logprob: -7.291360855102539

Token 786: ' contraintes' (ID: 167366)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9110785126686096
    2. ' l' → logprob: -1.1610784530639648
    3. ' la' → logprob: -1.9110784530639648
    4. ' k' → logprob: -3.161078453063965
    5. 'la' → logprob: -3.661078453063965
    6. ' constraints' → logprob: -4.036078453063965
    7. 'k' → logprob: -4.411078453063965
    8. ' les' → logprob: -4.536078453063965
    9. 'les' → logprob: -4.661078453063965
    10. ' contraintes' → logprob: -5.286078453063965

Token 787: ' supplémentaires' (ID: 99346)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7926455736160278
    2. 'result' → logprob: -1.5426455736160278
    3. 'answer' → logprob: -2.1676454544067383
    4. ' =' → logprob: -2.6676454544067383
    5. '   ' → logprob: -2.6676454544067383
    6. 'ans' → logprob: -3.0426454544067383
    7. '=' → logprob: -4.417645454406738
    8. ' answer' → logprob: -4.917645454406738
    9. ' ans' → logprob: -5.167645454406738
    10. ' result' → logprob: -5.917645454406738

Token 788: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7162436246871948
    2. 'ans' → logprob: -1.3412436246871948
    3. 'res' → logprob: -1.5912436246871948
    4. 'answer' → logprob: -3.4662437438964844
    5. 'result' → logprob: -4.591243743896484
    6. '
' → logprob: -6.591243743896484
    7. ' ans' → logprob: -6.716243743896484
    8. '    
' → logprob: -6.966243743896484
    9. 'r' → logprob: -8.466243743896484
    10. ' res' → logprob: -8.841243743896484

Token 789: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0552679300308228
    2. 'ans' → logprob: -1.1802679300308228
    3. '   ' → logprob: -1.5552679300308228
    4. 'answer' → logprob: -2.305267810821533
    5. 'result' → logprob: -3.430267810821533
    6. ' ans' → logprob: -7.055267810821533
    7. ' answer' → logprob: -8.555268287658691
    8. ' res' → logprob: -9.430268287658691
    9. 'r' → logprob: -9.555268287658691
    10. 'ret' → logprob: -10.055268287658691

Token 790: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.6592549085617065
    2. 'answer' → logprob: -1.1592549085617065
    3. 'res' → logprob: -1.9092549085617065
    4. 'result' → logprob: -3.909255027770996
    5. '   ' → logprob: -7.409255027770996
    6. ' ans' → logprob: -9.784255027770996
    7. ' answer' → logprob: -10.034255027770996
    8. 'pow' → logprob: -10.159255027770996
    9. 'ret' → logprob: -11.534255027770996
    10. 'power' → logprob: -11.659255027770996

Token 791: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043002620339393616
    2. '=' → logprob: -3.1680026054382324
    3. ' ' → logprob: -13.41800308227539
    4. '   ' → logprob: -14.41800308227539
    5. ' ' → logprob: -14.79300308227539
    6. ',' → logprob: -15.04300308227539
    7. ')' → logprob: -15.54300308227539
    8. '＝' → logprob: -16.54300308227539
    9. ' =
' → logprob: -16.66800308227539
    10. '  ' → logprob: -16.91800308227539

Token 792: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.0087516784551553e-05
    2. 'm' → logprob: -12.12501049041748
    3. ' pow' → logprob: -12.50001049041748
    4. '1' → logprob: -14.25001049041748
    5. '(pow' → logprob: -15.25001049041748
    6. 'power' → logprob: -16.750009536743164
    7. '_pow' → logprob: -19.375009536743164
    8. '   ' → logprob: -19.500009536743164
    9. 'powers' → logprob: -20.000009536743164
    10. '```' → logprob: -20.500009536743164

Token 793: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02975870668888092
    2. '(' → logprob: -3.5297586917877197
    3. 'm' → logprob: -11.77975845336914
    4. '(
' → logprob: -14.77975845336914
    5. ' (' → logprob: -16.77975845336914
    6. '(n' → logprob: -17.40475845336914
    7. '(pow' → logprob: -17.40475845336914
    8. '(base' → logprob: -17.77975845336914
    9. ')m' → logprob: -18.15475845336914
    10. ' m' → logprob: -18.27975845336914

Token 794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005152873694896698
    2. ',n' → logprob: -5.380152702331543
    3. ' ,' → logprob: -7.630152702331543
    4. 'n' → logprob: -10.130152702331543
    5. ' n' → logprob: -12.380152702331543
    6. ',
' → logprob: -14.005152702331543
    7. ' ' → logprob: -14.380152702331543
    8. ')' → logprob: -14.755152702331543
    9. ',k' → logprob: -14.755152702331543
    10. '   ' → logprob: -15.380152702331543

Token 795: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.157039049663581e-05
    2. ' n' → logprob: -9.875051498413086
    3. ')n' → logprob: -18.000051498413086
    4. '	n' → logprob: -18.250051498413086
    5. '   ' → logprob: -19.750051498413086
    6. '(n' → logprob: -20.125051498413086
    7. 'н' → logprob: -21.000051498413086
    8. '_n' → logprob: -21.000051498413086
    9. ')' → logprob: -21.375051498413086
    10. 'nt' → logprob: -21.500051498413086

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026217024424113333
    2. ' ,' → logprob: -8.625262260437012
    3. ')' → logprob: -9.625262260437012
    4. ',k' → logprob: -11.375262260437012
    5. '```' → logprob: -13.375262260437012
    6. ',
' → logprob: -13.750262260437012
    7. '   ' → logprob: -14.625262260437012
    8. '-' → logprob: -14.875262260437012
    9. '%' → logprob: -15.125262260437012
    10. ',K' → logprob: -15.250262260437012

Token 797: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00020354038861114532
    2. ' MOD' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.25020408630371
    4. ')' → logprob: -20.25020408630371
    5. ' ' → logprob: -20.25020408630371
    6. '998' → logprob: -20.37520408630371
    7. '_MOD' → logprob: -20.62520408630371
    8. 'MO' → logprob: -21.37520408630371
    9. '.MOD' → logprob: -21.87520408630371
    10. 'MODE' → logprob: -23.37520408630371

Token 798: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -11.250016212463379
    3. '   ' → logprob: -13.750016212463379
    4. ' )' → logprob: -13.875016212463379
    5. '<|end|>' → logprob: -15.125016212463379
    6. ')#' → logprob: -15.500016212463379
    7. ')

' → logprob: -15.750016212463379
    8. '),' → logprob: -16.000017166137695
    9. ')**' → logprob: -16.750017166137695
    10. ')}' → logprob: -16.750017166137695

Token 799: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.768200695514679
    2. '   ' → logprob: -1.3932006359100342
    3. '<|end|>' → logprob: -1.7682006359100342
    4. ' 
' → logprob: -3.143200635910034
    5. '    
' → logprob: -3.643200635910034
    6. '\n' → logprob: -3.893200635910034
    7. '  
' → logprob: -4.768200874328613
    8. ' if' → logprob: -5.518200874328613
    9. '\' → logprob: -5.768200874328613
    10. ' ' → logprob: -6.018200874328613

Token 800: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03187171742320061
    2. ' for' → logprob: -3.656871795654297
    3. 'if' → logprob: -5.656871795654297
    4. '
' → logprob: -6.656871795654297
    5. '   ' → logprob: -7.781871795654297
    6. '    
' → logprob: -8.906871795654297
    7. ' 
' → logprob: -9.156871795654297
    8. ' if' → logprob: -10.281871795654297
    9. '\n' → logprob: -10.781871795654297
    10. '  
' → logprob: -10.781871795654297

Token 801: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03807660564780235
    2. 'if' → logprob: -3.288076639175415
    3. 'ans' → logprob: -11.163076400756836
    4. 'i' → logprob: -12.038076400756836
    5. ' for' → logprob: -12.163076400756836
    6. 'result' → logprob: -13.288076400756836
    7. '#' → logprob: -13.288076400756836
    8. '   ' → logprob: -13.663076400756836
    9. 'answer' → logprob: -13.913076400756836
    10. 'pow' → logprob: -14.288076400756836

Token 802: 'cle' (ID: 3170)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2582763135433197
    2. 'cle' → logprob: -1.508276343345642
    3. 'cl' → logprob: -5.883276462554932
    4. '   ' → logprob: -6.383276462554932
    5. 'r' → logprob: -6.883276462554932
    6. 'cles' → logprob: -7.883276462554932
    7. 'for' → logprob: -8.758275985717773
    8. 'clé' → logprob: -9.508275985717773
    9. 'cler' → logprob: -9.633275985717773
    10. 'ch' → logprob: -10.383275985717773

Token 803: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10963534563779831
    2. ' i' → logprob: -3.484635353088379
    3. 'for' → logprob: -3.484635353088379
    4. '   ' → logprob: -3.609635353088379
    5. '(' → logprob: -4.734635353088379
    6. ' ' → logprob: -5.609635353088379
    7. '_' → logprob: -7.234635353088379
    8. ' _' → logprob: -7.984635353088379
    9. '    ' → logprob: -8.109635353088379
    10. 's' → logprob: -8.109635353088379

Token 804: ' corr' (ID: 16963)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3153019845485687
    2. ' i' → logprob: -1.5653020143508911
    3. 'k' → logprob: -3.3153018951416016
    4. ' k' → logprob: -4.815301895141602
    5. 'r' → logprob: -5.440301895141602
    6. '_' → logprob: -5.690301895141602
    7. 'x' → logprob: -6.565301895141602
    8. ' r' → logprob: -6.815301895141602
    9. ' _' → logprob: -7.065301895141602
    10. 'j' → logprob: -7.440301895141602

Token 805: 'iger' (ID: 5873)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.32811710238456726
    2. 'er' → logprob: -1.9531171321868896
    3. 'ect' → logprob: -2.5781171321868896
    4. 'e' → logprob: -3.7031171321868896
    5. 'up' → logprob: -5.3281168937683105
    6. 'anger' → logprob: -5.4531168937683105
    7. 'ege' → logprob: -5.4531168937683105
    8. 'ige' → logprob: -5.8281168937683105
    9. 'eer' → logprob: -5.8281168937683105
    10. 'eger' → logprob: -6.0781168937683105

Token 806: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17864106595516205
    2. 'i' → logprob: -2.3036410808563232
    3. '_' → logprob: -3.4286410808563232
    4. ' _' → logprob: -4.053640842437744
    5. ' k' → logprob: -4.428640842437744
    6. 'k' → logprob: -6.928640842437744
    7. ' for' → logprob: -8.053641319274902
    8. ' ' → logprob: -8.428641319274902
    9. ' range' → logprob: -8.803641319274902
    10. ' j' → logprob: -10.053641319274902

Token 807: ' réponse' (ID: 50332)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01535103004425764
    2. ' k' → logprob: -4.765350818634033
    3. 'i' → logprob: -5.515350818634033
    4. '(k' → logprob: -6.890350818634033
    5. 'range' → logprob: -7.265350818634033
    6. '1' → logprob: -7.765350818634033
    7. ' i' → logprob: -8.890351295471191
    8. '(' → logprob: -9.140351295471191
    9. ' range' → logprob: -9.265351295471191
    10. ' ' → logprob: -9.890351295471191

Token 808: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23941826820373535
    2. ' i' → logprob: -1.9894182682037354
    3. 'for' → logprob: -2.8644182682037354
    4. '   ' → logprob: -4.739418029785156
    5. ' ' → logprob: -5.489418029785156
    6. 'i' → logprob: -6.114418029785156
    7. '_' → logprob: -7.114418029785156
    8. ',' → logprob: -7.114418029785156
    9. ' _' → logprob: -7.489418029785156
    10. ' in' → logprob: -7.739418029785156

Token 809: ' base' (ID: 3611)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2056502401828766
    2. ' k' → logprob: -2.4556503295898438
    3. '1' → logprob: -2.8306503295898438
    4. 'i' → logprob: -3.4556503295898438
    5. ' i' → logprob: -5.205650329589844
    6. ' ' → logprob: -6.080650329589844
    7. 'range' → logprob: -7.080650329589844
    8. '0' → logprob: -7.830650329589844
    9. 'l' → logprob: -8.705650329589844
    10. 'r' → logprob: -9.830650329589844

Token 810: ' en' (ID: 469)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20269618928432465
    2. ' i' → logprob: -2.5776960849761963
    3. '   ' → logprob: -3.2026960849761963
    4. 'for' → logprob: -3.2026960849761963
    5. ' ' → logprob: -4.577696323394775
    6. ' 
' → logprob: -4.952696323394775
    7. '
' → logprob: -6.327696323394775
    8. '    ' → logprob: -6.702696323394775
    9. ',' → logprob: -6.952696323394775
    10. 'i' → logprob: -7.327696323394775

Token 811: ' sou' (ID: 4069)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5762035846710205
    2. ' range' → logprob: -0.8262035846710205
    3. '_range' → logprob: -9.201203346252441
    4. '_' → logprob: -10.201203346252441
    5. ' ' → logprob: -10.826203346252441
    6. '	range' → logprob: -11.201203346252441
    7. '```' → logprob: -11.326203346252441
    8. '   ' → logprob: -11.576203346252441
    9. '1' → logprob: -11.826203346252441
    10. ' xrange' → logprob: -11.951203346252441

Token 812: 'str' (ID: 689)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7010102272033691
    2. 'tract' → logprob: -1.2010102272033691
    3. '   ' → logprob: -1.9510102272033691
    4. ' range' → logprob: -3.326010227203369
    5. 'stract' → logprob: -4.576010227203369
    6. 'tr' → logprob: -5.701010227203369
    7. 't' → logprob: -6.076010227203369
    8. '(ans' → logprob: -6.576010227203369
    9. '(range' → logprob: -6.826010227203369
    10. '       ' → logprob: -6.826010227203369

Token 813: 'ayant' (ID: 130896)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.1308125257492065
    2. 'tra' → logprob: -1.3808125257492065
    3. 'act' → logprob: -1.5058125257492065
    4. 'tract' → logprob: -3.005812644958496
    5. 'a' → logprob: -3.380812644958496
    6. 'ait' → logprob: -4.255812644958496
    7. 'ant' → logprob: -4.380812644958496
    8. '```' → logprob: -4.755812644958496
    9. 'aient' → logprob: -4.880812644958496
    10. 't' → logprob: -4.880812644958496

Token 814: ' certaines' (ID: 46662)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6067273616790771
    2. ' i' → logprob: -1.1067273616790771
    3. '1' → logprob: -2.481727361679077
    4. ' ' → logprob: -4.606727600097656
    5. 'k' → logprob: -4.981727600097656
    6. '(' → logprob: -4.981727600097656
    7. 'ans' → logprob: -5.606727600097656
    8. ' k' → logprob: -5.606727600097656
    9. ' (' → logprob: -5.731727600097656
    10. ' ans' → logprob: -5.856727600097656

Token 815: ' configurations' (ID: 56804)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4603368043899536
    2. ' range' → logprob: -1.4603368043899536
    3. 'range' → logprob: -2.460336685180664
    4. 'i' → logprob: -3.210336685180664
    5. 'ranges' → logprob: -6.335336685180664
    6. '(' → logprob: -6.460336685180664
    7. ' j' → logprob: -6.585336685180664
    8. '
' → logprob: -6.835336685180664
    9. ' ranges' → logprob: -7.335336685180664
    10. ' for' → logprob: -7.335336685180664

Token 816: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34581100940704346
    2. '(' → logprob: -1.9708110094070435
    3. ' for' → logprob: -2.595810890197754
    4. 'for' → logprob: -3.345810890197754
    5. ' i' → logprob: -4.595810890197754
    6. ' (' → logprob: -4.845810890197754
    7. ',' → logprob: -4.970810890197754
    8. ' ' → logprob: -5.345810890197754
    9. '(i' → logprob: -5.845810890197754
    10. '    ' → logprob: -6.470810890197754

Token 817: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.447367787361145
    2. '   ' → logprob: -1.072367787361145
    3. ' i' → logprob: -5.3223676681518555
    4. '(i' → logprob: -5.5723676681518555
    5. ' for' → logprob: -5.8223676681518555
    6. ' (' → logprob: -6.1973676681518555
    7. 'for' → logprob: -6.6973676681518555
    8. ',' → logprob: -7.0723676681518555
    9. '(
' → logprob: -7.4473676681518555
    10. '    ' → logprob: -7.5723676681518555

Token 818: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6232166290283203
    2. ' for' → logprob: -0.8732166290283203
    3. '
' → logprob: -3.2482166290283203
    4. '   ' → logprob: -5.24821662902832
    5. ' 
' → logprob: -6.37321662902832
    6. '\n' → logprob: -8.99821662902832
    7. '    
' → logprob: -8.99821662902832
    8. '  
' → logprob: -10.24821662902832
    9. '   
' → logprob: -11.12321662902832
    10. ' ' → logprob: -11.12321662902832

Token 819: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5248294472694397
    2. ' for' → logprob: -0.8998294472694397
    3. '
' → logprob: -6.649829387664795
    4. ' i' → logprob: -8.774829864501953
    5. 'i' → logprob: -9.024829864501953
    6. ' 
' → logprob: -9.774829864501953
    7. '   ' → logprob: -10.399829864501953
    8. ' ' → logprob: -11.524829864501953
    9. '    
' → logprob: -11.524829864501953
    10. 'range' → logprob: -12.024829864501953

Token 820: ' boucle' (ID: 174211)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5434744358062744
    2. ' for' → logprob: -1.7934744358062744
    3. ' range' → logprob: -2.4184744358062744
    4. 'for' → logprob: -2.5434744358062744
    5. 'range' → logprob: -3.7934744358062744
    6. ' space' → logprob: -4.668474197387695
    7. 'n' → logprob: -4.793474197387695
    8. 'space' → logprob: -5.043474197387695
    9. ' =' → logprob: -5.293474197387695
    10. ' i' → logprob: -5.668474197387695

Token 821: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11366014927625656
    2. 'for' → logprob: -2.4886600971221924
    3. ' i' → logprob: -3.9886600971221924
    4. ' =' → logprob: -6.2386603355407715
    5. ' range' → logprob: -6.6136603355407715
    6. ' ' → logprob: -7.1136603355407715
    7. ' in' → logprob: -7.3636603355407715
    8. '=' → logprob: -8.113659858703613
    9. '   ' → logprob: -8.613659858703613
    10. '_' → logprob: -8.863659858703613

Token 822: ' de' (ID: 334)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09223642945289612
    2. 'range' → logprob: -2.5922365188598633
    3. ' k' → logprob: -5.467236518859863
    4. ' i' → logprob: -5.717236518859863
    5. ' for' → logprob: -6.092236518859863
    6. 'for' → logprob: -6.717236518859863
    7. 'k' → logprob: -6.967236518859863
    8. 'i' → logprob: -7.467236518859863
    9. ' ' → logprob: -8.342236518859863
    10. '_' → logprob: -8.592236518859863

Token 823: ' r' (ID: 428)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20488382875919342
    2. '0' → logprob: -1.9548838138580322
    3. 'k' → logprob: -3.3298838138580322
    4. 'i' → logprob: -5.329884052276611
    5. ' ' → logprob: -6.079884052276611
    6. ' k' → logprob: -7.704884052276611
    7. ' i' → logprob: -8.704883575439453
    8. '(' → logprob: -9.579883575439453
    9. '(k' → logprob: -10.329883575439453
    10. '(i' → logprob: -12.079883575439453

Token 824: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19138555228710175
    2. '1' → logprob: -2.816385507583618
    3. '0' → logprob: -3.191385507583618
    4. '=' → logprob: -3.566385507583618
    5. ' in' → logprob: -4.066385746002197
    6. ' ' → logprob: -4.441385746002197
    7. ' =' → logprob: -4.566385746002197
    8. ' (' → logprob: -5.816385746002197
    9. ' range' → logprob: -7.566385746002197
    10. 'range' → logprob: -7.566385746002197

Token 825: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07954186946153641
    2. '1' → logprob: -2.5795419216156006
    3. 'k' → logprob: -7.7045416831970215
    4. ' ' → logprob: -8.57954216003418
    5. ' k' → logprob: -11.70454216003418
    6. '(' → logprob: -12.57954216003418
    7. '(k' → logprob: -13.82954216003418
    8. '```' → logprob: -16.20454216003418
    9. 'n' → logprob: -16.51704216003418
    10. '=' → logprob: -16.76704216003418

Token 826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007376969791948795
    2. '0' → logprob: -5.5073771476745605
    3. 'k' → logprob: -5.8823771476745605
    4. ' ' → logprob: -7.7573771476745605
    5. ' k' → logprob: -9.882376670837402
    6. '(' → logprob: -11.132376670837402
    7. '(k' → logprob: -11.882376670837402
    8. 'n' → logprob: -13.257376670837402
    9. '(n' → logprob: -14.507376670837402
    10. ' (' → logprob: -14.632376670837402

Token 827: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15907524526119232
    2. ',' → logprob: -2.5340752601623535
    3. 'to' → logprob: -2.7840752601623535
    4. ' ,' → logprob: -6.2840752601623535
    5. '1' → logprob: -7.0340752601623535
    6. '   ' → logprob: -7.1590752601623535
    7. ' à' → logprob: -7.2840752601623535
    8. ' ' → logprob: -7.4090752601623535
    9. '(' → logprob: -8.659074783325195
    10. ' jusqu' → logprob: -9.034074783325195

Token 828: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00138118676841259
    2. ' k' → logprob: -6.6263813972473145
    3. '(k' → logprob: -10.001380920410156
    4. 'min' → logprob: -12.501380920410156
    5. '1' → logprob: -13.501380920410156
    6. '   ' → logprob: -14.001380920410156
    7. ' (' → logprob: -14.126380920410156
    8. '(' → logprob: -14.251380920410156
    9. 'r' → logprob: -14.376380920410156
    10. ' min' → logprob: -14.501380920410156

Token 829: ' =' (ID: 314)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1637902408838272
    2. '(k' → logprob: -2.038790225982666
    3. ' k' → logprob: -4.413790225982666
    4. ' (' → logprob: -5.538790225982666
    5. '(' → logprob: -6.038790225982666
    6. '1' → logprob: -6.538790225982666
    7. ',' → logprob: -7.788790225982666
    8. '(
' → logprob: -7.788790225982666
    9. '   ' → logprob: -9.913790702819824
    10. ',k' → logprob: -10.788790702819824

Token 830: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0004472348664421588
    2. 'min' → logprob: -8.125447273254395
    3. ' k' → logprob: -8.875447273254395
    4. ' min' → logprob: -12.000447273254395
    5. ' ' → logprob: -13.250447273254395
    6. 'n' → logprob: -13.750447273254395
    7. '```' → logprob: -14.250447273254395
    8. '(k' → logprob: -14.875447273254395
    9. '   ' → logprob: -15.125447273254395
    10. 'm' → logprob: -15.625447273254395

Token 831: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4540243148803711
    2. '   ' → logprob: -1.579024314880371
    3. '+' → logprob: -2.579024314880371
    4. '1' → logprob: -3.829024314880371
    5. '(' → logprob: -4.079024314880371
    6. ',' → logprob: -4.454024314880371
    7. ':
' → logprob: -4.704024314880371
    8. ' +' → logprob: -4.954024314880371
    9. ' for' → logprob: -5.204024314880371
    10. 'for' → logprob: -5.829024314880371

Token 832: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0071712820790708065
    2. 'n' → logprob: -5.507171154022217
    3. ' ' → logprob: -6.632171154022217
    4. '(' → logprob: -7.382171154022217
    5. ' n' → logprob: -7.757171154022217
    6. 'k' → logprob: -7.882171154022217
    7. '(n' → logprob: -9.507171630859375
    8. ' (' → logprob: -9.882171630859375
    9. '   ' → logprob: -10.132171630859375
    10. ' k' → logprob: -10.257171630859375

Token 833: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6907323598861694
    2. 'for' → logprob: -1.8157323598861694
    3. '+' → logprob: -2.440732479095459
    4. '
' → logprob: -2.690732479095459
    5. ' for' → logprob: -2.815732479095459
    6. ':' → logprob: -3.065732479095459
    7. '1' → logprob: -3.315732479095459
    8. '(' → logprob: -4.315732479095459
    9. ':
' → logprob: -4.815732479095459
    10. ' +' → logprob: -5.190732479095459

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007214006967842579
    2. 'k' → logprob: -5.757214069366455
    3. ' ' → logprob: -5.757214069366455
    4. '0' → logprob: -8.007213592529297
    5. ' k' → logprob: -8.132213592529297
    6. 'r' → logprob: -9.507213592529297
    7. '```' → logprob: -10.132213592529297
    8. ')' → logprob: -10.382213592529297
    9. '2' → logprob: -11.007213592529297
    10. 'm' → logprob: -11.382213592529297

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.500262260437012
    3. 'k' → logprob: -10.750262260437012
    4. '0' → logprob: -10.875262260437012
    5. '2' → logprob: -12.375262260437012
    6. '   ' → logprob: -12.750262260437012
    7. '+' → logprob: -12.750262260437012
    8. ' k' → logprob: -12.875262260437012
    9. '```' → logprob: -13.000262260437012
    10. 'r' → logprob: -14.125262260437012

Token 836: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15685145556926727
    2. ':
' → logprob: -2.9068515300750732
    3. '   ' → logprob: -3.0318515300750732
    4. '(' → logprob: -4.156851291656494
    5. '1' → logprob: -5.156851291656494
    6. '+' → logprob: -5.656851291656494
    7. ' for' → logprob: -5.781851291656494
    8. '
' → logprob: -5.906851291656494
    9. 'for' → logprob: -6.031851291656494
    10. ')' → logprob: -6.406851291656494

Token 837: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8533538579940796
    2. ':' → logprob: -1.6033538579940796
    3. '
' → logprob: -1.9783538579940796
    4. ' for' → logprob: -2.353353977203369
    5. 'for' → logprob: -3.103353977203369
    6. ':
' → logprob: -3.228353977203369
    7. '(' → logprob: -4.228353977203369
    8. '1' → logprob: -4.478353977203369
    9. '\n' → logprob: -5.728353977203369
    10. '+' → logprob: -5.978353977203369

Token 838: 'car' (ID: 6830)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8803471326828003
    2. 'n' → logprob: -1.5053471326828003
    3. ')' → logprob: -1.7553471326828003
    4. ' n' → logprob: -2.38034725189209
    5. '):' → logprob: -3.75534725189209
    6. ' )' → logprob: -4.38034725189209
    7. '+' → logprob: -4.50534725189209
    8. '   ' → logprob: -4.63034725189209
    9. 'r' → logprob: -4.88034725189209
    10. '):
' → logprob: -4.88034725189209

Token 839: ' range' (ID: 3352)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3873112201690674
    2. ' n' → logprob: -1.8873112201690674
    3. 'r' → logprob: -2.1373112201690674
    4. 'n' → logprob: -3.7623112201690674
    5. 'range' → logprob: -5.137310981750488
    6. ' range' → logprob: -5.262310981750488
    7. '1' → logprob: -5.387310981750488
    8. ' ' → logprob: -5.512310981750488
    9. ' in' → logprob: -6.012310981750488
    10. ')' → logprob: -6.137310981750488

Token 840: ' s' (ID: 265)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002342912630410865
    2. '(n' → logprob: -9.125234603881836
    3. ' (' → logprob: -9.875234603881836
    4. '1' → logprob: -10.250234603881836
    5. '(
' → logprob: -10.375234603881836
    6. '(k' → logprob: -13.250234603881836
    7. ')(' → logprob: -13.500234603881836
    8. ')' → logprob: -13.750234603881836
    9. '(r' → logprob: -14.125234603881836
    10. ',' → logprob: -14.500234603881836

Token 841: ''arr' (ID: 49695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28799697756767273
    2. '(' → logprob: -1.4129970073699951
    3. '=(' → logprob: -6.412996768951416
    4. ' =' → logprob: -6.662996768951416
    5. '(
' → logprob: -6.787996768951416
    6. '(n' → logprob: -7.662996768951416
    7. 'range' → logprob: -7.662996768951416
    8. ')' → logprob: -7.787996768951416
    9. '1' → logprob: -8.287997245788574
    10. '(range' → logprob: -8.412997245788574

Token 842: 'ête' (ID: 16808)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.06428255885839462
    2. 'stop' → logprob: -3.4392826557159424
    3. 'op' → logprob: -3.6892826557159424
    4. 'e' → logprob: -6.064282417297363
    5. 't' → logprob: -6.939282417297363
    6. 'up' → logprob: -8.189282417297363
    7. 'ope' → logprob: -8.314282417297363
    8. 'ur' → logprob: -8.939282417297363
    9. '(stop' → logprob: -9.064282417297363
    10. 'oit' → logprob: -9.064282417297363

Token 843: ' avant' (ID: 13339)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10972892493009567
    2. '(n' → logprob: -2.3597288131713867
    3. ',' → logprob: -4.984728813171387
    4. '(k' → logprob: -6.859728813171387
    5. '1' → logprob: -7.734728813171387
    6. ' (' → logprob: -7.984728813171387
    7. '(
' → logprob: -8.734728813171387
    8. '(r' → logprob: -8.859728813171387
    9. ')' → logprob: -8.984728813171387
    10. ' ,' → logprob: -8.984728813171387

Token 844: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1510327011346817
    2. '(n' → logprob: -2.5260326862335205
    3. ' n' → logprob: -3.0260326862335205
    4. ' (' → logprob: -5.5260329246521
    5. ')' → logprob: -5.9010329246521
    6. '   ' → logprob: -6.6510329246521
    7. ')n' → logprob: -6.6510329246521
    8. '(' → logprob: -6.9010329246521
    9. ')(' → logprob: -8.026032447814941
    10. '1' → logprob: -8.026032447814941

Token 845: ' second' (ID: 3099)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08910053968429565
    2. ' n' → logprob: -2.4641005992889404
    3. '(n' → logprob: -10.08910083770752
    4. '   ' → logprob: -10.21410083770752
    5. ')n' → logprob: -10.58910083770752
    6. '0' → logprob: -10.83910083770752
    7. 'k' → logprob: -11.33910083770752
    8. ')' → logprob: -11.96410083770752
    9. ' ' → logprob: -12.08910083770752
    10. '1' → logprob: -12.71410083770752

Token 846: ' argument' (ID: 10383)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.936120867729187
    2. 'n' → logprob: -1.686120867729187
    3. ')' → logprob: -1.811120867729187
    4. ',' → logprob: -2.0611209869384766
    5. '(n' → logprob: -3.1861209869384766
    6. ' (' → logprob: -3.4361209869384766
    7. 'k' → logprob: -4.561120986938477
    8. ' n' → logprob: -4.561120986938477
    9. ' ' → logprob: -5.561120986938477
    10. '   ' → logprob: -5.686120986938477

Token 847: ')
' (ID: 446)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8453652262687683
    2. ',' → logprob: -0.8453652262687683
    3. '(n' → logprob: -2.095365285873413
    4. '1' → logprob: -4.470365047454834
    5. '   ' → logprob: -6.470365047454834
    6. '(r' → logprob: -6.595365047454834
    7. ')' → logprob: -6.845365047454834
    8. ' ,' → logprob: -7.220365047454834
    9. ',n' → logprob: -8.095365524291992
    10. '```' → logprob: -8.095365524291992

Token 848: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25603824853897095
    2. '(' → logprob: -1.8810381889343262
    3. '   ' → logprob: -3.131038188934326
    4. ')' → logprob: -4.631038188934326
    5. ' for' → logprob: -5.506038188934326
    6. 'for' → logprob: -5.631038188934326
    7. '(r' → logprob: -5.631038188934326
    8. '(range' → logprob: -6.131038188934326
    9. '):' → logprob: -6.256038188934326
    10. '[' → logprob: -6.381038188934326

Token 849: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5736711621284485
    2. '(' → logprob: -1.8236711025238037
    3. ' for' → logprob: -2.0736711025238037
    4. 'for' (adapté à ' for') → logprob: -2.3236711025238037
    5. ':' → logprob: -3.5736711025238037
    6. '(
' → logprob: -5.073671340942383
    7. '(range' → logprob: -5.698671340942383
    8. ')' → logprob: -5.948671340942383
    9. ':
' → logprob: -6.323671340942383
    10. 'range' → logprob: -6.448671340942383

Token 850: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07031551748514175
    2. 'r' → logprob: -2.6953155994415283
    3. ' i' → logprob: -8.69531536102295
    4. ' ' → logprob: -8.82031536102295
    5. 'i' → logprob: -10.07031536102295
    6. ' _' → logprob: -11.44531536102295
    7. '_' → logprob: -12.82031536102295
    8. ' ' → logprob: -13.57031536102295
    9. '	r' → logprob: -13.82031536102295
    10. '1' → logprob: -13.94531536102295

Token 851: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.050941452383995056
    2. 'in' → logprob: -3.0509414672851562
    3. '1' → logprob: -6.300941467285156
    4. ' ' → logprob: -7.800941467285156
    5. '(' → logprob: -10.425941467285156
    6. '=' → logprob: -10.675941467285156
    7. ' =' → logprob: -11.800941467285156
    8. ',' → logprob: -11.800941467285156
    9. '   ' → logprob: -12.300941467285156
    10. '[' → logprob: -12.425941467285156

Token 852: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7050029039382935
    2. 'range' → logprob: -0.8300029039382935
    3. '1' → logprob: -2.705002784729004
    4. ' ' → logprob: -5.830002784729004
    5. '(range' → logprob: -11.205002784729004
    6. '(' → logprob: -11.580002784729004
    7. ' in' → logprob: -12.455002784729004
    8. '	range' → logprob: -12.580002784729004
    9. '0' → logprob: -13.080002784729004
    10. '   ' → logprob: -14.205002784729004

Token 853: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013364320620894432
    2. '1' → logprob: -6.626336574554443
    3. ' (' → logprob: -11.876336097717285
    4. '(
' → logprob: -12.876336097717285
    5. '(n' → logprob: -14.626336097717285
    6. ' ' → logprob: -15.501336097717285
    7. '(k' → logprob: -16.1263370513916
    8. ',' → logprob: -17.2513370513916
    9. 'k' → logprob: -17.3763370513916
    10. '[' → logprob: -17.8763370513916

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. 'n' → logprob: -11.12502384185791
    3. ' ' → logprob: -11.75002384185791
    4. '(' → logprob: -14.00002384185791
    5. '   ' → logprob: -15.00002384185791
    6. '0' → logprob: -16.875024795532227
    7. '(n' → logprob: -17.000024795532227
    8. 'k' → logprob: -17.562524795532227
    9. ' n' → logprob: -17.562524795532227
    10. '
' → logprob: -17.687524795532227

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014335552230477333
    2. ' ,' → logprob: -4.389335632324219
    3. ',n' → logprob: -6.389335632324219
    4. '(n' → logprob: -9.264335632324219
    5. '   ' → logprob: -10.889335632324219
    6. 'n' → logprob: -11.389335632324219
    7. ' n' → logprob: -11.889335632324219
    8. '(' → logprob: -12.014335632324219
    9. ',
' → logprob: -12.264335632324219
    10. ' (' → logprob: -13.389335632324219

Token 856: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008629591204226017
    2. ' n' → logprob: -4.75862979888916
    3. '   ' → logprob: -11.25862979888916
    4. 'min' → logprob: -14.50862979888916
    5. ' ' → logprob: -14.75862979888916
    6. '
' → logprob: -14.75862979888916
    7. 'max' → logprob: -14.88362979888916
    8. '(n' → logprob: -15.25862979888916
    9. ' min' → logprob: -16.758628845214844
    10. '  ' → logprob: -17.258628845214844

Token 857: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10308971256017685
    2. '-' → logprob: -2.3530898094177246
    3. '-k' → logprob: -5.853089809417725
    4. '   ' → logprob: -12.228089332580566
    5. ' ' → logprob: -13.228089332580566
    6. '-n' → logprob: -14.603089332580566
    7. ' -
' → logprob: -15.728089332580566
    8. ')' → logprob: -15.853089332580566
    9. '-
' → logprob: -16.103090286254883
    10. '  ' → logprob: -16.228090286254883

Token 858: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.1557283111615106e-05
    2. ' k' → logprob: -10.125041961669922
    3. '(k' → logprob: -13.500041961669922
    4. '(' → logprob: -17.625041961669922
    5. '	k' → logprob: -17.625041961669922
    6. ' (' → logprob: -18.000041961669922
    7. '   ' → logprob: -19.250041961669922
    8. '{k' → logprob: -20.000041961669922
    9. ' ' → logprob: -20.250041961669922
    10. '=k' → logprob: -20.875041961669922

Token 859: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36035656929016113
    2. ' -' → logprob: -1.2353565692901611
    3. '):' → logprob: -4.985356330871582
    4. '+' → logprob: -6.235356330871582
    5. '):
' → logprob: -6.485356330871582
    6. '   ' → logprob: -6.860356330871582
    7. ' ' → logprob: -8.360356330871582
    8. ' +' → logprob: -9.110356330871582
    9. ')' → logprob: -10.360356330871582
    10. ':' → logprob: -11.235356330871582

Token 860: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004282704088836908
    2. ':' → logprob: -5.754282474517822
    3. '   ' → logprob: -7.129282474517822
    4. '        
' → logprob: -9.62928295135498
    5. ' :' → logprob: -10.12928295135498
    6. ':
' → logprob: -10.25428295135498
    7. '```' → logprob: -10.87928295135498
    8. 'ans' → logprob: -11.12928295135498
    9. '
' → logprob: -11.12928295135498
    10. '):' → logprob: -11.37928295135498

Token 861: ' #' (ID: 1069)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.3637287616729736
    2. 'term' → logprob: -1.4887287616729736
    3. '       ' → logprob: -1.6137287616729736
    4. 'tmp' → logprob: -2.1137287616729736
    5. 'comb' → logprob: -2.7387287616729736
    6. ' comb' → logprob: -3.3637287616729736
    7. '           ' → logprob: -3.8637287616729736
    8. 't' → logprob: -4.1137285232543945
    9. 'ans' → logprob: -4.6137285232543945
    10. 'if' → logprob: -4.7387285232543945

Token 862: ' Pour' (ID: 13931)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.2007339894771576
    2. 'temp' → logprob: -2.9507339000701904
    3. 'val' → logprob: -3.3257339000701904
    4. 'tmp' → logprob: -3.4507339000701904
    5. 'sub' → logprob: -4.2007341384887695
    6. 'term' → logprob: -4.2007341384887695
    7. 'c' → logprob: -4.9507341384887695
    8. 'if' → logprob: -5.0757341384887695
    9. 'ans' → logprob: -5.0757341384887695
    10. 'coef' → logprob: -5.9507341384887695

Token 863: ' chaque' (ID: 21194)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.227493017911911
    2. ' r' → logprob: -1.6024930477142334
    3. ' i' → logprob: -7.102492809295654
    4. 'i' → logprob: -7.227492809295654
    5. ')' → logprob: -8.602493286132812
    6. '_' → logprob: -9.602493286132812
    7. ' ' → logprob: -9.977493286132812
    8. 'm' → logprob: -10.352493286132812
    9. 's' → logprob: -10.352493286132812
    10. ' m' → logprob: -10.852493286132812

Token 864: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012560747563838959
    2. ' r' → logprob: -4.387560844421387
    3. '   ' → logprob: -10.262560844421387
    4. '```' → logprob: -12.637560844421387
    5. ' ' → logprob: -12.887560844421387
    6. ')' → logprob: -13.012560844421387
    7. '
' → logprob: -13.137560844421387
    8. '(r' → logprob: -13.762560844421387
    9. '       ' → logprob: -14.075060844421387
    10. ']' → logprob: -14.262560844421387

Token 865: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41556623578071594
    2. '       ' → logprob: -1.4155662059783936
    3. '           ' → logprob: -3.2905662059783936
    4. 'ans' → logprob: -3.7905662059783936
    5. '):' → logprob: -4.165566444396973
    6. ':
' → logprob: -5.165566444396973
    7. ' ans' → logprob: -5.165566444396973
    8. ' :' → logprob: -6.415566444396973
    9. '):
' → logprob: -6.540566444396973
    10. ',' → logprob: -6.665566444396973

Token 866: ' cet' (ID: 19505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006095095886848867
    2. ' r' → logprob: -7.500609397888184
    3. 'range' → logprob: -10.000609397888184
    4. 'n' → logprob: -12.125609397888184
    5. '```' → logprob: -13.750609397888184
    6. '1' → logprob: -14.250609397888184
    7. 'la' → logprob: -14.375609397888184
    8. ' ' → logprob: -14.375609397888184
    9. '   ' → logprob: -14.625609397888184
    10. 'l' → logprob: -15.250609397888184

Token 867: ' interval' (ID: 17116)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8100157380104065
    2. 'es' → logprob: -1.3100156784057617
    3. 'r' → logprob: -2.8100156784057617
    4. ' )' → logprob: -2.9350156784057617
    5. 'range' → logprob: -3.0600156784057617
    6. ' espace' → logprob: -4.310015678405762
    7. '   ' → logprob: -4.810015678405762
    8. 'e' → logprob: -4.935015678405762
    9. 'interval' → logprob: -4.935015678405762
    10. 'ordre' → logprob: -4.935015678405762

Token 868: 'le' (ID: 282)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.590164840221405
    2. '       ' → logprob: -1.2151648998260498
    3. 'range' → logprob: -3.21516489982605
    4. 'r' → logprob: -3.71516489982605
    5. ',' → logprob: -3.96516489982605
    6. '=' → logprob: -4.590164661407471
    7. 'er' → logprob: -4.715164661407471
    8. ' range' → logprob: -4.965164661407471
    9. ':' → logprob: -5.465164661407471
    10. 'aire' → logprob: -5.465164661407471

Token 869: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3310559391975403
    2. ':' → logprob: -2.0810558795928955
    3. '           ' → logprob: -2.3310558795928955
    4. ' ans' → logprob: -3.7060558795928955
    5. 'ans' → logprob: -4.331056118011475
    6. '        ' → logprob: -5.206056118011475
    7. ',' → logprob: -5.706056118011475
    8. '):' → logprob: -5.956056118011475
    9. ':
' → logprob: -6.581056118011475
    10. '   ' → logprob: -6.831056118011475

Token 870: ' on' (ID: 402)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.42333462834358215
    2. 'ans' → logprob: -2.1733345985412598
    3. '       ' → logprob: -2.7983345985412598
    4. 'temp' → logprob: -2.9233345985412598
    5. 'term' → logprob: -3.0483345985412598
    6. ' comb' → logprob: -4.17333459854126
    7. 'tmp' → logprob: -4.17333459854126
    8. '#' → logprob: -5.17333459854126
    9. ' ans' → logprob: -5.42333459854126
    10. 'val' → logprob: -5.54833459854126

Token 871: ' doit' (ID: 21822)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2883584201335907
    2. '#' → logprob: -2.288358449935913
    3. 'comb' → logprob: -3.163358449935913
    4. ' ans' → logprob: -3.663358449935913
    5. 's' → logprob: -4.038358211517334
    6. '=' → logprob: -4.163358211517334
    7. '       ' → logprob: -5.163358211517334
    8. 'mult' → logprob: -5.413358211517334
    9. ' #' → logprob: -5.413358211517334
    10. ' =' → logprob: -5.413358211517334

Token 872: ' retr' (ID: 11108)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.7131446599960327
    2. '#' → logprob: -1.9631446599960327
    3. ')' → logprob: -2.2131447792053223
    4. 'm' → logprob: -2.4631447792053223
    5. ' ans' → logprob: -2.4631447792053223
    6. '       ' → logprob: -2.5881447792053223
    7. ' (' → logprob: -2.8381447792053223
    8. '(' → logprob: -3.2131447792053223
    9. '(ans' → logprob: -3.3381447792053223
    10. '(
' → logprob: -3.9631447792053223

Token 873: 'anch' (ID: 4953)
  Prédit: 'anch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anch' → logprob: -0.5019564628601074
    2. '   ' → logprob: -1.6269564628601074
    3. 'ait' → logprob: -3.0019564628601074
    4. 'a' → logprob: -3.0019564628601074
    5. 'anche' → logprob: -3.2519564628601074
    6. '```' → logprob: -4.251956462860107
    7. 'acter' → logprob: -4.751956462860107
    8. 'act' → logprob: -5.376956462860107
    9. 'ans' → logprob: -5.501956462860107
    10. 'er' → logprob: -5.626956462860107

Token 874: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0001422770437784493
    2. 'r' → logprob: -10.375142097473145
    3. '   ' → logprob: -10.375142097473145
    4. 'é' → logprob: -10.500142097473145
    5. 'e' → logprob: -11.500142097473145
    6. '#' → logprob: -11.500142097473145
    7. '       ' → logprob: -12.375142097473145
    8. '-er' → logprob: -12.500142097473145
    9. '-' → logprob: -12.750142097473145
    10. '```' → logprob: -13.000142097473145

Token 875: ' un' (ID: 537)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02094157226383686
    2. ' C' → logprob: -4.520941734313965
    3. '(C' → logprob: -5.395941734313965
    4. '(' → logprob: -6.020941734313965
    5. ' (' → logprob: -6.395941734313965
    6. 'ans' → logprob: -7.520941734313965
    7. '(ans' → logprob: -8.645941734313965
    8. '((' → logprob: -9.145941734313965
    9. '(
' → logprob: -9.145941734313965
    10. ' ans' → logprob: -9.395941734313965

Token 876: ' certain' (ID: 4454)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4826976954936981
    2. '(' → logprob: -2.2326977252960205
    3. ' C' → logprob: -2.6076977252960205
    4. ' (' → logprob: -2.8576977252960205
    5. 'ans' → logprob: -3.3576977252960205
    6. '(
' → logprob: -3.7326977252960205
    7. ')' → logprob: -4.107697486877441
    8. ' ans' → logprob: -4.107697486877441
    9. '(ans' → logprob: -4.357697486877441
    10. 'm' → logprob: -4.732697486877441

Token 877: ' nombre' (ID: 9733)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.7660714387893677
    2. 'term' → logprob: -1.1410714387893677
    3. '
' → logprob: -2.266071319580078
    4. ' terme' → logprob: -3.266071319580078
    5. 'nombre' → logprob: -3.766071319580078
    6. 'val' → logprob: -5.016071319580078
    7. 'quant' → logprob: -5.141071319580078
    8. '   ' → logprob: -5.516071319580078
    9. 'c' → logprob: -5.766071319580078
    10. ')' → logprob: -6.266071319580078

Token 878: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5916163921356201
    2. '(' → logprob: -1.7166163921356201
    3. '=' → logprob: -2.84161639213562
    4. 'ans' → logprob: -3.09161639213562
    5. ' =' → logprob: -3.34161639213562
    6. ' de' → logprob: -3.46661639213562
    7. '(
' → logprob: -3.46661639213562
    8. ' (' → logprob: -3.59161639213562
    9. '           ' → logprob: -4.716616630554199
    10. ')' → logprob: -4.841616630554199

Token 879: ' configurations' (ID: 56804)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0919596329331398
    2. ' ans' → logprob: -4.216959476470947
    3. 'comb' → logprob: -4.216959476470947
    4. '(ans' → logprob: -4.466959476470947
    5. '(
' → logprob: -4.591959476470947
    6. 'pow' → logprob: -5.091959476470947
    7. '(' → logprob: -5.216959476470947
    8. '1' → logprob: -5.591959476470947
    9. 'm' → logprob: -5.966959476470947
    10. 'C' → logprob: -6.216959476470947

Token 880: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056680492125451565
    2. ',' → logprob: -5.8806681632995605
    3. '(' → logprob: -7.2556681632995605
    4. ':' → logprob: -7.7556681632995605
    5. '        ' → logprob: -8.005667686462402
    6. '           ' → logprob: -8.130667686462402
    7. ' =' → logprob: -8.755667686462402
    8. '      ' → logprob: -9.005667686462402
    9. ' ans' → logprob: -9.130667686462402
    10. 'ans' → logprob: -9.130667686462402

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003186147892847657
    2. '        
' → logprob: -6.628186225891113
    3. '           ' → logprob: -7.628186225891113
    4. ',' → logprob: -8.003186225891113
    5. '        ' → logprob: -8.253186225891113
    6. '       
' → logprob: -8.753186225891113
    7. '   ' → logprob: -9.253186225891113
    8. ' ans' → logprob: -9.628186225891113
    9. '         
' → logprob: -9.628186225891113
    10. 'ans' → logprob: -9.628186225891113

Token 882: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5911846160888672
    2. '       ' → logprob: -1.2161846160888672
    3. ' ans' → logprob: -2.216184616088867
    4. 'temp' → logprob: -4.716184616088867
    5. 'term' → logprob: -4.841184616088867
    6. 'tmp' → logprob: -5.591184616088867
    7. '           ' → logprob: -5.716184616088867
    8. '(ans' → logprob: -5.966184616088867
    9. 'comb' → logprob: -6.091184616088867
    10. 'coeff' → logprob: -6.841184616088867

Token 883: ' Ces' (ID: 35720)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2696056365966797
    2. 'comb' → logprob: -1.6446056365966797
    3. '       ' → logprob: -2.1446056365966797
    4. ' comb' → logprob: -2.6446056365966797
    5. ' ans' → logprob: -2.8946056365966797
    6. 'if' → logprob: -3.0196056365966797
    7. ' if' → logprob: -3.1446056365966797
    8. 'term' → logprob: -3.2696056365966797
    9. 'temp' → logprob: -3.7696056365966797
    10. 'count' → logprob: -4.01960563659668

Token 884: ' configurations' (ID: 56804)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44311097264289856
    2. ')' → logprob: -1.9431109428405762
    3. ' ans' → logprob: -3.068110942840576
    4. '=' → logprob: -3.318110942840576
    5. ' =' → logprob: -3.443110942840576
    6. ' )' → logprob: -3.943110942840576
    7. ':' → logprob: -4.443110942840576
    8. '(' → logprob: -4.443110942840576
    9. 'r' → logprob: -4.693110942840576
    10. ' *' → logprob: -5.193110942840576

Token 885: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20366929471492767
    2. ' =' → logprob: -1.7036693096160889
    3. ')' → logprob: -7.20366907119751
    4. ':' → logprob: -8.078669548034668
    5. ' ' → logprob: -8.328669548034668
    6. '*=' → logprob: -8.578669548034668
    7. 'ans' → logprob: -8.703669548034668
    8. '   ' → logprob: -9.578669548034668
    9. ' *=' → logprob: -9.578669548034668
    10. ')=' → logprob: -9.828669548034668

Token 886: ' calcul' (ID: 7559)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.0344820022583008
    2. ' (' → logprob: -1.4094820022583008
    3. 'ans' → logprob: -2.284482002258301
    4. '(' → logprob: -2.409482002258301
    5. '       ' → logprob: -3.284482002258301
    6. '(ans' → logprob: -3.409482002258301
    7. ' C' → logprob: -3.659482002258301
    8. ' m' → logprob: -4.159482002258301
    9. 'C' → logprob: -4.159482002258301
    10. '(m' → logprob: -4.659482002258301

Token 887: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.3006691634654999
    2. '=' → logprob: -1.5506691932678223
    3. 'és' → logprob: -4.550669193267822
    4. ' =' → logprob: -4.675669193267822
    5. '   ' → logprob: -5.300669193267822
    6. 'é' → logprob: -5.550669193267822
    7. 'es' → logprob: -5.550669193267822
    8. '       ' → logprob: -5.675669193267822
    9. 'er' → logprob: -5.800669193267822
    10. '(' → logprob: -6.175669193267822

Token 888: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05547487363219261
    2. ' =' → logprob: -3.0554747581481934
    3. '       ' → logprob: -6.055474758148193
    4. ' par' → logprob: -6.555474758148193
    5. '*=' → logprob: -7.680474758148193
    6. '           ' → logprob: -7.805474758148193
    7. 'par' → logprob: -8.180475234985352
    8. ')' → logprob: -8.305475234985352
    9. '+=' → logprob: -8.305475234985352
    10. '(' → logprob: -8.430475234985352

Token 889: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6331170201301575
    2. '(r' → logprob: -1.5081169605255127
    3. '(ans' → logprob: -2.2581169605255127
    4. 'ans' → logprob: -3.2581169605255127
    5. ')' → logprob: -3.7581169605255127
    6. ' (' → logprob: -4.383117198944092
    7. '(i' → logprob: -4.633117198944092
    8. '((' → logprob: -4.758117198944092
    9. '   ' → logprob: -4.758117198944092
    10. ' ans' → logprob: -5.008117198944092

Token 890: ''aide' (ID: 75684)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0643101930618286
    2. '(r' → logprob: -1.6893101930618286
    3. '(C' → logprob: -2.064310073852539
    4. '(ans' → logprob: -2.939310073852539
    5. '-' → logprob: -3.314310073852539
    6. '((' → logprob: -3.564310073852539
    7. '(m' → logprob: -3.814310073852539
    8. 'm' → logprob: -4.064310073852539
    9. 'pow' → logprob: -4.064310073852539
    10. 'C' → logprob: -4.064310073852539

Token 891: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7950477004051208
    2. '(' → logprob: -0.9200477004051208
    3. ' C' → logprob: -2.6700477600097656
    4. ' des' → logprob: -3.5450477600097656
    5. 'C' → logprob: -4.170047760009766
    6. ' (' → logprob: -4.920047760009766
    7. 'de' → logprob: -5.295047760009766
    8. '(
' → logprob: -5.545047760009766
    9. ' d' → logprob: -5.795047760009766
    10. '   ' → logprob: -5.920047760009766

Token 892: ' coefficient' (ID: 64656)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.000727325037587434
    2. ' C' → logprob: -7.75072717666626
    3. '(
' → logprob: -9.375727653503418
    4. '(' → logprob: -9.500727653503418
    5. '(C' → logprob: -9.500727653503418
    6. 'comb' → logprob: -11.250727653503418
    7. ' (' → logprob: -11.750727653503418
    8. 'r' → logprob: -11.875727653503418
    9. 'pow' → logprob: -12.500727653503418
    10. '   ' → logprob: -12.625727653503418

Token 893: ' bin' (ID: 6958)
  Prédit: ' bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.5326572060585022
    2. 'bin' → logprob: -1.5326571464538574
    3. ' C' → logprob: -2.2826571464538574
    4. 'C' → logprob: -2.7826571464538574
    5. 'b' → logprob: -4.032657146453857
    6. ' b' → logprob: -5.532657146453857
    7. ' ' → logprob: -6.157657146453857
    8. ' de' → logprob: -6.282657146453857
    9. ')' → logprob: -6.407657146453857
    10. '_bin' → logprob: -7.157657146453857

Token 894: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.0008082019630819559
    2. 'om' → logprob: -7.125808238983154
    3. 'omia' → logprob: -13.875807762145996
    4. 'C' → logprob: -14.250807762145996
    5. 'ôm' → logprob: -14.625807762145996
    6. ')' → logprob: -14.875807762145996
    7. '(C' → logprob: -15.500807762145996
    8. '```' → logprob: -15.500807762145996
    9. '(n' → logprob: -15.750807762145996
    10. 'omina' → logprob: -15.875807762145996

Token 895: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1358181238174438
    2. '(' → logprob: -1.6358181238174438
    3. ',' → logprob: -2.1358180046081543
    4. '(r' → logprob: -2.2608180046081543
    5. 'C' → logprob: -2.7608180046081543
    6. ')' → logprob: -2.7608180046081543
    7. '   ' → logprob: -3.5108180046081543
    8. ' (' → logprob: -4.135818004608154
    9. '       ' → logprob: -4.385818004608154
    10. 's' → logprob: -4.510818004608154

Token 896: ' d' (ID: 272)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.004697322845459
    2. 'ans' → logprob: -1.504697322845459
    3. '<|end|>' → logprob: -2.129697322845459
    4. ')' → logprob: -2.379697322845459
    5. '       ' → logprob: -2.629697322845459
    6. ' ' → logprob: -4.004697322845459
    7. 'fact' → logprob: -4.629697322845459
    8. '(ans' → logprob: -4.629697322845459
    9. '    ' → logprob: -4.879697322845459
    10. '"' → logprob: -4.879697322845459

Token 897: ''une' (ID: 13337)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09625419229269028
    2. ' C' → logprob: -2.5962541103363037
    3. 'r' → logprob: -4.721254348754883
    4. 'm' → logprob: -6.721254348754883
    5. 'ans' → logprob: -6.971254348754883
    6. ' ans' → logprob: -7.346254348754883
    7. ' r' → logprob: -7.596254348754883
    8. '(ans' → logprob: -7.596254348754883
    9. ' m' → logprob: -7.846254348754883
    10. 'e' → logprob: -7.846254348754883

Token 898: ' puissance' (ID: 63494)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.01302539836615324
    2. ' C' → logprob: -5.888025283813477
    3. 'm' → logprob: -6.013025283813477
    4. ')' → logprob: -6.138025283813477
    5. '(' → logprob: -6.513025283813477
    6. 'pow' → logprob: -7.013025283813477
    7. '(m' → logprob: -7.263025283813477
    8. 'r' → logprob: -8.013025283813477
    9. 'comb' → logprob: -8.138025283813477
    10. ']' → logprob: -8.388025283813477

Token 899: ' de' (ID: 334)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.22829696536064148
    2. 'm' → logprob: -1.8532969951629639
    3. '(' → logprob: -3.353296995162964
    4. 'de' → logprob: -5.978296756744385
    5. 's' → logprob: -6.103296756744385
    6. '(r' → logprob: -6.103296756744385
    7. 'r' → logprob: -6.978296756744385
    8. 'pow' → logprob: -7.603296756744385
    9. '```' → logprob: -7.978296756744385
    10. '(pow' → logprob: -8.103297233581543

Token 900: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07389738410711288
    2. '(m' → logprob: -2.823897361755371
    3. 'C' → logprob: -4.573897361755371
    4. '(' → logprob: -8.198897361755371
    5. ' m' → logprob: -8.323897361755371
    6. '(C' → logprob: -8.448897361755371
    7. '(n' → logprob: -8.698897361755371
    8. 'pow' → logprob: -9.323897361755371
    9. 'ans' → logprob: -9.573897361755371
    10. ' (' → logprob: -9.573897361755371

Token 901: ',
' (ID: 412)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1023473739624023
    2. ',' → logprob: -1.2273473739624023
    3. ' -' → logprob: -1.7273473739624023
    4. '-' → logprob: -2.8523473739624023
    5. '*' → logprob: -3.1023473739624023
    6. ')' → logprob: -3.3523473739624023
    7. ' ,' → logprob: -3.9773473739624023
    8. '   ' → logprob: -4.602347373962402
    9. ' ' → logprob: -5.102347373962402
    10. '```' → logprob: -5.602347373962402

Token 902: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2571851909160614
    2. ')' → logprob: -2.882185220718384
    3. 'm' → logprob: -3.507185220718384
    4. '   ' → logprob: -3.632185220718384
    5. 'r' → logprob: -4.007184982299805
    6. '(' → logprob: -4.257184982299805
    7. ' m' → logprob: -4.632184982299805
    8. '    ' → logprob: -4.757184982299805
    9. '        
' → logprob: -5.257184982299805
    10. '```' → logprob: -5.382184982299805

Token 903: ' #' (ID: 1069)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8418835997581482
    2. 'r' → logprob: -1.966883659362793
    3. '(' → logprob: -2.591883659362793
    4. '*' → logprob: -3.091883659362793
    5. '(r' → logprob: -3.091883659362793
    6. 'm' → logprob: -3.341883659362793
    7. ')' → logprob: -3.466883659362793
    8. '(pow' → logprob: -3.591883659362793
    9. '(m' → logprob: -3.716883659362793
    10. ' (' → logprob: -3.716883659362793

Token 904: ' et' (ID: 859)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.4233518838882446
    2. 'pow' → logprob: -1.4233518838882446
    3. ' (' → logprob: -1.9233518838882446
    4. '(' → logprob: -1.9233518838882446
    5. 'm' → logprob: -2.298351764678955
    6. '(n' → logprob: -3.548351764678955
    7. ' m' → logprob: -3.548351764678955
    8. 'ans' → logprob: -4.798351764678955
    9. ' pow' → logprob: -4.798351764678955
    10. '   ' → logprob: -4.923351764678955

Token 905: ' d' (ID: 272)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5832331776618958
    2. 'C' → logprob: -1.583233118057251
    3. ' C' → logprob: -3.208233118057251
    4. '(' → logprob: -3.458233118057251
    5. ' pow' → logprob: -3.458233118057251
    6. 'm' → logprob: -4.08323335647583
    7. 'ans' → logprob: -4.20823335647583
    8. ' (' → logprob: -4.20823335647583
    9. '       ' → logprob: -4.58323335647583
    10. '(pow' → logprob: -4.58323335647583

Token 906: ''une' (ID: 13337)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.9905806183815002
    2. 'pow' → logprob: -1.2405805587768555
    3. ' C' → logprob: -2.2405805587768555
    4. ' (' → logprob: -2.7405805587768555
    5. '(pow' → logprob: -2.7405805587768555
    6. 'ans' → logprob: -3.7405805587768555
    7. 'C' → logprob: -3.9905805587768555
    8. ' m' → logprob: -4.3655805587768555
    9. ' ans' → logprob: -4.4905805587768555
    10. '(m' → logprob: -4.8655805587768555

Token 907: ' puissance' (ID: 63494)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.38362303376197815
    2. 'pow' → logprob: -1.5086230039596558
    3. '(' → logprob: -2.7586231231689453
    4. ' C' → logprob: -4.758623123168945
    5. '(
' → logprob: -5.008623123168945
    6. '(pow' → logprob: -5.508623123168945
    7. ')' → logprob: -5.883623123168945
    8. ' (' → logprob: -6.133623123168945
    9. ' pow' → logprob: -6.633623123168945
    10. '(n' → logprob: -6.758623123168945

Token 908: ' de' (ID: 334)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4063106179237366
    2. '(' → logprob: -1.5313105583190918
    3. '(n' → logprob: -3.156310558319092
    4. '((' → logprob: -4.531310558319092
    5. ' (' → logprob: -4.531310558319092
    6. ' of' → logprob: -4.656310558319092
    7. 'm' → logprob: -4.906310558319092
    8. '(r' → logprob: -4.906310558319092
    9. '(pow' → logprob: -5.031310558319092
    10. 'of' → logprob: -5.281310558319092

Token 909: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.012436654418706894
    2. '(n' → logprob: -4.887436866760254
    3. 'm' → logprob: -5.637436866760254
    4. '(r' → logprob: -7.637436866760254
    5. ' (' → logprob: -8.262436866760254
    6. 'pow' → logprob: -9.137436866760254
    7. '(' → logprob: -9.262436866760254
    8. 'n' → logprob: -9.387436866760254
    9. '(k' → logprob: -9.887436866760254
    10. 'r' → logprob: -10.262436866760254

Token 910: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11301982402801514
    2. '(m' → logprob: -2.2380199432373047
    3. '
' → logprob: -9.863019943237305
    4. '   ' → logprob: -10.613019943237305
    5. 'max' → logprob: -10.613019943237305
    6. ' (' → logprob: -11.238019943237305
    7. ' m' → logprob: -11.488019943237305
    8. ' ' → logprob: -11.613019943237305
    9. '-' → logprob: -11.988019943237305
    10. 'n' → logprob: -12.113019943237305

Token 911: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07023873180150986
    2. ' -' → logprob: -2.6952388286590576
    3. '
' → logprob: -8.820239067077637
    4. '   ' → logprob: -9.945239067077637
    5. '1' → logprob: -10.570239067077637
    6. 'm' → logprob: -11.570239067077637
    7. '```' → logprob: -11.570239067077637
    8. '+' → logprob: -11.695239067077637
    9. ')' → logprob: -11.695239067077637
    10. '
' → logprob: -11.945239067077637

Token 912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023319896310567856
    2. 'r' → logprob: -3.773319959640503
    3. ' r' → logprob: -11.023320198059082
    4. ' ' → logprob: -11.023320198059082
    5. ')' → logprob: -11.148320198059082
    6. 'm' → logprob: -11.773320198059082
    7. 'k' → logprob: -12.023320198059082
    8. '```' → logprob: -12.648320198059082
    9. '(' → logprob: -12.773320198059082
    10. '-' → logprob: -13.398320198059082

Token 913: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04534655064344406
    2. ' )' → logprob: -3.79534649848938
    3. '),' → logprob: -4.170346736907959
    4. ',' → logprob: -5.420346736907959
    5. ' ),' → logprob: -7.170346736907959
    6. ' ,' → logprob: -8.0453462600708
    7. '))' → logprob: -8.5453462600708
    8. '   ' → logprob: -8.7953462600708
    9. ' ' → logprob: -9.6703462600708
    10. ')n' → logprob: -9.7953462600708

Token 914: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5043948888778687
    2. 'pow' → logprob: -1.5043948888778687
    3. ' (' → logprob: -2.504395008087158
    4. ' *' → logprob: -2.504395008087158
    5. '   ' → logprob: -3.004395008087158
    6. '*' → logprob: -3.379395008087158
    7. '(' → logprob: -3.379395008087158
    8. 'ans' → logprob: -3.504395008087158
    9. 'end' → logprob: -3.504395008087158
    10. '    ' → logprob: -3.879395008087158

Token 915: ' tout' (ID: 5501)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.619164228439331
    2. ' r' → logprob: -1.744164228439331
    3. 'r' → logprob: -1.869164228439331
    4. ' (' → logprob: -2.494164228439331
    5. ' n' → logprob: -2.744164228439331
    6. 'n' → logprob: -2.994164228439331
    7. '(n' → logprob: -3.119164228439331
    8. '(' → logprob: -3.369164228439331
    9. 'pow' → logprob: -3.494164228439331
    10. '(r' → logprob: -3.494164228439331

Token 916: ' multip' (ID: 17524)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5390169024467468
    2. '*' → logprob: -1.2890169620513916
    3. ')' → logprob: -2.6640169620513916
    4. '%' → logprob: -3.2890169620513916
    5. ' %' → logprob: -4.0390167236328125
    6. '   ' → logprob: -5.2890167236328125
    7. ',' → logprob: -5.5390167236328125
    8. '       ' → logprob: -6.2890167236328125
    9. ' )' → logprob: -7.1640167236328125
    10. '.' → logprob: -7.2890167236328125

Token 917: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.11878152191638947
    2. '*' → logprob: -3.243781566619873
    3. 'ip' → logprob: -3.243781566619873
    4. 'li' → logprob: -4.118781566619873
    5. 'lication' → logprob: -5.368781566619873
    6. 'plied' → logprob: -5.868781566619873
    7. 'pli' → logprob: -5.993781566619873
    8. 'ipl' → logprob: -6.993781566619873
    9. 'iqué' → logprob: -7.118781566619873
    10. '%' → logprob: -7.243781566619873

Token 918: ' et' (ID: 859)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.6125802993774414
    2. '*' → logprob: -1.9875802993774414
    3. 'ans' → logprob: -1.9875802993774414
    4. '(' → logprob: -2.4875802993774414
    5. ')' → logprob: -2.6125802993774414
    6. '=' → logprob: -2.6125802993774414
    7. ',' → logprob: -2.8625802993774414
    8. '(ans' → logprob: -2.9875802993774414
    9. 'par' → logprob: -3.4875802993774414
    10. '(
' → logprob: -3.8625802993774414

Token 919: ' pris' (ID: 17549)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6767234802246094
    2. 'fact' → logprob: -1.1767234802246094
    3. 'pow' → logprob: -2.8017234802246094
    4. ' C' → logprob: -3.6767234802246094
    5. 'fin' → logprob: -3.6767234802246094
    6. 'C' → logprob: -3.9267234802246094
    7. ' fact' → logprob: -3.9267234802246094
    8. ' ans' → logprob: -4.676723480224609
    9. ' pow' → logprob: -4.801723480224609
    10. '(ans' → logprob: -5.301723480224609

Token 920: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0292082279920578
    2. '(' → logprob: -4.529208183288574
    3. ' %' → logprob: -5.154208183288574
    4. ' modulo' → logprob: -5.779208183288574
    5. 'mod' → logprob: -6.654208183288574
    6. '(mod' → logprob: -6.904208183288574
    7. '```' → logprob: -7.029208183288574
    8. '()%' → logprob: -7.154208183288574
    9. ')' → logprob: -7.404208183288574
    10. '           ' → logprob: -7.404208183288574

Token 921: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.47427719831466675
    2. ' MOD' → logprob: -0.9742771983146667
    3. '_MOD' → logprob: -9.84927749633789
    4. '`' → logprob: -10.47427749633789
    5. '(M' → logprob: -10.97427749633789
    6. ' ' → logprob: -11.22427749633789
    7. '.MOD' → logprob: -11.22427749633789
    8. ' (' → logprob: -11.22427749633789
    9. '```' → logprob: -11.47427749633789
    10. '(mod' → logprob: -11.72427749633789

Token 922: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017386754974722862
    2. ':' → logprob: -4.7673869132995605
    3. '(ans' → logprob: -6.0173869132995605
    4. ',' → logprob: -6.6423869132995605
    5. ' ans' → logprob: -6.7673869132995605
    6. '   ' → logprob: -7.1423869132995605
    7. ')' → logprob: -7.3923869132995605
    8. 'ans' → logprob: -7.5173869132995605
    9. '):' → logprob: -8.017386436462402
    10. '(' → logprob: -8.017386436462402

Token 923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07800443470478058
    2. ':' → logprob: -2.7030043601989746
    3. '   ' → logprob: -5.578004360198975
    4. '):' → logprob: -6.453004360198975
    5. '(ans' → logprob: -7.953004360198975
    6. '```' → logprob: -7.953004360198975
    7. '):
' → logprob: -8.203004837036133
    8. ':
' → logprob: -8.328004837036133
    9. ' :' → logprob: -8.453004837036133
    10. 'ans' → logprob: -8.578004837036133

Token 924: ' sou' (ID: 4069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.50929856300354
    2. '       ' → logprob: -1.00929856300354
    3. ' ans' → logprob: -3.88429856300354
    4. '(ans' → logprob: -5.509298324584961
    5. 'sub' → logprob: -6.509298324584961
    6. 'temp' → logprob: -6.759298324584961
    7. '	ans' → logprob: -7.259298324584961
    8. 'subtract' → logprob: -7.259298324584961
    9. 'term' → logprob: -7.384298324584961
    10. 'mod' → logprob: -7.509298324584961

Token 925: 'straction' (ID: 79887)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01142102386802435
    2. 'm' → logprob: -5.761421203613281
    3. 's' → logprob: -5.886421203613281
    4. 'ans' → logprob: -6.011421203613281
    5. 'bs' → logprob: -6.511421203613281
    6. 'r' → logprob: -7.761421203613281
    7. '   ' → logprob: -7.886421203613281
    8. '=' → logprob: -8.011421203613281
    9. 'p' → logprob: -9.511421203613281
    10. '	ans' → logprob: -9.761421203613281

Token 926: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38719233870506287
    2. ' =' → logprob: -1.1371923685073853
    3. '_' → logprob: -8.762192726135254
    4. 's' → logprob: -9.512192726135254
    5. '   ' → logprob: -10.512192726135254
    6. ' ' → logprob: -10.887192726135254
    7. '_=' → logprob: -11.512192726135254
    8. '	' → logprob: -11.762192726135254
    9. '    ' → logprob: -12.012192726135254
    10. '[' → logprob: -12.387192726135254

Token 927: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.055985625833272934
    2. ' C' → logprob: -2.930985689163208
    3. '(C' → logprob: -7.680985450744629
    4. ' (' → logprob: -8.055985450744629
    5. '(' → logprob: -8.680985450744629
    6. '   ' → logprob: -9.555985450744629
    7. ' ' → logprob: -10.680985450744629
    8. 'ans' → logprob: -11.805985450744629
    9. 'pow' → logprob: -12.055985450744629
    10. '(ans' → logprob: -12.305985450744629

Token 928: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000948737608268857
    2. 'n' → logprob: -7.000948905944824
    3. '(' → logprob: -10.250948905944824
    4. '(
' → logprob: -14.250948905944824
    5. ' (' → logprob: -14.500948905944824
    6. '(m' → logprob: -14.625948905944824
    7. '_n' → logprob: -16.500947952270508
    8. '(r' → logprob: -16.875947952270508
    9. '[n' → logprob: -17.000947952270508
    10. ' n' → logprob: -17.250947952270508

Token 929: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.230678990483284
    2. ',r' → logprob: -1.6056790351867676
    3. 'r' → logprob: -5.480679035186768
    4. ' ,' → logprob: -7.605679035186768
    5. ',n' → logprob: -8.23067855834961
    6. ' r' → logprob: -8.48067855834961
    7. '[' → logprob: -10.85567855834961
    8. '   ' → logprob: -11.10567855834961
    9. '[r' → logprob: -11.10567855834961
    10. ')' → logprob: -11.10567855834961

Token 930: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00046725376159884036
    2. '1' → logprob: -7.875467300415039
    3. ' r' → logprob: -9.500467300415039
    4. 'k' → logprob: -11.375467300415039
    5. ' ' → logprob: -14.750467300415039
    6. '   ' → logprob: -15.375467300415039
    7. 'n' → logprob: -16.37546730041504
    8. '
' → logprob: -17.25046730041504
    9. 'i' → logprob: -17.75046730041504
    10. '2' → logprob: -17.87546730041504

Token 931: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00024596223374828696
    2. '1' → logprob: -8.500246047973633
    3. 'k' → logprob: -10.500246047973633
    4. ' r' → logprob: -11.125246047973633
    5. ' ' → logprob: -17.125246047973633
    6. '(r' → logprob: -17.250246047973633
    7. 'n' → logprob: -17.875246047973633
    8. '(' → logprob: -17.875246047973633
    9. 'm' → logprob: -18.375246047973633
    10. '_r' → logprob: -18.500246047973633

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004148207139223814
    2. ',r' → logprob: -5.504148006439209
    3. ' ,' → logprob: -9.754148483276367
    4. 'r' → logprob: -11.629148483276367
    5. '[' → logprob: -14.629148483276367
    6. '[r' → logprob: -14.754148483276367
    7. ')' → logprob: -14.754148483276367
    8. ',
' → logprob: -15.004148483276367
    9. '<|end|>' → logprob: -15.379148483276367
    10. '，' → logprob: -15.379148483276367

Token 933: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013421354815363884
    2. ' r' → logprob: -6.626342296600342
    3. '<|end|>' → logprob: -11.876341819763184
    4. '   ' → logprob: -12.501341819763184
    5. '	r' → logprob: -13.251341819763184
    6. '       ' → logprob: -13.751341819763184
    7. ')' → logprob: -14.126341819763184
    8. '    ' → logprob: -14.626341819763184
    9. '<|end|>' → logprob: -15.126341819763184
    10. 'rstrip' → logprob: -15.501341819763184

Token 934: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ')*' → logprob: -11.250024795532227
    3. ' )' → logprob: -12.375024795532227
    4. '   ' → logprob: -12.750024795532227
    5. '`)' → logprob: -14.250024795532227
    6. '```' → logprob: -14.375024795532227
    7. ')
' → logprob: -14.375024795532227
    8. '')' → logprob: -14.500024795532227
    9. ')`' → logprob: -15.250024795532227
    10. '")' → logprob: -15.375024795532227

Token 935: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. ')' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.12500286102295
    5. '```' → logprob: -17.125001907348633
    6. '    ' → logprob: -18.687501907348633
    7. '...' → logprob: -18.750001907348633
    8. '0' → logprob: -18.812501907348633
    9. '  ' → logprob: -18.937501907348633
    10. '<|end|>' → logprob: -19.187501907348633

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.375
    5. '```' → logprob: -18.25
    6. '<|end|>' → logprob: -18.9375
    7. '0' → logprob: -19.875
    8. '  ' → logprob: -20.0
    9. '    ' → logprob: -20.0
    10. '2' → logprob: -20.125

Token 937: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003673940955195576
    2. ')*' → logprob: -8.625367164611816
    3. '*' → logprob: -9.250367164611816
    4. ' *' → logprob: -9.750367164611816
    5. '   ' → logprob: -11.375367164611816
    6. '       ' → logprob: -11.750367164611816
    7. ' )' → logprob: -12.000367164611816
    8. '*)' → logprob: -13.125367164611816
    9. '```' → logprob: -13.500367164611816
    10. ')
' → logprob: -14.000367164611816

Token 938: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020573768764734268
    2. '*' → logprob: -3.895573854446411
    3. '       ' → logprob: -11.270573616027832
    4. ')' → logprob: -12.395573616027832
    5. '```' → logprob: -13.020573616027832
    6. '   ' → logprob: -13.145573616027832
    7. '<|end|>' → logprob: -13.145573616027832
    8. 'ans' → logprob: -13.395573616027832
    9. '*(' → logprob: -13.770573616027832
    10. ' ans' → logprob: -14.270573616027832

Token 939: ' m' (ID: 284)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.14551842212677002
    2. 'm' → logprob: -2.0205183029174805
    3. '(m' → logprob: -6.6455183029174805
    4. 'C' → logprob: -6.8955183029174805
    5. '   ' → logprob: -8.77051830291748
    6. ' m' → logprob: -8.89551830291748
    7. '(pow' → logprob: -9.27051830291748
    8. ' pow' → logprob: -9.39551830291748
    9. '(' → logprob: -11.89551830291748
    10. '     ' → logprob: -12.02051830291748

Token 940: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09901569783687592
    2. ' *' → logprob: -2.724015712738037
    3. 'pow' → logprob: -3.724015712738037
    4. ' pow' → logprob: -6.099015712738037
    5. '(pow' → logprob: -7.224015712738037
    6. '%' → logprob: -7.599015712738037
    7. 'ans' → logprob: -8.474015235900879
    8. '   ' → logprob: -8.599015235900879
    9. '*(' → logprob: -8.724015235900879
    10. '*r' → logprob: -8.724015235900879

Token 941: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.6286106983898208e-05
    2. ' pow' → logprob: -11.250016212463379
    3. '   ' → logprob: -12.875016212463379
    4. '(pow' → logprob: -14.625016212463379
    5. '       ' → logprob: -16.625017166137695
    6. 'power' → logprob: -17.000017166137695
    7. ' ' → logprob: -17.375017166137695
    8. '           ' → logprob: -17.750017166137695
    9. '    ' → logprob: -17.750017166137695
    10. '     ' → logprob: -18.000017166137695

Token 942: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.06197945028543472
    2. 'm' → logprob: -2.8119795322418213
    3. ' (' → logprob: -11.686979293823242
    4. '   ' → logprob: -13.186979293823242
    5. '(' → logprob: -14.186979293823242
    6. '[m' → logprob: -15.436979293823242
    7. ' m' → logprob: -15.561979293823242
    8. '           ' → logprob: -15.936979293823242
    9. '       ' → logprob: -16.061979293823242
    10. '(
' → logprob: -16.936979293823242

Token 943: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004618457052856684
    2. ' -' → logprob: -5.5046186447143555
    3. '(m' → logprob: -8.754618644714355
    4. 'm' → logprob: -9.129618644714355
    5. '(' → logprob: -9.379618644714355
    6. '(n' → logprob: -9.504618644714355
    7. 'r' → logprob: -10.504618644714355
    8. '1' → logprob: -10.504618644714355
    9. ' (' → logprob: -10.504618644714355
    10. '(r' → logprob: -11.754618644714355

Token 944: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. 'r' → logprob: -17.5
    4. '2' → logprob: -19.125
    5. '   ' → logprob: -19.5
    6. '```' → logprob: -19.75
    7. '

' → logprob: -21.125
    8. '<|end|>' → logprob: -22.0
    9. '  ' → logprob: -22.5
    10. '۱' → logprob: -22.625

Token 945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. 'r' → logprob: -17.875
    4. '2' → logprob: -18.5
    5. '```' → logprob: -20.5
    6. '   ' → logprob: -20.875
    7. '
' → logprob: -21.875
    8. 's' → logprob: -22.625
    9. ')' → logprob: -22.625
    10. '

' → logprob: -22.875

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033757731318473816
    2. ',r' → logprob: -4.15875768661499
    3. ',n' → logprob: -4.15875768661499
    4. ' ,' → logprob: -6.28375768661499
    5. ')' → logprob: -10.908758163452148
    6. ',k' → logprob: -11.533758163452148
    7. 'n' → logprob: -11.533758163452148
    8. 'r' → logprob: -11.658758163452148
    9. '(n' → logprob: -11.908758163452148
    10. '```' → logprob: -12.158758163452148

Token 947: ' r' (ID: 428)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.1318875446449965e-05
    2. '   ' → logprob: -10.750041007995605
    3. '(n' → logprob: -11.500041007995605
    4. ' n' → logprob: -11.750041007995605
    5. '	n' → logprob: -13.750041007995605
    6. '    ' → logprob: -15.125041007995605
    7. '     ' → logprob: -15.750041007995605
    8. '       ' → logprob: -15.875041007995605
    9. ' ' → logprob: -16.375041961669922
    10. '  ' → logprob: -17.125041961669922

Token 948: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17436252534389496
    2. '(n' → logprob: -2.4243624210357666
    3. '-' → logprob: -2.9243624210357666
    4. '[n' → logprob: -4.924362659454346
    5. ' n' → logprob: -4.924362659454346
    6. ',n' → logprob: -6.799362659454346
    7. ',' → logprob: -7.674362659454346
    8. '
' → logprob: -8.549362182617188
    9. ')' → logprob: -8.549362182617188
    10. '	n' → logprob: -8.674362182617188

Token 949: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. 'n' → logprob: -13.125003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '(n' → logprob: -15.375003814697266
    5. '   ' → logprob: -15.500003814697266
    6. '0' → logprob: -15.875003814697266
    7. 'r' → logprob: -15.875003814697266
    8. '```' → logprob: -17.250003814697266
    9. 'k' → logprob: -17.625003814697266
    10. '(' → logprob: -17.750003814697266

Token 950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2563427984714508
    2. 'n' → logprob: -1.5063427686691284
    3. '(n' → logprob: -5.756342887878418
    4. '-' → logprob: -7.756342887878418
    5. 'r' → logprob: -8.006342887878418
    6. '0' → logprob: -8.381342887878418
    7. ' n' → logprob: -9.381342887878418
    8. '   ' → logprob: -10.131342887878418
    9. 'k' → logprob: -10.256342887878418
    10. 'ans' → logprob: -10.506342887878418

Token 951: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45904335379600525
    2. '%' → logprob: -1.5840433835983276
    3. ')' → logprob: -1.8340433835983276
    4. ')%' → logprob: -6.459043502807617
    5. ' %' → logprob: -6.584043502807617
    6. '   ' → logprob: -9.459043502807617
    7. ',r' → logprob: -10.584043502807617
    8. ' ,' → logprob: -10.834043502807617
    9. '```' → logprob: -10.959043502807617
    10. '%,' → logprob: -11.084043502807617

Token 952: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.5048530030981055e-06
    2. ' MOD' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '_MOD' → logprob: -20.250001907348633
    5. '.MOD' → logprob: -20.750001907348633
    6. 'mod' → logprob: -21.500001907348633
    7. 'M' → logprob: -22.250001907348633
    8. ')' → logprob: -22.500001907348633
    9. 'MO' → logprob: -23.125001907348633
    10. 'Mod' → logprob: -23.500001907348633

Token 953: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003298793686553836
    2. ')%' → logprob: -6.128298759460449
    3. '%' → logprob: -7.003298759460449
    4. ' %' → logprob: -9.12829875946045
    5. ' )' → logprob: -9.87829875946045
    6. ',' → logprob: -10.75329875946045
    7. '   ' → logprob: -11.50329875946045
    8. '       ' → logprob: -12.37829875946045
    9. '%)' → logprob: -13.12829875946045
    10. '```' → logprob: -13.50329875946045

Token 954: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.18941575288772583
    2. ' %' → logprob: -2.439415693283081
    3. ')' → logprob: -2.564415693283081
    4. '<|end|>' → logprob: -5.81441593170166
    5. '       ' → logprob: -6.06441593170166
    6. ')%' → logprob: -6.43941593170166
    7. '*' → logprob: -7.68941593170166
    8. ' *' → logprob: -7.93941593170166
    9. '   ' → logprob: -8.18941593170166
    10. ']' → logprob: -9.68941593170166

Token 955: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20478631556034088
    2. ' %' → logprob: -1.8297863006591797
    3. ' *' → logprob: -4.32978630065918
    4. ')' → logprob: -5.07978630065918
    5. '*' → logprob: -5.45478630065918
    6. ')%' → logprob: -7.82978630065918
    7. ' %=' → logprob: -8.32978630065918
    8. '       ' → logprob: -8.57978630065918
    9. 'pow' → logprob: -10.20478630065918
    10. '<|end|>' → logprob: -10.45478630065918

Token 956: ' On' (ID: 2160)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.030796373263001442
    2. ' %' → logprob: -4.280796527862549
    3. '*' → logprob: -4.905796527862549
    4. 'ans' → logprob: -5.905796527862549
    5. 'sou' → logprob: -6.280796527862549
    6. ' *' → logprob: -6.905796527862549
    7. ' %=' → logprob: -6.905796527862549
    8. ')' → logprob: -7.405796527862549
    9. '%=' → logprob: -7.530796527862549
    10. 'pow' → logprob: -8.03079605102539

Token 957: ' sou' (ID: 4069)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5443224906921387
    2. '%=' → logprob: -1.0443224906921387
    3. 'ans' → logprob: -3.5443224906921387
    4. '%' → logprob: -3.6693224906921387
    5. '=' → logprob: -5.169322490692139
    6. ')' → logprob: -6.169322490692139
    7. ' ans' → logprob: -6.294322490692139
    8. 'sou' → logprob: -6.544322490692139
    9. '*=' → logprob: -7.169322490692139
    10. ' =' → logprob: -7.794322490692139

Token 958: 'stra' (ID: 14867)
  Prédit: 'traction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'traction' → logprob: -0.6627935171127319
    2. 'straction' → logprob: -0.7877935171127319
    3. 'tract' → logprob: -4.0377936363220215
    4. 'stract' → logprob: -5.5377936363220215
    5. '=' → logprob: -5.6627936363220215
    6. '%' → logprob: -6.4127936363220215
    7. 'b' → logprob: -7.2877936363220215
    8. 'raction' → logprob: -7.7877936363220215
    9. '   ' → logprob: -8.287793159484863
    10. '-=' → logprob: -8.412793159484863

Token 959: 'it' (ID: 278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9570271372795105
    2. '*' → logprob: -1.9570271968841553
    3. 'stract' → logprob: -2.0820271968841553
    4. ')' → logprob: -2.3320271968841553
    5. 'er' → logprob: -2.8320271968841553
    6. '%' → logprob: -2.9570271968841553
    7. 'ct' → logprob: -3.3320271968841553
    8. '       ' → logprob: -3.7070271968841553
    9. '%=' → logprob: -4.582026958465576
    10. '*=' → logprob: -4.582026958465576

Token 960: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6717010736465454
    2. '%' → logprob: -1.9217010736465454
    3. 'sou' → logprob: -2.421700954437256
    4. ' *' → logprob: -2.546700954437256
    5. '*' → logprob: -2.671700954437256
    6. ' %' → logprob: -2.921700954437256
    7. ' sou' → logprob: -4.296700954437256
    8. '(ans' → logprob: -4.671700954437256
    9. '(s' → logprob: -4.796700954437256
    10. ')%' → logprob: -5.171700954437256

Token 961: ' terme' (ID: 42959)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21132603287696838
    2. '*' → logprob: -2.5863261222839355
    3. ' %' → logprob: -2.7113261222839355
    4. ')' → logprob: -3.3363261222839355
    5. ' *' → logprob: -4.5863261222839355
    6. 'sou' → logprob: -6.5863261222839355
    7. '%s' → logprob: -7.9613261222839355
    8. ',' → logprob: -8.336325645446777
    9. ' %=' → logprob: -8.711325645446777
    10. ')%' → logprob: -8.961325645446777

Token 962: ' à' (ID: 1221)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4478980004787445
    2. ' %' → logprob: -1.947898030281067
    3. ')' → logprob: -2.1978979110717773
    4. ' *' → logprob: -2.8228979110717773
    5. '*' → logprob: -3.8228979110717773
    6. ' %=' → logprob: -4.947897911071777
    7. ' ans' → logprob: -5.197897911071777
    8. ')%' → logprob: -5.697897911071777
    9. '(ans' → logprob: -6.072897911071777
    10. 'ans' → logprob: -6.322897911071777

Token 963: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.000616889214143157
    2. ' ans' → logprob: -7.500617027282715
    3. '(ans' → logprob: -9.750617027282715
    4. '	ans' → logprob: -12.250617027282715
    5. '   ' → logprob: -15.000617027282715
    6. '```' → logprob: -15.250617027282715
    7. 'answer' → logprob: -16.2506160736084
    8. ')' → logprob: -16.5006160736084
    9. '_ans' → logprob: -17.1256160736084
    10. '
' → logprob: -17.3756160736084

Token 964: ' réponse' (ID: 50332)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012438016710802913
    2. ' ans' → logprob: -6.751243591308594
    3. '(ans' → logprob: -10.376243591308594
    4. 'sou' → logprob: -11.251243591308594
    5. '	ans' → logprob: -12.126243591308594
    6. '%' → logprob: -12.126243591308594
    7. ')' → logprob: -12.376243591308594
    8. '```' → logprob: -12.376243591308594
    9. '
' → logprob: -13.376243591308594
    10. ' sou' → logprob: -13.376243591308594

Token 965: ' actuelle' (ID: 104951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.261484980583191
    2. ' ans' → logprob: -1.386484980583191
    3. '%' → logprob: -1.886484980583191
    4. ' %=' → logprob: -2.3864850997924805
    5. ')' → logprob: -2.5114850997924805
    6. '(ans' → logprob: -3.1364850997924805
    7. 'ans' → logprob: -3.7614850997924805
    8. '<|end|>' → logprob: -3.8864850997924805
    9. ' *' → logprob: -4.7614850997924805
    10. '   ' → logprob: -4.7614850997924805

Token 966: ',' (ID: 11)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.23137332499027252
    2. '%' → logprob: -1.7313733100891113
    3. '<|end|>' → logprob: -4.356373310089111
    4. ')' → logprob: -4.606373310089111
    5. '   ' → logprob: -6.731373310089111
    6. ' *' → logprob: -6.856373310089111
    7. ' %=' → logprob: -6.981373310089111
    8. ' ans' → logprob: -7.106373310089111
    9. '       ' → logprob: -7.356373310089111
    10. '```' → logprob: -7.981373310089111

Token 967: ' tout' (ID: 5501)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3558759093284607
    2. 'ans' → logprob: -1.3558759689331055
    3. '%' → logprob: -3.7308759689331055
    4. '       ' → logprob: -4.9808759689331055
    5. '(ans' → logprob: -5.1058759689331055
    6. ')' → logprob: -6.1058759689331055
    7. '	ans' → logprob: -6.6058759689331055
    8. ')%' → logprob: -7.9808759689331055
    9. ' %' → logprob: -8.480875968933105
    10. '   ' → logprob: -8.855875968933105

Token 968: ' en' (ID: 469)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.36406517028808594
    2. ' %=' → logprob: -1.739065170288086
    3. '%' → logprob: -2.114065170288086
    4. '=' → logprob: -5.114065170288086
    5. 'ans' → logprob: -7.239065170288086
    6. ')%' → logprob: -7.614065170288086
    7. ' ans' → logprob: -7.739065170288086
    8. ')' → logprob: -8.614065170288086
    9. '   ' → logprob: -8.739065170288086
    10. '(ans' → logprob: -8.864065170288086

Token 969: ' assur' (ID: 50678)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0511715412139893
    2. ' keeping' → logprob: -1.0511715412139893
    3. ' ensuring' → logprob: -2.4261715412139893
    4. ' %=' → logprob: -2.8011715412139893
    5. 'ans' → logprob: -3.0511715412139893
    6. 'mod' → logprob: -3.1761715412139893
    7. 'keeping' → logprob: -3.9261715412139893
    8. ' maintaining' → logprob: -4.67617130279541
    9. ')' → logprob: -4.92617130279541
    10. ' modulo' → logprob: -5.55117130279541

Token 970: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.05932750180363655
    2. 'vant' → logprob: -3.0593276023864746
    3. 'urant' → logprob: -4.809327602386475
    4. 'çant' → logprob: -7.309327602386475
    5. 'nant' → logprob: -7.559327602386475
    6. 'ivant' → logprob: -8.184327125549316
    7. 'ans' → logprob: -8.434327125549316
    8. 'v' → logprob: -8.809327125549316
    9. '#' → logprob: -9.309327125549316
    10. '```' → logprob: -9.684327125549316

Token 971: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2568225860595703
    2. ' ans' → logprob: -1.5068225860595703
    3. '(ans' → logprob: -5.38182258605957
    4. '   ' → logprob: -8.75682258605957
    5. '	ans' → logprob: -10.00682258605957
    6. 'mod' → logprob: -10.63182258605957
    7. '```' → logprob: -11.63182258605957
    8. '_ans' → logprob: -12.13182258605957
    9. ' modulo' → logprob: -12.25682258605957
    10. '       ' → logprob: -12.25682258605957

Token 972: ' modulo' (ID: 112372)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.012381676584482193
    2. 'mod' → logprob: -5.137381553649902
    3. ' ans' → logprob: -5.887381553649902
    4. '%' → logprob: -6.637381553649902
    5. 'MOD' → logprob: -7.012381553649902
    6. 'answer' → logprob: -8.012381553649902
    7. '(ans' → logprob: -8.262381553649902
    8. ' modulo' → logprob: -8.762381553649902
    9. '%=' → logprob: -8.887381553649902
    10. '```' → logprob: -8.887381553649902

Token 973: ' MOD' (ID: 32868)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5875166654586792
    2. 'ans' → logprob: -1.0875166654586792
    3. '(ans' → logprob: -2.8375167846679688
    4. ')' → logprob: -3.4625167846679688
    5. ',' → logprob: -5.712516784667969
    6. ' =' → logprob: -5.837516784667969
    7. '   ' → logprob: -5.962516784667969
    8. '	ans' → logprob: -6.087516784667969
    9. '=' → logprob: -6.837516784667969
    10. ' %=' → logprob: -6.837516784667969

Token 974: ' pour' (ID: 1930)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.614076554775238
    2. ' %' → logprob: -1.7390766143798828
    3. ')' → logprob: -2.239076614379883
    4. '       ' → logprob: -2.989076614379883
    5. ' ans' → logprob: -3.114076614379883
    6. ' %=' → logprob: -3.364076614379883
    7. '(ans' → logprob: -4.239076614379883
    8. ')%' → logprob: -4.364076614379883
    9. 'ans' → logprob: -5.114076614379883
    10. '%=' → logprob: -5.989076614379883

Token 975: ' rester' (ID: 54655)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004184652119874954
    2. ' ans' → logprob: -5.629184722900391
    3. '(ans' → logprob: -7.504184722900391
    4. ')' → logprob: -11.00418472290039
    5. 'mod' → logprob: -12.37918472290039
    6. 'answer' → logprob: -12.62918472290039
    7. '	ans' → logprob: -12.87918472290039
    8. '_ans' → logprob: -13.87918472290039
    9. ' )' → logprob: -14.12918472290039
    10. '
' → logprob: -14.50418472290039

Token 976: ' dans' (ID: 2671)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4069354236125946
    2. '%' → logprob: -1.781935453414917
    3. ')' → logprob: -2.656935453414917
    4. ' ans' → logprob: -2.781935453414917
    5. '(ans' → logprob: -3.656935453414917
    6. ' %' → logprob: -6.656935214996338
    7. '=' → logprob: -6.781935214996338
    8. ' %=' → logprob: -6.906935214996338
    9. ')%' → logprob: -7.031935214996338
    10. ',' → logprob: -7.156935214996338

Token 977: ' les' (ID: 1341)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6318603754043579
    2. 'MOD' → logprob: -1.131860375404358
    3. ' MOD' → logprob: -2.2568602561950684
    4. ' ans' → logprob: -3.3818602561950684
    5. '(ans' → logprob: -5.006860256195068
    6. ')' → logprob: -7.881860256195068
    7. 'ANS' → logprob: -10.256860733032227
    8. ' )' → logprob: -10.256860733032227
    9. 'mod' → logprob: -10.381860733032227
    10. ' (' → logprob: -10.506860733032227

Token 978: ' born' (ID: 12275)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.1654579639434814
    2. ' MOD' → logprob: -1.5404579639434814
    3. 'ans' → logprob: -1.6654579639434814
    4. ')' → logprob: -2.0404579639434814
    5. ' ans' → logprob: -2.7904579639434814
    6. '(ans' → logprob: -3.6654579639434814
    7. '
' → logprob: -3.9154579639434814
    8. '```' → logprob: -4.540457725524902
    9. '%' → logprob: -4.915457725524902
    10. ' )' → logprob: -5.040457725524902

Token 979: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.013099048286676407
    2. 's' → logprob: -4.388099193572998
    3. '```' → logprob: -8.01309871673584
    4. 'és' → logprob: -9.76309871673584
    5. 'ces' → logprob: -10.88809871673584
    6. '
' → logprob: -10.88809871673584
    7. 'ges' → logprob: -11.01309871673584
    8. '...' → logprob: -11.13809871673584
    9. 'ds' → logprob: -11.26309871673584
    10. '{' → logprob: -11.38809871673584

Token 980: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6233156323432922
    2. '%' → logprob: -1.4983155727386475
    3. ')' → logprob: -1.7483155727386475
    4. '       ' → logprob: -3.8733155727386475
    5. ' ans' → logprob: -4.498315811157227
    6. ' %=' → logprob: -4.623315811157227
    7. '(ans' → logprob: -4.748315811157227
    8. ')%' → logprob: -4.998315811157227
    9. 'ans' → logprob: -5.998315811157227
    10. '   ' → logprob: -6.248315811157227

Token 981: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.9975354075431824
    2. ' %=' → logprob: -1.2475354671478271
    3. '%' → logprob: -1.4975354671478271
    4. ')' → logprob: -2.747535467147827
    5. '%=' → logprob: -4.247535228729248
    6. '       ' → logprob: -4.372535228729248
    7. '=' → logprob: -4.622535228729248
    8. ')%' → logprob: -5.122535228729248
    9. ' *' → logprob: -5.497535228729248
    10. ' ans' → logprob: -5.747535228729248

Token 982: ' ans' (ID: 3345)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8156440258026123
    2. ' %' → logprob: -1.0656440258026123
    3. ' %=' → logprob: -2.4406440258026123
    4. ')' → logprob: -2.8156440258026123
    5. ' ans' → logprob: -3.5656440258026123
    6. 'ans' (adapté à ' ans') → logprob: -3.9406440258026123
    7. ')%' → logprob: -4.940644264221191
    8. '(ans' → logprob: -5.315644264221191
    9. '%=' → logprob: -5.565644264221191
    10. '=' → logprob: -7.815644264221191

Token 983: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16376715898513794
    2. ' =' → logprob: -1.9137670993804932
    3. '-=' → logprob: -6.038767337799072
    4. ' -=' → logprob: -7.038767337799072
    5. '%=' → logprob: -8.288766860961914
    6. ' %=' → logprob: -11.288766860961914
    7. '-' → logprob: -12.288766860961914
    8. '=(' → logprob: -12.663766860961914
    9. ' =(' → logprob: -14.038766860961914
    10. '   ' → logprob: -14.038766860961914

Token 984: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.01017556618899107
    2. ' sou' → logprob: -4.635175704956055
    3. '(s' → logprob: -8.010175704956055
    4. 's' → logprob: -9.385175704956055
    5. '(' → logprob: -13.510175704956055
    6. ' (' → logprob: -14.135175704956055
    7. 'Sou' → logprob: -14.510175704956055
    8. '	s' → logprob: -15.135175704956055
    9. ' sout' → logprob: -15.385175704956055
    10. ' ' → logprob: -16.260175704956055

Token 985: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.11254794895648956
    2. 'traction' → logprob: -2.3625478744506836
    3. 'raction' → logprob: -4.737547874450684
    4. 'r' → logprob: -6.612547874450684
    5. 'stract' → logprob: -7.487547874450684
    6. 'tract' → logprob: -8.237547874450684
    7. 'ct' → logprob: -8.737547874450684
    8. 'ction' → logprob: -8.862547874450684
    9. 'struction' → logprob: -9.237547874450684
    10. 'tra' → logprob: -9.362547874450684

Token 986: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31371286511421204
    2. '%' → logprob: -1.3137128353118896
    3. '<|end|>' → logprob: -8.563713073730469
    4. '
' → logprob: -9.313713073730469
    5. ')' → logprob: -9.938713073730469
    6. ')%' → logprob: -10.313713073730469
    7. ' %=' → logprob: -10.938713073730469
    8. ' ' → logprob: -11.063713073730469
    9. '%
' → logprob: -11.063713073730469
    10. ' 
' → logprob: -11.938713073730469

Token 987: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.22455599904060364
    2. ' %' → logprob: -1.8495559692382812
    3. '
' → logprob: -4.224555969238281
    4. '<|end|>' → logprob: -4.474555969238281
    5. ' ans' → logprob: -4.849555969238281
    6. ')' → logprob: -5.849555969238281
    7. ')%' → logprob: -5.974555969238281
    8. '%
' → logprob: -6.724555969238281
    9. 'ans' → logprob: -7.349555969238281
    10. ' %=' → logprob: -7.474555969238281

Token 988: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.9639816880226135
    2. 'ans' → logprob: -1.2139816284179688
    3. '%' → logprob: -1.4639816284179688
    4. '
' → logprob: -2.8389816284179688
    5. '(ans' → logprob: -4.713981628417969
    6. '	ans' → logprob: -5.463981628417969
    7. ' %' → logprob: -5.463981628417969
    8. '%
' → logprob: -5.588981628417969
    9. '<|end|>' → logprob: -5.838981628417969
    10. '\n' → logprob: -6.088981628417969

Token 989: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011278292164206505
    2. ' ans' → logprob: -4.51127815246582
    3. 'if' → logprob: -9.26127815246582
    4. '   ' → logprob: -9.76127815246582
    5. '	ans' → logprob: -9.76127815246582
    6. ' if' → logprob: -11.26127815246582
    7. '(ans' → logprob: -12.26127815246582
    8. '```' → logprob: -13.63627815246582
    9. '_ans' → logprob: -14.13627815246582
    10. 'answer' → logprob: -15.51127815246582

Token 990: ' s' (ID: 265)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05557062104344368
    2. ' ans' → logprob: -2.930570602416992
    3. '=' → logprob: -8.180570602416992
    4. '(ans' → logprob: -8.930570602416992
    5. '	ans' → logprob: -9.305570602416992
    6. '_' → logprob: -10.180570602416992
    7. ')' → logprob: -10.305570602416992
    8. '_ans' → logprob: -10.305570602416992
    9. 'mod' → logprob: -10.930570602416992
    10. 's' → logprob: -11.555570602416992

Token 991: ''assurer' (ID: 193756)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07292317599058151
    2. '(ans' → logprob: -3.572923183441162
    3. ' ans' → logprob: -3.697923183441162
    4. '%' → logprob: -4.822923183441162
    5. 'ure' → logprob: -5.947923183441162
    6. '_ans' → logprob: -6.447923183441162
    7. '%=' → logprob: -6.572923183441162
    8. '=' → logprob: -7.072923183441162
    9. '	ans' → logprob: -7.072923183441162
    10. 'afe' → logprob: -7.822923183441162

Token 992: ' que' (ID: 661)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2058487832546234
    2. 'ans' → logprob: -1.8308488130569458
    3. '   ' → logprob: -4.830848693847656
    4. '%=' → logprob: -5.455848693847656
    5. '(ans' → logprob: -5.455848693847656
    6. ' %=' → logprob: -5.580848693847656
    7. '=' → logprob: -5.830848693847656
    8. '	ans' → logprob: -7.080848693847656
    9. '_ans' → logprob: -7.455848693847656
    10. '%' → logprob: -7.955848693847656

Token 993: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5759696960449219
    2. ' ans' → logprob: -0.8259696960449219
    3. '	ans' → logprob: -11.200969696044922
    4. '(ans' → logprob: -11.450969696044922
    5. '   ' → logprob: -12.450969696044922
    6. '_ans' → logprob: -13.200969696044922
    7. 'answer' → logprob: -15.950969696044922
    8. ' ' → logprob: -17.200969696044922
    9. '
' → logprob: -17.325969696044922
    10. 'Ans' → logprob: -17.825969696044922

Token 994: ' reste' (ID: 26769)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5765793323516846
    2. ' %=' → logprob: -0.8265793323516846
    3. '=' → logprob: -7.4515790939331055
    4. '%' → logprob: -10.701579093933105
    5. ' =' → logprob: -10.951579093933105
    6. '<' → logprob: -11.576579093933105
    7. '>=' → logprob: -12.826579093933105
    8. '+=' → logprob: -13.076579093933105
    9. '	' → logprob: -13.576579093933105
    10. '[' → logprob: -14.201579093933105

Token 995: ' dans' (ID: 2671)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.20000362396240234
    2. ' ans' → logprob: -2.4500036239624023
    3. 'ans' → logprob: -3.2000036239624023
    4. ' >=' → logprob: -3.4500036239624023
    5. ' %=' → logprob: -4.950003623962402
    6. '%' → logprob: -5.450003623962402
    7. '≥' → logprob: -6.075003623962402
    8. ' positive' → logprob: -6.075003623962402
    9. '(ans' → logprob: -6.450003623962402
    10. 'mod' → logprob: -6.825003623962402

Token 996: ' l' (ID: 305)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.1765516996383667
    2. 'ans' → logprob: -2.4265518188476562
    3. '[' → logprob: -2.6765518188476562
    4. '0' → logprob: -5.801551818847656
    5. 'range' → logprob: -7.301551818847656
    6. 'mod' → logprob: -7.426551818847656
    7. ' MOD' → logprob: -8.051551818847656
    8. '```' → logprob: -10.176551818847656
    9. '   ' → logprob: -10.801551818847656
    10. 'ANS' → logprob: -11.926551818847656

Token 997: ''' (ID: 6)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.1224474087357521
    2. 'ans' → logprob: -2.2474474906921387
    3. 'range' → logprob: -5.247447490692139
    4. '[' → logprob: -6.497447490692139
    5. ' MOD' → logprob: -7.122447490692139
    6. '```' → logprob: -7.497447490692139
    7. 'mod' → logprob: -7.622447490692139
    8. '>' → logprob: -8.49744701385498
    9. '_MOD' → logprob: -8.74744701385498
    10. '0' → logprob: -9.37244701385498

Token 998: 'interval' (ID: 37558)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.4034345187828876e-05
    2. ' MOD' → logprob: -11.25002384185791
    3. 'ans' → logprob: -11.50002384185791
    4. 'mod' → logprob: -14.62502384185791
    5. '_MOD' → logprob: -15.75002384185791
    6. '[' → logprob: -16.500024795532227
    7. '.MOD' → logprob: -16.875024795532227
    8. 'MO' → logprob: -17.000024795532227
    9. '0' → logprob: -17.875024795532227
    10. 'Mod' → logprob: -18.500024795532227

Token 999: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1129663810133934
    2. 'le' → logprob: -2.237966299057007
    3. '#' → logprob: -9.737966537475586
    4. 'ans' → logprob: -10.862966537475586
    5. '[' → logprob: -11.237966537475586
    6. '(ans' → logprob: -11.612966537475586
    7. 'MOD' → logprob: -11.987966537475586
    8. 'def' → logprob: -12.112966537475586
    9. 'val' → logprob: -12.237966537475586
    10. '_mod' → logprob: -12.362966537475586

Token 1000: ' [' (ID: 723)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5753792524337769
    2. ' ans' → logprob: -1.2003792524337769
    3. '[' → logprob: -2.3253793716430664
    4. '(ans' → logprob: -3.8253793716430664
    5. 'MOD' → logprob: -5.950379371643066
    6. '(' → logprob: -5.950379371643066
    7. '%' → logprob: -6.075379371643066
    8. 'mod' → logprob: -6.200379371643066
    9. ' (' → logprob: -6.700379371643066
    10. ' MOD' → logprob: -6.825379371643066

Token 1001: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. 'MOD' → logprob: -11.125015258789062
    3. ' ' → logprob: -17.375015258789062
    4. '```' → logprob: -18.375015258789062
    5. '   ' → logprob: -18.875015258789062
    6. ' MOD' → logprob: -20.000015258789062
    7. '[' → logprob: -20.125015258789062
    8. 'Mod' → logprob: -20.875015258789062
    9. ']' → logprob: -21.125015258789062
    10. '(' → logprob: -21.250015258789062

Token 1002: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003472633252386004
    2. ' ,' → logprob: -8.875347137451172
    3. ',
' → logprob: -9.250347137451172
    4. '   ' → logprob: -9.750347137451172
    5. ']' → logprob: -10.750347137451172
    6. 'ans' → logprob: -11.250347137451172
    7. ' ans' → logprob: -12.500347137451172
    8. '%' → logprob: -12.875347137451172
    9. 'mod' → logprob: -13.125347137451172
    10. '```' → logprob: -13.375347137451172

Token 1003: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. '_MOD' → logprob: -17.750017166137695
    4. '```' → logprob: -19.375017166137695
    5. '.MOD' → logprob: -19.500017166137695
    6. '   ' → logprob: -19.625017166137695
    7. '998' → logprob: -20.250017166137695
    8. 'MO' → logprob: -21.125017166137695
    9. 'ans' → logprob: -21.875017166137695
    10. 'Mod' → logprob: -21.875017166137695

Token 1004: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4829338788986206
    2. ']:' → logprob: -1.7329338788986206
    3. ',' → logprob: -2.98293399810791
    4. ')' → logprob: -2.98293399810791
    5. '):' → logprob: -2.98293399810791
    6. '],' → logprob: -3.73293399810791
    7. '):
' → logprob: -4.23293399810791
    8. ']:
' → logprob: -4.60793399810791
    9. '])' → logprob: -6.73293399810791
    10. '),' → logprob: -6.98293399810791

Token 1005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006019094958901405
    2. ')' → logprob: -5.131019115447998
    3. ']' → logprob: -10.13101863861084
    4. 'ans' → logprob: -10.88101863861084
    5. 'MOD' → logprob: -11.38101863861084
    6. '),' → logprob: -11.75601863861084
    7. '-' → logprob: -12.00601863861084
    8. '```' → logprob: -12.88101863861084
    9. ' ' → logprob: -14.00601863861084
    10. 'ULO' → logprob: -15.13101863861084

Token 1006: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46401870250701904
    2. ')' → logprob: -2.0890188217163086
    3. '       ' → logprob: -2.0890188217163086
    4. ']' → logprob: -2.8390188217163086
    5. ',
' → logprob: -3.8390188217163086
    6. ')
' → logprob: -4.464018821716309
    7. '   ' → logprob: -4.714018821716309
    8. ':
' → logprob: -5.089018821716309
    9. 'ans' → logprob: -5.589018821716309
    10. ' ,' → logprob: -5.964018821716309

Token 1007: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7693911790847778
    2. ' ans' → logprob: -0.7693911790847778
    3. '   ' → logprob: -2.6443910598754883
    4. '       ' → logprob: -6.269391059875488
    5. '	ans' → logprob: -7.894391059875488
    6. '(ans' → logprob: -9.644391059875488
    7. '```' → logprob: -11.769391059875488
    8. 'if' → logprob: -11.894391059875488
    9. '_ans' → logprob: -12.019391059875488
    10. ' if' → logprob: -13.269391059875488

Token 1008: ' applique' (ID: 180579)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.08214554190635681
    2. 'ans' → logprob: -2.5821454524993896
    3. ' ans' → logprob: -6.332145690917969
    4. ' %=' → logprob: -7.082145690917969
    5. '+=' → logprob: -7.582145690917969
    6. '%' → logprob: -10.582145690917969
    7. '=' → logprob: -10.582145690917969
    8. '	ans' → logprob: -10.957145690917969
    9. '_ans' → logprob: -10.957145690917969
    10. '(ans' → logprob: -11.082145690917969

Token 1009: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.019710257649421692
    2. ' ans' → logprob: -4.019710063934326
    3. '(ans' → logprob: -6.894710063934326
    4. '%' → logprob: -8.519710540771484
    5. '	ans' → logprob: -8.644710540771484
    6. '```' → logprob: -10.019710540771484
    7. ' %=' → logprob: -10.269710540771484
    8. '`' → logprob: -10.644710540771484
    9. '   ' → logprob: -11.019710540771484
    10. '%=' → logprob: -11.144710540771484

Token 1010: ' modulo' (ID: 112372)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4635342061519623
    2. '%' → logprob: -1.4635342359542847
    3. 'mod' → logprob: -2.338534116744995
    4. '%=' → logprob: -3.338534116744995
    5. ' %=' → logprob: -6.088534355163574
    6. ' modulo' → logprob: -6.088534355163574
    7. 'MOD' → logprob: -6.838534355163574
    8. ' ans' → logprob: -6.838534355163574
    9. '`' → logprob: -8.213534355163574
    10. ' modulus' → logprob: -8.713534355163574

Token 1011: ' après' (ID: 16460)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.7889721393585205
    2. '(ans' → logprob: -1.4139721393585205
    3. ' ans' → logprob: -1.6639721393585205
    4. '(M' → logprob: -3.4139721393585205
    5. 'MOD' → logprob: -3.5389721393585205
    6. '(' → logprob: -3.9139721393585205
    7. ' MOD' → logprob: -4.538971900939941
    8. '()' → logprob: -5.038971900939941
    9. '(Mod' → logprob: -5.538971900939941
    10. '(
' → logprob: -5.913971900939941

Token 1012: ' chaque' (ID: 21194)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.38888323307037354
    2. 'MOD' → logprob: -1.1388832330703735
    3. ' MOD' → logprob: -7.138883113861084
    4. ' ans' → logprob: -8.013883590698242
    5. '   ' → logprob: -8.013883590698242
    6. ')' → logprob: -8.763883590698242
    7. 'ANS' → logprob: -8.888883590698242
    8. 'mod' → logprob: -9.388883590698242
    9. '(ans' → logprob: -9.888883590698242
    10. '```' → logprob: -10.388883590698242

Token 1013: ' sou' (ID: 4069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2845189869403839
    2. '%' → logprob: -2.0345189571380615
    3. '%=' → logprob: -2.4095189571380615
    4. ' %=' → logprob: -4.034519195556641
    5. ' ans' → logprob: -6.159519195556641
    6. '=' → logprob: -6.284519195556641
    7. 'mod' → logprob: -6.534519195556641
    8. '%\' → logprob: -6.659519195556641
    9. '%n' → logprob: -7.409519195556641
    10. 'operation' → logprob: -7.659519195556641

Token 1014: 'straction' (ID: 79887)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.1796399354934692
    2. 'b' → logprob: -1.3046399354934692
    3. 'r' → logprob: -1.9296399354934692
    4. 'd' → logprob: -2.1796398162841797
    5. 'g' → logprob: -3.5546398162841797
    6. 'p' → logprob: -3.6796398162841797
    7. '_mod' → logprob: -4.17963981628418
    8. 'ans' → logprob: -4.30463981628418
    9. 'MOD' → logprob: -4.55463981628418
    10. 'm' → logprob: -4.67963981628418

Token 1015: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17876699566841125
    2. ' ans' → logprob: -2.428766965866089
    3. '   ' → logprob: -2.928766965866089
    4. 'ans' → logprob: -4.803767204284668
    5. '	ans' → logprob: -4.803767204284668
    6. '(ans' → logprob: -6.803767204284668
    7. '```' → logprob: -6.803767204284668
    8. '
' → logprob: -6.928767204284668
    9. '        
' → logprob: -7.303767204284668
    10. '\' → logprob: -7.803767204284668

Token 1016: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13346761465072632
    2. '   ' → logprob: -2.758467674255371
    3. ' ans' → logprob: -3.383467674255371
    4. 'ans' → logprob: -4.008467674255371
    5. '	ans' → logprob: -6.008467674255371
    6. '```' → logprob: -6.008467674255371
    7. '(ans' → logprob: -6.383467674255371
    8. '
' → logprob: -7.508467674255371
    9. '\n' → logprob: -7.508467674255371
    10. '        
' → logprob: -7.883467674255371

Token 1017: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.38784074783325195
    2. 'ans' (adapté à ' ans') → logprob: -1.137840747833252
    3. '   ' → logprob: -7.387840747833252
    4. '	ans' → logprob: -8.262840270996094
    5. '(ans' → logprob: -9.637840270996094
    6. '```' → logprob: -11.387840270996094
    7. '_ans' → logprob: -11.762840270996094
    8. '       ' → logprob: -13.262840270996094
    9. ' 
' → logprob: -13.512840270996094
    10. '``' → logprob: -13.637840270996094

Token 1018: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.06259796023368835
    2. ' %=' → logprob: -2.8125979900360107
    3. '=' → logprob: -7.437597751617432
    4. '%' → logprob: -10.18759822845459
    5. ' =' → logprob: -12.81259822845459
    6. '	' → logprob: -15.18759822845459
    7. '+=' → logprob: -15.18759822845459
    8. ')' → logprob: -15.93759822845459
    9. ' %' → logprob: -16.437597274780273
    10. ' ' → logprob: -16.812597274780273

Token 1019: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -14.75
    3. '998' → logprob: -17.25
    4. '_MOD' → logprob: -20.875
    5. '   ' → logprob: -21.5
    6. 'MO' → logprob: -22.5
    7. '.MOD' → logprob: -22.875
    8. 'mod' → logprob: -23.75
    9. '999' → logprob: -24.125
    10. '(mod' → logprob: -24.875

Token 1020: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012944557704031467
    2. 'return' → logprob: -5.26294469833374
    3. '
' → logprob: -5.38794469833374
    4. '<|end|>' → logprob: -6.38794469833374
    5. '    
' → logprob: -7.26294469833374
    6. ' return' → logprob: -8.262944221496582
    7. '	return' → logprob: -8.512944221496582
    8. 'print' → logprob: -9.012944221496582
    9. '```' → logprob: -9.762944221496582
    10. '  
' → logprob: -10.637944221496582

Token 1021: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14193440973758698
    2. '<|end|>' → logprob: -2.891934394836426
    3. 'return' → logprob: -3.266934394836426
    4. '
' → logprob: -3.516934394836426
    5. '    
' → logprob: -5.766934394836426
    6. ' return' → logprob: -6.141934394836426
    7. '	return' → logprob: -6.516934394836426
    8. '```' → logprob: -7.891934394836426
    9. '  
' → logprob: -8.016934394836426
    10. '  ' → logprob: -8.016934394836426

Token 1022: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7592043876647949
    2. 'print' → logprob: -0.7592043876647949
    3. 'return' → logprob: -2.759204387664795
    4. '    
' → logprob: -8.509204864501953
    5. '
' → logprob: -8.884204864501953
    6. '```' → logprob: -9.384204864501953
    7. ' return' → logprob: -9.884204864501953
    8. ' print' → logprob: -10.384204864501953
    9. '#' → logprob: -11.384204864501953
    10. '       ' → logprob: -11.634204864501953

Token 1023: ' corr' (ID: 16963)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1024: 'ige' (ID: 2609)
  Prédit: 'ige'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ige' → logprob: -0.000297685619443655
    2. 'ect' → logprob: -8.375297546386719
    3. 'es' → logprob: -10.375297546386719
    4. 'ège' → logprob: -11.875297546386719
    5. 'est' → logprob: -12.000297546386719
    6. 'e' → logprob: -12.500297546386719
    7. 'iger' → logprob: -12.625297546386719
    8. 'iges' → logprob: -12.750297546386719
    9. 'ès' → logprob: -13.000297546386719
    10. 'igt' → logprob: -13.625297546386719

Token 1025: ' aussi' (ID: 9894)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1026: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1027: ' cas' (ID: 2108)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.08600576967000961
    2. 'd' → logprob: -3.711005687713623
    3. 'ans' → logprob: -4.086005687713623
    4. 'overflow' → logprob: -4.336005687713623
    5. 'code' → logprob: -4.586005687713623
    6. '```' → logprob: -5.961005687713623
    7. 'pro' → logprob: -6.836005687713623
    8. 'possible' → logprob: -6.836005687713623
    9. 'ret' → logprob: -7.086005687713623
    10. 'com' → logprob: -7.086005687713623

Token 1028: ' où' (ID: 15113)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1029: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -2.463036435074173e-05
    2. ' ans' → logprob: -10.750024795532227
    3. '	ans' → logprob: -12.875024795532227
    4. '(ans' → logprob: -15.625024795532227
    5. 'a' → logprob: -16.000024795532227
    6. 'answer' → logprob: -16.125024795532227
    7. '   ' → logprob: -16.500024795532227
    8. '
' → logprob: -17.250024795532227
    9. 'anst' → logprob: -17.625024795532227
    10. '_ans' → logprob: -17.875024795532227

Token 1030: ' devi' (ID: 69772)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0850062444806099
    2. ' <' → logprob: -3.2100062370300293
    3. '<|end|>' → logprob: -3.4600062370300293
    4. '=' → logprob: -4.960006237030029
    5. ' ' → logprob: -7.210006237030029
    6. ' becomes' → logprob: -7.835006237030029
    7. '[' → logprob: -8.085006713867188
    8. ' =' → logprob: -8.460006713867188
    9. '==' → logprob: -8.585006713867188
    10. '   ' → logprob: -8.835006713867188

Token 1031: 'end' (ID: 419)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.18968085944652557
    2. 'nd' → logprob: -2.439680814743042
    3. 'rait' → logprob: -2.689680814743042
    4. 'rt' → logprob: -4.939681053161621
    5. 't' → logprob: -5.564681053161621
    6. 'r' → logprob: -6.064681053161621
    7. 'end' → logprob: -6.689681053161621
    8. 'ent' → logprob: -6.939681053161621
    9. 'ra' → logprob: -8.314681053161621
    10. 'int' → logprob: -8.439681053161621

Token 1032: 'rait' (ID: 16425)
  Prédit: 'rait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rait' → logprob: -0.0006364276050589979
    2. 'ra' → logprob: -7.875636577606201
    3. 'r' → logprob: -9.375636100769043
    4. 't' → logprob: -9.625636100769043
    5. 'ait' → logprob: -10.375636100769043
    6. '<' → logprob: -10.875636100769043
    7. 'rai' → logprob: -11.000636100769043
    8. '```' → logprob: -12.250636100769043
    9. 'ient' → logprob: -12.500636100769043
    10. 'it' → logprob: -12.500636100769043

Token 1033: ' nég' (ID: 55805)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17351332306861877
    2. 'neg' → logprob: -2.173513412475586
    3. ' nég' → logprob: -3.173513412475586
    4. 'negative' → logprob: -6.298513412475586
    5. '<' → logprob: -6.923513412475586
    6. '<n' → logprob: -8.548513412475586
    7. '-n' → logprob: -8.673513412475586
    8. 'nul' → logprob: -8.923513412475586
    9. '```' → logprob: -9.673513412475586
    10. '0' → logprob: -9.798513412475586

Token 1034: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.19116194546222687
    2. ')' → logprob: -2.441161870956421
    3. 'é' → logprob: -4.066162109375
    4. '   ' → logprob: -4.191162109375
    5. '```' → logprob: -4.566162109375
    6. '       ' → logprob: -5.566162109375
    7. 'ans' → logprob: -5.566162109375
    8. 'ative' → logprob: -5.691162109375
    9. 'u' → logprob: -5.691162109375
    10. '0' → logprob: -5.816162109375

Token 1035: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009815707802772522
    2. '<|end|>' → logprob: -5.259815692901611
    3. '    
' → logprob: -6.134815692901611
    4. '
' → logprob: -7.009815692901611
    5. '	return' → logprob: -7.384815692901611
    6. 'return' → logprob: -7.509815692901611
    7. '```' → logprob: -10.00981616973877
    8. '	
' → logprob: -10.00981616973877
    9. '       ' → logprob: -10.13481616973877
    10. '<|end|>' → logprob: -10.25981616973877

Token 1036: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02080054022371769
    2. 'return' → logprob: -5.020800590515137
    3. '
' → logprob: -5.145800590515137
    4. '<|end|>' → logprob: -5.145800590515137
    5. ' return' → logprob: -6.770800590515137
    6. '    
' → logprob: -7.145800590515137
    7. '```' → logprob: -8.770800590515137
    8. '	return' → logprob: -9.520800590515137
    9. '  
' → logprob: -9.770800590515137
    10. ' ' → logprob: -9.895800590515137

Token 1037: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024246484972536564
    2. 'return' → logprob: -6.127424716949463
    3. '    
' → logprob: -9.127424240112305
    4. '```' → logprob: -9.502424240112305
    5. '<|end|>' → logprob: -10.627424240112305
    6. '
' → logprob: -11.002424240112305
    7. ' return' → logprob: -11.502424240112305
    8. '	return' → logprob: -13.252424240112305
    9. '       ' → logprob: -13.502424240112305
    10. 'print' → logprob: -14.252424240112305

Token 1038: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015780634712427855
    2. 'return' → logprob: -6.501577854156494
    3. '   ' → logprob: -9.501578330993652
    4. ' print' → logprob: -14.126578330993652
    5. '```' → logprob: -15.126578330993652
    6. ' return' → logprob: -18.126577377319336
    7. '	print' → logprob: -19.876577377319336
    8. '#print' → logprob: -20.251577377319336
    9. '    
' → logprob: -20.251577377319336
    10. '
' → logprob: -21.001577377319336

Token 1039: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0021493081003427505
    2. 'ichage' → logprob: -6.7521491050720215
    3. 'iche' → logprob: -7.0021491050720215
    4. '   ' → logprob: -10.00214958190918
    5. 'ich' → logprob: -11.12714958190918
    6. '#' → logprob: -12.00214958190918
    7. 'ichier' → logprob: -14.12714958190918
    8. 'cher' → logprob: -14.37714958190918
    9. 'ic' → logprob: -15.00214958190918
    10. '  ' → logprob: -15.25214958190918

Token 1040: ' final' (ID: 1721)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003800296690315008
    2. '(' → logprob: -8.50037956237793
    3. 'ans' → logprob: -8.75037956237793
    4. 'print' → logprob: -11.37537956237793
    5. '   ' → logprob: -12.50037956237793
    6. '(print' → logprob: -13.00037956237793
    7. '()' → logprob: -15.00037956237793
    8. '(answer' → logprob: -16.25037956237793
    9. ' ans' → logprob: -17.00037956237793
    10. '(f' → logprob: -17.62537956237793

Token 1041: ' du' (ID: 1462)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.042149707674980164
    2. 'print' → logprob: -3.792149782180786
    3. '(' → logprob: -4.292149543762207
    4. '   ' → logprob: -5.792149543762207
    5. 'ans' → logprob: -6.917149543762207
    6. '(print' → logprob: -6.917149543762207
    7. '```' → logprob: -12.042149543762207
    8. ' print' → logprob: -12.917149543762207
    9. '(answer' → logprob: -12.917149543762207
    10. '()' → logprob: -13.042149543762207

Token 1042: ' résultat' (ID: 62556)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029802558943629265
    2. '(ans' → logprob: -3.5298025608062744
    3. 'answer' → logprob: -10.654802322387695
    4. 'result' → logprob: -10.779802322387695
    5. ' ans' → logprob: -12.154802322387695
    6. 'print' → logprob: -13.029802322387695
    7. '	ans' → logprob: -15.779802322387695
    8. '(' → logprob: -16.904802322387695
    9. '(answer' → logprob: -17.529802322387695
    10. 'res' → logprob: -17.654802322387695

Token 1043: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1270047426223755
    2. 'print' → logprob: -2.127004623413086
    3. ' print' → logprob: -9.502004623413086
    4. '```' → logprob: -13.627004623413086
    5. '	print' → logprob: -14.377004623413086
    6. '       ' → logprob: -16.752004623413086
    7. '(print' → logprob: -17.502004623413086
    8. '    
' → logprob: -17.627004623413086
    9. '
' → logprob: -18.877004623413086
    10. '   ' → logprob: -19.002004623413086

Token 1044: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.32523515378125e-05
    2. ' print' → logprob: -10.250062942504883
    3. '   ' → logprob: -10.500062942504883
    4. '```' → logprob: -15.375062942504883
    5. '	print' → logprob: -18.375062942504883
    6. '
' → logprob: -20.375062942504883
    7. '(print' → logprob: -21.750062942504883
    8. '``' → logprob: -22.750062942504883
    9. '  ' → logprob: -24.250062942504883
    10. '`' → logprob: -24.250062942504883

Token 1045: '()' (ID: 416)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.375016212463379
    3. 'ans' → logprob: -12.375016212463379
    4. '()' → logprob: -15.375016212463379
    5. '(answer' → logprob: -15.625016212463379
    6. '(f' → logprob: -15.750016212463379
    7. ' (' → logprob: -15.875016212463379
    8. '(
' → logprob: -17.875017166137695
    9. '((' → logprob: -18.000017166137695
    10. '(result' → logprob: -18.000017166137695

Token 1046: ' en' (ID: 469)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -10.875027656555176
    3. 'ans' → logprob: -12.125027656555176
    4. '(f' → logprob: -13.625027656555176
    5. '()' → logprob: -14.000027656555176
    6. '(answer' → logprob: -14.500027656555176
    7. '(print' → logprob: -16.25002670288086
    8. ' (' → logprob: -16.37502670288086
    9. '((' → logprob: -16.87502670288086
    10. '   ' → logprob: -17.12502670288086

Token 1047: 'voie' (ID: 70072)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.729935348033905
    2. 'ans' → logprob: -1.3549354076385498
    3. '(ans' → logprob: -2.10493540763855
    4. 'python' → logprob: -2.85493540763855
    5. '```' → logprob: -3.35493540763855
    6. 'fin' → logprob: -3.72993540763855
    7. 'Python' → logprob: -5.479935169219971
    8. 'final' → logprob: -6.229935169219971
    9. 'chaine' → logprob: -6.354935169219971
    10. '()' → logprob: -6.354935169219971

Token 1048: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.758300438988954e-05
    2. 'ans' → logprob: -9.250097274780273
    3. '(' → logprob: -13.500097274780273
    4. '()' → logprob: -17.000097274780273
    5. '(
' → logprob: -17.250097274780273
    6. '(answer' → logprob: -17.750097274780273
    7. '	ans' → logprob: -18.000097274780273
    8. '   ' → logprob: -18.500097274780273
    9. ' (' → logprob: -18.750097274780273
    10. '(f' → logprob: -19.250097274780273

Token 1049: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.10115424543619156
    2. 'ans' → logprob: -2.351154327392578
    3. 'result' → logprob: -7.101154327392578
    4. '(' → logprob: -10.101154327392578
    5. 'answer' → logprob: -10.476154327392578
    6. 'rés' → logprob: -10.726154327392578
    7. '(result' → logprob: -11.226154327392578
    8. '(answer' → logprob: -11.851154327392578
    9. '()' → logprob: -12.101154327392578
    10. 'final' → logprob: -13.601154327392578

Token 1050: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -11.375020980834961
    3. 'ans' → logprob: -12.375020980834961
    4. '()' → logprob: -12.500020980834961
    5. '(
' → logprob: -14.000020980834961
    6. '   ' → logprob: -15.875020980834961
    7. ' (' → logprob: -17.50002098083496
    8. '(answer' → logprob: -17.62502098083496
    9. '	ans' → logprob: -18.00002098083496
    10. ' ' → logprob: -18.37502098083496

Token 1051: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5759397745132446
    2. '(ans' → logprob: -0.8259397745132446
    3. ' ans' → logprob: -15.825940132141113
    4. '	ans' → logprob: -16.075939178466797
    5. 'answer' → logprob: -16.700939178466797
    6. '(' → logprob: -17.825939178466797
    7. '(answer' → logprob: -17.950939178466797
    8. '```' → logprob: -17.950939178466797
    9. '(
' → logprob: -18.825939178466797
    10. 'ANS' → logprob: -18.825939178466797

Token 1052: ' à' (ID: 1221)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004349890630692244
    2. '(' → logprob: -5.504349708557129
    3. '()' → logprob: -8.254349708557129
    4. '(
' → logprob: -12.504349708557129
    5. 'ans' → logprob: -12.629349708557129
    6. '(f' → logprob: -13.879349708557129
    7. '   ' → logprob: -14.129349708557129
    8. ' (' → logprob: -14.504349708557129
    9. '(answer' → logprob: -14.754349708557129
    10. '("")' → logprob: -15.004349708557129

Token 1053: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4498210847377777
    2. 'l' → logprob: -1.3248211145401
    3. 'print' → logprob: -2.5748209953308105
    4. '```' → logprob: -4.8248209953308105
    5. 'stdout' → logprob: -5.4498209953308105
    6. 'output' → logprob: -5.4498209953308105
    7. ')' → logprob: -6.3248209953308105
    8. 'input' → logprob: -7.3248209953308105
    9. '   ' → logprob: -7.4498209953308105
    10. ' la' → logprob: -8.449821472167969

Token 1054: ' sortie' (ID: 52761)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.7365124821662903
    2. 'sort' → logprob: -1.1115124225616455
    3. 'console' → logprob: -1.8615124225616455
    4. 'standard' → logprob: -3.6115124225616455
    5. ' sortie' → logprob: -4.986512660980225
    6. 'output' → logprob: -6.611512660980225
    7. 'terminal' → logprob: -8.486512184143066
    8. 'print' → logprob: -8.861512184143066
    9. '```' → logprob: -8.986512184143066
    10. 'std' → logprob: -9.111512184143066

Token 1055: ' standard' (ID: 7024)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2522280514240265
    2. '()' → logprob: -1.502228021621704
    3. '(' → logprob: -8.377227783203125
    4. 'ans' → logprob: -9.752227783203125
    5. '())' → logprob: -12.502227783203125
    6. '()
' → logprob: -12.877227783203125
    7. '("")' → logprob: -14.127227783203125
    8. '()`' → logprob: -14.127227783203125
    9. '().' → logprob: -14.877227783203125
    10. '()]' → logprob: -15.252227783203125

Token 1056: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05655120313167572
    2. 'print' → logprob: -2.931551218032837
    3. '(ans' → logprob: -7.306550979614258
    4. '()' → logprob: -7.931550979614258
    5. 'ans' → logprob: -8.431550979614258
    6. ')' → logprob: -8.681550979614258
    7. ' print' → logprob: -9.556550979614258
    8. '()
' → logprob: -9.806550979614258
    9. '```' → logprob: -9.931550979614258
    10. '(print' → logprob: -10.556550979614258

Token 1057: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14530031383037567
    2. 'print' → logprob: -2.0203003883361816
    3. '```' → logprob: -6.270300388336182
    4. '(ans' → logprob: -8.395299911499023
    5. ' print' → logprob: -8.770299911499023
    6. '(print' → logprob: -8.895299911499023
    7. 'ans' → logprob: -9.020299911499023
    8. '(' → logprob: -10.895299911499023
    9. '``' → logprob: -11.020299911499023
    10. '()' → logprob: -11.145299911499023

Token 1058: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015217645559459925
    2. '   ' → logprob: -6.501521587371826
    3. ' print' → logprob: -11.001522064208984
    4. '```' → logprob: -13.501522064208984
    5. 'ans' → logprob: -14.126522064208984
    6. '(print' → logprob: -14.626522064208984
    7. '	print' → logprob: -16.876522064208984
    8. '(ans' → logprob: -17.001522064208984
    9. 'pr' → logprob: -17.501522064208984
    10. 'println' → logprob: -18.126522064208984

Token 1059: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.0629870858974755e-05
    2. '(' → logprob: -9.75006103515625
    3. 'ans' → logprob: -13.37506103515625
    4. ' (' → logprob: -14.50006103515625
    5. '(
' → logprob: -15.87506103515625
    6. '()' → logprob: -17.62506103515625
    7. '(answer' → logprob: -17.75006103515625
    8. '((' → logprob: -18.00006103515625
    9. '(abs' → logprob: -18.12506103515625
    10. '(f' → logprob: -18.37506103515625

Token 1060: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08497416228055954
    2. '()' → logprob: -2.7099740505218506
    3. ')' → logprob: -4.20997428894043
    4. '()
' → logprob: -10.83497428894043
    5. '   ' → logprob: -11.08497428894043
    6. '(' → logprob: -11.20997428894043
    7. '())
' → logprob: -11.45997428894043
    8. ' ())' → logprob: -11.45997428894043
    9. '()}' → logprob: -13.45997428894043
    10. ' )' → logprob: -13.45997428894043

Token 1061: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1062: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01864219456911087
    2. 'main' → logprob: -4.143642425537109
    3. '
' → logprob: -6.143642425537109
    4. '```' → logprob: -9.14364242553711
    5. ' if' → logprob: -9.26864242553711
    6. '#' → logprob: -9.26864242553711
    7. '(main' → logprob: -9.64364242553711
    8. '<|end|>' → logprob: -10.01864242553711
    9. '\n' → logprob: -10.89364242553711
    10. ' main' → logprob: -11.14364242553711

Token 1063: 'el' (ID: 296)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6310858726501465
    2. 'end' → logprob: -1.1310858726501465
    3. 'if' → logprob: -3.2560858726501465
    4. 'el' → logprob: -3.3810858726501465
    5. 'ear' → logprob: -3.8810858726501465
    6. 'e' → logprob: -4.0060858726501465
    7. 'def' → logprob: -4.1310858726501465
    8. 'le' → logprob: -5.5060858726501465
    9. 'en' → logprob: -5.6310858726501465
    10. '#' → logprob: -6.1310858726501465

Token 1064: ' de' (ID: 334)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.33587074279785156
    2. '(main' → logprob: -2.0858707427978516
    3. '()' → logprob: -2.4608707427978516
    4. ' main' → logprob: -3.0858707427978516
    5. '(' → logprob: -3.7108707427978516
    6. 'def' → logprob: -6.085870742797852
    7. '(
' → logprob: -6.335870742797852
    8. 'if' → logprob: -7.210870742797852
    9. '```' → logprob: -8.085870742797852
    10. '	main' → logprob: -8.585870742797852

Token 1065: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.3856492842023727e-06
    2. ' main' → logprob: -13.625000953674316
    3. '(main' → logprob: -17.000001907348633
    4. '__' → logprob: -18.250001907348633
    5. '	main' → logprob: -18.500001907348633
    6. 'def' → logprob: -18.750001907348633
    7. '_main' → logprob: -19.125001907348633
    8. 'if' → logprob: -19.625001907348633
    9. 'ma' → logprob: -19.625001907348633
    10. '```' → logprob: -20.250001907348633

Token 1066: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0015841391868889332
    2. 'if' → logprob: -6.501584053039551
    3. ' main' → logprob: -9.87658405303955
    4. '__' → logprob: -10.50158405303955
    5. 'def' → logprob: -13.50158405303955
    6. '```' → logprob: -13.75158405303955
    7. '`' → logprob: -15.50158405303955
    8. '(main' → logprob: -15.87658405303955
    9. ' if' → logprob: -16.876585006713867
    10. '	main' → logprob: -17.001585006713867

Token 1067: ' principale' (ID: 68926)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.054500666621607e-06
    2. ' main' → logprob: -13.37500286102295
    3. '(main' → logprob: -13.75000286102295
    4. '()
' → logprob: -15.87500286102295
    5. '```' → logprob: -16.125003814697266
    6. '()' → logprob: -16.125003814697266
    7. 'def' → logprob: -17.625003814697266
    8. '
' → logprob: -18.500003814697266
    9. '_main' → logprob: -18.625003814697266
    10. '	main' → logprob: -18.625003814697266

Token 1068: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08222130686044693
    2. '()
' → logprob: -3.207221269607544
    3. 'main' → logprob: -3.457221269607544
    4. '(main' → logprob: -5.332221508026123
    5. 'if' → logprob: -6.957221508026123
    6. '(
' → logprob: -7.957221508026123
    7. '()' → logprob: -8.207221031188965
    8. ' main' → logprob: -9.207221031188965
    9. ' 
' → logprob: -9.332221031188965
    10. '

' → logprob: -9.332221031188965

Token 1069: ' c' (ID: 274)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043102685594931245
    2. 'if' → logprob: -7.750431060791016
    3. ' main' → logprob: -15.250431060791016
    4. '```' → logprob: -17.125431060791016
    5. '(main' → logprob: -18.625431060791016
    6. '
' → logprob: -19.125431060791016
    7. '	main' → logprob: -19.125431060791016
    8. '_main' → logprob: -20.000431060791016
    9. '.main' → logprob: -21.500431060791016
    10. '__' → logprob: -22.125431060791016

Token 1070: ''est' (ID: 6616)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38701683282852173
    2. 'if' → logprob: -1.137016773223877
    3. 'a' → logprob: -9.262017250061035
    4. 'def' → logprob: -10.512017250061035
    5. ' main' → logprob: -11.887017250061035
    6. '
' → logprob: -12.637017250061035
    7. '```' → logprob: -13.262017250061035
    8. 'm' → logprob: -13.387017250061035
    9. '_main' → logprob: -13.512017250061035
    10. 'all' → logprob: -13.637017250061035

Token 1071: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03732718899846077
    2. 'main' → logprob: -3.912327289581299
    3. '__' → logprob: -4.662327289581299
    4. '_' → logprob: -5.537327289581299
    5. ' main' → logprob: -6.412327289581299
    6. 'def' → logprob: -7.412327289581299
    7. ' if' → logprob: -8.41232681274414
    8. 'le' → logprob: -8.66232681274414
    9. '(main' → logprob: -9.16232681274414
    10. '_main' → logprob: -9.16232681274414

Token 1072: ' point' (ID: 2438)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1766921728849411
    2. 'standard' → logprob: -2.551692247390747
    3. 'point' → logprob: -3.301692247390747
    4. ' point' → logprob: -3.801692247390747
    5. ' standard' → logprob: -3.801692247390747
    6. ' if' → logprob: -6.801692008972168
    7. 'common' → logprob: -8.676692008972168
    8. '```' → logprob: -8.926692008972168
    9. 'entrée' → logprob: -9.176692008972168
    10. ' typical' → logprob: -9.176692008972168

Token 1073: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.009236401878297329
    2. 'd' → logprob: -4.8842363357543945
    3. 'if' → logprob: -7.6342363357543945
    4. '_' → logprob: -7.7592363357543945
    5. ' if' → logprob: -8.884236335754395
    6. '  ' → logprob: -9.009236335754395
    7. ' de' → logprob: -9.509236335754395
    8. ' ' → logprob: -9.884236335754395
    9. '   ' → logprob: -10.134236335754395
    10. '   
' → logprob: -10.134236335754395

Token 1074: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.10096439719200134
    2. 'entrée' → logprob: -2.350964307785034
    3. '__' → logprob: -7.850964546203613
    4. '’entrée' → logprob: -9.100964546203613
    5. 'entr' → logprob: -9.225964546203613
    6. ''' → logprob: -9.725964546203613
    7. 'entry' → logprob: -9.975964546203613
    8. '_' → logprob: -10.975964546203613
    9. '```' → logprob: -11.600964546203613
    10. 'entrant' → logprob: -12.600964546203613

Token 1075: ' du' (ID: 1462)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20464195311069489
    2. '()
' → logprob: -2.5796420574188232
    3. '(
' → logprob: -2.8296420574188232
    4. 'main' → logprob: -3.7046420574188232
    5. '
' → logprob: -4.579641819000244
    6. '(main' → logprob: -4.704641819000244
    7. '(' → logprob: -6.079641819000244
    8. '()' → logprob: -6.579641819000244
    9. 'def' → logprob: -7.454641819000244
    10. ' if' → logprob: -7.704641819000244

Token 1076: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.04569998010993004
    2. 'program' → logprob: -3.2957000732421875
    3. 'script' → logprob: -5.0457000732421875
    4. ' programme' → logprob: -6.7957000732421875
    5. 'programm' → logprob: -10.545700073242188
    6. 'programma' → logprob: -11.170700073242188
    7. ' script' → logprob: -11.295700073242188
    8. 'code' → logprob: -11.420700073242188
    9. 'prog' → logprob: -12.670700073242188
    10. 'Programme' → logprob: -12.920700073242188

Token 1077: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024982674047350883
    2. 'main' → logprob: -3.7749826908111572
    3. 'if' → logprob: -7.024982452392578
    4. '(main' → logprob: -7.649982452392578
    5. '()
' → logprob: -8.774982452392578
    6. ' main' → logprob: -9.899982452392578
    7. '(
' → logprob: -9.899982452392578
    8. '

' → logprob: -10.274982452392578
    9. '  
' → logprob: -10.399982452392578
    10. ' 
' → logprob: -11.024982452392578

Token 1078: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.4881879400927573e-05
    2. '
' → logprob: -10.500035285949707
    3. 'if' → logprob: -12.000035285949707
    4. ' main' → logprob: -14.125035285949707
    5. '(main' → logprob: -15.000035285949707
    6. '```' → logprob: -16.25003433227539
    7. '	main' → logprob: -17.12503433227539
    8. '_main' → logprob: -18.50003433227539
    9. 'm' → logprob: -19.75003433227539
    10. '    
' → logprob: -19.87503433227539

Token 1079: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1077
Tokens correctement prédits (1ère position, stricte): 274
Tokens correctement prédits (1ère position, avec adaptation): 284
Tokens correctement prédits (top 10): 588
Précision stricte (1ère position): 25.44%
Précision adaptée (1ère position): 26.37%
Précision (top 10): 54.60%
================================================================================
