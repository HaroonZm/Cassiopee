================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
if N % 2 == 0:
    res = N // 2
else:
    res = N // 2 + 1
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011975488450843841
    2. '```' → logprob: -10.250120162963867
    3. '`' → logprob: -10.625120162963867
    4. '(N' → logprob: -11.125120162963867
    5. '(
' → logprob: -11.375120162963867
    6. '('' → logprob: -11.750120162963867
    7. ''' → logprob: -11.875120162963867
    8. '("("' → logprob: -12.125120162963867
    9. '(input' → logprob: -12.875120162963867
    10. ' (' → logprob: -13.125120162963867

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49343961477279663
    2. 'if' → logprob: -1.1184396743774414
    3. 'x' → logprob: -4.368439674377441
    4. 's' → logprob: -4.493439674377441
    5. 'i' → logprob: -4.618439674377441
    6. 'a' → logprob: -5.618439674377441
    7. '`' → logprob: -6.118439674377441
    8. 'f' → logprob: -6.243439674377441
    9. 'print' → logprob: -6.243439674377441
    10. 'sum' → logprob: -6.243439674377441

Token 6: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.31407231092453003
    2. ' ' → logprob: -1.3140723705291748
    3. 'N' → logprob: -7.314072132110596
    4. ' ' → logprob: -9.689072608947754
    5. '  ' → logprob: -10.314072608947754
    6. ' not' → logprob: -11.314072608947754
    7. ' a' → logprob: -11.564072608947754
    8. ' (' → logprob: -12.439072608947754
    9. '_' → logprob: -12.689072608947754
    10. ' n' → logprob: -13.314072608947754

Token 7: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16419465839862823
    2. ' ' → logprob: -2.4141945838928223
    3. ' >=' → logprob: -3.9141945838928223
    4. ' <' → logprob: -4.164194583892822
    5. ' %' → logprob: -4.664194583892822
    6. ' ==' → logprob: -4.789194583892822
    7. '>' → logprob: -5.414194583892822
    8. ' <=' → logprob: -5.789194583892822
    9. '%' → logprob: -7.664194583892822
    10. '==' → logprob: -8.91419506072998

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2812546491622925
    2. '2' → logprob: -1.4062546491622925
    3. '3' → logprob: -10.156254768371582
    4. '4' → logprob: -10.156254768371582
    5. '```' → logprob: -11.656254768371582
    6. '32' → logprob: -12.031254768371582
    7. '1' → logprob: -12.281254768371582
    8. '10' → logprob: -13.031254768371582
    9. '5' → logprob: -13.906254768371582
    10. ' ```' → logprob: -14.156254768371582

Token 9: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004828222561627626
    2. '3' → logprob: -5.379828453063965
    3. '4' → logprob: -9.379828453063965
    4. '5' → logprob: -10.129828453063965
    5. '10' → logprob: -10.504828453063965
    6. '7' → logprob: -10.754828453063965
    7. ' ' → logprob: -10.754828453063965
    8. '1' → logprob: -12.129828453063965
    9. '```' → logprob: -13.004828453063965
    10. '6' → logprob: -13.129828453063965

Token 10: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15322686731815338
    2. '==' → logprob: -2.278226852416992
    3. ' !=' → logprob: -3.403226852416992
    4. '=' → logprob: -5.903226852416992
    5. '!=' → logprob: -6.528226852416992
    6. ' ' → logprob: -7.028226852416992
    7. ' =' → logprob: -7.028226852416992
    8. ':' → logprob: -8.778226852416992
    9. ')' → logprob: -9.403226852416992
    10. '!' → logprob: -9.903226852416992

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34846556186676025
    2. '0' → logprob: -1.2234655618667603
    3. '1' → logprob: -10.973465919494629
    4. '2' → logprob: -13.098465919494629
    5. ' ' → logprob: -14.223465919494629
    6. '3' → logprob: -14.973465919494629
    7. '```' → logprob: -15.723465919494629
    8. '  ' → logprob: -15.723465919494629
    9. '4' → logprob: -15.848465919494629
    10. '==' → logprob: -16.348464965820312

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07890168577432632
    2. ' ' → logprob: -2.578901767730713
    3. '1' → logprob: -11.453901290893555
    4. '2' → logprob: -13.578901290893555
    5. '```' → logprob: -17.828901290893555
    6. '4' → logprob: -18.453901290893555
    7. '  ' → logprob: -18.578901290893555
    8. ' ' → logprob: -18.703901290893555
    9. '3' → logprob: -19.078901290893555
    10. '   ' → logprob: -19.891401290893555

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.796184723294573e-06
    2. ' :' → logprob: -13.375005722045898
    3. ':**' → logprob: -13.375005722045898
    4. ':
' → logprob: -14.250005722045898
    5. '':' → logprob: -14.375005722045898
    6. '):' → logprob: -14.500005722045898
    7. '>:' → logprob: -15.125005722045898
    8. '':'' → logprob: -15.250005722045898
    9. '":' → logprob: -16.5000057220459
    10. ':return' → logprob: -16.7500057220459

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16379904747009277
    2. ' print' → logprob: -1.9137990474700928
    3. 'print' → logprob: -5.788799285888672
    4. '    
' → logprob: -8.538799285888672
    5. '    ' → logprob: -9.663799285888672
    6. ' ' → logprob: -9.913799285888672
    7. '```' → logprob: -9.913799285888672
    8. '\' → logprob: -10.038799285888672
    9. '\n' → logprob: -10.538799285888672
    10. '	print' → logprob: -10.788799285888672

Token 15: ' res' (ID: 694)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5924760699272156
    2. '   ' → logprob: -0.9674760699272156
    3. 'print' → logprob: -2.7174761295318604
    4. '    ' → logprob: -8.717475891113281
    5. ' ' → logprob: -8.842475891113281
    6. '    
' → logprob: -8.842475891113281
    7. '\' → logprob: -8.967475891113281
    8. '```' → logprob: -9.842475891113281
    9. ' 
' → logprob: -9.967475891113281
    10. '`' → logprob: -9.967475891113281

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7869971990585327
    2. 'ult' → logprob: -0.9119971990585327
    3. '=' → logprob: -2.5369973182678223
    4. 'ults' → logprob: -3.5369973182678223
    5. ' ' → logprob: -3.6619973182678223
    6. 's' → logprob: -5.536997318267822
    7. 'u' → logprob: -5.911997318267822
    8. 'ul' → logprob: -6.911997318267822
    9. 'ultat' → logprob: -7.536997318267822
    10. '   ' → logprob: -8.661996841430664

Token 17: ' N' (ID: 478)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6713878512382507
    2. ' N' → logprob: -1.4213879108428955
    3. ' "' → logprob: -1.5463879108428955
    4. ''' → logprob: -4.671387672424316
    5. '"N' → logprob: -4.671387672424316
    6. 'N' → logprob: -4.796387672424316
    7. ' '' → logprob: -5.421387672424316
    8. ' ' → logprob: -6.296387672424316
    9. '0' → logprob: -7.421387672424316
    10. ''N' → logprob: -8.296387672424316

Token 18: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5015560984611511
    2. ' +' → logprob: -1.251556158065796
    3. ' else' → logprob: -3.251556158065796
    4. 'else' → logprob: -3.876556158065796
    5. '   ' → logprob: -4.626555919647217
    6. ' ' → logprob: -4.751555919647217
    7. ' //' → logprob: -4.876555919647217
    8. '*' → logprob: -5.251555919647217
    9. '```' → logprob: -5.501555919647217
    10. ' *' → logprob: -5.751555919647217

Token 19: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005929863080382347
    2. ' ' → logprob: -5.130929946899414
    3. '```' → logprob: -15.130929946899414
    4. ' ' → logprob: -15.380929946899414
    5. '۲' → logprob: -16.130929946899414
    6. '3' → logprob: -16.193429946899414
    7. '4' → logprob: -16.568429946899414
    8. '２' → logprob: -16.630929946899414
    9. '  ' → logprob: -16.755929946899414
    10. '1' → logprob: -16.943429946899414

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.625017166137695
    4. '3' → logprob: -16.250017166137695
    5. '   ' → logprob: -16.625017166137695
    6. '4' → logprob: -16.750017166137695
    7. '  ' → logprob: -16.875017166137695
    8. '1' → logprob: -17.000017166137695
    9. '۲' → logprob: -18.375017166137695
    10. '
' → logprob: -18.562517166137695

Token 21: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0017602674197405577
    2. ' else' → logprob: -6.626760482788086
    3. '
' → logprob: -8.501760482788086
    4. '*' → logprob: -9.751760482788086
    5. '```' → logprob: -10.251760482788086
    6. 'elif' → logprob: -10.501760482788086
    7. '    
' → logprob: -10.626760482788086
    8. '+' → logprob: -10.876760482788086
    9. '\n' → logprob: -11.251760482788086
    10. '+
' → logprob: -11.376760482788086

Token 22: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.005141965579241514
    2. ' else' → logprob: -5.630141735076904
    3. 'print' → logprob: -7.630141735076904
    4. '*' → logprob: -7.755141735076904
    5. '    
' → logprob: -8.880142211914062
    6. '
' → logprob: -9.380142211914062
    7. '   ' → logprob: -9.755142211914062
    8. '%' → logprob: -9.880142211914062
    9. '+' → logprob: -10.005142211914062
    10. '  
' → logprob: -10.130142211914062

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000340111117111519
    2. ':
' → logprob: -8.000340461730957
    3. '   ' → logprob: -12.625340461730957
    4. ' :' → logprob: -13.875340461730957
    5. ':
' → logprob: -16.00033950805664
    6. '：' → logprob: -16.62533950805664
    7. '```' → logprob: -16.75033950805664
    8. ':return' → logprob: -17.00033950805664
    9. '=' → logprob: -17.12533950805664
    10. ':\' → logprob: -17.12533950805664

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21502816677093506
    2. '    ' → logprob: -1.965028166770935
    3. '1' → logprob: -3.4650282859802246
    4. '\n' → logprob: -5.090028285980225
    5. ' ' → logprob: -5.840028285980225
    6. ''\' → logprob: -5.840028285980225
    7. '\' → logprob: -6.215028285980225
    8. '    
' → logprob: -6.590028285980225
    9. ''' → logprob: -6.590028285980225
    10. '```' → logprob: -7.215028285980225

Token 25: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.1420907974243164
    2. '   ' → logprob: -2.8920907974243164
    3. 'res' (adapté à ' res') → logprob: -3.3920907974243164
    4. ' N' → logprob: -4.017090797424316
    5. ' (' → logprob: -4.267090797424316
    6. '1' → logprob: -6.017090797424316
    7. 'N' → logprob: -6.142090797424316
    8. '(' → logprob: -6.517090797424316
    9. ' ' → logprob: -6.767090797424316
    10. '    ' → logprob: -7.017090797424316

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02486383728682995
    2. '=' → logprob: -3.7748637199401855
    3. ' ' → logprob: -6.7748637199401855
    4. ' +=' → logprob: -8.149864196777344
    5. ' +' → logprob: -9.649864196777344
    6. '+' → logprob: -9.774864196777344
    7. '```' → logprob: -11.024864196777344
    8. '    ' → logprob: -11.399864196777344
    9. ')' → logprob: -11.524864196777344
    10. '   ' → logprob: -11.899864196777344

Token 27: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1361140012741089
    2. ' N' → logprob: -2.5111141204833984
    3. '(N' → logprob: -3.7611141204833984
    4. ' (' → logprob: -4.636114120483398
    5. '3' → logprob: -4.761114120483398
    6. '(' → logprob: -6.511114120483398
    7. '0' → logprob: -6.886114120483398
    8. '1' → logprob: -7.261114120483398
    9. ' ' → logprob: -7.636114120483398
    10. '-N' → logprob: -8.261114120483398

Token 28: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5335339307785034
    2. ' +' → logprob: -2.283534049987793
    3. ' ' → logprob: -2.533534049987793
    4. '*' → logprob: -2.533534049987793
    5. '%' → logprob: -2.658534049987793
    6. ' *' → logprob: -3.658534049987793
    7. '```' → logprob: -4.283534049987793
    8. ' //' → logprob: -5.283534049987793
    9. '\n' → logprob: -5.408534049987793
    10. '<|end|>' → logprob: -5.408534049987793

Token 29: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028065370861440897
    2. ' ' → logprob: -5.877806663513184
    3. '1' → logprob: -13.877806663513184
    4. '  ' → logprob: -15.127806663513184
    5. '```' → logprob: -15.627806663513184
    6. '3' → logprob: -16.252805709838867
    7. '   ' → logprob: -16.252805709838867
    8. '۲' → logprob: -17.377805709838867
    9. '２' → logprob: -17.752805709838867
    10. ' ' → logprob: -18.190305709838867

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.37500286102295
    3. '1' → logprob: -14.00000286102295
    4. '```' → logprob: -17.250001907348633
    5. '3' → logprob: -17.750001907348633
    6. '۲' → logprob: -18.625001907348633
    7. '２' → logprob: -18.750001907348633
    8. '  ' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.375001907348633
    10. '-' → logprob: -19.812501907348633

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030110519379377365
    2. ' +' → logprob: -3.5301105976104736
    3. '+
' → logprob: -8.405110359191895
    4. '-' → logprob: -9.280110359191895
    5. ' +
' → logprob: -10.905110359191895
    6. ' ' → logprob: -11.905110359191895
    7. '+

' → logprob: -12.030110359191895
    8. '```' → logprob: -13.280110359191895
    9. ' +

' → logprob: -13.655110359191895
    10. '(' → logprob: -13.780110359191895

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008054602658376098
    2. ' ' → logprob: -7.125805377960205
    3. '  ' → logprob: -15.000805854797363
    4. 'N' → logprob: -15.500805854797363
    5. '(' → logprob: -15.625805854797363
    6. ' N' → logprob: -15.625805854797363
    7. '2' → logprob: -16.750804901123047
    8. '0' → logprob: -17.125804901123047
    9. ' (' → logprob: -17.375804901123047
    10. '+' → logprob: -17.375804901123047

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'N' → logprob: -15.750001907348633
    4. '(' → logprob: -16.125001907348633
    5. '2' → logprob: -17.625001907348633
    6. '0' → logprob: -18.500001907348633
    7. '(N' → logprob: -18.500001907348633
    8. '+' → logprob: -19.125001907348633
    9. '  ' → logprob: -19.500001907348633
    10. '-' → logprob: -19.625001907348633

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5352703332901001
    2. '\n' → logprob: -1.9102703332901
    3. 'print' → logprob: -2.0352702140808105
    4. '<|end|>' → logprob: -2.1602702140808105
    5. '```' → logprob: -4.6602702140808105
    6. '#' → logprob: -5.9102702140808105
    7. '\' → logprob: -6.1602702140808105
    8. '  
' → logprob: -6.4102702140808105
    9. ' 
' → logprob: -6.4102702140808105
    10. ' ' → logprob: -7.5352702140808105

Token 35: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031686946749687195
    2. '
' → logprob: -6.12816858291626
    3. '<|end|>' → logprob: -8.128169059753418
    4. '\n' → logprob: -8.503169059753418
    5. ' print' → logprob: -8.753169059753418
    6. '#' → logprob: -9.128169059753418
    7. '```' → logprob: -9.253169059753418
    8. '\' → logprob: -9.878169059753418
    9. ')' → logprob: -10.878169059753418
    10. ' 
' → logprob: -11.253169059753418

Token 36: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061969365924596786
    2. '(res' → logprob: -2.81196928024292
    3. '('' → logprob: -14.311969757080078
    4. '()' → logprob: -15.061969757080078
    5. 'res' → logprob: -15.686969757080078
    6. '(
' → logprob: -15.811969757080078
    7. '("("' → logprob: -15.936969757080078
    8. '(`' → logprob: -16.311969757080078
    9. ' (' → logprob: -16.311969757080078
    10. '((' → logprob: -16.811969757080078

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.75
    3. ')`' → logprob: -17.625
    4. ' )' → logprob: -18.0
    5. '`)' → logprob: -18.375
    6. ')
' → logprob: -18.625
    7. '')' → logprob: -18.875
    8. '）' → logprob: -20.375
    9. '#' → logprob: -20.625
    10. '}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 33
Précision stricte (1ère position): 51.43%
Précision adaptée (1ère position): 51.43%
Précision (top 10): 94.29%
================================================================================
