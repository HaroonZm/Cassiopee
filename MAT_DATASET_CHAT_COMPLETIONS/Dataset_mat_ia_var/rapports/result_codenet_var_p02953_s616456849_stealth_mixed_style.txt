================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
heights = [int(x) for x in input().split()]

def check(hs):
    if len(hs)==1:
        return 'Yes'
    for (idx, curr) in enumerate(hs[1:], 1):
        if hs[idx-1]<curr:
            hs[idx]=curr-1
    if all([hs[i-1]<=hs[i] for i in range(1,len(hs))]):
        return 'Yes'
    return 'No'

print(check(heights))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'he' (ID: 273)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: 'ights' (ID: 3635)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.738624095916748
    2. 'l' → logprob: -1.238624095916748
    3. 'a' → logprob: -1.738624095916748
    4. 'ights' → logprob: -4.113624095916748
    5. 'x' → logprob: -4.363624095916748
    6. 'ap' → logprob: -4.613624095916748
    7. 'ad' → logprob: -5.113624095916748
    8. 'lp' → logprob: -6.113624095916748
    9. 'print' → logprob: -6.363624095916748
    10. 'ig' → logprob: -6.488624095916748

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010499580530449748
    2. '[]' → logprob: -7.501049995422363
    3. '[n' → logprob: -8.751049995422363
    4. '[i' → logprob: -9.626049995422363
    5. '```' → logprob: -9.751049995422363
    6. '\[' → logprob: -9.751049995422363
    7. '[:]' → logprob: -10.501049995422363
    8. '[h' → logprob: -11.126049995422363
    9. '.' → logprob: -11.626049995422363
    10. ']' → logprob: -11.626049995422363

Token 8: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.0113325119018555
    2. ' list' → logprob: -1.1363325119018555
    3. 'list' → logprob: -2.0113325119018555
    4. '[]' → logprob: -2.2613325119018555
    5. '[' → logprob: -3.0113325119018555
    6. ' [' → logprob: -3.6363325119018555
    7. '[list' → logprob: -7.1363325119018555
    8. '[input' → logprob: -7.6363325119018555
    9. ' ' → logprob: -8.511332511901855
    10. 'input' → logprob: -10.011332511901855

Token 9: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005246210377663374
    2. ' int' → logprob: -6.380246162414551
    3. ')' → logprob: -6.630246162414551
    4. '0' → logprob: -7.005246162414551
    5. ']int' → logprob: -7.130246162414551
    6. ']' → logprob: -8.75524616241455
    7. '(int' → logprob: -8.75524616241455
    8. '])' → logprob: -9.75524616241455
    9. 'float' → logprob: -10.38024616241455
    10. ' ' → logprob: -10.75524616241455

Token 10: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008783683180809021
    2. '(input' → logprob: -4.75878381729126
    3. '(x' → logprob: -9.383783340454102
    4. '()' → logprob: -10.633783340454102
    5. '(user' → logprob: -11.008783340454102
    6. '(token' → logprob: -11.883783340454102
    7. '(
' → logprob: -12.133783340454102
    8. '('' → logprob: -12.258783340454102
    9. ']' → logprob: -13.008783340454102
    10. '(s' → logprob: -13.008783340454102

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031377444975078106
    2. '(input' → logprob: -8.625313758850098
    3. 'input' → logprob: -9.375313758850098
    4. 'for' → logprob: -10.500313758850098
    5. ' )' → logprob: -12.250313758850098
    6. '')' → logprob: -12.250313758850098
    7. '(x' → logprob: -12.750313758850098
    8. '())' → logprob: -13.125313758850098
    9. '(' → logprob: -13.250313758850098
    10. ')]' → logprob: -13.625313758850098

Token 12: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40443527698516846
    2. ' for' → logprob: -1.1544352769851685
    3. ')' → logprob: -4.154435157775879
    4. '(x' → logprob: -6.904435157775879
    5. '(' → logprob: -8.154435157775879
    6. '(input' → logprob: -9.154435157775879
    7. ')]' → logprob: -9.779435157775879
    8. ']' → logprob: -10.154435157775879
    9. '```' → logprob: -10.154435157775879
    10. ' in' → logprob: -10.279435157775879

Token 13: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.29264959692955017
    2. ' x' → logprob: -2.792649507522583
    3. ' range' → logprob: -3.042649507522583
    4. ' ' → logprob: -3.042649507522583
    5. '<|end|>' → logprob: -3.042649507522583
    6. 'input' → logprob: -3.292649507522583
    7. '<|end|>' → logprob: -5.167649745941162
    8. 'range' → logprob: -6.167649745941162
    9. ' in' → logprob: -6.792649745941162
    10. 'x' → logprob: -6.792649745941162

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28127577900886536
    2. 'in' → logprob: -1.406275749206543
    3. 'n' → logprob: -10.281275749206543
    4. ')' → logprob: -11.281275749206543
    5. 'input' → logprob: -11.281275749206543
    6. 'import' → logprob: -11.406275749206543
    7. ' ' → logprob: -11.656275749206543
    8. '_' → logprob: -11.781275749206543
    9. '<|end|>' → logprob: -12.406275749206543
    10. '.' → logprob: -12.531275749206543

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6934881806373596
    2. ' input' → logprob: -0.6934881806373596
    3. 'range' → logprob: -8.318488121032715
    4. ' range' → logprob: -9.443488121032715
    5. '(input' → logprob: -10.943488121032715
    6. '=input' → logprob: -17.56848907470703
    7. '[input' → logprob: -17.69348907470703
    8. '<input' → logprob: -17.81848907470703
    9. ',input' → logprob: -18.56848907470703
    10. '(' → logprob: -18.94348907470703

Token 16: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.672770082950592
    2. '()]' → logprob: -1.0477700233459473
    3. '(' → logprob: -2.5477700233459473
    4. '().' → logprob: -2.9227700233459473
    5. '())' → logprob: -5.047770023345947
    6. '()].' → logprob: -8.422770500183105
    7. '()][' → logprob: -9.797770500183105
    8. ']()' → logprob: -9.922770500183105
    9. '('' → logprob: -10.172770500183105
    10. '()],' → logprob: -10.797770500183105

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00010425841173855588
    2. 'strip' → logprob: -9.250103950500488
    3. 'rstrip' → logprob: -11.750103950500488
    4. ' split' → logprob: -15.250103950500488
    5. '(split' → logprob: -17.625104904174805
    6. 'spl' → logprob: -18.375104904174805
    7. 's' → logprob: -21.875104904174805
    8. '.split' → logprob: -22.000104904174805
    9. '```' → logprob: -22.375104904174805
    10. ')' → logprob: -22.375104904174805

Token 18: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.02420533448457718
    2. '())' → logprob: -4.149205207824707
    3. '()' → logprob: -5.024205207824707
    4. '(' → logprob: -6.649205207824707
    5. '('' → logprob: -8.399205207824707
    6. ')]' → logprob: -11.149205207824707
    7. ']' → logprob: -11.774205207824707
    8. '()][' → logprob: -12.274205207824707
    9. '')]' → logprob: -13.024205207824707
    10. '()`' → logprob: -13.149205207824707

Token 19: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09590452164411545
    2. ')]' → logprob: -2.595904588699341
    3. ')' → logprob: -4.220904350280762
    4. '])' → logprob: -6.220904350280762
    5. '`]' → logprob: -9.220904350280762
    6. '])]' → logprob: -10.345904350280762
    7. '']' → logprob: -10.720904350280762
    8. ' ]' → logprob: -10.970904350280762
    9. ')])' → logprob: -11.345904350280762
    10. ']
' → logprob: -12.470904350280762

Token 20: 'def' (ID: 1314)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1358368992805481
    2. 'for' → logprob: -3.3858368396759033
    3. 'count' → logprob: -3.6358368396759033
    4. 'min' → logprob: -4.635837078094482
    5. 'result' → logprob: -4.635837078094482
    6. 'm' → logprob: -5.010837078094482
    7. 'total' → logprob: -5.010837078094482
    8. 'dp' → logprob: -5.135837078094482
    9. 'answer' → logprob: -5.760837078094482
    10. 's' → logprob: -5.760837078094482

Token 21: ' check' (ID: 2371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5641639828681946
    2. ' max' → logprob: -0.9391639828681946
    3. ' tallest' → logprob: -3.68916392326355
    4. ' largest' → logprob: -5.189164161682129
    5. ' find' → logprob: -5.564164161682129
    6. ' calculate' → logprob: -6.689164161682129
    7. ' space' → logprob: -6.689164161682129
    8. ' count' → logprob: -7.314164161682129
    9. ' maximum' → logprob: -7.939164161682129
    10. ' heights' → logprob: -8.064164161682129

Token 22: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0386275090277195
    2. '_' → logprob: -3.2886276245117188
    3. '_height' → logprob: -8.788627624511719
    4. '(_)' → logprob: -9.038627624511719
    5. '_(' → logprob: -9.788627624511719
    6. '_space' → logprob: -10.163627624511719
    7. '_parent' → logprob: -10.913627624511719
    8. '_valid' → logprob: -11.163627624511719
    9. '(height' → logprob: -11.288627624511719
    10. '(_' → logprob: -11.288627624511719

Token 23: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7547354698181152
    2. '):' → logprob: -1.6297354698181152
    3. '[i' → logprob: -2.0047354698181152
    4. '[' → logprob: -2.7547354698181152
    5. 'e' → logprob: -2.8797354698181152
    6. '>=' → logprob: -3.8797354698181152
    7. ')>=' → logprob: -4.004735469818115
    8. ',' → logprob: -5.129735469818115
    9. ')>' → logprob: -5.129735469818115
    10. 'u' → logprob: -5.379735469818115

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06416572630405426
    2. ')' → logprob: -3.1891658306121826
    3. ',' → logprob: -4.0641655921936035
    4. '[' → logprob: -6.3141655921936035
    5. 's' → logprob: -7.3141655921936035
    6. ' ):' → logprob: -8.189166069030762
    7. '[]):' → logprob: -8.189166069030762
    8. '):
' → logprob: -8.689166069030762
    9. ']):' → logprob: -9.564166069030762
    10. ')):' → logprob: -9.939166069030762

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11351925879716873
    2. ' ' → logprob: -3.3635191917419434
    3. '    ' → logprob: -3.4885191917419434
    4. ' 
' → logprob: -3.9885191917419434
    5. ' return' → logprob: -4.863519191741943
    6. '    
' → logprob: -5.738519191741943
    7. ' for' → logprob: -5.863519191741943
    8. ':' → logprob: -6.613519191741943
    9. '_' → logprob: -6.613519191741943
    10. '     
' → logprob: -6.738519191741943

Token 26: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16388830542564392
    2. '   ' → logprob: -2.6638882160186768
    3. ' max' → logprob: -3.1638882160186768
    4. 'for' → logprob: -4.163888454437256
    5. ' return' → logprob: -4.663888454437256
    6. ' if' → logprob: -5.788888454437256
    7. 'max' → logprob: -5.788888454437256
    8. ' n' → logprob: -6.288888454437256
    9. ' i' → logprob: -6.538888454437256
    10. 'n' → logprob: -7.163888454437256

Token 27: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5593737959861755
    2. ' hs' → logprob: -1.3093738555908203
    3. ' all' → logprob: -2.8093738555908203
    4. ' not' → logprob: -2.8093738555908203
    5. ' max' → logprob: -4.05937385559082
    6. 'len' → logprob: -4.18437385559082
    7. ' h' → logprob: -6.80937385559082
    8. ' any' → logprob: -7.18437385559082
    9. 'hs' → logprob: -7.18437385559082
    10. 'all' → logprob: -7.18437385559082

Token 28: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.02381417155265808
    2. '(' → logprob: -3.7738142013549805
    3. ' (' → logprob: -8.02381420135498
    4. '(s' → logprob: -8.39881420135498
    5. ' hs' → logprob: -12.02381420135498
    6. ' ' → logprob: -12.77381420135498
    7. '(xs' → logprob: -13.77381420135498
    8. 'hs' → logprob: -13.89881420135498
    9. '(ht' → logprob: -14.27381420135498
    10. '(has' → logprob: -15.02381420135498

Token 29: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.941161776310764e-05
    2. ')' → logprob: -12.000039100646973
    3. '(s' → logprob: -12.000039100646973
    4. '>' → logprob: -12.125039100646973
    5. ')s' → logprob: -12.250039100646973
    6. '>s' → logprob: -12.625039100646973
    7. '<s' → logprob: -13.375039100646973
    8. '```' → logprob: -13.625039100646973
    9. '<' → logprob: -13.750039100646973
    10. '(' → logprob: -13.750039100646973

Token 30: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018046533223241568
    2. '<=' → logprob: -7.251804828643799
    3. '==' → logprob: -7.626804828643799
    4. ')<=' → logprob: -8.25180435180664
    5. '<' → logprob: -9.25180435180664
    6. ' )' → logprob: -9.50180435180664
    7. ')==' → logprob: -9.62680435180664
    8. ' <=' → logprob: -9.87680435180664
    9. ')<' → logprob: -10.37680435180664
    10. ' ==' → logprob: -11.37680435180664

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2815835773944855
    2. '0' → logprob: -1.406583547592163
    3. '2' → logprob: -8.281583786010742
    4. ' ' → logprob: -8.656583786010742
    5. '```' → logprob: -13.094083786010742
    6. '   ' → logprob: -14.031583786010742
    7. '3' → logprob: -14.344083786010742
    8. ')' → logprob: -14.531583786010742
    9. 'len' → logprob: -15.156583786010742
    10. '  ' → logprob: -15.344083786010742

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04739796742796898
    2. ':return' → logprob: -3.1723978519439697
    3. ' and' → logprob: -5.797398090362549
    4. ' :' → logprob: -7.297398090362549
    5. ' or' → logprob: -7.672398090362549
    6. ':
' → logprob: -9.04739761352539
    7. ' ' → logprob: -10.17239761352539
    8. 'and' → logprob: -10.42239761352539
    9. '   ' → logprob: -11.29739761352539
    10. ' return' → logprob: -12.17239761352539

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4601145386695862
    2. '   ' → logprob: -1.0851144790649414
    3. ' return' → logprob: -3.9601144790649414
    4. ':return' → logprob: -5.460114479064941
    5. ':' → logprob: -6.085114479064941
    6. ':
' → logprob: -6.210114479064941
    7. '
' → logprob: -7.210114479064941
    8. ' 
' → logprob: -7.835114479064941
    9. '	return' → logprob: -7.960114479064941
    10. 'return' → logprob: -7.960114479064941

Token 34: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4760379195213318
    2. 'return' (adapté à ' return') → logprob: -0.9760379195213318
    3. '   ' → logprob: -6.601037979125977
    4. ':return' → logprob: -7.601037979125977
    5. ' True' → logprob: -10.226037979125977
    6. '0' → logprob: -11.351037979125977
    7. '	return' → logprob: -11.976037979125977
    8. '    ' → logprob: -12.101037979125977
    9. ' ' → logprob: -12.101037979125977
    10. ' 
' → logprob: -12.351037979125977

Token 35: ' '' (ID: 461)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.17976443469524384
    2. 'True' → logprob: -2.05476450920105
    3. ' hs' → logprob: -4.054764270782471
    4. 'hs' → logprob: -5.179764270782471
    5. ' False' → logprob: -5.304764270782471
    6. ' ' → logprob: -5.429764270782471
    7. 'False' → logprob: -6.179764270782471
    8. ' None' → logprob: -7.429764270782471
    9. '1' → logprob: -7.804764270782471
    10. '0' → logprob: -7.929764270782471

Token 36: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.14821596443653107
    2. 'Yes' → logprob: -2.7732160091400146
    3. 'True' → logprob: -3.0232160091400146
    4. 'yes' → logprob: -4.7732157707214355
    5. '"' → logprob: -5.7732157707214355
    6. '0' → logprob: -6.0232157707214355
    7. '1' → logprob: -6.0232157707214355
    8. ''' → logprob: -6.3982157707214355
    9. 'NO' → logprob: -6.5232157707214355
    10. 'true' → logprob: -6.6482157707214355

Token 37: ''
' (ID: 2207)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11339570581912994
    2. ''' → logprob: -2.2383956909179688
    3. '<|end|>' → logprob: -8.113395690917969
    4. ''
' → logprob: -9.113395690917969
    5. '
' → logprob: -9.738395690917969
    6. '',' → logprob: -10.738395690917969
    7. '<|end|>' → logprob: -10.988395690917969
    8. '')' → logprob: -11.363395690917969
    9. 'n' → logprob: -11.863395690917969
    10. '```' → logprob: -11.863395690917969

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1616186797618866
    2. '    
' → logprob: -2.286618709564209
    3. '\n' → logprob: -3.536618709564209
    4. '  
' → logprob: -5.161618709564209
    5. '```' → logprob: -5.661618709564209
    6. '
' → logprob: -5.911618709564209
    7. '   
' → logprob: -6.161618709564209
    8. '<|end|>' → logprob: -6.411618709564209
    9. 'n' → logprob: -6.911618709564209
    10. ' 
' → logprob: -7.661618709564209

Token 39: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4749632179737091
    2. '
' → logprob: -1.3499631881713867
    3. ' 
' → logprob: -3.0999631881713867
    4. '  
' → logprob: -4.224963188171387
    5. '<|end|>' → logprob: -4.224963188171387
    6. ':' → logprob: -4.724963188171387
    7. '    
' → logprob: -4.849963188171387
    8. 'n' → logprob: -5.349963188171387
    9. ' ' → logprob: -5.599963188171387
    10. '   ' → logprob: -5.599963188171387

Token 40: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02980348840355873
    2. 'i' → logprob: -3.529803514480591
    3. ' ' → logprob: -9.904803276062012
    4. '	i' → logprob: -13.279803276062012
    5. ' ' → logprob: -14.529803276062012
    6. '  ' → logprob: -15.404803276062012
    7. '(i' → logprob: -15.654803276062012
    8. '   ' → logprob: -15.904803276062012
    9. '_i' → logprob: -16.654804229736328
    10. '_' → logprob: -17.029804229736328

Token 41: 'idx' (ID: 13196)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6936677694320679
    2. ' i' → logprob: -0.6936677694320679
    3. ')' → logprob: -8.1936674118042
    4. ')i' → logprob: -8.4436674118042
    5. '	i' → logprob: -11.8186674118042
    6. ' )' → logprob: -12.4436674118042
    7. ' ' → logprob: -13.0686674118042
    8. '(i' → logprob: -13.0686674118042
    9. 'j' → logprob: -13.0686674118042
    10. 'a' → logprob: -13.4436674118042

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0925319567322731
    2. ' in' → logprob: -2.46753191947937
    3. 'in' → logprob: -6.592532157897949
    4. ')' → logprob: -7.717532157897949
    5. ' ,' → logprob: -7.717532157897949
    6. '),' → logprob: -8.21753215789795
    7. 'i' → logprob: -8.34253215789795
    8. ',h' → logprob: -8.46753215789795
    9. ',i' → logprob: -8.96753215789795
    10. ',value' → logprob: -9.34253215789795

Token 43: ' curr' (ID: 10495)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6077002882957458
    2. ' h' → logprob: -0.9827002882957458
    3. ' height' → logprob: -3.6077003479003906
    4. 'height' → logprob: -3.6077003479003906
    5. ')' → logprob: -4.857700347900391
    6. ' val' → logprob: -4.857700347900391
    7. 'val' → logprob: -4.982700347900391
    8. 'v' → logprob: -7.482700347900391
    9. ' value' → logprob: -7.607700347900391
    10. 'value' → logprob: -7.607700347900391

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015578284859657288
    2. '),' → logprob: -4.390578269958496
    3. '_height' → logprob: -6.140578269958496
    4. ',' → logprob: -8.140578269958496
    5. 'height' → logprob: -8.265578269958496
    6. ' in' → logprob: -9.890578269958496
    7. '),(' → logprob: -9.890578269958496
    8. ')=' → logprob: -10.390578269958496
    9. '_h' → logprob: -10.390578269958496
    10. ' )' → logprob: -10.390578269958496

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15386353433132172
    2. ',' → logprob: -2.0288634300231934
    3. 'in' → logprob: -4.528863430023193
    4. ')' → logprob: -8.403863906860352
    5. ' ,' → logprob: -9.778863906860352
    6. '),' → logprob: -11.778863906860352
    7. '<|end|>' → logprob: -11.903863906860352
    8. '```' → logprob: -12.153863906860352
    9. ' ' → logprob: -12.403863906860352
    10. ',in' → logprob: -12.653863906860352

Token 46: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.026302389800548553
    2. 'enumer' → logprob: -3.6513023376464844
    3. '```' → logprob: -14.401302337646484
    4. ' list' → logprob: -14.901302337646484
    5. '(en' → logprob: -15.276302337646484
    6. ' enumer' → logprob: -15.526302337646484
    7. ')' → logprob: -15.651302337646484
    8. 'Enumer' → logprob: -15.776302337646484
    9. ' enumeration' → logprob: -16.526302337646484
    10. '.enumer' → logprob: -16.776302337646484

Token 47: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0006046222406439483
    2. '(' → logprob: -7.750604629516602
    3. '(en' → logprob: -9.125604629516602
    4. '(s' → logprob: -10.375604629516602
    5. ')' → logprob: -11.625604629516602
    6. 'hs' → logprob: -12.125604629516602
    7. ' hs' → logprob: -12.375604629516602
    8. '(range' → logprob: -12.375604629516602
    9. 'enumer' → logprob: -12.625604629516602
    10. ' (' → logprob: -13.625604629516602

Token 48: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.9266199160483666e-05
    2. 'ts' → logprob: -11.750019073486328
    3. 'e' → logprob: -12.375019073486328
    4. ')s' → logprob: -12.875019073486328
    5. ')' → logprob: -13.125019073486328
    6. '(s' → logprob: -13.375019073486328
    7. 't' → logprob: -15.625019073486328
    8. 'eight' → logprob: -16.250019073486328
    9. 'ights' → logprob: -16.375019073486328
    10. '   ' → logprob: -16.375019073486328

Token 49: '[' (ID: 58)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009202155284583569
    2. '):
' → logprob: -4.884202003479004
    3. '[' → logprob: -6.634202003479004
    4. '[:-' → logprob: -9.259202003479004
    5. ':' → logprob: -10.134202003479004
    6. '   ' → logprob: -10.259202003479004
    7. ' ):' → logprob: -10.384202003479004
    8. ')' → logprob: -10.509202003479004
    9. '[]):' → logprob: -11.009202003479004
    10. '):
' → logprob: -11.759202003479004

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00850477535277605
    2. ':-' → logprob: -5.008504867553711
    3. ':' → logprob: -6.508504867553711
    4. ' :-' → logprob: -9.883504867553711
    5. '-' → logprob: -10.133504867553711
    6. '::-' → logprob: -10.258504867553711
    7. ':]' → logprob: -10.383504867553711
    8. ']):' → logprob: -10.633504867553711
    9. ' :' → logprob: -10.758504867553711
    10. ':],' → logprob: -11.383504867553711

Token 51: ':],' (ID: 117284)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027683213353157043
    2. ':]' → logprob: -3.7776832580566406
    3. ':],' → logprob: -5.527683258056641
    4. ']):' → logprob: -8.27768325805664
    5. ']:' → logprob: -8.90268325805664
    6. ':-' → logprob: -11.40268325805664
    7. '):' → logprob: -11.40268325805664
    8. ']' → logprob: -12.15268325805664
    9. ']-' → logprob: -12.27768325805664
    10. ':)' → logprob: -12.40268325805664

Token 52: ' ' (ID: 220)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.8345091938972473
    2. 'start' → logprob: -1.5845091342926025
    3. ' key' → logprob: -1.5845091342926025
    4. '1' → logprob: -3.2095091342926025
    5. ' ' → logprob: -3.2095091342926025
    6. 'key' → logprob: -4.084509372711182
    7. ')' → logprob: -4.084509372711182
    8. ' lambda' → logprob: -4.084509372711182
    9. 'lambda' → logprob: -4.209509372711182
    10. ' hs' → logprob: -6.709509372711182

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015181333583313972
    2. ' ' → logprob: -9.125151634216309
    3. 'idx' → logprob: -10.375151634216309
    4. 'start' → logprob: -12.000151634216309
    5. '   ' → logprob: -12.750151634216309
    6. 'index' → logprob: -14.375151634216309
    7. ')' → logprob: -14.625151634216309
    8. '0' → logprob: -14.750151634216309
    9. ' idx' → logprob: -15.000151634216309
    10. '2' → logprob: -15.125151634216309

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010319644585251808
    2. '):
' → logprob: -4.635319709777832
    3. ':' → logprob: -8.510319709777832
    4. ')' → logprob: -8.635319709777832
    5. '):
' → logprob: -9.885319709777832
    6. ' ):' → logprob: -9.885319709777832
    7. ',' → logprob: -10.135319709777832
    8. '   ' → logprob: -10.385319709777832
    9. '):

' → logprob: -12.760319709777832
    10. '       ' → logprob: -13.260319709777832

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034623704850673676
    2. '<|end|>' → logprob: -3.659623622894287
    3. ' if' → logprob: -5.034623622894287
    4. '    ' → logprob: -7.659623622894287
    5. '   ' → logprob: -7.659623622894287
    6. ' ' → logprob: -7.909623622894287
    7. '<|end|>' → logprob: -9.284624099731445
    8. ',' → logprob: -9.409624099731445
    9. '        ' → logprob: -9.909624099731445
    10. 'if' → logprob: -10.034624099731445

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03860032558441162
    2. 'if' (adapté à ' if') → logprob: -3.413600444793701
    3. '       ' → logprob: -5.413600444793701
    4. '   ' → logprob: -8.413599967956543
    5. '```' → logprob: -9.163599967956543
    6. '    ' → logprob: -10.038599967956543
    7. ' ' → logprob: -10.038599967956543
    8. ' prev' → logprob: -10.538599967956543
    9. '<|end|>' → logprob: -11.538599967956543
    10. ' ' → logprob: -11.913599967956543

Token 57: ' hs' (ID: 59089)
  Prédit: ' curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.6569176912307739
    2. ' hs' → logprob: -0.7819176912307739
    3. 'curr' → logprob: -4.156917572021484
    4. 'hs' → logprob: -4.906917572021484
    5. ' abs' → logprob: -7.531917572021484
    6. ' heights' → logprob: -8.406917572021484
    7. ' ' → logprob: -9.906917572021484
    8. ' currents' → logprob: -10.656917572021484
    9. '	curr' → logprob: -10.656917572021484
    10. 'abs' → logprob: -11.031917572021484

Token 58: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00011081460979767144
    2. '[' → logprob: -9.125110626220703
    3. '[curr' → logprob: -14.625110626220703
    4. 'idx' → logprob: -15.750110626220703
    5. '[max' → logprob: -15.750110626220703
    6. '[i' → logprob: -15.875110626220703
    7. ' [' → logprob: -16.000110626220703
    8. '   ' → logprob: -16.000110626220703
    9. '	idx' → logprob: -16.250110626220703
    10. ')[' → logprob: -16.375110626220703

Token 59: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030972179025411606
    2. '-' → logprob: -3.7809722423553467
    3. ']<' → logprob: -5.280972003936768
    4. ' -' → logprob: -7.030972003936768
    5. ' ]' → logprob: -7.655972003936768
    6. ']>' → logprob: -7.905972003936768
    7. ']>=' → logprob: -8.405972480773926
    8. ']<=' → logprob: -8.655972480773926
    9. '<' → logprob: -8.905972480773926
    10. ')' → logprob: -9.530972480773926

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008101018611341715
    2. ' ' → logprob: -7.375810146331787
    3. 'idx' → logprob: -9.000809669494629
    4. ']' → logprob: -10.000809669494629
    5. ' idx' → logprob: -11.625809669494629
    6. ')' → logprob: -13.000809669494629
    7. '   ' → logprob: -13.500809669494629
    8. '  ' → logprob: -14.750809669494629
    9. '    ' → logprob: -15.125809669494629
    10. 'i' → logprob: -15.375809669494629

Token 61: ']<' (ID: 80424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25584471225738525
    2. ']' → logprob: -2.3808445930480957
    3. '<' → logprob: -3.5058445930480957
    4. '>=' → logprob: -3.6308445930480957
    5. ']>=' → logprob: -3.6308445930480957
    6. ' >' → logprob: -3.8808445930480957
    7. ']>' → logprob: -4.380844593048096
    8. ' <' → logprob: -5.380844593048096
    9. ']<' → logprob: -5.880844593048096
    10. ' >=' → logprob: -5.880844593048096

Token 62: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.020753253251314163
    2. ' curr' → logprob: -3.8957531452178955
    3. 'hs' → logprob: -9.020752906799316
    4. ' hs' → logprob: -10.645752906799316
    5. '	curr' → logprob: -10.770752906799316
    6. '=' → logprob: -11.145752906799316
    7. '[curr' → logprob: -11.645752906799316
    8. ' ' → logprob: -11.895752906799316
    9. '(curr' → logprob: -12.395752906799316
    10. 'cur' → logprob: -13.708252906799316

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1693239063024521
    2. ' and' → logprob: -2.6693239212036133
    3. '           ' → logprob: -2.7943239212036133
    4. ':
' → logprob: -4.544323921203613
    5. ':return' → logprob: -5.169323921203613
    6. 'and' → logprob: -5.669323921203613
    7. '):' → logprob: -6.169323921203613
    8. ' or' → logprob: -6.669323921203613
    9. ' continue' → logprob: -7.669323921203613
    10. '       ' → logprob: -7.669323921203613

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01917911507189274
    2. ' return' → logprob: -4.644179344177246
    3. 'return' → logprob: -5.644179344177246
    4. ' continue' → logprob: -6.019179344177246
    5. '       ' → logprob: -6.394179344177246
    6. 'continue' → logprob: -7.394179344177246
    7. ' and' → logprob: -8.019179344177246
    8. ':return' → logprob: -8.269179344177246
    9. '               ' → logprob: -8.644179344177246
    10. '   ' → logprob: -8.894179344177246

Token 65: ' hs' (ID: 59089)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.52889484167099
    2. ' continue' → logprob: -1.1538949012756348
    3. '           ' → logprob: -3.2788949012756348
    4. 'return' → logprob: -3.4038949012756348
    5. '               ' → logprob: -4.528894901275635
    6. 'continue' → logprob: -4.528894901275635
    7. '       ' → logprob: -7.403894901275635
    8. ' ' → logprob: -7.903894901275635
    9. '            ' → logprob: -8.028894424438477
    10. ' pass' → logprob: -8.028894424438477

Token 66: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.5388086438179016
    2. '.pop' → logprob: -0.9138086438179016
    3. '.insert' → logprob: -4.913808822631836
    4. '=' → logprob: -5.163808822631836
    5. '.remove' → logprob: -6.663808822631836
    6. ' =' → logprob: -7.288808822631836
    7. '[:' → logprob: -8.788808822631836
    8. '.sort' → logprob: -8.913808822631836
    9. '.reverse' → logprob: -10.163808822631836
    10. '[:]' → logprob: -10.163808822631836

Token 67: ']=' (ID: 9539)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023526018485426903
    2. ']' → logprob: -4.023526191711426
    3. ' -' → logprob: -5.773526191711426
    4. ']-' → logprob: -6.273526191711426
    5. '-=' → logprob: -8.523526191711426
    6. ']+=' → logprob: -10.023526191711426
    7. ' ]' → logprob: -10.398526191711426
    8. ']=' → logprob: -10.648526191711426
    9. ' ' → logprob: -11.523526191711426
    10. ' -=' → logprob: -11.523526191711426

Token 68: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.5291005373001099
    2. 'hs' → logprob: -0.9041005373001099
    3. 'max' → logprob: -5.77910041809082
    4. ' curr' → logprob: -7.40410041809082
    5. ' hs' → logprob: -7.52910041809082
    6. '0' → logprob: -7.65410041809082
    7. 'min' → logprob: -8.40410041809082
    8. '-' → logprob: -8.40410041809082
    9. 'float' → logprob: -8.90410041809082
    10. ' ' → logprob: -9.02910041809082

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14449621737003326
    2. 'else' → logprob: -2.144496202468872
    3. '+' → logprob: -4.519496440887451
    4. ' -' → logprob: -5.769496440887451
    5. ' else' → logprob: -6.769496440887451
    6. 'elif' → logprob: -6.894496440887451
    7. '<|end|>' → logprob: -7.769496440887451
    8. '
' → logprob: -8.144495964050293
    9. ' +' → logprob: -9.269495964050293
    10. ' ' → logprob: -9.519495964050293

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.657694418914616e-05
    2. ' ' → logprob: -9.875056266784668
    3. '2' → logprob: -12.875056266784668
    4. '-' → logprob: -13.750056266784668
    5. '5' → logprob: -14.875056266784668
    6. '20' → logprob: -15.750056266784668
    7. '10' → logprob: -15.812556266784668
    8. '   ' → logprob: -16.187557220458984
    9. '15' → logprob: -16.250057220458984
    10. '50' → logprob: -16.500057220458984

Token 71: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8295966982841492
    2. ' else' → logprob: -1.329596757888794
    3. '<|end|>' → logprob: -1.329596757888794
    4. 'elif' → logprob: -4.079596519470215
    5. '       ' → logprob: -5.079596519470215
    6. '
' → logprob: -5.454596519470215
    7. ' elif' → logprob: -5.829596519470215
    8. '	else' → logprob: -6.704596519470215
    9. '<|end|>' → logprob: -7.329596519470215
    10. '	elif' → logprob: -7.579596519470215

Token 72: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' if' (ID: 538)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.699587881565094
    2. 'else' → logprob: -1.1995878219604492
    3. '       ' → logprob: -2.074587821960449
    4. 'elif' → logprob: -3.699587821960449
    5. ' elif' → logprob: -3.824587821960449
    6. '<|end|>' → logprob: -3.824587821960449
    7. '   ' → logprob: -5.699587821960449
    8. ' ' → logprob: -6.324587821960449
    9. '	else' → logprob: -8.07458782196045
    10. ')' → logprob: -8.07458782196045

Token 74: ' all' (ID: 722)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.5321611762046814
    2. 'check' → logprob: -2.032161235809326
    3. ' hs' → logprob: -2.032161235809326
    4. ' all' → logprob: -3.157161235809326
    5. ' not' → logprob: -3.407161235809326
    6. ' any' → logprob: -3.907161235809326
    7. ' len' → logprob: -4.032161235809326
    8. 'hs' → logprob: -4.032161235809326
    9. ' ' → logprob: -5.407161235809326
    10. 'len' → logprob: -5.532161235809326

Token 75: '([' (ID: 5194)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.015887487679719925
    2. '(x' → logprob: -4.640887260437012
    3. '(' → logprob: -5.515887260437012
    4. '(lambda' → logprob: -6.890887260437012
    5. '((' → logprob: -7.640887260437012
    6. '(curr' → logprob: -8.265887260437012
    7. '(a' → logprob: -8.890887260437012
    8. '(abs' → logprob: -9.765887260437012
    9. '(i' → logprob: -10.140887260437012
    10. '(c' → logprob: -10.265887260437012

Token 76: 'hs' (ID: 9467)
  Prédit: 'hs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.018380073830485344
    2. ' hs' → logprob: -4.143380165100098
    3. 'he' → logprob: -6.768380165100098
    4. 'x' → logprob: -7.643380165100098
    5. '(h' → logprob: -8.518380165100098
    6. '   ' → logprob: -8.643380165100098
    7. ' ' → logprob: -9.393380165100098
    8. 'h' → logprob: -10.018380165100098
    9. ' x' → logprob: -10.268380165100098
    10. '(x' → logprob: -10.518380165100098

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007669918239116669
    2. '[idx' → logprob: -4.882669925689697
    3. '[x' → logprob: -10.882669448852539
    4. '[' → logprob: -11.257669448852539
    5. '[k' → logprob: -11.257669448852539
    6. '[j' → logprob: -11.382669448852539
    7. '[index' → logprob: -12.882669448852539
    8. '[ii' → logprob: -13.507669448852539
    9. '[max' → logprob: -14.257669448852539
    10. ')' → logprob: -14.257669448852539

Token 78: '-' (ID: 12)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.17292296886444092
    2. ']<=' → logprob: -2.1729230880737305
    3. ']' → logprob: -3.5479230880737305
    4. ']>' → logprob: -4.6729230880737305
    5. ']<' → logprob: -5.1729230880737305
    6. '-' → logprob: -7.4229230880737305
    7. '<=' → logprob: -8.92292308807373
    8. '>=' → logprob: -8.92292308807373
    9. ' ]' → logprob: -9.17292308807373
    10. ']==' → logprob: -9.29792308807373

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013248102739453316
    2. 'i' → logprob: -4.763247966766357
    3. ' ' → logprob: -5.763247966766357
    4. 'hs' → logprob: -7.138247966766357
    5. ' i' → logprob: -8.013248443603516
    6. '0' → logprob: -8.513248443603516
    7. '   ' → logprob: -10.638248443603516
    8. ' hs' → logprob: -10.763248443603516
    9. '(i' → logprob: -10.888248443603516
    10. '>' → logprob: -11.263248443603516

Token 80: ']<=' (ID: 175609)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.21204710006713867
    2. '>=' → logprob: -2.4620471000671387
    3. '>' → logprob: -2.7120471000671387
    4. ']>' → logprob: -3.3370471000671387
    5. ']' → logprob: -6.212047100067139
    6. ']<' → logprob: -7.337047100067139
    7. ']<=' → logprob: -7.462047100067139
    8. '<' → logprob: -8.712047576904297
    9. ' >=' → logprob: -8.712047576904297
    10. ' >' → logprob: -9.212047576904297

Token 81: 'hs' (ID: 9467)
  Prédit: 'hs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hs' → logprob: -0.023257127031683922
    2. ' hs' → logprob: -3.77325701713562
    3. 'he' → logprob: -12.1482572555542
    4. 'h' → logprob: -12.7732572555542
    5. ' ' → logprob: -13.6482572555542
    6. 'his' → logprob: -14.7732572555542
    7. '   ' → logprob: -15.0232572555542
    8. 'ys' → logprob: -15.2732572555542
    9. ' ' → logprob: -15.7732572555542
    10. 'hes' → logprob: -15.8982572555542

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004685376305133104
    2. 's' → logprob: -5.379685401916504
    3. '[' → logprob: -9.754685401916504
    4. 'i' → logprob: -13.004685401916504
    5. '[s' → logprob: -13.129685401916504
    6. ' [' → logprob: -14.004685401916504
    7. ']' → logprob: -14.504685401916504
    8. '[
' → logprob: -15.004685401916504
    9. ' ' → logprob: -15.379685401916504
    10. '][' → logprob: -15.629685401916504

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5697428584098816
    2. ' for' → logprob: -1.0697429180145264
    3. 'for' → logprob: -2.4447429180145264
    4. ' ]' → logprob: -5.694742679595947
    5. 'or' → logprob: -8.069743156433105
    6. ')' → logprob: -8.069743156433105
    7. ' ' → logprob: -8.569743156433105
    8. '])' → logprob: -9.694743156433105
    9. '   ' → logprob: -9.819743156433105
    10. '    ' → logprob: -10.319743156433105

Token 84: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012629959732294083
    2. 'for' → logprob: -4.387629985809326
    3. ' ' → logprob: -9.762629508972168
    4. ' or' → logprob: -10.137629508972168
    5. '   ' → logprob: -11.887629508972168
    6. '	for' → logprob: -12.637629508972168
    7. 'or' → logprob: -12.887629508972168
    8. ']' → logprob: -12.887629508972168
    9. '    ' → logprob: -12.887629508972168
    10. '  ' → logprob: -13.262629508972168

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6574365496635437
    2. 'i' → logprob: -1.2824366092681885
    3. ' range' → logprob: -1.6574366092681885
    4. 'range' → logprob: -4.282436370849609
    5. ' ' → logprob: -11.40743637084961
    6. 'Range' → logprob: -12.40743637084961
    7. '  ' → logprob: -13.65743637084961
    8. '```' → logprob: -13.65743637084961
    9. 'I' → logprob: -13.78243637084961
    10. '	i' → logprob: -13.90743637084961

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012236819602549076
    2. 'in' → logprob: -6.876223564147949
    3. ' range' → logprob: -9.25122356414795
    4. 'range' → logprob: -9.37622356414795
    5. ' ' → logprob: -12.12622356414795
    6. '1' → logprob: -13.12622356414795
    7. ' i' → logprob: -13.37622356414795
    8. 'i' → logprob: -15.00122356414795
    9. '<|end|>' → logprob: -15.62622356414795
    10. '2' → logprob: -15.87622356414795

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687145709991455
    2. 'range' → logprob: -1.1368714570999146
    3. ' xrange' → logprob: -15.761871337890625
    4. '(range' → logprob: -15.886871337890625
    5. '	range' → logprob: -15.886871337890625
    6. ' ' → logprob: -16.886871337890625
    7. '1' → logprob: -19.886871337890625
    8. '_range' → logprob: -20.136871337890625
    9. '.range' → logprob: -20.511871337890625
    10. '  ' → logprob: -20.761871337890625

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0087516784551553e-05
    2. ' (' → logprob: -12.25001049041748
    3. '1' → logprob: -12.87501049041748
    4. '(len' → logprob: -13.12501049041748
    5. ' ' → logprob: -14.37501049041748
    6. '   ' → logprob: -16.625009536743164
    7. '(n' → logprob: -16.875009536743164
    8. 'len' → logprob: -17.125009536743164
    9. '	' → logprob: -18.375009536743164
    10. '<|end|>' → logprob: -18.750009536743164

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035751116229221225
    2. ' ' → logprob: -8.500357627868652
    3. 'len' → logprob: -8.875357627868652
    4. 'n' → logprob: -12.125357627868652
    5. '2' → logprob: -12.250357627868652
    6. ' len' → logprob: -13.625357627868652
    7. '(' → logprob: -14.125357627868652
    8. '   ' → logprob: -14.625357627868652
    9. '0' → logprob: -14.625357627868652
    10. ' n' → logprob: -15.375357627868652

Token 90: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13462774455547333
    2. ',len' → logprob: -2.1346278190612793
    3. ',n' → logprob: -5.884627819061279
    4. ' ,' → logprob: -6.009627819061279
    5. '(len' → logprob: -6.134627819061279
    6. '(' → logprob: -8.884627342224121
    7. ')' → logprob: -10.134627342224121
    8. ' ' → logprob: -10.884627342224121
    9. '(n' → logprob: -11.009627342224121
    10. ')])' → logprob: -11.009627342224121

Token 91: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.368984107510187e-05
    2. 'hs' → logprob: -11.125033378601074
    3. ' hs' → logprob: -11.250033378601074
    4. '(' → logprob: -12.125033378601074
    5. 'h' → logprob: -15.375033378601074
    6. ' (' → logprob: -16.50003433227539
    7. 's' → logprob: -17.00003433227539
    8. ')' → logprob: -17.12503433227539
    9. '(s' → logprob: -17.37503433227539
    10. 'HS' → logprob: -18.00003433227539

Token 92: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.895480277715251e-06
    2. ')s' → logprob: -13.000008583068848
    3. 'S' → logprob: -13.250008583068848
    4. ')' → logprob: -13.250008583068848
    5. '))' → logprob: -14.125008583068848
    6. ')])' → logprob: -14.625008583068848
    7. ')))' → logprob: -14.750008583068848
    8. ']))' → logprob: -15.500008583068848
    9. '(s' → logprob: -15.750008583068848
    10. 'e' → logprob: -15.875008583068848

Token 93: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0060669672675430775
    2. ')])' → logprob: -5.631066799163818
    3. ')]' → logprob: -6.506066799163818
    4. ')' → logprob: -7.506066799163818
    5. ')):' → logprob: -8.756067276000977
    6. ')))' → logprob: -8.756067276000977
    7. ' ))' → logprob: -10.381067276000977
    8. ']))' → logprob: -10.506067276000977
    9. '):' → logprob: -11.506067276000977
    10. '))))' → logprob: -11.506067276000977

Token 94: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.02366887964308262
    2. '])' → logprob: -3.7736687660217285
    3. ']):
' → logprob: -8.398669242858887
    4. ']' → logprob: -9.648669242858887
    5. ')]' → logprob: -9.898669242858887
    6. '):' → logprob: -10.523669242858887
    7. ')' → logprob: -11.148669242858887
    8. ' ]' → logprob: -11.398669242858887
    9. '   ' → logprob: -11.773669242858887
    10. ']))' → logprob: -12.273669242858887

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23602040112018585
    2. ' 
' → logprob: -1.8610204458236694
    3. '        
' → logprob: -4.236020565032959
    4. ' return' → logprob: -4.236020565032959
    5. ' ' → logprob: -5.111020565032959
    6. '<|end|>' → logprob: -5.361020565032959
    7. '   ' → logprob: -5.486020565032959
    8. '    
' → logprob: -6.236020565032959
    9. '\n' → logprob: -6.486020565032959
    10. 'return' → logprob: -7.111020565032959

Token 96: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04555169492959976
    2. '   ' → logprob: -3.7955517768859863
    3. 'return' (adapté à ' return') → logprob: -4.170551776885986
    4. '       ' → logprob: -5.420551776885986
    5. '	return' → logprob: -6.795551776885986
    6. ' 
' → logprob: -7.420551776885986
    7. '
' → logprob: -8.920551300048828
    8. '           ' → logprob: -9.170551300048828
    9. ' ' → logprob: -9.670551300048828
    10. '    
' → logprob: -10.045551300048828

Token 97: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10859587043523788
    2. ' '' → logprob: -2.358595848083496
    3. '"' → logprob: -4.983595848083496
    4. ' "' → logprob: -6.733595848083496
    5. ' Yes' → logprob: -9.233595848083496
    6. '"No' → logprob: -9.358595848083496
    7. ' check' → logprob: -9.983595848083496
    8. ' ' → logprob: -10.358595848083496
    9. '''' → logprob: -11.858595848083496
    10. ' None' → logprob: -11.858595848083496

Token 98: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.16514338552951813
    2. 'No' → logprob: -2.1651434898376465
    3. ''' → logprob: -3.2901434898376465
    4. ' Yes' → logprob: -9.165143013000488
    5. '"' → logprob: -10.290143013000488
    6. 'YES' → logprob: -10.665143013000488
    7. 'Ye' → logprob: -10.915143013000488
    8. ' No' → logprob: -11.040143013000488
    9. 'Y' → logprob: -11.165143013000488
    10. '"No' → logprob: -11.290143013000488

Token 99: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38229629397392273
    2. '   ' → logprob: -1.7572963237762451
    3. '
' → logprob: -2.757296323776245
    4. '<|end|>' → logprob: -3.257296323776245
    5. '')' → logprob: -3.757296323776245
    6. 'None' → logprob: -5.882296085357666
    7. 'return' → logprob: -6.132296085357666
    8. 'else' → logprob: -6.257296085357666
    9. ' ' → logprob: -6.507296085357666
    10. '\n' → logprob: -6.882296085357666

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12853926420211792
    2. ' else' → logprob: -2.5035393238067627
    3. 'else' → logprob: -3.3785393238067627
    4. ' ' → logprob: -6.503539085388184
    5. '<|end|>' → logprob: -6.628539085388184
    6. '	else' → logprob: -7.753539085388184
    7. '       ' → logprob: -7.878539085388184
    8. '    
' → logprob: -7.878539085388184
    9. '  ' → logprob: -8.628539085388184
    10. ' return' → logprob: -8.878539085388184

Token 101: ' return' (ID: 622)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25805777311325073
    2. ' else' → logprob: -2.1330578327178955
    3. 'return' (adapté à ' return') → logprob: -3.0080578327178955
    4. '   ' → logprob: -3.6330578327178955
    5. ' ' → logprob: -4.633057594299316
    6. ''' → logprob: -4.758057594299316
    7. 'No' → logprob: -5.008057594299316
    8. ' return' → logprob: -5.258057594299316
    9. ' No' → logprob: -7.133057594299316
    10. 'n' → logprob: -7.758057594299316

Token 102: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025817241985350847
    2. ' '' → logprob: -6.002581596374512
    3. '"No' → logprob: -9.752581596374512
    4. ' No' → logprob: -10.877581596374512
    5. ' ' → logprob: -11.377581596374512
    6. 'No' → logprob: -11.502581596374512
    7. '   ' → logprob: -12.377581596374512
    8. '"' → logprob: -13.627581596374512
    9. '	' → logprob: -14.502581596374512
    10. '  ' → logprob: -15.002581596374512

Token 103: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0002669384120963514
    2. ''' → logprob: -8.250267028808594
    3. 'Yes' → logprob: -12.250267028808594
    4. '"No' → logprob: -14.250267028808594
    5. ' No' → logprob: -16.625267028808594
    6. 'NO' → logprob: -16.750267028808594
    7. '"' → logprob: -17.375267028808594
    8. '''' → logprob: -18.625267028808594
    9. '_No' → logprob: -19.250267028808594
    10. 'None' → logprob: -19.500267028808594

Token 104: ''

' (ID: 7497)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025988419074565172
    2. '')' → logprob: -6.127598762512207
    3. '<|end|>' → logprob: -8.877598762512207
    4. '}' → logprob: -9.002598762512207
    5. ')
' → logprob: -9.752598762512207
    6. '```' → logprob: -10.252598762512207
    7. ''' → logprob: -10.752598762512207
    8. '")' → logprob: -11.627598762512207
    9. ']' → logprob: -11.877598762512207
    10. '`)' → logprob: -12.252598762512207

Token 105: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18002893030643463
    2. '<|end|>' → logprob: -2.3050289154052734
    3. 'n' → logprob: -3.3050289154052734
    4. 'if' → logprob: -4.930028915405273
    5. ')' → logprob: -4.930028915405273
    6. 'he' → logprob: -5.555028915405273
    7. ' ' → logprob: -6.180028915405273
    8. '#' → logprob: -6.430028915405273
    9. 'for' → logprob: -7.055028915405273
    10. '
' → logprob: -7.055028915405273

Token 106: '(check' (ID: 40506)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0727071613073349
    2. '(check' → logprob: -2.822707176208496
    3. '('' → logprob: -4.572707176208496
    4. '(print' → logprob: -9.072707176208496
    5. '("' → logprob: -9.197707176208496
    6. '("("' → logprob: -9.447707176208496
    7. '()' → logprob: -11.322707176208496
    8. '(
' → logprob: -11.697707176208496
    9. ' (' → logprob: -11.697707176208496
    10. '((' → logprob: -12.072707176208496

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006864601746201515
    2. '(h' → logprob: -7.6256866455078125
    3. ')' → logprob: -9.000686645507812
    4. '(n' → logprob: -9.875686645507812
    5. '(ht' → logprob: -11.875686645507812
    6. '(
' → logprob: -12.500686645507812
    7. '(s' → logprob: -13.125686645507812
    8. '((' → logprob: -13.250686645507812
    9. '([' → logprob: -13.500686645507812
    10. ' (' → logprob: -13.500686645507812

Token 108: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0003819332632701844
    2. ' heights' → logprob: -7.875381946563721
    3. ')' → logprob: -14.375381469726562
    4. 'height' → logprob: -14.625381469726562
    5. ' he' → logprob: -14.750381469726562
    6. '(' → logprob: -15.125381469726562
    7. 'h' → logprob: -16.875381469726562
    8. 'hs' → logprob: -16.875381469726562
    9. '[' → logprob: -17.250381469726562
    10. '_he' → logprob: -17.875381469726562

Token 109: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -7.465036105713807e-06
    2. 'ight' → logprob: -12.375007629394531
    3. 'i' → logprob: -14.000007629394531
    4. 'ght' → logprob: -14.000007629394531
    5. 'igh' → logprob: -14.000007629394531
    6. 'IGHTS' → logprob: -14.875007629394531
    7. 'ig' → logprob: -16.50000762939453
    8. 'ught' → logprob: -16.62500762939453
    9. '```' → logprob: -17.12500762939453
    10. '[' → logprob: -17.50000762939453

Token 110: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002477796748280525
    2. ')' → logprob: -6.002477645874023
    3. '))
' → logprob: -13.252477645874023
    4. ')))' → logprob: -15.127477645874023
    5. ')
' → logprob: -16.752477645874023
    6. '])' → logprob: -17.502477645874023
    7. ' ))' → logprob: -17.877477645874023
    8. '),' → logprob: -18.252477645874023
    9. ' )' → logprob: -19.502477645874023
    10. ')}' → logprob: -19.627477645874023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 50.93%
Précision adaptée (1ère position): 50.93%
Précision (top 10): 81.48%
================================================================================
