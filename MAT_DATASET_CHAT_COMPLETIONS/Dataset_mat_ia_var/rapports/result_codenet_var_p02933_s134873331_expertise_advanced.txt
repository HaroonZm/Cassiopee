================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print((lambda a, s: s if a >= 3200 else 'red')(int(input()), input()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '((' (ID: 2054)
  → Token d'amorce (pas de prédiction)

Token 2: 'lambda' (ID: 35280)
  → Token d'amorce (pas de prédiction)

Token 3: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07422249019145966
    2. ' a' → logprob: -3.4492225646972656
    3. ' ' → logprob: -4.074222564697266
    4. ' )' → logprob: -4.824222564697266
    5. ' lambda' → logprob: -5.449222564697266
    6. 'x' → logprob: -5.574222564697266
    7. ' (' → logprob: -5.574222564697266
    8. 'a' → logprob: -7.574222564697266
    9. ' n' → logprob: -7.949222564697266
    10. ')' → logprob: -7.949222564697266

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3733471930027008
    2. ' ,' → logprob: -1.9983471632003784
    3. ':' → logprob: -2.748347282409668
    4. ' ' → logprob: -3.123347282409668
    5. ' :' → logprob: -3.498347282409668
    6. ' a' → logprob: -3.623347282409668
    7. ',a' → logprob: -5.498347282409668
    8. 'a' → logprob: -6.373347282409668
    9. ' x' → logprob: -6.498347282409668
    10. '   ' → logprob: -7.373347282409668

Token 5: ' s' (ID: 265)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22552430629730225
    2. 'b' → logprob: -1.6005243062973022
    3. ' ' → logprob: -10.350523948669434
    4. 'a' → logprob: -10.475523948669434
    5. ' a' → logprob: -10.600523948669434
    6. ' s' → logprob: -12.100523948669434
    7. 's' → logprob: -12.850523948669434
    8. ' x' → logprob: -13.475523948669434
    9. ' ' → logprob: -13.663023948669434
    10. ',' → logprob: -13.725523948669434

Token 6: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043897125869989395
    2. ' :' → logprob: -3.4188971519470215
    3. ',' → logprob: -4.7938971519470215
    4. ',:' → logprob: -7.4188971519470215
    5. ',a' → logprob: -7.5438971519470215
    6. ' ,' → logprob: -8.293896675109863
    7. '=' → logprob: -9.418896675109863
    8. ':a' → logprob: -9.543896675109863
    9. ':,' → logprob: -9.668896675109863
    10. 'a' → logprob: -10.293896675109863

Token 7: ' s' (ID: 265)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6552721858024597
    2. 'a' → logprob: -0.7802721858024597
    3. ' (' → logprob: -5.030272006988525
    4. '(a' → logprob: -5.155272006988525
    5. ''a' → logprob: -6.280272006988525
    6. ' f' → logprob: -6.280272006988525
    7. ''' → logprob: -6.405272006988525
    8. ' '' → logprob: -6.905272006988525
    9. 'f' → logprob: -7.155272006988525
    10. 's' → logprob: -7.280272006988525

Token 8: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3859069347381592
    2. '[' → logprob: -2.510906934738159
    3. '[a' → logprob: -2.510906934738159
    4. '(a' → logprob: -3.385906934738159
    5. ' +' → logprob: -4.010907173156738
    6. '.startswith' → logprob: -4.385907173156738
    7. '*' → logprob: -4.385907173156738
    8. ' and' → logprob: -4.385907173156738
    9. ')' → logprob: -4.510907173156738
    10. '+a' → logprob: -4.510907173156738

Token 9: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.39850422739982605
    2. 'a' → logprob: -1.1485042572021484
    3. ' not' → logprob: -4.523504257202148
    4. 'not' → logprob: -7.773504257202148
    5. ' s' → logprob: -8.648504257202148
    6. 's' → logprob: -10.273504257202148
    7. ' ' → logprob: -11.148504257202148
    8. '(a' → logprob: -11.273504257202148
    9. ' False' → logprob: -11.773504257202148
    10. ' True' → logprob: -12.023504257202148

Token 10: ' >=' (ID: 5064)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.0282022953033447
    2. '==' → logprob: -1.4032022953033447
    3. ' ==' → logprob: -1.9032022953033447
    4. '>' → logprob: -2.4032022953033447
    5. ' >' → logprob: -3.1532022953033447
    6. ' <' → logprob: -3.5282022953033447
    7. 'else' → logprob: -3.5282022953033447
    8. '<' → logprob: -4.153202056884766
    9. '%' → logprob: -4.778202056884766
    10. ')' → logprob: -4.903202056884766

Token 11: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.786254346370697
    2. ' ' → logprob: -1.4112544059753418
    3. '0' → logprob: -1.9112544059753418
    4. ' s' → logprob: -2.286254405975342
    5. '10' → logprob: -3.536254405975342
    6. '1' → logprob: -4.536254405975342
    7. '100' → logprob: -5.286254405975342
    8. '5' → logprob: -5.911254405975342
    9. '2' → logprob: -7.161254405975342
    10. '3' → logprob: -7.786254405975342

Token 12: '320' (ID: 15415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27833765745162964
    2. 's' → logprob: -1.9033377170562744
    3. '10' → logprob: -2.9033377170562744
    4. '1' → logprob: -4.278337478637695
    5. ' ' → logprob: -4.528337478637695
    6. '100' → logprob: -4.903337478637695
    7. '5' → logprob: -5.903337478637695
    8. '2' → logprob: -7.403337478637695
    9. ' s' → logprob: -7.528337478637695
    10. '18' → logprob: -7.653337478637695

Token 13: '0' (ID: 15)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.016101354733109474
    2. 'else' → logprob: -4.141101360321045
    3. ' ' → logprob: -10.391100883483887
    4. ' and' → logprob: -11.516100883483887
    5. '0' → logprob: -11.641100883483887
    6. '```' → logprob: -12.516100883483887
    7. '-' → logprob: -12.766100883483887
    8. ' or' → logprob: -13.516100883483887
    9. '+' → logprob: -13.641100883483887
    10. '    ' → logprob: -13.891100883483887

Token 14: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06222233176231384
    2. 'else' → logprob: -2.8122222423553467
    3. ' ' → logprob: -9.187222480773926
    4. '```' → logprob: -9.812222480773926
    5. '0' → logprob: -10.437222480773926
    6. '	else' → logprob: -11.437222480773926
    7. '-' → logprob: -11.562222480773926
    8. ')' → logprob: -12.062222480773926
    9. ' or' → logprob: -12.187222480773926
    10. ' ' → logprob: -12.187222480773926

Token 15: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6134696006774902
    2. ''' → logprob: -1.1134696006774902
    3. ' "' → logprob: -2.6134696006774902
    4. ' '' → logprob: -3.9884696006774902
    5. ''s' → logprob: -4.48846960067749
    6. 'print' → logprob: -5.11346960067749
    7. ''a' → logprob: -5.36346960067749
    8. ' ' → logprob: -5.98846960067749
    9. '"a' → logprob: -5.98846960067749
    10. '"s' → logprob: -6.23846960067749

Token 16: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.032643210142850876
    2. ''' → logprob: -4.4076433181762695
    3. '紅' → logprob: -5.0326433181762695
    4. '赤' → logprob: -5.6576433181762695
    5. 'Red' → logprob: -5.7826433181762695
    6. '"' → logprob: -6.6576433181762695
    7. '红' → logprob: -6.9076433181762695
    8. '色' → logprob: -7.6576433181762695
    9. 'レ' → logprob: -7.9076433181762695
    10. '不' → logprob: -7.9076433181762695

Token 17: '')(' (ID: 65372)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4138632118701935
    2. ''' → logprob: -1.663863182067871
    3. ''))' → logprob: -2.038863182067871
    4. '')(' → logprob: -4.163863182067871
    5. '')))' → logprob: -7.538863182067871
    6. ''s' → logprob: -7.788863182067871
    7. '\n' → logprob: -7.913863182067871
    8. 'print' → logprob: -8.038863182067871
    9. ')' → logprob: -8.163863182067871
    10. '```' → logprob: -8.413863182067871

Token 18: 'int' (ID: 491)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7632716298103333
    2. 'int' → logprob: -1.5132715702056885
    3. 'a' → logprob: -1.8882715702056885
    4. '320' → logprob: -2.8882715702056885
    5. ')' → logprob: -3.0132715702056885
    6. '0' → logprob: -4.263271808624268
    7. ' input' → logprob: -4.388271808624268
    8. ' ' → logprob: -5.138271808624268
    9. ' int' → logprob: -5.388271808624268
    10. ' )' → logprob: -5.388271808624268

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38930588960647583
    2. '(' → logprob: -1.139305830001831
    3. 'input' → logprob: -6.63930606842041
    4. '('' → logprob: -7.63930606842041
    5. ' ' → logprob: -8.76430606842041
    6. '<|end|>' → logprob: -9.13930606842041
    7. ' input' → logprob: -9.63930606842041
    8. ')' → logprob: -9.88930606842041
    9. ' (' → logprob: -10.01430606842041
    10. '(s' → logprob: -10.63930606842041

Token 20: '()),' (ID: 24379)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4707953929901123
    2. '('' → logprob: -1.8457953929901123
    3. '()' → logprob: -3.0957953929901123
    4. '()),' → logprob: -3.3457953929901123
    5. '<|end|>' → logprob: -3.7207953929901123
    6. '()))' → logprob: -4.095795631408691
    7. '(()' → logprob: -4.220795631408691
    8. ')' → logprob: -4.470795631408691
    9. '())))' → logprob: -4.595795631408691
    10. '())' → logprob: -4.720795631408691

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5634968876838684
    2. ''' → logprob: -1.0634968280792236
    3. ' input' → logprob: -3.0634968280792236
    4. '"' → logprob: -3.8134968280792236
    5. ''s' → logprob: -5.188497066497803
    6. ' ' → logprob: -6.063497066497803
    7. ' '' → logprob: -6.063497066497803
    8. ''int' → logprob: -6.688497066497803
    9. '(input' → logprob: -7.063497066497803
    10. ''"' → logprob: -7.938497066497803

Token 22: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4575101137161255
    2. '())' → logprob: -1.0825101137161255
    3. '))' → logprob: -4.332509994506836
    4. ')' → logprob: -4.582509994506836
    5. '()' → logprob: -5.332509994506836
    6. '())))' → logprob: -9.207509994506836
    7. ')))' → logprob: -10.832509994506836
    8. '(),' → logprob: -10.832509994506836
    9. '()));' → logprob: -10.957509994506836
    10. ''))' → logprob: -11.832509994506836


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 20
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 16
Précision stricte (1ère position): 35.00%
Précision adaptée (1ère position): 35.00%
Précision (top 10): 80.00%
================================================================================
