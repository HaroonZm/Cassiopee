================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate, chain
from bisect import bisect_left

def search_ab(sss, cursor):
    ai = bisect_left(aaa, cursor)
    tmp_cur = bbb[ai]
    max_cur = sss.index(0, cursor)
    repeat = 1
    while tmp_cur < max_cur:
        cur = s.find('a', tmp_cur, max_cur)
        if cur == -1:
            break
        ai = bisect_left(aaa, cur, ai)
        tmp_cur = bbb[ai]
        repeat += 1
    return repeat, max_cur + 1

def search_ba(sss, cursor):
    first_bi = bisect_left(bbb, cursor)
    max_cursor = sss.index(0, cursor)
    last_bi = bisect_left(aaa, max_cursor)
    buf_size = (last_bi - first_bi + 1) * 2
    tmp_buf = [''] * buf_size
    tmp_max = ''
    for i in range(last_bi, first_bi - 1, -1):
        tmp_buf[aaa[i] - cursor] = 'a'
        tmp_buf[bbb[i] - cursor] = 'b'
        tmp = ''.join(tmp_buf)
        if tmp > tmp_max:
            tmp_max = tmp
    return tmp_max, max_cursor + 1

def integrate(parts_b):
    tmp_max = ''
    for pb in reversed(parts_b):
        tmp = pb + tmp_max
        if tmp > tmp_max:
            tmp_max = tmp
    return tmp_max

n = int(input())
s = input()

sss = [-1 if c == 'a' else 1 for c in s]
sss = list(accumulate(sss))
aaa = [i for i, c in enumerate(s) if c == 'a']
bbb = [i for i, c in enumerate(s) if c == 'b']
n2 = n * 2

repeats_a = []
parts_b = []
last_b_cur = 0
cursor = 0

while cursor < n2:
    c = sss[cursor]
    if c < 0:
        repeat, cursor = search_ab(sss, cursor)
        repeats_a.append((cursor, repeat))
    else:
        tmp, cursor = search_ba(sss, cursor)
        parts_b.append(tmp)
        last_b_cur = cursor

ab_count = sum(r for c, r in repeats_a if c > last_b_cur)
print(integrate(parts_b) + 'ab' * ab_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.8176425099372864
    2. ' chain' → logprob: -0.9426425099372864
    3. 'group' → logprob: -2.6926424503326416
    4. 'com' → logprob: -3.0676424503326416
    5. ' group' → logprob: -3.0676424503326416
    6. 'product' → logprob: -6.192642688751221
    7. 'compress' → logprob: -6.692642688751221
    8. ' product' → logprob: -6.942642688751221
    9. ' combinations' → logprob: -7.192642688751221
    10. '```' → logprob: -7.817642688751221

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029131805524230003
    2. ',' → logprob: -4.154131889343262
    3. '(
' → logprob: -4.654131889343262
    4. '.' → logprob: -6.029131889343262
    5. '\' → logprob: -8.404131889343262
    6. '\n' → logprob: -8.529131889343262
    7. '\(' → logprob: -8.779131889343262
    8. '(

' → logprob: -9.279131889343262
    9. 'import' → logprob: -9.654131889343262
    10. '(
' → logprob: -9.654131889343262

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17809362709522247
    2. '(
' → logprob: -3.303093671798706
    3. ',' → logprob: -3.553093671798706
    4. '\' → logprob: -3.803093671798706
    5. '\n' → logprob: -3.928093671798706
    6. '.' → logprob: -3.928093671798706
    7. 'import' → logprob: -4.053093433380127
    8. '```' → logprob: -4.678093433380127
    9. '
' → logprob: -5.803093433380127
    10. '`' → logprob: -6.803093433380127

Token 8: ' bis' (ID: 7204)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.463282972574234
    2. ' functools' → logprob: -1.8382829427719116
    3. ' collections' → logprob: -2.338283061981201
    4. ' math' → logprob: -2.963283061981201
    5. 'collections' → logprob: -3.463283061981201
    6. 'operator' → logprob: -4.088283061981201
    7. 'fun' → logprob: -4.963283061981201
    8. 'math' → logprob: -5.588283061981201
    9. ' typing' → logprob: -7.088283061981201
    10. ' ' → logprob: -7.338283061981201

Token 9: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.200166469876422e-06
    2. 'e' → logprob: -13.000004768371582
    3. 'ec' → logprob: -13.750004768371582
    4. 'ectl' → logprob: -14.750004768371582
    5. '>' → logprob: -15.125004768371582
    6. 'ected' → logprob: -15.250004768371582
    7. '   ' → logprob: -15.250004768371582
    8. 'ector' → logprob: -15.625004768371582
    9. '```' → logprob: -16.3750057220459
    10. '`' → logprob: -16.7500057220459

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5238341093063354
    2. 'import' → logprob: -0.8988341093063354
    3. '_import' → logprob: -7.898834228515625
    4. ' ' → logprob: -8.398834228515625
    5. '	import' → logprob: -9.273834228515625
    6. ' ' → logprob: -12.273834228515625
    7. '_' → logprob: -12.273834228515625
    8. 'from' → logprob: -13.523834228515625
    9. '```' → logprob: -13.523834228515625
    10. '<|end|>' → logprob: -13.648834228515625

Token 11: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3474184274673462
    2. 'bis' → logprob: -1.8474184274673462
    3. 'ins' → logprob: -2.4724183082580566
    4. ' ins' → logprob: -2.9724183082580566
    5. '_ins' → logprob: -8.347418785095215
    6. 'import' → logprob: -11.222418785095215
    7. '_left' → logprob: -11.472418785095215
    8. '_right' → logprob: -11.597418785095215
    9. '```' → logprob: -12.472418785095215
    10. '.ins' → logprob: -12.597418785095215

Token 12: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -6.511406809295295e-06
    2. 'e' → logprob: -12.125006675720215
    3. 'ec' → logprob: -14.125006675720215
    4. 'ected' → logprob: -16.6250057220459
    5. 'ext' → logprob: -17.3750057220459
    6. 'earch' → logprob: -17.7500057220459
    7. 'ects' → logprob: -17.7500057220459
    8. 'ectl' → logprob: -17.8750057220459
    9. 'elect' → logprob: -18.1250057220459
    10. 'ection' → logprob: -18.1250057220459

Token 13: '_left' (ID: 22189)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04480482637882233
    2. '_left' → logprob: -3.919804811477661
    3. '(' → logprob: -4.29480504989624
    4. '_

' → logprob: -5.91980504989624
    5. '_
' → logprob: -5.91980504989624
    6. '_right' → logprob: -7.41980504989624
    7. '```' → logprob: -7.66980504989624
    8. ',' → logprob: -7.79480504989624
    9. '(
' → logprob: -8.044804573059082
    10. 'import' → logprob: -8.169804573059082

Token 14: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9777429103851318
    2. '
' → logprob: -1.1027429103851318
    3. '(' → logprob: -1.8527429103851318
    4. '\' → logprob: -3.352742910385132
    5. '(
' → logprob: -3.477742910385132
    6. '(

' → logprob: -3.727742910385132
    7. '\n' → logprob: -4.352743148803711
    8. '


' → logprob: -4.852743148803711
    9. '```' → logprob: -5.477743148803711
    10. ',' → logprob: -5.477743148803711

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5732976198196411
    2. '(' → logprob: -1.6982976198196411
    3. '
' → logprob: -2.6982975006103516
    4. '\' → logprob: -2.8232975006103516
    5. '(
' → logprob: -3.3232975006103516
    6. '```' → logprob: -3.5732975006103516
    7. '\n' → logprob: -3.6982975006103516
    8. ',' → logprob: -4.698297500610352
    9. '`' → logprob: -4.823297500610352
    10. '

' → logprob: -5.198297500610352

Token 16: ' search' (ID: 3684)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.6185067892074585
    2. ' ' → logprob: -1.7435067892074585
    3. ' cumulative' → logprob: -1.7435067892074585
    4. ' binary' → logprob: -2.243506908416748
    5. ' merge' → logprob: -3.243506908416748
    6. ' get' → logprob: -3.243506908416748
    7. ' accumulate' → logprob: -3.243506908416748
    8. ' space' → logprob: -3.618506908416748
    9. ' predict' → logprob: -3.993506908416748
    10. ' count' → logprob: -4.618506908416748

Token 17: '_ab' (ID: 53632)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2322249859571457
    2. '_' → logprob: -1.857224941253662
    3. '_range' → logprob: -4.357224941253662
    4. '_(' → logprob: -4.982224941253662
    5. '_space' → logprob: -5.107224941253662
    6. '_sorted' → logprob: -5.607224941253662
    7. '_ranges' → logprob: -6.107224941253662
    8. '_items' → logprob: -6.107224941253662
    9. '_in' → logprob: -6.357224941253662
    10. '_insert' → logprob: -6.482224941253662

Token 18: '(ss' (ID: 68597)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9551964998245239
    2. 'solute' → logprob: -1.830196499824524
    3. 'c' → logprob: -2.0801963806152344
    4. 'a' → logprob: -2.3301963806152344
    5. 'ove' → logprob: -3.0801963806152344
    6. 'le' → logprob: -3.4551963806152344
    7. 'solutely' → logprob: -3.5801963806152344
    8. 'sol' → logprob: -4.080196380615234
    9. 'cd' → logprob: -4.330196380615234
    10. '```' → logprob: -4.330196380615234

Token 19: 's' (ID: 82)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7409282922744751
    2. '):' → logprob: -0.7409282922744751
    3. 's' → logprob: -4.1159281730651855
    4. 'ub' → logprob: -5.2409281730651855
    5. 'e' → logprob: -5.3659281730651855
    6. 'earch' → logprob: -5.9909281730651855
    7. '_' → logprob: -6.6159281730651855
    8. ' ):' → logprob: -6.6159281730651855
    9. 'uf' → logprob: -6.8659281730651855
    10. 'eq' → logprob: -6.8659281730651855

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46629226207733154
    2. '):' → logprob: -1.3412922620773315
    3. 's' → logprob: -2.341292381286621
    4. ')' → logprob: -4.591292381286621
    5. '[' → logprob: -7.341292381286621
    6. 'e' → logprob: -7.716292381286621
    7. ' ,' → logprob: -7.716292381286621
    8. '_' → logprob: -7.841292381286621
    9. ',s' → logprob: -8.091292381286621
    10. 'a' → logprob: -8.216292381286621

Token 21: ' cursor' (ID: 14944)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.697237253189087
    2. ' x' → logprob: -2.822237253189087
    3. ' key' → logprob: -2.822237253189087
    4. ' target' → logprob: -2.822237253189087
    5. 'key' → logprob: -2.947237253189087
    6. 'target' → logprob: -3.072237253189087
    7. ' t' → logprob: -3.322237253189087
    8. 't' → logprob: -3.447237253189087
    9. 's' → logprob: -3.447237253189087
    10. ' k' → logprob: -3.447237253189087

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.058085378259420395
    2. '_pos' → logprob: -3.4330854415893555
    3. ')' → logprob: -4.5580854415893555
    4. '_positions' → logprob: -5.5580854415893555
    5. ',' → logprob: -5.8080854415893555
    6. '=' → logprob: -6.3080854415893555
    7. '_position' → logprob: -6.4330854415893555
    8. '_' → logprob: -6.8080854415893555
    9. 's' → logprob: -7.0580854415893555
    10. ' ):' → logprob: -7.6830854415893555

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3778899908065796
    2. '   ' → logprob: -1.8778899908065796
    3. '[' → logprob: -2.502890110015869
    4. ' :' → logprob: -3.502890110015869
    5. ''' → logprob: -4.252890110015869
    6. '_' → logprob: -4.752890110015869
    7. '[]' → logprob: -5.377890110015869
    8. '    ' → logprob: -5.377890110015869
    9. '[:]' → logprob: -5.502890110015869
    10. '(' → logprob: -5.752890110015869

Token 24: ' ai' (ID: 8440)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34947583079338074
    2. '   ' → logprob: -2.849475860595703
    3. '    ' → logprob: -2.849475860595703
    4. ' 
' → logprob: -2.849475860595703
    5. '_' → logprob: -3.099475860595703
    6. ':' → logprob: -3.599475860595703
    7. '     
' → logprob: -5.224475860595703
    8. ' :' → logprob: -5.474475860595703
    9. 's' → logprob: -5.599475860595703
    10. 'n' → logprob: -5.974475860595703

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.618746280670166
    2. 'm' → logprob: -1.618746280670166
    3. 'r' → logprob: -1.743746280670166
    4. ' =' → logprob: -2.743746280670166
    5. 'nd' → logprob: -4.493746280670166
    6. '_' → logprob: -5.743746280670166
    7. 'ms' → logprob: -6.368746280670166
    8. 'd' → logprob: -6.743746280670166
    9. '_r' → logprob: -6.868746280670166
    10. '   ' → logprob: -7.118746280670166

Token 26: ' bis' (ID: 7204)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7181010842323303
    2. 'list' → logprob: -1.3431010246276855
    3. ' list' → logprob: -2.3431010246276855
    4. 'bis' → logprob: -2.4681010246276855
    5. ' bis' → logprob: -3.5931010246276855
    6. ' accumulate' → logprob: -3.9681010246276855
    7. 'ss' → logprob: -4.4681010246276855
    8. '0' → logprob: -6.3431010246276855
    9. 'ac' → logprob: -6.5931010246276855
    10. 'next' → logprob: -6.8431010246276855

Token 27: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.3676733690081164e-05
    2. 'sect' → logprob: -10.87502384185791
    3. 'e' → logprob: -13.12502384185791
    4. 'ec' → logprob: -13.50002384185791
    5. 'ected' → logprob: -14.50002384185791
    6. '```' → logprob: -15.00002384185791
    7. 'ectl' → logprob: -15.75002384185791
    8. 'ects' → logprob: -16.000022888183594
    9. 'ection' → logprob: -16.750022888183594
    10. '_left' → logprob: -17.125022888183594

Token 28: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.0033853515051305e-05
    2. '_' → logprob: -10.125060081481934
    3. '_right' → logprob: -12.125060081481934
    4. ' _' → logprob: -12.250060081481934
    5. '_le' → logprob: -12.500060081481934
    6. '_Left' → logprob: -12.875060081481934
    7. '_LEFT' → logprob: -13.375060081481934
    8. 'Left' → logprob: -14.875060081481934
    9. '```' → logprob: -15.375060081481934
    10. ')_' → logprob: -15.625060081481934

Token 29: '(' (ID: 7)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -3.225939872208983e-05
    2. '(' → logprob: -10.375032424926758
    3. '(
' → logprob: -14.625032424926758
    4. '(ll' → logprob: -16.500032424926758
    5. '(chain' → logprob: -16.625032424926758
    6. '(cursor' → logprob: -16.750032424926758
    7. '((' → logprob: -16.875032424926758
    8. '(

' → logprob: -16.875032424926758
    9. ' (' → logprob: -17.000032424926758
    10. '(s' → logprob: -17.500032424926758

Token 30: 'aaa' (ID: 55894)
  Prédit: 'sss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sss' → logprob: -0.024595191702246666
    2. '(ss' → logprob: -3.899595260620117
    3. 'ss' → logprob: -5.649595260620117
    4. ')' → logprob: -8.399595260620117
    5. 'ssss' → logprob: -9.274595260620117
    6. 'ssa' → logprob: -10.024595260620117
    7. '	ss' → logprob: -10.149595260620117
    8. ':ss' → logprob: -10.649595260620117
    9. '   ' → logprob: -10.774595260620117
    10. ' s' → logprob: -11.274595260620117

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005381622351706028
    2. ' ,' → logprob: -5.3803815841674805
    3. 's' → logprob: -8.13038158416748
    4. ',s' → logprob: -9.25538158416748
    5. '(' → logprob: -9.50538158416748
    6. ' ' → logprob: -10.00538158416748
    7. 'a' → logprob: -10.25538158416748
    8. ')' → logprob: -10.38038158416748
    9. '[' → logprob: -10.63038158416748
    10. '_,' → logprob: -10.75538158416748

Token 32: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.30940157175064087
    2. 'cursor' → logprob: -1.434401512145996
    3. 'sss' → logprob: -3.809401512145996
    4. '(cursor' → logprob: -5.809401512145996
    5. ')' → logprob: -6.934401512145996
    6. 'ss' → logprob: -7.559401512145996
    7. '(ss' → logprob: -8.184401512145996
    8. ' s' → logprob: -8.809401512145996
    9. ' ss' → logprob: -8.934401512145996
    10. 'ccc' → logprob: -9.059401512145996

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003253335307817906
    2. ' )' → logprob: -8.250325202941895
    3. ')
' → logprob: -10.125325202941895
    4. ')+' → logprob: -11.000325202941895
    5. '   ' → logprob: -13.750325202941895
    6. '+' → logprob: -13.750325202941895
    7. ')>' → logprob: -14.625325202941895
    8. ')

' → logprob: -14.625325202941895
    9. ')return' → logprob: -14.625325202941895
    10. ')`' → logprob: -14.625325202941895

Token 34: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24752403795719147
    2. '<|end|>' → logprob: -1.8725240230560303
    3. ' ' → logprob: -3.2475240230560303
    4. ']' → logprob: -4.872524261474609
    5. '   ' → logprob: -5.247524261474609
    6. '[' → logprob: -6.122524261474609
    7. '  ' → logprob: -6.372524261474609
    8. '<|end|>' → logprob: -6.497524261474609
    9. '+' → logprob: -6.872524261474609
    10. ' if' → logprob: -6.997524261474609

Token 35: ' tmp' (ID: 8919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0603303909301758
    2. ' ' → logprob: -1.4353303909301758
    3. '<|end|>' → logprob: -2.310330390930176
    4. ' if' → logprob: -2.685330390930176
    5. '[' → logprob: -3.185330390930176
    6. ']' → logprob: -3.560330390930176
    7. '   ' → logprob: -3.560330390930176
    8. 'if' → logprob: -4.060330390930176
    9. '  ' → logprob: -4.185330390930176
    10. '
' → logprob: -4.185330390930176

Token 36: '_cur' (ID: 46382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10314033925533295
    2. '=' → logprob: -2.353140354156494
    3. 's' → logprob: -6.853140354156494
    4. '_' → logprob: -6.978140354156494
    5. '_idx' → logprob: -8.228139877319336
    6. '_val' → logprob: -8.353139877319336
    7. ' _' → logprob: -9.603139877319336
    8. '_vals' → logprob: -9.853139877319336
    9. '_s' → logprob: -10.353139877319336
    10. '_list' → logprob: -10.353139877319336

Token 37: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5568537712097168
    2. ' =' → logprob: -1.6818537712097168
    3. '+' → logprob: -2.556853771209717
    4. ' +=' → logprob: -3.056853771209717
    5. '=' → logprob: -3.181853771209717
    6. '+=' → logprob: -3.306853771209717
    7. '```' → logprob: -4.181853771209717
    8. ' +' → logprob: -5.431853771209717
    9. '=s' → logprob: -5.931853771209717
    10. '   ' → logprob: -6.056853771209717

Token 38: ' b' (ID: 287)
  Prédit: ' aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aaa' → logprob: -0.7767732739448547
    2. ' cursor' → logprob: -1.40177321434021
    3. ' s' → logprob: -2.65177321434021
    4. 'sss' → logprob: -2.90177321434021
    5. 'cursor' → logprob: -3.27677321434021
    6. ' ss' → logprob: -3.40177321434021
    7. 'aaa' → logprob: -3.65177321434021
    8. '0' → logprob: -3.90177321434021
    9. ' ai' → logprob: -4.026773452758789
    10. ' ' → logprob: -4.401773452758789

Token 39: 'bb' (ID: 10029)
  Prédit: 'ase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ase' → logprob: -1.3031446933746338
    2. 'uf' → logprob: -1.3031446933746338
    3. '[' → logprob: -2.303144693374634
    4. 'in' → logprob: -3.178144693374634
    5. 'is' → logprob: -3.428144693374634
    6. 'r' → logprob: -3.678144693374634
    7. 'b' → logprob: -3.803144693374634
    8. 'uffer' → logprob: -3.803144693374634
    9. 'y' → logprob: -4.053144454956055
    10. 'egin' → logprob: -4.178144454956055

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.038166917860507965
    2. 'egin' → logprob: -4.6631669998168945
    3. '[:' → logprob: -4.7881669998168945
    4. 's' → logprob: -4.9131669998168945
    5. 'is' → logprob: -5.7881669998168945
    6. '[i' → logprob: -6.1631669998168945
    7. '_ai' → logprob: -6.9131669998168945
    8. '[-' → logprob: -7.4131669998168945
    9. '[a' → logprob: -7.5381669998168945
    10. 'eg' → logprob: -7.6631669998168945

Token 41: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.00389484572224319
    2. '0' → logprob: -6.253894805908203
    3. ' ai' → logprob: -6.878894805908203
    4. '-' → logprob: -8.003894805908203
    5. '-ai' → logprob: -8.253894805908203
    6. ':' → logprob: -9.753894805908203
    7. '(ai' → logprob: -9.753894805908203
    8. ' ' → logprob: -10.253894805908203
    9. ']' → logprob: -10.378894805908203
    10. '_ai' → logprob: -10.503894805908203

Token 42: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005597291048616171
    2. ']+' → logprob: -6.005597114562988
    3. '])' → logprob: -6.880597114562988
    4. ':]' → logprob: -7.255597114562988
    5. '][' → logprob: -7.630597114562988
    6. ']-' → logprob: -8.380597114562988
    7. ')]' → logprob: -9.130597114562988
    8. ' ]' → logprob: -9.130597114562988
    9. '-' → logprob: -9.130597114562988
    10. ')' → logprob: -9.380597114562988

Token 43: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06738332659006119
    2. ' +' → logprob: -3.192383289337158
    3. '[' → logprob: -4.442383289337158
    4. '+
' → logprob: -6.192383289337158
    5. ' if' → logprob: -6.317383289337158
    6. '   ' → logprob: -6.567383289337158
    7. '<|end|>' → logprob: -6.817383289337158
    8. ']' → logprob: -6.942383289337158
    9. 'if' → logprob: -7.192383289337158
    10. ':' → logprob: -7.192383289337158

Token 44: ' max' (ID: 2999)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16419921815395355
    2. ' +' → logprob: -3.289199113845825
    3. ' ' → logprob: -3.789199113845825
    4. '[' → logprob: -3.914199113845825
    5. '   ' → logprob: -4.539199352264404
    6. ')' → logprob: -4.789199352264404
    7. ':' → logprob: -5.164199352264404
    8. ',' → logprob: -5.164199352264404
    9. '<|end|>' → logprob: -5.164199352264404
    10. ' if' → logprob: -5.289199352264404

Token 45: '_cur' (ID: 46382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12384025007486343
    2. '_val' → logprob: -2.74884033203125
    3. '_cur' → logprob: -4.12384033203125
    4. '_len' → logprob: -4.37384033203125
    5. '_idx' → logprob: -5.12384033203125
    6. '_tmp' → logprob: -5.37384033203125
    7. '_ab' → logprob: -6.24884033203125
    8. '_cursor' → logprob: -6.24884033203125
    9. '(' → logprob: -6.37384033203125
    10. '_value' → logprob: -6.99884033203125

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22627012431621552
    2. '=' → logprob: -1.601270079612732
    3. '_' → logprob: -7.6012701988220215
    4. '=max' → logprob: -9.351269721984863
    5. '_idx' → logprob: -9.601269721984863
    6. ',' → logprob: -9.726269721984863
    7. ' ' → logprob: -10.226269721984863
    8. '   ' → logprob: -11.226269721984863
    9. '  ' → logprob: -11.351269721984863
    10. ')' → logprob: -11.476269721984863

Token 47: ' s' (ID: 265)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.520308792591095
    2. ' tmp' → logprob: -1.8953087329864502
    3. ' max' → logprob: -2.77030873298645
    4. 'tmp' → logprob: -2.89530873298645
    5. ' cursor' → logprob: -3.02030873298645
    6. ' aaa' → logprob: -4.395308971405029
    7. ' s' → logprob: -4.520308971405029
    8. ' ' → logprob: -4.520308971405029
    9. 'sss' → logprob: -4.645308971405029
    10. ' len' → logprob: -4.770308971405029

Token 48: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.00607194472104311
    2. 's' → logprob: -5.256072044372559
    3. 'sss' → logprob: -7.881072044372559
    4. '[' → logprob: -9.881072044372559
    5. 'sr' → logprob: -10.131072044372559
    6. 'tmp' → logprob: -10.256072044372559
    7. 'sc' → logprob: -10.631072044372559
    8. 'earch' → logprob: -10.881072044372559
    9. 'SS' → logprob: -11.006072044372559
    10. 'sm' → logprob: -11.006072044372559

Token 49: '.index' (ID: 9736)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08963643014431
    2. '[tmp' → logprob: -3.0896363258361816
    3. '[cur' → logprob: -4.714636325836182
    4. '[-' → logprob: -4.714636325836182
    5. '[max' → logprob: -5.339636325836182
    6. '<|end|>' → logprob: -5.464636325836182
    7. ')' → logprob: -6.339636325836182
    8. '.ai' → logprob: -6.464636325836182
    9. '-' → logprob: -6.464636325836182
    10. '[:]' → logprob: -7.339636325836182

Token 50: '(' (ID: 7)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.6811394691467285
    2. '('' → logprob: -0.8061394691467285
    3. '(' → logprob: -3.3061394691467285
    4. '(cursor' → logprob: -5.3061394691467285
    5. '("("' → logprob: -6.3061394691467285
    6. '(max' → logprob: -6.4311394691467285
    7. '((' → logprob: -7.4311394691467285
    8. '(b' → logprob: -8.43113899230957
    9. '('\' → logprob: -8.43113899230957
    10. '("' → logprob: -8.55613899230957

Token 51: '0' (ID: 15)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.88508540391922
    2. '('\' → logprob: -1.5100853443145752
    3. '('' → logprob: -1.6350853443145752
    4. '(' → logprob: -2.260085344314575
    5. 'tmp' → logprob: -4.010085582733154
    6. '("\' → logprob: -4.385085582733154
    7. '(',' → logprob: -5.260085582733154
    8. '("' → logprob: -5.385085582733154
    9. '('"' → logprob: -5.635085582733154
    10. ''\' → logprob: -5.885085582733154

Token 52: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032848981209099293
    2. ')+' → logprob: -6.628284931182861
    3. ' )' → logprob: -6.878284931182861
    4. ',' → logprob: -7.378284931182861
    5. ')
' → logprob: -8.628284454345703
    6. '))' → logprob: -9.878284454345703
    7. ')

' → logprob: -11.628284454345703
    8. '),' → logprob: -11.753284454345703
    9. '')' → logprob: -12.378284454345703
    10. ']' → logprob: -12.378284454345703

Token 53: ' cursor' (ID: 14944)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.19717054069042206
    2. 'tmp' → logprob: -2.0721704959869385
    3. ' ai' → logprob: -3.3221704959869385
    4. 'ai' → logprob: -4.322170734405518
    5. ' cursor' → logprob: -6.947170734405518
    6. ')' → logprob: -7.197170734405518
    7. '  ' → logprob: -7.572170734405518
    8. ' ' → logprob: -7.572170734405518
    9. ' )' → logprob: -8.44717025756836
    10. '	tmp' → logprob: -9.19717025756836

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011415603570640087
    2. ')+' → logprob: -5.011415481567383
    3. '+' → logprob: -6.011415481567383
    4. ' )' → logprob: -6.136415481567383
    5. ')
' → logprob: -10.386415481567383
    6. ' +' → logprob: -10.761415481567383
    7. '+)' → logprob: -12.136415481567383
    8. ' ' → logprob: -12.636415481567383
    9. '))' → logprob: -12.761415481567383
    10. '   ' → logprob: -13.261415481567383

Token 55: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1414957493543625
    2. ')' → logprob: -2.516495704650879
    3. ' +' → logprob: -3.641495704650879
    4. ' ' → logprob: -4.141495704650879
    5. '<|end|>' → logprob: -5.641495704650879
    6. ')+' → logprob: -7.141495704650879
    7. ' )' → logprob: -7.141495704650879
    8. ' if' → logprob: -7.516495704650879
    9. '+
' → logprob: -7.516495704650879
    10. '   ' → logprob: -7.891495704650879

Token 56: ' repeat' (ID: 22962)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14259296655654907
    2. ' +' → logprob: -2.6425929069519043
    3. ')' → logprob: -3.8925929069519043
    4. '   ' → logprob: -4.392592906951904
    5. ' ' → logprob: -4.517592906951904
    6. '<|end|>' → logprob: -5.642592906951904
    7. '
' → logprob: -5.892592906951904
    8. '-' → logprob: -5.892592906951904
    9. ' if' → logprob: -6.017592906951904
    10. '  ' → logprob: -6.892592906951904

Token 57: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3083239197731018
    2. '_count' → logprob: -2.183323860168457
    3. ' =' → logprob: -3.433323860168457
    4. '(' → logprob: -3.433323860168457
    5. 'd' → logprob: -3.558323860168457
    6. '=' → logprob: -4.183323860168457
    7. 's' → logprob: -4.933323860168457
    8. 'ed' → logprob: -5.308323860168457
    9. ' ' → logprob: -5.683323860168457
    10. ' _' → logprob: -5.683323860168457

Token 58: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.0461407899856567
    2. ' tmp' → logprob: -1.0461407899856567
    3. 'tmp' → logprob: -2.671140670776367
    4. ' ' → logprob: -2.921140670776367
    5. ' b' → logprob: -3.046140670776367
    6. 'max' → logprob: -3.171140670776367
    7. ' s' → logprob: -3.171140670776367
    8. '0' → logprob: -4.046140670776367
    9. ' (' → logprob: -4.796140670776367
    10. '1' → logprob: -5.796140670776367

Token 59: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5087059736251831
    2. 'tmp' → logprob: -2.1337060928344727
    3. '0' → logprob: -2.3837060928344727
    4. 'sss' → logprob: -2.3837060928344727
    5. '1' → logprob: -3.7587060928344727
    6. ' max' → logprob: -4.258706092834473
    7. '(max' → logprob: -4.758706092834473
    8. ' tmp' → logprob: -4.883706092834473
    9. 'ss' → logprob: -5.258706092834473
    10. '(tmp' → logprob: -5.508706092834473

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6145373582839966
    2. '<|end|>' → logprob: -0.8645373582839966
    3. '+' → logprob: -3.489537239074707
    4. '<|end|>' → logprob: -5.739537239074707
    5. ')' → logprob: -7.114537239074707
    6. ';' → logprob: -7.614537239074707
    7. ' ' → logprob: -7.739537239074707
    8. '   ' → logprob: -7.989537239074707
    9. '#' → logprob: -7.989537239074707
    10. ',' → logprob: -8.864537239074707

Token 61: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38883402943611145
    2. '+' → logprob: -2.138833999633789
    3. '<|end|>' → logprob: -2.138833999633789
    4. ' 
' → logprob: -3.763833999633789
    5. ' ' → logprob: -4.013833999633789
    6. ' if' → logprob: -4.638833999633789
    7. '   ' → logprob: -4.763833999633789
    8. ',' → logprob: -5.013833999633789
    9. '+
' → logprob: -6.138833999633789
    10. '<|end|>' → logprob: -6.138833999633789

Token 62: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7936985492706299
    2. '   ' → logprob: -1.2936985492706299
    3. '<|end|>' → logprob: -2.04369854927063
    4. ' 
' → logprob: -3.54369854927063
    5. '
' → logprob: -3.66869854927063
    6. ')' → logprob: -4.168698310852051
    7. '+' → logprob: -4.668698310852051
    8. '[' → logprob: -5.043698310852051
    9. ' if' → logprob: -5.043698310852051
    10. '  ' → logprob: -5.043698310852051

Token 63: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.2261471152305603
    2. ' max' → logprob: -1.976147174835205
    3. ' repeat' → logprob: -3.476147174835205
    4. 'tmp' → logprob: -3.976147174835205
    5. ' cursor' → logprob: -4.976147174835205
    6. ' ' → logprob: -5.976147174835205
    7. ' True' → logprob: -6.851147174835205
    8. '(tmp' → logprob: -7.101147174835205
    9. 'max' → logprob: -7.601147174835205
    10. 'repeat' → logprob: -7.601147174835205

Token 64: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.001295596593990922
    2. '<' → logprob: -7.626295566558838
    3. '_' → logprob: -7.751295566558838
    4. 'cur' → logprob: -9.001296043395996
    5. '[cur' → logprob: -10.251296043395996
    6. '_tmp' → logprob: -10.376296043395996
    7. '<=' → logprob: -10.501296043395996
    8. ' <' → logprob: -10.626296043395996
    9. '<_' → logprob: -10.751296043395996
    10. '_max' → logprob: -11.751296043395996

Token 65: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4735284447669983
    2. '<' → logprob: -1.5985283851623535
    3. ' <=' → logprob: -2.0985283851623535
    4. '<=' → logprob: -3.2235283851623535
    5. '+' → logprob: -5.7235283851623535
    6. ' >' → logprob: -6.2235283851623535
    7. '>' → logprob: -6.4735283851623535
    8. ' >=' → logprob: -6.5985283851623535
    9. ' +' → logprob: -6.5985283851623535
    10. '>=' → logprob: -7.3485283851623535

Token 66: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.28123727440834045
    2. 'max' → logprob: -1.406237244606018
    3. ' ' → logprob: -10.156237602233887
    4. '=max' → logprob: -11.406237602233887
    5. '(max' → logprob: -11.656237602233887
    6. '=' → logprob: -12.281237602233887
    7. ' len' → logprob: -12.656237602233887
    8. ' maxlength' → logprob: -12.906237602233887
    9. '[max' → logprob: -12.906237602233887
    10. ' s' → logprob: -13.156237602233887

Token 67: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -4.1318875446449965e-05
    2. '_' → logprob: -10.375041007995605
    3. 'cur' → logprob: -11.750041007995605
    4. ' _' → logprob: -15.125041007995605
    5. '_curr' → logprob: -15.125041007995605
    6. '_max' → logprob: -15.250041007995605
    7. '_cursor' → logprob: -15.500041007995605
    8. 'Cur' → logprob: -15.875041007995605
    9. '_c' → logprob: -16.000041961669922
    10. '	cur' → logprob: -16.250041961669922

Token 68: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6009862422943115
    2. ':' → logprob: -0.8509862422943115
    3. ':
' → logprob: -3.9759862422943115
    4. 'and' → logprob: -5.475986480712891
    5. '   ' → logprob: -7.225986480712891
    6. ' :' → logprob: -7.725986480712891
    7. '       ' → logprob: -8.85098648071289
    8. '    ' → logprob: -8.97598648071289
    9. ' ' → logprob: -9.47598648071289
    10. ' :
' → logprob: -9.47598648071289

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04270705208182335
    2. '<|end|>' → logprob: -4.1677069664001465
    3. '        
' → logprob: -4.9177069664001465
    4. '+' → logprob: -5.2927069664001465
    5. ' ' → logprob: -6.2927069664001465
    6. '    ' → logprob: -6.2927069664001465
    7. '   ' → logprob: -6.4177069664001465
    8. '        ' → logprob: -6.5427069664001465
    9. ',' → logprob: -6.5427069664001465
    10. ' 
' → logprob: -6.9177069664001465

Token 70: ' cur' (ID: 4396)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.757672905921936
    2. '           ' → logprob: -2.1326727867126465
    3. ' 
' → logprob: -2.2576727867126465
    4. ' ' → logprob: -2.3826727867126465
    5. '<|end|>' → logprob: -2.6326727867126465
    6. 'tmp' → logprob: -2.7576727867126465
    7. '
' → logprob: -2.8826727867126465
    8. '            
' → logprob: -2.8826727867126465
    9. ' tmp' → logprob: -3.0076727867126465
    10. '        
' → logprob: -3.0076727867126465

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16532619297504425
    2. ' +=' → logprob: -2.2903261184692383
    3. '=' → logprob: -3.6653261184692383
    4. '+=' → logprob: -4.540326118469238
    5. '+' → logprob: -4.665326118469238
    6. ',' → logprob: -6.415326118469238
    7. ' +' → logprob: -6.790326118469238
    8. '_' → logprob: -7.290326118469238
    9. '   ' → logprob: -7.290326118469238
    10. '	' → logprob: -8.290326118469238

Token 72: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6644197106361389
    2. ' b' → logprob: -1.4144196510314941
    3. ' tmp' → logprob: -1.7894196510314941
    4. 'tmp' → logprob: -3.289419651031494
    5. ' chain' → logprob: -4.414419651031494
    6. 'sss' → logprob: -4.914419651031494
    7. ' max' → logprob: -5.789419651031494
    8. ' cursor' → logprob: -6.039419651031494
    9. ' repeat' → logprob: -6.164419651031494
    10. ' ' → logprob: -6.164419651031494

Token 73: '.find' (ID: 4231)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.002912096679210663
    2. 'tmp' → logprob: -6.3779120445251465
    3. 's' → logprob: -7.0029120445251465
    4. 'tt' → logprob: -9.752912521362305
    5. 'sss' → logprob: -9.877912521362305
    6. 'mp' → logprob: -10.377912521362305
    7. '_tmp' → logprob: -10.377912521362305
    8. 'sp' → logprob: -10.877912521362305
    9. 't' → logprob: -11.252912521362305
    10. 'st' → logprob: -11.877912521362305

Token 74: '('' (ID: 706)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.3797214925289154
    2. '(' → logprob: -1.3797215223312378
    3. '('' → logprob: -2.8797214031219482
    4. '(s' → logprob: -5.379721641540527
    5. '(tmp' → logprob: -7.129721641540527
    6. '(b' → logprob: -7.504721641540527
    7. '("' → logprob: -8.254721641540527
    8. '(substr' → logprob: -8.379721641540527
    9. '((' → logprob: -8.754721641540527
    10. '(lambda' → logprob: -9.129721641540527

Token 75: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6603033542633057
    2. '('' → logprob: -2.6603033542633057
    3. ''' → logprob: -2.7853033542633057
    4. '')' → logprob: -3.1603033542633057
    5. ' ' → logprob: -3.4103033542633057
    6. '"' → logprob: -3.4103033542633057
    7. '(' → logprob: -3.4103033542633057
    8. '',' → logprob: -3.5353033542633057
    9. 's' → logprob: -3.7853033542633057
    10. 'ab' → logprob: -4.160303115844727

Token 76: '',' (ID: 787)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.7697479724884033
    2. 'b' → logprob: -1.5197479724884033
    3. 'a' → logprob: -1.7697479724884033
    4. '',' → logprob: -2.1447479724884033
    5. ''' → logprob: -4.519747734069824
    6. 'bc' → logprob: -4.769747734069824
    7. 'aa' → logprob: -5.769747734069824
    8. 'bb' → logprob: -5.894747734069824
    9. 'ab' → logprob: -6.519747734069824
    10. '')
' → logprob: -6.644747734069824

Token 77: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6327576637268066
    2. 'tmp' → logprob: -0.7577576637268066
    3. '	tmp' → logprob: -9.382757186889648
    4. '(tmp' → logprob: -11.132757186889648
    5. '/tmp' → logprob: -11.632757186889648
    6. ')' → logprob: -11.882757186889648
    7. 'b' → logprob: -11.882757186889648
    8. '$tmp' → logprob: -12.257757186889648
    9. ' ' → logprob: -12.382757186889648
    10. '[tmp' → logprob: -12.632757186889648

Token 78: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0009800514671951532
    2. 'cur' → logprob: -7.000979900360107
    3. '_' → logprob: -11.500980377197266
    4. '[cur' → logprob: -11.500980377197266
    5. ')' → logprob: -11.750980377197266
    6. 'Cur' → logprob: -12.250980377197266
    7. '_)' → logprob: -12.250980377197266
    8. '	cur' → logprob: -12.500980377197266
    9. '_curr' → logprob: -12.625980377197266
    10. '_CUR' → logprob: -12.750980377197266

Token 79: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41310450434684753
    2. ')' → logprob: -1.16310453414917
    3. ' +' → logprob: -3.91310453414917
    4. ')+' → logprob: -5.41310453414917
    5. ' )' → logprob: -7.03810453414917
    6. '+)' → logprob: -7.53810453414917
    7. ',' → logprob: -11.913104057312012
    8. '   ' → logprob: -12.038104057312012
    9. '+')' → logprob: -12.538104057312012
    10. '    ' → logprob: -12.538104057312012

Token 80: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5760341882705688
    2. 'max' → logprob: -0.8260341882705688
    3. ' s' → logprob: -10.326034545898438
    4. ')' → logprob: -10.451034545898438
    5. ' ' → logprob: -11.451034545898438
    6. 's' → logprob: -12.076034545898438
    7. '	max' → logprob: -12.451034545898438
    8. '  ' → logprob: -13.076034545898438
    9. '    ' → logprob: -13.451034545898438
    10. '+' → logprob: -13.826034545898438

Token 81: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -5.013994814362377e-05
    2. 'cur' → logprob: -10.62505054473877
    3. '_' → logprob: -11.12505054473877
    4. '_c' → logprob: -13.37505054473877
    5. '	cur' → logprob: -13.62505054473877
    6. ')' → logprob: -13.62505054473877
    7. '_max' → logprob: -13.75005054473877
    8. 'Cur' → logprob: -13.87505054473877
    9. '_)' → logprob: -14.00005054473877
    10. '_curr' → logprob: -14.25005054473877

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019750266801565886
    2. ')
' → logprob: -6.501975059509277
    3. ' )' → logprob: -8.126975059509277
    4. '       ' → logprob: -9.626975059509277
    5. ')+' → logprob: -10.126975059509277
    6. '   ' → logprob: -10.376975059509277
    7. '+' → logprob: -11.126975059509277
    8. '):' → logprob: -12.251975059509277
    9. ')

' → logprob: -12.376975059509277
    10. ')
' → logprob: -12.876975059509277

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12315655499696732
    2. ')' → logprob: -2.7481565475463867
    3. '+' → logprob: -3.6231565475463867
    4. '<|end|>' → logprob: -3.8731565475463867
    5. '<|end|>' → logprob: -7.248156547546387
    6. ' +' → logprob: -7.248156547546387
    7. '
' → logprob: -7.498156547546387
    8. ')
' → logprob: -7.873156547546387
    9. ')+' → logprob: -7.998156547546387
    10. '        ' → logprob: -8.373156547546387

Token 84: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49866539239883423
    2. '<|end|>' → logprob: -1.3736653327941895
    3. ' ' → logprob: -3.1236653327941895
    4. ')' → logprob: -3.7486653327941895
    5. ' if' → logprob: -3.9986653327941895
    6. '        ' → logprob: -4.1236653327941895
    7. '+' → logprob: -4.7486653327941895
    8. '
' → logprob: -5.4986653327941895
    9. '<|end|>' → logprob: -5.4986653327941895
    10. '    ' → logprob: -5.6236653327941895

Token 85: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.225800558924675
    2. 'cur' → logprob: -1.6008005142211914
    3. '	cur' → logprob: -8.850800514221191
    4. '(cur' → logprob: -8.975800514221191
    5. ' ' → logprob: -10.725800514221191
    6. ' None' → logprob: -10.850800514221191
    7. 's' → logprob: -10.850800514221191
    8. '[cur' → logprob: -11.100800514221191
    9. ' ' → logprob: -11.850800514221191
    10. ' not' → logprob: -12.100800514221191

Token 86: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11822307854890823
    2. '==' → logprob: -2.743223190307617
    3. '==-' → logprob: -3.118223190307617
    4. '<' → logprob: -6.118223190307617
    5. '=' → logprob: -8.368223190307617
    6. ')' → logprob: -8.618223190307617
    7. ' <' → logprob: -8.993223190307617
    8. ' is' → logprob: -9.993223190307617
    9. ' ' → logprob: -10.118223190307617
    10. '[' → logprob: -11.243223190307617

Token 87: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.038116078823804855
    2. ' -' → logprob: -3.288115978240967
    3. ' ' → logprob: -10.038116455078125
    4. '   ' → logprob: -11.038116455078125
    5. '  ' → logprob: -11.663116455078125
    6. '0' → logprob: -13.663116455078125
    7. '-cur' → logprob: -13.913116455078125
    8. '-c' → logprob: -14.288116455078125
    9. '       ' → logprob: -14.538116455078125
    10. '    ' → logprob: -14.538116455078125

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -10.000051498413086
    3. '2' → logprob: -12.750051498413086
    4. '```' → logprob: -14.312551498413086
    5. 's' → logprob: -14.937551498413086
    6. '   ' → logprob: -15.062551498413086
    7. '5' → logprob: -15.750051498413086
    8. '`' → logprob: -15.750051498413086
    9. '7' → logprob: -16.250051498413086
    10. '11' → logprob: -16.312551498413086

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007002120837569237
    2. ':
' → logprob: -5.632002353668213
    3. '       ' → logprob: -6.257002353668213
    4. '           ' → logprob: -7.382002353668213
    5. ' or' → logprob: -7.632002353668213
    6. ':return' → logprob: -8.882001876831055
    7. '   ' → logprob: -9.757001876831055
    8. '<|end|>' → logprob: -9.882001876831055
    9. '):' → logprob: -10.257001876831055
    10. ',' → logprob: -10.632001876831055

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006390626076608896
    2. '       ' → logprob: -5.381390571594238
    3. '               ' → logprob: -7.756390571594238
    4. '   ' → logprob: -8.131390571594238
    5. ' break' → logprob: -8.131390571594238
    6. '<|end|>' → logprob: -8.631390571594238
    7. ':' → logprob: -8.881390571594238
    8. '            
' → logprob: -9.631390571594238
    9. 'break' → logprob: -10.256390571594238
    10. '	break' → logprob: -10.256390571594238

Token 91: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03509882465004921
    2. '               ' → logprob: -3.9100987911224365
    3. ' break' → logprob: -4.410099029541016
    4. 'break' (adapté à ' break') → logprob: -7.035099029541016
    5. '       ' → logprob: -7.160099029541016
    6. '   ' → logprob: -8.410099029541016
    7. '	break' → logprob: -8.910099029541016
    8. ' ' → logprob: -9.535099029541016
    9. '```' → logprob: -10.285099029541016
    10. '<|end|>' → logprob: -10.660099029541016

Token 92: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05335252732038498
    2. '<|end|>' → logprob: -3.1783525943756104
    3. '
' → logprob: -5.178352355957031
    4. '        
' → logprob: -6.553352355957031
    5. ')' → logprob: -6.678352355957031
    6. ',' → logprob: -7.678352355957031
    7. '<|end|>' → logprob: -7.928352355957031
    8. '   ' → logprob: -8.303352355957031
    9. '        ' → logprob: -9.053352355957031
    10. ' else' → logprob: -9.428352355957031

Token 94: ' ai' (ID: 8440)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1249905601143837
    2. '        ' → logprob: -3.124990463256836
    3. ' ' → logprob: -3.874990463256836
    4. '
' → logprob: -4.249990463256836
    5. '        
' → logprob: -4.249990463256836
    6. '<|end|>' → logprob: -4.624990463256836
    7. '    ' → logprob: -6.374990463256836
    8. '+' → logprob: -6.624990463256836
    9. ' 
' → logprob: -6.624990463256836
    10. ',' → logprob: -6.874990463256836

Token 95: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.038503751158714294
    2. '+=' → logprob: -3.288503646850586
    3. ' =' → logprob: -8.288503646850586
    4. '+' → logprob: -8.788503646850586
    5. '=' → logprob: -10.288503646850586
    6. ' +' → logprob: -10.788503646850586
    7. ' -=' → logprob: -13.413503646850586
    8. ']+=' → logprob: -14.288503646850586
    9. '   ' → logprob: -14.663503646850586
    10. '++' → logprob: -14.913503646850586

Token 96: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.06425740569829941
    2. 'bis' → logprob: -2.9392573833465576
    3. ' cur' → logprob: -5.564257621765137
    4. ' ai' → logprob: -6.064257621765137
    5. 'ai' → logprob: -6.564257621765137
    6. 'cur' → logprob: -7.064257621765137
    7. 'b' → logprob: -8.689257621765137
    8. ' bi' → logprob: -8.689257621765137
    9. ' b' → logprob: -9.064257621765137
    10. ' ' → logprob: -9.689257621765137

Token 97: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.4849443838757e-06
    2. 'sect' → logprob: -13.375004768371582
    3. 'ct' → logprob: -13.500004768371582
    4. 'ec' → logprob: -14.500004768371582
    5. 'e' → logprob: -15.000004768371582
    6. 'ected' → logprob: -15.125004768371582
    7. '```' → logprob: -16.250003814697266
    8. 'ectl' → logprob: -16.500003814697266
    9. 'ects' → logprob: -16.500003814697266
    10. '   ' → logprob: -17.250003814697266

Token 98: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -2.5776860184123507e-06
    2. 'left' → logprob: -13.25000286102295
    3. '_right' → logprob: -14.37500286102295
    4. '_LEFT' → logprob: -16.750001907348633
    5. 'Left' → logprob: -17.125001907348633
    6. '_le' → logprob: -17.125001907348633
    7. ' _' → logprob: -17.875001907348633
    8. '_' → logprob: -18.000001907348633
    9. '_Left' → logprob: -19.125001907348633
    10. ')_' → logprob: -19.750001907348633

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001410850090906024
    2. '(
' → logprob: -9.750141143798828
    3. '(a' → logprob: -10.875141143798828
    4. '(ss' → logprob: -11.250141143798828
    5. '(cc' → logprob: -11.500141143798828
    6. '(b' → logprob: -11.500141143798828
    7. 'aaa' → logprob: -12.375141143798828
    8. ' aaa' → logprob: -12.750141143798828
    9. '<|end|>' → logprob: -12.875141143798828
    10. ' (' → logprob: -13.000141143798828

Token 100: 'aaa' (ID: 55894)
  Prédit: 'aaa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.14873674511909485
    2. 'bbb' → logprob: -2.0237367153167725
    3. ' aaa' → logprob: -5.398736953735352
    4. 'ccc' → logprob: -7.148736953735352
    5. ' b' → logprob: -8.648736953735352
    6. ')' → logprob: -8.648736953735352
    7. 'sss' → logprob: -8.773736953735352
    8. 'aaaa' → logprob: -10.273736953735352
    9. ' ' → logprob: -10.523736953735352
    10. 'abc' → logprob: -11.023736953735352

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014704519708175212
    2. ' ,' → logprob: -9.500146865844727
    3. '[cur' → logprob: -9.875146865844727
    4. 'cur' → logprob: -11.750146865844727
    5. '(cur' → logprob: -12.500146865844727
    6. ',
' → logprob: -12.750146865844727
    7. ',c' → logprob: -14.375146865844727
    8. '       ' → logprob: -14.375146865844727
    9. '`,' → logprob: -14.375146865844727
    10. 'a' → logprob: -14.500146865844727

Token 102: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.006717386189848185
    2. ' cur' → logprob: -5.006717205047607
    3. '	cur' → logprob: -14.006717681884766
    4. 'tmp' → logprob: -14.756717681884766
    5. ' ' → logprob: -15.256717681884766
    6. '   ' → logprob: -16.131717681884766
    7. '[cur' → logprob: -16.131717681884766
    8. ')' → logprob: -16.256717681884766
    9. '(cur' → logprob: -16.506717681884766
    10. ' tmp' → logprob: -16.881717681884766

Token 103: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5812979340553284
    2. ')' → logprob: -0.8312979340553284
    3. ')+' → logprob: -5.581297874450684
    4. ')
' → logprob: -6.831297874450684
    5. '       ' → logprob: -8.456297874450684
    6. '+' → logprob: -8.456297874450684
    7. ' )
' → logprob: -10.706297874450684
    8. ')

' → logprob: -11.081297874450684
    9. ' )' → logprob: -11.456297874450684
    10. '   ' → logprob: -11.956297874450684

Token 104: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.14675121009349823
    2. ' ai' → logprob: -2.0217511653900146
    3. ')' → logprob: -5.771751403808594
    4. 'i' → logprob: -8.396751403808594
    5. 'ii' → logprob: -8.771751403808594
    6. '   ' → logprob: -9.271751403808594
    7. '0' → logprob: -9.771751403808594
    8. '(ai' → logprob: -10.021751403808594
    9. 'cur' → logprob: -10.146751403808594
    10. ' )' → logprob: -10.146751403808594

Token 105: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6029388308525085
    2. ')
' → logprob: -0.8529388308525085
    3. '+' → logprob: -3.8529388904571533
    4. ')+' → logprob: -5.352938652038574
    5. ' )
' → logprob: -8.477938652038574
    6. ')
' → logprob: -9.102938652038574
    7. ' )' → logprob: -9.102938652038574
    8. ',' → logprob: -9.477938652038574
    9. '   ' → logprob: -9.727938652038574
    10. ' +' → logprob: -10.102938652038574

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12246691435575485
    2. '<|end|>' → logprob: -2.497466802597046
    3. ')' → logprob: -3.622466802597046
    4. '        
' → logprob: -6.122467041015625
    5. ' ' → logprob: -6.747467041015625
    6. ',' → logprob: -6.997467041015625
    7. '
' → logprob: -7.247467041015625
    8. '        ' → logprob: -8.247467041015625
    9. '<|end|>' → logprob: -8.497467041015625
    10. ' 
' → logprob: -8.997467041015625

Token 107: ' tmp' (ID: 8919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5275195240974426
    2. 'tmp' (adapté à ' tmp') → logprob: -1.1525194644927979
    3. ' tmp' → logprob: -2.652519464492798
    4. 'bbb' → logprob: -4.152519702911377
    5. ' if' → logprob: -6.152519702911377
    6. '   ' → logprob: -6.777519702911377
    7. 'if' → logprob: -6.902519702911377
    8. ' b' → logprob: -7.027519702911377
    9. ' aaa' → logprob: -7.777519702911377
    10. 'repeat' → logprob: -8.027519226074219

Token 108: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0004421127669047564
    2. 'cur' → logprob: -8.125442504882812
    3. '_' → logprob: -9.750442504882812
    4. ' =' → logprob: -11.250442504882812
    5. '=' → logprob: -11.375442504882812
    6. '	cur' → logprob: -11.500442504882812
    7. ' _' → logprob: -12.125442504882812
    8. ')' → logprob: -12.125442504882812
    9. '_ai' → logprob: -12.125442504882812
    10. '+' → logprob: -12.250442504882812

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09446894377470016
    2. '=' → logprob: -2.594468832015991
    3. ' +=' → logprob: -4.21946907043457
    4. '+=' → logprob: -7.21946907043457
    5. '+' → logprob: -11.34446907043457
    6. ' +' → logprob: -12.59446907043457
    7. ' ' → logprob: -12.96946907043457
    8. '   ' → logprob: -14.34446907043457
    9. ' =)' → logprob: -15.34446907043457
    10. ')' → logprob: -15.46946907043457

Token 110: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.35021013021469116
    2. 'bbb' → logprob: -1.225210189819336
    3. 'b' → logprob: -7.350210189819336
    4. 'ccc' → logprob: -8.725210189819336
    5. 'cur' → logprob: -8.975210189819336
    6. ' ' → logprob: -9.100210189819336
    7. '   ' → logprob: -9.350210189819336
    8. '  ' → logprob: -9.475210189819336
    9. ' cur' → logprob: -9.475210189819336
    10. 'bb' → logprob: -9.475210189819336

Token 111: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0005216968129388988
    2. 'b' → logprob: -7.875521659851074
    3. '[' → logprob: -9.125521659851074
    4. 'bbb' → logprob: -11.500521659851074
    5. '+' → logprob: -11.625521659851074
    6. '[b' → logprob: -12.500521659851074
    7. 'bt' → logprob: -13.875521659851074
    8. 'rr' → logprob: -14.000521659851074
    9. '[i' → logprob: -14.250521659851074
    10. 'lb' → logprob: -14.375521659851074

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.282920129597187e-05
    2. '```' → logprob: -12.500012397766113
    3. 'ai' → logprob: -13.000012397766113
    4. '[
' → logprob: -13.500012397766113
    5. '\[' → logprob: -14.125012397766113
    6. '_ai' → logprob: -14.375012397766113
    7. '+' → logprob: -14.375012397766113
    8. '.ai' → logprob: -14.500012397766113
    9. '   ' → logprob: -14.500012397766113
    10. '(ai' → logprob: -14.625012397766113

Token 113: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.010100392624735832
    2. '[' → logprob: -4.635100364685059
    3. ' ai' → logprob: -8.135100364685059
    4. ',' → logprob: -10.760100364685059
    5. '(ai' → logprob: -11.385100364685059
    6. '_ai' → logprob: -11.510100364685059
    7. '.ai' → logprob: -13.135100364685059
    8. ')' → logprob: -13.260100364685059
    9. '-ai' → logprob: -13.385100364685059
    10. '][' → logprob: -14.260100364685059

Token 114: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40230873227119446
    2. ']+' → logprob: -1.652308702468872
    3. '+' → logprob: -2.027308702468872
    4. ' +' → logprob: -5.277308940887451
    5. ')' → logprob: -7.027308940887451
    6. ' ]' → logprob: -7.152308940887451
    7. ')+' → logprob: -7.527308940887451
    8. ']
' → logprob: -7.777308940887451
    9. '   ' → logprob: -9.402308464050293
    10. '+]' → logprob: -9.902308464050293

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1127360463142395
    2. ')' → logprob: -2.4877359867095947
    3. '<|end|>' → logprob: -4.862736225128174
    4. ' ' → logprob: -5.362736225128174
    5. '        ' → logprob: -5.487736225128174
    6. '+' → logprob: -6.362736225128174
    7. ',' → logprob: -6.362736225128174
    8. '   ' → logprob: -7.112736225128174
    9. '    ' → logprob: -7.112736225128174
    10. '      ' → logprob: -7.362736225128174

Token 116: ' repeat' (ID: 22962)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1818193793296814
    2. 'repeat' (adapté à ' repeat') → logprob: -2.181819438934326
    3. ' if' → logprob: -3.681819438934326
    4. ' repeat' → logprob: -3.931819438934326
    5. 'if' → logprob: -5.306819438934326
    6. '   ' → logprob: -6.556819438934326
    7. '        ' → logprob: -6.931819438934326
    8. 'return' → logprob: -8.306818962097168
    9. '+' → logprob: -8.431818962097168
    10. '           ' → logprob: -8.556818962097168

Token 117: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02411516010761261
    2. '+=' → logprob: -3.7741150856018066
    3. '+' → logprob: -7.524115085601807
    4. '=' → logprob: -9.024115562438965
    5. ' ' → logprob: -9.649115562438965
    6. ' +' → logprob: -9.899115562438965
    7. ' =' → logprob: -10.024115562438965
    8. '   ' → logprob: -10.524115562438965
    9. '    ' → logprob: -11.649115562438965
    10. '  ' → logprob: -12.774115562438965

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.756715774536133
    4. '   ' → logprob: -18.006715774536133
    5. '```' → logprob: -18.506715774536133
    6. '<|end|>' → logprob: -19.256715774536133
    7. '  ' → logprob: -20.006715774536133
    8. '2' → logprob: -20.131715774536133
    9. '100' → logprob: -20.319215774536133
    10. '１' → logprob: -20.319215774536133

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.53050296427682e-05
    2. ' ' → logprob: -9.37508487701416
    3. '2' → logprob: -16.375085830688477
    4. '   ' → logprob: -16.625085830688477
    5. '```' → logprob: -16.875085830688477
    6. ' ' → logprob: -17.750085830688477
    7. '111' → logprob: -17.750085830688477
    8. '  ' → logprob: -17.875085830688477
    9. 's' → logprob: -18.000085830688477
    10. 'cur' → logprob: -18.375085830688477

Token 120: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2817528247833252
    2. ' ' → logprob: -2.156752824783325
    3. '<|end|>' → logprob: -2.906752824783325
    4. '   ' → logprob: -3.156752824783325
    5. ')' → logprob: -4.406752586364746
    6. '    ' → logprob: -4.781752586364746
    7. '        ' → logprob: -5.906752586364746
    8. ' )' → logprob: -6.531752586364746
    9. '        
' → logprob: -6.781752586364746
    10. '      ' → logprob: -6.781752586364746

Token 122: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.390066534280777
    2. ' ' → logprob: -2.140066623687744
    3. '<|end|>' → logprob: -2.640066623687744
    4. '   ' → logprob: -3.015066623687744
    5. '    ' → logprob: -3.515066623687744
    6. '       ' → logprob: -3.640066623687744
    7. ' )' → logprob: -5.015066623687744
    8. '[' → logprob: -5.515066623687744
    9. ':' → logprob: -5.515066623687744
    10. '(' → logprob: -6.015066623687744

Token 123: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.009759752079844475
    2. ' repeat' → logprob: -4.634759902954102
    3. 'True' → logprob: -13.884759902954102
    4. 'cur' → logprob: -14.884759902954102
    5. ' True' → logprob: -14.884759902954102
    6. 'max' → logprob: -15.259759902954102
    7. '_repeat' → logprob: -15.384759902954102
    8. 'cursor' → logprob: -15.634759902954102
    9. 'search' → logprob: -15.634759902954102
    10. '   ' → logprob: -15.759759902954102

Token 124: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06413185596466064
    2. ')' → logprob: -3.439131736755371
    3. 'ss' → logprob: -4.064131736755371
    4. '[' → logprob: -5.564131736755371
    5. 'sss' → logprob: -5.689131736755371
    6. '<|end|>' → logprob: -6.439131736755371
    7. ' ' → logprob: -6.814131736755371
    8. ',' → logprob: -6.939131736755371
    9. '(ss' → logprob: -8.439131736755371
    10. ' s' → logprob: -8.439131736755371

Token 125: ' max' (ID: 2999)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1170958280563354
    2. ' ' → logprob: -1.4920958280563354
    3. '<|end|>' → logprob: -1.8670958280563354
    4. ')' → logprob: -1.9920958280563354
    5. ' s' → logprob: -2.617095947265625
    6. ',' → logprob: -3.617095947265625
    7. ' )' → logprob: -3.617095947265625
    8. ' ,' → logprob: -5.367095947265625
    9. ' ss' → logprob: -5.867095947265625
    10. 'sss' → logprob: -5.867095947265625

Token 126: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.00022296691895462573
    2. '_' → logprob: -8.750223159790039
    3. 'cur' → logprob: -10.250223159790039
    4. '_cursor' → logprob: -11.500223159790039
    5. '_max' → logprob: -12.375223159790039
    6. 'Cur' → logprob: -13.000223159790039
    7. '_c' → logprob: -13.375223159790039
    8. '__' → logprob: -13.500223159790039
    9. '_return' → logprob: -13.625223159790039
    10. '_)' → logprob: -13.750223159790039

Token 127: ' +' (ID: 659)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05670711398124695
    2. '<|end|>' → logprob: -3.4317071437835693
    3. ')' → logprob: -4.55670690536499
    4. 'ss' → logprob: -4.80670690536499
    5. 'sss' → logprob: -6.43170690536499
    6. '[' → logprob: -7.30670690536499
    7. ',' → logprob: -7.80670690536499
    8. ' ' → logprob: -8.306707382202148
    9. '(ss' → logprob: -8.681707382202148
    10. ' s' → logprob: -8.806707382202148

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038169484469108284
    2. ' ' → logprob: -7.8753814697265625
    3. '```' → logprob: -13.875381469726562
    4. '   ' → logprob: -15.875381469726562
    5. '2' → logprob: -15.875381469726562
    6. '+' → logprob: -16.000381469726562
    7. '0' → logprob: -16.500381469726562
    8. 'def' → logprob: -16.875381469726562
    9. '...' → logprob: -17.500381469726562
    10. '`' → logprob: -17.500381469726562

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.500003814697266
    4. '2' → logprob: -16.625003814697266
    5. '0' → logprob: -17.625003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '+' → logprob: -18.000003814697266
    8. 'len' → logprob: -18.125003814697266
    9. '6' → logprob: -18.500003814697266
    10. '7' → logprob: -18.625003814697266

Token 130: '

' (ID: 279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20251347124576569
    2. '<|end|>' → logprob: -2.2025134563446045
    3. ' s' → logprob: -3.8275134563446045
    4. ')' → logprob: -3.9525134563446045
    5. ' ' → logprob: -4.452513694763184
    6. '[' → logprob: -4.702513694763184
    7. '(' → logprob: -5.077513694763184
    8. ',' → logprob: -6.827513694763184
    9. 'ss' → logprob: -7.577513694763184
    10. '(s' → logprob: -7.577513694763184

Token 131: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.040431953966617584
    2. 'sss' → logprob: -4.290431976318359
    3. 'ss' → logprob: -4.540431976318359
    4. '[' → logprob: -4.790431976318359
    5. ')' → logprob: -5.790431976318359
    6. ' s' → logprob: -6.915431976318359
    7. 'a' → logprob: -7.665431976318359
    8. '(ss' → logprob: -7.665431976318359
    9. '(' → logprob: -7.915431976318359
    10. '<|end|>' → logprob: -8.29043197631836

Token 132: ' search' (ID: 3684)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.578471302986145
    2. ' search' → logprob: -1.328471302986145
    3. 'search' → logprob: -2.7034711837768555
    4. 'main' → logprob: -3.2034711837768555
    5. ' find' → logprob: -3.9534711837768555
    6. ' solve' → logprob: -5.0784711837768555
    7. ' s' → logprob: -5.3284711837768555
    8. ' count' → logprob: -5.9534711837768555
    9. ' aaa' → logprob: -6.2034711837768555
    10. ' process' → logprob: -6.3284711837768555

Token 133: '_b' (ID: 1535)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.0974891185760498
    2. '_' → logprob: -2.97248911857605
    3. '(ss' → logprob: -4.347489356994629
    4. '_b' → logprob: -4.347489356994629
    5. '_a' → logprob: -5.347489356994629
    6. '_ss' → logprob: -5.347489356994629
    7. 'ab' → logprob: -6.597489356994629
    8. '(' → logprob: -6.972489356994629
    9. '(s' → logprob: -7.097489356994629
    10. 'sss' → logprob: -7.347489356994629

Token 134: 'a' (ID: 64)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.0325196348130703
    2. 'b' → logprob: -3.782519578933716
    3. 'ss' → logprob: -5.282519817352295
    4. '(s' → logprob: -5.907519817352295
    5. 'bb' → logprob: -7.407519817352295
    6. 'ab' → logprob: -8.407519340515137
    7. '(' → logprob: -8.657519340515137
    8. 'bbb' → logprob: -8.657519340515137
    9. 'sss' → logprob: -9.032519340515137
    10. 's' → logprob: -9.657519340515137

Token 135: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.006840999238193035
    2. '(s' → logprob: -5.00684118270874
    3. '(' → logprob: -10.131840705871582
    4. 'ss' → logprob: -10.131840705871582
    5. 's' → logprob: -10.506840705871582
    6. ' (' → logprob: -11.631840705871582
    7. 'a' → logprob: -12.756840705871582
    8. 'sss' → logprob: -13.131840705871582
    9. 'b' → logprob: -13.256840705871582
    10. ' ss' → logprob: -14.631840705871582

Token 136: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12750300765037537
    2. 'ss' → logprob: -2.127502918243408
    3. '(ss' → logprob: -7.627502918243408
    4. '(s' → logprob: -9.502503395080566
    5. 'sss' → logprob: -11.752503395080566
    6. '```' → logprob: -13.877503395080566
    7. ' s' → logprob: -14.502503395080566
    8. ' ss' → logprob: -15.002503395080566
    9. 'с' → logprob: -15.002503395080566
    10. 'sp' → logprob: -15.377503395080566

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. '):' → logprob: -10.25006103515625
    3. ' ,' → logprob: -11.00006103515625
    4. ',c' → logprob: -12.75006103515625
    5. ',s' → logprob: -13.75006103515625
    6. '):
' → logprob: -14.00006103515625
    7. ',b' → logprob: -14.37506103515625
    8. '(cursor' → logprob: -14.37506103515625
    9. ')' → logprob: -14.62506103515625
    10. ',
' → logprob: -14.87506103515625

Token 138: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.5257309675216675
    2. ' cursor' → logprob: -0.9007309675216675
    3. 'sss' → logprob: -6.900731086730957
    4. 'ss' → logprob: -7.400731086730957
    5. ' s' → logprob: -8.275731086730957
    6. 's' → logprob: -8.650731086730957
    7. ' ss' → logprob: -9.025731086730957
    8. 'cur' → logprob: -9.963231086730957
    9. 'bbb' → logprob: -10.213231086730957
    10. 'ccc' → logprob: -10.213231086730957

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016062524169683456
    2. '):
' → logprob: -4.1410627365112305
    3. ')' → logprob: -11.26606273651123
    4. '   ' → logprob: -12.01606273651123
    5. ':' → logprob: -12.39106273651123
    6. '):
' → logprob: -12.64106273651123
    7. ',' → logprob: -14.14106273651123
    8. ' ):' → logprob: -14.26606273651123
    9. '):

' → logprob: -14.64106273651123
    10. ' ' → logprob: -17.016061782836914

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001099968678317964
    2. 'ai' → logprob: -6.876100063323975
    3. ' ai' → logprob: -10.001099586486816
    4. 'def' → logprob: -10.876099586486816
    5. '   ' → logprob: -13.251099586486816
    6. ' ' → logprob: -14.751099586486816
    7. ' def' → logprob: -15.626099586486816
    8. '  ' → logprob: -15.751099586486816
    9. '```' → logprob: -16.001100540161133
    10. 'max' → logprob: -16.751100540161133

Token 141: ' first' (ID: 1577)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.24559928476810455
    2. '   ' → logprob: -1.6205992698669434
    3. 'def' → logprob: -3.9955992698669434
    4. ' ai' → logprob: -6.745599269866943
    5. 'bi' → logprob: -9.245599746704102
    6. ' ' → logprob: -9.620599746704102
    7. 'aa' → logprob: -9.745599746704102
    8. '```' → logprob: -10.370599746704102
    9. 'ba' → logprob: -10.495599746704102
    10. 'bb' → logprob: -10.620599746704102

Token 142: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5228238701820374
    2. ' =' → logprob: -1.0228238105773926
    3. '=' → logprob: -4.022823810577393
    4. '_cur' → logprob: -4.022823810577393
    5. '_space' → logprob: -5.897823810577393
    6. '_cursor' → logprob: -6.022823810577393
    7. '_=' → logprob: -7.022823810577393
    8. '_char' → logprob: -7.272823810577393
    9. '_pos' → logprob: -7.272823810577393
    10. 'cur' → logprob: -7.397823810577393

Token 143: 'i' (ID: 72)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29367348551750183
    2. '=' → logprob: -1.4186735153198242
    3. 'r' → logprob: -6.293673515319824
    4. 'b' → logprob: -6.418673515319824
    5. '_index' → logprob: -6.543673515319824
    6. '_idx' → logprob: -6.668673515319824
    7. '_' → logprob: -6.918673515319824
    8. 'a' → logprob: -7.418673515319824
    9. '=_' → logprob: -7.418673515319824
    10. '=index' → logprob: -7.543673515319824

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.699447751045227
    2. ' =' → logprob: -0.699447751045227
    3. 'nd' → logprob: -5.4494476318359375
    4. 'n' → logprob: -6.9494476318359375
    5. 't' → logprob: -7.5744476318359375
    6. '=index' → logprob: -8.574447631835938
    7. 's' → logprob: -9.074447631835938
    8. '   ' → logprob: -9.949447631835938
    9. 'f' → logprob: -10.449447631835938
    10. 'def' → logprob: -10.574447631835938

Token 145: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.27580633759498596
    2. 'sss' → logprob: -1.5258063077926636
    3. 'bbb' → logprob: -4.900806427001953
    4. ' bis' → logprob: -4.900806427001953
    5. 's' → logprob: -5.775806427001953
    6. 'ss' → logprob: -5.775806427001953
    7. ' s' → logprob: -7.400806427001953
    8. '0' → logprob: -7.400806427001953
    9. 'aaa' → logprob: -8.900806427001953
    10. 'b' → logprob: -9.025806427001953

Token 146: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.6379375457763672
    2. 'ect' → logprob: -0.7629375457763672
    3. 'ct' → logprob: -5.387937545776367
    4. 'left' → logprob: -8.387937545776367
    5. 's' → logprob: -8.512937545776367
    6. 'cept' → logprob: -9.512937545776367
    7. '_left' → logprob: -9.637937545776367
    8. 'eft' → logprob: -10.512937545776367
    9. 'e' → logprob: -10.762937545776367
    10. 'se' → logprob: -11.262937545776367

Token 147: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.00015562419139314443
    2. 'left' → logprob: -9.250155448913574
    3. '_right' → logprob: -9.750155448913574
    4. 'Left' → logprob: -14.250155448913574
    5. '_LEFT' → logprob: -15.750155448913574
    6. 'import' → logprob: -17.00015640258789
    7. 'b' → logprob: -17.12515640258789
    8. '(b' → logprob: -17.37515640258789
    9. '_Left' → logprob: -17.37515640258789
    10. 'right' → logprob: -17.62515640258789

Token 148: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31614330410957336
    2. '(b' → logprob: -1.316143274307251
    3. '(bb' → logprob: -6.19114351272583
    4. 'bbb' → logprob: -7.69114351272583
    5. '(cc' → logprob: -8.566143035888672
    6. 'aaa' → logprob: -9.441143035888672
    7. '(a' → logprob: -9.816143035888672
    8. '(ss' → logprob: -11.566143035888672
    9. '(ab' → logprob: -11.941143035888672
    10. '```' → logprob: -12.566143035888672

Token 149: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0004529566504061222
    2. 'aa' → logprob: -8.375452995300293
    3. 'b' → logprob: -8.500452995300293
    4. 'bbb' → logprob: -11.750452995300293
    5. 'ba' → logprob: -12.250452995300293
    6. 'a' → logprob: -13.375452995300293
    7. 'aaa' → logprob: -13.375452995300293
    8. 'bbs' → logprob: -14.250452995300293
    9. 'ss' → logprob: -15.125452995300293
    10. 'll' → logprob: -15.250452995300293

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003740694955922663
    2. ' ,' → logprob: -8.125373840332031
    3. '(' → logprob: -10.250373840332031
    4. ',b' → logprob: -12.250373840332031
    5. ')' → logprob: -12.500373840332031
    6. 'def' → logprob: -12.500373840332031
    7. '(ss' → logprob: -12.500373840332031
    8. ',(' → logprob: -12.625373840332031
    9. 'aaa' → logprob: -12.875373840332031
    10. '(b' → logprob: -12.875373840332031

Token 151: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.00879573542624712
    2. ' cursor' → logprob: -4.758795738220215
    3. 'sss' → logprob: -9.508795738220215
    4. 'ccc' → logprob: -9.758795738220215
    5. '	cursor' → logprob: -11.133795738220215
    6. 'aaa' → logprob: -11.383795738220215
    7. '(cursor' → logprob: -11.508795738220215
    8. 'bbb' → logprob: -12.508795738220215
    9. 'cur' → logprob: -13.008795738220215
    10. '0' → logprob: -13.258795738220215

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07178614288568497
    2. ')
' → logprob: -2.6967861652374268
    3. '   ' → logprob: -6.446785926818848
    4. ',' → logprob: -8.446785926818848
    5. 'def' → logprob: -10.946785926818848
    6. ' )' → logprob: -11.446785926818848
    7. ' ' → logprob: -12.946785926818848
    8. ')

' → logprob: -12.946785926818848
    9. ')
' → logprob: -13.071785926818848
    10. '  ' → logprob: -13.196785926818848

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008842529729008675
    2. 'tmp' → logprob: -5.508842468261719
    3. ')' → logprob: -6.633842468261719
    4. '
' → logprob: -6.758842468261719
    5. '```' → logprob: -7.633842468261719
    6. 'ai' → logprob: -7.633842468261719
    7. 'cur' → logprob: -8.133842468261719
    8. 'max' → logprob: -8.883842468261719
    9. ' tmp' → logprob: -9.008842468261719
    10. ',' → logprob: -9.008842468261719

Token 154: ' max' (ID: 2999)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.71967613697052
    2. 'ai' → logprob: -0.96967613697052
    3. 'cur' → logprob: -3.0946760177612305
    4. 'bi' → logprob: -3.7196760177612305
    5. ' tmp' → logprob: -4.0946760177612305
    6. 'max' (adapté à ' max') → logprob: -4.2196760177612305
    7. '   ' → logprob: -4.7196760177612305
    8. ' cur' → logprob: -4.9696760177612305
    9. ' ai' → logprob: -5.3446760177612305
    10. 'if' → logprob: -5.8446760177612305

Token 155: '_cursor' (ID: 69415)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0024376162327826023
    2. 'cur' → logprob: -6.252437591552734
    3. '_cursor' → logprob: -8.377437591552734
    4. '_' → logprob: -8.502437591552734
    5. '_ss' → logprob: -11.252437591552734
    6. '_val' → logprob: -11.627437591552734
    7. '_b' → logprob: -11.877437591552734
    8. '_max' → logprob: -12.002437591552734
    9. '_def' → logprob: -12.627437591552734
    10. '_pos' → logprob: -12.752437591552734

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025204956531525
    2. '=' → logprob: -1.9102520942687988
    3. ',' → logprob: -11.66025161743164
    4. '   ' → logprob: -12.28525161743164
    5. ' ' → logprob: -12.53525161743164
    6. ')' → logprob: -12.66025161743164
    7. ':' → logprob: -13.66025161743164
    8. '_' → logprob: -14.03525161743164
    9. 'def' → logprob: -14.16025161743164
    10. 'b' → logprob: -14.66025161743164

Token 157: ' s' (ID: 265)
  Prédit: 'sss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sss' → logprob: -0.03216993063688278
    2. ' s' → logprob: -4.157169818878174
    3. 'aaa' → logprob: -4.657169818878174
    4. ' aaa' → logprob: -5.782169818878174
    5. 'ccc' → logprob: -6.407169818878174
    6. 'ss' → logprob: -7.157169818878174
    7. 'len' → logprob: -8.532170295715332
    8. 's' → logprob: -8.782170295715332
    9. ' len' → logprob: -8.907170295715332
    10. ' ' → logprob: -9.282170295715332

Token 158: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.0004341261519584805
    2. 's' → logprob: -8.375433921813965
    3. '.index' → logprob: -8.625433921813965
    4. '[index' → logprob: -12.625433921813965
    5. '[' → logprob: -13.000433921813965
    6. '.find' → logprob: -13.000433921813965
    7. 'sss' → logprob: -13.000433921813965
    8. '.length' → logprob: -13.125433921813965
    9. 'index' → logprob: -13.500433921813965
    10. 'dd' → logprob: -13.750433921813965

Token 159: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -2.15310683415737e-05
    2. 'index' → logprob: -11.125021934509277
    3. '.' → logprob: -12.375021934509277
    4. '.find' → logprob: -13.750021934509277
    5. '#index' → logprob: -14.875021934509277
    6. ' .' → logprob: -15.000021934509277
    7. '.argmax' → logprob: -15.125021934509277
    8. '[index' → logprob: -15.625021934509277
    9. '   ' → logprob: -16.00002098083496
    10. '[' → logprob: -17.00002098083496

Token 160: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.843177233240567e-05
    2. '0' → logprob: -11.625018119812012
    3. ' (' → logprob: -11.875018119812012
    4. '(
' → logprob: -13.625018119812012
    5. '('' → logprob: -14.125018119812012
    6. '(False' → logprob: -16.000019073486328
    7. 'a' → logprob: -16.250019073486328
    8. '(-' → logprob: -16.875019073486328
    9. 'b' → logprob: -17.000019073486328
    10. '((' → logprob: -17.125019073486328

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007958084461279213
    2. ' ' → logprob: -7.500795841217041
    3. '1' → logprob: -8.875795364379883
    4. '(' → logprob: -9.375795364379883
    5. 'a' → logprob: -11.500795364379883
    6. 'b' → logprob: -13.125795364379883
    7. '   ' → logprob: -13.625795364379883
    8. ' (' → logprob: -14.000795364379883
    9. ',' → logprob: -14.250795364379883
    10. ')' → logprob: -14.563295364379883

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. ')' → logprob: -11.000031471252441
    3. ' ,' → logprob: -11.500031471252441
    4. '(cursor' → logprob: -13.125031471252441
    5. ',c' → logprob: -14.500031471252441
    6. ',b' → logprob: -14.625031471252441
    7. ',
' → logprob: -14.875031471252441
    8. 'def' → logprob: -15.500031471252441
    9. '[' → logprob: -15.875031471252441
    10. 's' → logprob: -16.250032424926758

Token 163: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.1429065465927124
    2. 'cursor' → logprob: -2.017906665802002
    3. '	cursor' → logprob: -10.017906188964844
    4. ' b' → logprob: -10.392906188964844
    5. ' ' → logprob: -10.642906188964844
    6. ' first' → logprob: -10.767906188964844
    7. 'b' → logprob: -11.017906188964844
    8. '(cursor' → logprob: -11.267906188964844
    9. ',' → logprob: -11.392906188964844
    10. 'cur' → logprob: -11.517906188964844

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020586655009537935
    2. ')
' → logprob: -6.252058506011963
    3. ')+' → logprob: -9.252058982849121
    4. '   ' → logprob: -10.752058982849121
    5. ' )' → logprob: -12.252058982849121
    6. '+' → logprob: -12.377058982849121
    7. ')
' → logprob: -13.252058982849121
    8. ')`' → logprob: -15.252058982849121
    9. ')

' → logprob: -15.502058982849121
    10. '))' → logprob: -15.752058982849121

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004500735085457563
    2. '
' → logprob: -5.629500865936279
    3. '    
' → logprob: -8.379500389099121
    4. 'repeat' → logprob: -8.379500389099121
    5. 'ai' → logprob: -9.629500389099121
    6. 'tmp' → logprob: -9.629500389099121
    7. 'cur' → logprob: -9.754500389099121
    8. ')' → logprob: -10.004500389099121
    9. ' repeat' → logprob: -10.629500389099121
    10. '   ' → logprob: -10.629500389099121

Token 166: ' last' (ID: 2174)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44330090284347534
    2. 'tmp' → logprob: -1.3183009624481201
    3. 'repeat' → logprob: -3.19330096244812
    4. 'cur' → logprob: -3.69330096244812
    5. 'ai' → logprob: -4.318300724029541
    6. 'first' → logprob: -5.568300724029541
    7. '```' → logprob: -6.318300724029541
    8. ' tmp' → logprob: -6.318300724029541
    9. ' cur' → logprob: -6.943300724029541
    10. ' ai' → logprob: -7.568300724029541

Token 167: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.024051379412412643
    2. '_ai' → logprob: -4.149051189422607
    3. '_a' → logprob: -5.649051189422607
    4. '_' → logprob: -6.274051189422607
    5. '_i' → logprob: -6.899051189422607
    6. '_cursor' → logprob: -7.774051189422607
    7. '_bb' → logprob: -8.524051666259766
    8. '_idx' → logprob: -8.649051666259766
    9. ' =' → logprob: -9.274051666259766
    10. '_ab' → logprob: -9.399051666259766

Token 168: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007459024200215936
    2. 'b' → logprob: -8.00074577331543
    3. 'ai' → logprob: -9.00074577331543
    4. ' =' → logprob: -9.12574577331543
    5. 'bi' → logprob: -10.00074577331543
    6. 'ii' → logprob: -10.12574577331543
    7. '=' → logprob: -10.37574577331543
    8. '_i' → logprob: -11.62574577331543
    9. 'index' → logprob: -12.12574577331543
    10. 'is' → logprob: -12.37574577331543

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694931030273438
    2. '=' → logprob: -2.1269493103027344
    3. ' ' → logprob: -11.501949310302734
    4. ',' → logprob: -12.501949310302734
    5. '   ' → logprob: -13.376949310302734
    6. '+' → logprob: -13.501949310302734
    7. ')' → logprob: -14.001949310302734
    8. '[' → logprob: -14.251949310302734
    9. '    ' → logprob: -14.751949310302734
    10. ' +' → logprob: -14.751949310302734

Token 170: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3226320445537567
    2. 'bis' → logprob: -1.447632074356079
    3. ' first' → logprob: -3.822632074356079
    4. 'first' → logprob: -4.0726318359375
    5. ' len' → logprob: -7.0726318359375
    6. 'len' → logprob: -7.1976318359375
    7. ' ' → logprob: -10.7601318359375
    8. 'b' → logprob: -10.8851318359375
    9. '   ' → logprob: -11.0726318359375
    10. ' b' → logprob: -11.8226318359375

Token 171: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.5048530030981055e-06
    2. 'sect' → logprob: -13.875001907348633
    3. 'ct' → logprob: -15.125001907348633
    4. 'e' → logprob: -16.375001907348633
    5. '```' → logprob: -17.125001907348633
    6. '_left' → logprob: -17.625001907348633
    7. 'ected' → logprob: -17.750001907348633
    8. '
' → logprob: -17.875001907348633
    9. 'ects' → logprob: -18.000001907348633
    10. 'ec' → logprob: -18.500001907348633

Token 172: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -6.813969957875088e-05
    2. 'left' → logprob: -10.125067710876465
    3. '_right' → logprob: -10.500067710876465
    4. 'Left' → logprob: -14.750067710876465
    5. '(b' → logprob: -17.87506866455078
    6. '_LEFT' → logprob: -18.00006866455078
    7. 'ight' → logprob: -18.62506866455078
    8. '    ' → logprob: -18.75006866455078
    9. ' left' → logprob: -19.12506866455078
    10. '   ' → logprob: -19.50006866455078

Token 173: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018498504534363747
    2. '(b' → logprob: -4.018498420715332
    3. '(bb' → logprob: -8.643498420715332
    4. '(cc' → logprob: -9.393498420715332
    5. 'aaa' → logprob: -10.143498420715332
    6. '(a' → logprob: -11.143498420715332
    7. 'bbb' → logprob: -11.268498420715332
    8. '(ss' → logprob: -12.143498420715332
    9. '```' → logprob: -12.768498420715332
    10. ' aaa' → logprob: -12.893498420715332

Token 174: 'aaa' (ID: 55894)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.8241615295410156
    2. 'aaa' → logprob: -0.9491615295410156
    3. '(b' → logprob: -2.3241615295410156
    4. '(' → logprob: -2.6991615295410156
    5. ')' → logprob: -5.324161529541016
    6. 'ccc' → logprob: -6.324161529541016
    7. '(bb' → logprob: -7.324161529541016
    8. ' aaa' → logprob: -7.449161529541016
    9. ')b' → logprob: -7.824161529541016
    10. '```' → logprob: -8.574161529541016

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044223200529813766
    2. ' ,' → logprob: -8.000442504882812
    3. '(' → logprob: -10.250442504882812
    4. '(b' → logprob: -10.375442504882812
    5. ',b' → logprob: -10.875442504882812
    6. '   ' → logprob: -12.750442504882812
    7. '(bb' → logprob: -13.125442504882812
    8. ',(' → logprob: -13.250442504882812
    9. ',
' → logprob: -13.250442504882812
    10. ')' → logprob: -13.250442504882812

Token 176: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6999740600585938
    2. 'sss' → logprob: -1.6999740600585938
    3. ' max' → logprob: -2.1999740600585938
    4. 'cursor' → logprob: -2.6999740600585938
    5. ' s' → logprob: -3.0749740600585938
    6. 'aaa' → logprob: -3.3249740600585938
    7. 'bbb' → logprob: -3.6999740600585938
    8. ' cursor' → logprob: -4.199974060058594
    9. ' b' → logprob: -5.199974060058594
    10. 'ccc' → logprob: -5.324974060058594

Token 177: '_cursor' (ID: 69415)
  Prédit: '_cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cursor' → logprob: -0.10975071787834167
    2. 'cursor' → logprob: -3.109750747680664
    3. 'cur' → logprob: -3.859750747680664
    4. '_cur' → logprob: -3.859750747680664
    5. ',' → logprob: -5.734750747680664
    6. ')' → logprob: -6.109750747680664
    7. 'sss' → logprob: -6.109750747680664
    8. 'aaa' → logprob: -6.234750747680664
    9. '(ss' → logprob: -6.484750747680664
    10. 'ss' → logprob: -6.984750747680664

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002573875244706869
    2. ',' → logprob: -6.1275739669799805
    3. ')
' → logprob: -8.37757396697998
    4. ' )' → logprob: -9.12757396697998
    5. ')+' → logprob: -10.87757396697998
    6. '   ' → logprob: -10.87757396697998
    7. ')-' → logprob: -12.37757396697998
    8. ' ,' → logprob: -12.87757396697998
    9. '+' → logprob: -14.50257396697998
    10. ')

' → logprob: -14.62757396697998

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10578340291976929
    2. '
' → logprob: -2.355783462524414
    3. ')' → logprob: -6.730783462524414
    4. '    
' → logprob: -6.980783462524414
    5. 'cur' → logprob: -7.105783462524414
    6. ',' → logprob: -7.105783462524414
    7. ' cur' → logprob: -8.355783462524414
    8. 'repeat' → logprob: -8.605783462524414
    9. '<|end|>' → logprob: -8.730783462524414
    10. '  ' → logprob: -8.730783462524414

Token 180: ' buf' (ID: 13976)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16226400434970856
    2. ' cur' → logprob: -2.787264108657837
    3. 'repeat' → logprob: -3.412264108657837
    4. ' repeat' → logprob: -3.912264108657837
    5. 'cur' → logprob: -4.537263870239258
    6. ' last' → logprob: -5.162263870239258
    7. ' i' → logprob: -5.912263870239258
    8. '
' → logprob: -6.162263870239258
    9. ' count' → logprob: -6.287263870239258
    10. 'i' → logprob: -6.537263870239258

Token 181: '_size' (ID: 5044)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12764310836791992
    2. '=' → logprob: -2.12764310836792
    3. '_' → logprob: -7.62764310836792
    4. '=[]' → logprob: -9.377643585205078
    5. ' ' → logprob: -10.377643585205078
    6. '  ' → logprob: -10.502643585205078
    7. '=[]
' → logprob: -11.002643585205078
    8. '   ' → logprob: -11.627643585205078
    9. ',' → logprob: -11.627643585205078
    10. '[:]' → logprob: -11.627643585205078

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255364954471588
    2. '=' → logprob: -1.6005364656448364
    3. ' ' → logprob: -9.225536346435547
    4. '_' → logprob: -11.850536346435547
    5. '   ' → logprob: -12.350536346435547
    6. ')' → logprob: -12.475536346435547
    7. ',' → logprob: -13.225536346435547
    8. '[' → logprob: -13.350536346435547
    9. ' +=' → logprob: -13.975536346435547
    10. ' =
' → logprob: -13.975536346435547

Token 183: ' (' (ID: 350)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.12652263045310974
    2. ' last' → logprob: -2.2515225410461426
    3. 'len' → logprob: -4.501522541046143
    4. '0' → logprob: -7.251522541046143
    5. 'max' → logprob: -7.751522541046143
    6. ' len' → logprob: -8.0015230178833
    7. 'bbb' → logprob: -8.1265230178833
    8. '100' → logprob: -8.5015230178833
    9. ' ' → logprob: -9.1265230178833
    10. '10' → logprob: -9.5015230178833

Token 184: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.040641676634550095
    2. 'len' → logprob: -3.9156417846679688
    3. 'max' → logprob: -4.415641784667969
    4. ' last' → logprob: -5.540641784667969
    5. 'bbb' → logprob: -5.915641784667969
    6. 'aaa' → logprob: -8.040641784667969
    7. '   ' → logprob: -8.790641784667969
    8. ')' → logprob: -9.290641784667969
    9. '1' → logprob: -9.290641784667969
    10. ' max' → logprob: -9.415641784667969

Token 185: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.001085566938854754
    2. '+' → logprob: -7.7510857582092285
    3. '_a' → logprob: -7.7510857582092285
    4. '_ai' → logprob: -9.12608528137207
    5. 'a' → logprob: -10.87608528137207
    6. 'b' → logprob: -11.00108528137207
    7. '_' → logprob: -11.12608528137207
    8. 'bi' → logprob: -11.37608528137207
    9. 'ai' → logprob: -11.50108528137207
    10. ' +' → logprob: -11.75108528137207

Token 186: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000181372175575234
    2. ')' → logprob: -10.000181198120117
    3. 'ii' → logprob: -10.625181198120117
    4. 'и' → logprob: -10.750181198120117
    5. '_i' → logprob: -11.000181198120117
    6. 'last' → logprob: -11.500181198120117
    7. 'I' → logprob: -11.625181198120117
    8. 'iiii' → logprob: -11.750181198120117
    9. ')i' → logprob: -12.000181198120117
    10. 'b' → logprob: -12.375181198120117

Token 187: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10041661560535431
    2. '-' → logprob: -2.600416660308838
    3. '+' → logprob: -4.100416660308838
    4. ' +' → logprob: -5.725416660308838
    5. '-last' → logprob: -7.600416660308838
    6. ' ' → logprob: -8.60041618347168
    7. '-first' → logprob: -8.72541618347168
    8. '-b' → logprob: -8.85041618347168
    9. '   ' → logprob: -8.85041618347168
    10. ')' → logprob: -8.97541618347168

Token 188: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.10023654252290726
    2. ' first' → logprob: -2.350236654281616
    3. '   ' → logprob: -11.600236892700195
    4. ' ' → logprob: -11.975236892700195
    5. '	first' → logprob: -12.600236892700195
    6. ')' → logprob: -12.725236892700195
    7. 'last' → logprob: -12.725236892700195
    8. '1' → logprob: -13.725236892700195
    9. '(first' → logprob: -14.225236892700195
    10. '  ' → logprob: -14.225236892700195

Token 189: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0025544962845742702
    2. ')' → logprob: -7.002554416656494
    3. '+' → logprob: -7.252554416656494
    4. '_i' → logprob: -7.877554416656494
    5. 'b' → logprob: -9.377554893493652
    6. ')+' → logprob: -9.877554893493652
    7. 'i' → logprob: -9.877554893493652
    8. ')_' → logprob: -10.127554893493652
    9. ' +' → logprob: -10.252554893493652
    10. '_' → logprob: -10.252554893493652

Token 190: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3663626305060461e-05
    2. ')' → logprob: -11.62501335144043
    3. 'и' → logprob: -13.12501335144043
    4. '_i' → logprob: -13.37501335144043
    5. ')i' → logprob: -15.00001335144043
    6. ''i' → logprob: -15.37501335144043
    7. 'і' → logprob: -15.75001335144043
    8. 'first' → logprob: -16.62501335144043
    9. '```' → logprob: -16.87501335144043
    10. 'a' → logprob: -17.12501335144043

Token 191: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03728194534778595
    2. ' +' → logprob: -3.9122819900512695
    3. '+' → logprob: -4.4122819900512695
    4. ')+' → logprob: -5.9122819900512695
    5. ' )' → logprob: -6.6622819900512695
    6. '   ' → logprob: -8.16228199005127
    7. ')
' → logprob: -9.53728199005127
    8. ')>' → logprob: -10.41228199005127
    9. '>' → logprob: -11.28728199005127
    10. ',' → logprob: -11.28728199005127

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005406642332673073
    2. ' ' → logprob: -5.255406856536865
    3. '2' → logprob: -9.130406379699707
    4. ')' → logprob: -9.880406379699707
    5. '0' → logprob: -11.755406379699707
    6. '3' → logprob: -13.505406379699707
    7. '   ' → logprob: -13.630406379699707
    8. 'len' → logprob: -14.630406379699707
    9. '100' → logprob: -15.130406379699707
    10. '4' → logprob: -15.130406379699707

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001091162208467722
    2. ' ' → logprob: -7.001091003417969
    3. '2' → logprob: -9.001091003417969
    4. ')' → logprob: -10.876091003417969
    5. '   ' → logprob: -11.376091003417969
    6. 'len' → logprob: -12.001091003417969
    7. '0' → logprob: -12.251091003417969
    8. '3' → logprob: -12.376091003417969
    9. '100' → logprob: -13.001091003417969
    10. '10' → logprob: -13.376091003417969

Token 194: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000591874762903899
    2. '   ' → logprob: -7.87559175491333
    3. ')
' → logprob: -9.250592231750488
    4. ' )' → logprob: -9.875592231750488
    5. ')*' → logprob: -10.625592231750488
    6. '+' → logprob: -11.000592231750488
    7. ' +' → logprob: -12.375592231750488
    8. ')+' → logprob: -12.875592231750488
    9. ')return' → logprob: -13.125592231750488
    10. ',' → logprob: -13.250592231750488

Token 195: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45244428515434265
    2. '   ' → logprob: -1.077444314956665
    3. '    
' → logprob: -4.827444076538086
    4. ')' → logprob: -5.327444076538086
    5. ' 
' → logprob: -5.702444076538086
    6. '<|end|>' → logprob: -5.827444076538086
    7. ',' → logprob: -7.202444076538086
    8. 'def' → logprob: -7.577444076538086
    9. ' +' → logprob: -7.827444076538086
    10. '+' → logprob: -8.077444076538086

Token 196: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2784538269042969
    2. '4' → logprob: -1.7784538269042969
    3. 'len' → logprob: -1.7784538269042969
    4. '100' → logprob: -2.903453826904297
    5. '10' → logprob: -3.028453826904297
    6. ' ' → logprob: -3.153453826904297
    7. '8' → logprob: -3.278453826904297
    8. '20' → logprob: -3.528453826904297
    9. 'max' → logprob: -3.528453826904297
    10. '3' → logprob: -3.653453826904297

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7375972867012024
    2. 'len' → logprob: -1.7375972270965576
    3. '4' → logprob: -2.1125972270965576
    4. '3' → logprob: -3.2375972270965576
    5. '10' → logprob: -3.4875972270965576
    6. '100' → logprob: -3.4875972270965576
    7. 'max' → logprob: -3.4875972270965576
    8. '8' → logprob: -4.112597465515137
    9. '20' → logprob: -4.487597465515137
    10. '[' → logprob: -4.862597465515137

Token 198: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03836734965443611
    2. '<|end|>' → logprob: -4.03836727142334
    3. '
' → logprob: -4.28836727142334
    4. ')' → logprob: -6.03836727142334
    5. '    
' → logprob: -6.53836727142334
    6. 'def' → logprob: -6.66336727142334
    7. '<|end|>' → logprob: -8.03836727142334
    8. ',' → logprob: -8.78836727142334
    9. ' ' → logprob: -9.03836727142334
    10. '    ' → logprob: -9.78836727142334

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023379061371088028
    2. '
' → logprob: -4.148378849029541
    3. ')' → logprob: -6.148378849029541
    4. '    
' → logprob: -6.148378849029541
    5. 'def' → logprob: -6.523378849029541
    6. 'buf' → logprob: -8.2733793258667
    7. '<|end|>' → logprob: -9.0233793258667
    8. '```' → logprob: -9.1483793258667
    9. ',' → logprob: -9.2733793258667
    10. 'n' → logprob: -9.2733793258667

Token 200: ' tmp' (ID: 8919)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.42334258556365967
    2. '   ' → logprob: -2.798342704772949
    3. 'res' → logprob: -2.798342704772949
    4. 'return' → logprob: -2.798342704772949
    5. 'def' → logprob: -3.298342704772949
    6. 'result' → logprob: -3.798342704772949
    7. 'buffer' → logprob: -4.423342704772949
    8. 'tmp' (adapté à ' tmp') → logprob: -4.423342704772949
    9. 'dp' → logprob: -4.673342704772949
    10. 'sss' → logprob: -4.798342704772949

Token 201: '_buf' (ID: 24144)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5629608631134033
    2. '_buf' → logprob: -1.8129608631134033
    3. '_cur' → logprob: -1.8129608631134033
    4. ' =' → logprob: -2.9379608631134033
    5. 'buf' → logprob: -4.812960624694824
    6. ',' → logprob: -5.312960624694824
    7. '=' → logprob: -5.437960624694824
    8. '_buffer' → logprob: -5.437960624694824
    9. 'def' → logprob: -5.562960624694824
    10. 'cur' → logprob: -5.812960624694824

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009785366244614124
    2. '=' → logprob: -4.634785175323486
    3. '=[]' → logprob: -11.009785652160645
    4. '[' → logprob: -12.634785652160645
    5. ' ' → logprob: -13.009785652160645
    6. ' =[' → logprob: -13.259785652160645
    7. ',' → logprob: -13.384785652160645
    8. '   ' → logprob: -14.009785652160645
    9. '=[' → logprob: -14.134785652160645
    10. '=[]
' → logprob: -14.509785652160645

Token 203: ' ['' (ID: 5140)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.332146555185318
    2. ' [' → logprob: -1.3321465253829956
    3. '[]' → logprob: -4.082146644592285
    4. ' []' → logprob: -6.832146644592285
    5. 'byte' → logprob: -8.457146644592285
    6. '[a' → logprob: -9.082146644592285
    7. '['' → logprob: -9.082146644592285
    8. '[s' → logprob: -9.957146644592285
    9. '[b' → logprob: -10.082146644592285
    10. ' byte' → logprob: -10.207146644592285

Token 204: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.07825657725334167
    2. ' ']' → logprob: -2.953256607055664
    3. ''' → logprob: -4.828256607055664
    4. 'a' → logprob: -5.328256607055664
    5. '\x' → logprob: -5.703256607055664
    6. '0' → logprob: -5.953256607055664
    7. '\' → logprob: -6.078256607055664
    8. ' '' → logprob: -7.578256607055664
    9. 'b' → logprob: -8.453256607055664
    10. '',' → logprob: -8.578256607055664

Token 205: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6048031449317932
    2. '*' → logprob: -1.2298030853271484
    3. '<|end|>' → logprob: -2.4798030853271484
    4. '   ' → logprob: -3.4798030853271484
    5. ')' → logprob: -4.229803085327148
    6. ' ' → logprob: -5.104803085327148
    7. ',' → logprob: -5.479803085327148
    8. 'def' → logprob: -5.604803085327148
    9. ']' → logprob: -5.979803085327148
    10. ' for' → logprob: -6.104803085327148

Token 206: ' buf' (ID: 13976)
  Prédit: 'buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.0008124859305098653
    2. ' buf' → logprob: -7.125812530517578
    3. '(buf' → logprob: -12.375812530517578
    4. 'buff' → logprob: -13.000812530517578
    5. 'buffer' → logprob: -14.000812530517578
    6. '   ' → logprob: -15.375812530517578
    7. '	buf' → logprob: -15.500812530517578
    8. ' ' → logprob: -15.875812530517578
    9. '(' → logprob: -16.875812530517578
    10. '  ' → logprob: -17.375812530517578

Token 207: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.09309495240449905
    2. '_buf' → logprob: -2.468095064163208
    3. '_' → logprob: -6.218094825744629
    4. 'buf' → logprob: -6.343094825744629
    5. 'size' → logprob: -8.093094825744629
    6. ' _' → logprob: -10.968094825744629
    7. '_s' → logprob: -11.093094825744629
    8. ' buf' → logprob: -11.968094825744629
    9. '(buf' → logprob: -12.093094825744629
    10. '_
' → logprob: -12.093094825744629

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01355745829641819
    2. '<|end|>' → logprob: -4.513557434082031
    3. '    
' → logprob: -7.263557434082031
    4. '
' → logprob: -7.263557434082031
    5. '<|end|>' → logprob: -8.513557434082031
    6. ')' → logprob: -8.638557434082031
    7. ' for' → logprob: -9.013557434082031
    8. ',' → logprob: -9.013557434082031
    9. 'def' → logprob: -9.138557434082031
    10. ' ' → logprob: -9.638557434082031

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032753876876085997
    2. '
' → logprob: -6.878275394439697
    3. '    
' → logprob: -7.128275394439697
    4. '<|end|>' → logprob: -8.253274917602539
    5. ')' → logprob: -8.378274917602539
    6. 'def' → logprob: -8.753274917602539
    7. 'i' → logprob: -9.003274917602539
    8. ' for' → logprob: -9.003274917602539
    9. 'for' → logprob: -9.503274917602539
    10. 'index' → logprob: -9.878274917602539

Token 210: ' tmp' (ID: 8919)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4018464088439941
    2. 'def' → logprob: -1.4018464088439941
    3. 'idx' → logprob: -1.6518464088439941
    4. 'cur' → logprob: -2.901846408843994
    5. 'for' → logprob: -2.901846408843994
    6. 'tmp' (adapté à ' tmp') → logprob: -3.151846408843994
    7. 'return' → logprob: -3.776846408843994
    8. 'pos' → logprob: -4.026846408843994
    9. 'buf' → logprob: -4.151846408843994
    10. 'index' → logprob: -4.276846408843994

Token 211: '_max' (ID: 13731)
  Prédit: '_buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.12187390774488449
    2. '_cur' → logprob: -3.2468738555908203
    3. '_idx' → logprob: -3.4968738555908203
    4. '_b' → logprob: -3.8718738555908203
    5. '_i' → logprob: -4.99687385559082
    6. '_ptr' → logprob: -5.49687385559082
    7. '_pos' → logprob: -5.87187385559082
    8. '_size' → logprob: -6.12187385559082
    9. '_' → logprob: -6.24687385559082
    10. '_len' → logprob: -6.74687385559082

Token 212: ' =' (ID: 314)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.920316219329834
    2. '_' → logprob: -1.170316219329834
    3. '=' → logprob: -2.545316219329834
    4. '_idx' → logprob: -2.670316219329834
    5. '_buf' → logprob: -2.920316219329834
    6. ' =' → logprob: -3.045316219329834
    7. '_len' → logprob: -4.670316219329834
    8. 'cur' → logprob: -4.795316219329834
    9. '_index' → logprob: -4.920316219329834
    10. '_cursor' → logprob: -5.295316219329834

Token 213: ' ''
' (ID: 25366)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1332903653383255
    2. ' ' → logprob: -2.3832902908325195
    3. 'buf' → logprob: -5.1332902908325195
    4. 'cursor' → logprob: -5.2582902908325195
    5. ' cursor' → logprob: -5.3832902908325195
    6. '-' → logprob: -5.7582902908325195
    7. ' first' → logprob: -6.1332902908325195
    8. ' buf' → logprob: -6.1332902908325195
    9. 'first' → logprob: -6.3832902908325195
    10. 'tmp' → logprob: -6.5082902908325195

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05145407095551491
    2. '<|end|>' → logprob: -3.0514540672302246
    3. '<|end|>' → logprob: -7.801454067230225
    4. ' ' → logprob: -8.051454544067383
    5. ')' → logprob: -8.176454544067383
    6. '
' → logprob: -8.301454544067383
    7. 'def' → logprob: -8.301454544067383
    8. '    
' → logprob: -8.426454544067383
    9. '    ' → logprob: -8.551454544067383
    10. '	for' → logprob: -9.051454544067383

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9628756642341614
    2. ' for' → logprob: -1.0878756046295166
    3. '   ' → logprob: -1.3378756046295166
    4. 'i' → logprob: -5.087875843048096
    5. 'cur' → logprob: -5.587875843048096
    6. 'def' → logprob: -6.212875843048096
    7. ' i' → logprob: -6.212875843048096
    8. ' cur' → logprob: -7.212875843048096
    9. 'idx' → logprob: -7.712875843048096
    10. 'tmp' → logprob: -7.837875843048096

Token 216: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06301296502351761
    2. 'i' → logprob: -3.1880130767822266
    3. ' idx' → logprob: -5.188013076782227
    4. ' _' → logprob: -5.688013076782227
    5. ' ai' → logprob: -5.938013076782227
    6. '_i' → logprob: -6.438013076782227
    7. ' bi' → logprob: -6.563013076782227
    8. ' ii' → logprob: -6.813013076782227
    9. ' cur' → logprob: -7.188013076782227
    10. '_' → logprob: -7.188013076782227

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033220804762095213
    2. 'in' → logprob: -6.003322124481201
    3. ',' → logprob: -7.628322124481201
    4. ' ' → logprob: -8.128321647644043
    5. 'range' → logprob: -11.378321647644043
    6. '  ' → logprob: -11.503321647644043
    7. '_' → logprob: -11.503321647644043
    8. '   ' → logprob: -11.753321647644043
    9. '	in' → logprob: -12.503321647644043
    10. '_in' → logprob: -12.628321647644043

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22598612308502197
    2. ' range' → logprob: -1.600986123085022
    3. 'chain' → logprob: -8.72598648071289
    4. ' ' → logprob: -9.10098648071289
    5. '_' → logprob: -9.22598648071289
    6. '	range' → logprob: -10.60098648071289
    7. ' chain' → logprob: -10.72598648071289
    8. '   ' → logprob: -10.97598648071289
    9. 'aaa' → logprob: -11.10098648071289
    10. ' aaa' → logprob: -11.10098648071289

Token 219: '(last' (ID: 39599)
  Prédit: '(buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(buf' → logprob: -0.4444350004196167
    2. ' buf' → logprob: -2.1944351196289062
    3. '(first' → logprob: -2.1944351196289062
    4. ' first' → logprob: -2.9444351196289062
    5. 'first' → logprob: -3.1944351196289062
    6. 'buf' → logprob: -3.9444351196289062
    7. '(' → logprob: -4.694435119628906
    8. '(tmp' → logprob: -5.319435119628906
    9. ' (' → logprob: -5.444435119628906
    10. '(len' → logprob: -6.944435119628906

Token 220: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020294437126722187
    2. '+' → logprob: -9.750203132629395
    3. '_i' → logprob: -10.125203132629395
    4. 'b' → logprob: -10.375203132629395
    5. 'last' → logprob: -10.750203132629395
    6. 'first' → logprob: -11.500203132629395
    7. ')' → logprob: -11.625203132629395
    8. '_a' → logprob: -12.000203132629395
    9. 'bi' → logprob: -12.625203132629395
    10. '_ai' → logprob: -12.625203132629395

Token 221: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.939851037808694e-05
    2. '_i' → logprob: -11.125029563903809
    3. 'и' → logprob: -11.875029563903809
    4. 'last' → logprob: -13.750029563903809
    5. ')' → logprob: -14.125029563903809
    6. ''i' → logprob: -14.250029563903809
    7. 'a' → logprob: -14.750029563903809
    8. 'b' → logprob: -14.750029563903809
    9. 'first' → logprob: -14.812529563903809
    10. 'і' → logprob: -15.125029563903809

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0830625295639038
    2. '+' → logprob: -1.3330625295639038
    3. ' +' → logprob: -1.4580625295639038
    4. ' -' → logprob: -2.4580626487731934
    5. '-' → logprob: -3.2080626487731934
    6. '):
' → logprob: -3.9580626487731934
    7. '):' → logprob: -4.333062648773193
    8. ' ,' → logprob: -5.833062648773193
    9. '   ' → logprob: -6.208062648773193
    10. '-first' → logprob: -7.958062648773193

Token 223: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.5959324836730957
    2. 'first' → logprob: -0.8459324836730957
    3. '-' → logprob: -4.345932483673096
    4. ' -' → logprob: -5.220932483673096
    5. '-first' → logprob: -7.845932483673096
    6. ' last' → logprob: -8.220932006835938
    7. ' ' → logprob: -8.595932006835938
    8. 'last' → logprob: -8.720932006835938
    9. '	first' → logprob: -9.220932006835938
    10. ' i' → logprob: -9.720932006835938

Token 224: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006553251761943102
    2. '_i' → logprob: -6.0065531730651855
    3. '-' → logprob: -6.1315531730651855
    4. 'i' → logprob: -7.0065531730651855
    5. '+' → logprob: -8.131553649902344
    6. ' -' → logprob: -8.631553649902344
    7. 'b' → logprob: -9.256553649902344
    8. '_a' → logprob: -9.381553649902344
    9. 'bi' → logprob: -9.756553649902344
    10. 'a' → logprob: -10.006553649902344

Token 225: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009377855458296835
    2. '_i' → logprob: -7.5009379386901855
    3. '-' → logprob: -8.250937461853027
    4. ')' → logprob: -9.875937461853027
    5. '+' → logprob: -11.625937461853027
    6. ',' → logprob: -12.375937461853027
    7. 'it' → logprob: -12.375937461853027
    8. 'if' → logprob: -12.375937461853027
    9. 'is' → logprob: -12.500937461853027
    10. 'и' → logprob: -12.625937461853027

Token 226: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006370017305016518
    2. ' -' → logprob: -5.1313700675964355
    3. ',' → logprob: -7.7563700675964355
    4. ' ' → logprob: -11.506369590759277
    5. '   ' → logprob: -13.631369590759277
    6. ',-' → logprob: -14.256369590759277
    7. ' ,' → logprob: -14.506369590759277
    8. '+' → logprob: -14.506369590759277
    9. '  ' → logprob: -16.006370544433594
    10. ')' → logprob: -16.381370544433594

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.250041007995605
    4. '-' → logprob: -15.500041007995605
    5. ',' → logprob: -15.500041007995605
    6. '...' → logprob: -17.000041961669922
    7. ' -' → logprob: -17.125041961669922
    8. '
' → logprob: -17.187541961669922
    9. '```' → logprob: -18.125041961669922
    10. ')' → logprob: -18.187541961669922

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.625005722045898
    3. '-' → logprob: -13.500005722045898
    4. '...' → logprob: -16.4375057220459
    5. '2' → logprob: -16.6250057220459
    6. ' -' → logprob: -16.8125057220459
    7. '   ' → logprob: -16.8125057220459
    8. ',' → logprob: -16.9375057220459
    9. '
' → logprob: -17.4375057220459
    10. '

' → logprob: -18.0625057220459

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007757577113807201
    2. '-' → logprob: -4.882757663726807
    3. ',-' → logprob: -9.132757186889648
    4. ' -' → logprob: -10.257757186889648
    5. ' ,' → logprob: -12.132757186889648
    6. '   ' → logprob: -13.507757186889648
    7. '1' → logprob: -14.007757186889648
    8. ',
' → logprob: -16.25775718688965
    9. ' ,-' → logprob: -16.25775718688965
    10. 'Step' → logprob: -16.50775718688965

Token 230: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006717147771269083
    2. ' -' → logprob: -5.006717205047607
    3. ' ' → logprob: -13.88171672821045
    4. '   ' → logprob: -14.88171672821045
    5. '  ' → logprob: -15.38171672821045
    6. ',-' → logprob: -17.131717681884766
    7. ',' → logprob: -17.381717681884766
    8. '1' → logprob: -17.631717681884766
    9. '-step' → logprob: -17.631717681884766
    10. '```' → logprob: -17.756717681884766

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -16.750017166137695
    4. '   ' → logprob: -16.875017166137695
    5. ',' → logprob: -17.000017166137695
    6. '2' → logprob: -17.250017166137695
    7. '```' → logprob: -17.562517166137695
    8. '-' → logprob: -18.000017166137695
    9. '):
' → logprob: -18.000017166137695
    10. '１' → logprob: -18.062517166137695

Token 232: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2523115277290344
    2. '):
' → logprob: -1.5023114681243896
    3. '   ' → logprob: -9.002311706542969
    4. ':' → logprob: -9.377311706542969
    5. ',' → logprob: -9.502311706542969
    6. '):
' → logprob: -10.002311706542969
    7. ' ):' → logprob: -10.627311706542969
    8. ')' → logprob: -11.127311706542969
    9. ' ):
' → logprob: -12.252311706542969
    10. '):

' → logprob: -12.502311706542969

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4465821087360382
    2. '   ' → logprob: -1.1965820789337158
    3. '<|end|>' → logprob: -4.071582317352295
    4. '        
' → logprob: -4.696582317352295
    5. ' ' → logprob: -4.821582317352295
    6. '    
' → logprob: -5.071582317352295
    7. '    ' → logprob: -5.571582317352295
    8. '	' → logprob: -5.696582317352295
    9. '	   ' → logprob: -6.696582317352295
    10. '
' → logprob: -6.946582317352295

Token 234: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5160424113273621
    2. 'tmp' (adapté à ' tmp') → logprob: -2.016042470932007
    3. ' cur' → logprob: -2.766042470932007
    4. '   ' → logprob: -3.391042470932007
    5. ' if' → logprob: -3.391042470932007
    6. 'cur' → logprob: -3.641042470932007
    7. ' for' → logprob: -3.766042470932007
    8. ' c' → logprob: -3.891042470932007
    9. '       ' → logprob: -4.391042232513428
    10. ' s' → logprob: -4.641042232513428

Token 235: '_buf' (ID: 24144)
  Prédit: '_buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.259669691324234
    2. '_cur' → logprob: -2.134669780731201
    3. '_' → logprob: -3.009669780731201
    4. ' =' → logprob: -3.884669780731201
    5. '_max' → logprob: -4.009669780731201
    6. '_tmp' → logprob: -4.759669780731201
    7. '=' → logprob: -5.259669780731201
    8. '_val' → logprob: -5.884669780731201
    9. 'cur' → logprob: -6.634669780731201
    10. 'buf' → logprob: -6.884669780731201

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21489298343658447
    2. '[tmp' → logprob: -1.8398929834365845
    3. '[i' → logprob: -4.089892864227295
    4. ' =' → logprob: -5.214892864227295
    5. '[b' → logprob: -5.589892864227295
    6. 'tmp' → logprob: -5.964892864227295
    7. '[-' → logprob: -6.464892864227295
    8. '[len' → logprob: -6.589892864227295
    9. '=' → logprob: -6.964892864227295
    10. '[(' → logprob: -7.714892864227295

Token 237: 'aaa' (ID: 55894)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08935555815696716
    2. '(i' → logprob: -2.71435546875
    3. '2' → logprob: -4.58935546875
    4. ' i' → logprob: -5.46435546875
    5. '(' → logprob: -6.71435546875
    6. ' (' → logprob: -7.08935546875
    7. '0' → logprob: -7.33935546875
    8. '1' → logprob: -7.33935546875
    9. ' ' → logprob: -8.21435546875
    10. '(buf' → logprob: -8.58935546875

Token 238: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005110541824251413
    2. '[' → logprob: -6.130110740661621
    3. 'i' → logprob: -6.880110740661621
    4. ']' → logprob: -7.255110740661621
    5. 'index' → logprob: -8.755110740661621
    6. ')' → logprob: -9.005110740661621
    7. '][' → logprob: -9.005110740661621
    8. '[
' → logprob: -9.255110740661621
    9. '.index' → logprob: -9.505110740661621
    10. '<|end|>' → logprob: -9.755110740661621

Token 239: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07827465981245041
    2. '*' → logprob: -3.328274726867676
    3. ' -' → logprob: -4.578274726867676
    4. ' *' → logprob: -4.953274726867676
    5. ']-' → logprob: -5.078274726867676
    6. '-' → logprob: -5.328274726867676
    7. ']]' → logprob: -5.578274726867676
    8. ']*' → logprob: -6.328274726867676
    9. ']+' → logprob: -6.453274726867676
    10. ' ]' → logprob: -7.578274726867676

Token 240: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19020161032676697
    2. '*' → logprob: -2.8152015209198
    3. '-' → logprob: -3.4402015209198
    4. '+' → logprob: -3.6902015209198
    5. ' -' → logprob: -3.8152015209198
    6. ']=' → logprob: -4.190201759338379
    7. ':' → logprob: -4.690201759338379
    8. ' *' → logprob: -5.440201759338379
    9. ' +' → logprob: -5.690201759338379
    10. ' ]' → logprob: -8.065201759338379

Token 241: ' cursor' (ID: 14944)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.046466078609228134
    2. 'first' → logprob: -3.546466112136841
    3. 'aaa' → logprob: -4.796465873718262
    4. 'cursor' → logprob: -5.421465873718262
    5. ' first' → logprob: -7.046465873718262
    6. ' b' → logprob: -7.796465873718262
    7. ' ' → logprob: -7.921465873718262
    8. '  ' → logprob: -7.921465873718262
    9. '   ' → logprob: -7.921465873718262
    10. ' cursor' → logprob: -8.671465873718262

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0043084644712507725
    2. '+' → logprob: -6.254308700561523
    3. ']=' → logprob: -6.629308700561523
    4. ' ]' → logprob: -7.379308700561523
    5. ' +' → logprob: -8.129308700561523
    6. '-' → logprob: -10.129308700561523
    7. '   ' → logprob: -10.379308700561523
    8. ']='' → logprob: -10.879308700561523
    9. '*' → logprob: -11.129308700561523
    10. ']+=' → logprob: -11.879308700561523

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11571679264307022
    2. ' =' → logprob: -2.2407166957855225
    3. ']' → logprob: -6.490716934204102
    4. ']=' → logprob: -6.615716934204102
    5. '+=' → logprob: -11.865716934204102
    6. '='' → logprob: -12.490716934204102
    7. '[' → logprob: -12.490716934204102
    8. ',' → logprob: -12.740716934204102
    9. ']+=' → logprob: -12.865716934204102
    10. ' ' → logprob: -13.115716934204102

Token 244: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.32569336891174316
    2. ''s' → logprob: -2.075693368911743
    3. ''a' → logprob: -2.325693368911743
    4. 's' → logprob: -3.575693368911743
    5. ' '' → logprob: -4.575693130493164
    6. ''' → logprob: -5.200693130493164
    7. 'b' → logprob: -5.200693130493164
    8. ' s' → logprob: -5.825693130493164
    9. 'a' → logprob: -6.825693130493164
    10. ' ' → logprob: -7.950693130493164

Token 245: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7514687776565552
    2. 'b' → logprob: -0.8764687776565552
    3. ''b' → logprob: -2.6264686584472656
    4. ''a' → logprob: -3.5014686584472656
    5. ''' → logprob: -5.376468658447266
    6. ' a' → logprob: -6.626468658447266
    7. 's' → logprob: -6.751468658447266
    8. ' b' → logprob: -7.001468658447266
    9. ' '' → logprob: -7.876468658447266
    10. ''s' → logprob: -8.126468658447266

Token 246: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10036755353212357
    2. ''
' → logprob: -2.350367546081543
    3. ' '' → logprob: -9.475367546081543
    4. ''
' → logprob: -11.225367546081543
    5. ' '
' → logprob: -11.350367546081543
    6. '<|end|>' → logprob: -11.475367546081543
    7. '       ' → logprob: -11.850367546081543
    8. '
' → logprob: -12.100367546081543
    9. ''

' → logprob: -12.350367546081543
    10. ''b' → logprob: -12.475367546081543

Token 247: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5842036008834839
    2. '       ' → logprob: -1.3342036008834839
    3. 'tmp' (adapté à ' tmp') → logprob: -2.0842037200927734
    4. ' b' → logprob: -3.3342037200927734
    5. 'bbb' → logprob: -5.209203720092773
    6. 'b' → logprob: -5.959203720092773
    7. '
' → logprob: -6.084203720092773
    8. ' for' → logprob: -6.209203720092773
    9. '        
' → logprob: -6.584203720092773
    10. ' ' → logprob: -6.834203720092773

Token 249: '_buf' (ID: 24144)
  Prédit: '_buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.002733785891905427
    2. 'buf' → logprob: -6.5027337074279785
    3. '_cur' → logprob: -8.252734184265137
    4. '_b' → logprob: -8.377734184265137
    5. 'bbb' → logprob: -8.627734184265137
    6. 'b' → logprob: -9.002734184265137
    7. '_' → logprob: -9.252734184265137
    8. '_buff' → logprob: -9.752734184265137
    9. '[' → logprob: -10.252734184265137
    10. 'cur' → logprob: -10.752734184265137

Token 250: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0067240106873214245
    2. '[b' → logprob: -6.506723880767822
    3. '[tmp' → logprob: -6.881723880767822
    4. '[i' → logprob: -7.131723880767822
    5. ' [' → logprob: -7.381723880767822
    6. '[last' → logprob: -7.506723880767822
    7. 'bbb' → logprob: -7.756723880767822
    8. ' =' → logprob: -8.00672435760498
    9. ']' → logprob: -8.38172435760498
    10. '=' → logprob: -8.63172435760498

Token 251: 'bbb' (ID: 105015)
  Prédit: 'bbb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.0007348202052526176
    2. ' b' → logprob: -8.12573528289795
    3. 'aaa' → logprob: -8.37573528289795
    4. 'bb' → logprob: -9.50073528289795
    5. '[b' → logprob: -10.62573528289795
    6. ' ' → logprob: -11.00073528289795
    7. '[i' → logprob: -11.25073528289795
    8. '  ' → logprob: -11.37573528289795
    9. 'bbbb' → logprob: -11.50073528289795
    10. '   ' → logprob: -11.50073528289795

Token 252: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0042049516923725605
    2. '[' → logprob: -5.504204750061035
    3. ']' → logprob: -9.629204750061035
    4. 'i' → logprob: -11.004204750061035
    5. '[b' → logprob: -11.504204750061035
    6. ' [' → logprob: -11.504204750061035
    7. '][' → logprob: -12.254204750061035
    8. '[j' → logprob: -12.504204750061035
    9. '[
' → logprob: -13.379204750061035
    10. '[ii' → logprob: -13.379204750061035

Token 253: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21567347645759583
    2. ' -' → logprob: -1.7156734466552734
    3. '-' → logprob: -4.465673446655273
    4. ' ' → logprob: -6.965673446655273
    5. ' ]' → logprob: -7.215673446655273
    6. ']-' → logprob: -8.215673446655273
    7. '[' → logprob: -8.465673446655273
    8. '<|end|>' → logprob: -9.340673446655273
    9. ')' → logprob: -9.715673446655273
    10. '<|end|>' → logprob: -9.965673446655273

Token 254: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4295201897621155
    2. '-' → logprob: -1.0545201301574707
    3. ']' → logprob: -7.429520130157471
    4. ' ' → logprob: -8.804520606994629
    5. '[' → logprob: -10.929520606994629
    6. '-c' → logprob: -11.679520606994629
    7. '-b' → logprob: -11.679520606994629
    8. '-cur' → logprob: -11.679520606994629
    9. '   ' → logprob: -12.054520606994629
    10. ')' → logprob: -12.804520606994629

Token 255: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.4288330376148224
    2. ' cursor' → logprob: -1.0538330078125
    3. '	cursor' → logprob: -10.1788330078125
    4. '(cursor' → logprob: -10.5538330078125
    5. '_cursor' → logprob: -11.1788330078125
    6. '.cursor' → logprob: -11.3038330078125
    7. 'cur' → logprob: -11.4288330078125
    8. ' ' → logprob: -11.6788330078125
    9. 'ursor' → logprob: -12.3038330078125
    10. '1' → logprob: -12.7413330078125

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005485066794790328
    2. ' ]' → logprob: -7.875548362731934
    3. ']=' → logprob: -9.125548362731934
    4. '=' → logprob: -9.875548362731934
    5. ' =' → logprob: -12.750548362731934
    6. '']' → logprob: -12.875548362731934
    7. '   ' → logprob: -14.000548362731934
    8. ' ' → logprob: -14.500548362731934
    9. ']='' → logprob: -15.500548362731934
    10. ')' → logprob: -15.625548362731934

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014198750257492
    2. ' =' → logprob: -1.7014198303222656
    3. ']' → logprob: -12.326419830322266
    4. ']=' → logprob: -13.951419830322266
    5. ' ' → logprob: -14.451419830322266
    6. ' ='' → logprob: -14.951419830322266
    7. '   ' → logprob: -15.826419830322266
    8. '='' → logprob: -16.076419830322266
    9. ')' → logprob: -16.201419830322266
    10. '    ' → logprob: -16.451419830322266

Token 258: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.1999540477991104
    2. ' '' → logprob: -1.8249540328979492
    3. ''' → logprob: -3.949954032897949
    4. 'b' → logprob: -8.19995403289795
    5. ' b' → logprob: -8.57495403289795
    6. ' ' → logprob: -8.82495403289795
    7. ''a' → logprob: -9.69995403289795
    8. ''s' → logprob: -10.69995403289795
    9. ' ' → logprob: -10.94995403289795
    10. '"' → logprob: -12.07495403289795

Token 259: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.062035802751779556
    2. ''b' → logprob: -2.8120357990264893
    3. ''' → logprob: -9.81203556060791
    4. ' b' → logprob: -11.81203556060791
    5. ' '' → logprob: -12.43703556060791
    6. '	b' → logprob: -14.81203556060791
    7. ' ' → logprob: -15.31203556060791
    8. ''a' → logprob: -15.31203556060791
    9. ''s' → logprob: -15.68703556060791
    10. 'a' → logprob: -16.062036514282227

Token 260: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1309250295162201
    2. '   ' → logprob: -2.505924940109253
    3. '<|end|>' → logprob: -3.630924940109253
    4. ' for' → logprob: -5.130925178527832
    5. ' ' → logprob: -5.505925178527832
    6. '
' → logprob: -6.880925178527832
    7. '        
' → logprob: -7.255925178527832
    8. ')' → logprob: -7.630925178527832
    9. 'for' → logprob: -8.005925178527832
    10. '  ' → logprob: -8.130925178527832

Token 262: ' tmp' (ID: 8919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6589720845222473
    2. ' for' → logprob: -1.4089720249176025
    3. '   ' → logprob: -1.7839720249176025
    4. ' if' → logprob: -3.7839720249176025
    5. 'for' → logprob: -3.9089720249176025
    6. ' tmp' → logprob: -4.533972263336182
    7. 'tmp' (adapté à ' tmp') → logprob: -5.033972263336182
    8. ' ' → logprob: -5.783972263336182
    9. 'if' → logprob: -6.658972263336182
    10. '
' → logprob: -6.658972263336182

Token 263: ' =' (ID: 314)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.34878212213516235
    2. '_buf' → logprob: -1.3487820625305176
    3. '_cur' → logprob: -3.7237820625305176
    4. '_' → logprob: -5.598782062530518
    5. '_tmp' → logprob: -5.723782062530518
    6. 'max' → logprob: -5.848782062530518
    7. ' =' → logprob: -8.848782539367676
    8. '_idx' → logprob: -9.098782539367676
    9. '=' → logprob: -9.473782539367676
    10. '_temp' → logprob: -9.848782539367676

Token 264: ' ''.' (ID: 105941)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6590268015861511
    2. 'tmp' → logprob: -1.659026861190796
    3. ' max' → logprob: -2.409026861190796
    4. ' ''.' → logprob: -2.409026861190796
    5. 'max' → logprob: -3.659026861190796
    6. ' s' → logprob: -4.034026622772217
    7. '''.' → logprob: -4.034026622772217
    8. ' ' → logprob: -4.409026622772217
    9. '''' → logprob: -4.659026622772217
    10. 's' → logprob: -5.409026622772217

Token 265: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.629921436891891e-05
    2. ' join' → logprob: -10.87502670288086
    3. 'concat' → logprob: -12.87502670288086
    4. '(join' → logprob: -13.00002670288086
    5. 'jo' → logprob: -13.87502670288086
    6. '.join' → logprob: -15.00002670288086
    7. ' ' → logprob: -15.75002670288086
    8. '```' → logprob: -15.87502670288086
    9. 'startswith' → logprob: -16.12502670288086
    10. '''.' → logprob: -16.37502670288086

Token 266: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0012072573881596327
    2. 'tmp' → logprob: -6.75120735168457
    3. '(' → logprob: -11.37620735168457
    4. '(re' → logprob: -11.50120735168457
    5. '(sorted' → logprob: -12.00120735168457
    6. '(temp' → logprob: -12.37620735168457
    7. ' tmp' → logprob: -13.62620735168457
    8. '/tmp' → logprob: -14.12620735168457
    9. '$tmp' → logprob: -14.50120735168457
    10. '((' → logprob: -14.62620735168457

Token 267: '_buf' (ID: 24144)
  Prédit: '_buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.00011808603449026123
    2. 'buf' → logprob: -9.250118255615234
    3. '(buf' → logprob: -11.375118255615234
    4. ')' → logprob: -12.375118255615234
    5. 'Buf' → logprob: -13.250118255615234
    6. ' buf' → logprob: -13.875118255615234
    7. '	buf' → logprob: -14.000118255615234
    8. '_b' → logprob: -14.375118255615234
    9. '_BUF' → logprob: -14.750118255615234
    10. '_' → logprob: -15.375118255615234

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.592576265335083
    2. '[:' → logprob: -1.217576265335083
    3. ').' → logprob: -2.342576265335083
    4. '[tmp' → logprob: -3.842576265335083
    5. ')
' → logprob: -4.217576026916504
    6. '[' → logprob: -4.842576026916504
    7. '[::-' → logprob: -5.342576026916504
    8. '[i' → logprob: -5.967576026916504
    9. '   ' → logprob: -6.967576026916504
    10. '[:-' → logprob: -7.217576026916504

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14846323430538177
    2. '<|end|>' → logprob: -2.273463249206543
    3. '
' → logprob: -3.648463249206543
    4. '        
' → logprob: -6.148463249206543
    5. ' if' → logprob: -6.898463249206543
    6. ',' → logprob: -7.023463249206543
    7. ')' → logprob: -7.023463249206543
    8. '<|end|>' → logprob: -7.148463249206543
    9. ' ' → logprob: -7.273463249206543
    10. ' 
' → logprob: -8.023463249206543

Token 270: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34713515639305115
    2. 'if' (adapté à ' if') → logprob: -1.5971351861953735
    3. '       ' → logprob: -2.597135066986084
    4. '_' → logprob: -5.222135066986084
    5. '   ' → logprob: -5.597135066986084
    6. ' ' → logprob: -6.097135066986084
    7. ',' → logprob: -7.097135066986084
    8. ' 
' → logprob: -7.222135066986084
    9. '
' → logprob: -7.347135066986084
    10. '        
' → logprob: -7.847135066986084

Token 271: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6132769584655762
    2. 'tmp' → logprob: -0.8632769584655762
    3. ' s' → logprob: -3.613276958465576
    4. 's' → logprob: -5.488276958465576
    5. ' not' → logprob: -6.363276958465576
    6. ' len' → logprob: -7.238276958465576
    7. 'sss' → logprob: -7.488276958465576
    8. ' '' → logprob: -7.613276958465576
    9. 'ss' → logprob: -7.863276958465576
    10. ' search' → logprob: -8.238277435302734

Token 272: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21020498871803284
    2. ' ==' → logprob: -2.335205078125
    3. ' not' → logprob: -3.335205078125
    4. '.startswith' → logprob: -3.835205078125
    5. '>' → logprob: -4.960205078125
    6. ' !=' → logprob: -5.085205078125
    7. ' in' → logprob: -5.210205078125
    8. '==' → logprob: -5.210205078125
    9. ' <' → logprob: -5.460205078125
    10. ' <=' → logprob: -6.085205078125

Token 273: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.014169031754136086
    2. ' tmp' → logprob: -4.264169216156006
    3. 's' → logprob: -13.639168739318848
    4. '	tmp' → logprob: -13.764168739318848
    5. '       ' → logprob: -14.014168739318848
    6. '(tmp' → logprob: -14.389168739318848
    7. '
' → logprob: -15.014168739318848
    8. '/tmp' → logprob: -15.264168739318848
    9. '$tmp' → logprob: -15.264168739318848
    10. '_tmp' → logprob: -15.514168739318848

Token 274: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00022558939235750586
    2. '_tmp' → logprob: -9.250226020812988
    3. 'max' → logprob: -9.875226020812988
    4. '_cur' → logprob: -10.375226020812988
    5. '_buf' → logprob: -10.875226020812988
    6. ''_' → logprob: -11.500226020812988
    7. '_' → logprob: -12.250226020812988
    8. ':' → logprob: -12.375226020812988
    9. '_MAX' → logprob: -13.500226020812988
    10. '__' → logprob: -13.875226020812988

Token 275: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6329983472824097
    2. ':' → logprob: -0.7579983472824097
    3. '           ' → logprob: -9.1329984664917
    4. '):
' → logprob: -9.3829984664917
    5. ' :
' → logprob: -9.6329984664917
    6. '       ' → logprob: -10.1329984664917
    7. '):' → logprob: -10.7579984664917
    8. ' :' → logprob: -11.0079984664917
    9. ' and' → logprob: -11.1329984664917
    10. ':

' → logprob: -11.2579984664917

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47649428248405457
    2. '
' → logprob: -1.851494312286377
    3. 'tmp' → logprob: -1.851494312286377
    4. ' tmp' → logprob: -2.976494312286377
    5. ' 
' → logprob: -5.476494312286377
    6. '            
' → logprob: -5.476494312286377
    7. '(tmp' → logprob: -6.351494312286377
    8. ':
' → logprob: -7.351494312286377
    9. '\n' → logprob: -7.476494312286377
    10. '_tmp' → logprob: -7.726494312286377

Token 277: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.22586067020893097
    2. 'tmp' (adapté à ' tmp') → logprob: -1.6008607149124146
    3. '
' → logprob: -8.600860595703125
    4. '           ' → logprob: -8.600860595703125
    5. '	tmp' → logprob: -10.725860595703125
    6. '(tmp' → logprob: -11.350860595703125
    7. '       ' → logprob: -11.725860595703125
    8. '/tmp' → logprob: -11.725860595703125
    9. '_tmp' → logprob: -11.975860595703125
    10. '[tmp' → logprob: -12.100860595703125

Token 278: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.00000286102295
    3. '_m' → logprob: -15.50000286102295
    4. ' _' → logprob: -16.125003814697266
    5. 'max' → logprob: -16.375003814697266
    6. '_MAX' → logprob: -17.125003814697266
    7. '_ma' → logprob: -17.625003814697266
    8. '	max' → logprob: -17.875003814697266
    9. '_mac' → logprob: -18.375003814697266
    10. '\' → logprob: -18.750003814697266

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788913294672966
    2. '=' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.82889175415039
    4. ' =
' → logprob: -14.45389175415039
    5. '<|end|>' → logprob: -17.45389175415039
    6. ',' → logprob: -17.82889175415039
    7. '=
' → logprob: -17.82889175415039
    8. '=

' → logprob: -18.82889175415039
    9. '＝' → logprob: -19.32889175415039
    10. ' =)' → logprob: -19.32889175415039

Token 280: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5759481191635132
    2. 'tmp' → logprob: -0.8259481191635132
    3. '(tmp' → logprob: -13.200947761535645
    4. '	tmp' → logprob: -13.325947761535645
    5. '/tmp' → logprob: -13.575947761535645
    6. '[tmp' → logprob: -13.950947761535645
    7. 'temp' → logprob: -13.950947761535645
    8. '$tmp' → logprob: -14.200947761535645
    9. ' temp' → logprob: -14.700947761535645
    10. '
' → logprob: -14.825947761535645

Token 281: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013077878393232822
    2. ' return' → logprob: -5.513077735900879
    3. '       ' → logprob: -5.513077735900879
    4. 'return' → logprob: -6.388077735900879
    5. '<|end|>' → logprob: -7.263077735900879
    6. ' ' → logprob: -7.388077735900879
    7. ')' → logprob: -7.638077735900879
    8. ',' → logprob: -8.263077735900879
    9. '+' → logprob: -8.513077735900879
    10. '
' → logprob: -8.638077735900879

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.27858516573905945
    2. '   ' → logprob: -2.028585195541382
    3. ' return' → logprob: -2.403585195541382
    4. ' ' → logprob: -4.778584957122803
    5. '
' → logprob: -5.153584957122803
    6. ' 
' → logprob: -6.653584957122803
    7. '       ' → logprob: -6.653584957122803
    8. '<|end|>' → logprob: -6.653584957122803
    9. '  ' → logprob: -7.028584957122803
    10. '    
' → logprob: -7.653584957122803

Token 284: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5765979886054993
    2. 'tmp' → logprob: -0.8265979886054993
    3. '(tmp' → logprob: -8.576598167419434
    4. 'len' → logprob: -9.076598167419434
    5. ' cursor' → logprob: -9.701598167419434
    6. ' s' → logprob: -9.701598167419434
    7. ' len' → logprob: -9.701598167419434
    8. 'cursor' → logprob: -10.076598167419434
    9. ' ' → logprob: -10.826598167419434
    10. 's' → logprob: -10.826598167419434

Token 285: '_max' (ID: 13731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: ' max' (ID: 2999)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 288: '_cursor' (ID: 69415)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.693234920501709
    2. '_cursor' → logprob: -0.693234920501709
    3. 'cur' → logprob: -10.193235397338867
    4. 'cursor' → logprob: -10.318235397338867
    5. 'Cursor' → logprob: -12.318235397338867
    6. '_c' → logprob: -13.068235397338867
    7. '_max' → logprob: -13.068235397338867
    8. 'Cur' → logprob: -13.193235397338867
    9. '_' → logprob: -13.443235397338867
    10. 'max' → logprob: -14.818235397338867

Token 289: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000491672137286514
    2. ' ' → logprob: -7.625491619110107
    3. '```' → logprob: -13.000492095947266
    4. '0' → logprob: -13.750492095947266
    5. 'def' → logprob: -16.500492095947266
    6. '   ' → logprob: -16.750492095947266
    7. '<|end|>' → logprob: -16.750492095947266
    8. '[' → logprob: -18.000492095947266
    9. '2' → logprob: -18.125492095947266
    10. '7' → logprob: -18.750492095947266

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -14.375003814697266
    4. '```' → logprob: -14.875003814697266
    5. '<|end|>' → logprob: -18.625003814697266
    6. '
' → logprob: -18.875003814697266
    7. '-' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.250003814697266
    9. 'def' → logprob: -19.875003814697266
    10. 'return' → logprob: -20.000003814697266

Token 292: '

' (ID: 279)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1438010334968567
    2. '<|end|>' → logprob: -2.518800973892212
    3. '[' → logprob: -4.393801212310791
    4. ' ' → logprob: -4.768801212310791
    5. 'ss' → logprob: -4.893801212310791
    6. ' s' → logprob: -5.018801212310791
    7. '
' → logprob: -5.018801212310791
    8. ',' → logprob: -6.268801212310791
    9. 'sss' → logprob: -6.268801212310791
    10. 'def' → logprob: -6.268801212310791

Token 293: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.027217304334044456
    2. 'def' → logprob: -4.277217388153076
    3. 'a' → logprob: -5.027217388153076
    4. 'sss' → logprob: -5.902217388153076
    5. 'ss' → logprob: -6.527217388153076
    6. '
' → logprob: -7.777217388153076
    7. ' ' → logprob: -8.152216911315918
    8. ' s' → logprob: -8.152216911315918
    9. '<|end|>' → logprob: -9.027216911315918
    10. '#' → logprob: -9.277216911315918

Token 294: ' integrate' (ID: 41990)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.40782174468040466
    2. ' search' → logprob: -1.532821774482727
    3. ' solve' → logprob: -3.0328216552734375
    4. 'search' → logprob: -4.1578216552734375
    5. ' max' → logprob: -4.6578216552734375
    6. ' process' → logprob: -4.6578216552734375
    7. ' s' → logprob: -4.7828216552734375
    8. ' find' → logprob: -5.0328216552734375
    9. 'main' → logprob: -5.0328216552734375
    10. 'solve' → logprob: -5.5328216552734375

Token 295: '(parts' (ID: 102573)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.007318269927054644
    2. '(' → logprob: -5.382318496704102
    3. '(s' → logprob: -6.007318496704102
    4. ' (' → logprob: -9.007318496704102
    5. '(search' → logprob: -10.882318496704102
    6. '_ss' → logprob: -11.007318496704102
    7. '(a' → logprob: -11.257318496704102
    8. '_(' → logprob: -11.882318496704102
    9. '(ab' → logprob: -12.007318496704102
    10. '(_' → logprob: -12.132318496704102

Token 296: '_b' (ID: 1535)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40383389592170715
    2. '):
' → logprob: -1.2788338661193848
    3. '(ss' → logprob: -3.2788338661193848
    4. ',' → logprob: -4.528833866119385
    5. ')' → logprob: -6.278833866119385
    6. '   ' → logprob: -6.778833866119385
    7. '_' → logprob: -7.778833866119385
    8. 's' → logprob: -7.903833866119385
    9. '_ss' → logprob: -7.903833866119385
    10. '(' → logprob: -8.153834342956543

Token 297: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2340848445892334
    2. '):' → logprob: -2.4840848445892334
    3. '):
' → logprob: -3.4840848445892334
    4. '=[]' → logprob: -3.7340848445892334
    5. 'ss' → logprob: -4.7340850830078125
    6. '[]' → logprob: -5.1090850830078125
    7. 'r' → logprob: -5.1090850830078125
    8. 's' → logprob: -5.4840850830078125
    9. ')_' → logprob: -5.4840850830078125
    10. 'b' → logprob: -5.6090850830078125

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06016609072685242
    2. ' parts' → logprob: -3.060166120529175
    3. '    
' → logprob: -6.185165882110596
    4. '    ' → logprob: -6.435165882110596
    5. ' s' → logprob: -6.685165882110596
    6. '
' → logprob: -6.685165882110596
    7. ' return' → logprob: -7.185165882110596
    8. '```' → logprob: -7.185165882110596
    9. '<|end|>' → logprob: -7.560165882110596
    10. '(parts' → logprob: -7.935165882110596

Token 299: ' tmp' (ID: 8919)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -1.099251389503479
    2. ' result' → logprob: -1.099251389503479
    3. 'result' → logprob: -1.974251389503479
    4. 'res' → logprob: -1.974251389503479
    5. '   ' → logprob: -3.9742512702941895
    6. ' parts' → logprob: -4.4742512702941895
    7. ' merged' → logprob: -5.7242512702941895
    8. ' full' → logprob: -6.0992512702941895
    9. ' s' → logprob: -6.2242512702941895
    10. ' ret' → logprob: -6.2242512702941895

Token 300: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.4799986779689789
    2. '_buf' → logprob: -1.6049987077713013
    3. ' =' → logprob: -2.3549985885620117
    4. '=' → logprob: -3.1049985885620117
    5. '_res' → logprob: -4.604998588562012
    6. '_parts' → logprob: -4.729998588562012
    7. 'max' → logprob: -5.354998588562012
    8. '_' → logprob: -5.479998588562012
    9. '_str' → logprob: -5.979998588562012
    10. '='_' → logprob: -6.354998588562012

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3911758065223694
    2. '=' → logprob: -1.1411757469177246
    3. ',' → logprob: -5.516175746917725
    4. '_' → logprob: -9.266176223754883
    5. ' ,' → logprob: -9.891176223754883
    6. ' ' → logprob: -10.141176223754883
    7. '=''' → logprob: -10.891176223754883
    8. '   ' → logprob: -11.391176223754883
    9. 'max' → logprob: -12.141176223754883
    10. '='' → logprob: -12.266176223754883

Token 302: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.10366696119308472
    2. '""' → logprob: -2.3536670207977295
    3. ' ''' → logprob: -6.22866678237915
    4. ''' → logprob: -7.85366678237915
    5. '"' → logprob: -7.97866678237915
    6. '''
' → logprob: -8.103667259216309
    7. 'parts' → logprob: -8.728667259216309
    8. '[]' → logprob: -9.478667259216309
    9. ' ""' → logprob: -9.478667259216309
    10. '['' → logprob: -10.228667259216309

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32942506670951843
    2. ' for' → logprob: -1.3294250965118408
    3. 'for' → logprob: -4.329424858093262
    4. ' parts' → logprob: -6.954424858093262
    5. ',' → logprob: -7.454424858093262
    6. '<|end|>' → logprob: -7.954424858093262
    7. 'def' → logprob: -8.204424858093262
    8. '
' → logprob: -8.704424858093262
    9. '	for' → logprob: -8.954424858093262
    10. '    
' → logprob: -9.454424858093262

Token 304: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01777656003832817
    2. 'cur' → logprob: -5.0177764892578125
    3. 'tmp' → logprob: -5.6427764892578125
    4. ' for' → logprob: -6.3927764892578125
    5. 'max' → logprob: -6.6427764892578125
    6. 'parts' → logprob: -6.7677764892578125
    7. 'pos' → logprob: -7.3927764892578125
    8. 'buf' → logprob: -7.5177764892578125
    9. 'cursor' → logprob: -7.5177764892578125
    10. 'idx' → logprob: -8.392776489257812

Token 305: ' pb' (ID: 31582)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.690786600112915
    2. 'part' → logprob: -1.065786600112915
    3. 'p' → logprob: -2.565786600112915
    4. ' p' → logprob: -3.815786600112915
    5. 'i' → logprob: -4.190786361694336
    6. ' s' → logprob: -4.440786361694336
    7. 's' → logprob: -4.690786361694336
    8. ' i' → logprob: -5.440786361694336
    9. 'x' → logprob: -6.315786361694336
    10. 'tmp' → logprob: -6.440786361694336

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01013981457799673
    2. 'in' → logprob: -4.6351399421691895
    3. '_' → logprob: -8.385139465332031
    4. ',' → logprob: -10.135139465332031
    5. ' ' → logprob: -10.135139465332031
    6. '_in' → logprob: -10.510139465332031
    7. 'i' → logprob: -11.010139465332031
    8. 'b' → logprob: -11.260139465332031
    9. 'p' → logprob: -12.260139465332031
    10. ' _' → logprob: -12.885139465332031

Token 307: ' reversed' (ID: 57184)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.1797977238893509
    2. ' parts' → logprob: -1.8047977685928345
    3. 'chain' → logprob: -11.304798126220703
    4. ' ' → logprob: -11.429798126220703
    5. '   ' → logprob: -11.804798126220703
    6. '(parts' → logprob: -11.804798126220703
    7. 'part' → logprob: -12.679798126220703
    8. ' chain' → logprob: -13.304798126220703
    9. 'range' → logprob: -13.429798126220703
    10. '  ' → logprob: -13.429798126220703

Token 308: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0002111694193445146
    2. 'parts' → logprob: -8.500210762023926
    3. ' parts' → logprob: -12.250210762023926
    4. ' (' → logprob: -13.000210762023926
    5. ')' → logprob: -15.500210762023926
    6. '(' → logprob: -16.375211715698242
    7. '(points' → logprob: -16.875211715698242
    8. ',' → logprob: -17.250211715698242
    9. '.parts' → logprob: -17.375211715698242
    10. '   ' → logprob: -17.500211715698242

Token 309: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.3795937522663735e-05
    2. 'b' → logprob: -10.87502384185791
    3. 's' → logprob: -13.12502384185791
    4. ')_' → logprob: -13.12502384185791
    5. ')' → logprob: -15.00002384185791
    6. '_parts' → logprob: -16.625022888183594
    7. '_a' → logprob: -16.875022888183594
    8. ' _' → logprob: -17.000022888183594
    9. '_bs' → logprob: -17.000022888183594
    10. ')b' → logprob: -17.375022888183594

Token 310: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25203999876976013
    2. '):' → logprob: -1.5020400285720825
    3. '   ' → logprob: -10.002039909362793
    4. '):
' → logprob: -10.502039909362793
    5. ':' → logprob: -11.002039909362793
    6. ')' → logprob: -11.502039909362793
    7. ' ):
' → logprob: -12.627039909362793
    8. ' ):' → logprob: -13.252039909362793
    9. '():
' → logprob: -13.377039909362793
    10. '):

' → logprob: -13.877039909362793

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00563841313123703
    2. ':' → logprob: -5.630638599395752
    3. ':
' → logprob: -7.130638599395752
    4. ',' → logprob: -7.380638599395752
    5. '   ' → logprob: -8.880638122558594
    6. '):
' → logprob: -9.255638122558594
    7. '<|end|>' → logprob: -9.505638122558594
    8. ' for' → logprob: -9.755638122558594
    9. '        
' → logprob: -9.880638122558594
    10. ' :' → logprob: -10.380638122558594

Token 312: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.7587295174598694
    2. '       ' → logprob: -1.1337294578552246
    3. 'tmp' (adapté à ' tmp') → logprob: -1.6337294578552246
    4. ' for' → logprob: -4.758729457855225
    5. ' if' → logprob: -5.383729457855225
    6. 'if' → logprob: -7.633729457855225
    7. 'for' → logprob: -7.883729457855225
    8. '_tmp' → logprob: -9.008729934692383
    9. '	tmp' → logprob: -9.383729934692383
    10. ' s' → logprob: -10.133729934692383

Token 313: ' =' (ID: 314)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0001681405701674521
    2. 'max' → logprob: -8.875167846679688
    3. '=' → logprob: -11.000167846679688
    4. '_tmp' → logprob: -12.750167846679688
    5. '+' → logprob: -13.000167846679688
    6. ' =' → logprob: -13.125167846679688
    7. '_' → logprob: -13.500167846679688
    8. '=_' → logprob: -14.000167846679688
    9. '_cur' → logprob: -15.125167846679688
    10. '=max' → logprob: -15.375167846679688

Token 314: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.1498403251171112
    2. ' pb' → logprob: -2.0248403549194336
    3. 'tmp' → logprob: -5.149840354919434
    4. ' tmp' → logprob: -6.774840354919434
    5. '(pb' → logprob: -9.899840354919434
    6. 'pbs' → logprob: -10.524840354919434
    7. '   ' → logprob: -10.649840354919434
    8. ' ' → logprob: -10.649840354919434
    9. 'tb' → logprob: -11.024840354919434
    10. '.pb' → logprob: -11.399840354919434

Token 315: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023245453834534
    2. ' +' → logprob: -1.910232424736023
    3. '+
' → logprob: -12.785232543945312
    4. 'max' → logprob: -13.910232543945312
    5. 'tmp' → logprob: -14.410232543945312
    6. '+=' → logprob: -14.535232543945312
    7. '   ' → logprob: -14.785232543945312
    8. '+s' → logprob: -14.910232543945312
    9. '+t' → logprob: -15.035232543945312
    10. '+p' → logprob: -15.160232543945312

Token 316: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00043472214019857347
    2. ' tmp' → logprob: -7.750434875488281
    3. '_tmp' → logprob: -13.500434875488281
    4. '
' → logprob: -13.625434875488281
    5. '	tmp' → logprob: -15.125434875488281
    6. 'temp' → logprob: -15.250434875488281
    7. '   ' → logprob: -15.250434875488281
    8. '$tmp' → logprob: -15.250434875488281
    9. ' ' → logprob: -15.375434875488281
    10. '/tmp' → logprob: -16.75043487548828

Token 317: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.512236498361744e-07
    2. 'max' → logprob: -14.625000953674316
    3. '_' → logprob: -18.375
    4. '_MAX' → logprob: -20.0
    5. '	max' → logprob: -21.25
    6. ' max' → logprob: -21.375
    7. '_m' → logprob: -21.375
    8. ' _' → logprob: -21.75
    9. 'Max' → logprob: -21.875
    10. '
' → logprob: -22.375

Token 318: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22795772552490234
    2. '       ' → logprob: -2.2279577255249023
    3. '<|end|>' → logprob: -2.3529577255249023
    4. '
' → logprob: -7.602957725524902
    5. '<|end|>' → logprob: -8.352957725524902
    6. ',' → logprob: -10.352957725524902
    7. ' 
' → logprob: -10.602957725524902
    8. '        
' → logprob: -10.602957725524902
    9. '   ' → logprob: -11.102957725524902
    10. '```' → logprob: -11.102957725524902

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01178654097020626
    2. '
' → logprob: -4.511786460876465
    3. '   ' → logprob: -8.136786460876465
    4. ' if' → logprob: -9.136786460876465
    5. '
' → logprob: -9.511786460876465
    6. '        
' → logprob: -9.761786460876465
    7. ' ' → logprob: -10.261786460876465
    8. 'if' → logprob: -10.386786460876465
    9. ',' → logprob: -11.136786460876465
    10. '	' → logprob: -11.261786460876465

Token 320: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22903598845005035
    2. ' if' → logprob: -1.7290359735488892
    3. '       ' → logprob: -3.6040360927581787
    4. ' ' → logprob: -11.354036331176758
    5. '   ' → logprob: -11.854036331176758
    6. '
' → logprob: -12.479036331176758
    7. '	if' → logprob: -12.854036331176758
    8. 'tmp' → logprob: -13.604036331176758
    9. 's' → logprob: -14.229036331176758
    10. '           ' → logprob: -14.479036331176758

Token 321: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.734346866607666
    2. 'tmp' → logprob: -0.734346866607666
    3. ' len' → logprob: -3.734346866607666
    4. 'len' → logprob: -4.109346866607666
    5. '(tmp' → logprob: -10.984346389770508
    6. ' ' → logprob: -11.109346389770508
    7. '	tmp' → logprob: -11.984346389770508
    8. '/tmp' → logprob: -12.734346389770508
    9. '   ' → logprob: -13.109346389770508
    10. '$tmp' → logprob: -13.546846389770508

Token 322: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05554727837443352
    2. '>' → logprob: -2.9305472373962402
    3. ' >=' → logprob: -7.55554723739624
    4. '>=' → logprob: -9.305547714233398
    5. ' >
' → logprob: -11.305547714233398
    6. ' <=' → logprob: -11.430547714233398
    7. ' ' → logprob: -11.680547714233398
    8. '[' → logprob: -12.430547714233398
    9. '   ' → logprob: -13.055547714233398
    10. ' ==' → logprob: -13.180547714233398

Token 323: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.160235196352005
    2. ' tmp' → logprob: -1.9102351665496826
    3. '       ' → logprob: -12.160235404968262
    4. '	tmp' → logprob: -12.910235404968262
    5. '$tmp' → logprob: -13.910235404968262
    6. '(tmp' → logprob: -14.035235404968262
    7. '[tmp' → logprob: -15.035235404968262
    8. '/tmp' → logprob: -15.035235404968262
    9. '_tmp' → logprob: -15.285235404968262
    10. '   ' → logprob: -15.660235404968262

Token 324: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00020509003661572933
    2. 'max' → logprob: -8.500205039978027
    3. '_tmp' → logprob: -14.875205039978027
    4. '_' → logprob: -15.000205039978027
    5. 'Max' → logprob: -15.000205039978027
    6. '_MAX' → logprob: -15.500205039978027
    7. ' max' → logprob: -15.625205039978027
    8. ' _' → logprob: -16.750205993652344
    9. ':' → logprob: -17.125205993652344
    10. '	max' → logprob: -17.500205993652344

Token 325: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43158823251724243
    2. ':' → logprob: -1.0565881729125977
    3. '           ' → logprob: -6.181588172912598
    4. '):
' → logprob: -7.681588172912598
    5. '<|end|>' → logprob: -9.181588172912598
    6. '):' → logprob: -9.681588172912598
    7. '       ' → logprob: -10.056588172912598
    8. ' :
' → logprob: -10.056588172912598
    9. '():
' → logprob: -10.806588172912598
    10. ':

' → logprob: -10.931588172912598

Token 326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06623202562332153
    2. ':
' → logprob: -3.6912319660186768
    3. ' tmp' → logprob: -4.441232204437256
    4. ':' → logprob: -4.566232204437256
    5. 'tmp' → logprob: -4.816232204437256
    6. '<|end|>' → logprob: -5.316232204437256
    7. '[tmp' → logprob: -6.941232204437256
    8. '(tmp' → logprob: -7.066232204437256
    9. '               ' → logprob: -7.941232204437256
    10. '<|end|>' → logprob: -8.191231727600098

Token 327: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.1271863728761673
    2. 'tmp' (adapté à ' tmp') → logprob: -2.1271862983703613
    3. '           ' → logprob: -8.75218677520752
    4. '               ' → logprob: -9.37718677520752
    5. '	tmp' → logprob: -12.50218677520752
    6. '(tmp' → logprob: -12.75218677520752
    7. '
' → logprob: -13.00218677520752
    8. '       ' → logprob: -13.37718677520752
    9. '[tmp' → logprob: -13.75218677520752
    10. '/tmp' → logprob: -14.25218677520752

Token 328: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.03193499520421028
    2. '=' → logprob: -3.531934976577759
    3. 'max' → logprob: -6.156935214996338
    4. ' =' → logprob: -10.28193473815918
    5. '=max' → logprob: -10.65693473815918
    6. 'Max' → logprob: -13.40693473815918
    7. ' max' → logprob: -13.78193473815918
    8. '_MAX' → logprob: -14.28193473815918
    9. ',max' → logprob: -14.90693473815918
    10. '=
' → logprob: -15.15693473815918

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868716359138489
    2. '=' → logprob: -1.136871576309204
    3. ' ' → logprob: -15.636871337890625
    4. ' =
' → logprob: -15.761871337890625
    5. ',' → logprob: -16.386871337890625
    6. '=
' → logprob: -16.886871337890625
    7. '=

' → logprob: -17.011871337890625
    8. '   ' → logprob: -17.261871337890625
    9. '           ' → logprob: -17.386871337890625
    10. '       ' → logprob: -17.511871337890625

Token 330: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.31326422095298767
    2. ' tmp' → logprob: -1.31326425075531
    3. '	tmp' → logprob: -13.688263893127441
    4. '(tmp' → logprob: -14.813263893127441
    5. '/tmp' → logprob: -15.063263893127441
    6. '$tmp' → logprob: -15.188263893127441
    7. 'temp' → logprob: -15.438263893127441
    8. '_tmp' → logprob: -16.563264846801758
    9. '[tmp' → logprob: -16.813264846801758
    10. '
' → logprob: -17.063264846801758

Token 331: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19927673041820526
    2. '   ' → logprob: -1.9492766857147217
    3. '<|end|>' → logprob: -3.5742766857147217
    4. '       ' → logprob: -4.949276924133301
    5. ' return' → logprob: -7.074276924133301
    6. '	return' → logprob: -7.699276924133301
    7. ' ' → logprob: -8.1992769241333
    8. '    
' → logprob: -8.1992769241333
    9. ',' → logprob: -8.4492769241333
    10. ' 
' → logprob: -8.5742769241333

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023638270795345306
    2. '
' → logprob: -3.8986382484436035
    3. ' return' → logprob: -6.3986382484436035
    4. 'return' → logprob: -7.0236382484436035
    5. ',' → logprob: -8.398638725280762
    6. '<|end|>' → logprob: -9.523638725280762
    7. '	return' → logprob: -9.773638725280762
    8. '       ' → logprob: -9.898638725280762
    9. '+
' → logprob: -10.648638725280762
    10. '+' → logprob: -10.898638725280762

Token 333: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2755325436592102
    2. ' return' → logprob: -1.7755324840545654
    3. 'return' (adapté à ' return') → logprob: -3.4005324840545654
    4. '
' → logprob: -3.6505324840545654
    5. ' ' → logprob: -5.2755327224731445
    6. '	return' → logprob: -5.9005327224731445
    7. '<|end|>' → logprob: -6.1505327224731445
    8. '       ' → logprob: -7.6505327224731445
    9. ' 
' → logprob: -8.025532722473145
    10. '    
' → logprob: -8.275532722473145

Token 334: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.3868747651576996
    2. ' tmp' → logprob: -1.136874794960022
    3. '/tmp' → logprob: -13.51187515258789
    4. '(tmp' → logprob: -14.01187515258789
    5. '	tmp' → logprob: -14.26187515258789
    6. '_tmp' → logprob: -15.26187515258789
    7. '$tmp' → logprob: -15.63687515258789
    8. ' ' → logprob: -15.76187515258789
    9. '[tmp' → logprob: -15.76187515258789
    10. ',tmp' → logprob: -16.76187515258789

Token 335: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.200166469876422e-06
    2. 'max' → logprob: -13.000004768371582
    3. '_' → logprob: -13.750004768371582
    4. ' _' → logprob: -14.125004768371582
    5. '_tmp' → logprob: -14.750004768371582
    6. '_x' → logprob: -15.625004768371582
    7. '_MAX' → logprob: -15.625004768371582
    8. '_m' → logprob: -15.750004768371582
    9. '_ma' → logprob: -17.1250057220459
    10. ''_' → logprob: -17.6250057220459

Token 336: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2827507257461548
    2. 's' → logprob: -1.5327507257461548
    3. 'a' → logprob: -4.907750606536865
    4. '<|end|>' → logprob: -5.157750606536865
    5. 'sss' → logprob: -5.407750606536865
    6. 'ss' → logprob: -5.907750606536865
    7. '
' → logprob: -6.032750606536865
    8. 'aaa' → logprob: -6.282750606536865
    9. 'cursor' → logprob: -7.282750606536865
    10. '#' → logprob: -7.407750606536865

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004610745701938868
    2. '=' → logprob: -5.754610538482666
    3. ',' → logprob: -6.629610538482666
    4. '=int' → logprob: -10.129611015319824
    5. ' ,' → logprob: -10.504611015319824
    6. ' ' → logprob: -10.629611015319824
    7. ' =
' → logprob: -11.879611015319824
    8. '<|end|>' → logprob: -12.504611015319824
    9. '  ' → logprob: -13.129611015319824
    10. ' n' → logprob: -13.879611015319824

Token 339: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759502649307251
    2. 'int' → logprob: -0.8259502649307251
    3. ' ' → logprob: -12.200950622558594
    4. '10' → logprob: -12.825950622558594
    5. '[int' → logprob: -13.950950622558594
    6. '<int' → logprob: -14.075950622558594
    7. '=int' → logprob: -14.825950622558594
    8. '20' → logprob: -16.325950622558594
    9. '(int' → logprob: -16.325950622558594
    10. '5' → logprob: -16.450950622558594

Token 340: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25622230768203735
    2. '(' → logprob: -1.5062222480773926
    3. 'input' → logprob: -6.006222248077393
    4. '()' → logprob: -6.756222248077393
    5. ' (' → logprob: -7.756222248077393
    6. '(
' → logprob: -8.75622272491455
    7. ' input' → logprob: -10.63122272491455
    8. '=input' → logprob: -10.75622272491455
    9. '('' → logprob: -11.75622272491455
    10. ' ' → logprob: -12.00622272491455

Token 341: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004391663707792759
    2. '()' → logprob: -5.504391670227051
    3. '())
' → logprob: -8.25439167022705
    4. ')' → logprob: -10.62939167022705
    5. '(' → logprob: -11.12939167022705
    6. '()
' → logprob: -11.75439167022705
    7. '().' → logprob: -12.50439167022705
    8. ' ())' → logprob: -14.37939167022705
    9. '(),' → logprob: -14.62939167022705
    10. '())

' → logprob: -15.00439167022705

Token 342: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011983625590801239
    2. '
' → logprob: -5.261983394622803
    3. ' s' → logprob: -5.886983394622803
    4. '<|end|>' → logprob: -5.886983394622803
    5. 'n' → logprob: -7.886983394622803
    6. 'a' → logprob: -8.511983871459961
    7. 'ss' → logprob: -9.136983871459961
    8. ')' → logprob: -9.261983871459961
    9. '  
' → logprob: -9.386983871459961
    10. 'sss' → logprob: -9.636983871459961

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386934757232666
    2. '=' → logprob: -1.136934757232666
    3. '=input' → logprob: -10.011934280395508
    4. 's' → logprob: -11.386934280395508
    5. ' ' → logprob: -13.636934280395508
    6. '  ' → logprob: -13.886934280395508
    7. '_' → logprob: -14.136934280395508
    8. ' =
' → logprob: -14.261934280395508
    9. '+=' → logprob: -14.511934280395508
    10. ' ' → logprob: -14.511934280395508

Token 344: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245826363563538
    2. ' input' → logprob: -3.7732458114624023
    3. '=input' → logprob: -15.648245811462402
    4. 'list' → logprob: -16.14824676513672
    5. '(input' → logprob: -16.39824676513672
    6. '<input' → logprob: -17.14824676513672
    7. '[input' → logprob: -18.02324676513672
    8. '	input' → logprob: -18.27324676513672
    9. ',input' → logprob: -19.02324676513672
    10. ' list' → logprob: -19.64824676513672

Token 345: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.043078898685053e-05
    2. '().' → logprob: -9.625090599060059
    3. '(' → logprob: -11.500090599060059
    4. '())' → logprob: -11.875090599060059
    5. '()>' → logprob: -13.000090599060059
    6. '()
' → logprob: -13.125090599060059
    7. ' ()' → logprob: -14.250090599060059
    8. '(),' → logprob: -15.000090599060059
    9. '()`' → logprob: -15.000090599060059
    10. '('' → logprob: -15.250090599060059

Token 346: 'sss' (ID: 132377)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.034939058125019073
    2. '
' → logprob: -3.5349390506744385
    3. 'a' → logprob: -5.659939289093018
    4. 'aa' → logprob: -7.659939289093018
    5. 's' → logprob: -8.03493881225586
    6. 'sss' → logprob: -8.53493881225586
    7. 'n' → logprob: -8.90993881225586
    8. ' aaa' → logprob: -9.15993881225586
    9. '#' → logprob: -10.15993881225586
    10. 'length' → logprob: -10.40993881225586

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054903045296669006
    2. '=' → logprob: -2.929903030395508
    3. 's' → logprob: -12.054903030395508
    4. ',' → logprob: -12.054903030395508
    5. '_' → logprob: -13.554903030395508
    6. '=_' → logprob: -13.929903030395508
    7. '=[' → logprob: -14.054903030395508
    8. ' ' → logprob: -14.054903030395508
    9. '=[]' → logprob: -14.054903030395508
    10. ' =
' → logprob: -14.429903030395508

Token 348: ' [-' (ID: 20191)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2767767012119293
    2. '[' → logprob: -1.776776671409607
    3. '[list' → logprob: -2.9017767906188965
    4. '[s' → logprob: -5.4017767906188965
    5. ' [' → logprob: -5.6517767906188965
    6. ' list' → logprob: -6.1517767906188965
    7. '[len' → logprob: -6.2767767906188965
    8. '[n' → logprob: -6.7767767906188965
    9. '[-' → logprob: -7.0267767906188965
    10. 'chain' → logprob: -7.1517767906188965

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002198676229454577
    2. 'n' → logprob: -10.25022029876709
    3. '2' → logprob: -10.37522029876709
    4. '10' → logprob: -10.75022029876709
    5. '100' → logprob: -10.87522029876709
    6. ' ' → logprob: -11.25022029876709
    7. '(' → logprob: -11.25022029876709
    8. '3' → logprob: -11.37522029876709
    9. 'len' → logprob: -11.37522029876709
    10. '-' → logprob: -11.50022029876709

Token 350: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009862689301371574
    2. ']*(' → logprob: -5.509862899780273
    3. ']
' → logprob: -6.009862899780273
    4. ' for' → logprob: -6.634862899780273
    5. ']*' → logprob: -7.634862899780273
    6. ']+' → logprob: -7.884862899780273
    7. 'for' → logprob: -7.884862899780273
    8. '0' → logprob: -8.134862899780273
    9. '
' → logprob: -8.259862899780273
    10. ',' → logprob: -10.009862899780273

Token 351: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20082233846187592
    2. 'ch' → logprob: -2.450822353363037
    3. ' c' → logprob: -3.200822353363037
    4. 'x' → logprob: -3.700822353363037
    5. ' ch' → logprob: -3.700822353363037
    6. ' x' → logprob: -5.450822353363037
    7. 'i' → logprob: -7.825822353363037
    8. 'char' → logprob: -8.450821876525879
    9. ' ' → logprob: -9.200821876525879
    10. '_' → logprob: -9.325821876525879

Token 352: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5514983534812927
    2. '==' → logprob: -1.1764984130859375
    3. '=='' → logprob: -2.1764984130859375
    4. ' =='' → logprob: -6.6764984130859375
    5. ' ' → logprob: -8.426498413085938
    6. ' !=' → logprob: -8.676498413085938
    7. ' in' → logprob: -8.926498413085938
    8. '=="' → logprob: -9.301498413085938
    9. '!=' → logprob: -9.801498413085938
    10. '!='' → logprob: -10.426498413085938

Token 353: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.13530737161636353
    2. ''b' → logprob: -2.6353073120117188
    3. ''' → logprob: -3.5103073120117188
    4. '0' → logprob: -4.760307312011719
    5. ''\' → logprob: -4.885307312011719
    6. ' '' → logprob: -5.760307312011719
    7. 'a' → logprob: -5.885307312011719
    8. ' ' → logprob: -6.885307312011719
    9. 'b' → logprob: -7.885307312011719
    10. ''ab' → logprob: -8.010307312011719

Token 354: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13048289716243744
    2. '0' → logprob: -2.7554829120635986
    3. 'b' → logprob: -3.2554829120635986
    4. ''' → logprob: -4.2554826736450195
    5. '\' → logprob: -5.8804826736450195
    6. '\x' → logprob: -7.0054826736450195
    7. ''a' → logprob: -7.5054826736450195
    8. ''\' → logprob: -7.7554826736450195
    9. ''b' → logprob: -8.13048267364502
    10. ' ' → logprob: -8.50548267364502

Token 355: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47493976354599
    2. 'else' → logprob: -0.97493976354599
    3. 'b' → logprob: -7.974939823150635
    4. ''' → logprob: -8.349939346313477
    5. ' ' → logprob: -9.349939346313477
    6. '
' → logprob: -10.224939346313477
    7. 'e' → logprob: -10.349939346313477
    8. '0' → logprob: -10.474939346313477
    9. 'a' → logprob: -10.849939346313477
    10. 'el' → logprob: -11.474939346313477

Token 356: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3868768811225891
    2. 'else' → logprob: -1.1368768215179443
    3. ' ' → logprob: -13.511877059936523
    4. '  ' → logprob: -14.011877059936523
    5. '
' → logprob: -14.136877059936523
    6. '	else' → logprob: -14.136877059936523
    7. ' els' → logprob: -14.886877059936523
    8. ' or' → logprob: -15.261877059936523
    9. '_else' → logprob: -15.636877059936523
    10. ' 
' → logprob: -15.636877059936523

Token 357: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7297306656837463
    2. ' ' → logprob: -0.7297306656837463
    3. '1' → logprob: -3.4797306060791016
    4. ' ord' → logprob: -6.104730606079102
    5. ' n' → logprob: -7.354730606079102
    6. 'ord' → logprob: -7.479730606079102
    7. '-' → logprob: -8.354730606079102
    8. ' -' → logprob: -8.354730606079102
    9. 'n' → logprob: -8.604730606079102
    10. ' s' → logprob: -9.104730606079102

Token 358: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49241647124290466
    2. '1' → logprob: -0.992416501045227
    3. ' ' → logprob: -4.7424163818359375
    4. '-' → logprob: -5.1174163818359375
    5. 'ord' → logprob: -6.4924163818359375
    6. 'n' → logprob: -8.117416381835938
    7. ' ord' → logprob: -8.492416381835938
    8. '(ord' → logprob: -8.617416381835938
    9. '100' → logprob: -8.742416381835938
    10. '255' → logprob: -8.867416381835938

Token 359: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018602648749947548
    2. ' if' → logprob: -4.6436028480529785
    3. 'for' → logprob: -4.7686028480529785
    4. 'if' → logprob: -8.14360237121582
    5. '0' → logprob: -11.51860237121582
    6. ' ' → logprob: -11.76860237121582
    7. ']' → logprob: -12.51860237121582
    8. '	for' → logprob: -13.64360237121582
    9. ' else' → logprob: -14.39360237121582
    10. '   ' → logprob: -14.51860237121582

Token 360: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11871282011270523
    2. ' c' → logprob: -2.243712902069092
    3. 's' → logprob: -5.368712902069092
    4. ' s' → logprob: -6.993712902069092
    5. '_' → logprob: -8.243712425231934
    6. '_c' → logprob: -11.118712425231934
    7. '_s' → logprob: -11.368712425231934
    8. ' _' → logprob: -12.368712425231934
    9. ' ' → logprob: -15.118712425231934
    10. 'range' → logprob: -15.493712425231934

Token 361: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3877220153808594
    2. 'in' → logprob: -1.1377220153808594
    3. 'c' → logprob: -7.512722015380859
    4. 's' → logprob: -8.13772201538086
    5. ' ' → logprob: -12.38772201538086
    6. ' c' → logprob: -12.88772201538086
    7. '  ' → logprob: -13.88772201538086
    8. ' s' → logprob: -13.88772201538086
    9. 'n' → logprob: -14.01272201538086
    10. 'i' → logprob: -14.26272201538086

Token 362: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804952651262283
    2. ' s' → logprob: -3.2880494594573975
    3. 'range' → logprob: -12.413049697875977
    4. ' range' → logprob: -13.163049697875977
    5. 'c' → logprob: -13.913049697875977
    6. ' ' → logprob: -14.538049697875977
    7. 'n' → logprob: -16.288049697875977
    8. '_s' → logprob: -16.288049697875977
    9. '	s' → logprob: -16.663049697875977
    10. '
' → logprob: -16.788049697875977

Token 363: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006333283381536603
    2. ' ]' → logprob: -7.625633239746094
    3. ']
' → logprob: -8.875633239746094
    4. ']

' → logprob: -12.625633239746094
    5. ']
' → logprob: -13.875633239746094
    6. ')]' → logprob: -14.625633239746094
    7. ' ]
' → logprob: -15.375633239746094
    8. '];' → logprob: -16.000633239746094
    9. '()]' → logprob: -16.500633239746094
    10. 's' → logprob: -16.750633239746094

Token 364: 'sss' (ID: 132377)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.005452647339552641
    2. 'acc' → logprob: -6.005452632904053
    3. 'sss' → logprob: -7.630452632904053
    4. 'ccc' → logprob: -8.005453109741211
    5. 'for' → logprob: -8.255453109741211
    6. 'ai' → logprob: -8.380453109741211
    7. 'abc' → logprob: -8.880453109741211
    8. 'prefix' → logprob: -8.880453109741211
    9. 'cum' → logprob: -8.880453109741211
    10. 'aa' → logprob: -9.005453109741211

Token 365: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06345420330762863
    2. ' list' → logprob: -2.8134541511535645
    3. '[' → logprob: -7.1884541511535645
    4. 'acc' → logprob: -8.063454627990723
    5. ' [' → logprob: -8.563454627990723
    6. '[-' → logprob: -9.188454627990723
    7. '(list' → logprob: -10.188454627990723
    8. '[list' → logprob: -10.188454627990723
    9. ' [-' → logprob: -11.438454627990723
    10. 'tuple' → logprob: -11.938454627990723

Token 367: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.008662670850753784
    2. 'acc' → logprob: -4.758662700653076
    3. '	acc' → logprob: -11.008662223815918
    4. '(chain' → logprob: -11.633662223815918
    5. ' accumulate' → logprob: -11.758662223815918
    6. '(' → logprob: -11.883662223815918
    7. '(ac' → logprob: -12.383662223815918
    8. '.acc' → logprob: -14.133662223815918
    9. 'ac' → logprob: -14.258662223815918
    10. ''acc' → logprob: -15.008662223815918

Token 368: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -7.465036105713807e-06
    2. 'um' → logprob: -12.250007629394531
    3. 'ulate' → logprob: -13.875007629394531
    4. 'cum' → logprob: -14.500007629394531
    5. 'om' → logprob: -14.500007629394531
    6. 'umul' → logprob: -15.250007629394531
    7. '
' → logprob: -16.12500762939453
    8. 'uminate' → logprob: -16.62500762939453
    9. '

' → logprob: -17.62500762939453
    10. '=' → logprob: -17.87500762939453

Token 369: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -5.5577775128767826e-06
    2. ')' → logprob: -12.875005722045898
    3. ':ss' → logprob: -13.875005722045898
    4. ' (' → logprob: -15.000005722045898
    5. '
' → logprob: -15.125005722045898
    6. '	ss' → logprob: -15.125005722045898
    7. 'sss' → logprob: -15.500005722045898
    8. ')(' → logprob: -15.625005722045898
    9. '(' → logprob: -15.625005722045898
    10. '(abs' → logprob: -16.2500057220459

Token 370: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005288311280310154
    2. 'ss' → logprob: -5.755288124084473
    3. 'sss' → logprob: -7.005288124084473
    4. 'c' → logprob: -7.130288124084473
    5. '(ss' → logprob: -9.005288124084473
    6. ')' → logprob: -9.130288124084473
    7. '(s' → logprob: -10.380288124084473
    8. '   ' → logprob: -11.505288124084473
    9. '
' → logprob: -11.755288124084473
    10. 'ccc' → logprob: -11.880288124084473

Token 371: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0059280856512486935
    2. '))
' → logprob: -5.380928039550781
    3. ',' → logprob: -6.880928039550781
    4. ' ))' → logprob: -8.380928039550781
    5. '))

' → logprob: -10.255928039550781
    6. ')))' → logprob: -12.255928039550781
    7. ' ))
' → logprob: -13.005928039550781
    8. ')' → logprob: -13.255928039550781
    9. '))
' → logprob: -13.380928039550781
    10. '()))' → logprob: -13.755928039550781

Token 372: 'aaa' (ID: 55894)
  Prédit: 'aaa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.0005488642491400242
    2. 'sss' → logprob: -9.12554931640625
    3. 's' → logprob: -9.87554931640625
    4. '
' → logprob: -10.00054931640625
    5. 'max' → logprob: -10.12554931640625
    6. '0' → logprob: -10.62554931640625
    7. 'ccc' → logprob: -10.62554931640625
    8. 'ai' → logprob: -10.75054931640625
    9. 'aa' → logprob: -10.87554931640625
    10. 'a' → logprob: -11.00054931640625

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00143678137101233
    2. '=' → logprob: -6.626436710357666
    3. ',' → logprob: -9.126437187194824
    4. ' ,' → logprob: -13.376437187194824
    5. ' =[' → logprob: -15.126437187194824
    6. ' ' → logprob: -15.876437187194824
    7. '=[]' → logprob: -16.626436233520508
    8. ' =
' → logprob: -16.751436233520508
    9. ' ' → logprob: -17.876436233520508
    10. '  ' → logprob: -18.376436233520508

Token 374: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6306069493293762
    2. '[list' → logprob: -1.2556068897247314
    3. '[s' → logprob: -2.1306068897247314
    4. ' [' → logprob: -3.1306068897247314
    5. '[i' → logprob: -4.3806071281433105
    6. '[a' → logprob: -6.1306071281433105
    7. 'list' → logprob: -6.5056071281433105
    8. '[b' → logprob: -6.6306071281433105
    9. '[ch' → logprob: -8.380606651306152
    10. '[]
' → logprob: -8.630606651306152

Token 375: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0029545240104198456
    2. '-' → logprob: -6.502954483032227
    3. '0' → logprob: -7.002954483032227
    4. ' i' → logprob: -8.377954483032227
    5. 'idx' → logprob: -9.002954483032227
    6. '(i' → logprob: -9.627954483032227
    7. '-i' → logprob: -10.002954483032227
    8. ' -' → logprob: -10.752954483032227
    9. ' ' → logprob: -11.252954483032227
    10. 'index' → logprob: -12.252954483032227

Token 376: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11294093728065491
    2. 'for' → logprob: -2.237941026687622
    3. ' ' → logprob: -9.987940788269043
    4. '+' → logprob: -10.237940788269043
    5. '
' → logprob: -11.487940788269043
    6. 'd' → logprob: -11.737940788269043
    7. 's' → logprob: -12.612940788269043
    8. '	for' → logprob: -12.737940788269043
    9. ' 
' → logprob: -12.987940788269043
    10. '```' → logprob: -13.612940788269043

Token 377: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13960665464401245
    2. ',' → logprob: -2.5146067142486572
    3. ' i' → logprob: -3.0146067142486572
    4. ',i' → logprob: -8.264606475830078
    5. ' in' → logprob: -9.889606475830078
    6. 's' → logprob: -11.514606475830078
    7. ' s' → logprob: -11.764606475830078
    8. ' ,' → logprob: -12.264606475830078
    9. ',s' → logprob: -13.389606475830078
    10. ' ' → logprob: -13.389606475830078

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021221250295639038
    2. ',c' → logprob: -3.896221160888672
    3. ',s' → logprob: -7.521221160888672
    4. 'in' → logprob: -10.396221160888672
    5. ',v' → logprob: -10.646221160888672
    6. ' in' → logprob: -11.146221160888672
    7. 's' → logprob: -11.146221160888672
    8. ',x' → logprob: -11.521221160888672
    9. ' ,' → logprob: -11.646221160888672
    10. 'c' → logprob: -12.146221160888672

Token 379: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16446875035762787
    2. 'x' → logprob: -2.914468765258789
    3. ' c' → logprob: -3.039468765258789
    4. 'v' → logprob: -3.414468765258789
    5. '(x' → logprob: -5.539468765258789
    6. ' x' → logprob: -5.664468765258789
    7. '(c' → logprob: -5.789468765258789
    8. '(v' → logprob: -5.914468765258789
    9. ' v' → logprob: -6.164468765258789
    10. ' (' → logprob: -7.039468765258789

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16294366121292114
    2. 'in' → logprob: -1.9129436016082764
    3. ',' → logprob: -5.9129438400268555
    4. ' ' → logprob: -11.912943840026855
    5. 's' → logprob: -13.412943840026855
    6. ' ,' → logprob: -14.787943840026855
    7. 'c' → logprob: -15.037943840026855
    8. ',c' → logprob: -15.162943840026855
    9. 'enumer' → logprob: -15.162943840026855
    10. ',s' → logprob: -15.412943840026855

Token 381: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.03805205225944519
    2. 'enumer' → logprob: -3.2880520820617676
    3. 'c' → logprob: -12.28805160522461
    4. ' c' → logprob: -12.91305160522461
    5. ' s' → logprob: -14.28805160522461
    6. '(' → logprob: -14.28805160522461
    7. 's' → logprob: -14.41305160522461
    8. ' in' → logprob: -14.66305160522461
    9. ' (' → logprob: -14.78805160522461
    10. ' enumer' → logprob: -15.41305160522461

Token 382: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32970887422561646
    2. 'sss' → logprob: -1.5797088146209717
    3. '(s' → logprob: -3.7047088146209717
    4. ' s' → logprob: -3.9547088146209717
    5. '(ss' → logprob: -3.9547088146209717
    6. 'ss' → logprob: -4.579709053039551
    7. 'ssss' → logprob: -7.579709053039551
    8. '(' → logprob: -7.954709053039551
    9. ' ss' → logprob: -9.14220905303955
    10. ' ' → logprob: -9.32970905303955

Token 383: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019448090461082757
    2. 'if' → logprob: -9.500194549560547
    3. ' )' → logprob: -9.750194549560547
    4. ' if' → logprob: -10.250194549560547
    5. 's' → logprob: -10.875194549560547
    6. 'c' → logprob: -13.500194549560547
    7. ']' → logprob: -13.625194549560547
    8. '   ' → logprob: -14.250194549560547
    9. ')
' → logprob: -14.500194549560547
    10. ' ' → logprob: -14.625194549560547

Token 384: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16024667024612427
    2. 'if' → logprob: -1.9102466106414795
    3. ' ' → logprob: -11.410246849060059
    4. '   ' → logprob: -11.660246849060059
    5. '  ' → logprob: -13.785246849060059
    6. '    ' → logprob: -14.910246849060059
    7. '       ' → logprob: -15.035246849060059
    8. '        ' → logprob: -15.410246849060059
    9. ',' → logprob: -15.535246849060059
    10. '          ' → logprob: -16.035245895385742

Token 385: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0889415442943573
    2. ' c' → logprob: -2.4639415740966797
    3. ' ' → logprob: -13.46394157409668
    4. 's' → logprob: -15.83894157409668
    5. ' ' → logprob: -16.08894157409668
    6. '   ' → logprob: -16.08894157409668
    7. '	c' → logprob: -16.46394157409668
    8. '  ' → logprob: -16.46394157409668
    9. ')c' → logprob: -16.71394157409668
    10. '(c' → logprob: -17.33894157409668

Token 386: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4744095206260681
    2. '==' → logprob: -0.9744095206260681
    3. '=='' → logprob: -8.974409103393555
    4. ' c' → logprob: -9.224409103393555
    5. 'c' → logprob: -9.599409103393555
    6. ' ' → logprob: -11.224409103393555
    7. '=' → logprob: -12.099409103393555
    8. ']==' → logprob: -12.099409103393555
    9. ' =='' → logprob: -12.224409103393555
    10. ']' → logprob: -12.599409103393555

Token 387: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.00024870390188880265
    2. 'a' → logprob: -8.625248908996582
    3. ' '' → logprob: -9.625248908996582
    4. ' a' → logprob: -13.375248908996582
    5. '’a' → logprob: -13.750248908996582
    6. ' ' → logprob: -15.750248908996582
    7. '"a' → logprob: -16.000247955322266
    8. '   ' → logprob: -16.500247955322266
    9. ''' → logprob: -16.500247955322266
    10. '`' → logprob: -17.125247955322266

Token 388: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01417984813451767
    2. ''a' → logprob: -4.264179706573486
    3. ' a' → logprob: -11.139180183410645
    4. ''' → logprob: -13.889180183410645
    5. 'b' → logprob: -15.014180183410645
    6. ' ' → logprob: -15.889180183410645
    7. ' '' → logprob: -16.639179229736328
    8. '	a' → logprob: -16.764179229736328
    9. ''b' → logprob: -16.889179229736328
    10. 'а' → logprob: -17.014179229736328

Token 389: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006341627449728549
    2. ' ]' → logprob: -7.87563419342041
    3. ']
' → logprob: -8.37563419342041
    4. '']' → logprob: -12.00063419342041
    5. ']

' → logprob: -12.25063419342041
    6. '()]' → logprob: -12.25063419342041
    7. ')]' → logprob: -12.37563419342041
    8. '`]' → logprob: -13.62563419342041
    9. ' if' → logprob: -14.50063419342041
    10. ' and' → logprob: -14.87563419342041

Token 390: 'bbb' (ID: 105015)
  Prédit: 'bbb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -9.968312951968983e-06
    2. ' b' → logprob: -11.625009536743164
    3. '```' → logprob: -14.000009536743164
    4. ' ' → logprob: -16.750009536743164
    5. '  ' → logprob: -18.000009536743164
    6. 'bbbb' → logprob: -18.000009536743164
    7. '   ' → logprob: -18.250009536743164
    8. 'aaa' → logprob: -18.375009536743164
    9. '
' → logprob: -18.500009536743164
    10. '@@' → logprob: -19.000009536743164

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968132853507996
    2. '=' → logprob: -2.8119680881500244
    3. ' =[' → logprob: -15.311967849731445
    4. '=[' → logprob: -16.436967849731445
    5. ' ' → logprob: -16.686967849731445
    6. '=[]' → logprob: -17.436967849731445
    7. '[' → logprob: -17.936967849731445
    8. '＝' → logprob: -17.936967849731445
    9. ']' → logprob: -19.186967849731445
    10. ',' → logprob: -19.311967849731445

Token 392: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4742063581943512
    2. ' [' → logprob: -0.9742063283920288
    3. '[' → logprob: -9.59920597076416
    4. '[a' → logprob: -10.22420597076416
    5. '[b' → logprob: -10.84920597076416
    6. ' ' → logprob: -12.72420597076416
    7. '[j' → logprob: -14.84920597076416
    8. '[c' → logprob: -15.09920597076416
    9. '[len' → logprob: -15.22420597076416
    10. '[ii' → logprob: -15.22420597076416

Token 393: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.024604277219623e-05
    2. ' i' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.87504005432129
    4. '  ' → logprob: -18.50004005432129
    5. ''i' → logprob: -18.87504005432129
    6. '	i' → logprob: -19.25004005432129
    7. '[i' → logprob: -19.37504005432129
    8. '(i' → logprob: -19.50004005432129
    9. '    ' → logprob: -19.50004005432129
    10. ' ' → logprob: -19.50004005432129

Token 394: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0076353782787919044
    2. 'for' → logprob: -4.882635593414307
    3. ',' → logprob: -11.007635116577148
    4. ' ' → logprob: -12.257635116577148
    5. '	for' → logprob: -12.632635116577148
    6. ')' → logprob: -13.882635116577148
    7. ' ,' → logprob: -14.132635116577148
    8. ' in' → logprob: -14.382635116577148
    9. ']' → logprob: -14.507635116577148
    10. '=' → logprob: -14.507635116577148

Token 395: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5826797485351562
    2. ',' → logprob: -0.8326797485351562
    3. 'c' → logprob: -5.207679748535156
    4. ' i' → logprob: -7.332679748535156
    5. '_,' → logprob: -8.832679748535156
    6. ' ,' → logprob: -8.957679748535156
    7. 'b' → logprob: -9.082679748535156
    8. ',c' → logprob: -9.582679748535156
    9. ',i' → logprob: -9.832679748535156
    10. ',b' → logprob: -10.207679748535156

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003433296224102378
    2. ',c' → logprob: -8.125343322753906
    3. ' ,' → logprob: -10.750343322753906
    4. ',b' → logprob: -11.000343322753906
    5. 'c' → logprob: -12.750343322753906
    6. 's' → logprob: -13.000343322753906
    7. ',s' → logprob: -13.875343322753906
    8. 'b' → logprob: -14.375343322753906
    9. 'i' → logprob: -14.375343322753906
    10. 'in' → logprob: -14.625343322753906

Token 397: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38687896728515625
    2. 'c' → logprob: -1.1368789672851562
    3. ' ' → logprob: -12.136878967285156
    4. ',' → logprob: -13.511878967285156
    5. '	c' → logprob: -15.261878967285156
    6. '  ' → logprob: -15.261878967285156
    7. 'b' → logprob: -15.511878967285156
    8. '   ' → logprob: -16.261878967285156
    9. ' in' → logprob: -16.636878967285156
    10. ',c' → logprob: -16.636878967285156

Token 398: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17279790341854095
    2. ' in' → logprob: -1.9227979183197021
    3. 'in' → logprob: -4.422797679901123
    4. 'if' → logprob: -8.797798156738281
    5. 's' → logprob: -9.047798156738281
    6. ',c' → logprob: -9.297798156738281
    7. ' ,' → logprob: -9.797798156738281
    8. ',s' → logprob: -11.172798156738281
    9. ' if' → logprob: -11.547798156738281
    10. 'c' → logprob: -11.547798156738281

Token 399: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.3690185844898224
    2. ',' → logprob: -1.8690185546875
    3. ' enumerate' → logprob: -1.8690185546875
    4. 's' → logprob: -10.7440185546875
    5. ' ' → logprob: -12.6190185546875
    6. ' s' → logprob: -13.4940185546875
    7. ' ,' → logprob: -13.4940185546875
    8. 'en' → logprob: -13.4940185546875
    9. '
' → logprob: -13.4940185546875
    10. ' in' → logprob: -13.8690185546875

Token 400: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07006481289863586
    2. '(s' → logprob: -2.6950647830963135
    3. ' s' → logprob: -9.070064544677734
    4. ' (' → logprob: -11.445064544677734
    5. ',' → logprob: -14.445064544677734
    6. ' in' → logprob: -14.945064544677734
    7. 'c' → logprob: -14.945064544677734
    8. '	s' → logprob: -15.070064544677734
    9. 'in' → logprob: -15.445064544677734
    10. 'if' → logprob: -15.570064544677734

Token 401: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011050296947360039
    2. 'if' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.8860502243042
    4. ')' → logprob: -14.0110502243042
    5. ' in' → logprob: -14.6360502243042
    6. ']' → logprob: -16.886051177978516
    7. '   ' → logprob: -17.511051177978516
    8. ',' → logprob: -17.761051177978516
    9. '  ' → logprob: -18.136051177978516
    10. '	if' → logprob: -18.136051177978516

Token 402: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3132699131965637
    2. 'if' → logprob: -1.313269853591919
    3. ' ' → logprob: -12.06326961517334
    4. ',' → logprob: -13.93826961517334
    5. ' in' → logprob: -14.68826961517334
    6. '  ' → logprob: -15.68826961517334
    7. '==' → logprob: -16.063270568847656
    8. 'f' → logprob: -16.188270568847656
    9. 's' → logprob: -16.313270568847656
    10. 'in' → logprob: -16.313270568847656

Token 403: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5766893625259399
    2. ' c' → logprob: -0.8266893625259399
    3. 'b' → logprob: -7.82668924331665
    4. ' s' → logprob: -8.951689720153809
    5. 's' → logprob: -9.201689720153809
    6. ' b' → logprob: -9.701689720153809
    7. ' ' → logprob: -10.576689720153809
    8. '  ' → logprob: -11.576689720153809
    9. ''' → logprob: -11.826689720153809
    10. ''b' → logprob: -12.076689720153809

Token 404: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741283357143402
    2. '==' → logprob: -0.9741283655166626
    3. '=='' → logprob: -10.349128723144531
    4. ' ' → logprob: -11.474128723144531
    5. ' !=' → logprob: -13.599128723144531
    6. ' =='' → logprob: -13.724128723144531
    7. ']==' → logprob: -13.974128723144531
    8. ']' → logprob: -13.974128723144531
    9. '=' → logprob: -14.349128723144531
    10. '==
' → logprob: -14.474128723144531

Token 405: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.0015152193373069167
    2. ' '' → logprob: -6.5015153884887695
    3. ''' → logprob: -12.00151538848877
    4. ''s' → logprob: -12.12651538848877
    5. 'b' → logprob: -14.12651538848877
    6. ' b' → logprob: -15.37651538848877
    7. ' ' → logprob: -15.50151538848877
    8. ''a' → logprob: -16.126514434814453
    9. ''o' → logprob: -17.251514434814453
    10. ' ' → logprob: -17.626514434814453

Token 406: 'b' (ID: 65)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.0004343645414337516
    2. 'b' → logprob: -7.750434398651123
    3. ' '' → logprob: -13.000433921813965
    4. ''s' → logprob: -14.250433921813965
    5. ''a' → logprob: -14.625433921813965
    6. ''' → logprob: -15.875433921813965
    7. ''o' → logprob: -17.37543487548828
    8. ' b' → logprob: -17.75043487548828
    9. ''t' → logprob: -17.87543487548828
    10. ''e' → logprob: -18.25043487548828

Token 407: '']
' (ID: 9756)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011735594598576427
    2. '']' → logprob: -7.126173496246338
    3. ' ]' → logprob: -8.376173973083496
    4. ')]' → logprob: -9.251173973083496
    5. '`]' → logprob: -10.751173973083496
    6. ']
' → logprob: -11.376173973083496
    7. '()]' → logprob: -12.751173973083496
    8. ']

' → logprob: -13.001173973083496
    9. ' if' → logprob: -14.126173973083496
    10. '"]' → logprob: -14.126173973083496

Token 408: 'n' (ID: 77)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 409: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47472864389419556
    2. 'n' → logprob: -2.224728584289551
    3. '<|end|>' → logprob: -2.224728584289551
    4. '=' → logprob: -2.349728584289551
    5. 'w' → logprob: -4.224728584289551
    6. '<|end|>' → logprob: -4.849728584289551
    7. ',' → logprob: -4.974728584289551
    8. '#' → logprob: -5.599728584289551
    9. 'nn' → logprob: -5.724728584289551
    10. '.' → logprob: -5.849728584289551

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05926986783742905
    2. '=' → logprob: -2.934269905090332
    3. '2' → logprob: -5.559269905090332
    4. ',' → logprob: -8.934269905090332
    5. '//' → logprob: -9.309269905090332
    6. 'n' → logprob: -9.934269905090332
    7. 'x' → logprob: -10.059269905090332
    8. '/' → logprob: -10.684269905090332
    9. ' ' → logprob: -10.684269905090332
    10. '=int' → logprob: -10.809269905090332

Token 411: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8976381421089172
    2. ' n' → logprob: -0.8976381421089172
    3. 'len' → logprob: -2.0226380825042725
    4. ' len' → logprob: -3.2726380825042725
    5. '(n' → logprob: -5.147638320922852
    6. '(len' → logprob: -5.897638320922852
    7. ' (' → logprob: -6.272638320922852
    8. '0' → logprob: -6.522638320922852
    9. ' ' → logprob: -6.772638320922852
    10. '2' → logprob: -7.022638320922852

Token 412: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9932336211204529
    2. 's' → logprob: -2.2432336807250977
    3. '<|end|>' → logprob: -2.6182336807250977
    4. 'for' → logprob: -2.7432336807250977
    5. 'n' → logprob: -2.8682336807250977
    6. 'while' → logprob: -2.9932336807250977
    7. '#' → logprob: -3.2432336807250977
    8. '2' → logprob: -3.6182336807250977
    9. '+' → logprob: -3.6182336807250977
    10. 'def' → logprob: -3.9932336807250977

Token 413: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01708081178367138
    2. ' ' → logprob: -4.142080783843994
    3. '3' → logprob: -7.892080783843994
    4. 'n' → logprob: -8.017081260681152
    5. '4' → logprob: -9.517081260681152
    6. ' n' → logprob: -9.642081260681152
    7. '1' → logprob: -10.392081260681152
    8. '(n' → logprob: -10.517081260681152
    9. '5' → logprob: -10.767081260681152
    10. '6' → logprob: -10.892081260681152

Token 414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0038047111593186855
    2. 'n' → logprob: -6.503804683685303
    3. '3' → logprob: -6.628804683685303
    4. '4' → logprob: -8.003805160522461
    5. '(n' → logprob: -8.128805160522461
    6. '10' → logprob: -9.753805160522461
    7. ' ' → logprob: -9.753805160522461
    8. '5' → logprob: -9.878805160522461
    9. '(' → logprob: -9.878805160522461
    10. '6' → logprob: -10.503805160522461

Token 415: '

' (ID: 279)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.7947594523429871
    2. 'result' → logprob: -2.294759511947632
    3. 'i' → logprob: -2.669759511947632
    4. 'for' → logprob: -2.794759511947632
    5. 'cursor' → logprob: -2.919759511947632
    6. ' parts' → logprob: -3.544759511947632
    7. 'idx' → logprob: -3.669759511947632
    8. 'cur' → logprob: -3.669759511947632
    9. ')' → logprob: -3.919759511947632
    10. 'def' → logprob: -4.169759273529053

Token 416: 're' (ID: 264)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6052047610282898
    2. 'res' → logprob: -1.1052048206329346
    3. 'result' → logprob: -2.9802048206329346
    4. 'cursor' → logprob: -3.7302048206329346
    5. 'ans' → logprob: -4.4802045822143555
    6. 'results' → logprob: -4.4802045822143555
    7. 'pos' → logprob: -4.7302045822143555
    8. 'answer' → logprob: -5.7302045822143555
    9. 'idx' → logprob: -6.1052045822143555
    10. 'cur' → logprob: -6.3552045822143555

Token 417: 'pe' (ID: 424)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34899505972862244
    2. 'peat' → logprob: -1.2239950895309448
    3. 'pe' → logprob: -7.848995208740234
    4. 'st' → logprob: -10.473995208740234
    5. 'main' → logprob: -10.598995208740234
    6. 'turn' → logprob: -10.598995208740234
    7. 'peated' → logprob: -10.723995208740234
    8. 'f' → logprob: -10.848995208740234
    9. 'm' → logprob: -11.348995208740234
    10. 'p' → logprob: -12.598995208740234

Token 418: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00024275471514556557
    2. ' at' → logprob: -9.250243186950684
    3. 'ат' → logprob: -10.125243186950684
    4. '_at' → logprob: -10.500243186950684
    5. '	at' → logprob: -11.250243186950684
    6. 'ats' → logprob: -11.500243186950684
    7. 'eat' → logprob: -11.500243186950684
    8. 'peat' → logprob: -11.625243186950684
    9. 'ated' → logprob: -12.000243186950684
    10. 'a' → logprob: -12.375243186950684

Token 419: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12163104861974716
    2. ',' → logprob: -2.246631145477295
    3. '=' → logprob: -4.746631145477295
    4. 's' → logprob: -9.746630668640137
    5. '=[]' → logprob: -11.496630668640137
    6. ' ,' → logprob: -11.621630668640137
    7. '_list' → logprob: -13.621630668640137
    8. '_' → logprob: -14.309130668640137
    9. '_parts' → logprob: -14.371630668640137
    10. '=[],' → logprob: -14.559130668640137

Token 420: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23244129121303558
    2. ',' → logprob: -1.6074413061141968
    3. '=' → logprob: -4.982441425323486
    4. ' ,' → logprob: -9.732440948486328
    5. '=[]' → logprob: -10.732440948486328
    6. 'b' → logprob: -11.482440948486328
    7. '_b' → logprob: -11.482440948486328
    8. 'a' → logprob: -11.607440948486328
    9. '_' → logprob: -11.982440948486328
    10. ' ' → logprob: -11.982440948486328

Token 421: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.024689510464668274
    2. '[]
' → logprob: -4.149689674377441
    3. '[' → logprob: -4.774689674377441
    4. '[]

' → logprob: -9.774689674377441
    5. '[a' → logprob: -10.149689674377441
    6. '[n' → logprob: -10.649689674377441
    7. '[int' → logprob: -11.524689674377441
    8. '[s' → logprob: -12.149689674377441
    9. ' []' → logprob: -12.149689674377441
    10. '[]}' → logprob: -12.274689674377441

Token 422: 'parts' (ID: 34761)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.8042024970054626
    2. 'cur' → logprob: -1.0542025566101074
    3. 'for' → logprob: -2.9292025566101074
    4. 'c' → logprob: -3.3042025566101074
    5. 're' → logprob: -3.4292025566101074
    6. 'pos' → logprob: -4.054202556610107
    7. 'i' → logprob: -4.179202556610107
    8. 'repeat' → logprob: -4.429202556610107
    9. 'parts' → logprob: -4.804202556610107
    10. ' cursor' → logprob: -4.929202556610107

Token 423: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0078048803843557835
    2. '=' → logprob: -5.132804870605469
    3. '_' → logprob: -7.007804870605469
    4. 'b' → logprob: -8.132804870605469
    5. '_a' → logprob: -8.257804870605469
    6. ' =' → logprob: -8.507804870605469
    7. '=[]' → logprob: -8.757804870605469
    8. 'a' → logprob: -10.382804870605469
    9. '_=' → logprob: -11.257804870605469
    10. '=_' → logprob: -12.632804870605469

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931657791137695
    2. ' =' → logprob: -0.6931657791137695
    3. '=[]' → logprob: -10.94316577911377
    4. ',' → logprob: -14.56816577911377
    5. '=[]
' → logprob: -15.44316577911377
    6. '[]' → logprob: -16.443164825439453
    7. '.append' → logprob: -17.068164825439453
    8. ')' → logprob: -17.568164825439453
    9. '＝' → logprob: -17.568164825439453
    10. ' ' → logprob: -17.693164825439453

Token 425: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023897508159279823
    2. '[]
' → logprob: -3.773897409439087
    3. ' []' → logprob: -7.398897647857666
    4. '[' → logprob: -11.148897171020508
    5. '[]

' → logprob: -11.273897171020508
    6. ' []
' → logprob: -11.523897171020508
    7. '=[]' → logprob: -13.273897171020508
    8. '[]}' → logprob: -15.523897171020508
    9. '[])' → logprob: -15.898897171020508
    10. '[
' → logprob: -16.023897171020508

Token 426: 'last' (ID: 6684)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.13073855638504028
    2. 'cur' → logprob: -2.1307384967803955
    3. 'i' → logprob: -5.755738735198975
    4. 'c' → logprob: -8.630738258361816
    5. '```' → logprob: -8.755738258361816
    6. ' cursor' → logprob: -9.255738258361816
    7. 'for' → logprob: -9.505738258361816
    8. 'idx' → logprob: -10.130738258361816
    9. 'pos' → logprob: -10.755738258361816
    10. '_cursor' → logprob: -10.880738258361816

Token 427: '_b' (ID: 1535)
  Prédit: '_cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cursor' → logprob: -0.047907959669828415
    2. '_pos' → logprob: -3.672908067703247
    3. '_cur' → logprob: -4.047907829284668
    4. '_' → logprob: -6.422907829284668
    5. ' =' → logprob: -6.922907829284668
    6. '_idx' → logprob: -7.547907829284668
    7. '_index' → logprob: -8.422907829284668
    8. '=' → logprob: -8.797907829284668
    9. '_c' → logprob: -9.547907829284668
    10. '_cut' → logprob: -9.672907829284668

Token 428: '_cur' (ID: 46382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005092630162835121
    2. '_i' → logprob: -6.130092620849609
    3. ' =' → logprob: -6.505092620849609
    4. '=' → logprob: -7.880092620849609
    5. '_cursor' → logprob: -8.13009262084961
    6. '_idx' → logprob: -8.38009262084961
    7. '_cur' → logprob: -8.75509262084961
    8. 'cur' → logprob: -9.00509262084961
    9. 'c' → logprob: -9.25509262084961
    10. 'cursor' → logprob: -10.88009262084961

Token 429: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10027600079774857
    2. ' =' → logprob: -2.350275993347168
    3. 'or' → logprob: -10.225275993347168
    4. ',' → logprob: -10.600275993347168
    5. 'ursor' → logprob: -12.350275993347168
    6. '=
' → logprob: -13.600275993347168
    7. ' ' → logprob: -14.975275993347168
    8. '=None' → logprob: -15.100275993347168
    9. 'cursor' → logprob: -15.350275993347168
    10. '＝' → logprob: -15.475275993347168

Token 430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06636522710323334
    2. '-' → logprob: -2.8163652420043945
    3. 'n' → logprob: -6.1913652420043945
    4. ' ' → logprob: -6.4413652420043945
    5. ' -' → logprob: -7.3163652420043945
    6. '-n' → logprob: -10.441365242004395
    7. ' n' → logprob: -10.441365242004395
    8. 'len' → logprob: -12.691365242004395
    9. '1' → logprob: -12.878865242004395
    10. 's' → logprob: -12.941365242004395

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11396782100200653
    2. '-' → logprob: -2.2389678955078125
    3. 'n' → logprob: -6.9889678955078125
    4. '-n' → logprob: -9.613967895507812
    5. ' -' → logprob: -9.863967895507812
    6. ' ' → logprob: -10.363967895507812
    7. 'len' → logprob: -11.238967895507812
    8. 'sss' → logprob: -11.738967895507812
    9. '-b' → logprob: -11.988967895507812
    10. '[-' → logprob: -11.988967895507812

Token 432: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6186388731002808
    2. 'for' → logprob: -0.8686388731002808
    3. ' for' → logprob: -3.3686389923095703
    4. 'cursor' → logprob: -6.11863899230957
    5. 'i' → logprob: -6.49363899230957
    6. '<|end|>' → logprob: -6.74363899230957
    7. 'cur' → logprob: -6.99363899230957
    8. 'while' → logprob: -7.74363899230957
    9. '  
' → logprob: -8.36863899230957
    10. '```' → logprob: -8.61863899230957

Token 433: 'cursor' (ID: 34222)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24207746982574463
    2. 'cur' → logprob: -1.8670774698257446
    3. 'cursor' → logprob: -3.242077350616455
    4. 'i' → logprob: -3.992077350616455
    5. 'while' → logprob: -6.492077350616455
    6. ' for' → logprob: -6.992077350616455
    7. 'ai' → logprob: -9.242077827453613
    8. '```' → logprob: -9.492077827453613
    9. 'idx' → logprob: -9.617077827453613
    10. 'c' → logprob: -9.617077827453613

Token 434: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026303550228476524
    2. '=' → logprob: -3.65130352973938
    3. '<|end|>' → logprob: -13.1513032913208
    4. ' ' → logprob: -14.4013032913208
    5. ',' → logprob: -14.7763032913208
    6. ' =
' → logprob: -15.4013032913208
    7. ' +=' → logprob: -16.901304244995117
    8. ')' → logprob: -17.026304244995117
    9. '<|end|>' → logprob: -17.151304244995117
    10. ' =)' → logprob: -17.276304244995117

Token 435: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -16.125036239624023
    4. 'n' → logprob: -16.375036239624023
    5. '<|end|>' → logprob: -16.625036239624023
    6. '   ' → logprob: -17.625036239624023
    7. '```' → logprob: -18.125036239624023
    8. '  ' → logprob: -18.125036239624023
    9. 'last' → logprob: -18.375036239624023
    10. '[' → logprob: -18.500036239624023

Token 436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.625011444091797
    3. '1' → logprob: -13.750011444091797
    4. 'last' → logprob: -14.125011444091797
    5. 'n' → logprob: -14.375011444091797
    6. '[' → logprob: -17.250011444091797
    7. '00' → logprob: -17.312511444091797
    8. '   ' → logprob: -17.375011444091797
    9. '```' → logprob: -17.500011444091797
    10. 's' → logprob: -17.562511444091797

Token 437: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12326004356145859
    2. ' while' → logprob: -2.373260021209717
    3. 'a' → logprob: -5.248260021209717
    4. '<|end|>' → logprob: -5.248260021209717
    5. '
' → logprob: -5.498260021209717
    6. '```' → logprob: -6.373260021209717
    7. '   ' → logprob: -6.498260021209717
    8. ':' → logprob: -7.123260021209717
    9. 'n' → logprob: -7.623260021209717
    10. 'b' → logprob: -7.873260021209717

Token 439: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.11476823687553406
    2. 'cursor' → logprob: -2.2397682666778564
    3. ' True' → logprob: -6.864768028259277
    4. ' s' → logprob: -7.864768028259277
    5. 'True' → logprob: -8.364768028259277
    6. '(cursor' → logprob: -9.364768028259277
    7. ' ' → logprob: -9.989768028259277
    8. ' max' → logprob: -10.614768028259277
    9. 's' → logprob: -10.739768028259277
    10. ' last' → logprob: -10.989768028259277

Token 440: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029599471017718315
    2. ' <=' → logprob: -3.90459942817688
    3. '<' → logprob: -4.779599666595459
    4. '<=' → logprob: -8.0295991897583
    5. '<n' → logprob: -8.9045991897583
    6. '<len' → logprob: -9.9045991897583
    7. ' !=' → logprob: -10.2795991897583
    8. ' +=' → logprob: -11.4045991897583
    9. '<|end|>' → logprob: -11.5295991897583
    10. '[' → logprob: -11.6545991897583

Token 441: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005352936219424009
    2. 'len' → logprob: -5.255352973937988
    3. ' n' → logprob: -9.130352973937988
    4. ' len' → logprob: -12.255352973937988
    5. ' ' → logprob: -13.005352973937988
    6. '2' → logprob: -13.880352973937988
    7. '   ' → logprob: -14.755352973937988
    8. '
' → logprob: -14.880352973937988
    9. '  ' → logprob: -15.005352973937988
    10. '	n' → logprob: -15.130352973937988

Token 442: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5771127939224243
    2. ':
' → logprob: -0.8271127939224243
    3. '   ' → logprob: -7.577112674713135
    4. '+' → logprob: -8.327113151550293
    5. ' :
' → logprob: -8.702113151550293
    6. ' :' → logprob: -9.202113151550293
    7. '=' → logprob: -10.577113151550293
    8. '):
' → logprob: -10.827113151550293
    9. ' and' → logprob: -10.952113151550293
    10. ':

' → logprob: -10.952113151550293

Token 443: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5238866209983826
    2. ':
' → logprob: -0.8988866209983826
    3. '   ' → logprob: -7.398886680603027
    4. ' :
' → logprob: -10.398886680603027
    5. ':

' → logprob: -10.773886680603027
    6. '):
' → logprob: -10.773886680603027
    7. ' :' → logprob: -10.898886680603027
    8. ' and' → logprob: -11.273886680603027
    9. ',' → logprob: -11.648886680603027
    10. '=' → logprob: -11.773886680603027

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11558575928211212
    2. '```' → logprob: -2.8655858039855957
    3. ' if' → logprob: -4.240585803985596
    4. ' cur' → logprob: -4.615585803985596
    5. 'cur' → logprob: -5.115585803985596
    6. 'if' → logprob: -5.365585803985596
    7. ',' → logprob: -5.615585803985596
    8. 'max' → logprob: -5.865585803985596
    9. '    
' → logprob: -5.865585803985596
    10. '
' → logprob: -6.365585803985596

Token 445: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1905430555343628
    2. 'repeat' → logprob: -1.1905430555343628
    3. 'if' → logprob: -1.5655430555343628
    4. ' repeat' → logprob: -2.4405431747436523
    5. '   ' → logprob: -2.5655431747436523
    6. 'try' → logprob: -4.815543174743652
    7. ' try' → logprob: -5.440543174743652
    8. 'max' → logprob: -6.690543174743652
    9. ' max' → logprob: -6.940543174743652
    10. 'cur' → logprob: -7.440543174743652

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47157642245292664
    2. '=' → logprob: -1.346576452255249
    3. ',' → logprob: -3.596576452255249
    4. 'ursor' → logprob: -3.721576452255249
    5. 'if' → logprob: -3.846576452255249
    6. 'ur' → logprob: -4.09657621383667
    7. ' if' → logprob: -5.09657621383667
    8. 'urrent' → logprob: -5.59657621383667
    9. '_' → logprob: -6.09657621383667
    10. 'cur' → logprob: -6.34657621383667

Token 447: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007371995598077774
    2. 'sss' → logprob: -5.50737190246582
    3. ' s' → logprob: -6.13237190246582
    4. ''s' → logprob: -7.13237190246582
    5. 'ss' → logprob: -8.50737190246582
    6. ''' → logprob: -10.38237190246582
    7. '   ' → logprob: -10.88237190246582
    8. ' ' → logprob: -11.13237190246582
    9. 'search' → logprob: -12.06987190246582
    10. 'a' → logprob: -12.38237190246582

Token 448: 'ss' (ID: 1087)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -9.014684110297821e-06
    2. '[cur' → logprob: -11.875008583068848
    3. 'cursor' → logprob: -13.750008583068848
    4. '[' → logprob: -15.125008583068848
    5. '```' → logprob: -15.750008583068848
    6. '[curr' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.875009536743164
    8. '
' → logprob: -17.125009536743164
    9. 'at' → logprob: -17.250009536743164
    10. 'ursor' → logprob: -17.375009536743164

Token 449: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.2200749754119897e-06
    2. 'cursor' → logprob: -14.375001907348633
    3. '.index' → logprob: -14.750001907348633
    4. '[cur' → logprob: -14.750001907348633
    5. '
' → logprob: -15.125001907348633
    6. '[' → logprob: -15.750001907348633
    7. '   ' → logprob: -16.000001907348633
    8. '```' → logprob: -17.125001907348633
    9. '[curr' → logprob: -17.250001907348633
    10. '[counter' → logprob: -17.250001907348633

Token 450: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.02748594805598259
    2. '[c' → logprob: -3.6524858474731445
    3. '[' → logprob: -8.152485847473145
    4. 'cursor' → logprob: -8.277485847473145
    5. 'URSOR' → logprob: -8.652485847473145
    6. ']' → logprob: -9.027485847473145
    7. '```' → logprob: -9.777485847473145
    8. '   ' → logprob: -10.277485847473145
    9. ')' → logprob: -10.402485847473145
    10. 's' → logprob: -10.527485847473145

Token 451: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5236520171165466
    2. ']
' → logprob: -0.8986520171165466
    3. ']+' → logprob: -9.023652076721191
    4. ']
' → logprob: -9.148652076721191
    5. ']==' → logprob: -9.523652076721191
    6. ']

' → logprob: -10.148652076721191
    7. ' ]
' → logprob: -10.523652076721191
    8. '+' → logprob: -10.523652076721191
    9. ' ]' → logprob: -10.773652076721191
    10. ']>' → logprob: -10.898652076721191

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019290216267108917
    2. '
' → logprob: -5.019290447235107
    3. '<|end|>' → logprob: -5.144290447235107
    4. ' if' → logprob: -5.519290447235107
    5. '    
' → logprob: -7.269290447235107
    6. ')' → logprob: -7.519290447235107
    7. ' ' → logprob: -8.51928997039795
    8. ',' → logprob: -8.51928997039795
    9. '<|end|>' → logprob: -8.64428997039795
    10. ' 
' → logprob: -8.89428997039795

Token 453: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19233734905719757
    2. ' if' → logprob: -1.9423373937606812
    3. '   ' → logprob: -3.5673372745513916
    4. '+' → logprob: -7.192337512969971
    5. 'cursor' → logprob: -7.692337512969971
    6. 'i' → logprob: -7.942337512969971
    7. '
' → logprob: -8.192337036132812
    8. ',' → logprob: -8.442337036132812
    9. 'max' → logprob: -8.442337036132812
    10. ' cursor' → logprob: -8.567337036132812

Token 454: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.524591863155365
    2. ' c' → logprob: -0.899591863155365
    3. ' s' → logprob: -7.39959192276001
    4. 's' → logprob: -8.149591445922852
    5. 'cursor' → logprob: -8.399591445922852
    6. ' cursor' → logprob: -8.774591445922852
    7. ' ' → logprob: -9.899591445922852
    8. 'sss' → logprob: -10.149591445922852
    9. '   ' → logprob: -10.399591445922852
    10. 'ss' → logprob: -11.024591445922852

Token 455: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6131497621536255
    2. ' <' → logprob: -1.9881497621536255
    3. '==' → logprob: -2.113149642944336
    4. ' >=' → logprob: -2.488149642944336
    5. ' <=' → logprob: -2.988149642944336
    6. ' >' → logprob: -3.363149642944336
    7. '<' → logprob: -4.488149642944336
    8. '>=' → logprob: -4.863149642944336
    9. '<=' → logprob: -4.863149642944336
    10. '>' → logprob: -5.363149642944336

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1343359500169754
    2. ' ' → logprob: -2.134335994720459
    3. '=' → logprob: -5.259335994720459
    4. 'n' → logprob: -7.009335994720459
    5. 's' → logprob: -8.3843355178833
    6. 'cursor' → logprob: -8.3843355178833
    7. '1' → logprob: -8.6343355178833
    8. ' n' → logprob: -8.8843355178833
    9. ' s' → logprob: -9.1343355178833
    10. 'sss' → logprob: -9.2593355178833

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018515352858230472
    2. ' ' → logprob: -6.751851558685303
    3. '=' → logprob: -8.501851081848145
    4. 'sss' → logprob: -9.126851081848145
    5. 'cursor' → logprob: -9.251851081848145
    6. 'n' → logprob: -9.376851081848145
    7. 's' → logprob: -9.626851081848145
    8. 'c' → logprob: -10.001851081848145
    9. '1' → logprob: -10.251851081848145
    10. 'last' → logprob: -11.501851081848145

Token 458: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5842472910881042
    2. ':' → logprob: -0.8342472910881042
    3. ' and' → logprob: -5.33424711227417
    4. '   ' → logprob: -6.33424711227417
    5. '       ' → logprob: -6.83424711227417
    6. ' :
' → logprob: -8.709247589111328
    7. ' or' → logprob: -8.834247589111328
    8. ' :' → logprob: -9.834247589111328
    9. '):
' → logprob: -9.959247589111328
    10. ',' → logprob: -9.959247589111328

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019558532163500786
    2. ':' → logprob: -4.394558429718018
    3. ':
' → logprob: -5.894558429718018
    4. '   ' → logprob: -6.019558429718018
    5. ' and' → logprob: -6.894558429718018
    6. ' or' → logprob: -8.519558906555176
    7. ',' → logprob: -8.644558906555176
    8. '
' → logprob: -9.769558906555176
    9. '    ' → logprob: -9.769558906555176
    10. '        
' → logprob: -9.769558906555176

Token 460: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.2694088816642761
    2. 'repeat' (adapté à ' repeat') → logprob: -1.894408941268921
    3. '       ' → logprob: -2.519408941268921
    4. '   ' → logprob: -6.144408702850342
    5. 're' → logprob: -6.894408702850342
    6. ' repeats' → logprob: -7.769408702850342
    7. ',' → logprob: -7.894408702850342
    8. ' r' → logprob: -8.1444091796875
    9. ' rep' → logprob: -8.6444091796875
    10. 'r' → logprob: -9.2694091796875

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004764287732541561
    2. ' ,' → logprob: -8.875476837158203
    3. ',a' → logprob: -9.875476837158203
    4. ',count' → logprob: -9.875476837158203
    5. '_count' → logprob: -10.000476837158203
    6. 's' → logprob: -10.250476837158203
    7. 'count' → logprob: -10.375476837158203
    8. '_,' → logprob: -10.750476837158203
    9. ',_' → logprob: -10.875476837158203
    10. ' =' → logprob: -10.875476837158203

Token 462: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.14543287456035614
    2. 'cursor' → logprob: -2.145432949066162
    3. ' max' → logprob: -4.645432949066162
    4. 'max' → logprob: -5.520432949066162
    5. ' next' → logprob: -5.895432949066162
    6. 'next' → logprob: -6.770432949066162
    7. ' new' → logprob: -7.895432949066162
    8. 'end' → logprob: -8.645432472229004
    9. 'new' → logprob: -9.020432472229004
    10. ' end' → logprob: -9.770432472229004

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695886194705963
    2. ' =' → logprob: -2.1269588470458984
    3. '   ' → logprob: -10.751958847045898
    4. ',' → logprob: -11.626958847045898
    5. '    ' → logprob: -15.876958847045898
    6. '=
' → logprob: -16.3769588470459
    7. '       ' → logprob: -16.6269588470459
    8. ' ' → logprob: -16.6269588470459
    9. '=

' → logprob: -17.3769588470459
    10. '  ' → logprob: -17.7519588470459

Token 464: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.01416398212313652
    2. ' search' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.139163970947266
    4. ' ' → logprob: -16.264163970947266
    5. '	search' → logprob: -16.389163970947266
    6. '
' → logprob: -16.639163970947266
    7. '(search' → logprob: -17.764163970947266
    8. '  ' → logprob: -18.139163970947266
    9. ' ' → logprob: -19.389163970947266
    10. '    ' → logprob: -19.639163970947266

Token 465: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -6.630610641877865e-06
    2. '_a' → logprob: -12.125006675720215
    3. 'ab' → logprob: -13.875006675720215
    4. '_' → logprob: -15.625006675720215
    5. ' ab' → logprob: -17.3750057220459
    6. 'a' → logprob: -17.3750057220459
    7. '_abs' → logprob: -17.6250057220459
    8. ''ab' → logprob: -18.5000057220459
    9. '#ab' → logprob: -19.0000057220459
    10. '_AB' → logprob: -19.2500057220459

Token 466: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.875008583068848
    3. '(s' → logprob: -13.125008583068848
    4. ' (' → logprob: -13.500008583068848
    5. 'sss' → logprob: -14.000008583068848
    6. '(n' → logprob: -15.250008583068848
    7. '(cc' → logprob: -15.500008583068848
    8. ':ss' → logprob: -15.625008583068848
    9. '(
' → logprob: -15.875008583068848
    10. '	ss' → logprob: -16.000009536743164

Token 467: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.599403423024341e-05
    2. 'ss' → logprob: -10.250065803527832
    3. ' s' → logprob: -11.250065803527832
    4. '(' → logprob: -12.875065803527832
    5. '(s' → logprob: -13.000065803527832
    6. 'sss' → logprob: -13.625065803527832
    7. '
' → logprob: -13.812565803527832
    8. 'c' → logprob: -14.000065803527832
    9. '

' → logprob: -14.062565803527832
    10. ',' → logprob: -14.062565803527832

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005349211278371513
    2. ' ,' → logprob: -7.750535011291504
    3. ',s' → logprob: -9.625535011291504
    4. 's' → logprob: -11.000535011291504
    5. ',c' → logprob: -11.000535011291504
    6. ' s' → logprob: -13.875535011291504
    7. ',n' → logprob: -14.000535011291504
    8. '   ' → logprob: -14.125535011291504
    9. ',
' → logprob: -14.375535011291504
    10. '(cursor' → logprob: -14.500535011291504

Token 469: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.16032029688358307
    2. ' cursor' → logprob: -1.9103202819824219
    3. 'sss' → logprob: -10.410320281982422
    4. ' s' → logprob: -10.910320281982422
    5. '	cursor' → logprob: -11.660320281982422
    6. 's' → logprob: -11.785320281982422
    7. 'ss' → logprob: -12.035320281982422
    8. '   ' → logprob: -12.160320281982422
    9. '
' → logprob: -12.285320281982422
    10. 'ccc' → logprob: -12.660320281982422

Token 470: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39564642310142517
    2. ')
' → logprob: -1.1456464529037476
    3. '   ' → logprob: -4.770646572113037
    4. '       ' → logprob: -8.270646095275879
    5. ')
' → logprob: -12.520646095275879
    6. ')

' → logprob: -14.395646095275879
    7. ' )
' → logprob: -14.520646095275879
    8. ' )' → logprob: -14.645646095275879
    9. ')`
' → logprob: -15.770646095275879
    10. ' ' → logprob: -15.895646095275879

Token 471: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028354359790682793
    2. '<|end|>' → logprob: -4.278354167938232
    3. '
' → logprob: -4.778354167938232
    4. '       ' → logprob: -5.403354167938232
    5. '    
' → logprob: -8.02835464477539
    6. '```' → logprob: -8.52835464477539
    7. '<|end|>' → logprob: -8.65335464477539
    8. ')' → logprob: -8.90335464477539
    9. '        
' → logprob: -9.77835464477539
    10. 'elif' → logprob: -9.90335464477539

Token 472: ' repeats' (ID: 95681)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.36046624183654785
    2. '       ' → logprob: -1.6104662418365479
    3. '   ' → logprob: -2.610466241836548
    4. ' repeats' → logprob: -3.610466241836548
    5. '	re' → logprob: -6.360466003417969
    6. 'repeat' → logprob: -8.110466003417969
    7. '           ' → logprob: -9.985466003417969
    8. '        
' → logprob: -9.985466003417969
    9. ' ' → logprob: -10.360466003417969
    10. '
' → logprob: -10.485466003417969

Token 473: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.096126576769166e-05
    2. '.append' → logprob: -10.750041007995605
    3. 's' → logprob: -12.000041007995605
    4. 'a' → logprob: -12.125041007995605
    5. '_' → logprob: -12.875041007995605
    6. '_append' → logprob: -14.000041007995605
    7. '._' → logprob: -14.125041007995605
    8. '\' → logprob: -14.500041007995605
    9. '_as' → logprob: -14.625041007995605
    10. '=_' → logprob: -15.000041007995605

Token 474: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023441045777872205
    2. '.' → logprob: -8.375234603881836
    3. '.extend' → logprob: -12.875234603881836
    4. '.app' → logprob: -14.500234603881836
    5. '.ap' → logprob: -14.875234603881836
    6. 'append' → logprob: -15.250234603881836
    7. ' .' → logprob: -16.500234603881836
    8. '.push' → logprob: -17.000234603881836
    9. '.add' → logprob: -17.625234603881836
    10. '.setdefault' → logprob: -17.750234603881836

Token 475: '((' (ID: 2054)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -6.134509021649137e-05
    2. 'repeat' → logprob: -9.75006103515625
    3. '(' → logprob: -12.87506103515625
    4. '((' → logprob: -15.25006103515625
    5. ' repeat' → logprob: -16.62506103515625
    6. '(rep' → logprob: -16.62506103515625
    7. ' (' → logprob: -17.87506103515625
    8. '_repeat' → logprob: -18.12506103515625
    9. '	re' → logprob: -18.37506103515625
    10. 're' → logprob: -18.50006103515625

Token 476: 'cursor' (ID: 34222)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.0007164848502725363
    2. ' repeat' → logprob: -7.500716686248779
    3. 'c' → logprob: -9.500716209411621
    4. 'cursor' → logprob: -11.000716209411621
    5. 's' → logprob: -11.000716209411621
    6. '_repeat' → logprob: -11.625716209411621
    7. ''re' → logprob: -12.000716209411621
    8. ''' → logprob: -12.250716209411621
    9. 'rep' → logprob: -12.500716209411621
    10. '
' → logprob: -12.625716209411621

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009795783553272486
    2. ' ,' → logprob: -7.750979423522949
    3. '-' → logprob: -8.00097942352295
    4. ' -' → logprob: -8.75097942352295
    5. ',
' → logprob: -10.50097942352295
    6. '[' → logprob: -11.37597942352295
    7. '   ' → logprob: -12.00097942352295
    8. ',re' → logprob: -13.25097942352295
    9. '),' → logprob: -13.50097942352295
    10. '))' → logprob: -14.00097942352295

Token 478: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.001170225441455841
    2. ' repeat' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. ' ' → logprob: -18.376171112060547
    5. '       ' → logprob: -18.751171112060547
    6. '
' → logprob: -19.251171112060547
    7. '           ' → logprob: -19.251171112060547
    8. '.repeat' → logprob: -19.376171112060547
    9. 're' → logprob: -19.626171112060547
    10. '_repeat' → logprob: -19.751171112060547

Token 479: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.062068067491054535
    2. ')' → logprob: -2.812067985534668
    3. '))
' → logprob: -9.562067985534668
    4. ')
' → logprob: -11.187067985534668
    5. ')))' → logprob: -12.062067985534668
    6. '   ' → logprob: -12.187067985534668
    7. ' ))' → logprob: -12.937067985534668
    8. '),' → logprob: -14.062067985534668
    9. ',' → logprob: -14.187067985534668
    10. ' )' → logprob: -14.812067985534668

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014213686808943748
    2. '<|end|>' → logprob: -4.389213562011719
    3. '
' → logprob: -7.889213562011719
    4. ')' → logprob: -7.889213562011719
    5. '    
' → logprob: -8.139213562011719
    6. 'elif' → logprob: -8.514213562011719
    7. '<|end|>' → logprob: -8.889213562011719
    8. '       ' → logprob: -9.264213562011719
    9. '  ' → logprob: -10.139213562011719
    10. 'else' → logprob: -10.264213562011719

Token 481: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02797640860080719
    2. 'else' (adapté à ' else') → logprob: -3.7779765129089355
    3. ' else' → logprob: -5.5279765129089355
    4. 'elif' → logprob: -7.2779765129089355
    5. ' elif' → logprob: -10.277976036071777
    6. '	else' → logprob: -11.902976036071777
    7. '    
' → logprob: -12.652976036071777
    8. ')' → logprob: -13.152976036071777
    9. '	elif' → logprob: -13.277976036071777
    10. '  ' → logprob: -13.902976036071777

Token 482: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029064424335956573
    2. ':
' → logprob: -4.029064655303955
    3. ':' → logprob: -5.279064655303955
    4. '   ' → logprob: -5.654064655303955
    5. 'if' → logprob: -6.904064655303955
    6. '{
' → logprob: -8.154064178466797
    7. 'repeat' → logprob: -8.279064178466797
    8. ' if' → logprob: -8.779064178466797
    9. '```' → logprob: -8.904064178466797
    10. '
' → logprob: -9.404064178466797

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19568240642547607
    2. ' repeat' → logprob: -2.4456825256347656
    3. 'repeat' → logprob: -2.5706825256347656
    4. ' cursor' → logprob: -5.070682525634766
    5. '   ' → logprob: -5.445682525634766
    6. 'cursor' → logprob: -6.570682525634766
    7. ' parts' → logprob: -7.695682525634766
    8. ',' → logprob: -7.945682525634766
    9. ' part' → logprob: -8.320682525634766
    10. ' c' → logprob: -9.070682525634766

Token 484: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.268125057220459
    2. ' tmp' → logprob: -2.143125057220459
    3. 'part' → logprob: -2.893125057220459
    4. ' part' → logprob: -3.268125057220459
    5. '       ' → logprob: -3.893125057220459
    6. 'max' → logprob: -6.393125057220459
    7. '   ' → logprob: -6.643125057220459
    8. ' max' → logprob: -8.518125534057617
    9. ' parts' → logprob: -8.643125534057617
    10. 'parts' → logprob: -8.768125534057617

Token 485: ',' (ID: 11)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.121895432472229
    2. ',' → logprob: -2.4968953132629395
    3. 'max' → logprob: -3.9968953132629395
    4. '_cur' → logprob: -4.3718953132629395
    5. 'cur' → logprob: -8.371895790100098
    6. '_parts' → logprob: -8.496895790100098
    7. '_part' → logprob: -8.621895790100098
    8. '_b' → logprob: -8.621895790100098
    9. 'b' → logprob: -9.121895790100098
    10. ',max' → logprob: -9.121895790100098

Token 486: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.10023395717144012
    2. 'cursor' → logprob: -2.350234031677246
    3. '   ' → logprob: -11.475234031677246
    4. '       ' → logprob: -12.100234031677246
    5. '	cursor' → logprob: -12.725234031677246
    6. ' ' → logprob: -12.975234031677246
    7. '_cursor' → logprob: -13.475234031677246
    8. 'Cursor' → logprob: -13.975234031677246
    9. '(cursor' → logprob: -14.350234031677246
    10. 'cur' → logprob: -14.600234031677246

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751529917120934
    2. ' =' → logprob: -3.5297515392303467
    3. ',' → logprob: -14.029751777648926
    4. '   ' → logprob: -15.654751777648926
    5. '＝' → logprob: -18.40475082397461
    6. ')' → logprob: -18.40475082397461
    7. ' ' → logprob: -18.52975082397461
    8. '    ' → logprob: -19.27975082397461
    9. '  ' → logprob: -19.65475082397461
    10. '+=' → logprob: -19.65475082397461

Token 488: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.0024762547109276056
    2. ' search' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.377476692199707
    4. '	search' → logprob: -15.877476692199707
    5. ' ' → logprob: -16.62747573852539
    6. '  ' → logprob: -17.00247573852539
    7. '
' → logprob: -17.00247573852539
    8. '(search' → logprob: -17.50247573852539
    9. '       ' → logprob: -18.37747573852539
    10. '    ' → logprob: -19.87747573852539

Token 489: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00012725738633889705
    2. 'ba' → logprob: -9.125126838684082
    3. 'b' → logprob: -11.250126838684082
    4. ' ba' → logprob: -13.250126838684082
    5. '_bb' → logprob: -13.250126838684082
    6. '_ab' → logprob: -13.625126838684082
    7. 'ab' → logprob: -15.500126838684082
    8. 'bb' → logprob: -17.2501277923584
    9. 'Ba' → logprob: -17.5001277923584
    10. 'a' → logprob: -17.6251277923584

Token 490: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006530869286507368
    2. '(ss' → logprob: -5.38153076171875
    3. 'ss' → logprob: -6.50653076171875
    4. 'ba' → logprob: -8.38153076171875
    5. 'aa' → logprob: -9.13153076171875
    6. 'b' → logprob: -10.00653076171875
    7. 'ab' → logprob: -11.50653076171875
    8. '_ss' → logprob: -12.13153076171875
    9. ' ss' → logprob: -12.63153076171875
    10. '_a' → logprob: -13.00653076171875

Token 491: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -2.45848218582978e-06
    2. ' (' → logprob: -14.25000286102295
    3. '(parts' → logprob: -14.25000286102295
    4. 'ss' → logprob: -14.75000286102295
    5. 'sss' → logprob: -15.12500286102295
    6. '```' → logprob: -16.125001907348633
    7. '(' → logprob: -16.500001907348633
    8. '	ss' → logprob: -16.500001907348633
    9. ':ss' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.500001907348633

Token 492: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014359652064740658
    2. 'ss' → logprob: -4.264359474182129
    3. ',' → logprob: -9.764359474182129
    4. 'sss' → logprob: -9.764359474182129
    5. '(ss' → logprob: -10.139359474182129
    6. '(cursor' → logprob: -10.764359474182129
    7. 'cursor' → logprob: -12.014359474182129
    8. ')' → logprob: -12.389359474182129
    9. ' cursor' → logprob: -12.889359474182129
    10. '),' → logprob: -13.639359474182129

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018296310445293784
    2. ' ,' → logprob: -6.501829624176025
    3. '(ss' → logprob: -8.251830101013184
    4. ',s' → logprob: -10.751830101013184
    5. ',tmp' → logprob: -11.501830101013184
    6. 'ss' → logprob: -12.251830101013184
    7. '(' → logprob: -12.251830101013184
    8. '(parts' → logprob: -12.251830101013184
    9. ')' → logprob: -12.376830101013184
    10. ',
' → logprob: -12.501830101013184

Token 494: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.12760870158672333
    2. ' cursor' → logprob: -2.1276087760925293
    3. 'tmp' → logprob: -8.377608299255371
    4. 'sss' → logprob: -8.377608299255371
    5. '(cursor' → logprob: -9.877608299255371
    6. 's' → logprob: -10.002608299255371
    7. ' s' → logprob: -10.127608299255371
    8. '	cursor' → logprob: -11.002608299255371
    9. ' tmp' → logprob: -11.377608299255371
    10. 'ccc' → logprob: -11.627608299255371

Token 495: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2523428499698639
    2. ')' → logprob: -1.5023428201675415
    3. '   ' → logprob: -8.12734317779541
    4. ')
' → logprob: -9.62734317779541
    5. '       ' → logprob: -10.12734317779541
    6. ' )
' → logprob: -12.50234317779541
    7. ')

' → logprob: -12.75234317779541
    8. '<|end|>' → logprob: -13.75234317779541
    9. ' ' → logprob: -14.37734317779541
    10. ')`
' → logprob: -14.50234317779541

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3561224639415741
    2. 'parts' → logprob: -1.4811224937438965
    3. '   ' → logprob: -2.7311224937438965
    4. ' parts' → logprob: -4.9811224937438965
    5. '(parts' → logprob: -8.981122016906738
    6. '
' → logprob: -10.231122016906738
    7. '_parts' → logprob: -11.106122016906738
    8. '           ' → logprob: -11.356122016906738
    9. 'part' → logprob: -11.606122016906738
    10. '.parts' → logprob: -12.106122016906738

Token 497: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.00018744789122138172
    2. ' parts' → logprob: -8.625187873840332
    3. '   ' → logprob: -12.625187873840332
    4. '       ' → logprob: -12.625187873840332
    5. '
' → logprob: -14.500187873840332
    6. 'part' → logprob: -15.000187873840332
    7. '(parts' → logprob: -15.000187873840332
    8. '_parts' → logprob: -16.500186920166016
    9. '.parts' → logprob: -16.625186920166016
    10. '           ' → logprob: -17.875186920166016

Token 498: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.5048530030981055e-06
    2. 's' → logprob: -13.625001907348633
    3. 'b' → logprob: -16.250001907348633
    4. '.append' → logprob: -16.500001907348633
    5. '_a' → logprob: -16.875001907348633
    6. '_max' → logprob: -17.500001907348633
    7. '_parts' → logprob: -18.375001907348633
    8. '<|end|>' → logprob: -19.125001907348633
    9. '_append' → logprob: -19.375001907348633
    10. 'a' → logprob: -19.875001907348633

Token 499: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.6166903151315637e-05
    2. '.' → logprob: -11.250016212463379
    3. 'append' → logprob: -13.750016212463379
    4. '.extend' → logprob: -14.125016212463379
    5. '.app' → logprob: -14.375016212463379
    6. ' .' → logprob: -15.125016212463379
    7. '.py' → logprob: -15.750016212463379
    8. ').' → logprob: -16.375015258789062
    9. '.push' → logprob: -16.500015258789062
    10. '.ap' → logprob: -16.625015258789062

Token 500: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -2.5941604690160602e-05
    2. 'tmp' → logprob: -10.750025749206543
    3. '(' → logprob: -12.375025749206543
    4. '(temp' → logprob: -15.500025749206543
    5. '((' → logprob: -17.25002670288086
    6. '/tmp' → logprob: -17.25002670288086
    7. ' tmp' → logprob: -17.75002670288086
    8. '$tmp' → logprob: -18.25002670288086
    9. ',tmp' → logprob: -18.50002670288086
    10. '(txt' → logprob: -18.62502670288086

Token 501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ')
' → logprob: -11.00002670288086
    3. ' )' → logprob: -11.75002670288086
    4. '<|end|>' → logprob: -13.62502670288086
    5. '   ' → logprob: -14.62502670288086
    6. '))' → logprob: -16.12502670288086
    7. '
' → logprob: -17.12502670288086
    8. ')return' → logprob: -17.37502670288086
    9. ')

' → logprob: -17.37502670288086
    10. ')#' → logprob: -17.62502670288086

Token 502: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9799942970275879
    2. 'tmp' → logprob: -1.229994297027588
    3. 'if' → logprob: -1.979994297027588
    4. 'result' → logprob: -2.354994297027588
    5. 'while' → logprob: -4.104994297027588
    6. 'for' → logprob: -4.104994297027588
    7. '<|end|>' → logprob: -4.229994297027588
    8. 'parts' → logprob: -4.729994297027588
    9. '
' → logprob: -4.854994297027588
    10. 'a' → logprob: -5.104994297027588

Token 503: ' last' (ID: 2174)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.011752143502235413
    2. '_cur' → logprob: -4.636752128601074
    3. '_cursor' → logprob: -6.761752128601074
    4. 'b' → logprob: -7.511752128601074
    5. '```' → logprob: -9.636752128601074
    6. '_' → logprob: -9.636752128601074
    7. 'cur' → logprob: -10.511752128601074
    8. ')_' → logprob: -11.261752128601074
    9. 'cursor' → logprob: -11.386752128601074
    10. '_parts' → logprob: -11.761752128601074

Token 505: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0004791704413946718
    2. 'cur' → logprob: -7.750479221343994
    3. '_cursor' → logprob: -10.500478744506836
    4. '_' → logprob: -12.125478744506836
    5. ' cur' → logprob: -13.125478744506836
    6. '=' → logprob: -13.250478744506836
    7. '_curr' → logprob: -13.875478744506836
    8. '```' → logprob: -13.875478744506836
    9. ')_' → logprob: -14.000478744506836
    10. 'Cur' → logprob: -14.125478744506836

Token 506: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9656847715377808
    2. '=' → logprob: -1.0906847715377808
    3. ' =' → logprob: -1.3406847715377808
    4. '+=' → logprob: -3.8406848907470703
    5. ',' → logprob: -9.84068489074707
    6. '<|end|>' → logprob: -10.34068489074707
    7. ' ' → logprob: -11.09068489074707
    8. '+' → logprob: -11.96568489074707
    9. ' +' → logprob: -12.09068489074707
    10. ')' → logprob: -12.09068489074707

Token 507: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.03366229683160782
    2. ' cursor' → logprob: -3.4086623191833496
    3. '	cursor' → logprob: -11.783661842346191
    4. '(cursor' → logprob: -13.033661842346191
    5. 'tmp' → logprob: -13.283661842346191
    6. 'max' → logprob: -13.533661842346191
    7. '_cursor' → logprob: -13.783661842346191
    8. 'cur' → logprob: -14.533661842346191
    9. 'c' → logprob: -14.783661842346191
    10. 'ccc' → logprob: -15.158661842346191

Token 508: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: 'ab' (ID: 378)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31087225675582886
    2. 'while' → logprob: -1.6858723163604736
    3. 'max' → logprob: -4.0608720779418945
    4. 'for' → logprob: -4.0608720779418945
    5. '#' → logprob: -4.6858720779418945
    6. 'result' → logprob: -4.8108720779418945
    7. 'tmp' → logprob: -5.4358720779418945
    8. 'parts' → logprob: -5.4358720779418945
    9. 'repeat' → logprob: -5.6858720779418945
    10. ')' → logprob: -5.6858720779418945

Token 510: '_count' (ID: 7536)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1208527088165283
    2. '_' → logprob: -1.7458527088165283
    3. '_cursor' → logprob: -1.7458527088165283
    4. 'stract' → logprob: -2.9958527088165283
    5. ' =' → logprob: -3.1208527088165283
    6. 's' → logprob: -3.2458527088165283
    7. 'b' → logprob: -3.4958527088165283
    8. ')' → logprob: -3.6208527088165283
    9. '<|end|>' → logprob: -3.6208527088165283
    10. 'cursor' → logprob: -4.120852470397949

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3461119532585144
    2. '=' → logprob: -1.5961120128631592
    3. ',' → logprob: -2.721112012863159
    4. '<|end|>' → logprob: -4.09611177444458
    5. ' +=' → logprob: -5.72111177444458
    6. '.append' → logprob: -7.09611177444458
    7. ')' → logprob: -7.22111177444458
    8. '[' → logprob: -7.22111177444458
    9. '+=' → logprob: -8.221112251281738
    10. ' ' → logprob: -8.471112251281738

Token 512: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9029470682144165
    2. 're' → logprob: -1.5279470682144165
    3. 'len' → logprob: -1.5279470682144165
    4. 'sum' → logprob: -2.402946949005127
    5. ' len' → logprob: -3.777946949005127
    6. ' repeats' → logprob: -4.027946949005127
    7. 'repeat' → logprob: -4.527946949005127
    8. ' ' → logprob: -4.652946949005127
    9. ' sum' → logprob: -5.277946949005127
    10. 'max' → logprob: -6.527946949005127

Token 513: '(r' (ID: 4729)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.912321925163269
    2. '(r' → logprob: -1.287321925163269
    3. '([' → logprob: -1.662321925163269
    4. '(x' → logprob: -2.9123220443725586
    5. '(rep' → logprob: -3.1623220443725586
    6. '(' → logprob: -4.287322044372559
    7. '(t' → logprob: -4.662322044372559
    8. '(c' → logprob: -5.662322044372559
    9. '(cur' → logprob: -6.412322044372559
    10. '((' → logprob: -6.537322044372559

Token 514: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05172817036509514
    2. ' for' → logprob: -3.4267282485961914
    3. 'for' → logprob: -4.051728248596191
    4. ',' → logprob: -8.676728248596191
    5. '_a' → logprob: -9.301728248596191
    6. '   ' → logprob: -10.051728248596191
    7. '```' → logprob: -10.176728248596191
    8. 'a' → logprob: -10.301728248596191
    9. ' ' → logprob: -10.926728248596191
    10. 'e' → logprob: -10.926728248596191

Token 515: ' c' (ID: 274)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.00012987985974177718
    2. '_' → logprob: -10.125129699707031
    3. '__,' → logprob: -10.250129699707031
    4. ' _,' → logprob: -10.750129699707031
    5. '_c' → logprob: -11.500129699707031
    6. '(_,' → logprob: -12.000129699707031
    7. 'pos' → logprob: -12.125129699707031
    8. '_pos' → logprob: -13.000129699707031
    9. '_cursor' → logprob: -13.000129699707031
    10. ',' → logprob: -13.375129699707031

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015728295547887683
    2. ',r' → logprob: -6.751572608947754
    3. ',_' → logprob: -9.001572608947754
    4. ',
' → logprob: -9.376572608947754
    5. ',re' → logprob: -9.751572608947754
    6. ' ,' → logprob: -9.876572608947754
    7. ',p' → logprob: -11.376572608947754
    8. ',y' → logprob: -11.376572608947754
    9. ',a' → logprob: -11.876572608947754
    10. ',c' → logprob: -12.001572608947754

Token 517: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0022014055866748095
    2. ' r' → logprob: -6.127201557159424
    3. 'repeat' → logprob: -11.502201080322266
    4. '(r' → logprob: -13.877201080322266
    5. ',r' → logprob: -14.252201080322266
    6. 'count' → logprob: -14.252201080322266
    7. 'v' → logprob: -14.502201080322266
    8. '_,' → logprob: -14.752201080322266
    9. 't' → logprob: -14.752201080322266
    10. 'rep' → logprob: -14.752201080322266

Token 518: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03370356559753418
    2. 'in' → logprob: -3.408703565597534
    3. ',' → logprob: -10.658703804016113
    4. ')' → logprob: -11.408703804016113
    5. 'r' → logprob: -11.908703804016113
    6. ' ' → logprob: -12.158703804016113
    7. 's' → logprob: -13.158703804016113
    8. 'import' → logprob: -13.408703804016113
    9. ',r' → logprob: -13.783703804016113
    10. 'c' → logprob: -14.158703804016113

Token 519: ' repeats' (ID: 95681)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.018150994554162025
    2. ' repeats' → logprob: -4.018150806427002
    3. 'repeat' → logprob: -14.39315128326416
    4. '	re' → logprob: -16.018150329589844
    5. 'ab' → logprob: -16.143150329589844
    6. ' ' → logprob: -16.768150329589844
    7. '```' → logprob: -16.768150329589844
    8. '(re' → logprob: -17.018150329589844
    9. '
' → logprob: -17.018150329589844
    10. 'r' → logprob: -17.018150329589844

Token 520: '_a' (ID: 10852)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5241793394088745
    2. '_a' → logprob: -0.8991793394088745
    3. 'a' → logprob: -7.274179458618164
    4. '))' → logprob: -8.774179458618164
    5. '),' → logprob: -10.149179458618164
    6. ' in' → logprob: -10.274179458618164
    7. ')_' → logprob: -10.524179458618164
    8. ' )' → logprob: -11.274179458618164
    9. '])' → logprob: -11.274179458618164
    10. 'if' → logprob: -11.524179458618164

Token 521: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013131031300872564
    2. ' )' → logprob: -9.500131607055664
    3. ')
' → logprob: -10.000131607055664
    4. ' if' → logprob: -12.375131607055664
    5. '))' → logprob: -13.125131607055664
    6. 'if' → logprob: -13.375131607055664
    7. '),' → logprob: -14.500131607055664
    8. ')`' → logprob: -15.000131607055664
    9. ')}' → logprob: -15.250131607055664
    10. ')>' → logprob: -15.500131607055664

Token 522: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.025519467890262604
    2. ' c' → logprob: -3.900519371032715
    3. 'r' → logprob: -5.525519371032715
    4. 's' → logprob: -8.025519371032715
    5. ' r' → logprob: -8.400519371032715
    6. 'True' → logprob: -9.525519371032715
    7. ' s' → logprob: -9.525519371032715
    8. ' ' → logprob: -10.025519371032715
    9. '_' → logprob: -10.588019371032715
    10. '_c' → logprob: -11.025519371032715

Token 523: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.955191969871521
    2. '<=' → logprob: -1.330191969871521
    3. ' <' → logprob: -1.580191969871521
    4. '<' → logprob: -2.0801920890808105
    5. ')' → logprob: -4.7051920890808105
    6. ' >' → logprob: -5.4551920890808105
    7. '>' → logprob: -5.4551920890808105
    8. '[' → logprob: -7.4551920890808105
    9. '<len' → logprob: -8.205191612243652
    10. ' ' → logprob: -8.455191612243652

Token 524: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1804938167333603
    2. ' last' → logprob: -1.8054938316345215
    3. '0' → logprob: -7.3054938316345215
    4. 'cursor' → logprob: -10.680493354797363
    5. '=' → logprob: -10.930493354797363
    6. ' ' → logprob: -11.180493354797363
    7. ' cursor' → logprob: -11.430493354797363
    8. 'n' → logprob: -12.055493354797363
    9. ' ab' → logprob: -13.930493354797363
    10. 'lasti' → logprob: -13.930493354797363

Token 525: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.003392663784325123
    2. '_cur' → logprob: -5.753392696380615
    3. '_cursor' → logprob: -9.003392219543457
    4. 'cur' → logprob: -10.378392219543457
    5. 'b' → logprob: -10.628392219543457
    6. '_ab' → logprob: -10.878392219543457
    7. '_c' → logprob: -11.878392219543457
    8. 'cursor' → logprob: -12.753392219543457
    9. '```' → logprob: -13.378392219543457
    10. '_' → logprob: -13.628392219543457

Token 526: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0004568903532344848
    2. 'cur' → logprob: -7.750456809997559
    3. '_cursor' → logprob: -10.750456809997559
    4. '_c' → logprob: -14.000456809997559
    5. ')' → logprob: -14.875456809997559
    6. ' cur' → logprob: -15.000456809997559
    7. ' ' → logprob: -15.125456809997559
    8. '_' → logprob: -15.125456809997559
    9. '_cut' → logprob: -15.125456809997559
    10. '	cur' → logprob: -15.125456809997559

Token 527: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004424667276907712
    2. ')
' → logprob: -8.250442504882812
    3. ' )' → logprob: -8.625442504882812
    4. ')+' → logprob: -15.000442504882812
    5. '))' → logprob: -15.125442504882812
    6. ' )
' → logprob: -15.250442504882812
    7. ')

' → logprob: -15.250442504882812
    8. ')#' → logprob: -16.125442504882812
    9. ')
' → logprob: -16.375442504882812
    10. ')`' → logprob: -16.500442504882812

Token 528: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: '(in' (ID: 9573)
  Prédit: '(ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ab' → logprob: -0.01997273974120617
    2. '(max' → logprob: -4.019972801208496
    3. 'ab' → logprob: -6.769972801208496
    4. '(sum' → logprob: -7.894972801208496
    5. 'max' → logprob: -8.644972801208496
    6. '(len' → logprob: -9.769972801208496
    7. '(abs' → logprob: -10.894972801208496
    8. '('' → logprob: -11.644972801208496
    9. 'sum' → logprob: -11.894972801208496
    10. '(in' → logprob: -12.019972801208496

Token 530: 'tegr' (ID: 11253)
  Prédit: 'tegr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tegr' → logprob: -0.662194013595581
    2. 't' → logprob: -0.912194013595581
    3. 'ab' → logprob: -3.412194013595581
    4. 'max' → logprob: -3.662194013595581
    5. 'te' → logprob: -4.78719425201416
    6. '(ab' → logprob: -5.41219425201416
    7. 'sum' → logprob: -6.16219425201416
    8. '(max' → logprob: -6.16219425201416
    9. 'teg' → logprob: -6.41219425201416
    10. 'tegration' → logprob: -6.78719425201416

Token 531: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -1.9361264946837764e-07
    2. 'te' → logprob: -17.5
    3. '
' → logprob: -17.75
    4. '(' → logprob: -18.25
    5. '**' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. 'ате' → logprob: -19.375
    8. 'rate' → logprob: -19.5
    9. '`' → logprob: -19.625
    10. '=' → logprob: -19.625

Token 532: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: 0.0
    2. '(part' → logprob: -18.25
    3. 'parts' → logprob: -19.0
    4. '(' → logprob: -20.125
    5. '(points' → logprob: -20.625
    6. ' (' → logprob: -20.625
    7. '(p' → logprob: -21.125
    8. '(posts' → logprob: -21.75
    9. ')' → logprob: -22.0
    10. ' parts' → logprob: -22.375

Token 533: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -14.750000953674316
    3. ')_' → logprob: -15.250000953674316
    4. '))' → logprob: -17.625
    5. '_parts' → logprob: -17.625
    6. '_a' → logprob: -17.625
    7. 'b' → logprob: -17.625
    8. '_)' → logprob: -18.375
    9. ' _' → logprob: -19.5
    10. '_' → logprob: -19.625

Token 534: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1815204620361328
    2. ')' → logprob: -1.8065204620361328
    3. ')+' → logprob: -7.181520462036133
    4. '+' → logprob: -7.931520462036133
    5. '()))' → logprob: -8.806520462036133
    6. ' +' → logprob: -8.931520462036133
    7. '()' → logprob: -9.181520462036133
    8. ' ))' → logprob: -9.431520462036133
    9. ',' → logprob: -9.681520462036133
    10. '())' → logprob: -10.056520462036133

Token 535: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006009136792272329
    2. ' +' → logprob: -6.131009101867676
    3. '+' → logprob: -6.256009101867676
    4. '))' → logprob: -6.756009101867676
    5. ' )' → logprob: -7.381009101867676
    6. '+)' → logprob: -10.756009101867676
    7. ',' → logprob: -10.881009101867676
    8. ')+' → logprob: -11.256009101867676
    9. '[' → logprob: -11.506009101867676
    10. ')))' → logprob: -11.631009101867676

Token 536: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.07658004760742188
    2. ' '' → logprob: -3.576580047607422
    3. '('' → logprob: -4.451580047607422
    4. '''.' → logprob: -4.576580047607422
    5. ''ab' → logprob: -4.951580047607422
    6. '"a' → logprob: -5.326580047607422
    7. ''' → logprob: -5.576580047607422
    8. '"' → logprob: -5.951580047607422
    9. ' ''.' → logprob: -6.201580047607422
    10. ''in' → logprob: -6.576580047607422

Token 537: 'ab' (ID: 378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0896984413266182
    2. ''a' → logprob: -2.464698553085327
    3. '''.' → logprob: -8.339698791503906
    4. '('' → logprob: -8.589698791503906
    5. ' a' → logprob: -9.214698791503906
    6. '(a' → logprob: -9.589698791503906
    7. '"a' → logprob: -9.839698791503906
    8. ''' → logprob: -10.589698791503906
    9. 'aaa' → logprob: -10.839698791503906
    10. ''ab' → logprob: -10.964698791503906

Token 538: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08783100545406342
    2. '')' → logprob: -2.8378310203552246
    3. ''*' → logprob: -3.9628310203552246
    4. 'a' → logprob: -5.587831020355225
    5. 'ab' → logprob: -6.212831020355225
    6. ''ab' → logprob: -7.837831020355225
    7. ''[' → logprob: -9.212830543518066
    8. ''.' → logprob: -9.462830543518066
    9. '*' → logprob: -10.337830543518066
    10. '\n' → logprob: -10.587830543518066

Token 539: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20058543980121613
    2. ' *' → logprob: -1.9505854845046997
    3. ''ab' → logprob: -4.57558536529541
    4. ''' → logprob: -4.70058536529541
    5. '*a' → logprob: -4.82558536529541
    6. ')' → logprob: -5.82558536529541
    7. 'a' → logprob: -5.82558536529541
    8. ''*' → logprob: -5.95058536529541
    9. 'ab' → logprob: -6.57558536529541
    10. ''a' → logprob: -7.07558536529541

Token 540: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -5.88418151892256e-05
    2. ' ab' → logprob: -9.750059127807617
    3. '(ab' → logprob: -14.625059127807617
    4. '_ab' → logprob: -20.875059127807617
    5. 'abs' → logprob: -21.250059127807617
    6. 'AB' → logprob: -21.375059127807617
    7. '(' → logprob: -21.500059127807617
    8. 'max' → logprob: -21.875059127807617
    9. '#ab' → logprob: -21.875059127807617
    10. 'аб' → logprob: -22.000059127807617

Token 541: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.2896820604801178
    2. 'len' → logprob: -2.289682149887085
    3. 'd' → logprob: -2.539682149887085
    4. ')' → logprob: -3.789682149887085
    5. 't' → logprob: -4.789681911468506
    6. 'count' → logprob: -4.914681911468506
    7. 'nd' → logprob: -5.164681911468506
    8. 'ound' → logprob: -5.289681911468506
    9. '[' → logprob: -5.539681911468506
    10. '[len' → logprob: -5.664681911468506

Token 542: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.000763510703109e-05
    2. ' )' → logprob: -11.375040054321289
    3. '')' → logprob: -11.500040054321289
    4. '))' → logprob: -11.625040054321289
    5. '`)' → logprob: -12.375040054321289
    6. ')`' → logprob: -13.625040054321289
    7. '+)' → logprob: -14.000040054321289
    8. '())' → logprob: -14.375040054321289
    9. ')
' → logprob: -14.625040054321289
    10. '+' → logprob: -14.750040054321289


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 540
Tokens correctement prédits (1ère position, stricte): 257
Tokens correctement prédits (1ère position, avec adaptation): 264
Tokens correctement prédits (top 10): 450
Précision stricte (1ère position): 47.59%
Précision adaptée (1ère position): 48.89%
Précision (top 10): 83.33%
================================================================================
