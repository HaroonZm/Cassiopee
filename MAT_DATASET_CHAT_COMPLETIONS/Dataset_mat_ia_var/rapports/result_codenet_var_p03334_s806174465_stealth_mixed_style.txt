================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def judge(D):
    c=0
    for _ in iter(int,1):
        if D%4:break
        c+=1;D//=4
    if D%2==1:
        def fst(x,y):return ~((x>>c)^(y>>c))&1
        return fst
    else:
        return lambda x,y:~(x>>c)&1

from functools import partial
N, D1, D2 = map(int,input().split())
judge1 = judge(D1)
judge2 = judge(D2)
res = []
lst = [(x, y) for x in range(N*2) for y in range(N*2)]
class Selector:
    def __call__(self, func, seq):
        for p in seq:
            if func(*p):yield p
selector = Selector()
count = 0
for p in selector(lambda a,b: judge1(a,b) and judge2(a,b), lst):
    if count>=N*N:break
    print(*p)
    count+=1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' judge' (ID: 23319)
  → Token d'amorce (pas de prédiction)

Token 2: '(D' (ID: 9908)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07683717459440231
    2. ')' → logprob: -3.2018370628356934
    3. ',' → logprob: -3.9518370628356934
    4. ':' → logprob: -5.451837062835693
    5. '_' → logprob: -6.326837062835693
    6. 'ef' → logprob: -6.576837062835693
    7. ' ):' → logprob: -6.576837062835693
    8. '[' → logprob: -6.576837062835693
    9. '(' → logprob: -7.326837062835693
    10. 'D' → logprob: -7.701837062835693

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007469970732927322
    2. '(' → logprob: -6.50747013092041
    3. '_' → logprob: -6.63247013092041
    4. ''' → logprob: -6.75747013092041
    5. '.' → logprob: -7.25747013092041
    6. '[' → logprob: -7.38247013092041
    7. '   ' → logprob: -7.63247013092041
    8. ' :' → logprob: -7.88247013092041
    9. '():' → logprob: -8.25747013092041
    10. '[:]' → logprob: -8.63247013092041

Token 5: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6945478320121765
    2. '   ' → logprob: -1.4445478916168213
    3. 'i' → logprob: -3.1945478916168213
    4. '[' → logprob: -3.4445478916168213
    5. '```' → logprob: -3.4445478916168213
    6. ' if' → logprob: -3.6945478916168213
    7. '    ' → logprob: -4.194547653198242
    8. ' 
' → logprob: -4.194547653198242
    9. '\n' → logprob: -4.569547653198242
    10. 'n' → logprob: -4.569547653198242

Token 6: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6639502644538879
    2. '=' → logprob: -0.9139502644538879
    3. 'ounter' → logprob: -3.788950204849243
    4. 'ount' → logprob: -3.913950204849243
    5. ':' → logprob: -4.038950443267822
    6. 'o' → logprob: -4.413950443267822
    7. '_' → logprob: -5.663950443267822
    8. ',' → logprob: -6.288950443267822
    9. ' ' → logprob: -6.538950443267822
    10. 'ont' → logprob: -6.663950443267822

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3026595413684845
    2. '{}' → logprob: -1.427659511566162
    3. '{' → logprob: -4.052659511566162
    4. 'D' → logprob: -6.927659511566162
    5. ' {}' → logprob: -6.927659511566162
    6. ' ' → logprob: -7.052659511566162
    7. '1' → logprob: -7.427659511566162
    8. '[]' → logprob: -8.92765998840332
    9. '[' → logprob: -9.42765998840332
    10. 'Counter' → logprob: -9.67765998840332

Token 8: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3791505098342896
    2. ' ' → logprob: -1.7541505098342896
    3. '<|end|>' → logprob: -1.7541505098342896
    4. ',' → logprob: -2.629150390625
    5. '
' → logprob: -2.754150390625
    6. ':' → logprob: -2.754150390625
    7. '\n' → logprob: -3.504150390625
    8. ')' → logprob: -3.879150390625
    9. '  
' → logprob: -4.004150390625
    10. ' 
' → logprob: -4.129150390625

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.704555332660675
    2. '\' → logprob: -2.3295552730560303
    3. ' ' → logprob: -2.5795552730560303
    4. '    ' → logprob: -2.8295552730560303
    5. '  ' → logprob: -2.9545552730560303
    6. '\n' → logprob: -3.2045552730560303
    7. ',' → logprob: -3.5795552730560303
    8. ':' → logprob: -3.7045552730560303
    9. ' for' → logprob: -4.204555511474609
    10. '
' → logprob: -4.329555511474609

Token 10: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9913449287414551
    2. '   ' → logprob: -1.616344928741455
    3. ' for' → logprob: -2.116344928741455
    4. '\n' → logprob: -2.491344928741455
    5. 'n' → logprob: -3.241344928741455
    6. '\' → logprob: -3.366344928741455
    7. ' 
' → logprob: -3.616344928741455
    8. ' \' → logprob: -3.991344928741455
    9. 'i' → logprob: -4.116344928741455
    10. '<|end|>' → logprob: -4.241344928741455

Token 11: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4938960373401642
    2. ' i' → logprob: -1.1188960075378418
    3. ' d' → logprob: -2.993896007537842
    4. ' x' → logprob: -4.868896007537842
    5. ' e' → logprob: -6.368896007537842
    6. '  ' → logprob: -6.743896007537842
    7. 'i' → logprob: -7.493896007537842
    8. ' item' → logprob: -7.743896007537842
    9. 'd' → logprob: -8.368896484375
    10. ' element' → logprob: -8.618896484375

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01133887842297554
    2. 'in' → logprob: -4.511338710784912
    3. ' ' → logprob: -8.51133918762207
    4. ' ,' → logprob: -10.38633918762207
    5. ',' → logprob: -11.26133918762207
    6. 'range' → logprob: -11.51133918762207
    7. 'space' → logprob: -11.76133918762207
    8. '  ' → logprob: -11.76133918762207
    9. 'n' → logprob: -12.01133918762207
    10. 's' → logprob: -12.76133918762207

Token 13: ' iter' (ID: 10621)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5130136609077454
    2. 'range' → logprob: -1.5130136013031006
    3. 'D' → logprob: -2.1380136013031006
    4. ' D' → logprob: -2.7630136013031006
    5. 'd' → logprob: -10.63801383972168
    6. ' ' → logprob: -10.63801383972168
    7. ' d' → logprob: -12.26301383972168
    8. 'Range' → logprob: -12.51301383972168
    9. '  ' → logprob: -12.76301383972168
    10. '(range' → logprob: -12.88801383972168

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04344808682799339
    2. '(D' → logprob: -3.168447971343994
    3. '(lambda' → logprob: -9.043448448181152
    4. '(a' → logprob: -9.543448448181152
    5. '(range' → logprob: -9.543448448181152
    6. '(en' → logprob: -10.793448448181152
    7. '(s' → logprob: -10.793448448181152
    8. '(d' → logprob: -10.793448448181152
    9. '(c' → logprob: -11.168448448181152
    10. ' (' → logprob: -11.543448448181152

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0109932329505682
    2. ',input' → logprob: -4.885993003845215
    3. ',D' → logprob: -6.260993003845215
    4. '(' → logprob: -8.135993003845215
    5. ',int' → logprob: -8.635993003845215
    6. ' ,' → logprob: -8.885993003845215
    7. '(D' → logprob: -8.885993003845215
    8. ',d' → logprob: -8.885993003845215
    9. '):' → logprob: -9.260993003845215
    10. '(),' → logprob: -9.760993003845215

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18863700330257416
    2. ' ' → logprob: -1.8136370182037354
    3. '(' → logprob: -4.813636779785156
    4. ')' → logprob: -8.313636779785156
    5. '0' → logprob: -8.813636779785156
    6. '):' → logprob: -9.063636779785156
    7. '()' → logprob: -10.063636779785156
    8. '  ' → logprob: -10.063636779785156
    9. '():' → logprob: -10.688636779785156
    10. '100' → logprob: -10.688636779785156

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016145924106240273
    2. ')' → logprob: -4.141145706176758
    3. '):
' → logprob: -9.766145706176758
    4. '():' → logprob: -10.891145706176758
    5. '()' → logprob: -11.516145706176758
    6. ':' → logprob: -11.516145706176758
    7. ' ):' → logprob: -12.141145706176758
    8. '(' → logprob: -13.141145706176758
    9. '0' → logprob: -13.266145706176758
    10. ''):' → logprob: -13.891145706176758

Token 18: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5607829093933105
    2. '   ' → logprob: -1.5607829093933105
    3. '    ' → logprob: -2.4357829093933105
    4. ' ' → logprob: -2.8107829093933105
    5. '       ' → logprob: -3.4357829093933105
    6. ' :' → logprob: -4.3107829093933105
    7. ' if' → logprob: -5.3107829093933105
    8. '  ' → logprob: -5.4357829093933105
    9. ':
' → logprob: -6.4357829093933105
    10. '():' → logprob: -6.5607829093933105

Token 19: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3904939889907837
    2. '       ' → logprob: -1.6404939889907837
    3. 'd' → logprob: -2.390493869781494
    4. ' try' → logprob: -2.515493869781494
    5. ' d' → logprob: -2.765493869781494
    6. 'n' → logprob: -2.890493869781494
    7. '   ' → logprob: -3.265493869781494
    8. '    ' → logprob: -3.515493869781494
    9. ' ' → logprob: -3.640493869781494
    10. ' n' → logprob: -3.890493869781494

Token 20: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.1576417088508606
    2. ' not' → logprob: -2.407641649246216
    3. ' c' → logprob: -3.657641649246216
    4. 'D' → logprob: -3.782641649246216
    5. 'c' → logprob: -5.657641887664795
    6. ' ' → logprob: -6.157641887664795
    7. 'not' → logprob: -7.782641887664795
    8. '(' → logprob: -8.032641410827637
    9. ' (' → logprob: -8.157641410827637
    10. '  ' → logprob: -8.532641410827637

Token 21: '%' (ID: 4)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2599511742591858
    2. '[c' → logprob: -1.509951114654541
    3. '==' → logprob: -6.134951114654541
    4. '>' → logprob: -6.259951114654541
    5. '[D' → logprob: -7.509951114654541
    6. '[i' → logprob: -8.1349515914917
    7. ':' → logprob: -8.1349515914917
    8. '.get' → logprob: -8.2599515914917
    9. '['' → logprob: -8.7599515914917
    10. '[]' → logprob: -8.7599515914917

Token 22: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.045945677906274796
    2. '10' → logprob: -3.670945644378662
    3. '3' → logprob: -4.670945644378662
    4. '5' → logprob: -5.670945644378662
    5. '7' → logprob: -5.795945644378662
    6. '4' → logprob: -7.045945644378662
    7. 'c' → logprob: -7.420945644378662
    8. '100' → logprob: -7.545945644378662
    9. ' ' → logprob: -8.04594612121582
    10. '6' → logprob: -8.17094612121582

Token 23: ':' (ID: 25)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.49571138620376587
    2. ' ==' → logprob: -0.9957113862037659
    3. ' !=' → logprob: -4.245711326599121
    4. '!=' → logprob: -4.995711326599121
    5. ' ' → logprob: -9.120711326599121
    6. ':' → logprob: -9.120711326599121
    7. '=' → logprob: -10.245711326599121
    8. '>' → logprob: -11.620711326599121
    9. ' or' → logprob: -11.745711326599121
    10. ' and' → logprob: -11.995711326599121

Token 24: 'break' (ID: 15354)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8533732295036316
    2. ' ' → logprob: -1.7283732891082764
    3. '        ' → logprob: -1.7283732891082764
    4. '       ' → logprob: -2.3533732891082764
    5. '            ' → logprob: -2.6033732891082764
    6. '0' → logprob: -4.978373050689697
    7. '    ' → logprob: -4.978373050689697
    8. '   ' → logprob: -5.228373050689697
    9. ' return' → logprob: -5.353373050689697
    10. ' continue' → logprob: -5.353373050689697

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2629413306713104
    2. '
' → logprob: -2.012941360473633
    3. '\n' → logprob: -3.512941360473633
    4. '
' → logprob: -4.762941360473633
    5. '        
' → logprob: -4.887941360473633
    6. '    ' → logprob: -5.012941360473633
    7. ' ' → logprob: -5.137941360473633
    8. '   ' → logprob: -5.137941360473633
    9. '\' → logprob: -5.387941360473633
    10. '        ' → logprob: -5.512941360473633

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13611888885498047
    2. '        
' → logprob: -3.5111188888549805
    3. '   ' → logprob: -4.3861188888549805
    4. '
' → logprob: -4.3861188888549805
    5. '    ' → logprob: -4.6361188888549805
    6. '        ' → logprob: -4.7611188888549805
    7. '\n' → logprob: -5.3861188888549805
    8. ' else' → logprob: -5.3861188888549805
    9. ' ' → logprob: -5.5111188888549805
    10. '0' → logprob: -5.5111188888549805

Token 27: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.140623927116394
    2. 'D' → logprob: -1.265623927116394
    3. '       ' → logprob: -1.890623927116394
    4. 'd' → logprob: -2.7656240463256836
    5. 'c' (adapté à ' c') → logprob: -3.1406240463256836
    6. ' D' → logprob: -3.5156240463256836
    7. ' c' → logprob: -3.5156240463256836
    8. '    ' → logprob: -3.8906240463256836
    9. '```' → logprob: -3.8906240463256836
    10. '``' → logprob: -4.390624046325684

Token 28: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14374588429927826
    2. ' +=' → logprob: -2.0187458992004395
    3. '+' → logprob: -7.1437458992004395
    4. '=' → logprob: -8.268745422363281
    5. '+='' → logprob: -11.893745422363281
    6. ' +' → logprob: -12.518745422363281
    7. '+="' → logprob: -12.643745422363281
    8. ']+=' → logprob: -12.893745422363281
    9. '+=(' → logprob: -12.893745422363281
    10. ' =' → logprob: -13.143745422363281

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005674490821547806
    2. ' ' → logprob: -7.750567436218262
    3. '2' → logprob: -9.375567436218262
    4. '4' → logprob: -10.000567436218262
    5. 'D' → logprob: -12.375567436218262
    6. '   ' → logprob: -14.625567436218262
    7. '0' → logprob: -14.875567436218262
    8. ' D' → logprob: -15.125567436218262
    9. '+' → logprob: -15.375567436218262
    10. '3' → logprob: -15.375567436218262

Token 30: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0638152360916138
    2. 'D' → logprob: -1.9388152360916138
    3. '*' → logprob: -2.063815116882324
    4. ' 
' → logprob: -2.688815116882324
    5. '    ' → logprob: -2.688815116882324
    6. ' D' → logprob: -2.938815116882324
    7. '    
' → logprob: -3.188815116882324
    8. ' ' → logprob: -3.313815116882324
    9. '       ' → logprob: -4.063815116882324
    10. 'd' → logprob: -4.188815116882324

Token 31: 'D' (ID: 35)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.6776896119117737
    2. '       ' → logprob: -1.177689552307129
    3. 'D' → logprob: -1.927689552307129
    4. '   ' → logprob: -3.552689552307129
    5. ' ' → logprob: -5.427689552307129
    6. '```' → logprob: -6.677689552307129
    7. '    ' → logprob: -6.802689552307129
    8. '        ' → logprob: -7.302689552307129
    9. 'd' → logprob: -7.802689552307129
    10. ' ' → logprob: -7.927689552307129

Token 32: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.09760027378797531
    2. '=' → logprob: -2.722600221633911
    3. '/=' → logprob: -3.722600221633911
    4. '=D' → logprob: -6.47260046005249
    5. ' =' → logprob: -7.84760046005249
    6. '/' → logprob: -7.97260046005249
    7. ' /=' → logprob: -8.472599983215332
    8. '>>' → logprob: -8.722599983215332
    9. '//' → logprob: -8.847599983215332
    10. 'D' → logprob: -8.847599983215332

Token 33: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.165027217415627e-05
    2. '2' → logprob: -11.125021934509277
    3. ' ' → logprob: -12.750021934509277
    4. '   ' → logprob: -12.750021934509277
    5. '```' → logprob: -14.000021934509277
    6. '  ' → logprob: -17.00002098083496
    7. '' → logprob: -17.37502098083496
    8. '1' → logprob: -17.87502098083496
    9. '>' → logprob: -17.93752098083496
    10. '    ' → logprob: -18.25002098083496

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14841319620609283
    2. '<|end|>' → logprob: -2.3984131813049316
    3. ' ' → logprob: -3.5234131813049316
    4. '    ' → logprob: -5.148413181304932
    5. ' 
' → logprob: -5.523413181304932
    6. ' return' → logprob: -6.273413181304932
    7. '  ' → logprob: -6.773413181304932
    8. 'return' → logprob: -6.898413181304932
    9. '       ' → logprob: -7.398413181304932
    10. '    
' → logprob: -7.523413181304932

Token 37: ' D' (ID: 415)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.02309650182723999
    2. ' D' → logprob: -4.523096561431885
    3. 'c' → logprob: -4.648096561431885
    4. ' not' → logprob: -6.898096561431885
    5. 'D' → logprob: -7.898096561431885
    6. ' (' → logprob: -8.148096084594727
    7. '(' → logprob: -8.273096084594727
    8. ' ' → logprob: -8.398096084594727
    9. ' C' → logprob: -9.773096084594727
    10. '(c' → logprob: -9.898096084594727

Token 38: '%' (ID: 4)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6109395623207092
    2. '%' → logprob: -0.8609395623207092
    3. ' ==' → logprob: -4.3609395027160645
    4. '>' → logprob: -4.4859395027160645
    5. '!=' → logprob: -5.6109395027160645
    6. '<' → logprob: -6.3609395027160645
    7. '&' → logprob: -6.6109395027160645
    8. ' %' → logprob: -6.8609395027160645
    9. '<=' → logprob: -7.1109395027160645
    10. ' in' → logprob: -7.8609395027160645

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7341322898864746
    2. '3' → logprob: -1.4841322898864746
    3. '8' → logprob: -1.8591322898864746
    4. '4' → logprob: -2.2341322898864746
    5. '7' → logprob: -4.984132289886475
    6. '16' → logprob: -5.234132289886475
    7. '6' → logprob: -5.859132289886475
    8. '1' → logprob: -6.109132289886475
    9. ' ' → logprob: -6.109132289886475
    10. '400' → logprob: -6.109132289886475

Token 40: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1704408824443817
    2. ':' → logprob: -1.920440912246704
    3. '!=' → logprob: -5.045440673828125
    4. ' ==' → logprob: -5.795440673828125
    5. ':return' → logprob: -8.545440673828125
    6. ' :' → logprob: -8.670440673828125
    7. '=' → logprob: -8.920440673828125
    8. ' !=' → logprob: -9.795440673828125
    9. ' or' → logprob: -10.670440673828125
    10. ' and' → logprob: -10.795440673828125

Token 41: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03029453754425049
    2. '1' → logprob: -3.530294418334961
    3. ' ' → logprob: -7.530294418334961
    4. '=' → logprob: -11.905294418334961
    5. '==' → logprob: -15.842794418334961
    6. '۰' → logprob: -16.34279441833496
    7. '   ' → logprob: -16.59279441833496
    8. '```' → logprob: -16.78029441833496
    9. '  ' → logprob: -16.96779441833496
    10. ':' → logprob: -16.96779441833496

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14162540435791016
    2. ':return' → logprob: -2.14162540435791
    3. ' :' → logprob: -4.26662540435791
    4. ' and' → logprob: -8.01662540435791
    5. ':
' → logprob: -8.89162540435791
    6. ' return' → logprob: -10.26662540435791
    7. ' or' → logprob: -10.51662540435791
    8. ' :
' → logprob: -11.64162540435791
    9. ':def' → logprob: -12.14162540435791
    10. '   ' → logprob: -12.26662540435791

Token 43: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.724315881729126
    2. '       ' → logprob: -1.474315881729126
    3. ' c' → logprob: -1.849315881729126
    4. '    ' → logprob: -2.599315881729126
    5. ' ' → logprob: -3.724315881729126
    6. '   ' → logprob: -3.974315881729126
    7. 'c' → logprob: -5.724315643310547
    8. 'return' → logprob: -5.849315643310547
    9. '<|end|>' → logprob: -5.974315643310547
    10. ':return' → logprob: -7.474315643310547

Token 44: ' def' (ID: 1056)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.862167239189148
    2. ' return' → logprob: -0.987167239189148
    3. 'c' → logprob: -1.987167239189148
    4. 'return' → logprob: -2.7371673583984375
    5. '   ' → logprob: -6.3621673583984375
    6. '       ' → logprob: -7.1121673583984375
    7. '    ' → logprob: -7.8621673583984375
    8. ' ' → logprob: -8.612167358398438
    9. ' continue' → logprob: -10.862167358398438
    10. '```' → logprob: -10.924667358398438

Token 45: ' fst' (ID: 160587)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6113043427467346
    2. ' judge' → logprob: -0.8613043427467346
    3. ' c' → logprob: -4.36130428314209
    4. ' return' → logprob: -5.73630428314209
    5. ' f' → logprob: -6.11130428314209
    6. ' ' → logprob: -6.11130428314209
    7. '_' → logprob: -6.36130428314209
    8. ' D' → logprob: -6.61130428314209
    9. ' def' → logprob: -6.73630428314209
    10. ' j' → logprob: -6.86130428314209

Token 46: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09412829577922821
    2. '(n' → logprob: -3.469128370285034
    3. ' (' → logprob: -4.594128131866455
    4. '(x' → logprob: -4.719128131866455
    5. '(D' → logprob: -4.969128131866455
    6. '(a' → logprob: -4.969128131866455
    7. '(f' → logprob: -4.969128131866455
    8. '_' → logprob: -5.969128131866455
    9. '():' → logprob: -6.094128131866455
    10. '(d' → logprob: -6.469128131866455

Token 47: ',y' (ID: 16103)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003283232916146517
    2. ',' → logprob: -6.5032830238342285
    3. ' ):' → logprob: -7.1282830238342285
    4. ')' → logprob: -7.8782830238342285
    5. '   ' → logprob: -8.753283500671387
    6. ':' → logprob: -8.753283500671387
    7. '):
' → logprob: -9.253283500671387
    8. '=' → logprob: -10.003283500671387
    9. ' ,' → logprob: -10.503283500671387
    10. '       ' → logprob: -10.753283500671387

Token 48: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012280851369723678
    2. ':' → logprob: -7.501227855682373
    3. ')' → logprob: -8.126228332519531
    4. ',' → logprob: -8.251228332519531
    5. ' ):' → logprob: -10.251228332519531
    6. '):
' → logprob: -10.876228332519531
    7. '=' → logprob: -11.376228332519531
    8. '   ' → logprob: -11.751228332519531
    9. ':return' → logprob: -12.001228332519531
    10. ',x' → logprob: -12.251228332519531

Token 49: 'return' (ID: 1034)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6091412305831909
    2. ' return' → logprob: -1.609141230583191
    3. ' ' → logprob: -1.984141230583191
    4. '<|end|>' → logprob: -3.1091413497924805
    5. '       ' → logprob: -3.7341413497924805
    6. '   ' → logprob: -3.8591413497924805
    7. ' x' → logprob: -5.2341413497924805
    8. 'return' → logprob: -5.7341413497924805
    9. ' *' → logprob: -5.8591413497924805
    10. ' (' → logprob: -6.1091413497924805

Token 50: ' ~' (ID: 6574)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2299952656030655
    2. ' x' → logprob: -1.9799952507019043
    3. 'y' → logprob: -3.3549952507019043
    4. ' y' → logprob: -3.6049952507019043
    5. '1' → logprob: -6.354995250701904
    6. '0' → logprob: -6.979995250701904
    7. ' ' → logprob: -7.354995250701904
    8. '(x' → logprob: -8.104995727539062
    9. 'True' → logprob: -8.104995727539062
    10. '2' → logprob: -8.354995727539062

Token 51: '((' (ID: 2054)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0391409732401371
    2. '(x' → logprob: -3.5391409397125244
    3. '(' → logprob: -5.0391411781311035
    4. 'y' → logprob: -7.1641411781311035
    5. '((' → logprob: -7.5391411781311035
    6. ' x' → logprob: -7.9141411781311035
    7. '0' → logprob: -8.164140701293945
    8. '(~' → logprob: -8.414140701293945
    9. ' (' → logprob: -8.664140701293945
    10. '-' → logprob: -9.289140701293945

Token 52: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018555959686636925
    2. 'y' → logprob: -4.643556118011475
    3. '(x' → logprob: -5.893556118011475
    4. '~' → logprob: -6.518556118011475
    5. '1' → logprob: -6.893556118011475
    6. '(' → logprob: -7.018556118011475
    7. ' x' → logprob: -7.393556118011475
    8. 'D' → logprob: -7.768556118011475
    9. '((' → logprob: -7.893556118011475
    10. '(~' → logprob: -8.643555641174316

Token 53: '>>' (ID: 3920)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6630618572235107
    2. '|' → logprob: -1.6630618572235107
    3. '&' → logprob: -2.4130618572235107
    4. '>>' → logprob: -2.9130618572235107
    5. ')' → logprob: -3.4130618572235107
    6. '+y' → logprob: -3.7880618572235107
    7. ' ^' → logprob: -4.03806209564209
    8. '-' → logprob: -4.16306209564209
    9. '^(' → logprob: -4.66306209564209
    10. ' y' → logprob: -4.91306209564209

Token 54: 'c' (ID: 66)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18202440440654755
    2. '1' → logprob: -2.0570244789123535
    3. '63' → logprob: -4.1820244789123535
    4. '31' → logprob: -4.5570244789123535
    5. '2' → logprob: -6.0570244789123535
    6. '0' → logprob: -6.5570244789123535
    7. '7' → logprob: -6.6820244789123535
    8. '3' → logprob: -6.8070244789123535
    9. '(y' → logprob: -7.1820244789123535
    10. ' y' → logprob: -7.1820244789123535

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27688777446746826
    2. ')&' → logprob: -1.7768877744674683
    3. ')^' → logprob: -3.151887893676758
    4. ')|' → logprob: -5.151887893676758
    5. ')|(' → logprob: -5.151887893676758
    6. '&' → logprob: -5.401887893676758
    7. '|' → logprob: -5.651887893676758
    8. ' )' → logprob: -6.026887893676758
    9. ')-' → logprob: -6.276887893676758
    10. '^' → logprob: -6.651887893676758

Token 56: '^(' (ID: 32612)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0364346504211426
    2. ')&' → logprob: -1.5364346504211426
    3. '^' → logprob: -1.6614346504211426
    4. '&' → logprob: -2.2864346504211426
    5. '|' → logprob: -2.9114346504211426
    6. ')^' → logprob: -3.4114346504211426
    7. ')|(' → logprob: -4.786434650421143
    8. '-' → logprob: -5.411434650421143
    9. '^(' → logprob: -5.411434650421143
    10. '+' → logprob: -5.661434650421143

Token 57: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.015328957699239254
    2. ' y' → logprob: -4.265328884124756
    3. '(y' → logprob: -7.890328884124756
    4. 'x' → logprob: -8.390329360961914
    5. '   ' → logprob: -9.265329360961914
    6. ' ' → logprob: -9.515329360961914
    7. '(' → logprob: -10.015329360961914
    8. '  ' → logprob: -10.140329360961914
    9. '~' → logprob: -10.140329360961914
    10. ' (' → logprob: -10.265329360961914

Token 58: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.39630311727523804
    2. ')>>' → logprob: -2.021303176879883
    3. ')' → logprob: -2.396303176879883
    4. '))' → logprob: -2.646303176879883
    5. '&' → logprob: -4.396303176879883
    6. '>>)' → logprob: -5.146303176879883
    7. ')&' → logprob: -5.646303176879883
    8. '>>&' → logprob: -5.646303176879883
    9. ')))' → logprob: -5.771303176879883
    10. ' )' → logprob: -7.521303176879883

Token 59: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013803521869704127
    2. '(c' → logprob: -7.251380443572998
    3. '1' → logprob: -8.00137996673584
    4. '(' → logprob: -8.62637996673584
    5. ' c' → logprob: -10.00137996673584
    6. '0' → logprob: -10.50137996673584
    7. '2' → logprob: -11.25137996673584
    8. ' (' → logprob: -11.37637996673584
    9. ' ' → logprob: -11.37637996673584
    10. 'x' → logprob: -12.00137996673584

Token 60: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13733072578907013
    2. ')' → logprob: -2.1373307704925537
    3. ')))' → logprob: -5.512330532073975
    4. ')&' → logprob: -6.012330532073975
    5. ' ))' → logprob: -6.512330532073975
    6. ' )' → logprob: -7.012330532073975
    7. ' ' → logprob: -7.512330532073975
    8. ')+' → logprob: -8.012331008911133
    9. '))+' → logprob: -9.137331008911133
    10. ')>>' → logprob: -9.387331008911133

Token 61: '&' (ID: 5)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001346423290669918
    2. ' ' → logprob: -7.126346588134766
    3. '(' → logprob: -7.876346588134766
    4. '((' → logprob: -9.126346588134766
    5. '0' → logprob: -11.501346588134766
    6. ' (' → logprob: -11.626346588134766
    7. '-' → logprob: -11.751346588134766
    8. '(((' → logprob: -11.751346588134766
    9. ' ((' → logprob: -12.376346588134766
    10. '3' → logprob: -13.501346588134766

Token 63: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8472838997840881
    2. '   ' → logprob: -0.9722838997840881
    3. ' ' → logprob: -2.7222838401794434
    4. '
' → logprob: -3.5972838401794434
    5. ')' → logprob: -3.8472838401794434
    6. '<|end|>' → logprob: -4.472283840179443
    7. ':' → logprob: -4.597283840179443
    8. '    ' → logprob: -4.847283840179443
    9. '\n' → logprob: -4.847283840179443
    10. '	' → logprob: -5.347283840179443

Token 65: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16381584107875824
    2. ' ' → logprob: -3.03881573677063
    3. '   ' → logprob: -3.03881573677063
    4. ' else' → logprob: -4.163815975189209
    5. '<|end|>' → logprob: -4.538815975189209
    6. 'else' → logprob: -4.913815975189209
    7. ')' → logprob: -6.038815975189209
    8. '    ' → logprob: -6.163815975189209
    9. '  ' → logprob: -6.288815975189209
    10. '           ' → logprob: -6.538815975189209

Token 66: ' fst' (ID: 160587)
  Prédit: 'fst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fst' → logprob: -0.22789043188095093
    2. ' fst' → logprob: -1.6028904914855957
    3. ' ' → logprob: -7.227890491485596
    4. 'lambda' → logprob: -7.602890491485596
    5. ' lambda' → logprob: -7.727890491485596
    6. '   ' → logprob: -9.290390014648438
    7. 'lst' → logprob: -9.540390014648438
    8. '  ' → logprob: -9.602890014648438
    9. 'f' → logprob: -9.727890014648438
    10. ' True' → logprob: -10.415390014648438

Token 67: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2546299695968628
    2. '   ' → logprob: -1.8796299695968628
    3. ' else' → logprob: -3.1296300888061523
    4. 'def' → logprob: -3.7546300888061523
    5. 'return' → logprob: -6.004630088806152
    6. ' ' → logprob: -7.254630088806152
    7. 'elif' → logprob: -7.754630088806152
    8. '<|end|>' → logprob: -7.754630088806152
    9. '       ' → logprob: -8.254630088806152
    10. '  ' → logprob: -8.629630088806152

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24423840641975403
    2. '       ' → logprob: -1.8692383766174316
    3. ':return' → logprob: -4.119238376617432
    4. ' return' → logprob: -4.494238376617432
    5. '    ' → logprob: -4.619238376617432
    6. ':
' → logprob: -4.744238376617432
    7. '        ' → logprob: -4.994238376617432
    8. '        
' → logprob: -5.994238376617432
    9. '   ' → logprob: -6.619238376617432
    10. ' def' → logprob: -6.744238376617432

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08136636018753052
    2. ' return' → logprob: -2.7063663005828857
    3. 'return' → logprob: -5.206366539001465
    4. 'def' → logprob: -5.706366539001465
    5. ' def' → logprob: -6.206366539001465
    6. '    ' → logprob: -8.206366539001465
    7. ' ' → logprob: -9.706366539001465
    8. '   ' → logprob: -9.706366539001465
    9. '           ' → logprob: -10.206366539001465
    10. '```' → logprob: -10.581366539001465

Token 72: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5542532801628113
    2. ' def' → logprob: -1.304253339767456
    3. ' return' → logprob: -2.304253339767456
    4. 'return' (adapté à ' return') → logprob: -2.929253339767456
    5. ' lambda' → logprob: -8.679253578186035
    6. '   ' → logprob: -8.929253578186035
    7. 'lambda' → logprob: -9.179253578186035
    8. '       ' → logprob: -9.429253578186035
    9. 'c' → logprob: -9.991753578186035
    10. 'd' → logprob: -10.241753578186035

Token 73: ' lambda' (ID: 27871)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.42941632866859436
    2. 'None' → logprob: -1.304416298866272
    3. ' lambda' → logprob: -2.8044164180755615
    4. 'lambda' → logprob: -4.304416179656982
    5. ' ' → logprob: -6.804416179656982
    6. '(lambda' → logprob: -6.929416179656982
    7. '  ' → logprob: -8.55441665649414
    8. '(None' → logprob: -8.61691665649414
    9. ' (' → logprob: -8.99191665649414
    10. ' judge' → logprob: -8.99191665649414

Token 74: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7640981674194336
    2. ' ' → logprob: -1.0140981674194336
    3. '0' → logprob: -2.3890981674194336
    4. 'lambda' → logprob: -3.0140981674194336
    5. ' x' → logprob: -4.139098167419434
    6. '(lambda' → logprob: -5.889098167419434
    7. ' (' → logprob: -6.139098167419434
    8. ' False' → logprob: -6.264098167419434
    9. 'False' → logprob: -6.389098167419434
    10. 'x' → logprob: -6.514098167419434

Token 75: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.2154860943555832
    2. ',x' → logprob: -2.4654860496520996
    3. ',' → logprob: -2.5904860496520996
    4. ' x' → logprob: -4.5904860496521
    5. ' ,' → logprob: -4.7154860496521
    6. ' y' → logprob: -5.3404860496521
    7. '&' → logprob: -5.8404860496521
    8. 'x' → logprob: -6.2154860496521
    9. ' ' → logprob: -6.7154860496521
    10. 'y' → logprob: -7.2154860496521

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012356477789580822
    2. ' :' → logprob: -5.512356281280518
    3. ':(' → logprob: -5.512356281280518
    4. ':x' → logprob: -5.512356281280518
    5. ' :(' → logprob: -9.512356758117676
    6. ':not' → logprob: -10.262356758117676
    7. ':y' → logprob: -11.887356758117676
    8. '   ' → logprob: -11.887356758117676
    9. ':return' → logprob: -12.012356758117676
    10. ':int' → logprob: -12.262356758117676

Token 77: '~' (ID: 93)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0061943531036377
    2. '((' → logprob: -1.6311943531036377
    3. ' (' → logprob: -2.1311943531036377
    4. '1' → logprob: -2.2561943531036377
    5. ' ((' → logprob: -3.0061943531036377
    6. '0' → logprob: -3.2561943531036377
    7. 'x' → logprob: -3.3811943531036377
    8. '~' → logprob: -3.6311943531036377
    9. '(((' → logprob: -4.506194114685059
    10. '(' → logprob: -4.631194114685059

Token 78: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011325797066092491
    2. ' ((' → logprob: -5.636325836181641
    3. '(' → logprob: -5.761325836181641
    4. '(((' → logprob: -6.136325836181641
    5. '(x' → logprob: -6.636325836181641
    6. '0' → logprob: -7.636325836181641
    7. 'x' → logprob: -7.886325836181641
    8. ' (' → logprob: -9.01132583618164
    9. ' ' → logprob: -10.38632583618164
    10. '1' → logprob: -10.88632583618164

Token 79: 'x' (ID: 87)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10813099145889282
    2. '(x' → logprob: -2.483130931854248
    3. 'x' → logprob: -4.733130931854248
    4. ' ((' → logprob: -5.483130931854248
    5. '(' → logprob: -5.733130931854248
    6. '(((' → logprob: -6.733130931854248
    7. ' (' → logprob: -6.983130931854248
    8. ' x' → logprob: -8.983131408691406
    9. '(~' → logprob: -9.108131408691406
    10. ' ' → logprob: -9.108131408691406

Token 80: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.03466539457440376
    2. '&' → logprob: -3.53466534614563
    3. '^' → logprob: -5.409665584564209
    4. '|' → logprob: -9.40966510772705
    5. '%' → logprob: -9.53466510772705
    6. '>>(' → logprob: -10.15966510772705
    7. ' >>' → logprob: -10.40966510772705
    8. '%c' → logprob: -10.53466510772705
    9. '&gt' → logprob: -10.78466510772705
    10. ' ' → logprob: -10.90966510772705

Token 81: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.292907877039397e-06
    2. ' c' → logprob: -13.12500286102295
    3. ')c' → logprob: -14.75000286102295
    4. '<|end|>' → logprob: -14.75000286102295
    5. '1' → logprob: -15.37500286102295
    6. '(c' → logprob: -16.375003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '2' → logprob: -17.375003814697266
    9. '0' → logprob: -17.875003814697266
    10. '(' → logprob: -18.000003814697266

Token 82: ')&' (ID: 34370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10611826926469803
    2. ')^' → logprob: -2.8561182022094727
    3. ')&' → logprob: -3.4811182022094727
    4. '^' → logprob: -5.731118202209473
    5. ' ^' → logprob: -5.981118202209473
    6. '^(' → logprob: -6.356118202209473
    7. '&' → logprob: -6.356118202209473
    8. '|' → logprob: -6.856118202209473
    9. ')|(' → logprob: -7.106118202209473
    10. '   ' → logprob: -8.106118202209473

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.625031471252441
    3. '(' → logprob: -12.750031471252441
    4. 'y' → logprob: -12.875031471252441
    5. ' y' → logprob: -14.875031471252441
    6. '0' → logprob: -15.000031471252441
    7. '((' → logprob: -15.500031471252441
    8. ' (' → logprob: -16.500030517578125
    9. '(y' → logprob: -16.687530517578125
    10. '01' → logprob: -16.750030517578125

Token 84: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6086629629135132
    2. '<|end|>' → logprob: -0.9836629629135132
    3. '```' → logprob: -4.108663082122803
    4. '\n' → logprob: -4.358663082122803
    5. '[' → logprob: -4.733663082122803
    6. '#' → logprob: -4.858663082122803
    7. '
' → logprob: -4.858663082122803
    8. ' ' → logprob: -5.108663082122803
    9. '}' → logprob: -5.608663082122803
    10. '(' → logprob: -5.733663082122803

Token 85: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6516435146331787
    2. '<|end|>' → logprob: -1.1516435146331787
    3. '(' → logprob: -3.1516435146331787
    4. '\n' → logprob: -3.2766435146331787
    5. '[' → logprob: -4.151643753051758
    6. '#' → logprob: -4.651643753051758
    7. '```' → logprob: -4.776643753051758
    8. '=' → logprob: -4.901643753051758
    9. '}' → logprob: -5.026643753051758
    10. '\' → logprob: -5.276643753051758

Token 86: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.9429075121879578
    2. ' functools' → logprob: -1.5679075717926025
    3. ' collections' → logprob: -1.8179075717926025
    4. ' random' → logprob: -2.6929075717926025
    5. ' sym' → logprob: -2.8179075717926025
    6. ' numpy' → logprob: -3.1929075717926025
    7. ' math' → logprob: -3.3179075717926025
    8. ' typing' → logprob: -4.317907333374023
    9. ' operator' → logprob: -5.192907333374023
    10. 'collections' → logprob: -5.692907333374023

Token 87: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3929669260978699
    2. 'import' → logprob: -1.1429669857025146
    3. '_import' → logprob: -5.1429667472839355
    4. '<|end|>' → logprob: -9.267967224121094
    5. '	import' → logprob: -9.517967224121094
    6. ' ' → logprob: -11.142967224121094
    7. ' .' → logprob: -11.392967224121094
    8. '_' → logprob: -11.517967224121094
    9. ' ' → logprob: -12.267967224121094
    10. ' imports' → logprob: -12.642967224121094

Token 88: ' partial' (ID: 13664)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.08225512504577637
    2. ' reduce' → logprob: -3.0822551250457764
    3. 'l' → logprob: -3.5822551250457764
    4. ' l' → logprob: -5.3322553634643555
    5. 'r' → logprob: -8.832255363464355
    6. 'cmp' → logprob: -9.457255363464355
    7. 'redu' → logprob: -10.082255363464355
    8. 'partial' → logprob: -10.207255363464355
    9. 'wrap' → logprob: -10.332255363464355
    10. 'cache' → logprob: -10.332255363464355

Token 89: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.559773564338684
    2. 'f' → logprob: -1.684773564338684
    3. 'j' → logprob: -1.809773564338684
    4. 'p' → logprob: -2.3097734451293945
    5. '_' → logprob: -2.4347734451293945
    6. 'partial' → logprob: -3.0597734451293945
    7. 'c' → logprob: -3.6847734451293945
    8. 'd' → logprob: -3.6847734451293945
    9. 'judge' → logprob: -3.9347734451293945
    10. 'D' → logprob: -4.0597734451293945

Token 90: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8643761873245239
    2. 'partial' → logprob: -1.739376187324524
    3. 'reduce' → logprob: -2.6143760681152344
    4. 'f' → logprob: -2.7393760681152344
    5. 'j' → logprob: -3.3643760681152344
    6. 'judge' → logprob: -3.4893760681152344
    7. 'p' → logprob: -3.7393760681152344
    8. '_' → logprob: -3.8643760681152344
    9. 'part' → logprob: -4.114376068115234
    10. 'c' → logprob: -4.239376068115234

Token 91: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0565066933631897
    2. ' =' → logprob: -2.931506633758545
    3. '=int' → logprob: -7.306506633758545
    4. '_' → logprob: -8.056507110595703
    5. '_=' → logprob: -8.181507110595703
    6. ',' → logprob: -8.931507110595703
    7. '=len' → logprob: -10.056507110595703
    8. '(' → logprob: -10.931507110595703
    9. ' ' → logprob: -11.056507110595703
    10. ')' → logprob: -11.181507110595703

Token 92: ' D' (ID: 415)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.19550780951976776
    2. 'K' → logprob: -1.9455077648162842
    3. ' M' → logprob: -4.070508003234863
    4. 'D' → logprob: -5.570508003234863
    5. ' K' → logprob: -5.570508003234863
    6. 'a' → logprob: -5.945508003234863
    7. 'A' → logprob: -6.070508003234863
    8. 'Q' → logprob: -6.445508003234863
    9. 'k' → logprob: -7.570508003234863
    10. '_' → logprob: -7.945508003234863

Token 93: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005240809405222535
    2. ' =' → logprob: -7.875524044036865
    3. '=input' → logprob: -9.000524520874023
    4. '=int' → logprob: -10.875524520874023
    5. '=list' → logprob: -14.125524520874023
    6. ',' → logprob: -15.500524520874023
    7. '=
' → logprob: -15.750524520874023
    8. '=

' → logprob: -16.375524520874023
    9. '=parse' → logprob: -16.750524520874023
    10. '=user' → logprob: -17.000524520874023

Token 94: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03819239139556885
    2. ' =' → logprob: -3.2881922721862793
    3. '=int' → logprob: -9.663192749023438
    4. '=input' → logprob: -9.913192749023438
    5. ',' → logprob: -10.288192749023438
    6. ' ' → logprob: -13.288192749023438
    7. '=

' → logprob: -14.538192749023438
    8. '=list' → logprob: -14.788192749023438
    9. '=
' → logprob: -15.538192749023438
    10. '＝' → logprob: -16.038192749023438

Token 95: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.002919707214459777
    2. ' D' → logprob: -5.877919673919678
    3. 'K' → logprob: -10.002920150756836
    4. 'd' → logprob: -11.002920150756836
    5. 'M' → logprob: -11.127920150756836
    6. 'Q' → logprob: -12.002920150756836
    7. '=' → logprob: -12.127920150756836
    8. ' =' → logprob: -12.502920150756836
    9. '_' → logprob: -12.877920150756836
    10. 'C' → logprob: -13.127920150756836

Token 96: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016724497079849243
    2. '2' → logprob: -4.766724586486816
    3. '1' → logprob: -5.016724586486816
    4. ' =' → logprob: -6.891724586486816
    5. ',' → logprob: -8.141724586486816
    6. '=int' → logprob: -9.641724586486816
    7. '_=' → logprob: -11.266724586486816
    8. '=input' → logprob: -11.266724586486816
    9. '=

' → logprob: -11.516724586486816
    10. '=
' → logprob: -12.141724586486816

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031975586898624897
    2. ' =' → logprob: -5.75319766998291
    3. '=input' → logprob: -10.87819766998291
    4. '=int' → logprob: -14.50319766998291
    5. '=list' → logprob: -15.25319766998291
    6. ',' → logprob: -16.628196716308594
    7. '=

' → logprob: -16.878196716308594
    8. '=
' → logprob: -17.128196716308594
    9. '=user' → logprob: -17.503196716308594
    10. '=line' → logprob: -17.628196716308594

Token 98: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10958664119243622
    2. ' map' → logprob: -2.359586715698242
    3. '10' → logprob: -5.484586715698242
    4. '5' → logprob: -6.609586715698242
    5. ' ' → logprob: -7.234586715698242
    6. '20' → logprob: -7.984586715698242
    7. '100' → logprob: -8.359586715698242
    8. 'input' → logprob: -8.484586715698242
    9. '8' → logprob: -8.484586715698242
    10. '3' → logprob: -8.484586715698242

Token 99: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024788661394268274
    2. '(' → logprob: -6.627479076385498
    3. 'int' → logprob: -6.877479076385498
    4. '(input' → logprob: -10.37747859954834
    5. '<int' → logprob: -10.50247859954834
    6. '<|end|>' → logprob: -10.87747859954834
    7. '(map' → logprob: -11.25247859954834
    8. '[int' → logprob: -12.37747859954834
    9. '(str' → logprob: -12.50247859954834
    10. '(
' → logprob: -12.50247859954834

Token 100: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.007769409101456404
    2. 'input' → logprob: -5.132769584655762
    3. ',' → logprob: -6.632769584655762
    4. '(input' → logprob: -7.882769584655762
    5. ' input' → logprob: -9.007769584655762
    6. '   ' → logprob: -11.257769584655762
    7. '=input' → logprob: -12.257769584655762
    8. '	input' → logprob: -14.007769584655762
    9. '    ' → logprob: -14.007769584655762
    10. ' ,' → logprob: -14.007769584655762

Token 101: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7252845029579476e-05
    2. '()' → logprob: -10.750027656555176
    3. ' ().' → logprob: -12.625027656555176
    4. ')' → logprob: -13.625027656555176
    5. '())' → logprob: -14.375027656555176
    6. '(' → logprob: -14.875027656555176
    7. '.' → logprob: -16.50002670288086
    8. '('').' → logprob: -16.62502670288086
    9. 'split' → logprob: -16.75002670288086
    10. ' .' → logprob: -17.00002670288086

Token 102: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011987409379798919
    2. 'strip' → logprob: -9.125120162963867
    3. 'rstrip' → logprob: -12.250120162963867
    4. '(split' → logprob: -12.750120162963867
    5. ' split' → logprob: -13.000120162963867
    6. 'read' → logprob: -14.750120162963867
    7. ')' → logprob: -15.500120162963867
    8. 'spl' → logprob: -15.625120162963867
    9. '().' → logprob: -17.000120162963867
    10. 's' → logprob: -17.750120162963867

Token 103: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1779068410396576
    2. ')' → logprob: -1.92790687084198
    3. '()' → logprob: -4.0529069900512695
    4. '())
' → logprob: -9.55290699005127
    5. '(' → logprob: -10.05290699005127
    6. '('' → logprob: -11.30290699005127
    7. '(),' → logprob: -11.92790699005127
    8. '().' → logprob: -12.67790699005127
    9. ' )' → logprob: -12.92790699005127
    10. ')
' → logprob: -12.92790699005127

Token 104: 'judge' (ID: 163735)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7489437460899353
    2. 'judge' → logprob: -0.8739437460899353
    3. 'fst' → logprob: -2.99894380569458
    4. 'func' → logprob: -4.87394380569458
    5. 'F' → logprob: -5.12394380569458
    6. ' judge' → logprob: -5.49894380569458
    7. 'check' → logprob: -5.87394380569458
    8. 'D' → logprob: -6.12394380569458
    9. 'get' → logprob: -6.12394380569458
    10. 'cmp' → logprob: -6.49894380569458

Token 105: '1' (ID: 16)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.6342185139656067
    2. '(' → logprob: -0.7592185139656067
    3. '(N' → logprob: -7.759218692779541
    4. '<|end|>' → logprob: -8.259218215942383
    5. '(None' → logprob: -8.509218215942383
    6. '((' → logprob: -8.509218215942383
    7. '```' → logprob: -8.759218215942383
    8. '(
' → logprob: -9.259218215942383
    9. ' (' → logprob: -10.634218215942383
    10. '("("' → logprob: -10.759218215942383

Token 106: ' =' (ID: 314)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.030240291729569435
    2. '(' → logprob: -3.530240297317505
    3. ' =' → logprob: -9.155240058898926
    4. '1' → logprob: -9.280240058898926
    5. '=D' → logprob: -9.530240058898926
    6. '(N' → logprob: -9.905240058898926
    7. ' (' → logprob: -9.905240058898926
    8. '=' → logprob: -10.405240058898926
    9. '((' → logprob: -10.655240058898926
    10. '=(' → logprob: -11.655240058898926

Token 107: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.5795888304710388
    2. 'partial' → logprob: -1.0795888900756836
    3. ' judge' → logprob: -2.7045888900756836
    4. ' partial' → logprob: -3.5795888900756836
    5. 'jud' → logprob: -5.329588890075684
    6. 'part' → logprob: -8.454588890075684
    7. '(part' → logprob: -8.579588890075684
    8. ' ' → logprob: -10.329588890075684
    9. '   ' → logprob: -11.454588890075684
    10. ' juge' → logprob: -11.829588890075684

Token 108: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.250001907348633
    3. ' (' → logprob: -15.000001907348633
    4. '(
' → logprob: -17.125001907348633
    5. '((' → logprob: -17.625001907348633
    6. '(d' → logprob: -17.625001907348633
    7. ' ' → logprob: -18.000001907348633
    8. 'D' → logprob: -18.125001907348633
    9. ')' → logprob: -18.875001907348633
    10. '
' → logprob: -18.875001907348633

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.375015258789062
    3. ')' → logprob: -13.625015258789062
    4. '2' → logprob: -13.750015258789062
    5. '
' → logprob: -14.375015258789062
    6. '_' → logprob: -15.250015258789062
    7. '１' → logprob: -15.937515258789062
    8. '```' → logprob: -16.187515258789062
    9. '

' → logprob: -16.375015258789062
    10. '  ' → logprob: -16.750015258789062

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038091402500867844
    2. ')
' → logprob: -3.2880914211273193
    3. ')
' → logprob: -10.538091659545898
    4. ' )' → logprob: -11.038091659545898
    5. ' )
' → logprob: -12.788091659545898
    6. ')

' → logprob: -12.913091659545898
    7. '),' → logprob: -14.163091659545898
    8. ');' → logprob: -14.788091659545898
    9. ')`
' → logprob: -15.538091659545898
    10. ')#' → logprob: -15.913091659545898

Token 111: 'judge' (ID: 163735)
  Prédit: 'judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.0003386806638445705
    2. ' judge' → logprob: -8.000338554382324
    3. 'jug' → logprob: -14.000338554382324
    4. 'jud' → logprob: -14.125338554382324
    5. 'guess' → logprob: -15.500338554382324
    6. 'Judge' → logprob: -15.625338554382324
    7. 'partial' → logprob: -15.750338554382324
    8. 'jury' → logprob: -16.00033950805664
    9. '
' → logprob: -16.12533950805664
    10. '```' → logprob: -16.12533950805664

Token 112: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10433374345302582
    2. '2' → logprob: -2.3543336391448975
    3. '(' → logprob: -5.604333877563477
    4. '(D' → logprob: -8.729333877563477
    5. '_' → logprob: -9.354333877563477
    6. '<|end|>' → logprob: -9.979333877563477
    7. '```' → logprob: -10.354333877563477
    8. '(j' → logprob: -10.729333877563477
    9. ')' → logprob: -10.979333877563477
    10. '=' → logprob: -10.979333877563477

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327199935913086
    2. '=' → logprob: -1.3132719993591309
    3. '=j' → logprob: -11.563272476196289
    4. '<|end|>' → logprob: -15.063272476196289
    5. '=lambda' → logprob: -15.813272476196289
    6. '＝' → logprob: -16.31327247619629
    7. ' =
' → logprob: -16.56327247619629
    8. ' =)' → logprob: -17.06327247619629
    9. '=create' → logprob: -17.56327247619629
    10. ',' → logprob: -17.93827247619629

Token 114: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.4748612344264984
    2. ' judge' → logprob: -0.9748612642288208
    3. 'partial' → logprob: -7.349861145019531
    4. ' partial' → logprob: -9.474861145019531
    5. 'jud' → logprob: -9.849861145019531
    6. ' juge' → logprob: -12.224861145019531
    7. 'jug' → logprob: -13.474861145019531
    8. ' ' → logprob: -13.849861145019531
    9. 'Judge' → logprob: -14.349861145019531
    10. ' juez' → logprob: -14.849861145019531

Token 115: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -1.5451681974809617e-05
    2. '(' → logprob: -11.375015258789062
    3. 'D' → logprob: -12.750015258789062
    4. ' (' → logprob: -13.875015258789062
    5. '((' → logprob: -16.750015258789062
    6. '(
' → logprob: -17.000015258789062
    7. '(d' → logprob: -17.625015258789062
    8. '2' → logprob: -18.125015258789062
    9. ' ' → logprob: -18.125015258789062
    10. ')(' → logprob: -18.875015258789062

Token 116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.625001907348633
    4. '  ' → logprob: -17.625001907348633
    5. '۲' → logprob: -17.875001907348633
    6. ')' → logprob: -18.000001907348633
    7. '```' → logprob: -18.125001907348633
    8. '-' → logprob: -19.125001907348633
    9. '২' → logprob: -19.312501907348633
    10. ',' → logprob: -19.312501907348633

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -13.750005722045898
    4. '))' → logprob: -15.625005722045898
    5. '),' → logprob: -17.3750057220459
    6. ')

' → logprob: -17.6250057220459
    7. ')#' → logprob: -18.1250057220459
    8. ')add' → logprob: -18.5000057220459
    9. '())' → logprob: -18.6250057220459
    10. ')`' → logprob: -18.6250057220459

Token 118: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4531468152999878
    2. 'def' → logprob: -1.9531468152999878
    3. 'print' → logprob: -2.0781469345092773
    4. 'res' → logprob: -2.5781469345092773
    5. 'count' → logprob: -2.5781469345092773
    6. 'ans' → logprob: -2.7031469345092773
    7. 'result' → logprob: -3.0781469345092773
    8. 'dp' → logprob: -3.3281469345092773
    9. 'answer' → logprob: -3.3281469345092773
    10. 'pairs' → logprob: -4.078146934509277

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.281171053647995
    2. '=' → logprob: -1.4061710834503174
    3. '=[]' → logprob: -11.531170845031738
    4. '=int' → logprob: -12.656170845031738
    5. ' =)' → logprob: -13.531170845031738
    6. ',' → logprob: -14.031170845031738
    7. '=lambda' → logprob: -14.031170845031738
    8. ' =[' → logprob: -14.156170845031738
    9. '＝' → logprob: -14.656170845031738
    10. '=len' → logprob: -14.781170845031738

Token 120: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4316982626914978
    2. ' ' → logprob: -2.0566983222961426
    3. '[' → logprob: -3.0566983222961426
    4. ' [' → logprob: -3.1816983222961426
    5. ' sum' → logprob: -3.3066983222961426
    6. '[]' → logprob: -3.8066983222961426
    7. 'sum' → logprob: -3.9316983222961426
    8. ' []' → logprob: -4.681698322296143
    9. ' partial' → logprob: -4.681698322296143
    10. ' all' → logprob: -4.806698322296143

Token 121: 'lst' (ID: 65430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014199945144355297
    2. ' for' → logprob: -4.264199733734131
    3. 'i' → logprob: -11.264200210571289
    4. '<|end|>' → logprob: -11.389200210571289
    5. 'n' → logprob: -11.639200210571289
    6. 'd' → logprob: -13.764200210571289
    7. 'x' → logprob: -14.139200210571289
    8. '```' → logprob: -14.889200210571289
    9. 'def' → logprob: -15.014200210571289
    10. '	for' → logprob: -15.139200210571289

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22126959264278412
    2. '=' → logprob: -1.9712696075439453
    3. '=[]' → logprob: -2.9712696075439453
    4. '(' → logprob: -5.346269607543945
    5. '.append' → logprob: -6.846269607543945
    6. '=list' → logprob: -7.721269607543945
    7. '=input' → logprob: -7.721269607543945
    8. '=[]
' → logprob: -7.971269607543945
    9. '(range' → logprob: -8.846269607543945
    10. '=[' → logprob: -9.221269607543945

Token 123: ' [(' (ID: 43900)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7325155735015869
    2. '[]' → logprob: -1.482515573501587
    3. '[' → logprob: -1.732515573501587
    4. '[list' → logprob: -2.357515573501587
    5. 'range' → logprob: -4.607515335083008
    6. '[int' → logprob: -5.232515335083008
    7. '[N' → logprob: -6.482515335083008
    8. ' list' → logprob: -6.857515335083008
    9. '[(' → logprob: -6.982515335083008
    10. '[input' → logprob: -7.107515335083008

Token 124: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5095524787902832
    2. '0' → logprob: -1.0095524787902832
    3. 'x' → logprob: -4.509552478790283
    4. '(i' → logprob: -4.759552478790283
    5. ' i' → logprob: -5.884552478790283
    6. 'j' → logprob: -6.009552478790283
    7. '1' → logprob: -6.009552478790283
    8. 'False' → logprob: -7.009552478790283
    9. '(' → logprob: -7.259552478790283
    10. 'N' → logprob: -7.259552478790283

Token 125: ',' (ID: 11)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.19292022287845612
    2. ',' → logprob: -2.067920207977295
    3. ',x' → logprob: -3.067920207977295
    4. ',N' → logprob: -7.442920207977295
    5. ',)' → logprob: -7.567920207977295
    6. ',n' → logprob: -8.067920684814453
    7. ',i' → logprob: -8.442920684814453
    8. ')' → logprob: -9.067920684814453
    9. ',res' → logprob: -9.192920684814453
    10. ' ,' → logprob: -9.317920684814453

Token 126: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13978061079978943
    2. 'x' → logprob: -2.2647805213928223
    3. '0' → logprob: -4.139780521392822
    4. 'N' → logprob: -4.889780521392822
    5. ' y' → logprob: -6.764780521392822
    6. 'i' → logprob: -7.889780521392822
    7. '1' → logprob: -7.889780521392822
    8. ')' → logprob: -8.51478099822998
    9. 'j' → logprob: -8.76478099822998
    10. '(N' → logprob: -9.26478099822998

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008155775256454945
    2. 'for' → logprob: -4.883155822753906
    3. ' for' → logprob: -7.758155822753906
    4. ' )' → logprob: -9.258155822753906
    5. '   ' → logprob: -11.758155822753906
    6. ',' → logprob: -12.383155822753906
    7. ')
' → logprob: -12.508155822753906
    8. 'in' → logprob: -12.883155822753906
    9. ' in' → logprob: -13.258155822753906
    10. ' ' → logprob: -14.133155822753906

Token 128: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25236061215400696
    2. 'for' → logprob: -1.5023605823516846
    3. ' in' → logprob: -7.877360820770264
    4. 'in' → logprob: -10.752360343933105
    5. ')' → logprob: -10.877360343933105
    6. '<|end|>' → logprob: -12.002360343933105
    7. '	for' → logprob: -12.877360343933105
    8. ',' → logprob: -14.127360343933105
    9. '
' → logprob: -14.252360343933105
    10. ' ' → logprob: -14.502360343933105

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6941946744918823
    2. ' x' → logprob: -0.6941946744918823
    3. ' y' → logprob: -7.069194793701172
    4. 'y' → logprob: -9.069194793701172
    5. '_' → logprob: -10.819194793701172
    6. ' range' → logprob: -10.944194793701172
    7. '_x' → logprob: -11.069194793701172
    8. ' ' → logprob: -11.694194793701172
    9. 'range' → logprob: -12.444194793701172
    10. ' in' → logprob: -12.694194793701172

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023305343464016914
    2. 'in' → logprob: -3.7733054161071777
    3. ' ' → logprob: -11.27330493927002
    4. 'range' → logprob: -11.64830493927002
    5. ',' → logprob: -11.77330493927002
    6. 'import' → logprob: -12.02330493927002
    7. '0' → logprob: -12.02330493927002
    8. 'x' → logprob: -12.14830493927002
    9. 'In' → logprob: -13.02330493927002
    10. 's' → logprob: -13.52330493927002

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14271122217178345
    2. ' range' → logprob: -2.0177111625671387
    3. '0' → logprob: -11.267711639404297
    4. ' ' → logprob: -12.142711639404297
    5. 'x' → logprob: -12.642711639404297
    6. ')' → logprob: -12.892711639404297
    7. '   ' → logprob: -13.142711639404297
    8. '(range' → logprob: -13.267711639404297
    9. '
' → logprob: -13.392711639404297
    10. '[' → logprob: -13.892711639404297

Token 132: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.02063414640724659
    2. '(' → logprob: -3.895634174346924
    3. 'N' → logprob: -10.145633697509766
    4. ' (' → logprob: -10.895633697509766
    5. '(n' → logprob: -11.270633697509766
    6. '((' → logprob: -11.770633697509766
    7. '(-' → logprob: -12.395633697509766
    8. '(int' → logprob: -13.395633697509766
    9. '(
' → logprob: -13.520633697509766
    10. '1' → logprob: -14.145633697509766

Token 133: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014478032244369388
    2. 'for' → logprob: -9.250144958496094
    3. '+' → logprob: -10.750144958496094
    4. '   ' → logprob: -11.375144958496094
    5. ' for' → logprob: -11.375144958496094
    6. ' )' → logprob: -12.875144958496094
    7. ',' → logprob: -14.375144958496094
    8. ')
' → logprob: -15.875144958496094
    9. ')]' → logprob: -15.875144958496094
    10. ' +' → logprob: -16.000144958496094

Token 134: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07364746928215027
    2. '2' → logprob: -2.6986474990844727
    3. ' N' → logprob: -6.073647499084473
    4. '1' → logprob: -7.198647499084473
    5. '3' → logprob: -7.948647499084473
    6. ' ' → logprob: -8.698647499084473
    7. '4' → logprob: -10.073647499084473
    8. 'x' → logprob: -10.448647499084473
    9. '(N' → logprob: -10.823647499084473
    10. '5' → logprob: -11.823647499084473

Token 135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011128316400572658
    2. '+' → logprob: -7.001112937927246
    3. ' )' → logprob: -9.626112937927246
    4. 'for' → logprob: -9.751112937927246
    5. '   ' → logprob: -10.501112937927246
    6. ' +' → logprob: -10.501112937927246
    7. ' for' → logprob: -11.501112937927246
    8. ')
' → logprob: -11.751112937927246
    9. ' ' → logprob: -13.376112937927246
    10. ',' → logprob: -14.251112937927246

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05500989779829979
    2. 'for' → logprob: -2.9300098419189453
    3. '   ' → logprob: -9.305009841918945
    4. '	for' → logprob: -11.930009841918945
    5. ',' → logprob: -12.305009841918945
    6. ' ' → logprob: -12.430009841918945
    7. '           ' → logprob: -12.680009841918945
    8. '    ' → logprob: -12.805009841918945
    9. '          ' → logprob: -13.055009841918945
    10. '       ' → logprob: -13.055009841918945

Token 137: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3868839740753174
    2. 'y' → logprob: -1.1368839740753174
    3. '   ' → logprob: -12.261883735656738
    4. ' ' → logprob: -12.761883735656738
    5. '  ' → logprob: -13.136883735656738
    6. '    ' → logprob: -13.261883735656738
    7. '	y' → logprob: -14.136883735656738
    8. 'x' → logprob: -14.886883735656738
    9. '_y' → logprob: -15.886883735656738
    10. ' ' → logprob: -16.136884689331055

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012518009170889854
    2. 'in' → logprob: -4.387517929077148
    3. 'range' → logprob: -12.137517929077148
    4. '<|end|>' → logprob: -13.887517929077148
    5. ' ' → logprob: -14.887517929077148
    6. ')' → logprob: -15.262517929077148
    7. ' range' → logprob: -15.387517929077148
    8. '=' → logprob: -15.512517929077148
    9. 'inthe' → logprob: -15.512517929077148
    10. 'In' → logprob: -16.01251792907715

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3870697021484375
    2. ' range' → logprob: -1.1370697021484375
    3. 'N' → logprob: -9.262069702148438
    4. '(range' → logprob: -9.387069702148438
    5. ' N' → logprob: -12.137069702148438
    6. '[N' → logprob: -12.387069702148438
    7. '(N' → logprob: -12.512069702148438
    8. 'x' → logprob: -12.762069702148438
    9. ' ' → logprob: -14.012069702148438
    10. '(x' → logprob: -14.887069702148438

Token 140: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.013136936351656914
    2. 'N' → logprob: -4.763136863708496
    3. '(' → logprob: -5.638136863708496
    4. '(x' → logprob: -7.513136863708496
    5. '((' → logprob: -8.013136863708496
    6. '2' → logprob: -10.763136863708496
    7. 'x' → logprob: -11.013136863708496
    8. '(n' → logprob: -11.513136863708496
    9. ' (' → logprob: -11.513136863708496
    10. '(M' → logprob: -12.888136863708496

Token 141: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.007723860442638397
    2. ')]' → logprob: -5.007723808288574
    3. ')' → logprob: -7.382723808288574
    4. '2' → logprob: -8.132723808288574
    5. '+' → logprob: -10.507723808288574
    6. ')])' → logprob: -10.507723808288574
    7. ' ' → logprob: -11.382723808288574
    8. ' *' → logprob: -11.632723808288574
    9. ',' → logprob: -12.757723808288574
    10. '*)' → logprob: -13.132723808288574

Token 142: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022181766107678413
    2. '1' → logprob: -6.127218246459961
    3. '(' → logprob: -11.752218246459961
    4. ' ' → logprob: -11.877218246459961
    5. '3' → logprob: -11.877218246459961
    6. 'N' → logprob: -11.877218246459961
    7. '0' → logprob: -13.377218246459961
    8. '(N' → logprob: -13.877218246459961
    9. '4' → logprob: -14.877218246459961
    10. 'x' → logprob: -15.127218246459961

Token 143: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006031917873769999
    2. ']' → logprob: -8.125602722167969
    3. ')' → logprob: -8.250602722167969
    4. ' if' → logprob: -10.625602722167969
    5. 'if' → logprob: -11.250602722167969
    6. ' )' → logprob: -13.250602722167969
    7. '}]' → logprob: -13.750602722167969
    8. '):' → logprob: -14.125602722167969
    9. ')],' → logprob: -14.125602722167969
    10. ')]
' → logprob: -14.250602722167969

Token 144: 'class' (ID: 1444)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00035155098885297775
    2. ' for' → logprob: -8.250351905822754
    3. 'res' → logprob: -9.500351905822754
    4. ')' → logprob: -12.125351905822754
    5. '
' → logprob: -12.625351905822754
    6. '```' → logprob: -13.875351905822754
    7. 'def' → logprob: -14.000351905822754
    8. 'result' → logprob: -14.125351905822754
    9. '<|end|>' → logprob: -14.500351905822754
    10. '[' → logprob: -14.625351905822754

Token 145: ' Selector' (ID: 100513)
  Prédit: ' Judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Judge' → logprob: -0.7448825836181641
    2. ' Game' → logprob: -1.494882583618164
    3. ' Solution' → logprob: -2.869882583618164
    4. ' A' → logprob: -3.619882583618164
    5. ' Bit' → logprob: -3.744882583618164
    6. ' ' → logprob: -3.994882583618164
    7. ' Node' → logprob: -4.119882583618164
    8. ' Checker' → logprob: -4.244882583618164
    9. ' Trie' → logprob: -4.494882583618164
    10. ' Solver' → logprob: -4.619882583618164

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00682050921022892
    2. ':
' → logprob: -5.0068206787109375
    3. '(object' → logprob: -9.256820678710938
    4. ':def' → logprob: -12.506820678710938
    5. '():' → logprob: -13.131820678710938
    6. ':

' → logprob: -13.881820678710938
    7. ' :' → logprob: -14.131820678710938
    8. '(' → logprob: -14.131820678710938
    9. ':
' → logprob: -15.131820678710938
    10. '():
' → logprob: -15.256820678710938

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5816647410392761
    2. ' def' → logprob: -0.8316647410392761
    3. 'def' → logprob: -6.581664562225342
    4. '    
' → logprob: -6.581664562225342
    5. '	def' → logprob: -6.831664562225342
    6. ' indentation' → logprob: -7.456664562225342
    7. '
' → logprob: -8.0816650390625
    8. '    ' → logprob: -8.3316650390625
    9. '```' → logprob: -8.7066650390625
    10. '<|end|>' → logprob: -9.3316650390625

Token 148: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10198143869638443
    2. '   ' → logprob: -2.3519814014434814
    3. 'def' (adapté à ' def') → logprob: -6.3519816398620605
    4. ' __' → logprob: -11.226981163024902
    5. '    ' → logprob: -12.351981163024902
    6. '```' → logprob: -12.851981163024902
    7. ' ' → logprob: -13.101981163024902
    8. '	def' → logprob: -13.601981163024902
    9. ' indentation' → logprob: -13.601981163024902
    10. ' ind' → logprob: -13.726981163024902

Token 149: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0048559848219156265
    2. '__' → logprob: -5.379856109619141
    3. 'init' → logprob: -9.75485610961914
    4. ' init' → logprob: -10.00485610961914
    5. ' ___' → logprob: -10.37985610961914
    6. ' ' → logprob: -10.50485610961914
    7. ' int' → logprob: -10.75485610961914
    8. ' bool' → logprob: -11.00485610961914
    9. ' _' → logprob: -11.37985610961914
    10. '___' → logprob: -12.12985610961914

Token 150: 'call' (ID: 9925)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.696889623621246e-06
    2. 'call' → logprob: -13.37500286102295
    3. 'eq' → logprob: -15.00000286102295
    4. 'new' → logprob: -15.37500286102295
    5. ' init' → logprob: -15.87500286102295
    6. 'ini' → logprob: -15.87500286102295
    7. 'next' → logprob: -16.250001907348633
    8. 'iter' → logprob: -16.250001907348633
    9. 'get' → logprob: -17.000001907348633
    10. 'int' → logprob: -18.000001907348633

Token 151: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00011188744247192517
    2. '__' → logprob: -9.12511157989502
    3. '__(
' → logprob: -13.37511157989502
    4. '(self' → logprob: -14.37511157989502
    5. '_(' → logprob: -14.75011157989502
    6. '__((' → logprob: -14.75011157989502
    7. '___' → logprob: -17.125112533569336
    8. '__('' → logprob: -17.375112533569336
    9. '__[' → logprob: -18.500112533569336
    10. '__(*' → logprob: -18.625112533569336

Token 152: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2233183042553719e-05
    2. '   ' → logprob: -12.000012397766113
    3. ' self' → logprob: -12.500012397766113
    4. 's' → logprob: -13.250012397766113
    5. '
' → logprob: -15.625012397766113
    6. ',' → logprob: -16.000011444091797
    7. '       ' → logprob: -16.125011444091797
    8. ')' → logprob: -16.500011444091797
    9. 'cls' → logprob: -17.500011444091797
    10. 'x' → logprob: -17.750011444091797

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001604248071089387
    2. ',self' → logprob: -7.376604080200195
    3. ' ,' → logprob: -7.501604080200195
    4. ',x' → logprob: -8.501604080200195
    5. ',s' → logprob: -9.251604080200195
    6. 'self' → logprob: -9.376604080200195
    7. ',index' → logprob: -11.751604080200195
    8. ',line' → logprob: -12.376604080200195
    9. ',y' → logprob: -12.876604080200195
    10. ',row' → logprob: -13.001604080200195

Token 154: ' func' (ID: 4660)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04752393066883087
    2. ' self' → logprob: -3.5475239753723145
    3. 'x' → logprob: -4.5475239753723145
    4. 'lst' → logprob: -5.5475239753723145
    5. 'a' → logprob: -7.6725239753723145
    6. ' x' → logprob: -7.9225239753723145
    7. 'idx' → logprob: -8.172523498535156
    8. 'index' → logprob: -8.422523498535156
    9. 's' → logprob: -8.547523498535156
    10. ' lst' → logprob: -8.672523498535156

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003676324849948287
    2. ' ,' → logprob: -9.250367164611816
    3. '):' → logprob: -9.375367164611816
    4. ',self' → logprob: -10.000367164611816
    5. ',x' → logprob: -10.000367164611816
    6. 'self' → logprob: -10.125367164611816
    7. '   ' → logprob: -11.000367164611816
    8. ',args' → logprob: -11.750367164611816
    9. ',y' → logprob: -12.125367164611816
    10. '       ' → logprob: -12.125367164611816

Token 156: ' seq' (ID: 26775)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5664679408073425
    2. '*' → logprob: -2.1914680004119873
    3. 'args' → logprob: -2.4414680004119873
    4. 'arr' → logprob: -2.9414680004119873
    5. ' lst' → logprob: -3.9414680004119873
    6. 'data' → logprob: -4.191467761993408
    7. 'items' → logprob: -4.441467761993408
    8. ' *' → logprob: -4.566467761993408
    9. 'seq' → logprob: -4.691467761993408
    10. 'arg' → logprob: -4.941467761993408

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4772111773490906
    2. ',' → logprob: -1.6022112369537354
    3. '):
' → logprob: -1.7272112369537354
    4. '):
' → logprob: -9.102210998535156
    5. '):

' → logprob: -9.977210998535156
    6. '   ' → logprob: -10.102210998535156
    7. ')' → logprob: -10.477210998535156
    8. ':' → logprob: -11.977210998535156
    9. ' ,' → logprob: -12.227210998535156
    10. '=None' → logprob: -12.352210998535156

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006349971517920494
    2. ':' → logprob: -7.625635147094727
    3. ',' → logprob: -10.125635147094727
    4. ' return' → logprob: -10.500635147094727
    5. '[]' → logprob: -11.125635147094727
    6. ' for' → logprob: -11.375635147094727
    7. '=' → logprob: -11.625635147094727
    8. '        
' → logprob: -11.750635147094727
    9. '[' → logprob: -12.250635147094727
    10. '<|end|>' → logprob: -12.375635147094727

Token 159: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6241709589958191
    2. 'return' → logprob: -1.8741710186004639
    3. ' return' → logprob: -1.8741710186004639
    4. '       ' → logprob: -2.749171018600464
    5. 'for' (adapté à ' for') → logprob: -3.499171018600464
    6. 'result' → logprob: -3.874171018600464
    7. ' res' → logprob: -3.999171018600464
    8. ' result' → logprob: -4.249170780181885
    9. 'res' → logprob: -5.124170780181885
    10. 'ret' → logprob: -6.624170780181885

Token 160: ' p' (ID: 275)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.5882059335708618
    2. ' item' → logprob: -0.9632059335708618
    3. 'x' → logprob: -4.088205814361572
    4. 'elem' → logprob: -4.338205814361572
    5. ' x' → logprob: -4.838205814361572
    6. 'v' → logprob: -5.213205814361572
    7. ' elem' → logprob: -5.463205814361572
    8. 'i' → logprob: -5.963205814361572
    9. ' v' → logprob: -6.088205814361572
    10. ' i' → logprob: -6.213205814361572

Token 161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013338132994249463
    2. 'in' → logprob: -6.751333713531494
    3. 'er' → logprob: -10.376334190368652
    4. ' ' → logprob: -10.501334190368652
    5. 'r' → logprob: -11.126334190368652
    6. 'ython' → logprob: -11.501334190368652
    7. '   ' → logprob: -11.501334190368652
    8. 'ro' → logprob: -11.501334190368652
    9. 'p' → logprob: -11.876334190368652
    10. 'art' → logprob: -12.001334190368652

Token 162: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.0006588232354260981
    2. ' seq' → logprob: -7.375658988952637
    3. '(seq' → logprob: -11.250658988952637
    4. 'range' → logprob: -12.000658988952637
    5. 'lst' → logprob: -12.750658988952637
    6. 'p' → logprob: -12.750658988952637
    7. 'list' → logprob: -13.625658988952637
    8. 'filter' → logprob: -13.750658988952637
    9. '[' → logprob: -13.875658988952637
    10. 'map' → logprob: -14.000658988952637

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10099758207798004
    2. ':
' → logprob: -2.3509976863861084
    3. '           ' → logprob: -7.225997447967529
    4. ',' → logprob: -10.600997924804688
    5. ' :' → logprob: -11.600997924804688
    6. ' =' → logprob: -12.100997924804688
    7. '       ' → logprob: -12.600997924804688
    8. '[' → logprob: -12.725997924804688
    9. ':

' → logprob: -12.725997924804688
    10. ':return' → logprob: -12.975997924804688

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019343505846336484
    2. ':' → logprob: -6.87693452835083
    3. ' if' → logprob: -7.75193452835083
    4. '
' → logprob: -8.501934051513672
    5. ':
' → logprob: -9.376934051513672
    6. ',' → logprob: -9.876934051513672
    7. '            
' → logprob: -9.876934051513672
    8. ' =' → logprob: -11.751934051513672
    9. '          ' → logprob: -11.876934051513672
    10. ' :' → logprob: -11.876934051513672

Token 165: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16448472440242767
    2. ' yield' → logprob: -2.789484739303589
    3. 'if' (adapté à ' if') → logprob: -3.539484739303589
    4. '           ' → logprob: -3.539484739303589
    5. 'yield' → logprob: -4.16448450088501
    6. '               ' → logprob: -4.28948450088501
    7. '            ' → logprob: -6.78948450088501
    8. ' return' → logprob: -7.03948450088501
    9. 'return' → logprob: -8.414484977722168
    10. 'result' → logprob: -8.789484977722168

Token 166: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.6849653124809265
    2. ' func' → logprob: -0.9349653124809265
    3. ' not' → logprob: -2.4349653720855713
    4. 'not' → logprob: -4.184965133666992
    5. '   ' → logprob: -8.559965133666992
    6. '(func' → logprob: -8.809965133666992
    7. '	func' → logprob: -10.184965133666992
    8. ' ' → logprob: -10.309965133666992
    9. '    ' → logprob: -11.372465133666992
    10. 'fun' → logprob: -11.934965133666992

Token 167: '(*' (ID: 9000)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0028824990149587393
    2. '(' → logprob: -6.377882480621338
    3. '(*' → logprob: -6.752882480621338
    4. ' (' → logprob: -11.877882957458496
    5. '((' → logprob: -13.627882957458496
    6. '(
' → logprob: -14.002882957458496
    7. ')' → logprob: -14.377882957458496
    8. '(*(' → logprob: -14.502882957458496
    9. 'p' → logprob: -14.627882957458496
    10. '()' → logprob: -15.127882957458496

Token 168: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4974866644479334e-05
    2. ' p' → logprob: -11.125015258789062
    3. ')p' → logprob: -16.000015258789062
    4. ')' → logprob: -16.875015258789062
    5. '           ' → logprob: -17.500015258789062
    6. '(p' → logprob: -18.250015258789062
    7. '   ' → logprob: -18.375015258789062
    8. '*p' → logprob: -18.875015258789062
    9. '
' → logprob: -19.250015258789062
    10. '[p' → logprob: -19.875015258789062

Token 169: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38711676001548767
    2. '):
' → logprob: -1.13711678981781
    3. ')' → logprob: -9.137116432189941
    4. ')==' → logprob: -9.387116432189941
    5. '):
' → logprob: -11.012116432189941
    6. ' ):' → logprob: -11.137116432189941
    7. ' ):
' → logprob: -11.512116432189941
    8. '           ' → logprob: -12.262116432189941
    9. '):

' → logprob: -12.762116432189941
    10. '       ' → logprob: -13.137116432189941

Token 170: 'yield' (ID: 68396)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05247320234775543
    2. ' return' → logprob: -3.052473306655884
    3. 'return' → logprob: -5.677473068237305
    4. '
' → logprob: -8.052473068237305
    5. ' res' → logprob: -10.302473068237305
    6. ' 
' → logprob: -10.927473068237305
    7. '                   ' → logprob: -11.052473068237305
    8. '                
' → logprob: -11.302473068237305
    9. 'res' → logprob: -11.427473068237305
    10. '           ' → logprob: -11.427473068237305

Token 171: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1269284337759018
    2. ' p' → logprob: -2.1269283294677734
    3. '(p' → logprob: -15.626928329467773
    4. ' ' → logprob: -16.501928329467773
    5. '*p' → logprob: -16.501928329467773
    6. ' ' → logprob: -17.251928329467773
    7. 'x' → logprob: -17.626928329467773
    8. '
' → logprob: -17.876928329467773
    9. '           ' → logprob: -18.001928329467773
    10. '    ' → logprob: -18.251928329467773

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7027941942214966
    2. 'def' → logprob: -1.5777941942214966
    3. '<|end|>' → logprob: -1.5777941942214966
    4. '
' → logprob: -3.077794075012207
    5. '    
' → logprob: -4.577794075012207
    6. '       ' → logprob: -4.952794075012207
    7. '<|end|>' → logprob: -4.952794075012207
    8. 's' → logprob: -5.077794075012207
    9. 'class' → logprob: -5.952794075012207
    10. '        
' → logprob: -6.077794075012207

Token 173: 'selector' (ID: 20199)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36595138907432556
    2. '<|end|>' → logprob: -1.865951418876648
    3. '
' → logprob: -2.6159512996673584
    4. 'def' → logprob: -2.7409512996673584
    5. '    
' → logprob: -4.9909515380859375
    6. '<|end|>' → logprob: -6.3659515380859375
    7. '       ' → logprob: -6.8659515380859375
    8. 'class' → logprob: -6.8659515380859375
    9. '        
' → logprob: -7.1159515380859375
    10. ' def' → logprob: -7.7409515380859375

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37754249572753906
    2. '.' → logprob: -2.002542495727539
    3. ' =' → logprob: -2.002542495727539
    4. '().' → logprob: -4.127542495727539
    5. '()' → logprob: -4.252542495727539
    6. '(' → logprob: -4.502542495727539
    7. '.=' → logprob: -6.627542495727539
    8. '()(' → logprob: -7.627542495727539
    9. '().__' → logprob: -8.127542495727539
    10. '.(' → logprob: -8.377542495727539

Token 175: ' Selector' (ID: 100513)
  Prédit: 'Selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -0.02975083328783512
    2. ' Selector' → logprob: -3.5297508239746094
    3. 'Selectors' → logprob: -16.27975082397461
    4. 'Select' → logprob: -16.27975082397461
    5. 'selector' → logprob: -17.15475082397461
    6. 'Selectable' → logprob: -17.40475082397461
    7. ' selector' → logprob: -17.77975082397461
    8. 'Selective' → logprob: -17.90475082397461
    9. ' Select' → logprob: -18.02975082397461
    10. ' ' → logprob: -18.27975082397461

Token 176: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.534293532371521
    2. '(' → logprob: -1.909293532371521
    3. '()' → logprob: -1.909293532371521
    4. '(
' → logprob: -2.5342936515808105
    5. 'def' → logprob: -4.4092936515808105
    6. '()
' → logprob: -4.6592936515808105
    7. '(func' → logprob: -5.7842936515808105
    8. '<|end|>' → logprob: -5.7842936515808105
    9. '  
' → logprob: -6.0342936515808105
    10. ',' → logprob: -6.5342936515808105

Token 177: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0448407344520092
    2. 'res' → logprob: -4.2948408126831055
    3. 'selected' → logprob: -5.0448408126831055
    4. 'result' → logprob: -5.0448408126831055
    5. 'ans' → logprob: -5.6698408126831055
    6. 'while' → logprob: -5.9198408126831055
    7. 'filtered' → logprob: -5.9198408126831055
    8. 'def' → logprob: -6.1698408126831055
    9. 'lst' → logprob: -6.6698408126831055
    10. 'answer' → logprob: -7.0448408126831055

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22582663595676422
    2. ' =' → logprob: -1.600826621055603
    3. '(' → logprob: -8.850826263427734
    4. '_' → logprob: -9.850826263427734
    5. 's' → logprob: -10.100826263427734
    6. '=lambda' → logprob: -10.100826263427734
    7. '_=' → logprob: -10.225826263427734
    8. '1' → logprob: -10.350826263427734
    9. ',' → logprob: -10.975826263427734
    10. '   ' → logprob: -11.475826263427734

Token 179: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5240928530693054
    2. '0' → logprob: -0.8990928530693054
    3. ' sum' → logprob: -8.274092674255371
    4. '{}' → logprob: -8.774092674255371
    5. ' len' → logprob: -9.024092674255371
    6. 'len' → logprob: -9.149092674255371
    7. 'sum' → logprob: -9.149092674255371
    8. '{' → logprob: -9.774092674255371
    9. ' [' → logprob: -9.899092674255371
    10. '[' → logprob: -10.024092674255371

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19516539573669434
    2. 'sum' → logprob: -1.9451653957366943
    3. 'len' → logprob: -3.4451653957366943
    4. '[' → logprob: -7.820165634155273
    5. 'N' → logprob: -7.820165634155273
    6. '[len' → logprob: -7.820165634155273
    7. '{}' → logprob: -8.320165634155273
    8. '{' → logprob: -8.570165634155273
    9. 'lambda' → logprob: -8.695165634155273
    10. '[N' → logprob: -8.695165634155273

Token 181: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013989296276122332
    2. ' for' → logprob: -6.626399040222168
    3. '
' → logprob: -10.126399040222168
    4. 'while' → logprob: -10.876399040222168
    5. 'def' → logprob: -11.376399040222168
    6. '```' → logprob: -14.001399040222168
    7. '<|end|>' → logprob: -15.001399040222168
    8. ')' → logprob: -15.626399040222168
    9. '   ' → logprob: -15.626399040222168
    10. '    
' → logprob: -16.00139808654785

Token 182: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030682645738124847
    2. 'while' → logprob: -5.878068447113037
    3. 'def' → logprob: -8.878067970275879
    4. ' for' → logprob: -9.128067970275879
    5. 'res' → logprob: -12.378067970275879
    6. 'count' → logprob: -13.253067970275879
    7. 'selected' → logprob: -14.003067970275879
    8. 'result' → logprob: -14.128067970275879
    9. 'from' → logprob: -14.128067970275879
    10. '
' → logprob: -14.378067970275879

Token 183: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4600690603256226
    2. 'p' → logprob: -1.5850690603256226
    3. ' p' → logprob: -1.5850690603256226
    4. ' x' → logprob: -2.085069179534912
    5. ' pair' → logprob: -3.210069179534912
    6. ' func' → logprob: -3.335069179534912
    7. 'func' → logprob: -3.835069179534912
    8. ' judge' → logprob: -4.085069179534912
    9. 'pair' → logprob: -4.335069179534912
    10. '(x' → logprob: -4.710069179534912

Token 184: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0076295845210552216
    2. 'in' → logprob: -4.88262939453125
    3. ',' → logprob: -11.63262939453125
    4. ' ' → logprob: -11.63262939453125
    5. 's' → logprob: -13.63262939453125
    6. ' ,' → logprob: -14.00762939453125
    7. ' ' → logprob: -14.44512939453125
    8. 'import' → logprob: -14.82012939453125
    9. '=' → logprob: -15.07012939453125
    10. ' =' → logprob: -15.13262939453125

Token 185: ' selector' (ID: 19970)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6307615041732788
    2. 'selector' → logprob: -1.6307615041732788
    3. ' lst' → logprob: -2.0057616233825684
    4. ' selector' → logprob: -2.0057616233825684
    5. 'range' → logprob: -6.630761623382568
    6. ' range' → logprob: -7.005761623382568
    7. '(lst' → logprob: -9.25576114654541
    8. 'iterator' → logprob: -9.38076114654541
    9. 'list' → logprob: -9.50576114654541
    10. '[(' → logprob: -9.63076114654541

Token 186: '(lambda' (ID: 43341)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.000497032655403018
    2. '(' → logprob: -7.625496864318848
    3. '(lambda' → logprob: -12.500496864318848
    4. '(
' → logprob: -13.000496864318848
    5. '((' → logprob: -14.000496864318848
    6. ' (' → logprob: -14.500496864318848
    7. '(s' → logprob: -15.000496864318848
    8. ')' → logprob: -16.000497817993164
    9. '(J' → logprob: -16.000497817993164
    10. '(res' → logprob: -16.000497817993164

Token 187: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28155577182769775
    2. ' x' → logprob: -1.4065557718276978
    3. 'a' → logprob: -8.156556129455566
    4. ' a' → logprob: -10.281556129455566
    5. ' ' → logprob: -11.031556129455566
    6. '   ' → logprob: -11.281556129455566
    7. ',' → logprob: -12.406556129455566
    8. 'res' → logprob: -12.531556129455566
    9. 'judge' → logprob: -12.781556129455566
    10. 'p' → logprob: -12.906556129455566

Token 188: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.4339498281478882
    2. ',' → logprob: -1.0589498281478882
    3. 'b' → logprob: -6.058949947357178
    4. ',p' → logprob: -6.308949947357178
    5. ',a' → logprob: -7.683949947357178
    6. ',y' → logprob: -8.18394947052002
    7. ' ,' → logprob: -8.80894947052002
    8. 'a' → logprob: -10.05894947052002
    9. ' b' → logprob: -10.05894947052002
    10. ',x' → logprob: -10.18394947052002

Token 189: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0438280887901783
    2. ' :' → logprob: -3.668828010559082
    3. ':a' → logprob: -4.543828010559082
    4. ',' → logprob: -5.668828010559082
    5. ':(' → logprob: -6.543828010559082
    6. ',a' → logprob: -7.293828010559082
    7. ':p' → logprob: -7.543828010559082
    8. '   ' → logprob: -9.043828010559082
    9. ':not' → logprob: -9.418828010559082
    10. ':
' → logprob: -9.543828010559082

Token 190: ' judge' (ID: 23319)
  Prédit: 'judge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.3017333745956421
    2. 'a' → logprob: -1.801733374595642
    3. '(a' → logprob: -2.6767334938049316
    4. ' judge' → logprob: -4.801733493804932
    5. '(not' → logprob: -5.176733493804932
    6. 'not' → logprob: -5.676733493804932
    7. '((' → logprob: -6.426733493804932
    8. ' a' → logprob: -6.426733493804932
    9. '(' → logprob: -6.551733493804932
    10. ' (' → logprob: -7.051733493804932

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '2' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.62501335144043
    4. '(p' → logprob: -16.81251335144043
    5. ')' → logprob: -16.93751335144043
    6. '
' → logprob: -17.00001335144043
    7. '(' → logprob: -17.18751335144043
    8. '１' → logprob: -17.25001335144043
    9. '```' → logprob: -17.50001335144043
    10. '

' → logprob: -17.87501335144043

Token 192: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.686778503237292e-05
    2. '(' → logprob: -9.500097274780273
    3. '(p' → logprob: -11.750097274780273
    4. ' (' → logprob: -12.125097274780273
    5. '((' → logprob: -12.875097274780273
    6. '(
' → logprob: -13.375097274780273
    7. 'a' → logprob: -13.500097274780273
    8. '(count' → logprob: -13.875097274780273
    9. '(b' → logprob: -14.625097274780273
    10. '(x' → logprob: -15.375097274780273

Token 193: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.20442810654640198
    2. ',' → logprob: -1.7044280767440796
    3. ' ,' → logprob: -6.204428195953369
    4. ',p' → logprob: -7.079428195953369
    5. '+' → logprob: -10.329427719116211
    6. 'b' → logprob: -10.579427719116211
    7. '   ' → logprob: -11.329427719116211
    8. ',j' → logprob: -11.329427719116211
    9. ' ' → logprob: -11.704427719116211
    10. ')' → logprob: -11.954427719116211

Token 194: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.015009603463113308
    2. '):' → logprob: -4.64000940322876
    3. ')' → logprob: -5.39000940322876
    4. ' ),' → logprob: -8.140009880065918
    5. '   ' → logprob: -9.265009880065918
    6. ')==' → logprob: -9.390009880065918
    7. ' and' → logprob: -10.640009880065918
    8. ',' → logprob: -10.765009880065918
    9. ' or' → logprob: -10.890009880065918
    10. ' ' → logprob: -10.890009880065918

Token 195: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48446112871170044
    2. 'and' → logprob: -1.3594610691070557
    3. ' and' → logprob: -2.6094610691070557
    4. '):' → logprob: -3.9844610691070557
    5. ' or' → logprob: -4.359461307525635
    6. 'or' → logprob: -4.984461307525635
    7. ',p' → logprob: -5.734461307525635
    8. ' ,' → logprob: -5.859461307525635
    9. '==' → logprob: -5.984461307525635
    10. '(p' → logprob: -6.109461307525635

Token 196: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.6329724192619324
    2. 'judge' → logprob: -0.7579724192619324
    3. ' ' → logprob: -9.257972717285156
    4. '   ' → logprob: -9.507972717285156
    5. 'jud' → logprob: -9.882972717285156
    6. '  ' → logprob: -10.007972717285156
    7. ' not' → logprob: -10.132972717285156
    8. 'not' → logprob: -10.632972717285156
    9. ' ' → logprob: -11.007972717285156
    10. '    ' → logprob: -12.007972717285156

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.625
    4. '   ' → logprob: -18.5
    5. '
' → logprob: -18.8125
    6. 'selector' → logprob: -18.9375
    7. '２' → logprob: -19.1875
    8. '۲' → logprob: -19.3125
    9. '  ' → logprob: -19.3125
    10. 'judge' → logprob: -20.0625

Token 198: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.44443862256594e-05
    2. ' (' → logprob: -9.875064849853516
    3. '(' → logprob: -11.375064849853516
    4. '(
' → logprob: -14.000064849853516
    5. '(p' → logprob: -14.750064849853516
    6. '(x' → logprob: -16.500064849853516
    7. '   ' → logprob: -18.000064849853516
    8. ')(' → logprob: -18.000064849853516
    9. '
' → logprob: -18.125064849853516
    10. '1' → logprob: -18.500064849853516

Token 199: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.05051539093255997
    2. ',p' → logprob: -3.3005154132843018
    3. ',' → logprob: -4.550515174865723
    4. ',c' → logprob: -6.425515174865723
    5. ',a' → logprob: -9.925515174865723
    6. ' ,' → logprob: -10.175515174865723
    7. ')' → logprob: -10.675515174865723
    8. ',d' → logprob: -10.800515174865723
    9. ',y' → logprob: -11.050515174865723
    10. 'b' → logprob: -11.300515174865723

Token 200: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16545835137367249
    2. '):' → logprob: -2.1654584407806396
    3. '),' → logprob: -3.5404584407806396
    4. ' ,' → logprob: -5.1654582023620605
    5. ',p' → logprob: -6.2904582023620605
    6. '):
' → logprob: -8.040458679199219
    7. '   ' → logprob: -8.040458679199219
    8. ')' → logprob: -9.165458679199219
    9. ',res' → logprob: -9.540458679199219
    10. ',count' → logprob: -9.665458679199219

Token 201: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.014172090217471123
    2. ' lst' → logprob: -4.264172077178955
    3. 'range' → logprob: -12.264172554016113
    4. ' range' → logprob: -13.639172554016113
    5. 'list' → logprob: -13.889172554016113
    6. '   ' → logprob: -13.889172554016113
    7. '(lst' → logprob: -15.389172554016113
    8. ' ' → logprob: -15.389172554016113
    9. 'ls' → logprob: -16.639171600341797
    10. 'l' → logprob: -17.139171600341797

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019818067084997892
    2. ':' → logprob: -6.626981735229492
    3. '):
' → logprob: -7.376981735229492
    4. ')' → logprob: -11.001981735229492
    5. '   ' → logprob: -11.501981735229492
    6. ' ):' → logprob: -14.001981735229492
    7. '):
' → logprob: -14.251981735229492
    8. '}:' → logprob: -14.376981735229492
    9. '():' → logprob: -15.001981735229492
    10. '>:' → logprob: -15.126981735229492

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054537164978682995
    2. '       ' → logprob: -5.755453586578369
    3. '
' → logprob: -6.880453586578369
    4. ' count' → logprob: -6.880453586578369
    5. 'count' → logprob: -8.880454063415527
    6. '	count' → logprob: -9.755454063415527
    7. '    
' → logprob: -11.505454063415527
    8. ',count' → logprob: -12.255454063415527
    9. '[count' → logprob: -13.880454063415527
    10. '_count' → logprob: -14.005454063415527

Token 204: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6659542918205261
    2. '   ' → logprob: -1.415954351425171
    3. ' count' → logprob: -1.415954351425171
    4. '       ' → logprob: -7.165954113006592
    5. '	count' → logprob: -10.04095458984375
    6. '
' → logprob: -11.91595458984375
    7. '    ' → logprob: -13.66595458984375
    8. '_count' → logprob: -13.79095458984375
    9. '    
' → logprob: -14.16595458984375
    10. '.count' → logprob: -14.16595458984375

Token 205: ' count' (ID: 3605)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7032780647277832
    2. 'p' → logprob: -0.9532780647277832
    3. 'count' → logprob: -3.578278064727783
    4. ' (' → logprob: -3.703278064727783
    5. ' count' → logprob: -4.078278064727783
    6. 'a' → logprob: -4.578278064727783
    7. '(' → logprob: -5.078278064727783
    8. ' ' → logprob: -5.203278064727783
    9. ' a' → logprob: -5.453278064727783
    10. '(p' → logprob: -5.453278064727783

Token 206: '>=' (ID: 20974)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4097684621810913
    2. '>=' → logprob: -1.5347684621810913
    3. ' ==' → logprob: -1.9097684621810913
    4. ' >=' → logprob: -2.034768581390381
    5. '+=' → logprob: -2.409768581390381
    6. '<' → logprob: -2.659768581390381
    7. ' +=' → logprob: -2.909768581390381
    8. ' <' → logprob: -3.284768581390381
    9. '>' → logprob: -5.534768581390381
    10. ' ' → logprob: -7.034768581390381

Token 207: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16326376795768738
    2. '10' → logprob: -2.7882637977600098
    3. '2' → logprob: -4.03826379776001
    4. '5' → logprob: -4.16326379776001
    5. '4' → logprob: -4.16326379776001
    6. '3' → logprob: -4.41326379776001
    7. '100' → logprob: -4.53826379776001
    8. '1' → logprob: -4.66326379776001
    9. 'len' → logprob: -6.66326379776001
    10. '20' → logprob: -6.91326379776001

Token 208: '*N' (ID: 107360)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016181934624910355
    2. ':
' → logprob: -4.266181945800781
    3. '       ' → logprob: -7.391181945800781
    4. '   ' → logprob: -7.516181945800781
    5. ' :' → logprob: -8.516181945800781
    6. ':return' → logprob: -8.516181945800781
    7. '0' → logprob: -8.641181945800781
    8. '*' → logprob: -9.016181945800781
    9. '    ' → logprob: -10.016181945800781
    10. 'break' → logprob: -11.016181945800781

Token 209: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11415724456310272
    2. '       ' → logprob: -2.614157199859619
    3. ':
' → logprob: -3.364157199859619
    4. '   ' → logprob: -10.239157676696777
    5. ':
' → logprob: -11.114157676696777
    6. ':return' → logprob: -12.989157676696777
    7. ',' → logprob: -13.739157676696777
    8. ':

' → logprob: -13.864157676696777
    9. ' :' → logprob: -13.864157676696777
    10. '):
' → logprob: -14.114157676696777

Token 210: 'break' (ID: 15354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.278864359250292e-05
    2. 'break' → logprob: -9.750072479248047
    3. ' break' → logprob: -11.500072479248047
    4. '   ' → logprob: -12.500072479248047
    5. '           ' → logprob: -15.125072479248047
    6. '	break' → logprob: -15.750072479248047
    7. '```' → logprob: -15.875072479248047
    8. '	' → logprob: -17.000072479248047
    9. '      ' → logprob: -17.750072479248047
    10. '     ' → logprob: -18.500072479248047

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013616628712043166
    2. '
' → logprob: -6.876361846923828
    3. 'count' → logprob: -9.001361846923828
    4. ' count' → logprob: -9.126361846923828
    5. '       ' → logprob: -9.376361846923828
    6. '	count' → logprob: -12.251361846923828
    7. '    
' → logprob: -12.376361846923828
    8. '
' → logprob: -13.876361846923828
    9. ',count' → logprob: -14.501361846923828
    10. '```' → logprob: -14.626361846923828

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019364648323971778
    2. 'count' → logprob: -8.75019359588623
    3. '
' → logprob: -10.62519359588623
    4. ' count' → logprob: -11.87519359588623
    5. '       ' → logprob: -13.37519359588623
    6. '	count' → logprob: -13.50019359588623
    7. '    
' → logprob: -14.37519359588623
    8. '
' → logprob: -15.87519359588623
    9. '[count' → logprob: -16.125194549560547
    10. ',count' → logprob: -17.000194549560547

Token 213: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.030557481572031975
    2. '   ' → logprob: -3.53055739402771
    3. 'count' → logprob: -7.405557632446289
    4. ' res' → logprob: -8.530557632446289
    5. 'x' → logprob: -14.280557632446289
    6. ' count' → logprob: -15.405557632446289
    7. '	res' → logprob: -15.530557632446289
    8. '
' → logprob: -15.655557632446289
    9. '  ' → logprob: -16.15555763244629
    10. 'print' (adapté à ' print') → logprob: -16.53055763244629

Token 214: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.1824028193950653
    2. '(p' → logprob: -1.8074028491973877
    3. '(' → logprob: -6.182402610778809
    4. 'p' → logprob: -8.182402610778809
    5. '(f' → logprob: -8.807402610778809
    6. '*p' → logprob: -9.682402610778809
    7. 'f' → logprob: -10.057402610778809
    8. '*' → logprob: -10.932402610778809
    9. '('' → logprob: -11.432402610778809
    10. ' p' → logprob: -12.432402610778809

Token 215: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.36574100604048e-06
    2. ' p' → logprob: -12.375004768371582
    3. ')p' → logprob: -19.000003814697266
    4. ')' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.375003814697266
    6. '(p' → logprob: -19.750003814697266
    7. '*p' → logprob: -20.000003814697266
    8. '[p' → logprob: -21.125003814697266
    9. ' ' → logprob: -21.375003814697266
    10. '	p' → logprob: -21.875003814697266

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.636475493200123e-05
    2. ')
' → logprob: -9.500076293945312
    3. ' )' → logprob: -14.125076293945312
    4. '   ' → logprob: -14.875076293945312
    5. ')p' → logprob: -16.000076293945312
    6. ',)' → logprob: -17.000076293945312
    7. ')
' → logprob: -17.250076293945312
    8. '))' → logprob: -17.375076293945312
    9. ')#' → logprob: -17.500076293945312
    10. ')`' → logprob: -17.625076293945312

Token 217: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002624086628202349
    2. 'count' (adapté à ' count') → logprob: -8.250262260437012
    3. ' count' → logprob: -13.875262260437012
    4. '	count' → logprob: -16.125263214111328
    5. '  ' → logprob: -18.000263214111328
    6. '       ' → logprob: -18.125263214111328
    7. '    
' → logprob: -19.000263214111328
    8. '[count' → logprob: -19.125263214111328
    9. 'Count' → logprob: -19.250263214111328
    10. '<count' → logprob: -19.375263214111328

Token 219: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0069956122897565365
    2. ' +=' → logprob: -5.006995677947998
    3. '+' → logprob: -8.25699520111084
    4. '=' → logprob: -11.88199520111084
    5. ']+=' → logprob: -12.00699520111084
    6. '+="' → logprob: -12.75699520111084
    7. '<|end|>' → logprob: -13.13199520111084
    8. '+='' → logprob: -13.25699520111084
    9. '++' → logprob: -14.63199520111084
    10. '```' → logprob: -15.63199520111084

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -21.625
    4. '   ' → logprob: -22.375
    5. '+' → logprob: -22.75
    6. '１' → logprob: -23.0
    7. '۱' → logprob: -23.375
    8. '
' → logprob: -24.25
    9. '<|end|>' → logprob: -24.5
    10. '' → logprob: -25.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 89
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 40.37%
Précision adaptée (1ère position): 40.83%
Précision (top 10): 79.82%
================================================================================
