================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import atan, degrees

def calculate_angle(a: int, b: int, x: int) -> float:
    base_area = a * a
    half_volume = (base_area * b) / 2
    if x >= half_volume:
        h = x / base_area
        return degrees(atan((2 * h - b) / a))
    else:
        d = (2 * x) / (b * a)
        return degrees(atan(b / d))

if __name__ == "__main__":
    a, b, x = map(int, input().split())
    print(calculate_angle(a, b, x))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' atan' (ID: 70327)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2745301127433777
    2. ' sqrt' → logprob: -1.5245301723480225
    3. 'pow' → logprob: -4.774529933929443
    4. 'sin' → logprob: -5.024529933929443
    5. ' pi' → logprob: -5.899529933929443
    6. 'pi' → logprob: -6.274529933929443
    7. ' sin' → logprob: -7.024529933929443
    8. 'ceil' → logprob: -7.899529933929443
    9. 'import' → logprob: -8.274530410766602
    10. ' ceil' → logprob: -8.399530410766602

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3917740285396576
    2. '2' → logprob: -1.14177405834198
    3. ' (' → logprob: -5.6417741775512695
    4. ',' → logprob: -6.8917741775512695
    5. ' ' → logprob: -8.76677417755127
    6. '(
' → logprob: -10.01677417755127
    7. '```' → logprob: -10.39177417755127
    8. '  ' → logprob: -11.26677417755127
    9. '(`' → logprob: -11.64177417755127
    10. '(

' → logprob: -11.89177417755127

Token 5: ' degrees' (ID: 18210)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.14434434473514557
    2. '2' → logprob: -2.8943443298339844
    3. 'pi' → logprob: -3.2693443298339844
    4. 'tan' → logprob: -4.269344329833984
    5. ' atan' → logprob: -5.269344329833984
    6. ' tan' → logprob: -5.394344329833984
    7. ' pi' → logprob: -5.769344329833984
    8. 'cos' → logprob: -5.769344329833984
    9. 't' → logprob: -5.769344329833984
    10. ' acos' → logprob: -5.894344329833984

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032473751343786716
    2. ',' → logprob: -8.625325202941895
    3. '\(' → logprob: -9.625325202941895
    4. '(
' → logprob: -10.375325202941895
    5. ' (' → logprob: -11.125325202941895
    6. 'def' → logprob: -11.750325202941895
    7. '#' → logprob: -12.375325202941895
    8. 'a' → logprob: -13.250325202941895
    9. '.' → logprob: -13.375325202941895
    10. '2' → logprob: -13.625325202941895

Token 7: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003218766360078007
    2. ',' → logprob: -8.500322341918945
    3. 'def' → logprob: -10.000322341918945
    4. '(
' → logprob: -10.500322341918945
    5. '\(' → logprob: -11.625322341918945
    6. '#' → logprob: -12.000322341918945
    7. 'a' → logprob: -12.125322341918945
    8. ' (' → logprob: -12.250322341918945
    9. 'import' → logprob: -12.875322341918945
    10. '```' → logprob: -13.000322341918945

Token 8: ' calculate' (ID: 17950)
  Prédit: ' atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atan' → logprob: -0.48398903012275696
    2. ' calculate' → logprob: -1.9839890003204346
    3. ' convert' → logprob: -2.2339890003204346
    4. ' ' → logprob: -3.2339890003204346
    5. ' space' → logprob: -3.6089890003204346
    6. ' my' → logprob: -4.358989238739014
    7. ' angle' → logprob: -4.608989238739014
    8. ' f' → logprob: -4.733989238739014
    9. ' def' → logprob: -5.358989238739014
    10. ' get' → logprob: -5.358989238739014

Token 9: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.0046318573877215385
    2. '_' → logprob: -5.629631996154785
    3. '_distance' → logprob: -8.254631996154785
    4. '_angles' → logprob: -8.629631996154785
    5. '(' → logprob: -8.879631996154785
    6. '_area' → logprob: -9.129631996154785
    7. '_radius' → logprob: -9.504631996154785
    8. '_velocity' → logprob: -9.879631996154785
    9. '(angle' → logprob: -10.504631996154785
    10. '_circle' → logprob: -10.629631996154785

Token 10: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013888046378269792
    2. '(x' → logprob: -7.876389026641846
    3. '_between' → logprob: -7.876389026641846
    4. '(angle' → logprob: -8.876388549804688
    5. '_' → logprob: -9.126388549804688
    6. '():' → logprob: -9.376388549804688
    7. '(parent' → logprob: -10.376388549804688
    8. ' (' → logprob: -10.626388549804688
    9. '(line' → logprob: -10.876388549804688
    10. '(p' → logprob: -11.126388549804688

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0043767173774540424
    2. ',b' → logprob: -6.0043768882751465
    3. ')' → logprob: -7.6293768882751465
    4. ' ,' → logprob: -7.6293768882751465
    5. '_,' → logprob: -7.6293768882751465
    6. '):' → logprob: -9.254376411437988
    7. 'b' → logprob: -9.379376411437988
    8. '_' → logprob: -9.504376411437988
    9. '_b' → logprob: -10.129376411437988
    10. '1' → logprob: -10.629376411437988

Token 12: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.8555036783218384
    2. ' float' → logprob: -1.1055036783218384
    3. 'int' → logprob: -1.8555036783218384
    4. ' int' → logprob: -2.730503559112549
    5. ')' → logprob: -4.730503559112549
    6. ',' → logprob: -5.105503559112549
    7. 'b' → logprob: -6.480503559112549
    8. 'tuple' → logprob: -6.480503559112549
    9. ' b' → logprob: -6.605503559112549
    10. ' tuple' → logprob: -6.980503559112549

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00214383564889431
    2. ' ,' → logprob: -6.377143859863281
    3. ')' → logprob: -8.002143859863281
    4. ',b' → logprob: -10.377143859863281
    5. '<|end|>' → logprob: -10.752143859863281
    6. ',a' → logprob: -11.252143859863281
    7. 'a' → logprob: -11.877143859863281
    8. 's' → logprob: -12.002143859863281
    9. '_,' → logprob: -12.627143859863281
    10. ' ' → logprob: -12.627143859863281

Token 14: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.10027643293142319
    2. 'b' → logprob: -2.350276470184326
    3. ')' → logprob: -10.100275993347168
    4. ',' → logprob: -11.225275993347168
    5. ' ' → logprob: -12.225275993347168
    6. ')b' → logprob: -12.725275993347168
    7. ' )' → logprob: -13.475275993347168
    8. '<|end|>' → logprob: -13.850275993347168
    9. '   ' → logprob: -14.350275993347168
    10. '    ' → logprob: -14.475275993347168

Token 15: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7310210466384888
    2. ')' → logprob: -1.6060210466384888
    3. ',' → logprob: -1.7310210466384888
    4. ':' → logprob: -1.9810210466384888
    5. '=' → logprob: -6.856020927429199
    6. '):
' → logprob: -7.731020927429199
    7. '**' → logprob: -8.7310209274292
    8. '```' → logprob: -8.7310209274292
    9. '_' → logprob: -9.1060209274292
    10. '*' → logprob: -9.1060209274292

Token 16: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6327440738677979
    2. 'int' → logprob: -0.7577440738677979
    3. ')' → logprob: -9.132743835449219
    4. '[int' → logprob: -11.757743835449219
    5. ':int' → logprob: -12.007743835449219
    6. ' ' → logprob: -12.757743835449219
    7. '(int' → logprob: -12.882743835449219
    8. ' float' → logprob: -12.882743835449219
    9. ' )' → logprob: -13.007743835449219
    10. 'float' → logprob: -13.132743835449219

Token 17: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01857971027493477
    2. '):' → logprob: -4.018579483032227
    3. ',' → logprob: -8.393579483032227
    4. ':' → logprob: -9.143579483032227
    5. ')->' → logprob: -9.518579483032227
    6. '):
' → logprob: -12.268579483032227
    7. '),' → logprob: -13.268579483032227
    8. ' )' → logprob: -13.268579483032227
    9. '```' → logprob: -13.268579483032227
    10. ')>' → logprob: -13.393579483032227

Token 18: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07904908061027527
    2. 'c' → logprob: -2.5790491104125977
    3. ' ' → logprob: -9.204049110412598
    4. '  ' → logprob: -11.266549110412598
    5. '   ' → logprob: -12.016549110412598
    6. ')' → logprob: -12.391549110412598
    7. '```' → logprob: -12.704049110412598
    8. '	c' → logprob: -12.766549110412598
    9. ' C' → logprob: -12.954049110412598
    10. ' ' → logprob: -13.266549110412598

Token 19: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2958619296550751
    2. ',' → logprob: -2.0458619594573975
    3. ':' → logprob: -2.4208619594573975
    4. ')' → logprob: -3.7958619594573975
    5. '1' → logprob: -5.170861721038818
    6. '2' → logprob: -6.170861721038818
    7. '_' → logprob: -6.420861721038818
    8. '0' → logprob: -6.420861721038818
    9. ',y' → logprob: -7.170861721038818
    10. '_:' → logprob: -7.295861721038818

Token 20: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0018471283838152885
    2. ' int' → logprob: -6.376847267150879
    3. 'float' → logprob: -9.376847267150879
    4. ')' → logprob: -9.876847267150879
    5. '[int' → logprob: -13.126847267150879
    6. ':int' → logprob: -13.251847267150879
    7. '(int' → logprob: -13.751847267150879
    8. ' float' → logprob: -14.001847267150879
    9. '=int' → logprob: -14.501847267150879
    10. '	int' → logprob: -14.626847267150879

Token 21: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10382530838251114
    2. '):' → logprob: -2.478825330734253
    3. ',' → logprob: -4.228825092315674
    4. ':' → logprob: -9.353825569152832
    5. '):
' → logprob: -11.228825569152832
    6. ')->' → logprob: -11.353825569152832
    7. ')>' → logprob: -11.353825569152832
    8. ' ' → logprob: -11.603825569152832
    9. '`)' → logprob: -11.728825569152832
    10. '),' → logprob: -11.853825569152832

Token 22: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01253119483590126
    2. '):' → logprob: -4.512531280517578
    3. '():' → logprob: -7.137531280517578
    4. '':' → logprob: -8.137531280517578
    5. ':**' → logprob: -9.762531280517578
    6. ')' → logprob: -10.137531280517578
    7. ':return' → logprob: -10.387531280517578
    8. '(:' → logprob: -10.512531280517578
    9. '>:' → logprob: -10.512531280517578
    10. '`:' → logprob: -10.637531280517578

Token 23: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.044038232415914536
    2. 'float' → logprob: -3.1690382957458496
    3. ' int' → logprob: -7.04403829574585
    4. 'int' → logprob: -8.919037818908691
    5. ' ' → logprob: -11.419037818908691
    6. ''' → logprob: -11.919037818908691
    7. ' str' → logprob: -12.294037818908691
    8. '	float' → logprob: -12.419037818908691
    9. '"' → logprob: -13.544037818908691
    10. ' '' → logprob: -13.544037818908691

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -9.424530435353518e-05
    2. '):' → logprob: -10.000094413757324
    3. ':**' → logprob: -11.500094413757324
    4. ' :' → logprob: -11.625094413757324
    5. '():' → logprob: -11.625094413757324
    6. ':return' → logprob: -11.875094413757324
    7. '':' → logprob: -12.250094413757324
    8. '(:' → logprob: -13.750094413757324
    9. '>:' → logprob: -13.875094413757324
    10. ',:' → logprob: -14.000094413757324

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.322976291179657
    2. ':' → logprob: -1.3229763507843018
    3. '(' → logprob: -5.572976112365723
    4. '):' → logprob: -6.447976112365723
    5. '():' → logprob: -6.697976112365723
    6. ' :' → logprob: -7.447976112365723
    7. '```' → logprob: -7.447976112365723
    8. '    ' → logprob: -7.822976112365723
    9. ' ' → logprob: -8.197976112365723
    10. ':
' → logprob: -8.322976112365723

Token 26: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7352553606033325
    2. 'return' → logprob: -2.235255241394043
    3. 'y' → logprob: -2.485255241394043
    4. ' return' → logprob: -2.485255241394043
    5. 'angle' → logprob: -2.735255241394043
    6. 'c' → logprob: -3.485255241394043
    7. '```' → logprob: -3.735255241394043
    8. ' angle' → logprob: -3.860255241394043
    9. ')' → logprob: -4.360255241394043
    10. 'a' → logprob: -4.485255241394043

Token 27: '_area' (ID: 34097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09563436359167099
    2. '_angle' → logprob: -2.9706344604492188
    3. ' _' → logprob: -3.4706344604492188
    4. ' =' → logprob: -5.595634460449219
    5. '_line' → logprob: -6.720634460449219
    6. ' ' → logprob: -6.845634460449219
    7. '(' → logprob: -7.220634460449219
    8. '_space' → logprob: -7.470634460449219
    9. ')' → logprob: -7.970634460449219
    10. ' )' → logprob: -8.970634460449219

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32526469230651855
    2. '=' → logprob: -1.7002646923065186
    3. '_' → logprob: -2.9502646923065186
    4. 's' → logprob: -3.2002646923065186
    5. ' ' → logprob: -7.700264930725098
    6. ')' → logprob: -8.325264930725098
    7. '_s' → logprob: -8.450264930725098
    8. '*' → logprob: -8.950264930725098
    9. '/' → logprob: -9.200264930725098
    10. ' *' → logprob: -9.450264930725098

Token 29: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44222819805145264
    2. ' a' → logprob: -1.0672281980514526
    3. '0' → logprob: -5.317228317260742
    4. ' ' → logprob: -6.192228317260742
    5. ' (' → logprob: -6.317228317260742
    6. 'b' → logprob: -6.567228317260742
    7. ' b' → logprob: -7.067228317260742
    8. '(a' → logprob: -7.442228317260742
    9. ' abs' → logprob: -7.692228317260742
    10. 'abs' → logprob: -7.692228317260742

Token 30: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22653837502002716
    2. '*' → logprob: -1.6015384197235107
    3. '*b' → logprob: -7.476538181304932
    4. '**' → logprob: -8.22653865814209
    5. ' **' → logprob: -9.60153865814209
    6. ' ' → logprob: -9.60153865814209
    7. ' +' → logprob: -9.72653865814209
    8. '_' → logprob: -10.60153865814209
    9. '+' → logprob: -10.72653865814209
    10. '-' → logprob: -11.60153865814209

Token 31: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0071324547752738
    2. ' b' → logprob: -5.382132530212402
    3. 'x' → logprob: -6.007132530212402
    4. ' x' → logprob: -10.257132530212402
    5. ' ' → logprob: -11.882132530212402
    6. 'a' → logprob: -12.632132530212402
    7. '2' → logprob: -14.007132530212402
    8. 'base' → logprob: -14.882132530212402
    9. '  ' → logprob: -15.507132530212402
    10. '0' → logprob: -15.632132530212402

Token 32: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6893470287322998
    2. '   ' → logprob: -1.3143470287322998
    3. '+' → logprob: -2.3143470287323
    4. ' -' → logprob: -3.6893470287323
    5. ' /' → logprob: -3.9393470287323
    6. '**' → logprob: -4.189347267150879
    7. '```' → logprob: -4.314347267150879
    8. ')' → logprob: -4.939347267150879
    9. '*' → logprob: -5.064347267150879
    10. '-' → logprob: -5.064347267150879

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044346291571855545
    2. '
' → logprob: -4.044346332550049
    3. '    
' → logprob: -4.169346332550049
    4. '```' → logprob: -5.669346332550049
    5. '   
' → logprob: -6.294346332550049
    6. '\n' → logprob: -6.919346332550049
    7. ' area' → logprob: -7.169346332550049
    8. ',' → logprob: -7.919346332550049
    9. 'area' → logprob: -7.919346332550049
    10. '<|end|>' → logprob: -8.16934585571289

Token 34: ' half' (ID: 6375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13540586829185486
    2. ' height' → logprob: -3.6354057788848877
    3. '```' → logprob: -3.6354057788848877
    4. ' side' → logprob: -4.385406017303467
    5. ' base' → logprob: -4.635406017303467
    6. 'height' → logprob: -4.635406017303467
    7. ' diagonal' → logprob: -5.635406017303467
    8. 'c' → logprob: -5.635406017303467
    9. ' hyp' → logprob: -5.760406017303467
    10. 'h' → logprob: -5.885406017303467

Token 35: '_volume' (ID: 64366)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.45817282795906067
    2. '_area' → logprob: -1.0831727981567383
    3. '_angle' → logprob: -4.833172798156738
    4. '_x' → logprob: -5.208172798156738
    5. '_b' → logprob: -5.333172798156738
    6. '_' → logprob: -5.458172798156738
    7. '_width' → logprob: -5.958172798156738
    8. '_side' → logprob: -6.833172798156738
    9. '_height' → logprob: -7.208172798156738
    10. '_length' → logprob: -7.333172798156738

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00893776398152113
    2. '=' → logprob: -4.758937835693359
    3. '_' → logprob: -8.13393783569336
    4. ' /' → logprob: -12.13393783569336
    5. '/' → logprob: -12.38393783569336
    6. ' ' → logprob: -12.38393783569336
    7. '_volume' → logprob: -13.00893783569336
    8. '_div' → logprob: -13.38393783569336
    9. '_ratio' → logprob: -13.63393783569336
    10. ' _' → logprob: -14.00893783569336

Token 37: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8637398481369019
    2. ' x' → logprob: -1.4887398481369019
    3. ' b' → logprob: -1.8637398481369019
    4. 'x' → logprob: -2.7387399673461914
    5. 'b' → logprob: -2.8637399673461914
    6. ' a' → logprob: -3.2387399673461914
    7. 'a' → logprob: -3.9887399673461914
    8. ' ' → logprob: -5.113739967346191
    9. '0' → logprob: -5.488739967346191
    10. '(a' → logprob: -5.613739967346191

Token 38: 'base' (ID: 5423)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33718565106391907
    2. 'x' → logprob: -2.4621856212615967
    3. 'b' → logprob: -2.4621856212615967
    4. ' a' → logprob: -2.9621856212615967
    5. ' x' → logprob: -3.9621856212615967
    6. ' b' → logprob: -4.212185859680176
    7. ' base' → logprob: -4.337185859680176
    8. 'base' → logprob: -4.337185859680176
    9. ' (' → logprob: -6.462185859680176
    10. ' ' → logprob: -7.337185859680176

Token 39: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.0339031834737398e-05
    2. '_' → logprob: -11.625020027160645
    3. 'area' → logprob: -12.375020027160645
    4. '_volume' → logprob: -12.625020027160645
    5. '_length' → logprob: -14.500020027160645
    6. ' _' → logprob: -14.750020027160645
    7. '_AREA' → logprob: -14.875020027160645
    8. 'Area' → logprob: -14.875020027160645
    9. ' area' → logprob: -15.125020027160645
    10. '_height' → logprob: -15.250020027160645

Token 40: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020706195384263992
    2. '*' → logprob: -3.8957061767578125
    3. ')' → logprob: -9.270706176757812
    4. ' ' → logprob: -9.770706176757812
    5. ' )' → logprob: -12.145706176757812
    6. '*b' → logprob: -13.270706176757812
    7. ' **' → logprob: -13.395706176757812
    8. '**' → logprob: -14.270706176757812
    9. '*)' → logprob: -14.395706176757812
    10. '   ' → logprob: -14.395706176757812

Token 41: ' b' (ID: 287)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2273605614900589
    2. ' x' → logprob: -1.6023606061935425
    3. 'b' → logprob: -6.352360725402832
    4. ' b' → logprob: -8.727360725402832
    5. ' ' → logprob: -10.852360725402832
    6. '(x' → logprob: -11.477360725402832
    7. ' (' → logprob: -12.227360725402832
    8. '(' → logprob: -12.477360725402832
    9. '   ' → logprob: -14.102360725402832
    10. 'at' → logprob: -14.352360725402832

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0189986489713192
    2. ' )' → logprob: -4.018998622894287
    3. ')/' → logprob: -7.893998622894287
    4. ' *' → logprob: -8.143999099731445
    5. '*' → logprob: -9.143999099731445
    6. ' /' → logprob: -9.893999099731445
    7. ' ' → logprob: -11.393999099731445
    8. '/' → logprob: -12.518999099731445
    9. ' +' → logprob: -12.643999099731445
    10. ' -' → logprob: -12.893999099731445

Token 43: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.04297773540019989
    2. '/' → logprob: -3.292977809906006
    3. ' *' → logprob: -5.917977809906006
    4. '*' → logprob: -7.042977809906006
    5. ' ' → logprob: -8.167977333068848
    6. '/(' → logprob: -8.292977333068848
    7. ' /(' → logprob: -8.542977333068848
    8. '**' → logprob: -8.542977333068848
    9. ' **' → logprob: -8.917977333068848
    10. ')' → logprob: -9.667977333068848

Token 44: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004718841519206762
    2. ' ' → logprob: -5.754718780517578
    3. '(' → logprob: -6.879718780517578
    4. 'x' → logprob: -7.754718780517578
    5. ' (' → logprob: -10.504718780517578
    6. '3' → logprob: -11.129718780517578
    7. '   ' → logprob: -11.629718780517578
    8. ' x' → logprob: -11.629718780517578
    9. '(x' → logprob: -11.879718780517578
    10. '  ' → logprob: -12.942218780517578

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004435578361153603
    2. '(' → logprob: -5.7544355392456055
    3. 'x' → logprob: -6.8794355392456055
    4. ' ' → logprob: -8.629435539245605
    5. '(x' → logprob: -11.004435539245605
    6. ' (' → logprob: -11.754435539245605
    7. '200' → logprob: -11.879435539245605
    8. '   ' → logprob: -12.754435539245605
    9. '3' → logprob: -12.879435539245605
    10. '4' → logprob: -13.129435539245605

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9533821940422058
    2. '   ' → logprob: -1.5783822536468506
    3. '\n' → logprob: -1.9533822536468506
    4. ' 
' → logprob: -2.3283822536468506
    5. '    
' → logprob: -2.4533822536468506
    6. '  
' → logprob: -3.4533822536468506
    7. '   
' → logprob: -4.0783820152282715
    8. '\' → logprob: -4.4533820152282715
    9. '<|end|>' → logprob: -5.3283820152282715
    10. '\r' → logprob: -6.0783820152282715

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49291208386421204
    2. '\n' → logprob: -1.6179120540618896
    3. '    
' → logprob: -2.7429120540618896
    4. '
' → logprob: -3.4929120540618896
    5. '   
' → logprob: -3.8679120540618896
    6. '\' → logprob: -3.9929120540618896
    7. ' 
' → logprob: -4.242912292480469
    8. ' ' → logprob: -4.992912292480469
    9. '  
' → logprob: -4.992912292480469
    10. '```' → logprob: -5.117912292480469

Token 48: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7757531404495239
    2. '\n' → logprob: -1.525753140449524
    3. '   ' → logprob: -2.1507530212402344
    4. '
' → logprob: -3.4007530212402344
    5. ' 
' → logprob: -3.5257530212402344
    6. 'x' → logprob: -3.6507530212402344
    7. 'if' (adapté à ' if') → logprob: -3.6507530212402344
    8. 'n' → logprob: -4.525753021240234
    9. ' x' → logprob: -4.525753021240234
    10. '```' → logprob: -4.525753021240234

Token 49: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05423174798488617
    2. 'x' → logprob: -3.054231643676758
    3. ' b' → logprob: -5.429231643676758
    4. ' a' → logprob: -7.929231643676758
    5. ' ' → logprob: -8.054231643676758
    6. 'b' → logprob: -8.179231643676758
    7. ' half' → logprob: -9.054231643676758
    8. 'a' → logprob: -10.429231643676758
    9. ' (' → logprob: -10.429231643676758
    10. '   ' → logprob: -10.929231643676758

Token 50: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3740346133708954
    2. ' <=' → logprob: -1.8740346431732178
    3. ' >' → logprob: -2.2490346431732178
    4. ' ==' → logprob: -3.6240346431732178
    5. ' >=' → logprob: -4.374034404754639
    6. '<' → logprob: -5.374034404754639
    7. ' *' → logprob: -5.874034404754639
    8. ' ' → logprob: -6.374034404754639
    9. '<=' → logprob: -6.374034404754639
    10. '==' → logprob: -6.874034404754639

Token 51: ' half' (ID: 6375)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5737671256065369
    2. 'half' → logprob: -1.5737671852111816
    3. ' half' → logprob: -1.8237671852111816
    4. ' b' → logprob: -2.6987671852111816
    5. '0' → logprob: -7.823767185211182
    6. ' ' → logprob: -8.698766708374023
    7. 'a' → logprob: -11.073766708374023
    8. '1' → logprob: -11.573766708374023
    9. 'hal' → logprob: -12.073766708374023
    10. ' a' → logprob: -12.448766708374023

Token 52: '_volume' (ID: 64366)
  Prédit: '_volume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_volume' → logprob: -4.656383680412546e-05
    2. '_area' → logprob: -10.375046730041504
    3. '_' → logprob: -11.750046730041504
    4. ':' → logprob: -12.750046730041504
    5. 'volume' → logprob: -13.250046730041504
    6. '_voltage' → logprob: -14.125046730041504
    7. '_VOLUME' → logprob: -15.125046730041504
    8. '   ' → logprob: -15.500046730041504
    9. '_value' → logprob: -16.000045776367188
    10. '_velocity' → logprob: -16.000045776367188

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024715426843613386
    2. ' :' → logprob: -8.62524700164795
    3. ':
' → logprob: -10.00024700164795
    4. ':return' → logprob: -10.87524700164795
    5. '   ' → logprob: -13.25024700164795
    6. '):' → logprob: -13.75024700164795
    7. ':**' → logprob: -16.000247955322266
    8. ':def' → logprob: -16.250247955322266
    9. ' :
' → logprob: -16.625247955322266
    10. '>:' → logprob: -17.250247955322266

Token 54: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32294127345085144
    2. '       ' → logprob: -1.3229413032531738
    3. '   ' → logprob: -5.447941303253174
    4. ':
' → logprob: -5.947941303253174
    5. ' :' → logprob: -7.197941303253174
    6. '    ' → logprob: -7.572941303253174
    7. '):' → logprob: -8.072940826416016
    8. '.' → logprob: -8.322940826416016
    9. '\n' → logprob: -8.822940826416016
    10. ':return' → logprob: -9.072940826416016

Token 55: ' h' (ID: 312)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7472447752952576
    2. ' angle' → logprob: -1.4972448348999023
    3. '       ' → logprob: -1.8722448348999023
    4. 'return' → logprob: -3.1222448348999023
    5. 'angle' → logprob: -3.7472448348999023
    6. '```' → logprob: -4.747244834899902
    7. ' y' → logprob: -4.872244834899902
    8. ' remaining' → logprob: -4.997244834899902
    9. ' height' → logprob: -5.122244834899902
    10. ' depth' → logprob: -5.122244834899902

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2313946932554245
    2. 'eight' → logprob: -1.731394648551941
    3. '=' → logprob: -3.9813947677612305
    4. 'e' → logprob: -5.2313947677612305
    5. '   ' → logprob: -6.3563947677612305
    6. 'ight' → logprob: -7.3563947677612305
    7. 't' → logprob: -7.6063947677612305
    8. '_angle' → logprob: -7.6063947677612305
    9. ' ' → logprob: -7.7313947677612305
    10. '_e' → logprob: -8.35639476776123

Token 57: ' x' (ID: 1215)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38125288486480713
    2. '(' → logprob: -1.8812528848648071
    3. 'a' → logprob: -2.5062527656555176
    4. '2' → logprob: -3.2562527656555176
    5. ' b' → logprob: -4.006252765655518
    6. ' (' → logprob: -4.256252765655518
    7. '(a' → logprob: -5.631252765655518
    8. ' a' → logprob: -5.881252765655518
    9. '(b' → logprob: -6.131252765655518
    10. ' ' → logprob: -6.506252765655518

Token 58: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3863711357116699
    2. '/' → logprob: -2.01137113571167
    3. ' -' → logprob: -2.01137113571167
    4. '-' → logprob: -3.01137113571167
    5. '/b' → logprob: -6.26137113571167
    6. '   ' → logprob: -7.51137113571167
    7. ' ' → logprob: -8.011371612548828
    8. '    ' → logprob: -9.011371612548828
    9. '*' → logprob: -9.136371612548828
    10. '  ' → logprob: -9.761371612548828

Token 59: ' base' (ID: 3611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0023729160893708467
    2. 'b' → logprob: -6.627372741699219
    3. ' a' → logprob: -7.127372741699219
    4. 'base' → logprob: -8.502372741699219
    5. ' base' → logprob: -11.252372741699219
    6. 'area' → logprob: -11.877372741699219
    7. '   ' → logprob: -12.127372741699219
    8. '(a' → logprob: -12.252372741699219
    9. ' b' → logprob: -12.752372741699219
    10. '(' → logprob: -12.877372741699219

Token 60: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -8.280175097752362e-05
    2. 'area' → logprob: -9.875082969665527
    3. '_' → logprob: -10.500082969665527
    4. '_a' → logprob: -13.750082969665527
    5. '_AREA' → logprob: -14.250082969665527
    6. '   ' → logprob: -14.875082969665527
    7. ' _' → logprob: -15.000082969665527
    8. '_size' → logprob: -15.250082969665527
    9. 'Area' → logprob: -15.625082969665527
    10. ' area' → logprob: -15.625082969665527

Token 61: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00354993948712945
    2. ' -' → logprob: -6.753550052642822
    3. '<|end|>' → logprob: -7.128550052642822
    4. '
' → logprob: -7.878550052642822
    5. ' +' → logprob: -8.253549575805664
    6. '-' → logprob: -8.253549575805664
    7. '   ' → logprob: -8.878549575805664
    8. 'else' → logprob: -9.378549575805664
    9. '+' → logprob: -9.628549575805664
    10. ' else' → logprob: -9.628549575805664

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0285932719707489
    2. '
' → logprob: -3.7785933017730713
    3. '<|end|>' → logprob: -6.403593063354492
    4. '   ' → logprob: -6.903593063354492
    5. '        
' → logprob: -7.278593063354492
    6. 'else' → logprob: -8.278593063354492
    7. '\n' → logprob: -8.403593063354492
    8. '```' → logprob: -8.653593063354492
    9. ',' → logprob: -8.778593063354492
    10. ')' → logprob: -8.778593063354492

Token 63: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3821712136268616
    2. ' angle' → logprob: -1.7571711540222168
    3. 'angle' → logprob: -2.632171154022217
    4. ' return' → logprob: -3.507171154022217
    5. 'return' (adapté à ' return') → logprob: -4.632171154022217
    6. ' y' → logprob: -5.132171154022217
    7. '\n' → logprob: -6.382171154022217
    8. '
' → logprob: -6.382171154022217
    9. ' else' → logprob: -6.382171154022217
    10. '   ' → logprob: -6.382171154022217

Token 64: ' degrees' (ID: 18210)
  Prédit: ' degrees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrees' → logprob: -0.0459630973637104
    2. 'degrees' → logprob: -3.1709630489349365
    3. ' float' → logprob: -6.295963287353516
    4. ' ' → logprob: -8.045963287353516
    5. ' round' → logprob: -8.670963287353516
    6. '90' → logprob: -9.170963287353516
    7. '   ' → logprob: -9.295963287353516
    8. 'float' → logprob: -9.295963287353516
    9. ' ' → logprob: -9.920963287353516
    10. ' abs' → logprob: -10.170963287353516

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.584861744660884e-05
    2. '(at' → logprob: -10.125045776367188
    3. '(math' → logprob: -12.750045776367188
    4. ' (' → logprob: -13.625045776367188
    5. '((' → logprob: -14.125045776367188
    6. '(
' → logprob: -15.500045776367188
    7. '('' → logprob: -16.250045776367188
    8. '(ar' → logprob: -16.250045776367188
    9. '(s' → logprob: -16.500045776367188
    10. '(

' → logprob: -16.750045776367188

Token 66: 'atan' (ID: 8294)
  Prédit: 'atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.00017910730093717575
    2. '(' → logprob: -8.875179290771484
    3. ' atan' → logprob: -10.500179290771484
    4. '.atan' → logprob: -12.000179290771484
    5. ')' → logprob: -12.500179290771484
    6. '   ' → logprob: -13.875179290771484
    7. 'ata' → logprob: -14.750179290771484
    8. 'aton' → logprob: -16.125179290771484
    9. '-' → logprob: -16.750179290771484
    10. 'at' → logprob: -16.875179290771484

Token 67: '((' (ID: 2054)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06085323914885521
    2. '(h' → logprob: -3.1858532428741455
    3. '((' → logprob: -4.560853004455566
    4. '(' → logprob: -4.935853004455566
    5. '(a' → logprob: -11.060853004455566
    6. ' (' → logprob: -11.435853004455566
    7. '(x' → logprob: -11.935853004455566
    8. '(((' → logprob: -12.435853004455566
    9. '(float' → logprob: -12.810853004455566
    10. '(base' → logprob: -12.935853004455566

Token 68: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10891376435756683
    2. 'h' → logprob: -2.8589136600494385
    3. '   ' → logprob: -4.233913898468018
    4. ' b' → logprob: -4.233913898468018
    5. '2' → logprob: -4.358913898468018
    6. ' h' → logprob: -6.733913898468018
    7. '(b' → logprob: -7.108913898468018
    8. ' ' → logprob: -7.608913898468018
    9. '	b' → logprob: -8.10891342163086
    10. 'a' → logprob: -8.48391342163086

Token 69: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.23204049468040466
    2. ' *' → logprob: -1.607040524482727
    3. '*(' → logprob: -5.3570404052734375
    4. '*b' → logprob: -6.3570404052734375
    5. '*h' → logprob: -8.982040405273438
    6. ' ' → logprob: -11.732040405273438
    7. ')' → logprob: -12.232040405273438
    8. '   ' → logprob: -12.357040405273438
    9. 'b' → logprob: -12.857040405273438
    10. '*r' → logprob: -13.732040405273438

Token 70: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.36155936121940613
    2. 'b' → logprob: -1.3615593910217285
    3. ' (' → logprob: -4.4865593910217285
    4. ' h' → logprob: -4.6115593910217285
    5. ' b' → logprob: -5.1115593910217285
    6. '(h' → logprob: -5.3615593910217285
    7. ' *' → logprob: -5.3615593910217285
    8. '(b' → logprob: -5.7365593910217285
    9. '(' → logprob: -6.4865593910217285
    10. ')' → logprob: -6.4865593910217285

Token 71: ' -' (ID: 533)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6228464841842651
    2. ')' → logprob: -0.9978464841842651
    3. '/' → logprob: -2.9978466033935547
    4. ' )' → logprob: -3.2478466033935547
    5. ')/' → logprob: -5.872846603393555
    6. ')/(' → logprob: -6.247846603393555
    7. ' ' → logprob: -7.622846603393555
    8. '   ' → logprob: -7.747846603393555
    9. ' -' → logprob: -8.872846603393555
    10. '-' → logprob: -9.247846603393555

Token 72: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38694217801094055
    2. ' b' → logprob: -1.1369421482086182
    3. ')b' → logprob: -10.261941909790039
    4. '	b' → logprob: -11.261941909790039
    5. ')' → logprob: -11.511941909790039
    6. '<|end|>' → logprob: -11.636941909790039
    7. 'a' → logprob: -13.386941909790039
    8. ' ' → logprob: -13.886941909790039
    9. ' a' → logprob: -14.386941909790039
    10. ' б' → logprob: -15.511941909790039

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015954379923641682
    2. ' )' → logprob: -6.626595497131348
    3. ')/' → logprob: -8.251595497131348
    4. ')/(' → logprob: -12.876595497131348
    5. '   ' → logprob: -13.001595497131348
    6. ' ' → logprob: -13.626595497131348
    7. ' /' → logprob: -14.001595497131348
    8. ')

' → logprob: -15.251595497131348
    9. ')
' → logprob: -15.626595497131348
    10. '/' → logprob: -15.751595497131348

Token 74: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.056387949734926224
    2. '/' → logprob: -3.0563879013061523
    3. '/b' → logprob: -4.931387901306152
    4. ')' → logprob: -8.431387901306152
    5. '   ' → logprob: -8.806387901306152
    6. 'b' → logprob: -9.431387901306152
    7. ' ' → logprob: -10.431387901306152
    8. '/(' → logprob: -10.806387901306152
    9. '    ' → logprob: -11.556387901306152
    10. ' /
' → logprob: -11.681387901306152

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038107357919216156
    2. ' a' → logprob: -3.288107395172119
    3. '(' → logprob: -10.913106918334961
    4. ' ' → logprob: -11.038106918334961
    5. ' (' → logprob: -11.038106918334961
    6. '	a' → logprob: -12.913106918334961
    7. '2' → logprob: -13.038106918334961
    8. '(a' → logprob: -13.163106918334961
    9. ')a' → logprob: -13.163106918334961
    10. '   ' → logprob: -13.288106918334961

Token 76: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008425032719969749
    2. ')))' → logprob: -7.875842571258545
    3. ')' → logprob: -8.250842094421387
    4. '))
' → logprob: -8.625842094421387
    5. ' ))' → logprob: -11.250842094421387
    6. '   ' → logprob: -12.625842094421387
    7. ' ' → logprob: -13.125842094421387
    8. '))

' → logprob: -13.750842094421387
    9. ''))' → logprob: -14.750842094421387
    10. '))
' → logprob: -14.875842094421387

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3802536427974701
    2. 'else' → logprob: -1.7552536725997925
    3. ' else' → logprob: -2.130253553390503
    4. '    
' → logprob: -4.505253791809082
    5. '
' → logprob: -5.755253791809082
    6. ')' → logprob: -6.130253791809082
    7. '```' → logprob: -6.255253791809082
    8. '<|end|>' → logprob: -6.755253791809082
    9. '	else' → logprob: -6.880253791809082
    10. '   
' → logprob: -7.255253791809082

Token 78: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.12426618486642838
    2. ' else' → logprob: -2.2492661476135254
    3. 'e' → logprob: -5.124266147613525
    4. '   ' → logprob: -6.249266147613525
    5. ')' → logprob: -6.874266147613525
    6. 'n' → logprob: -7.874266147613525
    7. '
' → logprob: -8.124266624450684
    8. '	else' → logprob: -8.124266624450684
    9. 's' → logprob: -8.249266624450684
    10. '    
' → logprob: -8.499266624450684

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14894837141036987
    2. ':
' → logprob: -2.0239484310150146
    3. '       ' → logprob: -5.3989481925964355
    4. '   ' → logprob: -7.1489481925964355
    5. '    ' → logprob: -8.148948669433594
    6. ':return' → logprob: -8.273948669433594
    7. '{' → logprob: -9.023948669433594
    8. ':
' → logprob: -9.648948669433594
    9. '        ' → logprob: -10.023948669433594
    10. ' :
' → logprob: -10.398948669433594

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01876949518918991
    2. ' return' → logprob: -5.518769264221191
    3. ' h' → logprob: -5.768769264221191
    4. 'h' → logprob: -5.768769264221191
    5. '   ' → logprob: -5.768769264221191
    6. '```' → logprob: -6.143769264221191
    7. 'return' → logprob: -7.018769264221191
    8. ' degrees' → logprob: -7.393769264221191
    9. '    ' → logprob: -7.518769264221191
    10. 'degrees' → logprob: -8.768769264221191

Token 81: ' d' (ID: 272)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25053226947784424
    2. 'h' → logprob: -1.6255322694778442
    3. '       ' → logprob: -4.750532150268555
    4. ' return' → logprob: -5.000532150268555
    5. 'angle' → logprob: -5.500532150268555
    6. '   ' → logprob: -6.375532150268555
    7. 'degrees' → logprob: -6.750532150268555
    8. 'height' → logprob: -7.375532150268555
    9. ' h' → logprob: -7.625532150268555
    10. '           ' → logprob: -7.875532150268555

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.047356244176626205
    2. '=' → logprob: -3.297356128692627
    3. 'ef' → logprob: -5.047356128692627
    4. 'ist' → logprob: -7.047356128692627
    5. 'x' → logprob: -7.672356128692627
    6. 'f' → logprob: -7.797356128692627
    7. '=(' → logprob: -8.422356605529785
    8. 'iv' → logprob: -8.672356605529785
    9. 'e' → logprob: -9.047356605529785
    10. 'ouble' → logprob: -9.547356605529785

Token 83: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39764586091041565
    2. ' (' → logprob: -1.6476458311080933
    3. 'x' → logprob: -2.647645950317383
    4. '2' → logprob: -3.897645950317383
    5. ' x' → logprob: -3.897645950317383
    6. '(x' → logprob: -3.897645950317383
    7. ' ' → logprob: -6.022645950317383
    8. '3' → logprob: -7.022645950317383
    9. '((' → logprob: -9.022645950317383
    10. '(b' → logprob: -9.397645950317383

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32589250802993774
    2. '(' → logprob: -1.450892448425293
    3. 'x' → logprob: -3.575892448425293
    4. 'a' → logprob: -4.950892448425293
    5. 'b' → logprob: -5.075892448425293
    6. '(a' → logprob: -7.575892448425293
    7. ' ' → logprob: -7.700892448425293
    8. '4' → logprob: -7.700892448425293
    9. ' (' → logprob: -7.825892448425293
    10. '(b' → logprob: -8.575892448425293

Token 85: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006281889975070953
    2. '*' → logprob: -5.131281852722168
    3. '*x' → logprob: -8.131281852722168
    4. ' ' → logprob: -10.006281852722168
    5. 'x' → logprob: -12.256281852722168
    6. '*b' → logprob: -13.006281852722168
    7. '*a' → logprob: -13.506281852722168
    8. ' x' → logprob: -13.756281852722168
    9. ' ' → logprob: -14.131281852722168
    10. '0' → logprob: -14.256281852722168

Token 86: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008064248599112034
    2. '*x' → logprob: -5.508064270019531
    3. ' x' → logprob: -6.383064270019531
    4. 'a' → logprob: -6.883064270019531
    5. '*' → logprob: -7.258064270019531
    6. ' ' → logprob: -8.508064270019531
    7. ')' → logprob: -8.883064270019531
    8. '*a' → logprob: -9.508064270019531
    9. ' *' → logprob: -10.008064270019531
    10. 'xa' → logprob: -10.383064270019531

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008418352343142033
    2. ')/(' → logprob: -5.258418560028076
    3. ' )' → logprob: -6.133418560028076
    4. ')/' → logprob: -7.508418560028076
    5. ' /' → logprob: -8.383418083190918
    6. '/' → logprob: -8.508418083190918
    7. ' ' → logprob: -11.758418083190918
    8. '/a' → logprob: -12.133418083190918
    9. '/)' → logprob: -12.383418083190918
    10. '   ' → logprob: -12.508418083190918

Token 88: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.16931746900081635
    2. ' /' → logprob: -1.9193174839019775
    3. '/(' → logprob: -5.419317245483398
    4. '/a' → logprob: -5.544317245483398
    5. '/b' → logprob: -8.169317245483398
    6. '/d' → logprob: -8.169317245483398
    7. '/n' → logprob: -10.169317245483398
    8. 'd' → logprob: -10.669317245483398
    9. ' /(' → logprob: -11.294317245483398
    10. ')' → logprob: -11.794317245483398

Token 89: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005823421524837613
    2. '(' → logprob: -8.250582695007324
    3. 'b' → logprob: -8.500582695007324
    4. ' a' → logprob: -10.000582695007324
    5. 'base' → logprob: -10.000582695007324
    6. '(a' → logprob: -11.125582695007324
    7. '(base' → logprob: -12.250582695007324
    8. ' (' → logprob: -12.500582695007324
    9. ' ' → logprob: -13.750582695007324
    10. ' base' → logprob: -13.750582695007324

Token 90: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04929548129439354
    2. 'b' → logprob: -3.049295425415039
    3. '(' → logprob: -8.049295425415039
    4. '(a' → logprob: -8.424295425415039
    5. ' a' → logprob: -9.174295425415039
    6. ' (' → logprob: -10.424295425415039
    7. '(b' → logprob: -11.174295425415039
    8. ' b' → logprob: -11.174295425415039
    9. '   ' → logprob: -12.799295425415039
    10. ' ' → logprob: -14.174295425415039

Token 91: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17268206179141998
    2. '*' → logprob: -1.9226820468902588
    3. '*a' → logprob: -4.547682285308838
    4. ')' → logprob: -7.047682285308838
    5. 'a' → logprob: -7.422682285308838
    6. ' ' → logprob: -8.42268180847168
    7. ' a' → logprob: -10.42268180847168
    8. '<|end|>' → logprob: -10.67268180847168
    9. '   ' → logprob: -11.04768180847168
    10. '*)' → logprob: -11.42268180847168

Token 92: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004062434600200504
    2. ' a' → logprob: -7.875406265258789
    3. ')' → logprob: -10.875406265258789
    4. '<|end|>' → logprob: -12.125406265258789
    5. ' ' → logprob: -14.625406265258789
    6. ')a' → logprob: -14.875406265258789
    7. '	a' → logprob: -15.375406265258789
    8. 'd' → logprob: -15.500406265258789
    9. '  ' → logprob: -15.750406265258789
    10. '   ' → logprob: -16.75040626525879

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1434451788663864
    2. ')
' → logprob: -2.0184452533721924
    3. '       ' → logprob: -7.768445014953613
    4. ')
' → logprob: -8.643445014953613
    5. ' )' → logprob: -9.768445014953613
    6. ' )
' → logprob: -10.518445014953613
    7. ')

' → logprob: -10.643445014953613
    8. ')**' → logprob: -11.143445014953613
    9. ')return' → logprob: -11.768445014953613
    10. '**' → logprob: -11.768445014953613

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5917150378227234
    2. 'return' → logprob: -1.5917150974273682
    3. ' return' → logprob: -1.7167150974273682
    4. '   ' → logprob: -3.341715097427368
    5. '
' → logprob: -4.466714859008789
    6. '    ' → logprob: -5.966714859008789
    7. ')' → logprob: -6.091714859008789
    8. '    
' → logprob: -6.341714859008789
    9. '        
' → logprob: -6.591714859008789
    10. '(' → logprob: -6.591714859008789

Token 95: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.060533955693244934
    2. ' return' → logprob: -3.3105340003967285
    3. '       ' → logprob: -3.8105340003967285
    4. '   ' → logprob: -10.06053352355957
    5. 'import' → logprob: -10.56053352355957
    6. '	return' → logprob: -11.56053352355957
    7. 'eturn' → logprob: -12.06053352355957
    8. 'from' → logprob: -12.18553352355957
    9. 'd' → logprob: -12.56053352355957
    10. '           ' → logprob: -13.06053352355957

Token 96: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.14292338490486145
    2. ' degrees' → logprob: -2.017923355102539
    3. '   ' → logprob: -8.767923355102539
    4. 'atan' → logprob: -10.767923355102539
    5. 'de' → logprob: -11.142923355102539
    6. '-' → logprob: -11.517923355102539
    7. ' ' → logprob: -11.642923355102539
    8. '(de' → logprob: -12.142923355102539
    9. ' -' → logprob: -12.142923355102539
    10. 'deg' → logprob: -12.517923355102539

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.191489642835222e-05
    2. '(at' → logprob: -10.250041961669922
    3. '((' → logprob: -12.375041961669922
    4. '(math' → logprob: -13.625041961669922
    5. ' (' → logprob: -14.875041961669922
    6. 'atan' → logprob: -16.125041961669922
    7. '(s' → logprob: -16.125041961669922
    8. '(ar' → logprob: -16.375041961669922
    9. '(ast' → logprob: -17.125041961669922
    10. '.atan' → logprob: -17.250041961669922

Token 98: 'atan' (ID: 8294)
  Prédit: 'atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -8.959636033978313e-05
    2. ' atan' → logprob: -9.500089645385742
    3. '(' → logprob: -12.000089645385742
    4. 'ata' → logprob: -13.000089645385742
    5. '.atan' → logprob: -13.125089645385742
    6. '   ' → logprob: -13.375089645385742
    7. 'aten' → logprob: -14.625089645385742
    8. 'asin' → logprob: -14.750089645385742
    9. 'atu' → logprob: -15.000089645385742
    10. ')' → logprob: -15.250089645385742

Token 99: '(b' (ID: 3229)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.11326680332422256
    2. '(' → logprob: -2.363266706466675
    3. ' (' → logprob: -4.988266944885254
    4. '((' → logprob: -5.113266944885254
    5. '(a' → logprob: -10.363266944885254
    6. '(b' → logprob: -10.613266944885254
    7. 'd' → logprob: -11.113266944885254
    8. ')' → logprob: -11.363266944885254
    9. ' ((' → logprob: -11.488266944885254
    10. '(
' → logprob: -11.988266944885254

Token 100: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.19122092425823212
    2. '*' → logprob: -1.8162208795547485
    3. '*d' → logprob: -5.191220760345459
    4. '/' → logprob: -5.941220760345459
    5. ' /' → logprob: -6.066220760345459
    6. '*(' → logprob: -7.816220760345459
    7. ')' → logprob: -8.941221237182617
    8. ' ' → logprob: -9.066221237182617
    9. '/d' → logprob: -9.191221237182617
    10. ' -' → logprob: -10.316221237182617

Token 101: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8816609382629395
    2. '(' → logprob: -1.2566609382629395
    3. '(a' → logprob: -1.3816609382629395
    4. ' (' → logprob: -3.8816609382629395
    5. '(d' → logprob: -3.8816609382629395
    6. 'd' → logprob: -4.8816609382629395
    7. ' a' → logprob: -7.1316609382629395
    8. '((' → logprob: -8.131660461425781
    9. ' d' → logprob: -10.256660461425781
    10. ' ' → logprob: -10.256660461425781

Token 102: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010797493159770966
    2. ')))' → logprob: -5.135797500610352
    3. ' ))' → logprob: -5.510797500610352
    4. ')' → logprob: -7.260797500610352
    5. '/' → logprob: -10.385797500610352
    6. ' /' → logprob: -10.760797500610352
    7. '/a' → logprob: -10.885797500610352
    8. ' )' → logprob: -11.260797500610352
    9. '))
' → logprob: -12.010797500610352
    10. ' ' → logprob: -12.260797500610352

Token 103: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035471681505441666
    2. '<|end|>' → logprob: -4.1604719161987305
    3. '
' → logprob: -5.0354719161987305
    4. '\n' → logprob: -5.1604719161987305
    5. '(' → logprob: -5.7854719161987305
    6. '```' → logprob: -6.7854719161987305
    7. '[' → logprob: -7.6604719161987305
    8. ' ' → logprob: -7.7854719161987305
    9. '#' → logprob: -7.7854719161987305
    10. ')
' → logprob: -8.03547191619873

Token 104: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0011722482740879059
    2. '__' → logprob: -6.751172065734863
    3. ' ' → logprob: -13.251172065734863
    4. ' True' → logprob: -15.751172065734863
    5. ' ' → logprob: -15.876172065734863
    6. '_' → logprob: -17.37617301940918
    7. ' _' → logprob: -17.62617301940918
    8. ' "__' → logprob: -18.12617301940918
    9. ' ___' → logprob: -18.75117301940918
    10. ' name' → logprob: -18.75117301940918

Token 105: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002487903693690896
    2. ' ==' → logprob: -6.752488136291504
    3. '==' → logprob: -7.502488136291504
    4. ' __' → logprob: -8.502488136291504
    5. '__.__' → logprob: -8.502488136291504
    6. '.__' → logprob: -8.752488136291504
    7. '__.' → logprob: -9.877488136291504
    8. '_' → logprob: -10.127488136291504
    9. '[' → logprob: -10.627488136291504
    10. '_name' → logprob: -11.002488136291504

Token 106: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004329341172706336
    2. '__.__' → logprob: -8.375432968139648
    3. '__.' → logprob: -8.625432968139648
    4. '___' → logprob: -11.750432968139648
    5. '__["' → logprob: -12.625432968139648
    6. '____' → logprob: -12.875432968139648
    7. '==' → logprob: -12.875432968139648
    8. '__
' → logprob: -13.250432968139648
    9. '_' → logprob: -13.625432968139648
    10. '```' → logprob: -13.625432968139648

Token 107: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3560557961463928
    2. '__' → logprob: -1.856055736541748
    3. '==' → logprob: -1.981055736541748
    4. '=="' → logprob: -5.356055736541748
    5. '"' → logprob: -8.856056213378906
    6. ' =="' → logprob: -9.106056213378906
    7. '=='' → logprob: -9.481056213378906
    8. '[' → logprob: -9.731056213378906
    9. '.' → logprob: -9.856056213378906
    10. '__.__' → logprob: -9.981056213378906

Token 108: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029751067981123924
    2. ''' → logprob: -3.5297510623931885
    3. ' "' → logprob: -14.77975082397461
    4. '__' → logprob: -15.90475082397461
    5. ' "__' → logprob: -15.90475082397461
    6. '`' → logprob: -17.27975082397461
    7. '_' → logprob: -19.40475082397461
    8. '"user' → logprob: -19.65475082397461
    9. '	' → logprob: -19.90475082397461
    10. '"name' → logprob: -20.40475082397461

Token 109: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0012182132340967655
    2. 'name' → logprob: -6.876218318939209
    3. '_main' → logprob: -9.00121784210205
    4. '__' → logprob: -9.75121784210205
    5. ' main' → logprob: -14.00121784210205
    6. '__":
' → logprob: -14.00121784210205
    7. '_name' → logprob: -14.62621784210205
    8. '```' → logprob: -14.75121784210205
    9. 'ma' → logprob: -15.00121784210205
    10. 'm' → logprob: -15.12621784210205

Token 110: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3135548233985901
    2. '__' → logprob: -1.3135547637939453
    3. '__':
' → logprob: -8.688554763793945
    4. '__:' → logprob: -9.188554763793945
    5. '__["' → logprob: -11.688554763793945
    6. '__.__' → logprob: -12.813554763793945
    7. '__
' → logprob: -12.813554763793945
    8. '__("' → logprob: -12.938554763793945
    9. '__.' → logprob: -13.063554763793945
    10. '__",' → logprob: -13.938554763793945

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007318620104342699
    2. '    
' → logprob: -6.007318496704102
    3. 'n' → logprob: -6.382318496704102
    4. ' n' → logprob: -7.382318496704102
    5. '<|end|>' → logprob: -7.507318496704102
    6. ' input' → logprob: -7.882318496704102
    7. '(n' → logprob: -8.007318496704102
    8. '```' → logprob: -8.507318496704102
    9. 'input' → logprob: -9.132318496704102
    10. '' → logprob: -9.382318496704102

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.14353421330451965
    2. ' a' → logprob: -2.0185341835021973
    3. '   ' → logprob: -7.143534183502197
    4. 'import' → logprob: -10.143534660339355
    5. ' import' → logprob: -10.893534660339355
    6. '	a' → logprob: -13.143534660339355
    7. ' while' → logprob: -13.643534660339355
    8. ' input' → logprob: -13.893534660339355
    9. ' data' → logprob: -14.143534660339355
    10. ' for' → logprob: -14.268534660339355

Token 113: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06984294205904007
    2. ',' → logprob: -2.944843053817749
    3. ' ,' → logprob: -4.69484281539917
    4. ' ' → logprob: -5.56984281539917
    5. '=' → logprob: -6.31984281539917
    6. '<|end|>' → logprob: -10.319843292236328
    7. '  ' → logprob: -11.319843292236328
    8. ')' → logprob: -11.694843292236328
    9. ' =)' → logprob: -12.069843292236328
    10. '.' → logprob: -12.069843292236328

Token 114: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07891027629375458
    2. 'b' → logprob: -2.5789103507995605
    3. ' ' → logprob: -11.203909873962402
    4. ' =' → logprob: -13.078909873962402
    5. '=' → logprob: -13.453909873962402
    6. ' ' → logprob: -13.453909873962402
    7. 'space' → logprob: -14.453909873962402
    8. ',' → logprob: -15.453909873962402
    9. '  ' → logprob: -15.453909873962402
    10. ',b' → logprob: -15.578909873962402

Token 115: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18883706629276276
    2. '=' → logprob: -2.1888370513916016
    3. ',' → logprob: -2.8138370513916016
    4. '=input' → logprob: -10.813837051391602
    5. ' ,' → logprob: -11.063837051391602
    6. ' ' → logprob: -11.438837051391602
    7. '<|end|>' → logprob: -12.438837051391602
    8. '=int' → logprob: -14.188837051391602
    9. ' =",' → logprob: -14.313837051391602
    10. ')' → logprob: -14.438837051391602

Token 116: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018185529857873917
    2. ' x' → logprob: -4.018185615539551
    3. 'c' → logprob: -11.76818561553955
    4. ',' → logprob: -11.76818561553955
    5. ' ' → logprob: -11.89318561553955
    6. '=' → logprob: -12.76818561553955
    7. ',x' → logprob: -12.76818561553955
    8. ' =' → logprob: -13.14318561553955
    9. '	x' → logprob: -13.51818561553955
    10. '   ' → logprob: -13.89318561553955

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16040730476379395
    2. '=' → logprob: -1.910407304763794
    3. ',' → logprob: -8.785407066345215
    4. '=input' → logprob: -10.535407066345215
    5. ')' → logprob: -14.285407066345215
    6. ' ' → logprob: -14.410407066345215
    7. ' ,' → logprob: -14.660407066345215
    8. '=int' → logprob: -15.035407066345215
    9. '<|end|>' → logprob: -15.035407066345215
    10. 'input' → logprob: -15.285407066345215

Token 118: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10654004663228989
    2. ' map' → logprob: -2.3565399646759033
    3. '10' → logprob: -6.981540203094482
    4. '18' → logprob: -7.106540203094482
    5. '20' → logprob: -7.606540203094482
    6. '42' → logprob: -8.231539726257324
    7. '5' → logprob: -8.231539726257324
    8. '45' → logprob: -8.356539726257324
    9. '15' → logprob: -8.356539726257324
    10. '19' → logprob: -8.481539726257324

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00864908006042242
    2. '(' → logprob: -4.758648872375488
    3. '(input' → logprob: -10.633648872375488
    4. 'int' → logprob: -12.133648872375488
    5. '(str' → logprob: -13.383648872375488
    6. '<int' → logprob: -13.633648872375488
    7. '(
' → logprob: -14.883648872375488
    8. '[int' → logprob: -14.883648872375488
    9. '(list' → logprob: -14.883648872375488
    10. '(eval' → logprob: -14.883648872375488

Token 120: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11180659383535385
    2. 'input' → logprob: -2.861806631088257
    3. ',input' → logprob: -3.111806631088257
    4. '(' → logprob: -6.361806392669678
    5. ',' → logprob: -6.861806392669678
    6. ' input' → logprob: -7.361806392669678
    7. ')' → logprob: -7.486806392669678
    8. '=input' → logprob: -9.986806869506836
    9. '<input' → logprob: -10.736806869506836
    10. '	input' → logprob: -11.111806869506836

Token 121: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019287518225610256
    2. ' input' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.876928329467773
    4. '	input' → logprob: -17.251928329467773
    5. ' ' → logprob: -17.501928329467773
    6. ',input' → logprob: -18.251928329467773
    7. '(input' → logprob: -18.501928329467773
    8. ')' → logprob: -19.001928329467773
    9. '=input' → logprob: -19.126928329467773
    10. '<input' → logprob: -19.751928329467773

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015080781886354089
    2. '()' → logprob: -6.5015082359313965
    3. ' ().' → logprob: -13.251507759094238
    4. '())' → logprob: -13.376507759094238
    5. '(' → logprob: -13.751507759094238
    6. '("").' → logprob: -14.376507759094238
    7. '()
' → logprob: -15.876507759094238
    8. '('').' → logprob: -16.001508712768555
    9. ')' → logprob: -16.626508712768555
    10. ' ()' → logprob: -16.876508712768555

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004377022560220212
    2. 'strip' → logprob: -7.7504377365112305
    3. 'rstrip' → logprob: -12.87543773651123
    4. '().' → logprob: -13.25043773651123
    5. ' split' → logprob: -13.62543773651123
    6. '(split' → logprob: -14.12543773651123
    7. 'read' → logprob: -14.75043773651123
    8. ')' → logprob: -15.87543773651123
    9. '.split' → logprob: -16.750436782836914
    10. 'spl' → logprob: -16.875436782836914

Token 124: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05594966933131218
    2. '()))' → logprob: -3.0559496879577637
    3. ')' → logprob: -5.555949687957764
    4. '()' → logprob: -6.055949687957764
    5. '))' → logprob: -6.805949687957764
    6. '()))
' → logprob: -12.180949211120605
    7. '(' → logprob: -12.555949211120605
    8. '())
' → logprob: -12.680949211120605
    9. ' ())' → logprob: -13.305949211120605
    10. '()),' → logprob: -13.680949211120605

Token 125: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00638091005384922
    2. '   ' → logprob: -5.631381034851074
    3. ' print' → logprob: -6.756381034851074
    4. '<|end|>' → logprob: -7.881381034851074
    5. '(print' → logprob: -8.131381034851074
    6. ')' → logprob: -8.131381034851074
    7. '()' → logprob: -8.381381034851074
    8. '
' → logprob: -9.131381034851074
    9. '```' → logprob: -9.756381034851074
    10. '    
' → logprob: -10.131381034851074

Token 126: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005682834889739752
    2. 'angle' → logprob: -7.500568389892578
    3. ' print' → logprob: -11.500568389892578
    4. 'result' → logprob: -12.250568389892578
    5. ' angle' → logprob: -15.000568389892578
    6. 'answer' → logprob: -17.000568389892578
    7. '<|end|>' → logprob: -17.375568389892578
    8. '```' → logprob: -18.000568389892578
    9. '   ' → logprob: -19.000568389892578
    10. '    
' → logprob: -19.125568389892578

Token 127: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.026879558339715004
    2. '(round' → logprob: -4.276879787445068
    3. '(' → logprob: -4.401879787445068
    4. '(calc' → logprob: -8.77687931060791
    5. '(f' → logprob: -9.02687931060791
    6. '(cal' → logprob: -10.02687931060791
    7. '(int' → logprob: -10.90187931060791
    8. '(
' → logprob: -11.27687931060791
    9. '()' → logprob: -11.65187931060791
    10. '("%.' → logprob: -11.90187931060791

Token 128: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -0.000111768240458332
    2. 'alc' → logprob: -9.50011157989502
    3. 'al' → logprob: -10.25011157989502
    4. 'alu' → logprob: -14.87511157989502
    5. 'l' → logprob: -15.12511157989502
    6. 'ulate' → logprob: -15.25011157989502
    7. 'aculate' → logprob: -15.75011157989502
    8. 'calculate' → logprob: -16.250112533569336
    9. 'on' → logprob: -16.500112533569336
    10. ')' → logprob: -16.625112533569336

Token 129: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.375
    3. '_angles' → logprob: -16.625
    4. 'angle' → logprob: -17.5
    5. '_ang' → logprob: -17.625
    6. ' _' → logprob: -17.75
    7. '_area' → logprob: -18.875
    8. '_a' → logprob: -19.25
    9. ')' → logprob: -19.875
    10. ')_' → logprob: -20.125

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0001307142956648022
    2. '(' → logprob: -9.250130653381348
    3. ' (' → logprob: -10.500130653381348
    4. ')' → logprob: -12.500130653381348
    5. ')(' → logprob: -13.375130653381348
    6. '(x' → logprob: -13.625130653381348
    7. '((' → logprob: -15.250130653381348
    8. '(
' → logprob: -16.000131607055664
    9. '```' → logprob: -16.875131607055664
    10. '(ai' → logprob: -18.375131607055664

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014060820103622973
    2. ',b' → logprob: -9.000140190124512
    3. ' ,' → logprob: -11.375140190124512
    4. 'b' → logprob: -12.375140190124512
    5. ',
' → logprob: -13.875140190124512
    6. ',

' → logprob: -16.125141143798828
    7. '',' → logprob: -16.375141143798828
    8. '`,' → logprob: -16.625141143798828
    9. '",' → logprob: -16.625141143798828
    10. '‌,' → logprob: -16.875141143798828

Token 132: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009814642369747162
    2. ' b' → logprob: -4.759814739227295
    3. 'x' → logprob: -6.759814739227295
    4. ' x' → logprob: -10.134814262390137
    5. ' ' → logprob: -15.509814262390137
    6. '	b' → logprob: -18.384815216064453
    7. '   ' → logprob: -18.384815216064453
    8. ')b' → logprob: -18.759815216064453
    9. ')' → logprob: -19.009815216064453
    10. 'a' → logprob: -19.134815216064453

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031508569372817874
    2. ',x' → logprob: -8.500314712524414
    3. ' ,' → logprob: -9.125314712524414
    4. '   ' → logprob: -13.875314712524414
    5. 'x' → logprob: -13.875314712524414
    6. ')' → logprob: -15.750314712524414
    7. ',
' → logprob: -16.125314712524414
    8. ' ' → logprob: -16.375314712524414
    9. '```' → logprob: -16.875314712524414
    10. '3' → logprob: -16.875314712524414

Token 134: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. ')x' → logprob: -18.37502098083496
    4. ')' → logprob: -20.75002098083496
    5. '	x' → logprob: -20.75002098083496
    6. '   ' → logprob: -21.75002098083496
    7. '(x' → logprob: -22.62502098083496
    8. '"x' → logprob: -22.75002098083496
    9. ' ' → logprob: -22.87502098083496
    10. '```' → logprob: -24.25002098083496

Token 135: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006722233723849058
    2. ')' → logprob: -5.006722450256348
    3. '))
' → logprob: -12.506722450256348
    4. ')))' → logprob: -12.756722450256348
    5. ' ))' → logprob: -16.38172149658203
    6. '()))' → logprob: -16.63172149658203
    7. ')
' → logprob: -17.00672149658203
    8. ''))' → logprob: -17.13172149658203
    9. '),' → logprob: -17.25672149658203
    10. '"))' → logprob: -18.00672149658203


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 133
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 44.36%
Précision adaptée (1ère position): 47.37%
Précision (top 10): 84.96%
================================================================================
