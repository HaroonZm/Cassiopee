================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math  # Importe le module math, permettant d'accéder à des fonctions mathématiques standards. Ici, il n'est pas nécessaire mais c'est conservé.

# Prend l'entrée utilisateur sous forme d'une chaîne de caractères, 
# divise cette chaîne à chaque espace, transforme chaque partie en entier grâce à map(int, ...),
# puis assigne ces deux entiers respectivement à n et l.
n, l = map(int, input().split())

# Initialise la variable all_taste à zéro. 
# Cette variable va contenir la somme totale des goûts de toutes les pommes,
# c'est-à-dire la somme de la saveur de chaque pomme prise une fois.
all_taste = 0  # au début la somme est zéro

# Cette boucle for itère sur tous les index (i) allant de 1 jusqu'à (y compris) n.
# Cela permet de calculer le goût de chaque pomme basée sur l'ordre (i).
for i in range(1, n + 1):  # commence à 1, finit à n inclus. Le premier argument de range est inclus, le deuxième est exclu.
    # Calcule la saveur actuelle de la pomme numéro i.
    # La saveur est définie comme l + i - 1. Cela signifie que la première pomme a la saveur l,
    # la seconde pomme est l + 1, etc.
    tmp = l + i - 1

    # Ajoute la valeur de tmp à la variable all_taste pour accumuler la somme totale.
    all_taste = all_taste + tmp

# Après la boucle précédente, all_taste contient maintenant la somme de toutes les saveurs, 
# c'est-à-dire le total de tous les goûts possibles si on mange toutes les pommes.

# Initialise la variable act_taste à 0. 
# Cette variable contiendra la somme effective de saveurs après avoir retiré la pomme optimale à ne pas manger.
act_taste = 0

# Initialisation de la variable eat_apple avec la saveur de la première pomme, 
# c'est-à-dire l + 1 - 1. Cela équivaut à l.
eat_apple = l + 1 - 1  # soit l

# Cette nouvelle boucle for parcourt chaque pomme pour déterminer laquelle il faut retirer pour
# minimiser la différence absolue du goût rejeté, c'est-à-dire celle dont la saveur (positive ou négative)
# est la plus proche possible de zéro. Cela permet de conserver un goût total le plus proche possible 
# de la somme totale originale.
for i in range(1, n + 1):  # itère sur chaque pomme pour déterminer laquelle ne pas manger
    # Calcule la saveur de la pomme en cours de vérification.
    cmp_apple = l + i - 1

    # Si la valeur absolue de cmp_apple (la saveur candidate) est plus petite ou égale que celle de eat_apple,
    # alors met à jour eat_apple, car on préfère supprimer une pomme dont la saveur est plus proche de zéro.
    if abs(cmp_apple) <= abs(eat_apple):
        eat_apple = cmp_apple  # met à jour la pomme à retirer

        # Calcule le goût total effectif (après avoir retiré la pomme eat_apple).
        act_taste = all_taste - eat_apple

# Affiche la valeur de act_taste, c'est-à-dire la somme des saveurs des n-1 pommes restantes,
# après avoir retiré la pomme ayant une saveur la plus proche de zéro.
print(act_taste)  # sortie finale du résultat
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003556039300747216
    2. '\' → logprob: -8.50035572052002
    3. 'import' → logprob: -10.25035572052002
    4. '\n' → logprob: -10.25035572052002
    5. '```' → logprob: -10.87535572052002
    6. '(' → logprob: -11.75035572052002
    7. 'def' → logprob: -11.87535572052002
    8. '<|end|>' → logprob: -12.00035572052002
    9. ',' → logprob: -12.25035572052002
    10. '#' → logprob: -12.75035572052002

Token 4: ' Im' (ID: 3133)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5391530990600586
    2. ' ' → logprob: -1.1641530990600586
    3. ' .' → logprob: -3.6641530990600586
    4. '_' → logprob: -4.164153099060059
    5. '.sqrt' → logprob: -4.289153099060059
    6. 'import' → logprob: -4.539153099060059
    7. ',' → logprob: -5.039153099060059
    8. ' import' → logprob: -5.164153099060059
    9. ' math' → logprob: -5.414153099060059
    10. ' ,' → logprob: -6.289153099060059

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0181773342192173
    2. 'p' → logprob: -4.018177509307861
    3. 'por' → logprob: -12.268177032470703
    4. 'ported' → logprob: -12.268177032470703
    5. 'porter' → logprob: -12.893177032470703
    6. ' ' → logprob: -13.018177032470703
    7. 'ports' → logprob: -13.393177032470703
    8. 'r' → logprob: -13.393177032470703
    9. '```' → logprob: -13.643177032470703
    10. 'plement' → logprob: -14.018177032470703

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14367495477199554
    2. ' ' → logprob: -2.518674850463867
    3. 's' → logprob: -3.393674850463867
    4. 'd' → logprob: -4.893674850463867
    5. ' r' → logprob: -5.518674850463867
    6. '.' → logprob: -6.018674850463867
    7. 'n' → logprob: -6.643674850463867
    8. 'nt' → logprob: -7.143674850463867
    9. 'm' → logprob: -7.393674850463867
    10. ''s' → logprob: -8.018674850463867

Token 7: ' module' (ID: 8827)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08678928762674332
    2. ' math' → logprob: -2.83678936958313
    3. ' module' → logprob: -4.711789131164551
    4. 'r' → logprob: -5.336789131164551
    5. ' space' → logprob: -6.086789131164551
    6. '  ' → logprob: -6.336789131164551
    7. 's' → logprob: -6.336789131164551
    8. ',' → logprob: -7.461789131164551
    9. 'ur' → logprob: -7.586789131164551
    10. ' espace' → logprob: -7.586789131164551

Token 8: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030621882528066635
    2. 'as' → logprob: -4.9056220054626465
    3. ',' → logprob: -5.6556220054626465
    4. 'import' → logprob: -5.6556220054626465
    5. ' as' → logprob: -5.9056220054626465
    6. ' ' → logprob: -6.4056220054626465
    7. '```' → logprob: -6.4056220054626465
    8. 'a' → logprob: -6.5306220054626465
    9. '.pyplot' → logprob: -6.6556220054626465
    10. '\' → logprob: -7.1556220054626465

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018632952123880386
    2. 'import' → logprob: -5.143632888793945
    3. '\' → logprob: -6.143632888793945
    4. '\n' → logprob: -6.268632888793945
    5. '
' → logprob: -6.518632888793945
    6. '```' → logprob: -6.893632888793945
    7. '' → logprob: -7.018632888793945
    8. ',' → logprob: -7.268632888793945
    9. '<|end|>' → logprob: -7.643632888793945
    10. '#' → logprob: -7.768632888793945

Token 10: ' permettant' (ID: 61092)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8775082230567932
    2. ',' → logprob: -1.5025081634521484
    3. '.' → logprob: -1.6275081634521484
    4. 'import' → logprob: -2.3775081634521484
    5. '\' → logprob: -4.002508163452148
    6. '```' → logprob: -4.752508163452148
    7. ' ' → logprob: -5.002508163452148
    8. ' ,' → logprob: -5.127508163452148
    9. ' .' → logprob: -5.627508163452148
    10. '
' → logprob: -5.752508163452148

Token 11: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17167812585830688
    2. ' ' → logprob: -2.671678066253662
    3. ' .' → logprob: -3.546678066253662
    4. ',' → logprob: -4.546678066253662
    5. ' de' → logprob: -4.796678066253662
    6. 'import' → logprob: -4.796678066253662
    7. '<|end|>' → logprob: -5.171678066253662
    8. 's' → logprob: -5.296678066253662
    9. '  ' → logprob: -5.546678066253662
    10. '```' → logprob: -6.171678066253662

Token 12: ''acc' (ID: 46331)
  Prédit: ''effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -0.19125519692897797
    2. ''utiliser' → logprob: -2.1912550926208496
    3. ''ex' → logprob: -3.0662550926208496
    4. ''' → logprob: -4.56625509262085
    5. 'e' → logprob: -6.94125509262085
    6. ''import' → logprob: -7.06625509262085
    7. ''ac' → logprob: -7.19125509262085
    8. ''acc' → logprob: -7.56625509262085
    9. ''avoir' → logprob: -7.69125509262085
    10. ''é' → logprob: -8.191255569458008

Token 13: 'éder' (ID: 56640)
  Prédit: 'éder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éder' → logprob: -0.1565713733434677
    2. 'é' → logprob: -2.031571388244629
    3. 'ès' → logprob: -5.156571388244629
    4. 'è' → logprob: -5.156571388244629
    5. 'és' → logprob: -6.281571388244629
    6. '\' → logprob: -9.156571388244629
    7. 'ess' → logprob: -9.531571388244629
    8. 'ée' → logprob: -10.406571388244629
    9. 'eder' → logprob: -10.656571388244629
    10. 'él' → logprob: -10.656571388244629

Token 14: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22413985431194305
    2. ' .' → logprob: -1.7241398096084595
    3. 'import' → logprob: -5.72413969039917
    4. ' ' → logprob: -5.84913969039917
    5. ' à' → logprob: -6.22413969039917
    6. ' to' → logprob: -6.22413969039917
    7. '\' → logprob: -6.34913969039917
    8. '<|end|>' → logprob: -6.72413969039917
    9. '```' → logprob: -6.84913969039917
    10. '.e' → logprob: -6.97413969039917

Token 15: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17583443224430084
    2. ' des' → logprob: -1.9258344173431396
    3. ' les' → logprob: -5.300834655761719
    4. 'des' → logprob: -6.175834655761719
    5. ' la' → logprob: -6.425834655761719
    6. ' l' → logprob: -6.800834655761719
    7. ' math' → logprob: -6.925834655761719
    8. ' ' → logprob: -7.175834655761719
    9. ''s' → logprob: -7.300834655761719
    10. 's' → logprob: -7.800834655761719

Token 16: ' fonctions' (ID: 87283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09239859879016876
    2. 'es' → logprob: -2.5923986434936523
    3. ' fonctions' → logprob: -5.592398643493652
    4. '.' → logprob: -5.842398643493652
    5. ' espaces' → logprob: -5.967398643493652
    6. 's' → logprob: -6.717398643493652
    7. '  ' → logprob: -7.467398643493652
    8. 'e' → logprob: -7.592398643493652
    9. '_' → logprob: -8.092398643493652
    10. ' functions' → logprob: -8.467398643493652

Token 17: ' math' (ID: 13324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005052540800534189
    2. 'import' → logprob: -8.375505447387695
    3. ',' → logprob: -9.125505447387695
    4. '.e' → logprob: -10.875505447387695
    5. '.import' → logprob: -11.000505447387695
    6. '```' → logprob: -11.000505447387695
    7. 'e' → logprob: -11.500505447387695
    8. '_' → logprob: -11.625505447387695
    9. ' .' → logprob: -11.750505447387695
    10. '.
' → logprob: -11.875505447387695

Token 18: 'ématiques' (ID: 114734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29932901263237
    2. 'ématiques' → logprob: -1.4243290424346924
    3. 'ématique' → logprob: -4.299328804016113
    4. 'é' → logprob: -6.549328804016113
    5. '.e' → logprob: -7.299328804016113
    6. 'e' → logprob: -7.674328804016113
    7. 'ém' → logprob: -7.799328804016113
    8. 's' → logprob: -7.924328804016113
    9. '```' → logprob: -8.299328804016113
    10. 'éma' → logprob: -8.674328804016113

Token 19: ' standards' (ID: 13853)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7013088464736938
    2. '
' → logprob: -1.0763088464736938
    3. '\n' → logprob: -3.2013087272644043
    4. '

' → logprob: -3.5763087272644043
    5. '\' → logprob: -3.7013087272644043
    6. '' → logprob: -3.9513087272644043
    7. 'import' → logprob: -4.576308727264404
    8. ' ' → logprob: -4.951308727264404
    9. ',' → logprob: -5.326308727264404
    10. 'a' → logprob: -5.451308727264404

Token 20: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7851293683052063
    2. '.' → logprob: -1.2851293087005615
    3. '\n' → logprob: -2.1601293087005615
    4. '

' → logprob: -2.7851293087005615
    5. '\' → logprob: -2.9101293087005615
    6. 'import' → logprob: -4.660129547119141
    7. '' → logprob: -4.910129547119141
    8. '
' → logprob: -5.160129547119141
    9. '```' → logprob: -5.535129547119141
    10. ',' → logprob: -6.535129547119141

Token 21: ' Ici' (ID: 145754)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8738437294960022
    2. '.' → logprob: -1.4988436698913574
    3. '\n' → logprob: -2.1238436698913574
    4. '\' → logprob: -2.7488436698913574
    5. '

' → logprob: -2.9988436698913574
    6. '' → logprob: -3.1238436698913574
    7. ' ' → logprob: -3.7488436698913574
    8. 'import' → logprob: -3.9988436698913574
    9. ',' → logprob: -4.248843669891357
    10. '
' → logprob: -4.998843669891357

Token 22: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04006519168615341
    2. ',' → logprob: -3.665065288543701
    3. 'import' → logprob: -5.165065288543701
    4. ' ' → logprob: -5.665065288543701
    5. '\' → logprob: -6.790065288543701
    6. ' .' → logprob: -7.040065288543701
    7. ')' → logprob: -8.290064811706543
    8. 'e' → logprob: -8.415064811706543
    9. '[' → logprob: -8.665064811706543
    10. '<|end|>' → logprob: -8.790064811706543

Token 23: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016223376151174307
    2. ' math' → logprob: -7.126622200012207
    3. '  ' → logprob: -8.376622200012207
    4. ' ,' → logprob: -9.501622200012207
    5. 'math' → logprob: -9.501622200012207
    6. '_' → logprob: -9.876622200012207
    7. ' a' → logprob: -9.876622200012207
    8. ' )' → logprob: -10.126622200012207
    9. 'import' → logprob: -10.376622200012207
    10. ',' → logprob: -10.376622200012207

Token 24: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.571445643901825
    2. '.' → logprob: -1.1964457035064697
    3. ''' → logprob: -3.0714457035064697
    4. 's' → logprob: -3.8214457035064697
    5. ''s' → logprob: -4.946445465087891
    6. ' faut' → logprob: -4.946445465087891
    7. 'n' → logprob: -5.571445465087891
    8. ' .' → logprob: -5.571445465087891
    9. ' space' → logprob: -5.696445465087891
    10. '_' → logprob: -5.696445465087891

Token 25: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02547704428434372
    2. ''est' → logprob: -4.775476932525635
    3. ''a' → logprob: -5.400476932525635
    4. ' '' → logprob: -5.400476932525635
    5. ''ex' → logprob: -5.650476932525635
    6. 'e' → logprob: -7.150476932525635
    7. ''y' → logprob: -7.400476932525635
    8. ''s' → logprob: -7.775476932525635
    9. ''espace' → logprob: -8.400477409362793
    10. ''é' → logprob: -8.775477409362793

Token 26: ' pas' (ID: 2173)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.17017778754234314
    2. '.' → logprob: -2.795177698135376
    3. 'util' → logprob: -3.295177698135376
    4. ' ' → logprob: -4.170177936553955
    5. ' possible' → logprob: -5.045177936553955
    6. ' utilis' → logprob: -5.545177936553955
    7. ' utilisée' → logprob: -5.670177936553955
    8. '.util' → logprob: -5.670177936553955
    9. ' nécessaire' → logprob: -5.795177936553955
    10. 'possible' → logprob: -6.295177936553955

Token 27: ' nécessaire' (ID: 43098)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.3355797231197357
    2. ' utilisé' → logprob: -1.335579752922058
    3. 'import' → logprob: -4.835579872131348
    4. 'utile' → logprob: -5.960579872131348
    5. ' nécessaire' → logprob: -6.335579872131348
    6. 'né' → logprob: -6.460579872131348
    7. ' ' → logprob: -6.710579872131348
    8. ' utilis' → logprob: -6.960579872131348
    9. ' utilisée' → logprob: -7.210579872131348
    10. ' import' → logprob: -7.710579872131348

Token 28: ' mais' (ID: 2899)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7024410367012024
    2. '<|end|>' → logprob: -1.3274409770965576
    3. '.' → logprob: -2.7024409770965576
    4. '
' → logprob: -2.8274409770965576
    5. ',' → logprob: -3.7024409770965576
    6. '  ' → logprob: -3.9524409770965576
    7. 'import' → logprob: -4.452441215515137
    8. '\' → logprob: -4.452441215515137
    9. '

' → logprob: -4.827441215515137
    10. '#' → logprob: -4.827441215515137

Token 29: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21181601285934448
    2. ' souvent' → logprob: -2.9618160724639893
    3. ' utile' → logprob: -3.2118160724639893
    4. ' ' → logprob: -3.5868160724639893
    5. ' possible' → logprob: -4.21181583404541
    6. ' peut' → logprob: -4.71181583404541
    7. ' pourrait' → logprob: -4.83681583404541
    8. ' il' → logprob: -4.96181583404541
    9. ' utilisé' → logprob: -4.96181583404541
    10. ' parfois' → logprob: -5.08681583404541

Token 30: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.44338348507881165
    2. 'o' → logprob: -2.4433834552764893
    3. 'omme' → logprob: -2.6933834552764893
    4. 'a' → logprob: -2.9433834552764893
    5. '```' → logprob: -3.8183834552764893
    6. 'est' → logprob: -3.9433834552764893
    7. ''est' → logprob: -4.068383693695068
    8. 'omm' → logprob: -4.068383693695068
    9. ''' → logprob: -4.318383693695068
    10. 'om' → logprob: -4.318383693695068

Token 31: ' conserv' (ID: 13953)
  Prédit: ' souvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' souvent' → logprob: -0.4383825361728668
    2. ' ' → logprob: -1.5633825063705444
    3. ' utile' → logprob: -2.563382625579834
    4. ' parfois' → logprob: -4.563382625579834
    5. 'possible' → logprob: -4.813382625579834
    6. 'utile' → logprob: -4.813382625579834
    7. ' possible' → logprob: -4.938382625579834
    8. 'sou' → logprob: -5.188382625579834
    9. ' quand' → logprob: -5.563382625579834
    10. 'import' → logprob: -5.813382625579834

Token 32: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -8.006006828509271e-05
    2. 'e' → logprob: -9.875080108642578
    3. 'ée' → logprob: -10.625080108642578
    4. 'u' → logprob: -13.125080108642578
    5. 'a' → logprob: -14.500080108642578
    6. 'er' → logprob: -14.875080108642578
    7. 'és' → logprob: -15.000080108642578
    8. 'ed' → logprob: -15.500080108642578
    9. '�' → logprob: -15.625080108642578
    10. ' é' → logprob: -16.125080108642578

Token 33: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39909303188323975
    2. '\n' → logprob: -1.6490930318832397
    3. '

' → logprob: -2.6490931510925293
    4. '\' → logprob: -4.399093151092529
    5. 'import' → logprob: -4.399093151092529
    6. '<|end|>' → logprob: -4.524093151092529
    7. '.' → logprob: -4.899093151092529
    8. ' ' → logprob: -5.149093151092529
    9. '' → logprob: -5.149093151092529
    10. '```' → logprob: -5.899093151092529

Token 34: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3310583233833313
    2. '\n' → logprob: -1.9560582637786865
    3. '

' → logprob: -2.8310582637786865
    4. '#' → logprob: -4.081058502197266
    5. '\' → logprob: -4.456058502197266
    6. ' ' → logprob: -4.581058502197266
    7. '' → logprob: -4.581058502197266
    8. '  
' → logprob: -5.206058502197266
    9. 'import' → logprob: -5.206058502197266
    10. 'a' → logprob: -5.456058502197266

Token 35: ' Pr' (ID: 2284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1085192933678627
    2. 'def' → logprob: -3.2335193157196045
    3. '#' → logprob: -3.6085193157196045
    4. ' #' → logprob: -3.9835193157196045
    5. ' def' → logprob: -4.733519077301025
    6. 'import' → logprob: -5.483519077301025
    7. 'd' → logprob: -7.108519077301025
    8. ' import' → logprob: -7.358519077301025
    9. ' ' → logprob: -7.608519077301025
    10. ' a' → logprob: -7.608519077301025

Token 36: 'end' (ID: 419)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8744993805885315
    2. '#' → logprob: -1.4994993209838867
    3. 'em' → logprob: -1.7494993209838867
    4. 'e' → logprob: -2.6244993209838867
    5. 'o' → logprob: -3.3744993209838867
    6. 'é' → logprob: -3.6244993209838867
    7. 'ec' → logprob: -4.249499320983887
    8. 'i' → logprob: -4.999499320983887
    9. 'ev' → logprob: -5.624499320983887
    10. 'és' → logprob: -5.999499320983887

Token 37: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05287683755159378
    2. '_' → logprob: -3.4278769493103027
    3. ' en' → logprob: -5.177876949310303
    4. ' un' → logprob: -5.552876949310303
    5. ' une' → logprob: -5.552876949310303
    6. 's' → logprob: -6.302876949310303
    7. ' des' → logprob: -7.302876949310303
    8. 'e' → logprob: -7.552876949310303
    9. ' a' → logprob: -7.802876949310303
    10. ' la' → logprob: -7.927876949310303

Token 38: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4347136914730072
    2. 'e' → logprob: -1.0597137212753296
    3. ''' → logprob: -6.809713840484619
    4. 'es' → logprob: -6.809713840484619
    5. 'u' → logprob: -6.809713840484619
    6. ''utilisateur' → logprob: -7.184713840484619
    7. ''espace' → logprob: -7.184713840484619
    8. ''entrée' → logprob: -7.934713840484619
    9. ' a' → logprob: -8.809713363647461
    10. ''ent' → logprob: -8.934713363647461

Token 39: ' utilisateur' (ID: 115595)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20765291154384613
    2. '_' → logprob: -2.7076528072357178
    3. ' ' → logprob: -2.9576528072357178
    4. '(' → logprob: -3.0826528072357178
    5. 'user' → logprob: -5.207653045654297
    6. 'e' → logprob: -5.332653045654297
    7. ')' → logprob: -5.832653045654297
    8. ',' → logprob: -6.457653045654297
    9. 'u' → logprob: -6.707653045654297
    10. ' =' → logprob: -6.957653045654297

Token 40: ' sous' (ID: 14487)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.9426904916763306
    2. 'n' → logprob: -1.4426904916763306
    3. 'u' → logprob: -1.4426904916763306
    4. 's' → logprob: -3.192690372467041
    5. 'x' → logprob: -3.442690372467041
    6. 'i' → logprob: -4.192690372467041
    7. 'e' → logprob: -4.442690372467041
    8. '#' → logprob: -4.567690372467041
    9. '_' → logprob: -5.192690372467041
    10. '(' → logprob: -5.442690372467041

Token 41: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.19982431828975677
    2. 'forme' → logprob: -1.824824333190918
    3. 'form' → logprob: -4.574824333190918
    4. ' form' → logprob: -5.074824333190918
    5. ' ' → logprob: -6.449824333190918
    6. 'la' → logprob: -7.199824333190918
    7. ' la' → logprob: -8.699824333190918
    8. 'forma' → logprob: -9.074824333190918
    9. 'une' → logprob: -9.074824333190918
    10. ' ' → logprob: -9.199824333190918

Token 42: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.23012124001979828
    2. 's' → logprob: -2.10512113571167
    3. ' de' → logprob: -2.60512113571167
    4. 'd' → logprob: -4.73012113571167
    5. ' ' → logprob: -7.48012113571167
    6. 'de' → logprob: -8.605121612548828
    7. ' s' → logprob: -8.980121612548828
    8. 'e' → logprob: -9.980121612548828
    9. '  ' → logprob: -10.980121612548828
    10. '_' → logprob: -11.605121612548828

Token 43: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42541319131851196
    2. 'e' → logprob: -1.3004131317138672
    3. ''un' → logprob: -3.425413131713867
    4. ''une' → logprob: -3.675413131713867
    5. ' '' → logprob: -4.925413131713867
    6. ''e' → logprob: -6.050413131713867
    7. ' ' → logprob: -6.300413131713867
    8. ''espace' → logprob: -6.550413131713867
    9. ''u' → logprob: -6.925413131713867
    10. ' e' → logprob: -7.550413131713867

Token 44: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.05855342000722885
    2. ' ' → logprob: -3.183553457260132
    3. ' chaine' → logprob: -4.308553218841553
    4. 'chaine' → logprob: -7.058553218841553
    5. ' string' → logprob: -7.433553218841553
    6. ' valeur' → logprob: -9.683553695678711
    7. ' phrase' → logprob: -9.808553695678711
    8. 'str' → logprob: -10.058553695678711
    9. ' chaînes' → logprob: -10.058553695678711
    10. 's' → logprob: -10.308553695678711

Token 45: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31123796105384827
    2. '_' → logprob: -2.6862380504608154
    3. 'user' → logprob: -2.8112380504608154
    4. ' ' → logprob: -3.4362380504608154
    5. 'e' → logprob: -3.6862380504608154
    6. 'u' → logprob: -3.8112380504608154
    7. 'n' → logprob: -4.686237812042236
    8. ')' → logprob: -4.811237812042236
    9. ',' → logprob: -5.061237812042236
    10. ' =' → logprob: -5.186237812042236

Token 46: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.17425218224525452
    2. 'texte' → logprob: -1.9242521524429321
    3. ' caractères' → logprob: -4.424252033233643
    4. 'chaine' → logprob: -7.424252033233643
    5. 's' → logprob: -7.799252033233643
    6. ' texte' → logprob: -8.4242525100708
    7. ' caract' → logprob: -8.5492525100708
    8. 'text' → logprob: -9.5492525100708
    9. 'string' → logprob: -9.5492525100708
    10. ' ' → logprob: -9.6742525100708

Token 47: ',' (ID: 11)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.7194290161132812
    2. 'u' → logprob: -1.0944290161132812
    3. 'n' → logprob: -2.3444290161132812
    4. 'x' → logprob: -3.7194290161132812
    5. 'i' → logprob: -4.219429016113281
    6. '#' → logprob: -4.469429016113281
    7. 's' → logprob: -5.344429016113281
    8. 'us' → logprob: -5.469429016113281
    9. 'input' → logprob: -5.594429016113281
    10. 'use' → logprob: -5.719429016113281

Token 48: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1025107130408287
    2. 's' → logprob: -3.227510690689087
    3. 'n' → logprob: -3.977510690689087
    4. ' )' → logprob: -4.352510929107666
    5. 't' → logprob: -4.977510929107666
    6. 'a' → logprob: -5.352510929107666
    7. 'r' → logprob: -5.477510929107666
    8. 'e' → logprob: -6.352510929107666
    9. ' ,' → logprob: -6.852510929107666
    10. ')' → logprob: -6.852510929107666

Token 49: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2796176075935364
    2. 's' → logprob: -2.5296175479888916
    3. 'n' → logprob: -3.2796175479888916
    4. 'i' → logprob: -3.5296175479888916
    5. 'x' → logprob: -3.7796175479888916
    6. 't' → logprob: -4.279617786407471
    7. 'a' → logprob: -4.654617786407471
    8. ' )' → logprob: -4.654617786407471
    9. 'u' → logprob: -4.904617786407471
    10. 'r' → logprob: -5.029617786407471

Token 50: ' div' (ID: 4223)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6999940276145935
    2. 'nombre' → logprob: -2.0749940872192383
    3. 'n' → logprob: -2.3249940872192383
    4. 'number' → logprob: -3.3249940872192383
    5. 'val' → logprob: -3.5749940872192383
    6. 'user' → logprob: -3.6999940872192383
    7. ' x' → logprob: -3.8249940872192383
    8. 'a' → logprob: -4.199994087219238
    9. 'value' → logprob: -4.199994087219238
    10. '#' → logprob: -4.199994087219238

Token 51: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.14800389111042023
    2. 'i' → logprob: -2.2730038166046143
    3. 'iser' → logprob: -4.773004055023193
    4. 'isé' → logprob: -5.273004055023193
    5. 'id' → logprob: -5.648004055023193
    6. 'e' → logprob: -5.648004055023193
    7. 'ide' → logprob: -5.898004055023193
    8. 'er' → logprob: -6.273004055023193
    9. 'isez' → logprob: -6.523004055023193
    10. 'isée' → logprob: -6.773004055023193

Token 52: ' cette' (ID: 7696)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0131754875183105
    2. ' ' → logprob: -1.5131754875183105
    3. '()' → logprob: -2.0131754875183105
    4. 's' → logprob: -2.1381754875183105
    5. '(' → logprob: -3.1381754875183105
    6. ' l' → logprob: -3.5131754875183105
    7. ')' → logprob: -4.1381754875183105
    8. ' )' → logprob: -4.1381754875183105
    9. ' le' → logprob: -4.7631754875183105
    10. 'l' → logprob: -5.1381754875183105

Token 53: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.09025876969099045
    2. ' ' → logprob: -3.340258836746216
    3. ' chaine' → logprob: -4.090258598327637
    4. 'chaine' → logprob: -4.840258598327637
    5. ' entrée' → logprob: -4.965258598327637
    6. ' phrase' → logprob: -5.090258598327637
    7. 's' → logprob: -5.465258598327637
    8. ' dernière' → logprob: -5.965258598327637
    9. ' string' → logprob: -6.340258598327637
    10. 'entrée' → logprob: -6.840258598327637

Token 54: ' à' (ID: 1221)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.089006207883358
    2. ' ' → logprob: -3.089006185531616
    3. 'en' → logprob: -3.839006185531616
    4. ' par' → logprob: -4.464006423950195
    5. ' selon' → logprob: -6.839006423950195
    6. 'e' → logprob: -7.464006423950195
    7. 'au' → logprob: -7.589006423950195
    8. ' au' → logprob: -7.964006423950195
    9. ' à' → logprob: -8.214006423950195
    10. ')' → logprob: -8.214006423950195

Token 55: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2879791259765625
    2. ' partir' → logprob: -1.5379791259765625
    3. ' chaque' → logprob: -1.9129791259765625
    4. ' ' → logprob: -2.7879791259765625
    5. 'l' → logprob: -2.7879791259765625
    6. 'au' → logprob: -3.0379791259765625
    7. 'u' → logprob: -3.6629791259765625
    8. ' espaces' → logprob: -3.9129791259765625
    9. ' la' → logprob: -4.1629791259765625
    10. ' un' → logprob: -4.4129791259765625

Token 56: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.026435917243361473
    2. ' espaces' → logprob: -4.651435852050781
    3. ' ' → logprob: -5.276435852050781
    4. 'es' → logprob: -5.526435852050781
    5. ''espace' → logprob: -5.651435852050781
    6. 'space' → logprob: -7.026435852050781
    7. 'esp' → logprob: -7.776435852050781
    8. ' space' → logprob: -7.776435852050781
    9. 's' → logprob: -7.776435852050781
    10. '  ' → logprob: -7.901435852050781

Token 57: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7836333513259888
    2. ',' → logprob: -1.0336333513259888
    3. '.split' → logprob: -2.408633232116699
    4. ')' → logprob: -3.658633232116699
    5. 'input' → logprob: -4.033633232116699
    6. 'spl' → logprob: -4.533633232116699
    7. 'split' → logprob: -5.283633232116699
    8. '.' → logprob: -5.408633232116699
    9. ' ,' → logprob: -5.783633232116699
    10. 'tokens' → logprob: -6.033633232116699

Token 58: ' transforme' (ID: 184109)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7060086131095886
    2. 'et' → logprob: -1.4560086727142334
    3. ' et' → logprob: -1.8310086727142334
    4. '#' → logprob: -2.5810086727142334
    5. ' and' → logprob: -5.456008434295654
    6. ' #' → logprob: -5.706008434295654
    7. ' ce' → logprob: -5.956008434295654
    8. 'and' → logprob: -5.956008434295654
    9. ' ' → logprob: -6.081008434295654
    10. 's' → logprob: -6.081008434295654

Token 59: ' chaque' (ID: 21194)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6402527093887329
    2. ' chaque' → logprob: -1.765252709388733
    3. ' les' → logprob: -2.2652525901794434
    4. ' ' → logprob: -2.6402525901794434
    5. ' le' → logprob: -3.8902525901794434
    6. ' en' → logprob: -4.140252590179443
    7. '[' → logprob: -4.140252590179443
    8. 's' → logprob: -4.265252590179443
    9. 'la' → logprob: -4.640252590179443
    10. 'les' → logprob: -4.890252590179443

Token 60: ' partie' (ID: 22139)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.013517949730157852
    2. ' élément' → logprob: -5.2635178565979
    3. 'mot' → logprob: -5.5135178565979
    4. 'm' → logprob: -6.5135178565979
    5. ' mot' → logprob: -6.7635178565979
    6. ' ' → logprob: -7.5135178565979
    7. ' chaîne' → logprob: -8.763518333435059
    8. ' él' → logprob: -8.763518333435059
    9. 'part' → logprob: -9.388518333435059
    10. ' morceau' → logprob: -9.388518333435059

Token 61: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.015232578851282597
    2. ' ' → logprob: -4.640232563018799
    3. 'en' → logprob: -5.265232563018799
    4. ' in' → logprob: -9.640233039855957
    5. ' into' → logprob: -10.390233039855957
    6. ''en' → logprob: -10.390233039855957
    7. ' e' → logprob: -10.515233039855957
    8. 'e' → logprob: -10.640233039855957
    9. 's' → logprob: -10.640233039855957
    10. ' a' → logprob: -11.140233039855957

Token 62: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3955379724502563
    2. ' int' → logprob: -1.5205379724502563
    3. ' un' → logprob: -1.5205379724502563
    4. ' entier' → logprob: -2.145537853240967
    5. ' nombre' → logprob: -2.270537853240967
    6. 'ent' → logprob: -3.020537853240967
    7. ' float' → logprob: -4.520537853240967
    8. 'nombre' → logprob: -4.645537853240967
    9. ' ' → logprob: -4.770537853240967
    10. 'un' → logprob: -5.145537853240967

Token 63: ' grâce' (ID: 31589)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06707826256752014
    2. ',' → logprob: -2.8170783519744873
    3. ' ' → logprob: -6.192078113555908
    4. ' ,' → logprob: -6.692078113555908
    5. 'e' → logprob: -7.817078113555908
    6. 'a' → logprob: -8.317078590393066
    7. ' s' → logprob: -8.442078590393066
    8. '#' → logprob: -8.567078590393066
    9. '.' → logprob: -8.692078590393066
    10. '[' → logprob: -9.692078590393066

Token 64: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09333636611700058
    2. ' a' → logprob: -3.218336343765259
    3. ' ' → logprob: -3.468336343765259
    4. ' au' → logprob: -4.343336582183838
    5. '<|end|>' → logprob: -6.093336582183838
    6. ' to' → logprob: -7.218336582183838
    7. 's' → logprob: -7.343336582183838
    8. ',' → logprob: -8.46833610534668
    9. ' á' → logprob: -8.71833610534668
    10. 'à' → logprob: -8.96833610534668

Token 65: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3948001265525818
    2. ' la' → logprob: -1.3948001861572266
    3. 'int' → logprob: -3.2698001861572266
    4. ' map' → logprob: -4.394800186157227
    5. ' l' → logprob: -5.019800186157227
    6. ' ' → logprob: -5.019800186157227
    7. '`' → logprob: -5.644800186157227
    8. ' `' → logprob: -5.894800186157227
    9. '```' → logprob: -5.894800186157227
    10. ' ' → logprob: -6.269800186157227

Token 66: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09466057270765305
    2. 's' → logprob: -3.094660520553589
    3. '(
' → logprob: -4.219660758972168
    4. ',' → logprob: -5.219660758972168
    5. ' ' → logprob: -5.719660758972168
    6. 'n' → logprob: -5.969660758972168
    7. '_' → logprob: -6.219660758972168
    8. 'r' → logprob: -6.219660758972168
    9. 'a' → logprob: -6.344660758972168
    10. 'i' → logprob: -6.594660758972168

Token 67: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008155417628586292
    2. '),' → logprob: -5.008155345916748
    3. ',' → logprob: -6.633155345916748
    4. ')(' → logprob: -10.383155822753906
    5. ' )' → logprob: -10.508155822753906
    6. '(' → logprob: -11.258155822753906
    7. ')`' → logprob: -11.383155822753906
    8. ')
' → logprob: -11.883155822753906
    9. ')(
' → logprob: -12.508155822753906
    10. '))' → logprob: -12.758155822753906

Token 68: ' ...' (ID: 2550)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5842975974082947
    2. ' )' → logprob: -0.9592975974082947
    3. ' input' → logprob: -3.4592976570129395
    4. ' ' → logprob: -5.2092976570129395
    5. 'input' → logprob: -5.3342976570129395
    6. ' ),' → logprob: -5.4592976570129395
    7. ' s' → logprob: -6.5842976570129395
    8. 's' → logprob: -6.7092976570129395
    9. '),' → logprob: -6.8342976570129395
    10. ' l' → logprob: -6.9592976570129395

Token 69: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024516431614756584
    2. '),' → logprob: -3.7745163440704346
    3. ' )' → logprob: -6.899516582489014
    4. ' ),' → logprob: -9.649516105651855
    5. '(' → logprob: -10.274516105651855
    6. ',' → logprob: -10.649516105651855
    7. ')...' → logprob: -10.899516105651855
    8. ')`' → logprob: -10.899516105651855
    9. ')
' → logprob: -11.024516105651855
    10. ').' → logprob: -11.524516105651855

Token 70: '#' (ID: 2)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.06367402523756027
    2. ')' → logprob: -4.188673973083496
    3. 'et' → logprob: -4.438673973083496
    4. ' et' → logprob: -4.938673973083496
    5. ' )' → logprob: -5.313673973083496
    6. ' ' → logprob: -5.313673973083496
    7. ' and' → logprob: -5.813673973083496
    8. '#' → logprob: -5.813673973083496
    9. 'p' → logprob: -6.563673973083496
    10. 'ens' → logprob: -6.563673973083496

Token 71: ' puis' (ID: 18766)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.837119996547699
    2. ' numbers' → logprob: -0.962119996547699
    3. ' lst' → logprob: -3.4621200561523438
    4. 'nums' → logprob: -3.8371200561523438
    5. ' puis' → logprob: -3.8371200561523438
    6. ' nums' → logprob: -4.212120056152344
    7. 'values' → logprob: -4.212120056152344
    8. ' list' → logprob: -5.087120056152344
    9. ' values' → logprob: -5.087120056152344
    10. ' liste' → logprob: -5.212120056152344

Token 72: ' ass' (ID: 1680)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.5353101491928101
    2. ' les' → logprob: -2.0353102684020996
    3. ' stock' → logprob: -2.4103102684020996
    4. ' met' → logprob: -2.9103102684020996
    5. ' transforme' → logprob: -3.1603102684020996
    6. ' convert' → logprob: -3.2853102684020996
    7. ' liste' → logprob: -4.6603102684021
    8. 'convert' → logprob: -4.7853102684021
    9. ' calc' → logprob: -5.1603102684021
    10. 'stock' → logprob: -5.1603102684021

Token 73: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.47464802861213684
    2. 'ign' → logprob: -1.0996479988098145
    3. 'ert' → logprob: -4.2246479988098145
    4. 'ig' → logprob: -4.4746479988098145
    5. 'e' → logprob: -5.2246479988098145
    6. 'ing' → logprob: -5.7246479988098145
    7. '#' → logprob: -5.8496479988098145
    8. 'ignet' → logprob: -6.0996479988098145
    9. 'i' → logprob: -6.4746479988098145
    10. '   ' → logprob: -7.5996479988098145

Token 74: ' ces' (ID: 10532)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6534884572029114
    2. ' ' → logprob: -1.1534883975982666
    3. ' la' → logprob: -2.9034883975982666
    4. ' (' → logprob: -3.0284883975982666
    5. ' a' → logprob: -4.403488636016846
    6. ' à' → logprob: -4.653488636016846
    7. ' les' → logprob: -5.278488636016846
    8. ' aux' → logprob: -5.528488636016846
    9. ' nombres' → logprob: -5.778488636016846
    10. 's' → logprob: -5.903488636016846

Token 75: ' deux' (ID: 10301)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.8144056797027588
    2. ' nombres' → logprob: -1.1894056797027588
    3. ' ' → logprob: -2.189405679702759
    4. ' a' → logprob: -3.189405679702759
    5. ' à' → logprob: -3.439405679702759
    6. 'ent' → logprob: -4.43940544128418
    7. ' ent' → logprob: -4.68940544128418
    8. 'val' → logprob: -4.93940544128418
    9. ' val' → logprob: -4.93940544128418
    10. ' n' → logprob: -5.43940544128418

Token 76: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2888059616088867
    2. ' numbers' → logprob: -1.9138059616088867
    3. 'numbers' → logprob: -3.4138059616088867
    4. ' integers' → logprob: -3.9138059616088867
    5. ' variables' → logprob: -3.9138059616088867
    6. ' valeurs' → logprob: -4.663805961608887
    7. ' nombre' → logprob: -5.663805961608887
    8. 'nombre' → logprob: -5.788805961608887
    9. ' ent' → logprob: -6.288805961608887
    10. ' a' → logprob: -6.663805961608887

Token 77: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.15571284294128418
    2. 'ières' → logprob: -2.030712842941284
    3. 'ires' → logprob: -5.530713081359863
    4. 'i' → logprob: -6.030713081359863
    5. 'r' → logprob: -6.780713081359863
    6. 'ités' → logprob: -6.905713081359863
    7. 't' → logprob: -7.280713081359863
    8. 'ers' → logprob: -7.655713081359863
    9. 'ier' → logprob: -7.905713081359863
    10. ',' → logprob: -8.155713081359863

Token 78: ' respect' (ID: 5618)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11140591651201248
    2. 'x' → logprob: -3.361405849456787
    3. 's' → logprob: -3.611405849456787
    4. '(' → logprob: -3.861405849456787
    5. ' a' → logprob: -4.736405849456787
    6. 'n' → logprob: -5.361405849456787
    7. ',' → logprob: -6.861405849456787
    8. '(a' → logprob: -6.861405849456787
    9. ' ' → logprob: -6.986405849456787
    10. 'e' → logprob: -7.236405849456787

Token 79: 'ivement' (ID: 37978)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -1.0139750242233276
    2. 'ivement' → logprob: -1.5139750242233276
    3. 'u' → logprob: -1.7639750242233276
    4. 'ument' → logprob: -1.8889750242233276
    5. 'ément' → logprob: -2.888975143432617
    6. '-' → logprob: -5.388975143432617
    7. 'uellement' → logprob: -5.513975143432617
    8. 'em' → logprob: -5.763975143432617
    9. 'us' → logprob: -5.888975143432617
    10. 'emment' → logprob: -6.138975143432617

Token 80: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.060113899409770966
    2. 'x' → logprob: -3.1851139068603516
    3. ' a' → logprob: -4.560113906860352
    4. 'n' → logprob: -5.310113906860352
    5. ',' → logprob: -7.685113906860352
    6. 's' → logprob: -9.060113906860352
    7. ' x' → logprob: -9.060113906860352
    8. 'r' → logprob: -9.060113906860352
    9. 'nombre' → logprob: -9.060113906860352
    10. ':' → logprob: -9.435113906860352

Token 81: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6990830302238464
    2. ' a' → logprob: -0.6990830302238464
    3. 'x' → logprob: -5.824082851409912
    4. ' x' → logprob: -5.949082851409912
    5. ' `' → logprob: -9.32408332824707
    6. ' ' → logprob: -9.69908332824707
    7. ' '' → logprob: -9.94908332824707
    8. ' la' → logprob: -9.94908332824707
    9. 'n' → logprob: -10.69908332824707
    10. '`' → logprob: -11.44908332824707

Token 82: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051710281521081924
    2. ' ,' → logprob: -3.051710367202759
    3. '1' → logprob: -6.30171012878418
    4. 's' → logprob: -7.42671012878418
    5. ',n' → logprob: -8.17671012878418
    6. ',s' → logprob: -9.55171012878418
    7. ' ' → logprob: -9.67671012878418
    8. ' =' → logprob: -10.05171012878418
    9. ',u' → logprob: -10.80171012878418
    10. 'a' → logprob: -10.80171012878418

Token 83: ' l' (ID: 305)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.12716317176818848
    2. ' ' → logprob: -2.5021631717681885
    3. 'm' → logprob: -4.002162933349609
    4. ' p' → logprob: -5.377162933349609
    5. ' k' → logprob: -5.627162933349609
    6. ' r' → logprob: -5.877162933349609
    7. ' s' → logprob: -6.252162933349609
    8. ' t' → logprob: -6.502162933349609
    9. ' a' → logprob: -6.502162933349609
    10. ' d' → logprob: -7.127162933349609

Token 84: '.
' (ID: 558)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.22588050365448
    2. ' =' → logprob: -1.35088050365448
    3. '=' → logprob: -1.60088050365448
    4. ',' → logprob: -1.72588050365448
    5. 'n' → logprob: -3.4758806228637695
    6. ' ' → logprob: -4.2258806228637695
    7. 'i' → logprob: -5.1008806228637695
    8. 'es' → logprob: -5.7258806228637695
    9. ' ,' → logprob: -5.8508806228637695
    10. 'a' → logprob: -6.1008806228637695

Token 85: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013841630425304174
    2. '
' → logprob: -6.876384258270264
    3. '

' → logprob: -9.001383781433105
    4. ',' → logprob: -9.626383781433105
    5. '' → logprob: -10.126383781433105
    6. '
' → logprob: -10.376383781433105
    7. '

' → logprob: -11.251383781433105
    8. ' 
' → logprob: -11.501383781433105
    9. '\n' → logprob: -11.501383781433105
    10. '#' → logprob: -11.626383781433105

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010193509049713612
    2. ' ,' → logprob: -4.635193347930908
    3. ' =' → logprob: -8.010193824768066
    4. ' ' → logprob: -10.010193824768066
    5. '=' → logprob: -11.385193824768066
    6. ',l' → logprob: -11.385193824768066
    7. ')' → logprob: -11.510193824768066
    8. ',n' → logprob: -11.885193824768066
    9. ',
' → logprob: -12.135193824768066
    10. 'u' → logprob: -12.885193824768066

Token 87: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.18076378107070923
    2. 'l' → logprob: -1.8057637214660645
    3. ' ' → logprob: -6.9307637214660645
    4. 'space' → logprob: -11.055764198303223
    5. '<|end|>' → logprob: -11.430764198303223
    6. ' ' → logprob: -11.805764198303223
    7. '	l' → logprob: -13.930764198303223
    8. ' 
' → logprob: -14.055764198303223
    9. ' ‌' → logprob: -14.055764198303223
    10. ' space' → logprob: -14.180764198303223

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0086546391248703
    2. '=' → logprob: -4.758654594421387
    3. ' ' → logprob: -10.258654594421387
    4. ',' → logprob: -13.258654594421387
    5. ' =
' → logprob: -13.383654594421387
    6. ')' → logprob: -14.258654594421387
    7. ' =
' → logprob: -14.508654594421387
    8. ' =)' → logprob: -15.883654594421387
    9. ' =[' → logprob: -16.133655548095703
    10. '.' → logprob: -16.133655548095703

Token 89: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2254289984703064
    2. 'map' → logprob: -1.6004290580749512
    3. ' list' → logprob: -12.225428581237793
    4. ' ' → logprob: -12.475428581237793
    5. 'list' → logprob: -13.100428581237793
    6. 'm' → logprob: -13.100428581237793
    7. '	map' → logprob: -13.100428581237793
    8. ' ' → logprob: -14.475428581237793
    9. ' m' → logprob: -15.475428581237793
    10. 'ma' → logprob: -15.975428581237793

Token 90: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2520514726638794
    2. '(' → logprob: -1.5020514726638794
    3. '<int' → logprob: -10.12705135345459
    4. ' (' → logprob: -10.37705135345459
    5. '(
' → logprob: -11.25205135345459
    6. '(lambda' → logprob: -11.50205135345459
    7. '[int' → logprob: -11.62705135345459
    8. '(str' → logprob: -11.87705135345459
    9. '(input' → logprob: -12.75205135345459
    10. '(list' → logprob: -12.75205135345459

Token 91: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009006998501718044
    2. '(' → logprob: -4.759006977081299
    3. 'input' → logprob: -8.134007453918457
    4. ')' → logprob: -10.384007453918457
    5. ' input' → logprob: -10.634007453918457
    6. ' (' → logprob: -10.759007453918457
    7. ',input' → logprob: -11.009007453918457
    8. '=input' → logprob: -12.634007453918457
    9. '(
' → logprob: -14.259007453918457
    10. ')(' → logprob: -14.884007453918457

Token 92: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519516050815582
    2. ' input' → logprob: -1.5019515752792358
    3. '(input' → logprob: -11.376951217651367
    4. ')' → logprob: -13.001951217651367
    5. '=input' → logprob: -13.126951217651367
    6. '	input' → logprob: -13.376951217651367
    7. ' ' → logprob: -13.376951217651367
    8. '```' → logprob: -13.626951217651367
    9. '<input' → logprob: -14.126951217651367
    10. ',input' → logprob: -14.626951217651367

Token 93: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01840732805430889
    2. '()' → logprob: -4.018407344818115
    3. '())' → logprob: -8.518406867980957
    4. '(' → logprob: -10.643406867980957
    5. '('' → logprob: -11.393406867980957
    6. '("' → logprob: -12.143406867980957
    7. ')' → logprob: -12.143406867980957
    8. '()).' → logprob: -12.393406867980957
    9. ' ().' → logprob: -13.518406867980957
    10. '('').' → logprob: -13.518406867980957

Token 94: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.048596687614917755
    2. 'strip' → logprob: -3.0485966205596924
    3. 'rstrip' → logprob: -11.798596382141113
    4. ' split' → logprob: -14.048596382141113
    5. '(split' → logprob: -14.548596382141113
    6. ')' → logprob: -15.048596382141113
    7. 'spl' → logprob: -16.29859733581543
    8. 'plit' → logprob: -16.54859733581543
    9. ' strip' → logprob: -17.17359733581543
    10. 's' → logprob: -17.42359733581543

Token 95: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008620131760835648
    2. '()' → logprob: -5.258620262145996
    3. '()))' → logprob: -6.633620262145996
    4. '('' → logprob: -6.758620262145996
    5. ')' → logprob: -7.758620262145996
    6. '(' → logprob: -7.758620262145996
    7. ' ())' → logprob: -10.883620262145996
    8. '))' → logprob: -11.258620262145996
    9. '("' → logprob: -12.133620262145996
    10. '(()' → logprob: -12.883620262145996

Token 96: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38406816124916077
    2. ' 
' → logprob: -2.759068250656128
    3. ')' → logprob: -2.884068250656128
    4. ' ' → logprob: -3.009068250656128
    5. ':' → logprob: -3.634068250656128
    6. '  
' → logprob: -3.634068250656128
    7. 'n' → logprob: -3.884068250656128
    8. '#' → logprob: -4.384068012237549
    9. '<|end|>' → logprob: -4.509068012237549
    10. '' → logprob: -4.634068012237549

Token 97: ' Initialise' (ID: 179601)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5565577149391174
    2. 's' → logprob: -2.4315576553344727
    3. 'total' → logprob: -3.1815576553344727
    4. 'max' → logprob: -3.5565576553344727
    5. 'distance' → logprob: -3.6815576553344727
    6. 'count' → logprob: -3.8065576553344727
    7. 'def' → logprob: -3.8065576553344727
    8. ' result' → logprob: -4.181557655334473
    9. 'sum' → logprob: -4.306557655334473
    10. 'for' → logprob: -4.306557655334473

Token 98: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.7479456663131714
    2. ' result' → logprob: -1.7479456663131714
    3. ' un' → logprob: -1.7479456663131714
    4. 'a' → logprob: -2.247945785522461
    5. ' une' → logprob: -2.247945785522461
    6. ' total' → logprob: -2.872945785522461
    7. ' la' → logprob: -3.372945785522461
    8. 's' → logprob: -3.747945785522461
    9. 'result' → logprob: -3.747945785522461
    10. ' max' → logprob: -4.247945785522461

Token 99: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.5157438516616821
    2. 'me' → logprob: -1.8907438516616821
    3. 'result' → logprob: -2.1407437324523926
    4. 'variable' → logprob: -2.3907437324523926
    5. 's' → logprob: -2.5157437324523926
    6. 'distance' → logprob: -2.6407437324523926
    7. 'plus' → logprob: -2.7657437324523926
    8. ' variable' → logprob: -3.6407437324523926
    9. 'max' → logprob: -3.6407437324523926
    10. 'list' → logprob: -4.015743732452393

Token 100: ' all' (ID: 722)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1044085025787354
    2. 'result' → logprob: -1.2294085025787354
    3. 's' → logprob: -2.7294085025787354
    4. ' max' → logprob: -2.7294085025787354
    5. 'max' → logprob: -2.9794085025787354
    6. ' s' → logprob: -3.3544085025787354
    7. 'r' → logprob: -4.354408264160156
    8. 'res' → logprob: -4.479408264160156
    9. ' best' → logprob: -4.479408264160156
    10. ' total' → logprob: -4.479408264160156

Token 101: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7494251132011414
    2. 'um' → logprob: -1.4994251728057861
    3. '_sum' → logprob: -1.9994251728057861
    4. '_l' → logprob: -3.499425172805786
    5. '_lengths' → logprob: -3.749425172805786
    6. 'er' → logprob: -4.124424934387207
    7. '_c' → logprob: -4.499424934387207
    8. 'ure' → logprob: -4.874424934387207
    9. '_p' → logprob: -4.999424934387207
    10. '_s' → logprob: -5.124424934387207

Token 102: 'aste' (ID: 6604)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.8401239514350891
    2. 'imes' → logprob: -1.7151238918304443
    3. 'emps' → logprob: -2.7151238918304443
    4. '_' → logprob: -2.8401238918304443
    5. 'he' → logprob: -3.5901238918304443
    6. 'ickets' → logprob: -3.7151238918304443
    7. 'owers' → logprob: -4.340124130249023
    8. 'r' → logprob: -4.340124130249023
    9. 'ower' → logprob: -4.465124130249023
    10. '```' → logprob: -4.590124130249023

Token 103: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01980271190404892
    2. ' =' → logprob: -4.394802570343018
    3. '=' → logprob: -6.019802570343018
    4. '_' → logprob: -6.769802570343018
    5. '_s' → logprob: -6.894802570343018
    6. 'd' → logprob: -7.394802570343018
    7. '_sum' → logprob: -7.644802570343018
    8. '_score' → logprob: -7.894802570343018
    9. ' ' → logprob: -8.019803047180176
    10. '_scores' → logprob: -8.144803047180176

Token 104: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024394867941737175
    2. ' ' → logprob: -4.274394989013672
    3. '[]' → logprob: -5.024394989013672
    4. 'l' → logprob: -6.399394989013672
    5. ' []' → logprob: -7.024394989013672
    6. 'math' → logprob: -8.149394989013672
    7. '100' → logprob: -9.149394989013672
    8. 'float' → logprob: -9.149394989013672
    9. '1' → logprob: -9.149394989013672
    10. ' l' → logprob: -9.524394989013672

Token 105: '.' (ID: 13)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12723015248775482
    2. ' all' → logprob: -2.127230167388916
    3. '
' → logprob: -9.002229690551758
    4. 'a' → logprob: -9.127229690551758
    5. ' ' → logprob: -11.127229690551758
    6. ''all' → logprob: -11.127229690551758
    7. '(all' → logprob: -11.627229690551758
    8. '_all' → logprob: -11.877229690551758
    9. 'al' → logprob: -12.127229690551758
    10. '	all' → logprob: -12.502229690551758

Token 106: ' 
' (ID: 793)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00016349162615370005
    2. ' all' → logprob: -9.125163078308105
    3. 'a' → logprob: -10.500163078308105
    4. '
' → logprob: -10.875163078308105
    5. 'al' → logprob: -12.750163078308105
    6. '_all' → logprob: -13.500163078308105
    7. ''all' → logprob: -14.250163078308105
    8. '	all' → logprob: -14.250163078308105
    9. '<|end|>' → logprob: -14.625163078308105
    10. '```' → logprob: -14.750163078308105

Token 107: '#' (ID: 2)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.02056735008955002
    2. ' all' → logprob: -3.8955674171447754
    3. '
' → logprob: -11.770566940307617
    4. ' ' → logprob: -12.520566940307617
    5. 'a' → logprob: -12.520566940307617
    6. ''all' → logprob: -12.520566940307617
    7. '	all' → logprob: -13.020566940307617
    8. '_all' → logprob: -14.020566940307617
    9. 'total' → logprob: -14.145566940307617
    10. 'al' → logprob: -14.520566940307617

Token 108: ' Cette' (ID: 27383)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.01253802701830864
    2. ' all' → logprob: -4.387537956237793
    3. 'total' → logprob: -11.012537956237793
    4. 'All' → logprob: -11.887537956237793
    5. '
' → logprob: -13.762537956237793
    6. 'a' → logprob: -14.387537956237793
    7. ' total' → logprob: -14.512537956237793
    8. '	all' → logprob: -14.512537956237793
    9. '#' → logprob: -14.637537956237793
    10. ' ' → logprob: -14.887537956237793

Token 109: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.3501594662666321
    2. 'variable' → logprob: -1.2251594066619873
    3. ' valeur' → logprob: -7.225159645080566
    4. 'val' → logprob: -8.475159645080566
    5. 'var' → logprob: -8.850159645080566
    6. 'all' → logprob: -9.600159645080566
    7. '_variable' → logprob: -9.600159645080566
    8. ' ' → logprob: -9.725159645080566
    9. '#' → logprob: -10.100159645080566
    10. ' all' → logprob: -10.100159645080566

Token 110: ' va' (ID: 3423)
  Prédit: ' représente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -1.2005826234817505
    2. ' =' → logprob: -1.5755826234817505
    3. '<|end|>' → logprob: -1.8255826234817505
    4. '=' → logprob: -2.200582504272461
    5. 'represent' → logprob: -3.325582504272461
    6. ' est' → logprob: -3.825582504272461
    7. ' va' → logprob: -3.950582504272461
    8. 's' → logprob: -4.075582504272461
    9. ' ' → logprob: -4.075582504272461
    10. ' total' → logprob: -4.450582504272461

Token 111: ' conten' (ID: 23523)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0593481063842773
    2. '=' → logprob: -1.4343481063842773
    3. ' servir' → logprob: -1.8093481063842773
    4. ' ' → logprob: -2.0593481063842773
    5. ' accum' → logprob: -3.6843481063842773
    6. ' représ' → logprob: -3.9343481063842773
    7. ' +=' → logprob: -4.059348106384277
    8. ' total' → logprob: -4.559348106384277
    9. ' represent' → logprob: -4.684348106384277
    10. '_' → logprob: -5.059348106384277

Token 112: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.014443900436162949
    2. 'er' → logprob: -4.389443874359131
    3. 'uer' → logprob: -7.139443874359131
    4. 'r' → logprob: -7.514443874359131
    5. 'ur' → logprob: -8.014444351196289
    6. 't' → logprob: -8.639444351196289
    7. 'u' → logprob: -10.639444351196289
    8. 'eur' → logprob: -11.139444351196289
    9. 'rer' → logprob: -11.764444351196289
    10. 'irer' → logprob: -11.764444351196289

Token 113: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05799989029765129
    2. ' total' → logprob: -4.058000087738037
    3. 'total' → logprob: -4.683000087738037
    4. ' la' → logprob: -4.933000087738037
    5. ' l' → logprob: -5.933000087738037
    6. '0' → logprob: -5.933000087738037
    7. ')' → logprob: -6.183000087738037
    8. '_' → logprob: -6.183000087738037
    9. '_total' → logprob: -6.183000087738037
    10. ' the' → logprob: -6.433000087738037

Token 114: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11284796893596649
    2. ' somme' → logprob: -2.3628480434417725
    3. 'som' → logprob: -4.987847805023193
    4. ' quantité' → logprob: -6.487847805023193
    5. ' som' → logprob: -6.862847805023193
    6. 'val' → logprob: -7.112847805023193
    7. 'sum' → logprob: -7.737847805023193
    8. 'c' → logprob: -8.362848281860352
    9. ' valeur' → logprob: -8.737848281860352
    10. '#' → logprob: -8.987848281860352

Token 115: ' totale' (ID: 52898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3775063157081604
    2. '_' → logprob: -2.2525062561035156
    3. ' ' → logprob: -2.7525062561035156
    4. ')' → logprob: -3.3775062561035156
    5. ' (' → logprob: -4.002506256103516
    6. '<|end|>' → logprob: -4.127506256103516
    7. '_total' → logprob: -4.377506256103516
    8. 'total' → logprob: -4.627506256103516
    9. ' =' → logprob: -4.752506256103516
    10. '()' → logprob: -5.002506256103516

Token 116: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6161636114120483
    2. '_' → logprob: -2.116163730621338
    3. 'all' → logprob: -2.491163730621338
    4. '=' → logprob: -2.866163730621338
    5. ' ' → logprob: -2.991163730621338
    6. ')' → logprob: -2.991163730621338
    7. ' =' → logprob: -3.366163730621338
    8. ' of' → logprob: -4.741163730621338
    9. '_all' → logprob: -5.116163730621338
    10. ' des' → logprob: -5.241163730621338

Token 117: ' goûts' (ID: 184726)
  Prédit: ' goûts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goûts' → logprob: -0.45491692423820496
    2. ' valeurs' → logprob: -3.2049169540405273
    3. 't' → logprob: -3.3299169540405273
    4. ' goût' → logprob: -3.4549169540405273
    5. ' niveaux' → logprob: -3.9549169540405273
    6. 'val' → logprob: -4.079916954040527
    7. ' notes' → logprob: -4.267416954040527
    8. 'l' → logprob: -4.329916954040527
    9. '_' → logprob: -4.454916954040527
    10. ' tastes' → logprob: -4.454916954040527

Token 118: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7457727789878845
    2. ' ' → logprob: -1.3707728385925293
    3. '_total' → logprob: -2.1207728385925293
    4. '(' → logprob: -2.6207728385925293
    5. '_all' → logprob: -3.7457728385925293
    6. ' (' → logprob: -4.370772838592529
    7. 'all' → logprob: -4.745772838592529
    8. ' =' → logprob: -4.995772838592529
    9. 'total' → logprob: -5.995772838592529
    10. ')' → logprob: -5.995772838592529

Token 119: ' toutes' (ID: 17502)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.8789413571357727
    2. 'all' → logprob: -1.003941297531128
    3. ' toutes' → logprob: -2.628941297531128
    4. 'l' → logprob: -2.878941297531128
    5. ' l' → logprob: -3.503941297531128
    6. 's' → logprob: -4.503941535949707
    7. ' tous' → logprob: -4.628941535949707
    8. '<|end|>' → logprob: -5.378941535949707
    9. ' cakes' → logprob: -5.378941535949707
    10. 't' → logprob: -5.503941535949707

Token 120: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9588765501976013
    2. ')' → logprob: -1.708876609802246
    3. ' the' → logprob: -1.833876609802246
    4. ' )' → logprob: -2.833876609802246
    5. '<|end|>' → logprob: -3.583876609802246
    6. ' des' → logprob: -3.833876609802246
    7. ' cakes' → logprob: -3.958876609802246
    8. ' t' → logprob: -4.208876609802246
    9. ' desserts' → logprob: -4.333876609802246
    10. 'the' → logprob: -4.333876609802246

Token 121: ' pommes' (ID: 149224)
  Prédit: ' pizzas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pizzas' → logprob: -1.5835788249969482
    2. ' pommes' → logprob: -1.7085788249969482
    3. ' cookies' → logprob: -1.8335788249969482
    4. ' tart' → logprob: -2.0835788249969482
    5. ' cr' → logprob: -2.5835788249969482
    6. ' biscuits' → logprob: -2.7085788249969482
    7. 'cookies' → logprob: -2.7085788249969482
    8. 's' → logprob: -4.083579063415527
    9. ' l' → logprob: -4.708579063415527
    10. ' cakes' → logprob: -5.271079063415527

Token 122: ',
' (ID: 412)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.007191985379904509
    2. ' all' → logprob: -5.132192134857178
    3. '_all' → logprob: -8.13219165802002
    4. '
' → logprob: -8.75719165802002
    5. '=' → logprob: -9.00719165802002
    6. ' ' → logprob: -9.25719165802002
    7. 'total' → logprob: -9.38219165802002
    8. ',' → logprob: -9.50719165802002
    9. '	all' → logprob: -9.75719165802002
    10. 's' → logprob: -9.75719165802002

Token 123: '#' (ID: 2)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.20365296304225922
    2. ' all' → logprob: -2.203652858734131
    3. ' ' → logprob: -2.953652858734131
    4. '#' → logprob: -5.078652858734131
    5. 't' → logprob: -5.078652858734131
    6. 'total' → logprob: -5.828652858734131
    7. ')' → logprob: -6.828652858734131
    8. ' apples' → logprob: -6.953652858734131
    9. 'taste' → logprob: -6.953652858734131
    10. ' total' → logprob: -7.328652858734131

Token 124: ' c' (ID: 274)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.16065393388271332
    2. ' all' → logprob: -2.660653829574585
    3. '#' → logprob: -3.035653829574585
    4. 't' → logprob: -5.285654067993164
    5. 's' → logprob: -5.785654067993164
    6. 'sum' → logprob: -6.035654067993164
    7. '=' → logprob: -6.160654067993164
    8. ' ' → logprob: -6.285654067993164
    9. 'total' → logprob: -6.285654067993164
    10. 'max' → logprob: -6.660654067993164

Token 125: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1710244417190552
    2. 'ont' → logprob: -1.6710244417190552
    3. 'on' → logprob: -1.9210244417190552
    4. 'es' → logprob: -2.2960243225097656
    5. 'omme' → logprob: -2.6710243225097656
    6. 'ar' → logprob: -2.9210243225097656
    7. '#' → logprob: -3.4210243225097656
    8. ''est' → logprob: -4.671024322509766
    9. 'ette' → logprob: -4.796024322509766
    10. 'al' → logprob: -5.046024322509766

Token 126: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.5020312666893005
    2. '=' → logprob: -2.1270313262939453
    3. ' à' → logprob: -2.7520313262939453
    4. '-' → logprob: -2.7520313262939453
    5. ' ' → logprob: -3.2520313262939453
    6. 'à' → logprob: -3.6270313262939453
    7. ' =' → logprob: -3.7520313262939453
    8. 'l' → logprob: -4.752031326293945
    9. 'a' → logprob: -5.002031326293945
    10. '_' → logprob: -5.502031326293945

Token 127: '-dire' (ID: 76064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.36429041624069214
    2. '-à' → logprob: -2.364290475845337
    3. '#' → logprob: -2.614290475845337
    4. 'd' → logprob: -3.739290475845337
    5. 't' → logprob: -3.864290475845337
    6. 'dire' → logprob: -3.989290475845337
    7. 'a' → logprob: -3.989290475845337
    8. '-' → logprob: -4.364290237426758
    9. 'g' → logprob: -4.614290237426758
    10. 'c' → logprob: -5.614290237426758

Token 128: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.0907706618309021
    2. 'la' → logprob: -3.965770721435547
    3. '0' → logprob: -4.215770721435547
    4. ' l' → logprob: -4.215770721435547
    5. ' ' → logprob: -5.090770721435547
    6. 'l' → logprob: -5.090770721435547
    7. 'sum' → logprob: -5.465770721435547
    8. 'le' → logprob: -5.840770721435547
    9. 'all' → logprob: -5.840770721435547
    10. ' all' → logprob: -5.840770721435547

Token 129: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4639381766319275
    2. 'total' → logprob: -2.5889382362365723
    3. ' total' → logprob: -2.5889382362365723
    4. ' somme' → logprob: -2.9639382362365723
    5. 'sum' → logprob: -3.0889382362365723
    6. 'nombre' → logprob: -3.3389382362365723
    7. ' nombre' → logprob: -3.9639382362365723
    8. 'som' → logprob: -4.088938236236572
    9. 'l' → logprob: -4.213938236236572
    10. ' sum' → logprob: -4.588938236236572

Token 130: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.38334760069847107
    2. '_' → logprob: -2.133347511291504
    3. ' ' → logprob: -3.133347511291504
    4. 'des' → logprob: -3.258347511291504
    5. ' totale' → logprob: -3.258347511291504
    6. '_total' → logprob: -3.633347511291504
    7. '_des' → logprob: -4.508347511291504
    8. ' de' → logprob: -4.758347511291504
    9. ' of' → logprob: -5.258347511291504
    10. ')' → logprob: -5.508347511291504

Token 131: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.885421633720398
    2. ' l' → logprob: -2.0104217529296875
    3. 'range' → logprob: -2.1354217529296875
    4. ' i' → logprob: -2.5104217529296875
    5. 'i' → logprob: -2.6354217529296875
    6. ' les' → logprob: -2.7604217529296875
    7. '[i' → logprob: -2.7604217529296875
    8. ' range' → logprob: -2.8854217529296875
    9. '(range' → logprob: -2.8854217529296875
    10. '[' → logprob: -3.3854217529296875

Token 132: ' save' (ID: 5093)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -1.1205377578735352
    2. 's' → logprob: -1.7455377578735352
    3. ' l' → logprob: -2.370537757873535
    4. ' goûts' → logprob: -2.995537757873535
    5. '1' → logprob: -3.120537757873535
    6. 'l' → logprob: -3.370537757873535
    7. 'i' → logprob: -3.620537757873535
    8. '2' → logprob: -3.870537757873535
    9. ' puiss' → logprob: -3.870537757873535
    10. 'n' → logprob: -3.995537757873535

Token 133: 'ur' (ID: 330)
  Prédit: 'urs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.03365238755941391
    2. 'ur' → logprob: -3.4086523056030273
    3. 'rs' → logprob: -12.533652305603027
    4. 's' → logprob: -13.533652305603027
    5. 'u' → logprob: -14.658652305603027
    6. '_' → logprob: -15.658652305603027
    7. 'r' → logprob: -15.783652305603027
    8. 't' → logprob: -16.033653259277344
    9. '```' → logprob: -16.283653259277344
    10. '
' → logprob: -16.658653259277344

Token 134: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022986415773630142
    2. 'es' → logprob: -4.89798641204834
    3. '_' → logprob: -5.39798641204834
    4. ' =' → logprob: -5.89798641204834
    5. ' s' → logprob: -6.27298641204834
    6. ' de' → logprob: -6.77298641204834
    7. ' des' → logprob: -6.77298641204834
    8. 'des' → logprob: -7.02298641204834
    9. '_s' → logprob: -7.27298641204834
    10. '_tot' → logprob: -7.52298641204834

Token 135: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8210793137550354
    2. ' toutes' → logprob: -0.9460793137550354
    3. ' all' → logprob: -3.3210792541503906
    4. ' chacune' → logprob: -3.5710792541503906
    5. 'i' → logprob: -3.8210792541503906
    6. ' i' → logprob: -4.321079254150391
    7. 't' → logprob: -4.446079254150391
    8. 'range' → logprob: -4.446079254150391
    9. ' chaque' → logprob: -4.571079254150391
    10. 'es' → logprob: -4.821079254150391

Token 136: ' pomme' (ID: 197262)
  Prédit: ' pomme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pomme' → logprob: -0.13689024746418
    2. ' pommes' → logprob: -2.136890172958374
    3. 's' → logprob: -5.386890411376953
    4. ' ' → logprob: -6.386890411376953
    5. 'apple' → logprob: -7.386890411376953
    6. 'p' → logprob: -7.386890411376953
    7. ' apple' → logprob: -7.511890411376953
    8. ')' → logprob: -7.761890411376953
    9. 'e' → logprob: -8.386890411376953
    10. 'a' → logprob: -8.886890411376953

Token 137: ' prise' (ID: 43816)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7395609617233276
    2. ' =' → logprob: -0.7395609617233276
    3. 'all' → logprob: -4.114561080932617
    4. '_all' → logprob: -4.614561080932617
    5. ',' → logprob: -5.239561080932617
    6. 's' → logprob: -5.739561080932617
    7. ' +=' → logprob: -5.739561080932617
    8. ' ' → logprob: -6.114561080932617
    9. '_total' → logprob: -6.739561080932617
    10. ')' → logprob: -7.364561080932617

Token 138: ' une' (ID: 2463)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.7069344520568848
    2. 's' → logprob: -1.9569344520568848
    3. 'es' → logprob: -2.0819344520568848
    4. ' =' → logprob: -2.2069344520568848
    5. '[' → logprob: -2.8319344520568848
    6. '=' → logprob: -2.8319344520568848
    7. ' +=' → logprob: -3.0819344520568848
    8. '+' → logprob: -3.3319344520568848
    9. ' de' → logprob: -3.4569344520568848
    10. 'e' → logprob: -3.5819344520568848

Token 139: ' fois' (ID: 14697)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.1671942472457886
    2. ' à' → logprob: -1.4171942472457886
    3. 'par' → logprob: -1.6671942472457886
    4. ' ' → logprob: -2.292194366455078
    5. 'à' → logprob: -3.042194366455078
    6. ' fois' → logprob: -3.292194366455078
    7. 's' → logprob: -3.542194366455078
    8. 'fois' → logprob: -3.667194366455078
    9. ' pomme' → logprob: -5.917194366455078
    10. '+' → logprob: -6.792194366455078

Token 140: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5655720829963684
    2. ' ' → logprob: -1.3155720233917236
    3. ' ,' → logprob: -3.3155720233917236
    4. '+' → logprob: -3.3155720233917236
    5. ')' → logprob: -3.6905720233917236
    6. '.' → logprob: -3.6905720233917236
    7. ' +' → logprob: -4.565572261810303
    8. 'all' → logprob: -5.190572261810303
    9. '=' → logprob: -5.940572261810303
    10. ' )' → logprob: -5.940572261810303

Token 141: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0007666255696676672
    2. 'total' → logprob: -7.625766754150391
    3. ' all' → logprob: -8.50076675415039
    4. '
' → logprob: -10.00076675415039
    5. 'sum' → logprob: -11.62576675415039
    6. 'apple' → logprob: -12.00076675415039
    7. '#' → logprob: -12.62576675415039
    8. 's' → logprob: -13.00076675415039
    9. 'a' → logprob: -13.25076675415039
    10. 't' → logprob: -13.87576675415039

Token 142: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.029766106978058815
    2. '_' → logprob: -3.529766082763672
    3. ' _' → logprob: -11.904766082763672
    4. '_total' → logprob: -12.529766082763672
    5. '_s' → logprob: -13.154766082763672
    6. '_to' → logprob: -14.779766082763672
    7. '_T' → logprob: -15.029766082763672
    8. '_p' → logprob: -15.404766082763672
    9. '_l' → logprob: -15.779766082763672
    10. '_f' → logprob: -15.779766082763672

Token 143: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -2.935296834039036e-06
    2. 'taste' → logprob: -13.37500286102295
    3. 'ast' → logprob: -14.37500286102295
    4. '_' → logprob: -15.12500286102295
    5. 'ASTE' → logprob: -15.87500286102295
    6. 'astes' → logprob: -16.000003814697266
    7. 'as' → logprob: -16.625003814697266
    8. 'aster' → logprob: -16.875003814697266
    9. 'a' → logprob: -17.125003814697266
    10. ' aste' → logprob: -18.250003814697266

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04306872934103012
    2. '=' → logprob: -3.1680686473846436
    3. ' +=' → logprob: -10.543068885803223
    4. ' ' → logprob: -10.793068885803223
    5. ',' → logprob: -10.918068885803223
    6. ')' → logprob: -13.418068885803223
    7. 's' → logprob: -13.418068885803223
    8. '+=' → logprob: -14.793068885803223
    9. '.' → logprob: -15.668068885803223
    10. ' ' → logprob: -15.918068885803223

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07003101706504822
    2. ' ' → logprob: -2.695030927658081
    3. 'l' → logprob: -9.57003116607666
    4. ' l' → logprob: -11.44503116607666
    5. 'n' → logprob: -12.44503116607666
    6. 'sum' → logprob: -12.57003116607666
    7. ' n' → logprob: -13.44503116607666
    8. ' sum' → logprob: -13.57003116607666
    9. ' ' → logprob: -13.69503116607666
    10. 'int' → logprob: -14.00753116607666

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042412037146277726
    2. ' ' → logprob: -8.0004243850708
    3. 'sum' → logprob: -9.6254243850708
    4. 'l' → logprob: -11.5004243850708
    5. 'n' → logprob: -11.8754243850708
    6. ' sum' → logprob: -13.2504243850708
    7. 'math' → logprob: -14.1254243850708
    8. 'int' → logprob: -14.1254243850708
    9. '-' → logprob: -15.0004243850708
    10. ' n' → logprob: -15.0004243850708

Token 147: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01525394432246685
    2. '<|end|>' → logprob: -4.765254020690918
    3. ' 
' → logprob: -6.265254020690918
    4. 'n' → logprob: -6.265254020690918
    5. '#' → logprob: -7.390254020690918
    6. '  
' → logprob: -7.515254020690918
    7. ',' → logprob: -7.765254020690918
    8. '
' → logprob: -8.140254020690918
    9. '<|end|>' → logprob: -8.140254020690918
    10. ' ' → logprob: -8.390254020690918

Token 148: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7321921586990356
    2. '<|end|>' → logprob: -1.7321921586990356
    3. 't' → logprob: -1.9821921586990356
    4. 'l' → logprob: -3.232192039489746
    5. 'for' → logprob: -3.357192039489746
    6. '#' → logprob: -3.607192039489746
    7. 'ap' → logprob: -4.107192039489746
    8. 'n' → logprob: -4.232192039489746
    9. '+' → logprob: -4.232192039489746
    10. 'apple' → logprob: -4.482192039489746

Token 149: ' au' (ID: 2791)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.45865994691848755
    2. 'apple' → logprob: -2.4586598873138428
    3. 'max' → logprob: -2.5836598873138428
    4. 'taste' → logprob: -2.8336598873138428
    5. 'for' → logprob: -3.2086598873138428
    6. 't' → logprob: -3.7086598873138428
    7. 'ap' → logprob: -3.9586598873138428
    8. ' best' → logprob: -3.9586598873138428
    9. 'min' → logprob: -4.708660125732422
    10. 'del' → logprob: -5.708660125732422

Token 150: ' début' (ID: 29589)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2484822273254395
    2. '#' → logprob: -1.9984822273254395
    3. 'jourd' → logprob: -2.1234822273254395
    4. '=' → logprob: -2.7484822273254395
    5. 'n' → logprob: -3.1234822273254395
    6. 'for' → logprob: -3.2484822273254395
    7. ' plus' → logprob: -3.4984822273254395
    8. 'g' → logprob: -3.8734822273254395
    9. 'x' → logprob: -3.9984822273254395
    10. '-' → logprob: -3.9984822273254395

Token 151: ' la' (ID: 557)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26330626010894775
    2. '<|end|>' → logprob: -1.5133062601089478
    3. '<|end|>' → logprob: -4.638306140899658
    4. '#' → logprob: -7.763306140899658
    5. '

' → logprob: -7.888306140899658
    6. 'for' → logprob: -8.638306617736816
    7. 'n' → logprob: -9.013306617736816
    8. '
' → logprob: -9.138306617736816
    9. ',' → logprob: -9.263306617736816
    10. ' for' → logprob: -9.763306617736816

Token 152: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6742109656333923
    2. ' ' → logprob: -1.674211025238037
    3. 'll' → logprob: -2.799211025238037
    4. 'n' → logprob: -2.924211025238037
    5. 't' → logprob: -2.924211025238037
    6. 'l' → logprob: -3.174211025238037
    7. 'i' → logprob: -4.299211025238037
    8. 'r' → logprob: -5.049211025238037
    9. '0' → logprob: -5.049211025238037
    10. ' all' → logprob: -5.174211025238037

Token 153: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3322862386703491
    2. 'for' → logprob: -1.3322862386703491
    3. ' =' → logprob: -1.3322862386703491
    4. ' +=' → logprob: -2.9572863578796387
    5. '
' → logprob: -3.3322863578796387
    6. ' for' → logprob: -3.4572863578796387
    7. '<|end|>' → logprob: -3.7072863578796387
    8. '#' → logprob: -4.457286357879639
    9. ' ' → logprob: -4.957286357879639
    10. ',' → logprob: -5.082286357879639

Token 154: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04338884726166725
    2. ' ' → logprob: -3.168388843536377
    3. '=' → logprob: -8.168389320373535
    4. ' =' → logprob: -10.418389320373535
    5. 'n' → logprob: -10.918389320373535
    6. 'zero' → logprob: -11.293389320373535
    7. ' zéro' → logprob: -11.418389320373535
    8. ' zero' → logprob: -11.793389320373535
    9. ' n' → logprob: -11.793389320373535
    10. 's' → logprob: -12.418389320373535

Token 155: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3530134856700897
    2. '<|end|>' → logprob: -1.228013515472412
    3. '<|end|>' → logprob: -5.853013515472412
    4. 'n' → logprob: -7.728013515472412
    5. '

' → logprob: -8.603013038635254
    6. ' 
' → logprob: -8.603013038635254
    7. '  
' → logprob: -8.728013038635254
    8. ',' → logprob: -8.853013038635254
    9. ' ' → logprob: -9.103013038635254
    10. '#' → logprob: -9.478013038635254

Token 156: '#' (ID: 2)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.04537525400519371
    2. 'for' → logprob: -3.920375347137451
    3. 'apple' → logprob: -4.420375347137451
    4. '
' → logprob: -5.670375347137451
    5. 't' → logprob: -6.045375347137451
    6. ' apples' → logprob: -6.295375347137451
    7. 'a' → logprob: -7.170375347137451
    8. 'app' → logprob: -7.295375347137451
    9. '#' → logprob: -7.420375347137451
    10. 'taste' → logprob: -7.920375347137451

Token 157: ' Cette' (ID: 27383)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.3910515308380127
    2. 'taste' → logprob: -1.3910515308380127
    3. 't' → logprob: -1.5160515308380127
    4. 'for' → logprob: -1.6410515308380127
    5. 'best' → logprob: -3.6410515308380127
    6. 'apple' → logprob: -3.6410515308380127
    7. '#' → logprob: -4.891051292419434
    8. 'max' → logprob: -5.141051292419434
    9. 'all' → logprob: -5.766051292419434
    10. 'a' → logprob: -5.891051292419434

Token 158: ' boucle' (ID: 174211)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variable' → logprob: -1.2397650480270386
    2. '#' → logprob: -1.3647650480270386
    3. ' ligne' → logprob: -1.8647650480270386
    4. 'variable' → logprob: -2.364765167236328
    5. 'part' → logprob: -2.864765167236328
    6. 'ligne' → logprob: -2.864765167236328
    7. 'comment' → logprob: -4.239765167236328
    8. 'for' → logprob: -4.739765167236328
    9. 'suite' → logprob: -4.864765167236328
    10. 'fois' → logprob: -5.489765167236328

Token 159: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759416222572327
    2. 'for' → logprob: -0.8259416222572327
    3. ' continue' → logprob: -14.450942039489746
    4. 's' → logprob: -15.075942039489746
    5. ' ' → logprob: -15.200942039489746
    6. ' range' → logprob: -15.575942039489746
    7. ' va' → logprob: -15.700942039489746
    8. '_for' → logprob: -15.825942039489746
    9. 'range' → logprob: -16.07594108581543
    10. ' ' → logprob: -16.20094108581543

Token 160: ' it' (ID: 480)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005541089456528425
    2. 'i' → logprob: -5.2555413246154785
    3. ' for' → logprob: -8.38054084777832
    4. 'for' → logprob: -10.63054084777832
    5. ' range' → logprob: -10.75554084777832
    6. ' _' → logprob: -11.50554084777832
    7. ' va' → logprob: -12.38054084777832
    8. ' ' → logprob: -12.75554084777832
    9. ' ' → logprob: -12.75554084777832
    10. '_' → logprob: -12.88054084777832

Token 161: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0023217720445245504
    2. 'ére' → logprob: -6.752321720123291
    3. 'ere' → logprob: -7.627321720123291
    4. 'er' → logprob: -8.00232219696045
    5. '`' → logprob: -9.87732219696045
    6. 'e' → logprob: -10.37732219696045
    7. '#' → logprob: -10.37732219696045
    8. '```' → logprob: -10.62732219696045
    9. 'ération' → logprob: -11.25232219696045
    10. '   ' → logprob: -11.25232219696045

Token 162: ' sur' (ID: 1512)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2619282007217407
    2. '_' → logprob: -2.511928081512451
    3. 'i' → logprob: -3.011928081512451
    4. ' over' → logprob: -3.261928081512451
    5. ' n' → logprob: -3.386928081512451
    6. 'n' → logprob: -4.511928081512451
    7. ' sur' → logprob: -5.386928081512451
    8. ' _' → logprob: -5.511928081512451
    9. ' l' → logprob: -6.386928081512451
    10. ' ' → logprob: -7.011928081512451

Token 163: ' tous' (ID: 10688)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22542670369148254
    2. 'range' → logprob: -1.6004266738891602
    3. '	range' → logprob: -12.60042667388916
    4. '(range' → logprob: -13.10042667388916
    5. '_' → logprob: -13.22542667388916
    6. 'rang' → logprob: -13.60042667388916
    7. 'i' → logprob: -13.97542667388916
    8. '_range' → logprob: -14.22542667388916
    9. ' ' → logprob: -14.35042667388916
    10. ' i' → logprob: -14.35042667388916

Token 164: ' les' (ID: 1341)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.14274606108665466
    2. 'range' → logprob: -2.8927459716796875
    3. ' range' → logprob: -3.1427459716796875
    4. '<|end|>' → logprob: -4.6427459716796875
    5. ' i' → logprob: -4.8927459716796875
    6. '(' → logprob: -5.3927459716796875
    7. 'i' → logprob: -5.7677459716796875
    8. '(i' → logprob: -6.1427459716796875
    9. '	range' → logprob: -6.7677459716796875
    10. ' les' → logprob: -6.7677459716796875

Token 165: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2191973477602005
    2. 'range' → logprob: -2.5941972732543945
    3. ' i' → logprob: -2.8441972732543945
    4. ' range' → logprob: -3.9691972732543945
    5. ' pommes' → logprob: -4.2191972732543945
    6. 'n' → logprob: -4.7191972732543945
    7. 'indices' → logprob: -5.2191972732543945
    8. 'apple' → logprob: -5.4691972732543945
    9. ' nombres' → logprob: -5.8441972732543945
    10. 'p' → logprob: -6.4691972732543945

Token 166: ' (' (ID: 350)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21465609967708588
    2. 'range' → logprob: -2.089656114578247
    3. ' in' → logprob: -3.464656114578247
    4. ' de' → logprob: -4.589655876159668
    5. '(range' → logprob: -4.714655876159668
    6. ' i' → logprob: -4.714655876159668
    7. 'in' → logprob: -5.964655876159668
    8. '_' → logprob: -6.214655876159668
    9. '(' → logprob: -6.714655876159668
    10. 'de' → logprob: -6.964655876159668

Token 167: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11121031641960144
    2. ' range' → logprob: -2.736210346221924
    3. 'i' → logprob: -3.236210346221924
    4. ' i' → logprob: -6.986210346221924
    5. 'n' → logprob: -9.236209869384766
    6. ')' → logprob: -10.236209869384766
    7. '_' → logprob: -10.486209869384766
    8. '(range' → logprob: -11.861209869384766
    9. ' ' → logprob: -11.986209869384766
    10. '_i' → logprob: -12.611209869384766

Token 168: ')' (ID: 8)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.41081273555755615
    2. ')' → logprob: -1.2858127355575562
    3. ',' → logprob: -3.4108128547668457
    4. 'range' → logprob: -4.535812854766846
    5. 'in' → logprob: -5.035812854766846
    6. ' range' → logprob: -5.535812854766846
    7. ' )' → logprob: -5.785812854766846
    8. ' ' → logprob: -6.660812854766846
    9. ' ,' → logprob: -7.160812854766846
    10. 's' → logprob: -7.785812854766846

Token 169: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.327115923166275
    2. ' range' → logprob: -2.202116012573242
    3. 'range' → logprob: -2.452116012573242
    4. 'in' → logprob: -3.702116012573242
    5. ' dans' → logprob: -4.077116012573242
    6. ' de' → logprob: -4.202116012573242
    7. ' en' → logprob: -4.702116012573242
    8. ' des' → logprob: -5.327116012573242
    9. 'dans' → logprob: -5.327116012573242
    10. ' for' → logprob: -5.952116012573242

Token 170: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7766627073287964
    2. 'from' → logprob: -1.0266627073287964
    3. 'de' → logprob: -2.401662826538086
    4. ' from' → logprob: -2.901662826538086
    5. '<|end|>' → logprob: -3.651662826538086
    6. 'range' → logprob: -4.901662826538086
    7. ' jusqu' → logprob: -7.401662826538086
    8. ' range' → logprob: -7.401662826538086
    9. 'des' → logprob: -8.276662826538086
    10. ' du' → logprob: -8.276662826538086

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007092326879501343
    2. ' ' → logprob: -5.007092475891113
    3. '1' → logprob: -8.007092475891113
    4. ' range' → logprob: -10.757092475891113
    5. 'range' → logprob: -10.882092475891113
    6. 'n' → logprob: -14.257092475891113
    7. '```' → logprob: -14.257092475891113
    8. '2' → logprob: -14.882092475891113
    9. 'l' → logprob: -14.944592475891113
    10. ' i' → logprob: -15.319592475891113

Token 172: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020362993236631155
    2. '1' → logprob: -6.627036094665527
    3. ' ' → logprob: -7.252036094665527
    4. 'range' → logprob: -14.377036094665527
    5. '2' → logprob: -15.627036094665527
    6. ' range' → logprob: -15.877036094665527
    7. 'i' → logprob: -16.814537048339844
    8. '```' → logprob: -17.127037048339844
    9. 'n' → logprob: -17.314537048339844
    10. 'l' → logprob: -17.314537048339844

Token 173: ' jusqu' (ID: 21961)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.997778594493866
    2. ' à' → logprob: -1.1227786540985107
    3. 'to' → logprob: -1.9977786540985107
    4. '<|end|>' → logprob: -2.3727786540985107
    5. ' to' → logprob: -2.7477786540985107
    6. ' jusqu' → logprob: -5.497778415679932
    7. ',' → logprob: -6.497778415679932
    8. ' ' → logprob: -6.872778415679932
    9. '```' → logprob: -7.247778415679932
    10. ' jusque' → logprob: -7.247778415679932

Token 174: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.8123840093612671
    2. '(n' → logprob: -1.312384009361267
    3. '(' → logprob: -1.687384009361267
    4. '’à' → logprob: -3.1873841285705566
    5. ' à' → logprob: -3.3123841285705566
    6. 'a' → logprob: -5.312384128570557
    7. 'e' → logprob: -5.562384128570557
    8. ''au' → logprob: -5.687384128570557
    9. 'à' → logprob: -5.937384128570557
    10. '(i' → logprob: -6.062384128570557

Token 175: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4746954143047333
    2. ' n' → logprob: -0.9746954441070557
    3. 'l' → logprob: -7.974695205688477
    4. ' l' → logprob: -8.224695205688477
    5. ' ' → logprob: -12.724695205688477
    6. '(n' → logprob: -13.224695205688477
    7. '	n' → logprob: -14.099695205688477
    8. ' (' → logprob: -15.849695205688477
    9. 'range' → logprob: -16.474695205688477
    10. ',n' → logprob: -16.474695205688477

Token 176: 'y' (ID: 88)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16023793816566467
    2. ' n' → logprob: -1.9102379083633423
    3. 'l' → logprob: -12.035238265991211
    4. ' l' → logprob: -13.035238265991211
    5. ')n' → logprob: -13.160238265991211
    6. ' ' → logprob: -13.535238265991211
    7. '	n' → logprob: -14.785238265991211
    8. ')' → logprob: -14.785238265991211
    9. '<|end|>' → logprob: -14.785238265991211
    10. '(n' → logprob: -15.160238265991211

Token 177: ' compris' (ID: 49173)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7675958871841431
    2. ' n' → logprob: -1.892595887184143
    3. 'es' → logprob: -2.1425957679748535
    4. 'l' → logprob: -2.7675957679748535
    5. 'e' → logprob: -3.0175957679748535
    6. ')' → logprob: -3.6425957679748535
    7. ' l' → logprob: -4.1425957679748535
    8. ',' → logprob: -4.2675957679748535
    9. ' à' → logprob: -4.2675957679748535
    10. 'a' → logprob: -4.8925957679748535

Token 178: ')' (ID: 8)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7455753087997437
    2. 'n' → logprob: -0.8705753087997437
    3. ' l' → logprob: -2.745575428009033
    4. 'l' → logprob: -3.245575428009033
    5. ')' → logprob: -5.995575428009033
    6. ',' → logprob: -7.120575428009033
    7. ')n' → logprob: -8.120574951171875
    8. ' ' → logprob: -10.495574951171875
    9. ' )' → logprob: -11.120574951171875
    10. ' ,' → logprob: -11.870574951171875

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3142561912536621
    2. ' n' → logprob: -1.314256191253662
    3. 'l' → logprob: -7.314256191253662
    4. ' l' → logprob: -8.06425666809082
    5. '(n' → logprob: -11.56425666809082
    6. ' ' → logprob: -13.68925666809082
    7. '	n' → logprob: -14.18925666809082
    8. '
' → logprob: -14.56425666809082
    9. '_n' → logprob: -14.93925666809082
    10. ',' → logprob: -15.31425666809082

Token 180: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7816354632377625
    2. ':' → logprob: -1.6566355228424072
    3. ' for' → logprob: -1.6566355228424072
    4. '+' → logprob: -2.2816355228424072
    5. ',' → logprob: -3.5316355228424072
    6. 'range' → logprob: -4.656635284423828
    7. ' in' → logprob: -5.406635284423828
    8. '1' → logprob: -5.656635284423828
    9. '(range' → logprob: -5.781635284423828
    10. ' range' → logprob: -6.281635284423828

Token 181: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5543432235717773
    2. ' for' → logprob: -1.0543432235717773
    3. 'range' → logprob: -3.4293432235717773
    4. '
' → logprob: -3.9293432235717773
    5. ':' → logprob: -4.554343223571777
    6. ' range' → logprob: -5.304343223571777
    7. '```' → logprob: -6.054343223571777
    8. 'n' → logprob: -6.304343223571777
    9. ' in' → logprob: -7.054343223571777
    10. ':
' → logprob: -7.179343223571777

Token 182: ' Cela' (ID: 44403)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6208279728889465
    2. ' for' → logprob: -1.1208279132843018
    3. ' range' → logprob: -2.2458279132843018
    4. 'range' → logprob: -3.4958279132843018
    5. ' in' → logprob: -8.620827674865723
    6. '(range' → logprob: -10.370827674865723
    7. 'in' → logprob: -10.370827674865723
    8. 'n' → logprob: -10.745827674865723
    9. ' i' → logprob: -11.620827674865723
    10. '1' → logprob: -11.620827674865723

Token 183: ' permet' (ID: 11798)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6548579335212708
    2. 'for' → logprob: -1.279857873916626
    3. ':' → logprob: -1.904857873916626
    4. ' :' → logprob: -3.279857873916626
    5. ' in' → logprob: -4.779858112335205
    6. ' n' → logprob: -6.529858112335205
    7. 'range' → logprob: -6.904858112335205
    8. ' =' → logprob: -7.154858112335205
    9. 'in' → logprob: -7.154858112335205
    10. ' range' → logprob: -7.904858112335205

Token 184: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0934721976518631
    2. ' d' → logprob: -2.7184722423553467
    3. ' range' → logprob: -4.093472003936768
    4. 'range' → logprob: -5.593472003936768
    5. ' for' → logprob: -7.468472003936768
    6. 'd' → logprob: -7.468472003936768
    7. 'de' → logprob: -7.593472003936768
    8. ' i' → logprob: -8.343472480773926
    9. ' to' → logprob: -8.468472480773926
    10. 'for' → logprob: -8.843472480773926

Token 185: ' calcul' (ID: 7559)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5762306451797485
    2. ' range' → logprob: -0.8262306451797485
    3. 'for' → logprob: -8.576231002807617
    4. ' calcul' → logprob: -10.201231002807617
    5. 'r' → logprob: -10.826231002807617
    6. ' for' → logprob: -11.201231002807617
    7. '_' → logprob: -11.951231002807617
    8. 'n' → logprob: -12.701231002807617
    9. 'rang' → logprob: -12.701231002807617
    10. '_range' → logprob: -13.076231002807617

Token 186: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0117030069231987
    2. 'r' → logprob: -4.761703014373779
    3. 'ter' → logprob: -5.886703014373779
    4. '#' → logprob: -8.386702537536621
    5. 'ate' → logprob: -11.261702537536621
    6. 'rer' → logprob: -11.386702537536621
    7. 'ler' → logprob: -11.761702537536621
    8. 'ser' → logprob: -11.886702537536621
    9. 'te' → logprob: -12.261702537536621
    10. 'ner' → logprob: -12.386702537536621

Token 187: ' le' (ID: 505)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0254913568496704
    2. 'range' → logprob: -1.0254913568496704
    3. ' for' → logprob: -2.275491237640381
    4. 'n' → logprob: -2.650491237640381
    5. ' n' → logprob: -3.025491237640381
    6. 'for' → logprob: -4.025491237640381
    7. ' la' → logprob: -4.650491237640381
    8. ' ' → logprob: -5.025491237640381
    9. ' l' → logprob: -5.275491237640381
    10. '(range' → logprob: -5.525491237640381

Token 188: ' goût' (ID: 76414)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7474103569984436
    2. ' goût' → logprob: -2.372410297393799
    3. 'n' → logprob: -2.872410297393799
    4. 'all' → logprob: -2.997410297393799
    5. ' all' → logprob: -2.997410297393799
    6. ' range' → logprob: -3.122410297393799
    7. 'range' → logprob: -3.372410297393799
    8. ' i' → logprob: -3.747410297393799
    9. 'taste' → logprob: -3.872410297393799
    10. 'g' → logprob: -3.997410297393799

Token 189: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3572146892547607
    2. 'for' → logprob: -1.6072146892547607
    3. '_total' → logprob: -1.6072146892547607
    4. 'total' → logprob: -2.3572146892547607
    5. ' total' → logprob: -3.4822146892547607
    6. 's' → logprob: -3.4822146892547607
    7. ' =' → logprob: -3.6072146892547607
    8. ' for' → logprob: -3.7322146892547607
    9. '_' → logprob: -3.8572146892547607
    10. 'des' → logprob: -3.9822146892547607

Token 190: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.733869194984436
    2. ' i' → logprob: -1.358869194984436
    3. 'range' → logprob: -2.2338690757751465
    4. ' n' → logprob: -2.9838690757751465
    5. 'i' → logprob: -3.3588690757751465
    6. ' ' → logprob: -3.8588690757751465
    7. ' chaque' → logprob: -3.9838690757751465
    8. ' la' → logprob: -4.9838690757751465
    9. 'n' → logprob: -4.9838690757751465
    10. ' l' → logprob: -5.6088690757751465

Token 191: ' pomme' (ID: 197262)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9607672691345215
    2. ' pomme' → logprob: -0.9607672691345215
    3. 'i' → logprob: -1.7107672691345215
    4. ' range' → logprob: -4.0857672691345215
    5. 'range' → logprob: -4.3357672691345215
    6. 'apple' → logprob: -4.8357672691345215
    7. ' pommes' → logprob: -4.8357672691345215
    8. '_' → logprob: -6.3357672691345215
    9. ')' → logprob: -6.8357672691345215
    10. ' apple' → logprob: -6.9607672691345215

Token 192: ' basée' (ID: 153941)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1609809547662735
    2. ' for' → logprob: -1.9109809398651123
    3. ',' → logprob: -8.410981178283691
    4. 'range' → logprob: -8.660981178283691
    5. ':' → logprob: -9.160981178283691
    6. 'pour' → logprob: -9.285981178283691
    7. ' pour' → logprob: -10.160981178283691
    8. ' range' → logprob: -10.410981178283691
    9. 'in' → logprob: -11.035981178283691
    10. ' in' → logprob: -11.160981178283691

Token 193: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.40446680784225464
    2. 'sur' → logprob: -1.4044668674468994
    3. ' ' → logprob: -4.15446662902832
    4. ')' → logprob: -4.27946662902832
    5. 'range' → logprob: -4.52946662902832
    6. ' on' → logprob: -4.52946662902832
    7. ',' → logprob: -4.77946662902832
    8. '1' → logprob: -5.27946662902832
    9. ' range' → logprob: -5.65446662902832
    10. '=' → logprob: -5.77946662902832

Token 194: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7402849793434143
    2. 'i' → logprob: -1.7402849197387695
    3. ' la' → logprob: -2.1152849197387695
    4. ' son' → logprob: -2.8652849197387695
    5. ' sa' → logprob: -2.8652849197387695
    6. 'range' → logprob: -3.8652849197387695
    7. ' l' → logprob: -3.9902849197387695
    8. ' un' → logprob: -4.4902849197387695
    9. ' une' → logprob: -4.4902849197387695
    10. ' range' → logprob: -4.6152849197387695

Token 195: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29703807830810547
    2. 'e' → logprob: -2.4220380783081055
    3. 'i' → logprob: -2.9220380783081055
    4. ' range' → logprob: -2.9220380783081055
    5. 'range' → logprob: -3.1720380783081055
    6. 'es' → logprob: -5.2970380783081055
    7. ' i' → logprob: -5.6720380783081055
    8. 'ambda' → logprob: -6.4220380783081055
    9. ''i' → logprob: -6.5470380783081055
    10. 'eur' → logprob: -6.7970380783081055

Token 196: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33008354902267456
    2. ' for' → logprob: -1.7050836086273193
    3. ' in' → logprob: -3.0800836086273193
    4. 'in' → logprob: -3.7050836086273193
    5. 'range' → logprob: -4.20508337020874
    6. ' range' → logprob: -5.20508337020874
    7. '(' → logprob: -5.70508337020874
    8. ',' → logprob: -6.08008337020874
    9. '+' → logprob: -7.33008337020874
    10. '(range' → logprob: -7.45508337020874

Token 197: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.982219934463501
    2. ' i' → logprob: -1.232219934463501
    3. 'range' → logprob: -2.107219934463501
    4. ' for' → logprob: -2.732219934463501
    5. ' range' → logprob: -2.732219934463501
    6. 'for' → logprob: -2.982219934463501
    7. 'n' → logprob: -4.607219696044922
    8. ')' → logprob: -4.732219696044922
    9. ' n' → logprob: -5.857219696044922
    10. ' in' → logprob: -5.982219696044922

Token 198: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3466310501098633
    2. '+' → logprob: -1.4716310501098633
    3. ' )' → logprob: -4.096631050109863
    4. '**' → logprob: -4.221631050109863
    5. ' +' → logprob: -4.346631050109863
    6. ',' → logprob: -4.596631050109863
    7. '):' → logprob: -6.096631050109863
    8. ' in' → logprob: -6.971631050109863
    9. '*' → logprob: -7.096631050109863
    10. ')**' → logprob: -7.096631050109863

Token 199: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11766565591096878
    2. ' for' → logprob: -2.2426657676696777
    3. '
' → logprob: -5.367665767669678
    4. ' 
' → logprob: -9.86766529083252
    5. 'n' → logprob: -10.11766529083252
    6. ':' → logprob: -10.74266529083252
    7. '```' → logprob: -11.11766529083252
    8. 'range' → logprob: -11.61766529083252
    9. '
' → logprob: -12.86766529083252
    10. '  
' → logprob: -12.99266529083252

Token 200: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.000703376077581197
    2. 'i' → logprob: -7.37570333480835
    3. ' ' → logprob: -9.500703811645508
    4. '	i' → logprob: -14.500703811645508
    5. ' ' → logprob: -14.875703811645508
    6. ' ‌' → logprob: -14.875703811645508
    7. '  ' → logprob: -15.125703811645508
    8. ' _' → logprob: -15.875703811645508
    9. '_' → logprob: -16.125703811645508
    10. '_i' → logprob: -16.375703811645508

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02335565723478794
    2. 'in' → logprob: -3.773355722427368
    3. '1' → logprob: -10.398355484008789
    4. ' ' → logprob: -10.523355484008789
    5. 'import' → logprob: -11.773355484008789
    6. 'range' → logprob: -11.960855484008789
    7. 's' → logprob: -12.273355484008789
    8. 'n' → logprob: -12.710855484008789
    9. ',' → logprob: -12.835855484008789
    10. 'In' → logprob: -12.960855484008789

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002088338136673
    2. ' range' → logprob: -2.3502087593078613
    3. '1' → logprob: -14.22520923614502
    4. '(range' → logprob: -14.35020923614502
    5. ' ' → logprob: -14.72520923614502
    6. '	range' → logprob: -14.85020923614502
    7. 'rang' → logprob: -17.475208282470703
    8. '  ' → logprob: -17.475208282470703
    9. '.range' → logprob: -18.100208282470703
    10. '   ' → logprob: -18.100208282470703

Token 203: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.5
    3. ' (' → logprob: -16.75
    4. '(
' → logprob: -19.875
    5. '(n' → logprob: -21.625
    6. '(i' → logprob: -22.75
    7. '((' → logprob: -22.75
    8. ')' → logprob: -23.125
    9. ' ' → logprob: -23.5
    10. '(

' → logprob: -23.5

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.375004768371582
    3. '(' → logprob: -14.000004768371582
    4. 'n' → logprob: -16.0000057220459
    5. ',' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.5000057220459
    7. '(n' → logprob: -19.6250057220459
    8. ')' → logprob: -20.1250057220459
    9. '
' → logprob: -20.3750057220459
    10. ' n' → logprob: -21.1250057220459

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003728774609044194
    2. ' ,' → logprob: -8.375372886657715
    3. ',n' → logprob: -8.875372886657715
    4. '(n' → logprob: -13.250372886657715
    5. '(' → logprob: -15.250372886657715
    6. ',
' → logprob: -15.375372886657715
    7. ',l' → logprob: -16.2503719329834
    8. '1' → logprob: -16.5003719329834
    9. 'n' → logprob: -16.5003719329834
    10. '

' → logprob: -17.8753719329834

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029750604182481766
    2. ' n' → logprob: -3.5297505855560303
    3. '(n' → logprob: -16.15475082397461
    4. '	n' → logprob: -16.90475082397461
    5. ',' → logprob: -17.40475082397461
    6. ')n' → logprob: -17.77975082397461
    7. ',n' → logprob: -18.77975082397461
    8. ')' → logprob: -18.90475082397461
    9. ' ' → logprob: -19.65475082397461
    10. '_n' → logprob: -19.90475082397461

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192990899086
    2. ' +' → logprob: -1.5019298791885376
    3. ' ' → logprob: -15.251930236816406
    4. '
' → logprob: -15.501930236816406
    5. '+l' → logprob: -16.376930236816406
    6. '+
' → logprob: -16.876930236816406
    7. ',' → logprob: -17.251930236816406
    8. ' +
' → logprob: -17.376930236816406
    9. '

' → logprob: -17.751930236816406
    10. ')' → logprob: -17.751930236816406

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.875335693359375
    4. '```' → logprob: -18.000335693359375
    5. '
' → logprob: -18.875335693359375
    6. '2' → logprob: -18.875335693359375
    7. ')' → logprob: -19.312835693359375
    8. '  ' → logprob: -19.375335693359375
    9. ',' → logprob: -19.562835693359375
    10. '

' → logprob: -19.625335693359375

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '2' → logprob: -17.250009536743164
    4. '   ' → logprob: -17.875009536743164
    5. '```' → logprob: -18.500009536743164
    6. ')' → logprob: -18.625009536743164
    7. '
' → logprob: -19.187509536743164
    8. '  ' → logprob: -19.375009536743164
    9. '１' → logprob: -19.562509536743164
    10. 'l' → logprob: -19.625009536743164

Token 210: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018649426056072116
    2. '):
' → logprob: -9.250186920166016
    3. ':' → logprob: -9.750186920166016
    4. ')' → logprob: -10.500186920166016
    5. ' ):' → logprob: -12.625186920166016
    6. '():' → logprob: -14.875186920166016
    7. ',' → logprob: -15.500186920166016
    8. '):
' → logprob: -15.875186920166016
    9. '+' → logprob: -16.000186920166016
    10. ']:' → logprob: -16.375186920166016

Token 211: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06649094820022583
    2. 'all' → logprob: -3.441490888595581
    3. ' all' → logprob: -3.691490888595581
    4. 'taste' → logprob: -5.44149112701416
    5. ' taste' → logprob: -6.44149112701416
    6. '
' → logprob: -7.69149112701416
    7. '    
' → logprob: -8.19149112701416
    8. 't' → logprob: -8.81649112701416
    9. '	all' → logprob: -9.31649112701416
    10. '  ' → logprob: -9.31649112701416

Token 212: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3241434395313263
    2. 'all' → logprob: -1.574143409729004
    3. ' all' → logprob: -2.949143409729004
    4. 'taste' → logprob: -4.324143409729004
    5. ' taste' → logprob: -6.074143409729004
    6. '
' → logprob: -7.824143409729004
    7. '    
' → logprob: -7.949143409729004
    8. '  ' → logprob: -8.574143409729004
    9. '	all' → logprob: -8.574143409729004
    10. ' ' → logprob: -8.824143409729004

Token 213: ' commence' (ID: 44755)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6011145710945129
    2. 'all' → logprob: -1.4761145114898682
    3. 'taste' → logprob: -1.9761145114898682
    4. ' all' → logprob: -3.226114511489868
    5. 't' → logprob: -3.726114511489868
    6. ' taste' → logprob: -4.851114749908447
    7. 'apple' → logprob: -5.851114749908447
    8. ' ' → logprob: -6.351114749908447
    9. '
' → logprob: -6.601114749908447
    10. '  ' → logprob: -6.726114749908447

Token 214: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3728468120098114
    2. ':' → logprob: -1.2478468418121338
    3. ' :' → logprob: -5.372846603393555
    4. ' ' → logprob: -5.747846603393555
    5. ' all' → logprob: -6.122846603393555
    6. '=' → logprob: -6.247846603393555
    7. '):' → logprob: -6.247846603393555
    8. ')' → logprob: -6.622846603393555
    9. ' =' → logprob: -6.747846603393555
    10. '
' → logprob: -6.747846603393555

Token 215: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.339017391204834
    2. '1' → logprob: -1.464017391204834
    3. ' n' → logprob: -3.339017391204834
    4. 'i' → logprob: -4.964017391204834
    5. 'range' → logprob: -4.964017391204834
    6. ' ' → logprob: -5.839017391204834
    7. ' range' → logprob: -6.339017391204834
    8. 'l' → logprob: -6.714017391204834
    9. ' i' → logprob: -7.464017391204834
    10. '0' → logprob: -9.339017868041992

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013595925702247769
    2. 'n' → logprob: -9.875136375427246
    3. ' ' → logprob: -10.000136375427246
    4. 'range' → logprob: -10.750136375427246
    5. 'i' → logprob: -11.500136375427246
    6. '0' → logprob: -12.250136375427246
    7. '   ' → logprob: -13.625136375427246
    8. 'l' → logprob: -15.250136375427246
    9. '2' → logprob: -15.375136375427246
    10. '  ' → logprob: -15.500136375427246

Token 217: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01337409857660532
    2. '   ' → logprob: -5.388374328613281
    3. ':
' → logprob: -5.388374328613281
    4. ' :' → logprob: -5.763374328613281
    5. ',' → logprob: -8.138374328613281
    6. ' all' → logprob: -8.638374328613281
    7. 'all' → logprob: -8.763374328613281
    8. ' ' → logprob: -9.263374328613281
    9. '{' → logprob: -9.513374328613281
    10. ' :
' → logprob: -9.638374328613281

Token 218: ' finit' (ID: 154258)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05486096069216728
    2. 'n' → logprob: -4.179861068725586
    3. ' i' → logprob: -4.429861068725586
    4. ' n' → logprob: -4.929861068725586
    5. ' all' → logprob: -5.179861068725586
    6. ' ' → logprob: -5.304861068725586
    7. 'i' → logprob: -5.554861068725586
    8. 'all' → logprob: -6.304861068725586
    9. '    ' → logprob: -6.679861068725586
    10. '  ' → logprob: -7.679861068725586

Token 219: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.453935980796814
    2. ' à' → logprob: -1.703935980796814
    3. ' at' → logprob: -1.953935980796814
    4. ',' → logprob: -1.953935980796814
    5. ' par' → logprob: -2.8289361000061035
    6. ':' → logprob: -3.2039361000061035
    7. ')' → logprob: -3.3289361000061035
    8. ' i' → logprob: -3.4539361000061035
    9. 'par' → logprob: -3.7039361000061035
    10. '+' → logprob: -3.8289361000061035

Token 220: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14274945855140686
    2. ' n' → logprob: -2.017749547958374
    3. 'i' → logprob: -10.267749786376953
    4. '(n' → logprob: -11.642749786376953
    5. '	n' → logprob: -11.642749786376953
    6. ' ' → logprob: -11.892749786376953
    7. '   ' → logprob: -11.892749786376953
    8. ' i' → logprob: -12.267749786376953
    9. ',' → logprob: -13.892749786376953
    10. '1' → logprob: -14.517749786376953

Token 221: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010503912344574928
    2. ':
' → logprob: -4.760503768920898
    3. ' :' → logprob: -6.885503768920898
    4. '   ' → logprob: -7.260503768920898
    5. ' :
' → logprob: -10.135503768920898
    6. ',' → logprob: -10.385503768920898
    7. 'all' → logprob: -10.635503768920898
    8. ' all' → logprob: -10.635503768920898
    9. '{' → logprob: -11.135503768920898
    10. '):' → logprob: -11.885503768920898

Token 222: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03180532529950142
    2. '   ' → logprob: -3.7818052768707275
    3. ':
' → logprob: -5.406805515289307
    4. 'all' → logprob: -6.156805515289307
    5. ' :' → logprob: -6.906805515289307
    6. ' all' → logprob: -7.406805515289307
    7. '<|end|>' → logprob: -9.656805038452148
    8. '{' → logprob: -9.781805038452148
    9. '	all' → logprob: -10.281805038452148
    10. '):' → logprob: -10.531805038452148

Token 223: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061388805508613586
    2. ' all' → logprob: -3.0613887310028076
    3. 'all' → logprob: -4.811388969421387
    4. '<|end|>' → logprob: -5.936388969421387
    5. '	all' → logprob: -7.686388969421387
    6. '    
' → logprob: -8.311388969421387
    7. ':' → logprob: -8.686388969421387
    8. '  ' → logprob: -8.686388969421387
    9. ' ' → logprob: -8.686388969421387
    10. ' 
' → logprob: -8.811388969421387

Token 224: ' premier' (ID: 15506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9357600212097168
    2. ' all' → logprob: -1.3107600212097168
    3. 'all' → logprob: -1.8107600212097168
    4. ':' → logprob: -2.810760021209717
    5. '   ' → logprob: -3.185760021209717
    6. ' taste' → logprob: -3.935760021209717
    7. ' i' → logprob: -4.310760021209717
    8. ')' → logprob: -4.435760021209717
    9. 'i' → logprob: -5.310760021209717
    10. ' :' → logprob: -5.435760021209717

Token 225: ' argument' (ID: 10383)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48441845178604126
    2. 'apple' → logprob: -2.1094183921813965
    3. ' ' → logprob: -2.3594183921813965
    4. '   ' → logprob: -3.1094183921813965
    5. 'go' → logprob: -3.4844183921813965
    6. ' i' → logprob: -4.2344183921813965
    7. 'i' → logprob: -4.3594183921813965
    8. 'all' → logprob: -4.6094183921813965
    9. '=' → logprob: -4.8594183921813965
    10. '  ' → logprob: -5.2344183921813965

Token 226: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19078059494495392
    2. ' est' → logprob: -2.6907806396484375
    3. ' =' → logprob: -3.0657806396484375
    4. ')' → logprob: -3.9407806396484375
    5. ',' → logprob: -4.6907806396484375
    6. 'est' → logprob: -4.8157806396484375
    7. ' is' → logprob: -5.1907806396484375
    8. ':' → logprob: -6.0657806396484375
    9. 's' → logprob: -6.3157806396484375
    10. '<|end|>' → logprob: -6.4407806396484375

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006273718317970634
    2. ' range' → logprob: -7.375627517700195
    3. ' ' → logprob: -14.750627517700195
    4. '	range' → logprob: -15.125627517700195
    5. 'rang' → logprob: -16.625627517700195
    6. 'len' → logprob: -16.625627517700195
    7. '(range' → logprob: -17.000627517700195
    8. '```' → logprob: -17.875627517700195
    9. ')' → logprob: -18.125627517700195
    10. 'r' → logprob: -18.250627517700195

Token 228: ' est' (ID: 893)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36089956760406494
    2. '=' → logprob: -1.735899567604065
    3. ')' → logprob: -2.4858994483947754
    4. ' est' → logprob: -4.610899448394775
    5. ' ,' → logprob: -4.985899448394775
    6. '(' → logprob: -4.985899448394775
    7. ' =' → logprob: -5.235899448394775
    8. '(i' → logprob: -6.485899448394775
    9. '   ' → logprob: -6.610899448394775
    10. '),' → logprob: -6.735899448394775

Token 229: ' inclus' (ID: 11891)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00434336019679904
    2. ' ' → logprob: -5.629343509674072
    3. 'i' → logprob: -7.879343509674072
    4. ' i' → logprob: -8.004343032836914
    5. '   ' → logprob: -12.129343032836914
    6. '0' → logprob: -12.254343032836914
    7. '=' → logprob: -12.629343032836914
    8. '2' → logprob: -12.754343032836914
    9. '  ' → logprob: -13.004343032836914
    10. 'l' → logprob: -13.254343032836914

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3564467132091522
    2. '):' → logprob: -1.2314467430114746
    3. ':' → logprob: -5.106446743011475
    4. ' ,' → logprob: -7.106446743011475
    5. ')' → logprob: -7.731446743011475
    6. ' ):' → logprob: -8.606446266174316
    7. '):
' → logprob: -8.731446266174316
    8. '   ' → logprob: -9.106446266174316
    9. '=' → logprob: -10.231446266174316
    10. ' :' → logprob: -10.481446266174316

Token 231: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5442809462547302
    2. ' i' → logprob: -1.044281005859375
    3. '   ' → logprob: -3.544281005859375
    4. 'n' → logprob: -4.044281005859375
    5. ' ' → logprob: -4.419281005859375
    6. 'i' → logprob: -6.419281005859375
    7. '):' → logprob: -6.669281005859375
    8. ' all' → logprob: -6.794281005859375
    9. '  ' → logprob: -7.294281005859375
    10. ',' → logprob: -7.419281005859375

Token 232: ' deuxième' (ID: 51664)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3337746262550354
    2. 'second' → logprob: -1.3337745666503906
    3. ' second' → logprob: -3.9587745666503906
    4. ' deuxième' → logprob: -7.958774566650391
    5. 'dern' → logprob: -8.20877456665039
    6. ' ' → logprob: -8.95877456665039
    7. 'se' → logprob: -9.08377456665039
    8. '2' → logprob: -9.33377456665039
    9. '#' → logprob: -9.95877456665039
    10. '```' → logprob: -10.20877456665039

Token 233: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.069344401359558
    2. ')' → logprob: -1.694344401359558
    3. 'argument' → logprob: -1.819344401359558
    4. 'ex' → logprob: -2.1943445205688477
    5. 'est' → logprob: -2.1943445205688477
    6. ',' → logprob: -3.5693445205688477
    7. 'n' → logprob: -3.6943445205688477
    8. '<|end|>' → logprob: -5.194344520568848
    9. ' argument' → logprob: -5.444344520568848
    10. ' )' → logprob: -5.694344520568848

Token 234: ' excl' (ID: 57282)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.3638700842857361
    2. 'exclusive' → logprob: -1.3638701438903809
    3. ' exclus' → logprob: -4.113870143890381
    4. 'non' → logprob: -4.238870143890381
    5. 'n' → logprob: -4.488870143890381
    6. ' exclusive' → logprob: -6.113870143890381
    7. 'excluded' → logprob: -6.238870143890381
    8. ' excl' → logprob: -6.238870143890381
    9. ' n' → logprob: -7.738870143890381
    10. ' non' → logprob: -7.863870143890381

Token 235: 'u' (ID: 84)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1855735033750534
    2. ')' → logprob: -2.3105735778808594
    3. ',' → logprob: -2.9355735778808594
    4. '):
' → logprob: -5.560573577880859
    5. '=' → logprob: -5.935573577880859
    6. '   ' → logprob: -6.185573577880859
    7. '```' → logprob: -6.560573577880859
    8. 'cluded' → logprob: -6.810573577880859
    9. 'clude' → logprob: -7.560573577880859
    10. 'import' → logprob: -7.560573577880859

Token 236: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004785395693033934
    2. '):' → logprob: -6.004785537719727
    3. ',' → logprob: -7.129785537719727
    4. '   ' → logprob: -7.379785537719727
    5. ':
' → logprob: -7.504785537719727
    6. ' :' → logprob: -8.754785537719727
    7. '):
' → logprob: -9.879785537719727
    8. '():' → logprob: -10.004785537719727
    9. '{' → logprob: -10.254785537719727
    10. '(' → logprob: -11.254785537719727

Token 237: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1051994115114212
    2. '   ' → logprob: -2.4801993370056152
    3. ':
' → logprob: -4.480199337005615
    4. ' :' → logprob: -5.605199337005615
    5. ',' → logprob: -8.480199813842773
    6. ' :
' → logprob: -8.855199813842773
    7. 'all' → logprob: -8.980199813842773
    8. ' ' → logprob: -9.230199813842773
    9. '):' → logprob: -9.230199813842773
    10. '):
' → logprob: -9.230199813842773

Token 238: ' #' (ID: 1069)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.5411992073059082
    2. 'all' → logprob: -1.5411992073059082
    3. '   ' → logprob: -2.291199207305908
    4. ' taste' → logprob: -3.291199207305908
    5. ' all' → logprob: -3.541199207305908
    6. 'apple' → logprob: -3.916199207305908
    7. 't' → logprob: -5.416199207305908
    8. ' apple' → logprob: -5.666199207305908
    9. '    
' → logprob: -6.916199207305908
    10. ' ' → logprob: -6.916199207305908

Token 239: ' Cal' (ID: 4453)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.45611169934272766
    2. 'all' → logprob: -1.2061116695404053
    3. '   ' → logprob: -3.8311116695404053
    4. 'apple' → logprob: -4.081111907958984
    5. ' taste' → logprob: -4.581111907958984
    6. ' all' → logprob: -4.956111907958984
    7. ' ' → logprob: -6.081111907958984
    8. 't' → logprob: -6.206111907958984
    9. 'g' → logprob: -6.831111907958984
    10. 'current' → logprob: -6.956111907958984

Token 240: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.3982495963573456
    2. 'cule' → logprob: -1.773249626159668
    3. 'c' → logprob: -2.023249626159668
    4. 'culate' → logprob: -4.273249626159668
    5. '   ' → logprob: -4.648249626159668
    6. '  ' → logprob: -6.898249626159668
    7. 'cula' → logprob: -7.773249626159668
    8. 'all' → logprob: -8.023249626159668
    9. ' ' → logprob: -8.398249626159668
    10. 'cu' → logprob: -8.523249626159668

Token 241: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15989398956298828
    2. ' le' → logprob: -2.5348939895629883
    3. ' la' → logprob: -2.9098939895629883
    4. ' all' → logprob: -5.409893989562988
    5. ' taste' → logprob: -6.534893989562988
    6. ' ' → logprob: -6.909893989562988
    7. '  ' → logprob: -6.909893989562988
    8. 'all' → logprob: -7.034893989562988
    9. 'taste' → logprob: -7.284893989562988
    10. ' the' → logprob: -7.409893989562988

Token 242: ' save' (ID: 5093)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.1352192610502243
    2. 'g' → logprob: -2.8852193355560303
    3. 'go' → logprob: -3.2602193355560303
    4. 'all' → logprob: -5.010219097137451
    5. 'apple' → logprob: -5.385219097137451
    6. 'save' → logprob: -5.510219097137451
    7. 't' → logprob: -5.760219097137451
    8. ' taste' → logprob: -5.885219097137451
    9. '#' → logprob: -6.385219097137451
    10. 'current' → logprob: -6.760219097137451

Token 243: 'ur' (ID: 330)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.45411136746406555
    2. 'ur' → logprob: -1.3291113376617432
    3. 'vor' → logprob: -2.454111337661743
    4. 'eur' → logprob: -5.829111576080322
    5. 'value' → logprob: -6.079111576080322
    6. 'n' → logprob: -7.204111576080322
    7. 'voir' → logprob: -7.454111576080322
    8. 'ure' → logprob: -7.579111576080322
    9. 'leur' → logprob: -7.579111576080322
    10. 'va' → logprob: -7.704111576080322

Token 244: ' actuelle' (ID: 104951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0490756519138813
    2. '_de' → logprob: -3.6740756034851074
    3. 'de' → logprob: -4.674075603485107
    4. '   ' → logprob: -4.924075603485107
    5. '=' → logprob: -6.049075603485107
    6. ' de' → logprob: -6.549075603485107
    7. '_i' → logprob: -7.549075603485107
    8. '_' → logprob: -7.924075603485107
    9. '_t' → logprob: -8.174076080322266
    10. ' ' → logprob: -8.799076080322266

Token 245: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33655884861946106
    2. '   ' → logprob: -1.4615588188171387
    3. '_t' → logprob: -3.7115588188171387
    4. '=' → logprob: -3.7115588188171387
    5. 'taste' → logprob: -6.711558818817139
    6. 't' → logprob: -7.086558818817139
    7. ' +=' → logprob: -7.586558818817139
    8. '_' → logprob: -7.836558818817139
    9. 'apple' → logprob: -8.211559295654297
    10. '  ' → logprob: -8.586559295654297

Token 246: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0622420459985733
    2. ' i' → logprob: -3.562242031097412
    3. 'l' → logprob: -4.187242031097412
    4. 'math' → logprob: -5.437242031097412
    5. 'all' → logprob: -5.937242031097412
    6. '(i' → logprob: -6.187242031097412
    7. 'la' → logprob: -6.437242031097412
    8. 'abs' → logprob: -7.187242031097412
    9. '(math' → logprob: -7.312242031097412
    10. ' la' → logprob: -7.312242031097412

Token 247: ' pomme' (ID: 197262)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4374981224536896
    2. ' pomme' → logprob: -1.0624980926513672
    3. 'i' → logprob: -5.187498092651367
    4. 'apple' → logprob: -6.812498092651367
    5. ' i' → logprob: -7.187498092651367
    6. 'pom' → logprob: -7.312498092651367
    7. ' p' → logprob: -7.812498092651367
    8. 'po' → logprob: -9.062498092651367
    9. '   ' → logprob: -10.812498092651367
    10. ' ' → logprob: -11.312498092651367

Token 248: ' numéro' (ID: 65036)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37588679790496826
    2. '=' → logprob: -1.7508867979049683
    3. ' =' → logprob: -2.125886917114258
    4. 'taste' → logprob: -4.250886917114258
    5. 'current' → logprob: -5.875886917114258
    6. 't' → logprob: -6.375886917114258
    7. 'apple' → logprob: -8.125886917114258
    8. ' taste' → logprob: -8.125886917114258
    9. ',' → logprob: -8.375886917114258
    10. ' current' → logprob: -8.875886917114258

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05260350927710533
    2. ' i' → logprob: -3.1776034832000732
    3. '   ' → logprob: -4.677603721618652
    4. '(i' → logprob: -8.677603721618652
    5. '	i' → logprob: -11.052603721618652
    6. ' ' → logprob: -11.177603721618652
    7. '  ' → logprob: -11.677603721618652
    8. ' (' → logprob: -11.677603721618652
    9. '_i' → logprob: -12.052603721618652
    10. '    ' → logprob: -12.052603721618652

Token 250: '.
' (ID: 558)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7674707770347595
    2. '   ' → logprob: -0.8924707770347595
    3. ' =' → logprob: -2.3924708366394043
    4. 'taste' → logprob: -3.8924708366394043
    5. 'current' → logprob: -5.642470836639404
    6. 't' → logprob: -5.767470836639404
    7. ',' → logprob: -6.142470836639404
    8. ':' → logprob: -6.642470836639404
    9. 'apple' → logprob: -7.017470836639404
    10. ' taste' → logprob: -7.392470836639404

Token 251: '   ' (ID: 271)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.4548172354698181
    2. 'current' → logprob: -1.579817295074463
    3. '   ' → logprob: -2.579817295074463
    4. '=' → logprob: -3.829817295074463
    5. ' current' → logprob: -3.954817295074463
    6. 'all' → logprob: -4.329817295074463
    7. ' taste' → logprob: -4.579817295074463
    8. 'apple' → logprob: -4.954817295074463
    9. 't' → logprob: -5.579817295074463
    10. ' =' → logprob: -6.704817295074463

Token 252: ' #' (ID: 1069)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.2855704128742218
    2. 'current' → logprob: -2.0355703830718994
    3. '   ' → logprob: -3.0355703830718994
    4. 'all' → logprob: -3.9105703830718994
    5. ' current' → logprob: -4.2855706214904785
    6. ' taste' → logprob: -4.4105706214904785
    7. 'apple' → logprob: -4.4105706214904785
    8. 't' → logprob: -5.6605706214904785
    9. 'cur' → logprob: -6.4105706214904785
    10. ' apple' → logprob: -7.0355706214904785

Token 253: ' La' (ID: 3038)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.22857311367988586
    2. 'current' → logprob: -2.1035730838775635
    3. 'all' → logprob: -3.2285730838775635
    4. ' taste' → logprob: -3.9785730838775635
    5. ' current' → logprob: -4.353573322296143
    6. 'apple' → logprob: -5.978573322296143
    7. '   ' → logprob: -6.103573322296143
    8. 't' → logprob: -6.603573322296143
    9. ' all' → logprob: -6.603573322296143
    10. 'cur' → logprob: -7.103573322296143

Token 254: ' save' (ID: 5093)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.43832647800445557
    2. ' taste' → logprob: -2.188326358795166
    3. 'current' → logprob: -2.688326358795166
    4. ' current' → logprob: -2.813326358795166
    5. 'all' → logprob: -3.188326358795166
    6. 'save' → logprob: -3.813326358795166
    7. 'apple' → logprob: -4.063326358795166
    8. ' all' → logprob: -4.688326358795166
    9. ' save' → logprob: -5.313326358795166
    10. ' apple' → logprob: -5.313326358795166

Token 255: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.002105767372995615
    2. 'f' → logprob: -7.252105712890625
    3. 'ure' → logprob: -7.627105712890625
    4. 've' → logprob: -8.002105712890625
    5. 'fe' → logprob: -8.877105712890625
    6. 'ver' → logprob: -9.627105712890625
    7. 'uvre' → logprob: -9.877105712890625
    8. ' =' → logprob: -10.377105712890625
    9. 'vor' → logprob: -10.627105712890625
    10. '=' → logprob: -10.877105712890625

Token 256: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2462446540594101
    2. '_act' → logprob: -1.8712446689605713
    3. '_' → logprob: -3.7462446689605713
    4. '_de' → logprob: -4.371244430541992
    5. '_i' → logprob: -4.871244430541992
    6. '=' → logprob: -5.121244430541992
    7. '_current' → logprob: -5.496244430541992
    8. '_t' → logprob: -5.996244430541992
    9. '_c' → logprob: -6.496244430541992
    10. '_p' → logprob: -6.621244430541992

Token 257: ' défin' (ID: 57890)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47904959321022034
    2. 'i' → logprob: -1.479049563407898
    3. ' l' → logprob: -2.7290496826171875
    4. 'l' → logprob: -3.7290496826171875
    5. ' all' → logprob: -3.9790496826171875
    6. 'all' → logprob: -4.2290496826171875
    7. ' math' → logprob: -4.6040496826171875
    8. ' (' → logprob: -4.9790496826171875
    9. ' ' → logprob: -5.2290496826171875
    10. '   ' → logprob: -6.4790496826171875

Token 258: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0026913441251963377
    2. '=' → logprob: -6.627691268920898
    3. ' =' → logprob: -6.877691268920898
    4. 'it' → logprob: -9.377691268920898
    5. 'i' → logprob: -9.502691268920898
    6. 'is' → logprob: -9.627691268920898
    7. 'ition' → logprob: -10.252691268920898
    8. 'ue' → logprob: -10.377691268920898
    9. ' par' → logprob: -11.627691268920898
    10. 'e' → logprob: -12.502691268920898

Token 259: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7202507853507996
    2. '=' → logprob: -1.3452508449554443
    3. ' par' → logprob: -1.5952508449554443
    4. ' comme' → logprob: -3.5952508449554443
    5. 'comme' → logprob: -4.720250606536865
    6. 'par' → logprob: -4.970250606536865
    7. '_par' → logprob: -6.345250606536865
    8. ' ' → logprob: -6.970250606536865
    9. '   ' → logprob: -7.220250606536865
    10. '=i' → logprob: -7.345250606536865

Token 260: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6425047516822815
    2. 'i' → logprob: -0.8925047516822815
    3. ' i' → logprob: -3.8925046920776367
    4. ' l' → logprob: -4.142504692077637
    5. 'math' → logprob: -5.392504692077637
    6. '   ' → logprob: -5.517504692077637
    7. '(i' → logprob: -5.517504692077637
    8. '2' → logprob: -6.142504692077637
    9. 'max' → logprob: -6.392504692077637
    10. ' ' → logprob: -6.642504692077637

Token 261: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5130032300949097
    2. ' -' → logprob: -1.5130032300949097
    3. '*i' → logprob: -2.638003349304199
    4. ' +' → logprob: -3.013003349304199
    5. '*' → logprob: -3.513003349304199
    6. '-' → logprob: -4.513003349304199
    7. '+' → logprob: -5.513003349304199
    8. 'og' → logprob: -5.638003349304199
    9. '+i' → logprob: -6.263003349304199
    10. '**' → logprob: -6.388003349304199

Token 262: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.558137834072113
    2. ' i' → logprob: -0.933137834072113
    3. ' (' → logprob: -4.183137893676758
    4. ' math' → logprob: -4.683137893676758
    5. 'math' → logprob: -5.558137893676758
    6. '(i' → logprob: -6.308137893676758
    7. ' ' → logprob: -6.683137893676758
    8. '(' → logprob: -7.433137893676758
    9. '2' → logprob: -7.558137893676758
    10. '(math' → logprob: -8.058137893676758

Token 263: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18490776419639587
    2. '-' → logprob: -1.8099077939987183
    3. '**' → logprob: -5.684907913208008
    4. ' ' → logprob: -6.934907913208008
    5. '<|end|>' → logprob: -8.184907913208008
    6. '*' → logprob: -9.059907913208008
    7. '```' → logprob: -9.684907913208008
    8. '  ' → logprob: -9.809907913208008
    9. '   ' → logprob: -9.934907913208008
    10. ' **' → logprob: -10.059907913208008

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '2' → logprob: -17.625625610351562
    4. '  ' → logprob: -18.875625610351562
    5. '   ' → logprob: -19.125625610351562
    6. 'i' → logprob: -20.625625610351562
    7. ' ' → logprob: -20.625625610351562
    8. '
' → logprob: -20.625625610351562
    9. '１' → logprob: -20.750625610351562
    10. '100' → logprob: -20.875625610351562

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.625027656555176
    3. '2' → logprob: -12.750027656555176
    4. '0' → logprob: -16.00002670288086
    5. 'i' → logprob: -16.12502670288086
    6. '10' → logprob: -17.00002670288086
    7. '3' → logprob: -17.37502670288086
    8. '   ' → logprob: -17.62502670288086
    9. 'math' → logprob: -17.62502670288086
    10. '100' → logprob: -17.68752670288086

Token 266: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006367852329276502
    2. '    
' → logprob: -8.50063705444336
    3. ')' → logprob: -8.87563705444336
    4. '
' → logprob: -9.00063705444336
    5. 'all' → logprob: -9.37563705444336
    6. ',' → logprob: -10.12563705444336
    7. ' all' → logprob: -11.75063705444336
    8. '   ' → logprob: -12.25063705444336
    9. ':' → logprob: -12.37563705444336
    10. '   
' → logprob: -12.87563705444336

Token 267: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07376451790332794
    2. 'all' → logprob: -3.0737645626068115
    3. ' all' → logprob: -3.9487645626068115
    4. ':' → logprob: -6.073764324188232
    5. ')' → logprob: -7.073764324188232
    6. '    
' → logprob: -7.948764324188232
    7. '
' → logprob: -7.948764324188232
    8. 'taste' → logprob: -8.32376480102539
    9. '  ' → logprob: -8.69876480102539
    10. ' ' → logprob: -8.82376480102539

Token 268: ' signifie' (ID: 81149)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.826083779335022
    2. 'all' → logprob: -0.951083779335022
    3. ' +=' → logprob: -1.951083779335022
    4. '+=' → logprob: -4.951083660125732
    5. ')' → logprob: -5.201083660125732
    6. '+' → logprob: -5.451083660125732
    7. ' )' → logprob: -5.701083660125732
    8. '   ' → logprob: -6.326083660125732
    9. ' =' → logprob: -6.326083660125732
    10. '*' → logprob: -6.701083660125732

Token 269: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9744805097579956
    2. ' ' → logprob: -1.2244805097579956
    3. ')' → logprob: -1.9744805097579956
    4. 'all' → logprob: -2.724480628967285
    5. ' )' → logprob: -2.849480628967285
    6. ' all' → logprob: -3.224480628967285
    7. ',' → logprob: -4.599480628967285
    8. '    ' → logprob: -5.099480628967285
    9. '  ' → logprob: -6.599480628967285
    10. ':' → logprob: -7.099480628967285

Token 270: ' la' (ID: 557)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.25591209530830383
    2. ' all' → logprob: -1.5059120655059814
    3. ' la' → logprob: -6.7559123039245605
    4. '   ' → logprob: -7.0059123039245605
    5. ' le' → logprob: -8.005911827087402
    6. ' the' → logprob: -8.130911827087402
    7. 'taste' → logprob: -8.380911827087402
    8. 'la' → logprob: -8.630911827087402
    9. ' ' → logprob: -8.880911827087402
    10. 'le' → logprob: -9.255911827087402

Token 271: ' première' (ID: 23423)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.01258029043674469
    2. ' all' → logprob: -5.512580394744873
    3. 'taste' → logprob: -5.512580394744873
    4. 'apple' → logprob: -5.762580394744873
    5. 'save' → logprob: -8.012579917907715
    6. '#' → logprob: -8.137579917907715
    7. 'current' → logprob: -9.012579917907715
    8. 'for' → logprob: -9.137579917907715
    9. 't' → logprob: -9.637579917907715
    10. 'fl' → logprob: -10.012579917907715

Token 272: ' pomme' (ID: 197262)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -1.0653398036956787
    2. ' taste' → logprob: -1.1903398036956787
    3. ' ' → logprob: -2.1903398036956787
    4. 'print' → logprob: -3.0653398036956787
    5. 'apple' → logprob: -3.1903398036956787
    6. ' pomme' → logprob: -3.4403398036956787
    7. ' all' → logprob: -3.5653398036956787
    8. ' print' → logprob: -3.9403398036956787
    9. ' apple' → logprob: -3.9403398036956787
    10. 'all' → logprob: -4.065340042114258

Token 273: ' a' (ID: 261)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.6205686926841736
    2. '   ' → logprob: -1.9955687522888184
    3. ' taste' → logprob: -2.9955687522888184
    4. '<|end|>' → logprob: -2.9955687522888184
    5. ')' → logprob: -3.3705687522888184
    6. '+' → logprob: -3.6205687522888184
    7. ' ' → logprob: -3.7455687522888184
    8. ' +' → logprob: -4.245568752288818
    9. 't' → logprob: -4.620568752288818
    10. 'print' → logprob: -4.620568752288818

Token 274: ' la' (ID: 557)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -1.2808243036270142
    2. '<|end|>' → logprob: -1.7808243036270142
    3. ' une' → logprob: -1.9058243036270142
    4. 'l' → logprob: -2.5308241844177246
    5. ' la' → logprob: -2.7808241844177246
    6. 'la' → logprob: -3.0308241844177246
    7. 'le' → logprob: -3.1558241844177246
    8. 'une' → logprob: -3.2808241844177246
    9. 't' → logprob: -3.7808241844177246
    10. ' ' → logprob: -4.155824184417725

Token 275: ' save' (ID: 5093)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9496838450431824
    2. 'save' → logprob: -1.1996839046478271
    3. 'taste' → logprob: -1.1996839046478271
    4. 'val' → logprob: -5.449683666229248
    5. 'fl' → logprob: -6.324683666229248
    6. 'value' → logprob: -6.824683666229248
    7. 'go' → logprob: -7.324683666229248
    8. ' save' → logprob: -7.449683666229248
    9. ' l' → logprob: -7.824683666229248
    10. 's' → logprob: -8.324684143066406

Token 276: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.00012535012501757592
    2. 'f' → logprob: -10.00012493133545
    3. 've' → logprob: -10.75012493133545
    4. 'l' → logprob: -11.62512493133545
    5. 'urf' → logprob: -11.62512493133545
    6. 'fur' → logprob: -12.00012493133545
    7. 'r' → logprob: -12.37512493133545
    8. 'u' → logprob: -12.75012493133545
    9. 'eur' → logprob: -13.12512493133545
    10. 'ure' → logprob: -13.50012493133545

Token 277: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0028233008924871683
    2. ' l' → logprob: -6.002823352813721
    3. ' =' → logprob: -8.127822875976562
    4. '=' → logprob: -11.002822875976562
    5. '=l' → logprob: -11.127822875976562
    6. '(l' → logprob: -12.502822875976562
    7. 'i' → logprob: -12.627822875976562
    8. '_l' → logprob: -13.002822875976562
    9. '+l' → logprob: -13.252822875976562
    10. ' ' → logprob: -13.252822875976562

Token 278: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3517765998840332
    2. ' +' → logprob: -1.7267765998840332
    3. '+' → logprob: -2.226776599884033
    4. 'taste' → logprob: -4.976776599884033
    5. '+t' → logprob: -6.851776599884033
    6. ')' → logprob: -7.226776599884033
    7. '  ' → logprob: -7.351776599884033
    8. ',' → logprob: -8.476776123046875
    9. ' ' → logprob: -8.601776123046875
    10. '    ' → logprob: -9.351776123046875

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022106902673840523
    2. '#' → logprob: -4.397107124328613
    3. 'all' → logprob: -5.022107124328613
    4. ' all' → logprob: -6.397107124328613
    5. ' #' → logprob: -7.647107124328613
    6. '    ' → logprob: -7.897107124328613
    7. ' ' → logprob: -8.897107124328613
    8. '  ' → logprob: -9.022107124328613
    9. '    
' → logprob: -10.022107124328613
    10. ')' → logprob: -10.147107124328613

Token 280: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15364201366901398
    2. '#' (adapté à ' #') → logprob: -2.778641939163208
    3. 'all' → logprob: -3.403641939163208
    4. ')' → logprob: -4.653642177581787
    5. 'i' → logprob: -5.153642177581787
    6. ' all' → logprob: -5.153642177581787
    7. ' i' → logprob: -5.528642177581787
    8. '    ' → logprob: -5.653642177581787
    9. ' ' → logprob: -5.778642177581787
    10. ' #' → logprob: -6.028642177581787

Token 281: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2839098274707794
    2. 'all' → logprob: -1.533909797668457
    3. ' all' → logprob: -3.658909797668457
    4. 'taste' → logprob: -5.908909797668457
    5. '#' → logprob: -6.783909797668457
    6. '  ' → logprob: -7.783909797668457
    7. ' ' → logprob: -7.783909797668457
    8. 't' → logprob: -8.658909797668457
    9. ' taste' → logprob: -8.783909797668457
    10. '    ' → logprob: -9.408909797668457

Token 282: ' seconde' (ID: 66204)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1984496116638184
    2. 'all' → logprob: -1.1984496116638184
    3. 'save' → logprob: -1.9484496116638184
    4. ' all' → logprob: -2.6984496116638184
    5. ' i' → logprob: -2.8234496116638184
    6. ' save' → logprob: -3.1984496116638184
    7. '#' → logprob: -4.448449611663818
    8. 'taste' → logprob: -4.698449611663818
    9. ' suivante' → logprob: -4.823449611663818
    10. ' ' → logprob: -4.823449611663818

Token 283: ' pomme' (ID: 197262)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10891814529895782
    2. '+' → logprob: -2.3589181900024414
    3. ' ' → logprob: -5.108918190002441
    4. '   ' → logprob: -6.608918190002441
    5. ' pomme' → logprob: -7.733918190002441
    6. '+i' → logprob: -8.233918190002441
    7. '<|end|>' → logprob: -9.108918190002441
    8. '  ' → logprob: -9.233918190002441
    9. ' plus' → logprob: -9.358918190002441
    10. 'apple' → logprob: -9.983918190002441

Token 284: ' est' (ID: 893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10817454010248184
    2. 'a' → logprob: -2.4831745624542236
    3. ' ' → logprob: -4.6081743240356445
    4. '+' → logprob: -5.1081743240356445
    5. ' +' → logprob: -6.2331743240356445
    6. ' has' → logprob: -7.4831743240356445
    7. ' ' → logprob: -9.608174324035645
    8. ' l' → logprob: -9.733174324035645
    9. ' plus' → logprob: -9.983174324035645
    10. 'has' → logprob: -9.983174324035645

Token 285: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5763798952102661
    2. ' l' → logprob: -0.8263798952102661
    3. ' ' → logprob: -8.451379776000977
    4. '   ' → logprob: -9.076379776000977
    5. '	l' → logprob: -11.076379776000977
    6. '+l' → logprob: -11.201379776000977
    7. '+' → logprob: -11.451379776000977
    8. ' plus' → logprob: -11.451379776000977
    9. ' +' → logprob: -11.576379776000977
    10. '  ' → logprob: -11.576379776000977

Token 286: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4287475645542145
    2. ' +' → logprob: -1.053747534751892
    3. '+i' → logprob: -10.803747177124023
    4. '+l' → logprob: -11.553747177124023
    5. ' ' → logprob: -12.303747177124023
    6. ' ' → logprob: -12.428747177124023
    7. ' plus' → logprob: -13.178747177124023
    8. ' +
' → logprob: -13.803747177124023
    9. '<|end|>' → logprob: -14.053747177124023
    10. 'plus' → logprob: -14.178747177124023

Token 287: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5627734661102295
    2. '1' → logprob: -0.9377734661102295
    3. ' i' → logprob: -3.4377734661102295
    4. ' ' → logprob: -5.187773704528809
    5. ' (' → logprob: -7.312773704528809
    6. '(i' → logprob: -8.437773704528809
    7. '2' → logprob: -8.562773704528809
    8. '(' → logprob: -10.937773704528809
    9. '   ' → logprob: -11.187773704528809
    10. '"' → logprob: -11.437773704528809

Token 288: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027930041775107384
    2. ' i' → logprob: -4.02793025970459
    3. '1' → logprob: -5.27793025970459
    4. '(i' → logprob: -5.65293025970459
    5. ' (' → logprob: -7.02793025970459
    6. ' ' → logprob: -8.77793025970459
    7. '0' → logprob: -9.90293025970459
    8. '(' → logprob: -11.15293025970459
    9. '   ' → logprob: -12.15293025970459
    10. ' ' → logprob: -13.27793025970459

Token 289: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0248469114303589
    2. ' -' → logprob: -1.3998469114303589
    3. '<|end|>' → logprob: -1.6498469114303589
    4. ' +' → logprob: -2.2748470306396484
    5. '-' → logprob: -3.1498470306396484
    6. '+' → logprob: -3.8998470306396484
    7. '   ' → logprob: -4.274847030639648
    8. ',' → logprob: -4.899847030639648
    9. ' ' → logprob: -5.274847030639648
    10. ' )' → logprob: -6.274847030639648

Token 290: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1088985800743103
    2. '<|end|>' → logprob: -3.483898639678955
    3. ' ' → logprob: -3.608898639678955
    4. ')' → logprob: -4.358898639678955
    5. 'i' → logprob: -4.733898639678955
    6. ' i' → logprob: -5.358898639678955
    7. ' l' → logprob: -5.358898639678955
    8. '  ' → logprob: -5.608898639678955
    9. '    ' → logprob: -5.733898639678955
    10. 'l' → logprob: -6.358898639678955

Token 291: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004001346416771412
    2. ')' → logprob: -6.504001140594482
    3. ':' → logprob: -6.504001140594482
    4. '):' → logprob: -7.504001140594482
    5. ',' → logprob: -9.00400161743164
    6. 'all' → logprob: -9.25400161743164
    7. '    
' → logprob: -9.75400161743164
    8. ' all' → logprob: -10.50400161743164
    9. '):
' → logprob: -10.87900161743164
    10. '
' → logprob: -11.00400161743164

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005384349264204502
    2. 'all' → logprob: -5.38038444519043
    3. ' all' → logprob: -7.38038444519043
    4. 'taste' → logprob: -10.50538444519043
    5. '   ' → logprob: -10.88038444519043
    6. 'current' → logprob: -10.88038444519043
    7. ' current' → logprob: -11.00538444519043
    8. ' taste' → logprob: -11.63038444519043
    9. '    
' → logprob: -11.75538444519043
    10. '    ' → logprob: -11.75538444519043

Token 293: ' tmp' (ID: 8919)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.29156407713890076
    2. 'all' → logprob: -1.9165641069412231
    3. 'current' → logprob: -2.5415639877319336
    4. 'apple' → logprob: -4.416563987731934
    5. '   ' → logprob: -5.041563987731934
    6. ' taste' → logprob: -5.541563987731934
    7. ' current' → logprob: -6.416563987731934
    8. 't' → logprob: -7.416563987731934
    9. ' all' → logprob: -7.791563987731934
    10. ' ' → logprob: -8.416563987731934

Token 294: ' =' (ID: 314)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.3654584288597107
    2. ' =' → logprob: -1.3654584884643555
    3. '=' → logprob: -3.7404584884643555
    4. '_' → logprob: -3.7404584884643555
    5. ' _' → logprob: -6.4904584884643555
    6. '_fl' → logprob: -7.6154584884643555
    7. '=_' → logprob: -7.7404584884643555
    8. ' ' → logprob: -8.490458488464355
    9. '_save' → logprob: -9.240458488464355
    10. '   ' → logprob: -9.365458488464355

Token 295: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.029750952497124672
    2. ' l' → logprob: -3.5297510623931885
    3. '	l' → logprob: -14.77975082397461
    4. '   ' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.90475082397461
    6. '(l' → logprob: -18.02975082397461
    7. '  ' → logprob: -19.02975082397461
    8. '+l' → logprob: -19.27975082397461
    9. ' (' → logprob: -19.65475082397461
    10. '_l' → logprob: -19.77975082397461

Token 296: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2015511393547058
    2. '+' → logprob: -1.7015511989593506
    3. '+i' → logprob: -8.95155143737793
    4. ' ' → logprob: -12.20155143737793
    5. ' ' → logprob: -14.20155143737793
    6. '+(' → logprob: -14.45155143737793
    7. '+
' → logprob: -14.95155143737793
    8. '   ' → logprob: -15.07655143737793
    9. '+l' → logprob: -15.20155143737793
    10. ' +
' → logprob: -15.45155143737793

Token 297: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31459254026412964
    2. 'i' → logprob: -1.3145925998687744
    3. ' (' → logprob: -6.939592361450195
    4. '(i' → logprob: -7.939592361450195
    5. ' ' → logprob: -13.314592361450195
    6. '(' → logprob: -13.314592361450195
    7. '	i' → logprob: -14.064592361450195
    8. '   ' → logprob: -14.564592361450195
    9. ' ' → logprob: -16.439592361450195
    10. '_i' → logprob: -16.939592361450195

Token 298: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22550272941589355
    2. '-' → logprob: -1.6005027294158936
    3. ' ' → logprob: -9.350502967834473
    4. '  ' → logprob: -13.850502967834473
    5. '<|end|>' → logprob: -14.225502967834473
    6. '   ' → logprob: -14.350502967834473
    7. 's' → logprob: -15.350502967834473
    8. '1' → logprob: -15.600502967834473
    9. ')' → logprob: -15.725502967834473
    10. ' ' → logprob: -16.725502014160156

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -17.62523078918457
    4. '   ' → logprob: -18.62523078918457
    5. '```' → logprob: -19.12523078918457
    6. '
' → logprob: -19.37523078918457
    7. '１' → logprob: -19.75023078918457
    8. '۱' → logprob: -20.62523078918457
    9. '  ' → logprob: -20.68773078918457
    10. '	' → logprob: -21.00023078918457

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '<|end|>' → logprob: -15.000006675720215
    4. '```' → logprob: -18.0000057220459
    5. '   ' → logprob: -19.6250057220459
    6. '１' → logprob: -20.0625057220459
    7. '۱' → logprob: -20.5000057220459
    8. '<|end|>' → logprob: -20.8750057220459
    9. '১' → logprob: -21.1875057220459
    10. '  ' → logprob: -21.2500057220459

Token 301: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027141550555825233
    2. ' all' → logprob: -4.652141571044922
    3. 'all' → logprob: -4.652141571044922
    4. '
' → logprob: -4.902141571044922
    5. '    
' → logprob: -8.527141571044922
    6. '	all' → logprob: -10.277141571044922
    7. '  
' → logprob: -11.777141571044922
    8. ' ' → logprob: -12.402141571044922
    9. '  ' → logprob: -12.652141571044922
    10. ')' → logprob: -12.652141571044922

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4084559977054596
    2. 'all' → logprob: -1.2834559679031372
    3. ' all' → logprob: -3.5334560871124268
    4. '
' → logprob: -4.783455848693848
    5. ')' → logprob: -5.158455848693848
    6. '<|end|>' → logprob: -5.283455848693848
    7. ' ' → logprob: -5.783455848693848
    8. '+' → logprob: -6.408455848693848
    9. '	all' → logprob: -6.783455848693848
    10. ' if' → logprob: -6.783455848693848

Token 303: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.002738185692578554
    2. '   ' → logprob: -6.377737998962402
    3. ' all' → logprob: -6.877737998962402
    4. '
' → logprob: -13.252737998962402
    5. 'if' → logprob: -13.627737998962402
    6. '	all' → logprob: -14.002737998962402
    7. ' ' → logprob: -15.252737998962402
    8. '    
' → logprob: -15.377737998962402
    9. '  ' → logprob: -15.502737998962402
    10. 'All' → logprob: -15.877737998962402

Token 304: ' Aj' (ID: 28294)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00022034443099983037
    2. '   ' → logprob: -8.75022029876709
    3. ' all' → logprob: -9.87522029876709
    4. 'if' → logprob: -12.50022029876709
    5. '
' → logprob: -13.00022029876709
    6. '#' → logprob: -13.25022029876709
    7. ' ' → logprob: -14.12522029876709
    8. '    
' → logprob: -14.37522029876709
    9. '  ' → logprob: -15.12522029876709
    10. '
' → logprob: -15.75022029876709

Token 305: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.04104026407003403
    2. 'out' → logprob: -4.166040420532227
    3. 'outer' → logprob: -4.416040420532227
    4. 'all' → logprob: -5.291040420532227
    5. 'outez' → logprob: -5.541040420532227
    6. 'outes' → logprob: -6.291040420532227
    7. '   ' → logprob: -7.166040420532227
    8. ' all' → logprob: -7.416040420532227
    9. 'ust' → logprob: -8.166040420532227
    10. 'uste' → logprob: -9.916040420532227

Token 306: ' la' (ID: 557)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.06200969219207764
    2. 'tmp' → logprob: -2.812009811401367
    3. '(tmp' → logprob: -10.562009811401367
    4. '	tmp' → logprob: -11.812009811401367
    5. '/tmp' → logprob: -13.062009811401367
    6. ' ' → logprob: -13.937009811401367
    7. '_tmp' → logprob: -14.062009811401367
    8. '   ' → logprob: -14.062009811401367
    9. ',tmp' → logprob: -14.062009811401367
    10. '$tmp' → logprob: -14.187009811401367

Token 307: ' valeur' (ID: 41664)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.023257939144968987
    2. ' tmp' → logprob: -3.7732579708099365
    3. '	tmp' → logprob: -12.648258209228516
    4. 't' → logprob: -12.773258209228516
    5. 'temp' → logprob: -13.273258209228516
    6. '(tmp' → logprob: -13.398258209228516
    7. '/tmp' → logprob: -14.023258209228516
    8. '_tmp' → logprob: -14.523258209228516
    9. ' ' → logprob: -14.898258209228516
    10. '[tmp' → logprob: -15.023258209228516

Token 308: ' de' (ID: 334)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.8196300268173218
    2. 'tmp' → logprob: -1.1946300268173218
    3. ' tmp' → logprob: -1.4446300268173218
    4. '   ' → logprob: -3.9446301460266113
    5. '	tmp' → logprob: -7.569630146026611
    6. ' ' → logprob: -8.319629669189453
    7. '_tmp' → logprob: -8.569629669189453
    8. '[tmp' → logprob: -8.944629669189453
    9. '(' → logprob: -9.569629669189453
    10. ' de' → logprob: -9.694629669189453

Token 309: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.47408467531204224
    2. ' tmp' → logprob: -0.9740846753120422
    3. '	tmp' → logprob: -12.974084854125977
    4. '_tmp' → logprob: -13.099084854125977
    5. '(tmp' → logprob: -13.724084854125977
    6. 'temp' → logprob: -14.099084854125977
    7. '$tmp' → logprob: -14.724084854125977
    8. '/tmp' → logprob: -14.849084854125977
    9. ' ' → logprob: -15.349084854125977
    10. '.tmp' → logprob: -15.974084854125977

Token 310: ' à' (ID: 1221)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9230141639709473
    2. ' to' → logprob: -1.0480141639709473
    3. 'all' → logprob: -2.1730141639709473
    4. '   ' → logprob: -2.6730141639709473
    5. ' à' → logprob: -3.1730141639709473
    6. ' ' → logprob: -4.048014163970947
    7. 'to' → logprob: -5.423014163970947
    8. ')' → logprob: -6.548014163970947
    9. '  ' → logprob: -7.048014163970947
    10. '	all' → logprob: -7.173014163970947

Token 311: ' la' (ID: 557)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0021852378267794847
    2. ' all' → logprob: -6.127185344696045
    3. ' ' → logprob: -17.002185821533203
    4. '	all' → logprob: -17.377185821533203
    5. ''all' → logprob: -18.002185821533203
    6. 'a' → logprob: -18.377185821533203
    7. '_all' → logprob: -18.377185821533203
    8. 'All' → logprob: -18.502185821533203
    9. 'al' → logprob: -20.502185821533203
    10. 'the' → logprob: -20.502185821533203

Token 312: ' variable' (ID: 11076)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.003600544296205044
    2. ' all' → logprob: -5.628600597381592
    3. 'All' → logprob: -16.25360107421875
    4. ''all' → logprob: -16.25360107421875
    5. '	all' → logprob: -16.50360107421875
    6. '_all' → logprob: -16.50360107421875
    7. ' ' → logprob: -16.75360107421875
    8. 'a' → logprob: -17.50360107421875
    9. 'total' → logprob: -18.00360107421875
    10. '
' → logprob: -18.12860107421875

Token 313: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.31328341364860535
    2. 'all' → logprob: -1.3132834434509277
    3. '_all' → logprob: -11.06328296661377
    4. '	all' → logprob: -13.18828296661377
    5. ' ' → logprob: -13.43828296661377
    6. ''all' → logprob: -13.81328296661377
    7. '   ' → logprob: -14.31328296661377
    8. '_' → logprob: -14.56328296661377
    9. 'All' → logprob: -15.81328296661377
    10. '(all' → logprob: -16.063283920288086

Token 314: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. 't' → logprob: -19.0
    4. ' _' → logprob: -19.5
    5. 'taste' → logprob: -19.875
    6. '\' → logprob: -21.75
    7. '_T' → logprob: -21.75
    8. '__' → logprob: -22.0
    9. 'Taste' → logprob: -22.125
    10. '_
' → logprob: -22.25

Token 315: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.0006756199873052537
    2. 'taste' → logprob: -7.375675678253174
    3. '_t' → logprob: -10.875675201416016
    4. '_' → logprob: -10.875675201416016
    5. 'ast' → logprob: -13.000675201416016
    6. '#' → logprob: -13.375675201416016
    7. 'ASTE' → logprob: -13.500675201416016
    8. 'a' → logprob: -14.125675201416016
    9. 'ate' → logprob: -14.125675201416016
    10. 't' → logprob: -14.500675201416016

Token 316: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004241043236106634
    2. ' all' → logprob: -5.879240989685059
    3. 'all' → logprob: -6.629240989685059
    4. '	all' → logprob: -9.754240989685059
    5. '    
' → logprob: -10.754240989685059
    6. '
' → logprob: -11.004240989685059
    7. '  ' → logprob: -12.004240989685059
    8. 'All' → logprob: -12.754240989685059
    9. ' +=' → logprob: -13.129240989685059
    10. '(all' → logprob: -13.629240989685059

Token 317: ' accum' (ID: 23148)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4290774166584015
    2. ' all' → logprob: -1.054077386856079
    3. '_' → logprob: -9.3040771484375
    4. ' ' → logprob: -9.3040771484375
    5. '_all' → logprob: -9.4290771484375
    6. '   ' → logprob: -10.9290771484375
    7. '	all' → logprob: -11.0540771484375
    8. '#' → logprob: -11.0540771484375
    9. 'total' → logprob: -11.5540771484375
    10. ')' → logprob: -12.1790771484375

Token 318: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.12856632471084595
    2. 'uer' → logprob: -2.128566265106201
    3. 'ue' → logprob: -7.003566265106201
    4. 'u' → logprob: -8.12856674194336
    5. 'ule' → logprob: -8.62856674194336
    6. 'er' → logprob: -8.75356674194336
    7. 'ul' → logprob: -10.50356674194336
    8. '   ' → logprob: -10.75356674194336
    9. ' u' → logprob: -10.75356674194336
    10. 'e' → logprob: -12.25356674194336

Token 319: ' la' (ID: 557)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.0256910789757967
    2. 'all' → logprob: -4.025691032409668
    3. ' +=' → logprob: -5.150691032409668
    4. ' tmp' → logprob: -7.150691032409668
    5. ' ' → logprob: -7.525691032409668
    6. 'tmp' → logprob: -9.525691032409668
    7. '   ' → logprob: -9.900691032409668
    8. '	all' → logprob: -9.900691032409668
    9. ')' → logprob: -10.025691032409668
    10. ' )' → logprob: -10.150691032409668

Token 320: ' somme' (ID: 64484)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7282983064651489
    2. 'total' → logprob: -0.9782983064651489
    3. ' total' → logprob: -2.7282981872558594
    4. ' all' → logprob: -2.9782981872558594
    5. 'sum' → logprob: -4.228298187255859
    6. ' somme' → logprob: -5.478298187255859
    7. 's' → logprob: -5.978298187255859
    8. 'som' → logprob: -7.103298187255859
    9. ' goût' → logprob: -7.228298187255859
    10. 'taste' → logprob: -7.603298187255859

Token 321: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026041902601718903
    2. ' all' → logprob: -4.1510419845581055
    3. 'all' → logprob: -5.0260419845581055
    4. ' +=' → logprob: -5.9010419845581055
    5. '	all' → logprob: -7.7760419845581055
    6. '  ' → logprob: -9.776041984558105
    7. '+=' → logprob: -10.276041984558105
    8. ' ' → logprob: -10.651041984558105
    9. '
' → logprob: -10.776041984558105
    10. '    
' → logprob: -10.901041984558105

Token 322: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7650702595710754
    2. 'all' → logprob: -1.2650701999664307
    3. ' all' → logprob: -1.3900701999664307
    4. ' +=' → logprob: -5.89007043838501
    5. '	all' → logprob: -8.140069961547852
    6. '+=' → logprob: -8.640069961547852
    7. ' ' → logprob: -9.390069961547852
    8. '  ' → logprob: -10.515069961547852
    9. '=' → logprob: -10.765069961547852
    10. '+' → logprob: -11.015069961547852

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6042811274528503
    2. 'all' → logprob: -1.1042811870574951
    3. ' all' → logprob: -2.104281187057495
    4. '	all' → logprob: -9.104281425476074
    5. ' ' → logprob: -10.854281425476074
    6. '  ' → logprob: -11.229281425476074
    7. '
' → logprob: -12.979281425476074
    8. '    
' → logprob: -13.979281425476074
    9. '(all' → logprob: -14.354281425476074
    10. '    ' → logprob: -14.354281425476074

Token 324: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.00894804298877716
    2. ' all' → logprob: -4.758947849273682
    3. '   ' → logprob: -8.00894832611084
    4. '	all' → logprob: -14.13394832611084
    5. ' ' → logprob: -16.383947372436523
    6. '  ' → logprob: -17.133947372436523
    7. 'All' → logprob: -17.883947372436523
    8. '
' → logprob: -18.008947372436523
    9. ''all' → logprob: -18.383947372436523
    10. '_all' → logprob: -18.758947372436523

Token 325: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.75
    3. ' _' → logprob: -17.75
    4. '_s' → logprob: -19.125
    5. 't' → logprob: -20.5
    6. '_d' → logprob: -20.625
    7. '_T' → logprob: -20.75
    8. '_total' → logprob: -21.0
    9. '_te' → logprob: -21.0
    10. '_to' → logprob: -21.125

Token 326: 'aste' (ID: 6604)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.07986219227313995
    2. 'aste' → logprob: -2.579862117767334
    3. 'taste' → logprob: -7.079862117767334
    4. '_' → logprob: -9.454862594604492
    5. 'ast' → logprob: -10.829862594604492
    6. 't' → logprob: -11.829862594604492
    7. 'ASTE' → logprob: -12.204862594604492
    8. ' taste' → logprob: -12.329862594604492
    9. 'Taste' → logprob: -12.704862594604492
    10. ' _' → logprob: -12.829862594604492

Token 327: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741572141647339
    2. '+=' → logprob: -0.9741572141647339
    3. '+' → logprob: -9.724157333374023
    4. '=' → logprob: -11.099157333374023
    5. '   ' → logprob: -12.849157333374023
    6. ']+=' → logprob: -13.849157333374023
    7. '+=(' → logprob: -14.599157333374023
    8. '+="' → logprob: -14.974157333374023
    9. '+='' → logprob: -15.099157333374023
    10. ' ' → logprob: -15.724157333374023

Token 328: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.004078878089785576
    2. 'all' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.25407886505127
    4. '	all' → logprob: -15.62907886505127
    5. '+' → logprob: -17.754079818725586
    6. 'All' → logprob: -18.004079818725586
    7. '(all' → logprob: -18.254079818725586
    8. '0' → logprob: -18.254079818725586
    9. ' al' → logprob: -18.504079818725586
    10. '_all' → logprob: -18.629079818725586

Token 329: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -4.320199877838604e-07
    2. '+' → logprob: -16.0
    3. '_g' → logprob: -16.875
    4. 'taste' → logprob: -16.875
    5. '+t' → logprob: -17.25
    6. 't' → logprob: -17.625
    7. '__' → logprob: -17.875
    8. '_' → logprob: -17.875
    9. 'Taste' → logprob: -18.25
    10. '_to' → logprob: -18.75

Token 330: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.00020926215802319348
    2. 'taste' → logprob: -8.875208854675293
    3. 'ast' → logprob: -10.500208854675293
    4. '_' → logprob: -11.625208854675293
    5. 'ate' → logprob: -11.625208854675293
    6. '+' → logprob: -11.875208854675293
    7. 'ste' → logprob: -12.250208854675293
    8. '#' → logprob: -13.250208854675293
    9. 'ase' → logprob: -13.625208854675293
    10. 'ASTE' → logprob: -14.000208854675293

Token 331: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132631778717041
    2. ' +' → logprob: -1.313263177871704
    3. ' plus' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.188262939453125
    5. ' ' → logprob: -15.313262939453125
    6. ' +
' → logprob: -15.438262939453125
    7. '+
' → logprob: -15.938262939453125
    8. ' +=' → logprob: -16.563262939453125
    9. '+=' → logprob: -16.688262939453125
    10. '＋' → logprob: -16.813262939453125

Token 332: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.023246407508850098
    2. ' tmp' → logprob: -3.7732462882995605
    3. 'temp' → logprob: -14.398246765136719
    4. '	tmp' → logprob: -16.02324676513672
    5. '/tmp' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.39824676513672
    7. '(tmp' → logprob: -16.64824676513672
    8. '$tmp' → logprob: -17.52324676513672
    9. '_tmp' → logprob: -17.89824676513672
    10. '   ' → logprob: -18.39824676513672

Token 333: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6014647483825684
    2. '
' → logprob: -1.1014647483825684
    3. 'if' → logprob: -2.4764647483825684
    4. '

' → logprob: -4.726464748382568
    5. '   ' → logprob: -5.351464748382568
    6. '    
' → logprob: -5.851464748382568
    7. ' if' → logprob: -5.851464748382568
    8. '  
' → logprob: -5.976464748382568
    9. '
' → logprob: -6.101464748382568
    10. '#' → logprob: -6.226464748382568

Token 334: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25528621673583984
    2. 'min' → logprob: -2.13028621673584
    3. 'if' → logprob: -3.00528621673584
    4. 'best' → logprob: -4.38028621673584
    5. '#' → logprob: -4.50528621673584
    6. 'minimum' → logprob: -4.88028621673584
    7. '   ' → logprob: -5.38028621673584
    8. 'apple' → logprob: -5.50528621673584
    9. 'least' → logprob: -5.75528621673584
    10. 'm' → logprob: -5.88028621673584

Token 335: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025335485115647316
    2. 'min' → logprob: -4.275335311889648
    3. '#' → logprob: -6.025335311889648
    4. 'if' → logprob: -6.025335311889648
    5. 'average' → logprob: -6.150335311889648
    6. 'm' → logprob: -6.275335311889648
    7. 'all' → logprob: -7.775335311889648
    8. 'ans' → logprob: -7.900335311889648
    9. 'minimum' → logprob: -8.525335311889648
    10. 'avg' → logprob: -8.650335311889648

Token 336: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4440964460372925
    2. 'all' → logprob: -1.4440964460372925
    3. 'print' → logprob: -1.4440964460372925
    4. 'for' → logprob: -1.4440964460372925
    5. '#' → logprob: -3.569096565246582
    6. 'la' → logprob: -4.819096565246582
    7. ' if' → logprob: -5.694096565246582
    8. 'l' → logprob: -5.694096565246582
    9. 'the' → logprob: -6.194096565246582
    10. 'avoir' → logprob: -6.194096565246582

Token 337: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024589141830801964
    2. 'print' → logprob: -4.1495890617370605
    3. 'if' → logprob: -5.7745890617370605
    4. 'bou' → logprob: -5.7745890617370605
    5. '#' → logprob: -6.8995890617370605
    6. ' boucle' → logprob: -7.3995890617370605
    7. ' for' → logprob: -8.149589538574219
    8. 'loop' → logprob: -9.024589538574219
    9. 'all' → logprob: -9.149589538574219
    10. 'while' → logprob: -10.399589538574219

Token 338: ' précédente' (ID: 177319)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03804963827133179
    2. 'if' → logprob: -3.9130496978759766
    3. 'all' → logprob: -4.663049697875977
    4. '#' → logprob: -5.663049697875977
    5. ',' → logprob: -6.163049697875977
    6. ' print' → logprob: -7.538049697875977
    7. 'result' → logprob: -8.163049697875977
    8. 'min' → logprob: -8.288049697875977
    9. 'total' → logprob: -8.288049697875977
    10. ' if' → logprob: -8.788049697875977

Token 339: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7352202534675598
    2. 'if' → logprob: -1.235220193862915
    3. 'min' → logprob: -2.235220193862915
    4. '#' → logprob: -2.735220193862915
    5. 'minimum' → logprob: -4.610220432281494
    6. 'all' → logprob: -4.735220432281494
    7. 'best' → logprob: -4.735220432281494
    8. 'm' → logprob: -5.360220432281494
    9. ',' → logprob: -5.485220432281494
    10. 'max' → logprob: -5.985220432281494

Token 340: ' all' (ID: 722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8023973107337952
    2. 'if' → logprob: -1.6773972511291504
    3. 'all' → logprob: -2.0523972511291504
    4. '#' → logprob: -2.3023972511291504
    5. 'min' → logprob: -2.3023972511291504
    6. 'average' → logprob: -4.42739725112915
    7. 'm' → logprob: -5.42739725112915
    8. ' print' → logprob: -5.67739725112915
    9. ' if' → logprob: -6.42739725112915
    10. 'minimum' → logprob: -6.42739725112915

Token 341: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.3544423381972592e-05
    2. '_' → logprob: -12.50001335144043
    3. 'taste' → logprob: -12.50001335144043
    4. 'print' → logprob: -12.62501335144043
    5. 't' → logprob: -13.50001335144043
    6. '_total' → logprob: -15.12501335144043
    7. 'Taste' → logprob: -15.37501335144043
    8. '_g' → logprob: -15.87501335144043
    9. '_print' → logprob: -15.87501335144043
    10. '#' → logprob: -16.37501335144043

Token 342: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.09899529814720154
    2. 'taste' → logprob: -2.7239952087402344
    3. '_t' → logprob: -3.5989952087402344
    4. '_' → logprob: -7.348995208740234
    5. 'ast' → logprob: -8.598995208740234
    6. 't' → logprob: -8.723995208740234
    7. '#' → logprob: -9.223995208740234
    8. 'a' → logprob: -10.348995208740234
    9. 'ASTE' → logprob: -10.723995208740234
    10. 'Taste' → logprob: -10.848995208740234

Token 343: ' contient' (ID: 89067)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.8400061726570129
    2. '=' → logprob: -1.3400061130523682
    3. '-=' → logprob: -2.215006113052368
    4. ' =' → logprob: -2.715006113052368
    5. '#' → logprob: -2.965006113052368
    6. ' #' → logprob: -4.340006351470947
    7. '*=' → logprob: -4.340006351470947
    8. ',' → logprob: -4.715006351470947
    9. 'print' → logprob: -4.840006351470947
    10. ' *=' → logprob: -5.090006351470947

Token 344: ' maintenant' (ID: 35735)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6213921308517456
    2. 'la' → logprob: -0.9963921308517456
    3. ' la' → logprob: -3.246392250061035
    4. 'l' → logprob: -3.996392250061035
    5. 'the' → logprob: -3.996392250061035
    6. 'n' → logprob: -5.121392250061035
    7. 'le' → logprob: -5.746392250061035
    8. '#' → logprob: -5.746392250061035
    9. ' all' → logprob: -5.871392250061035
    10. 'print' → logprob: -6.996392250061035

Token 345: ' la' (ID: 557)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.09632499516010284
    2. 'la' → logprob: -3.096324920654297
    3. ' la' → logprob: -3.971324920654297
    4. 'the' → logprob: -4.596324920654297
    5. ' all' → logprob: -4.846324920654297
    6. 'sum' → logprob: -5.721324920654297
    7. 'l' → logprob: -6.346324920654297
    8. 'n' → logprob: -6.596324920654297
    9. '#' → logprob: -6.846324920654297
    10. ' the' → logprob: -7.096324920654297

Token 346: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2899687886238098
    2. 'sum' → logprob: -1.539968729019165
    3. 'total' → logprob: -4.039968967437744
    4. 'val' → logprob: -4.664968967437744
    5. 'som' → logprob: -5.164968967437744
    6. ' somme' → logprob: -6.289968967437744
    7. 'all' → logprob: -6.664968967437744
    8. '#' → logprob: -6.914968967437744
    9. 'print' → logprob: -8.539968490600586
    10. ' sum' → logprob: -9.664968490600586

Token 347: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003908607643097639
    2. '#' → logprob: -6.378908634185791
    3. '(' → logprob: -7.253908634185791
    4. 'total' → logprob: -7.753908634185791
    5. ' print' → logprob: -8.003908157348633
    6. 'all' → logprob: -8.378908157348633
    7. '(print' → logprob: -8.378908157348633
    8. '-' → logprob: -9.628908157348633
    9. '(total' → logprob: -10.003908157348633
    10. '#print' → logprob: -10.628908157348633

Token 348: ' toutes' (ID: 17502)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.16799134016036987
    2. 't' → logprob: -2.6679913997650146
    3. 'l' → logprob: -3.0429913997650146
    4. 'les' → logprob: -4.2929911613464355
    5. 'la' → logprob: -4.7929911613464355
    6. ' all' → logprob: -5.7929911613464355
    7. 'n' → logprob: -6.1679911613464355
    8. 'i' → logprob: -6.2929911613464355
    9. 'range' → logprob: -6.2929911613464355
    10. '1' → logprob: -6.5429911613464355

Token 349: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.03505370393395424
    2. ' les' → logprob: -4.410053730010986
    3. '(' → logprob: -4.660053730010986
    4. 'all' → logprob: -5.535053730010986
    5. '(range' → logprob: -5.785053730010986
    6. 'range' → logprob: -6.910053730010986
    7. '(all' → logprob: -7.160053730010986
    8. '<|end|>' → logprob: -7.285053730010986
    9. 'des' → logprob: -7.535053730010986
    10. ' pommes' → logprob: -8.035053253173828

Token 350: ' save' (ID: 5093)
  Prédit: 'save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'save' → logprob: -0.3489748537540436
    2. 'go' → logprob: -1.5989748239517212
    3. 'val' → logprob: -3.0989749431610107
    4. 'pom' → logprob: -3.3489749431610107
    5. ' pommes' → logprob: -5.473974704742432
    6. ' save' → logprob: -5.973974704742432
    7. 'apple' → logprob: -7.348974704742432
    8. 'g' → logprob: -7.348974704742432
    9. ' goûts' → logprob: -7.598974704742432
    10. 'n' → logprob: -7.848974704742432

Token 351: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.0025913503486663103
    2. 'ur' → logprob: -6.002591133117676
    3. 'rs' → logprob: -9.627591133117676
    4. '_t' → logprob: -11.127591133117676
    5. 'r' → logprob: -11.377591133117676
    6. '_' → logprob: -11.877591133117676
    7. '_f' → logprob: -12.252591133117676
    8. '__' → logprob: -12.502591133117676
    9. 'ves' → logprob: -13.627591133117676
    10. 'eurs' → logprob: -14.002591133117676

Token 352: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007470801472663879
    2. '#' → logprob: -5.632470607757568
    3. '-' → logprob: -7.132470607757568
    4. 'des' → logprob: -7.382470607757568
    5. ',' → logprob: -7.757470607757568
    6. ' print' → logprob: -8.132471084594727
    7. '#print' → logprob: -8.507471084594727
    8. 'if' → logprob: -8.507471084594727
    9. '   ' → logprob: -8.632471084594727
    10. '.' → logprob: -8.632471084594727

Token 353: ' 
' (ID: 793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028083978220820427
    2. '#' → logprob: -3.7780840396881104
    3. 'all' → logprob: -6.653083801269531
    4. 'min' → logprob: -6.653083801269531
    5. 'best' → logprob: -6.653083801269531
    6. ' print' → logprob: -7.903083801269531
    7. 'minimum' → logprob: -8.653083801269531
    8. 'if' → logprob: -9.403083801269531
    9. 'total' → logprob: -10.403083801269531
    10. 'max' → logprob: -10.653083801269531

Token 354: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4137451946735382
    2. '#' → logprob: -1.5387451648712158
    3. 'all' → logprob: -2.538745164871216
    4. 'if' → logprob: -3.788745164871216
    5. 'min' → logprob: -4.788745403289795
    6. 'minimum' → logprob: -5.538745403289795
    7. 'best' → logprob: -6.288745403289795
    8. 'except' → logprob: -6.413745403289795
    9. 'max' → logprob: -6.413745403289795
    10. 'result' → logprob: -7.038745403289795

Token 355: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0728365108370781
    2. '#' → logprob: -3.447836399078369
    3. 'min' → logprob: -3.822836399078369
    4. 'all' → logprob: -4.572836399078369
    5. 'best' → logprob: -6.447836399078369
    6. ' print' → logprob: -6.697836399078369
    7. 'minimum' → logprob: -6.822836399078369
    8. 'm' → logprob: -7.947836399078369
    9. 'except' → logprob: -7.947836399078369
    10. 'least' → logprob: -8.447836875915527

Token 356: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18894226849079132
    2. 'print' → logprob: -2.0639421939849854
    3. ' print' → logprob: -4.0639424324035645
    4. ' #' → logprob: -4.9389424324035645
    5. 'est' → logprob: -5.0639424324035645
    6. '#print' → logprob: -5.8139424324035645
    7. '=' → logprob: -6.1889424324035645
    8. 'e' → logprob: -6.3139424324035645
    9. ''est' → logprob: -6.3139424324035645
    10. 's' → logprob: -7.1889424324035645

Token 357: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.24839739501476288
    2. 'à' → logprob: -1.8733973503112793
    3. '#' → logprob: -3.8733973503112793
    4. 'print' → logprob: -4.248397350311279
    5. 'la' → logprob: -5.248397350311279
    6. 'all' → logprob: -5.373397350311279
    7. '=' → logprob: -5.373397350311279
    8. 'l' → logprob: -5.873397350311279
    9. '-a' → logprob: -6.248397350311279
    10. '   ' → logprob: -6.248397350311279

Token 358: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.2913079857826233
    2. '-dire' → logprob: -1.7913079261779785
    3. '-à' → logprob: -3.0413079261779785
    4. 'à' → logprob: -4.0413079261779785
    5. 'd' → logprob: -4.2913079261779785
    6. 'l' → logprob: -6.4163079261779785
    7. '#' → logprob: -6.5413079261779785
    8. 'dis' → logprob: -7.4163079261779785
    9. '=' → logprob: -7.6663079261779785
    10. 't' → logprob: -7.7913079261779785

Token 359: ' le' (ID: 505)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.255525678396225
    2. 'print' → logprob: -1.5055257081985474
    3. ' all' → logprob: -6.630525588989258
    4. ' print' → logprob: -6.755525588989258
    5. 'n' → logprob: -7.505525588989258
    6. 'l' → logprob: -8.505525588989258
    7. 'max' → logprob: -8.755525588989258
    8. 'min' → logprob: -9.755525588989258
    9. '0' → logprob: -10.880525588989258
    10. 'sum' → logprob: -11.005525588989258

Token 360: ' total' (ID: 3609)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.02789527177810669
    2. 'print' → logprob: -3.777895212173462
    3. 'min' → logprob: -6.277895450592041
    4. 'max' → logprob: -6.777895450592041
    5. 'n' → logprob: -7.402895450592041
    6. '#' → logprob: -7.652895450592041
    7. 'sum' → logprob: -8.902894973754883
    8. 'minimum' → logprob: -9.027894973754883
    9. 'total' → logprob: -9.152894973754883
    10. ' all' → logprob: -9.402894973754883

Token 361: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031923281494528055
    2. ' print' → logprob: -6.12819242477417
    3. '#' → logprob: -7.00319242477417
    4. 'all' → logprob: -11.128191947937012
    5. 'pr' → logprob: -11.503191947937012
    6. '#print' → logprob: -11.628191947937012
    7. ' #' → logprob: -11.878191947937012
    8. ',' → logprob: -12.003191947937012
    9. 'import' → logprob: -12.128191947937012
    10. '-' → logprob: -12.128191947937012

Token 362: ' tous' (ID: 10688)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.019305068999528885
    2. 'l' → logprob: -4.769305229187012
    3. ' all' → logprob: -5.644305229187012
    4. 'n' → logprob: -5.894305229187012
    5. 't' → logprob: -5.894305229187012
    6. 'la' → logprob: -7.269305229187012
    7. '(all' → logprob: -7.894305229187012
    8. ' n' → logprob: -9.394305229187012
    9. ' l' → logprob: -10.019305229187012
    10. 'tmp' → logprob: -10.269305229187012

Token 363: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.18409794569015503
    2. ' les' → logprob: -2.0590980052948
    3. 'i' → logprob: -4.309097766876221
    4. 's' → logprob: -5.434097766876221
    5. 'all' → logprob: -5.684097766876221
    6. ' i' → logprob: -6.184097766876221
    7. 'es' → logprob: -6.184097766876221
    8. 'tmp' → logprob: -6.184097766876221
    9. '#' → logprob: -6.309097766876221
    10. 'the' → logprob: -6.684097766876221

Token 364: ' goûts' (ID: 184726)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.30190274119377136
    2. ' goûts' → logprob: -1.6769027709960938
    3. 'g' → logprob: -2.8019027709960938
    4. 'tmp' → logprob: -5.176902770996094
    5. 'pom' → logprob: -6.051902770996094
    6. 'i' → logprob: -6.176902770996094
    7. 'gom' → logprob: -7.426902770996094
    8. ' goût' → logprob: -7.426902770996094
    9. 'Go' → logprob: -8.176902770996094
    10. ' pommes' → logprob: -8.551902770996094

Token 365: ' possibles' (ID: 97753)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012402292340993881
    2. '#' → logprob: -7.251240253448486
    3. ' print' → logprob: -8.126239776611328
    4. 'all' → logprob: -9.626239776611328
    5. '
' → logprob: -10.126239776611328
    6. 'if' → logprob: -11.126239776611328
    7. '.' → logprob: -11.126239776611328
    8. '#print' → logprob: -11.126239776611328
    9. 'n' → logprob: -11.251239776611328
    10. 'total' → logprob: -11.501239776611328

Token 366: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003009553998708725
    2. '
' → logprob: -6.25300931930542
    3. ' print' → logprob: -7.37800931930542
    4. '#' → logprob: -8.753009796142578
    5. 'if' → logprob: -9.753009796142578
    6. 'all' → logprob: -10.378009796142578
    7. 'total' → logprob: -10.378009796142578
    8. 'min' → logprob: -10.503009796142578
    9. ',' → logprob: -10.878009796142578
    10. 'n' → logprob: -11.003009796142578

Token 367: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6772385239601135
    2. ' on' → logprob: -0.8022385239601135
    3. ' toutes' → logprob: -4.052238464355469
    4. 'all' → logprob: -4.552238464355469
    5. 'n' → logprob: -5.927238464355469
    6. 'l' → logprob: -6.177238464355469
    7. ' n' → logprob: -6.427238464355469
    8. ' l' → logprob: -6.427238464355469
    9. ' all' → logprob: -6.802238464355469
    10. ' ' → logprob: -7.177238464355469

Token 368: ' mange' (ID: 27962)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6573749780654907
    2. 'm' → logprob: -1.4073749780654907
    3. ' prend' → logprob: -3.032374858856201
    4. '#' → logprob: -3.782374858856201
    5. 'n' → logprob: -3.782374858856201
    6. 'pren' → logprob: -4.032374858856201
    7. 'g' → logprob: -4.657374858856201
    8. 'en' → logprob: -4.782374858856201
    9. 'les' → logprob: -4.782374858856201
    10. 'p' → logprob: -5.157374858856201

Token 369: ' toutes' (ID: 17502)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2459532916545868
    2. 'all' → logprob: -2.120953321456909
    3. ' toutes' → logprob: -2.370953321456909
    4. 'Toutes' → logprob: -6.37095308303833
    5. '#' → logprob: -6.62095308303833
    6. 'les' → logprob: -7.74595308303833
    7. 'tout' → logprob: -7.87095308303833
    8. ' all' → logprob: -9.120953559875488
    9. '```' → logprob: -9.245953559875488
    10. 'une' → logprob: -9.620953559875488

Token 370: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.07088305056095123
    2. ' les' → logprob: -2.69588303565979
    3. 'des' → logprob: -7.820883274078369
    4. '#' → logprob: -8.570882797241211
    5. '```' → logprob: -9.695882797241211
    6. '<|end|>' → logprob: -10.070882797241211
    7. ' ' → logprob: -10.195882797241211
    8. ' des' → logprob: -10.445882797241211
    9. 'print' → logprob: -10.570882797241211
    10. 'the' → logprob: -11.070882797241211

Token 371: ' pommes' (ID: 149224)
  Prédit: 'pom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pom' → logprob: -0.005534097086638212
    2. ' pommes' → logprob: -5.2555341720581055
    3. 'p' → logprob: -8.130534172058105
    4. '#' → logprob: -13.505534172058105
    5. ' ' → logprob: -14.005534172058105
    6. '```' → logprob: -14.255534172058105
    7. ' pom' → logprob: -14.505534172058105
    8. ' ' → logprob: -14.630534172058105
    9. '   ' → logprob: -14.755534172058105
    10. '<p' → logprob: -15.755534172058105

Token 372: '.

' (ID: 364)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059119198471307755
    2. 'if' → logprob: -3.05911922454834
    3. 'min' → logprob: -6.18411922454834
    4. '
' → logprob: -6.55911922454834
    5. '#' → logprob: -7.05911922454834
    6. 'all' → logprob: -7.30911922454834
    7. 'best' → logprob: -7.30911922454834
    8. 'minimum' → logprob: -7.43411922454834
    9. 'max' → logprob: -7.68411922454834
    10. 'total' → logprob: -7.80911922454834

Token 373: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7784749269485474
    2. 'print' → logprob: -0.7784749269485474
    3. 'min' → logprob: -3.028474807739258
    4. '#' → logprob: -4.028474807739258
    5. 'best' → logprob: -5.903474807739258
    6. 'ans' → logprob: -6.028474807739258
    7. 'average' → logprob: -6.403474807739258
    8. 'minimum' → logprob: -6.528474807739258
    9. 'm' → logprob: -6.778474807739258
    10. 'all' → logprob: -6.903474807739258

Token 374: ' Initialise' (ID: 179601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5882137417793274
    2. 'print' → logprob: -1.8382136821746826
    3. 'min' → logprob: -1.9632136821746826
    4. '#' → logprob: -2.8382136821746826
    5. 'all' → logprob: -4.088213920593262
    6. 'ans' → logprob: -4.588213920593262
    7. 'answer' → logprob: -5.338213920593262
    8. 'k' → logprob: -5.338213920593262
    9. 'for' → logprob: -5.338213920593262
    10. 'diff' → logprob: -5.463213920593262

Token 375: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.45612281560897827
    2. 'ans' → logprob: -2.081122875213623
    3. 'max' → logprob: -2.331122875213623
    4. 'best' → logprob: -2.831122875213623
    5. 'answer' → logprob: -4.081122875213623
    6. 'minimum' → logprob: -4.831122875213623
    7. '#' → logprob: -4.831122875213623
    8. 'all' → logprob: -4.956122875213623
    9. 'diff' → logprob: -5.581122875213623
    10. 'total' → logprob: -5.706122875213623

Token 376: ' variable' (ID: 11076)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12645423412322998
    2. 'max' → logprob: -3.1264543533325195
    3. 'result' → logprob: -4.1264543533325195
    4. 'ans' → logprob: -4.5014543533325195
    5. 'answer' → logprob: -4.5014543533325195
    6. 'best' → logprob: -4.6264543533325195
    7. 'minimum' → logprob: -5.1264543533325195
    8. 'res' → logprob: -5.5014543533325195
    9. 'diff' → logprob: -5.6264543533325195
    10. 'taste' → logprob: -5.7514543533325195

Token 377: ' act' (ID: 1330)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8670870661735535
    2. 'max' → logprob: -0.9920870661735535
    3. 'ans' → logprob: -2.6170871257781982
    4. 'answer' → logprob: -3.4920871257781982
    5. 'all' → logprob: -4.242086887359619
    6. ' min' → logprob: -4.242086887359619
    7. 'best' → logprob: -4.242086887359619
    8. ' max' → logprob: -4.742086887359619
    9. 'average' → logprob: -5.367086887359619
    10. 'taste' → logprob: -5.492086887359619

Token 378: '_t' (ID: 838)
  Prédit: 'ual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ual' → logprob: -0.1807226985692978
    2. 'uel' → logprob: -2.805722713470459
    3. '_' → logprob: -3.805722713470459
    4. 'u' → logprob: -3.805722713470459
    5. 'ive' → logprob: -4.305722713470459
    6. 'ion' → logprob: -4.555722713470459
    7. 'uelle' → logprob: -4.930722713470459
    8. 'all' → logprob: -5.055722713470459
    9. '_t' → logprob: -5.680722713470459
    10. '_u' → logprob: -5.805722713470459

Token 379: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.13960914313793182
    2. 'ual' → logprob: -3.0146090984344482
    3. '_' → logprob: -3.3896090984344482
    4. '_t' → logprob: -3.8896090984344482
    5. 'uel' → logprob: -5.014609336853027
    6. 'al' → logprob: -5.389609336853027
    7. 'ive' → logprob: -5.639609336853027
    8. 'all' → logprob: -6.264609336853027
    9. 'ast' → logprob: -6.389609336853027
    10. 'e' → logprob: -6.389609336853027

Token 380: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327852606773376
    2. '=' → logprob: -1.3132785558700562
    3. 'act' → logprob: -12.313278198242188
    4. ',' → logprob: -12.688278198242188
    5. '=int' → logprob: -12.813278198242188
    6. ' ' → logprob: -12.938278198242188
    7. '_act' → logprob: -14.313278198242188
    8. '＝' → logprob: -14.688278198242188
    9. 'a' → logprob: -15.188278198242188
    10. 'all' → logprob: -15.313278198242188

Token 381: ' ' (ID: 220)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005185135640203953
    2. '0' → logprob: -5.380185127258301
    3. 'l' → logprob: -8.5051851272583
    4. ' all' → logprob: -9.1301851272583
    5. 'math' → logprob: -9.7551851272583
    6. 'n' → logprob: -10.1301851272583
    7. '100' → logprob: -10.1301851272583
    8. 'al' → logprob: -10.8801851272583
    9. '-' → logprob: -11.0051851272583
    10. '999' → logprob: -11.3801851272583

Token 382: '0' (ID: 15)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.021895822137594223
    2. '0' → logprob: -3.8968958854675293
    3. 'math' → logprob: -7.271895885467529
    4. 'float' → logprob: -8.771895408630371
    5. 'l' → logprob: -9.146895408630371
    6. 'n' → logprob: -9.771895408630371
    7. '100' → logprob: -9.771895408630371
    8. ' all' → logprob: -10.021895408630371
    9. '999' → logprob: -10.146895408630371
    10. '-' → logprob: -10.146895408630371

Token 383: '.' (ID: 13)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -4.263011578586884e-05
    2. '
' → logprob: -10.125042915344238
    3. ' act' → logprob: -13.000042915344238
    4. '_act' → logprob: -16.375041961669922
    5. '#' → logprob: -16.750041961669922
    6. '	act' → logprob: -17.500041961669922
    7. '.act' → logprob: -17.625041961669922
    8. '0' → logprob: -17.750041961669922
    9. 'acti' → logprob: -17.875041961669922
    10. '(act' → logprob: -18.250041961669922

Token 384: ' 
' (ID: 793)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -4.842555426876061e-06
    2. ' act' → logprob: -12.250004768371582
    3. '
' → logprob: -17.1250057220459
    4. '	act' → logprob: -18.1250057220459
    5. '#' → logprob: -18.3750057220459
    6. '```' → logprob: -18.7500057220459
    7. '0' → logprob: -19.0000057220459
    8. '_act' → logprob: -19.6250057220459
    9. 'acti' → logprob: -20.0000057220459
    10. 'acts' → logprob: -20.2500057220459

Token 385: '#' (ID: 2)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -1.9361264946837764e-07
    2. ' act' → logprob: -15.625
    3. '#' → logprob: -17.5
    4. '	act' → logprob: -18.625
    5. '0' → logprob: -19.25
    6. 'acti' → logprob: -20.625
    7. 'ac' → logprob: -20.75
    8. '```' → logprob: -21.25
    9. 'a' → logprob: -21.5
    10. '(act' → logprob: -21.5

Token 386: ' Cette' (ID: 27383)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -9.968312951968983e-06
    2. ' act' → logprob: -11.875009536743164
    3. '#' → logprob: -12.875009536743164
    4. '	act' → logprob: -15.875009536743164
    5. '
' → logprob: -16.250009536743164
    6. '```' → logprob: -17.625009536743164
    7. 'a' → logprob: -17.625009536743164
    8. 'acti' → logprob: -17.750009536743164
    9. '0' → logprob: -17.875009536743164
    10. 'ac' → logprob: -18.250009536743164

Token 387: ' variable' (ID: 11076)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.28357821702957153
    2. ' act' → logprob: -1.4085781574249268
    3. ' =' → logprob: -7.283578395843506
    4. '=' → logprob: -7.658578395843506
    5. ' ' → logprob: -7.783578395843506
    6. ' 
' → logprob: -8.533577919006348
    7. ' ' → logprob: -8.783577919006348
    8. '#' → logprob: -8.783577919006348
    9. '
' → logprob: -9.283577919006348
    10. 'a' → logprob: -9.408577919006348

Token 388: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8287782669067383
    2. ' =' → logprob: -1.0787782669067383
    3. 'act' → logprob: -1.8287782669067383
    4. ' act' → logprob: -3.2037782669067383
    5. '#' → logprob: -3.9537782669067383
    6. ' #' → logprob: -6.578778266906738
    7. ' est' → logprob: -8.203778266906738
    8. '_act' → logprob: -8.578778266906738
    9. ' représente' → logprob: -8.578778266906738
    10. 'all' → logprob: -9.328778266906738

Token 389: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.1599346399307251
    2. 'i' → logprob: -2.4099345207214355
    3. 'inue' → logprob: -3.7849345207214355
    4. 'in' → logprob: -3.7849345207214355
    5. 'e' → logprob: -5.2849345207214355
    6. 'iend' → logprob: -5.9099345207214355
    7. '#' → logprob: -6.2849345207214355
    8. '=' → logprob: -6.6599345207214355
    9. 'iens' → logprob: -7.6599345207214355
    10. 'act' → logprob: -8.034934997558594

Token 390: 'endra' (ID: 32364)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.015065493062138557
    2. 'inue' → logprob: -4.515065670013428
    3. 'in' → logprob: -5.890065670013428
    4. 'ent' → logprob: -7.015065670013428
    5. 'e' → logprob: -8.76506519317627
    6. 'i' → logprob: -9.14006519317627
    7. '#' → logprob: -10.39006519317627
    8. 'iennent' → logprob: -11.51506519317627
    9. 'ients' → logprob: -11.76506519317627
    10. 'iend' → logprob: -11.76506519317627

Token 391: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03112887218594551
    2. 'act' → logprob: -3.9061288833618164
    3. 'all' → logprob: -4.906128883361816
    4. ' act' → logprob: -6.531128883361816
    5. ' ' → logprob: -6.656128883361816
    6. ' all' → logprob: -8.281128883361816
    7. 'l' → logprob: -10.406128883361816
    8. '#' → logprob: -10.406128883361816
    9. 'max' → logprob: -10.656128883361816
    10. 'n' → logprob: -11.781128883361816

Token 392: ' somme' (ID: 64484)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5275306701660156
    2. 'all' → logprob: -0.9025306701660156
    3. 'l' → logprob: -6.652530670166016
    4. 'act' → logprob: -7.152530670166016
    5. 'n' → logprob: -7.527530670166016
    6. 'tmp' → logprob: -7.777530670166016
    7. '#' → logprob: -7.902530670166016
    8. 'max' → logprob: -8.277530670166016
    9. 'int' → logprob: -8.402530670166016
    10. 'total' → logprob: -8.902530670166016

Token 393: ' effective' (ID: 8488)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.40401896834373474
    2. '_act' → logprob: -1.6540189981460571
    3. '_' → logprob: -2.9040188789367676
    4. '<|end|>' → logprob: -3.9040188789367676
    5. '(act' → logprob: -4.029018878936768
    6. ' act' → logprob: -4.154018878936768
    7. '#' → logprob: -4.904018878936768
    8. '	act' → logprob: -5.404018878936768
    9. ' actuelle' → logprob: -6.029018878936768
    10. '   ' → logprob: -6.154018878936768

Token 394: ' de' (ID: 334)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.21625450253486633
    2. ' act' → logprob: -2.091254472732544
    3. '_act' → logprob: -3.091254472732544
    4. '_' → logprob: -4.966254711151123
    5. '#' → logprob: -5.591254711151123
    6. ' des' → logprob: -5.966254711151123
    7. '	act' → logprob: -6.341254711151123
    8. '<|end|>' → logprob: -6.341254711151123
    9. ' =' → logprob: -6.466254711151123
    10. ' ' → logprob: -6.716254711151123

Token 395: ' save' (ID: 5093)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7677977085113525
    2. 'all' → logprob: -1.3927977085113525
    3. 'act' → logprob: -1.6427977085113525
    4. ' ' → logprob: -3.3927977085113525
    5. ' all' → logprob: -3.3927977085113525
    6. ' act' → logprob: -4.392797470092773
    7. 'l' → logprob: -4.767797470092773
    8. ' l' → logprob: -6.267797470092773
    9. 'tmp' → logprob: -7.017797470092773
    10. '	act' → logprob: -8.017797470092773

Token 396: 'urs' (ID: 1628)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14869102835655212
    2. 'act' → logprob: -2.523690938949585
    3. ' all' → logprob: -3.523690938949585
    4. 'e' → logprob: -4.648691177368164
    5. '   ' → logprob: -5.148691177368164
    6. 'ance' → logprob: -5.523691177368164
    7. 'i' → logprob: -6.023691177368164
    8. '_all' → logprob: -6.773691177368164
    9. ' ' → logprob: -6.898691177368164
    10. '_act' → logprob: -7.148691177368164

Token 397: ' après' (ID: 16460)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.035781245678663254
    2. ' =' → logprob: -4.035781383514404
    3. ' act' → logprob: -5.535781383514404
    4. '_act' → logprob: -5.785781383514404
    5. 'all' → logprob: -5.785781383514404
    6. '#' → logprob: -6.160781383514404
    7. '=' → logprob: -6.160781383514404
    8. ' ' → logprob: -7.035781383514404
    9. '   ' → logprob: -7.410781383514404
    10. '(act' → logprob: -7.910781383514404

Token 398: ' avoir' (ID: 16595)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2312934398651123
    2. 'all' → logprob: -1.6062934398651123
    3. '#' → logprob: -1.7312934398651123
    4. '0' → logprob: -3.2312934398651123
    5. 'une' → logprob: -3.2312934398651123
    6. 'supp' → logprob: -3.2312934398651123
    7. '1' → logprob: -3.3562934398651123
    8. 'n' → logprob: -3.4812934398651123
    9. 'avoir' → logprob: -4.106293678283691
    10. 'int' → logprob: -4.106293678283691

Token 399: ' retir' (ID: 35638)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6581882834434509
    2. '#' → logprob: -1.2831883430480957
    3. 'sup' → logprob: -2.7831883430480957
    4. 'en' → logprob: -3.1581883430480957
    5. 'act' → logprob: -4.158188343048096
    6. 'for' → logprob: -4.283188343048096
    7. 'ret' → logprob: -4.783188343048096
    8. 'oub' → logprob: -4.908188343048096
    9. 'e' → logprob: -5.158188343048096
    10. 'all' → logprob: -5.408188343048096

Token 400: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007493165787309408
    2. 'e' → logprob: -5.757493019104004
    3. 'er' → logprob: -5.882493019104004
    4. '#' → logprob: -6.757493019104004
    5. '   ' → logprob: -9.882493019104004
    6. 'i' → logprob: -10.007493019104004
    7. 'u' → logprob: -10.007493019104004
    8. 'ée' → logprob: -10.007493019104004
    9. ' ' → logprob: -10.257493019104004
    10. ' é' → logprob: -11.507493019104004

Token 401: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3475140333175659
    2. 'm' → logprob: -2.0975141525268555
    3. 'one' → logprob: -2.0975141525268555
    4. 'k' → logprob: -3.7225141525268555
    5. 'the' → logprob: -4.3475141525268555
    6. 'une' → logprob: -6.0975141525268555
    7. 'a' → logprob: -6.8475141525268555
    8. '1' → logprob: -7.2225141525268555
    9. 'le' → logprob: -7.2225141525268555
    10. ' one' → logprob: -7.2225141525268555

Token 402: ' pomme' (ID: 197262)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7937755584716797
    2. 'tmp' → logprob: -1.6687755584716797
    3. '1' → logprob: -2.5437755584716797
    4. '0' → logprob: -2.7937755584716797
    5. 'min' → logprob: -2.7937755584716797
    6. 'i' → logprob: -3.1687755584716797
    7. 'prem' → logprob: -3.6687755584716797
    8. 'all' → logprob: -3.9187755584716797
    9. 'm' → logprob: -4.16877555847168
    10. 'une' → logprob: -4.79377555847168

Token 403: ' optimale' (ID: 72604)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 404: ' à' (ID: 1221)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.015657499432563782
    2. ' act' → logprob: -4.890657424926758
    3. 'all' → logprob: -5.640657424926758
    4. '<|end|>' → logprob: -6.640657424926758
    5. '.' → logprob: -7.390657424926758
    6. '_act' → logprob: -7.515657424926758
    7. '#' → logprob: -7.515657424926758
    8. '(act' → logprob: -8.515657424926758
    9. ',' → logprob: -8.765657424926758
    10. '	act' → logprob: -8.890657424926758

Token 405: ' ne' (ID: 453)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005526865366846323
    2. '1' → logprob: -5.630527019500732
    3. '0' → logprob: -7.005527019500732
    4. ' manger' → logprob: -7.755527019500732
    5. 'une' → logprob: -8.505526542663574
    6. 'tmp' → logprob: -9.630526542663574
    7. 'l' → logprob: -10.130526542663574
    8. 'act' → logprob: -10.130526542663574
    9. ' ' → logprob: -10.130526542663574
    10. 'ret' → logprob: -10.630526542663574

Token 406: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.008135202340781689
    2. 'm' → logprob: -4.8831353187561035
    3. '#' → logprob: -8.008134841918945
    4. 'plus' → logprob: -10.133134841918945
    5. '
' → logprob: -10.258134841918945
    6. '

' → logprob: -10.258134841918945
    7. ' manger' → logprob: -10.883134841918945
    8. ' pas' → logprob: -11.008134841918945
    9. '```' → logprob: -12.008134841918945
    10. 'moins' → logprob: -12.508134841918945

Token 407: ' manger' (ID: 64067)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0009184855734929442
    2. 'act' → logprob: -7.500918388366699
    3. ' manger' → logprob: -8.6259183883667
    4. '0' → logprob: -9.7509183883667
    5. 'prendre' → logprob: -10.5009183883667
    6. '#' → logprob: -10.8759183883667
    7. 'eat' → logprob: -11.2509183883667
    8. '1' → logprob: -11.2509183883667
    9. 'mettre' → logprob: -11.6259183883667
    10. '```' → logprob: -12.0009183883667

Token 408: '.
' (ID: 558)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -7.469590491382405e-05
    2. '.' → logprob: -10.12507438659668
    3. '
' → logprob: -11.25007438659668
    4. ' act' → logprob: -11.50007438659668
    5. '#' → logprob: -12.87507438659668
    6. '=' → logprob: -13.00007438659668
    7. '0' → logprob: -13.37507438659668
    8. '_act' → logprob: -13.75007438659668
    9. '(act' → logprob: -14.12507438659668
    10. '.act' → logprob: -14.25007438659668

Token 409: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0001600347168277949
    2. '
' → logprob: -8.750160217285156
    3. ' act' → logprob: -13.625160217285156
    4. ' 
' → logprob: -15.875160217285156
    5. '
' → logprob: -16.500160217285156
    6. '  
' → logprob: -17.125160217285156
    7. '	act' → logprob: -17.750160217285156
    8. '#' → logprob: -18.000160217285156
    9. '(act' → logprob: -18.125160217285156
    10. 'acti' → logprob: -18.250160217285156

Token 410: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.07900963723659515
    2. '_' → logprob: -2.579009532928467
    3. ' _' → logprob: -10.704010009765625
    4. '_s' → logprob: -10.704010009765625
    5. '_f' → logprob: -11.079010009765625
    6. '_a' → logprob: -11.454010009765625
    7. '_p' → logprob: -12.329010009765625
    8. '_d' → logprob: -12.454010009765625
    9. '_g' → logprob: -12.704010009765625
    10. '_T' → logprob: -12.829010009765625

Token 411: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.15422478318214417
    2. '_t' → logprob: -2.1542248725891113
    3. '_' → logprob: -3.6542248725891113
    4. ' _' → logprob: -8.029224395751953
    5. '_ast' → logprob: -8.029224395751953
    6. '_a' → logprob: -8.529224395751953
    7. 'ASTE' → logprob: -9.779224395751953
    8. 'ast' → logprob: -10.154224395751953
    9. '_e' → logprob: -10.654224395751953
    10. '_s' → logprob: -11.529224395751953

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -17.326414108276367
    4. ',' → logprob: -17.451414108276367
    5. ' ' → logprob: -17.576414108276367
    6. '=
' → logprob: -17.701414108276367
    7. '=

' → logprob: -17.951414108276367
    8. ' =
' → logprob: -18.201414108276367
    9. ')' → logprob: -18.326414108276367
    10. '_' → logprob: -18.951414108276367

Token 413: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6235740780830383
    2. 'all' → logprob: -0.8735740780830383
    3. ' all' → logprob: -3.2485740184783936
    4. ' ' → logprob: -4.873574256896973
    5. '	all' → logprob: -11.748574256896973
    6. 'l' → logprob: -11.998574256896973
    7. '(all' → logprob: -12.248574256896973
    8. 'All' → logprob: -12.248574256896973
    9. 'sum' → logprob: -13.373574256896973
    10. ' l' → logprob: -13.373574256896973

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07898309081792831
    2. 'all' → logprob: -2.5789830684661865
    3. ' ' → logprob: -10.203983306884766
    4. ' all' → logprob: -10.453983306884766
    5. 'sum' → logprob: -11.578983306884766
    6. 'l' → logprob: -12.328983306884766
    7. 'max' → logprob: -13.391483306884766
    8. 'n' → logprob: -13.391483306884766
    9. '(all' → logprob: -13.516483306884766
    10. 'All' → logprob: -13.953983306884766

Token 415: '

' (ID: 279)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.35426226258277893
    2. '
' → logprob: -1.6042622327804565
    3. 'if' → logprob: -3.229262351989746
    4. '#' → logprob: -4.354262351989746
    5. 'for' → logprob: -4.479262351989746
    6. 'all' → logprob: -4.729262351989746
    7. '<|end|>' → logprob: -4.854262351989746
    8. 'max' → logprob: -5.604262351989746
    9. ' act' → logprob: -5.979262351989746
    10. 'print' → logprob: -7.104262351989746

Token 416: '#' (ID: 2)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5148783326148987
    2. 'for' → logprob: -1.889878273010254
    3. 'act' → logprob: -2.514878273010254
    4. 'all' → logprob: -3.139878273010254
    5. 'max' → logprob: -3.389878273010254
    6. 'tmp' → logprob: -3.764878273010254
    7. 'best' → logprob: -4.014878273010254
    8. 'if' → logprob: -4.389878273010254
    9. 'abs' → logprob: -5.264878273010254
    10. '#' → logprob: -5.389878273010254

Token 417: ' Initial' (ID: 9209)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.3375856578350067
    2. 'min' → logprob: -1.712585687637329
    3. 'for' → logprob: -2.712585687637329
    4. 'if' → logprob: -4.21258544921875
    5. '#' → logprob: -4.71258544921875
    6. 'minimum' → logprob: -5.71258544921875
    7. 'tmp' → logprob: -6.08758544921875
    8. 'max' → logprob: -6.21258544921875
    9. 'all' → logprob: -6.33758544921875
    10. 'minimal' → logprob: -6.46258544921875

Token 418: 'isation' (ID: 6993)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16156776249408722
    2. 'e' → logprob: -3.2865676879882812
    3. 'ise' → logprob: -3.4115676879882812
    4. '#' → logprob: -3.6615676879882812
    5. 'iser' → logprob: -3.6615676879882812
    6. 'i' → logprob: -4.911567687988281
    7. 'ize' → logprob: -5.161567687988281
    8. 'er' → logprob: -5.536567687988281
    9. 'isez' → logprob: -5.786567687988281
    10. 'isé' → logprob: -6.036567687988281

Token 419: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.38717120885849
    2. 'max' → logprob: -2.1371712684631348
    3. 'act' → logprob: -2.6371712684631348
    4. 'best' → logprob: -3.3871712684631348
    5. 'for' → logprob: -3.7621712684631348
    6. 'minimal' → logprob: -4.262171268463135
    7. '#' → logprob: -4.512171268463135
    8. 'i' → logprob: -4.887171268463135
    9. 'minimum' → logprob: -5.012171268463135
    10. 'optimal' → logprob: -5.012171268463135

Token 420: ' la' (ID: 557)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1211785227060318
    2. 'ans' → logprob: -2.99617862701416
    3. 'best' → logprob: -3.49617862701416
    4. 'remove' → logprob: -4.74617862701416
    5. 'tmp' → logprob: -5.62117862701416
    6. 'idx' → logprob: -5.87117862701416
    7. 'abs' → logprob: -6.24617862701416
    8. 'answer' → logprob: -6.37117862701416
    9. 'i' → logprob: -6.49617862701416
    10. 'a' → logprob: -6.49617862701416

Token 421: ' variable' (ID: 11076)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12703992426395416
    2. 'act' → logprob: -3.877039909362793
    3. 'best' → logprob: -4.002039909362793
    4. 'for' → logprob: -4.252039909362793
    5. 'index' → logprob: -4.627039909362793
    6. 'max' → logprob: -4.752039909362793
    7. 'tmp' → logprob: -5.002039909362793
    8. 'apple' → logprob: -5.377039909362793
    9. 'minimum' → logprob: -5.502039909362793
    10. 'idx' → logprob: -5.502039909362793

Token 422: ' eat' (ID: 11237)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10729921609163284
    2. 'ans' → logprob: -4.107299327850342
    3. 'idx' → logprob: -4.357299327850342
    4. 'max' → logprob: -4.607299327850342
    5. 'tmp' → logprob: -4.982299327850342
    6. 'remove' → logprob: -4.982299327850342
    7. 'best' → logprob: -5.232299327850342
    8. 'k' → logprob: -5.732299327850342
    9. 'del' → logprob: -5.982299327850342
    10. 'index' → logprob: -5.982299327850342

Token 423: '_' (ID: 62)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.8948174715042114
    2. '=' → logprob: -1.1448174715042114
    3. ' =' → logprob: -1.8948174715042114
    4. 'ing' → logprob: -2.894817352294922
    5. 'able' → logprob: -3.269817352294922
    6. '_index' → logprob: -4.894817352294922
    7. 'en' → logprob: -4.894817352294922
    8. 'e' → logprob: -5.894817352294922
    9. 'apple' → logprob: -6.144817352294922
    10. '_' → logprob: -6.894817352294922

Token 424: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -1.0931010246276855
    2. 'min' → logprob: -2.2181010246276855
    3. 'index' → logprob: -2.2181010246276855
    4. 'ed' → logprob: -2.3431010246276855
    5. 'idx' → logprob: -2.3431010246276855
    6. '=' → logprob: -2.5931010246276855
    7. 'least' → logprob: -3.2181010246276855
    8. '_index' → logprob: -3.8431010246276855
    9. 'num' → logprob: -3.8431010246276855
    10. '_idx' → logprob: -4.4681010246276855

Token 425: ' avec' (ID: 3937)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02337196283042431
    2. ' =' → logprob: -3.773371934890747
    3. 'd' → logprob: -10.648371696472168
    4. '=i' → logprob: -10.648371696472168
    5. '=index' → logprob: -11.273371696472168
    6. 's' → logprob: -11.523371696472168
    7. '=-' → logprob: -11.773371696472168
    8. '=int' → logprob: -11.773371696472168
    9. '=None' → logprob: -12.398371696472168
    10. ' ' → logprob: -12.648371696472168

Token 426: ' la' (ID: 557)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8109735250473022
    2. 'math' → logprob: -1.8109735250473022
    3. 'float' → logprob: -2.060973644256592
    4. '0' → logprob: -2.560973644256592
    5. 'tmp' → logprob: -2.935973644256592
    6. 'l' → logprob: -3.185973644256592
    7. 'n' → logprob: -3.685973644256592
    8. 'None' → logprob: -3.810973644256592
    9. '1' → logprob: -3.935973644256592
    10. '-' → logprob: -4.060973644256592

Token 427: ' save' (ID: 5093)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.220257043838501
    2. 'all' → logprob: -1.595257043838501
    3. 'math' → logprob: -1.720257043838501
    4. '1' → logprob: -2.220257043838501
    5. '0' → logprob: -2.345257043838501
    6. 'tmp' → logprob: -3.095257043838501
    7. 'float' → logprob: -3.845257043838501
    8. 'n' → logprob: -4.095256805419922
    9. '-' → logprob: -4.720256805419922
    10. '100' → logprob: -4.845256805419922

Token 428: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.001535216229967773
    2. 'val' → logprob: -7.126535415649414
    3. 'ure' → logprob: -8.251535415649414
    4. 'l' → logprob: -9.001535415649414
    5. 've' → logprob: -9.501535415649414
    6. 'var' → logprob: -9.751535415649414
    7. '=l' → logprob: -9.876535415649414
    8. 'vor' → logprob: -10.876535415649414
    9. '_l' → logprob: -11.126535415649414
    10. 'urs' → logprob: -11.376535415649414

Token 429: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0384039469063282
    2. ' =' → logprob: -4.4134039878845215
    3. '=' → logprob: -5.0384039878845215
    4. 'tmp' → logprob: -5.0384039878845215
    5. '=l' → logprob: -5.2884039878845215
    6. 'de' → logprob: -5.4134039878845215
    7. ' l' → logprob: -6.4134039878845215
    8. 'min' → logprob: -7.4134039878845215
    9. ' de' → logprob: -8.038403511047363
    10. 'max' → logprob: -8.913403511047363

Token 430: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004501804243773222
    2. 'all' → logprob: -6.004501819610596
    3. '0' → logprob: -6.754501819610596
    4. '1' → logprob: -8.379501342773438
    5. ' l' → logprob: -8.379501342773438
    6. 'n' → logprob: -8.754501342773438
    7. 'tmp' → logprob: -9.629501342773438
    8. 'la' → logprob: -9.754501342773438
    9. '999' → logprob: -10.754501342773438
    10. '100' → logprob: -10.754501342773438

Token 431: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.007871121168136597
    2. 'l' → logprob: -5.257871150970459
    3. '1' → logprob: -6.507871150970459
    4. ' première' → logprob: -7.757871150970459
    5. 'plus' → logprob: -8.1328706741333
    6. 'first' → logprob: -8.6328706741333
    7. 'p' → logprob: -9.3828706741333
    8. 'pom' → logprob: -9.8828706741333
    9. '```' → logprob: -11.3828706741333
    10. 'n' → logprob: -11.5078706741333

Token 432: ' pomme' (ID: 197262)
  Prédit: ' pomme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pomme' → logprob: -0.35707321763038635
    2. 'pom' → logprob: -1.482073187828064
    3. 'p' → logprob: -2.9820733070373535
    4. 'apple' → logprob: -3.8570733070373535
    5. '<|end|>' → logprob: -7.3570733070373535
    6. ' p' → logprob: -8.482072830200195
    7. ' pommes' → logprob: -8.857072830200195
    8. ' pom' → logprob: -9.482072830200195
    9. '_p' → logprob: -9.732072830200195
    10. '#' → logprob: -10.982072830200195

Token 433: ',' (ID: 11)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.25800657272338867
    2. '=' → logprob: -1.5080065727233887
    3. ' =' → logprob: -5.133006572723389
    4. 'e' → logprob: -9.133007049560547
    5. '=e' → logprob: -10.258007049560547
    6. ' eat' → logprob: -11.508007049560547
    7. 'tmp' → logprob: -12.758007049560547
    8. '=
' → logprob: -14.008007049560547
    9. ',' → logprob: -14.008007049560547
    10. '#' → logprob: -14.758007049560547

Token 434: ' 
' (ID: 793)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.0009618389885872602
    2. 'tmp' → logprob: -7.125961780548096
    3. 'l' → logprob: -9.750962257385254
    4. ' eat' → logprob: -10.000962257385254
    5. 'e' → logprob: -10.625962257385254
    6. '#' → logprob: -10.750962257385254
    7. 'all' → logprob: -12.125962257385254
    8. 'act' → logprob: -14.375962257385254
    9. 'abs' → logprob: -15.250962257385254
    10. '   ' → logprob: -15.375962257385254

Token 435: '#' (ID: 2)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.016248200088739395
    2. '#' → logprob: -4.8912482261657715
    3. 'tmp' → logprob: -4.8912482261657715
    4. 'all' → logprob: -7.5162482261657715
    5. 'e' → logprob: -8.641247749328613
    6. ' eat' → logprob: -9.391247749328613
    7. 'l' → logprob: -9.391247749328613
    8. 'min' → logprob: -10.016247749328613
    9. 'max' → logprob: -10.016247749328613
    10. '=' → logprob: -10.266247749328613

Token 436: ' c' (ID: 274)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.11588284373283386
    2. 'tmp' → logprob: -2.4908828735351562
    3. 'l' → logprob: -4.115882873535156
    4. 'all' → logprob: -4.740882873535156
    5. 'e' → logprob: -7.240882873535156
    6. ' eat' → logprob: -8.115882873535156
    7. 'min' → logprob: -8.615882873535156
    8. 'act' → logprob: -9.365882873535156
    9. 'abs' → logprob: -9.865882873535156
    10. '#' → logprob: -9.865882873535156

Token 437: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49854835867881775
    2. 'eat' → logprob: -0.9985483884811401
    3. '=' → logprob: -3.9985482692718506
    4. ' #' → logprob: -6.37354850769043
    5. ' =' → logprob: -6.74854850769043
    6. 'tmp' → logprob: -6.99854850769043
    7. 'est' → logprob: -6.99854850769043
    8. ' eat' → logprob: -8.12354850769043
    9. 'all' → logprob: -8.37354850769043
    10. 'e' → logprob: -8.37354850769043

Token 438: '-à' (ID: 56297)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.26290491223335266
    2. 'l' → logprob: -1.7629048824310303
    3. ' tmp' → logprob: -4.137905120849609
    4. '#' → logprob: -4.262905120849609
    5. '=' → logprob: -4.387905120849609
    6. 'all' → logprob: -4.637905120849609
    7. ' l' → logprob: -6.012905120849609
    8. ' =' → logprob: -6.262905120849609
    9. '=l' → logprob: -7.387905120849609
    10. 'eat' → logprob: -7.887905120849609

Token 439: '-dire' (ID: 76064)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3938905596733093
    2. 'tmp' → logprob: -1.268890619277954
    3. 'all' → logprob: -3.268890619277954
    4. ' l' → logprob: -5.768890380859375
    5. ' tmp' → logprob: -6.143890380859375
    6. ' all' → logprob: -7.768890380859375
    7. '0' → logprob: -9.018890380859375
    8. '=' → logprob: -9.393890380859375
    9. '(tmp' → logprob: -9.643890380859375
    10. '   ' → logprob: -10.018890380859375

Token 440: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10406909137964249
    2. 'tmp' → logprob: -2.3540689945220947
    3. 'all' → logprob: -5.604069232940674
    4. ' l' → logprob: -9.229068756103516
    5. ' tmp' → logprob: -10.354068756103516
    6. 'temp' → logprob: -11.979068756103516
    7. '/tmp' → logprob: -12.479068756103516
    8. '(tmp' → logprob: -12.729068756103516
    9. ' all' → logprob: -13.104068756103516
    10. 'abs' → logprob: -13.229068756103516

Token 441: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004230475169606507
    2. 'i' → logprob: -8.250423431396484
    3. ' ' → logprob: -9.000423431396484
    4. '1' → logprob: -10.625423431396484
    5. '<|end|>' → logprob: -11.875423431396484
    6. 'l' → logprob: -12.875423431396484
    7. ' i' → logprob: -13.375423431396484
    8. '(' → logprob: -14.250423431396484
    9. '
' → logprob: -14.625423431396484
    10. '(i' → logprob: -15.125423431396484

Token 443: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013560164370574057
    2. ' ' → logprob: -9.50013542175293
    3. 'i' → logprob: -10.12513542175293
    4. '1' → logprob: -11.37513542175293
    5. 'l' → logprob: -12.50013542175293
    6. '<|end|>' → logprob: -12.62513542175293
    7. '(' → logprob: -15.06263542175293
    8. '
' → logprob: -15.43763542175293
    9. ' i' → logprob: -15.62513542175293
    10. 'n' → logprob: -15.75013542175293

Token 444: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6941881775856018
    2. ' -' → logprob: -0.6941881775856018
    3. '+' → logprob: -7.444188117980957
    4. '<|end|>' → logprob: -8.694188117980957
    5. ' +' → logprob: -8.944188117980957
    6. ' ' → logprob: -9.444188117980957
    7. 'e' → logprob: -11.569188117980957
    8. '  ' → logprob: -11.694188117980957
    9. '0' → logprob: -11.944188117980957
    10. ')' → logprob: -11.944188117980957

Token 445: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '<|end|>' → logprob: -13.750110626220703
    4. '0' → logprob: -15.875110626220703
    5. '  ' → logprob: -16.750110626220703
    6. '   ' → logprob: -16.875110626220703
    7. '```' → logprob: -17.375110626220703
    8. '<|end|>' → logprob: -17.500110626220703
    9. 'import' → logprob: -17.750110626220703
    10. '=' → logprob: -18.375110626220703

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -16.125003814697266
    4. '0' → logprob: -17.375003814697266
    5. '```' → logprob: -19.250003814697266
    6. '   ' → logprob: -19.500003814697266
    7. 'import' → logprob: -20.250003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '<|end|>' → logprob: -20.375003814697266
    10. '=' → logprob: -21.125003814697266

Token 447: '.' (ID: 13)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.13137272000312805
    2. ' =' → logprob: -2.5063726902008057
    3. '=' → logprob: -3.2563726902008057
    4. 'e' → logprob: -6.256372928619385
    5. ' eat' → logprob: -7.256372928619385
    6. 'apple' → logprob: -8.631372451782227
    7. '
' → logprob: -10.006372451782227
    8. '=e' → logprob: -10.006372451782227
    9. '.' → logprob: -10.506372451782227
    10. '#' → logprob: -11.006372451782227

Token 448: ' Cela' (ID: 44403)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.0006671638693660498
    2. '=' → logprob: -7.500667095184326
    3. ' =' → logprob: -9.750667572021484
    4. 'e' → logprob: -10.375667572021484
    5. ' eat' → logprob: -10.625667572021484
    6. '=e' → logprob: -15.750667572021484
    7. '=
' → logprob: -16.000667572021484
    8. 'apple' → logprob: -16.375667572021484
    9. 'tmp' → logprob: -17.375667572021484
    10. '=l' → logprob: -17.500667572021484

Token 449: ' équ' (ID: 18899)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018476150929927826
    2. ' =' → logprob: -4.0184760093688965
    3. ')' → logprob: -8.518476486206055
    4. '#' → logprob: -10.393476486206055
    5. '=
' → logprob: -11.018476486206055
    6. '+' → logprob: -11.768476486206055
    7. '.' → logprob: -11.893476486206055
    8. 's' → logprob: -11.893476486206055
    9. '=}' → logprob: -12.018476486206055
    10. '=l' → logprob: -12.143476486206055

Token 450: 'iv' (ID: 349)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01823212392628193
    2. 'e' → logprob: -5.518232345581055
    3. 'iv' → logprob: -5.768232345581055
    4. 'l' → logprob: -6.143232345581055
    5. '=l' → logprob: -6.143232345581055
    6. 'v' → logprob: -6.893232345581055
    7. 'ival' → logprob: -6.893232345581055
    8. 'aut' → logprob: -7.143232345581055
    9. 'equals' → logprob: -7.768232345581055
    10. 'ivalent' → logprob: -8.018232345581055

Token 451: 'aut' (ID: 1828)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0020892347674816847
    2. 'aut' → logprob: -6.377089023590088
    3. 'a' → logprob: -8.627089500427246
    4. 'v' → logprob: -9.127089500427246
    5. 'al' → logprob: -9.877089500427246
    6. 'aux' → logprob: -11.752089500427246
    7. 'val' → logprob: -11.752089500427246
    8. 'ale' → logprob: -12.127089500427246
    9. 'va' → logprob: -12.627089500427246
    10. 'vale' → logprob: -12.752089500427246

Token 452: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028044573962688446
    2. 'à' → logprob: -4.153044700622559
    3. ' à' → logprob: -5.278044700622559
    4. ' =' → logprob: -5.528044700622559
    5. '=l' → logprob: -6.403044700622559
    6. 'l' → logprob: -7.153044700622559
    7. 'a' → logprob: -8.778044700622559
    8. 'to' → logprob: -8.903044700622559
    9. ')' → logprob: -10.153044700622559
    10. 'au' → logprob: -10.778044700622559

Token 453: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.246537173457909e-06
    2. ' l' → logprob: -12.375003814697266
    3. '	l' → logprob: -17.125003814697266
    4. 'import' → logprob: -20.375003814697266
    5. '=l' → logprob: -20.875003814697266
    6. 'tmp' → logprob: -21.125003814697266
    7. '=' → logprob: -21.625003814697266
    8. 'л' → logprob: -22.000003814697266
    9. '­l' → logprob: -22.000003814697266
    10. '_l' → logprob: -22.000003814697266

Token 454: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: 'eat' (ID: 100633)
  Prédit: 'eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -6.511406809295295e-06
    2. 'e' → logprob: -12.125006675720215
    3. ' eat' → logprob: -14.000006675720215
    4. '=' → logprob: -15.625006675720215
    5. ' =' → logprob: -16.7500057220459
    6. '
' → logprob: -18.0000057220459
    7. ',' → logprob: -18.3750057220459
    8. 'ea' → logprob: -19.2500057220459
    9. '#' → logprob: -19.5000057220459
    10. '+' → logprob: -19.7500057220459

Token 456: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_ap' → logprob: -15.75
    3. '_app' → logprob: -16.375
    4. '_=' → logprob: -16.5
    5. 'apple' → logprob: -17.25
    6. '_
' → logprob: -17.25
    7. ' _' → logprob: -17.25
    8. 'ed' → logprob: -18.125
    9. '_

' → logprob: -18.125
    10. '_p' → logprob: -18.375

Token 457: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -1.9361264946837764e-07
    2. 'Apple' → logprob: -16.375
    3. '_' → logprob: -16.5
    4. ' apple' → logprob: -17.75
    5. 'app' → logprob: -18.375
    6. '.apple' → logprob: -18.75
    7. 'eat' → logprob: -19.0
    8. '/apple' → logprob: -20.25
    9. 'taste' → logprob: -20.625
    10. 'fruit' → logprob: -20.875

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.636871337890625
    4. '＝' → logprob: -16.761871337890625
    5. '=l' → logprob: -17.136871337890625
    6. '=}' → logprob: -17.136871337890625
    7. '=

' → logprob: -18.261871337890625
    8. '=e' → logprob: -18.386871337890625
    9. ' ' → logprob: -18.386871337890625
    10. 's' → logprob: -18.511871337890625

Token 459: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0019287518225610256
    2. ' l' → logprob: -6.251928806304932
    3. '	l' → logprob: -15.626928329467773
    4. ' ' → logprob: -19.751928329467773
    5. '_l' → logprob: -19.751928329467773
    6. '­l' → logprob: -20.126928329467773
    7. ' ' → logprob: -20.251928329467773
    8. '*l' → logprob: -20.626928329467773
    9. 'L' → logprob: -20.751928329467773
    10. '0' → logprob: -20.751928329467773

Token 460: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035087261348962784
    2. '1' → logprob: -6.128508567810059
    3. ' ' → logprob: -6.628508567810059
    4. '<|end|>' → logprob: -14.878508567810059
    5. '  ' → logprob: -16.128509521484375
    6. '   ' → logprob: -16.503509521484375
    7. '۰' → logprob: -18.816009521484375
    8. '(' → logprob: -18.941009521484375
    9. 'i' → logprob: -18.941009521484375
    10. ' ' → logprob: -19.191009521484375

Token 462: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012618070468306541
    2. '1' → logprob: -4.387618064880371
    3. ' ' → logprob: -9.137618064880371
    4. 'i' → logprob: -14.637618064880371
    5. '   ' → logprob: -15.512618064880371
    6. '  ' → logprob: -16.387619018554688
    7. '(' → logprob: -17.512619018554688
    8. '[' → logprob: -17.825119018554688
    9. '2' → logprob: -18.012619018554688
    10. '-' → logprob: -18.075119018554688

Token 463: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5233433842658997
    2. ' -' → logprob: -0.8983433842658997
    3. ' ' → logprob: -9.023343086242676
    4. '<|end|>' → logprob: -9.523343086242676
    5. ')' → logprob: -12.148343086242676
    6. '0' → logprob: -12.648343086242676
    7. '<|end|>' → logprob: -12.898343086242676
    8. '   ' → logprob: -13.023343086242676
    9. '  ' → logprob: -13.148343086242676
    10. '-token' → logprob: -13.148343086242676

Token 464: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -15.87501049041748
    4. '<|end|>' → logprob: -16.750009536743164
    5. '```' → logprob: -19.250009536743164
    6. '   ' → logprob: -20.000009536743164
    7. '۱' → logprob: -20.750009536743164
    8. '１' → logprob: -21.062509536743164
    9. '  ' → logprob: -21.375009536743164
    10. '<|end|>' → logprob: -21.875009536743164

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '0' → logprob: -15.625000953674316
    4. '```' → logprob: -19.75
    5. '<|end|>' → logprob: -20.375
    6. '１' → logprob: -21.625
    7. '   ' → logprob: -22.0
    8. '۱' → logprob: -22.25
    9. '' → logprob: -22.8125
    10. '১' → logprob: -23.0625

Token 466: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6324964761734009
    2. '
' → logprob: -1.0074964761734009
    3. '<|end|>' → logprob: -2.5074963569641113
    4. ' for' → logprob: -4.882496356964111
    5. '#' → logprob: -5.007496356964111
    6. '+' → logprob: -5.882496356964111
    7. 'print' → logprob: -6.757496356964111
    8. 'if' → logprob: -7.007496356964111
    9. '

' → logprob: -7.257496356964111
    10. ')' → logprob: -7.382496356964111

Token 467: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27774733304977417
    2. '<|end|>' → logprob: -1.902747392654419
    3. '#' → logprob: -3.402747392654419
    4. 'if' → logprob: -4.15274715423584
    5. ')' → logprob: -4.15274715423584
    6. 'max' → logprob: -4.77774715423584
    7. '
' → logprob: -5.40274715423584
    8. ' for' → logprob: -5.52774715423584
    9. 'eat' → logprob: -6.02774715423584
    10. 'i' → logprob: -6.02774715423584

Token 468: ' soit' (ID: 17293)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19234108924865723
    2. '#' → logprob: -2.4423410892486572
    3. 'min' → logprob: -3.0673410892486572
    4. 'print' → logprob: -3.4423410892486572
    5. 'max' → logprob: -5.442340850830078
    6. 'eat' → logprob: -6.442340850830078
    7. 'minimum' → logprob: -6.567340850830078
    8. 'best' → logprob: -7.692340850830078
    9. ' for' → logprob: -8.067340850830078
    10. 'apple' → logprob: -8.067340850830078

Token 469: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.147740689106286e-05
    2. ' l' → logprob: -9.62507152557373
    3. 'eat' → logprob: -12.62507152557373
    4. '	l' → logprob: -13.50007152557373
    5. 'le' → logprob: -15.87507152557373
    6. 'all' → logprob: -16.375070571899414
    7. '1' → logprob: -16.750070571899414
    8. '(l' → logprob: -17.125070571899414
    9. '0' → logprob: -17.375070571899414
    10. ' eat' → logprob: -17.500070571899414

Token 470: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026630479842424393
    2. 'min' → logprob: -4.276630401611328
    3. 'max' → logprob: -5.151630401611328
    4. '#' → logprob: -5.526630401611328
    5. 'eat' → logprob: -6.651630401611328
    6. 'print' → logprob: -8.026630401611328
    7. 'minimum' → logprob: -8.276630401611328
    8. 'if' → logprob: -8.276630401611328
    9. ' for' → logprob: -9.151630401611328
    10. 'i' → logprob: -10.151630401611328

Token 472: ' Cette' (ID: 27383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17460322380065918
    2. 'min' → logprob: -2.549603223800659
    3. 'if' → logprob: -3.174603223800659
    4. 'act' → logprob: -4.174603462219238
    5. 'eat' → logprob: -4.299603462219238
    6. '#' → logprob: -5.549603462219238
    7. 'max' → logprob: -5.924603462219238
    8. 'minimum' → logprob: -6.799603462219238
    9. 'best' → logprob: -7.049603462219238
    10. 'm' → logprob: -7.424603462219238

Token 473: ' nouvelle' (ID: 24562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04592837393283844
    2. '#' → logprob: -3.170928478240967
    3. ' for' → logprob: -6.670928478240967
    4. 'if' → logprob: -7.670928478240967
    5. 'while' → logprob: -8.170928001403809
    6. 'ligne' → logprob: -8.420928001403809
    7. 'min' → logprob: -8.545928001403809
    8. 'line' → logprob: -9.420928001403809
    9. ' #' → logprob: -10.045928001403809
    10. 'apple' → logprob: -10.170928001403809

Token 474: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01776871271431446
    2. 'bou' → logprob: -4.517768859863281
    3. 'ligne' → logprob: -6.142768859863281
    4. '#' → logprob: -6.517768859863281
    5. ' boucle' → logprob: -6.892768859863281
    6. ' for' → logprob: -7.517768859863281
    7. 'loop' → logprob: -7.892768859863281
    8. 'part' → logprob: -8.267768859863281
    9. 'line' → logprob: -8.392768859863281
    10. 'if' → logprob: -8.517768859863281

Token 475: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003805064770858735
    2. ' for' → logprob: -7.875380516052246
    3. 'pour' → logprob: -15.625380516052246
    4. 'range' → logprob: -16.37537956237793
    5. '#' → logprob: -16.87537956237793
    6. '
' → logprob: -18.37537956237793
    7. '

' → logprob: -18.62537956237793
    8. '```' → logprob: -18.75037956237793
    9. 'continue' → logprob: -19.25037956237793
    10. '	for' → logprob: -19.25037956237793

Token 476: ' parc' (ID: 22138)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0433436632156372
    2. 'for' → logprob: -1.1683436632156372
    3. 'i' → logprob: -1.6683436632156372
    4. ' for' → logprob: -2.0433435440063477
    5. ' in' → logprob: -4.418343544006348
    6. 'in' → logprob: -5.043343544006348
    7. '_' → logprob: -9.168343544006348
    8. ' range' → logprob: -10.418343544006348
    9. 'range' → logprob: -10.543343544006348
    10. ' ' → logprob: -11.418343544006348

Token 477: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.013910084962844849
    2. 'oure' → logprob: -4.513910293579102
    3. 'ours' → logprob: -5.888910293579102
    4. 'ourse' → logprob: -9.763910293579102
    5. 'orre' → logprob: -11.138910293579102
    6. '#' → logprob: -12.638910293579102
    7. 'our' → logprob: -12.763910293579102
    8. 'ure' → logprob: -13.513910293579102
    9. '```' → logprob: -13.763910293579102
    10. 'e' → logprob: -14.263910293579102

Token 478: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022199716418981552
    2. 'i' → logprob: -3.8971996307373047
    3. ' range' → logprob: -6.647199630737305
    4. '(range' → logprob: -8.397199630737305
    5. ' i' → logprob: -9.772199630737305
    6. '(' → logprob: -10.272199630737305
    7. 'for' → logprob: -10.897199630737305
    8. '(i' → logprob: -11.147199630737305
    9. '1' → logprob: -13.022199630737305
    10. '```' → logprob: -13.897199630737305

Token 479: ' pomme' (ID: 197262)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029422737658023834
    2. 'range' → logprob: -3.9044227600097656
    3. ' i' → logprob: -5.404422760009766
    4. ' range' → logprob: -6.154422760009766
    5. 'for' → logprob: -6.404422760009766
    6. 'apple' → logprob: -8.154422760009766
    7. ' for' → logprob: -9.279422760009766
    8. '```' → logprob: -9.904422760009766
    9. ' pomme' → logprob: -10.779422760009766
    10. ' ' → logprob: -11.029422760009766

Token 480: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04086977615952492
    2. 'in' → logprob: -3.29086971282959
    3. ' for' → logprob: -6.29086971282959
    4. ',' → logprob: -8.04086971282959
    5. ' in' → logprob: -8.29086971282959
    6. 'range' → logprob: -8.41586971282959
    7. 'en' → logprob: -9.79086971282959
    8. '(' → logprob: -10.16586971282959
    9. '(range' → logprob: -10.41586971282959
    10. 'pour' → logprob: -11.16586971282959

Token 481: ' déterminer' (ID: 122024)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13341450691223145
    2. 'range' → logprob: -2.3834145069122314
    3. 'for' → logprob: -3.7584145069122314
    4. ' i' → logprob: -5.133414268493652
    5. ' range' → logprob: -6.008414268493652
    6. 'calcul' → logprob: -7.633414268493652
    7. ' for' → logprob: -8.258414268493652
    8. 'find' → logprob: -9.383414268493652
    9. 'calculate' → logprob: -10.883414268493652
    10. ' trouver' → logprob: -11.258414268493652

Token 482: ' laquelle' (ID: 47998)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.206585094332695
    2. '   ' → logprob: -2.206585168838501
    3. 'range' → logprob: -3.456585168838501
    4. 'for' → logprob: -3.581585168838501
    5. ' i' → logprob: -5.206584930419922
    6. ' ' → logprob: -5.956584930419922
    7. 'which' → logprob: -6.081584930419922
    8. 'l' → logprob: -6.956584930419922
    9. 'if' → logprob: -7.456584930419922
    10. '(' → logprob: -7.581584930419922

Token 483: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5591771006584167
    2. 'for' → logprob: -1.4341771602630615
    3. 'should' → logprob: -2.8091771602630615
    4. 'has' → logprob: -3.5591771602630615
    5. 'est' → logprob: -3.9341771602630615
    6. 'a' → logprob: -4.059176921844482
    7. 'to' → logprob: -4.809176921844482
    8. ' has' → logprob: -4.934176921844482
    9. ' ' → logprob: -5.559176921844482
    10. 'n' → logprob: -5.559176921844482

Token 484: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01688966155052185
    2. 'fa' → logprob: -4.641889572143555
    3. ' faut' → logprob: -5.266889572143555
    4. 'ne' → logprob: -7.516889572143555
    5. ' ne' → logprob: -8.141889572143555
    6. ' faudrait' → logprob: -8.391889572143555
    7. 'man' → logprob: -8.766889572143555
    8. '#' → logprob: -8.891889572143555
    9. '   ' → logprob: -9.391889572143555
    10. ' vaut' → logprob: -9.516889572143555

Token 485: ' retirer' (ID: 136490)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.019850855693221092
    2. 'ret' → logprob: -4.269850730895996
    3. 'év' → logprob: -5.894850730895996
    4. 'ne' → logprob: -7.019850730895996
    5. 'prendre' → logprob: -7.769850730895996
    6. 'sup' → logprob: -8.144850730895996
    7. 'ex' → logprob: -8.644850730895996
    8. 'é' → logprob: -9.269850730895996
    9. '#' → logprob: -9.644850730895996
    10. 's' → logprob: -9.644850730895996

Token 486: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015022405423223972
    2. ':' → logprob: -4.265022277832031
    3. ' for' → logprob: -7.390022277832031
    4. 'to' → logprob: -9.890022277832031
    5. 'in' → logprob: -10.140022277832031
    6. 'pour' → logprob: -10.140022277832031
    7. 'range' → logprob: -10.890022277832031
    8. 'i' → logprob: -11.015022277832031
    9. '   ' → logprob: -11.140022277832031
    10. ':
' → logprob: -11.265022277832031

Token 487: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1526080071926117
    2. 'range' → logprob: -2.6526079177856445
    3. 'min' → logprob: -3.5276079177856445
    4. ' i' → logprob: -3.9026079177856445
    5. ' range' → logprob: -4.5276079177856445
    6. 'max' → logprob: -5.6526079177856445
    7. ' maxim' → logprob: -6.2776079177856445
    8. 'for' → logprob: -6.5276079177856445
    9. ' minim' → logprob: -6.7776079177856445
    10. 'eat' → logprob: -7.4026079177856445

Token 488: '#' (ID: 2)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8658024668693542
    2. 'i' → logprob: -1.115802526473999
    3. ' range' → logprob: -1.990802526473999
    4. ' i' → logprob: -2.365802526473999
    5. '   ' → logprob: -4.74080228805542
    6. 'for' → logprob: -5.86580228805542
    7. ' ' → logprob: -6.24080228805542
    8. ' for' → logprob: -6.74080228805542
    9. ' éviter' → logprob: -6.74080228805542
    10. 'max' → logprob: -7.11580228805542

Token 489: ' minim' (ID: 23874)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15914040803909302
    2. 'for' → logprob: -2.1591403484344482
    3. 'range' → logprob: -4.034140586853027
    4. 'min' → logprob: -5.284140586853027
    5. ' i' → logprob: -5.534140586853027
    6. ' for' → logprob: -6.159140586853027
    7. '   ' → logprob: -7.159140586853027
    8. 'calculate' → logprob: -7.909140586853027
    9. 'eat' → logprob: -8.159140586853027
    10. ' range' → logprob: -8.284140586853027

Token 490: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.007287862244993448
    2. 'ser' → logprob: -5.007287979125977
    3. 'er' → logprob: -7.882287979125977
    4. 'al' → logprob: -9.007287979125977
    5. 'user' → logprob: -10.882287979125977
    6. '#' → logprob: -11.507287979125977
    7. 'izer' → logprob: -11.757287979125977
    8. 'm' → logprob: -12.132287979125977
    9. 'aiser' → logprob: -12.132287979125977
    10. 'alyser' → logprob: -12.132287979125977

Token 491: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4955700635910034
    2. 'range' → logprob: -1.8705700635910034
    3. 'la' → logprob: -1.9955700635910034
    4. 'i' → logprob: -1.9955700635910034
    5. 'for' → logprob: -2.870570182800293
    6. ' i' → logprob: -2.870570182800293
    7. ' range' → logprob: -2.870570182800293
    8. ' le' → logprob: -2.870570182800293
    9. ' for' → logprob: -2.995570182800293
    10. 'le' → logprob: -3.495570182800293

Token 492: ' différence' (ID: 79196)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.6239895224571228
    2. 'all' → logprob: -0.9989895224571228
    3. 'for' → logprob: -2.4989895820617676
    4. 'taste' → logprob: -5.123989582061768
    5. '#' → logprob: -6.373989582061768
    6. 'eat' → logprob: -6.498989582061768
    7. 'tmp' → logprob: -7.248989582061768
    8. 'max' → logprob: -7.373989582061768
    9. 'sum' → logprob: -7.498989582061768
    10. 'total' → logprob: -7.498989582061768

Token 493: ' absol' (ID: 7374)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0363776832818985
    2. ' for' → logprob: -4.286377906799316
    3. '   ' → logprob: -5.161377906799316
    4. '(' → logprob: -5.661377906799316
    5. '(range' → logprob: -5.661377906799316
    6. ':' → logprob: -5.911377906799316
    7. '.' → logprob: -6.286377906799316
    8. 'range' → logprob: -6.536377906799316
    9. ',' → logprob: -6.786377906799316
    10. 'pour' → logprob: -7.161377906799316

Token 494: 'ue' (ID: 466)
  Prédit: 'ence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ence' → logprob: -1.177024006843567
    2. 'ol' → logprob: -1.427024006843567
    3. 'ulte' → logprob: -1.677024006843567
    4. 'oute' → logprob: -2.4270238876342773
    5. 'ute' → logprob: -3.1770238876342773
    6. 'oul' → logprob: -3.3020238876342773
    7. 'u' → logprob: -4.052023887634277
    8. 'ule' → logprob: -4.177023887634277
    9. 'ète' → logprob: -4.177023887634277
    10. 'ense' → logprob: -4.677023887634277

Token 495: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4974000155925751
    2. 'for' → logprob: -1.8724000453948975
    3. ':' → logprob: -2.1224000453948975
    4. '.' → logprob: -3.7474000453948975
    5. 'between' → logprob: -3.9974000453948975
    6. 'pour' → logprob: -4.372399806976318
    7. ' entre' → logprob: -4.622399806976318
    8. ' for' → logprob: -4.622399806976318
    9. ' between' → logprob: -4.997399806976318
    10. ',' → logprob: -5.122399806976318

Token 496: ' goût' (ID: 76414)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.21531453728675842
    2. 'act' → logprob: -1.715314507484436
    3. 'abs' → logprob: -5.5903143882751465
    4. 'taste' → logprob: -5.9653143882751465
    5. 'total' → logprob: -6.3403143882751465
    6. '#' → logprob: -6.4653143882751465
    7. 'go' → logprob: -6.5903143882751465
    8. ' all' → logprob: -7.4653143882751465
    9. 'l' → logprob: -7.7153143882751465
    10. 't' → logprob: -8.340314865112305

Token 497: ' rejet' (ID: 148312)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027274901513010263
    2. ' for' → logprob: -7.002727508544922
    3. 'pour' → logprob: -7.252727508544922
    4. '.' → logprob: -7.752727508544922
    5. ',' → logprob: -7.877727508544922
    6. ':' → logprob: -10.127727508544922
    7. '   ' → logprob: -10.252727508544922
    8. 'from' → logprob: -10.377727508544922
    9. 'i' → logprob: -10.377727508544922
    10. 'abs' → logprob: -10.752727508544922

Token 498: 'é' (ID: 377)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7142673134803772
    2. 'ue' → logprob: -1.5892672538757324
    3. 'é' → logprob: -1.8392672538757324
    4. 'ée' → logprob: -2.3392672538757324
    5. 'er' → logprob: -3.8392672538757324
    6. 'e' → logprob: -4.964267253875732
    7. 'i' → logprob: -5.089267253875732
    8. 'enue' → logprob: -6.214267253875732
    9. 'ie' → logprob: -6.464267253875732
    10. 'ition' → logprob: -6.589267253875732

Token 499: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009152670972980559
    2. ' for' → logprob: -7.125915050506592
    3. '.' → logprob: -10.00091552734375
    4. 'pour' → logprob: -10.62591552734375
    5. ',' → logprob: -11.37591552734375
    6. ':' → logprob: -12.50091552734375
    7. 'from' → logprob: -12.62591552734375
    8. ' pour' → logprob: -12.75091552734375
    9. 'with' → logprob: -13.00091552734375
    10. 'range' → logprob: -13.00091552734375

Token 500: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028140196576714516
    2. '#' → logprob: -3.7781403064727783
    3. ' for' → logprob: -6.153140068054199
    4. '   ' → logprob: -6.528140068054199
    5. 'abs' → logprob: -8.1531400680542
    6. 'et' → logprob: -8.5281400680542
    7. 'pour' → logprob: -8.5281400680542
    8. 'i' → logprob: -9.4031400680542
    9. ' afin' → logprob: -10.0281400680542
    10. 'max' → logprob: -10.0281400680542

Token 501: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18042582273483276
    2. 'ar' → logprob: -2.9304258823394775
    3. 'on' → logprob: -3.0554258823394775
    4. 'ont' → logprob: -4.430425643920898
    5. 'u' → logprob: -4.555425643920898
    6. 'e' → logprob: -4.930425643920898
    7. 'onc' → logprob: -5.430425643920898
    8. 'à' → logprob: -5.555425643920898
    9. 'a' → logprob: -5.555425643920898
    10. 'i' → logprob: -5.680425643920898

Token 502: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.32471999526023865
    2. 'à' → logprob: -1.324720025062561
    3. '   ' → logprob: -4.9497199058532715
    4. ' à' → logprob: -6.4497199058532715
    5. 'for' → logprob: -6.9497199058532715
    6. '#' → logprob: -7.0747199058532715
    7. 'i' → logprob: -7.9497199058532715
    8. '```' → logprob: -8.94972038269043
    9. '-' → logprob: -9.44972038269043
    10. 'a' → logprob: -9.94972038269043

Token 503: '-dire' (ID: 76064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8544716835021973
    2. 'dire' → logprob: -1.4794716835021973
    3. 'à' → logprob: -1.4794716835021973
    4. '```' → logprob: -3.3544716835021973
    5. 'i' → logprob: -3.7294716835021973
    6. '-à' → logprob: -4.729471683502197
    7. 'ce' → logprob: -5.354471683502197
    8. 'faire' → logprob: -5.729471683502197
    9. 'possible' → logprob: -6.104471683502197
    10. '``' → logprob: -6.104471683502197

Token 504: ' celle' (ID: 31790)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.064471960067749
    2. 'for' → logprob: -1.439471960067749
    3. 'i' → logprob: -2.064471960067749
    4. 'abs' → logprob: -2.189471960067749
    5. 'range' → logprob: -2.439471960067749
    6. 'min' → logprob: -2.939471960067749
    7. ' abs' → logprob: -4.689472198486328
    8. 'pour' → logprob: -5.189472198486328
    9. ' for' → logprob: -5.314472198486328
    10. ' i' → logprob: -5.814472198486328

Token 505: ' dont' (ID: 11562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5282870531082153
    2. 'de' → logprob: -1.9032870531082153
    3. 'for' → logprob: -2.028286933898926
    4. '#' → logprob: -3.528286933898926
    5. 'à' → logprob: -3.653286933898926
    6. 'qui' → logprob: -3.903286933898926
    7. 'pour' → logprob: -4.028286933898926
    8. 'du' → logprob: -4.778286933898926
    9. 'en' → logprob: -5.278286933898926
    10. 'des' → logprob: -6.028286933898926

Token 506: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9362396001815796
    2. 'abs' → logprob: -1.3112396001815796
    3. 'for' → logprob: -1.9362396001815796
    4. 'range' → logprob: -2.686239719390869
    5. 'la' → logprob: -3.186239719390869
    6. 'tmp' → logprob: -3.186239719390869
    7. 'le' → logprob: -4.436239719390869
    8. 'min' → logprob: -4.936239719390869
    9. 'l' → logprob: -5.561239719390869
    10. 'all' → logprob: -5.811239719390869

Token 507: ' save' (ID: 5093)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0225032567977905
    2. 'save' → logprob: -1.7725032567977905
    3. 'tmp' → logprob: -2.02250337600708
    4. 'taste' → logprob: -2.02250337600708
    5. 'abs' → logprob: -2.27250337600708
    6. 'range' → logprob: -3.02250337600708
    7. 'val' → logprob: -3.89750337600708
    8. 'go' → logprob: -4.27250337600708
    9. 'i' → logprob: -4.89750337600708
    10. 'all' → logprob: -5.89750337600708

Token 508: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.06293673813343048
    2. 'f' → logprob: -5.437936782836914
    3. 'val' → logprob: -5.562936782836914
    4. 've' → logprob: -5.687936782836914
    5. 'vor' → logprob: -5.812936782836914
    6. 'eur' → logprob: -5.812936782836914
    7. 'for' → logprob: -5.937936782836914
    8. 'vation' → logprob: -5.937936782836914
    9. 'férence' → logprob: -6.062936782836914
    10. 'avor' → logprob: -6.062936782836914

Token 509: ' (' (ID: 350)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1661498546600342
    2. '<|end|>' → logprob: -1.4161498546600342
    3. 'for' → logprob: -2.416149854660034
    4. 'abs' → logprob: -2.916149854660034
    5. 'diff' → logprob: -3.041149854660034
    6. 'i' → logprob: -3.291149854660034
    7. 's' → logprob: -3.416149854660034
    8. 'is' → logprob: -3.666149854660034
    9. 'import' → logprob: -4.041150093078613
    10. ' est' → logprob: -4.041150093078613

Token 510: 'positive' (ID: 46914)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.31985363364219666
    2. 'i' → logprob: -2.0698535442352295
    3. ')' → logprob: -2.3198535442352295
    4. 'abs' → logprob: -3.4448535442352295
    5. '#' → logprob: -5.569853782653809
    6. ' tmp' → logprob: -6.194853782653809
    7. 'act' → logprob: -6.444853782653809
    8. '(tmp' → logprob: -6.694853782653809
    9. 'la' → logprob: -6.694853782653809
    10. ' )' → logprob: -7.194853782653809

Token 511: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07898320257663727
    2. '#' → logprob: -3.8289833068847656
    3. ' or' → logprob: -4.078983306884766
    4. 'or' → logprob: -4.328983306884766
    5. '-' → logprob: -5.453983306884766
    6. '   ' → logprob: -5.703983306884766
    7. ' )' → logprob: -5.953983306884766
    8. 'for' → logprob: -5.953983306884766
    9. ' -' → logprob: -6.078983306884766
    10. ',' → logprob: -6.578983306884766

Token 512: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.6782118678092957
    2. 'negative' → logprob: -0.8032118678092957
    3. 'neg' → logprob: -4.053211688995361
    4. ' negative' → logprob: -4.428211688995361
    5. '<|end|>' → logprob: -4.428211688995361
    6. 'n' → logprob: -7.428211688995361
    7. '#' → logprob: -7.428211688995361
    8. '_negative' → logprob: -7.678211688995361
    9. ' negativa' → logprob: -7.803211688995361
    10. '-negative' → logprob: -7.928211688995361

Token 513: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0003849133790936321
    2. 'atif' → logprob: -8.500385284423828
    3. 'a' → logprob: -9.625385284423828
    4. '#' → logprob: -9.750385284423828
    5. 'ATIVE' → logprob: -10.875385284423828
    6. 'ativ' → logprob: -11.500385284423828
    7. 'ativement' → logprob: -12.000385284423828
    8. 'itive' → logprob: -12.375385284423828
    9. 'ati' → logprob: -13.375385284423828
    10. 'атив' → logprob: -13.375385284423828

Token 514: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005715470295399427
    2. ' )' → logprob: -5.380715370178223
    3. '#' → logprob: -8.255715370178223
    4. ',' → logprob: -8.630715370178223
    5. 'est' → logprob: -9.255715370178223
    6. '   ' → logprob: -9.880715370178223
    7. ')>' → logprob: -10.130715370178223
    8. ')#' → logprob: -10.130715370178223
    9. ' est' → logprob: -10.255715370178223
    10. ')n' → logprob: -10.630715370178223

Token 515: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07202477008104324
    2. 'est' → logprob: -2.9470248222351074
    3. ' est' → logprob: -5.072024822235107
    4. 'à' → logprob: -5.447024822235107
    5. '   ' → logprob: -7.072024822235107
    6. 'import' → logprob: -7.072024822235107
    7. 'n' → logprob: -7.197024822235107
    8. 'abs' → logprob: -7.947024822235107
    9. 'de' → logprob: -8.07202434539795
    10. '>' → logprob: -8.19702434539795

Token 516: ' est' (ID: 893)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07535883784294128
    2. 'est' → logprob: -3.4503588676452637
    3. ' est' → logprob: -3.8253588676452637
    4. 'is' → logprob: -5.950358867645264
    5. '-' → logprob: -6.075358867645264
    6. 'à' → logprob: -6.325358867645264
    7. ' is' → logprob: -6.575358867645264
    8. 'abs' → logprob: -6.700358867645264
    9. ' #' → logprob: -6.825358867645264
    10. '+' → logprob: -6.950358867645264

Token 517: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9333811402320862
    2. 'min' → logprob: -1.1833810806274414
    3. 'la' → logprob: -2.0583810806274414
    4. ' abs' → logprob: -2.4333810806274414
    5. ' la' → logprob: -3.3083810806274414
    6. 'le' → logprob: -4.058381080627441
    7. 'moins' → logprob: -4.183381080627441
    8. ' minimale' → logprob: -5.183381080627441
    9. 'closest' → logprob: -6.558381080627441
    10. 'plus' → logprob: -6.558381080627441

Token 518: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7736498713493347
    2. 'abs' → logprob: -0.8986498713493347
    3. 'max' → logprob: -2.8986499309539795
    4. 'tmp' → logprob: -3.6486499309539795
    5. ' abs' → logprob: -4.0236496925354
    6. 'plus' → logprob: -4.7736496925354
    7. ' min' → logprob: -4.7736496925354
    8. ' max' → logprob: -6.0236496925354
    9. 'all' → logprob: -6.1486496925354
    10. 'largest' → logprob: -6.1486496925354

Token 519: ' proche' (ID: 61089)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.5381465554237366
    2. 'pro' → logprob: -1.2881464958190918
    3. 'fa' → logprob: -2.413146495819092
    4. 'import' → logprob: -4.538146495819092
    5. 'gr' → logprob: -4.663146495819092
    6. ' faible' → logprob: -4.663146495819092
    7. 'min' → logprob: -5.038146495819092
    8. '```' → logprob: -5.413146495819092
    9. 'près' → logprob: -6.163146495819092
    10. 'pr' → logprob: -6.163146495819092

Token 520: ' possible' (ID: 4149)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7841084003448486
    2. ' de' → logprob: -1.7841084003448486
    3. '   ' → logprob: -2.2841084003448486
    4. 'du' → logprob: -3.0341084003448486
    5. 'abs' → logprob: -3.0341084003448486
    6. ' du' → logprob: -3.1591084003448486
    7. ' à' → logprob: -3.2841084003448486
    8. 'à' → logprob: -3.4091084003448486
    9. 'from' → logprob: -4.1591081619262695
    10. 'au' → logprob: -4.9091081619262695

Token 521: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9619333744049072
    2. 'from' → logprob: -0.9619333744049072
    3. 'de' → logprob: -1.9619333744049072
    4. ' de' → logprob: -3.4619333744049072
    5. 'des' → logprob: -4.461933135986328
    6. 'à' → logprob: -4.836933135986328
    7. 'of' → logprob: -4.961933135986328
    8. ',' → logprob: -4.961933135986328
    9. 'to' → logprob: -5.211933135986328
    10. ' of' → logprob: -5.586933135986328

Token 522: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003687053394969553
    2. 'zero' → logprob: -8.25036907196045
    3. 'l' → logprob: -10.00036907196045
    4. ' ' → logprob: -10.37536907196045
    5. 'all' → logprob: -11.25036907196045
    6. 'z' → logprob: -11.37536907196045
    7. ' zéro' → logprob: -12.50036907196045
    8. '1' → logprob: -14.50036907196045
    9. '```' → logprob: -14.50036907196045
    10. ' zero' → logprob: -14.87536907196045

Token 523: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.0126840758603066e-05
    2. ' for' → logprob: -10.250040054321289
    3. '
' → logprob: -12.375040054321289
    4. ',' → logprob: -16.12504005432129
    5. '.' → logprob: -16.50004005432129
    6. '.for' → logprob: -16.87504005432129
    7. '```' → logprob: -17.12504005432129
    8. '#' → logprob: -17.37504005432129
    9. '.
' → logprob: -18.00004005432129
    10. 'import' → logprob: -18.00004005432129

Token 524: ' Cela' (ID: 44403)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.723973582556937e-05
    2. ' for' → logprob: -11.500017166137695
    3. '
' → logprob: -12.125017166137695
    4. '+' → logprob: -14.625017166137695
    5. 'i' → logprob: -15.000017166137695
    6. 'n' → logprob: -15.625017166137695
    7. '```' → logprob: -15.625017166137695
    8. '-for' → logprob: -16.375017166137695
    9. 'in' → logprob: -16.625017166137695
    10. 'abs' → logprob: -17.125017166137695

Token 525: ' permet' (ID: 11798)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24891437590122223
    2. ':' → logprob: -1.748914361000061
    3. ' for' → logprob: -3.2489144802093506
    4. '#' → logprob: -6.2489142417907715
    5. 'n' → logprob: -7.2489142417907715
    6. '   ' → logprob: -7.6239142417907715
    7. ':
' → logprob: -7.7489142417907715
    8. '.' → logprob: -7.8739142417907715
    9. 'in' → logprob: -7.8739142417907715
    10. 'continue' → logprob: -7.8739142417907715

Token 526: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06448251754045486
    2. 'for' → logprob: -3.6894824504852295
    3. ' for' → logprob: -4.814482688903809
    4. ':' → logprob: -4.814482688903809
    5. 'in' → logprob: -5.189482688903809
    6. ' de' → logprob: -5.564482688903809
    7. ' in' → logprob: -6.064482688903809
    8. 'à' → logprob: -6.064482688903809
    9. ' à' → logprob: -6.314482688903809
    10. 'de' → logprob: -7.439482688903809

Token 527: ' conserver' (ID: 116877)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12496499717235565
    2. 'min' → logprob: -2.999964952468872
    3. 'range' → logprob: -3.124964952468872
    4. ' for' → logprob: -3.999964952468872
    5. ' range' → logprob: -6.249965190887451
    6. 'abs' → logprob: -7.124965190887451
    7. ' minim' → logprob: -7.124965190887451
    8. 'continue' → logprob: -7.374965190887451
    9. '   ' → logprob: -8.499964714050293
    10. ' min' → logprob: -8.624964714050293

Token 528: ' un' (ID: 537)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0120006799697876
    2. 'range' → logprob: -1.0120006799697876
    3. 'for' → logprob: -1.7620006799697876
    4. '   ' → logprob: -3.012000560760498
    5. ')' → logprob: -4.137000560760498
    6. ' range' → logprob: -5.012000560760498
    7. ' abs' → logprob: -5.512000560760498
    8. ':' → logprob: -5.762000560760498
    9. 'la' → logprob: -6.012000560760498
    10. 'l' → logprob: -6.137000560760498

Token 529: ' goût' (ID: 76414)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33342981338500977
    2. 'max' → logprob: -2.2084298133850098
    3. 'min' → logprob: -3.3334298133850098
    4. 'apple' → logprob: -3.4584298133850098
    5. 'minimum' → logprob: -3.9584298133850098
    6. 'maximum' → logprob: -3.9584298133850098
    7. 'all' → logprob: -4.20842981338501
    8. 'range' → logprob: -4.20842981338501
    9. 'taste' → logprob: -4.83342981338501
    10. 'minimal' → logprob: -4.83342981338501

Token 530: ' total' (ID: 3609)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.7897157669067383
    2. 'min' → logprob: -1.9147157669067383
    3. 'minimum' → logprob: -2.0397157669067383
    4. 'minimal' → logprob: -2.1647157669067383
    5. 'for' → logprob: -2.4147157669067383
    6. 'optimal' → logprob: -2.4147157669067383
    7. 'diff' → logprob: -3.2897157669067383
    8. ' optimal' → logprob: -3.5397157669067383
    9. ' minimum' → logprob: -3.7897157669067383
    10. 'max' → logprob: -4.164715766906738

Token 531: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05000251904129982
    2. '   ' → logprob: -4.425002574920654
    3. ' for' → logprob: -4.675002574920654
    4. '=' → logprob: -5.300002574920654
    5. 'abs' → logprob: -5.425002574920654
    6. 'min' → logprob: -5.800002574920654
    7. ')' → logprob: -6.175002574920654
    8. '#' → logprob: -6.425002574920654
    9. 'optimal' → logprob: -6.425002574920654
    10. ' =' → logprob: -6.550002574920654

Token 532: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0633842721581459
    2. 'me' → logprob: -4.563384056091309
    3. 'for' → logprob: -4.813384056091309
    4. 'all' → logprob: -5.063384056091309
    5. ' meilleur' → logprob: -5.188384056091309
    6. '+' → logprob: -5.313384056091309
    7. 'best' → logprob: -5.563384056091309
    8. ' plus' → logprob: -5.563384056091309
    9. 'max' → logprob: -5.563384056091309
    10. 'closest' → logprob: -5.813384056091309

Token 533: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.05252591520547867
    2. 'grand' → logprob: -3.9275259971618652
    3. 'pet' → logprob: -4.677525997161865
    4. 'é' → logprob: -5.052525997161865
    5. 'près' → logprob: -5.177525997161865
    6. 'pres' → logprob: -6.302525997161865
    7. 'fa' → logprob: -6.927525997161865
    8. 'minimal' → logprob: -7.052525997161865
    9. '```' → logprob: -7.302525997161865
    10. 'possible' → logprob: -7.302525997161865

Token 534: ' possible' (ID: 4149)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.279546856880188
    2. ' de' → logprob: -1.654546856880188
    3. '```' → logprob: -4.029546737670898
    4. '=' → logprob: -4.779546737670898
    5. 'd' → logprob: -5.029546737670898
    6. 'du' → logprob: -5.279546737670898
    7. ' =' → logprob: -6.029546737670898
    8. ' du' → logprob: -6.154546737670898
    9. '   ' → logprob: -6.154546737670898
    10. ' d' → logprob: -6.404546737670898

Token 535: ' 
' (ID: 793)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8883073329925537
    2. '   ' → logprob: -1.0133073329925537
    3. ')' → logprob: -2.5133073329925537
    4. ':' → logprob: -2.7633073329925537
    5. 'à' → logprob: -4.263307571411133
    6. ' à' → logprob: -4.263307571411133
    7. '):' → logprob: -4.388307571411133
    8. 'import' → logprob: -5.388307571411133
    9. ' =' → logprob: -5.763307571411133
    10. 'de' → logprob: -6.013307571411133

Token 536: '#' (ID: 2)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6000521779060364
    2. '   ' → logprob: -1.6000521183013916
    3. ')' → logprob: -2.3500521183013916
    4. 'from' → logprob: -2.8500521183013916
    5. 'of' → logprob: -3.9750521183013916
    6. 'à' → logprob: -4.100052356719971
    7. 'import' → logprob: -4.225052356719971
    8. ' of' → logprob: -4.475052356719971
    9. 'to' → logprob: -4.850052356719971
    10. 'de' → logprob: -5.350052356719971

Token 537: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1470375061035156
    2. 'à' → logprob: -1.3970375061035156
    3. 'to' → logprob: -2.1470375061035156
    4. 'from' → logprob: -2.5220375061035156
    5. '   ' → logprob: -2.8970375061035156
    6. '=' → logprob: -3.2720375061035156
    7. ' to' → logprob: -3.5220375061035156
    8. ' à' → logprob: -3.8970375061035156
    9. 'du' → logprob: -3.8970375061035156
    10. ' de' → logprob: -3.8970375061035156

Token 538: ' la' (ID: 557)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2601093053817749
    2. 'zero' → logprob: -1.885109305381775
    3. '0' → logprob: -3.2601094245910645
    4. 'l' → logprob: -3.6351094245910645
    5. 'z' → logprob: -5.5101094245910645
    6. 'act' → logprob: -5.5101094245910645
    7. ' zéro' → logprob: -6.6351094245910645
    8. 'n' → logprob: -7.5101094245910645
    9. ' all' → logprob: -7.6351094245910645
    10. 't' → logprob: -7.7601094245910645

Token 539: ' somme' (ID: 64484)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10569149255752563
    2. '0' → logprob: -2.480691432952881
    3. 'n' → logprob: -5.855691432952881
    4. 'zero' → logprob: -5.980691432952881
    5. 'plus' → logprob: -6.480691432952881
    6. 'l' → logprob: -6.480691432952881
    7. 'total' → logprob: -6.605691432952881
    8. 'max' → logprob: -6.605691432952881
    9. 'original' → logprob: -7.230691432952881
    10. 'optimal' → logprob: -7.605691432952881

Token 540: ' totale' (ID: 52898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19984422624111176
    2. 'for' → logprob: -2.3248441219329834
    3. 'abs' → logprob: -3.5748441219329834
    4. 'de' → logprob: -4.1998443603515625
    5. 'des' → logprob: -4.4498443603515625
    6. 'min' → logprob: -4.9498443603515625
    7. 'import' → logprob: -5.1998443603515625
    8. 'max' → logprob: -6.4498443603515625
    9. '(abs' → logprob: -6.4498443603515625
    10. 'from' → logprob: -6.6998443603515625

Token 541: ' originale' (ID: 90997)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028118524700403214
    2. ' for' → logprob: -4.15311861038208
    3. '   ' → logprob: -5.77811861038208
    4. ':' → logprob: -6.27811861038208
    5. '+' → logprob: -6.40311861038208
    6. '-' → logprob: -6.77811861038208
    7. '.' → logprob: -7.15311861038208
    8. '(' → logprob: -7.52811861038208
    9. 'of' → logprob: -7.77811861038208
    10. 'pour' → logprob: -7.90311861038208

Token 542: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0856393575668335
    2. ' for' → logprob: -2.835639476776123
    3. ':' → logprob: -3.835639476776123
    4. '   ' → logprob: -7.085639476776123
    5. ':
' → logprob: -7.460639476776123
    6. '.' → logprob: -8.835638999938965
    7. ',' → logprob: -9.710638999938965
    8. '+' → logprob: -10.585638999938965
    9. '(' → logprob: -10.835638999938965
    10. 'in' → logprob: -10.960638999938965

Token 543: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.961759259458631e-06
    2. ' for' → logprob: -13.375004768371582
    3. '```' → logprob: -13.875004768371582
    4. '
' → logprob: -14.625004768371582
    5. 'i' → logprob: -15.000004768371582
    6. '#' → logprob: -15.500004768371582
    7. '+' → logprob: -15.750004768371582
    8. 'abs' → logprob: -15.875004768371582
    9. 'import' → logprob: -16.0000057220459
    10. 'from' → logprob: -16.2500057220459

Token 544: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.055109407752752304
    2. ' i' → logprob: -2.9301095008850098
    3. 'apple' → logprob: -9.180109024047852
    4. '_i' → logprob: -10.055109024047852
    5. 'j' → logprob: -10.180109024047852
    6. ' apple' → logprob: -10.930109024047852
    7. 'x' → logprob: -11.930109024047852
    8. '_' → logprob: -12.555109024047852
    9. ' j' → logprob: -12.805109024047852
    10. '	i' → logprob: -12.930109024047852

Token 545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011057964526116848
    2. 'in' → logprob: -4.5110578536987305
    3. ' ' → logprob: -11.63605785369873
    4. '1' → logprob: -14.88605785369873
    5. '(' → logprob: -15.26105785369873
    6. '	in' → logprob: -15.63605785369873
    7. ' i' → logprob: -16.011058807373047
    8. '<|end|>' → logprob: -16.511058807373047
    9. ',' → logprob: -17.011058807373047
    10. '0' → logprob: -17.136058807373047

Token 546: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018189631402492523
    2. ' range' → logprob: -4.018189430236816
    3. '1' → logprob: -10.268189430236816
    4. ' ' → logprob: -12.643189430236816
    5. '(range' → logprob: -14.268189430236816
    6. '(' → logprob: -15.143189430236816
    7. '   ' → logprob: -15.518189430236816
    8. '  ' → logprob: -15.893189430236816
    9. '2' → logprob: -16.268190383911133
    10. '	range' → logprob: -16.268190383911133

Token 547: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.166338137816638e-05
    2. '1' → logprob: -10.625031471252441
    3. '(n' → logprob: -12.000031471252441
    4. '(i' → logprob: -14.375031471252441
    5. ' (' → logprob: -15.500031471252441
    6. '(
' → logprob: -15.750031471252441
    7. ',' → logprob: -16.000032424926758
    8. '2' → logprob: -16.750032424926758
    9. 'n' → logprob: -17.500032424926758
    10. '(l' → logprob: -18.625032424926758

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.20734242349863e-05
    2. 'n' → logprob: -10.125072479248047
    3. '2' → logprob: -10.500072479248047
    4. '0' → logprob: -12.875072479248047
    5. ' ' → logprob: -13.375072479248047
    6. '   ' → logprob: -15.875072479248047
    7. 'l' → logprob: -16.500072479248047
    8. '(' → logprob: -16.625072479248047
    9. 'i' → logprob: -17.500072479248047
    10. ' n' → logprob: -17.812572479248047

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.245724504580721e-05
    2. ',n' → logprob: -9.500092506408691
    3. ' ,' → logprob: -11.125092506408691
    4. 'n' → logprob: -13.250092506408691
    5. ',
' → logprob: -14.250092506408691
    6. '1' → logprob: -15.250092506408691
    7. '(n' → logprob: -16.875091552734375
    8. '2' → logprob: -17.000091552734375
    9. '+' → logprob: -17.250091552734375
    10. ' n' → logprob: -17.625091552734375

Token 550: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015023599844425917
    2. ' n' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.501502990722656
    4. '	n' → logprob: -18.626502990722656
    5. ' ' → logprob: -19.001502990722656
    6. 'user' → logprob: -19.126502990722656
    7. '(n' → logprob: -19.126502990722656
    8. '_n' → logprob: -19.626502990722656
    9. '+' → logprob: -20.001502990722656
    10. ')n' → logprob: -20.001502990722656

Token 551: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868728280067444
    2. '+' → logprob: -1.1368727684020996
    3. ',' → logprob: -14.136873245239258
    4. ' +
' → logprob: -14.886873245239258
    5. '+
' → logprob: -15.011873245239258
    6. ' ' → logprob: -16.136873245239258
    7. '＋' → logprob: -16.761873245239258
    8. '):
' → logprob: -17.011873245239258
    9. '   ' → logprob: -17.261873245239258
    10. '+n' → logprob: -17.511873245239258

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.750436007976532e-05
    2. ' ' → logprob: -10.37503719329834
    3. '2' → logprob: -12.00003719329834
    4. '   ' → logprob: -18.000038146972656
    5. 'n' → logprob: -18.375038146972656
    6. '+' → logprob: -18.625038146972656
    7. 'i' → logprob: -18.750038146972656
    8. '۱' → logprob: -18.750038146972656
    9. ')' → logprob: -18.875038146972656
    10. '```' → logprob: -18.875038146972656

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -13.750020027160645
    4. '+' → logprob: -15.625020027160645
    5. 'i' → logprob: -16.87502098083496
    6. '۱' → logprob: -17.25002098083496
    7. '   ' → logprob: -17.50002098083496
    8. '
' → logprob: -18.00002098083496
    9. '```' → logprob: -18.37502098083496
    10. ')' → logprob: -18.68752098083496

Token 554: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016654232749715447
    2. '):
' → logprob: -6.8766655921936035
    3. ':' → logprob: -7.3766655921936035
    4. '):
' → logprob: -12.501665115356445
    5. ')' → logprob: -13.251665115356445
    6. '   ' → logprob: -14.501665115356445
    7. ' ):' → logprob: -14.876665115356445
    8. '():' → logprob: -15.876665115356445
    9. '):

' → logprob: -16.376665115356445
    10. '}:' → logprob: -16.501665115356445

Token 555: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002715873415581882
    2. '
' → logprob: -9.000271797180176
    3. 'tmp' → logprob: -9.750271797180176
    4. '    
' → logprob: -10.500271797180176
    5. ' tmp' → logprob: -11.000271797180176
    6. '	tmp' → logprob: -11.125271797180176
    7. '   ' → logprob: -11.250271797180176
    8. '```' → logprob: -13.000271797180176
    9. '{
' → logprob: -13.125271797180176
    10. '{' → logprob: -13.500271797180176

Token 556: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1041145626222715e-05
    2. '<|end|>' → logprob: -12.750011444091797
    3. 'tmp' → logprob: -13.125011444091797
    4. '    
' → logprob: -13.750011444091797
    5. '	tmp' → logprob: -14.125011444091797
    6. '{' → logprob: -14.250011444091797
    7. '
' → logprob: -14.500011444091797
    8. '{
' → logprob: -14.500011444091797
    9. '   ' → logprob: -14.750011444091797
    10. '```' → logprob: -14.875011444091797

Token 557: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006310671451501548
    2. 'tmp' → logprob: -7.500630855560303
    3. ' tmp' → logprob: -9.875631332397461
    4. '	tmp' → logprob: -11.875631332397461
    5. '    
' → logprob: -12.000631332397461
    6. '
' → logprob: -12.125631332397461
    7. '   ' → logprob: -13.125631332397461
    8. 'temp' → logprob: -13.500631332397461
    9. '{
' → logprob: -14.000631332397461
    10. 't' → logprob: -14.500631332397461

Token 558: 'ère' (ID: 4346)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2080201357603073
    2. 'range' → logprob: -2.0830202102661133
    3. ' range' → logprob: -3.2080202102661133
    4. 'er' → logprob: -4.583020210266113
    5. 'e' → logprob: -5.333020210266113
    6. '(range' → logprob: -6.333020210266113
    7. '  ' → logprob: -7.083020210266113
    8. 'é' → logprob: -7.583020210266113
    9. '):
' → logprob: -8.083020210266113
    10. ' in' → logprob: -8.083020210266113

Token 559: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6234675645828247
    2. ':' → logprob: -0.8734675645828247
    3. '(' → logprob: -3.498467445373535
    4. ' ' → logprob: -5.998467445373535
    5. '<|end|>' → logprob: -6.373467445373535
    6. '(i' → logprob: -6.623467445373535
    7. ')' → logprob: -6.623467445373535
    8. ':
' → logprob: -6.623467445373535
    9. ' :' → logprob: -6.998467445373535
    10. '(n' → logprob: -6.998467445373535

Token 560: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005423007998615503
    2. ' range' → logprob: -5.505423069000244
    3. 'n' → logprob: -7.005423069000244
    4. 'i' → logprob: -7.880423069000244
    5. 'l' → logprob: -10.630422592163086
    6. ' ' → logprob: -11.630422592163086
    7. '   ' → logprob: -12.005422592163086
    8. '(range' → logprob: -12.130422592163086
    9. '1' → logprob: -12.255422592163086
    10. ' i' → logprob: -12.755422592163086

Token 561: ' pomme' (ID: 197262)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5668310523033142
    2. 'range' → logprob: -1.816831111907959
    3. 'n' → logprob: -2.191831111907959
    4. 'tmp' → logprob: -2.441831111907959
    5. ':' → logprob: -3.816831111907959
    6. '1' → logprob: -4.316831111907959
    7. 'apple' → logprob: -4.316831111907959
    8. ' i' → logprob: -5.566831111907959
    9. '   ' → logprob: -5.691831111907959
    10. ' range' → logprob: -5.816831111907959

Token 562: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3837224841117859
    2. ':' → logprob: -1.2587225437164307
    3. ':
' → logprob: -3.5087225437164307
    4. '{' → logprob: -5.633722305297852
    5. ' :' → logprob: -8.758722305297852
    6. '):
' → logprob: -8.758722305297852
    7. '<|end|>' → logprob: -8.883722305297852
    8. ' :
' → logprob: -9.383722305297852
    9. '
' → logprob: -9.571222305297852
    10. '  ' → logprob: -9.633722305297852

Token 563: ' déterminer' (ID: 122024)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.15853998064994812
    2. '   ' → logprob: -2.1585400104522705
    3. 'temp' → logprob: -4.533539772033691
    4. 'taste' → logprob: -4.658539772033691
    5. ' tmp' → logprob: -5.658539772033691
    6. '
' → logprob: -5.783539772033691
    7. ' ' → logprob: -6.783539772033691
    8. 'apple' → logprob: -8.033539772033691
    9. 't' → logprob: -8.033539772033691
    10. ':' → logprob: -8.283539772033691

Token 564: ' laquelle' (ID: 47998)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004593299236148596
    2. 'tmp' → logprob: -5.504593372344971
    3. ' tmp' → logprob: -8.129592895507812
    4. '
' → logprob: -9.754592895507812
    5. '	tmp' → logprob: -9.879592895507812
    6. '    
' → logprob: -10.504592895507812
    7. 'temp' → logprob: -10.629592895507812
    8. '   ' → logprob: -11.129592895507812
    9. 'taste' → logprob: -12.004592895507812
    10. ' ' → logprob: -12.129592895507812

Token 565: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08029750734567642
    2. ':' → logprob: -2.5802974700927734
    3. ':
' → logprob: -7.080297470092773
    4. '{' → logprob: -8.205297470092773
    5. '  ' → logprob: -9.955297470092773
    6. ' ' → logprob: -10.330297470092773
    7. '):
' → logprob: -10.330297470092773
    8. ' :' → logprob: -10.580297470092773
    9. '
' → logprob: -10.705297470092773
    10. '):' → logprob: -11.330297470092773

Token 566: ' pas' (ID: 2173)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5580479502677917
    2. 'pas' → logprob: -0.9330479502677917
    3. 'eat' → logprob: -4.183047771453857
    4. ' manger' → logprob: -4.933047771453857
    5. ' pas' → logprob: -5.808047771453857
    6. 'prendre' → logprob: -5.933047771453857
    7. ' m' → logprob: -7.433047771453857
    8. ' eat' → logprob: -7.433047771453857
    9. 'should' → logprob: -7.683047771453857
    10. 'e' → logprob: -7.683047771453857

Token 567: ' manger' (ID: 64067)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.019098663702607155
    2. ' manger' → logprob: -4.01909875869751
    3. 'eat' → logprob: -7.14409875869751
    4. ' m' → logprob: -9.519098281860352
    5. 'e' → logprob: -11.519098281860352
    6. ' eat' → logprob: -11.519098281860352
    7. ' ' → logprob: -11.894098281860352
    8. 'prendre' → logprob: -12.019098281860352
    9. 'range' → logprob: -12.269098281860352
    10. '   ' → logprob: -12.394098281860352

Token 568: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1190660297870636
    2. ':' → logprob: -2.244065999984741
    3. ':
' → logprob: -5.24406623840332
    4. '<|end|>' → logprob: -7.86906623840332
    5. '{' → logprob: -8.24406623840332
    6. '):
' → logprob: -9.86906623840332
    7. '<|end|>' → logprob: -9.86906623840332
    8. '  ' → logprob: -10.80656623840332
    9. '{
' → logprob: -10.86906623840332
    10. '
' → logprob: -11.11906623840332

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.869639476761222e-05
    2. '
' → logprob: -11.375039100646973
    3. '    
' → logprob: -11.625039100646973
    4. 'tmp' → logprob: -11.875039100646973
    5. ' tmp' → logprob: -12.750039100646973
    6. '	tmp' → logprob: -13.375039100646973
    7. '   ' → logprob: -13.875039100646973
    8. '{
' → logprob: -14.125039100646973
    9. '<|end|>' → logprob: -14.250039100646973
    10. '```' → logprob: -14.437539100646973

Token 570: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023472808301448822
    2. 'tmp' → logprob: -3.773472785949707
    3. 'current' → logprob: -9.773472785949707
    4. 'taste' → logprob: -9.898472785949707
    5. ' tmp' → logprob: -10.273472785949707
    6. '	tmp' → logprob: -10.648472785949707
    7. 'if' → logprob: -10.898472785949707
    8. '    
' → logprob: -11.523472785949707
    9. 'temp' → logprob: -11.648472785949707
    10. 'apple' → logprob: -11.898472785949707

Token 571: ' Cal' (ID: 4453)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.043134499341249466
    2. 'current' → logprob: -4.418134689331055
    3. 'taste' → logprob: -4.418134689331055
    4. '   ' → logprob: -4.793134689331055
    5. 'if' → logprob: -4.793134689331055
    6. 'apple' → logprob: -7.293134689331055
    7. 'curr' → logprob: -8.043134689331055
    8. 'temp' → logprob: -9.043134689331055
    9. 'cur' → logprob: -9.668134689331055
    10. '    
' → logprob: -10.043134689331055

Token 572: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.7196007966995239
    2. 'cule' → logprob: -1.594600796699524
    3. 'cul' → logprob: -1.844600796699524
    4. 'ulate' → logprob: -2.4696006774902344
    5. 'tmp' → logprob: -3.4696006774902344
    6. '   ' → logprob: -4.094600677490234
    7. 't' → logprob: -4.469600677490234
    8. 'cu' → logprob: -6.719600677490234
    9. 'c' → logprob: -6.969600677490234
    10. 'value' → logprob: -6.969600677490234

Token 573: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45509469509124756
    2. 'tmp' → logprob: -1.0800946950912476
    3. ' tmp' → logprob: -3.955094814300537
    4. 'taste' → logprob: -5.955094814300537
    5. 'current' → logprob: -7.080094814300537
    6. 'temp' → logprob: -7.080094814300537
    7. 'the' → logprob: -7.580094814300537
    8. 't' → logprob: -8.205094337463379
    9. 'apple' → logprob: -8.580094337463379
    10. '	tmp' → logprob: -8.705094337463379

Token 574: ' save' (ID: 5093)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04760736599564552
    2. 'taste' → logprob: -3.797607421875
    3. 'save' → logprob: -5.297607421875
    4. 'current' → logprob: -5.422607421875
    5. 'apple' → logprob: -5.422607421875
    6. 'val' → logprob: -5.672607421875
    7. 'temp' → logprob: -5.797607421875
    8. '   ' → logprob: -6.922607421875
    9. 'abs' → logprob: -7.797607421875
    10. 'value' → logprob: -7.922607421875

Token 575: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.49381715059280396
    2. 'avor' → logprob: -2.243817090988159
    3. 'ver' → logprob: -2.743817090988159
    4. 'var' → logprob: -2.868817090988159
    5. 've' → logprob: -3.118817090988159
    6. 'vor' → logprob: -3.618817090988159
    7. 'ave' → logprob: -4.118817329406738
    8. 'value' → logprob: -4.493817329406738
    9. 'v' → logprob: -4.743817329406738
    10. 'uer' → logprob: -4.743817329406738

Token 576: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2470925748348236
    2. ' =' → logprob: -1.747092604637146
    3. '   ' → logprob: -3.6220924854278564
    4. 'tmp' → logprob: -4.4970927238464355
    5. 'act' → logprob: -6.2470927238464355
    6. 'de' → logprob: -6.7470927238464355
    7. 'current' → logprob: -6.9970927238464355
    8. 'curr' → logprob: -7.3720927238464355
    9. ' actuelle' → logprob: -7.8720927238464355
    10. 'cour' → logprob: -7.8720927238464355

Token 577: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08518349379301071
    2. ' l' → logprob: -2.5851833820343018
    3. 'tmp' → logprob: -5.335183620452881
    4. 'abs' → logprob: -7.585183620452881
    5. 'taste' → logprob: -7.960183620452881
    6. ' tmp' → logprob: -8.585183143615723
    7. '(l' → logprob: -9.835183143615723
    8. 'current' → logprob: -10.335183143615723
    9. ' abs' → logprob: -10.335183143615723
    10. ' taste' → logprob: -10.460183143615723

Token 578: ' pomme' (ID: 197262)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03869437426328659
    2. 'tmp' → logprob: -4.163694381713867
    3. 'apple' → logprob: -4.413694381713867
    4. ' l' → logprob: -4.913694381713867
    5. 'i' → logprob: -6.913694381713867
    6. 'abs' → logprob: -7.038694381713867
    7. 'taste' → logprob: -8.538694381713867
    8. 'current' → logprob: -8.913694381713867
    9. ' apple' → logprob: -9.163694381713867
    10. ' i' → logprob: -9.288694381713867

Token 579: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8887456059455872
    2. ' =' → logprob: -1.3887455463409424
    3. '=' → logprob: -1.5137455463409424
    4. 'tmp' → logprob: -2.2637455463409424
    5. 'current' → logprob: -5.2637457847595215
    6. ' tmp' → logprob: -5.8887457847595215
    7. 'curr' → logprob: -6.7637457847595215
    8. 'i' → logprob: -6.8887457847595215
    9. 'cur' → logprob: -7.1387457847595215
    10. 't' → logprob: -7.2637457847595215

Token 580: ' cours' (ID: 10138)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.033825501799583435
    2. ' l' → logprob: -3.533825397491455
    3. 'i' → logprob: -5.908825397491455
    4. ' i' → logprob: -7.283825397491455
    5. 'abs' → logprob: -8.533825874328613
    6. 'tmp' → logprob: -8.533825874328613
    7. 'range' → logprob: -9.283825874328613
    8. ' abs' → logprob: -10.783825874328613
    9. 'temp' → logprob: -10.908825874328613
    10. '   ' → logprob: -10.908825874328613

Token 581: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06081452965736389
    2. 'tmp' → logprob: -3.435814619064331
    3. ' =' → logprob: -4.435814380645752
    4. '=' → logprob: -4.935814380645752
    5. ' tmp' → logprob: -4.935814380645752
    6. '	tmp' → logprob: -8.93581485748291
    7. ',' → logprob: -9.06081485748291
    8. '(tmp' → logprob: -9.18581485748291
    9. '_tmp' → logprob: -9.81081485748291
    10. ':' → logprob: -10.18581485748291

Token 582: ' vér' (ID: 42524)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44904428720474243
    2. 'tmp' → logprob: -1.0740442276000977
    3. 'l' → logprob: -5.074044227600098
    4. ' i' → logprob: -5.199044227600098
    5. 'range' → logprob: -5.574044227600098
    6. ' tmp' → logprob: -6.449044227600098
    7. 'temp' → logprob: -7.199044227600098
    8. 'p' → logprob: -7.949044227600098
    9. '#' → logprob: -8.574044227600098
    10. 'apple' → logprob: -8.699044227600098

Token 583: 'ification' (ID: 3166)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.10004597902297974
    2. 'value' → logprob: -3.600045919418335
    3. 'current' → logprob: -4.350046157836914
    4. 'val' → logprob: -4.600046157836914
    5. '(tmp' → logprob: -4.975046157836914
    6. 'alue' → logprob: -5.100046157836914
    7. ' tmp' → logprob: -5.225046157836914
    8. 'aux' → logprob: -5.350046157836914
    9. '_tmp' → logprob: -5.975046157836914
    10. 'if' → logprob: -6.100046157836914

Token 584: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5322588682174683
    2. 'tmp' → logprob: -0.9072588682174683
    3. ' tmp' → logprob: -5.532258987426758
    4. '=' → logprob: -6.532258987426758
    5. 'taste' → logprob: -7.157258987426758
    6. 'temp' → logprob: -7.407258987426758
    7. '    
' → logprob: -7.407258987426758
    8. ' =' → logprob: -8.032258987426758
    9. '	tmp' → logprob: -8.032258987426758
    10. '
' → logprob: -8.532258987426758

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7374972701072693
    2. 'tmp' → logprob: -0.9874972701072693
    3. ' tmp' → logprob: -2.112497329711914
    4. 'temp' → logprob: -5.112497329711914
    5. ' ' → logprob: -5.862497329711914
    6. '(tmp' → logprob: -6.237497329711914
    7. 'i' → logprob: -6.237497329711914
    8. ' l' → logprob: -6.237497329711914
    9. '(' → logprob: -6.487497329711914
    10. ' (' → logprob: -6.612497329711914

Token 586: ' cmp' (ID: 57822)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.06687179952859879
    2. '   ' → logprob: -2.8168718814849854
    3. ' tmp' → logprob: -5.816871643066406
    4. 'taste' → logprob: -6.816871643066406
    5. 'current' → logprob: -7.691871643066406
    6. 'temp' → logprob: -8.816871643066406
    7. 'apple' → logprob: -9.941871643066406
    8. 't' → logprob: -10.066871643066406
    9. '	tmp' → logprob: -10.316871643066406
    10. 'curr' → logprob: -10.816871643066406

Token 587: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02981436811387539
    2. '=' → logprob: -3.5298144817352295
    3. '_' → logprob: -10.279814720153809
    4. '_t' → logprob: -11.154814720153809
    5. 'apple' → logprob: -12.404814720153809
    6. '_tmp' → logprob: -12.654814720153809
    7. ' ' → logprob: -13.154814720153809
    8. '_val' → logprob: -13.654814720153809
    9. 't' → logprob: -14.279814720153809
    10. '_value' → logprob: -14.779814720153809

Token 588: 'apple' (ID: 34058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2592947483062744
    2. '=' → logprob: -1.5092947483062744
    3. '_' → logprob: -5.759294509887695
    4. 'apple' → logprob: -6.009294509887695
    5. '_t' → logprob: -7.384294509887695
    6. '_value' → logprob: -8.259294509887695
    7. '_val' → logprob: -8.384294509887695
    8. '_tmp' → logprob: -8.509294509887695
    9. 't' → logprob: -9.509294509887695
    10. 'ap' → logprob: -9.634294509887695

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193020701408386
    2. '=' → logprob: -1.5019302368164062
    3. '=l' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '＝' → logprob: -15.626930236816406
    6. ')' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '=
' → logprob: -17.501930236816406
    9. 's' → logprob: -17.876930236816406
    10. ' =
' → logprob: -18.126930236816406

Token 590: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0054126884788274765
    2. ' l' → logprob: -5.255412578582764
    3. 'abs' → logprob: -8.755413055419922
    4. ' abs' → logprob: -11.880413055419922
    5. '   ' → logprob: -12.380413055419922
    6. ' ' → logprob: -12.380413055419922
    7. '	l' → logprob: -12.380413055419922
    8. '  ' → logprob: -14.505413055419922
    9. '(l' → logprob: -14.505413055419922
    10. 'math' → logprob: -15.755413055419922

Token 591: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269569844007492
    2. '+' → logprob: -2.1269569396972656
    3. '+i' → logprob: -10.501956939697266
    4. ' ' → logprob: -14.376956939697266
    5. '<|end|>' → logprob: -15.626956939697266
    6. ' ' → logprob: -15.876956939697266
    7. ' plus' → logprob: -16.126956939697266
    8. '＋' → logprob: -16.251956939697266
    9. ' +
' → logprob: -16.501956939697266
    10. '+l' → logprob: -16.876956939697266

Token 592: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008616461418569088
    2. ' i' → logprob: -4.7586164474487305
    3. ' ' → logprob: -14.25861644744873
    4. '<|end|>' → logprob: -14.63361644744873
    5. '	i' → logprob: -14.75861644744873
    6. '   ' → logprob: -14.88361644744873
    7. '(i' → logprob: -17.133617401123047
    8. '  ' → logprob: -17.508617401123047
    9. '[i' → logprob: -17.508617401123047
    10. '1' → logprob: -17.508617401123047

Token 593: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38688886165618896
    2. '-' → logprob: -1.136888861656189
    3. ' ' → logprob: -11.01188850402832
    4. '<|end|>' → logprob: -14.38688850402832
    5. '   ' → logprob: -15.51188850402832
    6. '1' → logprob: -15.76188850402832
    7. '  ' → logprob: -15.88688850402832
    8. '−' → logprob: -16.63688850402832
    9. '```' → logprob: -17.26188850402832
    10. '    ' → logprob: -17.38688850402832

Token 594: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000386105413781479
    2. ' ' → logprob: -7.8753862380981445
    3. '<|end|>' → logprob: -12.125386238098145
    4. '   ' → logprob: -14.875386238098145
    5. '```' → logprob: -16.125385284423828
    6. '<|end|>' → logprob: -17.000385284423828
    7. '  ' → logprob: -17.000385284423828
    8. '	' → logprob: -18.437885284423828
    9. '１' → logprob: -18.562885284423828
    10. '    ' → logprob: -18.687885284423828

Token 595: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -15.00001335144043
    4. '<|end|>' → logprob: -15.25001335144043
    5. '   ' → logprob: -17.31251335144043
    6. '۱' → logprob: -18.00001335144043
    7. '１' → logprob: -18.00001335144043
    8. '0' → logprob: -18.25001335144043
    9. '`' → logprob: -18.50001335144043
    10. '[' → logprob: -18.56251335144043

Token 596: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11482096463441849
    2. '
' → logprob: -2.239820957183838
    3. ' if' → logprob: -6.989820957183838
    4. '  
' → logprob: -8.114821434020996
    5. 'if' → logprob: -8.239821434020996
    6. '    
' → logprob: -8.239821434020996
    7. '<|end|>' → logprob: -9.614821434020996
    8. '
' → logprob: -9.989821434020996
    9. '   
' → logprob: -10.364821434020996
    10. '  ' → logprob: -10.614821434020996

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011307948443572968
    2. '
' → logprob: -9.500113487243652
    3. 'if' → logprob: -10.375113487243652
    4. '    
' → logprob: -12.250113487243652
    5. ' if' → logprob: -13.250113487243652
    6. '  
' → logprob: -16.000112533569336
    7. '<|end|>' → logprob: -16.500112533569336
    8. '	if' → logprob: -16.750112533569336
    9. '```' → logprob: -17.000112533569336
    10. '   ' → logprob: -17.500112533569336

Token 598: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16048751771450043
    2. '   ' → logprob: -1.9104875326156616
    3. ' if' → logprob: -8.285487174987793
    4. '#' (adapté à ' #') → logprob: -12.410487174987793
    5. '
' → logprob: -13.035487174987793
    6. '	if' → logprob: -13.410487174987793
    7. '```' → logprob: -13.660487174987793
    8. ' ' → logprob: -14.410487174987793
    9. '    
' → logprob: -14.535487174987793
    10. '  ' → logprob: -15.160487174987793

Token 599: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.52788148727268e-05
    2. '   ' → logprob: -9.875064849853516
    3. ' if' → logprob: -11.500064849853516
    4. '#' → logprob: -12.625064849853516
    5. '
' → logprob: -15.875064849853516
    6. '```' → logprob: -16.500064849853516
    7. ' ' → logprob: -16.625064849853516
    8. 'If' → logprob: -17.250064849853516
    9. '	if' → logprob: -17.500064849853516
    10. 'ifs' → logprob: -18.750064849853516

Token 600: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.023946397006511688
    2. ' abs' → logprob: -3.7739462852478027
    3. 'math' → logprob: -7.773946285247803
    4. '   ' → logprob: -8.273946762084961
    5. '(abs' → logprob: -11.148946762084961
    6. ' math' → logprob: -12.273946762084961
    7. ' ' → logprob: -12.523946762084961
    8. '  ' → logprob: -13.523946762084961
    9. '    ' → logprob: -14.273946762084961
    10. 'cmp' → logprob: -16.02394676208496

Token 601: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0010980613296851516
    2. ' abs' → logprob: -7.501098155975342
    3. 'math' → logprob: -7.626098155975342
    4. 'cmp' → logprob: -9.876097679138184
    5. '(abs' → logprob: -12.876097679138184
    6. 'import' → logprob: -13.501097679138184
    7. '   ' → logprob: -14.376097679138184
    8. ' math' → logprob: -15.126097679138184
    9. '#' → logprob: -15.251097679138184
    10. 'tmp' → logprob: -15.501097679138184

Token 602: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.18458054959774017
    2. ' abs' → logprob: -1.8095805644989014
    3. '   ' → logprob: -5.434580326080322
    4. '(abs' → logprob: -8.05958080291748
    5. '==' → logprob: -10.05958080291748
    6. '=' → logprob: -10.68458080291748
    7. 'import' → logprob: -11.30958080291748
    8. '>' → logprob: -11.30958080291748
    9. '_abs' → logprob: -11.30958080291748
    10. '    ' → logprob: -12.05958080291748

Token 603: 'ue' (ID: 466)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.8531234860420227
    2. '(c' → logprob: -1.353123426437378
    3. '(' → logprob: -1.478123426437378
    4. 'ol' → logprob: -3.478123426437378
    5. '(val' → logprob: -4.978123664855957
    6. '(tmp' → logprob: -5.478123664855957
    7. '(value' → logprob: -5.478123664855957
    8. 'ute' → logprob: -5.478123664855957
    9. '(diff' → logprob: -5.478123664855957
    10. 'oute' → logprob: -5.603123664855957

Token 604: ' de' (ID: 334)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.18391259014606476
    2. '(c' → logprob: -1.8089126348495483
    3. '(' → logprob: -5.808912754058838
    4. '   ' → logprob: -7.433912754058838
    5. '(tmp' → logprob: -9.05891227722168
    6. 'abs' → logprob: -9.05891227722168
    7. ' (' → logprob: -9.43391227722168
    8. ' abs' → logprob: -9.93391227722168
    9. 'cmp' → logprob: -10.18391227722168
    10. '(calc' → logprob: -10.43391227722168

Token 605: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.00019710339256562293
    2. ' cmp' → logprob: -8.750197410583496
    3. '   ' → logprob: -11.000197410583496
    4. 'abs' → logprob: -11.000197410583496
    5. 'cm' → logprob: -13.750197410583496
    6. '(c' → logprob: -14.500197410583496
    7. '```' → logprob: -14.500197410583496
    8. 'tmp' → logprob: -14.625197410583496
    9. '(abs' → logprob: -15.000197410583496
    10. ' ' → logprob: -15.125197410583496

Token 606: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015088039450347424
    2. '(' → logprob: -4.265088081359863
    3. '(_' → logprob: -7.265088081359863
    4. '(c' → logprob: -9.015088081359863
    5. 'e' → logprob: -10.265088081359863
    6. '-' → logprob: -11.515088081359863
    7. ')' → logprob: -11.890088081359863
    8. ')_' → logprob: -12.140088081359863
    9. 'apple' → logprob: -12.390088081359863
    10. '_cmp' → logprob: -12.390088081359863

Token 607: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.47426533699035645
    2. '_' → logprob: -0.9742653369903564
    3. 'cmp' → logprob: -10.224265098571777
    4. 'Apple' → logprob: -10.349265098571777
    5. '.apple' → logprob: -11.099265098571777
    6. ' apple' → logprob: -11.099265098571777
    7. '```' → logprob: -11.099265098571777
    8. 'appel' → logprob: -11.474265098571777
    9. '/apple' → logprob: -12.474265098571777
    10. '-' → logprob: -12.724265098571777

Token 608: ' (' (ID: 350)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.166212260723114
    2. ' <' → logprob: -1.9162123203277588
    3. ' is' → logprob: -6.16621208190918
    4. '>' → logprob: -6.79121208190918
    5. 'abs' → logprob: -7.16621208190918
    6. ' ' → logprob: -7.91621208190918
    7. ' <=' → logprob: -8.04121208190918
    8. ')' → logprob: -8.29121208190918
    9. '   ' → logprob: -8.29121208190918
    10. ' >' → logprob: -8.29121208190918

Token 609: 'la' (ID: 1675)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2908058762550354
    2. 'cmp' → logprob: -1.7908058166503906
    3. ')' → logprob: -2.9158058166503906
    4. ' abs' → logprob: -3.6658058166503906
    5. '   ' → logprob: -6.165805816650391
    6. ' cmp' → logprob: -6.290805816650391
    7. ' )' → logprob: -7.290805816650391
    8. ' ' → logprob: -8.29080581665039
    9. '(abs' → logprob: -8.29080581665039
    10. '    ' → logprob: -8.66580581665039

Token 610: ' save' (ID: 5093)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.006899131927639246
    2. 'cmp' → logprob: -5.631899356842041
    3. ' abs' → logprob: -6.131899356842041
    4. 'val' → logprob: -7.131899356842041
    5. 'tmp' → logprob: -9.131898880004883
    6. ')' → logprob: -9.131898880004883
    7. '```' → logprob: -10.006898880004883
    8. '(abs' → logprob: -10.756898880004883
    9. ' cmp' → logprob: -11.631898880004883
    10. 'value' → logprob: -12.131898880004883

Token 611: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.3058348298072815
    2. 'ale' → logprob: -2.0558347702026367
    3. 'val' → logprob: -3.3058347702026367
    4. 'alue' → logprob: -3.8058347702026367
    5. 'abs' → logprob: -3.8058347702026367
    6. 'ule' → logprob: -4.430834770202637
    7. '_abs' → logprob: -4.430834770202637
    8. '_value' → logprob: -5.055834770202637
    9. 'value' → logprob: -5.555834770202637
    10. '_val' → logprob: -5.680834770202637

Token 612: ' candidate' (ID: 17098)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007449733559042215
    2. '   ' → logprob: -6.382449626922607
    3. '#' → logprob: -6.507449626922607
    4. 'tmp' → logprob: -6.882449626922607
    5. 'cmp' → logprob: -7.257449626922607
    6. ')>' → logprob: -7.757449626922607
    7. ' )' → logprob: -7.757449626922607
    8. '(tmp' → logprob: -8.007450103759766
    9. ')<' → logprob: -8.632450103759766
    10. ' est' → logprob: -9.382450103759766

Token 613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001995846861973405
    2. ' )' → logprob: -7.126996040344238
    3. ' est' → logprob: -7.376996040344238
    4. '   ' → logprob: -8.751996040344238
    5. '#' → logprob: -8.876996040344238
    6. 'est' → logprob: -9.501996040344238
    7. ' is' → logprob: -10.376996040344238
    8. ')<' → logprob: -10.501996040344238
    9. ' ' → logprob: -10.626996040344238
    10. 'tmp' → logprob: -11.126996040344238

Token 614: ' est' (ID: 893)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1130058690905571
    2. ' <' → logprob: -2.4880058765411377
    3. 'abs' → logprob: -4.988005638122559
    4. ' is' → logprob: -5.238005638122559
    5. '>' → logprob: -5.738005638122559
    6. ')' → logprob: -5.738005638122559
    7. '   ' → logprob: -6.363005638122559
    8. '#' → logprob: -7.238005638122559
    9. '<=' → logprob: -7.363005638122559
    10. ' abs' → logprob: -7.738005638122559

Token 615: ' plus' (ID: 2932)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12330126017332077
    2. ' <' → logprob: -2.4983012676239014
    3. ' less' → logprob: -4.123301029205322
    4. ' abs' → logprob: -5.248301029205322
    5. 'abs' → logprob: -5.748301029205322
    6. ' strictly' → logprob: -6.248301029205322
    7. ' inf' → logprob: -7.248301029205322
    8. 'less' → logprob: -7.248301029205322
    9. ' moins' → logprob: -7.373301029205322
    10. ')' → logprob: -7.373301029205322

Token 616: ' petite' (ID: 28119)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.011976207606494427
    2. ' <' → logprob: -4.88697624206543
    3. 'small' → logprob: -6.76197624206543
    4. 'abs' → logprob: -7.76197624206543
    5. 'pet' → logprob: -7.88697624206543
    6. 'inf' → logprob: -8.01197624206543
    7. '<
' → logprob: -8.51197624206543
    8. ' faible' → logprob: -8.51197624206543
    9. 'moins' → logprob: -8.51197624206543
    10. 'min' → logprob: -8.88697624206543

Token 617: ' ou' (ID: 2031)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5814186334609985
    2. '<' → logprob: -0.8314186334609985
    3. ',' → logprob: -7.206418514251709
    4. ')' → logprob: -7.331418514251709
    5. ' ' → logprob: -7.706418514251709
    6. ' than' → logprob: -7.831418514251709
    7. '   ' → logprob: -7.956418514251709
    8. '  ' → logprob: -7.956418514251709
    9. 'abs' → logprob: -8.081418991088867
    10. '<|end|>' → logprob: -8.206418991088867

Token 618: ' ég' (ID: 33150)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02713145688176155
    2. ' abs' → logprob: -3.6521315574645996
    3. '<' → logprob: -7.6521315574646
    4. '(abs' → logprob: -9.652131080627441
    5. ')' → logprob: -9.777131080627441
    6. '<|end|>' → logprob: -9.902131080627441
    7. 'math' → logprob: -10.152131080627441
    8. ' ' → logprob: -10.277131080627441
    9. '   ' → logprob: -10.402131080627441
    10. '```' → logprob: -10.777131080627441

Token 619: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -1.4855663721391466e-05
    2. 'ule' → logprob: -12.375015258789062
    3. 'al' → logprob: -12.500015258789062
    4. 'ales' → logprob: -13.750015258789062
    5. 'le' → logprob: -14.125015258789062
    6. 'ar' → logprob: -14.125015258789062
    7. 'uale' → logprob: -14.750015258789062
    8. 'arde' → logprob: -15.000015258789062
    9. 'aule' → logprob: -15.125015258789062
    10. 'rale' → logprob: -15.125015258789062

Token 620: ' que' (ID: 661)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6332408785820007
    2. ' à' → logprob: -1.2582409381866455
    3. '(abs' → logprob: -2.7582409381866455
    4. '   ' → logprob: -3.1332409381866455
    5. ' abs' → logprob: -3.1332409381866455
    6. 'à' → logprob: -4.008240699768066
    7. '(' → logprob: -5.133240699768066
    8. ',' → logprob: -5.883240699768066
    9. ' ' → logprob: -6.008240699768066
    10. '    ' → logprob: -6.633240699768066

Token 621: ' celle' (ID: 31790)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.08582000434398651
    2. ' abs' → logprob: -2.710819959640503
    3. '   ' → logprob: -4.960820198059082
    4. 'eat' → logprob: -5.585820198059082
    5. 'la' → logprob: -5.710820198059082
    6. ' la' → logprob: -7.585820198059082
    7. ' celle' → logprob: -7.960820198059082
    8. ' eat' → logprob: -8.210820198059082
    9. '(abs' → logprob: -8.710820198059082
    10. 'the' → logprob: -8.710820198059082

Token 622: ' de' (ID: 334)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.4014744758605957
    2. 'abs' → logprob: -1.4014744758605957
    3. '(' → logprob: -3.4014744758605957
    4. ' de' → logprob: -3.7764744758605957
    5. '   ' → logprob: -4.401474475860596
    6. 'de' → logprob: -5.026474475860596
    7. 'eat' → logprob: -5.276474475860596
    8. ' abs' → logprob: -6.526474475860596
    9. ' ' → logprob: -7.026474475860596
    10. '    ' → logprob: -8.526473999023438

Token 623: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.0058755832724273205
    2. ' eat' → logprob: -5.255875587463379
    3. 'abs' → logprob: -7.380875587463379
    4. ' abs' → logprob: -12.130875587463379
    5. 'l' → logprob: -12.505875587463379
    6. '   ' → logprob: -13.130875587463379
    7. ' ' → logprob: -13.380875587463379
    8. 'act' → logprob: -13.755875587463379
    9. '```' → logprob: -13.755875587463379
    10. '  ' → logprob: -14.380875587463379

Token 624: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.1008713702030946e-06
    2. 'apple' → logprob: -13.375001907348633
    3. ' _' → logprob: -15.125001907348633
    4. 'Apple' → logprob: -16.875001907348633
    5. '_-' → logprob: -17.250001907348633
    6. '__' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '_app' → logprob: -18.250001907348633
    10. '_a' → logprob: -18.375001907348633

Token 625: 'apple' (ID: 34058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2812645435333252
    2. 'apple' → logprob: -1.4062645435333252
    3. ' _' → logprob: -9.906264305114746
    4. ' apple' → logprob: -10.156264305114746
    5. 'Apple' → logprob: -12.156264305114746
    6. '_ap' → logprob: -12.531264305114746
    7. ' ' → logprob: -12.781264305114746
    8. '_app' → logprob: -12.906264305114746
    9. '_p' → logprob: -13.656264305114746
    10. '.apple' → logprob: -13.656264305114746

Token 626: ',
' (ID: 412)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7828246355056763
    2. ':' → logprob: -1.5328246355056763
    3. '   ' → logprob: -1.5328246355056763
    4. 'and' → logprob: -2.6578245162963867
    5. ' or' → logprob: -3.5328245162963867
    6. ')' → logprob: -5.657824516296387
    7. ',' → logprob: -6.032824516296387
    8. ' if' → logprob: -6.282824516296387
    9. 'if' → logprob: -7.032824516296387
    10. '):' → logprob: -7.157824516296387

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2849714457988739
    2. 'if' → logprob: -2.1599714756011963
    3. ' if' → logprob: -2.4099714756011963
    4. '       ' → logprob: -3.9099714756011963
    5. ':' → logprob: -4.909971237182617
    6. '    ' → logprob: -5.659971237182617
    7. ' eat' → logprob: -6.409971237182617
    8. 'eat' → logprob: -6.409971237182617
    9. ' or' → logprob: -6.534971237182617
    10. 'et' → logprob: -6.784971237182617

Token 628: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.826988935470581
    2. 'if' → logprob: -1.201988935470581
    3. '   ' → logprob: -1.451988935470581
    4. '       ' → logprob: -3.701988935470581
    5. '    ' → logprob: -6.07698917388916
    6. 'abs' → logprob: -7.57698917388916
    7. ' abs' → logprob: -9.45198917388916
    8. '  ' → logprob: -9.70198917388916
    9. ' or' → logprob: -9.82698917388916
    10. ' and' → logprob: -10.07698917388916

Token 629: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.784418523311615
    2. 'abs' → logprob: -1.6594185829162598
    3. ' if' → logprob: -1.7844185829162598
    4. 'if' → logprob: -2.1594185829162598
    5. ' abs' → logprob: -3.0344185829162598
    6. ' eat' → logprob: -4.78441858291626
    7. 'eat' → logprob: -5.03441858291626
    8. '       ' → logprob: -5.40941858291626
    9. ' cmp' → logprob: -7.03441858291626
    10. '    ' → logprob: -7.03441858291626

Token 630: ' met' (ID: 1421)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.39361894130706787
    2. ' eat' → logprob: -1.1436189413070679
    3. '   ' → logprob: -5.018619060516357
    4. 'abs' → logprob: -10.0186185836792
    5. '    ' → logprob: -10.8936185836792
    6. '       ' → logprob: -11.0186185836792
    7. 'e' → logprob: -11.8936185836792
    8. ' ' → logprob: -12.3936185836792
    9. '
' → logprob: -12.5186185836792
    10. '  ' → logprob: -12.7686185836792

Token 631: ' à' (ID: 1221)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.6512318849563599
    2. ' eat' → logprob: -1.6512318849563599
    3. '_' → logprob: -2.0262317657470703
    4. 'space' → logprob: -2.5262317657470703
    5. '   ' → logprob: -3.2762317657470703
    6. '_e' → logprob: -4.27623176574707
    7. '=' → logprob: -4.90123176574707
    8. '_space' → logprob: -5.77623176574707
    9. ' ' → logprob: -6.02623176574707
    10. '    ' → logprob: -6.40123176574707

Token 632: ' jour' (ID: 8379)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.45721307396888733
    2. 'jour' → logprob: -1.207213044166565
    3. 'eat' → logprob: -3.0822131633758545
    4. 'day' → logprob: -4.332212924957275
    5. ' jour' → logprob: -5.082212924957275
    6. 'c' → logprob: -7.457212924957275
    7. 'jours' → logprob: -7.832212924957275
    8. 'abs' → logprob: -8.457213401794434
    9. 'e' → logprob: -8.707213401794434
    10. '```' → logprob: -8.832213401794434

Token 633: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.52825927734375
    2. ' eat' → logprob: -0.90325927734375
    3. '   ' → logprob: -5.27825927734375
    4. '    ' → logprob: -11.90325927734375
    5. ' ' → logprob: -12.52825927734375
    6. '       ' → logprob: -13.02825927734375
    7. '  ' → logprob: -13.02825927734375
    8. '
' → logprob: -13.27825927734375
    9. 'e' → logprob: -14.02825927734375
    10. '	e' → logprob: -14.15325927734375

Token 634: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'apple' → logprob: -16.5
    3. '_app' → logprob: -18.0
    4. ' _' → logprob: -18.25
    5. 'Apple' → logprob: -18.25
    6. '\' → logprob: -19.0
    7. '_e' → logprob: -19.375
    8. '_token' → logprob: -19.5
    9. '‌' → logprob: -19.625
    10. '_ap' → logprob: -19.625

Token 635: 'apple' (ID: 34058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9146995327901095e-05
    2. 'apple' → logprob: -10.875019073486328
    3. 'Apple' → logprob: -16.375019073486328
    4. '_app' → logprob: -16.875019073486328
    5. ' apple' → logprob: -18.500019073486328
    6. '_ap' → logprob: -18.500019073486328
    7. '\' → logprob: -19.125019073486328
    8. '.apple' → logprob: -19.625019073486328
    9. ' _' → logprob: -20.375019073486328
    10. '/apple' → logprob: -20.500019073486328

Token 636: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3877304494380951
    2. '=' → logprob: -1.1377304792404175
    3. '   ' → logprob: -7.137730598449707
    4. '=c' → logprob: -10.012730598449707
    5. ',' → logprob: -12.762730598449707
    6. '    ' → logprob: -12.887730598449707
    7. ' if' → logprob: -12.887730598449707
    8. '=
' → logprob: -13.137730598449707
    9. 'if' → logprob: -13.262730598449707
    10. ' =
' → logprob: -13.762730598449707

Token 637: ' car' (ID: 1669)
  Prédit: ' cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cmp' → logprob: -0.2640966773033142
    2. 'cmp' → logprob: -1.514096736907959
    3. '   ' → logprob: -4.889096736907959
    4. '    ' → logprob: -5.514096736907959
    5. '_cmp' → logprob: -8.7640962600708
    6. ' =' → logprob: -8.8890962600708
    7. '=' → logprob: -9.2640962600708
    8. ' ' → logprob: -9.8890962600708
    9. '  ' → logprob: -11.2640962600708
    10. '    
' → logprob: -11.3890962600708

Token 638: ' on' (ID: 402)
  Prédit: ' cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cmp' → logprob: -0.016315989196300507
    2. ' abs' → logprob: -4.766315937042236
    3. 'cmp' → logprob: -4.891315937042236
    4. 'abs' → logprob: -9.266316413879395
    5. ' ' → logprob: -10.891316413879395
    6. '   ' → logprob: -11.016316413879395
    7. '_cmp' → logprob: -11.641316413879395
    8. ' la' → logprob: -12.141316413879395
    9. '  ' → logprob: -12.266316413879395
    10. ' ' → logprob: -12.641316413879395

Token 639: ' préfère' (ID: 141784)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4097021818161011
    2. ' abs' → logprob: -2.4097023010253906
    3. 've' → logprob: -2.5347023010253906
    4. ' veut' → logprob: -2.7847023010253906
    5. 'a' → logprob: -3.1597023010253906
    6. ' a' → logprob: -4.284702301025391
    7. ' préfère' → logprob: -4.409702301025391
    8. ' chois' → logprob: -5.159702301025391
    9. 'veux' → logprob: -5.284702301025391
    10. 'va' → logprob: -5.784702301025391

Token 640: ' supprimer' (ID: 119553)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.01177346333861351
    2. ' cmp' → logprob: -4.511773586273193
    3. 'abs' → logprob: -7.511773586273193
    4. '   ' → logprob: -9.136773109436035
    5. ' abs' → logprob: -10.636773109436035
    6. '_cmp' → logprob: -11.386773109436035
    7. ' ' → logprob: -12.386773109436035
    8. 'c' → logprob: -12.386773109436035
    9. 'la' → logprob: -12.511773109436035
    10. 'eat' → logprob: -13.011773109436035

Token 641: ' une' (ID: 2463)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.4740886688232422
    2. ' cmp' → logprob: -0.9740886688232422
    3. '_cmp' → logprob: -12.224088668823242
    4. ' ' → logprob: -12.974088668823242
    5. '   ' → logprob: -12.974088668823242
    6. '    ' → logprob: -14.974088668823242
    7. ' ' → logprob: -14.974088668823242
    8. 'tmp' → logprob: -15.474088668823242
    9. 'cpy' → logprob: -15.599088668823242
    10. '	c' → logprob: -16.099088668823242

Token 642: ' pomme' (ID: 197262)
  Prédit: ' pomme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pomme' → logprob: -0.6119651198387146
    2. 'cmp' → logprob: -1.1119651794433594
    3. ' cmp' → logprob: -2.8619651794433594
    4. 'apple' → logprob: -2.9869651794433594
    5. 'p' → logprob: -4.861965179443359
    6. 'pom' → logprob: -5.236965179443359
    7. 'abs' → logprob: -6.111965179443359
    8. '   ' → logprob: -6.486965179443359
    9. ' apple' → logprob: -7.361965179443359
    10. ' p' → logprob: -7.861965179443359

Token 643: ' dont' (ID: 11562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2863451838493347
    2. '=' → logprob: -1.4113452434539795
    3. '   ' → logprob: -5.6613450050354
    4. ' cmp' → logprob: -7.4113450050354
    5. 'cmp' → logprob: -7.6613450050354
    6. '=c' → logprob: -8.661345481872559
    7. ' ' → logprob: -8.786345481872559
    8. ' if' → logprob: -9.286345481872559
    9. ',' → logprob: -10.411345481872559
    10. '=cut' → logprob: -10.786345481872559

Token 644: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.006291368044912815
    2. ' abs' → logprob: -5.381291389465332
    3. 'la' → logprob: -7.006291389465332
    4. 'l' → logprob: -8.256291389465332
    5. '(abs' → logprob: -8.756291389465332
    6. 'cmp' → logprob: -8.881291389465332
    7. '   ' → logprob: -8.881291389465332
    8. 'math' → logprob: -10.756291389465332
    9. ' la' → logprob: -11.131291389465332
    10. ' ' → logprob: -11.506291389465332

Token 645: ' save' (ID: 5093)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.35515034198760986
    2. 'val' → logprob: -1.3551503419876099
    3. ' abs' → logprob: -3.3551502227783203
    4. ' valeur' → logprob: -5.73015022277832
    5. 'save' → logprob: -6.60515022277832
    6. ' save' → logprob: -7.48015022277832
    7. ' val' → logprob: -7.48015022277832
    8. 'taste' → logprob: -9.85515022277832
    9. '(abs' → logprob: -9.85515022277832
    10. ' ' → logprob: -9.98015022277832

Token 646: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0003433296224102378
    2. 'eur' → logprob: -9.125343322753906
    3. 'val' → logprob: -9.625343322753906
    4. 'ure' → logprob: -10.000343322753906
    5. 'or' → logprob: -10.500343322753906
    6. 'leur' → logprob: -10.875343322753906
    7. 'value' → logprob: -11.125343322753906
    8. ' valeur' → logprob: -11.625343322753906
    9. 'e' → logprob: -12.250343322753906
    10. 've' → logprob: -12.500343322753906

Token 647: ' est' (ID: 893)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.38562965393066406
    2. ' abs' → logprob: -1.510629653930664
    3. ' est' → logprob: -2.510629653930664
    4. 'est' → logprob: -4.635629653930664
    5. ' is' → logprob: -5.885629653930664
    6. '(abs' → logprob: -6.385629653930664
    7. '_abs' → logprob: -7.010629653930664
    8. ' a' → logprob: -7.635629653930664
    9. '   ' → logprob: -8.010629653930664
    10. ' ' → logprob: -8.135629653930664

Token 648: ' plus' (ID: 2932)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.018347177654504776
    2. 'plus' → logprob: -4.518347263336182
    3. ' abs' → logprob: -5.893347263336182
    4. 'cmp' → logprob: -6.393347263336182
    5. 'moins' → logprob: -6.518347263336182
    6. '   ' → logprob: -7.018347263336182
    7. ' plus' → logprob: -8.393346786499023
    8. 'import' → logprob: -9.518346786499023
    9. '(abs' → logprob: -10.143346786499023
    10. 'au' → logprob: -10.643346786499023

Token 649: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.01609959453344345
    2. ' proche' → logprob: -5.016099452972412
    3. 'près' → logprob: -5.766099452972412
    4. 'import' → logprob: -6.391099452972412
    5. '```' → logprob: -6.766099452972412
    6. 'abs' → logprob: -7.141099452972412
    7. 'pr' → logprob: -7.891099452972412
    8. 'pet' → logprob: -7.891099452972412
    9. 'close' → logprob: -8.01609992980957
    10. 'prox' → logprob: -8.14109992980957

Token 650: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6965638399124146
    2. 'de' → logprob: -0.8215638399124146
    3. '=' → logprob: -3.071563720703125
    4. ' =' → logprob: -5.071563720703125
    5. '   ' → logprob: -5.946563720703125
    6. ' du' → logprob: -6.196563720703125
    7. ' ' → logprob: -6.446563720703125
    8. 'du' → logprob: -6.821563720703125
    9. '0' → logprob: -7.071563720703125
    10. '(' → logprob: -7.696563720703125

Token 651: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023153705522418022
    2. ' ' → logprob: -4.023153781890869
    3. ' zéro' → logprob: -5.523153781890869
    4. ' zero' → logprob: -7.523153781890869
    5. 'zero' → logprob: -7.773153781890869
    6. 'z' → logprob: -10.648153305053711
    7. ' z' → logprob: -11.648153305053711
    8. ' صفر' → logprob: -14.273153305053711
    9. ' cero' → logprob: -14.398153305053711
    10. 'l' → logprob: -14.523153305053711

Token 652: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14674153923988342
    2. ':' → logprob: -2.1467416286468506
    3. ' and' → logprob: -5.0217413902282715
    4. 'and' → logprob: -5.7717413902282715
    5. '       ' → logprob: -5.8967413902282715
    6. ' :' → logprob: -6.5217413902282715
    7. ' or' → logprob: -6.7717413902282715
    8. ',' → logprob: -6.8967413902282715
    9. ' if' → logprob: -6.8967413902282715
    10. ':
' → logprob: -7.0217413902282715

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09306822717189789
    2. ' if' → logprob: -2.5930681228637695
    3. 'if' → logprob: -4.5930681228637695
    4. '       ' → logprob: -5.9680681228637695
    5. '    ' → logprob: -8.84306812286377
    6. '  
' → logprob: -8.84306812286377
    7. '	if' → logprob: -8.96806812286377
    8. ':' → logprob: -9.09306812286377
    9. '[' → logprob: -9.09306812286377
    10. 'eat' → logprob: -9.09306812286377

Token 654: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5282766819000244
    2. ' if' → logprob: -1.2782766819000244
    3. 'if' (adapté à ' if') → logprob: -2.0282766819000244
    4. '	if' → logprob: -8.153276443481445
    5. '       ' → logprob: -12.153276443481445
    6. '   ' → logprob: -13.403276443481445
    7. '  ' → logprob: -13.653276443481445
    8. ' ' → logprob: -13.778276443481445
    9. '    
' → logprob: -13.778276443481445
    10. '    ' → logprob: -14.028276443481445

Token 655: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.12694920599460602
    2. 'abs' → logprob: -2.1269493103027344
    3. '(abs' → logprob: -11.251949310302734
    4. '   ' → logprob: -11.876949310302734
    5. ' math' → logprob: -14.126949310302734
    6. ' ' → logprob: -15.501949310302734
    7. 'math' → logprob: -15.626949310302734
    8. '_abs' → logprob: -16.876949310302734
    9. '  ' → logprob: -17.126949310302734
    10. '.abs' → logprob: -17.501949310302734

Token 656: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.16031165421009064
    2. '(' → logprob: -1.9103116989135742
    3. '(e' → logprob: -9.535311698913574
    4. '(cm' → logprob: -12.660311698913574
    5. '(
' → logprob: -12.910311698913574
    6. '(comp' → logprob: -13.285311698913574
    7. '(cnt' → logprob: -13.410311698913574
    8. '(calc' → logprob: -13.910311698913574
    9. '(i' → logprob: -14.160311698913574
    10. '(eval' → logprob: -14.285311698913574

Token 657: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -5.4192871175473556e-05
    2. 'omp' → logprob: -11.250054359436035
    3. 'cmp' → logprob: -11.500054359436035
    4. '_' → logprob: -11.625054359436035
    5. '(mp' → logprob: -12.000054359436035
    6. 'p' → logprob: -12.125054359436035
    7. '(c' → logprob: -12.125054359436035
    8. '(' → logprob: -13.125054359436035
    9. '_mp' → logprob: -14.625054359436035
    10. 'm' → logprob: -14.750054359436035

Token 658: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0280383548888494e-06
    2. ')_' → logprob: -14.500000953674316
    3. '-' → logprob: -16.375001907348633
    4. '(' → logprob: -16.500001907348633
    5. 'apple' → logprob: -16.750001907348633
    6. ')' → logprob: -16.875001907348633
    7. '[' → logprob: -17.375001907348633
    8. '_)' → logprob: -17.625001907348633
    9. '(_' → logprob: -17.625001907348633
    10. '_app' → logprob: -17.750001907348633

Token 659: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.1602357029914856
    2. '_' → logprob: -1.9102356433868408
    3. 'Apple' → logprob: -11.660235404968262
    4. ' apple' → logprob: -13.410235404968262
    5. '.apple' → logprob: -14.035235404968262
    6. '/apple' → logprob: -15.785235404968262
    7. '_app' → logprob: -16.660236358642578
    8. ')' → logprob: -16.910236358642578
    9. '_ap' → logprob: -17.035236358642578
    10. '-' → logprob: -17.285236358642578

Token 660: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003961185284424573
    2. ')<=' → logprob: -8.125395774841309
    3. ')<' → logprob: -10.000395774841309
    4. ' )' → logprob: -10.000395774841309
    5. '<=' → logprob: -11.875395774841309
    6. ' <=' → logprob: -13.875395774841309
    7. '<' → logprob: -14.250395774841309
    8. '   ' → logprob: -15.875395774841309
    9. '）' → logprob: -16.500396728515625
    10. '')' → logprob: -17.000396728515625

Token 661: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6345562934875488
    2. '<=' → logprob: -0.7595562934875488
    3. '<' → logprob: -6.509556293487549
    4. ' <' → logprob: -7.759556293487549
    5. ')<=' → logprob: -10.63455581665039
    6. ')' → logprob: -11.88455581665039
    7. ' ' → logprob: -12.75955581665039
    8. '   ' → logprob: -13.25955581665039
    9. '=' → logprob: -14.25955581665039
    10. ' <=",' → logprob: -14.50955581665039

Token 662: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16022665798664093
    2. ' abs' → logprob: -1.9102267026901245
    3. '   ' → logprob: -13.285226821899414
    4. ' ' → logprob: -14.535226821899414
    5. '  ' → logprob: -15.910226821899414
    6. '(abs' → logprob: -16.035226821899414
    7. '    ' → logprob: -16.785226821899414
    8. '       ' → logprob: -18.410226821899414
    9. '
' → logprob: -18.535226821899414
    10. ' ' → logprob: -18.660226821899414

Token 663: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00044711565715260804
    2. 'eat' → logprob: -7.7504472732543945
    3. 'e' → logprob: -11.125447273254395
    4. '(' → logprob: -13.500447273254395
    5. ' eat' → logprob: -15.250447273254395
    6. '	e' → logprob: -16.875446319580078
    7. '(
' → logprob: -18.000446319580078
    8. '(c' → logprob: -18.500446319580078
    9. 'Eat' → logprob: -18.750446319580078
    10. ',e' → logprob: -19.625446319580078

Token 664: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00104614719748497
    2. 'eat' → logprob: -6.876046180725098
    3. '_at' → logprob: -12.001046180725098
    4. '_' → logprob: -12.751046180725098
    5. 'ат' → logprob: -13.126046180725098
    6. '(' → logprob: -14.876046180725098
    7. ')' → logprob: -15.626046180725098
    8. '[' → logprob: -15.876046180725098
    9. ' eat' → logprob: -15.876046180725098
    10. ' at' → logprob: -15.876046180725098

Token 665: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'apple' → logprob: -18.25
    3. '_app' → logprob: -19.375
    4. ' _' → logprob: -20.125
    5. '<|end|>' → logprob: -21.25
    6. 'Apple' → logprob: -21.625
    7. '[' → logprob: -22.0
    8. '_
' → logprob: -22.0
    9. '‌' → logprob: -22.0
    10. '_p' → logprob: -22.125

Token 666: 'apple' (ID: 34058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014166327193379402
    2. 'apple' → logprob: -4.264166355133057
    3. 'Apple' → logprob: -12.889165878295898
    4. '_app' → logprob: -16.1391658782959
    5. '.apple' → logprob: -16.2641658782959
    6. ' apple' → logprob: -16.6391658782959
    7. '_ap' → logprob: -17.6391658782959
    8. 'p' → logprob: -18.2641658782959
    9. 'a' → logprob: -18.5141658782959
    10. 'ap' → logprob: -18.7641658782959

Token 667: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01950194500386715
    2. '):
' → logprob: -4.01950216293335
    3. ' ):' → logprob: -7.64450216293335
    4. ')' → logprob: -7.76950216293335
    5. '   ' → logprob: -8.519501686096191
    6. ':' → logprob: -8.644501686096191
    7. '):
' → logprob: -9.894501686096191
    8. ' ):
' → logprob: -11.394501686096191
    9. '       ' → logprob: -12.019501686096191
    10. '):

' → logprob: -12.769501686096191

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.149051427608356e-05
    2. ' eat' → logprob: -9.750081062316895
    3. 'eat' → logprob: -11.375081062316895
    4. '   ' → logprob: -11.500081062316895
    5. '           ' → logprob: -15.250081062316895
    6. '        
' → logprob: -15.375081062316895
    7. 'e' → logprob: -15.500081062316895
    8. ',' → logprob: -15.875081062316895
    9. '
' → logprob: -15.875081062316895
    10. ':' → logprob: -16.12508201599121

Token 669: ' eat' (ID: 11237)
  Prédit: ' eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eat' → logprob: -0.6256401538848877
    2. '       ' → logprob: -1.1256401538848877
    3. 'eat' (adapté à ' eat') → logprob: -2.0006401538848877
    4. '   ' → logprob: -5.250639915466309
    5. '
' → logprob: -10.250639915466309
    6. '	e' → logprob: -10.750639915466309
    7. '           ' → logprob: -10.875639915466309
    8. 'e' → logprob: -11.625639915466309
    9. ' ' → logprob: -11.625639915466309
    10. '    ' → logprob: -12.250639915466309

Token 670: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_app' → logprob: -19.75
    3. 'apple' → logprob: -20.25
    4. 'Apple' → logprob: -20.75
    5. '_token' → logprob: -21.875
    6. ' _' → logprob: -22.0
    7. '_ap' → logprob: -22.0
    8. '‌' → logprob: -22.375
    9. '_
' → logprob: -22.875
    10. ')_' → logprob: -23.375

Token 671: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0004925066023133695
    2. '_' → logprob: -7.625492572784424
    3. 'Apple' → logprob: -13.500492095947266
    4. 'app' → logprob: -13.625492095947266
    5. 'ap' → logprob: -14.375492095947266
    6. ' apple' → logprob: -15.125492095947266
    7. 'eat' → logprob: -15.125492095947266
    8. 'e' → logprob: -15.750492095947266
    9. 'a' → logprob: -15.750492095947266
    10. '.apple' → logprob: -16.500492095947266

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. '=c' → logprob: -16.77975082397461
    4. '＝' → logprob: -17.90475082397461
    5. ' ' → logprob: -18.27975082397461
    6. ' =
' → logprob: -19.15475082397461
    7. '=com' → logprob: -20.27975082397461
    8. '=cut' → logprob: -20.40475082397461
    9. '=
' → logprob: -21.15475082397461
    10. ' =)' → logprob: -21.15475082397461

Token 673: ' cmp' (ID: 57822)
  Prédit: 'cmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmp' → logprob: -0.02975071594119072
    2. ' cmp' → logprob: -3.5297508239746094
    3. 'cpy' → logprob: -16.02975082397461
    4. '   ' → logprob: -16.52975082397461
    5. '_cmp' → logprob: -17.02975082397461
    6. 'cm' → logprob: -17.52975082397461
    7. 'Cmp' → logprob: -18.15475082397461
    8. 'cmb' → logprob: -18.40475082397461
    9. '	c' → logprob: -18.90475082397461
    10. 'tmp' → logprob: -19.02975082397461

Token 674: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00010127831774298102
    2. 'apple' → logprob: -9.250101089477539
    3. '_app' → logprob: -12.750101089477539
    4. '_ap' → logprob: -13.500101089477539
    5. 'Apple' → logprob: -14.750101089477539
    6. '-' → logprob: -16.75010108947754
    7. '\' → logprob: -17.12510108947754
    8. '.apple' → logprob: -17.12510108947754
    9. 'ap' → logprob: -17.25010108947754
    10. '__' → logprob: -17.50010108947754

Token 675: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.03808428719639778
    2. '_' → logprob: -3.2880842685699463
    3. 'Apple' → logprob: -10.788084030151367
    4. '_app' → logprob: -11.913084030151367
    5. '.apple' → logprob: -12.413084030151367
    6. 'app' → logprob: -12.413084030151367
    7. 'ap' → logprob: -13.413084030151367
    8. '_ap' → logprob: -13.913084030151367
    9. 'appel' → logprob: -13.913084030151367
    10. ' apple' → logprob: -14.038084030151367

Token 676: ' ' (ID: 220)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.09757129102945328
    2. '
' → logprob: -2.84757137298584
    3. 'print' → logprob: -3.47257137298584
    4. '

' → logprob: -5.97257137298584
    5. '#' → logprob: -6.84757137298584
    6. '  
' → logprob: -9.34757137298584
    7. '    
' → logprob: -9.34757137298584
    8. '        
' → logprob: -10.22257137298584
    9. 'all' → logprob: -10.34757137298584
    10. ' 
' → logprob: -10.59757137298584

Token 677: ' #' (ID: 1069)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.447325199842453
    2. '
' → logprob: -1.0723252296447754
    3. '

' → logprob: -4.322325229644775
    4. '#' → logprob: -6.072325229644775
    5. '  
' → logprob: -6.822325229644775
    6. ' act' → logprob: -8.072324752807617
    7. 'print' → logprob: -8.197324752807617
    8. '    
' → logprob: -8.197324752807617
    9. '
' → logprob: -8.697324752807617
    10. ' 
' → logprob: -8.697324752807617

Token 678: ' met' (ID: 1421)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7729427218437195
    2. ' continue' → logprob: -1.2729427814483643
    3. 'pass' → logprob: -2.3979427814483643
    4. 'act' → logprob: -2.5229427814483643
    5. 'n' → logprob: -3.8979427814483643
    6. ' pass' → logprob: -4.022942543029785
    7. 'eat' → logprob: -4.647942543029785
    8. '       ' → logprob: -4.647942543029785
    9. '#' → logprob: -5.147942543029785
    10. 'all' → logprob: -5.647942543029785

Token 679: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03239211440086365
    2. 'à' → logprob: -3.5323920249938965
    3. '-à' → logprob: -7.0323920249938965
    4. 'eat' → logprob: -7.1573920249938965
    5. '_' → logprob: -7.9073920249938965
    6. 'À' → logprob: -8.782392501831055
    7. 'a' → logprob: -9.407392501831055
    8. ''à' → logprob: -9.782392501831055
    9. '_a' → logprob: -10.032392501831055
    10. 'space' → logprob: -10.157392501831055

Token 680: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.06427685916423798
    2. 'cmp' → logprob: -3.064276933670044
    3. ' jour' → logprob: -4.564276695251465
    4. 'day' → logprob: -5.939276695251465
    5. 'jours' → logprob: -6.564276695251465
    6. 'jou' → logprob: -7.314276695251465
    7. ' jours' → logprob: -8.814276695251465
    8. 'eat' → logprob: -9.439276695251465
    9. 'Jour' → logprob: -9.689276695251465
    10. '_cmp' → logprob: -11.064276695251465

Token 681: ' la' (ID: 557)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.4122864902019501
    2. 'act' → logprob: -2.2872865200042725
    3. '   ' → logprob: -2.4122865200042725
    4. ' eat' → logprob: -2.7872865200042725
    5. 'continue' → logprob: -3.6622865200042725
    6. ')' → logprob: -3.6622865200042725
    7. '<|end|>' → logprob: -4.537286281585693
    8. '
' → logprob: -5.287286281585693
    9. '```' → logprob: -5.787286281585693
    10. ' continue' → logprob: -6.037286281585693

Token 682: ' pomme' (ID: 197262)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.004495277069509029
    2. ' eat' → logprob: -5.629495143890381
    3. 'cmp' → logprob: -7.129495143890381
    4. 'apple' → logprob: -9.504495620727539
    5. ' cmp' → logprob: -12.504495620727539
    6. 'e' → logprob: -12.879495620727539
    7. 'abs' → logprob: -13.004495620727539
    8. '
' → logprob: -13.129495620727539
    9. 'tmp' → logprob: -14.004495620727539
    10. 'eval' → logprob: -14.004495620727539

Token 683: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 684: ' retirer' (ID: 136490)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.1271053552627563
    2. 'ret' → logprob: -1.1271053552627563
    3. 'sup' → logprob: -1.6271053552627563
    4. 'm' → logprob: -2.377105236053467
    5. 'rej' → logprob: -4.377105236053467
    6. ' retirer' → logprob: -4.377105236053467
    7. 'reten' → logprob: -5.502105236053467
    8. 'ex' → logprob: -5.502105236053467
    9. 'j' → logprob: -5.877105236053467
    10. 'é' → logprob: -5.877105236053467

Token 685: '

' (ID: 279)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0829777643084526
    2. '
' → logprob: -3.082977771759033
    3. '#' → logprob: -4.332977771759033
    4. 'print' → logprob: -4.457977771759033
    5. '

' → logprob: -4.832977771759033
    6. '    
' → logprob: -7.707977771759033
    7. '  
' → logprob: -8.582977294921875
    8. '
' → logprob: -9.332977294921875
    9. ' act' → logprob: -9.582977294921875
    10. '   ' → logprob: -9.832977294921875

Token 686: '       ' (ID: 309)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.005553543101996183
    2. 'print' → logprob: -5.255553722381592
    3. '
' → logprob: -8.380553245544434
    4. 'all' → logprob: -10.255553245544434
    5. '#' → logprob: -10.380553245544434
    6. '

' → logprob: -11.755553245544434
    7. ' act' → logprob: -12.880553245544434
    8. '    
' → logprob: -13.130553245544434
    9. '(act' → logprob: -13.130553245544434
    10. 'for' → logprob: -13.255553245544434

Token 687: ' #' (ID: 1069)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.00388011964969337
    2. '
' → logprob: -6.378880023956299
    3. 'i' → logprob: -7.003880023956299
    4. '   ' → logprob: -7.253880023956299
    5. ' act' → logprob: -9.003880500793457
    6. 'index' → logprob: -9.128880500793457
    7. 'eat' → logprob: -9.503880500793457
    8. '#' (adapté à ' #') → logprob: -9.878880500793457
    9. 'idx' → logprob: -10.378880500793457
    10. 'all' → logprob: -10.503880500793457

Token 688: ' Cal' (ID: 4453)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.002975322073325515
    2. 'pass' → logprob: -7.2529754638671875
    3. '   ' → logprob: -7.5029754638671875
    4. 'i' → logprob: -7.5029754638671875
    5. ' act' → logprob: -7.6279754638671875
    6. 'eat' → logprob: -8.752975463867188
    7. 'index' → logprob: -9.127975463867188
    8. '#' → logprob: -9.252975463867188
    9. '
' → logprob: -9.502975463867188
    10. 'continue' → logprob: -9.627975463867188

Token 689: 'cule' (ID: 45017)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.024752311408519745
    2. 'all' → logprob: -4.399752140045166
    3. '   ' → logprob: -4.899752140045166
    4. '#' → logprob: -6.149752140045166
    5. 'cule' → logprob: -7.399752140045166
    6. 'cul' → logprob: -7.524752140045166
    7. '       ' → logprob: -8.024752616882324
    8. 't' → logprob: -8.399752616882324
    9. 'eat' → logprob: -8.649752616882324
    10. '	act' → logprob: -8.649752616882324

Token 690: ' le' (ID: 505)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.12094035744667053
    2. 'all' → logprob: -2.2459404468536377
    3. '   ' → logprob: -5.120940208435059
    4. 'l' → logprob: -6.745940208435059
    5. ' act' → logprob: -7.745940208435059
    6. ' all' → logprob: -8.370940208435059
    7. 'the' → logprob: -10.120940208435059
    8. 'abs' → logprob: -10.245940208435059
    9. 'la' → logprob: -10.370940208435059
    10. '       ' → logprob: -10.745940208435059

Token 691: ' goût' (ID: 76414)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.022852545604109764
    2. 'all' → logprob: -4.272852420806885
    3. 'abs' → logprob: -5.522852420806885
    4. ' act' → logprob: -6.022852420806885
    5. 'tmp' → logprob: -7.397852420806885
    6. '   ' → logprob: -7.897852420806885
    7. '
' → logprob: -8.147852897644043
    8. 'break' → logprob: -8.647852897644043
    9. ' all' → logprob: -8.897852897644043
    10. '#' → logprob: -9.397852897644043

Token 692: ' total' (ID: 3609)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.05335116758942604
    2. '   ' → logprob: -3.1783511638641357
    3. '=' → logprob: -5.553351402282715
    4. 'all' → logprob: -5.678351402282715
    5. ' =' → logprob: -6.678351402282715
    6. ' act' → logprob: -7.178351402282715
    7. 'de' → logprob: -8.428351402282715
    8. '#' → logprob: -8.928351402282715
    9. 'final' → logprob: -9.053351402282715
    10. 'abs' → logprob: -9.178351402282715

Token 693: ' effect' (ID: 3159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3187694549560547
    2. ' =' → logprob: -1.3187694549560547
    3. '   ' → logprob: -5.318769454956055
    4. 'act' → logprob: -7.443769454956055
    5. '       ' → logprob: -12.818769454956055
    6. ' ' → logprob: -13.693769454956055
    7. 'all' → logprob: -13.943769454956055
    8. '  ' → logprob: -14.568769454956055
    9. '#' → logprob: -14.693769454956055
    10. '	act' → logprob: -15.068769454956055

Token 694: 'if' (ID: 366)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.5483257174491882
    2. 'if' → logprob: -1.423325777053833
    3. '       ' → logprob: -2.298325777053833
    4. '   ' → logprob: -2.798325777053833
    5. '#' → logprob: -4.423325538635254
    6. 'all' → logprob: -6.923325538635254
    7. 't' → logprob: -6.923325538635254
    8. 'et' → logprob: -7.173325538635254
    9. '           ' → logprob: -7.423325538635254
    10. 'u' → logprob: -7.548325538635254

Token 695: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0507729053497314
    2. '   ' → logprob: -1.1757729053497314
    3. '=' → logprob: -1.4257729053497314
    4. 'act' → logprob: -2.3007729053497314
    5. '       ' → logprob: -7.800772666931152
    6. '	act' → logprob: -7.800772666931152
    7. 'all' → logprob: -9.425772666931152
    8. ' act' → logprob: -9.675772666931152
    9. ' ' → logprob: -9.800772666931152
    10. '  ' → logprob: -10.300772666931152

Token 696: 'ap' (ID: 403)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.07530323415994644
    2. 'all' → logprob: -2.700303316116333
    3. ' act' → logprob: -6.075303077697754
    4. '   ' → logprob: -6.200303077697754
    5. ' all' → logprob: -7.200303077697754
    6. '=' → logprob: -8.825303077697754
    7. ')' → logprob: -9.575303077697754
    8. ' =' → logprob: -10.575303077697754
    9. '       ' → logprob: -11.450303077697754
    10. '	act' → logprob: -12.700303077697754

Token 697: 'rès' (ID: 48817)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27589428424835205
    2. 'act' → logprob: -2.1508941650390625
    3. 'p' → logprob: -2.6508941650390625
    4. 'pt' → logprob: -4.2758941650390625
    5. 'rès' → logprob: -4.2758941650390625
    6. '   ' → logprob: -5.2758941650390625
    7. 'ct' → logprob: -5.5258941650390625
    8. '       ' → logprob: -5.7758941650390625
    9. 'pe' → logprob: -6.1508941650390625
    10. 'prox' → logprob: -6.2758941650390625

Token 698: ' avoir' (ID: 16595)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.9573096036911011
    2. 'e' → logprob: -1.207309603691101
    3. 'avoir' → logprob: -2.4573097229003906
    4. '   ' → logprob: -2.4573097229003906
    5. 'ret' → logprob: -3.2073097229003906
    6. ' avoir' → logprob: -3.7073097229003906
    7. 'm' → logprob: -4.082309722900391
    8. 'l' → logprob: -4.332309722900391
    9. 'all' → logprob: -4.582309722900391
    10. 'remove' → logprob: -4.957309722900391

Token 699: ' retir' (ID: 35638)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.9461721777915955
    2. 'e' → logprob: -1.4461722373962402
    3. 'all' → logprob: -1.4461722373962402
    4. 'eat' → logprob: -2.9461722373962402
    5. 'removed' → logprob: -3.4461722373962402
    6. ' retir' → logprob: -4.19617223739624
    7. ' eaten' → logprob: -4.57117223739624
    8. 'm' → logprob: -4.94617223739624
    9. '#' → logprob: -5.07117223739624
    10. 'remove' → logprob: -5.57117223739624

Token 700: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.049795545637607574
    2. 'er' → logprob: -3.299795627593994
    3. '   ' → logprob: -4.799795627593994
    4. 'eat' → logprob: -6.174795627593994
    5. 'e' → logprob: -7.549795627593994
    6. 'all' → logprob: -8.174795150756836
    7. '#' → logprob: -8.424795150756836
    8. ' la' → logprob: -10.049795150756836
    9. 'ée' → logprob: -10.174795150756836
    10. ' all' → logprob: -10.299795150756836

Token 701: ' la' (ID: 557)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.07123545557260513
    2. ' eat' → logprob: -2.696235418319702
    3. '   ' → logprob: -7.571235656738281
    4. 'tmp' → logprob: -7.946235656738281
    5. 'abs' → logprob: -9.196235656738281
    6. 'cmp' → logprob: -9.571235656738281
    7. ' ' → logprob: -10.196235656738281
    8. ' tmp' → logprob: -10.571235656738281
    9. ')' → logprob: -10.696235656738281
    10. 'e' → logprob: -10.696235656738281

Token 702: ' pomme' (ID: 197262)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.014281622134149075
    2. ' eat' → logprob: -4.264281749725342
    3. 'abs' → logprob: -9.389281272888184
    4. '   ' → logprob: -11.514281272888184
    5. 'apple' → logprob: -11.639281272888184
    6. 'e' → logprob: -12.139281272888184
    7. ' ' → logprob: -12.639281272888184
    8. ' abs' → logprob: -13.889281272888184
    9. 'cmp' → logprob: -14.014281272888184
    10. ')' → logprob: -14.576781272888184

Token 703: ' eat' (ID: 11237)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5140464901924133
    2. ')' → logprob: -1.5140464305877686
    3. '       ' → logprob: -2.2640464305877686
    4. 'eat' → logprob: -3.7640464305877686
    5. ' à' → logprob: -4.889046669006348
    6. ' =' → logprob: -5.139046669006348
    7. ' eaten' → logprob: -5.139046669006348
    8. 'e' → logprob: -5.139046669006348
    9. ' ' → logprob: -5.764046669006348
    10. ' eat' → logprob: -6.139046669006348

Token 704: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.5861724831629544e-05
    2. '_t' → logprob: -9.875056266784668
    3. '_e' → logprob: -13.125056266784668
    4. 'e' → logprob: -14.500056266784668
    5. ')' → logprob: -14.875056266784668
    6. '_m' → logprob: -15.750056266784668
    7. '_to' → logprob: -15.750056266784668
    8. '_all' → logprob: -16.00005531311035
    9. 't' → logprob: -16.12505531311035
    10. '#' → logprob: -16.25005531311035

Token 705: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.38708510994911194
    2. '_' → logprob: -1.1370850801467896
    3. 'eat' → logprob: -8.6370849609375
    4. '_app' → logprob: -11.8870849609375
    5. '_e' → logprob: -12.1370849609375
    6. ' apple' → logprob: -12.5120849609375
    7. '_ap' → logprob: -12.6370849609375
    8. '_t' → logprob: -13.0120849609375
    9. '```' → logprob: -13.0120849609375
    10. '_all' → logprob: -13.2620849609375

Token 706: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3362773358821869
    2. ' -' → logprob: -1.9612773656845093
    3. '-' → logprob: -2.4612772464752197
    4. '   ' → logprob: -3.7112772464752197
    5. ' )' → logprob: -3.9612772464752197
    6. '):' → logprob: -5.461277484893799
    7. ' =' → logprob: -5.586277484893799
    8. '=' → logprob: -6.211277484893799
    9. 'all' → logprob: -6.836277484893799
    10. '):
' → logprob: -7.086277484893799

Token 707: '       ' (ID: 309)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.0016866049263626337
    2. '   ' → logprob: -6.8766865730285645
    3. '
' → logprob: -7.3766865730285645
    4. ' act' → logprob: -10.876687049865723
    5. '	act' → logprob: -12.001687049865723
    6. '(act' → logprob: -13.501687049865723
    7. '_act' → logprob: -15.376687049865723
    8. '.act' → logprob: -15.376687049865723
    9. ''act' → logprob: -15.501687049865723
    10. 'all' → logprob: -15.751687049865723

Token 708: ' act' (ID: 1330)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' (adapté à ' act') → logprob: -0.0001097417771234177
    2. ' act' → logprob: -9.250109672546387
    3. '   ' → logprob: -11.250109672546387
    4. '
' → logprob: -15.500109672546387
    5. '	act' → logprob: -16.375110626220703
    6. 'all' → logprob: -16.625110626220703
    7. '```' → logprob: -18.000110626220703
    8. '(act' → logprob: -18.250110626220703
    9. '#' → logprob: -18.500110626220703
    10. '.act' → logprob: -19.000110626220703

Token 709: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.875001907348633
    3. ' _' → logprob: -15.750001907348633
    4. '_total' → logprob: -16.250001907348633
    5. 't' → logprob: -16.375001907348633
    6. '_b' → logprob: -16.625001907348633
    7. '_d' → logprob: -16.750001907348633
    8. '_s' → logprob: -17.000001907348633
    9. '_f' → logprob: -17.125001907348633
    10. '\' → logprob: -17.625001907348633

Token 710: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.3149639368057251
    2. '_t' → logprob: -1.314963936805725
    3. '_' → logprob: -6.4399638175964355
    4. 'taste' → logprob: -9.814964294433594
    5. 'ast' → logprob: -10.939964294433594
    6. 'ASTE' → logprob: -11.189964294433594
    7. '_ast' → logprob: -11.314964294433594
    8. '_a' → logprob: -13.564964294433594
    9. 'astes' → logprob: -13.689964294433594
    10. 't' → logprob: -13.939964294433594

Token 711: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '＝' → logprob: -15.90475082397461
    4. '=

' → logprob: -18.40475082397461
    5. ' ' → logprob: -18.77975082397461
    6. 'all' → logprob: -18.90475082397461
    7. '+=' → logprob: -19.02975082397461
    8. '=
' → logprob: -19.65475082397461
    9. 's' → logprob: -19.77975082397461
    10. '=n' → logprob: -19.90475082397461

Token 712: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005247629713267088
    2. ' all' → logprob: -5.255247592926025
    3. '   ' → logprob: -11.505248069763184
    4. ' ' → logprob: -13.130248069763184
    5. '  ' → logprob: -14.880248069763184
    6. 'abs' → logprob: -14.880248069763184
    7. '	all' → logprob: -15.130248069763184
    8. 'al' → logprob: -15.630248069763184
    9. '       ' → logprob: -16.005247116088867
    10. 'All' → logprob: -16.255247116088867

Token 713: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.875000953674316
    3. ' _' → logprob: -15.500000953674316
    4. '-' → logprob: -15.625000953674316
    5. ' -' → logprob: -15.875000953674316
    6. '-t' → logprob: -16.750001907348633
    7. 't' → logprob: -18.000001907348633
    8. 'taste' → logprob: -18.500001907348633
    9. '-_' → logprob: -18.500001907348633
    10. '_-' → logprob: -19.375001907348633

Token 714: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.015064439736306667
    2. 'taste' → logprob: -4.390064239501953
    3. '_t' → logprob: -6.015064239501953
    4. '_' → logprob: -9.390064239501953
    5. 'ast' → logprob: -11.390064239501953
    6. 't' → logprob: -12.765064239501953
    7. ' taste' → logprob: -13.140064239501953
    8. 'ate' → logprob: -13.140064239501953
    9. 'ASTE' → logprob: -13.140064239501953
    10. '-' → logprob: -14.015064239501953

Token 715: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12693345546722412
    2. '-' → logprob: -2.1269335746765137
    3. '   ' → logprob: -13.501933097839355
    4. ' ' → logprob: -13.751933097839355
    5. '-e' → logprob: -14.001933097839355
    6. '-ex' → logprob: -14.001933097839355
    7. '<|end|>' → logprob: -14.251933097839355
    8. '    ' → logprob: -15.626933097839355
    9. '-remove' → logprob: -16.751934051513672
    10. '  ' → logprob: -16.876934051513672

Token 716: ' eat' (ID: 11237)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.002806656062602997
    2. ' eat' → logprob: -5.877806663513184
    3. '   ' → logprob: -13.752806663513184
    4. 'abs' → logprob: -15.002806663513184
    5. ' ' → logprob: -15.752806663513184
    6. '  ' → logprob: -16.877805709838867
    7. 'Eat' → logprob: -17.252805709838867
    8. 'e' → logprob: -17.377805709838867
    9. '       ' → logprob: -17.377805709838867
    10. '    ' → logprob: -17.502805709838867

Token 717: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_app' → logprob: -18.0
    3. '_e' → logprob: -18.125
    4. ' _' → logprob: -19.125
    5. 'apple' → logprob: -19.875
    6. '_a' → logprob: -20.5
    7. '_p' → logprob: -20.75
    8. '_ap' → logprob: -20.75
    9. '_
' → logprob: -20.875
    10. '__' → logprob: -21.25

Token 718: 'apple' (ID: 34058)
  Prédit: 'apple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apple' → logprob: -0.0024794621858745813
    2. '_' → logprob: -6.002479553222656
    3. 'Apple' → logprob: -13.627479553222656
    4. '_app' → logprob: -14.127479553222656
    5. 'app' → logprob: -14.252479553222656
    6. '.apple' → logprob: -14.752479553222656
    7. ' apple' → logprob: -15.127479553222656
    8. '```' → logprob: -16.252479553222656
    9. 'ap' → logprob: -16.377479553222656
    10. '_ap' → logprob: -16.627479553222656

Token 719: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06432972103357315
    2. '<|end|>' → logprob: -2.8143296241760254
    3. '#' → logprob: -6.814329624176025
    4. '
' → logprob: -7.439329624176025
    5. ')' → logprob: -8.064330101013184
    6. ' print' → logprob: -8.939330101013184
    7. '```' → logprob: -9.314330101013184
    8. '#print' → logprob: -9.689330101013184
    9. '<|end|>' → logprob: -11.064330101013184
    10. '(print' → logprob: -11.314330101013184

Token 720: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012353454949334264
    2. '<|end|>' → logprob: -6.751235485076904
    3. ' print' → logprob: -9.876235008239746
    4. ')' → logprob: -12.126235008239746
    5. '#' → logprob: -12.501235008239746
    6. '```' → logprob: -13.001235008239746
    7. '#print' → logprob: -13.501235008239746
    8. '
' → logprob: -14.501235008239746
    9. '(print' → logprob: -15.501235008239746
    10. '<|end|>' → logprob: -16.501235961914062

Token 721: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '#' → logprob: -18.25
    4. '#print' → logprob: -20.5
    5. '```' → logprob: -23.875
    6. '
' → logprob: -25.0
    7. 'printf' → logprob: -25.5
    8. 'Print' → logprob: -25.875
    9. 'prin' → logprob: -26.0
    10. 'pr' → logprob: -26.125

Token 722: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1951831430196762
    2. '#' → logprob: -1.9451831579208374
    3. 'f' → logprob: -3.570183038711548
    4. 'ich' → logprob: -5.945183277130127
    5. 'iche' → logprob: -6.445183277130127
    6. '#print' → logprob: -6.695183277130127
    7. 'fic' → logprob: -8.070182800292969
    8. 'icher' → logprob: -9.320182800292969
    9. 'ichage' → logprob: -9.320182800292969
    10. '_print' → logprob: -9.695182800292969

Token 723: ' la' (ID: 557)
  Prédit: '(act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(act' → logprob: -0.0007191036129370332
    2. 'act' → logprob: -7.25071907043457
    3. 'print' → logprob: -12.00071907043457
    4. '(' → logprob: -12.87571907043457
    5. '(
' → logprob: -15.87571907043457
    6. '(acc' → logprob: -16.25071907043457
    7. '(abs' → logprob: -16.62571907043457
    8. '(print' → logprob: -16.75071907043457
    9. '(ac' → logprob: -17.50071907043457
    10. '.act' → logprob: -18.00071907043457

Token 724: ' valeur' (ID: 41664)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.3066205680370331
    2. '(act' → logprob: -1.8066205978393555
    3. 'print' → logprob: -2.3066205978393555
    4. 'abs' → logprob: -8.806620597839355
    5. '(' → logprob: -9.556620597839355
    6. '(abs' → logprob: -10.306620597839355
    7. ' act' → logprob: -13.056620597839355
    8. '.act' → logprob: -13.306620597839355
    9. '(print' → logprob: -13.806620597839355
    10. '(
' → logprob: -13.931620597839355

Token 725: ' de' (ID: 334)
  Prédit: '(act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(act' → logprob: -0.099300816655159
    2. '(' → logprob: -2.8493008613586426
    3. 'print' → logprob: -3.3493008613586426
    4. 'act' → logprob: -6.849300861358643
    5. '(print' → logprob: -7.724300861358643
    6. '(
' → logprob: -10.599300384521484
    7. '```' → logprob: -13.349300384521484
    8. ' (' → logprob: -13.474300384521484
    9. '   ' → logprob: -13.724300384521484
    10. '()' → logprob: -13.849300384521484

Token 726: ' act' (ID: 1330)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.004079112783074379
    2. '(act' → logprob: -5.504079341888428
    3. ' act' → logprob: -14.75407886505127
    4. 'print' → logprob: -14.87907886505127
    5. '(' → logprob: -17.254079818725586
    6. '	act' → logprob: -17.504079818725586
    7. '.act' → logprob: -18.379079818725586
    8. '_act' → logprob: -19.379079818725586
    9. 'abs' → logprob: -19.629079818725586
    10. '(
' → logprob: -19.879079818725586

Token 727: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.700132997939363e-05
    2. 't' → logprob: -11.750017166137695
    3. 'print' → logprob: -12.875017166137695
    4. '_' → logprob: -13.375017166137695
    5. '\' → logprob: -13.625017166137695
    6. 'e' → logprob: -13.750017166137695
    7. '_print' → logprob: -13.875017166137695
    8. 'act' → logprob: -15.000017166137695
    9. '_act' → logprob: -15.000017166137695
    10. '(t' → logprob: -15.375017166137695

Token 728: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.0013876126613467932
    2. '_' → logprob: -6.876387596130371
    3. '_t' → logprob: -8.001387596130371
    4. 'taste' → logprob: -12.126387596130371
    5. '_a' → logprob: -12.751387596130371
    6. 'ast' → logprob: -12.876387596130371
    7. 'ASTE' → logprob: -13.001387596130371
    8. 'ase' → logprob: -13.626387596130371
    9. 'a' → logprob: -14.126387596130371
    10. 'ate' → logprob: -14.501387596130371

Token 729: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. ' print' → logprob: -13.00000286102295
    3. '
' → logprob: -14.25000286102295
    4. 'act' → logprob: -15.12500286102295
    5. '```' → logprob: -16.375003814697266
    6. '(print' → logprob: -18.500003814697266
    7. '.print' → logprob: -19.000003814697266
    8. '(act' → logprob: -20.375003814697266
    9. ')' → logprob: -21.000003814697266
    10. 'prin' → logprob: -21.125003814697266

Token 730: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01896742917597294
    2. 'act' → logprob: -4.018967628479004
    3. ' print' → logprob: -7.768967628479004
    4. ')' → logprob: -8.268967628479004
    5. ' act' → logprob: -9.518967628479004
    6. '   ' → logprob: -9.893967628479004
    7. 'end' → logprob: -11.643967628479004
    8. ')
' → logprob: -13.018967628479004
    9. '(act' → logprob: -13.393967628479004
    10. '```' → logprob: -15.143967628479004

Token 731: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.2179359197616577
    2. 'print' → logprob: -1.3429359197616577
    3. '#' → logprob: -1.5929359197616577
    4. '```' → logprob: -2.3429360389709473
    5. 't' → logprob: -3.3429360389709473
    6. 'a' → logprob: -3.4679360389709473
    7. 'act' → logprob: -3.8429360389709473
    8. 'on' → logprob: -4.342936038970947
    9. '(act' → logprob: -4.967936038970947
    10. '#print' → logprob: -5.092936038970947

Token 732: '-à' (ID: 56297)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.11885064095258713
    2. 'à' → logprob: -2.7438507080078125
    3. ')' → logprob: -4.4938507080078125
    4. '-à' → logprob: -4.6188507080078125
    5. '(act' → logprob: -4.9938507080078125
    6. '=' → logprob: -5.4938507080078125
    7. '_act' → logprob: -5.7438507080078125
    8. 'print' → logprob: -5.7438507080078125
    9. '#' → logprob: -5.9938507080078125
    10. '-act' → logprob: -6.4938507080078125

Token 733: '-dire' (ID: 76064)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5136157870292664
    2. 'act' → logprob: -1.0136158466339111
    3. 'all' → logprob: -3.388615846633911
    4. 'int' → logprob: -6.638615608215332
    5. '0' → logprob: -6.888615608215332
    6. 'None' → logprob: -7.013615608215332
    7. '(act' → logprob: -7.638615608215332
    8. '#print' → logprob: -8.388615608215332
    9. '```' → logprob: -8.513615608215332
    10. '#' → logprob: -8.638615608215332

Token 734: ' la' (ID: 557)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.00011844364780699834
    2. ' act' → logprob: -9.500118255615234
    3. '(act' → logprob: -10.250118255615234
    4. 'print' → logprob: -11.750118255615234
    5. '	act' → logprob: -15.375118255615234
    6. '   ' → logprob: -17.125118255615234
    7. '.act' → logprob: -17.500118255615234
    8. ''act' → logprob: -18.125118255615234
    9. '```' → logprob: -18.875118255615234
    10. ' ' → logprob: -19.000118255615234

Token 735: ' somme' (ID: 64484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.371605948312208e-05
    2. ' print' → logprob: -10.000053405761719
    3. 'act' → logprob: -11.750053405761719
    4. 'pr' → logprob: -16.12505340576172
    5. 'prin' → logprob: -16.62505340576172
    6. '#' → logprob: -17.25005340576172
    7. '#print' → logprob: -17.25005340576172
    8. '```' → logprob: -18.87505340576172
    9. 'result' → logprob: -19.12505340576172
    10. 'all' → logprob: -19.25005340576172

Token 736: ' des' (ID: 731)
  Prédit: '(act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(act' → logprob: -0.16140811145305634
    2. '(' → logprob: -1.9114080667495728
    3. '(
' → logprob: -7.661407947540283
    4. 'print' → logprob: -8.536408424377441
    5. '()' → logprob: -8.536408424377441
    6. 'act' → logprob: -8.911408424377441
    7. '(abs' → logprob: -9.161408424377441
    8. ' (' → logprob: -10.161408424377441
    9. '(print' → logprob: -11.536408424377441
    10. '(acc' → logprob: -11.536408424377441

Token 737: ' save' (ID: 5093)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.03085382468998432
    2. 'all' → logprob: -4.280853748321533
    3. 'print' → logprob: -4.530853748321533
    4. 'taste' → logprob: -6.155853748321533
    5. 'go' → logprob: -6.530853748321533
    6. ' act' → logprob: -7.530853748321533
    7. 'apple' → logprob: -8.030854225158691
    8. ' pommes' → logprob: -8.655854225158691
    9. 'ap' → logprob: -8.780854225158691
    10. '#' → logprob: -8.905854225158691

Token 738: 'urs' (ID: 1628)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5760431289672852
    2. 'urs' → logprob: -0.8260431289672852
    3. 'eurs' → logprob: -9.951043128967285
    4. 'eur' → logprob: -10.576043128967285
    5. 'r' → logprob: -10.951043128967285
    6. 'rs' → logprob: -13.576043128967285
    7. 'ure' → logprob: -13.701043128967285
    8. 'g' → logprob: -13.701043128967285
    9. 'or' → logprob: -13.826043128967285
    10. 'ures' → logprob: -13.951043128967285

Token 739: ' des' (ID: 731)
  Prédit: '(act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(act' → logprob: -0.1546141803264618
    2. '(' → logprob: -2.029614210128784
    3. 'print' → logprob: -5.154613971710205
    4. 'act' → logprob: -5.404613971710205
    5. '()' → logprob: -7.154613971710205
    6. '(print' → logprob: -7.779613971710205
    7. ' (' → logprob: -9.029614448547363
    8. ',' → logprob: -9.779614448547363
    9. '(after' → logprob: -10.529614448547363
    10. '.' → logprob: -10.654614448547363

Token 740: ' n' (ID: 297)
  Prédit: 'pom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pom' → logprob: -0.11299289762973785
    2. ' pommes' → logprob: -2.237993001937866
    3. 'p' → logprob: -9.362993240356445
    4. ' pom' → logprob: -10.362993240356445
    5. '#' → logprob: -10.987993240356445
    6. '```' → logprob: -12.112993240356445
    7. ' ' → logprob: -12.362993240356445
    8. 'apple' → logprob: -12.362993240356445
    9. 'all' → logprob: -13.112993240356445
    10. 'n' → logprob: -13.362993240356445

Token 741: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25323301553726196
    2. ' -' → logprob: -1.5032329559326172
    3. ' pommes' → logprob: -7.378232955932617
    4. ' ' → logprob: -7.753232955932617
    5. 'moins' → logprob: -8.878232955932617
    6. ' minus' → logprob: -10.378232955932617
    7. 'minus' → logprob: -10.503232955932617
    8. 'm' → logprob: -11.628232955932617
    9. ' )' → logprob: -12.253232955932617
    10. '−' → logprob: -12.753232955932617

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022404235787689686
    2. ' ' → logprob: -6.1272406578063965
    3. '-' → logprob: -10.002240180969238
    4. ' -' → logprob: -13.127240180969238
    5. ' pommes' → logprob: -13.752240180969238
    6. ' ' → logprob: -13.877240180969238
    7. 'moins' → logprob: -14.002240180969238
    8. ' apples' → logprob: -14.002240180969238
    9. '<|end|>' → logprob: -14.127240180969238
    10. '```' → logprob: -14.877240180969238

Token 743: ' pommes' (ID: 149224)
  Prédit: ' pommes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pommes' → logprob: -0.014308293350040913
    2. 'pom' → logprob: -4.514308452606201
    3. ' pom' → logprob: -5.764308452606201
    4. ' pomme' → logprob: -9.639307975769043
    5. ' ' → logprob: -11.139307975769043
    6. ' Pom' → logprob: -11.514307975769043
    7. ' apples' → logprob: -12.139307975769043
    8. ' meilleures' → logprob: -12.139307975769043
    9. ' fruits' → logprob: -12.639307975769043
    10. '#' → logprob: -13.139307975769043

Token 744: ' restantes' (ID: 159241)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017350474081467837
    2. ' print' → logprob: -8.750173568725586
    3. '(print' → logprob: -11.500173568725586
    4. ')' → logprob: -13.625173568725586
    5. '(' → logprob: -13.750173568725586
    6. '
' → logprob: -14.250173568725586
    7. '.print' → logprob: -14.500173568725586
    8. '+' → logprob: -15.000173568725586
    9. ',' → logprob: -15.625173568725586
    10. 'prin' → logprob: -15.750173568725586

Token 745: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.25
    3. '
' → logprob: -16.0
    4. '```' → logprob: -18.75
    5. 'act' → logprob: -21.5
    6. '.print' → logprob: -22.125
    7. '(print' → logprob: -22.125
    8. 'pr' → logprob: -22.5
    9. '#print' → logprob: -22.625
    10. 'prin' → logprob: -23.0

Token 746: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -13.750000953674316
    3. ')' → logprob: -17.750001907348633
    4. '
' → logprob: -19.000001907348633
    5. '```' → logprob: -19.500001907348633
    6. ')
' → logprob: -19.625001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '#print' → logprob: -21.125001907348633
    9. '.print' → logprob: -22.000001907348633
    10. '	print' → logprob: -22.250001907348633

Token 747: ' après' (ID: 16460)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.392202976712724e-06
    2. ' print' → logprob: -12.000006675720215
    3. '
' → logprob: -15.375006675720215
    4. '```' → logprob: -20.1250057220459
    5. '#print' → logprob: -21.1250057220459
    6. '   ' → logprob: -22.3750057220459
    7. '	print' → logprob: -22.6250057220459
    8. '
' → logprob: -22.8750057220459
    9. '.print' → logprob: -23.2500057220459
    10. '#' → logprob: -23.6250057220459

Token 748: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.6399021148681641
    2. ' avoir' → logprob: -0.7649021148681641
    3. ')' → logprob: -5.639902114868164
    4. '#' → logprob: -6.639902114868164
    5. ''avoir' → logprob: -7.514902114868164
    6. 'le' → logprob: -8.139902114868164
    7. 'l' → logprob: -8.264902114868164
    8. 'la' → logprob: -8.514902114868164
    9. ' )' → logprob: -9.014902114868164
    10. ' la' → logprob: -9.014902114868164

Token 749: ' retir' (ID: 35638)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004113900475203991
    2. ' print' → logprob: -5.629113674163818
    3. 'ret' → logprob: -8.254114151000977
    4. ' retir' → logprob: -8.879114151000977
    5. '#' → logprob: -10.004114151000977
    6. 'removed' → logprob: -11.004114151000977
    7. 'avoir' → logprob: -11.004114151000977
    8. 'm' → logprob: -11.504114151000977
    9. 'remove' → logprob: -11.879114151000977
    10. '```' → logprob: -12.254114151000977

Token 750: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.03840475156903267
    2. 'er' → logprob: -3.288404703140259
    3. '#' → logprob: -8.16340446472168
    4. 'ant' → logprob: -9.91340446472168
    5. 'ée' → logprob: -11.28840446472168
    6. 'e' → logprob: -12.91340446472168
    7. '   ' → logprob: -13.66340446472168
    8. 'erm' → logprob: -13.66340446472168
    9. '=' → logprob: -13.78840446472168
    10. 'u' → logprob: -14.16340446472168

Token 751: ' la' (ID: 557)
  Prédit: 'eat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eat' → logprob: -0.2524019181728363
    2. ' eat' → logprob: -1.5024019479751587
    3. 'act' → logprob: -8.002402305603027
    4. ' act' → logprob: -9.252402305603027
    5. 'l' → logprob: -11.377402305603027
    6. ' ' → logprob: -11.502402305603027
    7. ')' → logprob: -11.877402305603027
    8. ' la' → logprob: -12.627402305603027
    9. 'le' → logprob: -13.502402305603027
    10. ' l' → logprob: -13.627402305603027

Token 752: ' pomme' (ID: 197262)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3416320085525513
    2. 'eat' → logprob: -1.3416320085525513
    3. 'p' → logprob: -1.7166320085525513
    4. 'apple' → logprob: -1.8416320085525513
    5. ' pomme' → logprob: -2.0916318893432617
    6. 'pom' → logprob: -5.216631889343262
    7. ' eat' → logprob: -5.841631889343262
    8. 'me' → logprob: -6.216631889343262
    9. 'plus' → logprob: -6.716631889343262
    10. ' print' → logprob: -7.091631889343262

Token 753: ' ayant' (ID: 45436)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.391076922416687
    2. 'closest' → logprob: -1.766076922416687
    3. 'eat' → logprob: -2.1410770416259766
    4. 'print' → logprob: -2.2660770416259766
    5. '.' → logprob: -2.7660770416259766
    6. ' optimale' → logprob: -2.8910770416259766
    7. 'optimal' → logprob: -3.0160770416259766
    8. 'optim' → logprob: -3.2660770416259766
    9. ' à' → logprob: -3.8910770416259766
    10. '#' → logprob: -4.016077041625977

Token 754: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3873431980609894
    2. 'le' → logprob: -1.137343168258667
    3. 'go' → logprob: -9.012343406677246
    4. '#' → logprob: -9.387343406677246
    5. 'un' → logprob: -9.637343406677246
    6. 'une' → logprob: -10.262343406677246
    7. 'taste' → logprob: -10.637343406677246
    8. 'l' → logprob: -10.762343406677246
    9. ' le' → logprob: -10.887343406677246
    10. 'print' → logprob: -11.012343406677246

Token 755: ' save' (ID: 5093)
  Prédit: 'save'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'save' → logprob: -0.29921606183052063
    2. 'val' → logprob: -1.5492160320281982
    3. 'print' → logprob: -3.5492160320281982
    4. 'go' → logprob: -5.174216270446777
    5. 'taste' → logprob: -5.674216270446777
    6. ' save' → logprob: -6.049216270446777
    7. ')' → logprob: -7.049216270446777
    8. 'close' → logprob: -7.174216270446777
    9. 's' → logprob: -7.174216270446777
    10. '\n' → logprob: -8.049216270446777

Token 756: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.003632731270045042
    2. 'f' → logprob: -7.128632545471191
    3. 've' → logprob: -7.378632545471191
    4. 'save' → logprob: -7.503632545471191
    5. 't' → logprob: -7.878632545471191
    6. 'ure' → logprob: -9.128632545471191
    7. 'val' → logprob: -9.128632545471191
    8. 'fur' → logprob: -9.253632545471191
    9. 'eur' → logprob: -9.378632545471191
    10. 'or' → logprob: -9.503632545471191

Token 757: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8817912936210632
    2. 'abs' → logprob: -1.256791353225708
    3. 'pro' → logprob: -2.256791353225708
    4. 'act' → logprob: -2.881791353225708
    5. 'près' → logprob: -4.006791114807129
    6. 'moins' → logprob: -4.006791114807129
    7. 'rest' → logprob: -4.506791114807129
    8. 'optim' → logprob: -4.631791114807129
    9. 'min' → logprob: -4.756791114807129
    10. 'print' → logprob: -4.881791114807129

Token 758: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.055161189287900925
    2. 'pro' → logprob: -3.555161237716675
    3. 'b' → logprob: -4.680160999298096
    4. 'près' → logprob: -4.930160999298096
    5. 'pres' → logprob: -6.055160999298096
    6. 'moins' → logprob: -6.305160999298096
    7. 'print' → logprob: -6.430160999298096
    8. '+' → logprob: -6.930160999298096
    9. 'pp' → logprob: -8.055161476135254
    10. ' plus' → logprob: -8.430161476135254

Token 759: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0003466673369985074
    2. '```' → logprob: -9.000347137451172
    3. 'import' → logprob: -9.375347137451172
    4. 'près' → logprob: -9.750347137451172
    5. 'prox' → logprob: -10.375347137451172
    6. ' proche' → logprob: -11.000347137451172
    7. 'pr' → logprob: -11.250347137451172
    8. '#' → logprob: -12.625347137451172
    9. 'Pro' → logprob: -12.625347137451172
    10. '
' → logprob: -12.875347137451172

Token 760: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.14767588675022125
    2. ' de' → logprob: -2.0226759910583496
    3. '0' → logprob: -5.39767599105835
    4. '```' → logprob: -8.522675514221191
    5. 'from' → logprob: -9.272675514221191
    6. '(' → logprob: -9.272675514221191
    7. ' ' → logprob: -10.647675514221191
    8. '()' → logprob: -11.147675514221191
    9. 'du' → logprob: -11.272675514221191
    10. '_de' → logprob: -11.772675514221191

Token 761: ' zéro' (ID: 182040)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5965408682823181
    2. '0' → logprob: -0.8465408682823181
    3. 'zero' → logprob: -3.971540927886963
    4. ' zéro' → logprob: -6.596540927886963
    5. '```' → logprob: -8.846540451049805
    6. ' ' → logprob: -10.721540451049805
    7. ' z' → logprob: -12.471540451049805
    8. 'l' → logprob: -12.846540451049805
    9. 'zer' → logprob: -12.971540451049805
    10. ' ' → logprob: -14.221540451049805

Token 762: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014328587567433715
    2. '
' → logprob: -6.7514328956604
    3. ' print' → logprob: -8.251432418823242
    4. '(print' → logprob: -14.751432418823242
    5. ' 
' → logprob: -15.126432418823242
    6. '
' → logprob: -15.251432418823242
    7. ')
' → logprob: -15.376432418823242
    8. '.print' → logprob: -15.501432418823242
    9. ')' → logprob: -16.001432418823242
    10. '```' → logprob: -16.001432418823242

Token 763: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.75
    3. '```' → logprob: -18.25
    4. '
' → logprob: -21.75
    5. 'pr' → logprob: -23.875
    6. '``' → logprob: -25.625
    7. '#print' → logprob: -26.5
    8. '-print' → logprob: -26.875
    9. '`' → logprob: -27.0
    10. 'prin' → logprob: -27.125

Token 764: '(act' (ID: 119318)
  Prédit: '(act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(act' → logprob: -0.06197149679064751
    2. '(' → logprob: -2.811971426010132
    3. '()' → logprob: -13.186971664428711
    4. '(
' → logprob: -14.311971664428711
    5. '(a' → logprob: -15.436971664428711
    6. '("' → logprob: -15.561971664428711
    7. '(ac' → logprob: -15.561971664428711
    8. '('' → logprob: -15.686971664428711
    9. ' (' → logprob: -15.686971664428711
    10. '(acc' → logprob: -16.06197166442871

Token 765: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0001710014621494338
    2. '_' → logprob: -8.750170707702637
    3. ' _' → logprob: -12.000170707702637
    4. 'e' → logprob: -12.875170707702637
    5. 'a' → logprob: -14.000170707702637
    6. '(_' → logprob: -14.500170707702637
    7. ')_' → logprob: -14.875170707702637
    8. '_a' → logprob: -15.000170707702637
    9. '_act' → logprob: -15.125170707702637
    10. '__' → logprob: -15.125170707702637

Token 766: 'aste' (ID: 6604)
  Prédit: 'aste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aste' → logprob: -0.2062402367591858
    2. '_t' → logprob: -1.706240177154541
    3. '_' → logprob: -5.581240177154541
    4. 'taste' → logprob: -6.956240177154541
    5. 'ast' → logprob: -10.0812406539917
    6. '_ast' → logprob: -10.8312406539917
    7. 't' → logprob: -11.3312406539917
    8. 'ASTE' → logprob: -12.5812406539917
    9. '_s' → logprob: -13.0812406539917
    10. '_a' → logprob: -13.0812406539917

Token 767: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ' )' → logprob: -11.25001335144043
    3. '+' → logprob: -16.37501335144043
    4. ')`' → logprob: -16.37501335144043
    5. '))' → logprob: -16.50001335144043
    6. ')
' → logprob: -17.25001335144043
    7. ')#' → logprob: -17.62501335144043
    8. '-' → logprob: -17.87501335144043
    9. '-)' → logprob: -18.62501335144043
    10. ' -' → logprob: -18.75001335144043

Token 768: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 769: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 770: ' sortie' (ID: 52761)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 771: ' finale' (ID: 37759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: ' résultat' (ID: 62556)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.03149649128317833
    2. 'code' → logprob: -3.781496524810791
    3. 'program' → logprob: -4.906496524810791
    4. ' programme' → logprob: -7.406496524810791
    5. 'script' → logprob: -8.656496047973633
    6. ' code' → logprob: -11.281496047973633
    7. 'programma' → logprob: -11.781496047973633
    8. 'programm' → logprob: -12.031496047973633
    9. '#' → logprob: -12.156496047973633
    10. '```' → logprob: -13.281496047973633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 771
Tokens correctement prédits (1ère position, stricte): 169
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 410
Précision stricte (1ère position): 21.92%
Précision adaptée (1ère position): 22.18%
Précision (top 10): 53.18%
================================================================================
